{"sha": "a7b2e1845f0c20da4ed6462161f58f706a587d44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTdiMmUxODQ1ZjBjMjBkYTRlZDY0NjIxNjFmNThmNzA2YTU4N2Q0NA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2015-10-21T22:24:41Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2015-10-21T22:24:41Z"}, "message": "Improve --help output to generate references to option aliases.\n\ngcc/\n\tPR driver/68043\n\t* opts.c (undocumented_msg, use_diagnosed_msg): New globals.\n\t(print_filtered_help): Reference aliased option's name and encourage\n\treaders to use it in preference to the alias if the former is not\n\tdocumented.  Mention when using an option is diagnosed.\n\t* gcc.c (display_help): End each sentence with a period.\n\n\t* ada/gcc-interface/lang.opt: End each sentence that describes\n\tan option with a period.\n\t* c-family/c.opt: Same.\n\t* common.opt: Same.\n\t* config/aarch64/aarch64.opt: Same.\n\t* config/alpha/alpha.opt: Same.\n\t* config/arc/arc.opt: Same.\n\t* config/arm/arm.opt: Same.\n\t* config/avr/avr.opt: Same.\n\t* config/bfin/bfin.opt: Same.\n\t* config/c6x/c6x.opt: Same.\n\t* config/cr16/cr16.opt: Same.\n\t* config/cris/cris.opt: Same.\n\t* config/cris/linux.opt: Same.\n\t* config/darwin.opt: Same.\n\t* config/epiphany/epiphany.opt: Same.\n\t* config/fr30/fr30.opt: Same.\n\t* config/frv/frv.opt: Same.\n\t* config/ft32/ft32.opt: Same.\n\t* config/g.opt: Same.\n\t* config/h8300/h8300.opt: Same.\n\t* config/i386/cygming.opt: Same.\n\t* config/i386/djgpp.opt: Same.\n\t* config/i386/i386.opt: Same.\n\t* config/i386/interix.opt: Same.\n\t* config/i386/mingw-w64.opt: Same.\n\t* config/i386/mingw.opt: Same.\n\t* config/ia64/ia64.opt: Same.\n\t* config/ia64/ilp32.opt: Same.\n\t* config/iq2000/iq2000.opt: Same.\n\t* config/linux.opt: Same.\n\t* config/lm32/lm32.opt: Same.\n\t* config/lynx.opt: Same.\n\t* config/m32c/m32c.opt: Same.\n\t* config/m32r/m32r.opt: Same.\n\t* config/m68k/ieee.opt: Same.\n\t* config/m68k/m68k.opt: Same.\n\t* config/mcore/mcore.opt: Same.\n\t* config/mep/mep.opt: Same.\n\t* config/microblaze/microblaze.opt: Same.\n\t* config/mips/mips.opt: Same.\n\t* config/mmix/mmix.opt: Same.\n\t* config/mn10300/mn10300.opt: Same.\n\t* config/moxie/moxie.opt: Same.\n\t* config/msp430/msp430.opt: Same.\n\t* config/nios2/elf.opt: Same.\n\t* config/nios2/nios2.opt: Same.\n\t* config/nvptx/nvptx.opt: Same.\n\t* config/pa/pa-hpux.opt: Same.\n\t* config/pa/pa-hpux1010.opt: Same.\n\t* config/pa/pa-hpux1111.opt: Same.\n\t* config/pa/pa-hpux1131.opt: Same.\n\t* config/pa/pa.opt: Same.\n\t* config/pa/pa64-hpux.opt: Same.\n\t* config/pdp11/pdp11.opt: Same.\n\t* config/rl78/rl78.opt: Same.\n\t* config/rs6000/476.opt: Same.\n\t* config/rs6000/aix64.opt: Same.\n\t* config/rs6000/darwin.opt: Same.\n\t* config/rs6000/linux64.opt: Same.\n\t* config/rs6000/rs6000.opt: Same.\n\t* config/rs6000/sysv4.opt: Same.\n\t* config/s390/s390.opt: Same.\n\t* config/s390/tpf.opt: Same.\n\t* config/sh/sh.opt: Same.\n\t* config/sol2.opt: Same.\n\t* config/sparc/long-double-switch.opt: Same.\n\t* config/sparc/sparc.opt: Same.\n\t* config/spu/spu.opt: Same.\n\t* config/stormy16/stormy16.opt: Same.\n\t* config/tilegx/tilegx.opt: Same.\n\t* config/tilepro/tilepro.opt: Same.\n\t* config/v850/v850.opt: Same.\n\t* config/vax/vax.opt: Same.\n\t* config/visium/visium.opt: Same.\n\t* config/vms/vms.opt: Same.\n\t* config/vxworks.opt: Same.\n\t* config/xtensa/xtensa.opt: Same.\n\t* fortran/lang.opt: Same.\n\ntestsuite/\n\tPR driver/68043\n\t* gcc.misc-tests/help.exp: Adjust.\n\t* lib/options.exp (check_for_options): Add detail to output.\n\nFrom-SVN: r229155", "tree": {"sha": "0e86ee5c584e34b06f641c070503e72ef5231aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e86ee5c584e34b06f641c070503e72ef5231aaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7b2e1845f0c20da4ed6462161f58f706a587d44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7b2e1845f0c20da4ed6462161f58f706a587d44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7b2e1845f0c20da4ed6462161f58f706a587d44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7b2e1845f0c20da4ed6462161f58f706a587d44/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22d663823adbd7b1a17e0c7b89ab8c489ae6c8f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22d663823adbd7b1a17e0c7b89ab8c489ae6c8f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22d663823adbd7b1a17e0c7b89ab8c489ae6c8f4"}], "stats": {"total": 4720, "additions": 2435, "deletions": 2285}, "files": [{"sha": "8ab255517ef21a72580d0958c4e34ae046f3d2b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -1,3 +1,92 @@\n+2015-10-21  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR driver/68043\n+\t* opts.c (undocumented_msg, use_diagnosed_msg): New globals.\n+\t(print_filtered_help): Reference aliased option's name and encourage\n+\treaders to use it in preference to the alias if the former is not\n+\tdocumented.  Mention when using an option is diagnosed.\n+\t* gcc.c (display_help): End each sentence with a period.\n+\n+\t* ada/gcc-interface/lang.opt: End each sentence that describes\n+\tan option with a period.\n+\t* c-family/c.opt: Same.\n+\t* common.opt: Same.\n+\t* config/aarch64/aarch64.opt: Same.\n+\t* config/alpha/alpha.opt: Same.\n+\t* config/arc/arc.opt: Same.\n+\t* config/arm/arm.opt: Same.\n+\t* config/avr/avr.opt: Same.\n+\t* config/bfin/bfin.opt: Same.\n+\t* config/c6x/c6x.opt: Same.\n+\t* config/cr16/cr16.opt: Same.\n+\t* config/cris/cris.opt: Same.\n+\t* config/cris/linux.opt: Same.\n+\t* config/darwin.opt: Same.\n+\t* config/epiphany/epiphany.opt: Same.\n+\t* config/fr30/fr30.opt: Same.\n+\t* config/frv/frv.opt: Same.\n+\t* config/ft32/ft32.opt: Same.\n+\t* config/g.opt: Same.\n+\t* config/h8300/h8300.opt: Same.\n+\t* config/i386/cygming.opt: Same.\n+\t* config/i386/djgpp.opt: Same.\n+\t* config/i386/i386.opt: Same.\n+\t* config/i386/interix.opt: Same.\n+\t* config/i386/mingw-w64.opt: Same.\n+\t* config/i386/mingw.opt: Same.\n+\t* config/ia64/ia64.opt: Same.\n+\t* config/ia64/ilp32.opt: Same.\n+\t* config/iq2000/iq2000.opt: Same.\n+\t* config/linux.opt: Same.\n+\t* config/lm32/lm32.opt: Same.\n+\t* config/lynx.opt: Same.\n+\t* config/m32c/m32c.opt: Same.\n+\t* config/m32r/m32r.opt: Same.\n+\t* config/m68k/ieee.opt: Same.\n+\t* config/m68k/m68k.opt: Same.\n+\t* config/mcore/mcore.opt: Same.\n+\t* config/mep/mep.opt: Same.\n+\t* config/microblaze/microblaze.opt: Same.\n+\t* config/mips/mips.opt: Same.\n+\t* config/mmix/mmix.opt: Same.\n+\t* config/mn10300/mn10300.opt: Same.\n+\t* config/moxie/moxie.opt: Same.\n+\t* config/msp430/msp430.opt: Same.\n+\t* config/nios2/elf.opt: Same.\n+\t* config/nios2/nios2.opt: Same.\n+\t* config/nvptx/nvptx.opt: Same.\n+\t* config/pa/pa-hpux.opt: Same.\n+\t* config/pa/pa-hpux1010.opt: Same.\n+\t* config/pa/pa-hpux1111.opt: Same.\n+\t* config/pa/pa-hpux1131.opt: Same.\n+\t* config/pa/pa.opt: Same.\n+\t* config/pa/pa64-hpux.opt: Same.\n+\t* config/pdp11/pdp11.opt: Same.\n+\t* config/rl78/rl78.opt: Same.\n+\t* config/rs6000/476.opt: Same.\n+\t* config/rs6000/aix64.opt: Same.\n+\t* config/rs6000/darwin.opt: Same.\n+\t* config/rs6000/linux64.opt: Same.\n+\t* config/rs6000/rs6000.opt: Same.\n+\t* config/rs6000/sysv4.opt: Same.\n+\t* config/s390/s390.opt: Same.\n+\t* config/s390/tpf.opt: Same.\n+\t* config/sh/sh.opt: Same.\n+\t* config/sol2.opt: Same.\n+\t* config/sparc/long-double-switch.opt: Same.\n+\t* config/sparc/sparc.opt: Same.\n+\t* config/spu/spu.opt: Same.\n+\t* config/stormy16/stormy16.opt: Same.\n+\t* config/tilegx/tilegx.opt: Same.\n+\t* config/tilepro/tilepro.opt: Same.\n+\t* config/v850/v850.opt: Same.\n+\t* config/vax/vax.opt: Same.\n+\t* config/visium/visium.opt: Same.\n+\t* config/vms/vms.opt: Same.\n+\t* config/vxworks.opt: Same.\n+\t* config/xtensa/xtensa.opt: Same.\n+\t* fortran/lang.opt: Same.\n+\n 2015-10-21  Aditya Kumar  <aditya.k7@samsung.com>\n \t    Sebastian Pop  <s.pop@samsung.com>\n "}, {"sha": "302806c7b6b2b62a72170eff5beabbdb23b135d4", "filename": "gcc/ada/gcc-interface/lang.opt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fada%2Fgcc-interface%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fada%2Fgcc-interface%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -54,42 +54,42 @@ Ada AdaWhy AdaSCIL Joined Separate\n \n Wall\n Ada AdaWhy AdaSCIL\n-Enable most warning messages\n+Enable most warning messages.\n \n k8\n Driver\n-Synonym of -gnatk8\n+Synonym of -gnatk8.\n \n nostdinc\n Ada AdaWhy AdaSCIL RejectNegative\n ; Documented in C but it should be: Do not look for source files in standard path\n \n nostdlib\n Ada AdaWhy AdaSCIL\n-Do not look for object files in standard path\n+Do not look for object files in standard path.\n \n fRTS=\n Ada AdaWhy AdaSCIL Joined RejectNegative\n-Select the runtime\n+Select the runtime.\n \n fshort-enums\n Ada AdaWhy AdaSCIL\n-Use the narrowest integer type possible for enumeration types\n+Use the narrowest integer type possible for enumeration types.\n \n gant\n Ada AdaWhy AdaSCIL Joined Undocumented\n-Catch typos\n+Catch typos.\n \n gnatO\n Ada AdaWhy AdaSCIL Separate\n-Set name of output ALI file (internal switch)\n+Set name of output ALI file (internal switch).\n \n gnat\n Ada AdaWhy AdaSCIL Joined\n--gnat<options>\tSpecify options to GNAT\n+-gnat<options>\tSpecify options to GNAT.\n \n fbuiltin-printf\n Ada Undocumented\n-Ignored\n+Ignored.\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "e573254686eb0be6688bce63b8b22dcd9ef8882e", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 310, "deletions": 311, "changes": 621, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -179,101 +179,101 @@ C ObjC C++ ObjC++ NoDriverArg Separate Alias(MMD) MissingArgError(missing filena\n \n A\n C ObjC C++ ObjC++ Joined Separate MissingArgError(assertion missing after %qs)\n--A<question>=<answer>\tAssert the <answer> to <question>.  Putting '-' before <question> disables the <answer> to <question>\n+-A<question>=<answer>\tAssert the <answer> to <question>.  Putting '-' before <question> disables the <answer> to <question>.\n \n C\n C ObjC C++ ObjC++\n-Do not discard comments\n+Do not discard comments.\n \n CC\n C ObjC C++ ObjC++\n-Do not discard comments in macro expansions\n+Do not discard comments in macro expansions.\n \n D\n C ObjC C++ ObjC++ Joined Separate MissingArgError(macro name missing after %qs)\n--D<macro>[=<val>]\tDefine a <macro> with <val> as its value.  If just <macro> is given, <val> is taken to be 1\n+-D<macro>[=<val>]\tDefine a <macro> with <val> as its value.  If just <macro> is given, <val> is taken to be 1.\n \n E\n C ObjC C++ ObjC++ Undocumented Var(flag_preprocess_only)\n \n F\n Driver C ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)\n--F <dir>\tAdd <dir> to the end of the main framework include path\n+-F <dir>\tAdd <dir> to the end of the main framework include path.\n \n H\n C ObjC C++ ObjC++\n-Print the name of header files as they are used\n+Print the name of header files as they are used.\n \n I\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)\n--I <dir>\tAdd <dir> to the end of the main include path\n+-I <dir>\tAdd <dir> to the end of the main include path.\n \n M\n C ObjC C++ ObjC++\n-Generate make dependencies\n+Generate make dependencies.\n \n MD\n C ObjC C++ ObjC++ NoDriverArg Separate MissingArgError(missing filename after %qs)\n-Generate make dependencies and compile\n+Generate make dependencies and compile.\n \n MF\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing filename after %qs)\n--MF <file>\tWrite dependency output to the given file\n+-MF <file>\tWrite dependency output to the given file.\n \n MG\n C ObjC C++ ObjC++\n-Treat missing header files as generated files\n+Treat missing header files as generated files.\n \n MM\n C ObjC C++ ObjC++\n-Like -M but ignore system header files\n+Like -M but ignore system header files.\n \n MMD\n C ObjC C++ ObjC++ NoDriverArg Separate MissingArgError(missing filename after %qs)\n-Like -MD but ignore system header files\n+Like -MD but ignore system header files.\n \n MP\n C ObjC C++ ObjC++\n-Generate phony targets for all headers\n+Generate phony targets for all headers.\n \n MQ\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing makefile target after %qs)\n--MQ <target>\tAdd a MAKE-quoted target\n+-MQ <target>\tAdd a MAKE-quoted target.\n \n MT\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing makefile target after %qs)\n--MT <target>\tAdd an unquoted target\n+-MT <target>\tAdd an unquoted target.\n \n P\n C ObjC C++ ObjC++\n-Do not generate #line directives\n+Do not generate #line directives.\n \n U\n C ObjC C++ ObjC++ Joined Separate MissingArgError(macro name missing after %qs)\n--U<macro>\tUndefine <macro>\n+-U<macro>\tUndefine <macro>.\n \n Wabi\n C ObjC C++ ObjC++ LTO Var(warn_abi) Warning\n-Warn about things that will change when compiling with an ABI-compliant compiler\n+Warn about things that will change when compiling with an ABI-compliant compiler.\n \n Wabi=\n C ObjC C++ ObjC++ LTO Joined RejectNegative UInteger Warning\n-Warn about things that change between the current -fabi-version and the specified version\n+Warn about things that change between the current -fabi-version and the specified version.\n \n Wabi-tag\n C++ ObjC++ Var(warn_abi_tag) Warning\n-Warn if a subobject has an abi_tag attribute that the complete object type does not have\n+Warn if a subobject has an abi_tag attribute that the complete object type does not have.\n \n Wpsabi\n C ObjC C++ ObjC++ LTO Var(warn_psabi) Init(1) Undocumented LangEnabledBy(C ObjC C++ ObjC++,Wabi)\n \n Waddress\n C ObjC C++ ObjC++ Var(warn_address) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about suspicious uses of memory addresses\n+Warn about suspicious uses of memory addresses.\n \n Wall\n C ObjC C++ ObjC++ Warning\n-Enable most warning messages\n+Enable most warning messages.\n \n Warray-bounds\n LangEnabledBy(C ObjC C++ ObjC++,Wall)\n@@ -285,321 +285,321 @@ LangEnabledBy(C ObjC C++ ObjC++,Wall,1,0)\n \n Wassign-intercept\n ObjC ObjC++ Var(warn_assign_intercept) Warning\n-Warn whenever an Objective-C assignment is being intercepted by the garbage collector\n+Warn whenever an Objective-C assignment is being intercepted by the garbage collector.\n \n Wbad-function-cast\n C ObjC Var(warn_bad_function_cast) Warning\n-Warn about casting functions to incompatible types\n+Warn about casting functions to incompatible types.\n \n Wbool-compare\n C ObjC C++ ObjC++ Var(warn_bool_compare) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about boolean expression compared with an integer value different from true/false\n+Warn about boolean expression compared with an integer value different from true/false.\n \n Wframe-address\n C ObjC C++ ObjC++ Var(warn_frame_address) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn when __builtin_frame_address or __builtin_return_address is used unsafely\n+Warn when __builtin_frame_address or __builtin_return_address is used unsafely.\n \n Wbuiltin-macro-redefined\n C ObjC C++ ObjC++ CPP(warn_builtin_macro_redefined) CppReason(CPP_W_BUILTIN_MACRO_REDEFINED) Var(cpp_warn_builtin_macro_redefined) Init(1) Warning\n-Warn when a built-in preprocessor macro is undefined or redefined\n+Warn when a built-in preprocessor macro is undefined or redefined.\n \n Wc90-c99-compat\n C ObjC CPP(cpp_warn_c90_c99_compat) CppReason(CPP_W_C90_C99_COMPAT) Var(warn_c90_c99_compat) Init(-1) Warning\n-Warn about features not present in ISO C90, but present in ISO C99\n+Warn about features not present in ISO C90, but present in ISO C99.\n \n Wc99-c11-compat\n C ObjC Var(warn_c99_c11_compat) Init(-1) Warning\n-Warn about features not present in ISO C99, but present in ISO C11\n+Warn about features not present in ISO C99, but present in ISO C11.\n \n Wc++-compat\n C ObjC Var(warn_cxx_compat) CPP(warn_cxx_operator_names) CppReason(CPP_W_CXX_OPERATOR_NAMES) Init(0) Warning\n-Warn about C constructs that are not in the common subset of C and C++\n+Warn about C constructs that are not in the common subset of C and C++.\n \n Wc++0x-compat\n C++ ObjC++ Warning Alias(Wc++11-compat) Undocumented\n \n Wc++11-compat\n C++ ObjC++ Var(warn_cxx11_compat) Warning LangEnabledBy(C++ ObjC++,Wall) Init(0) CPP(cpp_warn_cxx11_compat) CppReason(CPP_W_CXX11_COMPAT)\n-Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 2011\n+Warn about C++ constructs whose meaning differs between ISO C++ 1998 and ISO C++ 2011.\n \n Wc++14-compat\n C++ ObjC++ Var(warn_cxx14_compat) Warning LangEnabledBy(C++ ObjC++,Wall)\n-Warn about C++ constructs whose meaning differs between ISO C++ 2011 and ISO C++ 2014\n+Warn about C++ constructs whose meaning differs between ISO C++ 2011 and ISO C++ 2014.\n \n Wcast-qual\n C ObjC C++ ObjC++ Var(warn_cast_qual) Warning\n-Warn about casts which discard qualifiers\n+Warn about casts which discard qualifiers.\n \n Wchar-subscripts\n C ObjC C++ ObjC++ Var(warn_char_subscripts) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about subscripts whose type is \\\"char\\\"\n+Warn about subscripts whose type is \\\"char\\\".\n \n Wchkp\n C ObjC C++ ObjC++ Var(warn_chkp) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about memory access errors found by Pointer Bounds Checker\n+Warn about memory access errors found by Pointer Bounds Checker.\n \n Wclobbered\n C ObjC C++ ObjC++ Var(warn_clobbered) Warning EnabledBy(Wextra)\n-Warn about variables that might be changed by \\\"longjmp\\\" or \\\"vfork\\\"\n+Warn about variables that might be changed by \\\"longjmp\\\" or \\\"vfork\\\".\n \n Wcomment\n C ObjC C++ ObjC++ CPP(warn_comments) CppReason(CPP_W_COMMENTS) Var(cpp_warn_comment) Init(0) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about possibly nested block comments, and C++ comments spanning more than one physical line\n+Warn about possibly nested block comments, and C++ comments spanning more than one physical line.\n \n Wcomments\n C ObjC C++ ObjC++ Warning Alias(Wcomment)\n-Synonym for -Wcomment\n+Synonym for -Wcomment.\n \n Wconditionally-supported\n C++ ObjC++ Var(warn_conditionally_supported) Warning\n-Warn for conditionally-supported constructs\n+Warn for conditionally-supported constructs.\n \n Wconversion\n C ObjC C++ ObjC++ Var(warn_conversion) Warning\n-Warn for implicit type conversions that may change a value\n+Warn for implicit type conversions that may change a value.\n \n Wconversion-null\n C++ ObjC++ Var(warn_conversion_null) Init(1) Warning\n-Warn for converting NULL from/to a non-pointer type\n+Warn for converting NULL from/to a non-pointer type.\n \n Wcpp\n C ObjC C++ ObjC++ CppReason(CPP_W_WARNING_DIRECTIVE)\n ; Documented in common.opt\n \n Wctor-dtor-privacy\n C++ ObjC++ Var(warn_ctor_dtor_privacy) Warning\n-Warn when all constructors and destructors are private\n+Warn when all constructors and destructors are private.\n \n Wdate-time\n C ObjC C++ ObjC++ CPP(warn_date_time) CppReason(CPP_W_DATE_TIME) Var(cpp_warn_date_time) Init(0) Warning\n-Warn about __TIME__, __DATE__ and __TIMESTAMP__ usage\n+Warn about __TIME__, __DATE__ and __TIMESTAMP__ usage.\n \n Wdeclaration-after-statement\n C ObjC Var(warn_declaration_after_statement) Init(-1) Warning\n-Warn when a declaration is found after a statement\n+Warn when a declaration is found after a statement.\n \n Wdelete-incomplete\n C++ ObjC++ Var(warn_delete_incomplete) Init(1) Warning\n-Warn when deleting a pointer to incomplete type\n+Warn when deleting a pointer to incomplete type.\n \n Wdelete-non-virtual-dtor\n C++ ObjC++ Var(warn_delnonvdtor) Warning LangEnabledBy(C++ ObjC++,Wall || Weffc++)\n-Warn about deleting polymorphic objects with non-virtual destructors\n+Warn about deleting polymorphic objects with non-virtual destructors.\n \n Wdeprecated\n C C++ ObjC ObjC++ CPP(cpp_warn_deprecated) CppReason(CPP_W_DEPRECATED) Var(warn_deprecated) Init(1) Warning\n-Warn if a deprecated compiler feature, class, method, or field is used\n+Warn if a deprecated compiler feature, class, method, or field is used.\n \n Wdesignated-init\n C ObjC Var(warn_designated_init) Init(1) Warning\n-Warn about positional initialization of structs requiring designated initializers\n+Warn about positional initialization of structs requiring designated initializers.\n \n Wdiscarded-array-qualifiers\n C ObjC Var(warn_discarded_array_qualifiers) Init(1) Warning\n-Warn if qualifiers on arrays which are pointer targets are discarded\n+Warn if qualifiers on arrays which are pointer targets are discarded.\n \n Wdiscarded-qualifiers\n C ObjC Var(warn_discarded_qualifiers) Init(1) Warning\n-Warn if type qualifiers on pointers are discarded\n+Warn if type qualifiers on pointers are discarded.\n \n Wdiv-by-zero\n C ObjC C++ ObjC++ Var(warn_div_by_zero) Init(1) Warning\n-Warn about compile-time integer division by zero\n+Warn about compile-time integer division by zero.\n \n Wduplicated-cond\n C ObjC C++ ObjC++ Var(warn_duplicated_cond) Init(0) Warning\n-Warn about duplicated conditions in an if-else-if chain\n+Warn about duplicated conditions in an if-else-if chain.\n \n Weffc++\n C++ ObjC++ Var(warn_ecpp) Warning\n-Warn about violations of Effective C++ style rules\n+Warn about violations of Effective C++ style rules.\n \n Wempty-body\n C ObjC C++ ObjC++ Var(warn_empty_body) Warning EnabledBy(Wextra)\n-Warn about an empty body in an if or else statement\n+Warn about an empty body in an if or else statement.\n \n Wendif-labels\n C ObjC C++ ObjC++ CPP(warn_endif_labels) CppReason(CPP_W_ENDIF_LABELS) Var(cpp_warn_endif_labels) Init(1) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic)\n-Warn about stray tokens after #elif and #endif\n+Warn about stray tokens after #elif and #endif.\n \n Wenum-compare\n C ObjC C++ ObjC++ Var(warn_enum_compare) Init(-1) Warning LangEnabledBy(C ObjC,Wall || Wc++-compat)\n-Warn about comparison of different enum types\n+Warn about comparison of different enum types.\n \n Werror\n C ObjC C++ ObjC++\n ; Documented in common.opt\n \n Werror-implicit-function-declaration\n C ObjC RejectNegative Warning Alias(Werror=, implicit-function-declaration)\n-This switch is deprecated; use -Werror=implicit-function-declaration instead\n+This switch is deprecated; use -Werror=implicit-function-declaration instead.\n \n Wfloat-conversion\n C ObjC C++ ObjC++ Var(warn_float_conversion) LangEnabledBy(C ObjC C++ ObjC++,Wconversion)\n-Warn for implicit type conversions that cause loss of floating point precision\n+Warn for implicit type conversions that cause loss of floating point precision.\n \n Wfloat-equal\n C ObjC C++ ObjC++ Var(warn_float_equal) Warning\n-Warn if testing floating point numbers for equality\n+Warn if testing floating point numbers for equality.\n \n Wformat\n C ObjC C++ ObjC++ Warning Alias(Wformat=, 1, 0)\n-Warn about printf/scanf/strftime/strfmon format string anomalies\n+Warn about printf/scanf/strftime/strfmon format string anomalies.\n \n Wformat-contains-nul\n C ObjC C++ ObjC++ Var(warn_format_contains_nul) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 1, 0)\n-Warn about format strings that contain NUL bytes\n+Warn about format strings that contain NUL bytes.\n \n Wformat-extra-args\n C ObjC C++ ObjC++ Var(warn_format_extra_args) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 1, 0)\n-Warn if passing too many arguments to a function for its format string\n+Warn if passing too many arguments to a function for its format string.\n \n Wformat-nonliteral\n C ObjC C++ ObjC++ Var(warn_format_nonliteral) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 2, 0)\n-Warn about format strings that are not literals\n+Warn about format strings that are not literals.\n \n Wformat-security\n C ObjC C++ ObjC++ Var(warn_format_security) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 2, 0)\n-Warn about possible security problems with format functions\n+Warn about possible security problems with format functions.\n \n Wformat-signedness\n C ObjC C++ ObjC++ Var(warn_format_signedness) Warning\n-Warn about sign differences with format functions\n+Warn about sign differences with format functions.\n \n Wformat-y2k\n C ObjC C++ ObjC++ Var(warn_format_y2k) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=,warn_format >= 2, 0)\n-Warn about strftime formats yielding 2-digit years\n+Warn about strftime formats yielding 2-digit years.\n \n Wformat-zero-length\n C ObjC C++ ObjC++ Var(warn_format_zero_length) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=,warn_format >= 1, 0)\n-Warn about zero-length formats\n+Warn about zero-length formats.\n \n Wformat=\n C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_format) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall, 1, 0)\n-Warn about printf/scanf/strftime/strfmon format string anomalies\n+Warn about printf/scanf/strftime/strfmon format string anomalies.\n \n Wignored-qualifiers\n C C++ Var(warn_ignored_qualifiers) Warning EnabledBy(Wextra)\n Warn whenever type qualifiers are ignored.\n \n Wincompatible-pointer-types\n C ObjC Var(warn_incompatible_pointer_types) Init(1) Warning\n-Warn when there is a conversion between pointers that have incompatible types\n+Warn when there is a conversion between pointers that have incompatible types.\n \n Winit-self\n C ObjC C++ ObjC++ Var(warn_init_self) Warning LangEnabledBy(C++ ObjC++,Wall)\n-Warn about variables which are initialized to themselves\n+Warn about variables which are initialized to themselves.\n \n Wimplicit\n C ObjC Var(warn_implicit) Warning LangEnabledBy(C ObjC,Wall)\n-Warn about implicit declarations\n+Warn about implicit declarations.\n \n Wdouble-promotion\n C ObjC C++ ObjC++ Var(warn_double_promotion) Warning\n-Warn about implicit conversions from \\\"float\\\" to \\\"double\\\"\n+Warn about implicit conversions from \\\"float\\\" to \\\"double\\\".\n \n Wimplicit-function-declaration\n C ObjC Var(warn_implicit_function_declaration) Init(-1) Warning LangEnabledBy(C ObjC,Wimplicit)\n-Warn about implicit function declarations\n+Warn about implicit function declarations.\n \n Wimplicit-int\n C ObjC Var(warn_implicit_int) Init(-1) Warning LangEnabledBy(C ObjC,Wimplicit)\n-Warn when a declaration does not specify a type\n+Warn when a declaration does not specify a type.\n \n Wimport\n C ObjC C++ ObjC++ Undocumented Ignore\n \n Winherited-variadic-ctor\n C++ ObjC++ Var(warn_inh_var_ctor) Init(1) Warning\n-Warn about C++11 inheriting constructors when the base has a variadic constructor\n+Warn about C++11 inheriting constructors when the base has a variadic constructor.\n \n Wint-conversion\n C ObjC Var(warn_int_conversion) Init(1) Warning\n-Warn about incompatible integer to pointer and pointer to integer conversions\n+Warn about incompatible integer to pointer and pointer to integer conversions.\n \n Wint-to-pointer-cast\n C ObjC C++ ObjC++ Var(warn_int_to_pointer_cast) Init(1) Warning\n-Warn when there is a cast to a pointer from an integer of a different size\n+Warn when there is a cast to a pointer from an integer of a different size.\n \n Winvalid-offsetof\n C++ ObjC++ Var(warn_invalid_offsetof) Init(1) Warning\n-Warn about invalid uses of the \\\"offsetof\\\" macro\n+Warn about invalid uses of the \\\"offsetof\\\" macro.\n \n Winvalid-pch\n C ObjC C++ ObjC++ CPP(warn_invalid_pch) CppReason(CPP_W_INVALID_PCH) Var(cpp_warn_invalid_pch) Init(0) Warning\n-Warn about PCH files that are found but not used\n+Warn about PCH files that are found but not used.\n \n Wjump-misses-init\n C ObjC Var(warn_jump_misses_init) Warning LangEnabledby(C ObjC,Wc++-compat)\n-Warn when a jump misses a variable initialization\n+Warn when a jump misses a variable initialization.\n \n Wliteral-suffix\n C++ ObjC++ CPP(warn_literal_suffix) CppReason(CPP_W_LITERAL_SUFFIX) Var(cpp_warn_literal_suffix) Init(1) Warning\n Warn when a string or character literal is followed by a ud-suffix which does not begin with an underscore.\n \n Wlogical-op\n-C ObjC C++ ObjC++ Var(warn_logical_op) Init(0) Warning \n-Warn when a logical operator is suspiciously always evaluating to true or false\n+C ObjC C++ ObjC++ Var(warn_logical_op) Init(0) Warning\n+Warn when a logical operator is suspiciously always evaluating to true or false.\n \n Wlogical-not-parentheses\n C ObjC C++ ObjC++ Var(warn_logical_not_paren) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn when logical not is used on the left hand side operand of a comparison\n+Warn when logical not is used on the left hand side operand of a comparison.\n \n Wlong-long\n C ObjC C++ ObjC++ CPP(cpp_warn_long_long) CppReason(CPP_W_LONG_LONG) Var(warn_long_long) Init(-1) Warning LangEnabledBy(C ObjC,Wc90-c99-compat)\n-Do not warn about using \\\"long long\\\" when -pedantic\n+Do not warn about using \\\"long long\\\" when -pedantic.\n \n Wmain\n C ObjC C++ ObjC++ Var(warn_main) Init(-1) Warning LangEnabledBy(C ObjC,Wall, 2, 0)\n-Warn about suspicious declarations of \\\"main\\\"\n+Warn about suspicious declarations of \\\"main\\\".\n \n Wmain\n LangEnabledBy(C ObjC C++ ObjC++,Wpedantic, 2, 0)\n ;\n \n Wmemset-transposed-args\n C ObjC C++ ObjC++ Var(warn_memset_transposed_args) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about suspicious calls to memset where the third argument is constant literal zero and the second is not\n+Warn about suspicious calls to memset where the third argument is constant literal zero and the second is not.\n \n Wmisleading-indentation\n C C++ Common Var(warn_misleading_indentation) Warning\n-Warn when the indentation of the code does not reflect the block structure\n+Warn when the indentation of the code does not reflect the block structure.\n \n Wmissing-braces\n C ObjC C++ ObjC++ Var(warn_missing_braces) Warning LangEnabledBy(C ObjC,Wall)\n-Warn about possibly missing braces around initializers\n+Warn about possibly missing braces around initializers.\n \n Wmissing-declarations\n C ObjC C++ ObjC++ Var(warn_missing_declarations) Warning\n-Warn about global functions without previous declarations\n+Warn about global functions without previous declarations.\n \n Wmissing-field-initializers\n C ObjC C++ ObjC++ Var(warn_missing_field_initializers) Warning EnabledBy(Wextra)\n-Warn about missing fields in struct initializers\n+Warn about missing fields in struct initializers.\n \n Wmultiple-inheritance\n C++ ObjC++ Var(warn_multiple_inheritance) Warning\n-Warn on direct multiple inheritance\n+Warn on direct multiple inheritance.\n \n Wnamespaces\n C++ ObjC++ Var(warn_namespaces) Warning\n-Warn on namespace definition\n+Warn on namespace definition.\n \n Wsized-deallocation\n C++ ObjC++ Var(warn_sized_deallocation) Warning EnabledBy(Wextra)\n-Warn about missing sized deallocation functions\n+Warn about missing sized deallocation functions.\n \n Wsizeof-pointer-memaccess\n C ObjC C++ ObjC++ Var(warn_sizeof_pointer_memaccess) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about suspicious length parameters to certain string functions if the argument uses sizeof\n+Warn about suspicious length parameters to certain string functions if the argument uses sizeof.\n \n Wsizeof-array-argument\n C ObjC C++ ObjC++ Var(warn_sizeof_array_argument) Warning Init(1)\n-Warn when sizeof is applied on a parameter declared as an array\n+Warn when sizeof is applied on a parameter declared as an array.\n \n Wsuggest-attribute=format\n C ObjC C++ ObjC++ Var(warn_suggest_attribute_format) Warning\n-Warn about functions which might be candidates for format attributes\n+Warn about functions which might be candidates for format attributes.\n \n Wsuggest-override\n C++ ObjC++ Var(warn_override) Warning\n@@ -608,70 +608,70 @@ function overrides another.\n \n Wswitch\n C ObjC C++ ObjC++ Var(warn_switch) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about enumerated switches, with no default, missing a case\n+Warn about enumerated switches, with no default, missing a case.\n \n Wswitch-default\n C ObjC C++ ObjC++ Var(warn_switch_default) Warning\n-Warn about enumerated switches missing a \\\"default:\\\" statement\n+Warn about enumerated switches missing a \\\"default:\\\" statement.\n \n Wswitch-enum\n C ObjC C++ ObjC++ Var(warn_switch_enum) Warning\n-Warn about all enumerated switches missing a specific case\n+Warn about all enumerated switches missing a specific case.\n \n Wswitch-bool\n C ObjC C++ ObjC++ Var(warn_switch_bool) Warning Init(1)\n-Warn about switches with boolean controlling expression\n+Warn about switches with boolean controlling expression.\n \n Wtemplates\n C++ ObjC++ Var(warn_templates) Warning\n-Warn on primary template declaration\n+Warn on primary template declaration.\n \n Wmissing-format-attribute\n C ObjC C++ ObjC++ Alias(Wsuggest-attribute=format)\n ;\n \n Wmissing-include-dirs\n C ObjC C++ ObjC++ CPP(warn_missing_include_dirs) CppReason(CPP_W_MISSING_INCLUDE_DIRS) Var(cpp_warn_missing_include_dirs) Init(0) Warning\n-Warn about user-specified include directories that do not exist\n+Warn about user-specified include directories that do not exist.\n \n Wmissing-parameter-type\n C ObjC Var(warn_missing_parameter_type) Warning EnabledBy(Wextra)\n-Warn about function parameters declared without a type specifier in K&R-style functions\n+Warn about function parameters declared without a type specifier in K&R-style functions.\n \n Wmissing-prototypes\n C ObjC Var(warn_missing_prototypes) Warning\n-Warn about global functions without prototypes\n+Warn about global functions without prototypes.\n \n Wmudflap\n C ObjC C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n Wmultichar\n C ObjC C++ ObjC++ CPP(warn_multichar) CppReason(CPP_W_MULTICHAR) Var(cpp_warn_multichar) Init(0) Warning\n-Warn about use of multi-character character constants\n+Warn about use of multi-character character constants.\n \n Wnarrowing\n C ObjC C++ ObjC++ Warning Var(warn_narrowing) Init(-1) LangEnabledBy(C++ ObjC++,Wall || Wc++11-compat)\n-Warn about narrowing conversions within { } that are ill-formed in C++11\n+Warn about narrowing conversions within { } that are ill-formed in C++11.\n \n Wnested-externs\n C ObjC Var(warn_nested_externs) Warning\n-Warn about \\\"extern\\\" declarations not at file scope\n+Warn about \\\"extern\\\" declarations not at file scope.\n \n Wnoexcept\n C++ ObjC++ Var(warn_noexcept) Warning\n-Warn when a noexcept expression evaluates to false even though the expression can't actually throw\n+Warn when a noexcept expression evaluates to false even though the expression can't actually throw.\n \n Wnon-template-friend\n C++ ObjC++ Var(warn_nontemplate_friend) Init(1) Warning\n-Warn when non-templatized friend functions are declared within a template\n+Warn when non-templatized friend functions are declared within a template.\n \n Wnon-virtual-dtor\n C++ ObjC++ Var(warn_nonvdtor) Warning LangEnabledBy(C++ ObjC++,Weffc++)\n-Warn about non-virtual destructors\n+Warn about non-virtual destructors.\n \n Wnonnull\n C ObjC C++ ObjC++ Var(warn_nonnull) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=,warn_format >= 1,0)\n-Warn about NULL being passed to argument slots marked as requiring non-NULL\n+Warn about NULL being passed to argument slots marked as requiring non-NULL.\n \n Wnonnull\n C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)\n@@ -683,7 +683,7 @@ C ObjC C++ ObjC++ Alias(Wnormalized=,nfc,none)\n \n Wnormalized=\n C ObjC C++ ObjC++ RejectNegative Joined Warning CPP(warn_normalize) CppReason(CPP_W_NORMALIZE) Init(normalized_C) Var(cpp_warn_normalize) Enum(cpp_normalize_level)\n--Wnormalized=<none|id|nfc|nfkc>\tWarn about non-normalised Unicode strings\n+-Wnormalized=<none|id|nfc|nfkc>\tWarn about non-normalised Unicode strings.\n \n ; Required for these enum values.\n SourceInclude\n@@ -706,143 +706,143 @@ Enum(cpp_normalize_level) String(nfc) Value(normalized_C)\n \n Wold-style-cast\n C++ ObjC++ Var(warn_old_style_cast) Warning\n-Warn if a C-style cast is used in a program\n+Warn if a C-style cast is used in a program.\n \n Wold-style-declaration\n C ObjC Var(warn_old_style_declaration) Warning EnabledBy(Wextra)\n-Warn for obsolescent usage in a declaration\n+Warn for obsolescent usage in a declaration.\n \n Wold-style-definition\n C ObjC Var(warn_old_style_definition) Warning\n-Warn if an old-style parameter definition is used\n+Warn if an old-style parameter definition is used.\n \n Wopenmp-simd\n C C++ Var(warn_openmp_simd) Warning LangEnabledBy(C C++,Wall)\n-Warn if a simd directive is overridden by the vectorizer cost model\n+Warn if a simd directive is overridden by the vectorizer cost model.\n \n Woverlength-strings\n C ObjC C++ ObjC++ Var(warn_overlength_strings) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic)\n-Warn if a string is longer than the maximum portable length specified by the standard\n+Warn if a string is longer than the maximum portable length specified by the standard.\n \n Woverloaded-virtual\n C++ ObjC++ Var(warn_overloaded_virtual) Warning\n-Warn about overloaded virtual function names\n+Warn about overloaded virtual function names.\n \n Woverride-init\n C ObjC Var(warn_override_init) Warning EnabledBy(Wextra)\n-Warn about overriding initializers without side effects\n+Warn about overriding initializers without side effects.\n \n Woverride-init-side-effects\n C ObjC Var(warn_override_init_side_effects) Init(1) Warning\n-Warn about overriding initializers with side effects\n+Warn about overriding initializers with side effects.\n \n Wpacked-bitfield-compat\n C ObjC C++ ObjC++ Var(warn_packed_bitfield_compat) Init(-1) Warning\n-Warn about packed bit-fields whose offset changed in GCC 4.4\n+Warn about packed bit-fields whose offset changed in GCC 4.4.\n \n Wparentheses\n C ObjC C++ ObjC++ Var(warn_parentheses) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about possibly missing parentheses\n+Warn about possibly missing parentheses.\n \n Wpedantic\n C ObjC C++ ObjC++ CPP(cpp_pedantic) CppReason(CPP_W_PEDANTIC) Warning\n ; Documented in common.opt\n \n Wpmf-conversions\n C++ ObjC++ Var(warn_pmf2ptr) Init(1) Warning\n-Warn when converting the type of pointers to member functions\n+Warn when converting the type of pointers to member functions.\n \n Wpointer-arith\n C ObjC C++ ObjC++ Var(warn_pointer_arith) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic)\n-Warn about function pointer arithmetic\n+Warn about function pointer arithmetic.\n \n Wpointer-sign\n C ObjC Var(warn_pointer_sign) Warning LangEnabledBy(C ObjC,Wall || Wpedantic)\n-Warn when a pointer differs in signedness in an assignment\n+Warn when a pointer differs in signedness in an assignment.\n \n Wpointer-to-int-cast\n C ObjC Var(warn_pointer_to_int_cast) Init(1) Warning\n-Warn when a pointer is cast to an integer of a different size\n+Warn when a pointer is cast to an integer of a different size.\n \n Wpragmas\n C ObjC C++ ObjC++ Var(warn_pragmas) Init(1) Warning\n-Warn about misuses of pragmas\n+Warn about misuses of pragmas.\n \n Wproperty-assign-default\n ObjC ObjC++ Var(warn_property_assign_default) Init(1) Warning\n-Warn if a property for an Objective-C object has no assign semantics specified\n+Warn if a property for an Objective-C object has no assign semantics specified.\n \n Wprotocol\n ObjC ObjC++ Var(warn_protocol) Init(1) Warning\n-Warn if inherited methods are unimplemented\n+Warn if inherited methods are unimplemented.\n \n Wredundant-decls\n C ObjC C++ ObjC++ Var(warn_redundant_decls) Warning\n-Warn about multiple declarations of the same object\n+Warn about multiple declarations of the same object.\n \n Wreorder\n C++ ObjC++ Var(warn_reorder) Warning LangEnabledBy(C++ ObjC++,Wall)\n-Warn when the compiler reorders code\n+Warn when the compiler reorders code.\n \n Wreturn-type\n C ObjC C++ ObjC++ Var(warn_return_type) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn whenever a function's return type defaults to \\\"int\\\" (C), or about inconsistent return types (C++)\n+Warn whenever a function's return type defaults to \\\"int\\\" (C), or about inconsistent return types (C++).\n \n Wselector\n ObjC ObjC++ Var(warn_selector) Warning\n-Warn if a selector has multiple methods\n+Warn if a selector has multiple methods.\n \n Wsequence-point\n C ObjC C++ ObjC++ Var(warn_sequence_point) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about possible violations of sequence point rules\n+Warn about possible violations of sequence point rules.\n \n Wshadow-ivar\n ObjC ObjC++ Var(warn_shadow_ivar) EnabledBy(Wshadow) Init(1) Warning\n-Warn if a local declaration hides an instance variable\n+Warn if a local declaration hides an instance variable.\n \n Wshift-overflow\n C ObjC C++ ObjC++ Warning Alias(Wshift-overflow=, 1, 0)\n-Warn if left shift of a signed value overflows\n+Warn if left shift of a signed value overflows.\n \n Wshift-overflow=\n C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_shift_overflow) Init(-1) Warning\n-Warn if left shift of a signed value overflows\n+Warn if left shift of a signed value overflows.\n \n Wshift-count-negative\n C ObjC C++ ObjC++ Var(warn_shift_count_negative) Init(1) Warning\n-Warn if shift count is negative\n+Warn if shift count is negative.\n \n Wshift-count-overflow\n C ObjC C++ ObjC++ Var(warn_shift_count_overflow) Init(1) Warning\n-Warn if shift count >= width of type\n+Warn if shift count >= width of type.\n \n Wshift-negative-value\n C ObjC C++ ObjC++ Var(warn_shift_negative_value) Init(-1) Warning\n-Warn if left shifting a negative value\n+Warn if left shifting a negative value.\n \n Wsign-compare\n C ObjC C++ ObjC++ Var(warn_sign_compare) Warning LangEnabledBy(C++ ObjC++,Wall)\n-Warn about signed-unsigned comparisons\n+Warn about signed-unsigned comparisons.\n \n Wsign-compare\n C ObjC C++ ObjC++ EnabledBy(Wextra)\n ;\n \n Wsign-conversion\n C ObjC C++ ObjC++ Var(warn_sign_conversion) LangEnabledBy(C ObjC,Wconversion)\n-Warn for implicit type conversions between signed and unsigned integers\n+Warn for implicit type conversions between signed and unsigned integers.\n \n Wsign-promo\n C++ ObjC++ Var(warn_sign_promo) Warning\n-Warn when overload promotes from unsigned to signed\n+Warn when overload promotes from unsigned to signed.\n \n Wstrict-null-sentinel\n C++ ObjC++ Warning Var(warn_strict_null_sentinel)\n-Warn about uncasted NULL used as sentinel\n+Warn about uncasted NULL used as sentinel.\n \n Wstrict-prototypes\n C ObjC Var(warn_strict_prototypes) Warning\n-Warn about unprototyped function declarations\n+Warn about unprototyped function declarations.\n \n Wstrict-aliasing=\n C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall, 3, 0)\n@@ -854,47 +854,47 @@ C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall, 1, 0)\n \n Wstrict-selector-match\n ObjC ObjC++ Var(warn_strict_selector_match) Warning\n-Warn if type signatures of candidate methods do not match exactly\n+Warn if type signatures of candidate methods do not match exactly.\n \n Wsync-nand\n C C++ Var(warn_sync_nand) Init(1) Warning\n-Warn when __sync_fetch_and_nand and __sync_nand_and_fetch built-in functions are used\n+Warn when __sync_fetch_and_nand and __sync_nand_and_fetch built-in functions are used.\n \n Wsynth\n C++ ObjC++ Var(warn_synth) Warning\n-Deprecated.  This switch has no effect\n+Deprecated.  This switch has no effect.\n \n Wsystem-headers\n C ObjC C++ ObjC++ Warning\n ; Documented in common.opt\n \n Wtautological-compare\n C ObjC C++ ObjC++ Var(warn_tautological_compare) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn if a comparison always evaluates to true or false\n+Warn if a comparison always evaluates to true or false.\n \n Wterminate\n C++ ObjC++ Warning Var(warn_terminate) Init(1)\n-Warn if a throw expression will always result in a call to terminate()\n+Warn if a throw expression will always result in a call to terminate().\n \n Wtraditional\n C ObjC CPP(cpp_warn_traditional) CppReason(CPP_W_TRADITIONAL) Var(warn_traditional) Init(0) Warning\n-Warn about features not present in traditional C\n+Warn about features not present in traditional C.\n \n Wtraditional-conversion\n C ObjC Var(warn_traditional_conversion) Warning\n-Warn of prototypes causing type conversions different from what would happen in the absence of prototype\n+Warn of prototypes causing type conversions different from what would happen in the absence of prototype.\n \n Wtrigraphs\n C ObjC C++ ObjC++ CPP(warn_trigraphs) CppReason(CPP_W_TRIGRAPHS) Var(cpp_warn_trigraphs) Init(2) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn if trigraphs are encountered that might affect the meaning of the program\n+Warn if trigraphs are encountered that might affect the meaning of the program.\n \n Wundeclared-selector\n ObjC ObjC++ Var(warn_undeclared_selector) Warning\n-Warn about @selector()s without previously declared methods\n+Warn about @selector()s without previously declared methods.\n \n Wundef\n C ObjC C++ ObjC++ CPP(warn_undef) CppReason(CPP_W_UNDEF) Var(cpp_warn_undef) Init(0) Warning\n-Warn if an undefined macro is used in an #if directive\n+Warn if an undefined macro is used in an #if directive.\n \n Wuninitialized\n C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)\n@@ -906,119 +906,118 @@ C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)\n \n Wunknown-pragmas\n C ObjC C++ ObjC++ Warning Var(warn_unknown_pragmas) LangEnabledBy(C ObjC C++ ObjC++,Wall, 1, 0)\n-Warn about unrecognized pragmas\n+Warn about unrecognized pragmas.\n \n Wunsuffixed-float-constants\n C ObjC Var(warn_unsuffixed_float_constants) Warning\n-Warn about unsuffixed float constants\n+Warn about unsuffixed float constants.\n \n Wunused\n C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)\n ; documented in common.opt\n \n Wunused-local-typedefs\n C ObjC C++ ObjC++ Var(warn_unused_local_typedefs) Warning EnabledBy(Wunused)\n-Warn when typedefs locally defined in a function are not used\n+Warn when typedefs locally defined in a function are not used.\n \n Wunused-macros\n C ObjC C++ ObjC++ CppReason(CPP_W_UNUSED_MACROS) Var(cpp_warn_unused_macros) Warning\n-Warn about macros defined in the main file that are not used\n+Warn about macros defined in the main file that are not used.\n \n Wunused-result\n C ObjC C++ ObjC++ Var(warn_unused_result) Init(1) Warning\n-Warn if a caller of a function, marked with attribute warn_unused_result, does not use its return value\n+Warn if a caller of a function, marked with attribute warn_unused_result, does not use its return value.\n \n Wunused-variable\n C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wunused)\n ; documented in common.opt\n \n Wunused-const-variable\n C ObjC C++ ObjC++ Var(warn_unused_const_variable) Warning LangEnabledBy(C ObjC,Wunused-variable)\n-Warn when a const variable is unused\n+Warn when a const variable is unused.\n \n Wvariadic-macros\n C ObjC C++ ObjC++ CPP(warn_variadic_macros) CppReason(CPP_W_VARIADIC_MACROS) Var(cpp_warn_variadic_macros) Init(0) Warning LangEnabledBy(C ObjC C++ ObjC++,Wpedantic || Wtraditional)\n-Warn about using variadic macros\n+Warn about using variadic macros.\n \n Wvarargs\n C ObjC C++ ObjC++ Warning Var(warn_varargs) Init(1)\n-Warn about questionable usage of the macros used to retrieve variable arguments\n+Warn about questionable usage of the macros used to retrieve variable arguments.\n \n Wvla\n C ObjC C++ ObjC++ Var(warn_vla) Init(-1) Warning\n-Warn if a variable length array is used\n+Warn if a variable length array is used.\n \n Wvolatile-register-var\n C ObjC C++ ObjC++ Var(warn_volatile_register_var) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn when a register variable is declared volatile\n+Warn when a register variable is declared volatile.\n \n Wvirtual-inheritance\n C++ ObjC++ Var(warn_virtual_inheritance) Warning\n-Warn on direct virtual inheritance\n+Warn on direct virtual inheritance.\n \n Wvirtual-move-assign\n C++ ObjC++ Var(warn_virtual_move_assign) Warning Init(1)\n-Warn if a virtual base has a non-trivial move assignment operator\n+Warn if a virtual base has a non-trivial move assignment operator.\n \n Wwrite-strings\n C ObjC C++ ObjC++ Var(warn_write_strings) Warning\n In C++, nonzero means warn about deprecated conversion from string literals to 'char *'.  In C, similar warning, except that the conversion is of course not deprecated by the ISO C standard.\n \n Wzero-as-null-pointer-constant\n C++ ObjC++ Var(warn_zero_as_null_pointer_constant) Warning\n-Warn when a literal '0' is used as null pointer\n+Warn when a literal '0' is used as null pointer.\n \n Wuseless-cast\n C++ ObjC++ Var(warn_useless_cast) Warning\n-Warn about useless casts\n+Warn about useless casts.\n \n Wsubobject-linkage\n C++ ObjC++ Var(warn_subobject_linkage) Warning Init(1)\n-Warn if a class type has a base or a field whose type uses the anonymous\n-namespace or depends on a type with no linkage\n+Warn if a class type has a base or a field whose type uses the anonymous namespace or depends on a type with no linkage.\n \n ansi\n C ObjC C++ ObjC++\n-A synonym for -std=c89 (for C) or -std=c++98 (for C++)\n+A synonym for -std=c89 (for C) or -std=c++98 (for C++).\n \n d\n C ObjC C++ ObjC++ Joined\n ; Documented in common.opt.  FIXME - what about -dI, -dD, -dN and -dD?\n \n fabi-compat-version=\n C++ ObjC++ Joined RejectNegative UInteger Var(flag_abi_compat_version) Init(-1)\n-The version of the C++ ABI used for -Wabi warnings and link compatibility aliases\n+The version of the C++ ABI used for -Wabi warnings and link compatibility aliases.\n \n faccess-control\n C++ ObjC++ Var(flag_access_control) Init(1)\n-Enforce class member access control semantics\n+Enforce class member access control semantics.\n \n fada-spec-parent=\n C ObjC C++ ObjC++ RejectNegative Joined Var(ada_specs_parent)\n--fada-spec-parent=unit  Dump Ada specs as child units of given parent\n+-fada-spec-parent=unit  Dump Ada specs as child units of given parent.\n \n fall-virtual\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n fallow-parameterless-variadic-functions\n C ObjC Var(flag_allow_parameterless_variadic_functions)\n-Allow variadic functions without named parameter\n+Allow variadic functions without named parameter.\n \n falt-external-templates\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n-No longer supported\n+No longer supported.\n \n fasm\n C ObjC C++ ObjC++ Var(flag_no_asm, 0)\n-Recognize the \\\"asm\\\" keyword\n+Recognize the \\\"asm\\\" keyword.\n \n ; Define extra predefined macros for use in libgcc.\n fbuilding-libgcc\n C ObjC C++ ObjC++ Undocumented Var(flag_building_libgcc)\n \n fbuiltin\n C ObjC C++ ObjC++ Var(flag_no_builtin, 0)\n-Recognize built-in functions\n+Recognize built-in functions.\n \n fbuiltin-\n C ObjC C++ ObjC++ Joined\n@@ -1034,7 +1033,7 @@ control instrumentation.  Currently available for C, C++ and ObjC.\n \n fchkp-check-incomplete-type\n C ObjC C++ ObjC++ LTO Report Var(flag_chkp_incomplete_type) Init(1)\n-Generate pointer bounds checks for variables with incomplete type\n+Generate pointer bounds checks for variables with incomplete type.\n \n fchkp-zero-input-bounds-for-main\n C ObjC C++ ObjC++ LTO Report Var(flag_chkp_zero_input_bounds_for_main) Init(0)\n@@ -1117,39 +1116,39 @@ Driver\n \n fcilkplus\n C ObjC C++ ObjC++ LTO Report Var(flag_cilkplus) Init(0)\n-Enable Cilk Plus\n+Enable Cilk Plus.\n \n fconcepts\n C++ ObjC++ Var(flag_concepts)\n-Enable support for C++ concepts\n+Enable support for C++ concepts.\n \n fcond-mismatch\n C ObjC C++ ObjC++\n-Allow the arguments of the '?' operator to have different types\n+Allow the arguments of the '?' operator to have different types.\n \n fconserve-space\n C++ ObjC++ Var(flag_conserve_space)\n Does nothing.  Preserved for backward compatibility.\n \n fconstant-string-class=\n ObjC ObjC++ Joined MissingArgError(no class name specified with %qs)\n--fconst-string-class=<name>\tUse class <name> for constant strings\n+-fconst-string-class=<name>\tUse class <name> for constant strings.\n \n fconstexpr-depth=\n C++ ObjC++ Joined RejectNegative UInteger Var(max_constexpr_depth) Init(512)\n--fconstexpr-depth=<number>\tSpecify maximum constexpr recursion depth\n+-fconstexpr-depth=<number>\tSpecify maximum constexpr recursion depth.\n \n fdebug-cpp\n C ObjC C++ ObjC++\n-Emit debug annotations during preprocessing\n+Emit debug annotations during preprocessing.\n \n fdeduce-init-list\n C++ ObjC++ Var(flag_deduce_init_list) Init(0)\n--fdeduce-init-list\tenable deduction of std::initializer_list for a template type parameter from a brace-enclosed initializer-list\n+-fdeduce-init-list\tenable deduction of std::initializer_list for a template type parameter from a brace-enclosed initializer-list.\n \n fdeclone-ctor-dtor\n C++ ObjC++ Var(flag_declone_ctor_dtor) Init(-1)\n-Factor complex constructors and destructors to favor space over speed\n+Factor complex constructors and destructors to favor space over speed.\n \n fdefault-inline\n C++ ObjC++ Ignore\n@@ -1161,64 +1160,64 @@ Preprocess directives only.\n \n fdollars-in-identifiers\n C ObjC C++ ObjC++\n-Permit '$' as an identifier character\n+Permit '$' as an identifier character.\n \n fdump-ada-spec\n C ObjC C++ ObjC++ RejectNegative Var(flag_dump_ada_spec)\n-Write all declarations as Ada code transitively\n+Write all declarations as Ada code transitively.\n \n fdump-ada-spec-slim\n C ObjC C++ ObjC++ RejectNegative Var(flag_dump_ada_spec_slim)\n-Write all declarations as Ada code for the given file only\n+Write all declarations as Ada code for the given file only.\n \n felide-constructors\n C++ ObjC++ Var(flag_elide_constructors) Init(1)\n \n fenforce-eh-specs\n C++ ObjC++ Var(flag_enforce_eh_specs) Init(1)\n-Generate code to check exception specifications\n+Generate code to check exception specifications.\n \n fenum-int-equiv\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n fexec-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n--fexec-charset=<cset>\tConvert all strings and character constants to character set <cset>\n+-fexec-charset=<cset>\tConvert all strings and character constants to character set <cset>.\n \n fextended-identifiers\n C ObjC C++ ObjC++\n-Permit universal character names (\\\\u and \\\\U) in identifiers\n+Permit universal character names (\\\\u and \\\\U) in identifiers.\n \n finput-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n--finput-charset=<cset>\tSpecify the default character set for source files\n+-finput-charset=<cset>\tSpecify the default character set for source files.\n \n fextern-tls-init\n C++ ObjC++ Var(flag_extern_tls_init) Init(-1)\n-Support dynamic initialization of thread-local variables in a different translation unit\n+Support dynamic initialization of thread-local variables in a different translation unit.\n \n fexternal-templates\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n ffor-scope\n C++ ObjC++ Var(flag_new_for_scope) Init(1)\n-Scope of for-init-statement variables is local to the loop\n+Scope of for-init-statement variables is local to the loop.\n \n ffreestanding\n C ObjC C++ ObjC++\n-Do not assume that standard C libraries and \\\"main\\\" exist\n+Do not assume that standard C libraries and \\\"main\\\" exist.\n \n fgnu-keywords\n C++ ObjC++ Var(flag_no_gnu_keywords, 0)\n-Recognize GNU-defined keywords\n+Recognize GNU-defined keywords.\n \n fgnu-runtime\n ObjC ObjC++ LTO Report RejectNegative Var(flag_next_runtime,0) Init(NEXT_OBJC_RUNTIME)\n-Generate code for GNU runtime environment\n+Generate code for GNU runtime environment.\n \n fgnu89-inline\n C ObjC Var(flag_gnu89_inline) Init(-1)\n-Use traditional GNU semantics for inline functions\n+Use traditional GNU semantics for inline functions.\n \n fguiding-decls\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n@@ -1231,31 +1230,31 @@ C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n fhosted\n C ObjC\n-Assume normal C execution environment\n+Assume normal C execution environment.\n \n fhuge-objects\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n-No longer supported\n+No longer supported.\n \n fimplement-inlines\n C++ ObjC++ Var(flag_implement_inlines) Init(1)\n-Export functions even if they can be inlined\n+Export functions even if they can be inlined.\n \n fimplicit-inline-templates\n C++ ObjC++ Var(flag_implicit_inline_templates) Init(1)\n-Emit implicit instantiations of inline templates\n+Emit implicit instantiations of inline templates.\n \n fimplicit-templates\n C++ ObjC++ Var(flag_implicit_templates) Init(1)\n-Emit implicit instantiations of templates\n+Emit implicit instantiations of templates.\n \n ffriend-injection\n C++ ObjC++ Var(flag_friend_injection)\n-Inject friend functions into enclosing namespace\n+Inject friend functions into enclosing namespace.\n \n fkeep-inline-dllexport\n C C++ ObjC ObjC++ Var(flag_keep_inline_dllexport) Init(1) Report Condition(TARGET_DLLIMPORT_DECL_ATTRIBUTES)\n-Don't emit dllexported inline functions unless needed\n+Don't emit dllexported inline functions unless needed.\n \n flabels-ok\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n@@ -1266,7 +1265,7 @@ Allow implicit conversions between vectors with differing numbers of subparts an\n \n fms-extensions\n C ObjC C++ ObjC++ Var(flag_ms_extensions)\n-Don't warn about uses of Microsoft extensions\n+Don't warn about uses of Microsoft extensions.\n \n fmudflap\n C ObjC C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n@@ -1285,19 +1284,19 @@ C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n fnext-runtime\n ObjC ObjC++ LTO Report RejectNegative Var(flag_next_runtime)\n-Generate code for NeXT (Apple Mac OS X) runtime environment\n+Generate code for NeXT (Apple Mac OS X) runtime environment.\n \n fnil-receivers\n ObjC ObjC++ Var(flag_nil_receivers) Init(1)\n-Assume that receivers of Objective-C messages may be nil\n+Assume that receivers of Objective-C messages may be nil.\n \n flocal-ivars\n ObjC ObjC++ Var(flag_local_ivars) Init(1)\n Allow access to instance variables as if they were local declarations within instance method implementations.\n \n fivar-visibility=\n ObjC ObjC++ Joined RejectNegative Enum(ivar_visibility) Var(default_ivar_visibility) Init(IVAR_VISIBILITY_PROTECTED)\n--fvisibility=[private|protected|public|package]\tSet the default symbol visibility\n+-fvisibility=[private|protected|public|package]\tSet the default symbol visibility.\n \n Enum\n Name(ivar_visibility) Type(enum ivar_visibility) UnknownError(unrecognized ivar visibility value %qs)\n@@ -1322,7 +1321,7 @@ C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n fnothrow-opt\n C++ ObjC++ Optimization Var(flag_nothrow_opt)\n-Treat a throw() exception specification as noexcept to improve code size\n+Treat a throw() exception specification as noexcept to improve code size.\n \n fobjc-abi-version=\n ObjC ObjC++ LTO Joined Report RejectNegative UInteger Var(flag_objc_abi)\n@@ -1332,21 +1331,21 @@ Specify which ABI to use for Objective-C family code and meta-data generation.\n ; to initialize any non-POD ivars in Objective-C++ classes.\n fobjc-call-cxx-cdtors\n ObjC++ Var(flag_objc_call_cxx_cdtors)\n-Generate special Objective-C methods to initialize/destroy non-POD C++ ivars, if needed\n+Generate special Objective-C methods to initialize/destroy non-POD C++ ivars, if needed.\n \n fobjc-direct-dispatch\n ObjC ObjC++ Var(flag_objc_direct_dispatch)\n-Allow fast jumps to the message dispatcher\n+Allow fast jumps to the message dispatcher.\n \n ; Nonzero means that we will allow new ObjC exception syntax (@throw,\n ; @try, etc.) in source code.\n fobjc-exceptions\n ObjC ObjC++ Var(flag_objc_exceptions)\n-Enable Objective-C exception and synchronization syntax\n+Enable Objective-C exception and synchronization syntax.\n \n fobjc-gc\n ObjC ObjC++ LTO Var(flag_objc_gc)\n-Enable garbage collection (GC) in Objective-C/Objective-C++ programs\n+Enable garbage collection (GC) in Objective-C/Objective-C++ programs.\n \n fobjc-nilcheck\n ObjC ObjC++ Var(flag_objc_nilcheck,1)\n@@ -1355,27 +1354,27 @@ Enable inline checks for nil receivers with the NeXT runtime and ABI version 2.\n ; Nonzero means that we generate NeXT setjmp based exceptions.\n fobjc-sjlj-exceptions\n ObjC ObjC++ Var(flag_objc_sjlj_exceptions) Init(-1)\n-Enable Objective-C setjmp exception handling runtime\n+Enable Objective-C setjmp exception handling runtime.\n \n fobjc-std=objc1\n ObjC ObjC++ Var(flag_objc1_only)\n-Conform to the Objective-C 1.0 language as implemented in GCC 4.0\n+Conform to the Objective-C 1.0 language as implemented in GCC 4.0.\n \n fopenacc\n C ObjC C++ ObjC++ LTO Var(flag_openacc)\n-Enable OpenACC\n+Enable OpenACC.\n \n fopenmp\n C ObjC C++ ObjC++ LTO Var(flag_openmp)\n-Enable OpenMP (implies -frecursive in Fortran)\n+Enable OpenMP (implies -frecursive in Fortran).\n \n fopenmp-simd\n C ObjC C++ ObjC++ Var(flag_openmp_simd)\n-Enable OpenMP's SIMD directives\n+Enable OpenMP's SIMD directives.\n \n foperator-names\n C++ ObjC++\n-Recognize C++ keywords like \\\"compl\\\" and \\\"xor\\\"\n+Recognize C++ keywords like \\\"compl\\\" and \\\"xor\\\".\n \n foptional-diags\n C++ ObjC++ Ignore\n@@ -1386,216 +1385,216 @@ C ObjC C++ ObjC++\n \n fpch-preprocess\n C ObjC C++ ObjC++\n-Look for and use PCH files even when preprocessing\n+Look for and use PCH files even when preprocessing.\n \n fpermissive\n C++ ObjC++ Var(flag_permissive)\n-Downgrade conformance errors to warnings\n+Downgrade conformance errors to warnings.\n \n fplan9-extensions\n C ObjC Var(flag_plan9_extensions)\n-Enable Plan 9 language extensions\n+Enable Plan 9 language extensions.\n \n fpreprocessed\n C ObjC C++ ObjC++\n-Treat the input file as already preprocessed\n+Treat the input file as already preprocessed.\n \n ftrack-macro-expansion\n C ObjC C++ ObjC++ JoinedOrMissing RejectNegative UInteger\n ; converted into ftrack-macro-expansion=\n \n ftrack-macro-expansion=\n C ObjC C++ ObjC++ JoinedOrMissing RejectNegative UInteger\n--ftrack-macro-expansion=<0|1|2>  Track locations of tokens coming from macro expansion and display them in error messages\n+-ftrack-macro-expansion=<0|1|2>  Track locations of tokens coming from macro expansion and display them in error messages.\n \n fpretty-templates\n C++ ObjC++ Var(flag_pretty_templates) Init(1)\n--fno-pretty-templates Do not pretty-print template specializations as the template signature followed by the arguments\n+-fno-pretty-templates Do not pretty-print template specializations as the template signature followed by the arguments.\n \n freplace-objc-classes\n ObjC ObjC++ LTO Var(flag_replace_objc_classes)\n-Used in Fix-and-Continue mode to indicate that object files may be swapped in at runtime\n+Used in Fix-and-Continue mode to indicate that object files may be swapped in at runtime.\n \n frepo\n C++ ObjC++\n-Enable automatic template instantiation\n+Enable automatic template instantiation.\n \n frtti\n C++ ObjC++ Optimization Var(flag_rtti) Init(1)\n-Generate run time type descriptor information\n+Generate run time type descriptor information.\n \n fshort-double\n C ObjC C++ ObjC++ LTO Optimization Var(flag_short_double)\n-Use the same size for double as for float\n+Use the same size for double as for float.\n \n fshort-enums\n C ObjC C++ ObjC++ LTO Optimization Var(flag_short_enums)\n-Use the narrowest integer type possible for enumeration types\n+Use the narrowest integer type possible for enumeration types.\n \n fshort-wchar\n C ObjC C++ ObjC++ LTO Optimization Var(flag_short_wchar)\n-Force the underlying type for \\\"wchar_t\\\" to be \\\"unsigned short\\\"\n+Force the underlying type for \\\"wchar_t\\\" to be \\\"unsigned short\\\".\n \n fsigned-bitfields\n C ObjC C++ ObjC++ Var(flag_signed_bitfields) Init(1)\n-When \\\"signed\\\" or \\\"unsigned\\\" is not given make the bitfield signed\n+When \\\"signed\\\" or \\\"unsigned\\\" is not given make the bitfield signed.\n \n fsigned-char\n C ObjC C++ ObjC++ LTO Var(flag_signed_char)\n-Make \\\"char\\\" signed by default\n+Make \\\"char\\\" signed by default.\n \n fsized-deallocation\n C++ ObjC++ Var(flag_sized_deallocation) Init(-1)\n-Enable C++14 sized deallocation support\n+Enable C++14 sized deallocation support.\n \n fsquangle\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n fstats\n C++ ObjC++ Var(flag_detailed_statistics)\n-Display statistics accumulated during compilation\n+Display statistics accumulated during compilation.\n \n fstrict-enums\n C++ ObjC++ Optimization Var(flag_strict_enums)\n-Assume that values of enumeration type are always within the minimum range of that type\n+Assume that values of enumeration type are always within the minimum range of that type.\n \n fstrict-prototype\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n ftabstop=\n C ObjC C++ ObjC++ Joined RejectNegative UInteger\n--ftabstop=<number>\tDistance between tab stops for column reporting\n+-ftabstop=<number>\tDistance between tab stops for column reporting.\n \n ftemplate-backtrace-limit=\n C++ ObjC++ Joined RejectNegative UInteger Var(template_backtrace_limit) Init(10)\n-Set the maximum number of template instantiation notes for a single warning or error\n+Set the maximum number of template instantiation notes for a single warning or error.\n \n ftemplate-depth-\n C++ ObjC++ Joined RejectNegative Undocumented Alias(ftemplate-depth=)\n \n ftemplate-depth=\n C++ ObjC++ Joined RejectNegative UInteger\n--ftemplate-depth=<number>\tSpecify maximum template instantiation depth\n+-ftemplate-depth=<number>\tSpecify maximum template instantiation depth.\n \n fthis-is-variable\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n \n fthreadsafe-statics\n C++ ObjC++ Optimization Var(flag_threadsafe_statics) Init(1)\n--fno-threadsafe-statics\tDo not generate thread-safe code for initializing local statics\n+-fno-threadsafe-statics\tDo not generate thread-safe code for initializing local statics.\n \n funsigned-bitfields\n C ObjC C++ ObjC++ Var(flag_signed_bitfields, 0)\n-When \\\"signed\\\" or \\\"unsigned\\\" is not given make the bitfield unsigned\n+When \\\"signed\\\" or \\\"unsigned\\\" is not given make the bitfield unsigned.\n \n funsigned-char\n C ObjC C++ ObjC++ LTO Var(flag_signed_char, 0)\n-Make \\\"char\\\" unsigned by default\n+Make \\\"char\\\" unsigned by default.\n \n fuse-cxa-atexit\n C++ ObjC++ Var(flag_use_cxa_atexit) Init(DEFAULT_USE_CXA_ATEXIT)\n-Use __cxa_atexit to register destructors\n+Use __cxa_atexit to register destructors.\n \n fuse-cxa-get-exception-ptr\n C++ ObjC++ Var(flag_use_cxa_get_exception_ptr) Init(2)\n-Use __cxa_get_exception_ptr in exception handling\n+Use __cxa_get_exception_ptr in exception handling.\n \n fvisibility-inlines-hidden\n C++ ObjC++\n-Marks all inlined functions and methods as having hidden visibility\n+Marks all inlined functions and methods as having hidden visibility.\n \n fvisibility-ms-compat\n C++ ObjC++ Var(flag_visibility_ms_compat)\n-Changes visibility to match Microsoft Visual Studio by default\n+Changes visibility to match Microsoft Visual Studio by default.\n \n fvtable-gc\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n-No longer supported\n+No longer supported.\n \n fvtable-thunks\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n-No longer supported\n+No longer supported.\n \n fweak\n C++ ObjC++ Var(flag_weak) Init(1)\n-Emit common-like symbols as weak symbols\n+Emit common-like symbols as weak symbols.\n \n fwide-exec-charset=\n C ObjC C++ ObjC++ Joined RejectNegative\n--fwide-exec-charset=<cset>\tConvert all wide strings and character constants to character set <cset>\n+-fwide-exec-charset=<cset>\tConvert all wide strings and character constants to character set <cset>.\n \n fworking-directory\n C ObjC C++ ObjC++ Var(flag_working_directory) Init(-1)\n-Generate a #line directive pointing at the current working directory\n+Generate a #line directive pointing at the current working directory.\n \n fxref\n C++ ObjC++ Ignore Warn(switch %qs is no longer supported)\n-No longer supported\n+No longer supported.\n \n fzero-link\n ObjC ObjC++ Var(flag_zero_link)\n-Generate lazy class lookup (via objc_getClass()) for use in Zero-Link mode\n+Generate lazy class lookup (via objc_getClass()) for use in Zero-Link mode.\n \n gen-decls\n ObjC ObjC++ Var(flag_gen_declaration)\n-Dump declarations to a .decl file\n+Dump declarations to a .decl file.\n \n femit-struct-debug-baseonly\n C ObjC C++ ObjC++\n--femit-struct-debug-baseonly\tAggressive reduced debug info for structs\n+-femit-struct-debug-baseonly\tAggressive reduced debug info for structs.\n \n femit-struct-debug-reduced\n C ObjC C++ ObjC++\n--femit-struct-debug-reduced\tConservative reduced debug info for structs\n+-femit-struct-debug-reduced\tConservative reduced debug info for structs.\n \n femit-struct-debug-detailed=\n C ObjC C++ ObjC++ Joined\n--femit-struct-debug-detailed=<spec-list>\tDetailed reduced debug info for structs\n+-femit-struct-debug-detailed=<spec-list>\tDetailed reduced debug info for structs.\n \n fext-numeric-literals\n-C++ ObjC++ \n+C++ ObjC++\n Interpret imaginary, fixed-point, or other gnu number suffix as the corresponding\n number literal rather than a user-defined number literal.\n \n idirafter\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)\n--idirafter <dir>\tAdd <dir> to the end of the system include path\n+-idirafter <dir>\tAdd <dir> to the end of the system include path.\n \n imacros\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing filename after %qs)\n--imacros <file>\tAccept definition of macros in <file>\n+-imacros <file>\tAccept definition of macros in <file>.\n \n imultilib\n C ObjC C++ ObjC++ Joined Separate\n--imultilib <dir>\tSet <dir> to be the multilib include subdirectory\n+-imultilib <dir>\tSet <dir> to be the multilib include subdirectory.\n \n include\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing filename after %qs)\n--include <file>\tInclude the contents of <file> before other files\n+-include <file>\tInclude the contents of <file> before other files.\n \n iprefix\n C ObjC C++ ObjC++ Joined Separate\n--iprefix <path>\tSpecify <path> as a prefix for next two options\n+-iprefix <path>\tSpecify <path> as a prefix for next two options.\n \n isysroot\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)\n--isysroot <dir>\tSet <dir> to be the system root directory\n+-isysroot <dir>\tSet <dir> to be the system root directory.\n \n isystem\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)\n--isystem <dir>\tAdd <dir> to the start of the system include path\n+-isystem <dir>\tAdd <dir> to the start of the system include path.\n \n iquote\n C ObjC C++ ObjC++ Joined Separate MissingArgError(missing path after %qs)\n--iquote <dir>\tAdd <dir> to the end of the quote include path\n+-iquote <dir>\tAdd <dir> to the end of the quote include path.\n \n iwithprefix\n C ObjC C++ ObjC++ Joined Separate\n--iwithprefix <dir>\tAdd <dir> to the end of the system include path\n+-iwithprefix <dir>\tAdd <dir> to the end of the system include path.\n \n iwithprefixbefore\n C ObjC C++ ObjC++ Joined Separate\n--iwithprefixbefore <dir>\tAdd <dir> to the end of the main include path\n+-iwithprefixbefore <dir>\tAdd <dir> to the end of the main include path.\n \n lang-asm\n C Undocumented RejectDriver\n@@ -1605,11 +1604,11 @@ Driver\n \n nostdinc\n C ObjC C++ ObjC++\n-Do not search standard system include directories (those specified with -isystem will still be used)\n+Do not search standard system include directories (those specified with -isystem will still be used).\n \n nostdinc++\n C++ ObjC++\n-Do not search standard system include directories for C++\n+Do not search standard system include directories for C++.\n \n o\n C ObjC C++ ObjC++ Joined Separate\n@@ -1621,158 +1620,158 @@ C ObjC C++ ObjC++ Alias(Wpedantic)\n \n print-objc-runtime-info\n ObjC ObjC++\n-Generate C header of platform-specific features\n+Generate C header of platform-specific features.\n \n remap\n C ObjC C++ ObjC++\n-Remap file names when including files\n+Remap file names when including files.\n \n std=c++98\n C++ ObjC++\n-Conform to the ISO 1998 C++ standard revised by the 2003 technical corrigendum\n+Conform to the ISO 1998 C++ standard revised by the 2003 technical corrigendum.\n \n std=c++03\n C++ ObjC++ Alias(std=c++98)\n-Conform to the ISO 1998 C++ standard revised by the 2003 technical corrigendum\n+Conform to the ISO 1998 C++ standard revised by the 2003 technical corrigendum.\n \n std=c++11\n C++ ObjC++\n-Conform to the ISO 2011 C++ standard\n+Conform to the ISO 2011 C++ standard.\n \n std=c++0x\n C++ ObjC++ Alias(std=c++11) Undocumented\n-Deprecated in favor of -std=c++11\n+Deprecated in favor of -std=c++11.\n \n std=c++1y\n C++ ObjC++ Alias(std=c++14) Undocumented\n-Deprecated in favor of -std=c++14\n+Deprecated in favor of -std=c++14.\n \n std=c++14\n C++ ObjC++\n-Conform to the ISO 2014 C++ standard\n+Conform to the ISO 2014 C++ standard.\n \n std=c++1z\n C++ ObjC++\n-Conform to the ISO 2017(?) C++ draft standard (experimental and incomplete support)\n+Conform to the ISO 2017(?) C++ draft standard (experimental and incomplete support).\n \n std=c++17\n C++ ObjC++ Alias(std=c++1z) Undocumented\n \n std=c11\n C ObjC\n-Conform to the ISO 2011 C standard\n+Conform to the ISO 2011 C standard.\n \n std=c1x\n C ObjC Alias(std=c11)\n-Deprecated in favor of -std=c11\n+Deprecated in favor of -std=c11.\n \n std=c89\n C ObjC Alias(std=c90)\n-Conform to the ISO 1990 C standard\n+Conform to the ISO 1990 C standard.\n \n std=c90\n C ObjC\n-Conform to the ISO 1990 C standard\n+Conform to the ISO 1990 C standard.\n \n std=c99\n C ObjC\n-Conform to the ISO 1999 C standard\n+Conform to the ISO 1999 C standard.\n \n std=c9x\n C ObjC Alias(std=c99)\n-Deprecated in favor of -std=c99\n+Deprecated in favor of -std=c99.\n \n std=gnu++98\n C++ ObjC++\n Conform to the ISO 1998 C++ standard revised by the 2003 technical\n-corrigendum with GNU extensions\n+corrigendum with GNU extensions.\n \n std=gnu++03\n C++ ObjC++ Alias(std=gnu++98)\n Conform to the ISO 1998 C++ standard revised by the 2003 technical\n-corrigendum with GNU extensions\n+corrigendum with GNU extensions.\n \n std=gnu++11\n C++ ObjC++\n-Conform to the ISO 2011 C++ standard with GNU extensions\n+Conform to the ISO 2011 C++ standard with GNU extensions.\n \n std=gnu++0x\n C++ ObjC++ Alias(std=gnu++11) Undocumented\n-Deprecated in favor of -std=gnu++11\n+Deprecated in favor of -std=gnu++11.\n \n std=gnu++1y\n C++ ObjC++ Alias(std=gnu++14) Undocumented\n-Deprecated in favor of -std=gnu++14\n+Deprecated in favor of -std=gnu++14.\n \n std=gnu++14\n C++ ObjC++\n-Conform to the ISO 2014 C++ standard with GNU extensions\n+Conform to the ISO 2014 C++ standard with GNU extensions.\n \n std=gnu++1z\n C++ ObjC++\n-Conform to the ISO 201z(7?) C++ draft standard with GNU extensions (experimental and incomplete support)\n+Conform to the ISO 201z(7?) C++ draft standard with GNU extensions (experimental and incomplete support).\n \n std=gnu++17\n C++ ObjC++ Alias(std=gnu++1z) Undocumented\n \n std=gnu11\n C ObjC\n-Conform to the ISO 2011 C standard with GNU extensions\n+Conform to the ISO 2011 C standard with GNU extensions.\n \n std=gnu1x\n C ObjC Alias(std=gnu11)\n-Deprecated in favor of -std=gnu11\n+Deprecated in favor of -std=gnu11.\n \n std=gnu89\n C ObjC Alias(std=gnu90)\n-Conform to the ISO 1990 C standard with GNU extensions\n+Conform to the ISO 1990 C standard with GNU extensions.\n \n std=gnu90\n C ObjC\n-Conform to the ISO 1990 C standard with GNU extensions\n+Conform to the ISO 1990 C standard with GNU extensions.\n \n std=gnu99\n C ObjC\n-Conform to the ISO 1999 C standard with GNU extensions\n+Conform to the ISO 1999 C standard with GNU extensions.\n \n std=gnu9x\n C ObjC Alias(std=gnu99)\n-Deprecated in favor of -std=gnu99\n+Deprecated in favor of -std=gnu99.\n \n std=iso9899:1990\n C ObjC Alias(std=c90)\n-Conform to the ISO 1990 C standard\n+Conform to the ISO 1990 C standard.\n \n std=iso9899:199409\n C ObjC\n-Conform to the ISO 1990 C standard as amended in 1994\n+Conform to the ISO 1990 C standard as amended in 1994.\n \n std=iso9899:1999\n C ObjC Alias(std=c99)\n-Conform to the ISO 1999 C standard\n+Conform to the ISO 1999 C standard.\n \n std=iso9899:199x\n C ObjC Alias(std=c99)\n-Deprecated in favor of -std=iso9899:1999\n+Deprecated in favor of -std=iso9899:1999.\n \n std=iso9899:2011\n C ObjC Alias(std=c11)\n-Conform to the ISO 2011 C standard\n+Conform to the ISO 2011 C standard.\n \n traditional\n Driver\n \n traditional-cpp\n C ObjC C++ ObjC++\n-Enable traditional preprocessing\n+Enable traditional preprocessing.\n \n trigraphs\n C ObjC C++ ObjC++\n--trigraphs\tSupport ISO C trigraphs\n+-trigraphs\tSupport ISO C trigraphs.\n \n undef\n C ObjC C++ ObjC++ Var(flag_undef)\n-Do not predefine system-specific and GCC-specific macros\n+Do not predefine system-specific and GCC-specific macros.\n \n v\n C ObjC C++ ObjC++"}, {"sha": "12ca0d66b7fd761e5576eca598071a44c7d3bb48", "filename": "gcc/common.opt", "status": "modified", "additions": 399, "deletions": 399, "changes": 798, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -284,11 +284,11 @@ Driver Joined Alias(u)\n \n -help\n Common Driver Var(help_flag)\n-Display this information\n+Display this information.\n \n -help=\n Common Driver Report Joined\n---help=<class>\tDisplay descriptions of a specific class of options.  <class> is one or more of optimizers, target, warnings, undocumented, params\n+--help=<class>\tDisplay descriptions of a specific class of options.  <class> is one or more of optimizers, target, warnings, undocumented, params.\n \n -language\n Driver Separate Alias(x)\n@@ -406,7 +406,7 @@ Driver Alias(symbolic)\n \n -target-help\n Common Driver\n-Alias for --help=target\n+Alias for --help=target.\n \n -time\n Driver Alias(time)\n@@ -431,7 +431,7 @@ Common Driver Alias(-version)\n \n -param\n Common Separate\n---param <param>=<value>\tSet parameter <param> to value.  See below for a complete list of parameters\n+--param <param>=<value>\tSet parameter <param> to value.  See below for a complete list of parameters.\n \n -param=\n Common Joined Alias(-param)\n@@ -459,19 +459,19 @@ Driver\n \n O\n Common JoinedOrMissing Optimization\n--O<number>\tSet optimization level to <number>\n+-O<number>\tSet optimization level to <number>.\n \n Os\n Common Optimization\n-Optimize for space rather than speed\n+Optimize for space rather than speed.\n \n Ofast\n Common Optimization\n-Optimize for speed disregarding exact standards compliance\n+Optimize for speed disregarding exact standards compliance.\n \n Og\n Common Optimization\n-Optimize for debugging experience rather than speed or size\n+Optimize for debugging experience rather than speed or size.\n \n Q\n Driver\n@@ -511,7 +511,7 @@ Driver Joined\n \n W\n Common RejectNegative Warning Alias(Wextra)\n-This switch is deprecated; use -Wextra instead\n+This switch is deprecated; use -Wextra instead.\n \n Wa,\n Driver JoinedOrMissing\n@@ -524,67 +524,67 @@ Driver JoinedOrMissing\n \n Waggregate-return\n Common Var(warn_aggregate_return) Warning\n-Warn about returning structures, unions or arrays\n+Warn about returning structures, unions or arrays.\n \n Waggressive-loop-optimizations\n Common Var(warn_aggressive_loop_optimizations) Init(1) Warning\n-Warn if a loop with constant number of iterations triggers undefined behavior\n+Warn if a loop with constant number of iterations triggers undefined behavior.\n \n Warray-bounds\n Common Var(warn_array_bounds) Warning\n-Warn if an array is accessed out of bounds\n+Warn if an array is accessed out of bounds.\n \n Warray-bounds=\n Common Joined RejectNegative UInteger Var(warn_array_bounds) Warning\n-Warn if an array is accessed out of bounds\n+Warn if an array is accessed out of bounds.\n \n Wattributes\n Common Var(warn_attributes) Init(1) Warning\n-Warn about inappropriate attribute usage\n+Warn about inappropriate attribute usage.\n \n Wcast-align\n Common Var(warn_cast_align) Warning\n-Warn about pointer casts which increase alignment\n+Warn about pointer casts which increase alignment.\n \n Wcpp\n Common Var(warn_cpp) Init(1) Warning\n-Warn when a #warning directive is encountered\n+Warn when a #warning directive is encountered.\n \n Wdeprecated-declarations\n Common Var(warn_deprecated_decl) Init(1) Warning\n-Warn about uses of __attribute__((deprecated)) declarations\n+Warn about uses of __attribute__((deprecated)) declarations.\n \n Wdisabled-optimization\n Common Var(warn_disabled_optimization) Warning\n-Warn when an optimization pass is disabled\n+Warn when an optimization pass is disabled.\n \n Werror\n Common Var(warnings_are_errors)\n-Treat all warnings as errors\n+Treat all warnings as errors.\n \n Werror=\n Common Joined\n-Treat specified warning as error\n+Treat specified warning as error.\n \n Wextra\n Common Var(extra_warnings) Warning\n-Print extra (possibly unwanted) warnings\n+Print extra (possibly unwanted) warnings.\n \n Wfatal-errors\n Common Var(flag_fatal_errors)\n-Exit on the first error occurred\n+Exit on the first error occurred.\n \n Wframe-larger-than=\n Common RejectNegative Joined UInteger\n--Wframe-larger-than=<number>\tWarn if a function's stack frame requires more than <number> bytes\n+-Wframe-larger-than=<number>\tWarn if a function's stack frame requires more than <number> bytes.\n \n Wfree-nonheap-object\n Common Var(warn_free_nonheap_object) Init(1) Warning\n-Warn when attempting to free a non-heap object\n+Warn when attempting to free a non-heap object.\n \n Winline\n Common Var(warn_inline) Warning\n-Warn when an inlined function cannot be inlined\n+Warn when an inlined function cannot be inlined.\n \n Winvalid-memory-model\n Common Var(warn_invalid_memory_model) Init(1) Warning\n@@ -595,11 +595,11 @@ Common RejectNegative Joined Warning Undocumented Alias(Wlarger-than=)\n \n Wlarger-than=\n Common RejectNegative Joined UInteger Warning\n--Wlarger-than=<number>\tWarn if an object is larger than <number> bytes\n+-Wlarger-than=<number>\tWarn if an object is larger than <number> bytes.\n \n Wnull-dereference\n Common Var(warn_null_dereference) Warning\n-Warn if dereferencing a NULL pointer may lead to erroneous or undefined behavior\n+Warn if dereferencing a NULL pointer may lead to erroneous or undefined behavior.\n \n Wunsafe-loop-optimizations\n Common Var(warn_unsafe_loop_optimizations) Warning\n@@ -610,143 +610,143 @@ Common Alias(Wsuggest-attribute=noreturn)\n \n Wodr\n Common Var(warn_odr_violations) Init(1) Warning\n-Warn about some C++ One Definition Rule violations during link time optimization\n+Warn about some C++ One Definition Rule violations during link time optimization.\n \n Woverflow\n Common Var(warn_overflow) Init(1) Warning\n-Warn about overflow in arithmetic expressions\n+Warn about overflow in arithmetic expressions.\n \n Wlto-type-mismatch\n Common Var(warn_lto_type_mismatch) Init(1) Warning\n-During link time optimization warn about mismatched types of global declarations\n+During link time optimization warn about mismatched types of global declarations.\n \n Wpacked\n Common Var(warn_packed) Warning\n-Warn when the packed attribute has no effect on struct layout\n+Warn when the packed attribute has no effect on struct layout.\n \n Wpadded\n Common Var(warn_padded) Warning\n-Warn when padding is required to align structure members\n+Warn when padding is required to align structure members.\n \n Wpedantic\n Common Var(pedantic) Init(0) Warning\n-Issue warnings needed for strict compliance to the standard\n+Issue warnings needed for strict compliance to the standard.\n \n Wreturn-local-addr\n Common Var(warn_return_local_addr) Init(1) Warning\n Warn about returning a pointer/reference to a local or temporary variable.\n \n Wshadow\n Common Var(warn_shadow) Warning\n-Warn when one local variable shadows another\n+Warn when one local variable shadows another.\n \n Wstack-protector\n Common Var(warn_stack_protect) Warning\n-Warn when not issuing stack smashing protection for some reason\n+Warn when not issuing stack smashing protection for some reason.\n \n Wstack-usage=\n Common Joined RejectNegative UInteger Var(warn_stack_usage) Init(-1) Warning\n-Warn if stack usage might be larger than specified amount\n+Warn if stack usage might be larger than specified amount.\n \n Wstrict-aliasing\n Common Warning\n-Warn about code which might break strict aliasing rules\n+Warn about code which might break strict aliasing rules.\n \n Wstrict-aliasing=\n Common Joined RejectNegative UInteger Var(warn_strict_aliasing) Warning\n-Warn about code which might break strict aliasing rules\n+Warn about code which might break strict aliasing rules.\n \n Wstrict-overflow\n Common Warning\n-Warn about optimizations that assume that signed overflow is undefined\n+Warn about optimizations that assume that signed overflow is undefined.\n \n Wstrict-overflow=\n Common Joined RejectNegative UInteger Var(warn_strict_overflow) Warning\n-Warn about optimizations that assume that signed overflow is undefined\n+Warn about optimizations that assume that signed overflow is undefined.\n \n Wsuggest-attribute=const\n Common Var(warn_suggest_attribute_const) Warning\n-Warn about functions which might be candidates for __attribute__((const))\n+Warn about functions which might be candidates for __attribute__((const)).\n \n Wsuggest-attribute=pure\n Common Var(warn_suggest_attribute_pure) Warning\n-Warn about functions which might be candidates for __attribute__((pure))\n+Warn about functions which might be candidates for __attribute__((pure)).\n \n Wsuggest-attribute=noreturn\n Common Var(warn_suggest_attribute_noreturn) Warning\n-Warn about functions which might be candidates for __attribute__((noreturn))\n+Warn about functions which might be candidates for __attribute__((noreturn)).\n \n Wsuggest-final-types\n Common Var(warn_suggest_final_types) Warning\n-Warn about C++ polymorphic types where adding final keyword would improve code quality\n+Warn about C++ polymorphic types where adding final keyword would improve code quality.\n \n Wsuggest-final-methods\n Common Var(warn_suggest_final_methods) Warning\n-Warn about C++ virtual methods where adding final keyword would improve code quality\n+Warn about C++ virtual methods where adding final keyword would improve code quality.\n \n Wsystem-headers\n Common Var(warn_system_headers) Warning\n-Do not suppress warnings from system headers\n+Do not suppress warnings from system headers.\n \n Wtrampolines\n Common Var(warn_trampolines) Warning\n-Warn whenever a trampoline is generated\n+Warn whenever a trampoline is generated.\n \n Wtype-limits\n Common Var(warn_type_limits) Warning EnabledBy(Wextra)\n-Warn if a comparison is always true or always false due to the limited range of the data type\n+Warn if a comparison is always true or always false due to the limited range of the data type.\n \n Wuninitialized\n Common Var(warn_uninitialized) Warning EnabledBy(Wextra)\n-Warn about uninitialized automatic variables\n+Warn about uninitialized automatic variables.\n \n Wmaybe-uninitialized\n Common Var(warn_maybe_uninitialized) Warning EnabledBy(Wuninitialized)\n-Warn about maybe uninitialized automatic variables\n+Warn about maybe uninitialized automatic variables.\n \n Wunreachable-code\n Common Ignore\n Does nothing. Preserved for backward compatibility.\n \n Wunused\n Common Var(warn_unused) Init(0) Warning\n-Enable all -Wunused- warnings\n+Enable all -Wunused- warnings.\n \n Wunused-but-set-parameter\n Common Var(warn_unused_but_set_parameter) Warning EnabledBy(Wunused && Wextra)\n-Warn when a function parameter is only set, otherwise unused\n+Warn when a function parameter is only set, otherwise unused.\n \n Wunused-but-set-variable\n Common Var(warn_unused_but_set_variable) Warning EnabledBy(Wunused)\n-Warn when a variable is only set, otherwise unused\n+Warn when a variable is only set, otherwise unused.\n \n Wunused-function\n Common Var(warn_unused_function) Warning EnabledBy(Wunused)\n-Warn when a function is unused\n+Warn when a function is unused.\n \n Wunused-label\n Common Var(warn_unused_label) Warning EnabledBy(Wunused)\n-Warn when a label is unused\n+Warn when a label is unused.\n \n Wunused-parameter\n Common Var(warn_unused_parameter) Warning EnabledBy(Wunused && Wextra)\n-Warn when a function parameter is unused\n+Warn when a function parameter is unused.\n \n Wunused-value\n Common Var(warn_unused_value) Warning EnabledBy(Wunused)\n-Warn when an expression value is unused\n+Warn when an expression value is unused.\n \n Wunused-variable\n Common Var(warn_unused_variable) Warning EnabledBy(Wunused)\n-Warn when a variable is unused\n+Warn when a variable is unused.\n \n Wcoverage-mismatch\n Common Var(warn_coverage_mismatch) Init(1) Warning\n-Warn in case profiles in -fprofile-use do not match\n+Warn in case profiles in -fprofile-use do not match.\n \n Wvector-operation-performance\n Common Var(warn_vector_operation_performance) Warning\n-Warn when a vector operation is compiled outside the SIMD\n+Warn when a vector operation is compiled outside the SIMD.\n \n Xassembler\n Driver Separate\n@@ -762,7 +762,7 @@ Driver\n \n aux-info\n Common Separate Var(aux_info_file_name)\n--aux-info <file>\tEmit declaration information into <file>\n+-aux-info <file>\tEmit declaration information into <file>.\n \n aux-info=\n Common Joined Alias(aux-info)\n@@ -781,15 +781,15 @@ Driver\n \n d\n Common Joined\n--d<letters>\tEnable dumps from specific passes of the compiler\n+-d<letters>\tEnable dumps from specific passes of the compiler.\n \n dumpbase\n Common Separate Var(dump_base_name)\n--dumpbase <file>\tSet the file basename to be used for dumps\n+-dumpbase <file>\tSet the file basename to be used for dumps.\n \n dumpdir\n Common Separate Var(dump_dir_name)\n--dumpdir <dir>\tSet the directory name to be used for dumps\n+-dumpdir <dir>\tSet the directory name to be used for dumps.\n \n dumpmachine\n Driver\n@@ -858,36 +858,36 @@ Driver Undocumented\n ; the ABI become the default version of the ABI.\n fabi-version=\n Common Joined RejectNegative UInteger Var(flag_abi_version) Init(0)\n-The version of the C++ ABI in use\n+The version of the C++ ABI in use.\n \n faggressive-loop-optimizations\n-Common Report Var(flag_aggressive_loop_optimizations) Optimization Init(1) \n-Aggressively optimize loops using language constraints\n+Common Report Var(flag_aggressive_loop_optimizations) Optimization Init(1)\n+Aggressively optimize loops using language constraints.\n \n falign-functions\n Common Report Var(align_functions,0) Optimization UInteger\n-Align the start of functions\n+Align the start of functions.\n \n falign-functions=\n Common RejectNegative Joined UInteger Var(align_functions)\n \n falign-jumps\n Common Report Var(align_jumps,0) Optimization UInteger\n-Align labels which are only reached by jumping\n+Align labels which are only reached by jumping.\n \n falign-jumps=\n Common RejectNegative Joined UInteger Var(align_jumps)\n \n falign-labels\n Common Report Var(align_labels,0) Optimization UInteger\n-Align all labels\n+Align all labels.\n \n falign-labels=\n Common RejectNegative Joined UInteger Var(align_labels)\n \n falign-loops\n Common Report Var(align_loops,0) Optimization UInteger\n-Align the start of loops\n+Align the start of loops.\n \n falign-loops=\n Common RejectNegative Joined UInteger Var(align_loops)\n@@ -910,7 +910,7 @@ Does nothing. Preserved for backward compatibility.\n \n fsanitize=\n Common Driver Report Joined\n-Select what to sanitize\n+Select what to sanitize.\n \n fasan-shadow-offset=\n Common Joined RejectNegative Var(common_deferred_options) Defer\n@@ -923,23 +923,23 @@ in user-defined sections.\n \n fsanitize-recover=\n Common Report Joined\n-After diagnosing undefined behavior attempt to continue execution\n+After diagnosing undefined behavior attempt to continue execution.\n \n fsanitize-recover\n Common Report\n-This switch is deprecated; use -fsanitize-recover= instead\n+This switch is deprecated; use -fsanitize-recover= instead.\n \n fsanitize-undefined-trap-on-error\n Common Driver Report Var(flag_sanitize_undefined_trap_on_error) Init(0)\n-Use trap instead of a library function for undefined behavior sanitization\n+Use trap instead of a library function for undefined behavior sanitization.\n \n fasynchronous-unwind-tables\n Common Report Var(flag_asynchronous_unwind_tables) Optimization\n-Generate unwind tables that are exact at each instruction boundary\n+Generate unwind tables that are exact at each instruction boundary.\n \n fauto-inc-dec\n Common Report Var(flag_auto_inc_dec) Init(1) Optimization\n-Generate auto-inc/dec instructions\n+Generate auto-inc/dec instructions.\n \n fauto-profile\n Common Report Var(flag_auto_profile)\n@@ -957,118 +957,118 @@ file is specified in the argument.\n ; For Fortran: defaults to off.\n fbounds-check\n Common Report Var(flag_bounds_check)\n-Generate code to check bounds before indexing arrays\n+Generate code to check bounds before indexing arrays.\n \n fbranch-count-reg\n Common Report Var(flag_branch_on_count_reg) Optimization\n-Replace add, compare, branch with branch on count register\n+Replace add, compare, branch with branch on count register.\n \n fbranch-probabilities\n Common Report Var(flag_branch_probabilities) Optimization\n-Use profiling information for branch probabilities\n+Use profiling information for branch probabilities.\n \n fbranch-target-load-optimize\n Common Report Var(flag_branch_target_load_optimize) Optimization\n-Perform branch target load optimization before prologue / epilogue threading\n+Perform branch target load optimization before prologue / epilogue threading.\n \n fbranch-target-load-optimize2\n Common Report Var(flag_branch_target_load_optimize2) Optimization\n-Perform branch target load optimization after prologue / epilogue threading\n+Perform branch target load optimization after prologue / epilogue threading.\n \n fbtr-bb-exclusive\n Common Report Var(flag_btr_bb_exclusive) Optimization\n-Restrict target load migration not to re-use registers in any basic block\n+Restrict target load migration not to re-use registers in any basic block.\n \n fcall-saved-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fcall-saved-<register>\tMark <register> as being preserved across functions\n+-fcall-saved-<register>\tMark <register> as being preserved across functions.\n \n fcall-used-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fcall-used-<register>\tMark <register> as being corrupted by function calls\n+-fcall-used-<register>\tMark <register> as being corrupted by function calls.\n \n ; Nonzero for -fcaller-saves: allocate values in regs that need to\n ; be saved across function calls, if that produces overall better code.\n ; Optional now, so people can test it.\n fcaller-saves\n Common Report Var(flag_caller_saves) Optimization\n-Save registers around function calls\n+Save registers around function calls.\n \n fcheck-data-deps\n Common Report Var(flag_check_data_deps)\n This switch is deprecated; do not use.\n \n fcheck-new\n Common Var(flag_check_new)\n-Check the return value of new in C++\n+Check the return value of new in C++.\n \n fcombine-stack-adjustments\n Common Report Var(flag_combine_stack_adjustments) Optimization\n Looks for opportunities to reduce stack adjustments and stack references.\n \n fcommon\n Common Report Var(flag_no_common,0)\n-Do not put uninitialized globals in the common section\n+Do not put uninitialized globals in the common section.\n \n fcompare-debug\n Driver\n ; Converted by the driver to -fcompare-debug= options.\n \n fcompare-debug=\n Common Driver JoinedOrMissing RejectNegative Var(flag_compare_debug_opt)\n--fcompare-debug[=<opts>]\tCompile with and without e.g. -gtoggle, and compare the final-insns dump\n+-fcompare-debug[=<opts>]\tCompile with and without e.g. -gtoggle, and compare the final-insns dump.\n \n fcompare-debug-second\n Common Driver RejectNegative Var(flag_compare_debug)\n-Run only the second compilation of -fcompare-debug\n+Run only the second compilation of -fcompare-debug.\n \n fcompare-elim\n Common Report Var(flag_compare_elim_after_reload) Optimization\n-Perform comparison elimination after register allocation has finished\n+Perform comparison elimination after register allocation has finished.\n \n fconserve-stack\n Common Var(flag_conserve_stack) Optimization\n-Do not perform optimizations increasing noticeably stack usage\n+Do not perform optimizations increasing noticeably stack usage.\n \n fcprop-registers\n Common Report Var(flag_cprop_registers) Optimization\n-Perform a register copy-propagation optimization pass\n+Perform a register copy-propagation optimization pass.\n \n fcrossjumping\n Common Report Var(flag_crossjumping) Optimization\n-Perform cross-jumping optimization\n+Perform cross-jumping optimization.\n \n fcse-follow-jumps\n Common Report Var(flag_cse_follow_jumps) Optimization\n-When running CSE, follow jumps to their targets\n+When running CSE, follow jumps to their targets.\n \n fcse-skip-blocks\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n fcx-limited-range\n Common Report Var(flag_cx_limited_range) Optimization SetByCombined\n-Omit range reduction step when performing complex division\n+Omit range reduction step when performing complex division.\n \n fcx-fortran-rules\n Common Report Var(flag_cx_fortran_rules) Optimization\n-Complex multiplication and division follow Fortran rules\n+Complex multiplication and division follow Fortran rules.\n \n fdata-sections\n Common Report Var(flag_data_sections)\n-Place data items into their own section\n+Place data items into their own section.\n \n fdbg-cnt-list\n Common Report Var(common_deferred_options) Defer\n List all available debugging counters with their limits and counts.\n \n fdbg-cnt=\n Common RejectNegative Joined Var(common_deferred_options) Defer\n--fdbg-cnt=<counter>:<limit>[,<counter>:<limit>,...]\tSet the debug counter limit.   \n+-fdbg-cnt=<counter>:<limit>[,<counter>:<limit>,...]\tSet the debug counter limit.\n \n fdebug-prefix-map=\n Common Joined RejectNegative Var(common_deferred_options) Defer\n-Map one directory name to another in debug information\n+Map one directory name to another in debug information.\n \n fdebug-types-section\n Common Report Var(flag_debug_types_section) Init(0)\n@@ -1078,35 +1078,35 @@ Output .debug_types section when using DWARF v4 debuginfo.\n ; instead save them up to pop many calls' args with one insns.\n fdefer-pop\n Common Report Var(flag_defer_pop) Optimization\n-Defer popping functions args from stack until later\n+Defer popping functions args from stack until later.\n \n fdelayed-branch\n Common Report Var(flag_delayed_branch) Optimization\n-Attempt to fill delay slots of branch instructions\n+Attempt to fill delay slots of branch instructions.\n \n fdelete-dead-exceptions\n Common Report Var(flag_delete_dead_exceptions) Init(0) Optimization\n-Delete dead instructions that may throw exceptions\n+Delete dead instructions that may throw exceptions.\n \n fdelete-null-pointer-checks\n Common Report Var(flag_delete_null_pointer_checks) Init(-1) Optimization\n-Delete useless null pointer checks\n+Delete useless null pointer checks.\n \n fdevirtualize-at-ltrans\n Common Report Var(flag_ltrans_devirtualize)\n-Stream extra data to support more aggressive devirtualization in LTO local transformation mode\n+Stream extra data to support more aggressive devirtualization in LTO local transformation mode.\n \n fdevirtualize-speculatively\n Common Report Var(flag_devirtualize_speculatively) Optimization\n-Perform speculative devirtualization\n+Perform speculative devirtualization.\n \n fdevirtualize\n Common Report Var(flag_devirtualize) Optimization\n Try to convert virtual calls to direct ones.\n \n fdiagnostics-show-location=\n Common Joined RejectNegative Enum(diagnostic_prefixing_rule)\n--fdiagnostics-show-location=[once|every-line]\tHow often to emit source location at the beginning of line-wrapped diagnostics\n+-fdiagnostics-show-location=[once|every-line]\tHow often to emit source location at the beginning of line-wrapped diagnostics.\n \n ; Required for these enum values.\n SourceInclude\n@@ -1123,15 +1123,15 @@ Enum(diagnostic_prefixing_rule) String(every-line) Value(DIAGNOSTICS_SHOW_PREFIX\n \n fdiagnostics-show-caret\n Common Var(flag_diagnostics_show_caret) Init(1)\n-Show the source line with a caret indicating the column\n+Show the source line with a caret indicating the column.\n \n fdiagnostics-color\n Common Alias(fdiagnostics-color=,always,never)\n ;\n \n fdiagnostics-color=\n Driver Common Joined RejectNegative Var(flag_diagnostics_show_color) Enum(diagnostic_color_rule) Init(DIAGNOSTICS_COLOR_NO)\n--fdiagnostics-color=[never|always|auto]\tColorize diagnostics\n+-fdiagnostics-color=[never|always|auto]\tColorize diagnostics.\n \n ; Required for these enum values.\n SourceInclude\n@@ -1151,34 +1151,34 @@ Enum(diagnostic_color_rule) String(auto) Value(DIAGNOSTICS_COLOR_AUTO)\n \n fdiagnostics-show-option\n Common Var(flag_diagnostics_show_option) Init(1)\n-Amend appropriate diagnostic messages with the command line option that controls them\n+Amend appropriate diagnostic messages with the command line option that controls them.\n \n fdisable-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fdisable-[tree|rtl|ipa]-<pass>=range1+range2 disables an optimization pass\n+-fdisable-[tree|rtl|ipa]-<pass>=range1+range2 disables an optimization pass.\n \n fenable-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fenable-[tree|rtl|ipa]-<pass>=range1+range2 enables an optimization pass\n+-fenable-[tree|rtl|ipa]-<pass>=range1+range2 enables an optimization pass.\n \n fdump-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fdump-<type>\tDump various compiler internals to a file\n+-fdump-<type>\tDump various compiler internals to a file.\n \n fdump-final-insns\n Driver RejectNegative\n \n fdump-final-insns=\n Common RejectNegative Joined Var(flag_dump_final_insns)\n--fdump-final-insns=filename\tDump to filename the insns at the end of translation\n+-fdump-final-insns=filename\tDump to filename the insns at the end of translation.\n \n fdump-go-spec=\n Common RejectNegative Joined Var(flag_dump_go_spec)\n--fdump-go-spec=filename\tWrite all declarations to file as Go code\n+-fdump-go-spec=filename\tWrite all declarations to file as Go code.\n \n fdump-noaddr\n Common Report Var(flag_dump_noaddr)\n-Suppress output of addresses in debugging dumps\n+Suppress output of addresses in debugging dumps.\n \n freport-bug\n Common Driver Var(flag_report_bug)\n@@ -1187,59 +1187,59 @@ compiler occured.\n \n fdump-internal-locations\n Common Var(flag_dump_locations) Init(0)\n-Dump detailed information on GCC's internal representation of source code locations\n+Dump detailed information on GCC's internal representation of source code locations.\n \n fdump-passes\n Common Var(flag_dump_passes) Init(0)\n-Dump optimization passes\n+Dump optimization passes.\n \n fdump-unnumbered\n Common Report Var(flag_dump_unnumbered)\n-Suppress output of instruction numbers, line number notes and addresses in debugging dumps\n+Suppress output of instruction numbers, line number notes and addresses in debugging dumps.\n \n fdump-unnumbered-links\n Common Report Var(flag_dump_unnumbered_links)\n-Suppress output of previous and next insn numbers in debugging dumps\n+Suppress output of previous and next insn numbers in debugging dumps.\n \n fdwarf2-cfi-asm\n Common Report Var(flag_dwarf2_cfi_asm) Init(HAVE_GAS_CFI_DIRECTIVE)\n Enable CFI tables via GAS assembler directives.\n \n fearly-inlining\n Common Report Var(flag_early_inlining) Init(1) Optimization\n-Perform early inlining\n+Perform early inlining.\n \n feliminate-dwarf2-dups\n Common Report Var(flag_eliminate_dwarf2_dups)\n-Perform DWARF2 duplicate elimination\n+Perform DWARF2 duplicate elimination.\n \n fipa-sra\n Common Report Var(flag_ipa_sra) Init(0) Optimization\n-Perform interprocedural reduction of aggregates\n+Perform interprocedural reduction of aggregates.\n \n feliminate-unused-debug-symbols\n Common Report Var(flag_debug_only_used_symbols)\n-Perform unused symbol elimination in debug info\n+Perform unused symbol elimination in debug info.\n \n feliminate-unused-debug-types\n Common Report Var(flag_eliminate_unused_debug_types) Init(1)\n-Perform unused type elimination in debug info\n+Perform unused type elimination in debug info.\n \n femit-class-debug-always\n Common Report Var(flag_emit_class_debug_always) Init(0)\n Do not suppress C++ class debug information.\n \n fexceptions\n Common Report Var(flag_exceptions) Optimization\n-Enable exception handling\n+Enable exception handling.\n \n fexpensive-optimizations\n Common Report Var(flag_expensive_optimizations) Optimization\n-Perform a number of minor, expensive optimizations\n+Perform a number of minor, expensive optimizations.\n \n fexcess-precision=\n Common Joined RejectNegative Enum(excess_precision) Var(flag_excess_precision_cmdline) Init(EXCESS_PRECISION_DEFAULT)\n--fexcess-precision=[fast|standard]\tSpecify handling of excess floating-point precision\n+-fexcess-precision=[fast|standard]\tSpecify handling of excess floating-point precision.\n \n Enum\n Name(excess_precision) Type(enum excess_precision) UnknownError(unknown excess precision style %qs)\n@@ -1259,23 +1259,23 @@ Output lto objects containing both the intermediate language and binary output.\n \n ffinite-math-only\n Common Report Var(flag_finite_math_only) Optimization SetByCombined\n-Assume no NaNs or infinities are generated\n+Assume no NaNs or infinities are generated.\n \n ffixed-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--ffixed-<register>\tMark <register> as being unavailable to the compiler\n+-ffixed-<register>\tMark <register> as being unavailable to the compiler.\n \n ffloat-store\n Common Report Var(flag_float_store) Optimization\n-Don't allocate floats and doubles in extended-precision registers\n+Don't allocate floats and doubles in extended-precision registers.\n \n fforce-addr\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n fforward-propagate\n Common Report Var(flag_forward_propagate) Optimization\n-Perform a forward propagation pass on RTL\n+Perform a forward propagation pass on RTL.\n \n ffp-contract=\n Common Joined RejectNegative Enum(fp_contract_mode) Var(flag_fp_contract_mode) Init(FP_CONTRACT_FAST) Optimization\n@@ -1299,107 +1299,107 @@ Enum(fp_contract_mode) String(fast) Value(FP_CONTRACT_FAST)\n ; done on the assembly output.\n ffunction-cse\n Common Report Var(flag_no_function_cse,0) Optimization\n-Allow function addresses to be held in registers\n+Allow function addresses to be held in registers.\n \n ffunction-sections\n Common Report Var(flag_function_sections)\n-Place each function into its own section\n+Place each function into its own section.\n \n fgcse\n Common Report Var(flag_gcse) Optimization\n-Perform global common subexpression elimination\n+Perform global common subexpression elimination.\n \n fgcse-lm\n Common Report Var(flag_gcse_lm) Init(1) Optimization\n-Perform enhanced load motion during global common subexpression elimination\n+Perform enhanced load motion during global common subexpression elimination.\n \n fgcse-sm\n Common Report Var(flag_gcse_sm) Init(0) Optimization\n-Perform store motion after global common subexpression elimination\n+Perform store motion after global common subexpression elimination.\n \n fgcse-las\n Common Report Var(flag_gcse_las) Init(0) Optimization\n Perform redundant load after store elimination in global common subexpression\n-elimination\n+elimination.\n \n fgcse-after-reload\n Common Report Var(flag_gcse_after_reload) Optimization\n-Perform global common subexpression elimination after register allocation\n-has finished\n+Perform global common subexpression elimination after register allocation has\n+finished.\n \n ; This option is not documented yet as its semantics will change.\n fgraphite\n Common Report Var(flag_graphite) Optimization\n-Enable in and out of Graphite representation\n+Enable in and out of Graphite representation.\n \n fgraphite-identity\n Common Report Var(flag_graphite_identity) Optimization\n-Enable Graphite Identity transformation\n+Enable Graphite Identity transformation.\n \n fhoist-adjacent-loads\n Common Report Var(flag_hoist_adjacent_loads) Optimization\n Enable hoisting adjacent loads to encourage generating conditional move\n-instructions\n+instructions.\n \n floop-parallelize-all\n Common Report Var(flag_loop_parallelize_all) Optimization\n-Mark all loops as parallel\n+Mark all loops as parallel.\n \n floop-strip-mine\n Common Alias(floop-nest-optimize)\n-Enable loop nest transforms.  Same as -floop-nest-optimize\n+Enable loop nest transforms.  Same as -floop-nest-optimize.\n \n floop-interchange\n Common Alias(floop-nest-optimize)\n-Enable loop nest transforms.  Same as -floop-nest-optimize\n+Enable loop nest transforms.  Same as -floop-nest-optimize.\n \n floop-block\n Common Alias(floop-nest-optimize)\n-Enable loop nest transforms.  Same as -floop-nest-optimize\n+Enable loop nest transforms.  Same as -floop-nest-optimize.\n \n floop-unroll-and-jam\n Common Alias(floop-nest-optimize)\n-Enable loop nest transforms.  Same as -floop-nest-optimize\n- \n+Enable loop nest transforms.  Same as -floop-nest-optimize.\n+\n fgnu-tm\n Common Report Var(flag_tm)\n-Enable support for GNU transactional memory\n+Enable support for GNU transactional memory.\n \n fgnu-unique\n Common Report Var(flag_gnu_unique) Init(1)\n-Use STB_GNU_UNIQUE if supported by the assembler\n+Use STB_GNU_UNIQUE if supported by the assembler.\n \n floop-flatten\n Common Ignore\n Does nothing. Preserved for backward compatibility.\n \n floop-nest-optimize\n Common Report Var(flag_loop_optimize_isl) Optimization\n-Enable the ISL based loop nest optimizer\n+Enable the ISL based loop nest optimizer.\n \n fstrict-volatile-bitfields\n Common Report Var(flag_strict_volatile_bitfields) Init(-1) Optimization\n-Force bitfield accesses to match their type width\n+Force bitfield accesses to match their type width.\n \n fguess-branch-probability\n Common Report Var(flag_guess_branch_prob) Optimization\n-Enable guessing of branch probabilities\n+Enable guessing of branch probabilities.\n \n ; Nonzero means ignore `#ident' directives.  0 means handle them.\n ; Generate position-independent code for executables if possible\n ; On SVR4 targets, it also controls whether or not to emit a\n ; string identifying the compiler.\n fident\n Common Report Var(flag_no_ident,0)\n-Process #ident directives\n+Process #ident directives.\n \n fif-conversion\n Common Report Var(flag_if_conversion) Optimization\n-Perform conversion of conditional jumps to branchless equivalents\n+Perform conversion of conditional jumps to branchless equivalents.\n \n fif-conversion2\n Common Report Var(flag_if_conversion2) Optimization\n-Perform conversion of conditional jumps to conditional execution\n+Perform conversion of conditional jumps to conditional execution.\n \n fstack-reuse=\n Common Joined RejectNegative Enum(stack_reuse_level) Var(flag_stack_reuse) Init(SR_ALL) Optimization\n@@ -1419,104 +1419,104 @@ Enum(stack_reuse_level) String(none) Value(SR_NONE)\n \n ftree-loop-if-convert\n Common Report Var(flag_tree_loop_if_convert) Init(-1) Optimization\n-Convert conditional jumps in innermost loops to branchless equivalents\n+Convert conditional jumps in innermost loops to branchless equivalents.\n \n ftree-loop-if-convert-stores\n Common Report Var(flag_tree_loop_if_convert_stores) Optimization\n-Also if-convert conditional jumps containing memory writes\n+Also if-convert conditional jumps containing memory writes.\n \n ; -finhibit-size-directive inhibits output of .size for ELF.\n ; This is used only for compiling crtstuff.c,\n ; and it may be extended to other effects\n ; needed for crtstuff.c on other systems.\n finhibit-size-directive\n Common Report Var(flag_inhibit_size_directive)\n-Do not generate .size directives\n+Do not generate .size directives.\n \n findirect-inlining\n Common Report Var(flag_indirect_inlining) Optimization\n-Perform indirect inlining\n+Perform indirect inlining.\n \n ; General flag to enable inlining.  Specifying -fno-inline will disable\n ; all inlining apart from always-inline functions.\n finline\n Common Report Var(flag_no_inline,0) Init(0) Optimization\n-Enable inlining of function declared \\\"inline\\\", disabling disables all inlining\n+Enable inlining of function declared \\\"inline\\\", disabling disables all inlining.\n \n finline-small-functions\n Common Report Var(flag_inline_small_functions) Optimization\n-Integrate functions into their callers when code size is known not to grow\n+Integrate functions into their callers when code size is known not to grow.\n \n finline-functions\n Common Report Var(flag_inline_functions) Optimization\n-Integrate functions not declared \\\"inline\\\" into their callers when profitable\n+Integrate functions not declared \\\"inline\\\" into their callers when profitable.\n \n finline-functions-called-once\n Common Report Var(flag_inline_functions_called_once) Optimization\n-Integrate functions only required by their single caller\n+Integrate functions only required by their single caller.\n \n finline-limit-\n Common RejectNegative Joined Alias(finline-limit=)\n \n finline-limit=\n Common RejectNegative Joined UInteger\n--finline-limit=<number>\tLimit the size of inlined functions to <number>\n+-finline-limit=<number>\tLimit the size of inlined functions to <number>.\n \n finline-atomics\n Common Report Var(flag_inline_atomics) Init(1) Optimization\n Inline __atomic operations when a lock free instruction sequence is available.\n \n finstrument-functions\n Common Report Var(flag_instrument_function_entry_exit)\n-Instrument function entry and exit with profiling calls\n+Instrument function entry and exit with profiling calls.\n \n finstrument-functions-exclude-function-list=\n Common RejectNegative Joined\n--finstrument-functions-exclude-function-list=name,...  Do not instrument listed functions\n+-finstrument-functions-exclude-function-list=name,...  Do not instrument listed functions.\n \n finstrument-functions-exclude-file-list=\n Common RejectNegative Joined\n--finstrument-functions-exclude-file-list=filename,...  Do not instrument functions listed in files\n+-finstrument-functions-exclude-file-list=filename,...  Do not instrument functions listed in files.\n \n fipa-cp\n Common Report Var(flag_ipa_cp) Optimization\n-Perform interprocedural constant propagation\n+Perform interprocedural constant propagation.\n \n fipa-cp-clone\n Common Report Var(flag_ipa_cp_clone) Optimization\n-Perform cloning to make Interprocedural constant propagation stronger\n+Perform cloning to make Interprocedural constant propagation stronger.\n \n fipa-cp-alignment\n Common Report Var(flag_ipa_cp_alignment) Optimization\n-Perform alignment discovery and propagation to make Interprocedural constant propagation stronger\n+Perform alignment discovery and propagation to make Interprocedural constant propagation stronger.\n \n fipa-profile\n Common Report Var(flag_ipa_profile) Init(0) Optimization\n-Perform interprocedural profile propagation\n+Perform interprocedural profile propagation.\n \n fipa-pta\n Common Report Var(flag_ipa_pta) Init(0) Optimization\n-Perform interprocedural points-to analysis\n+Perform interprocedural points-to analysis.\n \n fipa-pure-const\n Common Report Var(flag_ipa_pure_const) Init(0) Optimization\n-Discover pure and const functions\n+Discover pure and const functions.\n \n fipa-icf\n Common Report Var(flag_ipa_icf) Optimization\n-Perform Identical Code Folding for functions and read-only variables\n+Perform Identical Code Folding for functions and read-only variables.\n \n fipa-icf-functions\n Common Report Var(flag_ipa_icf_functions) Optimization\n-Perform Identical Code Folding for functions\n+Perform Identical Code Folding for functions.\n \n fipa-icf-variables\n Common Report Var(flag_ipa_icf_variables)\n-Perform Identical Code Folding for variables\n+Perform Identical Code Folding for variables.\n \n fipa-reference\n Common Report Var(flag_ipa_reference) Init(0) Optimization\n-Discover readonly and non addressable static variables\n+Discover readonly and non addressable static variables.\n \n fipa-matrix-reorg\n Common Ignore\n@@ -1528,7 +1528,7 @@ Does nothing. Preserved for backward compatibility.\n \n fira-algorithm=\n Common Joined RejectNegative Enum(ira_algorithm) Var(flag_ira_algorithm) Init(IRA_ALGORITHM_CB) Optimization\n--fira-algorithm=[CB|priority] Set the used IRA algorithm\n+-fira-algorithm=[CB|priority] Set the used IRA algorithm.\n \n Enum\n Name(ira_algorithm) Type(enum ira_algorithm) UnknownError(unknown IRA algorithm %qs)\n@@ -1541,7 +1541,7 @@ Enum(ira_algorithm) String(priority) Value(IRA_ALGORITHM_PRIORITY)\n \n fira-region=\n Common Joined RejectNegative Enum(ira_region) Var(flag_ira_region) Init(IRA_REGION_AUTODETECT) Optimization\n--fira-region=[one|all|mixed] Set regions for IRA\n+-fira-region=[one|all|mixed] Set regions for IRA.\n \n Enum\n Name(ira_region) Type(enum ira_region) UnknownError(unknown IRA region %qs)\n@@ -1579,35 +1579,35 @@ Common RejectNegative Joined UInteger Var(flag_ira_verbose) Init(5)\n \n fivopts\n Common Report Var(flag_ivopts) Init(1) Optimization\n-Optimize induction variables on trees\n+Optimize induction variables on trees.\n \n fjump-tables\n Common Var(flag_jump_tables) Init(1) Optimization\n-Use jump tables for sufficiently large switch statements\n+Use jump tables for sufficiently large switch statements.\n \n fkeep-inline-functions\n Common Report Var(flag_keep_inline_functions)\n-Generate code for functions even if they are fully inlined\n+Generate code for functions even if they are fully inlined.\n \n fkeep-static-functions\n Common Report Var(flag_keep_static_functions)\n-Generate code for static functions even if they are never called \n+Generate code for static functions even if they are never called.\n \n fkeep-static-consts\n Common Report Var(flag_keep_static_consts) Init(1)\n-Emit static const variables even if they are not used\n+Emit static const variables even if they are not used.\n \n fleading-underscore\n Common Report Var(flag_leading_underscore) Init(-1)\n-Give external symbols a leading underscore\n+Give external symbols a leading underscore.\n \n floop-optimize\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n flra-remat\n Common Report Var(flag_lra_remat) Optimization\n-Do CFG-sensitive rematerialization in LRA\n+Do CFG-sensitive rematerialization in LRA.\n \n flto\n Common\n@@ -1637,95 +1637,95 @@ Enum(lto_partition_model) String(max) Value(LTO_PARTITION_MAX)\n \n flto-partition=\n Common Joined RejectNegative Enum(lto_partition_model) Var(flag_lto_partition) Init(LTO_PARTITION_BALANCED)\n-Specify the algorithm to partition symbols and vars at linktime\n+Specify the algorithm to partition symbols and vars at linktime.\n \n ; The initial value of -1 comes from Z_DEFAULT_COMPRESSION in zlib.h.\n flto-compression-level=\n Common Joined RejectNegative UInteger Var(flag_lto_compression_level) Init(-1)\n--flto-compression-level=<number>\tUse zlib compression level <number> for IL\n+-flto-compression-level=<number>\tUse zlib compression level <number> for IL.\n \n flto-odr-type-merging\n Common Report Var(flag_lto_odr_type_mering) Init(1)\n-Merge C++ types using One Definition Rule\n+Merge C++ types using One Definition Rule.\n \n flto-report\n Common Report Var(flag_lto_report) Init(0)\n-Report various link-time optimization statistics\n+Report various link-time optimization statistics.\n \n flto-report-wpa\n Common Report Var(flag_lto_report_wpa) Init(0)\n-Report various link-time optimization statistics for WPA only\n+Report various link-time optimization statistics for WPA only.\n \n fmath-errno\n Common Report Var(flag_errno_math) Init(1) Optimization SetByCombined\n-Set errno after built-in math functions\n+Set errno after built-in math functions.\n \n fmax-errors=\n Common Joined RejectNegative UInteger Var(flag_max_errors)\n--fmax-errors=<number>\tMaximum number of errors to report\n+-fmax-errors=<number>\tMaximum number of errors to report.\n \n fmem-report\n Common Report Var(mem_report)\n-Report on permanent memory allocation\n+Report on permanent memory allocation.\n \n fmem-report-wpa\n Common Report Var(mem_report_wpa)\n-Report on permanent memory allocation in WPA only\n+Report on permanent memory allocation in WPA only.\n \n ; This will attempt to merge constant section constants, if 1 only\n ; string constants and constants from constant pool, if 2 also constant\n ; variables.\n fmerge-all-constants\n Common Report Var(flag_merge_constants,2) Init(1)\n-Attempt to merge identical constants and constant variables\n+Attempt to merge identical constants and constant variables.\n \n fmerge-constants\n Common Report Var(flag_merge_constants,1)\n-Attempt to merge identical constants across compilation units\n+Attempt to merge identical constants across compilation units.\n \n fmerge-debug-strings\n Common Report Var(flag_merge_debug_strings) Init(1)\n-Attempt to merge identical debug strings across compilation units\n+Attempt to merge identical debug strings across compilation units.\n \n fmessage-length=\n Common RejectNegative Joined UInteger\n--fmessage-length=<number>\tLimit diagnostics to <number> characters per line.  0 suppresses line-wrapping\n+-fmessage-length=<number>\tLimit diagnostics to <number> characters per line.  0 suppresses line-wrapping.\n \n fmodulo-sched\n Common Report Var(flag_modulo_sched) Optimization\n-Perform SMS based modulo scheduling before the first scheduling pass\n+Perform SMS based modulo scheduling before the first scheduling pass.\n \n fmodulo-sched-allow-regmoves\n Common Report Var(flag_modulo_sched_allow_regmoves) Optimization\n-Perform SMS based modulo scheduling with register moves allowed\n+Perform SMS based modulo scheduling with register moves allowed.\n \n fmove-loop-invariants\n Common Report Var(flag_move_loop_invariants) Optimization\n-Move loop invariant computations out of loops\n+Move loop invariant computations out of loops.\n \n fdce\n Common Var(flag_dce) Init(1) Optimization\n-Use the RTL dead code elimination pass\n+Use the RTL dead code elimination pass.\n \n fdse\n Common Var(flag_dse) Init(1) Optimization\n-Use the RTL dead store elimination pass\n+Use the RTL dead store elimination pass.\n \n freschedule-modulo-scheduled-loops\n Common Report Var(flag_resched_modulo_sched) Optimization\n-Enable/Disable the traditional scheduling in loops that already passed modulo scheduling\n+Enable/Disable the traditional scheduling in loops that already passed modulo scheduling.\n \n fnon-call-exceptions\n Common Report Var(flag_non_call_exceptions) Optimization\n-Support synchronous non-call exceptions\n+Support synchronous non-call exceptions.\n \n foffload=\n Common Driver Joined MissingArgError(options or targets missing after %qs)\n--foffload=<targets>=<options>  Specify offloading targets and options for them\n+-foffload=<targets>=<options>  Specify offloading targets and options for them.\n \n foffload-abi=\n Common Joined RejectNegative Enum(offload_abi) Var(flag_offload_abi) Init(OFFLOAD_ABI_UNSET)\n--foffload-abi=[lp64|ilp32]     Set the ABI to use in an offload compiler\n+-foffload-abi=[lp64|ilp32]     Set the ABI to use in an offload compiler.\n \n Enum\n Name(offload_abi) Type(enum offload_abi) UnknownError(unknown offload ABI %qs)\n@@ -1738,103 +1738,103 @@ Enum(offload_abi) String(lp64) Value(OFFLOAD_ABI_LP64)\n \n fomit-frame-pointer\n Common Report Var(flag_omit_frame_pointer) Optimization\n-When possible do not generate stack frames\n+When possible do not generate stack frames.\n \n fopt-info\n Common Report Var(flag_opt_info) Optimization\n-Enable all optimization info dumps on stderr\n+Enable all optimization info dumps on stderr.\n \n fopt-info-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fopt-info[-<type>=filename]\tDump compiler optimization details\n+-fopt-info[-<type>=filename]\tDump compiler optimization details.\n \n foptimize-register-move\n Common Ignore\n Does nothing. Preserved for backward compatibility.\n \n foptimize-sibling-calls\n Common Report Var(flag_optimize_sibling_calls) Optimization\n-Optimize sibling and tail recursive calls\n+Optimize sibling and tail recursive calls.\n \n fpartial-inlining\n Common Report Var(flag_partial_inlining) Optimization\n-Perform partial inlining\n+Perform partial inlining.\n \n fpre-ipa-mem-report\n Common Report Var(pre_ipa_mem_report)\n-Report on memory allocation before interprocedural optimization\n+Report on memory allocation before interprocedural optimization.\n \n fpost-ipa-mem-report\n Common Report Var(post_ipa_mem_report)\n-Report on memory allocation before interprocedural optimization\n+Report on memory allocation before interprocedural optimization.\n \n fpack-struct\n Common Report Var(flag_pack_struct) Optimization\n-Pack structure members together without holes\n+Pack structure members together without holes.\n \n fpack-struct=\n Common RejectNegative Joined UInteger Optimization\n--fpack-struct=<number>\tSet initial maximum structure member alignment\n+-fpack-struct=<number>\tSet initial maximum structure member alignment.\n \n fpcc-struct-return\n Common Report Var(flag_pcc_struct_return,1) Init(DEFAULT_PCC_STRUCT_RETURN)\n-Return small aggregates in memory, not registers\n+Return small aggregates in memory, not registers.\n \n fpeel-loops\n Common Report Var(flag_peel_loops) Optimization\n-Perform loop peeling\n+Perform loop peeling.\n \n fpeephole\n Common Report Var(flag_no_peephole,0) Optimization\n-Enable machine specific peephole optimizations\n+Enable machine specific peephole optimizations.\n \n fpeephole2\n Common Report Var(flag_peephole2) Optimization\n-Enable an RTL peephole pass before sched2\n+Enable an RTL peephole pass before sched2.\n \n fPIC\n Common Report Var(flag_pic,2) Negative(fPIE)\n-Generate position-independent code if possible (large mode)\n+Generate position-independent code if possible (large mode).\n \n fPIE\n Common Report Var(flag_pie,2) Negative(fpic) Init(-1)\n-Generate position-independent code for executables if possible (large mode)\n+Generate position-independent code for executables if possible (large mode).\n \n fpic\n Common Report Var(flag_pic,1) Negative(fpie)\n-Generate position-independent code if possible (small mode)\n+Generate position-independent code if possible (small mode).\n \n fpie\n Common Report Var(flag_pie,1) Negative(fPIC) Init(-1)\n-Generate position-independent code for executables if possible (small mode)\n+Generate position-independent code for executables if possible (small mode).\n \n fplt\n Common Report Var(flag_plt) Init(1) Optimization\n-Use PLT for PIC calls (-fno-plt: load the address from GOT at call site)\n+Use PLT for PIC calls (-fno-plt: load the address from GOT at call site).\n \n fplugin=\n Common Joined RejectNegative Var(common_deferred_options) Defer\n-Specify a plugin to load\n+Specify a plugin to load.\n \n fplugin-arg-\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--fplugin-arg-<name>-<key>[=<value>]\tSpecify argument <key>=<value> for plugin <name>\n+-fplugin-arg-<name>-<key>[=<value>]\tSpecify argument <key>=<value> for plugin <name>.\n \n fpredictive-commoning\n Common Report Var(flag_predictive_commoning) Optimization\n Run predictive commoning optimization.\n \n fprefetch-loop-arrays\n Common Report Var(flag_prefetch_loop_arrays) Init(-1) Optimization\n-Generate prefetch instructions, if available, for arrays in loops\n+Generate prefetch instructions, if available, for arrays in loops.\n \n fprofile\n Common Report Var(profile_flag)\n-Enable basic program profiling code\n+Enable basic program profiling code.\n \n fprofile-arcs\n Common Report Var(profile_arc_flag)\n-Insert arc-based program profiling code\n+Insert arc-based program profiling code.\n \n fprofile-dir=\n Common Joined RejectNegative Var(profile_data_prefix)\n@@ -1843,42 +1843,42 @@ The default is 'pwd'.\n \n fprofile-correction\n Common Report Var(flag_profile_correction)\n-Enable correction of flow inconsistent profile data input\n+Enable correction of flow inconsistent profile data input.\n \n fprofile-generate\n Common\n-Enable common options for generating profile info for profile feedback directed optimizations\n+Enable common options for generating profile info for profile feedback directed optimizations.\n \n fprofile-generate=\n Common Joined RejectNegative\n-Enable common options for generating profile info for profile feedback directed optimizations, and set -fprofile-dir=\n+Enable common options for generating profile info for profile feedback directed optimizations, and set -fprofile-dir=.\n \n fprofile-use\n Common Var(flag_profile_use)\n-Enable common options for performing profile feedback directed optimizations\n+Enable common options for performing profile feedback directed optimizations.\n \n fprofile-use=\n Common Joined RejectNegative\n-Enable common options for performing profile feedback directed optimizations, and set -fprofile-dir=\n+Enable common options for performing profile feedback directed optimizations, and set -fprofile-dir=.\n \n fprofile-values\n Common Report Var(flag_profile_values)\n-Insert code to profile values of expressions\n+Insert code to profile values of expressions.\n \n fprofile-report\n Common Report Var(profile_report)\n-Report on consistency of profile\n+Report on consistency of profile.\n \n fprofile-reorder-functions\n Common Report Var(flag_profile_reorder_functions)\n-Enable function reordering that improves code placement\n+Enable function reordering that improves code placement.\n \n frandom-seed\n Common Var(common_deferred_options) Defer\n \n frandom-seed=\n Common Joined RejectNegative Var(common_deferred_options) Defer\n--frandom-seed=<number>\tMake compile reproducible using <number>\n+-frandom-seed=<number>\tMake compile reproducible using <number>.\n \n ; This switch causes the command line that was used to create an\n ; object file to be recorded into the object file.  The exact format\n@@ -1892,7 +1892,7 @@ Record gcc command line switches in the object file.\n \n freg-struct-return\n Common Report Var(flag_pcc_struct_return,0) Optimization\n-Return small aggregates in registers\n+Return small aggregates in registers.\n \n fregmove\n Common Ignore\n@@ -1905,23 +1905,23 @@ starts and when the destructor finishes.\n \n flive-range-shrinkage\n Common Report Var(flag_live_range_shrinkage) Init(0) Optimization\n-Relief of register pressure through live range shrinkage\n+Relief of register pressure through live range shrinkage.\n \n frename-registers\n Common Report Var(flag_rename_registers) Init(2) Optimization\n-Perform a register renaming optimization pass\n+Perform a register renaming optimization pass.\n \n fschedule-fusion\n Common Report Var(flag_schedule_fusion) Init(2) Optimization\n-Perform a target dependent instruction fusion optimization pass\n+Perform a target dependent instruction fusion optimization pass.\n \n freorder-blocks\n Common Report Var(flag_reorder_blocks) Optimization\n-Reorder basic blocks to improve code placement\n+Reorder basic blocks to improve code placement.\n \n freorder-blocks-algorithm=\n Common Joined RejectNegative Enum(reorder_blocks_algorithm) Var(flag_reorder_blocks_algorithm) Init(REORDER_BLOCKS_ALGORITHM_SIMPLE) Optimization\n--freorder-blocks-algorithm=[simple|stc] Set the used basic block reordering algorithm\n+-freorder-blocks-algorithm=[simple|stc] Set the used basic block reordering algorithm.\n \n Enum\n Name(reorder_blocks_algorithm) Type(enum reorder_blocks_algorithm) UnknownError(unknown basic block reordering algorithm %qs)\n@@ -1934,140 +1934,140 @@ Enum(reorder_blocks_algorithm) String(stc) Value(REORDER_BLOCKS_ALGORITHM_STC)\n \n freorder-blocks-and-partition\n Common Report Var(flag_reorder_blocks_and_partition) Optimization\n-Reorder basic blocks and partition into hot and cold sections\n+Reorder basic blocks and partition into hot and cold sections.\n \n freorder-functions\n Common Report Var(flag_reorder_functions) Optimization\n-Reorder functions to improve code placement\n+Reorder functions to improve code placement.\n \n frerun-cse-after-loop\n Common Report Var(flag_rerun_cse_after_loop) Optimization\n-Add a common subexpression elimination pass after loop optimizations\n+Add a common subexpression elimination pass after loop optimizations.\n \n frerun-loop-opt\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n frounding-math\n Common Report Var(flag_rounding_math) Optimization SetByCombined\n-Disable optimizations that assume default FP rounding behavior\n+Disable optimizations that assume default FP rounding behavior.\n \n fsched-interblock\n Common Report Var(flag_schedule_interblock) Init(1) Optimization\n-Enable scheduling across basic blocks\n+Enable scheduling across basic blocks.\n \n fsched-pressure\n Common Report Var(flag_sched_pressure) Init(0) Optimization\n-Enable register pressure sensitive insn scheduling\n+Enable register pressure sensitive insn scheduling.\n \n fsched-spec\n Common Report Var(flag_schedule_speculative) Init(1) Optimization\n-Allow speculative motion of non-loads\n+Allow speculative motion of non-loads.\n \n fsched-spec-load\n Common Report Var(flag_schedule_speculative_load) Optimization\n-Allow speculative motion of some loads\n+Allow speculative motion of some loads.\n \n fsched-spec-load-dangerous\n Common Report Var(flag_schedule_speculative_load_dangerous) Optimization\n-Allow speculative motion of more loads\n+Allow speculative motion of more loads.\n \n fsched-verbose=\n Common RejectNegative Joined UInteger Var(sched_verbose_param)\n--fsched-verbose=<number>\tSet the verbosity level of the scheduler\n+-fsched-verbose=<number>\tSet the verbosity level of the scheduler.\n \n fsched2-use-superblocks\n Common Report Var(flag_sched2_use_superblocks) Optimization\n-If scheduling post reload, do superblock scheduling\n+If scheduling post reload, do superblock scheduling.\n \n fsched2-use-traces\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n fschedule-insns\n Common Report Var(flag_schedule_insns) Optimization\n-Reschedule instructions before register allocation\n+Reschedule instructions before register allocation.\n \n fschedule-insns2\n Common Report Var(flag_schedule_insns_after_reload) Optimization\n-Reschedule instructions after register allocation\n+Reschedule instructions after register allocation.\n \n ; This flag should be on when a target implements non-trivial\n ; scheduling hooks, maybe saving some information for its own sake.\n-; On IA64, for example, this is used for correct bundling. \n+; On IA64, for example, this is used for correct bundling.\n fselective-scheduling\n Common Report Var(flag_selective_scheduling) Optimization\n-Schedule instructions using selective scheduling algorithm\n+Schedule instructions using selective scheduling algorithm.\n \n fselective-scheduling2\n-Common Report Var(flag_selective_scheduling2) Optimization \n-Run selective scheduling after reload\n+Common Report Var(flag_selective_scheduling2) Optimization\n+Run selective scheduling after reload.\n \n fsel-sched-pipelining\n Common Report Var(flag_sel_sched_pipelining) Init(0) Optimization\n-Perform software pipelining of inner loops during selective scheduling\n+Perform software pipelining of inner loops during selective scheduling.\n \n fsel-sched-pipelining-outer-loops\n Common Report Var(flag_sel_sched_pipelining_outer_loops) Init(0) Optimization\n-Perform software pipelining of outer loops during selective scheduling\n+Perform software pipelining of outer loops during selective scheduling.\n \n fsel-sched-reschedule-pipelined\n Common Report Var(flag_sel_sched_reschedule_pipelined) Init(0) Optimization\n-Reschedule pipelined regions without pipelining\n+Reschedule pipelined regions without pipelining.\n \n fsemantic-interposition\n Common Report Var(flag_semantic_interposition) Init(1)\n-Allow interposing function (or variables) by ones with different semantics (or initializer) respectively by dynamic linker\n+Allow interposing function (or variables) by ones with different semantics (or initializer) respectively by dynamic linker.\n \n ; sched_stalled_insns means that insns can be moved prematurely from the queue\n ; of stalled insns into the ready list.\n fsched-stalled-insns\n Common Report Var(flag_sched_stalled_insns) Optimization UInteger\n-Allow premature scheduling of queued insns\n+Allow premature scheduling of queued insns.\n \n fsched-stalled-insns=\n Common RejectNegative Joined UInteger Optimization\n--fsched-stalled-insns=<number>\tSet number of queued insns that can be prematurely scheduled\n+-fsched-stalled-insns=<number>\tSet number of queued insns that can be prematurely scheduled.\n \n ; sched_stalled_insns_dep controls how many recently scheduled cycles will\n ; be examined for a dependency on a stalled insn that is candidate for\n ; premature removal from the queue of stalled insns into the ready list (has\n ; an effect only if the flag 'sched_stalled_insns' is set).\n fsched-stalled-insns-dep\n Common Report Var(flag_sched_stalled_insns_dep,1) Init(1) Optimization UInteger\n-Set dependence distance checking in premature scheduling of queued insns\n+Set dependence distance checking in premature scheduling of queued insns.\n \n fsched-stalled-insns-dep=\n Common RejectNegative Joined UInteger Optimization\n--fsched-stalled-insns-dep=<number>\tSet dependence distance checking in premature scheduling of queued insns\n+-fsched-stalled-insns-dep=<number>\tSet dependence distance checking in premature scheduling of queued insns.\n \n fsched-group-heuristic\n Common Report Var(flag_sched_group_heuristic) Init(1) Optimization\n-Enable the group heuristic in the scheduler\n+Enable the group heuristic in the scheduler.\n \n fsched-critical-path-heuristic\n Common Report Var(flag_sched_critical_path_heuristic) Init(1) Optimization\n-Enable the critical path heuristic in the scheduler\n+Enable the critical path heuristic in the scheduler.\n \n fsched-spec-insn-heuristic\n Common Report Var(flag_sched_spec_insn_heuristic) Init(1) Optimization\n-Enable the speculative instruction heuristic in the scheduler\n+Enable the speculative instruction heuristic in the scheduler.\n \n fsched-rank-heuristic\n Common Report Var(flag_sched_rank_heuristic) Init(1) Optimization\n-Enable the rank heuristic in the scheduler\n+Enable the rank heuristic in the scheduler.\n \n fsched-last-insn-heuristic\n Common Report Var(flag_sched_last_insn_heuristic) Init(1) Optimization\n-Enable the last instruction heuristic in the scheduler\n+Enable the last instruction heuristic in the scheduler.\n \n fsched-dep-count-heuristic\n Common Report Var(flag_sched_dep_count_heuristic) Init(1) Optimization\n-Enable the dependent count heuristic in the scheduler\n+Enable the dependent count heuristic in the scheduler.\n \n fsection-anchors\n Common Report Var(flag_section_anchors) Optimization\n-Access data in the same section from shared anchor points\n+Access data in the same section from shared anchor points.\n \n fsee\n Common Ignore\n@@ -2083,7 +2083,7 @@ Turn on Redundant Extensions Elimination pass.\n \n fshow-column\n Common Report Var(flag_show_column) Init(1)\n-Show column numbers in diagnostics, when available.  Default on\n+Show column numbers in diagnostics, when available.  Default on.\n \n fshrink-wrap\n Common Report Var(flag_shrink_wrap) Optimization\n@@ -2092,82 +2092,82 @@ rather than at the top of the function.\n \n fsignaling-nans\n Common Report Var(flag_signaling_nans) Optimization SetByCombined\n-Disable optimizations observable by IEEE signaling NaNs\n+Disable optimizations observable by IEEE signaling NaNs.\n \n fsigned-zeros\n Common Report Var(flag_signed_zeros) Init(1) Optimization SetByCombined\n-Disable floating point optimizations that ignore the IEEE signedness of zero\n+Disable floating point optimizations that ignore the IEEE signedness of zero.\n \n fsingle-precision-constant\n Common Report Var(flag_single_precision_constant) Optimization\n-Convert floating point constants to single precision constants\n+Convert floating point constants to single precision constants.\n \n fsplit-ivs-in-unroller\n Common Report Var(flag_split_ivs_in_unroller) Init(1) Optimization\n-Split lifetimes of induction variables when loops are unrolled\n+Split lifetimes of induction variables when loops are unrolled.\n \n fsplit-stack\n Common Report Var(flag_split_stack) Init(-1)\n-Generate discontiguous stack frames\n+Generate discontiguous stack frames.\n \n fsplit-wide-types\n Common Report Var(flag_split_wide_types) Optimization\n-Split wide types into independent registers\n+Split wide types into independent registers.\n \n fssa-backprop\n Common Report Var(flag_ssa_backprop) Init(1) Optimization\n Enable backward propagation of use properties at the SSA level.\n \n fssa-phiopt\n Common Report Var(flag_ssa_phiopt) Optimization\n-Optimize conditional patterns using SSA PHI nodes\n+Optimize conditional patterns using SSA PHI nodes.\n \n fstdarg-opt\n Common Report Var(flag_stdarg_opt) Init(1) Optimization\n-Optimize amount of stdarg registers saved to stack at start of function\n+Optimize amount of stdarg registers saved to stack at start of function.\n \n fvariable-expansion-in-unroller\n Common Report Var(flag_variable_expansion_in_unroller) Optimization\n-Apply variable expansion when loops are unrolled\n+Apply variable expansion when loops are unrolled.\n \n fstack-check=\n Common Report RejectNegative Joined\n--fstack-check=[no|generic|specific]\tInsert stack checking code into the program\n+-fstack-check=[no|generic|specific]\tInsert stack checking code into the program.\n \n fstack-check\n Common Alias(fstack-check=, specific, no)\n-Insert stack checking code into the program.  Same as -fstack-check=specific\n+Insert stack checking code into the program.  Same as -fstack-check=specific.\n \n fstack-limit\n Common Var(common_deferred_options) Defer\n \n fstack-limit-register=\n Common RejectNegative Joined Var(common_deferred_options) Defer\n--fstack-limit-register=<register>\tTrap if the stack goes past <register>\n+-fstack-limit-register=<register>\tTrap if the stack goes past <register>.\n \n fstack-limit-symbol=\n Common RejectNegative Joined Var(common_deferred_options) Defer\n--fstack-limit-symbol=<name>\tTrap if the stack goes past symbol <name>\n+-fstack-limit-symbol=<name>\tTrap if the stack goes past symbol <name>.\n \n fstack-protector\n Common Report Var(flag_stack_protect, 1) Init(-1)\n-Use propolice as a stack protection method\n+Use propolice as a stack protection method.\n \n fstack-protector-all\n Common Report RejectNegative Var(flag_stack_protect, 2) Init(-1)\n-Use a stack protection method for every function\n+Use a stack protection method for every function.\n \n fstack-protector-strong\n Common Report RejectNegative Var(flag_stack_protect, 3) Init(-1)\n-Use a smart stack protection method for certain functions\n+Use a smart stack protection method for certain functions.\n \n fstack-protector-explicit\n Common Report RejectNegative Var(flag_stack_protect, 4)\n-Use stack protection method only for functions with the stack_protect attribute\n+Use stack protection method only for functions with the stack_protect attribute.\n \n fstack-usage\n Common RejectNegative Var(flag_stack_usage)\n-Output stack usage information on a per-function basis\n+Output stack usage information on a per-function basis.\n \n fstrength-reduce\n Common Ignore\n@@ -2179,35 +2179,35 @@ Does nothing.  Preserved for backward compatibility.\n ; if alias analysis (in general) is enabled.\n fstrict-aliasing\n Common Report Var(flag_strict_aliasing) Optimization\n-Assume strict aliasing rules apply\n+Assume strict aliasing rules apply.\n \n fstrict-overflow\n Common Report Var(flag_strict_overflow) Optimization\n-Treat signed overflow as undefined\n+Treat signed overflow as undefined.\n \n fsync-libcalls\n Common Report Var(flag_sync_libcalls) Init(1)\n-Implement __atomic operations via libcalls to legacy __sync functions\n+Implement __atomic operations via libcalls to legacy __sync functions.\n \n fsyntax-only\n Common Report Var(flag_syntax_only)\n-Check for syntax errors, then stop\n+Check for syntax errors, then stop.\n \n ftest-coverage\n Common Report Var(flag_test_coverage)\n-Create data files needed by \\\"gcov\\\"\n+Create data files needed by \\\"gcov\\\".\n \n fthread-jumps\n Common Report Var(flag_thread_jumps) Optimization\n-Perform jump threading optimizations\n+Perform jump threading optimizations.\n \n ftime-report\n Common Report Var(time_report)\n-Report the time taken by each compiler pass\n+Report the time taken by each compiler pass.\n \n ftls-model=\n Common Joined RejectNegative Enum(tls_model) Var(flag_tls_default) Init(TLS_MODEL_GLOBAL_DYNAMIC)\n--ftls-model=[global-dynamic|local-dynamic|initial-exec|local-exec]\tSet the default thread-local storage code generation model\n+-ftls-model=[global-dynamic|local-dynamic|initial-exec|local-exec]\tSet the default thread-local storage code generation model.\n \n Enum\n Name(tls_model) Type(enum tls_model) UnknownError(unknown TLS model %qs)\n@@ -2226,94 +2226,94 @@ Enum(tls_model) String(local-exec) Value(TLS_MODEL_LOCAL_EXEC)\n \n ftoplevel-reorder\n Common Report Var(flag_toplevel_reorder) Init(2)\n-Reorder top level functions, variables, and asms\n+Reorder top level functions, variables, and asms.\n \n ftracer\n Common Report Var(flag_tracer) Optimization\n-Perform superblock formation via tail duplication\n+Perform superblock formation via tail duplication.\n \n ; Zero means that floating-point math operations cannot generate a\n ; (user-visible) trap.  This is the case, for example, in nonstop\n ; IEEE 754 arithmetic.\n ftrapping-math\n Common Report Var(flag_trapping_math) Init(1) Optimization SetByCombined\n-Assume floating-point operations can trap\n+Assume floating-point operations can trap.\n \n ftrapv\n Common Report Var(flag_trapv) Optimization\n-Trap for signed overflow in addition, subtraction and multiplication\n+Trap for signed overflow in addition, subtraction and multiplication.\n \n ftree-ccp\n Common Report Var(flag_tree_ccp) Optimization\n-Enable SSA-CCP optimization on trees\n+Enable SSA-CCP optimization on trees.\n \n ftree-bit-ccp\n Common Report Var(flag_tree_bit_ccp) Optimization\n-Enable SSA-BIT-CCP optimization on trees\n+Enable SSA-BIT-CCP optimization on trees.\n \n ftree-store-ccp\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n ftree-ch\n Common Report Var(flag_tree_ch) Optimization\n-Enable loop header copying on trees\n+Enable loop header copying on trees.\n \n ftree-coalesce-inlined-vars\n Common Ignore RejectNegative\n Does nothing.  Preserved for backward compatibility.\n \n ftree-coalesce-vars\n Common Report Var(flag_tree_coalesce_vars) Optimization\n-Enable SSA coalescing of user variables\n+Enable SSA coalescing of user variables.\n \n ftree-copyrename\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n ftree-copy-prop\n Common Report Var(flag_tree_copy_prop) Optimization\n-Enable copy propagation on trees\n+Enable copy propagation on trees.\n \n ftree-store-copy-prop\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n ftree-cselim\n Common Report Var(flag_tree_cselim) Init(2) Optimization\n-Transform condition stores into unconditional ones\n+Transform condition stores into unconditional ones.\n \n ftree-switch-conversion\n Common Report Var(flag_tree_switch_conversion) Optimization\n Perform conversions of switch initializations.\n \n ftree-dce\n Common Report Var(flag_tree_dce) Optimization\n-Enable SSA dead code elimination optimization on trees\n+Enable SSA dead code elimination optimization on trees.\n \n ftree-dominator-opts\n Common Report Var(flag_tree_dom) Optimization\n-Enable dominator optimizations\n+Enable dominator optimizations.\n \n ftree-tail-merge\n Common Report Var(flag_tree_tail_merge) Optimization\n-Enable tail merging on trees\n+Enable tail merging on trees.\n \n ftree-dse\n Common Report Var(flag_tree_dse) Optimization\n-Enable dead store elimination\n+Enable dead store elimination.\n \n ftree-forwprop\n Common Report Var(flag_tree_forwprop) Init(1) Optimization\n-Enable forward propagation on trees\n+Enable forward propagation on trees.\n \n ftree-fre\n Common Report Var(flag_tree_fre) Optimization\n-Enable Full Redundancy Elimination (FRE) on trees\n+Enable Full Redundancy Elimination (FRE) on trees.\n \n foptimize-strlen\n Common Report Var(flag_optimize_strlen) Optimization\n-Enable string length optimizations on trees\n+Enable string length optimizations on trees.\n \n fisolate-erroneous-paths-dereference\n Common Report Var(flag_isolate_erroneous_paths_dereference) Optimization\n@@ -2326,102 +2326,102 @@ Common Report Var(flag_isolate_erroneous_paths_attribute) Optimization\n Detect paths that trigger erroneous or undefined behavior due a null value\n being used in a way forbidden by a returns_nonnull or nonnull\n attribute.  Isolate those paths from the main control flow and turn the\n-statement with erroneous or undefined behavior into a trap. \n+statement with erroneous or undefined behavior into a trap.\n \n ftree-loop-distribution\n Common Report Var(flag_tree_loop_distribution) Optimization\n-Enable loop distribution on trees\n+Enable loop distribution on trees.\n \n ftree-loop-distribute-patterns\n Common Report Var(flag_tree_loop_distribute_patterns) Optimization\n-Enable loop distribution for patterns transformed into a library call\n+Enable loop distribution for patterns transformed into a library call.\n \n ftree-loop-im\n Common Report Var(flag_tree_loop_im) Init(1) Optimization\n-Enable loop invariant motion on trees\n+Enable loop invariant motion on trees.\n \n ftree-loop-linear\n Common Alias(floop-nest-optimize)\n-Enable loop nest transforms.  Same as -floop-nest-optimize\n+Enable loop nest transforms.  Same as -floop-nest-optimize.\n \n ftree-loop-ivcanon\n Common Report Var(flag_tree_loop_ivcanon) Init(1) Optimization\n-Create canonical induction variables in loops\n+Create canonical induction variables in loops.\n \n ftree-loop-optimize\n Common Report Var(flag_tree_loop_optimize) Init(1) Optimization\n-Enable loop optimizations on tree level\n+Enable loop optimizations on tree level.\n \n ftree-parallelize-loops=\n Common Report Joined RejectNegative UInteger Var(flag_tree_parallelize_loops) Init(1) Optimization\n-Enable automatic parallelization of loops\n+Enable automatic parallelization of loops.\n \n ftree-phiprop\n Common Report Var(flag_tree_phiprop) Init(1) Optimization\n Enable hoisting loads from conditional pointers.\n \n ftree-pre\n Common Report Var(flag_tree_pre) Optimization\n-Enable SSA-PRE optimization on trees\n+Enable SSA-PRE optimization on trees.\n \n ftree-partial-pre\n Common Report Var(flag_tree_partial_pre) Optimization\n-In SSA-PRE optimization on trees, enable partial-partial redundancy elimination\n+In SSA-PRE optimization on trees, enable partial-partial redundancy elimination.\n \n ftree-pta\n Common Report Var(flag_tree_pta) Optimization\n Perform function-local points-to analysis on trees.\n \n ftree-reassoc\n Common Report Var(flag_tree_reassoc) Init(1) Optimization\n-Enable reassociation on tree level\n+Enable reassociation on tree level.\n \n ftree-salias\n Common Ignore\n Does nothing.  Preserved for backward compatibility.\n \n ftree-sink\n Common Report Var(flag_tree_sink) Optimization\n-Enable SSA code sinking on trees\n+Enable SSA code sinking on trees.\n \n ftree-slsr\n Common Report Var(flag_tree_slsr) Optimization\n-Perform straight-line strength reduction\n+Perform straight-line strength reduction.\n \n ftree-sra\n Common Report Var(flag_tree_sra) Optimization\n-Perform scalar replacement of aggregates\n+Perform scalar replacement of aggregates.\n \n ftree-ter\n Common Report Var(flag_tree_ter) Optimization\n-Replace temporary expressions in the SSA->normal pass\n+Replace temporary expressions in the SSA->normal pass.\n \n ftree-lrs\n Common Report Var(flag_tree_live_range_split) Optimization\n-Perform live range splitting during the SSA->normal pass\n+Perform live range splitting during the SSA->normal pass.\n \n ftree-vrp\n Common Report Var(flag_tree_vrp) Init(0) Optimization\n-Perform Value Range Propagation on trees\n+Perform Value Range Propagation on trees.\n \n funit-at-a-time\n Common Report Var(flag_unit_at_a_time) Init(1)\n-Compile whole compilation unit at a time\n+Compile whole compilation unit at a time.\n \n funroll-loops\n Common Report Var(flag_unroll_loops) Optimization\n-Perform loop unrolling when iteration count is known\n+Perform loop unrolling when iteration count is known.\n \n funroll-all-loops\n Common Report Var(flag_unroll_all_loops) Optimization\n-Perform loop unrolling for all loops\n+Perform loop unrolling for all loops.\n \n ; Nonzero means that loop optimizer may assume that the induction variables\n ; that control loops do not overflow and that the loops with nontrivial\n ; exit condition are not infinite\n funsafe-loop-optimizations\n Common Report Var(flag_unsafe_loop_optimizations) Optimization\n-Allow loop optimizations to assume that the loops behave in normal way\n+Allow loop optimizations to assume that the loops behave in normal way.\n \n fassociative-math\n Common Report Var(flag_associative_math) SetByCombined Optimization\n@@ -2438,23 +2438,23 @@ Same as -fassociative-math for expressions which include division.\n ; (e.g., nonnegative for SQRT).\n funsafe-math-optimizations\n Common Report Var(flag_unsafe_math_optimizations) Optimization SetByCombined\n-Allow math optimizations that may violate IEEE or ISO standards\n+Allow math optimizations that may violate IEEE or ISO standards.\n \n funswitch-loops\n Common Report Var(flag_unswitch_loops) Optimization\n-Perform loop unswitching\n+Perform loop unswitching.\n \n funwind-tables\n Common Report Var(flag_unwind_tables) Optimization\n-Just generate unwind tables for exception handling\n+Just generate unwind tables for exception handling.\n \n fuse-ld=bfd\n Common Driver Negative(fuse-ld=gold)\n-Use the bfd linker instead of the default linker\n+Use the bfd linker instead of the default linker.\n \n fuse-ld=gold\n Common Driver Negative(fuse-ld=bfd)\n-Use the gold linker instead of the default linker\n+Use the gold linker instead of the default linker.\n \n fuse-linker-plugin\n Common Undocumented Var(flag_use_linker_plugin)\n@@ -2466,53 +2466,53 @@ Common Undocumented Var(flag_use_linker_plugin)\n ; in process_options ().\n fvar-tracking\n Common Report Var(flag_var_tracking) Init(2) Optimization\n-Perform variable tracking\n+Perform variable tracking.\n \n ; Positive if we should track variables at assignments, negative if\n ; we should run the var-tracking pass only to discard debug\n ; annotations.  When flag_var_tracking_assignments ==\n ; AUTODETECT_VALUE it will be set according to flag_var_tracking.\n fvar-tracking-assignments\n Common Report Var(flag_var_tracking_assignments) Init(2) Optimization\n-Perform variable tracking by annotating assignments\n+Perform variable tracking by annotating assignments.\n \n ; Nonzero if we should toggle flag_var_tracking_assignments after\n ; processing options and computing its default.  */\n fvar-tracking-assignments-toggle\n Common Report Var(flag_var_tracking_assignments_toggle) Optimization\n-Toggle -fvar-tracking-assignments\n+Toggle -fvar-tracking-assignments.\n \n ; Positive if we should track uninitialized variables, negative if\n ; we should run the var-tracking pass only to discard debug\n ; annotations.  When flag_var_tracking_uninit == AUTODETECT_VALUE it\n ; will be set according to flag_var_tracking.\n fvar-tracking-uninit\n Common Report Var(flag_var_tracking_uninit) Optimization\n-Perform variable tracking and also tag variables that are uninitialized\n+Perform variable tracking and also tag variables that are uninitialized.\n \n ftree-vectorize\n Common Report Var(flag_tree_vectorize) Optimization\n-Enable vectorization on trees\n+Enable vectorization on trees.\n \n ftree-vectorizer-verbose=\n Common Joined RejectNegative Ignore\n Does nothing.  Preserved for backward compatibility.\n \n ftree-loop-vectorize\n Common Report Var(flag_tree_loop_vectorize) Optimization\n-Enable loop vectorization on trees\n+Enable loop vectorization on trees.\n \n ftree-slp-vectorize\n Common Report Var(flag_tree_slp_vectorize) Optimization\n-Enable basic block vectorization (SLP) on trees\n+Enable basic block vectorization (SLP) on trees.\n \n fvect-cost-model=\n Common Joined RejectNegative Enum(vect_cost_model) Var(flag_vect_cost_model) Init(VECT_COST_MODEL_DEFAULT) Optimization\n-Specifies the cost model for vectorization\n- \n+Specifies the cost model for vectorization.\n+\n fsimd-cost-model=\n Common Joined RejectNegative Enum(vect_cost_model) Var(flag_simd_cost_model) Init(VECT_COST_MODEL_UNLIMITED) Optimization\n-Specifies the vectorization cost model for code marked with a simd directive\n+Specifies the vectorization cost model for code marked with a simd directive.\n \n Enum\n Name(vect_cost_model) Type(enum vect_cost_model) UnknownError(unknown vectorizer cost model %qs)\n@@ -2550,11 +2550,11 @@ Enable copy propagation of scalar-evolution information.\n ; to not be added and is useful when comparing two assembler files.\n fverbose-asm\n Common Report Var(flag_verbose_asm)\n-Add extra commentary to assembler output\n+Add extra commentary to assembler output.\n \n fvisibility=\n Common Joined RejectNegative Enum(symbol_visibility) Var(default_visibility) Init(VISIBILITY_DEFAULT)\n--fvisibility=[default|internal|hidden|protected]\tSet the default symbol visibility\n+-fvisibility=[default|internal|hidden|protected]\tSet the default symbol visibility.\n \n Enum\n Name(symbol_visibility) Type(enum symbol_visibility) UnknownError(unrecognized visibility value %qs)\n@@ -2597,47 +2597,47 @@ Output vtable verification pointer sets information.\n \n fvpt\n Common Report Var(flag_value_profile_transformations) Optimization\n-Use expression value profiles in optimizations\n+Use expression value profiles in optimizations.\n \n fweb\n Common Report Var(flag_web) Init(2) Optimization\n-Construct webs and split unrelated uses of single variable\n+Construct webs and split unrelated uses of single variable.\n \n ftree-builtin-call-dce\n Common Report Var(flag_tree_builtin_call_dce) Init(0) Optimization\n-Enable conditional dead code elimination for builtin calls\n+Enable conditional dead code elimination for builtin calls.\n \n fwhole-program\n Common Report Var(flag_whole_program) Init(0)\n-Perform whole program optimizations\n+Perform whole program optimizations.\n \n fwrapv\n Common Report Var(flag_wrapv) Optimization\n-Assume signed arithmetic overflow wraps around\n+Assume signed arithmetic overflow wraps around.\n \n fzero-initialized-in-bss\n Common Report Var(flag_zero_initialized_in_bss) Init(1)\n-Put zero initialized data in the bss section\n+Put zero initialized data in the bss section.\n \n g\n Common JoinedOrMissing\n-Generate debug information in default format\n+Generate debug information in default format.\n \n gcoff\n Common JoinedOrMissing Negative(gdwarf)\n-Generate debug information in COFF format\n+Generate debug information in COFF format.\n \n gdwarf\n Common JoinedOrMissing Negative(gdwarf-)\n-Generate debug information in default version of DWARF format\n+Generate debug information in default version of DWARF format.\n \n gdwarf-\n Common Joined UInteger Var(dwarf_version) Init(4) Negative(gstabs)\n-Generate debug information in DWARF v2 (or later) format\n+Generate debug information in DWARF v2 (or later) format.\n \n ggdb\n Common JoinedOrMissing\n-Generate debug information in default extended format\n+Generate debug information in default extended format.\n \n gno-pubnames\n Common Negative(gpubnames) Var(debug_generate_pub_sections, 0) Init(-1)\n@@ -2661,43 +2661,43 @@ Record gcc command line switches in DWARF DW_AT_producer.\n \n gno-split-dwarf\n Common Driver RejectNegative Var(dwarf_split_debug_info,0) Init(0)\n-Don't generate debug information in separate .dwo files\n+Don't generate debug information in separate .dwo files.\n \n gsplit-dwarf\n Common Driver RejectNegative Var(dwarf_split_debug_info,1)\n-Generate debug information in separate .dwo files\n+Generate debug information in separate .dwo files.\n \n gstabs\n Common JoinedOrMissing Negative(gstabs+)\n-Generate debug information in STABS format\n+Generate debug information in STABS format.\n \n gstabs+\n Common JoinedOrMissing Negative(gvms)\n-Generate debug information in extended STABS format\n+Generate debug information in extended STABS format.\n \n gno-strict-dwarf\n Common RejectNegative Var(dwarf_strict,0) Init(0)\n-Emit DWARF additions beyond selected version\n+Emit DWARF additions beyond selected version.\n \n gstrict-dwarf\n Common Report RejectNegative Var(dwarf_strict,1)\n-Don't emit DWARF additions beyond selected version\n+Don't emit DWARF additions beyond selected version.\n \n gtoggle\n Common Report Var(flag_gtoggle)\n-Toggle debug information generation\n+Toggle debug information generation.\n \n gvms\n Common JoinedOrMissing Negative(gxcoff)\n-Generate debug information in VMS format\n+Generate debug information in VMS format.\n \n gxcoff\n Common JoinedOrMissing Negative(gxcoff+)\n-Generate debug information in XCOFF format\n+Generate debug information in XCOFF format.\n \n gxcoff+\n Common JoinedOrMissing Negative(gcoff)\n-Generate debug information in extended XCOFF format\n+Generate debug information in extended XCOFF format.\n \n Enum\n Name(compressed_debug_sections) Type(int)\n@@ -2715,22 +2715,22 @@ Enum(compressed_debug_sections) String(zlib-gnu) Value(2)\n \n gz\n Common Driver\n-Generate compressed debug sections\n+Generate compressed debug sections.\n \n gz=\n Common Driver Joined Enum(compressed_debug_sections)\n--gz=<format>\tGenerate compressed debug sections in format <format>\n+-gz=<format>\tGenerate compressed debug sections in format <format>.\n \n h\n Driver Joined Separate\n \n iplugindir=\n Common Joined Var(plugindir_string) Init(0)\n--iplugindir=<dir>\tSet <dir> to be the default plugin directory\n+-iplugindir=<dir>\tSet <dir> to be the default plugin directory.\n \n imultiarch\n Common Joined Separate RejectDriver Var(imultiarch) Init(0)\n--imultiarch <dir>\tSet <dir> to be the multiarch include subdirectory\n+-imultiarch <dir>\tSet <dir> to be the multiarch include subdirectory.\n \n l\n Driver Joined Separate\n@@ -2752,11 +2752,11 @@ Driver\n \n o\n Common Driver Joined Separate Var(asm_file_name) MissingArgError(missing filename after %qs)\n--o <file>\tPlace output into <file>\n+-o <file>\tPlace output into <file>.\n \n p\n Common Var(profile_flag)\n-Enable function profiling\n+Enable function profiling.\n \n pass-exit-codes\n Driver Var(pass_exit_codes)\n@@ -2766,7 +2766,7 @@ Common Alias(Wpedantic)\n \n pedantic-errors\n Common Var(flag_pedantic_errors)\n-Like -pedantic but issue them as errors\n+Like -pedantic but issue them as errors.\n \n pg\n Driver\n@@ -2788,7 +2788,7 @@ Driver Var(print_multi_lib)\n \n print-multi-os-directory\n Driver Var(print_multi_os_directory)\n- \n+\n print-multiarch\n Driver Var(print_multiarch)\n \n@@ -2806,7 +2806,7 @@ Driver Var(print_sysroot_headers_suffix)\n \n quiet\n Common Var(quiet_flag) RejectDriver\n-Do not display functions compiled or elapsed time\n+Do not display functions compiled or elapsed time.\n \n r\n Driver\n@@ -2838,15 +2838,15 @@ Driver\n \n v\n Common Driver Var(verbose_flag)\n-Enable verbose output\n+Enable verbose output.\n \n version\n Common Var(version_flag) RejectDriver\n-Display the compiler's version\n+Display the compiler's version.\n \n w\n Common Var(inhibit_warnings)\n-Suppress warnings\n+Suppress warnings.\n \n wrapper\n Driver Separate Var(wrapper_string)\n@@ -2856,7 +2856,7 @@ Driver Joined Separate\n \n shared\n Driver RejectNegative Negative(pie)\n-Create a shared library\n+Create a shared library.\n \n shared-libgcc\n Driver\n@@ -2901,17 +2901,17 @@ Driver\n \n no-pie\n Driver RejectNegative Negative(shared)\n-Don't create a position independent executable\n+Don't create a position independent executable.\n \n pie\n Driver RejectNegative Negative(no-pie)\n-Create a position independent executable\n+Create a position independent executable.\n \n z\n Driver Joined Separate\n \n fipa-ra\n Common Report Var(flag_ipa_ra) Optimization\n-Use caller save register across calls if possible\n+Use caller save register across calls if possible.\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "c031bcc7be62306bf9fa750648e5f11c6323bf9a", "filename": "gcc/config/aarch64/aarch64.opt", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -62,39 +62,39 @@ Enum(cmodel) String(large) Value(AARCH64_CMODEL_LARGE)\n \n mbig-endian\n Target Report RejectNegative Mask(BIG_END)\n-Assume target CPU is configured as big endian\n+Assume target CPU is configured as big endian.\n \n mgeneral-regs-only\n Target Report RejectNegative Mask(GENERAL_REGS_ONLY) Save\n-Generate code which uses only the general registers\n+Generate code which uses only the general registers.\n \n mfix-cortex-a53-835769\n Target Report Var(aarch64_fix_a53_err835769) Init(2) Save\n-Workaround for ARM Cortex-A53 Erratum number 835769\n+Workaround for ARM Cortex-A53 Erratum number 835769.\n \n mfix-cortex-a53-843419\n Target Report\n-Workaround for ARM Cortex-A53 Erratum number 843419\n+Workaround for ARM Cortex-A53 Erratum number 843419.\n \n mlittle-endian\n Target Report RejectNegative InverseMask(BIG_END)\n-Assume target CPU is configured as little endian\n+Assume target CPU is configured as little endian.\n \n mcmodel=\n Target RejectNegative Joined Enum(cmodel) Var(aarch64_cmodel_var) Init(AARCH64_CMODEL_SMALL) Save\n-Specify the code model\n+Specify the code model.\n \n mstrict-align\n Target Report RejectNegative Mask(STRICT_ALIGN) Save\n-Don't assume that unaligned accesses are handled by the system\n+Don't assume that unaligned accesses are handled by the system.\n \n momit-leaf-frame-pointer\n Target Report Var(flag_omit_leaf_frame_pointer) Init(2) Save\n-Omit the frame pointer in leaf functions\n+Omit the frame pointer in leaf functions.\n \n mtls-dialect=\n Target RejectNegative Joined Enum(tls_type) Var(aarch64_tls_dialect) Init(TLS_DESCRIPTORS) Save\n-Specify TLS dialect\n+Specify TLS dialect.\n \n mtls-size=\n Target RejectNegative Joined Var(aarch64_tls_size) Enum(aarch64_tls_size)\n@@ -117,23 +117,23 @@ Enum(aarch64_tls_size) String(48) Value(48)\n \n march=\n Target RejectNegative ToLower Joined Var(aarch64_arch_string)\n--march=ARCH\tUse features of architecture ARCH\n+-march=ARCH\tUse features of architecture ARCH.\n \n mcpu=\n Target RejectNegative ToLower Joined Var(aarch64_cpu_string)\n--mcpu=CPU\tUse features of and optimize for CPU\n+-mcpu=CPU\tUse features of and optimize for CPU.\n \n mtune=\n Target RejectNegative ToLower Joined Var(aarch64_tune_string)\n--mtune=CPU\tOptimize for CPU\n+-mtune=CPU\tOptimize for CPU.\n \n mabi=\n Target RejectNegative Joined Enum(aarch64_abi) Var(aarch64_abi) Init(AARCH64_ABI_DEFAULT)\n--mabi=ABI\tGenerate code that conforms to the specified ABI\n+-mabi=ABI\tGenerate code that conforms to the specified ABI.\n \n moverride=\n Target RejectNegative ToLower Joined Var(aarch64_override_tune_string)\n--moverride=STRING\tPower users only! Override CPU optimization parameters\n+-moverride=STRING\tPower users only! Override CPU optimization parameters.\n \n Enum\n Name(aarch64_abi) Type(int)"}, {"sha": "08d71371079f4795bef18addddb201705749d1e0", "filename": "gcc/config/alpha/alpha.opt", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Falpha%2Falpha.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Falpha%2Falpha.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,111 +20,111 @@\n \n msoft-float\n Target Report Mask(SOFT_FP)\n-Do not use hardware fp\n+Do not use hardware fp.\n \n mfp-regs\n Target Report Mask(FPREGS)\n-Use fp registers\n+Use fp registers.\n \n mgas\n Target Ignore\n Does nothing. Preserved for backward compatibility.\n \n mieee-conformant\n Target RejectNegative Mask(IEEE_CONFORMANT)\n-Request IEEE-conformant math library routines (OSF/1)\n+Request IEEE-conformant math library routines (OSF/1).\n \n mieee\n Target Report RejectNegative Mask(IEEE)\n-Emit IEEE-conformant code, without inexact exceptions\n+Emit IEEE-conformant code, without inexact exceptions.\n \n mieee-with-inexact\n Target Report RejectNegative Mask(IEEE_WITH_INEXACT)\n \n mbuild-constants\n Target Report Mask(BUILD_CONSTANTS)\n-Do not emit complex integer constants to read-only memory\n+Do not emit complex integer constants to read-only memory.\n \n mfloat-vax\n Target Report RejectNegative Mask(FLOAT_VAX)\n-Use VAX fp\n+Use VAX fp.\n \n mfloat-ieee\n Target Report RejectNegative InverseMask(FLOAT_VAX)\n-Do not use VAX fp\n+Do not use VAX fp.\n \n mbwx\n Target Report Mask(BWX)\n-Emit code for the byte/word ISA extension\n+Emit code for the byte/word ISA extension.\n \n mmax\n Target Report Mask(MAX)\n-Emit code for the motion video ISA extension\n+Emit code for the motion video ISA extension.\n \n mfix\n Target Report Mask(FIX)\n-Emit code for the fp move and sqrt ISA extension\n+Emit code for the fp move and sqrt ISA extension.\n \n mcix\n Target Report Mask(CIX)\n-Emit code for the counting ISA extension\n+Emit code for the counting ISA extension.\n \n mexplicit-relocs\n Target Report Mask(EXPLICIT_RELOCS)\n-Emit code using explicit relocation directives\n+Emit code using explicit relocation directives.\n \n msmall-data\n Target Report RejectNegative Mask(SMALL_DATA)\n-Emit 16-bit relocations to the small data areas\n+Emit 16-bit relocations to the small data areas.\n \n mlarge-data\n Target Report RejectNegative InverseMask(SMALL_DATA)\n-Emit 32-bit relocations to the small data areas\n+Emit 32-bit relocations to the small data areas.\n \n msmall-text\n Target Report RejectNegative Mask(SMALL_TEXT)\n-Emit direct branches to local functions\n+Emit direct branches to local functions.\n \n mlarge-text\n Target Report RejectNegative InverseMask(SMALL_TEXT)\n-Emit indirect branches to local functions\n+Emit indirect branches to local functions.\n \n mtls-kernel\n Target Report Mask(TLS_KERNEL)\n-Emit rdval instead of rduniq for thread pointer\n+Emit rdval instead of rduniq for thread pointer.\n \n mlong-double-128\n Target Report RejectNegative Mask(LONG_DOUBLE_128)\n-Use 128-bit long double\n+Use 128-bit long double.\n \n mlong-double-64\n Target Report RejectNegative InverseMask(LONG_DOUBLE_128)\n-Use 64-bit long double\n+Use 64-bit long double.\n \n mcpu=\n Target RejectNegative Joined Var(alpha_cpu_string)\n-Use features of and schedule given CPU\n+Use features of and schedule given CPU.\n \n mtune=\n Target RejectNegative Joined Var(alpha_tune_string)\n-Schedule given CPU\n+Schedule given CPU.\n \n mfp-rounding-mode=\n Target RejectNegative Joined Var(alpha_fprm_string)\n-Control the generated fp rounding mode\n+Control the generated fp rounding mode.\n \n mfp-trap-mode=\n Target RejectNegative Joined Var(alpha_fptm_string)\n-Control the IEEE trap mode\n+Control the IEEE trap mode.\n \n mtrap-precision=\n Target RejectNegative Joined Var(alpha_tp_string)\n-Control the precision given to fp exceptions\n+Control the precision given to fp exceptions.\n \n mmemory-latency=\n Target RejectNegative Joined Var(alpha_mlat_string)\n-Tune expected memory latency\n+Tune expected memory latency.\n \n mtls-size=\n Target RejectNegative Joined UInteger Var(alpha_tls_size) Init(32)\n-Specify bit size of immediate TLS offsets\n+Specify bit size of immediate TLS offsets."}, {"sha": "29e89f93d15fa1ecf7a52215db44af390e4a78a1", "filename": "gcc/config/arc/arc.opt", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Farc%2Farc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Farc%2Farc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -23,39 +23,39 @@ config/arc/arc-opts.h\n \n mbig-endian\n Target Report RejectNegative Mask(BIG_ENDIAN)\n-Compile code for big endian mode\n+Compile code for big endian mode.\n \n mlittle-endian\n Target Report RejectNegative InverseMask(BIG_ENDIAN)\n-Compile code for little endian mode.  This is the default\n+Compile code for little endian mode.  This is the default.\n \n mno-cond-exec\n Target Report RejectNegative Mask(NO_COND_EXEC)\n-Disable ARCompact specific pass to generate conditional execution instructions\n+Disable ARCompact specific pass to generate conditional execution instructions.\n \n mA6\n Target Report\n-Generate ARCompact 32-bit code for ARC600 processor\n+Generate ARCompact 32-bit code for ARC600 processor.\n \n mARC600\n Target Report\n-Same as -mA6\n+Same as -mA6.\n \n mARC601\n Target Report\n-Generate ARCompact 32-bit code for ARC601 processor\n+Generate ARCompact 32-bit code for ARC601 processor.\n \n mA7\n Target Report\n-Generate ARCompact 32-bit code for ARC700 processor\n+Generate ARCompact 32-bit code for ARC700 processor.\n \n mARC700\n Target Report\n-Same as -mA7\n+Same as -mA7.\n \n mmixed-code\n Target Report Mask(MIXED_CODE_SET)\n-Tweak register allocation to help 16-bit instruction generation\n+Tweak register allocation to help 16-bit instruction generation.\n ; originally this was:\n ;Generate ARCompact 16-bit instructions intermixed with 32-bit instructions\n ; but we do that without -mmixed-code, too, it's just a different instruction\n@@ -65,43 +65,43 @@ Tweak register allocation to help 16-bit instruction generation\n ; actually interesting option, and we want that to have its own comment.\n mvolatile-cache\n Target Report RejectNegative Mask(VOLATILE_CACHE_SET)\n-Use ordinarily cached memory accesses for volatile references\n+Use ordinarily cached memory accesses for volatile references.\n \n mno-volatile-cache\n Target Report RejectNegative InverseMask(VOLATILE_CACHE_SET)\n-Enable cache bypass for volatile references\n+Enable cache bypass for volatile references.\n \n mbarrel-shifter\n Target Report Mask(BARREL_SHIFTER)\n-Generate instructions supported by barrel shifter\n+Generate instructions supported by barrel shifter.\n \n mnorm\n Target Report Mask(NORM_SET)\n-Generate norm instruction\n+Generate norm instruction.\n \n mswap\n Target Report Mask(SWAP_SET)\n-Generate swap instruction\n+Generate swap instruction.\n \n mmul64\n Target Report Mask(MUL64_SET)\n-Generate mul64 and mulu64 instructions\n+Generate mul64 and mulu64 instructions.\n \n mno-mpy\n Target Report Mask(NOMPY_SET)\n-Do not generate mpy instructions for ARC700\n+Do not generate mpy instructions for ARC700.\n \n mea\n Target Report Mask(EA_SET)\n-Generate Extended arithmetic instructions.  Currently only divaw, adds, subs and sat16 are supported\n+Generate Extended arithmetic instructions.  Currently only divaw, adds, subs and sat16 are supported.\n \n msoft-float\n Target Report Mask(0)\n-Dummy flag. This is the default unless FPX switches are provided explicitly\n+Dummy flag. This is the default unless FPX switches are provided explicitly.\n \n mlong-calls\n Target Report Mask(LONG_CALLS_SET)\n-Generate call insns as register indirect calls\n+Generate call insns as register indirect calls.\n \n mno-brcc\n Target Report Mask(NO_BRCC_SET)\n@@ -113,7 +113,7 @@ Generate sdata references.  This is the default, unless you compile for PIC.\n \n mno-millicode\n Target Report Mask(NO_MILLICODE_THUNK_SET)\n-Do not generate millicode thunks (needed only with -Os)\n+Do not generate millicode thunks (needed only with -Os).\n \n mspfp\n Target Report Mask(SPFP_COMPACT_SET)\n@@ -153,7 +153,7 @@ Enable generation of ARC SIMD instructions via target-specific builtins.\n \n mcpu=\n Target RejectNegative Joined Var(arc_cpu) Enum(processor_type) Init(PROCESSOR_NONE)\n--mcpu=CPU\tCompile code for ARC variant CPU\n+-mcpu=CPU\tCompile code for ARC variant CPU.\n \n Enum\n Name(processor_type) Type(enum processor_type)\n@@ -169,11 +169,11 @@ Enum(processor_type) String(ARC700) Value(PROCESSOR_ARC700)\n \n msize-level=\n Target RejectNegative Joined UInteger Var(arc_size_opt_level) Init(-1)\n-size optimization level: 0:none 1:opportunistic 2: regalloc 3:drop align, -Os\n+size optimization level: 0:none 1:opportunistic 2: regalloc 3:drop align, -Os.\n \n misize\n Target Report PchIgnore Var(TARGET_DUMPISIZE)\n-Annotate assembler instructions with estimated addresses\n+Annotate assembler instructions with estimated addresses.\n \n mmultcost=\n Target RejectNegative Joined UInteger Var(arc_multcost) Init(-1)\n@@ -205,21 +205,21 @@ Tune for ARC700 R4.2 Cpu with XMAC block.\n \n mindexed-loads\n Target Var(TARGET_INDEXED_LOADS)\n-Enable the use of indexed loads\n+Enable the use of indexed loads.\n \n mauto-modify-reg\n Target Var(TARGET_AUTO_MODIFY_REG)\n Enable the use of pre/post modify with register displacement.\n \n mmul32x16\n Target Report Mask(MULMAC_32BY16_SET)\n-Generate 32x16 multiply and mac instructions\n+Generate 32x16 multiply and mac instructions.\n \n ; the initializer is supposed to be: Init(REG_BR_PROB_BASE/2) ,\n ; alas, basic-block.h is not included in options.c .\n munalign-prob-threshold=\n Target RejectNegative Joined UInteger Var(arc_unalign_prob_threshold) Init(10000/2)\n-Set probability threshold for unaligning branches\n+Set probability threshold for unaligning branches.\n \n mmedium-calls\n Target Var(TARGET_MEDIUM_CALLS) Init(TARGET_MMEDIUM_CALLS_DEFAULT)\n@@ -243,19 +243,19 @@ Enable Rcw constraint handling - ccfsm condexec mostly depends on this.\n \n mearly-cbranchsi\n Target Var(TARGET_EARLY_CBRANCHSI)\n-Enable pre-reload use of cbranchsi pattern\n+Enable pre-reload use of cbranchsi pattern.\n \n mbbit-peephole\n Target Var(TARGET_BBIT_PEEPHOLE)\n-Enable bbit peephole2\n+Enable bbit peephole2.\n \n mcase-vector-pcrel\n Target Var(TARGET_CASE_VECTOR_PC_RELATIVE)\n Use pc-relative switch case tables - this enables case table shortening.\n \n mcompact-casesi\n Target Var(TARGET_COMPACT_CASESI)\n-Enable compact casesi pattern\n+Enable compact casesi pattern.\n \n mq-class\n Target Var(TARGET_Q_CLASS)\n@@ -270,15 +270,15 @@ Expand adddi3 and subdi3 at rtl generation time into add.f / adc etc.\n ; macro symbols as well.\n mcrc\n Target Report\n-Enable variable polynomial CRC extension\n+Enable variable polynomial CRC extension.\n \n mdsp-packa\n Target Report\n-Enable DSP 3.1 Pack A extensions\n+Enable DSP 3.1 Pack A extensions.\n \n mdvbf\n Target Report\n-Enable dual viterbi butterfly extension\n+Enable dual viterbi butterfly extension.\n \n mmac-d16\n Target Report Undocumented\n@@ -288,24 +288,24 @@ Target Report Undocumented\n \n mtelephony\n Target Report RejectNegative\n-Enable Dual and Single Operand Instructions for Telephony\n+Enable Dual and Single Operand Instructions for Telephony.\n \n mxy\n Target Report\n-Enable XY Memory extension (DSP version 3)\n+Enable XY Memory extension (DSP version 3).\n \n ; ARC700 4.10 extension instructions\n mlock\n Target Report\n-Enable Locked Load/Store Conditional extension\n+Enable Locked Load/Store Conditional extension.\n \n mswape\n Target Report\n-Enable swap byte ordering extension instruction\n+Enable swap byte ordering extension instruction.\n \n mrtsc\n Target Report\n-Enable 64-bit Time-Stamp Counter extension instruction\n+Enable 64-bit Time-Stamp Counter extension instruction.\n \n mno-epilogue-cfi\n Target Report RejectNegative InverseMask(EPILOGUE_CFI)\n@@ -337,23 +337,23 @@ Pass -marclinux_prof option through to linker.\n ; so don't enable by default.\n mlra\n Target Mask(LRA)\n-Enable lra\n+Enable lra.\n \n mlra-priority-none\n Target RejectNegative Var(arc_lra_priority_tag, ARC_LRA_PRIORITY_NONE)\n-Don't indicate any priority with TARGET_REGISTER_PRIORITY\n+Don't indicate any priority with TARGET_REGISTER_PRIORITY.\n \n mlra-priority-compact\n Target RejectNegative Var(arc_lra_prioritytag, ARC_LRA_PRIORITY_COMPACT)\n-Indicate priority for r0..r3 / r12..r15 with TARGET_REGISTER_PRIORITY\n+Indicate priority for r0..r3 / r12..r15 with TARGET_REGISTER_PRIORITY.\n \n mlra-priority-noncompact\n Target RejectNegative Var(arc_lra_prioritytag, ARC_LRA_PRIORITY_NONCOMPACT)\n-Reduce priority for r0..r3 / r12..r15 with TARGET_REGISTER_PRIORITY\n+Reduce priority for r0..r3 / r12..r15 with TARGET_REGISTER_PRIORITY.\n \n mucb-mcount\n Target Report Var(TARGET_UCB_MCOUNT)\n-instrument with mcount calls as in the ucb code\n+instrument with mcount calls as in the ucb code.\n \n ; backward-compatibility aliases, translated by DRIVER_SELF_SPECS\n "}, {"sha": "666ff73226485ff122955393efdec50a8d0af97d", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -33,7 +33,7 @@ Enum(tls_type) String(gnu2) Value(TLS_GNU2)\n \n mabi=\n Target RejectNegative Joined Enum(arm_abi_type) Var(arm_abi) Init(ARM_DEFAULT_ABI)\n-Specify an ABI\n+Specify an ABI.\n \n Enum\n Name(arm_abi_type) Type(enum arm_abi_type)\n@@ -56,29 +56,29 @@ Enum(arm_abi_type) String(aapcs-linux) Value(ARM_ABI_AAPCS_LINUX)\n \n mabort-on-noreturn\n Target Report Mask(ABORT_NORETURN)\n-Generate a call to abort if a noreturn function returns\n+Generate a call to abort if a noreturn function returns.\n \n mapcs\n Target RejectNegative Mask(APCS_FRAME) Undocumented\n \n mapcs-float\n Target Report Mask(APCS_FLOAT)\n-Pass FP arguments in FP registers\n+Pass FP arguments in FP registers.\n \n mapcs-frame\n Target Report Mask(APCS_FRAME)\n-Generate APCS conformant stack frames\n+Generate APCS conformant stack frames.\n \n mapcs-reentrant\n Target Report Mask(APCS_REENT)\n-Generate re-entrant, PIC code\n+Generate re-entrant, PIC code.\n \n mapcs-stack-check\n Target Report Mask(APCS_STACK) Undocumented\n \n march=\n Target RejectNegative ToLower Joined Enum(arm_arch) Var(arm_arch_option)\n-Specify the name of the target architecture\n+Specify the name of the target architecture.\n \n ; Other arm_arch values are loaded from arm-tables.opt\n ; but that is a generated file and this is an odd-one-out.\n@@ -91,23 +91,23 @@ Generate code in 32 bit ARM state.\n \n mbig-endian\n Target Report RejectNegative Mask(BIG_END)\n-Assume target CPU is configured as big endian\n+Assume target CPU is configured as big endian.\n \n mcallee-super-interworking\n Target Report Mask(CALLEE_INTERWORKING)\n-Thumb: Assume non-static functions may be called from ARM code\n+Thumb: Assume non-static functions may be called from ARM code.\n \n mcaller-super-interworking\n Target Report Mask(CALLER_INTERWORKING)\n-Thumb: Assume function pointers may go to non-Thumb aware code\n+Thumb: Assume function pointers may go to non-Thumb aware code.\n \n mcpu=\n Target RejectNegative ToLower Joined Enum(processor_type) Var(arm_cpu_option) Init(arm_none)\n-Specify the name of the target CPU\n+Specify the name of the target CPU.\n \n mfloat-abi=\n Target RejectNegative Joined Enum(float_abi_type) Var(arm_float_abi) Init(TARGET_DEFAULT_FLOAT_ABI)\n-Specify if floating point hardware should be used\n+Specify if floating point hardware should be used.\n \n Enum\n Name(float_abi_type) Type(enum float_abi_type)\n@@ -124,11 +124,11 @@ Enum(float_abi_type) String(hard) Value(ARM_FLOAT_ABI_HARD)\n \n mflip-thumb\n Target Report Var(TARGET_FLIP_THUMB) Undocumented\n-Switch ARM/Thumb modes on alternating functions for compiler testing\n+Switch ARM/Thumb modes on alternating functions for compiler testing.\n \n mfp16-format=\n Target RejectNegative Joined Enum(arm_fp16_format_type) Var(arm_fp16_format) Init(ARM_FP16_FORMAT_NONE)\n-Specify the __fp16 floating-point format\n+Specify the __fp16 floating-point format.\n \n Enum\n Name(arm_fp16_format_type) Type(enum arm_fp16_format_type)\n@@ -145,61 +145,61 @@ Enum(arm_fp16_format_type) String(alternative) Value(ARM_FP16_FORMAT_ALTERNATIVE\n \n mfpu=\n Target RejectNegative Joined Enum(arm_fpu) Var(arm_fpu_index)\n-Specify the name of the target floating point hardware/format\n+Specify the name of the target floating point hardware/format.\n \n mhard-float\n Target RejectNegative Alias(mfloat-abi=, hard) Undocumented\n \n mlittle-endian\n Target Report RejectNegative InverseMask(BIG_END)\n-Assume target CPU is configured as little endian\n+Assume target CPU is configured as little endian.\n \n mlong-calls\n Target Report Mask(LONG_CALLS)\n-Generate call insns as indirect calls, if necessary\n+Generate call insns as indirect calls, if necessary.\n \n mpic-data-is-text-relative\n Target Report Var(arm_pic_data_is_text_relative) Init(TARGET_DEFAULT_PIC_DATA_IS_TEXT_RELATIVE)\n Assume data segments are relative to text segment.\n \n mpic-register=\n Target RejectNegative Joined Var(arm_pic_register_string)\n-Specify the register to be used for PIC addressing\n+Specify the register to be used for PIC addressing.\n \n mpoke-function-name\n Target Report Mask(POKE_FUNCTION_NAME)\n-Store function names in object code\n+Store function names in object code.\n \n msched-prolog\n Target Report Mask(SCHED_PROLOG)\n-Permit scheduling of a function's prologue sequence\n+Permit scheduling of a function's prologue sequence.\n \n msingle-pic-base\n Target Report Mask(SINGLE_PIC_BASE)\n-Do not load the PIC register in function prologues\n+Do not load the PIC register in function prologues.\n \n msoft-float\n Target RejectNegative Alias(mfloat-abi=, soft) Undocumented\n \n mstructure-size-boundary=\n Target RejectNegative Joined UInteger Var(arm_structure_size_boundary) Init(DEFAULT_STRUCTURE_SIZE_BOUNDARY)\n-Specify the minimum bit alignment of structures\n+Specify the minimum bit alignment of structures.\n \n mthumb\n Target Report RejectNegative Mask(THUMB) Save\n-Generate code for Thumb state\n+Generate code for Thumb state.\n \n mthumb-interwork\n Target Report Mask(INTERWORK)\n-Support calls between Thumb and ARM instruction sets\n+Support calls between Thumb and ARM instruction sets.\n \n mtls-dialect=\n Target RejectNegative Joined Enum(tls_type) Var(target_tls_dialect) Init(TLS_GNU)\n-Specify thread local storage scheme\n+Specify thread local storage scheme.\n \n mtp=\n Target RejectNegative Joined Enum(arm_tp_type) Var(target_thread_pointer) Init(TP_AUTO)\n-Specify how to access the thread pointer\n+Specify how to access the thread pointer.\n \n Enum\n Name(arm_tp_type) Type(enum arm_tp_type)\n@@ -216,15 +216,15 @@ Enum(arm_tp_type) String(cp15) Value(TP_CP15)\n \n mtpcs-frame\n Target Report Mask(TPCS_FRAME)\n-Thumb: Generate (non-leaf) stack frames even if not needed\n+Thumb: Generate (non-leaf) stack frames even if not needed.\n \n mtpcs-leaf-frame\n Target Report Mask(TPCS_LEAF_FRAME)\n-Thumb: Generate (leaf) stack frames even if not needed\n+Thumb: Generate (leaf) stack frames even if not needed.\n \n mtune=\n Target RejectNegative ToLower Joined Enum(processor_type) Var(arm_tune_option) Init(arm_none)\n-Tune code for the given processor\n+Tune code for the given processor.\n \n mprint-tune-info\n Target Report RejectNegative Var(print_tune_info) Init(0)\n@@ -239,11 +239,11 @@ Enum(processor_type) String(native) Value(-1) DriverOnly\n \n mvectorize-with-neon-quad\n Target Report RejectNegative InverseMask(NEON_VECTORIZE_DOUBLE)\n-Use Neon quad-word (rather than double-word) registers for vectorization\n+Use Neon quad-word (rather than double-word) registers for vectorization.\n \n mvectorize-with-neon-double\n Target Report RejectNegative Mask(NEON_VECTORIZE_DOUBLE)\n-Use Neon double-word (rather than quad-word) registers for vectorization\n+Use Neon double-word (rather than quad-word) registers for vectorization.\n \n mword-relocations\n Target Report Var(target_word_relocations) Init(TARGET_DEFAULT_WORD_RELOCATIONS)"}, {"sha": "86245768064bc1e6590c30538ebb9cd842d6c490", "filename": "gcc/config/avr/avr.opt", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Favr%2Favr.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Favr%2Favr.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,23 +20,23 @@\n \n mcall-prologues\n Target Report Mask(CALL_PROLOGUES)\n-Use subroutines for function prologues and epilogues\n+Use subroutines for function prologues and epilogues.\n \n mmcu=\n Target RejectNegative Joined Var(avr_mmcu) MissingArgError(missing device or architecture after %qs)\n--mmcu=MCU\tSelect the target MCU\n+-mmcu=MCU\tSelect the target MCU.\n \n mn-flash=\n Target RejectNegative Joined Var(avr_n_flash) UInteger Init(-1)\n-Set the number of 64 KiB flash segments\n+Set the number of 64 KiB flash segments.\n \n mskip-bug\n Target Report Mask(SKIP_BUG)\n-Indicate presence of a processor erratum\n+Indicate presence of a processor erratum.\n \n mrmw\n Target Report Mask(RMW)\n-Enable Read-Modify-Write (RMW) instructions support/use\n+Enable Read-Modify-Write (RMW) instructions support/use.\n \n mdeb\n Target Report Undocumented Mask(ALL_DEBUG)\n@@ -46,11 +46,11 @@ Target RejectNegative Joined Undocumented Var(avr_log_details)\n \n mint8\n Target Report Mask(INT8)\n-Use an 8-bit 'int' type\n+Use an 8-bit 'int' type.\n \n mno-interrupts\n Target Report RejectNegative Mask(NO_INTERRUPTS)\n-Change the stack pointer without disabling interrupts\n+Change the stack pointer without disabling interrupts.\n \n mbranch-cost=\n Target Report Joined RejectNegative UInteger Var(avr_branch_cost) Init(0)\n@@ -64,11 +64,11 @@ Target Report Undocumented Mask(ORDER_2)\n \n mtiny-stack\n Target Report Mask(TINY_STACK)\n-Change only the low 8 bits of the stack pointer\n+Change only the low 8 bits of the stack pointer.\n \n mrelax\n Target Report\n-Relax branches\n+Relax branches.\n \n mpmem-wrap-around\n Target Report\n@@ -93,8 +93,8 @@ Warn if the address space of an address is changed.\n \n mfract-convert-truncate\n Target Report Mask(FRACT_CONV_TRUNC)\n-Allow to use truncation instead of rounding towards 0 for fractional int types\n+Allow to use truncation instead of rounding towards 0 for fractional int types.\n \n nodevicelib\n Driver Target Report RejectNegative\n-Do not link against the device-specific library lib<MCU>.a\n+Do not link against the device-specific library lib<MCU>.a."}, {"sha": "bf7ad5b088604e08bd2c56c1ebeafb1ac2a0e1f1", "filename": "gcc/config/bfin/bfin.opt", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fbfin%2Fbfin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -37,19 +37,19 @@ unsigned int bfin_workarounds = 0\n \n msim\n Target RejectNegative\n-Use simulator runtime\n+Use simulator runtime.\n \n mcpu=\n Target RejectNegative Joined\n-Specify the name of the target CPU\n+Specify the name of the target CPU.\n \n momit-leaf-frame-pointer\n Target Report Mask(OMIT_LEAF_FRAME_POINTER)\n-Omit frame pointer for leaf functions\n+Omit frame pointer for leaf functions.\n \n mlow64k\n Target Report Mask(LOW_64K)\n-Program is entirely located in low 64k of memory\n+Program is entirely located in low 64k of memory.\n \n mcsync-anomaly\n Target Report Var(bfin_csync_anomaly) Init(-1)\n@@ -62,7 +62,7 @@ Avoid speculative loads to work around a hardware anomaly.\n \n mid-shared-library\n Target Report Mask(ID_SHARED_LIBRARY)\n-Enabled ID based shared library\n+Enabled ID based shared library.\n \n mleaf-id-shared-library\n Target Report Mask(LEAF_ID_SHARED_LIBRARY)\n@@ -71,47 +71,47 @@ but may be used as a shared library.\n \n mshared-library-id=\n Target RejectNegative Joined UInteger Var(bfin_library_id)\n-ID of shared library to build\n+ID of shared library to build.\n \n msep-data\n Target Report Mask(SEP_DATA)\n-Enable separate data segment\n+Enable separate data segment.\n \n mlong-calls\n Target Report Mask(LONG_CALLS)\n-Avoid generating pc-relative calls; use indirection\n+Avoid generating pc-relative calls; use indirection.\n \n mfast-fp\n Target Report Mask(FAST_FP)\n-Link with the fast floating-point library\n+Link with the fast floating-point library.\n \n mfdpic\n Target Report Mask(FDPIC)\n-Enable Function Descriptor PIC mode\n+Enable Function Descriptor PIC mode.\n \n minline-plt\n Target Report Mask(INLINE_PLT)\n-Enable inlining of PLT in function calls\n+Enable inlining of PLT in function calls.\n \n mstack-check-l1\n Target Report Mask(STACK_CHECK_L1)\n-Do stack checking using bounds in L1 scratch memory\n+Do stack checking using bounds in L1 scratch memory.\n \n mmulticore\n Target Report Mask(MULTICORE)\n-Enable multicore support\n+Enable multicore support.\n \n mcorea\n Target Report Mask(COREA)\n-Build for Core A\n+Build for Core A.\n \n mcoreb\n Target Report Mask(COREB)\n-Build for Core B\n+Build for Core B.\n \n msdram\n Target Report Mask(SDRAM)\n-Build for SDRAM\n+Build for SDRAM.\n \n micplb\n Target Report Mask(ICPLB)"}, {"sha": "72fd8fb6dad0b2a1eb36b719236ad5ece603ee55", "filename": "gcc/config/c6x/c6x.opt", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fc6x%2Fc6x.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fc6x%2Fc6x.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc6x%2Fc6x.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -27,23 +27,23 @@ config/c6x/c6x-opts.h\n \n mbig-endian\n Target Report RejectNegative Mask(BIG_ENDIAN)\n-Use big-endian byte order\n+Use big-endian byte order.\n \n mlittle-endian\n Target Report RejectNegative InverseMask(BIG_ENDIAN, LITTLE_ENDIAN)\n-Use little-endian byte order\n+Use little-endian byte order.\n \n msim\n Target RejectNegative\n-Use simulator runtime\n+Use simulator runtime.\n \n msdata=\n Target RejectNegative Enum(c6x_sdata) Joined Var(c6x_sdata_mode) Init(C6X_SDATA_DEFAULT)\n-Select method for sdata handling\n+Select method for sdata handling.\n \n Enum\n Name(c6x_sdata) Type(enum c6x_sdata)\n-Valid arguments for the -msdata= option\n+Valid arguments for the -msdata= option.\n \n EnumValue\n Enum(c6x_sdata) String(none) Value(C6X_SDATA_NONE)\n@@ -56,12 +56,12 @@ Enum(c6x_sdata) String(all) Value(C6X_SDATA_ALL)\n \n mdsbt\n Target Mask(DSBT)\n-Compile for the DSBT shared library ABI\n+Compile for the DSBT shared library ABI.\n \n mlong-calls\n Target Report Mask(LONG_CALLS)\n-Avoid generating pc-relative calls; use indirection\n+Avoid generating pc-relative calls; use indirection.\n \n march=\n Target RejectNegative Joined Enum(c6x_isa) Var(c6x_arch_option)\n-Specify the name of the target architecture\n+Specify the name of the target architecture."}, {"sha": "02d8609e914d68e9d74f25dc6c919afd230bada4", "filename": "gcc/config/cr16/cr16.opt", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fcr16%2Fcr16.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fcr16%2Fcr16.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcr16%2Fcr16.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,30 +20,30 @@\n \n msim\n Target\n--msim   Use simulator runtime\n+-msim   Use simulator runtime.\n \n mbit-ops\n Target Report Mask(BIT_OPS)\n-Generate SBIT, CBIT instructions\n+Generate SBIT, CBIT instructions.\n \n mmac\n Target Report Mask(MAC)\n-Support multiply accumulate instructions\n+Support multiply accumulate instructions.\n \n mdebug-addr\n Target RejectNegative Var(TARGET_DEBUG_ADDR) Undocumented\n \n mdata-model=\n Target RejectNegative JoinedOrMissing Var(cr16_data_model)\n-Treat data references as near, far or medium. medium is default\n+Treat data references as near, far or medium. medium is default.\n \n mcr16c\n Target RejectNegative Mask(CR16C)\n-Generate code for CR16C architecture\n+Generate code for CR16C architecture.\n \n mcr16cplus\n Target RejectNegative InverseMask(CR16C,CR16CP)\n-Generate code for CR16C+ architecture (Default)\n+Generate code for CR16C+ architecture (Default).\n \n mint32\n Target RejectNegative Mask(INT32)"}, {"sha": "63f8a779068126c22ffd467557b78e5959c66804", "filename": "gcc/config/cris/cris.opt", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fcris%2Fcris.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fcris%2Fcris.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Fcris.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -42,33 +42,33 @@\n ; on the same page, including the TLB registers).\n mmul-bug-workaround\n Target Report Mask(MUL_BUG)\n-Work around bug in multiplication instruction\n+Work around bug in multiplication instruction.\n \n ; TARGET_ETRAX4_ADD: Instruction-set additions from Etrax 4 and up.\n ; (Just \"lz\".)\n metrax4\n Target Report Mask(ETRAX4_ADD)\n-Compile for ETRAX 4 (CRIS v3)\n+Compile for ETRAX 4 (CRIS v3).\n \n ; See cris_handle_option.\n metrax100\n Target Report RejectNegative\n-Compile for ETRAX 100 (CRIS v8)\n+Compile for ETRAX 100 (CRIS v8).\n \n ; See cris_handle_option.\n mno-etrax100\n Target Report RejectNegative Undocumented\n \n mpdebug\n Target Report Mask(PDEBUG)\n-Emit verbose debug information in assembly code\n+Emit verbose debug information in assembly code.\n \n ; TARGET_CCINIT: Whether to use condition-codes generated by\n ; insns other than the immediately preceding compare/test insn.\n ; Used to check for errors in notice_update_cc.\n mcc-init\n Target Report Mask(CCINIT)\n-Do not use condition codes from normal instructions\n+Do not use condition codes from normal instructions.\n \n ; TARGET_SIDE_EFFECT_PREFIXES: Whether to use side-effect\n ; patterns.  Used to debug the [rx=ry+i] type patterns.\n@@ -77,7 +77,7 @@ Target Report RejectNegative Mask(SIDE_EFFECT_PREFIXES) Undocumented\n \n mno-side-effects\n Target Report RejectNegative InverseMask(SIDE_EFFECT_PREFIXES)\n-Do not emit addressing modes with side-effect assignment\n+Do not emit addressing modes with side-effect assignment.\n \n ; TARGET_STACK_ALIGN: Whether to *keep* (not force) alignment of\n ; stack at 16 (or 32, depending on TARGET_ALIGN_BY_32) bits.\n@@ -86,7 +86,7 @@ Target Report RejectNegative Mask(STACK_ALIGN) Undocumented\n \n mno-stack-align\n Target Report RejectNegative InverseMask(STACK_ALIGN)\n-Do not tune stack alignment\n+Do not tune stack alignment.\n \n ; TARGET_DATA_ALIGN: Whether to do alignment on individual\n ; modifiable objects.\n@@ -95,7 +95,7 @@ Target Report RejectNegative Mask(DATA_ALIGN) Undocumented\n \n mno-data-align\n Target Report RejectNegative InverseMask(DATA_ALIGN)\n-Do not tune writable data alignment\n+Do not tune writable data alignment.\n \n ; TARGET_CONST_ALIGN: Whether to do alignment on individual\n ; non-modifiable objects.\n@@ -104,7 +104,7 @@ Target Report RejectNegative Mask(CONST_ALIGN) Undocumented\n \n mno-const-align\n Target Report RejectNegative InverseMask(CONST_ALIGN)\n-Do not tune code and read-only data alignment\n+Do not tune code and read-only data alignment.\n \n ; See cris_handle_option.\n m32-bit\n@@ -113,7 +113,7 @@ Target Report RejectNegative Undocumented\n ; See cris_handle_option.\n m32bit\n Target Report RejectNegative\n-Align code and data to 32 bits\n+Align code and data to 32 bits.\n \n ; See cris_handle_option.\n m16-bit\n@@ -130,7 +130,7 @@ Target Report RejectNegative Undocumented\n ; See cris_handle_option.\n m8bit\n Target Report RejectNegative\n-Don't align items in code or data\n+Don't align items in code or data.\n \n ; TARGET_PROLOGUE_EPILOGUE: Whether or not to omit function\n ; prologue and epilogue.\n@@ -139,14 +139,14 @@ Target Report RejectNegative Mask(PROLOGUE_EPILOGUE) Undocumented\n \n mno-prologue-epilogue\n Target Report RejectNegative InverseMask(PROLOGUE_EPILOGUE)\n-Do not emit function prologue or epilogue\n+Do not emit function prologue or epilogue.\n \n ; We have to handle this m-option here since we can't wash it\n ; off in both CC1_SPEC and CC1PLUS_SPEC.\n \n mbest-lib-options\n Target Report RejectNegative\n-Use the most feature-enabling options allowed by other options\n+Use the most feature-enabling options allowed by other options.\n \n ; FIXME: The following comment relates to gcc before cris.opt.\n ; Check if it's still valid:\n@@ -155,22 +155,22 @@ Use the most feature-enabling options allowed by other options\n ; Kludgy, but needed for some multilibbed files.\n moverride-best-lib-options\n Target Report RejectNegative\n-Override -mbest-lib-options\n+Override -mbest-lib-options.\n \n mcpu=\n Target Report RejectNegative Joined Undocumented Var(cris_cpu_str)\n \n march=\n Target Report RejectNegative Joined Var(cris_cpu_str)\n--march=ARCH\tGenerate code for the specified chip or CPU version\n+-march=ARCH\tGenerate code for the specified chip or CPU version.\n \n mtune=\n Target Report RejectNegative Joined Var(cris_tune_str)\n--mtune=ARCH\tTune alignment for the specified chip or CPU version\n+-mtune=ARCH\tTune alignment for the specified chip or CPU version.\n \n mmax-stackframe=\n Target Report RejectNegative Joined Var(cris_max_stackframe_str)\n--mmax-stackframe=SIZE\tWarn when a stackframe is larger than the specified size\n+-mmax-stackframe=SIZE\tWarn when a stackframe is larger than the specified size.\n \n max-stackframe=\n Target Report RejectNegative Joined Undocumented Var(cris_max_stackframe_str)\n@@ -181,7 +181,7 @@ Emit traps as \\\"break 8\\\", default for CRIS v3 and up.  If disabled, calls to ab\n \n mtrap-unaligned-atomic\n Target Report Var(cris_trap_unaligned_atomic) Init(2)\n-Emit checks causing \\\"break 8\\\" instructions to execute when applying atomic builtins on misaligned memory\n+Emit checks causing \\\"break 8\\\" instructions to execute when applying atomic builtins on misaligned memory.\n \n munaligned-atomic-may-use-library\n Target Report Var(cris_atomics_calling_libfunc) Init(2)"}, {"sha": "84ee07457b27d6de27f86849e9718294db548816", "filename": "gcc/config/cris/linux.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fcris%2Flinux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fcris%2Flinux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fcris%2Flinux.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -24,7 +24,7 @@ Target Report RejectNegative Undocumented\n \n mno-gotplt\n Target Report RejectNegative Mask(AVOID_GOTPLT)\n-Together with -fpic and -fPIC, do not use GOTPLT references\n+Together with -fpic and -fPIC, do not use GOTPLT references.\n \n ; There's a small added setup cost with using GOTPLT references\n ; for the first (resolving) call, but should in total be a win"}, {"sha": "518a6d14901501ab1ffdf74ef02cec838cdede13", "filename": "gcc/config/darwin.opt", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -111,7 +111,7 @@ Driver\n \n mconstant-cfstrings\n Target Report Var(darwin_constant_cfstrings) Init(1)\n-Generate compile-time CFString objects\n+Generate compile-time CFString objects.\n \n multi_module\n Driver RejectNegative Alias(Zmulti_module)\n@@ -208,44 +208,44 @@ Driver\n \n Wnonportable-cfstrings\n Target Report Var(darwin_warn_nonportable_cfstrings) Init(1) Warning\n-Warn if constant CFString objects contain non-portable characters\n+Warn if constant CFString objects contain non-portable characters.\n \n ; Use new-style pic stubs if this is true, x86 only so far.\n matt-stubs\n Target Report Var(darwin_macho_att_stub) Init(1)\n-Generate AT&T-style stubs for Mach-O\n+Generate AT&T-style stubs for Mach-O.\n \n mdynamic-no-pic\n Target Common Report Mask(MACHO_DYNAMIC_NO_PIC)\n-Generate code suitable for executables (NOT shared libs)\n+Generate code suitable for executables (NOT shared libs).\n \n mfix-and-continue\n Target Report Var(darwin_fix_and_continue)\n-Generate code suitable for fast turn around debugging\n+Generate code suitable for fast turn around debugging.\n \n ; The Init here is for the convenience of GCC developers, so that cc1\n ; and cc1plus don't crash if no -mmacosx-version-min is passed.  The\n ; driver will always pass a -mmacosx-version-min, so in normal use the\n ; Init is never used.\n mmacosx-version-min=\n Target Joined Report Var(darwin_macosx_version_min) Init(DEF_MIN_OSX_VERSION)\n-The earliest MacOS X version on which this program will run\n+The earliest MacOS X version on which this program will run.\n \n mone-byte-bool\n Target RejectNegative Report Var(darwin_one_byte_bool)\n-Set sizeof(bool) to 1\n+Set sizeof(bool) to 1.\n \n fapple-kext\n Target Report C++ Var(flag_apple_kext)\n-Generate code for darwin loadable kernel extensions\n+Generate code for darwin loadable kernel extensions.\n \n mkernel\n Target Report Var(flag_mkernel)\n-Generate code for the kernel or loadable kernel extensions\n+Generate code for the kernel or loadable kernel extensions.\n \n iframework\n Target RejectNegative C ObjC C++ ObjC++ Joined Separate \n--iframework <dir>\tAdd <dir> to the end of the system framework include path\n+-iframework <dir>\tAdd <dir> to the end of the system framework include path.\n \n X\n Driver"}, {"sha": "297ceb81a390e60903453daaa04d079aa440565c", "filename": "gcc/config/epiphany/epiphany.opt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fepiphany%2Fepiphany.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fepiphany%2Fepiphany.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -29,15 +29,15 @@ preferentially allocate registers that allow short instruction generation.\n \n mbranch-cost=\n Target RejectNegative Joined UInteger Var(epiphany_branch_cost) Init(3)\n-Set branch cost\n+Set branch cost.\n \n mcmove\n Target Mask(CMOVE)\n enable conditional move instruction usage.\n \n mnops=\n Target RejectNegative Joined UInteger Var(epiphany_n_nops) Init(0)\n-set number of nops to emit before each insn pattern\n+set number of nops to emit before each insn pattern.\n \n ; Problems with using the flags from fsub for comparison are:\n ; - Because of underflow (lack of subnormal numbers), different small numbers\n@@ -49,19 +49,19 @@ set number of nops to emit before each insn pattern\n ; equal.\n msoft-cmpsf\n Target Mask(SOFT_CMPSF)\n-Use software floating point comparisons\n+Use software floating point comparisons.\n \n msplit-lohi\n Target Mask(SPLIT_LOHI)\n-Enable split of 32 bit immediate loads into low / high part\n+Enable split of 32 bit immediate loads into low / high part.\n \n mpost-inc\n Target Mask(POST_INC)\n-Enable use of POST_INC / POST_DEC\n+Enable use of POST_INC / POST_DEC.\n \n mpost-modify\n Target Mask(POST_MODIFY)\n-Enable use of POST_MODIFY\n+Enable use of POST_MODIFY.\n \n mstack-offset=\n Target RejectNegative Joined UInteger Var(epiphany_stack_offset) Init(EPIPHANY_STACK_OFFSET)\n@@ -73,11 +73,11 @@ Assume round to nearest is selected for purposes of scheduling.\n \n mlong-calls\n Target Mask(LONG_CALLS)\n-Generate call insns as indirect calls\n+Generate call insns as indirect calls.\n \n mshort-calls\n Target Mask(SHORT_CALLS)\n-Generate call insns as direct calls\n+Generate call insns as direct calls.\n \n msmall16\n Target Mask(SMALL16)\n@@ -105,7 +105,7 @@ Enum(attr_fp_mode) String(int) Value(FP_MODE_INT)\n \n may-round-for-trunc\n Target Mask(MAY_ROUND_FOR_TRUNC)\n-A floatig point to integer truncation may be replaced with rounding to save mode switching\n+A floatig point to integer truncation may be replaced with rounding to save mode switching.\n \n mvect-double\n Target Mask(VECT_DOUBLE)"}, {"sha": "5a46014f2d977fb64e924fde8c75a545511708bc", "filename": "gcc/config/fr30/fr30.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Ffr30%2Ffr30.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Ffr30%2Ffr30.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,8 +20,8 @@\n \n msmall-model\n Target Report Mask(SMALL_MODEL)\n-Assume small address space\n+Assume small address space.\n \n mno-lsim\n Target RejectNegative\n-Assume that run-time support has been provided, so omit -lsim from the linker command line\n+Assume that run-time support has been provided, so omit -lsim from the linker command line."}, {"sha": "7a8659d243c69cb69547b850101ab2865880ecac", "filename": "gcc/config/frv/frv.opt", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Ffrv%2Ffrv.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Ffrv%2Ffrv.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffrv%2Ffrv.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -27,46 +27,46 @@ frv_cpu_t frv_cpu_type = CPU_TYPE\n \n macc-4\n Target Report RejectNegative Mask(ACC_4)\n-Use 4 media accumulators\n+Use 4 media accumulators.\n \n macc-8\n Target Report RejectNegative InverseMask(ACC_4, ACC_8)\n-Use 8 media accumulators\n+Use 8 media accumulators.\n \n malign-labels\n Target Report Mask(ALIGN_LABELS)\n-Enable label alignment optimizations\n+Enable label alignment optimizations.\n \n malloc-cc\n Target Report RejectNegative Mask(ALLOC_CC)\n-Dynamically allocate cc registers\n+Dynamically allocate cc registers.\n \n ; We used to default the branch cost to 2, but it was changed it to 1 to avoid\n ; generating SCC instructions and or/and-ing them together, and then doing the\n ; branch on the result, which collectively generate much worse code.\n mbranch-cost=\n Target RejectNegative Joined UInteger Var(frv_branch_cost_int) Init(1)\n-Set the cost of branches\n+Set the cost of branches.\n \n mcond-exec\n Target Report Mask(COND_EXEC)\n-Enable conditional execution other than moves/scc\n+Enable conditional execution other than moves/scc.\n \n mcond-exec-insns=\n Target RejectNegative Joined UInteger Var(frv_condexec_insns) Init(8)\n-Change the maximum length of conditionally-executed sequences\n+Change the maximum length of conditionally-executed sequences.\n \n mcond-exec-temps=\n Target RejectNegative Joined UInteger Var(frv_condexec_temps) Init(4)\n-Change the number of temporary registers that are available to conditionally-executed sequences\n+Change the number of temporary registers that are available to conditionally-executed sequences.\n \n mcond-move\n Target Report Mask(COND_MOVE)\n-Enable conditional moves\n+Enable conditional moves.\n \n mcpu=\n Target RejectNegative Joined Enum(frv_cpu) Var(frv_cpu_type)\n-Set the target CPU type\n+Set the target CPU type.\n \n Enum\n Name(frv_cpu) Type(frv_cpu_t)\n@@ -119,119 +119,119 @@ Target Undocumented Var(TARGET_DEBUG_STACK)\n \n mdouble\n Target Report Mask(DOUBLE)\n-Use fp double instructions\n+Use fp double instructions.\n \n mdword\n Target Report Mask(DWORD)\n-Change the ABI to allow double word insns\n+Change the ABI to allow double word insns.\n \n mfdpic\n Target Report Mask(FDPIC)\n-Enable Function Descriptor PIC mode\n+Enable Function Descriptor PIC mode.\n \n mfixed-cc\n Target Report RejectNegative InverseMask(ALLOC_CC, FIXED_CC)\n-Just use icc0/fcc0\n+Just use icc0/fcc0.\n \n mfpr-32\n Target Report RejectNegative Mask(FPR_32)\n-Only use 32 FPRs\n+Only use 32 FPRs.\n \n mfpr-64\n Target Report RejectNegative InverseMask(FPR_32, FPR_64)\n-Use 64 FPRs\n+Use 64 FPRs.\n \n mgpr-32\n Target Report RejectNegative Mask(GPR_32)\n-Only use 32 GPRs\n+Only use 32 GPRs.\n \n mgpr-64\n Target Report RejectNegative InverseMask(GPR_32, GPR_64)\n-Use 64 GPRs\n+Use 64 GPRs.\n \n mgprel-ro\n Target Report Mask(GPREL_RO)\n-Enable use of GPREL for read-only data in FDPIC\n+Enable use of GPREL for read-only data in FDPIC.\n \n mhard-float\n Target Report RejectNegative InverseMask(SOFT_FLOAT, HARD_FLOAT)\n-Use hardware floating point\n+Use hardware floating point.\n \n minline-plt\n Target Report Mask(INLINE_PLT)\n-Enable inlining of PLT in function calls\n+Enable inlining of PLT in function calls.\n \n mlibrary-pic\n Target Report Mask(LIBPIC)\n-Enable PIC support for building libraries\n+Enable PIC support for building libraries.\n \n mlinked-fp\n Target Report Mask(LINKED_FP)\n-Follow the EABI linkage requirements\n+Follow the EABI linkage requirements.\n \n mlong-calls\n Target Report Mask(LONG_CALLS)\n-Disallow direct calls to global functions\n+Disallow direct calls to global functions.\n \n mmedia\n Target Report Mask(MEDIA)\n-Use media instructions\n+Use media instructions.\n \n mmuladd\n Target Report Mask(MULADD)\n-Use multiply add/subtract instructions\n+Use multiply add/subtract instructions.\n \n mmulti-cond-exec\n Target Report Mask(MULTI_CE)\n-Enable optimizing &&/|| in conditional execution\n+Enable optimizing &&/|| in conditional execution.\n \n mnested-cond-exec\n Target Report Mask(NESTED_CE)\n-Enable nested conditional execution optimizations\n+Enable nested conditional execution optimizations.\n \n ; Not used by the compiler proper.\n mno-eflags\n Target RejectNegative\n-Do not mark ABI switches in e_flags\n+Do not mark ABI switches in e_flags.\n \n moptimize-membar\n Target Report Mask(OPTIMIZE_MEMBAR)\n-Remove redundant membars\n+Remove redundant membars.\n \n mpack\n Target Report Mask(PACK)\n-Pack VLIW instructions\n+Pack VLIW instructions.\n \n mscc\n Target Report Mask(SCC)\n-Enable setting GPRs to the result of comparisons\n+Enable setting GPRs to the result of comparisons.\n \n msched-lookahead=\n Target RejectNegative Joined UInteger Var(frv_sched_lookahead) Init(4)\n-Change the amount of scheduler lookahead\n+Change the amount of scheduler lookahead.\n \n msoft-float\n Target Report RejectNegative Mask(SOFT_FLOAT)\n-Use software floating point\n+Use software floating point.\n \n mTLS\n Target Report RejectNegative Mask(BIG_TLS)\n-Assume a large TLS segment\n+Assume a large TLS segment.\n \n mtls\n Target Report RejectNegative InverseMask(BIG_TLS)\n-Do not assume a large TLS segment\n+Do not assume a large TLS segment.\n \n ; Not used by the compiler proper.\n mtomcat-stats\n Target\n-Cause gas to print tomcat statistics\n+Cause gas to print tomcat statistics.\n \n ; Not used by the compiler proper.\n multilib-library-pic\n Target RejectNegative\n-Link with the library-pic libraries\n+Link with the library-pic libraries.\n \n mvliw-branch\n Target Report Mask(VLIW_BRANCH)\n-Allow branches to be packed with other instructions\n+Allow branches to be packed with other instructions."}, {"sha": "b9b7797c0942887d15ae586c72651a26bbaedae6", "filename": "gcc/config/ft32/ft32.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fft32%2Fft32.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fft32%2Fft32.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fft32%2Fft32.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,8 +20,8 @@\n \n msim\n Target Report Mask(SIM)\n-target the software simulator\n+target the software simulator.\n \n mlra\n Target Report Var(ft32_lra_flag) Init(0) Save\n-Use LRA instead of reload\n+Use LRA instead of reload."}, {"sha": "993dfa4dd922384eb461763dd9bc9961acea1666", "filename": "gcc/config/g.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fg.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fg.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fg.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -24,6 +24,6 @@\n \n G\n Target Joined Separate UInteger Var(g_switch_value)\n--G<number>\tPut global and static data smaller than <number> bytes into a special section (on some targets)\n+-G<number>\tPut global and static data smaller than <number> bytes into a special section (on some targets).\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "24ba66257bb4ba32e64cf58b359a2b2a530c471c", "filename": "gcc/config/h8300/h8300.opt", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fh8300%2Fh8300.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fh8300%2Fh8300.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,52 +20,52 @@\n \n ms\n Target Mask(H8300S_1)\n-Generate H8S code\n+Generate H8S code.\n \n msx\n Target Mask(H8300SX)\n-Generate H8SX code\n+Generate H8SX code.\n \n ms2600\n Target Mask(MAC)\n-Generate H8S/2600 code\n+Generate H8S/2600 code.\n \n mint32\n Target RejectNegative Mask(INT32)\n-Make integers 32 bits wide\n+Make integers 32 bits wide.\n \n maddresses\n Target Undocumented RejectNegative Mask(ADDRESSES)\n \n mquickcall\n Target Mask(QUICKCALL)\n-Use registers for argument passing\n+Use registers for argument passing.\n \n mslowbyte\n Target RejectNegative Mask(SLOWBYTE)\n-Consider access to byte sized memory slow\n+Consider access to byte sized memory slow.\n \n mrelax\n Target RejectNegative Mask(RELAX)\n-Enable linker relaxing\n+Enable linker relaxing.\n \n mh\n Target Mask(H8300H)\n-Generate H8/300H code\n+Generate H8/300H code.\n \n mn\n Target Mask(NORMAL_MODE)\n-Enable the normal mode\n+Enable the normal mode.\n \n malign-300\n Target RejectNegative Mask(ALIGN_300)\n-Use H8/300 alignment rules\n+Use H8/300 alignment rules.\n \n mexr\n Target Mask(EXR)\n-Push extended registers on stack in monitor functions\n+Push extended registers on stack in monitor functions.\n \n mno-exr\n Target Mask(NEXR)\n-Do not push extended registers on stack in monitor functions\n+Do not push extended registers on stack in monitor functions.\n "}, {"sha": "d9c1259e69cb99e95be7d40a23cbb3d10eb1b319", "filename": "gcc/config/i386/cygming.opt", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fcygming.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fcygming.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,35 +20,35 @@\n \n mconsole\n Target RejectNegative\n-Create console application\n+Create console application.\n \n mdll\n Target RejectNegative\n-Generate code for a DLL\n+Generate code for a DLL.\n \n mnop-fun-dllimport\n Target Report Var(TARGET_NOP_FUN_DLLIMPORT)\n-Ignore dllimport for functions\n+Ignore dllimport for functions.\n \n mthreads\n Target RejectNegative\n-Use Mingw-specific thread support\n+Use Mingw-specific thread support.\n \n mwin32\n Target\n-Set Windows defines\n+Set Windows defines.\n \n mwindows\n Target\n-Create GUI application\n+Create GUI application.\n \n mpe-aligned-commons\n Target Var(use_pe_aligned_common) Init(HAVE_GAS_ALIGNED_COMM)\n-Use the GNU extension to the PE format for aligned common data\n+Use the GNU extension to the PE format for aligned common data.\n \n muse-libstdc-wrappers\n Target Condition({defined (USE_CYGWIN_LIBSTDCXX_WRAPPERS)})\n-Compile code that relies on Cygwin DLL wrappers to support C++ operator new/delete replacement\n+Compile code that relies on Cygwin DLL wrappers to support C++ operator new/delete replacement.\n \n posix\n Driver"}, {"sha": "d52c77dee85bcdbd534254ed634c745a2a9034b4", "filename": "gcc/config/i386/djgpp.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fdjgpp.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fdjgpp.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -22,7 +22,7 @@\n ;; weak symbols, and .gnu.linkonce support.\n mbnu210\n Target Var(TARGET_BNU210)\n-Ignored (obsolete)\n+Ignored (obsolete).\n \n posix\n Driver"}, {"sha": "8acf0f4b3a0570e68873e9e1522bd94c9985f068", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 114, "deletions": 114, "changes": 228, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -179,55 +179,55 @@ enum ix86_veclibabi x_ix86_veclibabi_type\n ;; x86 options\n m128bit-long-double\n Target RejectNegative Report Mask(128BIT_LONG_DOUBLE) Save\n-sizeof(long double) is 16\n+sizeof(long double) is 16.\n \n m80387\n Target Report Mask(80387) Save\n-Use hardware fp\n+Use hardware fp.\n \n m96bit-long-double\n Target RejectNegative Report InverseMask(128BIT_LONG_DOUBLE) Save\n-sizeof(long double) is 12\n+sizeof(long double) is 12.\n \n mlong-double-80\n Target Report RejectNegative Negative(mlong-double-64) InverseMask(LONG_DOUBLE_64) Save\n-Use 80-bit long double\n+Use 80-bit long double.\n \n mlong-double-64\n Target Report RejectNegative Negative(mlong-double-128) Mask(LONG_DOUBLE_64) InverseMask(LONG_DOUBLE_128) Save\n-Use 64-bit long double\n+Use 64-bit long double.\n \n mlong-double-128\n Target Report RejectNegative Negative(mlong-double-80) Mask(LONG_DOUBLE_128) InverseMask(LONG_DOUBLE_64) Save\n-Use 128-bit long double\n+Use 128-bit long double.\n \n maccumulate-outgoing-args\n Target Report Mask(ACCUMULATE_OUTGOING_ARGS) Save\n-Reserve space for outgoing arguments in the function prologue\n+Reserve space for outgoing arguments in the function prologue.\n \n malign-double\n Target Report Mask(ALIGN_DOUBLE) Save\n-Align some doubles on dword boundary\n+Align some doubles on dword boundary.\n \n malign-functions=\n Target RejectNegative Joined UInteger\n-Function starts are aligned to this power of 2\n+Function starts are aligned to this power of 2.\n \n malign-jumps=\n Target RejectNegative Joined UInteger\n-Jump targets are aligned to this power of 2\n+Jump targets are aligned to this power of 2.\n \n malign-loops=\n Target RejectNegative Joined UInteger\n-Loop code aligned to this power of 2\n+Loop code aligned to this power of 2.\n \n malign-stringops\n Target RejectNegative Report InverseMask(NO_ALIGN_STRINGOPS, ALIGN_STRINGOPS) Save\n-Align destination of the string operations\n+Align destination of the string operations.\n \n malign-data=\n Target RejectNegative Joined Var(ix86_align_data_type) Enum(ix86_align_data) Init(ix86_align_data_type_compat)\n-Use the given data alignment\n+Use the given data alignment.\n \n Enum\n Name(ix86_align_data) Type(enum ix86_align_data)\n@@ -244,11 +244,11 @@ Enum(ix86_align_data) String(cacheline) Value(ix86_align_data_type_cacheline)\n \n march=\n Target RejectNegative Joined Var(ix86_arch_string)\n-Generate code for given CPU\n+Generate code for given CPU.\n \n masm=\n Target RejectNegative Joined Enum(asm_dialect) Var(ix86_asm_dialect) Init(ASM_ATT)\n-Use given assembler dialect\n+Use given assembler dialect.\n \n Enum\n Name(asm_dialect) Type(enum asm_dialect)\n@@ -262,15 +262,15 @@ Enum(asm_dialect) String(att) Value(ASM_ATT)\n \n mbranch-cost=\n Target RejectNegative Joined UInteger Var(ix86_branch_cost)\n-Branches are this expensive (1-5, arbitrary units)\n+Branches are this expensive (1-5, arbitrary units).\n \n mlarge-data-threshold=\n Target RejectNegative Joined UInteger Var(ix86_section_threshold) Init(DEFAULT_LARGE_SECTION_THRESHOLD)\n-Data greater than given threshold will go into .ldata section in x86-64 medium model\n+Data greater than given threshold will go into .ldata section in x86-64 medium model.\n \n mcmodel=\n Target RejectNegative Joined Enum(cmodel) Var(ix86_cmodel) Init(CM_32)\n-Use given x86-64 code model\n+Use given x86-64 code model.\n \n Enum\n Name(cmodel) Type(enum cmodel)\n@@ -293,7 +293,7 @@ Enum(cmodel) String(kernel) Value(CM_KERNEL)\n \n maddress-mode=\n Target RejectNegative Joined Enum(pmode) Var(ix86_pmode) Init(PMODE_SI)\n-Use given address mode\n+Use given address mode.\n \n Enum\n Name(pmode) Type(enum pmode)\n@@ -310,19 +310,19 @@ Target RejectNegative Joined Undocumented Alias(mtune=) Warn(%<-mcpu=%> is depre\n \n mfancy-math-387\n Target RejectNegative Report InverseMask(NO_FANCY_MATH_387, USE_FANCY_MATH_387) Save\n-Generate sin, cos, sqrt for FPU\n+Generate sin, cos, sqrt for FPU.\n \n mforce-drap\n Target Report Var(ix86_force_drap)\n-Always use Dynamic Realigned Argument Pointer (DRAP) to realign stack\n+Always use Dynamic Realigned Argument Pointer (DRAP) to realign stack.\n \n mfp-ret-in-387\n Target Report Mask(FLOAT_RETURNS) Save\n-Return values of functions in FPU registers\n+Return values of functions in FPU registers.\n \n mfpmath=\n Target RejectNegative Joined Var(ix86_fpmath) Enum(fpmath_unit) Init(FPMATH_387) Save\n-Generate floating point mathematics using given instruction set\n+Generate floating point mathematics using given instruction set.\n \n Enum\n Name(fpmath_unit) Type(enum fpmath_unit)\n@@ -351,27 +351,27 @@ Enum(fpmath_unit) String(both) Value({(enum fpmath_unit) (FPMATH_SSE | FPMATH_38\n \n mhard-float\n Target RejectNegative Mask(80387) Save\n-Use hardware fp\n+Use hardware fp.\n \n mieee-fp\n Target Report Mask(IEEE_FP) Save\n-Use IEEE math for fp comparisons\n+Use IEEE math for fp comparisons.\n \n minline-all-stringops\n Target Report Mask(INLINE_ALL_STRINGOPS) Save\n-Inline all known string operations\n+Inline all known string operations.\n \n minline-stringops-dynamically\n Target Report Mask(INLINE_STRINGOPS_DYNAMICALLY) Save\n-Inline memset/memcpy string operations, but perform inline version only for small blocks\n+Inline memset/memcpy string operations, but perform inline version only for small blocks.\n \n mintel-syntax\n Target Undocumented Alias(masm=, intel, att) Warn(%<-mintel-syntax%> and %<-mno-intel-syntax%> are deprecated; use %<-masm=intel%> and %<-masm=att%> instead)\n ;; Deprecated\n \n mms-bitfields\n Target Report Mask(MS_BITFIELD_LAYOUT) Save\n-Use native (MS) bitfield layout\n+Use native (MS) bitfield layout.\n \n mno-align-stringops\n Target RejectNegative Report Mask(NO_ALIGN_STRINGOPS) Undocumented Save\n@@ -387,71 +387,71 @@ Target RejectNegative Report Mask(NO_RED_ZONE) Undocumented Save\n \n momit-leaf-frame-pointer\n Target Report Mask(OMIT_LEAF_FRAME_POINTER) Save\n-Omit the frame pointer in leaf functions\n+Omit the frame pointer in leaf functions.\n \n mpc32\n Target RejectNegative Report\n-Set 80387 floating-point precision to 32-bit\n+Set 80387 floating-point precision to 32-bit.\n \n mpc64\n Target RejectNegative Report\n-Set 80387 floating-point precision to 64-bit\n+Set 80387 floating-point precision to 64-bit.\n \n mpc80\n Target RejectNegative Report\n-Set 80387 floating-point precision to 80-bit\n+Set 80387 floating-point precision to 80-bit.\n \n mpreferred-stack-boundary=\n Target RejectNegative Joined UInteger Var(ix86_preferred_stack_boundary_arg)\n-Attempt to keep stack aligned to this power of 2\n+Attempt to keep stack aligned to this power of 2.\n \n mincoming-stack-boundary=\n Target RejectNegative Joined UInteger Var(ix86_incoming_stack_boundary_arg)\n-Assume incoming stack aligned to this power of 2\n+Assume incoming stack aligned to this power of 2.\n \n mpush-args\n Target Report InverseMask(NO_PUSH_ARGS, PUSH_ARGS) Save\n-Use push instructions to save outgoing arguments\n+Use push instructions to save outgoing arguments.\n \n mred-zone\n Target RejectNegative Report InverseMask(NO_RED_ZONE, RED_ZONE) Save\n-Use red-zone in the x86-64 code\n+Use red-zone in the x86-64 code.\n \n mregparm=\n Target RejectNegative Joined UInteger Var(ix86_regparm)\n-Number of registers used to pass integer arguments\n+Number of registers used to pass integer arguments.\n \n mrtd\n Target Report Mask(RTD) Save\n-Alternate calling convention\n+Alternate calling convention.\n \n msoft-float\n Target InverseMask(80387) Save\n-Do not use hardware fp\n+Do not use hardware fp.\n \n msseregparm\n Target RejectNegative Mask(SSEREGPARM) Save\n-Use SSE register passing conventions for SF and DF mode\n+Use SSE register passing conventions for SF and DF mode.\n \n mstackrealign\n Target Report Var(ix86_force_align_arg_pointer) Init(-1)\n-Realign stack in prologue\n+Realign stack in prologue.\n \n mstack-arg-probe\n Target Report Mask(STACK_PROBE) Save\n-Enable stack probing\n+Enable stack probing.\n \n mmemcpy-strategy=\n Target RejectNegative Joined Var(ix86_tune_memcpy_strategy)\n-Specify memcpy expansion strategy when expected size is known\n+Specify memcpy expansion strategy when expected size is known.\n \n mmemset-strategy=\n Target RejectNegative Joined Var(ix86_tune_memset_strategy)\n-Specify memset expansion strategy when expected size is known\n+Specify memset expansion strategy when expected size is known.\n \n mstringop-strategy=\n Target RejectNegative Joined Enum(stringop_alg) Var(ix86_stringop_alg) Init(no_stringop)\n-Chose strategy to generate stringop using\n+Chose strategy to generate stringop using.\n \n Enum\n Name(stringop_alg) Type(enum stringop_alg)\n@@ -483,7 +483,7 @@ Enum(stringop_alg) String(vector_loop) Value(vector_loop)\n \n mtls-dialect=\n Target RejectNegative Joined Var(ix86_tls_dialect) Enum(tls_dialect) Init(TLS_DIALECT_GNU)\n-Use given thread-local storage dialect\n+Use given thread-local storage dialect.\n \n Enum\n Name(tls_dialect) Type(enum tls_dialect)\n@@ -497,30 +497,30 @@ Enum(tls_dialect) String(gnu2) Value(TLS_DIALECT_GNU2)\n \n mtls-direct-seg-refs\n Target Report Mask(TLS_DIRECT_SEG_REFS)\n-Use direct references against %gs when accessing tls data\n+Use direct references against %gs when accessing tls data.\n \n mtune=\n Target RejectNegative Joined Var(ix86_tune_string)\n-Schedule code for given CPU\n+Schedule code for given CPU.\n \n mtune-ctrl=\n Target RejectNegative Joined Var(ix86_tune_ctrl_string)\n-Fine grain control of tune features\n+Fine grain control of tune features.\n \n mno-default\n Target RejectNegative Var(ix86_tune_no_default) Init(0)\n-Clear all tune features\n+Clear all tune features.\n \n mdump-tune-features\n Target RejectNegative Var(ix86_dump_tunes) Init(0)\n \n miamcu\n Target Report Mask(IAMCU)\n-Generate code that conforms to Intel MCU psABI\n+Generate code that conforms to Intel MCU psABI.\n \n mabi=\n Target RejectNegative Joined Var(ix86_abi) Enum(calling_abi) Init(SYSV_ABI)\n-Generate code that conforms to the given ABI\n+Generate code that conforms to the given ABI.\n \n Enum\n Name(calling_abi) Type(enum calling_abi)\n@@ -534,7 +534,7 @@ Enum(calling_abi) String(ms) Value(MS_ABI)\n \n mveclibabi=\n Target RejectNegative Joined Var(ix86_veclibabi_type) Enum(ix86_veclibabi) Init(ix86_veclibabi_type_none)\n-Vector library ABI to use\n+Vector library ABI to use.\n \n Enum\n Name(ix86_veclibabi) Type(enum ix86_veclibabi)\n@@ -548,7 +548,7 @@ Enum(ix86_veclibabi) String(acml) Value(ix86_veclibabi_type_acml)\n \n mvect8-ret-in-mem\n Target Report Mask(VECT8_RETURNS) Save\n-Return 8-byte vectors in memory\n+Return 8-byte vectors in memory.\n \n mrecip\n Target Report Mask(RECIP) Save\n@@ -585,119 +585,119 @@ Use 128-bit AVX instructions instead of 256-bit AVX instructions in the auto-vec\n \n m32\n Target RejectNegative Negative(m64) Report InverseMask(ISA_64BIT) Var(ix86_isa_flags) Save\n-Generate 32bit i386 code\n+Generate 32bit i386 code.\n \n m64\n Target RejectNegative Negative(mx32) Report Mask(ABI_64) Var(ix86_isa_flags) Save\n-Generate 64bit x86-64 code\n+Generate 64bit x86-64 code.\n \n mx32\n Target RejectNegative Negative(m16) Report Mask(ABI_X32) Var(ix86_isa_flags) Save\n-Generate 32bit x86-64 code\n+Generate 32bit x86-64 code.\n \n m16\n Target RejectNegative Negative(m32) Report Mask(CODE16) InverseMask(ISA_64BIT) Var(ix86_isa_flags) Save\n-Generate 16bit i386 code\n+Generate 16bit i386 code.\n \n mmmx\n Target Report Mask(ISA_MMX) Var(ix86_isa_flags) Save\n-Support MMX built-in functions\n+Support MMX built-in functions.\n \n m3dnow\n Target Report Mask(ISA_3DNOW) Var(ix86_isa_flags) Save\n-Support 3DNow! built-in functions\n+Support 3DNow! built-in functions.\n \n m3dnowa\n Target Undocumented Mask(ISA_3DNOW_A) Var(ix86_isa_flags) Save\n-Support Athlon 3Dnow! built-in functions\n+Support Athlon 3Dnow! built-in functions.\n \n msse\n Target Report Mask(ISA_SSE) Var(ix86_isa_flags) Save\n-Support MMX and SSE built-in functions and code generation\n+Support MMX and SSE built-in functions and code generation.\n \n msse2\n Target Report Mask(ISA_SSE2) Var(ix86_isa_flags) Save\n-Support MMX, SSE and SSE2 built-in functions and code generation\n+Support MMX, SSE and SSE2 built-in functions and code generation.\n \n msse3\n Target Report Mask(ISA_SSE3) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2 and SSE3 built-in functions and code generation\n+Support MMX, SSE, SSE2 and SSE3 built-in functions and code generation.\n \n mssse3\n Target Report Mask(ISA_SSSE3) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3 and SSSE3 built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3 and SSSE3 built-in functions and code generation.\n \n msse4.1\n Target Report Mask(ISA_SSE4_1) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3 and SSE4.1 built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3 and SSE4.1 built-in functions and code generation.\n \n msse4.2\n Target Report Mask(ISA_SSE4_2) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation.\n \n msse4\n Target RejectNegative Report Mask(ISA_SSE4_2) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1 and SSE4.2 built-in functions and code generation.\n \n mno-sse4\n Target RejectNegative Report InverseMask(ISA_SSE4_1) Var(ix86_isa_flags) Save\n-Do not support SSE4.1 and SSE4.2 built-in functions and code generation\n+Do not support SSE4.1 and SSE4.2 built-in functions and code generation.\n \n msse5\n Target Undocumented Alias(mavx) Warn(%<-msse5%> was removed)\n ;; Deprecated\n \n mavx\n Target Report Mask(ISA_AVX) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2 and AVX built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2 and AVX built-in functions and code generation.\n \n mavx2\n Target Report Mask(ISA_AVX2) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and AVX2 built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and AVX2 built-in functions and code generation.\n \n mavx512f\n Target Report Mask(ISA_AVX512F) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F built-in functions and code generation.\n \n mavx512pf\n Target Report Mask(ISA_AVX512PF) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512PF built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512PF built-in functions and code generation.\n \n mavx512er\n Target Report Mask(ISA_AVX512ER) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512ER built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512ER built-in functions and code generation.\n \n mavx512cd\n Target Report Mask(ISA_AVX512CD) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512CD built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512CD built-in functions and code generation.\n \n mavx512dq\n Target Report Mask(ISA_AVX512DQ) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512DQ built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512DQ built-in functions and code generation.\n \n mavx512bw\n Target Report Mask(ISA_AVX512BW) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512BW built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512BW built-in functions and code generation.\n \n mavx512vl\n Target Report Mask(ISA_AVX512VL) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512VL built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512VL built-in functions and code generation.\n \n mavx512ifma\n Target Report Mask(ISA_AVX512IFMA) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512IFMA built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512IFMA built-in functions and code generation.\n \n mavx512vbmi\n Target Report Mask(ISA_AVX512VBMI) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512VBMI built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2 and AVX512F and AVX512VBMI built-in functions and code generation.\n \n mfma\n Target Report Mask(ISA_FMA) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and FMA built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and FMA built-in functions and code generation.\n \n msse4a\n Target Report Mask(ISA_SSE4A) Var(ix86_isa_flags) Save\n-Support MMX, SSE, SSE2, SSE3 and SSE4A built-in functions and code generation\n+Support MMX, SSE, SSE2, SSE3 and SSE4A built-in functions and code generation.\n \n mfma4\n Target Report Mask(ISA_FMA4) Var(ix86_isa_flags) Save\n@@ -721,71 +721,71 @@ Support code generation of popcnt instruction.\n \n mbmi\n Target Report Mask(ISA_BMI) Var(ix86_isa_flags) Save\n-Support BMI built-in functions and code generation\n+Support BMI built-in functions and code generation.\n \n mbmi2\n Target Report Mask(ISA_BMI2) Var(ix86_isa_flags) Save\n-Support BMI2 built-in functions and code generation\n+Support BMI2 built-in functions and code generation.\n \n mlzcnt\n Target Report Mask(ISA_LZCNT) Var(ix86_isa_flags) Save\n-Support LZCNT built-in function and code generation\n+Support LZCNT built-in function and code generation.\n \n mhle\n Target Report Mask(ISA_HLE) Var(ix86_isa_flags) Save\n-Support Hardware Lock Elision prefixes\n+Support Hardware Lock Elision prefixes.\n \n mrdseed\n Target Report Mask(ISA_RDSEED) Var(ix86_isa_flags) Save\n-Support RDSEED instruction\n+Support RDSEED instruction.\n \n mprfchw\n Target Report Mask(ISA_PRFCHW) Var(ix86_isa_flags) Save\n-Support PREFETCHW instruction\n+Support PREFETCHW instruction.\n \n madx\n Target Report Mask(ISA_ADX) Var(ix86_isa_flags) Save\n-Support flag-preserving add-carry instructions\n+Support flag-preserving add-carry instructions.\n \n mclflushopt\n Target Report Mask(ISA_CLFLUSHOPT) Var(ix86_isa_flags) Save\n-Support CLFLUSHOPT instructions\n+Support CLFLUSHOPT instructions.\n \n mclzero\n Target Report Mask(ISA_CLZERO) Var(ix86_isa_flags) Save\n-Support CLZERO instructions\n+Support CLZERO instructions.\n \n mclwb\n Target Report Mask(ISA_CLWB) Var(ix86_isa_flags) Save\n-Support CLWB instruction\n+Support CLWB instruction.\n \n mpcommit\n Target Report Mask(ISA_PCOMMIT) Var(ix86_isa_flags) Save\n-Support PCOMMIT instruction\n+Support PCOMMIT instruction.\n \n mfxsr\n Target Report Mask(ISA_FXSR) Var(ix86_isa_flags) Save\n-Support FXSAVE and FXRSTOR instructions\n+Support FXSAVE and FXRSTOR instructions.\n \n mxsave\n Target Report Mask(ISA_XSAVE) Var(ix86_isa_flags) Save\n-Support XSAVE and XRSTOR instructions\n+Support XSAVE and XRSTOR instructions.\n \n mxsaveopt\n Target Report Mask(ISA_XSAVEOPT) Var(ix86_isa_flags) Save\n-Support XSAVEOPT instruction\n+Support XSAVEOPT instruction.\n \n mxsavec\n Target Report Mask(ISA_XSAVEC) Var(ix86_isa_flags) Save\n-Support XSAVEC instructions\n+Support XSAVEC instructions.\n \n mxsaves\n Target Report Mask(ISA_XSAVES) Var(ix86_isa_flags) Save\n-Support XSAVES and XRSTORS instructions\n+Support XSAVES and XRSTORS instructions.\n \n mtbm\n Target Report Mask(ISA_TBM) Var(ix86_isa_flags) Save\n-Support TBM built-in functions and code generation\n+Support TBM built-in functions and code generation.\n \n mcx16\n Target Report Mask(ISA_CX16) Var(ix86_isa_flags) Save\n@@ -805,35 +805,35 @@ Support code generation of crc32 instruction.\n \n maes\n Target Report Mask(ISA_AES) Var(ix86_isa_flags) Save\n-Support AES built-in functions and code generation\n+Support AES built-in functions and code generation.\n \n msha\n Target Report Mask(ISA_SHA) Var(ix86_isa_flags) Save\n-Support SHA1 and SHA256 built-in functions and code generation\n+Support SHA1 and SHA256 built-in functions and code generation.\n \n mpclmul\n Target Report Mask(ISA_PCLMUL) Var(ix86_isa_flags) Save\n-Support PCLMUL built-in functions and code generation\n+Support PCLMUL built-in functions and code generation.\n \n msse2avx\n Target Report Var(ix86_sse2avx)\n-Encode SSE instructions with VEX prefix\n+Encode SSE instructions with VEX prefix.\n \n mfsgsbase\n Target Report Mask(ISA_FSGSBASE) Var(ix86_isa_flags) Save\n-Support FSGSBASE built-in functions and code generation\n+Support FSGSBASE built-in functions and code generation.\n \n mrdrnd\n Target Report Mask(ISA_RDRND) Var(ix86_isa_flags) Save\n-Support RDRND built-in functions and code generation\n+Support RDRND built-in functions and code generation.\n \n mf16c\n Target Report Mask(ISA_F16C) Var(ix86_isa_flags) Save\n-Support F16C built-in functions and code generation\n+Support F16C built-in functions and code generation.\n \n mprefetchwt1\n Target Report Mask(ISA_PREFETCHWT1) Var(ix86_isa_flags) Save\n-Support PREFETCHWT1 built-in functions and code generation\n+Support PREFETCHWT1 built-in functions and code generation.\n \n mfentry\n Target Report Var(flag_fentry) Init(-1)\n@@ -854,31 +854,31 @@ Skip setting up RAX register when passing variable arguments.\n \n m8bit-idiv\n Target Report Mask(USE_8BIT_IDIV) Save\n-Expand 32bit/64bit integer divide into 8bit unsigned integer divide with run-time check\n+Expand 32bit/64bit integer divide into 8bit unsigned integer divide with run-time check.\n \n mavx256-split-unaligned-load\n Target Report Mask(AVX256_SPLIT_UNALIGNED_LOAD) Save\n-Split 32-byte AVX unaligned load\n+Split 32-byte AVX unaligned load.\n \n mavx256-split-unaligned-store\n Target Report Mask(AVX256_SPLIT_UNALIGNED_STORE) Save\n-Split 32-byte AVX unaligned store\n+Split 32-byte AVX unaligned store.\n \n mrtm\n Target Report Mask(ISA_RTM) Var(ix86_isa_flags) Save\n-Support RTM built-in functions and code generation\n+Support RTM built-in functions and code generation.\n \n mmpx\n Target Report Mask(ISA_MPX) Var(ix86_isa_flags) Save\n-Support MPX code generation\n+Support MPX code generation.\n \n mmwaitx\n Target Report Mask(ISA_MWAITX) Var(ix86_isa_flags) Save\n-Support MWAITX and MONITORX built-in functions and code generation\n+Support MWAITX and MONITORX built-in functions and code generation.\n \n mstack-protector-guard=\n Target RejectNegative Joined Enum(stack_protector_guard) Var(ix86_stack_protector_guard) Init(SSP_TLS)\n-Use given stack-protector guard\n+Use given stack-protector guard.\n \n Enum\n Name(stack_protector_guard) Type(enum stack_protector_guard)"}, {"sha": "04de55b1c2ec07979585e04e9bac0b1caa936808", "filename": "gcc/config/i386/interix.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Finterix.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Finterix.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Finterix.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -29,6 +29,6 @@ Driver\n \n mpe-aligned-commons\n Target Var(use_pe_aligned_common) Init(HAVE_GAS_ALIGNED_COMM)\n-Use the GNU extension to the PE format for aligned common data\n+Use the GNU extension to the PE format for aligned common data.\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "40f06c3e30c051814c99c66dca85d0d56f5d1ef3", "filename": "gcc/config/i386/mingw-w64.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fmingw-w64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fmingw-w64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw-w64.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,6 +20,6 @@\n \n municode\n Target\n-Use unicode startup and define UNICODE macro\n+Use unicode startup and define UNICODE macro.\n \n ; Retain blank line above."}, {"sha": "03c7a14703f6ca0e24b6a4cea34c5bda3f483f5d", "filename": "gcc/config/i386/mingw.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fmingw.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fi386%2Fmingw.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -26,7 +26,7 @@ Driver\n \n Wpedantic-ms-format\n C ObjC C++ ObjC++ Var(warn_pedantic_ms_format) Init(1) Warning\n-Warn about none ISO msvcrt scanf/printf width extensions\n+Warn about none ISO msvcrt scanf/printf width extensions.\n \n fset-stack-executable\n Common Report Var(flag_setstackexecutable) Init(1) Optimization"}, {"sha": "4e0af4238ef3269cccfc299a955bad4bdfd9da6a", "filename": "gcc/config/ia64/ia64.opt", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fia64%2Fia64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fia64%2Fia64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -25,101 +25,101 @@ enum processor_type ia64_tune = PROCESSOR_ITANIUM2\n \n mbig-endian\n Target Report RejectNegative Mask(BIG_ENDIAN)\n-Generate big endian code\n+Generate big endian code.\n \n mlittle-endian\n Target Report RejectNegative InverseMask(BIG_ENDIAN)\n-Generate little endian code\n+Generate little endian code.\n \n mgnu-as\n Target Report Mask(GNU_AS)\n-Generate code for GNU as\n+Generate code for GNU as.\n \n mgnu-ld\n Target Report Mask(GNU_LD)\n-Generate code for GNU ld\n+Generate code for GNU ld.\n \n mvolatile-asm-stop\n Target Report Mask(VOL_ASM_STOP)\n-Emit stop bits before and after volatile extended asms\n+Emit stop bits before and after volatile extended asms.\n \n mregister-names\n Target Mask(REG_NAMES)\n-Use in/loc/out register names\n+Use in/loc/out register names.\n \n mno-sdata\n Target Report RejectNegative Mask(NO_SDATA)\n \n msdata\n Target Report RejectNegative InverseMask(NO_SDATA)\n-Enable use of sdata/scommon/sbss\n+Enable use of sdata/scommon/sbss.\n \n mno-pic\n Target Report RejectNegative Mask(NO_PIC)\n-Generate code without GP reg\n+Generate code without GP reg.\n \n mconstant-gp\n Target Report RejectNegative Mask(CONST_GP)\n-gp is constant (but save/restore gp on indirect calls)\n+gp is constant (but save/restore gp on indirect calls).\n \n mauto-pic\n Target Report RejectNegative Mask(AUTO_PIC)\n-Generate self-relocatable code\n+Generate self-relocatable code.\n \n minline-float-divide-min-latency\n Target Report RejectNegative Var(TARGET_INLINE_FLOAT_DIV, 1)\n-Generate inline floating point division, optimize for latency\n+Generate inline floating point division, optimize for latency.\n \n minline-float-divide-max-throughput\n Target Report RejectNegative Var(TARGET_INLINE_FLOAT_DIV, 2) Init(2)\n-Generate inline floating point division, optimize for throughput\n+Generate inline floating point division, optimize for throughput.\n \n mno-inline-float-divide\n Target Report RejectNegative Var(TARGET_INLINE_FLOAT_DIV, 0)\n \n minline-int-divide-min-latency\n Target Report RejectNegative Var(TARGET_INLINE_INT_DIV, 1)\n-Generate inline integer division, optimize for latency\n+Generate inline integer division, optimize for latency.\n \n minline-int-divide-max-throughput\n Target Report RejectNegative Var(TARGET_INLINE_INT_DIV, 2)\n-Generate inline integer division, optimize for throughput\n+Generate inline integer division, optimize for throughput.\n \n mno-inline-int-divide\n Target Report RejectNegative Var(TARGET_INLINE_INT_DIV, 0)\n-Do not inline integer division\n+Do not inline integer division.\n \n minline-sqrt-min-latency\n Target Report RejectNegative Var(TARGET_INLINE_SQRT, 1)\n-Generate inline square root, optimize for latency\n+Generate inline square root, optimize for latency.\n \n minline-sqrt-max-throughput\n Target Report RejectNegative Var(TARGET_INLINE_SQRT, 2)\n-Generate inline square root, optimize for throughput\n+Generate inline square root, optimize for throughput.\n \n mno-inline-sqrt\n Target Report RejectNegative Var(TARGET_INLINE_SQRT, 0)\n-Do not inline square root\n+Do not inline square root.\n \n mdwarf2-asm\n Target Report Mask(DWARF2_ASM)\n-Enable Dwarf 2 line debug info via GNU as\n+Enable Dwarf 2 line debug info via GNU as.\n \n mearly-stop-bits\n Target Report Mask(EARLY_STOP_BITS)\n-Enable earlier placing stop bits for better scheduling\n+Enable earlier placing stop bits for better scheduling.\n \n mfixed-range=\n Target RejectNegative Joined Var(ia64_deferred_options) Defer\n-Specify range of registers to make fixed\n+Specify range of registers to make fixed.\n \n mtls-size=\n Target RejectNegative Joined UInteger Var(ia64_tls_size) Init(22)\n-Specify bit size of immediate TLS offsets\n+Specify bit size of immediate TLS offsets.\n \n mtune=\n Target RejectNegative Joined Enum(ia64_tune) Var(ia64_tune)\n-Schedule code for given CPU\n+Schedule code for given CPU.\n \n Enum\n Name(ia64_tune) Type(enum processor_type)\n@@ -133,35 +133,35 @@ Enum(ia64_tune) String(mckinley) Value(PROCESSOR_ITANIUM2)\n \n msched-br-data-spec\n Target Report Var(mflag_sched_br_data_spec) Init(0)\n-Use data speculation before reload\n+Use data speculation before reload.\n \n msched-ar-data-spec\n Target Report Var(mflag_sched_ar_data_spec) Init(1)\n-Use data speculation after reload\n+Use data speculation after reload.\n \n msched-control-spec\n Target Report Var(mflag_sched_control_spec) Init(2)\n-Use control speculation\n+Use control speculation.\n \n msched-br-in-data-spec\n Target Report Var(mflag_sched_br_in_data_spec) Init(1)\n-Use in block data speculation before reload\n+Use in block data speculation before reload.\n \n msched-ar-in-data-spec\n Target Report Var(mflag_sched_ar_in_data_spec) Init(1)\n-Use in block data speculation after reload\n+Use in block data speculation after reload.\n \n msched-in-control-spec\n Target Report Var(mflag_sched_in_control_spec) Init(1)\n-Use in block control speculation\n+Use in block control speculation.\n \n msched-spec-ldc\n Target Report Var(mflag_sched_spec_ldc) Init(1)\n-Use simple data speculation check\n+Use simple data speculation check.\n \n msched-spec-control-ldc\n Target Report Var(mflag_sched_spec_control_ldc) Init(0)\n-Use simple data speculation check for control speculation\n+Use simple data speculation check for control speculation.\n \n msched-prefer-non-data-spec-insns\n Target Ignore Warn(switch %qs is no longer supported)\n@@ -171,26 +171,26 @@ Target Ignore Warn(switch %qs is no longer supported)\n \n msched-count-spec-in-critical-path\n Target Report Var(mflag_sched_count_spec_in_critical_path) Init(0)\n-Count speculative dependencies while calculating priority of instructions\n+Count speculative dependencies while calculating priority of instructions.\n \n msched-stop-bits-after-every-cycle\n Target Report Var(mflag_sched_stop_bits_after_every_cycle) Init(1)\n-Place a stop bit after every cycle when scheduling\n+Place a stop bit after every cycle when scheduling.\n \n msched-fp-mem-deps-zero-cost\n Target Report Var(mflag_sched_fp_mem_deps_zero_cost) Init(0)\n-Assume that floating-point stores and loads are not likely to cause conflict when placed into one instruction group\n+Assume that floating-point stores and loads are not likely to cause conflict when placed into one instruction group.\n \n msched-max-memory-insns=\n Target RejectNegative Joined UInteger Var(ia64_max_memory_insns) Init(1)\n-Soft limit on number of memory insns per instruction group, giving lower priority to subsequent memory insns attempting to schedule in the same insn group. Frequently useful to prevent cache bank conflicts.  Default value is 1\n+Soft limit on number of memory insns per instruction group, giving lower priority to subsequent memory insns attempting to schedule in the same insn group. Frequently useful to prevent cache bank conflicts.  Default value is 1.\n \n msched-max-memory-insns-hard-limit\n Target Report Var(mflag_sched_mem_insns_hard_limit) Init(0)\n-Disallow more than 'msched-max-memory-insns' in instruction group. Otherwise, limit is 'soft' (prefer non-memory operations when limit is reached)\n+Disallow more than 'msched-max-memory-insns' in instruction group. Otherwise, limit is 'soft' (prefer non-memory operations when limit is reached).\n \n msel-sched-dont-check-control-spec\n Target Report Var(mflag_sel_sched_dont_check_control_spec) Init(0)\n-Don't generate checks for control speculation in selective scheduling\n+Don't generate checks for control speculation in selective scheduling.\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "2083a25219ed25aa11b125297803c87fa60fcdf0", "filename": "gcc/config/ia64/ilp32.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fia64%2Filp32.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fia64%2Filp32.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Filp32.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -1,7 +1,7 @@\n milp32\n Target Report RejectNegative Mask(ILP32)\n-Generate ILP32 code\n+Generate ILP32 code.\n \n mlp64\n Target Report RejectNegative InverseMask(ILP32)\n-Generate LP64 code\n+Generate LP64 code."}, {"sha": "721b0804be39a7fb26800d7cb4c9255b934d81a0", "filename": "gcc/config/iq2000/iq2000.opt", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fiq2000%2Fiq2000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fiq2000%2Fiq2000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fiq2000%2Fiq2000.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -28,7 +28,7 @@ enum processor_type iq2000_tune = PROCESSOR_DEFAULT\n ; This option has no effect at the moment.\n march=\n Target RejectNegative Joined Enum(iq2000_arch)\n-Specify CPU for code generation purposes\n+Specify CPU for code generation purposes.\n \n Enum\n Name(iq2000_arch) Type(int)\n@@ -44,7 +44,7 @@ Enum(iq2000_arch) String(iq2000) Value(0)\n \n mcpu=\n Target RejectNegative Joined Enum(iq2000_tune) Var(iq2000_tune)\n-Specify CPU for scheduling purposes\n+Specify CPU for scheduling purposes.\n \n Enum\n Name(iq2000_tune) Type(enum processor_type)\n@@ -58,17 +58,17 @@ Enum(iq2000_tune) String(iq2000) Value(PROCESSOR_IQ2000)\n \n membedded-data\n Target Mask(EMBEDDED_DATA)\n-Use ROM instead of RAM\n+Use ROM instead of RAM.\n \n mgpopt\n Target Mask(GPOPT)\n-Use GP relative sdata/sbss sections\n+Use GP relative sdata/sbss sections.\n \n ; Not used by the compiler proper.\n mno-crt0\n Target RejectNegative\n-No default crt0.o\n+No default crt0.o.\n \n muninit-const-in-rodata\n Target Mask(UNINIT_CONST_IN_RODATA)\n-Put uninitialized constants in ROM (needs -membedded-data)\n+Put uninitialized constants in ROM (needs -membedded-data)."}, {"sha": "3f6115f46a04cb301ab24b39545b6799ecdfe73a", "filename": "gcc/config/linux.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Flinux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Flinux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,16 +21,16 @@\n \n mbionic\n Target Report RejectNegative Var(linux_libc,LIBC_BIONIC) Init(DEFAULT_LIBC) Negative(mglibc)\n-Use Bionic C library\n+Use Bionic C library.\n \n mglibc\n Target Report RejectNegative Var(linux_libc,LIBC_GLIBC) Negative(muclibc)\n-Use GNU C library\n+Use GNU C library.\n \n muclibc\n Target Report RejectNegative Var(linux_libc,LIBC_UCLIBC) Negative(mmusl)\n-Use uClibc C library\n+Use uClibc C library.\n \n mmusl\n Target Report RejectNegative Var(linux_libc,LIBC_MUSL) Negative(mbionic)\n-Use musl C library\n+Use musl C library."}, {"sha": "4090b3db365012fed6ffd116c3da5116bdecd02f", "filename": "gcc/config/lm32/lm32.opt", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Flm32%2Flm32.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Flm32%2Flm32.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flm32%2Flm32.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,20 +21,20 @@\n    \n mmultiply-enabled\n Target Report Mask(MULTIPLY_ENABLED)\n-Enable multiply instructions\n+Enable multiply instructions.\n \n mdivide-enabled\n Target Report Mask(DIVIDE_ENABLED)\n-Enable divide and modulus instructions\n+Enable divide and modulus instructions.\n \n mbarrel-shift-enabled\n Target Report Mask(BARREL_SHIFT_ENABLED)\n-Enable barrel shift instructions\n+Enable barrel shift instructions.\n \n msign-extend-enabled\n Target Report Mask(SIGN_EXTEND_ENABLED)\n-Enable sign extend instructions\n+Enable sign extend instructions.\n \n muser-enabled\n Target Report Mask(USER_ENABLED)\n-Enable user-defined instructions\n+Enable user-defined instructions."}, {"sha": "39bf9ee26b12183fc81a8d33d44109022b517966", "filename": "gcc/config/lynx.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Flynx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Flynx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flynx.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,12 +20,12 @@\n \n mlegacy-threads\n Target RejectNegative\n-Support legacy multi-threading\n+Support legacy multi-threading.\n \n mshared\n Target RejectNegative\n-Use shared libraries\n+Use shared libraries.\n \n mthreads\n Target RejectNegative\n-Support multi-threading\n+Support multi-threading."}, {"sha": "0ff13fa5ee1f4a52b624b0e35c3239dd72d37881", "filename": "gcc/config/m32c/m32c.opt", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fm32c%2Fm32c.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fm32c%2Fm32c.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,24 +20,24 @@\n \n msim\n Target\n--msim\tUse simulator runtime\n+-msim\tUse simulator runtime.\n \n mcpu=r8c\n Target RejectNegative Var(target_cpu,'r') Init('r')\n--mcpu=r8c\tCompile code for R8C variants\n+-mcpu=r8c\tCompile code for R8C variants.\n \n mcpu=m16c\n Target RejectNegative Var(target_cpu,'6')\n--mcpu=m16c\tCompile code for M16C variants\n+-mcpu=m16c\tCompile code for M16C variants.\n \n mcpu=m32cm\n Target RejectNegative Var(target_cpu,'m')\n--mcpu=m32cm\tCompile code for M32CM variants\n+-mcpu=m32cm\tCompile code for M32CM variants.\n \n mcpu=m32c\n Target RejectNegative Var(target_cpu,'3')\n--mcpu=m32c\tCompile code for M32C variants\n+-mcpu=m32c\tCompile code for M32C variants.\n \n memregs=\n Target RejectNegative Joined UInteger Var(target_memregs) Init(16)\n--memregs=\tNumber of memreg bytes (default: 16, range: 0..16)\n+-memregs=\tNumber of memreg bytes (default: 16, range: 0..16)."}, {"sha": "c87b687562135d09bd40aec341792fdcdac1c054", "filename": "gcc/config/m32r/m32r.opt", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fm32r%2Fm32r.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fm32r%2Fm32r.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -31,51 +31,51 @@ enum m32r_sdata m32r_sdata_selected = M32R_SDATA_DEFAULT\n \n m32rx\n Target Report RejectNegative Mask(M32RX)\n-Compile for the m32rx\n+Compile for the m32rx.\n \n m32r2\n Target Report RejectNegative Mask(M32R2)\n-Compile for the m32r2\n+Compile for the m32r2.\n \n m32r\n Target RejectNegative\n-Compile for the m32r\n+Compile for the m32r.\n \n malign-loops\n Target Report Mask(ALIGN_LOOPS)\n-Align all loops to 32 byte boundary\n+Align all loops to 32 byte boundary.\n \n mbranch-cost=1\n Target Report RejectNegative Mask(BRANCH_COST)\n-Prefer branches over conditional execution\n+Prefer branches over conditional execution.\n \n mbranch-cost=2\n Target Report RejectNegative InverseMask(BRANCH_COST)\n-Give branches their default cost\n+Give branches their default cost.\n \n mdebug\n Target Mask(DEBUG)\n-Display compile time statistics\n+Display compile time statistics.\n \n mflush-func=\n Target RejectNegative Joined Var(m32r_cache_flush_func) Init(CACHE_FLUSH_FUNC)\n-Specify cache flush function\n+Specify cache flush function.\n \n mflush-trap=\n Target RejectNegative Joined UInteger Var(m32r_cache_flush_trap) Init(CACHE_FLUSH_TRAP)\n-Specify cache flush trap number\n+Specify cache flush trap number.\n \n missue-rate=1\n Target Report RejectNegative Mask(LOW_ISSUE_RATE)\n-Only issue one instruction per cycle\n+Only issue one instruction per cycle.\n \n missue-rate=2\n Target Report RejectNegative InverseMask(LOW_ISSUE_RATE)\n-Allow two instructions to be issued per cycle\n+Allow two instructions to be issued per cycle.\n \n mmodel=\n Target RejectNegative Joined Enum(m32r_model) Var(m32r_model_selected)\n-Code size: small, medium or large\n+Code size: small, medium or large.\n \n Enum\n Name(m32r_model) Type(enum m32r_model)\n@@ -91,18 +91,18 @@ Enum(m32r_model) String(large) Value(M32R_MODEL_LARGE)\n \n mno-flush-func\n Target RejectNegative\n-Don't call any cache flush functions\n+Don't call any cache flush functions.\n \n mno-flush-trap\n Target RejectNegative Var(m32r_cache_flush_trap, -1)\n-Don't call any cache flush trap\n+Don't call any cache flush trap.\n \n ; mrelax\n ; Target Mask(RELAX)\n \n msdata=\n Target RejectNegative Joined Enum(m32r_sdata) Var(m32r_sdata_selected)\n-Small data area: none, sdata, use\n+Small data area: none, sdata, use.\n \n Enum\n Name(m32r_sdata) Type(enum m32r_sdata)"}, {"sha": "24144072734a34287f1a5b521081d0252b3dd052", "filename": "gcc/config/m68k/ieee.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fm68k%2Fieee.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fm68k%2Fieee.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fieee.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,4 +21,4 @@\n ; This option is ignored by gcc\n mieee-fp\n Target RejectNegative\n-Use IEEE math for fp comparisons\n+Use IEEE math for fp comparisons."}, {"sha": "46010e50046bada47c3ad4760c367b396339ba05", "filename": "gcc/config/m68k/m68k.opt", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fm68k%2Fm68k.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -27,169 +27,169 @@ const char *m68k_library_id_string = \"_current_shared_library_a5_offset_\"\n \n m5200\n Target RejectNegative Alias(mcpu=, 5206)\n-Generate code for a 520X\n+Generate code for a 520X.\n \n m5206e\n Target RejectNegative Alias(mcpu=, 5206e)\n-Generate code for a 5206e\n+Generate code for a 5206e.\n \n m528x\n Target RejectNegative Alias(mcpu=, 528x)\n-Generate code for a 528x\n+Generate code for a 528x.\n \n m5307\n Target RejectNegative Alias(mcpu=, 5307)\n-Generate code for a 5307\n+Generate code for a 5307.\n \n m5407\n Target RejectNegative Alias(mcpu=, 5407)\n-Generate code for a 5407\n+Generate code for a 5407.\n \n m68000\n Target RejectNegative Alias(mcpu=, 68000)\n-Generate code for a 68000\n+Generate code for a 68000.\n \n m68010\n Target RejectNegative Alias(mcpu=, 68010)\n-Generate code for a 68010\n+Generate code for a 68010.\n \n m68020\n Target RejectNegative Alias(mcpu=, 68020)\n-Generate code for a 68020\n+Generate code for a 68020.\n \n m68020-40\n Target RejectNegative\n-Generate code for a 68040, without any new instructions\n+Generate code for a 68040, without any new instructions.\n \n m68020-60\n Target RejectNegative\n-Generate code for a 68060, without any new instructions\n+Generate code for a 68060, without any new instructions.\n \n m68030\n Target RejectNegative Alias(mcpu=, 68030)\n-Generate code for a 68030\n+Generate code for a 68030.\n \n m68040\n Target RejectNegative Alias(mcpu=, 68040)\n-Generate code for a 68040\n+Generate code for a 68040.\n \n m68060\n Target RejectNegative Alias(mcpu=, 68060)\n-Generate code for a 68060\n+Generate code for a 68060.\n \n m68302\n Target RejectNegative Alias(mcpu=, 68302)\n-Generate code for a 68302\n+Generate code for a 68302.\n \n m68332\n Target RejectNegative Alias(mcpu=, 68332)\n-Generate code for a 68332\n+Generate code for a 68332.\n \n ; Has no effect on gcc\n m68851\n Target\n-Generate code for a 68851\n+Generate code for a 68851.\n \n m68881\n Target RejectNegative Mask(HARD_FLOAT)\n-Generate code that uses 68881 floating-point instructions\n+Generate code that uses 68881 floating-point instructions.\n \n malign-int\n Target Report Mask(ALIGN_INT)\n-Align variables on a 32-bit boundary\n+Align variables on a 32-bit boundary.\n \n march=\n Target RejectNegative Joined Enum(m68k_isa) Var(m68k_arch_option)\n-Specify the name of the target architecture\n+Specify the name of the target architecture.\n \n mbitfield\n Target Report Mask(BITFIELD)\n-Use the bit-field instructions\n+Use the bit-field instructions.\n \n mc68000\n Target RejectNegative Alias(mcpu=, 68000)\n-Generate code for a 68000\n+Generate code for a 68000.\n \n mc68020\n Target RejectNegative Alias(mcpu=, 68020)\n-Generate code for a 68020\n+Generate code for a 68020.\n \n mcfv4e\n Target RejectNegative Alias(mcpu=, 547x)\n-Generate code for a ColdFire v4e\n+Generate code for a ColdFire v4e.\n \n mcpu=\n Target RejectNegative Joined Enum(target_device) Var(m68k_cpu_option) Init(unk_device)\n-Specify the target CPU\n+Specify the target CPU.\n \n mcpu32\n Target RejectNegative Alias(mcpu=, 68332)\n-Generate code for a cpu32\n+Generate code for a cpu32.\n \n mdiv\n Target Report Mask(CF_HWDIV)\n-Use hardware division instructions on ColdFire\n+Use hardware division instructions on ColdFire.\n \n mfidoa\n Target RejectNegative\n-Generate code for a Fido A\n+Generate code for a Fido A.\n \n mhard-float\n Target RejectNegative Mask(HARD_FLOAT)\n-Generate code which uses hardware floating point instructions\n+Generate code which uses hardware floating point instructions.\n \n mid-shared-library\n Target Report Mask(ID_SHARED_LIBRARY)\n-Enable ID based shared library\n+Enable ID based shared library.\n \n mnobitfield\n Target RejectNegative InverseMask(BITFIELD)\n-Do not use the bit-field instructions\n+Do not use the bit-field instructions.\n \n mnortd\n Target RejectNegative InverseMask(RTD)\n-Use normal calling convention\n+Use normal calling convention.\n \n mnoshort\n Target RejectNegative InverseMask(SHORT)\n-Consider type 'int' to be 32 bits wide\n+Consider type 'int' to be 32 bits wide.\n \n mpcrel\n Target Report Mask(PCREL)\n-Generate pc-relative code\n+Generate pc-relative code.\n \n mrtd\n Target Report Mask(RTD)\n-Use different calling convention using 'rtd'\n+Use different calling convention using 'rtd'.\n \n msep-data\n Target Report Mask(SEP_DATA)\n-Enable separate data segment\n+Enable separate data segment.\n \n mshared-library-id=\n Target RejectNegative Joined UInteger\n-ID of shared library to build\n+ID of shared library to build.\n \n mshort\n Target Report Mask(SHORT)\n-Consider type 'int' to be 16 bits wide\n+Consider type 'int' to be 16 bits wide.\n \n msoft-float\n Target RejectNegative InverseMask(HARD_FLOAT)\n-Generate code with library calls for floating point\n+Generate code with library calls for floating point.\n \n mstrict-align\n Target Report Mask(STRICT_ALIGNMENT)\n-Do not use unaligned memory references\n+Do not use unaligned memory references.\n \n mtune=\n Target RejectNegative Joined Enum(uarch_type) Var(m68k_tune_option) Init(unk_arch)\n-Tune for the specified target CPU or architecture\n+Tune for the specified target CPU or architecture.\n \n mxgot\n Target Report Mask(XGOT)\n-Support more than 8192 GOT entries on ColdFire\n+Support more than 8192 GOT entries on ColdFire.\n \n mxtls\n Target Report Mask(XTLS)\n-Support TLS segment larger than 64K\n+Support TLS segment larger than 64K."}, {"sha": "396f689be3db64e542e37fe60d61e05746260cd9", "filename": "gcc/config/mcore/mcore.opt", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmcore%2Fmcore.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmcore%2Fmcore.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -28,48 +28,48 @@ Generate code for the M*Core M340\n \n m4byte-functions\n Target Report Mask(OVERALIGN_FUNC)\n-Force functions to be aligned to a 4 byte boundary\n+Force functions to be aligned to a 4 byte boundary.\n \n mbig-endian\n Target RejectNegative Report InverseMask(LITTLE_END)\n-Generate big-endian code\n+Generate big-endian code.\n \n mcallgraph-data\n Target Report Mask(CG_DATA)\n-Emit call graph information\n+Emit call graph information.\n \n mdiv\n Target Report Mask(DIV)\n-Use the divide instruction\n+Use the divide instruction.\n \n mhardlit\n Target Report Mask(HARDLIT)\n-Inline constants if it can be done in 2 insns or less\n+Inline constants if it can be done in 2 insns or less.\n \n mlittle-endian\n Target RejectNegative Report Mask(LITTLE_END)\n-Generate little-endian code\n+Generate little-endian code.\n \n ; Not used by the compiler proper.\n mno-lsim\n Target RejectNegative\n-Assume that run-time support has been provided, so omit -lsim from the linker command line\n+Assume that run-time support has been provided, so omit -lsim from the linker command line.\n \n mrelax-immediates\n Target Report Mask(RELAX_IMM)\n-Use arbitrary sized immediates in bit operations\n+Use arbitrary sized immediates in bit operations.\n \n mslow-bytes\n Target Report Mask(SLOW_BYTES)\n-Prefer word accesses over byte accesses\n+Prefer word accesses over byte accesses.\n \n ; Maximum size we are allowed to grow the stack in a single operation.\n ; If we want more, we must do it in increments of at most this size.\n ; If this value is 0, we don't check at all.\n mstack-increment=\n Target RejectNegative Joined UInteger Var(mcore_stack_increment) Init(STACK_UNITS_MAXSTEP)\n-Set the maximum amount for a single stack increment operation\n+Set the maximum amount for a single stack increment operation.\n \n mwide-bitfields\n Target Report Mask(W_FIELD)\n-Always treat bitfields as int-sized\n+Always treat bitfields as int-sized."}, {"sha": "64864419e9210f01ec77abdf6b9d650adb37230c", "filename": "gcc/config/mep/mep.opt", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmep%2Fmep.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmep%2Fmep.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmep%2Fmep.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,139 +20,139 @@ Mask(IVC2)\n \n mabsdiff\n Target Mask(OPT_ABSDIFF)\n-Enable absolute difference instructions\n+Enable absolute difference instructions.\n \n mall-opts\n Target RejectNegative\n-Enable all optional instructions\n+Enable all optional instructions.\n \n maverage\n Target Mask(OPT_AVERAGE)\n-Enable average instructions\n+Enable average instructions.\n \n mbased=\n Target Joined Var(mep_based_cutoff) RejectNegative UInteger Init(0)\n-Variables this size and smaller go in the based section. (default 0)\n+Variables this size and smaller go in the based section. (default 0).\n \n mbitops\n Target Mask(OPT_BITOPS)\n-Enable bit manipulation instructions\n+Enable bit manipulation instructions.\n \n mc=\n Target Joined Var(mep_const_section) RejectNegative\n-Section to put all const variables in (tiny, near, far) (no default)\n+Section to put all const variables in (tiny, near, far) (no default).\n \n mclip\n Target Mask(OPT_CLIP)\n-Enable clip instructions\n+Enable clip instructions.\n \n mconfig=\n Target Joined Var(mep_config_string) RejectNegative\n-Configuration name\n+Configuration name.\n \n mcop\n Target Mask(COP)\n-Enable MeP Coprocessor\n+Enable MeP Coprocessor.\n \n mcop32\n Target Mask(COP) RejectNegative\n-Enable MeP Coprocessor with 32-bit registers\n+Enable MeP Coprocessor with 32-bit registers.\n \n mcop64\n Target Mask(64BIT_CR_REGS) RejectNegative\n-Enable MeP Coprocessor with 64-bit registers\n+Enable MeP Coprocessor with 64-bit registers.\n \n mivc2\n Target RejectNegative Var(mep_deferred_options) Defer\n-Enable IVC2 scheduling\n+Enable IVC2 scheduling.\n \n mdc\n Target Mask(DC) RejectNegative\n-Const variables default to the near section\n+Const variables default to the near section.\n \n mdebug\n Target Disabled Undocumented\n \n mdiv\n Target Mask(OPT_DIV)\n-Enable 32-bit divide instructions\n+Enable 32-bit divide instructions.\n \n meb\n Target InverseMask(LITTLE_ENDIAN) RejectNegative\n-Use big-endian byte order\n+Use big-endian byte order.\n \n mel\n Target Mask(LITTLE_ENDIAN) RejectNegative\n-Use little-endian byte order\n+Use little-endian byte order.\n \n mfar\n Driver RejectNegative\n \n mio-volatile\n Target Mask(IO_VOLATILE) \n-__io vars are volatile by default\n+__io vars are volatile by default.\n \n ml\n Target Mask(L) RejectNegative\n-All variables default to the far section\n+All variables default to the far section.\n \n mleadz\n Target Mask(OPT_LEADZ)\n-Enable leading zero instructions\n+Enable leading zero instructions.\n \n mlibrary\n Target Mask(LIBRARY) RejectNegative Undocumented\n \n mm\n Target Mask(M) RejectNegative\n-All variables default to the near section\n+All variables default to the near section.\n \n mminmax\n Target Mask(OPT_MINMAX)\n-Enable min/max instructions\n+Enable min/max instructions.\n \n mmult\n Target Mask(OPT_MULT)\n-Enable 32-bit multiply instructions\n+Enable 32-bit multiply instructions.\n \n mno-opts\n Target RejectNegative\n-Disable all optional instructions\n+Disable all optional instructions.\n \n mrand-tpgp\n Target Mask(RAND_TPGP) RejectNegative Undocumented\n \n mrepeat\n Target Mask(OPT_REPEAT)\n-Allow gcc to use the repeat/erepeat instructions\n+Allow gcc to use the repeat/erepeat instructions.\n \n ms\n Target Mask(S) RejectNegative\n-All variables default to the tiny section\n+All variables default to the tiny section.\n \n msatur\n Target Mask(OPT_SATUR)\n-Enable saturation instructions\n+Enable saturation instructions.\n \n msdram\n Target \n-Use sdram version of runtime\n+Use sdram version of runtime.\n \n msim\n Target RejectNegative\n-Use simulator runtime\n+Use simulator runtime.\n \n msimnovec\n Target RejectNegative\n-Use simulator runtime without vectors\n+Use simulator runtime without vectors.\n \n mtf\n Target Mask(TF) RejectNegative\n-All functions default to the far section\n+All functions default to the far section.\n \n mtiny=\n Target Joined Var(mep_tiny_cutoff) RejectNegative UInteger Init(4)\n-Variables this size and smaller go in the tiny section. (default 4)\n+Variables this size and smaller go in the tiny section. (default 4).\n \n mvl32\n Target InverseMask(OPT_VL64) Undocumented RejectNegative"}, {"sha": "360a8d57e5bfdee9a85ae670ad184e38f26eb980", "filename": "gcc/config/microblaze/microblaze.opt", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmicroblaze%2Fmicroblaze.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -37,91 +37,91 @@ Driver\n \n msoft-float\n Target Report RejectNegative Mask(SOFT_FLOAT)\n-Use software emulation for floating point (default)\n+Use software emulation for floating point (default).\n \n mhard-float\n Target Report RejectNegative InverseMask(SOFT_FLOAT, HARD_FLOAT)\n-Use hardware floating point instructions\n+Use hardware floating point instructions.\n \n msmall-divides\n Target Mask(SMALL_DIVIDES)\n-Use table lookup optimization for small signed integer divisions\n+Use table lookup optimization for small signed integer divisions.\n \n mcpu=\n Target RejectNegative Joined Var(microblaze_select_cpu)\n--mcpu=PROCESSOR\t\tUse features of and schedule code for given CPU\n+-mcpu=PROCESSOR\t\tUse features of and schedule code for given CPU.\n \n mmemcpy\n Target Mask(MEMCPY)\n-Don't optimize block moves, use memcpy\n+Don't optimize block moves, use memcpy.\n \n mbig-endian\n Target Report RejectNegative InverseMask(LITTLE_ENDIAN)\n-Assume target CPU is configured as big endian\n+Assume target CPU is configured as big endian.\n \n mlittle-endian\n Target Report RejectNegative Mask(LITTLE_ENDIAN)\n-Assume target CPU is configured as little endian\n+Assume target CPU is configured as little endian.\n \n mxl-soft-mul\n Target Mask(SOFT_MUL)\n-Use the soft multiply emulation (default)\n+Use the soft multiply emulation (default).\n \n mxl-reorder\n Target Var(TARGET_REORDER) Init(2)\n-Use reorder instructions (swap and byte reversed load/store) (default)\n+Use reorder instructions (swap and byte reversed load/store) (default).\n \n mxl-soft-div\n Target Mask(SOFT_DIV)\n-Use the software emulation for divides (default)\n+Use the software emulation for divides (default).\n \n mxl-barrel-shift\n Target Mask(BARREL_SHIFT)\n-Use the hardware barrel shifter instead of emulation\n+Use the hardware barrel shifter instead of emulation.\n \n mxl-pattern-compare\n Target Mask(PATTERN_COMPARE)\n-Use pattern compare instructions\n+Use pattern compare instructions.\n \n mxl-stack-check\n Target Mask(STACK_CHECK) Warn(%qs is deprecated; use -fstack-check)\n-Check for stack overflow at runtime\n+Check for stack overflow at runtime.\n \n mxl-gp-opt\n Target Mask(XLGPOPT)\n-Use GP relative sdata/sbss sections\n+Use GP relative sdata/sbss sections.\n \n mno-clearbss\n Target RejectNegative Var(flag_zero_initialized_in_bss, 0) Warn(%qs is deprecated; use -fno-zero-initialized-in-bss)\n-Clear the BSS to zero and place zero initialized in BSS\n+Clear the BSS to zero and place zero initialized in BSS.\n \n mxl-multiply-high\n Target Mask(MULTIPLY_HIGH)\n-Use multiply high instructions for high part of 32x32 multiply\n+Use multiply high instructions for high part of 32x32 multiply.\n \n mxl-float-convert\n Target Mask(FLOAT_CONVERT)\n-Use hardware floating point conversion instructions\n+Use hardware floating point conversion instructions.\n \n mxl-float-sqrt\n Target Mask(FLOAT_SQRT)\n-Use hardware floating point square root instruction\n+Use hardware floating point square root instruction.\n \n mxl-mode-executable\n Target Mask(XL_MODE_EXECUTABLE)\n-Description for mxl-mode-executable\n+Description for mxl-mode-executable.\n \n mxl-mode-xmdstub\n Target Mask(XL_MODE_XMDSTUB)\n-Description for mxl-mode-xmdstub\n+Description for mxl-mode-xmdstub.\n \n mxl-mode-bootstrap\n Target Mask(XL_MODE_BOOTSTRAP)\n-Description for mxl-mode-bootstrap\n+Description for mxl-mode-bootstrap.\n \n mxl-mode-novectors\n Target Mask(XL_MODE_NOVECTORS)\n-Description for mxl-mode-novectors\n+Description for mxl-mode-novectors.\n \n mxl-mode-xilkernel\n Target"}, {"sha": "53fca28b66012440587a4013c3bae9edbfa54ccf", "filename": "gcc/config/mips/mips.opt", "status": "modified", "additions": 81, "deletions": 81, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmips%2Fmips.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmips%2Fmips.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -29,7 +29,7 @@ Driver\n \n mabi=\n Target RejectNegative Joined Enum(mips_abi) Var(mips_abi) Init(MIPS_ABI_DEFAULT)\n--mabi=ABI\tGenerate code that conforms to the given ABI\n+-mabi=ABI\tGenerate code that conforms to the given ABI.\n \n Enum\n Name(mips_abi) Type(int)\n@@ -52,39 +52,39 @@ Enum(mips_abi) String(eabi) Value(ABI_EABI)\n \n mabicalls\n Target Report Mask(ABICALLS)\n-Generate code that can be used in SVR4-style dynamic objects\n+Generate code that can be used in SVR4-style dynamic objects.\n \n mmad\n Target Report Var(TARGET_MAD)\n-Use PMC-style 'mad' instructions\n+Use PMC-style 'mad' instructions.\n \n mimadd\n Target Report Mask(IMADD)\n-Use integer madd/msub instructions\n+Use integer madd/msub instructions.\n \n march=\n Target RejectNegative Joined Var(mips_arch_option) ToLower Enum(mips_arch_opt_value)\n--march=ISA\tGenerate code for the given ISA\n+-march=ISA\tGenerate code for the given ISA.\n \n mbranch-cost=\n Target RejectNegative Joined UInteger Var(mips_branch_cost)\n--mbranch-cost=COST\tSet the cost of branches to roughly COST instructions\n+-mbranch-cost=COST\tSet the cost of branches to roughly COST instructions.\n \n mbranch-likely\n Target Report Mask(BRANCHLIKELY)\n-Use Branch Likely instructions, overriding the architecture default\n+Use Branch Likely instructions, overriding the architecture default.\n \n mflip-mips16\n Target Report Var(TARGET_FLIP_MIPS16)\n-Switch on/off MIPS16 ASE on alternating functions for compiler testing\n+Switch on/off MIPS16 ASE on alternating functions for compiler testing.\n \n mcheck-zero-division\n Target Report Mask(CHECK_ZERO_DIV)\n-Trap on integer divide by zero\n+Trap on integer divide by zero.\n \n mcode-readable=\n Target RejectNegative Joined Enum(mips_code_readable_setting) Var(mips_code_readable) Init(CODE_READABLE_YES)\n--mcode-readable=SETTING\tSpecify when instructions are allowed to access code\n+-mcode-readable=SETTING\tSpecify when instructions are allowed to access code.\n \n Enum\n Name(mips_code_readable_setting) Type(enum mips_code_readable_setting)\n@@ -101,27 +101,27 @@ Enum(mips_code_readable_setting) String(no) Value(CODE_READABLE_NO)\n \n mdivide-breaks\n Target Report RejectNegative Mask(DIVIDE_BREAKS)\n-Use branch-and-break sequences to check for integer divide by zero\n+Use branch-and-break sequences to check for integer divide by zero.\n \n mdivide-traps\n Target Report RejectNegative InverseMask(DIVIDE_BREAKS, DIVIDE_TRAPS)\n-Use trap instructions to check for integer divide by zero\n+Use trap instructions to check for integer divide by zero.\n \n mdmx\n Target Report RejectNegative Var(TARGET_MDMX)\n-Allow the use of MDMX instructions\n+Allow the use of MDMX instructions.\n \n mdouble-float\n Target Report RejectNegative InverseMask(SINGLE_FLOAT, DOUBLE_FLOAT)\n-Allow hardware floating-point instructions to cover both 32-bit and 64-bit operations\n+Allow hardware floating-point instructions to cover both 32-bit and 64-bit operations.\n \n mdsp\n Target Report Var(TARGET_DSP)\n-Use MIPS-DSP instructions\n+Use MIPS-DSP instructions.\n \n mdspr2\n Target Report Var(TARGET_DSPR2)\n-Use MIPS-DSP REV 2 instructions\n+Use MIPS-DSP REV 2 instructions.\n \n mdebug\n Target Var(TARGET_DEBUG_MODE) Undocumented\n@@ -131,91 +131,91 @@ Target Var(TARGET_DEBUG_D_MODE) Undocumented\n \n meb\n Target Report RejectNegative Mask(BIG_ENDIAN)\n-Use big-endian byte order\n+Use big-endian byte order.\n \n mel\n Target Report RejectNegative InverseMask(BIG_ENDIAN, LITTLE_ENDIAN)\n-Use little-endian byte order\n+Use little-endian byte order.\n \n membedded-data\n Target Report Var(TARGET_EMBEDDED_DATA)\n-Use ROM instead of RAM\n+Use ROM instead of RAM.\n \n meva\n Target Report Var(TARGET_EVA)\n-Use Enhanced Virtual Addressing instructions\n+Use Enhanced Virtual Addressing instructions.\n \n mexplicit-relocs\n Target Report Mask(EXPLICIT_RELOCS)\n-Use NewABI-style %reloc() assembly operators\n+Use NewABI-style %reloc() assembly operators.\n \n mextern-sdata\n Target Report Var(TARGET_EXTERN_SDATA) Init(1)\n-Use -G for data that is not defined by the current object\n+Use -G for data that is not defined by the current object.\n \n mfix-24k\n Target Report Var(TARGET_FIX_24K)\n-Work around certain 24K errata\n+Work around certain 24K errata.\n \n mfix-r4000\n Target Report Mask(FIX_R4000)\n-Work around certain R4000 errata\n+Work around certain R4000 errata.\n \n mfix-r4400\n Target Report Mask(FIX_R4400)\n-Work around certain R4400 errata\n+Work around certain R4400 errata.\n \n mfix-rm7000\n Target Report Var(TARGET_FIX_RM7000)\n-Work around certain RM7000 errata\n+Work around certain RM7000 errata.\n \n mfix-r10000\n Target Report Mask(FIX_R10000)\n-Work around certain R10000 errata\n+Work around certain R10000 errata.\n \n mfix-sb1\n Target Report Var(TARGET_FIX_SB1)\n-Work around errata for early SB-1 revision 2 cores\n+Work around errata for early SB-1 revision 2 cores.\n \n mfix-vr4120\n Target Report Var(TARGET_FIX_VR4120)\n-Work around certain VR4120 errata\n+Work around certain VR4120 errata.\n \n mfix-vr4130\n Target Report Var(TARGET_FIX_VR4130)\n-Work around VR4130 mflo/mfhi errata\n+Work around VR4130 mflo/mfhi errata.\n \n mfix4300\n Target Report Var(TARGET_4300_MUL_FIX)\n-Work around an early 4300 hardware bug\n+Work around an early 4300 hardware bug.\n \n mfp-exceptions\n Target Report Var(TARGET_FP_EXCEPTIONS) Init(1)\n-FP exceptions are enabled\n+FP exceptions are enabled.\n \n mfp32\n Target Report RejectNegative InverseMask(FLOAT64)\n-Use 32-bit floating-point registers\n+Use 32-bit floating-point registers.\n \n mfpxx\n Target Report RejectNegative Mask(FLOATXX)\n-Conform to the o32 FPXX ABI\n+Conform to the o32 FPXX ABI.\n \n mfp64\n Target Report RejectNegative Mask(FLOAT64)\n-Use 64-bit floating-point registers\n+Use 64-bit floating-point registers.\n \n mflush-func=\n Target RejectNegative Joined Var(mips_cache_flush_func) Init(CACHE_FLUSH_FUNC)\n--mflush-func=FUNC\tUse FUNC to flush the cache before calling stack trampolines\n+-mflush-func=FUNC\tUse FUNC to flush the cache before calling stack trampolines.\n \n mabs=\n Target RejectNegative Joined Enum(mips_ieee_754_value) Var(mips_abs) Init(MIPS_IEEE_754_DEFAULT)\n--mabs=MODE\tSelect the IEEE 754 ABS/NEG instruction execution mode\n+-mabs=MODE\tSelect the IEEE 754 ABS/NEG instruction execution mode.\n \n mnan=\n Target RejectNegative Joined Enum(mips_ieee_754_value) Var(mips_nan) Init(MIPS_IEEE_754_DEFAULT)\n--mnan=ENCODING\tSelect the IEEE 754 NaN data encoding\n+-mnan=ENCODING\tSelect the IEEE 754 NaN data encoding.\n \n Enum\n Name(mips_ieee_754_value) Type(int)\n@@ -229,23 +229,23 @@ Enum(mips_ieee_754_value) String(legacy) Value(MIPS_IEEE_754_LEGACY)\n \n mgp32\n Target Report RejectNegative InverseMask(64BIT)\n-Use 32-bit general registers\n+Use 32-bit general registers.\n \n mgp64\n Target Report RejectNegative Mask(64BIT)\n-Use 64-bit general registers\n+Use 64-bit general registers.\n \n mgpopt\n Target Report Var(TARGET_GPOPT) Init(1)\n-Use GP-relative addressing to access small data\n+Use GP-relative addressing to access small data.\n \n mplt\n Target Report Var(TARGET_PLT)\n-When generating -mabicalls code, allow executables to use PLTs and copy relocations\n+When generating -mabicalls code, allow executables to use PLTs and copy relocations.\n \n mhard-float\n Target Report RejectNegative InverseMask(SOFT_FLOAT_ABI, HARD_FLOAT_ABI)\n-Allow the use of hardware floating-point ABI and instructions\n+Allow the use of hardware floating-point ABI and instructions.\n \n minterlink-compressed\n Target Report Var(TARGET_INTERLINK_COMPRESSED) Init(0)\n@@ -257,83 +257,83 @@ An alias for minterlink-compressed provided for backward-compatibility.\n \n mips\n Target RejectNegative Joined ToLower Enum(mips_mips_opt_value) Var(mips_isa_option)\n--mipsN\tGenerate code for ISA level N\n+-mipsN\tGenerate code for ISA level N.\n \n mips16\n Target Report RejectNegative Mask(MIPS16)\n-Generate MIPS16 code\n+Generate MIPS16 code.\n \n mips3d\n Target Report RejectNegative Var(TARGET_MIPS3D)\n-Use MIPS-3D instructions\n+Use MIPS-3D instructions.\n \n mllsc\n Target Report Mask(LLSC)\n-Use ll, sc and sync instructions\n+Use ll, sc and sync instructions.\n \n mlocal-sdata\n Target Report Var(TARGET_LOCAL_SDATA) Init(1)\n-Use -G for object-local data\n+Use -G for object-local data.\n \n mlong-calls\n Target Report Var(TARGET_LONG_CALLS)\n-Use indirect calls\n+Use indirect calls.\n \n mlong32\n Target Report RejectNegative InverseMask(LONG64, LONG32)\n-Use a 32-bit long type\n+Use a 32-bit long type.\n \n mlong64\n Target Report RejectNegative Mask(LONG64)\n-Use a 64-bit long type\n+Use a 64-bit long type.\n \n mmcount-ra-address\n Target Report Var(TARGET_MCOUNT_RA_ADDRESS)\n-Pass the address of the ra save location to _mcount in $12\n+Pass the address of the ra save location to _mcount in $12.\n \n mmemcpy\n Target Report Mask(MEMCPY)\n-Don't optimize block moves\n+Don't optimize block moves.\n \n mmicromips\n Target Report Mask(MICROMIPS)\n-Use microMIPS instructions\n+Use microMIPS instructions.\n \n mmt\n Target Report Var(TARGET_MT)\n-Allow the use of MT instructions\n+Allow the use of MT instructions.\n \n mno-float\n Target Report RejectNegative Var(TARGET_NO_FLOAT) Condition(TARGET_SUPPORTS_NO_FLOAT)\n-Prevent the use of all floating-point operations\n+Prevent the use of all floating-point operations.\n \n mmcu\n Target Report Var(TARGET_MCU)\n-Use MCU instructions\n+Use MCU instructions.\n \n mno-flush-func\n Target RejectNegative\n-Do not use a cache-flushing function before calling stack trampolines\n+Do not use a cache-flushing function before calling stack trampolines.\n \n mno-mdmx\n Target Report RejectNegative Var(TARGET_MDMX, 0)\n-Do not use MDMX instructions\n+Do not use MDMX instructions.\n \n mno-mips16\n Target Report RejectNegative InverseMask(MIPS16)\n-Generate normal-mode code\n+Generate normal-mode code.\n \n mno-mips3d\n Target Report RejectNegative Var(TARGET_MIPS3D, 0)\n-Do not use MIPS-3D instructions\n+Do not use MIPS-3D instructions.\n \n mpaired-single\n Target Report Mask(PAIRED_SINGLE_FLOAT)\n-Use paired-single floating-point instructions\n+Use paired-single floating-point instructions.\n \n mr10k-cache-barrier=\n Target Joined RejectNegative Enum(mips_r10k_cache_barrier_setting) Var(mips_r10k_cache_barrier) Init(R10K_CACHE_BARRIER_NONE)\n--mr10k-cache-barrier=SETTING\tSpecify when r10k cache barriers should be inserted\n+-mr10k-cache-barrier=SETTING\tSpecify when r10k cache barriers should be inserted.\n \n Enum\n Name(mips_r10k_cache_barrier_setting) Type(enum mips_r10k_cache_barrier_setting)\n@@ -350,71 +350,71 @@ Enum(mips_r10k_cache_barrier_setting) String(none) Value(R10K_CACHE_BARRIER_NONE\n \n mrelax-pic-calls\n Target Report Mask(RELAX_PIC_CALLS)\n-Try to allow the linker to turn PIC calls into direct calls\n+Try to allow the linker to turn PIC calls into direct calls.\n \n mshared\n Target Report Var(TARGET_SHARED) Init(1)\n-When generating -mabicalls code, make the code suitable for use in shared libraries\n+When generating -mabicalls code, make the code suitable for use in shared libraries.\n \n msingle-float\n Target Report RejectNegative Mask(SINGLE_FLOAT)\n-Restrict the use of hardware floating-point instructions to 32-bit operations\n+Restrict the use of hardware floating-point instructions to 32-bit operations.\n \n msmartmips\n Target Report Mask(SMARTMIPS)\n-Use SmartMIPS instructions\n+Use SmartMIPS instructions.\n \n msoft-float\n Target Report RejectNegative Mask(SOFT_FLOAT_ABI)\n-Prevent the use of all hardware floating-point instructions\n+Prevent the use of all hardware floating-point instructions.\n \n msplit-addresses\n Target Report Mask(SPLIT_ADDRESSES)\n-Optimize lui/addiu address loads\n+Optimize lui/addiu address loads.\n \n msym32\n Target Report Var(TARGET_SYM32)\n-Assume all symbols have 32-bit values\n+Assume all symbols have 32-bit values.\n \n msynci\n Target Report Mask(SYNCI)\n-Use synci instruction to invalidate i-cache\n+Use synci instruction to invalidate i-cache.\n \n mlra\n Target Report Var(mips_lra_flag) Init(1) Save\n-Use LRA instead of reload\n+Use LRA instead of reload.\n \n mtune=\n Target RejectNegative Joined Var(mips_tune_option) ToLower Enum(mips_arch_opt_value)\n--mtune=PROCESSOR\tOptimize the output for PROCESSOR\n+-mtune=PROCESSOR\tOptimize the output for PROCESSOR.\n \n muninit-const-in-rodata\n Target Report Var(TARGET_UNINIT_CONST_IN_RODATA)\n-Put uninitialized constants in ROM (needs -membedded-data)\n+Put uninitialized constants in ROM (needs -membedded-data).\n \n mvirt\n Target Report Var(TARGET_VIRT)\n-Use Virtualization Application Specific instructions\n+Use Virtualization Application Specific instructions.\n \n mxpa\n Target Report Var(TARGET_XPA)\n-Use eXtended Physical Address (XPA) instructions\n+Use eXtended Physical Address (XPA) instructions.\n \n mvr4130-align\n Target Report Mask(VR4130_ALIGN)\n-Perform VR4130-specific alignment optimizations\n+Perform VR4130-specific alignment optimizations.\n \n mxgot\n Target Report Var(TARGET_XGOT)\n-Lift restrictions on GOT size\n+Lift restrictions on GOT size.\n \n modd-spreg\n Target Report Mask(ODD_SPREG)\n-Enable use of odd-numbered single-precision registers\n+Enable use of odd-numbered single-precision registers.\n \n mframe-header-opt\n Target Report Var(flag_frame_header_optimization) Optimization\n-Optimize frame header\n+Optimize frame header.\n \n noasmopt\n Driver\n@@ -425,7 +425,7 @@ Enable load/store bonding.\n \n mcompact-branches=\n Target RejectNegative JoinedOrMissing Var(mips_cb) Report Enum(mips_cb_setting) Init(MIPS_CB_OPTIMAL)\n-Specify the compact branch usage policy\n+Specify the compact branch usage policy.\n \n Enum\n Name(mips_cb_setting) Type(enum mips_cb_setting)"}, {"sha": "1093179f82aa3035391f6aa6676823b85fa41755", "filename": "gcc/config/mmix/mmix.opt", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmmix%2Fmmix.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmmix%2Fmmix.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,48 +21,48 @@\n ; FIXME: Get rid of this one.\n mlibfuncs\n Target Report Mask(LIBFUNC)\n-For intrinsics library: pass all parameters in registers\n+For intrinsics library: pass all parameters in registers.\n \n mabi=mmixware\n Target Report RejectNegative InverseMask(ABI_GNU)\n-Use register stack for parameters and return value\n+Use register stack for parameters and return value.\n \n mabi=gnu\n Target Report RejectNegative Mask(ABI_GNU)\n-Use call-clobbered registers for parameters and return value\n+Use call-clobbered registers for parameters and return value.\n \n ; FIXME: Provide a way to *load* the epsilon register.\n mepsilon\n Target Report Mask(FCMP_EPSILON)\n-Use epsilon-respecting floating point compare instructions\n+Use epsilon-respecting floating point compare instructions.\n \n mzero-extend\n Target Report Mask(ZERO_EXTEND)\n-Use zero-extending memory loads, not sign-extending ones\n+Use zero-extending memory loads, not sign-extending ones.\n \n mknuthdiv\n Target Report Mask(KNUTH_DIVISION)\n-Generate divide results with reminder having the same sign as the divisor (not the dividend)\n+Generate divide results with reminder having the same sign as the divisor (not the dividend).\n \n mtoplevel-symbols\n Target Report Mask(TOPLEVEL_SYMBOLS)\n-Prepend global symbols with \\\":\\\" (for use with PREFIX)\n+Prepend global symbols with \\\":\\\" (for use with PREFIX).\n \n mno-set-program-start\n Target Report RejectNegative\n-Do not provide a default start-address 0x100 of the program\n+Do not provide a default start-address 0x100 of the program.\n \n melf\n Target Report RejectNegative\n-Link to emit program in ELF format (rather than mmo)\n+Link to emit program in ELF format (rather than mmo).\n \n mbranch-predict\n Target Report RejectNegative Mask(BRANCH_PREDICT)\n-Use P-mnemonics for branches statically predicted as taken\n+Use P-mnemonics for branches statically predicted as taken.\n \n mno-branch-predict\n Target Report RejectNegative InverseMask(BRANCH_PREDICT)\n-Don't use P-mnemonics for branches\n+Don't use P-mnemonics for branches.\n \n ; We use the term \"base address\" since that's what Knuth uses.  The base\n ; address goes in a global register.  When addressing, it's more like\n@@ -76,24 +76,24 @@ Don't use P-mnemonics for branches\n ; should have compiled with -mno-base-addresses.\n mbase-addresses\n Target Report RejectNegative Mask(BASE_ADDRESSES)\n-Use addresses that allocate global registers\n+Use addresses that allocate global registers.\n \n mno-base-addresses\n Target Report RejectNegative InverseMask(BASE_ADDRESSES)\n-Do not use addresses that allocate global registers\n+Do not use addresses that allocate global registers.\n \n msingle-exit\n Target Report RejectNegative InverseMask(USE_RETURN_INSN)\n-Generate a single exit point for each function\n+Generate a single exit point for each function.\n \n mno-single-exit\n Target Report RejectNegative Mask(USE_RETURN_INSN)\n-Do not generate a single exit point for each function\n+Do not generate a single exit point for each function.\n \n mset-program-start=\n Target Report RejectNegative Joined\n-Set start-address of the program\n+Set start-address of the program.\n \n mset-data-start=\n Target Report RejectNegative Joined\n-Set start-address of data\n+Set start-address of data."}, {"sha": "1ae07b0a832643104966b7e4602e519f53a63398", "filename": "gcc/config/mn10300/mn10300.opt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmn10300%2Fmn10300.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmn10300%2Fmn10300.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -27,23 +27,23 @@ enum processor_type mn10300_processor = PROCESSOR_DEFAULT\n \n mam33\n Target\n-Target the AM33 processor\n+Target the AM33 processor.\n \n mam33-2\n Target\n-Target the AM33/2.0 processor\n+Target the AM33/2.0 processor.\n \n mam34\n Target Report\n-Target the AM34 processor\n+Target the AM34 processor.\n \n mtune=\n Target RejectNegative Joined Var(mn10300_tune_string)\n-Tune code for the given processor\n+Tune code for the given processor.\n \n mmult-bug\n Target Report Mask(MULT_BUG)\n-Work around hardware multiply bug\n+Work around hardware multiply bug.\n \n ; Ignored by the compiler\n mno-crt0\n@@ -52,16 +52,16 @@ Target RejectNegative\n ; Ignored by the compiler\n mrelax\n Target RejectNegative\n-Enable linker relaxations\n+Enable linker relaxations.\n \n mreturn-pointer-on-d0\n Target Report Mask(PTR_A0D0)\n-Return pointers in both a0 and d0\n+Return pointers in both a0 and d0.\n \n mliw\n Target Report Mask(ALLOW_LIW)\n-Allow gcc to generate LIW instructions\n+Allow gcc to generate LIW instructions.\n \n msetlb\n Target Report Mask(ALLOW_SETLB)\n-Allow gcc to generate the SETLB and Lcc instructions\n+Allow gcc to generate the SETLB and Lcc instructions."}, {"sha": "2fbc9c1146043b3d2de44e33dd53a91a4014f78b", "filename": "gcc/config/moxie/moxie.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmoxie%2Fmoxie.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmoxie%2Fmoxie.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmoxie%2Fmoxie.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,15 +20,15 @@\n \n meb\n Target RejectNegative Report InverseMask(LITTLE_ENDIAN)\n-Generate big-endian code\n+Generate big-endian code.\n \n mel\n Target RejectNegative Report Mask(LITTLE_ENDIAN)\n-Generate little-endian code\n+Generate little-endian code.\n \n mmul.x\n Target Report Mask(HAS_MULX)\n-Enable MUL.X and UMUL.X instructions\n+Enable MUL.X and UMUL.X instructions.\n \n ; Ignored by the compiler\n mno-crt0"}, {"sha": "aa1b39ed4bcfc16d4e6114bea5ab3b3764894002", "filename": "gcc/config/msp430/msp430.opt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmsp430%2Fmsp430.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -1,30 +1,30 @@\n msim\n Target\n-Use simulator runtime\n+Use simulator runtime.\n \n masm-hex\n Target Mask(ASM_HEX)\n-Force assembly output to always use hex constants\n+Force assembly output to always use hex constants.\n \n mmcu=\n Target Report ToLower Joined RejectNegative Var(target_mcu)\n Specify the MCU to build for.\n \n mcpu=\n Target Report Joined RejectNegative Var(target_cpu)\n-Specify the ISA to build for: msp430, msp430x, msp430xv2\n+Specify the ISA to build for: msp430, msp430x, msp430xv2.\n \n mlarge\n Target Report Mask(LARGE) RejectNegative\n-Select large model - 20-bit addresses/pointers\n+Select large model - 20-bit addresses/pointers.\n \n msmall\n Target Report InverseMask(LARGE) RejectNegative\n-Select small model - 16-bit addresses/pointers (default)\n+Select small model - 16-bit addresses/pointers (default).\n \n mrelax\n Target Report\n-Optimize opcode sizes at link time\n+Optimize opcode sizes at link time.\n \n mOs\n Target Undocumented Mask(OPT_SPACE)\n@@ -38,7 +38,7 @@ config/msp430/msp430-opts.h\n \n mhwmult=\n Target Joined RejectNegative Report ToLower Var(msp430_hwmult_type) Enum(msp430_hwmult_types) Init(AUTO)\n-Specify the type of hardware multiply to support\n+Specify the type of hardware multiply to support.\n \n Enum\n Name(msp430_hwmult_types) Type(enum msp430_hwmult_types)\n@@ -60,11 +60,11 @@ Enum(msp430_hwmult_types) String(f5series) Value(F5SERIES)\n \n mcode-region=\n Target Joined RejectNegative Report ToLower Var(msp430_code_region) Enum(msp430_regions) Init(ANY)\n-Specify whether functions should be placed into low or high memory\n+Specify whether functions should be placed into low or high memory.\n \n mdata-region=\n Target Joined RejectNegative Report ToLower Var(msp430_data_region) Enum(msp430_regions) Init(ANY)\n-Specify whether variables should be placed into low or high memory\n+Specify whether variables should be placed into low or high memory.\n \n Enum\n Name(msp430_regions) Type(enum msp430_regions)"}, {"sha": "2887dca098d753a13ee611af02961a42da015301", "filename": "gcc/config/nios2/elf.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fnios2%2Felf.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fnios2%2Felf.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Felf.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -23,16 +23,16 @@\n \n msmallc\n Target Report RejectNegative\n-Link with a limited version of the C library\n+Link with a limited version of the C library.\n \n msys-lib=\n Target RejectNegative Joined Var(nios2_sys_lib_string)\n-Name of system library to link against\n+Name of system library to link against.\n \n msys-crt0=\n Target RejectNegative Joined Var(nios2_sys_crt0_string)\n-Name of the startfile\n+Name of the startfile.\n \n mhal\n Target Report RejectNegative\n-Link with HAL BSP\n+Link with HAL BSP."}, {"sha": "41afe4d87ab2416c54a08794a657589e56b728a2", "filename": "gcc/config/nios2/nios2.opt", "status": "modified", "additions": 128, "deletions": 128, "changes": 256, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fnios2%2Fnios2.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fnios2%2Fnios2.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnios2%2Fnios2.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -32,31 +32,31 @@ int saved_custom_code_index[256]\n \n mhw-div\n Target Report Mask(HAS_DIV)\n-Enable DIV, DIVU\n+Enable DIV, DIVU.\n \n mhw-mul\n Target Report Mask(HAS_MUL)\n-Enable MUL instructions\n+Enable MUL instructions.\n \n mhw-mulx\n Target Report Mask(HAS_MULX)\n-Enable MULX instructions, assume fast shifter\n+Enable MULX instructions, assume fast shifter.\n \n mfast-sw-div\n Target Report Mask(FAST_SW_DIV)\n-Use table based fast divide (default at -O3)\n+Use table based fast divide (default at -O3).\n \n mbypass-cache\n Target Report Mask(BYPASS_CACHE)\n-All memory accesses use I/O load/store instructions\n+All memory accesses use I/O load/store instructions.\n \n mno-cache-volatile\n Target Report RejectNegative Mask(BYPASS_CACHE_VOLATILE)\n-Volatile memory accesses use I/O load/store instructions\n+Volatile memory accesses use I/O load/store instructions.\n \n mcache-volatile\n Target Report RejectNegative Undocumented InverseMask(BYPASS_CACHE_VOLATILE)\n-Volatile memory accesses do not use I/O load/store instructions\n+Volatile memory accesses do not use I/O load/store instructions.\n \n mgpopt=\n Target RejectNegative Joined Enum(nios2_gpopt_type) Var(nios2_gpopt_option) Init(gpopt_unspecified)\n@@ -91,479 +91,479 @@ Equivalent to -mgpopt=none.\n \n meb\n Target Report RejectNegative Mask(BIG_ENDIAN)\n-Use big-endian byte order\n+Use big-endian byte order.\n \n mel\n Target Report RejectNegative InverseMask(BIG_ENDIAN)\n-Use little-endian byte order\n+Use little-endian byte order.\n \n mcustom-fpu-cfg=\n Target RejectNegative Joined Var(nios2_custom_fpu_cfg_string)\n-Floating point custom instruction configuration name\n+Floating point custom instruction configuration name.\n \n mno-custom-ftruncds\n Target Report RejectNegative Var(nios2_custom_ftruncds, -1)\n-Do not use the ftruncds custom instruction\n+Do not use the ftruncds custom instruction.\n \n mcustom-ftruncds=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_ftruncds) Init(-1)\n-Integer id (N) of ftruncds custom instruction\n+Integer id (N) of ftruncds custom instruction.\n \n mno-custom-fextsd\n Target Report RejectNegative Var(nios2_custom_fextsd, -1)\n-Do not use the fextsd custom instruction\n+Do not use the fextsd custom instruction.\n \n mcustom-fextsd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fextsd) Init(-1)\n-Integer id (N) of fextsd custom instruction\n+Integer id (N) of fextsd custom instruction.\n \n mno-custom-fixdu\n Target Report RejectNegative Var(nios2_custom_fixdu, -1)\n-Do not use the fixdu custom instruction\n+Do not use the fixdu custom instruction.\n \n mcustom-fixdu=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fixdu) Init(-1)\n-Integer id (N) of fixdu custom instruction\n+Integer id (N) of fixdu custom instruction.\n \n mno-custom-fixdi\n Target Report RejectNegative Var(nios2_custom_fixdi, -1)\n-Do not use the fixdi custom instruction\n+Do not use the fixdi custom instruction.\n \n mcustom-fixdi=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fixdi) Init(-1)\n-Integer id (N) of fixdi custom instruction\n+Integer id (N) of fixdi custom instruction.\n \n mno-custom-fixsu\n Target Report RejectNegative Var(nios2_custom_fixsu, -1)\n-Do not use the fixsu custom instruction\n+Do not use the fixsu custom instruction.\n \n mcustom-fixsu=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fixsu) Init(-1)\n-Integer id (N) of fixsu custom instruction\n+Integer id (N) of fixsu custom instruction.\n \n mno-custom-fixsi\n Target Report RejectNegative Var(nios2_custom_fixsi, -1)\n-Do not use the fixsi custom instruction\n+Do not use the fixsi custom instruction.\n \n mcustom-fixsi=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fixsi) Init(-1)\n-Integer id (N) of fixsi custom instruction\n+Integer id (N) of fixsi custom instruction.\n \n mno-custom-floatud\n Target Report RejectNegative Var(nios2_custom_floatud, -1)\n-Do not use the floatud custom instruction\n+Do not use the floatud custom instruction.\n \n mcustom-floatud=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_floatud) Init(-1)\n-Integer id (N) of floatud custom instruction\n+Integer id (N) of floatud custom instruction.\n \n mno-custom-floatid\n Target Report RejectNegative Var(nios2_custom_floatid, -1)\n-Do not use the floatid custom instruction\n+Do not use the floatid custom instruction.\n \n mcustom-floatid=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_floatid) Init(-1)\n-Integer id (N) of floatid custom instruction\n+Integer id (N) of floatid custom instruction.\n \n mno-custom-floatus\n Target Report RejectNegative Var(nios2_custom_floatus, -1)\n-Do not use the floatus custom instruction\n+Do not use the floatus custom instruction.\n \n mcustom-floatus=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_floatus) Init(-1)\n-Integer id (N) of floatus custom instruction\n+Integer id (N) of floatus custom instruction.\n \n mno-custom-floatis\n Target Report RejectNegative Var(nios2_custom_floatis, -1)\n-Do not use the floatis custom instruction\n+Do not use the floatis custom instruction.\n \n mcustom-floatis=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_floatis) Init(-1)\n-Integer id (N) of floatis custom instruction\n+Integer id (N) of floatis custom instruction.\n \n mno-custom-fcmpned\n Target Report RejectNegative Var(nios2_custom_fcmpned, -1)\n-Do not use the fcmpned custom instruction\n+Do not use the fcmpned custom instruction.\n \n mcustom-fcmpned=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpned) Init(-1)\n-Integer id (N) of fcmpned custom instruction\n+Integer id (N) of fcmpned custom instruction.\n \n mno-custom-fcmpeqd\n Target Report RejectNegative Var(nios2_custom_fcmpeqd, -1)\n-Do not use the fcmpeqd custom instruction\n+Do not use the fcmpeqd custom instruction.\n \n mcustom-fcmpeqd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpeqd) Init(-1)\n-Integer id (N) of fcmpeqd custom instruction\n+Integer id (N) of fcmpeqd custom instruction.\n \n mno-custom-fcmpged\n Target Report RejectNegative Var(nios2_custom_fcmpged, -1)\n-Do not use the fcmpged custom instruction\n+Do not use the fcmpged custom instruction.\n \n mcustom-fcmpged=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpged) Init(-1)\n-Integer id (N) of fcmpged custom instruction\n+Integer id (N) of fcmpged custom instruction.\n \n mno-custom-fcmpgtd\n Target Report RejectNegative Var(nios2_custom_fcmpgtd, -1)\n-Do not use the fcmpgtd custom instruction\n+Do not use the fcmpgtd custom instruction.\n \n mcustom-fcmpgtd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpgtd) Init(-1)\n-Integer id (N) of fcmpgtd custom instruction\n+Integer id (N) of fcmpgtd custom instruction.\n \n mno-custom-fcmpled\n Target Report RejectNegative Var(nios2_custom_fcmpled, -1)\n-Do not use the fcmpled custom instruction\n+Do not use the fcmpled custom instruction.\n \n mcustom-fcmpled=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpled) Init(-1)\n-Integer id (N) of fcmpled custom instruction\n+Integer id (N) of fcmpled custom instruction.\n \n mno-custom-fcmpltd\n Target Report RejectNegative Var(nios2_custom_fcmpltd, -1)\n-Do not use the fcmpltd custom instruction\n+Do not use the fcmpltd custom instruction.\n \n mcustom-fcmpltd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpltd) Init(-1)\n-Integer id (N) of fcmpltd custom instruction\n+Integer id (N) of fcmpltd custom instruction.\n \n mno-custom-flogd\n Target Report RejectNegative Var(nios2_custom_flogd, -1)\n-Do not use the flogd custom instruction\n+Do not use the flogd custom instruction.\n \n mcustom-flogd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_flogd) Init(-1)\n-Integer id (N) of flogd custom instruction\n+Integer id (N) of flogd custom instruction.\n \n mno-custom-fexpd\n Target Report RejectNegative Var(nios2_custom_fexpd, -1)\n-Do not use the fexpd custom instruction\n+Do not use the fexpd custom instruction.\n \n mcustom-fexpd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fexpd) Init(-1)\n-Integer id (N) of fexpd custom instruction\n+Integer id (N) of fexpd custom instruction.\n \n mno-custom-fatand\n Target Report RejectNegative Var(nios2_custom_fatand, -1)\n-Do not use the fatand custom instruction\n+Do not use the fatand custom instruction.\n \n mcustom-fatand=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fatand) Init(-1)\n-Integer id (N) of fatand custom instruction\n+Integer id (N) of fatand custom instruction.\n \n mno-custom-ftand\n Target Report RejectNegative Var(nios2_custom_ftand, -1)\n-Do not use the ftand custom instruction\n+Do not use the ftand custom instruction.\n \n mcustom-ftand=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_ftand) Init(-1)\n-Integer id (N) of ftand custom instruction\n+Integer id (N) of ftand custom instruction.\n \n mno-custom-fsind\n Target Report RejectNegative Var(nios2_custom_fsind, -1)\n-Do not use the fsind custom instruction\n+Do not use the fsind custom instruction.\n \n mcustom-fsind=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fsind) Init(-1)\n-Integer id (N) of fsind custom instruction\n+Integer id (N) of fsind custom instruction.\n \n mno-custom-fcosd\n Target Report RejectNegative Var(nios2_custom_fcosd, -1)\n-Do not use the fcosd custom instruction\n+Do not use the fcosd custom instruction.\n \n mcustom-fcosd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcosd) Init(-1)\n-Integer id (N) of fcosd custom instruction\n+Integer id (N) of fcosd custom instruction.\n \n mno-custom-fsqrtd\n Target Report RejectNegative Var(nios2_custom_fsqrtd, -1)\n-Do not use the fsqrtd custom instruction\n+Do not use the fsqrtd custom instruction.\n \n mcustom-fsqrtd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fsqrtd) Init(-1)\n-Integer id (N) of fsqrtd custom instruction\n+Integer id (N) of fsqrtd custom instruction.\n \n mno-custom-fabsd\n Target Report RejectNegative Var(nios2_custom_fabsd, -1)\n-Do not use the fabsd custom instruction\n+Do not use the fabsd custom instruction.\n \n mcustom-fabsd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fabsd) Init(-1)\n-Integer id (N) of fabsd custom instruction\n+Integer id (N) of fabsd custom instruction.\n \n mno-custom-fnegd\n Target Report RejectNegative Var(nios2_custom_fnegd, -1)\n-Do not use the fnegd custom instruction\n+Do not use the fnegd custom instruction.\n \n mcustom-fnegd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fnegd) Init(-1)\n-Integer id (N) of fnegd custom instruction\n+Integer id (N) of fnegd custom instruction.\n \n mno-custom-fmaxd\n Target Report RejectNegative Var(nios2_custom_fmaxd, -1)\n-Do not use the fmaxd custom instruction\n+Do not use the fmaxd custom instruction.\n \n mcustom-fmaxd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fmaxd) Init(-1)\n-Integer id (N) of fmaxd custom instruction\n+Integer id (N) of fmaxd custom instruction.\n \n mno-custom-fmind\n Target Report RejectNegative Var(nios2_custom_fmind, -1)\n-Do not use the fmind custom instruction\n+Do not use the fmind custom instruction.\n \n mcustom-fmind=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fmind) Init(-1)\n-Integer id (N) of fmind custom instruction\n+Integer id (N) of fmind custom instruction.\n \n mno-custom-fdivd\n Target Report RejectNegative Var(nios2_custom_fdivd, -1)\n-Do not use the fdivd custom instruction\n+Do not use the fdivd custom instruction.\n \n mcustom-fdivd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fdivd) Init(-1)\n-Integer id (N) of fdivd custom instruction\n+Integer id (N) of fdivd custom instruction.\n \n mno-custom-fmuld\n Target Report RejectNegative Var(nios2_custom_fmuld, -1)\n-Do not use the fmuld custom instruction\n+Do not use the fmuld custom instruction.\n \n mcustom-fmuld=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fmuld) Init(-1)\n-Integer id (N) of fmuld custom instruction\n+Integer id (N) of fmuld custom instruction.\n \n mno-custom-fsubd\n Target Report RejectNegative Var(nios2_custom_fsubd, -1)\n-Do not use the fsubd custom instruction\n+Do not use the fsubd custom instruction.\n \n mcustom-fsubd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fsubd) Init(-1)\n-Integer id (N) of fsubd custom instruction\n+Integer id (N) of fsubd custom instruction.\n \n mno-custom-faddd\n Target Report RejectNegative Var(nios2_custom_faddd, -1)\n-Do not use the faddd custom instruction\n+Do not use the faddd custom instruction.\n \n mcustom-faddd=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_faddd) Init(-1)\n-Integer id (N) of faddd custom instruction\n+Integer id (N) of faddd custom instruction.\n \n mno-custom-fcmpnes\n Target Report RejectNegative Var(nios2_custom_fcmpnes, -1)\n-Do not use the fcmpnes custom instruction\n+Do not use the fcmpnes custom instruction.\n \n mcustom-fcmpnes=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpnes) Init(-1)\n-Integer id (N) of fcmpnes custom instruction\n+Integer id (N) of fcmpnes custom instruction.\n \n mno-custom-fcmpeqs\n Target Report RejectNegative Var(nios2_custom_fcmpeqs, -1)\n-Do not use the fcmpeqs custom instruction\n+Do not use the fcmpeqs custom instruction.\n \n mcustom-fcmpeqs=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpeqs) Init(-1)\n-Integer id (N) of fcmpeqs custom instruction\n+Integer id (N) of fcmpeqs custom instruction.\n \n mno-custom-fcmpges\n Target Report RejectNegative Var(nios2_custom_fcmpges, -1)\n-Do not use the fcmpges custom instruction\n+Do not use the fcmpges custom instruction.\n \n mcustom-fcmpges=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpges) Init(-1)\n-Integer id (N) of fcmpges custom instruction\n+Integer id (N) of fcmpges custom instruction.\n \n mno-custom-fcmpgts\n Target Report RejectNegative Var(nios2_custom_fcmpgts, -1)\n-Do not use the fcmpgts custom instruction\n+Do not use the fcmpgts custom instruction.\n \n mcustom-fcmpgts=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmpgts) Init(-1)\n-Integer id (N) of fcmpgts custom instruction\n+Integer id (N) of fcmpgts custom instruction.\n \n mno-custom-fcmples\n Target Report RejectNegative Var(nios2_custom_fcmples, -1)\n-Do not use the fcmples custom instruction\n+Do not use the fcmples custom instruction.\n \n mcustom-fcmples=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmples) Init(-1)\n-Integer id (N) of fcmples custom instruction\n+Integer id (N) of fcmples custom instruction.\n \n mno-custom-fcmplts\n Target Report RejectNegative Var(nios2_custom_fcmplts, -1)\n-Do not use the fcmplts custom instruction\n+Do not use the fcmplts custom instruction.\n \n mcustom-fcmplts=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcmplts) Init(-1)\n-Integer id (N) of fcmplts custom instruction\n+Integer id (N) of fcmplts custom instruction.\n \n mno-custom-flogs\n Target Report RejectNegative Var(nios2_custom_flogs, -1)\n-Do not use the flogs custom instruction\n+Do not use the flogs custom instruction.\n \n mcustom-flogs=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_flogs) Init(-1)\n-Integer id (N) of flogs custom instruction\n+Integer id (N) of flogs custom instruction.\n \n mno-custom-fexps\n Target Report RejectNegative Var(nios2_custom_fexps, -1)\n-Do not use the fexps custom instruction\n+Do not use the fexps custom instruction.\n \n mcustom-fexps=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fexps) Init(-1)\n-Integer id (N) of fexps custom instruction\n+Integer id (N) of fexps custom instruction.\n \n mno-custom-fatans\n Target Report RejectNegative Var(nios2_custom_fatans, -1)\n-Do not use the fatans custom instruction\n+Do not use the fatans custom instruction.\n \n mcustom-fatans=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fatans) Init(-1)\n-Integer id (N) of fatans custom instruction\n+Integer id (N) of fatans custom instruction.\n \n mno-custom-ftans\n Target Report RejectNegative Var(nios2_custom_ftans, -1)\n-Do not use the ftans custom instruction\n+Do not use the ftans custom instruction.\n \n mcustom-ftans=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_ftans) Init(-1)\n-Integer id (N) of ftans custom instruction\n+Integer id (N) of ftans custom instruction.\n \n mno-custom-fsins\n Target Report RejectNegative Var(nios2_custom_fsins, -1)\n-Do not use the fsins custom instruction\n+Do not use the fsins custom instruction.\n \n mcustom-fsins=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fsins) Init(-1)\n-Integer id (N) of fsins custom instruction\n+Integer id (N) of fsins custom instruction.\n \n mno-custom-fcoss\n Target Report RejectNegative Var(nios2_custom_fcoss, -1)\n-Do not use the fcoss custom instruction\n+Do not use the fcoss custom instruction.\n \n mcustom-fcoss=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fcoss) Init(-1)\n-Integer id (N) of fcoss custom instruction\n+Integer id (N) of fcoss custom instruction.\n \n mno-custom-fsqrts\n Target Report RejectNegative Var(nios2_custom_fsqrts, -1)\n-Do not use the fsqrts custom instruction\n+Do not use the fsqrts custom instruction.\n \n mcustom-fsqrts=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fsqrts) Init(-1)\n-Integer id (N) of fsqrts custom instruction\n+Integer id (N) of fsqrts custom instruction.\n \n mno-custom-fabss\n Target Report RejectNegative Var(nios2_custom_fabss, -1)\n-Do not use the fabss custom instr\n+Do not use the fabss custom instr.\n \n mcustom-fabss=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fabss) Init(-1)\n-Integer id (N) of fabss custom instruction\n+Integer id (N) of fabss custom instruction.\n \n mno-custom-fnegs\n Target Report RejectNegative Var(nios2_custom_fnegs, -1)\n-Do not use the fnegs custom instruction\n+Do not use the fnegs custom instruction.\n \n mcustom-fnegs=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fnegs) Init(-1)\n-Integer id (N) of fnegs custom instruction\n+Integer id (N) of fnegs custom instruction.\n \n mno-custom-fmaxs\n Target Report RejectNegative Var(nios2_custom_fmaxs, -1)\n-Do not use the fmaxs custom instruction\n+Do not use the fmaxs custom instruction.\n \n mcustom-fmaxs=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fmaxs) Init(-1)\n-Integer id (N) of fmaxs custom instruction\n+Integer id (N) of fmaxs custom instruction.\n \n mno-custom-fmins\n Target Report RejectNegative Var(nios2_custom_fmins, -1)\n-Do not use the fmins custom instruction\n+Do not use the fmins custom instruction.\n \n mcustom-fmins=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fmins) Init(-1)\n-Integer id (N) of fmins custom instruction\n+Integer id (N) of fmins custom instruction.\n \n mno-custom-fdivs\n Target Report RejectNegative Var(nios2_custom_fdivs, -1)\n-Do not use the fdivs custom instruction\n+Do not use the fdivs custom instruction.\n \n mcustom-fdivs=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fdivs) Init(-1)\n-Integer id (N) of fdivs custom instruction\n+Integer id (N) of fdivs custom instruction.\n \n mno-custom-fmuls\n Target Report RejectNegative Var(nios2_custom_fmuls, -1)\n-Do not use the fmuls custom instruction\n+Do not use the fmuls custom instruction.\n \n mcustom-fmuls=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fmuls) Init(-1)\n-Integer id (N) of fmuls custom instruction\n+Integer id (N) of fmuls custom instruction.\n \n mno-custom-fsubs\n Target Report RejectNegative Var(nios2_custom_fsubs, -1)\n-Do not use the fsubs custom instruction\n+Do not use the fsubs custom instruction.\n \n mcustom-fsubs=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fsubs) Init(-1)\n-Integer id (N) of fsubs custom instruction\n+Integer id (N) of fsubs custom instruction.\n \n mno-custom-fadds\n Target Report RejectNegative Var(nios2_custom_fadds, -1)\n-Do not use the fadds custom instruction\n+Do not use the fadds custom instruction.\n \n mcustom-fadds=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fadds) Init(-1)\n-Integer id (N) of fadds custom instruction\n+Integer id (N) of fadds custom instruction.\n \n mno-custom-frdy\n Target Report RejectNegative Var(nios2_custom_frdy, -1)\n-Do not use the frdy custom instruction\n+Do not use the frdy custom instruction.\n \n mcustom-frdy=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_frdy) Init(-1)\n-Integer id (N) of frdy custom instruction\n+Integer id (N) of frdy custom instruction.\n \n mno-custom-frdxhi\n Target Report RejectNegative Var(nios2_custom_frdxhi, -1)\n-Do not use the frdxhi custom instruction\n+Do not use the frdxhi custom instruction.\n \n mcustom-frdxhi=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_frdxhi) Init(-1)\n-Integer id (N) of frdxhi custom instruction\n+Integer id (N) of frdxhi custom instruction.\n \n mno-custom-frdxlo\n Target Report RejectNegative Var(nios2_custom_frdxlo, -1)\n-Do not use the frdxlo custom instruction\n+Do not use the frdxlo custom instruction.\n \n mcustom-frdxlo=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_frdxlo) Init(-1)\n-Integer id (N) of frdxlo custom instruction\n+Integer id (N) of frdxlo custom instruction.\n \n mno-custom-fwry\n Target Report RejectNegative Var(nios2_custom_fwry, -1)\n-Do not use the fwry custom instruction\n+Do not use the fwry custom instruction.\n \n mcustom-fwry=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fwry) Init(-1)\n-Integer id (N) of fwry custom instruction\n+Integer id (N) of fwry custom instruction.\n \n mno-custom-fwrx\n Target Report RejectNegative Var(nios2_custom_fwrx, -1)\n-Do not use the fwrx custom instruction\n+Do not use the fwrx custom instruction.\n \n mcustom-fwrx=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_fwrx) Init(-1)\n-Integer id (N) of fwrx custom instruction\n+Integer id (N) of fwrx custom instruction.\n \n mno-custom-round\n Target Report RejectNegative Var(nios2_custom_round, -1)\n-Do not use the round custom instruction\n+Do not use the round custom instruction.\n \n mcustom-round=\n Target Report RejectNegative Joined UInteger Var(nios2_custom_round) Init(-1)\n-Integer id (N) of round custom instruction\n+Integer id (N) of round custom instruction.\n \n march=\n Target RejectNegative Joined Enum(nios2_arch_type) Var(nios2_arch_option) Init(ARCH_R1)\n@@ -581,8 +581,8 @@ Enum(nios2_arch_type) String(r2) Value(ARCH_R2)\n \n mbmx\n Target Report Mask(HAS_BMX)\n-Enable generation of R2 BMX instructions\n+Enable generation of R2 BMX instructions.\n \n mcdx\n Target Report Mask(HAS_CDX)\n-Enable generation of R2 CDX instructions\n+Enable generation of R2 CDX instructions."}, {"sha": "80170465beaf51f66c90afb959efc9a1a2fc7797", "filename": "gcc/config/nvptx/nvptx.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -19,11 +19,11 @@\n \n m32\n Target Report RejectNegative InverseMask(ABI64)\n-Generate code for a 32-bit ABI\n+Generate code for a 32-bit ABI.\n \n m64\n Target Report RejectNegative Mask(ABI64)\n-Generate code for a 64-bit ABI\n+Generate code for a 64-bit ABI.\n \n mmainkernel\n Target Report RejectNegative"}, {"sha": "1ce6998a82cc3c43e3b869bdb5fbe80c25b7774a", "filename": "gcc/config/pa/pa-hpux.opt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa-hpux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa-hpux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -24,15 +24,15 @@ int flag_pa_unix = TARGET_HPUX_11_31 ? 2003 : TARGET_HPUX_11_11 ? 1998 : TARGET_\n \n msio\n Target RejectNegative Mask(SIO)\n-Generate cpp defines for server IO\n+Generate cpp defines for server IO.\n \n munix=93\n Target RejectNegative Var(flag_pa_unix, 1993)\n-Specify UNIX standard for predefines and linking\n+Specify UNIX standard for predefines and linking.\n \n mwsio\n Target RejectNegative InverseMask(SIO)\n-Generate cpp defines for workstation IO\n+Generate cpp defines for workstation IO.\n \n nolibdld\n Driver"}, {"sha": "0ae6224d688ad41a9915bb3661db75481d97f82a", "filename": "gcc/config/pa/pa-hpux1010.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa-hpux1010.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa-hpux1010.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux1010.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,4 +20,4 @@\n \n munix=95\n Target RejectNegative Var(flag_pa_unix, 1995)\n-Specify UNIX standard for predefines and linking\n+Specify UNIX standard for predefines and linking."}, {"sha": "6623182a23ee6005d7659024f67f5c1eaa17c927", "filename": "gcc/config/pa/pa-hpux1111.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa-hpux1111.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa-hpux1111.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux1111.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,4 +20,4 @@\n \n munix=98\n Target RejectNegative Var(flag_pa_unix, 1998)\n-Specify UNIX standard for predefines and linking\n+Specify UNIX standard for predefines and linking."}, {"sha": "fefd441d033da5724b5823f68770b1513f5a0799", "filename": "gcc/config/pa/pa-hpux1131.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa-hpux1131.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa-hpux1131.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa-hpux1131.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,4 +20,4 @@\n \n munix=2003\n Target RejectNegative Var(flag_pa_unix, 2003)\n-Specify UNIX standard for predefines and linking\n+Specify UNIX standard for predefines and linking."}, {"sha": "055c5697e553d77d550312f8b1a8a57731e62554", "filename": "gcc/config/pa/pa.opt", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -27,39 +27,39 @@ enum processor_type pa_cpu = TARGET_SCHED_DEFAULT\n \n march=1.0\n Target RejectNegative\n-Generate PA1.0 code\n+Generate PA1.0 code.\n \n march=1.1\n Target RejectNegative\n-Generate PA1.1 code\n+Generate PA1.1 code.\n \n march=2.0\n Target RejectNegative\n-Generate PA2.0 code (requires binutils 2.10 or later)\n+Generate PA2.0 code (requires binutils 2.10 or later).\n \n mbig-switch\n Target Ignore\n Does nothing.  Preserved for backward compatibility.\n \n mdisable-fpregs\n Target Report Mask(DISABLE_FPREGS)\n-Disable FP regs\n+Disable FP regs.\n \n mdisable-indexing\n Target Report Mask(DISABLE_INDEXING)\n-Disable indexed addressing\n+Disable indexed addressing.\n \n mfast-indirect-calls\n Target Report Mask(FAST_INDIRECT_CALLS)\n-Generate fast indirect calls\n+Generate fast indirect calls.\n \n mfixed-range=\n Target RejectNegative Joined Var(pa_deferred_options) Defer\n-Specify range of registers to make fixed\n+Specify range of registers to make fixed.\n \n mgas\n Target Report Mask(GAS)\n-Assume code will be assembled by GAS\n+Assume code will be assembled by GAS.\n \n mjump-in-delay\n Target Ignore\n@@ -68,43 +68,43 @@ Does nothing.  Preserved for backward compatibility.\n ;; Not used by gcc\n mlinker-opt\n Target RejectNegative\n-Enable linker optimizations\n+Enable linker optimizations.\n \n mlong-calls\n Target Report Mask(LONG_CALLS)\n-Always generate long calls\n+Always generate long calls.\n \n mlong-load-store\n Target Report Mask(LONG_LOAD_STORE)\n-Emit long load/store sequences\n+Emit long load/store sequences.\n \n mnosnake\n Target RejectNegative\n-Generate PA1.0 code\n+Generate PA1.0 code.\n \n mno-space-regs\n Target RejectNegative Report Mask(NO_SPACE_REGS)\n-Disable space regs\n+Disable space regs.\n \n mpa-risc-1-0\n Target RejectNegative\n-Generate PA1.0 code\n+Generate PA1.0 code.\n \n mpa-risc-1-1\n Target RejectNegative Mask(PA_11)\n-Generate PA1.1 code\n+Generate PA1.1 code.\n \n mpa-risc-2-0\n Target RejectNegative Mask(PA_20)\n-Generate PA2.0 code (requires binutils 2.10 or later)\n+Generate PA2.0 code (requires binutils 2.10 or later).\n \n mportable-runtime\n Target Report Mask(PORTABLE_RUNTIME)\n-Use portable calling conventions\n+Use portable calling conventions.\n \n mschedule=\n Target RejectNegative Joined Enum(pa_schedule) Var(pa_cpu)\n-Specify CPU for scheduling purposes.  Valid arguments are 700, 7100, 7100LC, 7200, 7300, and 8000\n+Specify CPU for scheduling purposes.  Valid arguments are 700, 7100, 7100LC, 7200, 7300, and 8000.\n \n Enum\n Name(pa_schedule) Type(enum processor_type)\n@@ -129,12 +129,12 @@ Enum(pa_schedule) String(7300) Value(PROCESSOR_7300)\n \n msoft-float\n Target Report Mask(SOFT_FLOAT)\n-Use software floating point\n+Use software floating point.\n \n msnake\n Target RejectNegative\n-Generate PA1.1 code\n+Generate PA1.1 code.\n \n mspace-regs\n Target RejectNegative Report InverseMask(NO_SPACE_REGS)\n-Do not disable space regs\n+Do not disable space regs."}, {"sha": "8e65a41b971fab3cc367c0d3da0ac74be18e6b24", "filename": "gcc/config/pa/pa64-hpux.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa64-hpux.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpa%2Fpa64-hpux.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa64-hpux.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,8 +20,8 @@\n \n mgnu-ld\n Target RejectNegative Mask(GNU_LD)\n-Assume code will be linked by GNU ld\n+Assume code will be linked by GNU ld.\n \n mhp-ld\n Target RejectNegative InverseMask(GNU_LD)\n-Assume code will be linked by HP ld\n+Assume code will be linked by HP ld."}, {"sha": "ff27a9f4b4200b578241d4f4515be4cff1b49a38", "filename": "gcc/config/pdp11/pdp11.opt", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpdp11%2Fpdp11.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fpdp11%2Fpdp11.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,68 +20,68 @@\n \n m10\n Target RejectNegative\n-Generate code for an 11/10\n+Generate code for an 11/10.\n \n m40\n Target Report Mask(40)\n-Generate code for an 11/40\n+Generate code for an 11/40.\n \n m45\n Target Report Mask(45)\n-Generate code for an 11/45\n+Generate code for an 11/45.\n \n mac0\n Target Report Mask(AC0)\n-Return floating-point results in ac0 (fr0 in Unix assembler syntax)\n+Return floating-point results in ac0 (fr0 in Unix assembler syntax).\n \n mbcopy\n Target RejectNegative Report Mask(BCOPY)\n-Do not use inline patterns for copying memory\n+Do not use inline patterns for copying memory.\n \n mbcopy-builtin\n Target RejectNegative Report InverseMask(BCOPY, BCOPY_BUILTIN)\n-Use inline patterns for copying memory\n+Use inline patterns for copying memory.\n \n mbranch-cheap\n Target RejectNegative Report InverseMask(BRANCH_EXPENSIVE, BRANCH_CHEAP)\n-Do not pretend that branches are expensive\n+Do not pretend that branches are expensive.\n \n mbranch-expensive\n Target RejectNegative Report Mask(BRANCH_EXPENSIVE)\n-Pretend that branches are expensive\n+Pretend that branches are expensive.\n \n mdec-asm\n Target RejectNegative Report InverseMask(UNIX_ASM)\n-Use the DEC assembler syntax\n+Use the DEC assembler syntax.\n \n mfloat32\n Target Report Mask(FLOAT32)\n-Use 32 bit float\n+Use 32 bit float.\n \n mfloat64\n Target Report InverseMask(FLOAT32, FLOAT64)\n-Use 64 bit float\n+Use 64 bit float.\n \n mfpu\n Target RejectNegative Report Mask(FPU)\n-Use hardware floating point\n+Use hardware floating point.\n \n mint16\n Target Report InverseMask(INT32, INT16)\n-Use 16 bit int\n+Use 16 bit int.\n \n mint32\n Target Report Mask(INT32)\n-Use 32 bit int\n+Use 32 bit int.\n \n msoft-float\n Target RejectNegative Report InverseMask(FPU, SOFT_FLOAT)\n-Do not use hardware floating point\n+Do not use hardware floating point.\n \n msplit\n Target Report Mask(SPLIT)\n-Target has split I&D\n+Target has split I&D.\n \n munix-asm\n Target RejectNegative Report Mask(UNIX_ASM)\n-Use UNIX assembler syntax\n+Use UNIX assembler syntax."}, {"sha": "9d7292b2528fd4b1677f55a090b6f239e93da5b4", "filename": "gcc/config/rl78/rl78.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frl78%2Frl78.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frl78%2Frl78.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frl78%2Frl78.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -74,19 +74,19 @@ Enum(rl78_cpu_types) String(rl78) Value(CPU_G14)\n \n mg10\n Target RejectNegative Report Alias(mcpu=, g10)\n-Alias for -mcpu=g10\n+Alias for -mcpu=g10.\n \n mg13\n Target RejectNegative Report Alias(mcpu=, g13)\n-Alias for -mcpu=g13\n+Alias for -mcpu=g13.\n \n mg14\n Target RejectNegative Report Alias(mcpu=, g14)\n-Alias for -mcpu=g14\n+Alias for -mcpu=g14.\n \n mrl78\n Target RejectNegative Report Alias(mcpu=, g14)\n-Alias for -mcpu=g14\n+Alias for -mcpu=g14.\n \n mes0\n Target Mask(ES0)"}, {"sha": "329f71d92e817840b069d6747fd249f9640e0ea9", "filename": "gcc/config/rs6000/476.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2F476.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2F476.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2F476.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,4 +21,4 @@\n \n mpreserve-link-stack\n Target Var(rs6000_link_stack) Init(-1) Save\n-Preserve the PowerPC 476's link stack by matching up a blr with the bcl/bl insns used for GOT accesses\n+Preserve the PowerPC 476's link stack by matching up a blr with the bcl/bl insns used for GOT accesses."}, {"sha": "c07bd54c6d933868a16d8f42990d551715707efe", "filename": "gcc/config/rs6000/aix64.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Faix64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Faix64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix64.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,15 +21,15 @@\n \n maix64\n Target Report RejectNegative Negative(maix32) Mask(64BIT) Var(rs6000_isa_flags)\n-Compile for 64-bit pointers\n+Compile for 64-bit pointers.\n \n maix32\n Target Report RejectNegative Negative(maix64) InverseMask(64BIT) Var(rs6000_isa_flags)\n-Compile for 32-bit pointers\n+Compile for 32-bit pointers.\n \n mcmodel=\n Target RejectNegative Joined Enum(rs6000_cmodel) Var(rs6000_current_cmodel)\n-Select code model\n+Select code model.\n \n Enum\n Name(rs6000_cmodel) Type(enum rs6000_cmodel)\n@@ -46,7 +46,7 @@ Enum(rs6000_cmodel) String(large) Value(CMODEL_LARGE)\n \n mpe\n Target Report RejectNegative Var(internal_nothing_1) Save\n-Support message passing with the Parallel Environment\n+Support message passing with the Parallel Environment.\n \n posix\n Driver"}, {"sha": "9dbec3dd6a349793934197ae5b85411e9a820d81", "filename": "gcc/config/rs6000/darwin.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Fdarwin.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Fdarwin.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -35,8 +35,8 @@ Driver RejectNegative Alias(mfix-and-continue)\n \n m64\n Target RejectNegative Negative(m32) Mask(64BIT) Var(rs6000_isa_flags)\n-Generate 64-bit code\n+Generate 64-bit code.\n \n m32\n Target RejectNegative Negative(m64) InverseMask(64BIT) Var(rs6000_isa_flags)\n-Generate 32-bit code\n+Generate 32-bit code."}, {"sha": "47c049bbdb27ddd06e26d6c36ff514bcc513378a", "filename": "gcc/config/rs6000/linux64.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Flinux64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Flinux64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,11 +21,11 @@\n \n mprofile-kernel\n Target Report Var(profile_kernel) Save\n-Call mcount for profiling before a function prologue\n+Call mcount for profiling before a function prologue.\n \n mcmodel=\n Target RejectNegative Joined Enum(rs6000_cmodel) Var(rs6000_current_cmodel)\n-Select code model\n+Select code model.\n \n Enum\n Name(rs6000_cmodel) Type(enum rs6000_cmodel)"}, {"sha": "bb22d45fc2656ffa464095cf343c2bd8dfe2fe7a", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 83, "deletions": 83, "changes": 166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -106,91 +106,91 @@ Target RejectNegative Undocumented Ignore\n \n mpowerpc64\n Target Report Mask(POWERPC64) Var(rs6000_isa_flags)\n-Use PowerPC-64 instruction set\n+Use PowerPC-64 instruction set.\n \n mpowerpc-gpopt\n Target Report Mask(PPC_GPOPT) Var(rs6000_isa_flags)\n-Use PowerPC General Purpose group optional instructions\n+Use PowerPC General Purpose group optional instructions.\n \n mpowerpc-gfxopt\n Target Report Mask(PPC_GFXOPT) Var(rs6000_isa_flags)\n-Use PowerPC Graphics group optional instructions\n+Use PowerPC Graphics group optional instructions.\n \n mmfcrf\n Target Report Mask(MFCRF) Var(rs6000_isa_flags)\n-Use PowerPC V2.01 single field mfcr instruction\n+Use PowerPC V2.01 single field mfcr instruction.\n \n mpopcntb\n Target Report Mask(POPCNTB) Var(rs6000_isa_flags)\n-Use PowerPC V2.02 popcntb instruction\n+Use PowerPC V2.02 popcntb instruction.\n \n mfprnd\n Target Report Mask(FPRND) Var(rs6000_isa_flags)\n-Use PowerPC V2.02 floating point rounding instructions\n+Use PowerPC V2.02 floating point rounding instructions.\n \n mcmpb\n Target Report Mask(CMPB) Var(rs6000_isa_flags)\n-Use PowerPC V2.05 compare bytes instruction\n+Use PowerPC V2.05 compare bytes instruction.\n \n mmfpgpr\n Target Report Mask(MFPGPR) Var(rs6000_isa_flags)\n-Use extended PowerPC V2.05 move floating point to/from GPR instructions\n+Use extended PowerPC V2.05 move floating point to/from GPR instructions.\n \n maltivec\n Target Report Mask(ALTIVEC) Var(rs6000_isa_flags)\n-Use AltiVec instructions\n+Use AltiVec instructions.\n \n maltivec=le\n Target Report RejectNegative Var(rs6000_altivec_element_order, 1) Save\n-Generate Altivec instructions using little-endian element order\n+Generate Altivec instructions using little-endian element order.\n \n maltivec=be\n Target Report RejectNegative Var(rs6000_altivec_element_order, 2)\n-Generate Altivec instructions using big-endian element order\n+Generate Altivec instructions using big-endian element order.\n \n mhard-dfp\n Target Report Mask(DFP) Var(rs6000_isa_flags)\n-Use decimal floating point instructions\n+Use decimal floating point instructions.\n \n mmulhw\n Target Report Mask(MULHW) Var(rs6000_isa_flags)\n-Use 4xx half-word multiply instructions\n+Use 4xx half-word multiply instructions.\n \n mdlmzb\n Target Report Mask(DLMZB) Var(rs6000_isa_flags)\n-Use 4xx string-search dlmzb instruction\n+Use 4xx string-search dlmzb instruction.\n \n mmultiple\n Target Report Mask(MULTIPLE) Var(rs6000_isa_flags)\n-Generate load/store multiple instructions\n+Generate load/store multiple instructions.\n \n mstring\n Target Report Mask(STRING) Var(rs6000_isa_flags)\n-Generate string instructions for block moves\n+Generate string instructions for block moves.\n \n msoft-float\n Target Report RejectNegative Mask(SOFT_FLOAT) Var(rs6000_isa_flags)\n-Do not use hardware floating point\n+Do not use hardware floating point.\n \n mhard-float\n Target Report RejectNegative InverseMask(SOFT_FLOAT, HARD_FLOAT) Var(rs6000_isa_flags)\n-Use hardware floating point\n+Use hardware floating point.\n \n mpopcntd\n Target Report Mask(POPCNTD) Var(rs6000_isa_flags)\n-Use PowerPC V2.06 popcntd instruction\n+Use PowerPC V2.06 popcntd instruction.\n \n mfriz\n Target Report Var(TARGET_FRIZ) Init(-1) Save\n-Under -ffast-math, generate a FRIZ instruction for (double)(long long) conversions\n+Under -ffast-math, generate a FRIZ instruction for (double)(long long) conversions.\n \n mveclibabi=\n Target RejectNegative Joined Var(rs6000_veclibabi_name)\n-Vector library ABI to use\n+Vector library ABI to use.\n \n mvsx\n Target Report Mask(VSX) Var(rs6000_isa_flags)\n-Use vector/scalar (VSX) instructions\n+Use vector/scalar (VSX) instructions.\n \n mvsx-scalar-float\n Target Undocumented Report Var(TARGET_VSX_SCALAR_FLOAT) Init(1)\n@@ -237,42 +237,42 @@ Target Undocumented Report Var(TARGET_VECTORIZE_BUILTINS) Init(-1) Save\n \n mno-update\n Target Report RejectNegative Mask(NO_UPDATE) Var(rs6000_isa_flags)\n-Do not generate load/store with update instructions\n+Do not generate load/store with update instructions.\n \n mupdate\n Target Report RejectNegative InverseMask(NO_UPDATE, UPDATE) Var(rs6000_isa_flags)\n-Generate load/store with update instructions\n+Generate load/store with update instructions.\n \n msingle-pic-base\n Target Report Var(TARGET_SINGLE_PIC_BASE) Init(0)\n-Do not load the PIC register in function prologues\n+Do not load the PIC register in function prologues.\n \n mavoid-indexed-addresses\n Target Report Var(TARGET_AVOID_XFORM) Init(-1) Save\n-Avoid generation of indexed load/store instructions when possible\n+Avoid generation of indexed load/store instructions when possible.\n \n mtls-markers\n Target Report Var(tls_markers) Init(1) Save\n-Mark __tls_get_addr calls with argument info\n+Mark __tls_get_addr calls with argument info.\n \n msched-epilog\n Target Undocumented Var(TARGET_SCHED_PROLOG) Init(1) Save\n \n msched-prolog\n Target Report Var(TARGET_SCHED_PROLOG) Save\n-Schedule the start and end of the procedure\n+Schedule the start and end of the procedure.\n \n maix-struct-return\n Target Report RejectNegative Var(aix_struct_return) Save\n-Return all structures in memory (AIX default)\n+Return all structures in memory (AIX default).\n \n msvr4-struct-return\n Target Report RejectNegative Var(aix_struct_return,0) Save\n-Return small structures in registers (SVR4 default)\n+Return small structures in registers (SVR4 default).\n \n mxl-compat\n Target Report Var(TARGET_XL_COMPAT) Save\n-Conform more closely to IBM XLC semantics\n+Conform more closely to IBM XLC semantics.\n \n mrecip\n Target Report\n@@ -288,19 +288,19 @@ Assume that the reciprocal estimate instructions provide more accuracy.\n \n mno-fp-in-toc\n Target Report RejectNegative Var(TARGET_NO_FP_IN_TOC) Save\n-Do not place floating point constants in TOC\n+Do not place floating point constants in TOC.\n \n mfp-in-toc\n Target Report RejectNegative Var(TARGET_NO_FP_IN_TOC,0) Save\n-Place floating point constants in TOC\n+Place floating point constants in TOC.\n \n mno-sum-in-toc\n Target RejectNegative Var(TARGET_NO_SUM_IN_TOC) Save\n-Do not place symbol+offset constants in TOC\n+Do not place symbol+offset constants in TOC.\n \n msum-in-toc\n Target RejectNegative Var(TARGET_NO_SUM_IN_TOC,0) Save\n-Place symbol+offset constants in TOC\n+Place symbol+offset constants in TOC.\n \n ;  Output only one TOC entry per module.  Normally linking fails if\n ;   there are more than 16K unique variables/constants in an executable.  With\n@@ -311,83 +311,83 @@ Place symbol+offset constants in TOC\n ;   function, and one less allocable register.\n mminimal-toc\n Target Report Mask(MINIMAL_TOC) Var(rs6000_isa_flags)\n-Use only one TOC entry per procedure\n+Use only one TOC entry per procedure.\n \n mfull-toc\n Target Report\n-Put everything in the regular TOC\n+Put everything in the regular TOC.\n \n mvrsave\n Target Report Var(TARGET_ALTIVEC_VRSAVE) Save\n-Generate VRSAVE instructions when generating AltiVec code\n+Generate VRSAVE instructions when generating AltiVec code.\n \n mvrsave=no\n Target RejectNegative Alias(mvrsave) NegativeAlias\n-Deprecated option.  Use -mno-vrsave instead\n+Deprecated option.  Use -mno-vrsave instead.\n \n mvrsave=yes\n Target RejectNegative Alias(mvrsave)\n-Deprecated option.  Use -mvrsave instead\n+Deprecated option.  Use -mvrsave instead.\n \n mblock-move-inline-limit=\n Target Report Var(rs6000_block_move_inline_limit) Init(0) RejectNegative Joined UInteger Save\n-Specify how many bytes should be moved inline before calling out to memcpy/memmove\n+Specify how many bytes should be moved inline before calling out to memcpy/memmove.\n \n misel\n Target Report Mask(ISEL) Var(rs6000_isa_flags)\n-Generate isel instructions\n+Generate isel instructions.\n \n misel=no\n Target RejectNegative Alias(misel) NegativeAlias\n-Deprecated option.  Use -mno-isel instead\n+Deprecated option.  Use -mno-isel instead.\n \n misel=yes\n Target RejectNegative Alias(misel)\n-Deprecated option.  Use -misel instead\n+Deprecated option.  Use -misel instead.\n \n mspe\n Target Var(rs6000_spe) Save\n-Generate SPE SIMD instructions on E500\n+Generate SPE SIMD instructions on E500.\n \n mpaired\n Target Var(rs6000_paired_float) Save\n-Generate PPC750CL paired-single instructions\n+Generate PPC750CL paired-single instructions.\n \n mspe=no\n Target RejectNegative Alias(mspe) NegativeAlias\n-Deprecated option.  Use -mno-spe instead\n+Deprecated option.  Use -mno-spe instead.\n \n mspe=yes\n Target RejectNegative Alias(mspe)\n-Deprecated option.  Use -mspe instead\n+Deprecated option.  Use -mspe instead.\n \n mdebug=\n Target RejectNegative Joined\n--mdebug=\tEnable debug output\n+-mdebug=\tEnable debug output.\n \n mabi=altivec\n Target RejectNegative Var(rs6000_altivec_abi) Save\n-Use the AltiVec ABI extensions\n+Use the AltiVec ABI extensions.\n \n mabi=no-altivec\n Target RejectNegative Var(rs6000_altivec_abi, 0)\n-Do not use the AltiVec ABI extensions\n+Do not use the AltiVec ABI extensions.\n \n mabi=spe\n Target RejectNegative Var(rs6000_spe_abi) Save\n-Use the SPE ABI extensions\n+Use the SPE ABI extensions.\n \n mabi=no-spe\n Target RejectNegative Var(rs6000_spe_abi, 0)\n-Do not use the SPE ABI extensions\n+Do not use the SPE ABI extensions.\n \n mabi=elfv1\n Target RejectNegative Var(rs6000_elf_abi, 1) Save\n-Use the ELFv1 ABI\n+Use the ELFv1 ABI.\n \n mabi=elfv2\n Target RejectNegative Var(rs6000_elf_abi, 2)\n-Use the ELFv2 ABI\n+Use the ELFv2 ABI.\n \n ; These are here for testing during development only, do not document\n ; in the manual please.\n@@ -407,15 +407,15 @@ Target RejectNegative Undocumented Warn(using IBM extended precision long double\n \n mcpu=\n Target RejectNegative Joined Var(rs6000_cpu_index) Init(-1) Enum(rs6000_cpu_opt_value) Save\n--mcpu=\tUse features of and schedule code for given CPU\n+-mcpu=\tUse features of and schedule code for given CPU.\n \n mtune=\n Target RejectNegative Joined Var(rs6000_tune_index) Init(-1) Enum(rs6000_cpu_opt_value) Save\n--mtune=\tSchedule code for given CPU\n+-mtune=\tSchedule code for given CPU.\n \n mtraceback=\n Target RejectNegative Joined Enum(rs6000_traceback_type) Var(rs6000_traceback)\n--mtraceback=\tSelect full, part, or no traceback table\n+-mtraceback=\tSelect full, part, or no traceback table.\n \n Enum\n Name(rs6000_traceback_type) Type(enum rs6000_traceback_type)\n@@ -431,23 +431,23 @@ Enum(rs6000_traceback_type) String(no) Value(traceback_none)\n \n mlongcall\n Target Report Var(rs6000_default_long_calls) Save\n-Avoid all range limits on call instructions\n+Avoid all range limits on call instructions.\n \n mgen-cell-microcode\n Target Report Var(rs6000_gen_cell_microcode) Init(-1) Save\n-Generate Cell microcode\n+Generate Cell microcode.\n \n mwarn-cell-microcode\n Target Var(rs6000_warn_cell_microcode) Init(0) Warning Save\n-Warn when a Cell microcoded instruction is emitted\n+Warn when a Cell microcoded instruction is emitted.\n \n mwarn-altivec-long\n Target Var(rs6000_warn_altivec_long) Init(1) Save\n-Warn about deprecated 'vector long ...' AltiVec type usage\n+Warn about deprecated 'vector long ...' AltiVec type usage.\n \n mfloat-gprs=\n Target RejectNegative Joined Enum(rs6000_float_gprs) Var(rs6000_float_gprs) Save\n--mfloat-gprs=\tSelect GPR floating point method\n+-mfloat-gprs=\tSelect GPR floating point method.\n \n Enum\n Name(rs6000_float_gprs) Type(unsigned char)\n@@ -467,23 +467,23 @@ Enum(rs6000_float_gprs) String(no) Value(0)\n \n mlong-double-\n Target RejectNegative Joined UInteger Var(rs6000_long_double_type_size) Save\n--mlong-double-<n>\tSpecify size of long double (64 or 128 bits)\n+-mlong-double-<n>\tSpecify size of long double (64 or 128 bits).\n \n mlra\n Target Report Var(rs6000_lra_flag) Init(0) Save\n-Use LRA instead of reload\n+Use LRA instead of reload.\n \n msched-costly-dep=\n Target RejectNegative Joined Var(rs6000_sched_costly_dep_str)\n-Determine which dependences between insns are considered costly\n+Determine which dependences between insns are considered costly.\n \n minsert-sched-nops=\n Target RejectNegative Joined Var(rs6000_sched_insert_nops_str)\n-Specify which post scheduling nop insertion scheme to apply\n+Specify which post scheduling nop insertion scheme to apply.\n \n malign-\n Target RejectNegative Joined Enum(rs6000_alignment_flags) Var(rs6000_alignment_flags)\n-Specify alignment of structure fields default/natural\n+Specify alignment of structure fields default/natural.\n \n Enum\n Name(rs6000_alignment_flags) Type(unsigned char)\n@@ -497,23 +497,23 @@ Enum(rs6000_alignment_flags) String(natural) Value(MASK_ALIGN_NATURAL)\n \n mprioritize-restricted-insns=\n Target RejectNegative Joined UInteger Var(rs6000_sched_restricted_insns_priority) Save\n-Specify scheduling priority for dispatch slot restricted insns\n+Specify scheduling priority for dispatch slot restricted insns.\n \n msingle-float\n Target RejectNegative Var(rs6000_single_float) Save\n-Single-precision floating point unit\n+Single-precision floating point unit.\n \n mdouble-float\n Target RejectNegative Var(rs6000_double_float) Save\n-Double-precision floating point unit\n+Double-precision floating point unit.\n \n msimple-fpu\n Target RejectNegative Var(rs6000_simple_fpu) Save\n-Floating point unit does not support divide & sqrt\n+Floating point unit does not support divide & sqrt.\n \n mfpu=\n Target RejectNegative Joined Enum(fpu_type_t) Var(rs6000_fpu_type) Init(FPU_NONE)\n--mfpu=\tSpecify FP (sp, dp, sp-lite, dp-lite) (implies -mxilinx-fpu)\n+-mfpu=\tSpecify FP (sp, dp, sp-lite, dp-lite) (implies -mxilinx-fpu).\n \n Enum\n Name(fpu_type_t) Type(enum fpu_type_t)\n@@ -543,35 +543,35 @@ Use/do not use r11 to hold the static link in calls to functions via pointers.\n \n msave-toc-indirect\n Target Report Mask(SAVE_TOC_INDIRECT) Var(rs6000_isa_flags)\n-Control whether we save the TOC in the prologue for indirect calls or generate the save inline\n+Control whether we save the TOC in the prologue for indirect calls or generate the save inline.\n \n mvsx-timode\n Target Undocumented Mask(VSX_TIMODE) Var(rs6000_isa_flags)\n-Allow 128-bit integers in VSX registers\n+Allow 128-bit integers in VSX registers.\n \n mpower8-fusion\n Target Report Mask(P8_FUSION) Var(rs6000_isa_flags)\n-Fuse certain integer operations together for better performance on power8\n+Fuse certain integer operations together for better performance on power8.\n \n mpower8-fusion-sign\n Target Undocumented Mask(P8_FUSION_SIGN) Var(rs6000_isa_flags)\n-Allow sign extension in fusion operations\n+Allow sign extension in fusion operations.\n \n mpower8-vector\n Target Report Mask(P8_VECTOR) Var(rs6000_isa_flags)\n Use/do not use vector and scalar instructions added in ISA 2.07.\n \n mcrypto\n Target Report Mask(CRYPTO) Var(rs6000_isa_flags)\n-Use ISA 2.07 Category:Vector.AES and Category:Vector.SHA2 instructions\n+Use ISA 2.07 Category:Vector.AES and Category:Vector.SHA2 instructions.\n \n mdirect-move\n Target Report Mask(DIRECT_MOVE) Var(rs6000_isa_flags)\n-Use ISA 2.07 direct move between GPR & VSX register instructions\n+Use ISA 2.07 direct move between GPR & VSX register instructions.\n \n mhtm\n Target Report Mask(HTM) Var(rs6000_isa_flags)\n-Use ISA 2.07 transactional memory (HTM) instructions\n+Use ISA 2.07 transactional memory (HTM) instructions.\n \n mquad-memory\n Target Report Mask(QUAD_MEMORY) Var(rs6000_isa_flags)\n@@ -587,15 +587,15 @@ Generate aggregate parameter passing code with at most 64-bit alignment.\n \n mupper-regs-df\n Target Report Mask(UPPER_REGS_DF) Var(rs6000_isa_flags)\n-Allow double variables in upper registers with -mcpu=power7 or -mvsx\n+Allow double variables in upper registers with -mcpu=power7 or -mvsx.\n \n mupper-regs-sf\n Target Report Mask(UPPER_REGS_SF) Var(rs6000_isa_flags)\n-Allow float variables in upper registers with -mcpu=power8 or -mpower8-vector\n+Allow float variables in upper registers with -mcpu=power8 or -mpower8-vector.\n \n mupper-regs\n Target Report Var(TARGET_UPPER_REGS) Init(-1) Save\n-Allow float/double variables in upper registers if cpu allows it\n+Allow float/double variables in upper registers if cpu allows it.\n \n moptimize-swaps\n Target Undocumented Var(rs6000_optimize_swaps) Init(1) Save"}, {"sha": "addc9db0a4cf88ee5a1e7a251cf7f7d9552ee0e1", "filename": "gcc/config/rs6000/sysv4.opt", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Fsysv4.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Frs6000%2Fsysv4.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,15 +21,15 @@\n \n mcall-\n Target RejectNegative Joined Var(rs6000_abi_name)\n-Select ABI calling convention\n+Select ABI calling convention.\n \n msdata=\n Target RejectNegative Joined Var(rs6000_sdata_name)\n-Select method for sdata handling\n+Select method for sdata handling.\n \n mtls-size=\n Target RejectNegative Joined Var(rs6000_tls_size) Enum(rs6000_tls_size)\n-Specify bit size of immediate TLS offsets\n+Specify bit size of immediate TLS offsets.\n \n Enum\n Name(rs6000_tls_size) Type(int)\n@@ -45,113 +45,113 @@ Enum(rs6000_tls_size) String(64) Value(64)\n \n mbit-align\n Target Report Var(TARGET_NO_BITFIELD_TYPE) Save\n-Align to the base type of the bit-field\n+Align to the base type of the bit-field.\n \n mstrict-align\n Target Report Mask(STRICT_ALIGN) Var(rs6000_isa_flags)\n-Align to the base type of the bit-field\n-Don't assume that unaligned accesses are handled by the system\n+Align to the base type of the bit-field.\n+Don't assume that unaligned accesses are handled by the system.\n \n mrelocatable\n Target Report Mask(RELOCATABLE) Var(rs6000_isa_flags)\n-Produce code relocatable at runtime\n+Produce code relocatable at runtime.\n \n mrelocatable-lib\n Target\n-Produce code relocatable at runtime\n+Produce code relocatable at runtime.\n \n mlittle-endian\n Target Report RejectNegative Mask(LITTLE_ENDIAN) Var(rs6000_isa_flags)\n-Produce little endian code\n+Produce little endian code.\n \n mlittle\n Target Report RejectNegative Mask(LITTLE_ENDIAN) Var(rs6000_isa_flags)\n-Produce little endian code\n+Produce little endian code.\n \n mbig-endian\n Target Report RejectNegative InverseMask(LITTLE_ENDIAN) Var(rs6000_isa_flags)\n-Produce big endian code\n+Produce big endian code.\n \n mbig\n Target Report RejectNegative InverseMask(LITTLE_ENDIAN) Var(rs6000_isa_flags)\n-Produce big endian code\n+Produce big endian code.\n \n ;; FIXME: This does nothing.  What should be done?\n mno-toc\n Target RejectNegative\n-no description yet\n+no description yet.\n \n mtoc\n Target RejectNegative\n-no description yet\n+no description yet.\n \n mprototype\n Target Var(target_prototype) Save\n-Assume all variable arg functions are prototyped\n+Assume all variable arg functions are prototyped.\n \n ;; FIXME: Does nothing.\n mno-traceback\n Target RejectNegative\n-no description yet\n+no description yet.\n \n meabi\n Target Report Mask(EABI) Var(rs6000_isa_flags)\n-Use EABI\n+Use EABI.\n \n mbit-word\n Target Report Var(TARGET_NO_BITFIELD_WORD) Save\n-Allow bit-fields to cross word boundaries\n+Allow bit-fields to cross word boundaries.\n \n mregnames\n Target Var(rs6000_regnames) Save\n-Use alternate register names\n+Use alternate register names.\n \n ;; This option does nothing and only exists because the compiler\n ;; driver passes all -m* options through.\n msdata\n Target\n-Use default method for sdata handling\n+Use default method for sdata handling.\n \n msim\n Target RejectNegative\n-Link with libsim.a, libc.a and sim-crt0.o\n+Link with libsim.a, libc.a and sim-crt0.o.\n \n mads\n Target RejectNegative\n-Link with libads.a, libc.a and crt0.o\n+Link with libads.a, libc.a and crt0.o.\n \n myellowknife\n Target RejectNegative\n-Link with libyk.a, libc.a and crt0.o\n+Link with libyk.a, libc.a and crt0.o.\n \n mmvme\n Target RejectNegative\n-Link with libmvme.a, libc.a and crt0.o\n+Link with libmvme.a, libc.a and crt0.o.\n \n memb\n Target RejectNegative\n-Set the PPC_EMB bit in the ELF flags header\n+Set the PPC_EMB bit in the ELF flags header.\n \n mshlib\n Target RejectNegative\n-no description yet\n+no description yet.\n \n m64\n Target Report RejectNegative Negative(m32) Mask(64BIT) Var(rs6000_isa_flags)\n-Generate 64-bit code\n+Generate 64-bit code.\n \n m32\n Target Report RejectNegative Negative(m64) InverseMask(64BIT) Var(rs6000_isa_flags)\n-Generate 32-bit code\n+Generate 32-bit code.\n \n mnewlib\n Target RejectNegative\n-no description yet\n+no description yet.\n \n msecure-plt\n Target Report RejectNegative Var(secure_plt, 1) Save\n-Generate code to use a non-exec PLT and GOT\n+Generate code to use a non-exec PLT and GOT.\n \n mbss-plt\n Target Report RejectNegative Var(secure_plt, 0) Save\n-Generate code for old exec BSS PLT\n+Generate code for old exec BSS PLT."}, {"sha": "af82815fd82b7b275c5ae1f5e68b7793eafc2223", "filename": "gcc/config/s390/s390.opt", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fs390%2Fs390.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fs390%2Fs390.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -36,15 +36,15 @@ HOST_WIDE_INT s390_warn_framesize = 0\n \n m31\n Target Report RejectNegative Negative(m64) InverseMask(64BIT)\n-31 bit ABI\n+31 bit ABI.\n \n m64\n Target Report RejectNegative Negative(m31) Mask(64BIT)\n-64 bit ABI\n+64 bit ABI.\n \n march=\n Target RejectNegative Joined Enum(processor_type) Var(s390_arch) Init(PROCESSOR_max)\n-Generate code for given CPU\n+Generate code for given CPU.\n \n Enum\n Name(processor_type) Type(enum processor_type)\n@@ -84,23 +84,23 @@ Enum(processor_type) String(native) Value(PROCESSOR_NATIVE) DriverOnly\n \n mbackchain\n Target Report Mask(BACKCHAIN)\n-Maintain backchain pointer\n+Maintain backchain pointer.\n \n mdebug\n Target Report Mask(DEBUG_ARG)\n-Additional debug prints\n+Additional debug prints.\n \n mesa\n Target Report RejectNegative Negative(mzarch) InverseMask(ZARCH)\n-ESA/390 architecture\n+ESA/390 architecture.\n \n mhard-dfp\n Target Report Mask(HARD_DFP)\n-Enable decimal floating point hardware support\n+Enable decimal floating point hardware support.\n \n mhard-float\n Target Report RejectNegative Negative(msoft-float) InverseMask(SOFT_FLOAT, HARD_FLOAT)\n-Enable hardware floating point\n+Enable hardware floating point.\n \n mhotpatch=\n Target RejectNegative Report Joined Var(s390_deferred_options) Defer\n@@ -114,47 +114,47 @@ size.  Using 0 for both values disables hotpatching.\n \n mlong-double-128\n Target Report RejectNegative Negative(mlong-double-64) Mask(LONG_DOUBLE_128)\n-Use 128-bit long double\n+Use 128-bit long double.\n \n mlong-double-64\n Target Report RejectNegative Negative(mlong-double-128) InverseMask(LONG_DOUBLE_128)\n-Use 64-bit long double\n+Use 64-bit long double.\n \n mhtm\n Target Report Mask(OPT_HTM)\n-Use hardware transactional execution instructions\n+Use hardware transactional execution instructions.\n \n mvx\n Target Report Mask(OPT_VX)\n-Use hardware vector facility instructions and enable the vector ABI\n+Use hardware vector facility instructions and enable the vector ABI.\n \n mpacked-stack\n Target Report Mask(PACKED_STACK)\n-Use packed stack layout\n+Use packed stack layout.\n \n msmall-exec\n Target Report Mask(SMALL_EXEC)\n-Use bras for executable < 64k\n+Use bras for executable < 64k.\n \n msoft-float\n Target Report RejectNegative Negative(mhard-float) Mask(SOFT_FLOAT)\n-Disable hardware floating point\n+Disable hardware floating point.\n \n mstack-guard=\n Target RejectNegative Joined UInteger Var(s390_stack_guard)\n-Set the max. number of bytes which has to be left to stack size before a trap instruction is triggered\n+Set the max. number of bytes which has to be left to stack size before a trap instruction is triggered.\n \n mstack-size=\n Target RejectNegative Joined UInteger Var(s390_stack_size)\n-Emit extra code in the function prologue in order to trap if the stack size exceeds the given limit\n+Emit extra code in the function prologue in order to trap if the stack size exceeds the given limit.\n \n mtune=\n Target RejectNegative Joined Enum(processor_type) Var(s390_tune) Init(PROCESSOR_max)\n-Schedule code for given CPU\n+Schedule code for given CPU.\n \n mmvcle\n Target Report Mask(MVCLE)\n-mvcle use\n+mvcle use.\n \n mzvector\n Target Report Mask(ZVECTOR)\n@@ -163,15 +163,15 @@ vector macro and enable the Altivec-style builtins in vecintrin.h\n \n mwarn-dynamicstack\n Target RejectNegative Var(s390_warn_dynamicstack_p)\n-Warn if a function uses alloca or creates an array with dynamic size\n+Warn if a function uses alloca or creates an array with dynamic size.\n \n mwarn-framesize=\n Target RejectNegative Joined\n-Warn if a single function's framesize exceeds the given framesize\n+Warn if a single function's framesize exceeds the given framesize.\n \n mzarch\n Target Report RejectNegative Negative(mesa) Mask(ZARCH)\n-z/Architecture\n+z/Architecture.\n \n mbranch-cost=\n Target Report Joined RejectNegative UInteger Var(s390_branch_cost) Init(1)\n@@ -181,4 +181,4 @@ values are small, non-negative integers.  The default branch cost is\n \n mlra\n Target Report Var(s390_lra_flag) Init(1) Save\n-Use LRA instead of reload\n+Use LRA instead of reload."}, {"sha": "145f2f8df54512f09d93b6c66e8f1a076d5afc1d", "filename": "gcc/config/s390/tpf.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fs390%2Ftpf.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fs390%2Ftpf.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Ftpf.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,8 +20,8 @@\n \n mtpf-trace\n Target Report Mask(TPF_PROFILING)\n-Enable TPF-OS tracing code\n+Enable TPF-OS tracing code.\n \n mmain\n Target Report\n-Specify main object for TPF-OS\n+Specify main object for TPF-OS."}, {"sha": "5e3e88d27c5ef426e9a397cf716b0d36d24ffbde", "filename": "gcc/config/sh/sh.opt", "status": "modified", "additions": 71, "deletions": 71, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fsh%2Fsh.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fsh%2Fsh.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -45,82 +45,82 @@ Mask(SAVE_ALL_TARGET_REGS)\n \n m1\n Target RejectNegative Mask(SH1) Condition(SUPPORT_SH1)\n-Generate SH1 code\n+Generate SH1 code.\n \n m2\n Target RejectNegative Mask(SH2) Condition(SUPPORT_SH2)\n-Generate SH2 code\n+Generate SH2 code.\n \n m2a\n Target RejectNegative Condition(SUPPORT_SH2A)\n-Generate default double-precision SH2a-FPU code\n+Generate default double-precision SH2a-FPU code.\n \n m2a-nofpu\n Target RejectNegative Condition(SUPPORT_SH2A_NOFPU)\n-Generate SH2a FPU-less code\n+Generate SH2a FPU-less code.\n \n m2a-single\n Target RejectNegative Condition(SUPPORT_SH2A_SINGLE)\n-Generate default single-precision SH2a-FPU code\n+Generate default single-precision SH2a-FPU code.\n \n m2a-single-only\n Target RejectNegative Condition(SUPPORT_SH2A_SINGLE_ONLY)\n-Generate only single-precision SH2a-FPU code\n+Generate only single-precision SH2a-FPU code.\n \n m2e\n Target RejectNegative Condition(SUPPORT_SH2E)\n-Generate SH2e code\n+Generate SH2e code.\n \n m3\n Target RejectNegative Mask(SH3) Condition(SUPPORT_SH3)\n-Generate SH3 code\n+Generate SH3 code.\n \n m3e\n Target RejectNegative Condition(SUPPORT_SH3E)\n-Generate SH3e code\n+Generate SH3e code.\n \n m4\n Target RejectNegative Mask(SH4) Condition(SUPPORT_SH4)\n-Generate SH4 code\n+Generate SH4 code.\n \n m4-100\n Target RejectNegative Condition(SUPPORT_SH4)\n-Generate SH4-100 code\n+Generate SH4-100 code.\n \n m4-200\n Target RejectNegative Condition(SUPPORT_SH4)\n-Generate SH4-200 code\n+Generate SH4-200 code.\n \n ;; TARGET_SH4_300 indicates if we have the ST40-300 instruction set and\n ;; pipeline - irrespective of ABI.\n m4-300\n Target RejectNegative Condition(SUPPORT_SH4) Var(TARGET_SH4_300)\n-Generate SH4-300 code\n+Generate SH4-300 code.\n \n m4-nofpu\n Target RejectNegative Condition(SUPPORT_SH4_NOFPU)\n-Generate SH4 FPU-less code\n+Generate SH4 FPU-less code.\n \n m4-100-nofpu\n Target RejectNegative Condition(SUPPORT_SH4_NOFPU)\n-Generate SH4-100 FPU-less code\n+Generate SH4-100 FPU-less code.\n \n m4-200-nofpu\n Target RejectNegative Condition(SUPPORT_SH4_NOFPU)\n-Generate SH4-200 FPU-less code\n+Generate SH4-200 FPU-less code.\n \n m4-300-nofpu\n Target RejectNegative Condition(SUPPORT_SH4_NOFPU) Var(TARGET_SH4_300)\n-Generate SH4-300 FPU-less code\n+Generate SH4-300 FPU-less code.\n \n m4-340\n Target RejectNegative Condition(SUPPORT_SH4_NOFPU) Var(TARGET_SH4_300)\n-Generate code for SH4 340 series (MMU/FPU-less)\n+Generate code for SH4 340 series (MMU/FPU-less).\n ;; passes -isa=sh4-nommu-nofpu to the assembler.\n \n m4-400\n Target RejectNegative Condition(SUPPORT_SH4_NOFPU)\n-Generate code for SH4 400 series (MMU/FPU-less)\n+Generate code for SH4 400 series (MMU/FPU-less).\n ;; passes -isa=sh4-nommu-nofpu to the assembler.\n \n m4-500\n@@ -130,111 +130,111 @@ Generate code for SH4 500 series (FPU-less).\n \n m4-single\n Target RejectNegative Condition(SUPPORT_SH4_SINGLE)\n-Generate default single-precision SH4 code\n+Generate default single-precision SH4 code.\n \n m4-100-single\n Target RejectNegative Condition(SUPPORT_SH4_SINGLE)\n-Generate default single-precision SH4-100 code\n+Generate default single-precision SH4-100 code.\n \n m4-200-single\n Target RejectNegative Condition(SUPPORT_SH4_SINGLE)\n-Generate default single-precision SH4-200 code\n+Generate default single-precision SH4-200 code.\n \n m4-300-single\n Target RejectNegative Condition(SUPPORT_SH4_SINGLE) Var(TARGET_SH4_300)\n-Generate default single-precision SH4-300 code\n+Generate default single-precision SH4-300 code.\n \n m4-single-only\n Target RejectNegative Condition(SUPPORT_SH4_SINGLE_ONLY)\n-Generate only single-precision SH4 code\n+Generate only single-precision SH4 code.\n \n m4-100-single-only\n Target RejectNegative Condition(SUPPORT_SH4_SINGLE_ONLY)\n-Generate only single-precision SH4-100 code\n+Generate only single-precision SH4-100 code.\n \n m4-200-single-only\n Target RejectNegative Condition(SUPPORT_SH4_SINGLE_ONLY)\n-Generate only single-precision SH4-200 code\n+Generate only single-precision SH4-200 code.\n \n m4-300-single-only\n Target RejectNegative Condition(SUPPORT_SH4_SINGLE_ONLY) Var(TARGET_SH4_300)\n-Generate only single-precision SH4-300 code\n+Generate only single-precision SH4-300 code.\n \n m4a\n Target RejectNegative Mask(SH4A) Condition(SUPPORT_SH4A)\n-Generate SH4a code\n+Generate SH4a code.\n \n m4a-nofpu\n Target RejectNegative Condition(SUPPORT_SH4A_NOFPU)\n-Generate SH4a FPU-less code\n+Generate SH4a FPU-less code.\n \n m4a-single\n Target RejectNegative Condition(SUPPORT_SH4A_SINGLE)\n-Generate default single-precision SH4a code\n+Generate default single-precision SH4a code.\n \n m4a-single-only\n Target RejectNegative Condition(SUPPORT_SH4A_SINGLE_ONLY)\n-Generate only single-precision SH4a code\n+Generate only single-precision SH4a code.\n \n m4al\n Target RejectNegative Condition(SUPPORT_SH4AL)\n-Generate SH4al-dsp code\n+Generate SH4al-dsp code.\n \n m5-32media\n Target RejectNegative Condition(SUPPORT_SH5_32MEDIA)\n-Generate 32-bit SHmedia code\n+Generate 32-bit SHmedia code.\n \n m5-32media-nofpu\n Target RejectNegative Condition(SUPPORT_SH5_32MEDIA_NOFPU)\n-Generate 32-bit FPU-less SHmedia code\n+Generate 32-bit FPU-less SHmedia code.\n \n m5-64media\n Target RejectNegative Condition(SUPPORT_SH5_64MEDIA)\n-Generate 64-bit SHmedia code\n+Generate 64-bit SHmedia code.\n \n m5-64media-nofpu\n Target RejectNegative Condition(SUPPORT_SH5_64MEDIA_NOFPU)\n-Generate 64-bit FPU-less SHmedia code\n+Generate 64-bit FPU-less SHmedia code.\n \n m5-compact\n Target RejectNegative Condition(SUPPORT_SH5_32MEDIA)\n-Generate SHcompact code\n+Generate SHcompact code.\n \n m5-compact-nofpu\n Target RejectNegative Condition(SUPPORT_SH5_32MEDIA_NOFPU)\n-Generate FPU-less SHcompact code\n+Generate FPU-less SHcompact code.\n \n maccumulate-outgoing-args\n Target Report Var(TARGET_ACCUMULATE_OUTGOING_ARGS) Init(1)\n-Reserve space for outgoing arguments in the function prologue\n+Reserve space for outgoing arguments in the function prologue.\n \n madjust-unroll\n Target Ignore\n Does nothing.  Preserved for backward compatibility.\n \n mb\n Target Report RejectNegative InverseMask(LITTLE_ENDIAN)\n-Generate code in big endian mode\n+Generate code in big endian mode.\n \n mbigtable\n Target Report RejectNegative Mask(BIGTABLE)\n-Generate 32-bit offsets in switch tables\n+Generate 32-bit offsets in switch tables.\n \n mbitops\n Target Report RejectNegative Mask(BITOPS)\n-Generate bit instructions\n+Generate bit instructions.\n \n mbranch-cost=\n Target RejectNegative Joined UInteger Var(sh_branch_cost) Init(-1)\n-Cost to assume for a branch insn\n+Cost to assume for a branch insn.\n \n mzdcbranch\n Target Report Var(TARGET_ZDCBRANCH)\n-Assume that zero displacement conditional branches are fast\n+Assume that zero displacement conditional branches are fast.\n \n mcbranchdi\n Target Undocumented Var(TARGET_CBRANCHDI4) Warn(%qs is deprecated and has no effect)\n-Enable cbranchdi4 pattern\n+Enable cbranchdi4 pattern.\n \n mcmpeqdi\n Target Undocumented Var(TARGET_CMPEQDI_T) Warn(%qs is deprecated and has no effect)\n@@ -246,105 +246,105 @@ Force the usage of delay slots for conditional branches.\n \n mcut2-workaround\n Target RejectNegative Var(TARGET_SH5_CUT2_WORKAROUND)\n-Enable SH5 cut2 workaround\n+Enable SH5 cut2 workaround.\n \n mdalign\n Target Report RejectNegative Mask(ALIGN_DOUBLE)\n-Align doubles at 64-bit boundaries\n+Align doubles at 64-bit boundaries.\n \n mdiv=\n Target RejectNegative Joined Var(sh_div_str) Init(\"\")\n-Division strategy, one of: call, call2, fp, inv, inv:minlat, inv20u, inv20l, inv:call, inv:call2, inv:fp, call-div1, call-fp, call-table\n+Division strategy, one of: call, call2, fp, inv, inv:minlat, inv20u, inv20l, inv:call, inv:call2, inv:fp, call-div1, call-fp, call-table.\n \n mdivsi3_libfunc=\n Target RejectNegative Joined Var(sh_divsi3_libfunc) Init(\"\")\n-Specify name for 32 bit signed division function\n+Specify name for 32 bit signed division function.\n \n mfmovd\n Target RejectNegative Mask(FMOVD)\n Enable the use of 64-bit floating point registers in fmov instructions.  See -mdalign if 64-bit alignment is required.\n \n mfixed-range=\n Target RejectNegative Joined Var(sh_fixed_range_str)\n-Specify range of registers to make fixed\n+Specify range of registers to make fixed.\n \n mgettrcost=\n Target RejectNegative Joined UInteger Var(sh_gettrcost) Init(-1)\n-Cost to assume for gettr insn\n+Cost to assume for gettr insn.\n \n mhitachi\n Target Report RejectNegative Mask(HITACHI)\n-Follow Renesas (formerly Hitachi) / SuperH calling conventions\n+Follow Renesas (formerly Hitachi) / SuperH calling conventions.\n \n mieee\n Target Var(TARGET_IEEE)\n-Increase the IEEE compliance for floating-point comparisons\n+Increase the IEEE compliance for floating-point comparisons.\n \n mindexed-addressing\n Target Report Mask(ALLOW_INDEXED_ADDRESS) Condition(SUPPORT_ANY_SH5_32MEDIA)\n-Enable the use of the indexed addressing mode for SHmedia32/SHcompact\n+Enable the use of the indexed addressing mode for SHmedia32/SHcompact.\n \n minline-ic_invalidate\n Target Report Var(TARGET_INLINE_IC_INVALIDATE)\n-inline code to invalidate instruction cache entries after setting up nested function trampolines\n+inline code to invalidate instruction cache entries after setting up nested function trampolines.\n \n minvalid-symbols\n Target Report Mask(INVALID_SYMBOLS) Condition(SUPPORT_ANY_SH5)\n-Assume symbols might be invalid\n+Assume symbols might be invalid.\n \n misize\n Target Report RejectNegative Mask(DUMPISIZE)\n-Annotate assembler instructions with estimated addresses\n+Annotate assembler instructions with estimated addresses.\n \n ml\n Target Report RejectNegative Mask(LITTLE_ENDIAN)\n-Generate code in little endian mode\n+Generate code in little endian mode.\n \n mnomacsave\n Target Report RejectNegative Mask(NOMACSAVE)\n-Mark MAC register as call-clobbered\n+Mark MAC register as call-clobbered.\n \n ;; ??? This option is not useful, but is retained in case there are people\n ;; who are still relying on it.  It may be deleted in the future.\n mpadstruct\n Target Report RejectNegative Mask(PADSTRUCT)\n-Make structs a multiple of 4 bytes (warning: ABI altered)\n+Make structs a multiple of 4 bytes (warning: ABI altered).\n \n mprefergot\n Target Report RejectNegative Mask(PREFERGOT)\n-Emit function-calls using global offset table when generating PIC\n+Emit function-calls using global offset table when generating PIC.\n \n mpt-fixed\n Target Report Mask(PT_FIXED) Condition(SUPPORT_ANY_SH5)\n Assume pt* instructions won't trap\n \n mrelax\n Target Report RejectNegative Mask(RELAX)\n-Shorten address references during linking\n+Shorten address references during linking.\n \n mrenesas\n Target Mask(HITACHI)\n-Follow Renesas (formerly Hitachi) / SuperH calling conventions\n+Follow Renesas (formerly Hitachi) / SuperH calling conventions.\n \n msoft-atomic\n Target Undocumented Alias(matomic-model=, soft-gusa, none)\n-Deprecated.  Use -matomic= instead to select the atomic model\n+Deprecated.  Use -matomic= instead to select the atomic model.\n \n matomic-model=\n Target Report RejectNegative Joined Var(sh_atomic_model_str)\n-Specify the model for atomic operations\n+Specify the model for atomic operations.\n \n mtas\n Target Report RejectNegative Var(TARGET_ENABLE_TAS)\n-Use tas.b instruction for __atomic_test_and_set\n+Use tas.b instruction for __atomic_test_and_set.\n \n mspace\n Target RejectNegative Alias(Os)\n-Deprecated.  Use -Os instead\n+Deprecated.  Use -Os instead.\n \n multcost=\n Target RejectNegative Joined UInteger Var(sh_multcost) Init(-1)\n-Cost to assume for a multiply insn\n+Cost to assume for a multiply insn.\n \n musermode\n Target Var(TARGET_USERMODE)\n@@ -358,12 +358,12 @@ Pretend a branch-around-a-move is a conditional move.\n \n mfsca\n Target Var(TARGET_FSCA)\n-Enable the use of the fsca instruction\n+Enable the use of the fsca instruction.\n \n mfsrra\n Target Var(TARGET_FSRRA)\n-Enable the use of the fsrra instruction\n+Enable the use of the fsrra instruction.\n \n mlra\n Target Report Var(sh_lra_flag) Init(0) Save\n-Use LRA instead of reload (transitional)\n+Use LRA instead of reload (transitional)."}, {"sha": "f2ae2cab5d416666a4ffecc09d09e8c517251169", "filename": "gcc/config/sol2.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fsol2.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fsol2.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -29,11 +29,11 @@ Driver Joined\n \n mclear-hwcap\n Target Report\n-Clear hardware capabilities when linking\n+Clear hardware capabilities when linking.\n \n mimpure-text\n Target Report\n-Pass -z text to linker\n+Pass -z text to linker.\n \n pthread\n Driver"}, {"sha": "ca7cb7a48ae7fd471036305eb9e86416ecd3486e", "filename": "gcc/config/sparc/long-double-switch.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fsparc%2Flong-double-switch.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fsparc%2Flong-double-switch.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flong-double-switch.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,8 +20,8 @@\n \n mlong-double-128\n Target Report RejectNegative Mask(LONG_DOUBLE_128)\n-Use 128-bit long double\n+Use 128-bit long double.\n \n mlong-double-64\n Target Report RejectNegative InverseMask(LONG_DOUBLE_128)\n-Use 64-bit long double\n+Use 64-bit long double."}, {"sha": "249d33bc2094850c58c54e91c726574292715938", "filename": "gcc/config/sparc/sparc.opt", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fsparc%2Fsparc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fsparc%2Fsparc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -27,103 +27,103 @@ unsigned int sparc_debug\n \n mfpu\n Target Report Mask(FPU)\n-Use hardware FP\n+Use hardware FP.\n \n mhard-float\n Target RejectNegative Mask(FPU)\n-Use hardware FP\n+Use hardware FP.\n \n msoft-float\n Target RejectNegative InverseMask(FPU)\n-Do not use hardware FP\n+Do not use hardware FP.\n \n mflat\n Target Report Mask(FLAT)\n-Use flat register window model\n+Use flat register window model.\n \n munaligned-doubles\n Target Report Mask(UNALIGNED_DOUBLES)\n-Assume possible double misalignment\n+Assume possible double misalignment.\n \n mapp-regs\n Target Report Mask(APP_REGS)\n-Use ABI reserved registers\n+Use ABI reserved registers.\n \n mhard-quad-float\n Target Report RejectNegative Mask(HARD_QUAD)\n-Use hardware quad FP instructions\n+Use hardware quad FP instructions.\n \n msoft-quad-float\n Target Report RejectNegative InverseMask(HARD_QUAD)\n-Do not use hardware quad fp instructions\n+Do not use hardware quad fp instructions.\n \n mv8plus\n Target Report Mask(V8PLUS)\n-Compile for V8+ ABI\n+Compile for V8+ ABI.\n \n mvis\n Target Report Mask(VIS)\n-Use UltraSPARC Visual Instruction Set version 1.0 extensions\n+Use UltraSPARC Visual Instruction Set version 1.0 extensions.\n \n mvis2\n Target Report Mask(VIS2)\n-Use UltraSPARC Visual Instruction Set version 2.0 extensions\n+Use UltraSPARC Visual Instruction Set version 2.0 extensions.\n \n mvis3\n Target Report Mask(VIS3)\n-Use UltraSPARC Visual Instruction Set version 3.0 extensions\n+Use UltraSPARC Visual Instruction Set version 3.0 extensions.\n \n mcbcond\n Target Report Mask(CBCOND)\n-Use UltraSPARC Compare-and-Branch extensions\n+Use UltraSPARC Compare-and-Branch extensions.\n \n mfmaf\n Target Report Mask(FMAF)\n-Use UltraSPARC Fused Multiply-Add extensions\n+Use UltraSPARC Fused Multiply-Add extensions.\n \n mpopc\n Target Report Mask(POPC)\n-Use UltraSPARC Population-Count instruction\n+Use UltraSPARC Population-Count instruction.\n \n mptr64\n Target Report RejectNegative Mask(PTR64)\n-Pointers are 64-bit\n+Pointers are 64-bit.\n \n mptr32\n Target Report RejectNegative InverseMask(PTR64)\n-Pointers are 32-bit\n+Pointers are 32-bit.\n \n m64\n Target Report RejectNegative Mask(64BIT)\n-Use 64-bit ABI\n+Use 64-bit ABI.\n \n m32\n Target Report RejectNegative InverseMask(64BIT)\n-Use 32-bit ABI\n+Use 32-bit ABI.\n \n mstack-bias\n Target Report Mask(STACK_BIAS)\n-Use stack bias\n+Use stack bias.\n \n mfaster-structs\n Target Report Mask(FASTER_STRUCTS)\n-Use structs on stronger alignment for double-word copies\n+Use structs on stronger alignment for double-word copies.\n \n mrelax\n Target\n-Optimize tail call instructions in assembler and linker\n+Optimize tail call instructions in assembler and linker.\n \n muser-mode\n Target Report InverseMask(SV_MODE)\n-Do not generate code that can only run in supervisor mode (default)\n+Do not generate code that can only run in supervisor mode (default).\n \n mcpu=\n Target RejectNegative Joined Var(sparc_cpu_and_features) Enum(sparc_processor_type) Init(PROCESSOR_V7)\n-Use features of and schedule code for given CPU\n+Use features of and schedule code for given CPU.\n \n mtune=\n Target RejectNegative Joined Var(sparc_cpu) Enum(sparc_processor_type) Init(PROCESSOR_V7)\n-Schedule code for given CPU\n+Schedule code for given CPU.\n \n Enum\n Name(sparc_processor_type) Type(enum processor_type)\n@@ -196,11 +196,11 @@ Enum(sparc_processor_type) String(niagara4) Value(PROCESSOR_NIAGARA4)\n \n mcmodel=\n Target RejectNegative Joined Var(sparc_cmodel_string)\n-Use given SPARC-V9 code model\n+Use given SPARC-V9 code model.\n \n mdebug=\n Target RejectNegative Joined Var(sparc_debug_string)\n-Enable debug output\n+Enable debug output.\n \n mstd-struct-return\n Target Report RejectNegative Var(sparc_std_struct_return)\n@@ -213,7 +213,7 @@ Enable workaround for single erratum of AT697F processor\n \n mfix-ut699\n Target Report RejectNegative Var(sparc_fix_ut699)\n-Enable workarounds for the errata of the UT699 processor\n+Enable workarounds for the errata of the UT699 processor.\n \n Mask(LONG_DOUBLE_128)\n ;; Use 128-bit long double"}, {"sha": "8f0abb7d69b5d79640e76491571c06f3ec37b753", "filename": "gcc/config/spu/spu.opt", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fspu%2Fspu.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fspu%2Fspu.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -17,89 +17,89 @@\n \n mwarn-reloc\n Target Report Mask(WARN_RELOC)\n-Emit warnings when run-time relocations are generated\n+Emit warnings when run-time relocations are generated.\n \n merror-reloc\n Target Report Mask(ERROR_RELOC)\n-Emit errors when run-time relocations are generated\n+Emit errors when run-time relocations are generated.\n \n mbranch-cost=\n Target RejectNegative Joined UInteger Var(spu_branch_cost) Init(20)\n-Specify cost of branches (Default 20)\n+Specify cost of branches (Default 20).\n \n msafe-dma\n Target Report RejectNegative Mask(SAFE_DMA)\n-Make sure loads and stores are not moved past DMA instructions\n+Make sure loads and stores are not moved past DMA instructions.\n \n munsafe-dma\n Target Report RejectNegative InverseMask(SAFE_DMA)\n-volatile must be specified on any memory that is effected by DMA\n+volatile must be specified on any memory that is effected by DMA.\n \n mdual-nops\n Target Report Var(spu_dual_nops,10) Init(10)\n-Insert nops when it might improve performance by allowing dual issue (default)\n+Insert nops when it might improve performance by allowing dual issue (default).\n \n mdual-nops=\n Target RejectNegative Joined UInteger Var(spu_dual_nops)\n-Insert nops when it might improve performance by allowing dual issue (default)\n+Insert nops when it might improve performance by allowing dual issue (default).\n \n mstdmain\n Target Report Mask(STD_MAIN)\n-Use standard main function as entry for startup\n+Use standard main function as entry for startup.\n \n mbranch-hints\n Target Report Mask(BRANCH_HINTS)\n-Generate branch hints for branches\n+Generate branch hints for branches.\n \n mhint-max-nops=\n Target RejectNegative Joined UInteger Var(spu_max_nops) Init(2)\n-Maximum number of nops to insert for a hint (Default 2)\n+Maximum number of nops to insert for a hint (Default 2).\n \n mhint-max-distance=\n Target RejectNegative Joined Var(spu_max_distance_str)\n-Approximate maximum number of instructions to allow between a hint and its branch [125]\n+Approximate maximum number of instructions to allow between a hint and its branch [125].\n \n msmall-mem\n Target Report RejectNegative InverseMask(LARGE_MEM)\n-Generate code for 18 bit addressing\n+Generate code for 18 bit addressing.\n \n mlarge-mem\n Target Report RejectNegative Mask(LARGE_MEM)\n-Generate code for 32 bit addressing\n+Generate code for 32 bit addressing.\n \n mfixed-range=\n Target RejectNegative Joined Var(spu_fixed_range_string)\n-Specify range of registers to make fixed\n+Specify range of registers to make fixed.\n \n msafe-hints\n Target Report Mask(SAFE_HINTS)\n-Insert hbrp instructions after hinted branch targets to avoid the SPU hang issue\n+Insert hbrp instructions after hinted branch targets to avoid the SPU hang issue.\n \n march=\n Target RejectNegative Joined Var(spu_arch_string)\n-Generate code for given CPU\n+Generate code for given CPU.\n \n mtune=\n Target RejectNegative Joined Var(spu_tune_string)\n-Schedule code for given CPU\n+Schedule code for given CPU.\n \n mea32\n Target Report RejectNegative Var(spu_ea_model,32) Init(32)\n-Access variables in 32-bit PPU objects (default)\n+Access variables in 32-bit PPU objects (default).\n \n mea64\n Target Report RejectNegative Var(spu_ea_model,64)\n-Access variables in 64-bit PPU objects\n+Access variables in 64-bit PPU objects.\n \n maddress-space-conversion\n Target Report Mask(ADDRESS_SPACE_CONVERSION)\n-Allow conversions between __ea and generic pointers (default)\n+Allow conversions between __ea and generic pointers (default).\n \n mcache-size=\n Target Report RejectNegative Joined UInteger\n-Size (in KB) of software data cache\n+Size (in KB) of software data cache.\n \n matomic-updates\n Target Report\n-Atomically write back software data cache lines (default)\n+Atomically write back software data cache lines (default).\n "}, {"sha": "5a457dc6c9eca66be64a0667cfc105b6c4f2569e", "filename": "gcc/config/stormy16/stormy16.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fstormy16%2Fstormy16.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fstormy16%2Fstormy16.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -21,4 +21,4 @@\n ; Not used by the compiler\n msim\n Target RejectNegative\n-Provide libraries for the simulator\n+Provide libraries for the simulator."}, {"sha": "89f7bcfaeb47e17f9f430b8073e3e6bb0d5f7f11", "filename": "gcc/config/tilegx/tilegx.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Ftilegx%2Ftilegx.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Ftilegx%2Ftilegx.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -23,7 +23,7 @@ config/tilegx/tilegx-opts.h\n \n mcpu=\n Target RejectNegative Joined Enum(tilegx_cpu) Var(tilegx_cpu) Init(0)\n--mcpu=CPU\tUse features of and schedule code for given CPU\n+-mcpu=CPU\tUse features of and schedule code for given CPU.\n \n Enum\n Name(tilegx_cpu) Type(int)\n@@ -50,7 +50,7 @@ Use little-endian byte order.\n \n mcmodel=\n Target RejectNegative Joined Enum(cmodel) Var(tilegx_cmodel) Init(CM_SMALL)\n-Use given TILE-Gx code model\n+Use given TILE-Gx code model.\n \n Enum\n Name(cmodel) Type(enum cmodel)"}, {"sha": "07cef5e2b53a8fd7dbba1020852f596eb3d426a2", "filename": "gcc/config/tilepro/tilepro.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Ftilepro%2Ftilepro.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Ftilepro%2Ftilepro.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilepro%2Ftilepro.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -25,7 +25,7 @@ behavior and thus the flag is ignored.\n \n mcpu=\n Target RejectNegative Joined Enum(tilepro_cpu) Var(tilepro_cpu) Init(0)\n--mcpu=CPU\tUse features of and schedule code for given CPU\n+-mcpu=CPU\tUse features of and schedule code for given CPU.\n \n Enum\n Name(tilepro_cpu) Type(int)"}, {"sha": "d33b87b9d51997d8f5764992a6892ea637a86789", "filename": "gcc/config/v850/v850.opt", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fv850%2Fv850.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fv850%2Fv850.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -26,134 +26,134 @@ int small_memory_max[(int)SMALL_MEMORY_max] = { 0, 0, 0 }\n \n mapp-regs\n Target Report Mask(APP_REGS)\n-Use registers r2 and r5\n+Use registers r2 and r5.\n \n mbig-switch\n Target Report Mask(BIG_SWITCH)\n-Use 4 byte entries in switch tables\n+Use 4 byte entries in switch tables.\n \n mdebug\n Target Report Mask(DEBUG)\n-Enable backend debugging\n+Enable backend debugging.\n \n mdisable-callt\n Target Report Mask(DISABLE_CALLT)\n-Do not use the callt instruction (default)\n+Do not use the callt instruction (default).\n \n mep\n Target Report Mask(EP)\n-Reuse r30 on a per function basis\n+Reuse r30 on a per function basis.\n \n mghs\n Target RejectNegative InverseMask(GCC_ABI) MaskExists\n \n mlong-calls\n Target Report Mask(LONG_CALLS)\n-Prohibit PC relative function calls\n+Prohibit PC relative function calls.\n \n mprolog-function\n Target Report Mask(PROLOG_FUNCTION)\n-Use stubs for function prologues\n+Use stubs for function prologues.\n \n msda=\n Target RejectNegative Joined UInteger\n-Set the max size of data eligible for the SDA area\n+Set the max size of data eligible for the SDA area.\n \n msda-\n Target RejectNegative Joined Undocumented Alias(msda=)\n \n msmall-sld\n Target Report Mask(SMALL_SLD)\n-Enable the use of the short load instructions\n+Enable the use of the short load instructions.\n \n mspace\n Target RejectNegative\n-Same as: -mep -mprolog-function\n+Same as: -mep -mprolog-function.\n \n mtda=\n Target RejectNegative Joined UInteger\n-Set the max size of data eligible for the TDA area\n+Set the max size of data eligible for the TDA area.\n \n mtda-\n Target RejectNegative Joined Undocumented Alias(mtda=)\n \n mno-strict-align\n Target Report Mask(NO_STRICT_ALIGN)\n-Do not enforce strict alignment\n+Do not enforce strict alignment.\n \n mjump-tables-in-data-section\n Target Report Mask(JUMP_TABLES_IN_DATA_SECTION)\n-Put jump tables for switch statements into the .data section rather than the .code section\n+Put jump tables for switch statements into the .data section rather than the .code section.\n \n mUS-bit-set\n Target Report Mask(US_BIT_SET)\n \n mv850\n Target Report RejectNegative Mask(V850)\n-Compile for the v850 processor\n+Compile for the v850 processor.\n \n mv850e\n Target Report RejectNegative Mask(V850E)\n-Compile for the v850e processor\n+Compile for the v850e processor.\n \n mv850e1\n Target RejectNegative Mask(V850E1)\n-Compile for the v850e1 processor\n+Compile for the v850e1 processor.\n \n mv850es\n Target RejectNegative Mask(V850E1)\n-Compile for the v850es variant of the v850e1\n+Compile for the v850es variant of the v850e1.\n \n mv850e2\n Target Report RejectNegative Mask(V850E2)\n-Compile for the v850e2 processor\n+Compile for the v850e2 processor.\n \n mv850e2v3\n Target Report RejectNegative Mask(V850E2V3)\n-Compile for the v850e2v3 processor\n+Compile for the v850e2v3 processor.\n \n mv850e3v5\n Target Report RejectNegative Mask(V850E3V5)\n-Compile for the v850e3v5 processor\n+Compile for the v850e3v5 processor.\n \n mv850e2v4\n Target RejectNegative Mask(V850E3V5) MaskExists\n \n mloop\n Target Report Mask(LOOP)\n-Enable v850e3v5 loop instructions\n+Enable v850e3v5 loop instructions.\n \n mzda=\n Target RejectNegative Joined UInteger\n-Set the max size of data eligible for the ZDA area\n+Set the max size of data eligible for the ZDA area.\n \n mzda-\n Target RejectNegative Joined Undocumented Alias(mzda=)\n \n mrelax\n Target Report Mask(RELAX)\n-Enable relaxing in the assembler\n+Enable relaxing in the assembler.\n \n mlong-jumps\n Target Report Mask(BIG_SWITCH) MaskExists\n-Prohibit PC relative jumps\n+Prohibit PC relative jumps.\n \n msoft-float\n Target Report RejectNegative Mask(SOFT_FLOAT)\n-Inhibit the use of hardware floating point instructions\n+Inhibit the use of hardware floating point instructions.\n \n mhard-float\n Target Report RejectNegative InverseMask(SOFT_FLOAT) MaskExists\n-Allow the use of hardware floating point instructions for V850E2V3 and up\n+Allow the use of hardware floating point instructions for V850E2V3 and up.\n \n mrh850-abi\n Target RejectNegative Report InverseMask(GCC_ABI) MaskExists\n-Enable support for the RH850 ABI.  This is the default\n+Enable support for the RH850 ABI.  This is the default.\n \n mgcc-abi\n Target RejectNegative Report Mask(GCC_ABI)\n-Enable support for the old GCC ABI\n+Enable support for the old GCC ABI.\n \n m8byte-align\n Target Report Mask(8BYTE_ALIGN)\n-Support alignments of up to 64-bits\n+Support alignments of up to 64-bits."}, {"sha": "4dfb28cc1b0df6e60b1cbbd49c30f1ee3c2adb4b", "filename": "gcc/config/vax/vax.opt", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fvax%2Fvax.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fvax%2Fvax.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,32 +20,32 @@\n \n md\n Target RejectNegative InverseMask(G_FLOAT)\n-Target DFLOAT double precision code\n+Target DFLOAT double precision code.\n \n md-float\n Target RejectNegative InverseMask(G_FLOAT)\n-Target DFLOAT double precision code\n+Target DFLOAT double precision code.\n \n mg\n Target RejectNegative Mask(G_FLOAT)\n-Generate GFLOAT double precision code\n+Generate GFLOAT double precision code.\n \n mg-float\n Target RejectNegative Mask(G_FLOAT)\n-Generate GFLOAT double precision code\n+Generate GFLOAT double precision code.\n \n mgnu\n Target RejectNegative InverseMask(UNIX_ASM)\n-Generate code for GNU assembler (gas)\n+Generate code for GNU assembler (gas).\n \n munix\n Target RejectNegative Mask(UNIX_ASM)\n-Generate code for UNIX assembler\n+Generate code for UNIX assembler.\n \n mvaxc-alignment\n Target RejectNegative Mask(VAXC_ALIGNMENT)\n-Use VAXC structure conventions\n+Use VAXC structure conventions.\n \n mqmath\n Target Mask(QMATH)\n-Use new adddi3/subdi3 patterns\n+Use new adddi3/subdi3 patterns."}, {"sha": "cb42294c4a36cecaba34fa12da645f3ace4d669d", "filename": "gcc/config/visium/visium.opt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fvisium%2Fvisium.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fvisium%2Fvisium.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvisium%2Fvisium.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -22,31 +22,31 @@ config/visium/visium-opts.h\n \n mdebug\n Target RejectNegative\n-Link with libc.a and libdebug.a\n+Link with libc.a and libdebug.a.\n \n msim\n Target RejectNegative\n-Link with libc.a and libsim.a\n+Link with libc.a and libsim.a.\n \n mfpu\n Target Report Mask(FPU)\n-Use hardware FP (default)\n+Use hardware FP (default).\n \n mhard-float\n Target RejectNegative Mask(FPU) MaskExists\n-Use hardware FP\n+Use hardware FP.\n \n msoft-float\n Target RejectNegative InverseMask(FPU)\n-Do not use hardware FP\n+Do not use hardware FP.\n \n mcpu=\n Target RejectNegative Joined Var(visium_cpu_and_features) Enum(visium_processor_type) Init(PROCESSOR_GR5)\n-Use features of and schedule code for given CPU\n+Use features of and schedule code for given CPU.\n \n mtune=\n Target RejectNegative Joined Var(visium_cpu) Enum(visium_processor_type) Init(PROCESSOR_GR5)\n-Schedule code for given CPU\n+Schedule code for given CPU.\n \n Enum\n Name(visium_processor_type) Type(enum processor_type)\n@@ -62,11 +62,11 @@ Enum(visium_processor_type) String(gr6) Value(PROCESSOR_GR6)\n \n msv-mode\n Target RejectNegative Report Mask(SV_MODE)\n-Generate code for the supervisor mode (default)\n+Generate code for the supervisor mode (default).\n \n muser-mode\n Target RejectNegative Report InverseMask(SV_MODE)\n-Generate code for the user mode\n+Generate code for the user mode.\n \n menable-trampolines\n Target RejectNegative"}, {"sha": "4cbae2738c37b45b1c68c5c17d826e9bacaf84cd", "filename": "gcc/config/vms/vms.opt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fvms%2Fvms.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fvms%2Fvms.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvms%2Fvms.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -24,19 +24,19 @@ Target RejectNegative\n \n mmalloc64\n Target Report Var(flag_vms_malloc64) Init(1)\n-Malloc data into P2 space\n+Malloc data into P2 space.\n \n mdebug-main=\n Target RejectNegative Joined Var(vms_debug_main)\n-Set name of main routine for the debugger\n+Set name of main routine for the debugger.\n \n mvms-return-codes\n Target Report Var(flag_vms_return_codes)\n-Use VMS exit codes instead of posix ones\n+Use VMS exit codes instead of posix ones.\n \n mpointer-size=\n Target Joined Report RejectNegative Enum(vms_pointer_size) Var(flag_vms_pointer_size) Init(VMS_POINTER_SIZE_NONE)\n--mpointer-size=[no,32,short,64,long]\tSet the default pointer size\n+-mpointer-size=[no,32,short,64,long]\tSet the default pointer size.\n \n Enum\n Name(vms_pointer_size) Type(enum vms_pointer_size) UnknownError(unknown pointer size model %qs)"}, {"sha": "8ddefe0ad308da906ff216c16ab081dbaebfdfec", "filename": "gcc/config/vxworks.opt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fvxworks.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fvxworks.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -33,14 +33,14 @@ Driver Condition(VXWORKS_KIND == VXWORKS_KIND_NORMAL)\n \n mrtp\n Target Report RejectNegative Mask(VXWORKS_RTP) Condition(VXWORKS_KIND == VXWORKS_KIND_NORMAL)\n-Assume the VxWorks RTP environment\n+Assume the VxWorks RTP environment.\n \n ; VxWorks AE has two modes: kernel mode and vThreads mode.  In\n ; general, back ends do not actually need to know which mode they're\n ; in, so we do not have to set any flags.\n mvthreads\n Target RejectNegative Condition(VXWORKS_KIND == VXWORKS_KIND_AE)\n-Assume the VxWorks vThreads environment\n+Assume the VxWorks vThreads environment.\n \n non-static\n Driver Condition(VXWORKS_KIND == VXWORKS_KIND_NORMAL)"}, {"sha": "df1d3380043b8355c477da0fce2ed9418dcfb49e", "filename": "gcc/config/xtensa/xtensa.opt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fxtensa%2Fxtensa.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fconfig%2Fxtensa%2Fxtensa.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fxtensa%2Fxtensa.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -20,28 +20,28 @@\n \n mconst16\n Target Report Mask(CONST16)\n-Use CONST16 instruction to load constants\n+Use CONST16 instruction to load constants.\n \n mforce-no-pic\n Target Report Mask(FORCE_NO_PIC)\n-Disable position-independent code (PIC) for use in OS kernel code\n+Disable position-independent code (PIC) for use in OS kernel code.\n \n mlongcalls\n Target\n-Use indirect CALLXn instructions for large programs\n+Use indirect CALLXn instructions for large programs.\n \n mtarget-align\n Target\n-Automatically align branch targets to reduce branch penalties\n+Automatically align branch targets to reduce branch penalties.\n \n mtext-section-literals\n Target\n-Intersperse literal pools with code in the text section\n+Intersperse literal pools with code in the text section.\n \n mauto-litpools\n Target Report Mask(AUTO_LITPOOLS)\n-Relax literals in assembler and place them automatically in the text section\n+Relax literals in assembler and place them automatically in the text section.\n \n mserialize-volatile\n Target Report Mask(SERIALIZE_VOLATILE)\n--mno-serialize-volatile\tDo not serialize volatile memory references with MEMW instructions\n+-mno-serialize-volatile\tDo not serialize volatile memory references with MEMW instructions."}, {"sha": "3b1813d636191229149b678c5c9be53a5ec96e25", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -143,7 +143,7 @@ Fortran Joined Separate\n \n J\n Fortran Joined Separate\n--J<directory>\tPut MODULE files in 'directory'\n+-J<directory>\tPut MODULE files in 'directory'.\n \n M\n Fortran\n@@ -195,71 +195,71 @@ Fortran\n \n Waliasing\n Fortran Warning Var(warn_aliasing) LangEnabledBy(Fortran,Wall)\n-Warn about possible aliasing of dummy arguments\n+Warn about possible aliasing of dummy arguments.\n \n Walign-commons\n Fortran Warning Var(warn_align_commons) Init(1)\n-Warn about alignment of COMMON blocks\n+Warn about alignment of COMMON blocks.\n \n Wampersand\n Fortran Warning Var(warn_ampersand) LangEnabledBy(Fortran,Wall || Wpedantic)\n-Warn about missing ampersand in continued character constants\n+Warn about missing ampersand in continued character constants.\n \n Warray-temporaries\n Fortran Warning Var(warn_array_temporaries)\n-Warn about creation of array temporaries\n+Warn about creation of array temporaries.\n \n Wc-binding-type\n Fortran Var(warn_c_binding_type) Warning LangEnabledBy(Fortran,Wall)\n-Warn if the type of a variable might be not interoperable with C\n+Warn if the type of a variable might be not interoperable with C.\n \n Wdate-time\n Fortran\n ; Documented in C\n \n Wcharacter-truncation\n Fortran Var(warn_character_truncation) Warning LangEnabledBy(Fortran,Wall)\n-Warn about truncated character expressions\n+Warn about truncated character expressions.\n \n Wcompare-reals\n Fortran Warning Var(warn_compare_reals) LangEnabledBy(Fortran,Wextra)\n-Warn about equality comparisons involving REAL or COMPLEX expressions\n+Warn about equality comparisons involving REAL or COMPLEX expressions.\n \n Wconversion\n Fortran Var(warn_conversion) Warning LangEnabledBy(Fortran,Wall)\n ; Documented in C\n \n Wconversion-extra\n Fortran Var(warn_conversion_extra) Warning\n-Warn about most implicit conversions\n+Warn about most implicit conversions.\n \n Wextra\n Fortran Warning\n ; Documented in common\n \n Wfunction-elimination\n Fortran Warning Var(warn_function_elimination)\n-Warn about function call elimination\n+Warn about function call elimination.\n \n Wimplicit-interface\n Fortran Warning Var(warn_implicit_interface)\n-Warn about calls with implicit interface\n+Warn about calls with implicit interface.\n \n Wimplicit-procedure\n Fortran Warning Var(warn_implicit_procedure)\n-Warn about called procedures not explicitly declared\n+Warn about called procedures not explicitly declared.\n \n Winteger-division\n Fortran Warning Var(warn_integer_division) LangEnabledBy(Fortran,Wall)\n-Warn about constant integer divisions with truncated results\n+Warn about constant integer divisions with truncated results.\n \n Wline-truncation\n Fortran Warning Var(warn_line_truncation) LangEnabledBy(Fortran,Wall) Init(-1)\n-Warn about truncated source lines\n+Warn about truncated source lines.\n \n Wintrinsics-std\n Fortran Var(warn_intrinsics_std) Warning LangEnabledBy(Fortran,Wall)\n-Warn on intrinsics not part of the selected standard\n+Warn on intrinsics not part of the selected standard.\n \n Wmaybe-uninitialized\n Fortran LangEnabledBy(Fortran,Wall)\n@@ -271,7 +271,7 @@ Fortran\n \n Wuse-without-only\n Fortran Var(warn_use_without_only) Warning\n-Warn about USE statements that have no ONLY qualifier\n+Warn about USE statements that have no ONLY qualifier.\n \n Wopenmp-simd\n Fortran\n@@ -283,43 +283,43 @@ Fortran\n \n Wreal-q-constant\n Fortran Warning Var(warn_real_q_constant) LangEnabledBy(Fortran,Wall)\n-Warn about real-literal-constants with 'q' exponent-letter\n+Warn about real-literal-constants with 'q' exponent-letter.\n \n Wrealloc-lhs\n Fortran Warning Var(warn_realloc_lhs) LangEnabledBy(Fortran,Wrealloc-lhs-all)\n-Warn when a left-hand-side array variable is reallocated\n+Warn when a left-hand-side array variable is reallocated.\n \n Wrealloc-lhs-all\n Fortran Warning Var(warn_realloc_lhs_all)\n-Warn when a left-hand-side variable is reallocated\n+Warn when a left-hand-side variable is reallocated.\n \n Wtarget-lifetime\n Fortran Warning Var(warn_target_lifetime) LangEnabledBy(Fortran,Wall)\n-Warn if the pointer in a pointer assignment might outlive its target\n+Warn if the pointer in a pointer assignment might outlive its target.\n \n Wreturn-type\n Fortran Warning LangEnabledBy(Fortran,Wall)\n ; Documented in C\n \n Wsurprising\n Fortran Warning Var(warn_surprising) LangEnabledBy(Fortran,Wall)\n-Warn about \\\"suspicious\\\" constructs\n+Warn about \\\"suspicious\\\" constructs.\n \n Wtabs\n Fortran Warning Var(warn_tabs) LangEnabledBy(Fortran,Wall || Wpedantic)\n-Permit nonconforming uses of the tab character\n+Permit nonconforming uses of the tab character.\n \n Wunderflow\n Fortran Warning Var(warn_underflow) Init(1)\n-Warn about underflow of numerical constant expressions\n+Warn about underflow of numerical constant expressions.\n \n Wuninitialized\n Fortran LangEnabledBy(Fortran,Wall)\n ; Documented in common.opt\n \n Wintrinsic-shadow\n Fortran Warning Var(warn_intrinsic_shadow) LangEnabledBy(Fortran,Wall)\n-Warn if a user-procedure has the same name as an intrinsic\n+Warn if a user-procedure has the same name as an intrinsic.\n \n Wunused\n LangEnabledBy(Fortran,Wall)\n@@ -331,59 +331,59 @@ Warn about unused dummy arguments.\n \n Wzerotrip\n Fortran Warning Var(warn_zerotrip) LangEnabledBy(Fortran,Wall)\n-Warn about zero-trip DO loops\n+Warn about zero-trip DO loops.\n \n cpp\n Fortran Negative(nocpp)\n-Enable preprocessing\n+Enable preprocessing.\n \n cpp=\n Fortran Joined Negative(nocpp) Undocumented NoDWARFRecord\n ; Internal option generated by specs from -cpp.\n \n nocpp\n Fortran Negative(cpp)\n-Disable preprocessing\n+Disable preprocessing.\n \n d\n Fortran Joined\n ; Documented in common.opt\n \n faggressive-function-elimination\n Fortran Var(flag_aggressive_function_elimination)\n-Eliminate multiple function invokations also for impure functions\n+Eliminate multiple function invokations also for impure functions.\n \n falign-commons\n Fortran Var(flag_align_commons) Init(1)\n-Enable alignment of COMMON blocks\n+Enable alignment of COMMON blocks.\n \n fall-intrinsics\n Fortran RejectNegative Var(flag_all_intrinsics)\n-All intrinsics procedures are available regardless of selected standard\n+All intrinsics procedures are available regardless of selected standard.\n \n fallow-leading-underscore\n Fortran Undocumented Var(flag_allow_leading_underscore)\n ; For internal use only: allow the first character of symbol names to be an underscore\n \n fautomatic\n Fortran Var(flag_automatic) Init(1)\n-Do not treat local variables and COMMON blocks as if they were named in SAVE statements\n+Do not treat local variables and COMMON blocks as if they were named in SAVE statements.\n \n fbackslash\n Fortran Var(flag_backslash)\n-Specify that backslash in string introduces an escape character\n+Specify that backslash in string introduces an escape character.\n \n fbacktrace\n Fortran Var(flag_backtrace) Init(1)\n-Produce a backtrace when a runtime error is encountered\n+Produce a backtrace when a runtime error is encountered.\n \n fblas-matmul-limit=\n Fortran RejectNegative Joined UInteger Var(flag_blas_matmul_limit) Init(30)\n--fblas-matmul-limit=<n>\tSize of the smallest matrix for which matmul will use BLAS\n+-fblas-matmul-limit=<n>\tSize of the smallest matrix for which matmul will use BLAS.\n \n fcheck-array-temporaries\n Fortran\n-Produce a warning at runtime if a array temporary has been created for a procedure argument\n+Produce a warning at runtime if a array temporary has been created for a procedure argument.\n \n fconvert=\n Fortran RejectNegative Joined Enum(gfc_convert) Var(flag_convert) Init(GFC_FLAG_CONVERT_NATIVE)\n@@ -406,127 +406,127 @@ Enum(gfc_convert) String(swap) Value(GFC_FLAG_CONVERT_SWAP)\n \n fcray-pointer\n Fortran Var(flag_cray_pointer)\n-Use the Cray Pointer extension\n+Use the Cray Pointer extension.\n \n fd-lines-as-code\n Fortran RejectNegative\n-Ignore 'D' in column one in fixed form\n+Ignore 'D' in column one in fixed form.\n \n fd-lines-as-comments\n Fortran RejectNegative\n-Treat lines with 'D' in column one as comments\n+Treat lines with 'D' in column one as comments.\n \n fdefault-double-8\n Fortran Var(flag_default_double)\n-Set the default double precision kind to an 8 byte wide type\n+Set the default double precision kind to an 8 byte wide type.\n \n fdefault-integer-8\n Fortran Var(flag_default_integer)\n-Set the default integer kind to an 8 byte wide type\n+Set the default integer kind to an 8 byte wide type.\n \n fdefault-real-8\n Fortran Var(flag_default_real)\n-Set the default real kind to an 8 byte wide type\n+Set the default real kind to an 8 byte wide type.\n \n fdollar-ok\n Fortran Var(flag_dollar_ok)\n-Allow dollar signs in entity names\n+Allow dollar signs in entity names.\n \n fdump-core\n Fortran Ignore\n Does nothing. Preserved for backward compatibility.\n \n fdump-fortran-original\n Fortran Var(flag_dump_fortran_original)\n-Display the code tree after parsing\n+Display the code tree after parsing.\n \n fdump-fortran-optimized\n Fortran Var(flag_dump_fortran_optimized)\n-Display the code tree after front end optimization\n+Display the code tree after front end optimization.\n \n fdump-parse-tree\n Fortran Alias(fdump-fortran-original)\n-Display the code tree after parsing; deprecated option\n+Display the code tree after parsing; deprecated option.\n \n fexternal-blas\n Fortran Var(flag_external_blas)\n-Specify that an external BLAS library should be used for matmul calls on large-size arrays\n+Specify that an external BLAS library should be used for matmul calls on large-size arrays.\n \n ff2c\n Fortran Var(flag_f2c)\n-Use f2c calling convention\n+Use f2c calling convention.\n \n ffixed-form\n Fortran RejectNegative\n-Assume that the source file is fixed form\n+Assume that the source file is fixed form.\n \n finteger-4-integer-8\n Fortran RejectNegative Var(flag_integer4_kind,8)\n-Interpret any INTEGER(4) as an INTEGER(8)\n+Interpret any INTEGER(4) as an INTEGER(8).\n \n fintrinsic-modules-path\n Fortran RejectNegative Separate\n-Specify where to find the compiled intrinsic modules\n+Specify where to find the compiled intrinsic modules.\n \n fintrinsic-modules-path=\n Fortran RejectNegative Joined\n-Specify where to find the compiled intrinsic modules\n+Specify where to find the compiled intrinsic modules.\n \n ffixed-line-length-none\n Fortran RejectNegative Var(flag_fixed_line_length,0)\n-Allow arbitrary character line width in fixed mode\n+Allow arbitrary character line width in fixed mode.\n \n ffixed-line-length-\n Fortran RejectNegative Joined UInteger Var(flag_fixed_line_length) Init(72)\n--ffixed-line-length-<n>\tUse n as character line width in fixed mode\n+-ffixed-line-length-<n>\tUse n as character line width in fixed mode.\n \n ffpe-trap=\n Fortran RejectNegative JoinedOrMissing\n--ffpe-trap=[...]\tStop on following floating point exceptions\n+-ffpe-trap=[...]\tStop on following floating point exceptions.\n \n ffpe-summary=\n Fortran RejectNegative JoinedOrMissing\n--ffpe-summary=[...]\tPrint summary of floating point exceptions\n+-ffpe-summary=[...]\tPrint summary of floating point exceptions.\n \n ffree-form\n Fortran RejectNegative\n-Assume that the source file is free form\n+Assume that the source file is free form.\n \n ffree-line-length-none\n Fortran RejectNegative Var(flag_free_line_length,0)\n-Allow arbitrary character line width in free mode\n+Allow arbitrary character line width in free mode.\n \n ffree-line-length-\n Fortran RejectNegative Joined UInteger Var(flag_free_line_length) Init(132)\n--ffree-line-length-<n>\tUse n as character line width in free mode\n+-ffree-line-length-<n>\tUse n as character line width in free mode.\n \n ffrontend-optimize\n Fortran Var(flag_frontend_optimize) Init(-1)\n-Enable front end optimization\n+Enable front end optimization.\n \n fimplicit-none\n Fortran Var(flag_implicit_none)\n-Specify that no implicit typing is allowed, unless overridden by explicit IMPLICIT statements\n+Specify that no implicit typing is allowed, unless overridden by explicit IMPLICIT statements.\n \n finit-character=\n Fortran RejectNegative Joined UInteger\n--finit-character=<n>\tInitialize local character variables to ASCII value n\n+-finit-character=<n>\tInitialize local character variables to ASCII value n.\n \n finit-integer=\n Fortran RejectNegative Joined\n--finit-integer=<n>\tInitialize local integer variables to n\n+-finit-integer=<n>\tInitialize local integer variables to n.\n \n finit-local-zero\n Fortran\n-Initialize local variables to zero (from g77)\n+Initialize local variables to zero (from g77).\n \n finit-logical=\n Fortran RejectNegative Joined\n--finit-logical=<true|false>\tInitialize local logical variables\n+-finit-logical=<true|false>\tInitialize local logical variables.\n \n finit-real=\n Fortran RejectNegative ToLower Joined Enum(gfc_init_local_real) Var(flag_init_real) Init(GFC_INIT_REAL_OFF)\n--finit-real=<zero|snan|nan|inf|-inf>\tInitialize local real variables\n+-finit-real=<zero|snan|nan|inf|-inf>\tInitialize local real variables.\n \n Enum\n Name(gfc_init_local_real) Type(enum gfc_init_local_real) UnknownError(Unrecognized option to floating-point init value: %qs)\n@@ -548,23 +548,23 @@ Enum(gfc_init_local_real) String(-inf) Value(GFC_INIT_REAL_NEG_INF)\n \n finline-matmul-limit=\n Fortran RejectNegative Joined UInteger Var(flag_inline_matmul_limit) Init(-1)\n--finline-matmul-limit=<n>\tSpecify the size of the largest matrix for which matmul will be inlined\n+-finline-matmul-limit=<n>\tSpecify the size of the largest matrix for which matmul will be inlined.\n \n fmax-array-constructor=\n Fortran RejectNegative Joined UInteger Var(flag_max_array_constructor) Init(65535)\n--fmax-array-constructor=<n>\tMaximum number of objects in an array constructor\n+-fmax-array-constructor=<n>\tMaximum number of objects in an array constructor.\n \n fmax-identifier-length=\n Fortran RejectNegative Joined UInteger\n--fmax-identifier-length=<n>\tMaximum identifier length\n+-fmax-identifier-length=<n>\tMaximum identifier length.\n \n fmax-subrecord-length=\n Fortran RejectNegative Joined UInteger Var(flag_max_subrecord_length)\n--fmax-subrecord-length=<n>\tMaximum length for subrecords\n+-fmax-subrecord-length=<n>\tMaximum length for subrecords.\n \n fmax-stack-var-size=\n Fortran RejectNegative Joined UInteger Var(flag_max_stack_var_size) Init(-2)\n--fmax-stack-var-size=<n>\tSize in bytes of the largest array that will be put on the stack\n+-fmax-stack-var-size=<n>\tSize in bytes of the largest array that will be put on the stack.\n \n fstack-arrays\n Fortran Var(flag_stack_arrays) Init(-1)\n@@ -588,67 +588,67 @@ Fortran\n \n fpack-derived\n Fortran Var(flag_pack_derived)\n-Try to lay out derived types as compactly as possible\n+Try to lay out derived types as compactly as possible.\n \n fpreprocessed\n Fortran\n ; Documented in C\n \n fprotect-parens\n Fortran Var(flag_protect_parens) Init(-1)\n-Protect parentheses in expressions\n+Protect parentheses in expressions.\n \n frange-check\n Fortran Var(flag_range_check) Init(1)\n-Enable range checking during compilation\n+Enable range checking during compilation.\n \n freal-4-real-8\n Fortran RejectNegative Var(flag_real4_kind,8)\n-Interpret any REAL(4) as a REAL(8)\n+Interpret any REAL(4) as a REAL(8).\n \n freal-4-real-10\n Fortran RejectNegative Var(flag_real4_kind,10)\n-Interpret any REAL(4) as a REAL(10)\n+Interpret any REAL(4) as a REAL(10).\n \n freal-4-real-16\n Fortran RejectNegative Var(flag_real4_kind,16)\n-Interpret any REAL(4) as a REAL(16)\n+Interpret any REAL(4) as a REAL(16).\n \n freal-8-real-4\n Fortran RejectNegative Var(flag_real8_kind,4)\n-Interpret any REAL(8) as a REAL(4)\n+Interpret any REAL(8) as a REAL(4).\n \n freal-8-real-10\n Fortran RejectNegative Var(flag_real8_kind,10)\n-Interpret any REAL(8) as a REAL(10)\n+Interpret any REAL(8) as a REAL(10).\n \n freal-8-real-16\n Fortran RejectNegative Var(flag_real8_kind,16)\n-Interpret any REAL(8) as a REAL(16)\n+Interpret any REAL(8) as a REAL(16).\n \n frealloc-lhs\n Fortran Var(flag_realloc_lhs) Init(-1)\n-Reallocate the LHS in assignments\n+Reallocate the LHS in assignments.\n \n frecord-marker=4\n Fortran RejectNegative Var(flag_record_marker,4)\n-Use a 4-byte record marker for unformatted files\n+Use a 4-byte record marker for unformatted files.\n \n frecord-marker=8\n Fortran RejectNegative Var(flag_record_marker,8)\n-Use an 8-byte record marker for unformatted files\n+Use an 8-byte record marker for unformatted files.\n \n frecursive\n Fortran Var(flag_recursive)\n-Allocate local variables on the stack to allow indirect recursion\n+Allocate local variables on the stack to allow indirect recursion.\n \n frepack-arrays\n Fortran Var(flag_repack_arrays)\n-Copy array sections into a contiguous block on procedure entry\n+Copy array sections into a contiguous block on procedure entry.\n \n fcoarray=\n Fortran RejectNegative Joined Enum(gfc_fcoarray) Var(flag_coarray) Init(GFC_FCOARRAY_NONE)\n--fcoarray=<none|single|lib>\tSpecify which coarray parallelization should be used\n+-fcoarray=<none|single|lib>\tSpecify which coarray parallelization should be used.\n \n Enum\n Name(gfc_fcoarray) Type(enum gfc_fcoarray) UnknownError(Unrecognized option: %qs)\n@@ -664,23 +664,23 @@ Enum(gfc_fcoarray) String(lib) Value(GFC_FCOARRAY_LIB)\n \n fcheck=\n Fortran RejectNegative JoinedOrMissing\n--fcheck=[...]\tSpecify which runtime checks are to be performed\n+-fcheck=[...]\tSpecify which runtime checks are to be performed.\n \n fsecond-underscore\n Fortran Var(flag_second_underscore) Init(-1)\n-Append a second underscore if the name already contains an underscore\n+Append a second underscore if the name already contains an underscore.\n \n fshort-enums\n Fortran Var(flag_short_enums)\n ; Documented in C\n \n fsign-zero\n Fortran Var(flag_sign_zero) Init(1)\n-Apply negative sign to zero values\n+Apply negative sign to zero values.\n \n funderscoring\n Fortran Var(flag_underscoring) Init(1)\n-Append underscores to externally visible names\n+Append underscores to externally visible names.\n \n fwhole-file\n Fortran Ignore\n@@ -724,31 +724,31 @@ Fortran Joined Separate\n \n static-libgfortran\n Fortran\n-Statically link the GNU Fortran helper library (libgfortran)\n+Statically link the GNU Fortran helper library (libgfortran).\n \n std=f2003\n Fortran\n-Conform to the ISO Fortran 2003 standard\n+Conform to the ISO Fortran 2003 standard.\n \n std=f2008\n Fortran\n-Conform to the ISO Fortran 2008 standard\n+Conform to the ISO Fortran 2008 standard.\n \n std=f2008ts\n Fortran\n-Conform to the ISO Fortran 2008 standard including TS 29113\n+Conform to the ISO Fortran 2008 standard including TS 29113.\n \n std=f95\n Fortran\n-Conform to the ISO Fortran 95 standard\n+Conform to the ISO Fortran 95 standard.\n \n std=gnu\n Fortran\n-Conform to nothing in particular\n+Conform to nothing in particular.\n \n std=legacy\n Fortran\n-Accept extensions to support legacy code\n+Accept extensions to support legacy code.\n \n undef\n Fortran"}, {"sha": "bbc9b23acddc0b3e1655064bb6e36adafa4f3f3b", "filename": "gcc/gcc.c", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -3366,63 +3366,63 @@ display_help (void)\n   printf (_(\"Usage: %s [options] file...\\n\"), progname);\n   fputs (_(\"Options:\\n\"), stdout);\n \n-  fputs (_(\"  -pass-exit-codes         Exit with highest error code from a phase\\n\"), stdout);\n-  fputs (_(\"  --help                   Display this information\\n\"), stdout);\n-  fputs (_(\"  --target-help            Display target specific command line options\\n\"), stdout);\n-  fputs (_(\"  --help={common|optimizers|params|target|warnings|[^]{joined|separate|undocumented}}[,...]\\n\"), stdout);\n-  fputs (_(\"                           Display specific types of command line options\\n\"), stdout);\n+  fputs (_(\"  -pass-exit-codes         Exit with highest error code from a phase.\\n\"), stdout);\n+  fputs (_(\"  --help                   Display this information.\\n\"), stdout);\n+  fputs (_(\"  --target-help            Display target specific command line options.\\n\"), stdout);\n+  fputs (_(\"  --help={common|optimizers|params|target|warnings|[^]{joined|separate|undocumented}}[,...].\\n\"), stdout);\n+  fputs (_(\"                           Display specific types of command line options.\\n\"), stdout);\n   if (! verbose_flag)\n-    fputs (_(\"  (Use '-v --help' to display command line options of sub-processes)\\n\"), stdout);\n-  fputs (_(\"  --version                Display compiler version information\\n\"), stdout);\n-  fputs (_(\"  -dumpspecs               Display all of the built in spec strings\\n\"), stdout);\n-  fputs (_(\"  -dumpversion             Display the version of the compiler\\n\"), stdout);\n-  fputs (_(\"  -dumpmachine             Display the compiler's target processor\\n\"), stdout);\n-  fputs (_(\"  -print-search-dirs       Display the directories in the compiler's search path\\n\"), stdout);\n-  fputs (_(\"  -print-libgcc-file-name  Display the name of the compiler's companion library\\n\"), stdout);\n-  fputs (_(\"  -print-file-name=<lib>   Display the full path to library <lib>\\n\"), stdout);\n-  fputs (_(\"  -print-prog-name=<prog>  Display the full path to compiler component <prog>\\n\"), stdout);\n+    fputs (_(\"  (Use '-v --help' to display command line options of sub-processes).\\n\"), stdout);\n+  fputs (_(\"  --version                Display compiler version information.\\n\"), stdout);\n+  fputs (_(\"  -dumpspecs               Display all of the built in spec strings.\\n\"), stdout);\n+  fputs (_(\"  -dumpversion             Display the version of the compiler.\\n\"), stdout);\n+  fputs (_(\"  -dumpmachine             Display the compiler's target processor.\\n\"), stdout);\n+  fputs (_(\"  -print-search-dirs       Display the directories in the compiler's search path.\\n\"), stdout);\n+  fputs (_(\"  -print-libgcc-file-name  Display the name of the compiler's companion library.\\n\"), stdout);\n+  fputs (_(\"  -print-file-name=<lib>   Display the full path to library <lib>.\\n\"), stdout);\n+  fputs (_(\"  -print-prog-name=<prog>  Display the full path to compiler component <prog>.\\n\"), stdout);\n   fputs (_(\"\\\n   -print-multiarch         Display the target's normalized GNU triplet, used as\\n\\\n-                           a component in the library path\\n\"), stdout);\n-  fputs (_(\"  -print-multi-directory   Display the root directory for versions of libgcc\\n\"), stdout);\n+                           a component in the library path.\\n\"), stdout);\n+  fputs (_(\"  -print-multi-directory   Display the root directory for versions of libgcc.\\n\"), stdout);\n   fputs (_(\"\\\n   -print-multi-lib         Display the mapping between command line options and\\n\\\n-                           multiple library search directories\\n\"), stdout);\n-  fputs (_(\"  -print-multi-os-directory Display the relative path to OS libraries\\n\"), stdout);\n-  fputs (_(\"  -print-sysroot           Display the target libraries directory\\n\"), stdout);\n-  fputs (_(\"  -print-sysroot-headers-suffix Display the sysroot suffix used to find headers\\n\"), stdout);\n-  fputs (_(\"  -Wa,<options>            Pass comma-separated <options> on to the assembler\\n\"), stdout);\n-  fputs (_(\"  -Wp,<options>            Pass comma-separated <options> on to the preprocessor\\n\"), stdout);\n-  fputs (_(\"  -Wl,<options>            Pass comma-separated <options> on to the linker\\n\"), stdout);\n-  fputs (_(\"  -Xassembler <arg>        Pass <arg> on to the assembler\\n\"), stdout);\n-  fputs (_(\"  -Xpreprocessor <arg>     Pass <arg> on to the preprocessor\\n\"), stdout);\n-  fputs (_(\"  -Xlinker <arg>           Pass <arg> on to the linker\\n\"), stdout);\n-  fputs (_(\"  -save-temps              Do not delete intermediate files\\n\"), stdout);\n-  fputs (_(\"  -save-temps=<arg>        Do not delete intermediate files\\n\"), stdout);\n+                           multiple library search directories.\\n\"), stdout);\n+  fputs (_(\"  -print-multi-os-directory Display the relative path to OS libraries.\\n\"), stdout);\n+  fputs (_(\"  -print-sysroot           Display the target libraries directory.\\n\"), stdout);\n+  fputs (_(\"  -print-sysroot-headers-suffix Display the sysroot suffix used to find headers.\\n\"), stdout);\n+  fputs (_(\"  -Wa,<options>            Pass comma-separated <options> on to the assembler.\\n\"), stdout);\n+  fputs (_(\"  -Wp,<options>            Pass comma-separated <options> on to the preprocessor.\\n\"), stdout);\n+  fputs (_(\"  -Wl,<options>            Pass comma-separated <options> on to the linker.\\n\"), stdout);\n+  fputs (_(\"  -Xassembler <arg>        Pass <arg> on to the assembler.\\n\"), stdout);\n+  fputs (_(\"  -Xpreprocessor <arg>     Pass <arg> on to the preprocessor.\\n\"), stdout);\n+  fputs (_(\"  -Xlinker <arg>           Pass <arg> on to the linker.\\n\"), stdout);\n+  fputs (_(\"  -save-temps              Do not delete intermediate files.\\n\"), stdout);\n+  fputs (_(\"  -save-temps=<arg>        Do not delete intermediate files.\\n\"), stdout);\n   fputs (_(\"\\\n   -no-canonical-prefixes   Do not canonicalize paths when building relative\\n\\\n-                           prefixes to other gcc components\\n\"), stdout);\n-  fputs (_(\"  -pipe                    Use pipes rather than intermediate files\\n\"), stdout);\n-  fputs (_(\"  -time                    Time the execution of each subprocess\\n\"), stdout);\n-  fputs (_(\"  -specs=<file>            Override built-in specs with the contents of <file>\\n\"), stdout);\n-  fputs (_(\"  -std=<standard>          Assume that the input sources are for <standard>\\n\"), stdout);\n+                           prefixes to other gcc components.\\n\"), stdout);\n+  fputs (_(\"  -pipe                    Use pipes rather than intermediate files.\\n\"), stdout);\n+  fputs (_(\"  -time                    Time the execution of each subprocess.\\n\"), stdout);\n+  fputs (_(\"  -specs=<file>            Override built-in specs with the contents of <file>.\\n\"), stdout);\n+  fputs (_(\"  -std=<standard>          Assume that the input sources are for <standard>.\\n\"), stdout);\n   fputs (_(\"\\\n   --sysroot=<directory>    Use <directory> as the root directory for headers\\n\\\n-                           and libraries\\n\"), stdout);\n-  fputs (_(\"  -B <directory>           Add <directory> to the compiler's search paths\\n\"), stdout);\n-  fputs (_(\"  -v                       Display the programs invoked by the compiler\\n\"), stdout);\n-  fputs (_(\"  -###                     Like -v but options quoted and commands not executed\\n\"), stdout);\n-  fputs (_(\"  -E                       Preprocess only; do not compile, assemble or link\\n\"), stdout);\n-  fputs (_(\"  -S                       Compile only; do not assemble or link\\n\"), stdout);\n-  fputs (_(\"  -c                       Compile and assemble, but do not link\\n\"), stdout);\n-  fputs (_(\"  -o <file>                Place the output into <file>\\n\"), stdout);\n-  fputs (_(\"  -pie                     Create a position independent executable\\n\"), stdout);\n-  fputs (_(\"  -shared                  Create a shared library\\n\"), stdout);\n+                           and libraries.\\n\"), stdout);\n+  fputs (_(\"  -B <directory>           Add <directory> to the compiler's search paths.\\n\"), stdout);\n+  fputs (_(\"  -v                       Display the programs invoked by the compiler.\\n\"), stdout);\n+  fputs (_(\"  -###                     Like -v but options quoted and commands not executed.\\n\"), stdout);\n+  fputs (_(\"  -E                       Preprocess only; do not compile, assemble or link.\\n\"), stdout);\n+  fputs (_(\"  -S                       Compile only; do not assemble or link.\\n\"), stdout);\n+  fputs (_(\"  -c                       Compile and assemble, but do not link.\\n\"), stdout);\n+  fputs (_(\"  -o <file>                Place the output into <file>.\\n\"), stdout);\n+  fputs (_(\"  -pie                     Create a position independent executable.\\n\"), stdout);\n+  fputs (_(\"  -shared                  Create a shared library.\\n\"), stdout);\n   fputs (_(\"\\\n-  -x <language>            Specify the language of the following input files\\n\\\n+  -x <language>            Specify the language of the following input files.\\n\\\n                            Permissible languages include: c c++ assembler none\\n\\\n                            'none' means revert to the default behavior of\\n\\\n-                           guessing the language based on the file's extension\\n\\\n+                           guessing the language based on the file's extension.\\n\\\n \"), stdout);\n \n   printf (_(\"\\"}, {"sha": "3b304eac7bc39fc83510443a6a708bab37d42009", "filename": "gcc/go/lang.opt", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fgo%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fgo%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Flang.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -39,35 +39,35 @@ Go\n \n fgo-check-divide-zero\n Go Var(go_check_divide_zero) Init(1)\n-Add explicit checks for division by zero\n+Add explicit checks for division by zero.\n \n fgo-check-divide-overflow\n Go Var(go_check_divide_overflow) Init(1)\n-Add explicit checks for division overflow in INT_MIN / -1\n+Add explicit checks for division overflow in INT_MIN / -1.\n \n fgo-dump-\n Go Joined RejectNegative\n--fgo-dump-<type>\tDump Go frontend internal information\n+-fgo-dump-<type>\tDump Go frontend internal information.\n \n fgo-optimize-\n Go Joined RejectNegative\n--fgo-optimize-<type>\tTurn on optimization passes in the frontend\n+-fgo-optimize-<type>\tTurn on optimization passes in the frontend.\n \n fgo-pkgpath=\n Go Joined RejectNegative\n--fgo-pkgpath=<string>\tSet Go package path\n+-fgo-pkgpath=<string>\tSet Go package path.\n \n fgo-prefix=\n Go Joined RejectNegative\n--fgo-prefix=<string>\tSet package-specific prefix for exported Go names\n+-fgo-prefix=<string>\tSet package-specific prefix for exported Go names.\n \n fgo-relative-import-path=\n Go Joined RejectNegative\n--fgo-relative-import-path=<path> Treat a relative import as relative to path\n+-fgo-relative-import-path=<path> Treat a relative import as relative to path.\n \n frequire-return-statement\n Go Var(go_require_return_statement) Init(1) Warning\n-Functions which return values must end with return statements\n+Functions which return values must end with return statements.\n \n o\n Go Joined Separate"}, {"sha": "7399d57734ab24b033e2d0b472d7194ff85b2233", "filename": "gcc/java/lang.opt", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fjava%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fjava%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -119,15 +119,15 @@ Java Var(warn_deprecated)\n \n Wextraneous-semicolon\n Java Var(flag_extraneous_semicolon)\n-Warn if deprecated empty statements are found\n+Warn if deprecated empty statements are found.\n \n Wout-of-date\n Java Var(flag_newer) Init(1)\n-Warn if .class files are out of date\n+Warn if .class files are out of date.\n \n Wredundant-modifiers\n Java Var(flag_redundant)\n-Warn if modifiers are specified when not necessary\n+Warn if modifiers are specified when not necessary.\n \n bootclasspath\n Java Separate Alias(fbootclasspath=)\n@@ -147,14 +147,14 @@ Driver Separate\n \n fCLASSPATH=\n Java JoinedOrMissing RejectNegative Alias(fclasspath=)\n---CLASSPATH\tDeprecated; use --classpath instead\n+--CLASSPATH\tDeprecated; use --classpath instead.\n \n faux-classpath\n Java Separate RejectNegative Undocumented\n \n fassert\n Java Var(flag_assert) Init(1)\n-Permit the use of the assert keyword\n+Permit the use of the assert keyword.\n \n fassume-compiled\n Java\n@@ -176,34 +176,34 @@ Java JoinedOrMissing\n \n fbootclasspath=\n Java JoinedOrMissing RejectNegative\n---bootclasspath=<path>\tReplace system path\n+--bootclasspath=<path>\tReplace system path.\n \n fcheck-references\n Java Var(flag_check_references)\n-Generate checks for references to NULL\n+Generate checks for references to NULL.\n \n fclasspath=\n Java JoinedOrMissing RejectNegative\n---classpath=<path>\tSet class path\n+--classpath=<path>\tSet class path.\n \n fcompile-resource=\n Java Joined RejectNegative\n \n femit-class-file\n Java Var(flag_emit_class_files)\n-Output a class file\n+Output a class file.\n \n femit-class-files\n Java Var(flag_emit_class_files)\n-Alias for -femit-class-file\n+Alias for -femit-class-file.\n \n fencoding=\n Java Joined RejectNegative\n---encoding=<encoding>\tChoose input encoding (defaults from your locale)\n+--encoding=<encoding>\tChoose input encoding (defaults from your locale).\n \n fextdirs=\n Java Joined RejectNegative\n---extdirs=<path>\tSet the extension directory path\n+--extdirs=<path>\tSet the extension directory path.\n \n fmain=\n Driver JoinedOrMissing RejectNegative\n@@ -213,72 +213,72 @@ Java Joined Undocumented\n \n ffilelist-file\n Java Var(flag_filelist_file)\n-Input file is a file with a list of filenames to compile\n+Input file is a file with a list of filenames to compile.\n \n fsaw-java-file\n Java Undocumented RejectNegative\n \n fforce-classes-archive-check\n Java Var(flag_force_classes_archive_check)\n-Always check for non gcj generated classes archives\n+Always check for non gcj generated classes archives.\n \n fhash-synchronization\n Java Var(flag_hash_synchronization)\n-Assume the runtime uses a hash table to map an object to its synchronization structure\n+Assume the runtime uses a hash table to map an object to its synchronization structure.\n \n findirect-classes\n Java Var(flag_indirect_classes) Init(1)\n-Generate instances of Class at runtime\n+Generate instances of Class at runtime.\n \n findirect-dispatch\n Java Var(flag_indirect_dispatch)\n-Use offset tables for virtual method calls\n+Use offset tables for virtual method calls.\n \n finline-functions\n Java\n \n fjni\n Java Var(flag_jni)\n-Assume native functions are implemented using JNI\n+Assume native functions are implemented using JNI.\n \n foptimize-static-class-initialization\n Java Var(flag_optimize_sci)\n-Enable optimization of static class initialization code\n+Enable optimization of static class initialization code.\n \n foutput-class-dir=\n Java Joined RejectNegative\n \n freduced-reflection\n Java Var(flag_reduced_reflection)\n-Reduce the amount of reflection meta-data generated\n+Reduce the amount of reflection meta-data generated.\n \n fstore-check\n Java Var(flag_store_check) Init(1)\n-Enable assignability checks for stores into object arrays\n+Enable assignability checks for stores into object arrays.\n \n fuse-boehm-gc\n Java Var(flag_use_boehm_gc)\n-Generate code for the Boehm GC\n+Generate code for the Boehm GC.\n \n fuse-divide-subroutine\n Java Var(flag_use_divide_subroutine) Init(1)\n-Call a library routine to do integer divisions\n+Call a library routine to do integer divisions.\n \n fuse-atomic-builtins\n Java Var(flag_use_atomic_builtins) Init(0)\n-Generate code for built-in atomic operations\n+Generate code for built-in atomic operations.\n \n fbootstrap-classes\n Java Var(flag_bootstrap_classes)\n-Generated should be loaded by bootstrap loader\n+Generated should be loaded by bootstrap loader.\n \n fsource=\n Java Joined\n-Set the source language version\n+Set the source language version.\n \n ftarget=\n Java Joined\n-Set the target VM version\n+Set the target VM version.\n \n s-bc-abi\n Driver"}, {"sha": "f7aedc4b3e4206acbdfe0e250a70dc18ca58fbbe", "filename": "gcc/lto/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Flto%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Flto%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flang.opt?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -42,6 +42,6 @@ Whole program analysis (WPA) mode with number of parallel jobs specified.\n \n fresolution=\n LTO Joined\n-The resolution file\n+The resolution file.\n \n ; This comment is to ensure we retain the blank line above."}, {"sha": "9a3fbb3c5d07ed515c0a123cc2bae7d33232ac88", "filename": "gcc/opts.c", "status": "modified", "additions": 43, "deletions": 3, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -181,7 +181,8 @@ base_of_path (const char *path, const char **base_out)\n }\n \n /* What to print when a switch has no documentation.  */\n-static const char undocumented_msg[] = N_(\"This switch lacks documentation\");\n+static const char undocumented_msg[] = N_(\"This option lacks documentation.\");\n+static const char use_diagnosed_msg[] = N_(\"Uses of this option are diagnosed.\");\n \n typedef char *char_p; /* For DEF_VEC_P.  */\n \n@@ -1012,7 +1013,7 @@ print_filtered_help (unsigned int include_flags,\n   const char *help;\n   bool found = false;\n   bool displayed = false;\n-  char new_help[128];\n+  char new_help[256];\n \n   if (include_flags == CL_PARAMS)\n     {\n@@ -1088,9 +1089,48 @@ print_filtered_help (unsigned int include_flags,\n \t{\n \t  if (exclude_flags & CL_UNDOCUMENTED)\n \t    continue;\n+\n \t  help = undocumented_msg;\n \t}\n \n+      if (option->alias_target < N_OPTS\n+\t  && cl_options [option->alias_target].help)\n+\t{\n+\t  if (help == undocumented_msg)\n+\t    {\n+\t      /* For undocumented options that are aliases for other options\n+\t\t that are documented, point the reader to the other option in\n+\t\t preference of the former.  */\n+\t      snprintf (new_help, sizeof new_help,\n+\t\t\t_(\"Same as %s.  Use the latter option instead.\"),\n+\t\t\tcl_options [option->alias_target].opt_text);\n+\t    }\n+\t  else\n+\t    {\n+\t      /* For documented options with aliases, mention the aliased\n+\t\t option's name for reference.  */\n+\t      snprintf (new_help, sizeof new_help,\n+\t\t\t_(\"%s  Same as %s.\"),\n+\t\t\thelp, cl_options [option->alias_target].opt_text);\n+\t    }\n+\n+\t  help = new_help;\n+\t}\n+\n+      if (option->warn_message)\n+\t{\n+\t  /* Mention that the use of the option will trigger a warning.  */\n+\t  if (help == new_help)\n+\t    snprintf (new_help + strlen (new_help),\n+\t\t      sizeof new_help - strlen (new_help),\n+\t\t      \"  %s\", _(use_diagnosed_msg));\n+\t  else\n+\t    snprintf (new_help, sizeof new_help,\n+\t\t      \"%s  %s\", help, _(use_diagnosed_msg));\n+\n+\t  help = new_help;\n+\t}\n+\n       /* Get the translation.  */\n       help = _(help);\n \n@@ -1180,7 +1220,7 @@ print_filtered_help (unsigned int include_flags,\n \t     options supported by a specific front end.  */\n \t  for (i = 0; (1U << i) < CL_LANG_ALL; i ++)\n \t    if ((1U << i) & langs)\n-\t      printf (_(\" None found.  Use --help=%s to show *all* the options supported by the %s front-end\\n\"),\n+\t      printf (_(\" None found.  Use --help=%s to show *all* the options supported by the %s front-end.\\n\"),\n \t\t      lang_names[i], lang_names[i]);\n \t}\n "}, {"sha": "c5d96e7e38b73696be2b8414710e24eff1f5a93a", "filename": "gcc/params.def", "status": "modified", "additions": 174, "deletions": 174, "changes": 348, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -46,12 +46,12 @@ along with GCC; see the file COPYING3.  If not see\n    threshold (in percent), then it is considered well predictable. */\n DEFPARAM (PARAM_PREDICTABLE_BRANCH_OUTCOME,\n \t  \"predictable-branch-outcome\",\n-\t  \"Maximal estimated outcome of branch considered predictable\",\n+\t  \"Maximal estimated outcome of branch considered predictable.\",\n \t  2, 0, 50)\n \n DEFPARAM (PARAM_INLINE_MIN_SPEEDUP,\n \t  \"inline-min-speedup\",\n-\t  \"The minimal estimated speedup allowing inliner to ignore inline-insns-single and inline-isnsns-auto\",\n+\t  \"The minimal estimated speedup allowing inliner to ignore inline-insns-single and inline-isnsns-auto.\",\n \t  10, 0, 0)\n \n /* The single function inlining limit. This is the maximum size\n@@ -68,7 +68,7 @@ DEFPARAM (PARAM_INLINE_MIN_SPEEDUP,\n    gets decreased.  */\n DEFPARAM (PARAM_MAX_INLINE_INSNS_SINGLE,\n \t  \"max-inline-insns-single\",\n-\t  \"The maximum number of instructions in a single function eligible for inlining\",\n+\t  \"The maximum number of instructions in a single function eligible for inlining.\",\n \t  400, 0, 0)\n \n /* The single function inlining limit for functions that are\n@@ -80,65 +80,65 @@ DEFPARAM (PARAM_MAX_INLINE_INSNS_SINGLE,\n    The default value is 40.  */\n DEFPARAM (PARAM_MAX_INLINE_INSNS_AUTO,\n \t  \"max-inline-insns-auto\",\n-\t  \"The maximum number of instructions when automatically inlining\",\n+\t  \"The maximum number of instructions when automatically inlining.\",\n \t  40, 0, 0)\n \n DEFPARAM (PARAM_MAX_INLINE_INSNS_RECURSIVE,\n \t  \"max-inline-insns-recursive\",\n-\t  \"The maximum number of instructions inline function can grow to via recursive inlining\",\n+\t  \"The maximum number of instructions inline function can grow to via recursive inlining.\",\n \t  450, 0, 0)\n \n DEFPARAM (PARAM_MAX_INLINE_INSNS_RECURSIVE_AUTO,\n \t  \"max-inline-insns-recursive-auto\",\n-\t  \"The maximum number of instructions non-inline function can grow to via recursive inlining\",\n+\t  \"The maximum number of instructions non-inline function can grow to via recursive inlining.\",\n \t  450, 0, 0)\n \n DEFPARAM (PARAM_MAX_INLINE_RECURSIVE_DEPTH,\n \t  \"max-inline-recursive-depth\",\n-\t  \"The maximum depth of recursive inlining for inline functions\",\n+\t  \"The maximum depth of recursive inlining for inline functions.\",\n \t  8, 0, 0)\n \n DEFPARAM (PARAM_MAX_INLINE_RECURSIVE_DEPTH_AUTO,\n \t  \"max-inline-recursive-depth-auto\",\n-\t  \"The maximum depth of recursive inlining for non-inline functions\",\n+\t  \"The maximum depth of recursive inlining for non-inline functions.\",\n \t  8, 0, 0)\n \n DEFPARAM (PARAM_MIN_INLINE_RECURSIVE_PROBABILITY,\n \t  \"min-inline-recursive-probability\",\n-\t  \"Inline recursively only when the probability of call being executed exceeds the parameter\",\n+\t  \"Inline recursively only when the probability of call being executed exceeds the parameter.\",\n \t  10, 0, 0)\n \n /* Limit of iterations of early inliner.  This basically bounds number of\n    nested indirect calls early inliner can resolve.  Deeper chains are still\n    handled by late inlining.  */\n DEFPARAM (PARAM_EARLY_INLINER_MAX_ITERATIONS,\n \t  \"max-early-inliner-iterations\",\n-\t  \"The maximum number of nested indirect inlining performed by early inliner\",\n+\t  \"The maximum number of nested indirect inlining performed by early inliner.\",\n \t  1, 0, 0)\n \n /* Limit on probability of entry BB.  */\n DEFPARAM (PARAM_COMDAT_SHARING_PROBABILITY,\n \t  \"comdat-sharing-probability\",\n-\t  \"Probability that COMDAT function will be shared with different compilation unit\",\n+\t  \"Probability that COMDAT function will be shared with different compilation unit.\",\n \t  20, 0, 0)\n \n /* Limit on probability of entry BB.  */\n DEFPARAM (PARAM_PARTIAL_INLINING_ENTRY_PROBABILITY,\n \t  \"partial-inlining-entry-probability\",\n-\t  \"Maximum probability of the entry BB of split region (in percent relative to entry BB of the function) to make partial inlining happen\",\n+\t  \"Maximum probability of the entry BB of split region (in percent relative to entry BB of the function) to make partial inlining happen.\",\n \t  70, 0, 0)\n \n /* Limit the number of expansions created by the variable expansion\n    optimization to avoid register pressure.  */\n DEFPARAM (PARAM_MAX_VARIABLE_EXPANSIONS,\n \t  \"max-variable-expansions-in-unroller\",\n-\t  \"If -fvariable-expansion-in-unroller is used, the maximum number of times that an individual variable will be expanded during loop unrolling\",\n+\t  \"If -fvariable-expansion-in-unroller is used, the maximum number of times that an individual variable will be expanded during loop unrolling.\",\n           1, 0, 0)\n \n /* Limit loop autovectorization to loops with large enough iteration count.  */\n DEFPARAM (PARAM_MIN_VECT_LOOP_BOUND,\n \t  \"min-vect-loop-bound\",\n-\t  \"If -ftree-vectorize is used, the minimal loop bound of a loop to be considered for vectorization\",\n+\t  \"If -ftree-vectorize is used, the minimal loop bound of a loop to be considered for vectorization.\",\n \t  1, 1, 0)\n \n /* The maximum number of instructions to consider when looking for an\n@@ -149,7 +149,7 @@ DEFPARAM (PARAM_MIN_VECT_LOOP_BOUND,\n    increase with probably small improvement in executable run time.  */\n DEFPARAM (PARAM_MAX_DELAY_SLOT_INSN_SEARCH,\n \t  \"max-delay-slot-insn-search\",\n-\t  \"The maximum number of instructions to consider to fill a delay slot\",\n+\t  \"The maximum number of instructions to consider to fill a delay slot.\",\n \t  100, 0, 0)\n \n /* When trying to fill delay slots, the maximum number of instructions\n@@ -160,7 +160,7 @@ DEFPARAM (PARAM_MAX_DELAY_SLOT_INSN_SEARCH,\n    to maintain the control-flow graph.  */\n DEFPARAM(PARAM_MAX_DELAY_SLOT_LIVE_SEARCH,\n \t \"max-delay-slot-live-search\",\n-\t \"The maximum number of instructions to consider to find accurate live register information\",\n+\t \"The maximum number of instructions to consider to find accurate live register information.\",\n \t 333, 0, 0)\n \n /* This parameter limits the number of branch elements that the\n@@ -170,61 +170,61 @@ DEFPARAM(PARAM_MAX_DELAY_SLOT_LIVE_SEARCH,\n    the compiler either uses all available memory, or runs for far too long.  */\n DEFPARAM(PARAM_MAX_PENDING_LIST_LENGTH,\n \t \"max-pending-list-length\",\n-\t \"The maximum length of scheduling's pending operations list\",\n+\t \"The maximum length of scheduling's pending operations list.\",\n \t 32, 0, 0)\n \n /* This parameter limits the number of backtracking attempts when using the\n    haifa scheduler for modulo scheduling.  */\n DEFPARAM(PARAM_MAX_MODULO_BACKTRACK_ATTEMPTS,\n \t \"max-modulo-backtrack-attempts\",\n-\t \"The maximum number of backtrack attempts the scheduler should make when modulo scheduling a loop\",\n+\t \"The maximum number of backtrack attempts the scheduler should make when modulo scheduling a loop.\",\n \t 40, 0, 0)\n \n DEFPARAM(PARAM_LARGE_FUNCTION_INSNS,\n \t \"large-function-insns\",\n-\t \"The size of function body to be considered large\",\n+\t \"The size of function body to be considered large.\",\n \t 2700, 0, 0)\n DEFPARAM(PARAM_LARGE_FUNCTION_GROWTH,\n \t \"large-function-growth\",\n-\t \"Maximal growth due to inlining of large function (in percent)\",\n+\t \"Maximal growth due to inlining of large function (in percent).\",\n \t 100, 0, 0)\n DEFPARAM(PARAM_LARGE_UNIT_INSNS,\n \t \"large-unit-insns\",\n-\t \"The size of translation unit to be considered large\",\n+\t \"The size of translation unit to be considered large.\",\n \t 10000, 0, 0)\n DEFPARAM(PARAM_INLINE_UNIT_GROWTH,\n \t \"inline-unit-growth\",\n-\t \"How much can given compilation unit grow because of the inlining (in percent)\",\n+\t \"How much can given compilation unit grow because of the inlining (in percent).\",\n \t 20, 0, 0)\n DEFPARAM(PARAM_IPCP_UNIT_GROWTH,\n \t \"ipcp-unit-growth\",\n-\t \"How much can given compilation unit grow because of the interprocedural constant propagation (in percent)\",\n+\t \"How much can given compilation unit grow because of the interprocedural constant propagation (in percent).\",\n \t 10, 0, 0)\n DEFPARAM(PARAM_EARLY_INLINING_INSNS,\n \t \"early-inlining-insns\",\n-\t \"Maximal estimated growth of function body caused by early inlining of single call\",\n+\t \"Maximal estimated growth of function body caused by early inlining of single call.\",\n \t 14, 0, 0)\n DEFPARAM(PARAM_LARGE_STACK_FRAME,\n \t \"large-stack-frame\",\n-\t \"The size of stack frame to be considered large\",\n+\t \"The size of stack frame to be considered large.\",\n \t 256, 0, 0)\n DEFPARAM(PARAM_STACK_FRAME_GROWTH,\n \t \"large-stack-frame-growth\",\n-\t \"Maximal stack frame growth due to inlining (in percent)\",\n+\t \"Maximal stack frame growth due to inlining (in percent).\",\n \t 1000, 0, 0)\n \n /* The GCSE optimization will be disabled if it would require\n    significantly more memory than this value.  */\n DEFPARAM(PARAM_MAX_GCSE_MEMORY,\n \t \"max-gcse-memory\",\n-\t \"The maximum amount of memory to be allocated by GCSE\",\n+\t \"The maximum amount of memory to be allocated by GCSE.\",\n \t 50 * 1024 * 1024, 0, 0)\n \n /* The GCSE optimization of an expression will avoided if the ratio of\n    insertions to deletions is greater than this value.  */\n DEFPARAM(PARAM_MAX_GCSE_INSERTION_RATIO,\n \t \"max-gcse-insertion-ratio\",\n-\t \"The maximum ratio of insertions to deletions of expressions in GCSE\",\n+\t \"The maximum ratio of insertions to deletions of expressions in GCSE.\",\n \t 20, 0, 0)\n \n /* This is the threshold ratio when to perform partial redundancy\n@@ -235,44 +235,44 @@ DEFPARAM(PARAM_MAX_GCSE_INSERTION_RATIO,\n    (Added loads execution count)\t\t\t\t\t  */\n DEFPARAM(PARAM_GCSE_AFTER_RELOAD_PARTIAL_FRACTION,\n \t\"gcse-after-reload-partial-fraction\",\n-\t\"The threshold ratio for performing partial redundancy elimination after reload\",\n+\t\"The threshold ratio for performing partial redundancy elimination after reload.\",\n         3, 0, 0)\n /* This is the threshold ratio of the critical edges execution count compared to\n    the redundant loads execution count that permits performing the load\n    redundancy elimination in gcse after reload.  */\n DEFPARAM(PARAM_GCSE_AFTER_RELOAD_CRITICAL_FRACTION,\n \t\"gcse-after-reload-critical-fraction\",\n-\t\"The threshold ratio of critical edges execution count that permit performing redundancy elimination after reload\",\n+\t\"The threshold ratio of critical edges execution count that permit performing redundancy elimination after reload.\",\n         10, 0, 0)\n \n /* GCSE will use GCSE_COST_DISTANCE_RATION as a scaling factor\n    to calculate maximum distance for which an expression is allowed to move\n    from its rtx_cost.  */\n DEFPARAM(PARAM_GCSE_COST_DISTANCE_RATIO,\n \t \"gcse-cost-distance-ratio\",\n-\t \"Scaling factor in calculation of maximum distance an expression can be moved by GCSE optimizations\",\n+\t \"Scaling factor in calculation of maximum distance an expression can be moved by GCSE optimizations.\",\n \t 10, 0, 0)\n /* GCSE won't restrict distance for which an expression with rtx_cost greater\n    than COSTS_N_INSN(GCSE_UNRESTRICTED_COST) is allowed to move.  */\n DEFPARAM(PARAM_GCSE_UNRESTRICTED_COST,\n \t \"gcse-unrestricted-cost\",\n-\t \"Cost at which GCSE optimizations will not constraint the distance an expression can travel\",\n+\t \"Cost at which GCSE optimizations will not constraint the distance an expression can travel.\",\n \t 3, 0, 0)\n \n /* How deep from a given basic block the dominator tree should be searched\n    for expressions to hoist to the block.  The value of 0 will avoid limiting\n    the search.  */\n DEFPARAM(PARAM_MAX_HOIST_DEPTH,\n \t \"max-hoist-depth\",\n-\t \"Maximum depth of search in the dominator tree for expressions to hoist\",\n+\t \"Maximum depth of search in the dominator tree for expressions to hoist.\",\n \t 30, 0, 0)\n \n \n /* When synthesizing expnonentiation by a real constant operations using square\n    roots, this controls how deep sqrt chains we are willing to generate.  */\n DEFPARAM(PARAM_MAX_POW_SQRT_DEPTH,\n \t \"max-pow-sqrt-depth\",\n-\t \"Maximum depth of sqrt chains to use when synthesizing exponentiation by a real constant\",\n+\t \"Maximum depth of sqrt chains to use when synthesizing exponentiation by a real constant.\",\n \t 5, 1, 32)\n \n /* This parameter limits the number of insns in a loop that will be unrolled,\n@@ -284,83 +284,83 @@ DEFPARAM(PARAM_MAX_POW_SQRT_DEPTH,\n    otherwise.  */\n DEFPARAM(PARAM_MAX_UNROLLED_INSNS,\n \t \"max-unrolled-insns\",\n-\t \"The maximum number of instructions to consider to unroll in a loop\",\n+\t \"The maximum number of instructions to consider to unroll in a loop.\",\n \t 200, 0, 0)\n /* This parameter limits how many times the loop is unrolled depending\n    on number of insns really executed in each iteration.  */\n DEFPARAM(PARAM_MAX_AVERAGE_UNROLLED_INSNS,\n \t \"max-average-unrolled-insns\",\n-\t \"The maximum number of instructions to consider to unroll in a loop on average\",\n+\t \"The maximum number of instructions to consider to unroll in a loop on average.\",\n \t 80, 0, 0)\n /* The maximum number of unrollings of a single loop.  */\n DEFPARAM(PARAM_MAX_UNROLL_TIMES,\n \t\"max-unroll-times\",\n-\t\"The maximum number of unrollings of a single loop\",\n+\t\"The maximum number of unrollings of a single loop.\",\n \t8, 0, 0)\n /* The maximum number of insns of a peeled loop.  */\n DEFPARAM(PARAM_MAX_PEELED_INSNS,\n \t\"max-peeled-insns\",\n-\t\"The maximum number of insns of a peeled loop\",\n+\t\"The maximum number of insns of a peeled loop.\",\n \t100, 0, 0)\n /* The maximum number of peelings of a single loop.  */\n DEFPARAM(PARAM_MAX_PEEL_TIMES,\n \t\"max-peel-times\",\n-\t\"The maximum number of peelings of a single loop\",\n+\t\"The maximum number of peelings of a single loop.\",\n \t16, 0, 0)\n /* The maximum number of peelings of a single loop that is peeled completely.  */\n DEFPARAM(PARAM_MAX_PEEL_BRANCHES,\n \t\"max-peel-branches\",\n-\t\"The maximum number of branches on the path through the peeled sequence\",\n+\t\"The maximum number of branches on the path through the peeled sequence.\",\n \t32, 0, 0)\n /* The maximum number of insns of a peeled loop.  */\n DEFPARAM(PARAM_MAX_COMPLETELY_PEELED_INSNS,\n \t\"max-completely-peeled-insns\",\n-\t\"The maximum number of insns of a completely peeled loop\",\n+\t\"The maximum number of insns of a completely peeled loop.\",\n \t200, 0, 0)\n /* The maximum number of peelings of a single loop that is peeled completely.  */\n DEFPARAM(PARAM_MAX_COMPLETELY_PEEL_TIMES,\n \t\"max-completely-peel-times\",\n-\t\"The maximum number of peelings of a single loop that is peeled completely\",\n+\t\"The maximum number of peelings of a single loop that is peeled completely.\",\n \t16, 0, 0)\n /* The maximum number of insns of a peeled loop that rolls only once.  */\n DEFPARAM(PARAM_MAX_ONCE_PEELED_INSNS,\n \t\"max-once-peeled-insns\",\n-\t\"The maximum number of insns of a peeled loop that rolls only once\",\n+\t\"The maximum number of insns of a peeled loop that rolls only once.\",\n \t400, 0, 0)\n /* The maximum depth of a loop nest we completely peel.  */\n DEFPARAM(PARAM_MAX_UNROLL_ITERATIONS,\n \t \"max-completely-peel-loop-nest-depth\",\n-\t \"The maximum depth of a loop nest we completely peel\",\n+\t \"The maximum depth of a loop nest we completely peel.\",\n \t 8, 0, 0)\n \n /* The maximum number of insns of an unswitched loop.  */\n DEFPARAM(PARAM_MAX_UNSWITCH_INSNS,\n \t\"max-unswitch-insns\",\n-\t\"The maximum number of insns of an unswitched loop\",\n+\t\"The maximum number of insns of an unswitched loop.\",\n \t50, 0, 0)\n /* The maximum level of recursion in unswitch_single_loop.  */\n DEFPARAM(PARAM_MAX_UNSWITCH_LEVEL,\n \t\"max-unswitch-level\",\n-\t\"The maximum number of unswitchings in a single loop\",\n+\t\"The maximum number of unswitchings in a single loop.\",\n \t3, 0, 0)\n \n /* The maximum number of iterations of a loop the brute force algorithm\n    for analysis of # of iterations of the loop tries to evaluate.  */\n DEFPARAM(PARAM_MAX_ITERATIONS_TO_TRACK,\n \t\"max-iterations-to-track\",\n-\t\"Bound on the number of iterations the brute force # of iterations analysis algorithm evaluates\",\n+\t\"Bound on the number of iterations the brute force # of iterations analysis algorithm evaluates.\",\n \t1000, 0, 0)\n /* A cutoff to avoid costly computations of the number of iterations in\n    the doloop transformation.  */\n DEFPARAM(PARAM_MAX_ITERATIONS_COMPUTATION_COST,\n \t\"max-iterations-computation-cost\",\n-\t\"Bound on the cost of an expression to compute the number of iterations\",\n+\t\"Bound on the cost of an expression to compute the number of iterations.\",\n \t10, 0, 0)\n \n /* This parameter is used to tune SMS MAX II calculations.  */\n DEFPARAM(PARAM_SMS_MAX_II_FACTOR,\n \t \"sms-max-ii-factor\",\n-\t \"A factor for tuning the upper bound that swing modulo scheduler uses for scheduling a loop\",\n+\t \"A factor for tuning the upper bound that swing modulo scheduler uses for scheduling a loop.\",\n \t 100, 0, 0)\n /* The minimum value of stage count that swing modulo scheduler will generate.  */\n DEFPARAM(PARAM_SMS_MIN_SC,\n@@ -369,36 +369,36 @@ DEFPARAM(PARAM_SMS_MIN_SC,\n         2, 1, 1)\n DEFPARAM(PARAM_SMS_DFA_HISTORY,\n \t \"sms-dfa-history\",\n-\t \"The number of cycles the swing modulo scheduler considers when checking conflicts using DFA\",\n+\t \"The number of cycles the swing modulo scheduler considers when checking conflicts using DFA.\",\n \t 0, 0, 0)\n DEFPARAM(PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD,\n \t \"sms-loop-average-count-threshold\",\n-\t \"A threshold on the average loop count considered by the swing modulo scheduler\",\n+\t \"A threshold on the average loop count considered by the swing modulo scheduler.\",\n \t 0, 0, 0)\n \n DEFPARAM(HOT_BB_COUNT_WS_PERMILLE,\n \t \"hot-bb-count-ws-permille\",\n          \"A basic block profile count is considered hot if it contributes to \"\n-         \"the given permillage of the entire profiled execution\",\n+         \"the given permillage of the entire profiled execution.\",\n \t 999, 0, 1000)\n DEFPARAM(HOT_BB_FREQUENCY_FRACTION,\n \t \"hot-bb-frequency-fraction\",\n-\t \"Select fraction of the maximal frequency of executions of basic block in function given basic block needs to have to be considered hot\",\n+\t \"Select fraction of the maximal frequency of executions of basic block in function given basic block needs to have to be considered hot.\",\n \t 1000, 0, 0)\n \n DEFPARAM(UNLIKELY_BB_COUNT_FRACTION,\n \t \"unlikely-bb-count-fraction\",\n-         \"The minimum fraction of profile runs a given basic block execution count must be not to be considered unlikely\",\n+         \"The minimum fraction of profile runs a given basic block execution count must be not to be considered unlikely.\",\n \t 20, 1, 10000)\n \n DEFPARAM (PARAM_ALIGN_THRESHOLD,\n \t  \"align-threshold\",\n-\t  \"Select fraction of the maximal frequency of executions of basic block in function given basic block get alignment\",\n+\t  \"Select fraction of the maximal frequency of executions of basic block in function given basic block get alignment.\",\n \t  100, 1, 0)\n \n DEFPARAM (PARAM_ALIGN_LOOP_ITERATIONS,\n \t  \"align-loop-iterations\",\n-\t  \"Loops iterating at least selected number of iterations will get loop alignement.\",\n+\t  \"Loops iterating at least selected number of iterations will get loop alignement..\",\n \t  4, 0, 0)\n \n /* For guessed profiles, the loops having unknown number of iterations\n@@ -414,13 +414,13 @@ DEFPARAM (PARAM_ALIGN_LOOP_ITERATIONS,\n \n DEFPARAM(PARAM_MAX_PREDICTED_ITERATIONS,\n \t \"max-predicted-iterations\",\n-\t \"The maximum number of loop iterations we predict statically\",\n+\t \"The maximum number of loop iterations we predict statically.\",\n \t 100, 0, 0)\n \n /* This parameter controls the probability of builtin_expect. The default\n    value is 90%. This empirical value is obtained through the weighted\n    probability of FDO counters (with the FDO count value as the weight)\n-   in some real world programs:  \n+   in some real world programs:\n    (1) Google performance test benchmarks: the probability is 0.9081.\n    (2) Linux 3.3 kernel running Google search workload: the probability\n    is 0.8717.  */\n@@ -431,68 +431,68 @@ DEFPARAM(BUILTIN_EXPECT_PROBABILITY,\n \t 90, 0, 100)\n DEFPARAM(TRACER_DYNAMIC_COVERAGE_FEEDBACK,\n \t \"tracer-dynamic-coverage-feedback\",\n-\t \"The percentage of function, weighted by execution frequency, that must be covered by trace formation. Used when profile feedback is available\",\n+\t \"The percentage of function, weighted by execution frequency, that must be covered by trace formation. Used when profile feedback is available.\",\n \t 95, 0, 100)\n DEFPARAM(TRACER_DYNAMIC_COVERAGE,\n \t \"tracer-dynamic-coverage\",\n-\t \"The percentage of function, weighted by execution frequency, that must be covered by trace formation. Used when profile feedback is not available\",\n+\t \"The percentage of function, weighted by execution frequency, that must be covered by trace formation. Used when profile feedback is not available.\",\n \t 75, 0, 100)\n DEFPARAM(TRACER_MAX_CODE_GROWTH,\n \t \"tracer-max-code-growth\",\n-\t \"Maximal code growth caused by tail duplication (in percent)\",\n+\t \"Maximal code growth caused by tail duplication (in percent).\",\n \t 100, 0, 0)\n DEFPARAM(TRACER_MIN_BRANCH_RATIO,\n \t \"tracer-min-branch-ratio\",\n-\t \"Stop reverse growth if the reverse probability of best edge is less than this threshold (in percent)\",\n+\t \"Stop reverse growth if the reverse probability of best edge is less than this threshold (in percent).\",\n \t 10, 0, 100)\n DEFPARAM(TRACER_MIN_BRANCH_PROBABILITY_FEEDBACK,\n \t \"tracer-min-branch-probability-feedback\",\n-\t \"Stop forward growth if the probability of best edge is less than this threshold (in percent). Used when profile feedback is available\",\n+\t \"Stop forward growth if the probability of best edge is less than this threshold (in percent). Used when profile feedback is available.\",\n \t 80, 0, 100)\n DEFPARAM(TRACER_MIN_BRANCH_PROBABILITY,\n \t \"tracer-min-branch-probability\",\n-\t \"Stop forward growth if the probability of best edge is less than this threshold (in percent). Used when profile feedback is not available\",\n+\t \"Stop forward growth if the probability of best edge is less than this threshold (in percent). Used when profile feedback is not available.\",\n \t 50, 0, 100)\n \n /* The maximum number of incoming edges to consider for crossjumping.  */\n DEFPARAM(PARAM_MAX_CROSSJUMP_EDGES,\n \t \"max-crossjump-edges\",\n-\t \"The maximum number of incoming edges to consider for crossjumping\",\n+\t \"The maximum number of incoming edges to consider for crossjumping.\",\n \t 100, 0, 0)\n \n /* The minimum number of matching instructions to consider for crossjumping.  */\n DEFPARAM(PARAM_MIN_CROSSJUMP_INSNS,\n      \"min-crossjump-insns\",\n-     \"The minimum number of matching instructions to consider for crossjumping\",\n+     \"The minimum number of matching instructions to consider for crossjumping.\",\n      5, 1, 0)\n \n /* The maximum number expansion factor when copying basic blocks.  */\n DEFPARAM(PARAM_MAX_GROW_COPY_BB_INSNS,\n      \"max-grow-copy-bb-insns\",\n-     \"The maximum expansion factor when copying basic blocks\",\n+     \"The maximum expansion factor when copying basic blocks.\",\n      8, 0, 0)\n \n /* The maximum number of insns to duplicate when unfactoring computed gotos.  */\n DEFPARAM(PARAM_MAX_GOTO_DUPLICATION_INSNS,\n      \"max-goto-duplication-insns\",\n-     \"The maximum number of insns to duplicate when unfactoring computed gotos\",\n+     \"The maximum number of insns to duplicate when unfactoring computed gotos.\",\n      8, 0, 0)\n \n /* The maximum length of path considered in cse.  */\n DEFPARAM(PARAM_MAX_CSE_PATH_LENGTH,\n \t \"max-cse-path-length\",\n-\t \"The maximum length of path considered in cse\",\n+\t \"The maximum length of path considered in cse.\",\n \t 10, 1, 0)\n DEFPARAM(PARAM_MAX_CSE_INSNS,\n \t \"max-cse-insns\",\n-\t \"The maximum instructions CSE process before flushing\",\n+\t \"The maximum instructions CSE process before flushing.\",\n \t 1000, 0, 0)\n \n /* The cost of expression in loop invariant motion that is considered\n    expensive.  */\n DEFPARAM(PARAM_LIM_EXPENSIVE,\n \t \"lim-expensive\",\n-\t \"The minimum cost of an expensive expression in the loop invariant motion\",\n+\t \"The minimum cost of an expensive expression in the loop invariant motion.\",\n \t 20, 0, 0)\n \n /* Bound on number of candidates for induction variables below that\n@@ -501,53 +501,53 @@ DEFPARAM(PARAM_LIM_EXPENSIVE,\n \n DEFPARAM(PARAM_IV_CONSIDER_ALL_CANDIDATES_BOUND,\n \t \"iv-consider-all-candidates-bound\",\n-\t \"Bound on number of candidates below that all candidates are considered in iv optimizations\",\n+\t \"Bound on number of candidates below that all candidates are considered in iv optimizations.\",\n \t 30, 0, 0)\n \n /* The induction variable optimizations give up on loops that contain more\n    induction variable uses.  */\n \n DEFPARAM(PARAM_IV_MAX_CONSIDERED_USES,\n \t \"iv-max-considered-uses\",\n-\t \"Bound on number of iv uses in loop optimized in iv optimizations\",\n+\t \"Bound on number of iv uses in loop optimized in iv optimizations.\",\n \t 250, 0, 0)\n \n /* If there are at most this number of ivs in the set, try removing unnecessary\n    ivs from the set always.  */\n \n DEFPARAM(PARAM_IV_ALWAYS_PRUNE_CAND_SET_BOUND,\n \t \"iv-always-prune-cand-set-bound\",\n-\t \"If number of candidates in the set is smaller, we always try to remove unused ivs during its optimization\",\n+\t \"If number of candidates in the set is smaller, we always try to remove unused ivs during its optimization.\",\n \t 10, 0, 0)\n \n DEFPARAM(PARAM_SCEV_MAX_EXPR_SIZE,\n  \t \"scev-max-expr-size\",\n-\t \"Bound on size of expressions used in the scalar evolutions analyzer\",\n+\t \"Bound on size of expressions used in the scalar evolutions analyzer.\",\n \t 100, 0, 0)\n \n DEFPARAM(PARAM_SCEV_MAX_EXPR_COMPLEXITY,\n \t \"scev-max-expr-complexity\",\n-\t \"Bound on the complexity of the expressions in the scalar evolutions analyzer\",\n+\t \"Bound on the complexity of the expressions in the scalar evolutions analyzer.\",\n \t 10, 0, 0)\n \n DEFPARAM(PARAM_VECT_MAX_VERSION_FOR_ALIGNMENT_CHECKS,\n          \"vect-max-version-for-alignment-checks\",\n-         \"Bound on number of runtime checks inserted by the vectorizer's loop versioning for alignment check\",\n+         \"Bound on number of runtime checks inserted by the vectorizer's loop versioning for alignment check.\",\n          6, 0, 0)\n \n DEFPARAM(PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS,\n          \"vect-max-version-for-alias-checks\",\n-         \"Bound on number of runtime checks inserted by the vectorizer's loop versioning for alias check\",\n+         \"Bound on number of runtime checks inserted by the vectorizer's loop versioning for alias check.\",\n          10, 0, 0)\n \n DEFPARAM(PARAM_VECT_MAX_PEELING_FOR_ALIGNMENT,\n          \"vect-max-peeling-for-alignment\",\n-         \"Max number of loop peels to enhancement alignment of data references in a loop\",\n+         \"Max number of loop peels to enhancement alignment of data references in a loop.\",\n          -1, -1, 64)\n \n DEFPARAM(PARAM_MAX_CSELIB_MEMORY_LOCATIONS,\n \t \"max-cselib-memory-locations\",\n-\t \"The maximum memory locations recorded by cselib\",\n+\t \"The maximum memory locations recorded by cselib.\",\n \t 500, 0, 0)\n \n #ifdef ENABLE_GC_ALWAYS_COLLECT\n@@ -560,60 +560,60 @@ DEFPARAM(PARAM_MAX_CSELIB_MEMORY_LOCATIONS,\n \n DEFPARAM(GGC_MIN_EXPAND,\n \t \"ggc-min-expand\",\n-\t \"Minimum heap expansion to trigger garbage collection, as a percentage of the total size of the heap\",\n+\t \"Minimum heap expansion to trigger garbage collection, as a percentage of the total size of the heap.\",\n \t GGC_MIN_EXPAND_DEFAULT, 0, 0)\n \n DEFPARAM(GGC_MIN_HEAPSIZE,\n \t \"ggc-min-heapsize\",\n-\t \"Minimum heap size before we start collecting garbage, in kilobytes\",\n+\t \"Minimum heap size before we start collecting garbage, in kilobytes.\",\n \t GGC_MIN_HEAPSIZE_DEFAULT, 0, 0)\n \n #undef GGC_MIN_EXPAND_DEFAULT\n #undef GGC_MIN_HEAPSIZE_DEFAULT\n \n DEFPARAM(PARAM_MAX_RELOAD_SEARCH_INSNS,\n \t \"max-reload-search-insns\",\n-\t \"The maximum number of instructions to search backward when looking for equivalent reload\",\n+\t \"The maximum number of instructions to search backward when looking for equivalent reload.\",\n \t 100, 0, 0)\n \n DEFPARAM(PARAM_SINK_FREQUENCY_THRESHOLD,\n \t \"sink-frequency-threshold\",\n-\t \"Target block's relative execution frequency (as a percentage) required to sink a statement\",\n+\t \"Target block's relative execution frequency (as a percentage) required to sink a statement.\",\n \t 75, 0, 100)\n \n DEFPARAM(PARAM_MAX_SCHED_REGION_BLOCKS,\n \t \"max-sched-region-blocks\",\n-\t \"The maximum number of blocks in a region to be considered for interblock scheduling\",\n+\t \"The maximum number of blocks in a region to be considered for interblock scheduling.\",\n \t 10, 0, 0)\n \n DEFPARAM(PARAM_MAX_SCHED_REGION_INSNS,\n \t \"max-sched-region-insns\",\n-\t \"The maximum number of insns in a region to be considered for interblock scheduling\",\n+\t \"The maximum number of insns in a region to be considered for interblock scheduling.\",\n \t 100, 0, 0)\n \n DEFPARAM(PARAM_MAX_PIPELINE_REGION_BLOCKS,\n \t \"max-pipeline-region-blocks\",\n-\t \"The maximum number of blocks in a region to be considered for interblock scheduling\",\n+\t \"The maximum number of blocks in a region to be considered for interblock scheduling.\",\n \t 15, 0, 0)\n \n DEFPARAM(PARAM_MAX_PIPELINE_REGION_INSNS,\n \t \"max-pipeline-region-insns\",\n-\t \"The maximum number of insns in a region to be considered for interblock scheduling\",\n+\t \"The maximum number of insns in a region to be considered for interblock scheduling.\",\n \t 200, 0, 0)\n \n DEFPARAM(PARAM_MIN_SPEC_PROB,\n          \"min-spec-prob\",\n-         \"The minimum probability of reaching a source block for interblock speculative scheduling\",\n+         \"The minimum probability of reaching a source block for interblock speculative scheduling.\",\n          40, 0, 0)\n \n DEFPARAM(PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS,\n          \"max-sched-extend-regions-iters\",\n-         \"The maximum number of iterations through CFG to extend regions\",\n+         \"The maximum number of iterations through CFG to extend regions.\",\n          0, 0, 0)\n \n DEFPARAM(PARAM_MAX_SCHED_INSN_CONFLICT_DELAY,\n          \"max-sched-insn-conflict-delay\",\n-         \"The maximum conflict delay for an insn to be considered for speculative motion\",\n+         \"The maximum conflict delay for an insn to be considered for speculative motion.\",\n          3, 1, 10)\n \n DEFPARAM(PARAM_SCHED_SPEC_PROB_CUTOFF,\n@@ -628,22 +628,22 @@ DEFPARAM(PARAM_SCHED_STATE_EDGE_PROB_CUTOFF,\n \n DEFPARAM(PARAM_SELSCHED_MAX_LOOKAHEAD,\n          \"selsched-max-lookahead\",\n-         \"The maximum size of the lookahead window of selective scheduling\",\n+         \"The maximum size of the lookahead window of selective scheduling.\",\n          50, 0, 0)\n \n DEFPARAM(PARAM_SELSCHED_MAX_SCHED_TIMES,\n          \"selsched-max-sched-times\",\n-         \"Maximum number of times that an insn could be scheduled\",\n+         \"Maximum number of times that an insn could be scheduled.\",\n          2, 0, 0)\n \n DEFPARAM(PARAM_SELSCHED_INSNS_TO_RENAME,\n          \"selsched-insns-to-rename\",\n-         \"Maximum number of instructions in the ready list that are considered eligible for renaming\",\n+         \"Maximum number of instructions in the ready list that are considered eligible for renaming.\",\n          2, 0, 0)\n \n DEFPARAM (PARAM_SCHED_MEM_TRUE_DEP_COST,\n \t  \"sched-mem-true-dep-cost\",\n-\t  \"Minimal distance between possibly conflicting store and load\",\n+\t  \"Minimal distance between possibly conflicting store and load.\",\n \t  1, 0, 0)\n \n DEFPARAM (PARAM_SCHED_AUTOPREF_QUEUE_DEPTH,\n@@ -653,12 +653,12 @@ DEFPARAM (PARAM_SCHED_AUTOPREF_QUEUE_DEPTH,\n \n DEFPARAM(PARAM_MAX_LAST_VALUE_RTL,\n \t \"max-last-value-rtl\",\n-\t \"The maximum number of RTL nodes that can be recorded as combiner's last value\",\n+\t \"The maximum number of RTL nodes that can be recorded as combiner's last value.\",\n \t 10000, 0, 0)\n \n DEFPARAM(PARAM_MAX_COMBINE_INSNS,\n \t \"max-combine-insns\",\n-\t \"The maximum number of insns combine tries to combine\",\n+\t \"The maximum number of insns combine tries to combine.\",\n \t 4, 2, 4)\n \n /* INTEGER_CST nodes are shared for values [{-1,0} .. N) for\n@@ -667,18 +667,18 @@ DEFPARAM(PARAM_MAX_COMBINE_INSNS,\n    least amount of garbage for allocating the TREE_VEC storage.  */\n DEFPARAM (PARAM_INTEGER_SHARE_LIMIT,\n \t  \"integer-share-limit\",\n-\t  \"The upper bound for sharing integer constants\",\n+\t  \"The upper bound for sharing integer constants.\",\n \t  251, 2, 2)\n \n DEFPARAM (PARAM_SSP_BUFFER_SIZE,\n \t  \"ssp-buffer-size\",\n-\t  \"The lower bound for a buffer to be considered for stack smashing protection\",\n+\t  \"The lower bound for a buffer to be considered for stack smashing protection.\",\n \t  8, 1, 0)\n \n DEFPARAM (PARAM_MIN_SIZE_FOR_STACK_SHARING,\n \t  \"min-size-for-stack-sharing\",\n \t  \"The minimum size of variables taking part in stack slot sharing \"\n-\t  \"when not optimizing\",\n+\t  \"when not optimizing.\",\n \t  32, 0, 0)\n \n /* When we thread through a block we have to make copies of the\n@@ -696,7 +696,7 @@ DEFPARAM (PARAM_MIN_SIZE_FOR_STACK_SHARING,\n    throttle set at 15 statements.  */\n DEFPARAM (PARAM_MAX_JUMP_THREAD_DUPLICATION_STMTS,\n \t  \"max-jump-thread-duplication-stmts\",\n-          \"Maximum number of statements allowed in a block that needs to be duplicated when threading jumps\",\n+          \"Maximum number of statements allowed in a block that needs to be duplicated when threading jumps.\",\n \t  15, 0, 0)\n \n /* This is the maximum number of fields a variable may have before the pointer analysis machinery\n@@ -705,18 +705,18 @@ DEFPARAM (PARAM_MAX_JUMP_THREAD_DUPLICATION_STMTS,\n    field-sensitively is not worth the cost.  */\n DEFPARAM (PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE,\n           \"max-fields-for-field-sensitive\",\n-\t  \"Maximum number of fields in a structure before pointer analysis treats the structure as a single variable\",\n+\t  \"Maximum number of fields in a structure before pointer analysis treats the structure as a single variable.\",\n \t  0, 0, 0)\n \n DEFPARAM(PARAM_MAX_SCHED_READY_INSNS,\n \t \"max-sched-ready-insns\",\n-\t \"The maximum number of instructions ready to be issued to be considered by the scheduler during the first scheduling pass\",\n+\t \"The maximum number of instructions ready to be issued to be considered by the scheduler during the first scheduling pass.\",\n \t 100, 0, 0)\n \n /* This is the maximum number of active local stores RTL DSE will consider.  */\n DEFPARAM (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES,\n \t  \"max-dse-active-local-stores\",\n-\t  \"Maximum number of active local stores in RTL dead store elimination\",\n+\t  \"Maximum number of active local stores in RTL dead store elimination.\",\n \t  5000, 0, 0)\n \n /* Prefetching and cache-optimizations related parameters.  Default values are\n@@ -726,35 +726,35 @@ DEFPARAM (PARAM_MAX_DSE_ACTIVE_LOCAL_STORES,\n \n DEFPARAM (PARAM_PREFETCH_LATENCY,\n \t \"prefetch-latency\",\n-\t \"The number of insns executed before prefetch is completed\",\n+\t \"The number of insns executed before prefetch is completed.\",\n \t 200, 0, 0)\n \n /* The number of prefetches that can run at the same time.  */\n \n DEFPARAM (PARAM_SIMULTANEOUS_PREFETCHES,\n \t  \"simultaneous-prefetches\",\n-\t  \"The number of prefetches that can run at the same time\",\n+\t  \"The number of prefetches that can run at the same time.\",\n \t  3, 0, 0)\n \n /* The size of L1 cache in kB.  */\n \n DEFPARAM (PARAM_L1_CACHE_SIZE,\n \t  \"l1-cache-size\",\n-\t  \"The size of L1 cache\",\n+\t  \"The size of L1 cache.\",\n \t  64, 0, 0)\n \n /* The size of L1 cache line in bytes.  */\n \n DEFPARAM (PARAM_L1_CACHE_LINE_SIZE,\n \t  \"l1-cache-line-size\",\n-\t  \"The size of L1 cache line\",\n+\t  \"The size of L1 cache line.\",\n \t  32, 0, 0)\n \n /* The size of L2 cache in kB.  */\n \n DEFPARAM (PARAM_L2_CACHE_SIZE,\n \t  \"l2-cache-size\",\n-\t  \"The size of L2 cache\",\n+\t  \"The size of L2 cache.\",\n \t  512, 0, 0)\n \n /* Whether we should use canonical types rather than deep \"structural\"\n@@ -765,12 +765,12 @@ DEFPARAM (PARAM_L2_CACHE_SIZE,\n \n DEFPARAM (PARAM_USE_CANONICAL_TYPES,\n \t  \"use-canonical-types\",\n-\t  \"Whether to use canonical types\",\n+\t  \"Whether to use canonical types.\",\n \t  1, 0, 1)\n \n DEFPARAM (PARAM_MAX_PARTIAL_ANTIC_LENGTH,\n \t  \"max-partial-antic-length\",\n-\t  \"Maximum length of partial antic set when performing tree pre optimization\",\n+\t  \"Maximum length of partial antic set when performing tree pre optimization.\",\n \t  100, 0, 0)\n \n /* The following is used as a stop-gap limit for cases where really huge\n@@ -780,7 +780,7 @@ DEFPARAM (PARAM_MAX_PARTIAL_ANTIC_LENGTH,\n \n DEFPARAM (PARAM_SCCVN_MAX_SCC_SIZE,\n \t  \"sccvn-max-scc-size\",\n-\t  \"Maximum size of a SCC before SCCVN stops processing a function\",\n+\t  \"Maximum size of a SCC before SCCVN stops processing a function.\",\n \t  10000, 10, 0)\n \n /* The following is used as a stop-gap limit for cases where really huge\n@@ -791,32 +791,32 @@ DEFPARAM (PARAM_SCCVN_MAX_SCC_SIZE,\n \n DEFPARAM (PARAM_SCCVN_MAX_ALIAS_QUERIES_PER_ACCESS,\n \t  \"sccvn-max-alias-queries-per-access\",\n-\t  \"Maximum number of disambiguations to perform per memory access\",\n+\t  \"Maximum number of disambiguations to perform per memory access.\",\n \t  1000, 0, 0)\n \n DEFPARAM (PARAM_IRA_MAX_LOOPS_NUM,\n \t  \"ira-max-loops-num\",\n-\t  \"Max loops number for regional RA\",\n+\t  \"Max loops number for regional RA.\",\n \t  100, 0, 0)\n \n DEFPARAM (PARAM_IRA_MAX_CONFLICT_TABLE_SIZE,\n \t  \"ira-max-conflict-table-size\",\n-\t  \"Max size of conflict table in MB\",\n+\t  \"Max size of conflict table in MB.\",\n \t  1000, 0, 0)\n \n DEFPARAM (PARAM_IRA_LOOP_RESERVED_REGS,\n \t  \"ira-loop-reserved-regs\",\n-\t  \"The number of registers in each class kept unused by loop invariant motion\",\n+\t  \"The number of registers in each class kept unused by loop invariant motion.\",\n \t  2, 0, 0)\n \n DEFPARAM (PARAM_LRA_MAX_CONSIDERED_RELOAD_PSEUDOS,\n \t  \"lra-max-considered-reload-pseudos\",\n-\t  \"The max number of reload pseudos which are considered during spilling a non-reload pseudo\",\n+\t  \"The max number of reload pseudos which are considered during spilling a non-reload pseudo.\",\n \t  500, 0, 0)\n \n DEFPARAM (PARAM_LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF,\n \t  \"lra-inheritance-ebb-probability-cutoff\",\n-\t  \"Minimal fall-through edge probability in percentage used to add BB to inheritance EBB in LRA\",\n+\t  \"Minimal fall-through edge probability in percentage used to add BB to inheritance EBB in LRA.\",\n \t  40, 0, 100)\n \n /* Switch initialization conversion will refuse to create arrays that are\n@@ -825,42 +825,42 @@ DEFPARAM (PARAM_LRA_INHERITANCE_EBB_PROBABILITY_CUTOFF,\n DEFPARAM (PARAM_SWITCH_CONVERSION_BRANCH_RATIO,\n \t  \"switch-conversion-max-branch-ratio\",\n \t  \"The maximum ratio between array size and switch branches for \"\n-\t  \"a switch conversion to take place\",\n+\t  \"a switch conversion to take place.\",\n \t  8, 1, 0)\n \n /* Size of tiles when doing loop blocking.  */\n \n DEFPARAM (PARAM_LOOP_BLOCK_TILE_SIZE,\n \t  \"loop-block-tile-size\",\n-\t  \"size of tiles for loop blocking\",\n+\t  \"size of tiles for loop blocking.\",\n \t  51, 0, 0)\n \n /* Maximal number of parameters that we allow in a SCoP.  */\n \n DEFPARAM (PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS,\n \t  \"graphite-max-nb-scop-params\",\n-\t  \"maximum number of parameters in a SCoP\",\n+\t  \"maximum number of parameters in a SCoP.\",\n \t  7, 0, 0)\n \n /* Maximal number of basic blocks in the functions analyzed by Graphite.  */\n \n DEFPARAM (PARAM_GRAPHITE_MAX_BBS_PER_FUNCTION,\n \t  \"graphite-max-bbs-per-function\",\n-\t  \"maximum number of basic blocks per function to be analyzed by Graphite\",\n+\t  \"maximum number of basic blocks per function to be analyzed by Graphite.\",\n \t  100, 0, 0)\n \n /* Maximal number of array references in a scop.  */\n \n DEFPARAM (PARAM_GRAPHITE_MAX_ARRAYS_PER_SCOP,\n \t  \"graphite-max-arrays-per-scop\",\n-\t  \"maximum number of arrays per scop\",\n+\t  \"maximum number of arrays per scop.\",\n \t  100, 0, 0)\n \n /* Maximal number of basic blocks in the functions analyzed by Graphite.  */\n \n DEFPARAM (PARAM_GRAPHITE_MIN_LOOPS_PER_FUNCTION,\n \t  \"graphite-min-loops-per-function\",\n-\t  \"minimal number of loops per function to be analyzed by Graphite\",\n+\t  \"minimal number of loops per function to be analyzed by Graphite.\",\n \t  2, 0, 0)\n \n DEFPARAM (PARAM_MAX_ISL_OPERATIONS,\n@@ -871,176 +871,176 @@ DEFPARAM (PARAM_MAX_ISL_OPERATIONS,\n /* Avoid data dependence analysis on very large loops.  */\n DEFPARAM (PARAM_LOOP_MAX_DATAREFS_FOR_DATADEPS,\n \t  \"loop-max-datarefs-for-datadeps\",\n-\t  \"Maximum number of datarefs in loop for building loop data dependencies\",\n+\t  \"Maximum number of datarefs in loop for building loop data dependencies.\",\n \t  1000, 0, 0)\n \n /* Avoid doing loop invariant motion on very large loops.  */\n \n DEFPARAM (PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP,\n \t  \"loop-invariant-max-bbs-in-loop\",\n-\t  \"Max basic blocks number in loop for loop invariant motion\",\n+\t  \"Max basic blocks number in loop for loop invariant motion.\",\n \t  10000, 0, 0)\n \n /* When the parameter is 1, use the internal function id\n    to look up for profile data. Otherwise, use a more stable\n    external id based on assembler name and source location. */\n DEFPARAM (PARAM_PROFILE_FUNC_INTERNAL_ID,\n          \"profile-func-internal-id\",\n-         \"use internal function id in profile lookup\",\n+         \"use internal function id in profile lookup.\",\n           0, 0, 1)\n \n /* When the parameter is 1, track the most frequent N target\n    addresses in indirect-call profile. This disables\n    indirect_call_profiler_v2 which tracks single target.  */\n DEFPARAM (PARAM_INDIR_CALL_TOPN_PROFILE,\n          \"indir-call-topn-profile\",\n-         \"track topn target addresses in indirect-call profile\",\n+         \"track topn target addresses in indirect-call profile.\",\n           0, 0, 1)\n \n /* Avoid SLP vectorization of large basic blocks.  */\n DEFPARAM (PARAM_SLP_MAX_INSNS_IN_BB,\n           \"slp-max-insns-in-bb\",\n-          \"Maximum number of instructions in basic block to be considered for SLP vectorization\",\n+          \"Maximum number of instructions in basic block to be considered for SLP vectorization.\",\n           1000, 0, 0)\n \n DEFPARAM (PARAM_MIN_INSN_TO_PREFETCH_RATIO,\n \t  \"min-insn-to-prefetch-ratio\",\n \t  \"Min. ratio of insns to prefetches to enable prefetching for \"\n-          \"a loop with an unknown trip count\",\n+          \"a loop with an unknown trip count.\",\n \t  9, 0, 0)\n \n DEFPARAM (PARAM_PREFETCH_MIN_INSN_TO_MEM_RATIO,\n \t  \"prefetch-min-insn-to-mem-ratio\",\n-\t  \"Min. ratio of insns to mem ops to enable prefetching in a loop\",\n+\t  \"Min. ratio of insns to mem ops to enable prefetching in a loop.\",\n \t  3, 0, 0)\n \n /* Set maximum hash table size for var tracking.  */\n \n DEFPARAM (PARAM_MAX_VARTRACK_SIZE,\n \t  \"max-vartrack-size\",\n-\t  \"Max. size of var tracking hash tables\",\n+\t  \"Max. size of var tracking hash tables.\",\n \t  50000000, 0, 0)\n \n /* Set maximum recursion depth for var tracking expression expansion\n    and resolution.  */\n \n DEFPARAM (PARAM_MAX_VARTRACK_EXPR_DEPTH,\n \t  \"max-vartrack-expr-depth\",\n-\t  \"Max. recursion depth for expanding var tracking expressions\",\n+\t  \"Max. recursion depth for expanding var tracking expressions.\",\n \t  12, 0, 0)\n \n /* Set maximum length of value location list for which var tracking\n    should add reverse operations.  */\n \n DEFPARAM (PARAM_MAX_VARTRACK_REVERSE_OP_SIZE,\n \t  \"max-vartrack-reverse-op-size\",\n-\t  \"Max. size of loc list for which reverse ops should be added\",\n+\t  \"Max. size of loc list for which reverse ops should be added.\",\n \t  50, 0, 0)\n \n /* Set minimum insn uid for non-debug insns.  */\n \n DEFPARAM (PARAM_MIN_NONDEBUG_INSN_UID,\n \t  \"min-nondebug-insn-uid\",\n-\t  \"The minimum UID to be used for a nondebug insn\",\n+\t  \"The minimum UID to be used for a nondebug insn.\",\n \t  0, 1, 0)\n \n DEFPARAM (PARAM_IPA_SRA_PTR_GROWTH_FACTOR,\n \t  \"ipa-sra-ptr-growth-factor\",\n \t  \"Maximum allowed growth of size of new parameters ipa-sra replaces \"\n-\t  \"a pointer to an aggregate with\",\n+\t  \"a pointer to an aggregate with.\",\n \t  2, 0, 0)\n \n DEFPARAM (PARAM_TM_MAX_AGGREGATE_SIZE,\n \t  \"tm-max-aggregate-size\",\n \t  \"Size in bytes after which thread-local aggregates should be \"\n \t  \"instrumented with the logging functions instead of save/restore \"\n-\t  \"pairs\",\n+\t  \"pairs.\",\n \t  9, 0, 0)\n \n DEFPARAM (PARAM_SRA_MAX_SCALARIZATION_SIZE_SPEED,\n \t  \"sra-max-scalarization-size-Ospeed\",\n \t  \"Maximum size, in storage units, of an aggregate which should be \"\n-\t  \"considered for scalarization when compiling for speed\",\n+\t  \"considered for scalarization when compiling for speed.\",\n \t  0, 0, 0)\n \n DEFPARAM (PARAM_SRA_MAX_SCALARIZATION_SIZE_SIZE,\n \t  \"sra-max-scalarization-size-Osize\",\n \t  \"Maximum size, in storage units, of an aggregate which should be \"\n-\t  \"considered for scalarization when compiling for size\",\n+\t  \"considered for scalarization when compiling for size.\",\n \t  0, 0, 0)\n \n DEFPARAM (PARAM_IPA_CP_VALUE_LIST_SIZE,\n \t  \"ipa-cp-value-list-size\",\n \t  \"Maximum size of a list of values associated with each parameter for \"\n-\t  \"interprocedural constant propagation\",\n+\t  \"interprocedural constant propagation.\",\n \t  8, 0, 0)\n \n DEFPARAM (PARAM_IPA_CP_EVAL_THRESHOLD,\n \t  \"ipa-cp-eval-threshold\",\n \t  \"Threshold ipa-cp opportunity evaluation that is still considered \"\n-\t  \"beneficial to clone.\",\n+\t  \"beneficial to clone..\",\n \t  500, 0, 0)\n \n DEFPARAM (PARAM_IPA_CP_RECURSION_PENALTY,\n \t  \"ipa-cp-recursion-penalty\",\n \t  \"Percentage penalty the recursive functions will receive when they \"\n-\t  \"are evaluated for cloning.\",\n+\t  \"are evaluated for cloning..\",\n \t  40, 0, 100)\n \n DEFPARAM (PARAM_IPA_CP_SINGLE_CALL_PENALTY,\n \t  \"ipa-cp-single-call-penalty\",\n \t  \"Percentage penalty functions containg a single call to another \"\n-\t  \"function will receive when they are evaluated for cloning.\",\n+\t  \"function will receive when they are evaluated for cloning..\",\n \t  15, 0, 100)\n \n DEFPARAM (PARAM_IPA_MAX_AGG_ITEMS,\n \t  \"ipa-max-agg-items\",\n \t  \"Maximum number of aggregate content items for a parameter in \"\n-\t  \"jump functions and lattices\",\n+\t  \"jump functions and lattices.\",\n \t  16, 0, 0)\n \n DEFPARAM (PARAM_IPA_CP_LOOP_HINT_BONUS,\n \t  \"ipa-cp-loop-hint-bonus\",\n \t  \"Compile-time bonus IPA-CP assigns to candidates which make loop \"\n-\t  \"bounds or strides known.\",\n+\t  \"bounds or strides known..\",\n \t  64, 0, 0)\n \n DEFPARAM (PARAM_IPA_CP_ARRAY_INDEX_HINT_BONUS,\n \t  \"ipa-cp-array-index-hint-bonus\",\n \t  \"Compile-time bonus IPA-CP assigns to candidates which make an array \"\n-\t  \"index known.\",\n+\t  \"index known..\",\n \t  48, 0, 0)\n \n DEFPARAM (PARAM_IPA_MAX_AA_STEPS,\n \t  \"ipa-max-aa-steps\",\n \t  \"Maximum number of statements that will be visited by IPA formal \"\n-\t  \"parameter analysis based on alias analysis in any given function\",\n+\t  \"parameter analysis based on alias analysis in any given function.\",\n \t  25000, 0, 0)\n \n /* WHOPR partitioning configuration.  */\n \n DEFPARAM (PARAM_LTO_PARTITIONS,\n \t  \"lto-partitions\",\n-\t  \"Number of partitions the program should be split to\",\n+\t  \"Number of partitions the program should be split to.\",\n \t  32, 1, 0)\n \n DEFPARAM (MIN_PARTITION_SIZE,\n \t  \"lto-min-partition\",\n-\t  \"Minimal size of a partition for LTO (in estimated instructions)\",\n+\t  \"Minimal size of a partition for LTO (in estimated instructions).\",\n \t  1000, 0, 0)\n \n /* Diagnostic parameters.  */\n \n DEFPARAM (CXX_MAX_NAMESPACES_FOR_DIAGNOSTIC_HELP,\n \t  \"cxx-max-namespaces-for-diagnostic-help\",\n \t  \"Maximum number of namespaces to search for alternatives when \"\n-\t  \"name lookup fails\",\n+\t  \"name lookup fails.\",\n \t  1000, 0, 0)\n \n /* Maximum number of conditional store pairs that can be sunk.  */\n DEFPARAM (PARAM_MAX_STORES_TO_SINK,\n           \"max-stores-to-sink\",\n-          \"Maximum number of conditional store pairs that can be sunk\",\n+          \"Maximum number of conditional store pairs that can be sunk.\",\n           2, 0, 0)\n \n /* Override CASE_VALUES_THRESHOLD of when to switch from doing switch\n@@ -1050,132 +1050,132 @@ DEFPARAM (PARAM_CASE_VALUES_THRESHOLD,\n           \"case-values-threshold\",\n           \"The smallest number of different values for which it is best to \"\n \t  \"use a jump-table instead of a tree of conditional branches, \"\n-\t  \"if 0, use the default for the machine\",\n+\t  \"if 0, use the default for the machine.\",\n           0, 0, 0)\n \n /* Data race flags for C++0x memory model compliance.  */\n DEFPARAM (PARAM_ALLOW_STORE_DATA_RACES,\n \t  \"allow-store-data-races\",\n-\t  \"Allow new data races on stores to be introduced\",\n+\t  \"Allow new data races on stores to be introduced.\",\n \t  0, 0, 1)\n \n /* Reassociation width to be used by tree reassoc optimization.  */\n DEFPARAM (PARAM_TREE_REASSOC_WIDTH,\n \t  \"tree-reassoc-width\",\n \t  \"Set the maximum number of instructions executed in parallel in \"\n-\t  \"reassociated tree. If 0, use the target dependent heuristic.\",\n+\t  \"reassociated tree. If 0, use the target dependent heuristic..\",\n \t  0, 0, 0)\n \n DEFPARAM (PARAM_MAX_TAIL_MERGE_COMPARISONS,\n           \"max-tail-merge-comparisons\",\n-          \"Maximum amount of similar bbs to compare a bb with\",\n+          \"Maximum amount of similar bbs to compare a bb with.\",\n           10, 0, 0)\n \n DEFPARAM (PARAM_MAX_TAIL_MERGE_ITERATIONS,\n           \"max-tail-merge-iterations\",\n-          \"Maximum amount of iterations of the pass over a function\",\n+          \"Maximum amount of iterations of the pass over a function.\",\n           2, 0, 0)\n \n /* Maximum number of strings for which strlen optimization pass will\n    track string lenths.  */\n DEFPARAM (PARAM_MAX_TRACKED_STRLENS,\n \t  \"max-tracked-strlens\",\n \t  \"Maximum number of strings for which strlen optimization pass will \"\n-\t  \"track string lengths\",\n+\t  \"track string lengths.\",\n \t  10000, 0, 0)\n \n /* Keep this in sync with the sched_pressure_algorithm enum.  */\n DEFPARAM (PARAM_SCHED_PRESSURE_ALGORITHM,\n \t  \"sched-pressure-algorithm\",\n-\t  \"Which -fsched-pressure algorithm to apply\",\n+\t  \"Which -fsched-pressure algorithm to apply.\",\n \t  1, 1, 2)\n \n /* Maximum length of candidate scans in straight-line strength reduction.  */\n DEFPARAM (PARAM_MAX_SLSR_CANDIDATE_SCAN,\n \t  \"max-slsr-cand-scan\",\n \t  \"Maximum length of candidate scans for straight-line \"\n-\t  \"strength reduction\",\n+\t  \"strength reduction.\",\n \t  50, 1, 999999)\n \n DEFPARAM (PARAM_ASAN_STACK,\n          \"asan-stack\",\n-         \"Enable asan stack protection\",\n+         \"Enable asan stack protection.\",\n          1, 0, 1)\n \n DEFPARAM (PARAM_ASAN_GLOBALS,\n          \"asan-globals\",\n-         \"Enable asan globals protection\",\n+         \"Enable asan globals protection.\",\n          1, 0, 1)\n \n DEFPARAM (PARAM_ASAN_INSTRUMENT_WRITES,\n          \"asan-instrument-writes\",\n-         \"Enable asan store operations protection\",\n+         \"Enable asan store operations protection.\",\n          1, 0, 1)\n \n DEFPARAM (PARAM_ASAN_INSTRUMENT_READS,\n          \"asan-instrument-reads\",\n-         \"Enable asan load operations protection\",\n+         \"Enable asan load operations protection.\",\n          1, 0, 1)\n \n DEFPARAM (PARAM_ASAN_MEMINTRIN,\n          \"asan-memintrin\",\n-         \"Enable asan builtin functions protection\",\n+         \"Enable asan builtin functions protection.\",\n          1, 0, 1)\n \n DEFPARAM (PARAM_ASAN_USE_AFTER_RETURN,\n          \"asan-use-after-return\",\n-         \"Enable asan detection of use-after-return bugs\",\n+         \"Enable asan detection of use-after-return bugs.\",\n          1, 0, 1)\n \n DEFPARAM (PARAM_ASAN_INSTRUMENTATION_WITH_CALL_THRESHOLD,\n          \"asan-instrumentation-with-call-threshold\",\n          \"Use callbacks instead of inline code if number of accesses \"\n-         \"in function becomes greater or equal to this number\",\n+         \"in function becomes greater or equal to this number.\",\n          7000, 0, INT_MAX)\n \n DEFPARAM (PARAM_UNINIT_CONTROL_DEP_ATTEMPTS,\n \t  \"uninit-control-dep-attempts\",\n \t  \"Maximum number of nested calls to search for control dependencies \"\n-\t  \"during uninitialized variable analysis\",\n+\t  \"during uninitialized variable analysis.\",\n \t  1000, 1, 0)\n \n DEFPARAM (PARAM_CHKP_MAX_CTOR_SIZE,\n \t  \"chkp-max-ctor-size\",\n \t  \"Maximum number of statements to be included into a single static \"\n-\t  \"constructor generated by Pointer Bounds Checker\",\n+\t  \"constructor generated by Pointer Bounds Checker.\",\n \t  5000, 100, 0)\n \n DEFPARAM (PARAM_MAX_FSM_THREAD_PATH_INSNS,\n \t  \"max-fsm-thread-path-insns\",\n-\t  \"Maximum number of instructions to copy when duplicating blocks on a finite state automaton jump thread path\",\n+\t  \"Maximum number of instructions to copy when duplicating blocks on a finite state automaton jump thread path.\",\n \t  100, 1, 999999)\n \n DEFPARAM (PARAM_MAX_FSM_THREAD_LENGTH,\n \t  \"max-fsm-thread-length\",\n-\t  \"Maximum number of basic blocks on a finite state automaton jump thread path\",\n+\t  \"Maximum number of basic blocks on a finite state automaton jump thread path.\",\n \t  10, 1, 999999)\n \n DEFPARAM (PARAM_MAX_FSM_THREAD_PATHS,\n \t  \"max-fsm-thread-paths\",\n-\t  \"Maximum number of new jump thread paths to create for a finite state automaton\",\n+\t  \"Maximum number of new jump thread paths to create for a finite state automaton.\",\n \t  50, 1, 999999)\n \n DEFPARAM (PARAM_PARLOOPS_CHUNK_SIZE,\n \t  \"parloops-chunk-size\",\n-\t  \"Chunk size of omp schedule for loops parallelized by parloops\",\n+\t  \"Chunk size of omp schedule for loops parallelized by parloops.\",\n \t  0, 0, 0)\n \n DEFPARAMENUM5 (PARAM_PARLOOPS_SCHEDULE,\n \t       \"parloops-schedule\",\n \t       \"Schedule type of omp schedule for loops parallelized by \"\n-\t       \"parloops (static, dynamic, guided, auto, runtime)\",\n+\t       \"parloops (static, dynamic, guided, auto, runtime).\",\n \t       static,\n \t       static, dynamic, guided, auto, runtime)\n \n DEFPARAM (PARAM_MAX_SSA_NAME_QUERY_DEPTH,\n \t  \"max-ssa-name-query-depth\",\n \t  \"Maximum recursion depth allowed when querying a property of an\"\n-\t  \" SSA name\",\n+\t  \" SSA name.\",\n \t  2, 1, 0)\n /*\n "}, {"sha": "1c31c22bfeb7856e3578afbc9cc1466e83e0fe56", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -1,3 +1,9 @@\n+2015-10-21  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR driver/68043\n+\t* gcc.misc-tests/help.exp: Adjust.\n+\t* lib/options.exp (check_for_options): Add detail to output.\n+\n 2015-10-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/67939"}, {"sha": "be36c85758049c7a70f91e550855f93a398e5e12", "filename": "gcc/testsuite/gcc.misc-tests/help.exp", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fhelp.exp?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -31,7 +31,7 @@ gcc_parallel_test_enable 0\n \n # Document --version.  Ideally, there should be no undocumented switches\n # in --help.\n-check_for_options c \"--help\" \"--version\" \"This switch lacks documentation\" \"\"\n+check_for_options c \"--help\" \"--version\" \"This option lacks documentation\" \"\"\n \n # Output from different subprocesses should not be intermingled\n # (we check for some patterns that could be seen with a missing\n@@ -43,7 +43,7 @@ check_for_options c \"-v --help\" \"\" {\n } \"\"\n \n # There are still undocumented switches in -v --help.\n-check_for_options c \"-v --help\" \"\" \"This switch lacks documentation\" \"xfail\"\n+check_for_options c \"-v --help\" \"\" \"This option lacks documentation\" \"xfail\"\n \n # Check whether multiline conversion in optc-gen is broken.\n check_for_options c \"-v --help\" \"\" {are likely to\\n  -std} \"\"\n@@ -54,10 +54,10 @@ check_for_options c \"--help=params\" \"maximum number of\" \"-Wunsafe-loop-optimizat\n check_for_options c \"--help=C\" \"-ansi\" \"-gnatO\" \"\"\n check_for_options c {--help=C++} {-std=c\\+\\+} \"-gnatO\" \"\"\n check_for_options c \"--help=common\" \"-dumpbase\" \"-gnatO\" \"\"\n-check_for_options c \"--help=undocumented\" \"This switch lacks documentation\" \"\" \"\"\n+check_for_options c \"--help=undocumented\" \"This option lacks documentation\" \"\" \"\"\n \n # Undocumented flags are not yet consistently marked as such.\n-check_for_options c \"--help=^undocumented\" \"-Wall\" \"This switch lacks documentation\" \"xfail\"\n+check_for_options c \"--help=^undocumented\" \"-Wall\" \"This option lacks documentation\" \"xfail\"\n \n # Try some --help=* examples from the manual.\n check_for_options c \"--help=target,undocumented\" \"\" \"\" \"\"\n@@ -78,14 +78,27 @@ maximum number of\n } \"\" \"\"\n \n # Ensure PR 37805 is fixed.\n-check_for_options c \"--help=joined\" \"Wformat=\" \"-fstrict-prototype\" \"\"\n-check_for_options c \"--help=separate\" \"-MF\" \"-fstrict-prototype\" \"\"\n-check_for_options c \"--help=warnings,joined\" \"Wformat=\" \"Wtrigraphs\" \"\"\n-check_for_options c \"--help=warnings,^joined\" \"Wtrigraphs\" \"Wformat=\" \"\"\n-check_for_options c \"--help=joined,separate\" \"-I\" \"\" \"\"\n-check_for_options c \"--help=^joined,separate\" \"--param \" \"\" \"\"\n-check_for_options c \"--help=joined,^separate\" \"--help=\" \"\" \"\"\n+# Specify patterns (arguments 3 and later) that match option names\n+# at the beginning of the line and not when they are referenced by\n+# some other options later on.\n+# The (?w) Tcl embedded option tells the Tcl regexp  parser to treat\n+# the '^' character as an anchor.\n+check_for_options c \"--help=joined\" \\\n+    \"(?w)^ *-Wformat=\" \"(?w)^ *-fstrict-prototype\" \"\"\n+check_for_options c \"--help=separate\" \\\n+    \"(?w)^ *-MF\" \"(?w)^ *-fstrict-prototype\" \"\"\n+check_for_options c \"--help=warnings,joined\" \\\n+    \"(?w)^ *-Wformat=\" \"(?w)^ *-Wtrigraphs\" \"\"\n+check_for_options c \"--help=warnings,^joined\" \\\n+    \"(?w)^ *-Wtrigraphs\" \"(?w)^ *-Wformat=\" \"\"\n+check_for_options c \"--help=joined,separate\" \\\n+    \"(?w)^ *-I\" \"\" \"\"\n+check_for_options c \"--help=^joined,separate\" \\\n+    \"(?w)^ *--param \" \"\" \"\"\n+check_for_options c \"--help=joined,^separate\" \\\n+    \"(?w)^ *--help=\" \"\" \"\"\n check_for_options c \"--help=joined,undocumented\" \"\" \"\" \"\"\n+\n # Listing only excludes gives empty results.\n check_for_options c \"--help=^joined,^separate\" \"\" \"\" \"\"\n "}, {"sha": "d1dacdaa32bcc318d7d7c85a10dff4ef6969721e", "filename": "gcc/testsuite/lib/options.exp", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Ftestsuite%2Flib%2Foptions.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7b2e1845f0c20da4ed6462161f58f706a587d44/gcc%2Ftestsuite%2Flib%2Foptions.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Foptions.exp?ref=a7b2e1845f0c20da4ed6462161f58f706a587d44", "patch": "@@ -47,28 +47,31 @@ proc check_for_options {language gcc_options compiler_patterns compiler_non_patt\n     set gcc_output [gcc_target_compile $filename.c $filename.x executable $gcc_options]\n     remote_file build delete $filename.c $filename.x $filename.gcno\n \n+    # Verify that COMPILER_PATTERRNS appear in gcc output.\n     foreach pattern [split $compiler_patterns \"\\n\"] {\n \tif {$pattern != \"\"} {\n \t    if {[regexp -- \"$pattern\" $gcc_output]} {\n \t\tpass \"$test $pattern\"\n \t    } else {\n \t\tif {$expected_failure != \"\"} {\n-\t\t    xfail \"$test $pattern\"\n+\t\t    xfail \"$test \\\"$pattern\\\" present in output\"\n \t\t} else {\n-\t\t    fail \"$test $pattern\"\n+\t\t    fail \"$test \\\"$pattern\\\" present in output\"\n \t\t}\n \t    }\n \t}\n     }\n+\n+    # Verify that COMPILER_NON_PATTERRNS do not appear in gcc output.\n     foreach pattern [split $compiler_non_patterns \"\\n\"] {\n \tif {$pattern != \"\"} {\n \t    if {![regexp -- \"$pattern\" $gcc_output]} {\n \t\tpass \"$test $pattern\"\n \t    } else {\n \t\tif {$expected_failure != \"\"} {\n-\t\t    xfail \"$test $pattern\"\n+\t\t    xfail \"$test \\\"$pattern\\\" absent from output\"\n \t\t} else {\n-\t\t    fail \"$test $pattern\"\n+\t\t    fail \"$test \\\"$pattern\\\" absent from output\"\n \t\t}\n \t    }\n \t}"}]}