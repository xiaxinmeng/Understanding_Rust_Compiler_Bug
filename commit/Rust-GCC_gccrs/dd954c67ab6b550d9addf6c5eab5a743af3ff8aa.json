{"sha": "dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ5NTRjNjdhYjZiNTUwZDlhZGRmNmM1ZWFiNWE3NDNhZjNmZjhhYQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2017-10-02T11:56:39Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2017-10-02T11:56:39Z"}, "message": "libbacktrace: Support the case that clock_gettime is in librt\n\n\tlibbacktrace/\n\tPR other/67165\n\t* Makefile.am: Append the content of clock_gettime_link to\n\tztest_LDADD.\n\t* configure.ac: Test for the case that clock_gettime is in librt.\n\t* Makefile.in: Regenerate.\n\t* configure: Likewise.\n\nFrom-SVN: r253345", "tree": {"sha": "10a1c1e4ae2c22fbb52538acfbe992b8abfb1aa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10a1c1e4ae2c22fbb52538acfbe992b8abfb1aa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dbc31f20d30615404c2994f2d0bb9876cd75585a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbc31f20d30615404c2994f2d0bb9876cd75585a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbc31f20d30615404c2994f2d0bb9876cd75585a"}], "stats": {"total": 82, "additions": 78, "deletions": 4}, "files": [{"sha": "fde5a1bf6b53dfa0680b8009d8acb78961749ece", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "patch": "@@ -1,5 +1,12 @@\n 2017-10-02  Thomas Schwinge  <thomas@codesourcery.com>\n \n+\tPR other/67165\n+\t* Makefile.am: Append the content of clock_gettime_link to\n+\tztest_LDADD.\n+\t* configure.ac: Test for the case that clock_gettime is in librt.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Likewise.\n+\n \tPR other/67165\n \t* configure.ac: Check for clock_gettime.\n \t* config.h.in: Regenerate."}, {"sha": "b4f4df4ff02f628f6592764dd95d006e66c383c5", "filename": "libbacktrace/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.am?ref=dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "patch": "@@ -108,6 +108,7 @@ ztest_LDADD = libbacktrace.la\n if HAVE_ZLIB\n ztest_LDADD += -lz\n endif\n+ztest_LDADD += $(clock_gettime_link)\n \n check_PROGRAMS += ztest\n "}, {"sha": "30a1442454a162df8cff74f720d775ab23bb1938", "filename": "libbacktrace/Makefile.in", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FMakefile.in?ref=dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "patch": "@@ -165,7 +165,7 @@ ttest_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n @NATIVE_TRUE@\tztest-testlib.$(OBJEXT)\n ztest_OBJECTS = $(am_ztest_OBJECTS)\n @NATIVE_TRUE@ztest_DEPENDENCIES = libbacktrace.la \\\n-@NATIVE_TRUE@\t$(am__DEPENDENCIES_1)\n+@NATIVE_TRUE@\t$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)\n ztest_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=link $(CCLD) $(ztest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\\n \t$(LDFLAGS) -o $@\n@@ -287,6 +287,7 @@ build_cpu = @build_cpu@\n build_os = @build_os@\n build_vendor = @build_vendor@\n builddir = @builddir@\n+clock_gettime_link = @clock_gettime_link@\n datadir = @datadir@\n datarootdir = @datarootdir@\n docdir = @docdir@\n@@ -383,7 +384,8 @@ TESTS = $(check_PROGRAMS) $(am__append_4)\n @NATIVE_TRUE@stest_LDADD = libbacktrace.la\n @NATIVE_TRUE@ztest_SOURCES = ztest.c testlib.c\n @NATIVE_TRUE@ztest_CFLAGS = -DSRCDIR=\\\"$(srcdir)\\\"\n-@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_2)\n+@NATIVE_TRUE@ztest_LDADD = libbacktrace.la $(am__append_2) \\\n+@NATIVE_TRUE@\t$(clock_gettime_link)\n @NATIVE_TRUE@edtest_SOURCES = edtest.c edtest2_build.c testlib.c\n @NATIVE_TRUE@edtest_LDADD = libbacktrace.la\n @HAVE_PTHREAD_TRUE@@NATIVE_TRUE@ttest_SOURCES = ttest.c testlib.c"}, {"sha": "57ca5eb22a8d066f6aebeb06caaf9b69b1d39b9f", "filename": "libbacktrace/configure", "status": "modified", "additions": 54, "deletions": 2, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure?ref=dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "patch": "@@ -614,6 +614,7 @@ HAVE_ZLIB_TRUE\n HAVE_PTHREAD_FALSE\n HAVE_PTHREAD_TRUE\n PTHREAD_CFLAGS\n+clock_gettime_link\n BACKTRACE_USES_MALLOC\n ALLOC_FILE\n VIEW_FILE\n@@ -11145,7 +11146,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11148 \"configure\"\n+#line 11149 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11251,7 +11252,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11254 \"configure\"\n+#line 11255 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -12759,6 +12760,57 @@ _ACEOF\n fi\n done\n \n+clock_gettime_link=\n+# At least for glibc, clock_gettime is in librt.  But don't\n+# pull that in if it still doesn't give us the function we want.  This\n+# test is copied from libgomp, and modified to not link in -lrt as\n+# we're using this for test timing only.\n+if test \"$ac_cv_func_clock_gettime\" = no; then\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for clock_gettime in -lrt\" >&5\n+$as_echo_n \"checking for clock_gettime in -lrt... \" >&6; }\n+if test \"${ac_cv_lib_rt_clock_gettime+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lrt  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char clock_gettime ();\n+int\n+main ()\n+{\n+return clock_gettime ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_rt_clock_gettime=yes\n+else\n+  ac_cv_lib_rt_clock_gettime=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_clock_gettime\" >&5\n+$as_echo \"$ac_cv_lib_rt_clock_gettime\" >&6; }\n+if test \"x$ac_cv_lib_rt_clock_gettime\" = x\"\"yes; then :\n+  clock_gettime_link=-lrt\n+\n+$as_echo \"#define HAVE_CLOCK_GETTIME 1\" >>confdefs.h\n+\n+fi\n+\n+fi\n+\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -pthread is supported\" >&5\n $as_echo_n \"checking whether -pthread is supported... \" >&6; }"}, {"sha": "ad5368a9c0428ad21d55bb5e87c536ba752536e5", "filename": "libbacktrace/configure.ac", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd954c67ab6b550d9addf6c5eab5a743af3ff8aa/libbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fconfigure.ac?ref=dd954c67ab6b550d9addf6c5eab5a743af3ff8aa", "patch": "@@ -390,6 +390,18 @@ fi\n \n # Check for the clock_gettime function.\n AC_CHECK_FUNCS(clock_gettime)\n+clock_gettime_link=\n+# At least for glibc, clock_gettime is in librt.  But don't\n+# pull that in if it still doesn't give us the function we want.  This\n+# test is copied from libgomp, and modified to not link in -lrt as\n+# we're using this for test timing only.\n+if test \"$ac_cv_func_clock_gettime\" = no; then\n+  AC_CHECK_LIB(rt, clock_gettime,\n+    [clock_gettime_link=-lrt\n+     AC_DEFINE(HAVE_CLOCK_GETTIME, 1,\n+\t       [Define to 1 if you have the `clock_gettime' function.])])\n+fi\n+AC_SUBST(clock_gettime_link)\n \n dnl Test whether the compiler supports the -pthread option.\n AC_CACHE_CHECK([whether -pthread is supported],"}]}