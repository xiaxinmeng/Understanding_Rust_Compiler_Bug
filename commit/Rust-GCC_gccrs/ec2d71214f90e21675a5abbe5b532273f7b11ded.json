{"sha": "ec2d71214f90e21675a5abbe5b532273f7b11ded", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMyZDcxMjE0ZjkwZTIxNjc1YTVhYmJlNWI1MzIyNzNmN2IxMWRlZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2018-03-02T09:16:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2018-03-02T09:16:50Z"}, "message": "re PR rtl-optimization/84614 (wrong code with u16->u128 extension at aarch64 -fno-split-wide-types -g3 --param=max-combine-insns=3)\n\n\tPR target/84614\n\t* rtl.h (prev_real_nondebug_insn, next_real_nondebug_insn): New\n\tprototypes.\n\t* emit-rtl.c (next_real_insn, prev_real_insn): Fix up function\n\tcomments.\n\t(next_real_nondebug_insn, prev_real_nondebug_insn): New functions.\n\t* cfgcleanup.c (try_head_merge_bb): Use prev_real_nondebug_insn\n\tinstead of a loop around prev_real_insn.\n\t* combine.c (move_deaths): Use prev_real_nondebug_insn instead of\n\tprev_real_insn.\n\n\t* gcc.dg/pr84614.c: New test.\n\nFrom-SVN: r258129", "tree": {"sha": "3d15c0641b451c63150370c5e946ac77cb1d82d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d15c0641b451c63150370c5e946ac77cb1d82d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec2d71214f90e21675a5abbe5b532273f7b11ded", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2d71214f90e21675a5abbe5b532273f7b11ded", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec2d71214f90e21675a5abbe5b532273f7b11ded", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec2d71214f90e21675a5abbe5b532273f7b11ded/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be86d201598e3b653acc6db1542b0c799c401e09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be86d201598e3b653acc6db1542b0c799c401e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be86d201598e3b653acc6db1542b0c799c401e09"}], "stats": {"total": 92, "additions": 85, "deletions": 7}, "files": [{"sha": "09cae39cc27942fad347f5cf7946f63fe35615d9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec2d71214f90e21675a5abbe5b532273f7b11ded", "patch": "@@ -1,5 +1,16 @@\n 2018-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/84614\n+\t* rtl.h (prev_real_nondebug_insn, next_real_nondebug_insn): New\n+\tprototypes.\n+\t* emit-rtl.c (next_real_insn, prev_real_insn): Fix up function\n+\tcomments.\n+\t(next_real_nondebug_insn, prev_real_nondebug_insn): New functions.\n+\t* cfgcleanup.c (try_head_merge_bb): Use prev_real_nondebug_insn\n+\tinstead of a loop around prev_real_insn.\n+\t* combine.c (move_deaths): Use prev_real_nondebug_insn instead of\n+\tprev_real_insn.\n+\n \tPR inline-asm/84625\n \t* config/i386/i386.c (ix86_print_operand): Use conditional\n \toutput_operand_lossage instead of gcc_assert if CONST_VECTOR is not"}, {"sha": "4f721537eb2f7eb6eba32425e8b3139e1b85b9d8", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=ec2d71214f90e21675a5abbe5b532273f7b11ded", "patch": "@@ -2448,9 +2448,7 @@ try_head_merge_bb (basic_block bb)\n       max_match--;\n       if (max_match == 0)\n \treturn false;\n-      do\n-\te0_last_head = prev_real_insn (e0_last_head);\n-      while (DEBUG_INSN_P (e0_last_head));\n+      e0_last_head = prev_real_nondebug_insn (e0_last_head);\n     }\n \n   if (max_match == 0)"}, {"sha": "ddea5b18fe07cf282e9a3714c87de0309d9a9faf", "filename": "gcc/combine.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=ec2d71214f90e21675a5abbe5b532273f7b11ded", "patch": "@@ -13923,7 +13923,7 @@ move_deaths (rtx x, rtx maybe_kill_insn, int from_luid, rtx_insn *to_insn,\n \t FROM_LUID and TO_INSN.  If so, find it.  This is PR83304.  */\n       if (!where_dead || DF_INSN_LUID (where_dead) >= DF_INSN_LUID (to_insn))\n \t{\n-\t  rtx_insn *insn = prev_real_insn (to_insn);\n+\t  rtx_insn *insn = prev_real_nondebug_insn (to_insn);\n \t  while (insn\n \t\t && BLOCK_FOR_INSN (insn) == BLOCK_FOR_INSN (to_insn)\n \t\t && DF_INSN_LUID (insn) >= from_luid)\n@@ -13935,7 +13935,7 @@ move_deaths (rtx x, rtx maybe_kill_insn, int from_luid, rtx_insn *to_insn,\n \t\t  break;\n \t\t}\n \n-\t      insn = prev_real_insn (insn);\n+\t      insn = prev_real_nondebug_insn (insn);\n \t    }\n \t}\n "}, {"sha": "4dce18df04190395af4268d1252ba5fa32c326b3", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=ec2d71214f90e21675a5abbe5b532273f7b11ded", "patch": "@@ -3597,7 +3597,7 @@ prev_nonnote_nondebug_insn_bb (rtx_insn *insn)\n   return insn;\n }\n \n-/* Return the next INSN, CALL_INSN or JUMP_INSN after INSN;\n+/* Return the next INSN, CALL_INSN, JUMP_INSN or DEBUG_INSN after INSN;\n    or 0, if there is none.  This routine does not look inside\n    SEQUENCEs.  */\n \n@@ -3616,7 +3616,7 @@ next_real_insn (rtx uncast_insn)\n   return insn;\n }\n \n-/* Return the last INSN, CALL_INSN or JUMP_INSN before INSN;\n+/* Return the last INSN, CALL_INSN, JUMP_INSN or DEBUG_INSN before INSN;\n    or 0, if there is none.  This routine does not look inside\n    SEQUENCEs.  */\n \n@@ -3633,6 +3633,42 @@ prev_real_insn (rtx_insn *insn)\n   return insn;\n }\n \n+/* Return the next INSN, CALL_INSN or JUMP_INSN after INSN;\n+   or 0, if there is none.  This routine does not look inside\n+   SEQUENCEs.  */\n+\n+rtx_insn *\n+next_real_nondebug_insn (rtx uncast_insn)\n+{\n+  rtx_insn *insn = safe_as_a <rtx_insn *> (uncast_insn);\n+\n+  while (insn)\n+    {\n+      insn = NEXT_INSN (insn);\n+      if (insn == 0 || NONDEBUG_INSN_P (insn))\n+\tbreak;\n+    }\n+\n+  return insn;\n+}\n+\n+/* Return the last INSN, CALL_INSN or JUMP_INSN before INSN;\n+   or 0, if there is none.  This routine does not look inside\n+   SEQUENCEs.  */\n+\n+rtx_insn *\n+prev_real_nondebug_insn (rtx_insn *insn)\n+{\n+  while (insn)\n+    {\n+      insn = PREV_INSN (insn);\n+      if (insn == 0 || NONDEBUG_INSN_P (insn))\n+\tbreak;\n+    }\n+\n+  return insn;\n+}\n+\n /* Return the last CALL_INSN in the current list, or 0 if there is none.\n    This routine does not look inside SEQUENCEs.  */\n "}, {"sha": "f31b4ade9d3e91d7b8a773bc28923851ed26d3c2", "filename": "gcc/rtl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=ec2d71214f90e21675a5abbe5b532273f7b11ded", "patch": "@@ -3277,6 +3277,8 @@ extern rtx_insn *next_nonnote_nondebug_insn (rtx_insn *);\n extern rtx_insn *next_nonnote_nondebug_insn_bb (rtx_insn *);\n extern rtx_insn *prev_real_insn (rtx_insn *);\n extern rtx_insn *next_real_insn (rtx);\n+extern rtx_insn *prev_real_nondebug_insn (rtx_insn *);\n+extern rtx_insn *next_real_nondebug_insn (rtx);\n extern rtx_insn *prev_active_insn (rtx_insn *);\n extern rtx_insn *next_active_insn (rtx_insn *);\n extern int active_insn_p (const rtx_insn *);"}, {"sha": "cb19be5925b3cfcda84ca91b32470d4cf1742899", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec2d71214f90e21675a5abbe5b532273f7b11ded", "patch": "@@ -1,5 +1,8 @@\n 2018-03-02  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/84614\n+\t* gcc.dg/pr84614.c: New test.\n+\n \tPR inline-asm/84625\n \t* gcc.target/i386/pr84625.c: New test.\n "}, {"sha": "98af26ba4e5293e0d903d60a871f59c2666d6b45", "filename": "gcc/testsuite/gcc.dg/pr84614.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84614.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec2d71214f90e21675a5abbe5b532273f7b11ded/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84614.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr84614.c?ref=ec2d71214f90e21675a5abbe5b532273f7b11ded", "patch": "@@ -0,0 +1,28 @@\n+/* PR target/84614 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"-Og -fno-split-wide-types -fno-tree-coalesce-vars -g --param=max-combine-insns=3 -fcompare-debug\" } */\n+\n+unsigned __int128 a;\n+\n+unsigned __int128\n+b (unsigned short c, unsigned int d)\n+{\n+  unsigned long long e;\n+  __builtin_sub_overflow (0, d, &e);\n+  e >>= c;\n+  c ^= 65535;\n+  d ^= 824;\n+  return c + a + d + e;\n+}\n+\n+int\n+main ()\n+{\n+  unsigned __int128 x = b (0, 9);\n+  if (__SIZEOF_INT__ * __CHAR_BIT__ == 32\n+      && __SIZEOF_LONG_LONG__ * __CHAR_BIT__ == 64\n+      && __SIZEOF_INT128__ * __CHAR_BIT__ == 128\n+      && x != (((unsigned __int128) 1 << 64) | 0x10327))\n+    __builtin_abort ();\n+  return 0;\n+}"}]}