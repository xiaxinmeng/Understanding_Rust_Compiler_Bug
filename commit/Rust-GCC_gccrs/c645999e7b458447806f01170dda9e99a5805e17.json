{"sha": "c645999e7b458447806f01170dda9e99a5805e17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY0NTk5OWU3YjQ1ODQ0NzgwNmYwMTE3MGRkYTllOTlhNTgwNWUxNw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-08-24T09:04:06Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-08-24T09:04:06Z"}, "message": "re PR c++/17149 (ICE: tree check: expected record_type or union_type or qual_union_type, have template_type_parm in check_accessibility_of_qualified_id, at cp/semantics.c:1388)\n\ncp:\n        PR c++/17149\n        * semantics.c (check_accessibility_of_qualified_id): Defer check\n        if qualifying_type is a template parameter.\ntestsuite:\n        PR c++/17149\n        * g++.dg/template/access15.C: New.\n\nFrom-SVN: r86472", "tree": {"sha": "c0dab5af1a18218b4a04bf6b03ac689742fa8100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0dab5af1a18218b4a04bf6b03ac689742fa8100"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c645999e7b458447806f01170dda9e99a5805e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c645999e7b458447806f01170dda9e99a5805e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c645999e7b458447806f01170dda9e99a5805e17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c645999e7b458447806f01170dda9e99a5805e17/comments", "author": null, "committer": null, "parents": [{"sha": "d46cd2be374fa3791edc5f69cb2731b9bae11af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d46cd2be374fa3791edc5f69cb2731b9bae11af3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d46cd2be374fa3791edc5f69cb2731b9bae11af3"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "ddeb19ed1643f1d216ed9c1d344fc3fc9a9ff371", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c645999e7b458447806f01170dda9e99a5805e17/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c645999e7b458447806f01170dda9e99a5805e17/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c645999e7b458447806f01170dda9e99a5805e17", "patch": "@@ -1,3 +1,9 @@\n+2004-08-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/17149\n+\t* semantics.c (check_accessibility_of_qualified_id): Defer check\n+\tif qualifying_type is a template parameter.\n+\n 2004-08-23  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/17163\n@@ -11,7 +17,7 @@\n \tRevert:\n \t2004-08-22  Andrew Pinski  <apinski@apple.com>\n \tPR c++/14029\n-\t* typeck.c (build_unary_op): Use &a.b if the foldded lowered\n+\t* typeck.c (build_unary_op): Use &a.b if the folded lowered\n \texpression is not constant.\n \n 2004-08-23  Nathan Sidwell  <nathan@codesourcery.com>\n@@ -23,7 +29,7 @@\n 2004-08-22  Andrew Pinski  <apinski@apple.com>\n \n \tPR c++/14029\n-\t* typeck.c (build_unary_op): Use &a.b if the foldded lowered\n+\t* typeck.c (build_unary_op): Use &a.b if the folded lowered\n \texpression is not constant.\n \n 2004-08-20  Mark Mitchell  <mark@codesourcery.com>"}, {"sha": "b221cd20b1caa1ca89ff36b68d04d44980201059", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c645999e7b458447806f01170dda9e99a5805e17/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c645999e7b458447806f01170dda9e99a5805e17/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c645999e7b458447806f01170dda9e99a5805e17", "patch": "@@ -1384,7 +1384,9 @@ check_accessibility_of_qualified_id (tree decl,\n        its bases.  */\n     qualifying_type = currently_open_derived_class (scope);\n \n-  if (qualifying_type)\n+  if (qualifying_type && IS_AGGR_TYPE_CODE (TREE_CODE (qualifying_type)))\n+    /* It is possible for qualifying type to be a TEMPLATE_TYPE_PARM\n+       or similar in a default argument value.  */\n     perform_or_defer_access_check (TYPE_BINFO (qualifying_type), decl);\n }\n "}, {"sha": "59138e2cd2a9aa4657e5aa2fa245f86976573e34", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c645999e7b458447806f01170dda9e99a5805e17/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c645999e7b458447806f01170dda9e99a5805e17/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c645999e7b458447806f01170dda9e99a5805e17", "patch": "@@ -1,3 +1,8 @@\n+2004-08-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/17149\n+\t* g++.dg/template/access15.C: New.\n+\n 2004-08-23  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/17163"}, {"sha": "e28716366e796c9ff2edb7737647f96c0a419602", "filename": "gcc/testsuite/g++.dg/template/access15.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c645999e7b458447806f01170dda9e99a5805e17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c645999e7b458447806f01170dda9e99a5805e17/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess15.C?ref=c645999e7b458447806f01170dda9e99a5805e17", "patch": "@@ -0,0 +1,12 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 23 Aug 2004 <nathan@codesourcery.com>\n+// Origin: stefaandr@hotmail.com\n+\n+// Bug 17149: ICE with TEMPLATE_TYPE_PARM\n+\n+\n+template <class super,\n+\t  int (super::tdata::*member)() const = &super::tdata::operator()>\n+struct x {};"}]}