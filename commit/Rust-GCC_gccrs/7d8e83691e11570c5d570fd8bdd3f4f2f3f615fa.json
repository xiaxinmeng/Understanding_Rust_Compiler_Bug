{"sha": "7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q4ZTgzNjkxZTExNTcwYzVkNTcwZmQ4YmRkM2Y0ZjJmM2Y2MTVmYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-12-26T20:33:37Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-12-26T20:33:37Z"}, "message": "re PR c++/196 (problem with:  namespace N { class N {...}; })\n\ncp:\n\tPR c++/196\n\t* cp/parse.y (bad_parm): Better diagnostic when given a SCOPE_REF.\ntestsuite:\n\t* g++.dg/eh/ctor1.C: New test.\n\t* g++.dg/other/error2.C: New test.\n\nFrom-SVN: r48317", "tree": {"sha": "327a74509523451ad1fded75dc53f475e71f67d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/327a74509523451ad1fded75dc53f475e71f67d5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/comments", "author": null, "committer": null, "parents": [{"sha": "8a723db2df8ea2a336691f2c3288a642bc8b0063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a723db2df8ea2a336691f2c3288a642bc8b0063", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a723db2df8ea2a336691f2c3288a642bc8b0063"}], "stats": {"total": 81, "additions": 76, "deletions": 5}, "files": [{"sha": "fc7a60983ca44567b3d4bd0c94e82e7208537c59", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "patch": "@@ -1,3 +1,8 @@\n+2001-12-26  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/196\n+\t* cp/parse.y (bad_parm): Better diagnostic when given a SCOPE_REF.\n+\n 2001-12-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/160"}, {"sha": "7339fe364582c16fec98486c3b5d47cd4231b42b", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "patch": "@@ -3766,11 +3766,16 @@ bad_parm:\n \t\t}\n \t| notype_declarator\n \t\t{\n-\t\t  error (\"type specifier omitted for parameter\");\n-\t\t  if (TREE_CODE ($$) == SCOPE_REF\n-\t\t      && (TREE_CODE (TREE_OPERAND ($$, 0)) == TEMPLATE_TYPE_PARM\n-\t\t\t  || TREE_CODE (TREE_OPERAND ($$, 0)) == BOUND_TEMPLATE_TEMPLATE_PARM))\n-\t\t    error (\"  perhaps you want `typename %E' to make it a type\", $$);\n+\t\t  if (TREE_CODE ($$) == SCOPE_REF)\n+\t\t    {\n+\t\t      if (TREE_CODE (TREE_OPERAND ($$, 0)) == TEMPLATE_TYPE_PARM\n+\t\t\t  || TREE_CODE (TREE_OPERAND ($$, 0)) == BOUND_TEMPLATE_TEMPLATE_PARM)\n+\t\t\terror (\"`%E' is not a type, use `typename %E' to make it one\", $$);\n+\t\t      else\n+\t\t\terror (\"no type `%D' in `%T'\", TREE_OPERAND ($$, 1), TREE_OPERAND ($$, 0));\n+\t\t    }\n+\t\t  else\n+\t\t    error (\"type specifier omitted for parameter `%E'\", $$);\n \t\t  $$ = build_tree_list (integer_type_node, $$);\n \t\t}\n \t;"}, {"sha": "698296b87a06694bf9a2a8baf21e7f72faddee66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "patch": "@@ -1,3 +1,8 @@\n+2001-12-26  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.dg/eh/ctor1.C: New test.\n+\t* g++.dg/other/error2.C: New test.\n+\n 2001-12-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/other/init2.C: New test."}, {"sha": "43b735f0b00a5fb79c7a4a8ca82475f45128f9a6", "filename": "gcc/testsuite/g++.dg/eh/ctor1.C", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fctor1.C?ref=7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "patch": "@@ -0,0 +1,42 @@\n+// { dg-do run }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 26 Dec 2001 <nathan@nathan@codesourcery.com>\n+\n+// PR 411\n+\n+bool was_f_in_Bar_destroyed=false;\n+\n+struct Foo\n+{\n+  ~Foo()\n+  {\n+    was_f_in_Bar_destroyed=true;\n+  }\n+};\n+\n+struct Bar\n+{\n+  ~Bar()\n+  {\n+    throw 1;\n+  }\n+  \n+  Foo f;\n+};\n+\n+int main()\n+{\n+  try\n+    {\n+      Bar f; \n+    }\n+  catch(int i)\n+    {\n+      if(was_f_in_Bar_destroyed)\n+\t{\n+\t  return 0;\n+\t}\n+    }\n+  return 1;\n+}"}, {"sha": "9910ada2a8bb3b4dbe8260963e388be6bd030464", "filename": "gcc/testsuite/g++.dg/other/error2.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror2.C?ref=7d8e83691e11570c5d570fd8bdd3f4f2f3f615fa", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 26 Dec 2001 <nathan@nathan@codesourcery.com>\n+\n+// PR 196. Misleading diagnostic\n+\n+namespace N\n+{\n+  class B { friend void operator>>(int, class B); };\n+  class N { friend void operator>>(int,class N); };\n+} \n+void N::operator>>(int, N::B)  // { dg-error \"no type `B' in `N::N'\" \"\" }\n+{ } // { dg-error \"\" \"\" }"}]}