{"sha": "62a64085bac5eec7bb46c2ea678e3928d8787329", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJhNjQwODViYWM1ZWVjN2JiNDZjMmVhNjc4ZTM5MjhkODc4NzMyOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-31T11:18:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-10-31T11:18:47Z"}, "message": "[multiple changes]\n\n\n2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_ch4.adb: Minor tweak.\n\n2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch12.adb (Analyze_Package_Instantiation): Do not inline with\n\tback-end inlining.\n\t(Must_Inline_Subp): Delete.\n\t* sem_util.ads, sem_util.adb (Must_Inline): Likewise.\n\n2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): A default_pool does not apply to\n\tinternal access types generated for 'access references.\n\t* sem_prag (Analyze_Pragma, case Default_Pool): If the name is\n\tnot null it must designate a variable.\n\n2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* inline.adb: Minor reformatting.\n\n2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Private_Type): If the derived\n\ttype has access discriminants, create itype references for their\n\tanonymous types, so that they are elaborated before the generated\n\tbodies for the primitive operations of the type.\n\n2014-10-31  Tristan Gingold  <gingold@adacore.com>\n\n\t* prj-conf.adb (Locate_Runtime): Remove procedure.\n\nFrom-SVN: r216963", "tree": {"sha": "3152e1e54de318f59d597345cbc3c7e8836f3869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3152e1e54de318f59d597345cbc3c7e8836f3869"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62a64085bac5eec7bb46c2ea678e3928d8787329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a64085bac5eec7bb46c2ea678e3928d8787329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62a64085bac5eec7bb46c2ea678e3928d8787329", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62a64085bac5eec7bb46c2ea678e3928d8787329/comments", "author": null, "committer": null, "parents": [{"sha": "c288810f69853733df4452f25b78baaae0350a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c288810f69853733df4452f25b78baaae0350a6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c288810f69853733df4452f25b78baaae0350a6c"}], "stats": {"total": 191, "additions": 69, "deletions": 122}, "files": [{"sha": "a31639b95a74ed0e6e8f8b3eec5ba30fa4642782", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -1,3 +1,36 @@\n+2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch4.adb: Minor tweak.\n+\n+2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch12.adb (Analyze_Package_Instantiation): Do not inline with\n+\tback-end inlining.\n+\t(Must_Inline_Subp): Delete.\n+\t* sem_util.ads, sem_util.adb (Must_Inline): Likewise.\n+\n+2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): A default_pool does not apply to\n+\tinternal access types generated for 'access references.\n+\t* sem_prag (Analyze_Pragma, case Default_Pool): If the name is\n+\tnot null it must designate a variable.\n+\n+2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* inline.adb: Minor reformatting.\n+\n+2014-10-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Private_Type): If the derived\n+\ttype has access discriminants, create itype references for their\n+\tanonymous types, so that they are elaborated before the generated\n+\tbodies for the primitive operations of the type.\n+\n+2014-10-31  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* prj-conf.adb (Locate_Runtime): Remove procedure.\n+\n 2014-10-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* inline.adb (Has_Excluded_Declaration): With back-end inlining,"}, {"sha": "1ed8f3bf146cc546961cf228ba2d3d0d8611091a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -3610,7 +3610,7 @@ package body Exp_Ch4 is\n       if Atyp = Standard_String\n         and then NN in 2 .. 9\n         and then (Lib_Level_Target\n-          or else ((Opt.Optimization_Level = 0 or else Debug_Flag_Dot_CC)\n+          or else ((Optimization_Level = 0 or else Debug_Flag_Dot_CC)\n                      and then not Debug_Flag_Dot_C))\n       then\n          declare"}, {"sha": "caef71f91979f16a184a20ae50fdae9f0dad8414", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -5383,8 +5383,13 @@ package body Freeze is\n                Check_Suspicious_Modulus (E);\n             end if;\n \n+         --  the pool applies to named and anonymous access types, but not\n+         --  to subprogram and to  internal types generated for 'Access\n+         --  references.\n+\n          elsif Is_Access_Type (E)\n            and then not Is_Access_Subprogram_Type (E)\n+           and then Ekind (E) /= E_Access_Attribute_Type\n          then\n             --  If a pragma Default_Storage_Pool applies, and this type has no\n             --  Storage_Pool or Storage_Size clause (which must have occurred"}, {"sha": "9646cc2fdc715d9b872e82d031c40c85aec2dba0", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -3826,9 +3826,7 @@ package body Inline is\n \n       --  Generate listing of subprograms passed to the backend\n \n-      if Present (Backend_Inlined_Subps)\n-        and then Back_End_Inlining\n-      then\n+      if Present (Backend_Inlined_Subps) and then Back_End_Inlining then\n          Count := 0;\n \n          Elmt := First_Elmt (Backend_Inlined_Subps);\n@@ -3858,9 +3856,7 @@ package body Inline is\n \n       --  Generate listing of subprograms that cannot be inlined by the backend\n \n-      if Present (Backend_Not_Inlined_Subps)\n-        and then Back_End_Inlining\n-      then\n+      if Present (Backend_Not_Inlined_Subps) and then Back_End_Inlining then\n          Count := 0;\n \n          Elmt := First_Elmt (Backend_Not_Inlined_Subps);"}, {"sha": "1afdb2ce55ac2223994e8b8f0e6717eab3ca6246", "filename": "gcc/ada/prj-conf.adb", "status": "modified", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fprj-conf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fprj-conf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-conf.adb?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -63,14 +63,6 @@ package body Prj.Conf is\n    --  Stores the runtime names for the various languages. This is in general\n    --  set from a --RTS command line option.\n \n-   procedure Locate_Runtime\n-     (Language : Name_Id;\n-      Env      : Prj.Tree.Environment);\n-   --  If RTS_Name is a base name (a name without path separator), then\n-   --  do nothing. Otherwise, convert it to an absolute path (possibly by\n-   --  searching it in the project path) and call Set_Runtime_For with the\n-   --  absolute path. Raise Invalid_Config if the path does not exist.\n-\n    -----------------------\n    -- Local_Subprograms --\n    -----------------------\n@@ -732,7 +724,6 @@ package body Prj.Conf is\n                               Set_Runtime_For\n                                 (Name_Ada,\n                                  Name_Buffer (7 .. Name_Len));\n-                              Locate_Runtime (Name_Ada, Env);\n                            end if;\n \n                         elsif Name_Len > 7\n@@ -759,7 +750,6 @@ package body Prj.Conf is\n \n                                  if not Runtime_Name_Set_For (Lang) then\n                                     Set_Runtime_For (Lang, RTS);\n-                                    Locate_Runtime (Lang, Env);\n                                  end if;\n                               end;\n                            end if;\n@@ -1544,48 +1534,6 @@ package body Prj.Conf is\n       end if;\n    end Locate_Config_File;\n \n-   --------------------\n-   -- Locate_Runtime --\n-   --------------------\n-\n-   procedure Locate_Runtime\n-     (Language : Name_Id;\n-      Env      : Prj.Tree.Environment)\n-   is\n-      function Is_RTS_Directory (Path : String) return Boolean;\n-      --  Returns True if Path is a directory for a runtime. This simply check\n-      --  that Path has a \"adalib\" subdirectoy, which is a property for\n-      --  runtimes on the project path.\n-\n-      ----------------------\n-      -- Is_RTS_Directory --\n-      ----------------------\n-\n-      function Is_RTS_Directory (Path : String) return Boolean is\n-      begin\n-         return Is_Directory (Path & Directory_Separator & \"adalib\");\n-      end Is_RTS_Directory;\n-\n-      --  Local declarations\n-\n-      function Find_Rts_In_Path is new Prj.Env.Find_Name_In_Path\n-        (Check_Filename => Is_RTS_Directory);\n-\n-      RTS_Name : constant String := Runtime_Name_For (Language);\n-\n-      Full_Path : String_Access;\n-\n-   --  Start of processing for Locate_Runtime\n-\n-   begin\n-      Full_Path := Find_Rts_In_Path (Env.Project_Path, RTS_Name);\n-\n-      if Full_Path /= null then\n-         Set_Runtime_For (Language, Normalize_Pathname (Full_Path.all));\n-         Free (Full_Path);\n-      end if;\n-   end Locate_Runtime;\n-\n    ------------------------------------\n    -- Parse_Project_And_Apply_Config --\n    ------------------------------------"}, {"sha": "5420a79b1185582b24fbb34dcecc0c7ef2137f4a", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -3636,11 +3636,6 @@ package body Sem_Ch12 is\n       --  but it is simpler than detecting the need for the body at the point\n       --  of inlining, when the context of the instance is not available.\n \n-      function Must_Inline_Subp return Boolean;\n-      --  If inlining is active and the generic contains inlined subprograms,\n-      --  return True if some of the inlined subprograms must be inlined by\n-      --  the frontend.\n-\n       -----------------------\n       -- Delay_Descriptors --\n       -----------------------\n@@ -3678,34 +3673,6 @@ package body Sem_Ch12 is\n          return False;\n       end Might_Inline_Subp;\n \n-      ----------------------\n-      -- Must_Inline_Subp --\n-      ----------------------\n-\n-      function Must_Inline_Subp return Boolean is\n-         E : Entity_Id;\n-\n-      begin\n-         if not Inline_Processing_Required then\n-            return False;\n-\n-         else\n-            E := First_Entity (Gen_Unit);\n-            while Present (E) loop\n-               if Is_Subprogram (E)\n-                 and then Is_Inlined (E)\n-                 and then Must_Inline (E)\n-               then\n-                  return True;\n-               end if;\n-\n-               Next_Entity (E);\n-            end loop;\n-         end if;\n-\n-         return False;\n-      end Must_Inline_Subp;\n-\n       --  Local declarations\n \n       Vis_Prims_List : Elist_Id := No_Elist;\n@@ -4006,14 +3973,6 @@ package body Sem_Ch12 is\n                then\n                   Inline_Now := True;\n \n-               elsif Back_End_Inlining\n-                 and then Must_Inline_Subp\n-                 and then (Is_In_Main_Unit (N)\n-                            or else In_Main_Context (Current_Scope))\n-                 and then Nkind (Parent (N)) /= N_Compilation_Unit\n-               then\n-                  Inline_Now := True;\n-\n                --  In configurable_run_time mode we force the inlining of\n                --  predefined subprograms marked Inline_Always, to minimize\n                --  the use of the run-time library."}, {"sha": "c60f7c01281c5f52a429da9cbbc0ad6c2b86be90", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -6943,6 +6943,28 @@ package body Sem_Ch3 is\n \n                Set_Is_Frozen (Full_Der);\n \n+               --  If the derived type has access discriminants, create\n+               --  references to their anonymous types now, to prevent\n+               --  back-end problems when their first use is in generated\n+               --  bodies of primitives.\n+\n+               declare\n+                  E : Entity_Id;\n+\n+               begin\n+                  E := First_Entity (Full_Der);\n+\n+                  while Present (E) loop\n+                     if Ekind (E) = E_Discriminant\n+                       and then Ekind (Etype (E)) = E_Anonymous_Access_Type\n+                     then\n+                        Build_Itype_Reference (Etype (E), Decl);\n+                     end if;\n+\n+                     Next_Entity (E);\n+                  end loop;\n+               end;\n+\n                --  Set up links between real entity and underlying record view\n \n                Set_Underlying_Record_View (Derived_Type, Base_Type (Full_Der));"}, {"sha": "0eddd64ee1af9c58ae723d5c8f1881adcac02630", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -12945,11 +12945,16 @@ package body Sem_Prag is\n                end if;\n \n                --  The expected type for a non-\"null\" argument is\n-               --  Root_Storage_Pool'Class.\n+               --  Root_Storage_Pool'Class, and the pool must be a variable.\n \n                Analyze_And_Resolve\n                  (Get_Pragma_Arg (Arg1),\n                   Typ => Class_Wide_Type (RTE (RE_Root_Storage_Pool)));\n+\n+               if not Is_Variable (Expression (Arg1)) then\n+                  Error_Pragma_Arg\n+                    (\"default storage pool must be a variable\", Arg1);\n+               end if;\n             end if;\n \n             --  Finally, record the pool name (or null). Freeze.Freeze_Entity"}, {"sha": "9fc89825ba7efae9170dfb1e50a676b01284b2ab", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -13350,24 +13350,6 @@ package body Sem_Util is\n       Mark_Allocators (Root_Nod);\n    end Mark_Coextensions;\n \n-   -----------------\n-   -- Must_Inline --\n-   -----------------\n-\n-   function Must_Inline (Subp : Entity_Id) return Boolean is\n-   begin\n-      return\n-        (Optimization_Level = 0\n-\n-          --  AAMP and VM targets have no support for inlining in the backend.\n-          --  Hence we do as much inlining as possible in the front end.\n-\n-          or else AAMP_On_Target\n-          or else VM_Target /= No_VM)\n-        and then Has_Pragma_Inline (Subp)\n-        and then (Has_Pragma_Inline_Always (Subp) or else Front_End_Inlining);\n-   end Must_Inline;\n-\n    ----------------------\n    -- Needs_One_Actual --\n    ----------------------"}, {"sha": "5fdc5fb6c21abb8df335632cf9e5884a58135117", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62a64085bac5eec7bb46c2ea678e3928d8787329/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=62a64085bac5eec7bb46c2ea678e3928d8787329", "patch": "@@ -1541,9 +1541,6 @@ package Sem_Util is\n    --  to guarantee this in all cases. Note that it is more possible to give\n    --  correct answer if the tree is fully analyzed.\n \n-   function Must_Inline (Subp : Entity_Id) return Boolean;\n-   --  Return true if Subp must be inlined by the frontend\n-\n    function Needs_One_Actual (E : Entity_Id) return Boolean;\n    --  Returns True if a function has defaults for all but its first\n    --  formal. Used in Ada 2005 mode to solve the syntactic ambiguity that"}]}