{"sha": "177f65eab335e95b09025a4a542662dbc797b897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc3ZjY1ZWFiMzM1ZTk1YjA5MDI1YTRhNTQyNjYyZGJjNzk3Yjg5Nw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-13T22:08:16Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-13T22:08:16Z"}, "message": "(dbxout_type_field): Skip fields with variable\nposition and/or size instead of crashing on them.\n\nFrom-SVN: r6080", "tree": {"sha": "fcd5cab918877992890a8d575f2f767359621f20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcd5cab918877992890a8d575f2f767359621f20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/177f65eab335e95b09025a4a542662dbc797b897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/177f65eab335e95b09025a4a542662dbc797b897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/177f65eab335e95b09025a4a542662dbc797b897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/177f65eab335e95b09025a4a542662dbc797b897/comments", "author": null, "committer": null, "parents": [{"sha": "6026c19c421f68b112c57494c704749c4a94de62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6026c19c421f68b112c57494c704749c4a94de62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6026c19c421f68b112c57494c704749c4a94de62"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "a952af5ca34170e54be148187d956fd25f667ba7", "filename": "gcc/dbxout.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/177f65eab335e95b09025a4a542662dbc797b897/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/177f65eab335e95b09025a4a542662dbc797b897/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=177f65eab335e95b09025a4a542662dbc797b897", "patch": "@@ -590,6 +590,11 @@ dbxout_type_fields (type)\n       /* Omit here local type decls until we know how to support them.  */\n       else if (TREE_CODE (tem) == TYPE_DECL)\n \tcontinue;\n+      /* Omit fields whose position or size are variable.  */\n+      else if (TREE_CODE (tem) == FIELD_DECL\n+\t       && (TREE_CODE (DECL_FIELD_BITPOS (tem)) != INTEGER_CST\n+\t\t   || TREE_CODE (DECL_SIZE (tem)) != INTEGER_CST))\n+\tcontinue;\n       /* Omit here the nameless fields that are used to skip bits.  */\n       else if (DECL_NAME (tem) != 0 && TREE_CODE (tem) != CONST_DECL)\n \t{\n@@ -656,9 +661,6 @@ dbxout_type_fields (type)\n \t\t       TREE_INT_CST_LOW (DECL_FIELD_BITPOS (tem)),\n \t\t       TREE_INT_CST_LOW (DECL_SIZE (tem)));\n \t    }\n-\t  else\n-\t    /* This has yet to be implemented.  */\n-\t    abort ();\n \t  CHARS (23);\n \t}\n     }"}]}