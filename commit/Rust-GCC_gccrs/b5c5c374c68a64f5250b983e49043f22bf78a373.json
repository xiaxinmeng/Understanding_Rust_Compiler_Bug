{"sha": "b5c5c374c68a64f5250b983e49043f22bf78a373", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVjNWMzNzRjNjhhNjRmNTI1MGI5ODNlNDkwNDNmMjJiZjc4YTM3Mw==", "commit": {"author": {"name": "Dorit Naishlos", "email": "dorit@il.ibm.com", "date": "2005-04-06T08:05:45Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2005-04-06T08:05:45Z"}, "message": "* gfortran.dg/vect/vect-5.f90: xfail for lp64.\n\nFrom-SVN: r97705", "tree": {"sha": "3bfcd17e8b689f18bd76ccc24ce1f661f792d2cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bfcd17e8b689f18bd76ccc24ce1f661f792d2cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5c5c374c68a64f5250b983e49043f22bf78a373", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c5c374c68a64f5250b983e49043f22bf78a373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5c5c374c68a64f5250b983e49043f22bf78a373", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5c5c374c68a64f5250b983e49043f22bf78a373/comments", "author": null, "committer": null, "parents": [{"sha": "d401de95b968c94ac051d2232d24fca0fa9fc2d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d401de95b968c94ac051d2232d24fca0fa9fc2d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d401de95b968c94ac051d2232d24fca0fa9fc2d0"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "cda7c55c23058ee1dba05791979bcd10de69bfbb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c5c374c68a64f5250b983e49043f22bf78a373/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c5c374c68a64f5250b983e49043f22bf78a373/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b5c5c374c68a64f5250b983e49043f22bf78a373", "patch": "@@ -1,3 +1,7 @@\n+2005-04-06  Dorit Naishlos  <dorit@il.ibm.com>\n+\n+\t* gfortran.dg/vect/vect-5.f90: xfail for lp64. \n+\n 2005-04-05  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/20734"}, {"sha": "8a0bcd5dc4d6ffeb84ab556c0f3dc4c2dde9c858", "filename": "gcc/testsuite/gfortran.dg/vect/vect-5.f90", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5c5c374c68a64f5250b983e49043f22bf78a373/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5c5c374c68a64f5250b983e49043f22bf78a373/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fvect%2Fvect-5.f90?ref=b5c5c374c68a64f5250b983e49043f22bf78a373", "patch": "@@ -35,6 +35,14 @@ program main\n         stop\n         end\n \n-! { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail vect_no_align } } }\n-! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail vect_no_align } } }\n-! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail vect_no_align } } }\n+! { dg-final { scan-tree-dump-times \"vectorized 2 loops\" 1 \"vect\" { xfail { vect_no_align || lp64 } } } }\n+! { dg-final { scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { xfail { vect_no_align || lp64 } } } }\n+! { dg-final { scan-tree-dump-times \"Vectorizing an unaligned access\" 2 \"vect\" { xfail { vect_no_align || lp64 } } } }\n+\n+! We also expect to vectorize one loop for lp64 targets that support \n+! misaligned access:\n+!   scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { target { lp64 && !vect_no_align } }\n+!   scan-tree-dump-times \"Alignment of access forced using peeling\" 1 \"vect\" { target { lp64 && !vect_no_align } }\n+!   scan-tree-dump-times \"Vectorizing an unaligned access\" 1 \"vect\" { target { lp64 && !vect_no_align } }\n+! but we currently can't combine logical operators. (Could define \n+! a keyword for \"not_vect_no_align\" if desired). "}]}