{"sha": "a45db20b7574c6a50e5b2c3bca189b21973a7b10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ1ZGIyMGI3NTc0YzZhNTBlNWIyYzNiY2ExODliMjE5NzNhN2IxMA==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@google.com", "date": "2007-09-30T16:00:36Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2007-09-30T16:00:36Z"}, "message": "re PR tree-optimization/33593 (tree-outof-ssa moves sources of non-call exceptions past sequence points)\n\n\n\tPR 33593\n\t* tree-ssa-ter.c (is_replaceable_p): Return false if STMT may\n\tthrow an exception.\n\n\ntestsuite/ChangeLog\n\n\tPR 33593\n\t* g++.dg/tree-ssa/pr33593.C: New test.\n\nFrom-SVN: r128893", "tree": {"sha": "258ac9ccc0b2befc416c750a3f7f91966492098c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/258ac9ccc0b2befc416c750a3f7f91966492098c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a45db20b7574c6a50e5b2c3bca189b21973a7b10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45db20b7574c6a50e5b2c3bca189b21973a7b10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a45db20b7574c6a50e5b2c3bca189b21973a7b10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a45db20b7574c6a50e5b2c3bca189b21973a7b10/comments", "author": {"login": "dnovillo", "id": 7295335, "node_id": "MDQ6VXNlcjcyOTUzMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/7295335?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dnovillo", "html_url": "https://github.com/dnovillo", "followers_url": "https://api.github.com/users/dnovillo/followers", "following_url": "https://api.github.com/users/dnovillo/following{/other_user}", "gists_url": "https://api.github.com/users/dnovillo/gists{/gist_id}", "starred_url": "https://api.github.com/users/dnovillo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dnovillo/subscriptions", "organizations_url": "https://api.github.com/users/dnovillo/orgs", "repos_url": "https://api.github.com/users/dnovillo/repos", "events_url": "https://api.github.com/users/dnovillo/events{/privacy}", "received_events_url": "https://api.github.com/users/dnovillo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80aea554a701f35a6b53fcd9d9fb89d1430fe983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80aea554a701f35a6b53fcd9d9fb89d1430fe983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80aea554a701f35a6b53fcd9d9fb89d1430fe983"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "eef9e94799bb91791ebfb1fb430fd9a2f8322eb4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45db20b7574c6a50e5b2c3bca189b21973a7b10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45db20b7574c6a50e5b2c3bca189b21973a7b10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a45db20b7574c6a50e5b2c3bca189b21973a7b10", "patch": "@@ -1,3 +1,9 @@\n+2007-09-30  Diego Novillo  <dnovillo@google.com>\n+\n+\tPR 33593\n+\t* tree-ssa-ter.c (is_replaceable_p): Return false if STMT may\n+\tthrow an exception.\n+\n 2007-09-30  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR tree-optimization/33597"}, {"sha": "631e8a1ba7d540ce8cfed2d37e854285159bd83d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45db20b7574c6a50e5b2c3bca189b21973a7b10/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45db20b7574c6a50e5b2c3bca189b21973a7b10/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a45db20b7574c6a50e5b2c3bca189b21973a7b10", "patch": "@@ -1,3 +1,8 @@\n+2007-09-30  Diego Novillo  <dnovillo@google.com>\n+\n+\tPR 33593\n+\t* g++.dg/tree-ssa/pr33593.C: New test.\n+\n 2007-09-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/33400"}, {"sha": "f5497407ff8540530bd7ec0e3f4b858ab4fd7455", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr33593.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45db20b7574c6a50e5b2c3bca189b21973a7b10/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr33593.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45db20b7574c6a50e5b2c3bca189b21973a7b10/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr33593.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr33593.C?ref=a45db20b7574c6a50e5b2c3bca189b21973a7b10", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fnon-call-exceptions -fdump-tree-optimized\" } */\n+\n+#include <stdio.h>\n+\n+void foo (int) { printf (\"Bar\\n\"); }\n+\n+int\n+main (void)\n+{\n+  int a = 1 / 0;\t// { dg-warning \"division by zero\" }\n+  printf (\"Foo\\n\");\n+  foo (a);\n+}\n+\n+// The expression 1 / 0 should not be propagated into the call to foo() if it\n+// may trap.\n+// { dg-final { scan-tree-dump-times \"foo \\\\(1 \\\\/ 0\\\\)\" 0 \"optimized\" } }\n+// { dg-final { cleanup-tree-dump \"optimized\" } }"}, {"sha": "f0fef24aa4a574f2bdae0cae2bea649d93cd3137", "filename": "gcc/tree-ssa-ter.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a45db20b7574c6a50e5b2c3bca189b21973a7b10/gcc%2Ftree-ssa-ter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a45db20b7574c6a50e5b2c3bca189b21973a7b10/gcc%2Ftree-ssa-ter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ter.c?ref=a45db20b7574c6a50e5b2c3bca189b21973a7b10", "patch": "@@ -366,6 +366,10 @@ is_replaceable_p (tree stmt)\n   if (TREE_CODE (stmt) != GIMPLE_MODIFY_STMT)\n     return false;\n \n+  /* If the statement may throw an exception, it cannot be replaced.  */\n+  if (tree_could_throw_p (stmt))\n+    return false;\n+\n   /* Punt if there is more than 1 def.  */\n   def = SINGLE_SSA_TREE_OPERAND (stmt, SSA_OP_DEF);\n   if (!def)"}]}