{"sha": "ef662120177d39af5f88ffc622d90bb6ae0ca1d3", "node_id": "C_kwDOANBUbNoAKGVmNjYyMTIwMTc3ZDM5YWY1Zjg4ZmZjNjIyZDkwYmI2YWUwY2ExZDM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-06-18T09:07:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-06-18T09:07:13Z"}, "message": "varasm: Fix up ICE in narrowing_initializer_constant_valid_p [PR105998]\n\nThe following testcase ICEs because there is NON_LVALUE_EXPR (location\nwrapper) around a VAR_DECL and has TYPE_MODE V2SImode and\nSCALAR_INT_TYPE_MODE on that ICEs.  Or for -m32 -march=i386 TYPE_MODE\nis DImode, but SCALAR_INT_TYPE_MODE still uses the raw V2SImode and ICEs\ntoo.\n\n2022-06-18  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/105998\n\t* varasm.cc (narrowing_initializer_constant_valid_p): Check\n\tSCALAR_INT_MODE_P instead of INTEGRAL_MODE_P, also break on\n\t! INTEGRAL_TYPE_P and do the same check also on op{0,1}'s type.\n\n\t* c-c++-common/pr105998.c: New test.", "tree": {"sha": "dabad3e88d79c104b3d91d28034d0307fd0c769c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dabad3e88d79c104b3d91d28034d0307fd0c769c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef662120177d39af5f88ffc622d90bb6ae0ca1d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef662120177d39af5f88ffc622d90bb6ae0ca1d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef662120177d39af5f88ffc622d90bb6ae0ca1d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef662120177d39af5f88ffc622d90bb6ae0ca1d3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9991d84d2a84355fd3fc9afc89a963f45991bfa9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9991d84d2a84355fd3fc9afc89a963f45991bfa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9991d84d2a84355fd3fc9afc89a963f45991bfa9"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "85277b97007d4067bf2730816a0d3cdd54ed5f88", "filename": "gcc/testsuite/c-c++-common/pr105998.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef662120177d39af5f88ffc622d90bb6ae0ca1d3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr105998.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef662120177d39af5f88ffc622d90bb6ae0ca1d3/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr105998.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr105998.c?ref=ef662120177d39af5f88ffc622d90bb6ae0ca1d3", "patch": "@@ -0,0 +1,12 @@\n+/* PR middle-end/105998 */\n+\n+typedef int __attribute__((__vector_size__ (sizeof (long long)))) V;\n+\n+V v;\n+\n+long long\n+foo (void)\n+{\n+  long long l = (long long) ((0 | v) - ((V) { } == 0));\n+  return l;\n+}"}, {"sha": "4db8506b106b698aac64ac1800e08d133201b1dd", "filename": "gcc/varasm.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef662120177d39af5f88ffc622d90bb6ae0ca1d3/gcc%2Fvarasm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef662120177d39af5f88ffc622d90bb6ae0ca1d3/gcc%2Fvarasm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.cc?ref=ef662120177d39af5f88ffc622d90bb6ae0ca1d3", "patch": "@@ -4716,7 +4716,10 @@ narrowing_initializer_constant_valid_p (tree value, tree endtype, tree *cache)\n     {\n       tree inner = TREE_OPERAND (op0, 0);\n       if (inner == error_mark_node\n-\t  || ! INTEGRAL_MODE_P (TYPE_MODE (TREE_TYPE (inner)))\n+\t  || ! INTEGRAL_TYPE_P (TREE_TYPE (op0))\n+\t  || ! SCALAR_INT_MODE_P (TYPE_MODE (TREE_TYPE (op0)))\n+\t  || ! INTEGRAL_TYPE_P (TREE_TYPE (inner))\n+\t  || ! SCALAR_INT_MODE_P (TYPE_MODE (TREE_TYPE (inner)))\n \t  || (GET_MODE_SIZE (SCALAR_INT_TYPE_MODE (TREE_TYPE (op0)))\n \t      > GET_MODE_SIZE (SCALAR_INT_TYPE_MODE (TREE_TYPE (inner)))))\n \tbreak;\n@@ -4728,7 +4731,10 @@ narrowing_initializer_constant_valid_p (tree value, tree endtype, tree *cache)\n     {\n       tree inner = TREE_OPERAND (op1, 0);\n       if (inner == error_mark_node\n-\t  || ! INTEGRAL_MODE_P (TYPE_MODE (TREE_TYPE (inner)))\n+\t  || ! INTEGRAL_TYPE_P (TREE_TYPE (op1))\n+\t  || ! SCALAR_INT_MODE_P (TYPE_MODE (TREE_TYPE (op1)))\n+\t  || ! INTEGRAL_TYPE_P (TREE_TYPE (inner))\n+\t  || ! SCALAR_INT_MODE_P (TYPE_MODE (TREE_TYPE (inner)))\n \t  || (GET_MODE_SIZE (SCALAR_INT_TYPE_MODE (TREE_TYPE (op1)))\n \t      > GET_MODE_SIZE (SCALAR_INT_TYPE_MODE (TREE_TYPE (inner)))))\n \tbreak;"}]}