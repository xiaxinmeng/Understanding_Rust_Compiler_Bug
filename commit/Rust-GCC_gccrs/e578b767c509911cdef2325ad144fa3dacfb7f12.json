{"sha": "e578b767c509911cdef2325ad144fa3dacfb7f12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU3OGI3NjdjNTA5OTExY2RlZjIzMjVhZDE0NGZhM2RhY2ZiN2YxMg==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2016-11-27T19:00:00Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2016-11-27T19:00:00Z"}, "message": "re PR fortran/78474 ([F08] gfortran accepts invalid submodule syntax)\n\n2016-11-27  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/78474\n\t* module.c (gfc_match_submodule): If there is more than one\n\tcolon, it is a syntax error.\n\n\tPR fortran/78331\n\t* module.c (gfc_use_module): If an smod file does not exist it\n\tis either because the module does not have a module procedure\n\tinterface or there is an error in the module.\n\n2016-11-27  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/78474\n\t* gfortran.dg/submodule_22.f08: New test.\n\n\tPR fortran/78331\n\t* gfortran.dg/submodule_21.f08: New test.\n\nFrom-SVN: r242900", "tree": {"sha": "f5e81c1cd4cacf52af813f2ef61df3045b430cc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5e81c1cd4cacf52af813f2ef61df3045b430cc7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e578b767c509911cdef2325ad144fa3dacfb7f12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e578b767c509911cdef2325ad144fa3dacfb7f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e578b767c509911cdef2325ad144fa3dacfb7f12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e578b767c509911cdef2325ad144fa3dacfb7f12/comments", "author": null, "committer": null, "parents": [{"sha": "ae829c9503f7859d426d4b99d27c1a6bdf4ee2c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae829c9503f7859d426d4b99d27c1a6bdf4ee2c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae829c9503f7859d426d4b99d27c1a6bdf4ee2c1"}], "stats": {"total": 106, "additions": 102, "deletions": 4}, "files": [{"sha": "b6e82d75ed5c5cf64184303dfcc1438294413629", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e578b767c509911cdef2325ad144fa3dacfb7f12", "patch": "@@ -1,3 +1,14 @@\n+2016-11-27  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/78474\n+\t* module.c (gfc_match_submodule): If there is more than one\n+\tcolon, it is a syntax error.\n+\n+\tPR fortran/78331\n+\t* module.c (gfc_use_module): If an smod file does not exist it\n+\tis either because the module does not have a module procedure\n+\tinterface or there is an error in the module.\n+\n 2016-11-25  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* intrinsic.texi: Fix ptrdiff_t typo in ISO_C_BINDING constants"}, {"sha": "e727adebc99b03373a12e09216aee8a465d07d30", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=e578b767c509911cdef2325ad144fa3dacfb7f12", "patch": "@@ -740,6 +740,7 @@ gfc_match_submodule (void)\n   match m;\n   char name[GFC_MAX_SYMBOL_LEN + 1];\n   gfc_use_list *use_list;\n+  bool seen_colon = false;\n \n   if (!gfc_notify_std (GFC_STD_F2008, \"SUBMODULE declaration at %C\"))\n     return MATCH_ERROR;\n@@ -772,16 +773,19 @@ gfc_match_submodule (void)\n \t}\n       else\n \t{\n-\tmodule_list = use_list;\n+\t  module_list = use_list;\n \t  use_list->module_name = gfc_get_string (name);\n \t  use_list->submodule_name = use_list->module_name;\n \t}\n \n       if (gfc_match_char (')') == MATCH_YES)\n \tbreak;\n \n-      if (gfc_match_char (':') != MATCH_YES)\n+      if (gfc_match_char (':') != MATCH_YES\n+\t  || seen_colon)\n \tgoto syntax;\n+\n+      seen_colon = true;\n     }\n \n   m = gfc_match (\" %s%t\", &gfc_new_block);\n@@ -6926,8 +6930,17 @@ gfc_use_module (gfc_use_list *module)\n     }\n \n   if (module_fp == NULL)\n-    gfc_fatal_error (\"Can't open module file %qs for reading at %C: %s\",\n-\t\t     filename, xstrerror (errno));\n+    {\n+      if (gfc_state_stack->state != COMP_SUBMODULE\n+\t  && module->submodule_name == NULL)\n+\tgfc_fatal_error (\"Can't open module file %qs for reading at %C: %s\",\n+\t\t\t filename, xstrerror (errno));\n+      else\n+\tgfc_fatal_error (\"Module file %qs has not been generated, either \"\n+\t\t\t \"because the module does not contain a MODULE \"\n+\t\t\t \"PROCEDURE or there is an error in the module.\",\n+\t\t\t filename);\n+    }\n \n   /* Check that we haven't already USEd an intrinsic module with the\n      same name.  */"}, {"sha": "b1f4c61508a5f23b45a93eb7bb7352f51f10514e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e578b767c509911cdef2325ad144fa3dacfb7f12", "patch": "@@ -1,3 +1,11 @@\n+2016-11-27  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/78474\n+\t* gfortran.dg/submodule_22.f08: New test.\n+\n+\tPR fortran/78331\n+\t* gfortran.dg/submodule_21.f08: New test.\n+\n 2016-11-27  John David Anglin  <danglin@gcc.gnu.org>\n \n \t* g++.dg/torture/pr65655.C: Use dg-timeout-factor 2."}, {"sha": "c96acb2e8564bbb875968d8575d72b18679e5443", "filename": "gcc/testsuite/gfortran.dg/submodule_21.f08", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_21.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_21.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_21.f08?ref=e578b767c509911cdef2325ad144fa3dacfb7f12", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR78331.\n+!\n+! Reported on https://groups.google.com/forum/#!topic/comp.lang.fortran/NFCF9brKksg\n+!\n+MODULE MainModule\n+END MODULE MainModule\n+\n+SUBMODULE (MainModule) MySub1\n+  IMPLICIT NONE\n+  INTEGER, PARAMETER :: a = 17\n+END SUBMODULE MySub1\n+\n+PROGRAM MyProg\n+  USE MainModule\n+  WRITE(*,*) a\n+END PROGRAM MyProg\n+! { dg-excess-errors \"does not contain a MODULE PROCEDURE\" }"}, {"sha": "8ff5421c77eac12b6fa5371ef08c96dae672917a", "filename": "gcc/testsuite/gfortran.dg/submodule_22.f08", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_22.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e578b767c509911cdef2325ad144fa3dacfb7f12/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_22.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubmodule_22.f08?ref=e578b767c509911cdef2325ad144fa3dacfb7f12", "patch": "@@ -0,0 +1,47 @@\n+! { dg-do compile }\n+!\n+! Test the fix for PR78474.\n+!\n+! Contributed by Nicholas Brearly  <nick.brealey@cobham.com>\n+!\n+module mtop\n+  implicit none\n+  real :: r\n+  interface\n+    module subroutine sub1()\n+    end subroutine\n+  end interface\n+  interface\n+    module subroutine sub2()\n+    end subroutine\n+  end interface\n+  interface\n+    module subroutine sub3()\n+    end subroutine\n+  end interface\n+end module mtop\n+\n+submodule (mtop) submod\n+  implicit none\n+  real :: s\n+contains\n+  module subroutine sub1\n+    r = 0.0\n+  end subroutine sub1\n+end\n+\n+submodule (mtop:submod) subsubmod\n+contains\n+  module subroutine sub2\n+    r = 1.0\n+    s = 1.0\n+  end subroutine sub2\n+end\n+\n+submodule (mtop:submod:subsubmod) subsubsubmod ! { dg-error \"Syntax error in SUBMODULE statement\" }\n+contains\n+  module subroutine sub3\n+    r = 2.0\n+    s = 2.0\n+  end subroutine sub3\n+end"}]}