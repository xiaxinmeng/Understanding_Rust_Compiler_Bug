{"sha": "3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2M1YjZkMjRlNjY0Zjk1MWM2YjRlNDI3MzhhYTFlZjU0ODllNWY2Ng==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-16T10:55:35Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-16T10:55:35Z"}, "message": "Daily bump.", "tree": {"sha": "7d7d0933c12044bd387c0644485b3a1ab31c3866", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d7d0933c12044bd387c0644485b3a1ab31c3866"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/comments", "author": null, "committer": null, "parents": [{"sha": "5f6a43d691c8f8c7ef1289aacfcbb14b7004de81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f6a43d691c8f8c7ef1289aacfcbb14b7004de81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f6a43d691c8f8c7ef1289aacfcbb14b7004de81"}], "stats": {"total": 216, "additions": 215, "deletions": 1}, "files": [{"sha": "acf530efdbac51a6cfdcef3c1604038e3697a2a6", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,8 @@\n+2021-03-16  Martin Liska  <mliska@suse.cz>\n+\n+\t* gcc-changelog/git_update_version.py: Skip one problematic\n+\tcommit.\n+\n 2021-03-12  Martin Liska  <mliska@suse.cz>\n \n \t* gcc-changelog/git_commit.py: Allow deletion of ChangeLog"}, {"sha": "21307e0b4f69d05c1714495b0f0f9cd7c3c5fc9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,41 @@\n+2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99563\n+\t* config/i386/i386.h (struct machine_function): Add\n+\thas_explicit_vzeroupper bitfield.\n+\t* config/i386/i386-expand.c (ix86_expand_builtin): Set\n+\tcfun->machine->has_explicit_vzeroupper when expanding\n+\tIX86_BUILTIN_VZEROUPPER.\n+\t* config/i386/i386-features.c (rest_of_handle_insert_vzeroupper):\n+\tDo the mode switching only when TARGET_VZEROUPPER, expensive\n+\toptimizations turned on and not optimizing for size.\n+\t(pass_insert_vzeroupper::gate): Enable even when\n+\tcfun->machine->has_explicit_vzeroupper is set.\n+\n+2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99542\n+\t* config/aarch64/aarch64.c\n+\t(aarch64_simd_clone_compute_vecsize_and_simdlen): If not a function\n+\tdefinition, walk TYPE_ARG_TYPES list if non-NULL for argument types\n+\tinstead of DECL_ARGUMENTS.  Ignore types for uniform arguments.\n+\n+2021-03-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98834\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Handle missing\n+\tsubsetting by truncating the access size.\n+\n+2021-03-15  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* config/i386/i386-options.c (processor_cost_table): Add znver3_cost.\n+\t* config/i386/x86-tune-costs.h (znver3_cost): New gobal variable; copy\n+\tof znver2_cost.\n+\n+2021-03-15  Martin Liska  <mliska@suse.cz>\n+\n+\t* spellcheck.c: Add missing comma in initialization.\n+\n 2021-03-14  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (*vec_extract<mode>): Merge alternative 0 with"}, {"sha": "25e272c67163718e2eb583f05747e4b390fa86c6", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1 +1 @@\n-20210315\n+20210316"}, {"sha": "58b0fbbf8db12486db963e74376a1a347ed08d6f", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,7 @@\n+2021-03-15  Martin Liska  <mliska@suse.cz>\n+\n+\t* sm-file.cc (get_file_using_fns): Add missing comma in initializer.\n+\n 2021-03-11  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/96374"}, {"sha": "e1da0679b5352d6fd6f21416ec40e41642ba301d", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,9 @@\n+2021-03-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR c++/99509\n+\t* c-decl.c (finish_decl): For 'omp declare target implicit' vars,\n+\tensure that the varpool node is marked as offloadable.\n+\n 2021-03-05  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR c/99137"}, {"sha": "5dcdebdf1057cd544393b9cf8342fc9a1ec89af3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,45 @@\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/99047\n+\t* coroutines.cc (expand_one_await_expression): If the\n+\tawait_ready() expression is not a boolean then convert it\n+\tas required.\n+\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/98704\n+\t* coroutines.cc (build_actor_fn): Make destroy index 1\n+\tcorrespond to the abnormal unhandled_exception() exit.\n+\tSubstitute the proxy for the resume index.\n+\t(coro_rewrite_function_body): Arrange to reset the resume\n+\tindex and make done = true for a rethrown exception from\n+\tunhandled_exception ().\n+\t(morph_fn_to_coro): Adjust calls to build_actor_fn and\n+\tcoro_rewrite_function_body.\n+\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/98480\n+\t* coroutines.cc (replace_continue): Rewrite continue into\n+\t'goto label'.\n+\t(await_statement_walker): Handle await expressions in the\n+\tinitializer, condition and iteration expressions of for\n+\tloops.\n+\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/96749\n+\t* coroutines.cc (flatten_await_stmt): Allow for the case\n+\twhere a target expression variable only has uses in the\n+\tsecond part of a compound expression.\n+\t(maybe_promote_temps): Avoid emiting empty statements.\n+\n+2021-03-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR c++/99509\n+\t* decl.c (cp_finish_decl): For 'omp declare target implicit' vars,\n+\tensure that the varpool node is marked as offloadable.\n+\n 2021-03-12  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/99238"}, {"sha": "8cc9403076ceabda730a71c112b234c1afdb03d3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,15 @@\n+2021-03-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/99345\n+\t* frontend-passes.c (doloop_contained_procedure_code):\n+\tProperly handle EXEC_IOLENGTH.\n+\n+2021-03-15  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/99545\n+\t* trans-stmt.c (gfc_trans_allocate): Mark the initialization\n+\tassignment by setting init_flag.\n+\n 2021-03-14  Harald Anlauf  <anlauf@gmx.de>\n \t    Paul Thomas  <pault@gcc.gnu.org>\n "}, {"sha": "6430bcfb07c81520b09f3a8e73598e7237511413", "filename": "gcc/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpo%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,7 @@\n+2021-03-15  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* sv.po: Update.\n+\n 2021-03-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* de.po, sv.po: Update."}, {"sha": "5ce7c1c9628c88970603c6d6ef19d9cbf208336e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,75 @@\n+2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99563\n+\t* gcc.target/i386/avx-pr99563.c: New test.\n+\n+2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99542\n+\t* gcc.dg/gomp/pr99542.c: New test.\n+\t* gcc.dg/gomp/pr59669-2.c (bar): Don't expect a warning on aarch64.\n+\t* gcc.dg/gomp/simd-clones-2.c (setArray): Likewise.\n+\t* g++.dg/vect/simd-clone-7.cc (bar): Likewise.\n+\t* g++.dg/gomp/declare-simd-1.C (f37): Expect a different warning\n+\ton aarch64.\n+\t* gcc.dg/declare-simd.c (fn2): Expect a new warning on aarch64.\n+\n+2021-03-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99601\n+\t* g++.dg/modules/builtin-3_a.C: Fix target selector syntax errors.\n+\t* g++.dg/modules/builtin-3_b.C: Likewise.\n+\n+2021-03-15  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99601\n+\t* g++.dg/modules/builtin-3_a.C: Fix lp64 x86 detection.\n+\t* g++.dg/modules/builtin-3_b.C: Fix lp64 x86 detection.\n+\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/99047\n+\t* g++.dg/coroutines/pr99047.C: New test.\n+\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/98704\n+\t* g++.dg/coroutines/torture/pr98704.C: New test.\n+\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/98480\n+\t* g++.dg/coroutines/pr98480.C: New test.\n+\t* g++.dg/coroutines/torture/co-await-24-for-init.C: New test.\n+\t* g++.dg/coroutines/torture/co-await-25-for-condition.C: New test.\n+\t* g++.dg/coroutines/torture/co-await-26-for-iteration-expr.C: New test.\n+\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\tPR c++/96749\n+\t* g++.dg/coroutines/pr96749-1.C: New test.\n+\t* g++.dg/coroutines/pr96749-2.C: New test.\n+\n+2021-03-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/98834\n+\t* g++.dg/opt/pr98834.C: New testcase.\n+\n+2021-03-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/99345\n+\t* gfortran.dg/do_check_16.f90: New test.\n+\t* gfortran.dg/do_check_17.f90: New test.\n+\n+2021-03-15  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/99545\n+\t* gfortran.dg/pr99545.f90: New test.\n+\n+2021-03-15  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gcc.target/powerpc/pr99492.c: Fix typo.\n+\n 2021-03-14  Harald Anlauf  <anlauf@gmx.de>\n \t    Paul Thomas  <pault@gcc.gnu.org>\n "}, {"sha": "c7502ca3bd2c3a2948716b5be76db576d3e0be1a", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,8 @@\n+2021-03-15  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR c++/99509\n+\t* testsuite/libgomp.c-c++-common/declare_target-1.c: New test.\n+\n 2021-03-12  Tobias Burnus  <tobias@codesourcery.com>\n \n \tPR fortran/98858"}, {"sha": "ce85c22e15127a4a29b0184797f711286c265927", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c5b6d24e664f951c6b4e42738aa1ef5489e5f66/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3c5b6d24e664f951c6b4e42738aa1ef5489e5f66", "patch": "@@ -1,3 +1,29 @@\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* testsuite/17_intro/names.cc: Exclude j from the list\n+\tof test symbols for Darwin.\n+\n+2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* config/os/bsd/darwin/ppc-extra.ver: Add matching for\n+\tto_chars and from_chars for long double.\n+\n+2021-03-15  Patrick Palka  <ppalka@redhat.com>\n+\n+\t* include/bits/max_size_type.h (__max_size_type::operator _Tp):\n+\tFix formatting.\n+\t(__max_size_type::operator++): Define.\n+\t(__max_size_type::operator--): Likewise.\n+\t(__max_size_type::operator<=>): Conditionally define (in place\n+\tof the other comparison operators).\n+\t(__max_diff_type::operator _Tp): Fix formatting.\n+\t(__max_diff_type::operator++): Define.\n+\t(__max_diff_type::operator--): Likewise.\n+\t(__max_diff_type::operator<=>): Conditionally define (in place\n+\tof the other comparison operators).\n+\t* testsuite/std/ranges/iota/max_size_type.cc (test01): Test\n+\tthese operator overloads.\n+\n 2021-03-15  Caroline Tice  <cmtice@google.com>\n \n \tPR libstdc++/99172"}]}