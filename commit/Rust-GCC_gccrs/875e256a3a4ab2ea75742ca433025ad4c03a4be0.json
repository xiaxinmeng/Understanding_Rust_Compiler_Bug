{"sha": "875e256a3a4ab2ea75742ca433025ad4c03a4be0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc1ZTI1NmEzYTRhYjJlYTc1NzQyY2E0MzMwMjVhZDRjMDNhNGJlMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-10-14T01:55:31Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-10-14T01:55:31Z"}, "message": "score.c, score.h: Fix comment typos.\n\n\t* config/score/score.c, config/score/score.h: Fix comment\n\ttypos.\n\nFrom-SVN: r117723", "tree": {"sha": "73068051487936b17db035d2ef2af3a82f62082a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73068051487936b17db035d2ef2af3a82f62082a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/875e256a3a4ab2ea75742ca433025ad4c03a4be0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875e256a3a4ab2ea75742ca433025ad4c03a4be0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/875e256a3a4ab2ea75742ca433025ad4c03a4be0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/875e256a3a4ab2ea75742ca433025ad4c03a4be0/comments", "author": null, "committer": null, "parents": [{"sha": "b2a433730c61d185540d8f39929e7f888f32d19d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a433730c61d185540d8f39929e7f888f32d19d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a433730c61d185540d8f39929e7f888f32d19d"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "d4af4e1bd3ac25ea3872b9377409f0377bd5379d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/875e256a3a4ab2ea75742ca433025ad4c03a4be0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/875e256a3a4ab2ea75742ca433025ad4c03a4be0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=875e256a3a4ab2ea75742ca433025ad4c03a4be0", "patch": "@@ -1,3 +1,8 @@\n+2006-10-14  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* config/score/score.c, config/score/score.h: Fix comment\n+\ttypos.\n+\n 2006-10-13  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \tPR bootstrap/29402"}, {"sha": "b7a581eee60a329a6eda16c0894ee53022d7dfdc", "filename": "gcc/config/score/score.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/875e256a3a4ab2ea75742ca433025ad4c03a4be0/gcc%2Fconfig%2Fscore%2Fscore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/875e256a3a4ab2ea75742ca433025ad4c03a4be0/gcc%2Fconfig%2Fscore%2Fscore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.c?ref=875e256a3a4ab2ea75742ca433025ad4c03a4be0", "patch": "@@ -928,8 +928,8 @@ score_return_addr (int count, rtx frame ATTRIBUTE_UNUSED)\n \n    'U'        print hi part of a CONST_INT rtx\n    'D'        print first part of const double\n-   'S'        selectively print '!' if operand is 15bit instrucion accessable\n-   'V'        print \"v!\" if operand is 15bit instruction accessable, or\n+   'S'        selectively print '!' if operand is 15bit instruction accessible\n+   'V'        print \"v!\" if operand is 15bit instruction accessible, or\n    \"lfh!\"\n \n    'L'        low  part of DImode reg operand"}, {"sha": "0a24a3f85e9fc6709c0482a95f28e4de3555823d", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/875e256a3a4ab2ea75742ca433025ad4c03a4be0/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/875e256a3a4ab2ea75742ca433025ad4c03a4be0/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=875e256a3a4ab2ea75742ca433025ad4c03a4be0", "patch": "@@ -209,7 +209,7 @@ extern GTY(()) rtx cmp_op1;\n   /* General Purpose Registers */                        \\\n   1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,        \\\n   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,        \\\n-  /* Control Regisers */                                 \\\n+  /* Control Registers */                                \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n   /* CEH/ CEL/ CNT/ LCR/ SCR / ARG_POINTER_REGNUM/ FRAME_POINTER_REGNUM */\\\n   0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n@@ -229,7 +229,7 @@ extern GTY(()) rtx cmp_op1;\n   /* General purpose register */                         \\\n   1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,        \\\n   0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n-  /* Control Regisers */                                 \\\n+  /* Control Registers */                                \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,        \\\n   /* CP 1 Registers  */                                  \\"}]}