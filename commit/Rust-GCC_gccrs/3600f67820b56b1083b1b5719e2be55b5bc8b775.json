{"sha": "3600f67820b56b1083b1b5719e2be55b5bc8b775", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYwMGY2NzgyMGI1NmIxMDgzYjFiNTcxOWUyYmU1NWI1YmM4Yjc3NQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2009-06-18T18:09:12Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2009-06-18T18:09:12Z"}, "message": "class.c (get_vtable_decl): Replace finish_decl with cp_finish_decl.\n\n        * class.c (get_vtable_decl): Replace finish_decl with cp_finish_decl.\n        * decl.c (finish_decl): Remove.\n        (declare_global_var): Replace finish_decl with cp_finish_decl.\n        (start_method): Same.\n        * rtti.c (emit_tinfo_decl): Same.\n        * pt.c (tsubst_expr): Same.\n        (instantiate_decl): Same.\n        * decl2.c (grokbitfield): Same.\n        * name-lookup.c (pushdecl_top_level_1): Same.\n        * cp-tree.h: Remove finish_decl.\n\nFrom-SVN: r148666", "tree": {"sha": "a1cb9f9b9d4df1dc44becd4451c5ade82a30cb5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1cb9f9b9d4df1dc44becd4451c5ade82a30cb5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3600f67820b56b1083b1b5719e2be55b5bc8b775", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3600f67820b56b1083b1b5719e2be55b5bc8b775", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3600f67820b56b1083b1b5719e2be55b5bc8b775", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3600f67820b56b1083b1b5719e2be55b5bc8b775/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b6680d727147ab31aa2248f2ba355b501d26cae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6680d727147ab31aa2248f2ba355b501d26cae2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6680d727147ab31aa2248f2ba355b501d26cae2"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "8f9d6d80669b0dac9da78e290bfa4d7480e90a9a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3600f67820b56b1083b1b5719e2be55b5bc8b775", "patch": "@@ -1,3 +1,16 @@\n+2009-06-18  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* class.c (get_vtable_decl): Replace finish_decl with cp_finish_decl.\n+\t* decl.c (finish_decl): Remove.\n+\t(declare_global_var): Replace finish_decl with cp_finish_decl.\n+\t(start_method): Same.\n+\t* rtti.c (emit_tinfo_decl): Same.\n+\t* pt.c (tsubst_expr): Same.\n+\t(instantiate_decl): Same.\n+\t* decl2.c (grokbitfield): Same.\n+\t* name-lookup.c (pushdecl_top_level_1): Same.\n+\t* cp-tree.h: Remove finish_decl.\n+\n 2009-06-16  David Edelsohn  <edelsohn@gnu.org>\n \n \t* g++-spec.c (LIBSTDCXX_STATIC): Default to NULL."}, {"sha": "d86ff646429945edc105c60fb30fa39bcc3e3908", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=3600f67820b56b1083b1b5719e2be55b5bc8b775", "patch": "@@ -774,7 +774,7 @@ get_vtable_decl (tree type, int complete)\n   if (complete)\n     {\n       DECL_EXTERNAL (decl) = 1;\n-      finish_decl (decl, NULL_TREE, NULL_TREE, NULL_TREE);\n+      cp_finish_decl (decl, NULL_TREE, false, NULL_TREE, 0);\n     }\n \n   return decl;"}, {"sha": "c49a877861774f90dbf3b4bda6f5b35ba691a1a4", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=3600f67820b56b1083b1b5719e2be55b5bc8b775", "patch": "@@ -4333,7 +4333,6 @@ extern tree start_decl\t\t\t\t(const cp_declarator *, cp_decl_specifier_seq *, int,\n extern void start_decl_1\t\t\t(tree, bool);\n extern bool check_array_initializer\t\t(tree, tree, tree);\n extern void cp_finish_decl\t\t\t(tree, tree, bool, tree, int);\n-extern void finish_decl\t\t\t\t(tree, tree, tree, tree);\n extern int cp_complete_array_type\t\t(tree *, tree, bool);\n extern tree build_ptrmemfunc_type\t\t(tree);\n extern tree build_ptrmem_type\t\t\t(tree, tree);"}, {"sha": "9ebfd27d9ca1ef80b7da888481ad34a471446cb9", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3600f67820b56b1083b1b5719e2be55b5bc8b775", "patch": "@@ -5880,15 +5880,6 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n     mark_decl_referenced (decl);\n }\n \n-/* This is here for a midend callback from c-common.c.  */\n-\n-void\n-finish_decl (tree decl, tree init, tree origtype ATTRIBUTE_UNUSED,\n-\t     tree asmspec_tree)\n-{\n-  cp_finish_decl (decl, init, /*init_const_expr_p=*/false, asmspec_tree, 0);\n-}\n-\n /* Returns a declaration for a VAR_DECL as if:\n \n      extern \"C\" TYPE NAME;\n@@ -5911,7 +5902,7 @@ declare_global_var (tree name, tree type)\n      library), then it is possible that our declaration will be merged\n      with theirs by pushdecl.  */\n   decl = pushdecl (decl);\n-  finish_decl (decl, NULL_TREE, NULL_TREE, NULL_TREE);\n+  cp_finish_decl (decl, NULL_TREE, false, NULL_TREE, 0);\n   pop_from_top_level ();\n \n   return decl;\n@@ -12523,7 +12514,7 @@ start_method (cp_decl_specifier_seq *declspecs,\n \t}\n     }\n \n-  finish_decl (fndecl, NULL_TREE, NULL_TREE, NULL_TREE);\n+  cp_finish_decl (fndecl, NULL_TREE, false, NULL_TREE, 0);\n \n   /* Make a place for the parms.  */\n   begin_scope (sk_function_parms, fndecl);"}, {"sha": "119196408e8764534cbb4dbf02dcd8271b6b30de", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=3600f67820b56b1083b1b5719e2be55b5bc8b775", "patch": "@@ -1002,7 +1002,7 @@ grokbitfield (const cp_declarator *declarator,\n       error (\"static member %qD cannot be a bit-field\", value);\n       return NULL_TREE;\n     }\n-  finish_decl (value, NULL_TREE, NULL_TREE, NULL_TREE);\n+  cp_finish_decl (value, NULL_TREE, false, NULL_TREE, 0);\n \n   if (width != error_mark_node)\n     {"}, {"sha": "69ee8bfea39086626847638aaf8ffe3bc9eed5e4", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=3600f67820b56b1083b1b5719e2be55b5bc8b775", "patch": "@@ -3555,7 +3555,7 @@ pushdecl_top_level_1 (tree x, tree *init, bool is_friend)\n   push_to_top_level ();\n   x = pushdecl_namespace_level (x, is_friend);\n   if (init)\n-    finish_decl (x, *init, NULL_TREE, NULL_TREE);\n+    cp_finish_decl (x, *init, false, NULL_TREE, 0);\n   pop_from_top_level ();\n   POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, x);\n }"}, {"sha": "977a10118714c84a3441ef9d31796f7bbba19516", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3600f67820b56b1083b1b5719e2be55b5bc8b775", "patch": "@@ -10819,7 +10819,7 @@ tsubst_expr (tree t, tree args, tsubst_flags_t complain, tree in_decl,\n \t\t\t  init = t;\n \t\t      }\n \n-\t\t    finish_decl (decl, init, NULL_TREE, NULL_TREE);\n+\t\t    cp_finish_decl (decl, init, false, NULL_TREE, 0);\n \t\t  }\n \t      }\n \t  }\n@@ -15727,7 +15727,7 @@ instantiate_decl (tree d, int defer_ok,\n \n       /* The initializer is placed in DECL_INITIAL by\n \t regenerate_decl_from_template.  Pull it out so that\n-\t finish_decl can process it.  */\n+\t cp_finish_decl can process it.  */\n       init = DECL_INITIAL (d);\n       DECL_INITIAL (d) = NULL_TREE;\n       DECL_INITIALIZED_P (d) = 0;\n@@ -15739,7 +15739,7 @@ instantiate_decl (tree d, int defer_ok,\n \n       /* Enter the scope of D so that access-checking works correctly.  */\n       push_nested_class (DECL_CONTEXT (d));\n-      finish_decl (d, init, NULL_TREE, NULL_TREE);\n+      cp_finish_decl (d, init, false, NULL_TREE, 0);\n       pop_nested_class ();\n     }\n   else if (TREE_CODE (d) == FUNCTION_DECL)"}, {"sha": "c78d92be09b195fb5f970113460b98dc8d41fc38", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3600f67820b56b1083b1b5719e2be55b5bc8b775/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=3600f67820b56b1083b1b5719e2be55b5bc8b775", "patch": "@@ -1532,7 +1532,7 @@ emit_tinfo_decl (tree decl)\n       init = get_pseudo_ti_init (type, get_pseudo_ti_index (type));\n       DECL_INITIAL (decl) = init;\n       mark_used (decl);\n-      finish_decl (decl, init, NULL_TREE, NULL_TREE);\n+      cp_finish_decl (decl, init, false, NULL_TREE, 0);\n       return true;\n     }\n   else"}]}