{"sha": "2af63f0f53a12a7275b99d92b271d3dff5112690", "node_id": "C_kwDOANBUbNoAKDJhZjYzZjBmNTNhMTJhNzI3NWI5OWQ5MmIyNzFkM2RmZjUxMTI2OTA", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-13T14:46:57Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2021-11-13T14:46:57Z"}, "message": "Whitelity type attributes for function signature change\n\ngcc/ChangeLog:\n\n\t* ipa-fnsummary.c (compute_fn_summary): Use type_attribut_allowed_p\n\t* ipa-param-manipulation.c\n\t(ipa_param_adjustments::type_attribute_allowed_p):\n\tNew member function.\n\t(drop_type_attribute_if_params_changed_p): New function.\n\t(build_adjusted_function_type): Use it.\n\t* ipa-param-manipulation.h: Add type_attribute_allowed_p.", "tree": {"sha": "c7cb583d1070833e1a288ef07ae2e1b55fc5d7fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7cb583d1070833e1a288ef07ae2e1b55fc5d7fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2af63f0f53a12a7275b99d92b271d3dff5112690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af63f0f53a12a7275b99d92b271d3dff5112690", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2af63f0f53a12a7275b99d92b271d3dff5112690", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2af63f0f53a12a7275b99d92b271d3dff5112690/comments", "author": null, "committer": null, "parents": [{"sha": "b9365b93212041f14a7f71ba8da5af4d82240dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9365b93212041f14a7f71ba8da5af4d82240dc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9365b93212041f14a7f71ba8da5af4d82240dc6"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "7e9201a554a8b8084d9ddd56dd777c7df3935cab", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2af63f0f53a12a7275b99d92b271d3dff5112690/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2af63f0f53a12a7275b99d92b271d3dff5112690/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=2af63f0f53a12a7275b99d92b271d3dff5112690", "patch": "@@ -3141,8 +3141,8 @@ compute_fn_summary (struct cgraph_node *node, bool early)\n \t  modref summaries.  */\n        for (tree list = TYPE_ATTRIBUTES (TREE_TYPE (node->decl));\n \t    list && !no_signature; list = TREE_CHAIN (list))\n-\t if (!flag_ipa_modref\n-\t     || !is_attribute_p (\"fn spec\", get_attribute_name (list)))\n+\tif (!ipa_param_adjustments::type_attribute_allowed_p\n+\t\t\t(get_attribute_name (list)))\n \t   {\n \t     if (dump_file)\n \t\t{"}, {"sha": "0a5ed858a28bf248d71933b6cdabfe92ae069298", "filename": "gcc/ipa-param-manipulation.c", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2af63f0f53a12a7275b99d92b271d3dff5112690/gcc%2Fipa-param-manipulation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2af63f0f53a12a7275b99d92b271d3dff5112690/gcc%2Fipa-param-manipulation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-param-manipulation.c?ref=2af63f0f53a12a7275b99d92b271d3dff5112690", "patch": "@@ -279,6 +279,32 @@ fill_vector_of_new_param_types (vec<tree> *new_types, vec<tree> *otypes,\n     }\n }\n \n+/* Return false if given attribute should prevent type adjustments.  */\n+\n+bool\n+ipa_param_adjustments::type_attribute_allowed_p (tree name)\n+{\n+  if ((is_attribute_p (\"fn spec\", name) && flag_ipa_modref)\n+      || is_attribute_p (\"access\", name)\n+      || is_attribute_p (\"returns_nonnull\", name)\n+      || is_attribute_p (\"assume_aligned\", name)\n+      || is_attribute_p (\"nocf_check\", name)\n+      || is_attribute_p (\"warn_unused_result\", name))\n+    return true;\n+  return false;\n+}\n+\n+/* Return true if attribute should be dropped if parameter changed.  */\n+\n+static bool\n+drop_type_attribute_if_params_changed_p (tree name)\n+{\n+  if (is_attribute_p (\"fn spec\", name)\n+      || is_attribute_p (\"access\", name))\n+    return true;\n+  return false;\n+}\n+\n /* Build and return a function type just like ORIG_TYPE but with parameter\n    types given in NEW_PARAM_TYPES - which can be NULL if, but only if,\n    ORIG_TYPE itself has NULL TREE_ARG_TYPEs.  If METHOD2FUNC is true, also make\n@@ -337,16 +363,19 @@ build_adjusted_function_type (tree orig_type, vec<tree> *new_param_types,\n       if (skip_return)\n \tTREE_TYPE (new_type) = void_type_node;\n     }\n-  /* We only support one fn spec attribute on type.  Be sure to remove it.\n-     Once we support multiple attributes we will need to be able to unshare\n-     the list.  */\n   if (args_modified && TYPE_ATTRIBUTES (new_type))\n     {\n-      gcc_checking_assert\n-\t      (!TREE_CHAIN (TYPE_ATTRIBUTES (new_type))\n-\t       && (is_attribute_p (\"fn spec\",\n-\t\t\t  get_attribute_name (TYPE_ATTRIBUTES (new_type)))));\n+      tree t = TYPE_ATTRIBUTES (new_type);\n+      tree *last = &TYPE_ATTRIBUTES (new_type);\n       TYPE_ATTRIBUTES (new_type) = NULL;\n+      for (;t; t = TREE_CHAIN (t))\n+\tif (!drop_type_attribute_if_params_changed_p\n+\t\t(get_attribute_name (t)))\n+\t  {\n+\t    *last = copy_node (t);\n+\t    TREE_CHAIN (*last) = NULL;\n+\t    last = &TREE_CHAIN (*last);\n+\t  }\n     }\n \n   return new_type;"}, {"sha": "5adf8a223561c76dcde3998f77f7988073c2dc2e", "filename": "gcc/ipa-param-manipulation.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2af63f0f53a12a7275b99d92b271d3dff5112690/gcc%2Fipa-param-manipulation.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2af63f0f53a12a7275b99d92b271d3dff5112690/gcc%2Fipa-param-manipulation.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-param-manipulation.h?ref=2af63f0f53a12a7275b99d92b271d3dff5112690", "patch": "@@ -254,6 +254,7 @@ class GTY(()) ipa_param_adjustments\n   /* If true, make the function not return any value.  */\n   bool m_skip_return;\n \n+  static bool type_attribute_allowed_p (tree);\n private:\n   ipa_param_adjustments () {}\n "}]}