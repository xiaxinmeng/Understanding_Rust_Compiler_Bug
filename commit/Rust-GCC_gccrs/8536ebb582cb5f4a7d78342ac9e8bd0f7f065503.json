{"sha": "8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUzNmViYjU4MmNiNWY0YTdkNzgzNDJhYzllOGJkMGY3ZjA2NTUwMw==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-05-26T01:58:51Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-05-26T01:58:51Z"}, "message": "config.gcc: Add i386/t-fprules-softfp64 and soft-fp/t-softfp to x86-darwin configurations.\n\n2007-05-25  Eric Christopher  <echristo@apple.com>\n\n\t    * config.gcc: Add i386/t-fprules-softfp64 and soft-fp/t-softfp\n\t    to x86-darwin configurations.\n\t    * config/i386/t-darwin: Add softfp support.\n\t    * config/i386/t-darwin64: Ditto.\n\t    * config/i386/sfp-machine.h: If mach then don't use\n\t    aliasing, emit a stub to call.\n\nFrom-SVN: r125085", "tree": {"sha": "462b9a3aa0607bc89e104a65edaa0f8e40184f77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/462b9a3aa0607bc89e104a65edaa0f8e40184f77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/comments", "author": null, "committer": null, "parents": [{"sha": "9a3e1f0aaacb49b394a204ca7ad0cc4cf62a7084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a3e1f0aaacb49b394a204ca7ad0cc4cf62a7084", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a3e1f0aaacb49b394a204ca7ad0cc4cf62a7084"}], "stats": {"total": 57, "additions": 40, "deletions": 17}, "files": [{"sha": "ad0d988ec631c55989d9a6a4a7abf50293febd1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 25, "deletions": 16, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "patch": "@@ -1,3 +1,12 @@\n+2007-05-25  Eric Christopher  <echristo@apple.com>\n+\n+\t* config.gcc: Add i386/t-fprules-softfp64 and soft-fp/t-softfp\n+\tto x86-darwin configurations.\n+\t* config/i386/t-darwin: Add softfp support.\n+\t* config/i386/t-darwin64: Ditto.\n+\t* config/i386/sfp-machine.h: If mach then don't use\n+\taliasing, emit a stub to call.\n+\n 2007-05-25  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* cfglayout.c, cgraphunit.c, config/avr/avr.c, fold-const.c,\n@@ -283,7 +292,7 @@\n \tsupport for complex modes.  Fill in DECL_RESULT for stubdecl.\n \t(mips_init_libfuncs): Remove redundant TARGET_MIPS16 check.\n \n-\t* config/mips/mips16.S \n+\t* config/mips/mips16.S\n \t(RET, ARG1, ARG2): New.\n \t(MERGE_GPRf, MERGE_GPRt): New.\n \t(DELAYt, DELAYf): New.\n@@ -352,7 +361,7 @@\n \t(__mips16_call_stub_dc_6): New.\n \t(__mips16_call_stub_dc_9): New.\n \t(__mips16_call_stub_dc_10): New.\n-\t\n+\n \t* config/mips/t-elf (LIB1ASMFUNCS): Add MIPS16 floating-point stubs.\n \t* config/mips/t-isa3264 (LIB1ASMFUNCS): Likewise.\n \t* config/mips/t-r2900 (LIB1ASMFUNCS): Likewise.\n@@ -373,7 +382,7 @@\n \tPR target/30474\n \t* config/score/score.c (score_print_operand): Make sure that only\n \tlower bits are used.\n-\t\n+\n 2007-05-22  Ian Lance Taylor  <iant@google.com>\n \n \t* tree-vrp.c (avoid_overflow_infinity): New static function,\n@@ -898,7 +907,7 @@\n \t* stmt.c (expand_case): Do not call squeeze_notes.\n \n 2007-05-20  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n-\t\n+\n \tPR middle-end/7651\n \tPR c++/11856\n \tPR c/12963\n@@ -941,7 +950,7 @@\n \t* doc/invoke.texi (Wreturn-type): Complete description.\n \t(Wextra): Delete item about return-type warning.\n \t* c-decl.c: Delete redundant Wextra warning.\n-\t\n+\n 2007-05-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/31585\n@@ -990,26 +999,26 @@\n 2007-05-19 Andy Hutchinson <HutchinsonAndy@netscape.net>\n \t   Anatoly Sokolov <aesok@dol.ru>\n \n-\t* config/avr/avr-protos.h (expand_prologue, expand_epilogue, \n+\t* config/avr/avr-protos.h (expand_prologue, expand_epilogue,\n \tavr_epilogue_uses) : Add declaration.\n \t* config/avr/predicates.md (avr_sp_immediate_operand): New predicate.\n \t* config/avr/constraints.md (R): New constraint.\n-\tconfig/avr/avr.md (SREG_ADDR, UNSPEC_SEI, UNSPEC_CLI, \n+\tconfig/avr/avr.md (SREG_ADDR, UNSPEC_SEI, UNSPEC_CLI,\n \tUNSPECV_PROLOGUE_SAVES, UNSPECV_EPILOGUE_RESTORES): New constants.\n \t(*pop1, *pop2, *pop3, *pop4, *pop5): Combine into ...\n \t(*addhi3_sp_R_pc2, *addhi3_sp_R_pc3): ... these patterns.\n-\t(*movhi_sp, popqi, pophi, enable_interrupt, disable_interrupt, \n+\t(*movhi_sp, popqi, pophi, enable_interrupt, disable_interrupt,\n \tcall_prologue_saves, epilogue_restores, return_from_epilogue,\n-\treturn_from_main_epilogue, return_from_interrupt_epilogue, \n+\treturn_from_main_epilogue, return_from_interrupt_epilogue,\n \treturn_from_naked_epilogue, prologue, epilogue): New patterns.\n \t(jump): Handle symbol reference.\n-\t* config/avr/avr.c (out_adj_frame_ptr, out_set_stack_ptr, \n-\tavr_output_function_prologue, avr_output_function_epilogue): Remove \n+\t* config/avr/avr.c (out_adj_frame_ptr, out_set_stack_ptr,\n+\tavr_output_function_prologue, avr_output_function_epilogue): Remove\n \tfunctions.\n-\t(avr_init_machine_status, expand_prologue, expand_epilogue, \n-\tavr_asm_function_end_prologue, avr_epilogue_uses, \n+\t(avr_init_machine_status, expand_prologue, expand_epilogue,\n+\tavr_asm_function_end_prologue, avr_epilogue_uses,\n \tavr_asm_function_begin_epilogue): New functions.\n-\t(prologue_size, epilogue_size, jump_tables_size): Remove global \n+\t(prologue_size, epilogue_size, jump_tables_size): Remove global\n \tvariables.\n \t(TARGET_ASM_FUNCTION_PROLOGUE, TARGET_ASM_FUNCTION_EPILOGUE): Remove.\n \t(TARGET_ASM_FUNCTION_END_PROLOGUE): Define.\n@@ -1254,15 +1263,15 @@\n \tand soft-fp/t-softfp to tmake_file.\n \t(i[34567]86-*-linux*, i[34567]86-*-kfreebsd*-gnu,\n \ti[34567]86-*-knetbsd*-gnu): Ditto for --enable-targets=all.\n-\t\n+\n \t* config/i386/t-linux64 (softfp_wrap_start): New.\n \t(softfp_wrap_end): New.\n \t* config/i386/i386.c (ix86_scalar_mode_supported): TFmode is\n \tsupported for TARGET_64BIT.\n \n 2007-05-16  Rafael Avila de Espindola  <espindola@google.com>\n \n-\t* c-common.c (c_common_signed_or_unsigned_type): Emulate \n+\t* c-common.c (c_common_signed_or_unsigned_type): Emulate\n \tc_common_unsigned_type behavior.\n \n 2007-05-16  Paolo Bonzini  <bonzini@gnu.org>"}, {"sha": "977aafea3f94eca85006e44f9843d8b0f5d444c6", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "patch": "@@ -1052,11 +1052,12 @@ i[34567]86-*-darwin*)\n \t# support.\n \twith_arch=${with_arch:-nocona}\n \twith_cpu=${with_cpu:-generic}\n+\ttmake_file=\"${tmake_file} i386/t-fprules-softfp64 soft-fp/t-softfp\"\n \t;;\n x86_64-*-darwin*)\n \twith_arch=${with_arch:-nocona}\n \twith_cpu=${with_cpu:-generic}\n-\ttmake_file=\"t-darwin ${cpu_type}/t-darwin64 t-slibgcc-darwin\"\n+\ttmake_file=\"t-darwin ${cpu_type}/t-darwin64 t-slibgcc-darwin i386/t-fprules-softfp64 soft-fp/t-softfp\"\n \ttm_file=\"${tm_file} ${cpu_type}/darwin64.h\"\n \t;;\n i[34567]86-*-elf*)"}, {"sha": "e03ae5f9cb8c3f03309a028b2fa9991ee500b237", "filename": "gcc/config/i386/sfp-machine.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2Fconfig%2Fi386%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2Fconfig%2Fi386%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsfp-machine.h?ref=8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "patch": "@@ -127,6 +127,13 @@ struct fenv\n #define __BYTE_ORDER __LITTLE_ENDIAN\n \n /* Define ALIASNAME as a strong alias for NAME.  */\n+#if defined __MACH__\n+/* Mach-O doesn't support aliasing.  If these functions ever return\n+   anything but int we need to revisit this... */\n+#define strong_alias(name, aliasname) \\\n+  int aliasname (TFtype a, TFtype b) { return name(a, b); }\n+#else\n # define strong_alias(name, aliasname) _strong_alias(name, aliasname)\n # define _strong_alias(name, aliasname) \\\n   extern __typeof (name) aliasname __attribute__ ((alias (#name)));\n+#endif"}, {"sha": "6feb48a20a4ec9b7627925a293af235633ac4a5e", "filename": "gcc/config/i386/t-darwin", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2Fconfig%2Fi386%2Ft-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2Fconfig%2Fi386%2Ft-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-darwin?ref=8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "patch": "@@ -2,3 +2,6 @@ MULTILIB_OPTIONS = m64\n MULTILIB_DIRNAMES = x86_64\n LIB2_SIDITI_CONV_FUNCS=yes\n LIB2FUNCS_EXTRA = $(srcdir)/config/darwin-64.c\n+\n+softfp_wrap_start := '\\#ifdef __x86_64__'\n+softfp_wrap_end := '\\#endif'"}, {"sha": "2e55cb786d7c2e258a682b72a288edb07def7729", "filename": "gcc/config/i386/t-darwin64", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2Fconfig%2Fi386%2Ft-darwin64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8536ebb582cb5f4a7d78342ac9e8bd0f7f065503/gcc%2Fconfig%2Fi386%2Ft-darwin64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-darwin64?ref=8536ebb582cb5f4a7d78342ac9e8bd0f7f065503", "patch": "@@ -1,2 +1,5 @@\n LIB2_SIDITI_CONV_FUNCS=yes\n LIB2FUNCS_EXTRA = $(srcdir)/config/darwin-64.c\n+\n+softfp_wrap_start := '\\#ifdef __x86_64__'\n+softfp_wrap_end := '\\#endif'"}]}