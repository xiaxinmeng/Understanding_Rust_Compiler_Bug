{"sha": "159e8ef0c6673f73ab33ba86dd13652dfdae342c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU5ZThlZjBjNjY3M2Y3M2FiMzNiYTg2ZGQxMzY1MmRmZGFlMzQyYw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-07-21T19:06:02Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-07-21T19:06:02Z"}, "message": "016-07-21  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR middle-end/71876\n        * calls.c (gimple_maybe_alloca_call_p): New function.  Return true\n        if STMT may be an alloca call.\n        (gimple_alloca_call_p, alloca_call_p): Return only true for the\n        builtin alloca call.\n        * calls.h (gimple_maybe_alloca_call_p): New function.\n        * tree-inline.c (inline_forbidden_p_stmt): Use\n        gimple_maybe_alloca_call_p here.\n\nFrom-SVN: r238605", "tree": {"sha": "ce852e8aeab3c5945be947a5e82a7a2fe2b2bca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce852e8aeab3c5945be947a5e82a7a2fe2b2bca3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/159e8ef0c6673f73ab33ba86dd13652dfdae342c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159e8ef0c6673f73ab33ba86dd13652dfdae342c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/159e8ef0c6673f73ab33ba86dd13652dfdae342c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/159e8ef0c6673f73ab33ba86dd13652dfdae342c/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df26a50d0d0665879975138bfe4f05285b2fadae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df26a50d0d0665879975138bfe4f05285b2fadae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df26a50d0d0665879975138bfe4f05285b2fadae"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "b5b24a031271e035f63833e1ca1d74468ddb9f53", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159e8ef0c6673f73ab33ba86dd13652dfdae342c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159e8ef0c6673f73ab33ba86dd13652dfdae342c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=159e8ef0c6673f73ab33ba86dd13652dfdae342c", "patch": "@@ -1,3 +1,14 @@\n+2016-07-21  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n+\n+\tPR middle-end/71876\n+\t* calls.c (gimple_maybe_alloca_call_p): New function.  Return true\n+\tif STMT may be an alloca call.\n+\t(gimple_alloca_call_p, alloca_call_p): Return only true for the\n+\tbuiltin alloca call.\n+\t* calls.h (gimple_maybe_alloca_call_p): New function.\n+\t* tree-inline.c (inline_forbidden_p_stmt): Use\n+\tgimple_maybe_alloca_call_p here.\n+\n 2016-07-21  David Malcolm  <dmalcolm@redhat.com>\n \n \t* spellcheck-tree.c (best_macro_match::best_macro_match):"}, {"sha": "bb954ef5b09d4921a61dee7cd8683ddbd4625cfb", "filename": "gcc/calls.c", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159e8ef0c6673f73ab33ba86dd13652dfdae342c/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159e8ef0c6673f73ab33ba86dd13652dfdae342c/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=159e8ef0c6673f73ab33ba86dd13652dfdae342c", "patch": "@@ -617,10 +617,10 @@ setjmp_call_p (const_tree fndecl)\n }\n \n \n-/* Return true if STMT is an alloca call.  */\n+/* Return true if STMT may be an alloca call.  */\n \n bool\n-gimple_alloca_call_p (const gimple *stmt)\n+gimple_maybe_alloca_call_p (const gimple *stmt)\n {\n   tree fndecl;\n \n@@ -634,16 +634,48 @@ gimple_alloca_call_p (const gimple *stmt)\n   return false;\n }\n \n-/* Return true when exp contains alloca call.  */\n+/* Return true if STMT is a builtin alloca call.  */\n+\n+bool\n+gimple_alloca_call_p (const gimple *stmt)\n+{\n+  tree fndecl;\n+\n+  if (!is_gimple_call (stmt))\n+    return false;\n+\n+  fndecl = gimple_call_fndecl (stmt);\n+  if (fndecl && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL)\n+    switch (DECL_FUNCTION_CODE (fndecl))\n+      {\n+      case BUILT_IN_ALLOCA:\n+      case BUILT_IN_ALLOCA_WITH_ALIGN:\n+        return true;\n+      default:\n+\tbreak;\n+      }\n+\n+  return false;\n+}\n+\n+/* Return true when exp contains a builtin alloca call.  */\n \n bool\n alloca_call_p (const_tree exp)\n {\n   tree fndecl;\n   if (TREE_CODE (exp) == CALL_EXPR\n       && (fndecl = get_callee_fndecl (exp))\n-      && (special_function_p (fndecl, 0) & ECF_MAY_BE_ALLOCA))\n-    return true;\n+      && DECL_BUILT_IN_CLASS (fndecl) == BUILT_IN_NORMAL)\n+    switch (DECL_FUNCTION_CODE (fndecl))\n+      {\n+      case BUILT_IN_ALLOCA:\n+      case BUILT_IN_ALLOCA_WITH_ALIGN:\n+        return true;\n+      default:\n+\tbreak;\n+      }\n+\n   return false;\n }\n "}, {"sha": "e14415646ca68a9fa9af4917125467471f83ec0b", "filename": "gcc/calls.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159e8ef0c6673f73ab33ba86dd13652dfdae342c/gcc%2Fcalls.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159e8ef0c6673f73ab33ba86dd13652dfdae342c/gcc%2Fcalls.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.h?ref=159e8ef0c6673f73ab33ba86dd13652dfdae342c", "patch": "@@ -23,6 +23,7 @@ along with GCC; see the file COPYING3.  If not see\n extern int flags_from_decl_or_type (const_tree);\n extern int call_expr_flags (const_tree);\n extern int setjmp_call_p (const_tree);\n+extern bool gimple_maybe_alloca_call_p (const gimple *);\n extern bool gimple_alloca_call_p (const gimple *);\n extern bool alloca_call_p (const_tree);\n extern bool must_pass_in_stack_var_size (machine_mode, const_tree);"}, {"sha": "f2b44915a3ef31ef1cca99d6579b84832b24e8e3", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/159e8ef0c6673f73ab33ba86dd13652dfdae342c/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/159e8ef0c6673f73ab33ba86dd13652dfdae342c/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=159e8ef0c6673f73ab33ba86dd13652dfdae342c", "patch": "@@ -3577,7 +3577,7 @@ inline_forbidden_p_stmt (gimple_stmt_iterator *gsi, bool *handled_ops_p,\n \t RAM instead of 256MB.  Don't do so for alloca calls emitted for\n \t VLA objects as those can't cause unbounded growth (they're always\n \t wrapped inside stack_save/stack_restore regions.  */\n-      if (gimple_alloca_call_p (stmt)\n+      if (gimple_maybe_alloca_call_p (stmt)\n \t  && !gimple_call_alloca_for_var_p (as_a <gcall *> (stmt))\n \t  && !lookup_attribute (\"always_inline\", DECL_ATTRIBUTES (fn)))\n \t{"}]}