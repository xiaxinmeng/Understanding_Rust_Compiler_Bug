{"sha": "289f9db7db45a044bfc59831b56e25cb4aa2e7c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg5ZjlkYjdkYjQ1YTA0NGJmYzU5ODMxYjU2ZTI1Y2I0YWEyZTdjOA==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-05-30T13:42:24Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-05-30T13:42:24Z"}, "message": "2004-05-30  Michael Koch  <konqueror@gmx.de>\n\n\t* java/text/DecimalFormat.java\n\t(parse): Fixed parsing of decimal strings. Number of maximum\n\tdigits to be read should now work.\n\t* java/text/SimpleDateFormat.java\n\t(SimpleDateFormat): Set maximumFractionDigit to 0 for the number\n\tformatter. This fixes DateFormatTest.\n\nFrom-SVN: r82449", "tree": {"sha": "587f6c3511e8ed3079e8952d2d53c902bbaacd84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/587f6c3511e8ed3079e8952d2d53c902bbaacd84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/289f9db7db45a044bfc59831b56e25cb4aa2e7c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/289f9db7db45a044bfc59831b56e25cb4aa2e7c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/289f9db7db45a044bfc59831b56e25cb4aa2e7c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/289f9db7db45a044bfc59831b56e25cb4aa2e7c8/comments", "author": null, "committer": null, "parents": [{"sha": "1b2545bcf251668d695e8cbf9b9acfd4507eef61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b2545bcf251668d695e8cbf9b9acfd4507eef61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b2545bcf251668d695e8cbf9b9acfd4507eef61"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "12498406a09ee87974590d8bd4456a908634995c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289f9db7db45a044bfc59831b56e25cb4aa2e7c8/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289f9db7db45a044bfc59831b56e25cb4aa2e7c8/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=289f9db7db45a044bfc59831b56e25cb4aa2e7c8", "patch": "@@ -1,3 +1,12 @@\n+2004-05-30  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/text/DecimalFormat.java\n+\t(parse): Fixed parsing of decimal strings. Number of maximum\n+\tdigits to be read should now work.\n+\t* java/text/SimpleDateFormat.java\n+\t(SimpleDateFormat): Set maximumFractionDigit to 0 for the number\n+\tformatter. This fixes DateFormatTest.\n+\n 2004-05-30  Michael Koch  <konqueror@gmx.de>\n \n \t* java/nio/Buffer.java"}, {"sha": "eda4d0437401b77d0ff775bea928ad6b1b9e9407", "filename": "libjava/java/text/DecimalFormat.java", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289f9db7db45a044bfc59831b56e25cb4aa2e7c8/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289f9db7db45a044bfc59831b56e25cb4aa2e7c8/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormat.java?ref=289f9db7db45a044bfc59831b56e25cb4aa2e7c8", "patch": "@@ -42,13 +42,11 @@\n import gnu.java.text.FormatCharacterIterator;\n import gnu.java.text.StringFormatBuffer;\n \n+import java.io.IOException;\n+import java.io.ObjectInputStream;\n import java.util.Currency;\n import java.util.HashMap;\n import java.util.Locale;\n-import java.util.MissingResourceException;\n-import java.util.ResourceBundle;\n-import java.io.ObjectInputStream;\n-import java.io.IOException;\n \n /**\n  * @author Tom Tromey <tromey@cygnus.com>\n@@ -849,15 +847,21 @@ else if (got_pos)\n     // FIXME: handle Inf and NaN.\n \n     // FIXME: do we have to respect minimum digits?\n-    // What about leading zeros?  What about multiplier?\n+    // What about multiplier?\n \n     StringBuffer buf = int_buf;\n     StringBuffer frac_buf = null;\n     StringBuffer exp_buf = null;\n     int start_index = index;\n     int max = str.length();\n     int exp_index = -1;\n-    int last = index + MAXIMUM_INTEGER_DIGITS;\n+    int last = index + maximumIntegerDigits; \n+\n+    if (maximumFractionDigits > 0)\n+      last += maximumFractionDigits + 1;\n+    \n+    if (useExponentialNotation)\n+      last += minExponentDigits + 1;\n \n     if (last > 0 && max > last)\n       max = last;"}, {"sha": "ea3e09fab46268f7052303b47abf3e2c7648e173", "filename": "libjava/java/text/SimpleDateFormat.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/289f9db7db45a044bfc59831b56e25cb4aa2e7c8/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/289f9db7db45a044bfc59831b56e25cb4aa2e7c8/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java?ref=289f9db7db45a044bfc59831b56e25cb4aa2e7c8", "patch": "@@ -189,6 +189,7 @@ public SimpleDateFormat()\n     numberFormat = NumberFormat.getInstance(locale);\n     numberFormat.setGroupingUsed (false);\n     numberFormat.setParseIntegerOnly (true);\n+    numberFormat.setMaximumFractionDigits (0);\n   }\n   \n   /**\n@@ -216,6 +217,7 @@ public SimpleDateFormat(String pattern, Locale locale)\n     numberFormat = NumberFormat.getInstance(locale);\n     numberFormat.setGroupingUsed (false);\n     numberFormat.setParseIntegerOnly (true);\n+    numberFormat.setMaximumFractionDigits (0);\n   }\n \n   /**\n@@ -234,6 +236,7 @@ public SimpleDateFormat(String pattern, DateFormatSymbols formatData)\n     numberFormat = NumberFormat.getInstance();\n     numberFormat.setGroupingUsed (false);\n     numberFormat.setParseIntegerOnly (true);\n+    numberFormat.setMaximumFractionDigits (0);\n   }\n \n   // What is the difference between localized and unlocalized?  The"}]}