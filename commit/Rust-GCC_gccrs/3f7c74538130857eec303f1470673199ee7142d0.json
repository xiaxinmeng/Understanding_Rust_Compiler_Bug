{"sha": "3f7c74538130857eec303f1470673199ee7142d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y3Yzc0NTM4MTMwODU3ZWVjMzAzZjE0NzA2NzMxOTllZTcxNDJkMA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-17T02:36:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-17T02:36:04Z"}, "message": "re PR c++/47570 ([C++0x] \"one() >= 0\" isn't constexpr for unsigned int, yet == and > is.)\n\n\tPR c++/47570\n\t* semantics.c (cxx_eval_constant_expression) [COMPOUND_EXPR]: Don't\n\tuse the generic binary expression handling.\n\nFrom-SVN: r171083", "tree": {"sha": "15fc49d06546fdf85ce0e2244a0eec39877ac3cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15fc49d06546fdf85ce0e2244a0eec39877ac3cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f7c74538130857eec303f1470673199ee7142d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7c74538130857eec303f1470673199ee7142d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f7c74538130857eec303f1470673199ee7142d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f7c74538130857eec303f1470673199ee7142d0/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab958d7c810c669f7f6ceafeaa886bc8a7f68d6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab958d7c810c669f7f6ceafeaa886bc8a7f68d6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab958d7c810c669f7f6ceafeaa886bc8a7f68d6a"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "074c776b08de5e635100baae84ca422451e15eb5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f7c74538130857eec303f1470673199ee7142d0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f7c74538130857eec303f1470673199ee7142d0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3f7c74538130857eec303f1470673199ee7142d0", "patch": "@@ -1,3 +1,9 @@\n+2011-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/47570\n+\t* semantics.c (cxx_eval_constant_expression) [COMPOUND_EXPR]: Don't\n+\tuse the generic binary expression handling.\n+\n 2011-03-16  Diego Novillo  <dnovillo@google.com>\n \n \t* Make-lang.in (CXX_PARSER_H): New."}, {"sha": "a0c5ae327a9c34b98c10927fd410663331b38a5e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f7c74538130857eec303f1470673199ee7142d0/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f7c74538130857eec303f1470673199ee7142d0/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=3f7c74538130857eec303f1470673199ee7142d0", "patch": "@@ -6915,7 +6915,13 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n \t  r = cxx_eval_constant_expression (call, op0, allow_non_constant,\n \t\t\t\t\t    addr, non_constant_p);\n \telse\n-\t  goto binary;\n+\t  {\n+\t    /* Check that the LHS is constant and then discard it.  */\n+\t    cxx_eval_constant_expression (call, op0, allow_non_constant,\n+\t\t\t\t\t  false, non_constant_p);\n+\t    r = cxx_eval_constant_expression (call, op1, allow_non_constant,\n+\t\t\t\t\t      addr, non_constant_p);\n+\t  }\n       }\n       break;\n \n@@ -6957,7 +6963,6 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n     case UNEQ_EXPR:\n     case RANGE_EXPR:\n     case COMPLEX_EXPR:\n-    binary:\n       r = cxx_eval_binary_expression (call, t, allow_non_constant, addr,\n \t\t\t\t      non_constant_p);\n       break;"}, {"sha": "355e09deac53e5f892867ffb64a858b46252cc55", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f7c74538130857eec303f1470673199ee7142d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f7c74538130857eec303f1470673199ee7142d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3f7c74538130857eec303f1470673199ee7142d0", "patch": "@@ -1,3 +1,7 @@\n+2011-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/constexpr-47570.C: New.\n+\n 2011-03-16  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR debug/47510"}, {"sha": "c60ba86586222c411a74bc3efb9e6348eac9a078", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-47570.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f7c74538130857eec303f1470673199ee7142d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47570.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f7c74538130857eec303f1470673199ee7142d0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47570.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-47570.C?ref=3f7c74538130857eec303f1470673199ee7142d0", "patch": "@@ -0,0 +1,25 @@\n+// PR c++/47570\n+// { dg-options -std=c++0x }\n+\n+unsigned int constexpr one()\n+{ return 1; }\n+\n+int constexpr one_B()\n+{ return 1; }\n+\n+int main()\n+{\n+  // FAIL TO COMPILE:\n+  static bool constexpr SC_huh1 = ((unsigned int)one()) >= ((unsigned int)0);\n+  static bool constexpr SC_huh2 = one() >= ((unsigned int)0);\n+  static bool constexpr SC_huh3 = one() >= 0;\n+\n+  // COMPILE OK:\n+  static bool constexpr SC_huh4 = ((one() == 0) || (one() > 0));\n+  static bool constexpr SC_huh5 = one() == 0;\n+  static bool constexpr SC_huh6 = one() > 0;\n+  static bool constexpr SC_huh7 = one_B() >= 0;\n+  static bool constexpr SC_huh8 = one() >= 1;\n+\n+  return SC_huh3;\n+}"}]}