{"sha": "dd55e286d4b1ea92a85632f15c416c513d2455ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ1NWUyODZkNGIxZWE5MmE4NTYzMmYxNWM0MTZjNTEzZDI0NTViYQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-12-23T06:41:52Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2005-12-23T06:41:52Z"}, "message": "re PR fortran/25029 (Assumed size array can be associated with array pointer without upper bound of last dimension)\n\n2005-12-23  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/25029\n\tPR fortran/21256\n\t*resolve.c(resolve_function): Remove assumed size checking for SIZE\n\tand UBOUND and rely on their built-in checking.\n\n2005-12-23  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/25029\n\tPR fortran/21256\n\t*gfortran.dg/initialization_1.f90: Add test of SIZE.\n\nFrom-SVN: r109009", "tree": {"sha": "506156cf348b7afef2c0fadc712fea9c1f65323d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/506156cf348b7afef2c0fadc712fea9c1f65323d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd55e286d4b1ea92a85632f15c416c513d2455ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd55e286d4b1ea92a85632f15c416c513d2455ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd55e286d4b1ea92a85632f15c416c513d2455ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd55e286d4b1ea92a85632f15c416c513d2455ba/comments", "author": null, "committer": null, "parents": [{"sha": "01ad6816a1ebfcbccabd2aaecc22ffa8d047f0e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ad6816a1ebfcbccabd2aaecc22ffa8d047f0e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ad6816a1ebfcbccabd2aaecc22ffa8d047f0e6"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "4453d8924b4013a20c362e3ec13da36da15b5b90", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd55e286d4b1ea92a85632f15c416c513d2455ba/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd55e286d4b1ea92a85632f15c416c513d2455ba/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=dd55e286d4b1ea92a85632f15c416c513d2455ba", "patch": "@@ -1,3 +1,10 @@\n+2005-12-23  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/25029\n+\tPR fortran/21256\n+\t*resolve.c(resolve_function): Remove assumed size checking for SIZE\n+\tand UBOUND and rely on their built-in checking.\n+\n 2005-12-22  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n \n \tPR fortran/18990"}, {"sha": "4966a633c2a5443b23ac0b47edc108b7c5fb8a11", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd55e286d4b1ea92a85632f15c416c513d2455ba/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd55e286d4b1ea92a85632f15c416c513d2455ba/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=dd55e286d4b1ea92a85632f15c416c513d2455ba", "patch": "@@ -1231,7 +1231,9 @@ resolve_function (gfc_expr * expr)\n \n   else if (expr->value.function.actual != NULL\n       && expr->value.function.isym != NULL\n-      && strcmp (expr->value.function.isym->name, \"lbound\"))\n+      && strcmp (expr->value.function.isym->name, \"lbound\")\n+      && strcmp (expr->value.function.isym->name, \"ubound\")\n+      && strcmp (expr->value.function.isym->name, \"size\"))\n     {\n       /* Array instrinsics must also have the last upper bound of an\n \t asumed size array argument.  */"}, {"sha": "9c8789a0e6bf2e2a666cc4dee5dea41b82421ca9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd55e286d4b1ea92a85632f15c416c513d2455ba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd55e286d4b1ea92a85632f15c416c513d2455ba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dd55e286d4b1ea92a85632f15c416c513d2455ba", "patch": "@@ -1,3 +1,9 @@\n+2005-12-23  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/25029\n+\tPR fortran/21256\n+\t*gfortran.dg/initialization_1.f90: Add test of SIZE.\n+\n 2005-12-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/25307"}, {"sha": "4e852697c92c6ba97b3826a6d6e5142f45ce864d", "filename": "gcc/testsuite/gfortran.dg/initialization_1.f90", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd55e286d4b1ea92a85632f15c416c513d2455ba/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd55e286d4b1ea92a85632f15c416c513d2455ba/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finitialization_1.f90?ref=dd55e286d4b1ea92a85632f15c416c513d2455ba", "patch": "@@ -20,6 +20,7 @@ subroutine foo(ch1, x, y)\n \n     real(8) :: x (1:2, *)\n     real(8) :: y (0:,:)\n+    integer :: i\n \n ! However, this gives a warning because it is an initialization expression.\n     integer :: l1 = len (ch1)     ! { dg-warning \"assumed character length variable\" }\n@@ -29,9 +30,11 @@ subroutine foo(ch1, x, y)\n     integer :: m2(2) = shape (x)  ! { dg-error \"assumed size array\" }\n \n ! These are warnings because they are gfortran extensions.\n+    integer :: m3 = size (x, 1)   ! { dg-warning \"Evaluation of nonstandard initialization\" }\n     integer :: m4(2) = shape (z)  ! { dg-warning \"Evaluation of nonstandard initialization\" }\n \n ! This does not depend on non-constant properties.\n     real(8) :: big = huge (x)\n+\n   end subroutine foo  \n end module const"}]}