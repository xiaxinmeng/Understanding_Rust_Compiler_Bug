{"sha": "b3a06f593c5e947e2ec92da37878d423ce6f021e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNhMDZmNTkzYzVlOTQ3ZTJlYzkyZGEzNzg3OGQ0MjNjZTZmMDIxZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-09-10T14:28:13Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-09-10T14:28:13Z"}, "message": "va-arg-pack-1.C: New test.\n\n\t* g++.dg/ext/va-arg-pack-1.C: New test.\n\t* g++.dg/ext/va-arg-pack-2.C: New test.\n\nFrom-SVN: r128345", "tree": {"sha": "fcc465928c71ec04ef08b2fe27839dd94e753258", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcc465928c71ec04ef08b2fe27839dd94e753258"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3a06f593c5e947e2ec92da37878d423ce6f021e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3a06f593c5e947e2ec92da37878d423ce6f021e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3a06f593c5e947e2ec92da37878d423ce6f021e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3a06f593c5e947e2ec92da37878d423ce6f021e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c03353e21984134ac5e90d299732250092e31362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c03353e21984134ac5e90d299732250092e31362", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c03353e21984134ac5e90d299732250092e31362"}], "stats": {"total": 196, "additions": 196, "deletions": 0}, "files": [{"sha": "a5693acdd5b6a4bb1939bcf0114cf9e9792b68ac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3a06f593c5e947e2ec92da37878d423ce6f021e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3a06f593c5e947e2ec92da37878d423ce6f021e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b3a06f593c5e947e2ec92da37878d423ce6f021e", "patch": "@@ -1,3 +1,8 @@\n+2007-09-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* g++.dg/ext/va-arg-pack-1.C: New test.\n+\t* g++.dg/ext/va-arg-pack-2.C: New test.\n+\n 2007-09-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/33369"}, {"sha": "b81d0e58d64fe1bcdae4a3653ea63da9678a439b", "filename": "gcc/testsuite/g++.dg/ext/va-arg-pack-1.C", "status": "added", "additions": 145, "deletions": 0, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3a06f593c5e947e2ec92da37878d423ce6f021e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fva-arg-pack-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3a06f593c5e947e2ec92da37878d423ce6f021e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fva-arg-pack-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fva-arg-pack-1.C?ref=b3a06f593c5e947e2ec92da37878d423ce6f021e", "patch": "@@ -0,0 +1,145 @@\n+// __builtin_va_arg_pack () builtin tests.\n+// { dg-do run }\n+// { dg-options \"-O2\" }\n+\n+#include <stdarg.h>\n+\n+extern \"C\" void abort (void);\n+\n+int v1 = 8;\n+long int v2 = 3;\n+void *v3 = (void *) &v2;\n+struct A { char c[16]; } v4 = { \"foo\" };\n+long double v5 = 40;\n+char seen[20];\n+int cnt;\n+\n+__attribute__ ((noinline)) int\n+foo1 (int x, int y, ...)\n+{\n+  int i;\n+  long int l;\n+  void *v;\n+  struct A a;\n+  long double ld;\n+  va_list ap;\n+\n+  va_start (ap, y);\n+  if (x < 0 || x >= 20 || seen[x])\n+    abort ();\n+  seen[x] = ++cnt;\n+  if (y != 6)\n+    abort ();\n+  i = va_arg (ap, int);\n+  if (i != 5)\n+    abort ();\n+  switch (x)\n+    {\n+    case 0:\n+      i = va_arg (ap, int);\n+      if (i != 9 || v1 != 9)\n+\tabort ();\n+      a = va_arg (ap, struct A);\n+      if (__builtin_memcmp (a.c, v4.c, sizeof (a.c)) != 0)\n+\tabort ();\n+      v = (void *) va_arg (ap, struct A *);\n+      if (v != (void *) &v4)\n+\tabort ();\n+      l = va_arg (ap, long int);\n+      if (l != 3 || v2 != 4)\n+\tabort ();\n+      break;\n+    case 1:\n+      ld = va_arg (ap, long double);\n+      if (ld != 41 || v5 != ld)\n+\tabort ();\n+      i = va_arg (ap, int);\n+      if (i != 8)\n+\tabort ();\n+      v = va_arg (ap, void *);\n+      if (v != &v2)\n+\tabort ();\n+      break;\n+    case 2:\n+      break;\n+    default:\n+      abort ();\n+    }\n+  va_end (ap);\n+  return x;\n+}\n+\n+__attribute__ ((noinline)) int\n+foo2 (int x, int y, ...)\n+{\n+  long long int ll;\n+  void *v;\n+  struct A a, b;\n+  long double ld;\n+  va_list ap;\n+\n+  va_start (ap, y);\n+  if (x < 0 || x >= 20 || seen[x])\n+    abort ();\n+  seen[x] = ++cnt | 64;\n+  if (y != 10)\n+    abort ();\n+  switch (x)\n+    {\n+    case 11:\n+      break;\n+    case 12:\n+      ld = va_arg (ap, long double);\n+      if (ld != 41 || v5 != 40)\n+\tabort ();\n+      a = va_arg (ap, struct A);\n+      if (__builtin_memcmp (a.c, v4.c, sizeof (a.c)) != 0)\n+\tabort ();\n+      b = va_arg (ap, struct A);\n+      if (__builtin_memcmp (b.c, v4.c, sizeof (b.c)) != 0)\n+\tabort ();\n+      v = va_arg (ap, void *);\n+      if (v != &v2)\n+\tabort ();\n+      ll = va_arg (ap, long long int);\n+      if (ll != 16LL)\n+\tabort ();\n+      break;\n+    case 2:\n+      break;\n+    default:\n+      abort ();\n+    }\n+  va_end (ap);\n+  return x + 8;\n+}\n+\n+__attribute__ ((noinline)) int\n+foo3 (void)\n+{\n+  return 6;\n+}\n+\n+extern inline __attribute__ ((always_inline, gnu_inline)) int\n+bar (int x, ...)\n+{\n+  if (x < 10)\n+    return foo1 (x, foo3 (), 5, __builtin_va_arg_pack ());\n+  return foo2 (x, foo3 () + 4, __builtin_va_arg_pack ());\n+}\n+\n+int\n+main (void)\n+{\n+  if (bar (0, ++v1, v4, &v4, v2++) != 0)\n+    abort ();\n+  if (bar (1, ++v5, 8, v3) != 1)\n+    abort ();\n+  if (bar (2) != 2)\n+    abort ();\n+  if (bar (v1 + 2) != 19)\n+    abort ();\n+  if (bar (v1 + 3, v5--, v4, v4, v3, 16LL) != 20)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "c5d3e2ac5949a8e8a54ac9af85542d8b5d9ec804", "filename": "gcc/testsuite/g++.dg/ext/va-arg-pack-2.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3a06f593c5e947e2ec92da37878d423ce6f021e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fva-arg-pack-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3a06f593c5e947e2ec92da37878d423ce6f021e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fva-arg-pack-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fva-arg-pack-2.C?ref=b3a06f593c5e947e2ec92da37878d423ce6f021e", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+int bar (int, const char *, int, ...);\n+int baz (int, const char *, long int);\n+\n+extern inline __attribute__((always_inline)) int\n+f2 (int y, ...)\n+{\n+  return bar (y, \"\", __builtin_va_arg_pack ());\t\t/* { dg-error \"invalid use of\" } */\n+}\n+\n+extern inline __attribute__((always_inline)) int\n+f3 (int y, ...)\n+{\n+  return bar (y, \"\", 5, __builtin_va_arg_pack ());\n+}\n+\n+extern inline __attribute__((always_inline)) int\n+f4 (int y, ...)\n+{\n+  return bar (y, \"\", 4, __builtin_va_arg_pack (), 6);\t/* { dg-error \"invalid use of\" } */\n+}\n+\n+extern inline __attribute__((always_inline)) int\n+f5 (int y, ...)\n+{\n+  return baz (y, \"\", __builtin_va_arg_pack ());\t\t/* { dg-error \"invalid use of\" } */\n+}\n+\n+extern inline __attribute__((always_inline)) int\n+f6 (int y, ...)\n+{\n+  return __builtin_va_arg_pack ();\t\t\t/* { dg-error \"invalid use of\" } */\n+}\n+\n+int\n+test (void)\n+{\n+  int a = f2 (5, \"a\", 6);\n+  a += f3 (6, \"ab\", 17LL);\n+  a += f4 (7, 1, 2, 3);\n+  a += f5 (8, 7L);\n+  a += f6 (9);\n+  return a;\n+}"}]}