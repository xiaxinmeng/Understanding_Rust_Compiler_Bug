{"sha": "17a2962cbbe7bb8c1f49d2fafedcc0f656a1463d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdhMjk2MmNiYmU3YmI4YzFmNDlkMmZhZmVkY2MwZjY1NmExNDYzZA==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1995-04-28T17:04:06Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1995-04-28T17:04:06Z"}, "message": "(symbolic_operand) Put relocatable pic constants in data\n\nFrom-SVN: r9536", "tree": {"sha": "ec7330e46c79feb23e80b8bf08198d9c7f207c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec7330e46c79feb23e80b8bf08198d9c7f207c2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17a2962cbbe7bb8c1f49d2fafedcc0f656a1463d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a2962cbbe7bb8c1f49d2fafedcc0f656a1463d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17a2962cbbe7bb8c1f49d2fafedcc0f656a1463d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a2962cbbe7bb8c1f49d2fafedcc0f656a1463d/comments", "author": null, "committer": null, "parents": [{"sha": "60678486db4abc3df61874d5da303d078baca3c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60678486db4abc3df61874d5da303d078baca3c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60678486db4abc3df61874d5da303d078baca3c7"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "64e7ebc73346ba2020a052e517e2eddace541811", "filename": "gcc/config/m88k/m88k.c", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17a2962cbbe7bb8c1f49d2fafedcc0f656a1463d/gcc%2Fconfig%2Fm88k%2Fm88k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17a2962cbbe7bb8c1f49d2fafedcc0f656a1463d/gcc%2Fconfig%2Fm88k%2Fm88k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fm88k.c?ref=17a2962cbbe7bb8c1f49d2fafedcc0f656a1463d", "patch": "@@ -1,8 +1,7 @@\n /* Subroutines for insn-output.c for Motorola 88000.\n-   Copyright (C) 1988, 1989, 1990, 1991, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 92, 93, 94, 1995 Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n-   Enhanced by Michael Meissner (meissner@osf.org)\n-   Version 2 port by Tom Wood (twood@pets.sps.mot.com)\n+   Currently maintained by (gcc@dg-rtp.dg.com)\n \n This file is part of GNU CC.\n \n@@ -3094,3 +3093,32 @@ pic_address_needs_scratch (x)\n \n   return 0;\n }\n+\n+/* Returns 1 if OP is either a symbol reference or a sum of a symbol\n+   reference and a constant.  */\n+\n+int\n+symbolic_operand (op, mode)\n+     register rtx op;\n+     enum machine_mode mode;\n+{\n+  switch (GET_CODE (op))\n+    {\n+    case SYMBOL_REF:\n+    case LABEL_REF:\n+      return 1;\n+\n+    case CONST:\n+      op = XEXP (op, 0);\n+      return ((GET_CODE (XEXP (op, 0)) == SYMBOL_REF\n+               || GET_CODE (XEXP (op, 0)) == LABEL_REF)\n+              && GET_CODE (XEXP (op, 1)) == CONST_INT);\n+\n+      /* ??? This clause seems to be irrelevant.  */\n+    case CONST_DOUBLE:\n+      return GET_MODE (op) == mode;\n+\n+    default:\n+      return 0;\n+    }\n+}"}]}