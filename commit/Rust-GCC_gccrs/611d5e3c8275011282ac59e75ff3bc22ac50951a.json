{"sha": "611d5e3c8275011282ac59e75ff3bc22ac50951a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjExZDVlM2M4Mjc1MDExMjgyYWM1OWU3NWZmM2JjMjJhYzUwOTUxYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T07:58:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T07:58:18Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r247138", "tree": {"sha": "76ab139abd4755b36294d69b9ee74d6abb275ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/76ab139abd4755b36294d69b9ee74d6abb275ab7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/611d5e3c8275011282ac59e75ff3bc22ac50951a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611d5e3c8275011282ac59e75ff3bc22ac50951a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/611d5e3c8275011282ac59e75ff3bc22ac50951a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611d5e3c8275011282ac59e75ff3bc22ac50951a/comments", "author": null, "committer": null, "parents": [{"sha": "605afee8d5ff84de9d798a1cd79932a8c53ea98a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/605afee8d5ff84de9d798a1cd79932a8c53ea98a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/605afee8d5ff84de9d798a1cd79932a8c53ea98a"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "40d6cfc16ab521b3c46d41fce3e2250b82f73294", "filename": "gcc/ada/rtsfind.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d5e3c8275011282ac59e75ff3bc22ac50951a/gcc%2Fada%2Frtsfind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d5e3c8275011282ac59e75ff3bc22ac50951a/gcc%2Fada%2Frtsfind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.adb?ref=611d5e3c8275011282ac59e75ff3bc22ac50951a", "patch": "@@ -1657,6 +1657,7 @@ package body Rtsfind is\n       pragma Assert (GNATprove_Mode);\n \n       --  Force loading of a predefined unit\n+\n       Unused := RTE (E);\n    end SPARK_Implicit_Load;\n "}, {"sha": "e796ab3dbf43c4ccb7666e47dae8da45a9013894", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d5e3c8275011282ac59e75ff3bc22ac50951a/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d5e3c8275011282ac59e75ff3bc22ac50951a/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=611d5e3c8275011282ac59e75ff3bc22ac50951a", "patch": "@@ -12688,7 +12688,6 @@ package body Sem_Ch13 is\n          E : Entity_Id;\n \n       begin\n-\n          --  Types with nameable components are records and discriminated\n          --  private types.\n \n@@ -12705,7 +12704,7 @@ package body Sem_Ch13 is\n             end loop;\n          end if;\n \n-         --  Nothing by that name, or type has no components.\n+         --  Nothing by that name, or the type has no components\n \n          return Empty;\n       end Visible_Component;"}, {"sha": "b07730a0d90593625df932c0e899be2dab43322e", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611d5e3c8275011282ac59e75ff3bc22ac50951a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611d5e3c8275011282ac59e75ff3bc22ac50951a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=611d5e3c8275011282ac59e75ff3bc22ac50951a", "patch": "@@ -1391,8 +1391,8 @@ package body Sem_Ch6 is\n \n       Null_Body :=\n         Make_Subprogram_Body (Loc,\n-          Specification => New_Copy_Tree (Spec),\n-          Declarations  => New_List,\n+          Specification              => New_Copy_Tree (Spec),\n+          Declarations               => New_List,\n           Handled_Statement_Sequence =>\n             Make_Handled_Sequence_Of_Statements (Loc,\n               Statements => New_List (Null_Stmt)));\n@@ -1430,33 +1430,33 @@ package body Sem_Ch6 is\n          return;\n \n       else\n-         --  Resolve the types of the formals now, because the freeze point\n-         --  may appear in a different context, e.g. an instantiation.\n+         --  Resolve the types of the formals now, because the freeze point may\n+         --  appear in a different context, e.g. an instantiation.\n \n          Form := First (Parameter_Specifications (Specification (Null_Body)));\n          while Present (Form) loop\n             if Nkind (Parameter_Type (Form)) /= N_Access_Definition then\n                Find_Type (Parameter_Type (Form));\n \n-            elsif\n-              No (Access_To_Subprogram_Definition (Parameter_Type (Form)))\n+            elsif No (Access_To_Subprogram_Definition\n+                       (Parameter_Type (Form)))\n             then\n                Find_Type (Subtype_Mark (Parameter_Type (Form)));\n \n-            else\n-               --  The case of a null procedure with a formal that is an\n-               --  access_to_subprogram type, and that is used as an actual\n-               --  in an instantiation is left to the enthusiastic reader.\n+            --  The case of a null procedure with a formal that is an\n+            --  access-to-subprogram type, and that is used as an actual\n+            --  in an instantiation is left to the enthusiastic reader.\n \n+            else\n                null;\n             end if;\n \n             Next (Form);\n          end loop;\n       end if;\n \n-      --  If there are previous overloadable entities with the same name,\n-      --  check whether any of them is completed by the null procedure.\n+      --  If there are previous overloadable entities with the same name, check\n+      --  whether any of them is completed by the null procedure.\n \n       if Present (Prev) and then Is_Overloadable (Prev) then\n          Designator := Analyze_Subprogram_Specification (Spec);"}]}