{"sha": "22d69b599bad29aabb21569cacc163124f37c722", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJkNjliNTk5YmFkMjlhYWJiMjE1NjljYWNjMTYzMTI0ZjM3YzcyMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-07-24T14:55:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-07-24T14:55:07Z"}, "message": "tweak comment\n\nFrom-SVN: r44297", "tree": {"sha": "e127f294d5d7102637522a959fbbd8d7687e291b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e127f294d5d7102637522a959fbbd8d7687e291b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22d69b599bad29aabb21569cacc163124f37c722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22d69b599bad29aabb21569cacc163124f37c722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22d69b599bad29aabb21569cacc163124f37c722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22d69b599bad29aabb21569cacc163124f37c722/comments", "author": null, "committer": null, "parents": [{"sha": "82545bf72fbf561b2b4768eeb5c697ad6892f8fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82545bf72fbf561b2b4768eeb5c697ad6892f8fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82545bf72fbf561b2b4768eeb5c697ad6892f8fa"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "59c08bcbf13d5650081a9017b1e418bf5069a57f", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22d69b599bad29aabb21569cacc163124f37c722/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22d69b599bad29aabb21569cacc163124f37c722/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=22d69b599bad29aabb21569cacc163124f37c722", "patch": "@@ -80,6 +80,9 @@ lvalue_p_1 (ref, treat_class_rvalues_as_lvalues)\n     case WITH_CLEANUP_EXPR:\n     case REALPART_EXPR:\n     case IMAGPART_EXPR:\n+      /* This shouldn't be here, but there are lots of places in the compiler\n+         that are sloppy about tacking on NOP_EXPRs to the same type when\n+\t no actual conversion is happening.  */\n     case NOP_EXPR:\n       return lvalue_p_1 (TREE_OPERAND (ref, 0),\n \t\t\t treat_class_rvalues_as_lvalues);"}]}