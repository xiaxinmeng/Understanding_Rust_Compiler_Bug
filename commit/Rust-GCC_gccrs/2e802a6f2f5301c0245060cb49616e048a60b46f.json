{"sha": "2e802a6f2f5301c0245060cb49616e048a60b46f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU4MDJhNmYyZjUzMDFjMDI0NTA2MGNiNDk2MTZlMDQ4YTYwYjQ2Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-25T00:54:30Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-25T00:54:30Z"}, "message": "cse.c (cse_change_cc_mode_insns): Stop at any instruction which modifies NEWREG.\n\n\t* cse.c (cse_change_cc_mode_insns): Stop at any instruction\n\twhich modifies NEWREG.\n\t(cse_condition_code_reg): Update the mode of CC_REG in\n\tCC_SRC_INSN on our own.\n\nFrom-SVN: r78413", "tree": {"sha": "fa096890523a25cd2e0753dd6b63f6254baae475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa096890523a25cd2e0753dd6b63f6254baae475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e802a6f2f5301c0245060cb49616e048a60b46f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e802a6f2f5301c0245060cb49616e048a60b46f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e802a6f2f5301c0245060cb49616e048a60b46f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e802a6f2f5301c0245060cb49616e048a60b46f/comments", "author": null, "committer": null, "parents": [{"sha": "c30316fb641074bcf5d567863fd5e9f3c70b0587", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30316fb641074bcf5d567863fd5e9f3c70b0587", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c30316fb641074bcf5d567863fd5e9f3c70b0587"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "bff9fd89a99e18659554c95c44861d9ca79eef3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e802a6f2f5301c0245060cb49616e048a60b46f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e802a6f2f5301c0245060cb49616e048a60b46f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e802a6f2f5301c0245060cb49616e048a60b46f", "patch": "@@ -1,3 +1,10 @@\n+2004-02-24  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* cse.c (cse_change_cc_mode_insns): Stop at any instruction\n+\twhich modifies NEWREG.\n+\t(cse_condition_code_reg): Update the mode of CC_REG in\n+\tCC_SRC_INSN on our own.\n+\n 2004-02-24  Michael Matz  <matz@suse.de>\n \n \t* config/i386/i386.c (ix86_comp_type_attributes): Check for"}, {"sha": "20a4b698ab86f306f6cceb85d2722a3891ee7ae0", "filename": "gcc/cse.c", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e802a6f2f5301c0245060cb49616e048a60b46f/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e802a6f2f5301c0245060cb49616e048a60b46f/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=2e802a6f2f5301c0245060cb49616e048a60b46f", "patch": "@@ -7704,7 +7704,7 @@ cse_change_cc_mode (rtx *loc, void *data)\n \n /* Change the mode of any reference to the register REGNO (NEWREG) to\n    GET_MODE (NEWREG), starting at START.  Stop before END.  Stop at\n-   any instruction after START which modifies NEWREG.  */\n+   any instruction which modifies NEWREG.  */\n \n static void\n cse_change_cc_mode_insns (rtx start, rtx end, rtx newreg)\n@@ -7716,7 +7716,7 @@ cse_change_cc_mode_insns (rtx start, rtx end, rtx newreg)\n       if (! INSN_P (insn))\n \tcontinue;\n \n-      if (insn != start && reg_set_p (newreg, insn))\n+      if (reg_set_p (newreg, insn))\n \treturn;\n \n       for_each_rtx (&PATTERN (insn), cse_change_cc_mode, newreg);\n@@ -8008,8 +8008,22 @@ cse_condition_code_reg (void)\n \t  if (mode != GET_MODE (cc_src))\n \t    abort ();\n \t  if (mode != orig_mode)\n-\t    cse_change_cc_mode_insns (cc_src_insn, NEXT_INSN (last_insn),\n-\t\t\t\t      gen_rtx_REG (mode, REGNO (cc_reg)));\n+\t    {\n+\t      rtx newreg = gen_rtx_REG (mode, REGNO (cc_reg));\n+\n+\t      /* Change the mode of CC_REG in CC_SRC_INSN to\n+\t\t GET_MODE (NEWREG).  */\n+\t      for_each_rtx (&PATTERN (cc_src_insn), cse_change_cc_mode,\n+\t\t\t    newreg);\n+\t      for_each_rtx (&REG_NOTES (cc_src_insn), cse_change_cc_mode,\n+\t\t\t    newreg);\n+\n+\t      /* Do the same in the following insns that use the\n+\t\t current value of CC_REG within BB.  */\n+\t      cse_change_cc_mode_insns (NEXT_INSN (cc_src_insn),\n+\t\t\t\t\tNEXT_INSN (last_insn),\n+\t\t\t\t\tnewreg);\n+\t    }\n \t}\n     }\n }"}]}