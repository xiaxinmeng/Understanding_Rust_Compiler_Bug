{"sha": "833aa4c4149ce0fa84968a03fe51a13575381d79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMzYWE0YzQxNDljZTBmYTg0OTY4YTAzZmU1MWExMzU3NTM4MWQ3OQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2002-01-02T12:50:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2002-01-02T12:50:11Z"}, "message": "re PR c++/35 (template operator () lookup fails)\n\ncp:\n\tPR c++/35\n\t* cp-tree.h (DECL_LANG_FLAG_0): Used for PARM_DECL too.\n\t(DECL_TEMPLATE_PARM_P): A PARM_DECL might be one too.\n\t* pt.c (process_template_parm): SET_DECL_TEMPLATE_PARM_P on the\n\tPARM_DECL.\n\t(tsubst_template_parms): Break up loop statements.\n\t(tsubst_decl, case PARM_DECL): Copy DECL_TEMPLATE_PARM_P. Template\n\tparm PARM_DECLs don't get promoted.\ntestsuite:\n\t* g++.dg/template/ntp.C: New test.\n\nFrom-SVN: r48470", "tree": {"sha": "9eda4828ff2460753b02042e25caf1b141568068", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9eda4828ff2460753b02042e25caf1b141568068"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/833aa4c4149ce0fa84968a03fe51a13575381d79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/833aa4c4149ce0fa84968a03fe51a13575381d79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/833aa4c4149ce0fa84968a03fe51a13575381d79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/833aa4c4149ce0fa84968a03fe51a13575381d79/comments", "author": null, "committer": null, "parents": [{"sha": "18976b21446cfafe728b739b7220fd02f4ea5328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18976b21446cfafe728b739b7220fd02f4ea5328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18976b21446cfafe728b739b7220fd02f4ea5328"}], "stats": {"total": 67, "additions": 54, "deletions": 13}, "files": [{"sha": "4751ae9210cd1d95bbfa626f75b2dbf6245a0dee", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=833aa4c4149ce0fa84968a03fe51a13575381d79", "patch": "@@ -1,3 +1,14 @@\n+2002-01-02  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/35\n+\t* cp-tree.h (DECL_LANG_FLAG_0): Used for PARM_DECL too.\n+\t(DECL_TEMPLATE_PARM_P): A PARM_DECL might be one too.\n+\t* pt.c (process_template_parm): SET_DECL_TEMPLATE_PARM_P on the\n+\tPARM_DECL.\n+\t(tsubst_template_parms): Break up loop statements.\n+\t(tsubst_decl, case PARM_DECL): Copy DECL_TEMPLATE_PARM_P. Template\n+\tparm PARM_DECLs don't get promoted.\n+\n 2002-01-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/5123"}, {"sha": "f08f0ac1003727a4fd52b34d03d5f2c12e14bb77", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=833aa4c4149ce0fa84968a03fe51a13575381d79", "patch": "@@ -87,7 +87,7 @@ Boston, MA 02111-1307, USA.  */\n \n    Usage of DECL_LANG_FLAG_?:\n    0: DECL_ERROR_REPORTED (in VAR_DECL).\n-      DECL_TEMPLATE_PARM_P (in CONST_DECL, TYPE_DECL, or TEMPLATE_DECL)\n+      DECL_TEMPLATE_PARM_P (in PARM_DECL, CONST_DECL, TYPE_DECL, or TEMPLATE_DECL)\n       DECL_LOCAL_FUNCTION_P (in FUNCTION_DECL)\n       DECL_MUTABLE_P (in FIELD_DECL)\n    1: C_TYPEDEF_EXPLICITLY_SIGNED (in TYPE_DECL).\n@@ -2719,6 +2719,7 @@ enum ptrmemfunc_vbit_where_t\n #define DECL_TEMPLATE_PARM_P(NODE)\t\t\\\n   (DECL_LANG_FLAG_0 (NODE)\t\t\t\\\n    && (TREE_CODE (NODE) == CONST_DECL\t\t\\\n+       || TREE_CODE (NODE) == PARM_DECL\t\t\\\n        || TREE_CODE (NODE) == TYPE_DECL\t\t\\\n        || TREE_CODE (NODE) == TEMPLATE_DECL))\n "}, {"sha": "4f20635b5cb0f9ec0bda5ecce484d142e1e011e1", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=833aa4c4149ce0fa84968a03fe51a13575381d79", "patch": "@@ -1935,6 +1935,7 @@ process_template_parm (list, next)\n       /* is a const-param */\n       parm = grokdeclarator (TREE_VALUE (parm), TREE_PURPOSE (parm),\n \t\t\t     PARM, 0, NULL);\n+      SET_DECL_TEMPLATE_PARM_P (parm);\n \n       /* [temp.param]\n \n@@ -5409,17 +5410,16 @@ tsubst_template_parms (parms, args, complain)\n       \n       for (i = 0; i < TREE_VEC_LENGTH (new_vec); ++i)\n \t{\n-\t  tree default_value =\n-\t    TREE_PURPOSE (TREE_VEC_ELT (TREE_VALUE (parms), i));\n-\t  tree parm_decl = \n-\t    TREE_VALUE (TREE_VEC_ELT (TREE_VALUE (parms), i));\n-\t  \n-\t  TREE_VEC_ELT (new_vec, i)\n-\t    = build_tree_list (maybe_fold_nontype_arg (\n-\t\t\t\t  tsubst_expr (default_value, args, complain,\n-\t\t\t\t\t       NULL_TREE)), \n-\t\t\t       tsubst (parm_decl, args, complain,\n-\t\t\t\t       NULL_TREE));\n+\t  tree tuple = TREE_VEC_ELT (TREE_VALUE (parms), i);\n+\t  tree default_value = TREE_PURPOSE (tuple);\n+\t  tree parm_decl = TREE_VALUE (tuple);\n+\n+\t  parm_decl = tsubst (parm_decl, args, complain, NULL_TREE);\n+\t  default_value = tsubst_expr (default_value, args,\n+\t\t\t\t       complain, NULL_TREE);\n+\t  tuple = build_tree_list (maybe_fold_nontype_arg (default_value), \n+\t\t\t\t   parm_decl);\n+\t  TREE_VEC_ELT (new_vec, i) = tuple;\n \t}\n       \n       *new_parms = \n@@ -5909,6 +5909,9 @@ tsubst_decl (t, args, type)\n     case PARM_DECL:\n       {\n \tr = copy_node (t);\n+\tif (DECL_TEMPLATE_PARM_P (t))\n+\t  SET_DECL_TEMPLATE_PARM_P (r);\n+\t\n \tTREE_TYPE (r) = type;\n \tc_apply_type_quals_to_decl (cp_type_quals (type), r);\n \n@@ -5919,7 +5922,7 @@ tsubst_decl (t, args, type)\n \t\t\t\t     /*complain=*/1, in_decl);\n \n \tDECL_CONTEXT (r) = NULL_TREE;\n-\tif (PROMOTE_PROTOTYPES\n+\tif (!DECL_TEMPLATE_PARM_P (r) && PROMOTE_PROTOTYPES\n \t    && INTEGRAL_TYPE_P (type)\n \t    && TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node))\n \t  DECL_ARG_TYPE (r) = integer_type_node;"}, {"sha": "d08a707d18efb958dbefcfa338701680f09a18bd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=833aa4c4149ce0fa84968a03fe51a13575381d79", "patch": "@@ -1,5 +1,7 @@\n 2002-01-02  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\t* g++.dg/template/ntp.C: New test.\n+\n \t* g++.dg/other/component1.C: New test.\n \n \t* g++.dg/template/ttp3.C: New test."}, {"sha": "98698e932e0ef6e5fa3b7baedad25f2d05250f2b", "filename": "gcc/testsuite/g++.dg/template/ntp1.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fntp1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/833aa4c4149ce0fa84968a03fe51a13575381d79/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fntp1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fntp1.C?ref=833aa4c4149ce0fa84968a03fe51a13575381d79", "patch": "@@ -0,0 +1,24 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 26 Dec 2001 <nathan@codesourcery.com>\n+\n+// PR 35. We were default promoting template PARM_DECLs\n+\n+template <short B> class R {};\n+\n+template <class T> class A\n+{\n+  public:\n+  template <short B>\n+  void operator() (R<B> const &);\n+};\n+\n+int main() {\n+  A<int> a;\n+  R<1> r;\n+\n+  a (r);\n+  \n+  return 0;\n+}"}]}