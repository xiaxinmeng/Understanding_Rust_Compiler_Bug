{"sha": "a4dc20a94636a27c0250b3cadbc23758901d8fb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRkYzIwYTk0NjM2YTI3YzAyNTBiM2NhZGJjMjM3NTg5MDFkOGZiNw==", "commit": {"author": {"name": "Guilhem Lavaux", "email": "guilhem@kaffe.org", "date": "2003-12-26T23:23:55Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-12-26T23:23:55Z"}, "message": "Naming.java (lookup): Check if the first character of the filename returned by URL.getFile() is a '/'...\n\n2003-12-27  Guilhem Lavaux  <guilhem@kaffe.org>\n\n\t* java/rmi/Naming.java (lookup): Check if the first character of the\n\tfilename returned by URL.getFile() is a '/', only if it is the case\n\twe cut this first character and call the registry with the good name.\n\t(bind): Likewise.\n\t(rebind): Likewise.\n\nFrom-SVN: r75044", "tree": {"sha": "d0b5cd9683876b542d93dcfe5e9d3652ca5166b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0b5cd9683876b542d93dcfe5e9d3652ca5166b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4dc20a94636a27c0250b3cadbc23758901d8fb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4dc20a94636a27c0250b3cadbc23758901d8fb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4dc20a94636a27c0250b3cadbc23758901d8fb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4dc20a94636a27c0250b3cadbc23758901d8fb7/comments", "author": null, "committer": null, "parents": [{"sha": "45d51d7e37ac54da97e497a0946f675be40fe230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d51d7e37ac54da97e497a0946f675be40fe230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d51d7e37ac54da97e497a0946f675be40fe230"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "3323079a3fc4fee2f11fb83a1d3dd06b9f257457", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4dc20a94636a27c0250b3cadbc23758901d8fb7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4dc20a94636a27c0250b3cadbc23758901d8fb7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a4dc20a94636a27c0250b3cadbc23758901d8fb7", "patch": "@@ -1,3 +1,11 @@\n+2003-12-27  Guilhem Lavaux  <guilhem@kaffe.org>\n+\n+\t* java/rmi/Naming.java (lookup): Check if the first character of the\n+\tfilename returned by URL.getFile() is a '/', only if it is the case\n+\twe cut this first character and call the registry with the good name.\n+\t(bind): Likewise.\n+\t(rebind): Likewise.\n+\n 2003-12-26  Guilhem Lavaux  <guilhem@kaffe.org>\n \t    Mark Wielaard  <mark@klomp.org>\n "}, {"sha": "1d2e68b982f570dafc628a854fc8b18af4c8952f", "filename": "libjava/java/rmi/Naming.java", "status": "modified", "additions": 29, "deletions": 4, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4dc20a94636a27c0250b3cadbc23758901d8fb7/libjava%2Fjava%2Frmi%2FNaming.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4dc20a94636a27c0250b3cadbc23758901d8fb7/libjava%2Fjava%2Frmi%2FNaming.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2FNaming.java?ref=a4dc20a94636a27c0250b3cadbc23758901d8fb7", "patch": "@@ -62,7 +62,14 @@ public static Remote lookup(String name) throws NotBoundException, MalformedURLE\n \t// hack to accept \"rmi://host:port/service\" strings\n \tif(name.startsWith(\"rmi:\")){ name = name.substring(4); }\n \tURL u = new URL(\"http:\" + name);\n-\treturn (getRegistry(u).lookup(u.getFile().substring(1)));\n+\tString filename = u.getFile();\n+\n+\t// If the filename begins with a slash we must cut it for\n+\t// name resolution.\n+\tif (filename.charAt(0) == '/')\n+\t\treturn (getRegistry(u).lookup(filename.substring(1)));\n+\telse\n+\t\treturn (getRegistry(u).lookup(filename));\n }\n \n /**\n@@ -75,7 +82,13 @@ public static Remote lookup(String name) throws NotBoundException, MalformedURLE\n  */\n public static void bind(String name, Remote obj) throws AlreadyBoundException, MalformedURLException, RemoteException {\n \tURL u = new URL(\"http:\" + name);\n-\tgetRegistry(u).bind(u.getFile().substring(1), obj);\n+\tString filename = u.getFile();\n+\t// If the filename begins with a slash we must cut it for\n+\t// name resolution.\n+\tif (filename.charAt(0) == '/')\n+\t\tgetRegistry(u).bind(filename.substring(1), obj);\n+\telse\n+\t\tgetRegistry(u).bind(filename, obj);\n }\n \n /**\n@@ -87,7 +100,13 @@ public static void bind(String name, Remote obj) throws AlreadyBoundException, M\n  */\n public static void unbind(String name) throws RemoteException, NotBoundException, MalformedURLException {\n \tURL u = new URL(\"http:\" + name);\n-\tgetRegistry(u).unbind(u.getFile().substring(1));\n+\tString filename = u.getFile();\n+\t// If the filename begins with a slash we must cut it for\n+\t// name resolution.\n+\tif (filename.charAt(0) == '/')\n+\t\tgetRegistry(u).unbind(filename.substring(1));\n+\telse\n+\t\tgetRegistry(u).unbind(filename);\n }\n \n /**\n@@ -100,7 +119,13 @@ public static void unbind(String name) throws RemoteException, NotBoundException\n  */\n public static void rebind(String name, Remote obj) throws RemoteException, MalformedURLException {\n \tURL u = new URL(\"http:\" + name);\n-\tgetRegistry(u).rebind(u.getFile().substring(1), obj);\n+\tString filename = u.getFile();\n+\t// If the filename begins with a slash we must cut it for\n+\t// name resolution.\n+\tif (filename.charAt(0) == '/')\n+\t\tgetRegistry(u).rebind(filename.substring(1), obj);\n+\telse\n+\t\tgetRegistry(u).rebind(filename, obj);\n }\n \n /**"}]}