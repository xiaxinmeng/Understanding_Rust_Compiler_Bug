{"sha": "e94d5836e54558f78f1845de07db273611972c26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk0ZDU4MzZlNTQ1NThmNzhmMTg0NWRlMDdkYjI3MzYxMTk3MmMyNg==", "commit": {"author": {"name": "Rasmus Villemoes", "email": "rv@rasmusvillemoes.dk", "date": "2020-10-02T15:26:26Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2020-10-16T16:14:52Z"}, "message": "Inhibit support for gthread condvars on VxWorks < 6\n\nThe condition variables support relies on kernel entry points\nto enforce critical aspects of it's expected behavior.\n\nSome of these entry points are not available prior to VxWorks 6,\nso we just expose absence of support for condition variables on\nsuch systems.\n\n2020-10-15  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n\nlibgcc/\n\t* config/gthr-vxworks.h: Condition the __GTHREAD_HAS_COND\n\tsection on VxWorks >= 6.\n\t* config/gthr-vxworks-cond.c: Condition the entire\n\timplementation on __GTHREAD_HAS_COND.", "tree": {"sha": "95870540a8ce5373bf8b389127654e750ecb147c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95870540a8ce5373bf8b389127654e750ecb147c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e94d5836e54558f78f1845de07db273611972c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e94d5836e54558f78f1845de07db273611972c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e94d5836e54558f78f1845de07db273611972c26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e94d5836e54558f78f1845de07db273611972c26/comments", "author": {"login": "Villemoes", "id": 4375908, "node_id": "MDQ6VXNlcjQzNzU5MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/4375908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Villemoes", "html_url": "https://github.com/Villemoes", "followers_url": "https://api.github.com/users/Villemoes/followers", "following_url": "https://api.github.com/users/Villemoes/following{/other_user}", "gists_url": "https://api.github.com/users/Villemoes/gists{/gist_id}", "starred_url": "https://api.github.com/users/Villemoes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Villemoes/subscriptions", "organizations_url": "https://api.github.com/users/Villemoes/orgs", "repos_url": "https://api.github.com/users/Villemoes/repos", "events_url": "https://api.github.com/users/Villemoes/events{/privacy}", "received_events_url": "https://api.github.com/users/Villemoes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0aeeda8fc2944e73b4bf50ee0da55f76baad3cf8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0aeeda8fc2944e73b4bf50ee0da55f76baad3cf8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0aeeda8fc2944e73b4bf50ee0da55f76baad3cf8"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "ba384b433c43947630708319ba3b75d42ba4ea56", "filename": "libgcc/config/gthr-vxworks-cond.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e94d5836e54558f78f1845de07db273611972c26/libgcc%2Fconfig%2Fgthr-vxworks-cond.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e94d5836e54558f78f1845de07db273611972c26/libgcc%2Fconfig%2Fgthr-vxworks-cond.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fgthr-vxworks-cond.c?ref=e94d5836e54558f78f1845de07db273611972c26", "patch": "@@ -26,6 +26,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n    This file implements the GTHREAD_HAS_COND part of the interface\n    exposed by gthr-vxworks.h.  */\n \n+#if __GTHREAD_HAS_COND\n+\n #include \"gthr.h\"\n #include <taskLib.h>\n \n@@ -79,3 +81,5 @@ __gthread_cond_wait_recursive (__gthread_cond_t *cond,\n {\n   return __gthread_cond_wait (cond, mutex);\n }\n+\n+#endif"}, {"sha": "d49809a9c2cbd64898aa20be4ea28bea0184f206", "filename": "libgcc/config/gthr-vxworks.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e94d5836e54558f78f1845de07db273611972c26/libgcc%2Fconfig%2Fgthr-vxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e94d5836e54558f78f1845de07db273611972c26/libgcc%2Fconfig%2Fgthr-vxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fgthr-vxworks.h?ref=e94d5836e54558f78f1845de07db273611972c26", "patch": "@@ -234,6 +234,12 @@ extern int __gthread_setspecific (__gthread_key_t __key, void *__ptr);\n \n /* ------------------ Base condition variables support ------------------- */\n \n+/* VxWorks prio to 6 misses a few services key to a correct\n+   implementation of condition variables with reasonable complexity.\n+   semExchange in particular.  */\n+\n+#if _VXWORKS_MAJOR_GE(6)\n+\n #define __GTHREAD_HAS_COND 1\n \n typedef SEM_ID __gthread_cond_t;\n@@ -254,6 +260,8 @@ extern int __gthread_cond_wait (__gthread_cond_t *cond,\n extern int __gthread_cond_wait_recursive (__gthread_cond_t *cond,\n \t\t\t\t\t  __gthread_recursive_mutex_t *mutex);\n \n+#endif\n+\n /* -----------------------  C++0x thread support ------------------------- */\n \n /* We do not support C++0x threads on that VxWorks 653, which we can"}]}