{"sha": "e9aff0f685e9808d26f7a4509baac1ce42ff4b2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlhZmYwZjY4NWU5ODA4ZDI2ZjdhNDUwOWJhYWMxY2U0MmZmNGIyYw==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2012-11-28T16:03:00Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2012-11-28T16:03:00Z"}, "message": "Adjust last change to plus_constant change.\n\nFrom-SVN: r193895", "tree": {"sha": "05d567caab4bdf16c7722f64c244f706413dc2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05d567caab4bdf16c7722f64c244f706413dc2c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9aff0f685e9808d26f7a4509baac1ce42ff4b2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9aff0f685e9808d26f7a4509baac1ce42ff4b2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9aff0f685e9808d26f7a4509baac1ce42ff4b2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9aff0f685e9808d26f7a4509baac1ce42ff4b2c/comments", "author": null, "committer": null, "parents": [{"sha": "0ccfc3ab15eae2a3f46ad30e842c2e5383297be8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ccfc3ab15eae2a3f46ad30e842c2e5383297be8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ccfc3ab15eae2a3f46ad30e842c2e5383297be8"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "52c07b61d95ce405be38f1032e8b18c11234b814", "filename": "gcc/config/epiphany/predicates.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9aff0f685e9808d26f7a4509baac1ce42ff4b2c/gcc%2Fconfig%2Fepiphany%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9aff0f685e9808d26f7a4509baac1ce42ff4b2c/gcc%2Fconfig%2Fepiphany%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fpredicates.md?ref=e9aff0f685e9808d26f7a4509baac1ce42ff4b2c", "patch": "@@ -165,7 +165,7 @@\n   (match_code \"reg,subreg,mem,const_int,const_double,const_vector\")\n {\n   if (GET_CODE (op) == MEM && misaligned_operand (op, mode)\n-      && !address_operand (plus_constant (XEXP (op, 0), 4), SImode))\n+      && !address_operand (plus_constant (Pmode, XEXP (op, 0), 4), SImode))\n     return 0;\n   return general_operand (op, mode);\n })\n@@ -192,7 +192,7 @@\n \t}\n     case MEM :\n       if (GET_MODE_SIZE (mode) == 8 && misaligned_operand (op, mode)\n-\t  && !address_operand (plus_constant (XEXP (op, 0), 4), SImode))\n+\t  && !address_operand (plus_constant (Pmode, XEXP (op, 0), 4), SImode))\n \treturn 0;\n       return address_operand (XEXP (op, 0), mode);\n     default :"}]}