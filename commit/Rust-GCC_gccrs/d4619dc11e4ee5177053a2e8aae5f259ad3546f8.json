{"sha": "d4619dc11e4ee5177053a2e8aae5f259ad3546f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQ2MTlkYzExZTRlZTUxNzcwNTNhMmU4YWFlNWYyNTlhZDM1NDZmOA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2016-04-12T16:24:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2016-04-12T16:24:11Z"}, "message": "re PR c++/70501 (internal compiler error: in verify_ctor_sanity, at cp/constexpr.c:2249)\n\n\tPR c++/70501\n\n\tcp/\n\t* constexpr.c (cxx_eval_bare_aggregate): Handle VECTOR_TYPE\n\tsimilarly to PMF.\n\n\ttestsuite/\n\t* g++.dg/init/pr70501.C: New.\n\nFrom-SVN: r234904", "tree": {"sha": "eeccf8928eb09e1d412faff407e06590eb08e9f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eeccf8928eb09e1d412faff407e06590eb08e9f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4619dc11e4ee5177053a2e8aae5f259ad3546f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4619dc11e4ee5177053a2e8aae5f259ad3546f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4619dc11e4ee5177053a2e8aae5f259ad3546f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f93efa4c5ff82833445df1505dc8cd89e2ffb09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f93efa4c5ff82833445df1505dc8cd89e2ffb09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f93efa4c5ff82833445df1505dc8cd89e2ffb09"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "ee830a2e7e492fe415afdfd59919e5d63dfc2b97", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d4619dc11e4ee5177053a2e8aae5f259ad3546f8", "patch": "@@ -1,3 +1,9 @@\n+2016-04-12  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/70501\n+\t* constexpr.c (cxx_eval_bare_aggregate): Handle VECTOR_TYPE\n+\tsimilarly to PMF.\n+\n 2016-04-11  Jason Merrill  <jason@redhat.com>\n \n \t* mangle.c (decl_is_template_id): The template itself counts as a"}, {"sha": "13f385b5a19447f28872e5b7e9cf39cf2184d5d9", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=d4619dc11e4ee5177053a2e8aae5f259ad3546f8", "patch": "@@ -2394,10 +2394,10 @@ cxx_eval_bare_aggregate (const constexpr_ctx *ctx, tree t,\n   tree type = TREE_TYPE (t);\n \n   constexpr_ctx new_ctx;\n-  if (TYPE_PTRMEMFUNC_P (type))\n+  if (TYPE_PTRMEMFUNC_P (type) || VECTOR_TYPE_P (type))\n     {\n-      /* We don't really need the ctx->ctor business for a PMF, but it's\n-\t simpler to use the same code.  */\n+      /* We don't really need the ctx->ctor business for a PMF or\n+\t vector, but it's simpler to use the same code.  */\n       new_ctx = *ctx;\n       new_ctx.ctor = build_constructor (type, NULL);\n       new_ctx.object = NULL_TREE;"}, {"sha": "1c2b5a76159accd4862224e66f92356705f77ad0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d4619dc11e4ee5177053a2e8aae5f259ad3546f8", "patch": "@@ -1,3 +1,8 @@\n+2016-04-12  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/70501\n+\t* g++.dg/init/pr70501.C: New.\n+\n 2016-04-12  David Wohlferd  <dw@LimeGreenSocks.com>\n \n \t* gcc.target/i386/asm-flag-6.c: New test."}, {"sha": "901b3c1b5a29fa4439a7d8e28e89b29a8b253cf1", "filename": "gcc/testsuite/g++.dg/init/pr70501.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr70501.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4619dc11e4ee5177053a2e8aae5f259ad3546f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr70501.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fpr70501.C?ref=d4619dc11e4ee5177053a2e8aae5f259ad3546f8", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-options \"\" } Not pedantic */\n+\n+typedef int v4si __attribute__ ((vector_size (16)));\n+\n+struct S { v4si v; };\n+\n+void\n+fn2 (int i, int j)\n+{\n+  struct S s = { .v = i <= j + (v4si){(1, 2)} };\n+}"}]}