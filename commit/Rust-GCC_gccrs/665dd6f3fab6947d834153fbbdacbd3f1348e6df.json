{"sha": "665dd6f3fab6947d834153fbbdacbd3f1348e6df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY1ZGQ2ZjNmYWI2OTQ3ZDgzNDE1M2ZiYmRhY2JkM2YxMzQ4ZTZkZg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2015-06-26T13:54:53Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2015-06-26T13:54:53Z"}, "message": "[Patch AArch64 1/4] Define candidates for instruction fusion in a .def file\n\ngcc/\n\n\t* config/aarch64/aarch64-fusion-pairs.def: New.\n\t* config/aarch64/aarch64-protos.h (aarch64_fusion_pairs): New.\n\t* config/aarch64/aarch64.c (AARCH64_FUSE_NOTHING): Move to\n\taarch64_fusion_pairs.\n\t(AARCH64_FUSE_MOV_MOVK): Likewise.\n\t(AARCH64_FUSE_ADRP_ADD): Likewise.\n\t(AARCH64_FUSE_MOVK_MOVK): Likewise.\n\t(AARCH64_FUSE_ADRP_LDR): Likewise.\n\t(AARCH64_FUSE_CMP_BRANCH): Likewise.\n\nFrom-SVN: r225014", "tree": {"sha": "f0ac94e21d3a8c4ea5ca2c61c581fc93fa4776ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f0ac94e21d3a8c4ea5ca2c61c581fc93fa4776ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/665dd6f3fab6947d834153fbbdacbd3f1348e6df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/665dd6f3fab6947d834153fbbdacbd3f1348e6df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/665dd6f3fab6947d834153fbbdacbd3f1348e6df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/665dd6f3fab6947d834153fbbdacbd3f1348e6df/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6642bdb4b14d655cedea29d01fbb0d854a6c14fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6642bdb4b14d655cedea29d01fbb0d854a6c14fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6642bdb4b14d655cedea29d01fbb0d854a6c14fa"}], "stats": {"total": 77, "additions": 70, "deletions": 7}, "files": [{"sha": "0d81aa7a5a7daa7191e73ccf89d46517f4c0a22f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/665dd6f3fab6947d834153fbbdacbd3f1348e6df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/665dd6f3fab6947d834153fbbdacbd3f1348e6df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=665dd6f3fab6947d834153fbbdacbd3f1348e6df", "patch": "@@ -1,3 +1,15 @@\n+2015-06-26  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-fusion-pairs.def: New.\n+\t* config/aarch64/aarch64-protos.h (aarch64_fusion_pairs): New.\n+\t* config/aarch64/aarch64.c (AARCH64_FUSE_NOTHING): Move to\n+\taarch64_fusion_pairs.\n+\t(AARCH64_FUSE_MOV_MOVK): Likewise.\n+\t(AARCH64_FUSE_ADRP_ADD): Likewise.\n+\t(AARCH64_FUSE_MOVK_MOVK): Likewise.\n+\t(AARCH64_FUSE_ADRP_LDR): Likewise.\n+\t(AARCH64_FUSE_CMP_BRANCH): Likewise.\n+\n 2015-06-26  Jiong Wang  <jiong.wang@arm.com>\n \n \t* config/aarch64/aarch64-protos.h (aarch64_symbol_type): Rename"}, {"sha": "a7b00f6975d932b5f57a3bcc7335be17fcb2d477", "filename": "gcc/config/aarch64/aarch64-fusion-pairs.def", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/665dd6f3fab6947d834153fbbdacbd3f1348e6df/gcc%2Fconfig%2Faarch64%2Faarch64-fusion-pairs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/665dd6f3fab6947d834153fbbdacbd3f1348e6df/gcc%2Fconfig%2Faarch64%2Faarch64-fusion-pairs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-fusion-pairs.def?ref=665dd6f3fab6947d834153fbbdacbd3f1348e6df", "patch": "@@ -0,0 +1,38 @@\n+/* Copyright (C) 2015 Free Software Foundation, Inc.\n+   Contributed by ARM Ltd.\n+\n+   This file is part of GCC.\n+\n+   GCC is free software; you can redistribute it and/or modify it\n+   under the terms of the GNU General Public License as published\n+   by the Free Software Foundation; either version 3, or (at your\n+   option) any later version.\n+\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING3.  If not see\n+   <http://www.gnu.org/licenses/>.  */\n+\n+/* Pairs of instructions which can be fused. before including this file,\n+   define a macro:\n+\n+     AARCH64_FUSION_PAIR (name, internal_name, index_bit)\n+\n+   Where:\n+\n+     NAME is a string giving a friendly name for the instructions to fuse.\n+     INTERNAL_NAME gives the internal name suitable for appending to\n+     AARCH64_FUSE_ to give an enum name.\n+     INDEX_BIT is the bit to set in the bitmask of supported fusion\n+     operations.  */\n+\n+AARCH64_FUSION_PAIR (\"mov+movk\", MOV_MOVK, 0)\n+AARCH64_FUSION_PAIR (\"adrp+add\", ADRP_ADD, 1)\n+AARCH64_FUSION_PAIR (\"movk+movk\", MOVK_MOVK, 2)\n+AARCH64_FUSION_PAIR (\"adrp+ldr\", ADRP_LDR, 3)\n+AARCH64_FUSION_PAIR (\"cmp+branch\", CMP_BRANCH, 4)\n+"}, {"sha": "804aae4e6fa12a45103aad8d80ac83ca819acced", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/665dd6f3fab6947d834153fbbdacbd3f1348e6df/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/665dd6f3fab6947d834153fbbdacbd3f1348e6df/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=665dd6f3fab6947d834153fbbdacbd3f1348e6df", "patch": "@@ -190,6 +190,26 @@ struct tune_params\n   const int min_div_recip_mul_df;\n };\n \n+#define AARCH64_FUSION_PAIR(x, name, index) \\\n+  AARCH64_FUSE_##name = (1 << index),\n+/* Supported fusion operations.  */\n+enum aarch64_fusion_pairs\n+{\n+  AARCH64_FUSE_NOTHING = 0,\n+#include \"aarch64-fusion-pairs.def\"\n+\n+/* Hacky macro to build AARCH64_FUSE_ALL.  The sequence below expands\n+   to:\n+   AARCH64_FUSE_ALL = 0 | AARCH64_FUSE_index1 | AARCH64_FUSE_index2 ...  */\n+#undef AARCH64_FUSION_PAIR\n+#define AARCH64_FUSION_PAIR(x, name, y) \\\n+  | AARCH64_FUSE_##name\n+\n+  AARCH64_FUSE_ALL = 0\n+#include \"aarch64-fusion-pairs.def\"\n+};\n+#undef AARCH64_FUSION_PAIR\n+\n HOST_WIDE_INT aarch64_initial_elimination_offset (unsigned, unsigned);\n int aarch64_get_condition_code (rtx);\n bool aarch64_bitmask_imm (HOST_WIDE_INT val, machine_mode);"}, {"sha": "88438b735b10376b165409eaed14144e0e462313", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/665dd6f3fab6947d834153fbbdacbd3f1348e6df/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/665dd6f3fab6947d834153fbbdacbd3f1348e6df/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=665dd6f3fab6947d834153fbbdacbd3f1348e6df", "patch": "@@ -321,13 +321,6 @@ static const struct cpu_vector_cost xgene1_vector_cost =\n   1 /* cond_not_taken_branch_cost  */\n };\n \n-#define AARCH64_FUSE_NOTHING\t(0)\n-#define AARCH64_FUSE_MOV_MOVK\t(1 << 0)\n-#define AARCH64_FUSE_ADRP_ADD\t(1 << 1)\n-#define AARCH64_FUSE_MOVK_MOVK\t(1 << 2)\n-#define AARCH64_FUSE_ADRP_LDR\t(1 << 3)\n-#define AARCH64_FUSE_CMP_BRANCH\t(1 << 4)\n-\n /* Generic costs for branch instructions.  */\n static const struct cpu_branch_cost generic_branch_cost =\n {"}]}