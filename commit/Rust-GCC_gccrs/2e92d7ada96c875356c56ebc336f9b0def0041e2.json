{"sha": "2e92d7ada96c875356c56ebc336f9b0def0041e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU5MmQ3YWRhOTZjODc1MzU2YzU2ZWJjMzM2ZjliMGRlZjAwNDFlMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-03-16T21:16:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-03-16T21:16:45Z"}, "message": "* decl.c (start_enum): std::byte aliases anything.\n\nFrom-SVN: r246212", "tree": {"sha": "8e9f3af371b97987b83553119b4b60fa2627280a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e9f3af371b97987b83553119b4b60fa2627280a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e92d7ada96c875356c56ebc336f9b0def0041e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e92d7ada96c875356c56ebc336f9b0def0041e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e92d7ada96c875356c56ebc336f9b0def0041e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e92d7ada96c875356c56ebc336f9b0def0041e2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85e653c925771a3c9103779e2657bfa3d505cb98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85e653c925771a3c9103779e2657bfa3d505cb98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85e653c925771a3c9103779e2657bfa3d505cb98"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "089d388dd4d20957f950c8a765e137c7aa7bb0b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e92d7ada96c875356c56ebc336f9b0def0041e2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e92d7ada96c875356c56ebc336f9b0def0041e2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2e92d7ada96c875356c56ebc336f9b0def0041e2", "patch": "@@ -1,5 +1,7 @@\n 2017-03-16  Jason Merrill  <jason@redhat.com>\n \n+\t* decl.c (start_enum): std::byte aliases anything.\n+\n \tPR c++/79797\n \t* constexpr.c (lookup_placeholder): Tweak.\n "}, {"sha": "61ecf81b27ae82724adbccbfd9724df1ba65a92d", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e92d7ada96c875356c56ebc336f9b0def0041e2/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e92d7ada96c875356c56ebc336f9b0def0041e2/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2e92d7ada96c875356c56ebc336f9b0def0041e2", "patch": "@@ -14079,6 +14079,12 @@ start_enum (tree name, tree enumtype, tree underlying_type,\n \t{\n \t  enumtype = cxx_make_type (ENUMERAL_TYPE);\n \t  enumtype = pushtag (name, enumtype, /*tag_scope=*/ts_current);\n+\n+\t  /* std::byte aliases anything.  */\n+\t  if (enumtype != error_mark_node\n+\t      && TYPE_CONTEXT (enumtype) == std_node\n+\t      && !strcmp (\"byte\", TYPE_NAME_STRING (enumtype)))\n+\t    TYPE_ALIAS_SET (enumtype) = 0;\n \t}\n       else\n \t  enumtype = xref_tag (enum_type, name, /*tag_scope=*/ts_current,"}, {"sha": "51c1a334e04e90410e1ed95efd767bb97f93e256", "filename": "gcc/testsuite/g++.dg/cpp1z/byte1.C", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e92d7ada96c875356c56ebc336f9b0def0041e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e92d7ada96c875356c56ebc336f9b0def0041e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fbyte1.C?ref=2e92d7ada96c875356c56ebc336f9b0def0041e2", "patch": "@@ -0,0 +1,31 @@\n+// Test for std::byte aliasing properties.\n+// { dg-options \"-std=c++1z -O3\" }\n+\n+#include <cstddef>\n+\n+using byte = std::byte;\n+\n+enum class notbyte: unsigned char {} *np;\n+\n+int main()\n+{\n+  int x;\n+\n+  /* Stores through byte* can alias int, so the compiler can't optimize\n+     \"x != 0\".  */\n+  byte *p = (byte*)&x;\n+  x = 42;\n+  for (int i = 0; i < 4; ++i)\n+    p[i] = byte(0);\n+  if (x != 0)\n+    __builtin_abort();\n+\n+  /* Stores through notbyte* mustn't alias int, so at -O3 the compiler should\n+     optimize \"x != 42\" to false.  */\n+  notbyte *np = (notbyte*)&x; \n+  x = 42;\n+  for (int i = 0; i < 4; ++i)\n+    np[i] = notbyte(0);\n+  if (x != 42)\n+    __builtin_abort();\n+}"}]}