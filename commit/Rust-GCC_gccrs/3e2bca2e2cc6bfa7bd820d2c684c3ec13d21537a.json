{"sha": "3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2UyYmNhMmUyY2M2YmZhN2JkODIwZDJjNjg0YzNlYzEzZDIxNTM3YQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-06-07T15:30:55Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-06-07T15:30:55Z"}, "message": "rs6000: Remove SPE high registers\n\n\n\t* config/rs6000/darwin.h (REGISTER_NAMES): Delete the SPE high\n\tregisters.\n\t* config/rs6000/rs6000.c (rs6000_reg_names, alt_reg_names): Ditto.\n\t* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Change from 149\n\tto 117.\n\t(DWARF_REG_TO_UNWIND_COLUMN): Do not define.\n\t(FIXED_REGISTERS, CALL_USED_REGISTERS, CALL_REALLY_USED_REGISTERS):\n\tDelete the SPE high registers.\n\t(REG_ALLOC_ORDER): Ditto.\n\t(enum reg_class): Remove SPE_HIGH_REGS.\n\t(REG_CLASS_NAMES): Ditto.\n\t(REG_CLASS_CONTENTS): Delete the SPE high registers.\n\t(REGISTER_NAMES): Ditto.\n\t(rs6000_reg_names): Ditto.\n\t* doc/tm.texi.in: Remove SPE as example.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r248985", "tree": {"sha": "d2b9b28e7ef8eeb5094110f5221c9b95e78054b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2b9b28e7ef8eeb5094110f5221c9b95e78054b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fba1803a773137024e5eba5c6faff3db719c7f42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba1803a773137024e5eba5c6faff3db719c7f42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba1803a773137024e5eba5c6faff3db719c7f42"}], "stats": {"total": 165, "additions": 49, "deletions": 116}, "files": [{"sha": "098541d217c9c432054e4e7702dbba6b56f494f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "patch": "@@ -1,3 +1,22 @@\n+2017-06-07  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/darwin.h (REGISTER_NAMES): Delete the SPE high\n+\tregisters.\n+\t* config/rs6000/rs6000.c (rs6000_reg_names, alt_reg_names): Ditto.\n+\t* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Change from 149\n+\tto 117.\n+\t(DWARF_REG_TO_UNWIND_COLUMN): Do not define.\n+\t(FIXED_REGISTERS, CALL_USED_REGISTERS, CALL_REALLY_USED_REGISTERS):\n+\tDelete the SPE high registers.\n+\t(REG_ALLOC_ORDER): Ditto.\n+\t(enum reg_class): Remove SPE_HIGH_REGS.\n+\t(REG_CLASS_NAMES): Ditto.\n+\t(REG_CLASS_CONTENTS): Delete the SPE high registers.\n+\t(REGISTER_NAMES): Ditto.\n+\t(rs6000_reg_names): Ditto.\n+\t* doc/tm.texi.in: Remove SPE as example.\n+\t* doc/tm.texi: Regenerate.\n+\n 2017-06-07  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/8540.md (ppc8540_brinc): Delete."}, {"sha": "2422f259447f3bf879642206a10cacb6476a531b", "filename": "gcc/config/rs6000/darwin.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fconfig%2Frs6000%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fdarwin.h?ref=3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "patch": "@@ -194,11 +194,7 @@ extern int darwin_emit_branch_islands;\n     \"vrsave\", \"vscr\",\t\t\t\t\t\t\t\\\n     \"spe_acc\", \"spefscr\",                                               \\\n     \"sfp\",\t\t\t\t\t\t\t\t\\\n-    \"tfhar\", \"tfiar\", \"texasr\",\t\t\t\t\t\t\\\n-    \"rh0\",  \"rh1\",  \"rh2\",  \"rh3\",  \"rh4\",  \"rh5\",  \"rh6\",  \"rh7\",\t\\\n-    \"rh8\",  \"rh9\",  \"rh10\", \"rh11\", \"rh12\", \"rh13\", \"rh14\", \"rh15\",\t\\\n-    \"rh16\", \"rh17\", \"rh18\", \"rh19\", \"rh20\", \"rh21\", \"rh22\", \"rh23\",\t\\\n-    \"rh24\", \"rh25\", \"rh26\", \"rh27\", \"rh28\", \"rh29\", \"rh30\", \"rh31\"\t\\\n+    \"tfhar\", \"tfiar\", \"texasr\"\t\t\t\t\t\t\\\n }\n \n /* This outputs NAME to FILE.  */"}, {"sha": "598ed9d90e18e5f12033a942514373331952d2df", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "patch": "@@ -1507,12 +1507,7 @@ char rs6000_reg_names[][8] =\n       /* Soft frame pointer.  */\n       \"sfp\",\n       /* HTM SPR registers.  */\n-      \"tfhar\", \"tfiar\", \"texasr\",\n-      /* SPE High registers.  */\n-      \"0\",  \"1\",  \"2\",  \"3\",  \"4\",  \"5\",  \"6\",  \"7\",\n-      \"8\",  \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\",\n-     \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\",\n-     \"24\", \"25\", \"26\", \"27\", \"28\", \"29\", \"30\", \"31\"\n+      \"tfhar\", \"tfiar\", \"texasr\"\n };\n \n #ifdef TARGET_REGNAMES\n@@ -1540,12 +1535,7 @@ static const char alt_reg_names[][8] =\n   /* Soft frame pointer.  */\n   \"sfp\",\n   /* HTM SPR registers.  */\n-  \"tfhar\", \"tfiar\", \"texasr\",\n-  /* SPE High registers.  */\n-  \"%rh0\",  \"%rh1\",  \"%rh2\",  \"%rh3\",  \"%rh4\",  \"%rh5\",  \"%rh6\",   \"%rh7\",\n-  \"%rh8\",  \"%rh9\",  \"%rh10\", \"%r11\",  \"%rh12\", \"%rh13\", \"%rh14\", \"%rh15\",\n-  \"%rh16\", \"%rh17\", \"%rh18\", \"%rh19\", \"%rh20\", \"%rh21\", \"%rh22\", \"%rh23\",\n-  \"%rh24\", \"%rh25\", \"%rh26\", \"%rh27\", \"%rh28\", \"%rh29\", \"%rh30\", \"%rh31\"\n+  \"tfhar\", \"tfiar\", \"texasr\"\n };\n #endif\n "}, {"sha": "a154c5daae6beb1cd161a8b4c443f48e3d23b266", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 27, "deletions": 95, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "patch": "@@ -1017,7 +1017,7 @@ enum data_align { align_abi, align_opt, align_both };\n \n    The 3 HTM registers aren't also included in DWARF_FRAME_REGISTERS.  */\n \n-#define FIRST_PSEUDO_REGISTER 149\n+#define FIRST_PSEUDO_REGISTER 117\n \n /* This must be included for pre gcc 3.0 glibc compatibility.  */\n #define PRE_GCC3_DWARF_FRAME_REGISTERS 77\n@@ -1026,16 +1026,6 @@ enum data_align { align_abi, align_opt, align_both };\n    aren't included in DWARF_FRAME_REGISTERS.  */\n #define DWARF_FRAME_REGISTERS (FIRST_PSEUDO_REGISTER - 4)\n \n-/* The SPE has an additional 32 synthetic registers, with DWARF debug\n-   info numbering for these registers starting at 1200.  While eh_frame\n-   register numbering need not be the same as the debug info numbering,\n-   we choose to number these regs for eh_frame at 1200 too.\n-\n-   We must map them here to avoid huge unwinder tables mostly consisting\n-   of unused space.  */\n-#define DWARF_REG_TO_UNWIND_COLUMN(r) \\\n-  ((r) >= 1200 ? ((r) - 1200 + (DWARF_FRAME_REGISTERS - 32)) : (r))\n-\n /* Use standard DWARF numbering for DWARF debugging information.  */\n #define DBX_REGISTER_NUMBER(REGNO) rs6000_dbx_register_number ((REGNO), 0)\n \n@@ -1066,10 +1056,7 @@ enum data_align { align_abi, align_opt, align_both };\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    1, 1\t\t\t\t\t\t   \\\n-   , 1, 1, 1, 1, 1, 1,\t\t\t\t   \\\n-   /* SPE High registers.  */\t\t\t   \\\n-   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n-   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1  \\\n+   , 1, 1, 1, 1, 1, 1\t\t\t\t   \\\n }\n \n /* 1 for registers not available across function calls.\n@@ -1089,10 +1076,7 @@ enum data_align { align_abi, align_opt, align_both };\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    1, 1\t\t\t\t\t\t   \\\n-   , 1, 1, 1, 1, 1, 1,\t\t\t\t   \\\n-   /* SPE High registers.  */\t\t\t   \\\n-   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, \\\n-   1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1  \\\n+   , 1, 1, 1, 1, 1, 1\t\t\t\t   \\\n }\n \n /* Like `CALL_USED_REGISTERS' except this macro doesn't require that\n@@ -1111,10 +1095,7 @@ enum data_align { align_abi, align_opt, align_both };\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n    0, 0\t\t\t\t\t\t   \\\n-   , 0, 0, 0, 0, 0, 0,\t\t\t\t   \\\n-   /* SPE High registers.  */\t\t\t   \\\n-   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, \\\n-   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0  \\\n+   , 0, 0, 0, 0, 0, 0\t\t\t\t   \\\n }\n \n #define TOTAL_ALTIVEC_REGS\t(LAST_ALTIVEC_REGNO - FIRST_ALTIVEC_REGNO + 1)\n@@ -1198,10 +1179,7 @@ enum data_align { align_abi, align_opt, align_both };\n    96, 95, 94, 93, 92, 91,\t\t\t\t\t\\\n    108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97,\t\\\n    109, 110,\t\t\t\t\t\t\t\\\n-   111, 112, 113, 114, 115, 116,\t\t\t\t\\\n-   117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128,  \\\n-   129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,  \\\n-   141, 142, 143, 144, 145, 146, 147, 148\t\t\t\\\n+   111, 112, 113, 114, 115, 116\t\t\t\t\t\\\n }\n \n /* True if register is floating-point.  */\n@@ -1439,7 +1417,6 @@ enum reg_class\n   CR_REGS,\n   NON_FLOAT_REGS,\n   CA_REGS,\n-  SPE_HIGH_REGS,\n   ALL_REGS,\n   LIM_REG_CLASSES\n };\n@@ -1471,7 +1448,6 @@ enum reg_class\n   \"CR_REGS\",\t\t\t\t\t\t\t\t\\\n   \"NON_FLOAT_REGS\",\t\t\t\t\t\t\t\\\n   \"CA_REGS\",\t\t\t\t\t\t\t\t\\\n-  \"SPE_HIGH_REGS\",\t\t\t\t\t\t\t\\\n   \"ALL_REGS\"\t\t\t\t\t\t\t\t\\\n }\n \n@@ -1482,51 +1458,49 @@ enum reg_class\n #define REG_CLASS_CONTENTS\t\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   /* NO_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00000000 },\t\t\t\\\n   /* BASE_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xfffffffe, 0x00000000, 0x00000008, 0x00020000, 0x00000000 },\t\\\n+  { 0xfffffffe, 0x00000000, 0x00000008, 0x00020000 },\t\t\t\\\n   /* GENERAL_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x00000008, 0x00020000, 0x00000000 },\t\\\n+  { 0xffffffff, 0x00000000, 0x00000008, 0x00020000 },\t\t\t\\\n   /* FLOAT_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000 },\t\\\n+  { 0x00000000, 0xffffffff, 0x00000000, 0x00000000 },\t\t\t\\\n   /* ALTIVEC_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0xffffe000, 0x00001fff, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0xffffe000, 0x00001fff },\t\t\t\\\n   /* VSX_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0xffffffff, 0xffffe000, 0x00001fff, 0x00000000 },\t\\\n+  { 0x00000000, 0xffffffff, 0xffffe000, 0x00001fff },\t\t\t\\\n   /* VRSAVE_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00002000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00002000 },\t\t\t\\\n   /* VSCR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00004000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00004000 },\t\t\t\\\n   /* SPE_ACC_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00008000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00008000 },\t\t\t\\\n   /* SPEFSCR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00010000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00010000 },\t\t\t\\\n   /* SPR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0x00040000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000000, 0x00040000 },\t\t\t\\\n   /* NON_SPECIAL_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0xffffffff, 0x00000008, 0x00020000, 0x00000000 },\t\\\n+  { 0xffffffff, 0xffffffff, 0x00000008, 0x00020000 },\t\t\t\\\n   /* LINK_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000002, 0x00000000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000002, 0x00000000 },\t\t\t\\\n   /* CTR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000004, 0x00000000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000004, 0x00000000 },\t\t\t\\\n   /* LINK_OR_CTR_REGS.  */\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000006, 0x00000000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000006, 0x00000000 },\t\t\t\\\n   /* SPECIAL_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000006, 0x00002000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000006, 0x00002000 },\t\t\t\\\n   /* SPEC_OR_GEN_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x0000000e, 0x00022000, 0x00000000 },\t\\\n+  { 0xffffffff, 0x00000000, 0x0000000e, 0x00022000 },\t\t\t\\\n   /* CR0_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000010, 0x00000000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000010, 0x00000000 },\t\t\t\\\n   /* CR_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000ff0, 0x00000000, 0x00000000 },\t\\\n+  { 0x00000000, 0x00000000, 0x00000ff0, 0x00000000 },\t\t\t\\\n   /* NON_FLOAT_REGS.  */\t\t\t\t\t\t\\\n-  { 0xffffffff, 0x00000000, 0x00000ffe, 0x00020000, 0x00000000 },\t\\\n+  { 0xffffffff, 0x00000000, 0x00000ffe, 0x00020000 },\t\t\t\\\n   /* CA_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00001000, 0x00000000, 0x00000000 },\t\\\n-  /* SPE_HIGH_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0x00000000, 0x00000000, 0x00000000, 0xffe00000, 0x001fffff },\t\\\n+  { 0x00000000, 0x00000000, 0x00001000, 0x00000000 },\t\t\t\\\n   /* ALL_REGS.  */\t\t\t\t\t\t\t\\\n-  { 0xffffffff, 0xffffffff, 0xfffffffe, 0xffe7ffff, 0x001fffff }\t\\\n+  { 0xffffffff, 0xffffffff, 0xfffffffe, 0x0007ffff }\t\t\t\\\n }\n \n /* The same information, inverted:\n@@ -2461,39 +2435,6 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   &rs6000_reg_names[114][0],\t/* tfhar  */\t\t\t\t\\\n   &rs6000_reg_names[115][0],\t/* tfiar  */\t\t\t\t\\\n   &rs6000_reg_names[116][0],\t/* texasr  */\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  &rs6000_reg_names[117][0],\t/* SPE rh0.  */\t\t\t\t\\\n-  &rs6000_reg_names[118][0],\t/* SPE rh1.  */\t\t\t\t\\\n-  &rs6000_reg_names[119][0],\t/* SPE rh2.  */\t\t\t\t\\\n-  &rs6000_reg_names[120][0],\t/* SPE rh3.  */\t\t\t\t\\\n-  &rs6000_reg_names[121][0],\t/* SPE rh4.  */\t\t\t\t\\\n-  &rs6000_reg_names[122][0],\t/* SPE rh5.  */\t\t\t\t\\\n-  &rs6000_reg_names[123][0],\t/* SPE rh6.  */\t\t\t\t\\\n-  &rs6000_reg_names[124][0],\t/* SPE rh7.  */\t\t\t\t\\\n-  &rs6000_reg_names[125][0],\t/* SPE rh8.  */\t\t\t\t\\\n-  &rs6000_reg_names[126][0],\t/* SPE rh9.  */\t\t\t\t\\\n-  &rs6000_reg_names[127][0],\t/* SPE rh10.  */\t\t\t\\\n-  &rs6000_reg_names[128][0],\t/* SPE rh11.  */\t\t\t\\\n-  &rs6000_reg_names[129][0],\t/* SPE rh12.  */\t\t\t\\\n-  &rs6000_reg_names[130][0],\t/* SPE rh13.  */\t\t\t\\\n-  &rs6000_reg_names[131][0],\t/* SPE rh14.  */\t\t\t\\\n-  &rs6000_reg_names[132][0],\t/* SPE rh15.  */\t\t\t\\\n-  &rs6000_reg_names[133][0],\t/* SPE rh16.  */\t\t\t\\\n-  &rs6000_reg_names[134][0],\t/* SPE rh17.  */\t\t\t\\\n-  &rs6000_reg_names[135][0],\t/* SPE rh18.  */\t\t\t\\\n-  &rs6000_reg_names[136][0],\t/* SPE rh19.  */\t\t\t\\\n-  &rs6000_reg_names[137][0],\t/* SPE rh20.  */\t\t\t\\\n-  &rs6000_reg_names[138][0],\t/* SPE rh21.  */\t\t\t\\\n-  &rs6000_reg_names[139][0],\t/* SPE rh22.  */\t\t\t\\\n-  &rs6000_reg_names[140][0],\t/* SPE rh22.  */\t\t\t\\\n-  &rs6000_reg_names[141][0],\t/* SPE rh24.  */\t\t\t\\\n-  &rs6000_reg_names[142][0],\t/* SPE rh25.  */\t\t\t\\\n-  &rs6000_reg_names[143][0],\t/* SPE rh26.  */\t\t\t\\\n-  &rs6000_reg_names[144][0],\t/* SPE rh27.  */\t\t\t\\\n-  &rs6000_reg_names[145][0],\t/* SPE rh28.  */\t\t\t\\\n-  &rs6000_reg_names[146][0],\t/* SPE rh29.  */\t\t\t\\\n-  &rs6000_reg_names[147][0],\t/* SPE rh30.  */\t\t\t\\\n-  &rs6000_reg_names[148][0],\t/* SPE rh31.  */\t\t\t\\\n }\n \n /* Table of additional register names to use in user input.  */\n@@ -2550,15 +2491,6 @@ extern char rs6000_reg_names[][8];\t/* register names (0 vs. %r0).  */\n   {\"vs60\", 105},{\"vs61\", 106},{\"vs62\", 107},{\"vs63\", 108},\t\\\n   /* Transactional Memory Facility (HTM) Registers.  */\t\t\\\n   {\"tfhar\",  114}, {\"tfiar\",  115}, {\"texasr\",  116},\t\t\\\n-  /* SPE high registers.  */\t\t\t\t\t\\\n-  {\"rh0\",  117}, {\"rh1\",  118}, {\"rh2\",  119}, {\"rh3\",  120},\t\\\n-  {\"rh4\",  121}, {\"rh5\",  122}, {\"rh6\",  123}, {\"rh7\",  124},\t\\\n-  {\"rh8\",  125}, {\"rh9\",  126}, {\"rh10\", 127}, {\"rh11\", 128},\t\\\n-  {\"rh12\", 129}, {\"rh13\", 130}, {\"rh14\", 131}, {\"rh15\", 132},\t\\\n-  {\"rh16\", 133}, {\"rh17\", 134}, {\"rh18\", 135}, {\"rh19\", 136},\t\\\n-  {\"rh20\", 137}, {\"rh21\", 138}, {\"rh22\", 139}, {\"rh23\", 140},\t\\\n-  {\"rh24\", 141}, {\"rh25\", 142}, {\"rh26\", 143}, {\"rh27\", 144},\t\\\n-  {\"rh28\", 145}, {\"rh29\", 146}, {\"rh30\", 147}, {\"rh31\", 148},\t\\\n }\n \n /* This is how to output an element of a case-vector that is relative.  */"}, {"sha": "39302f3e883f5a99748cbb030140e7abc84fe29c", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "patch": "@@ -3569,8 +3569,6 @@ Define this macro if the target's representation for dwarf registers\n is different than the internal representation for unwind column.\n Given a dwarf register, this macro should return the internal unwind\n column number to use instead.\n-\n-See the PowerPC's SPE target for an example.\n @end defmac\n \n @defmac DWARF_FRAME_REGNUM (@var{regno})"}, {"sha": "98f2e6bce5feb87f89f6f168c5c48ea92e4d18b0", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=3e2bca2e2cc6bfa7bd820d2c684c3ec13d21537a", "patch": "@@ -3129,8 +3129,6 @@ Define this macro if the target's representation for dwarf registers\n is different than the internal representation for unwind column.\n Given a dwarf register, this macro should return the internal unwind\n column number to use instead.\n-\n-See the PowerPC's SPE target for an example.\n @end defmac\n \n @defmac DWARF_FRAME_REGNUM (@var{regno})"}]}