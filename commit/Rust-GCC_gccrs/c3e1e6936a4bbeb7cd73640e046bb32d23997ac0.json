{"sha": "c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNlMWU2OTM2YTRiYmViN2NkNzM2NDBlMDQ2YmIzMmQyMzk5N2FjMA==", "commit": {"author": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2014-12-09T13:45:47Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2014-12-09T13:45:47Z"}, "message": "Local Vim config with GNU formatting.\n\n    \n2014-12-09  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n\t    Yury Gribov  <y.gribov@samsung.com>\n    \n/\n\t* .gitignore: Added .local.vimrc and .lvimrc.\n\t* Makefile.tpl (vimrc, .lvimrc, .local.vimrc): New targets.\n\t* Makefile.in: Regenerate.\n\ncontrib/\n\t* vimrc: New file.\n\nFrom-SVN: r218514", "tree": {"sha": "cf4befdca797feb9f6af158c5d349371f9d662ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf4befdca797feb9f6af158c5d349371f9d662ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/comments", "author": null, "committer": null, "parents": [{"sha": "85fd4c288ae10b75a5ccf48abf79e10b5d8a6d06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85fd4c288ae10b75a5ccf48abf79e10b5d8a6d06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85fd4c288ae10b75a5ccf48abf79e10b5d8a6d06"}], "stats": {"total": 86, "additions": 85, "deletions": 1}, "files": [{"sha": "ab97ac67cb41081c8175516daa64e5dc23e8e1fe", "filename": ".gitignore", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/.gitignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/.gitignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.gitignore?ref=c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "patch": "@@ -32,6 +32,9 @@ POTFILES\n TAGS\n TAGS.sub\n \n+.local.vimrc\n+.lvimrc\n+\n .gdbinit\n .gdb_history\n "}, {"sha": "e94514f5c8bc6a2eebbea8d9dca15c1069d0a047", "filename": "ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "patch": "@@ -1,4 +1,11 @@\n-2014-12-04\tJack Howarth  <howarth@bromo.med.uc.edu>\n+2014-12-09  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n+\t    Yury Gribov  <y.gribov@samsung.com>\n+\n+\t* .gitignore: Added .local.vimrc and .lvimrc.\n+\t* Makefile.tpl (vimrc, .lvimrc, .local.vimrc): New targets.\n+\t* Makefile.in: Regenerate.\n+\n+2014-12-04  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \t* config/isl.m4: Don't pass -DCLOOG_INT_GMP on islinc.\n \t* configure: Regenerated."}, {"sha": "ba5ae4c2ecb23535da040fec1ccd3e2e23cf7c87", "filename": "Makefile.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "patch": "@@ -2392,6 +2392,18 @@ mail-report-with-warnings.log: warning.log\n \tchmod +x $@\n \techo If you really want to send e-mail, run ./$@ now\n \n+# Local Vim config\n+\n+$(srcdir)/.local.vimrc:\n+\t$(LN_S) $(srcdir)/contrib/vimrc $@\n+\n+$(srcdir)/.lvimrc:\n+\t$(LN_S) $(srcdir)/contrib/vimrc $@\n+\n+vimrc: $(srcdir)/.local.vimrc $(srcdir)/.lvimrc\n+\n+.PHONY: vimrc\n+\n # Installation targets.\n \n .PHONY: install uninstall"}, {"sha": "dcbc6b1b1435dbcac7b0eb5d09429306c8c9d0ea", "filename": "Makefile.tpl", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/Makefile.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/Makefile.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.tpl?ref=c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "patch": "@@ -861,6 +861,18 @@ mail-report-with-warnings.log: warning.log\n \tchmod +x $@\n \techo If you really want to send e-mail, run ./$@ now\n \n+# Local Vim config\n+\n+$(srcdir)/.local.vimrc:\n+\t$(LN_S) $(srcdir)/contrib/vimrc $@\n+\n+$(srcdir)/.lvimrc:\n+\t$(LN_S) $(srcdir)/contrib/vimrc $@\n+\n+vimrc: $(srcdir)/.local.vimrc $(srcdir)/.lvimrc\n+\n+.PHONY: vimrc\n+\n # Installation targets.\n \n .PHONY: install uninstall"}, {"sha": "7984108089bd6d23ba9c1b20aa0ac06bdca57abd", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "patch": "@@ -1,3 +1,8 @@\n+2014-12-09  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n+\t    Yury Gribov  <y.gribov@samsung.com>\n+\n+\t* vimrc: New file.\n+\n 2014-12-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* check_GNU_style.sh: Warn for incorrect number of spaces in function"}, {"sha": "34e8f3543f90ad1b7eac9d35bbdf69c3600d38e9", "filename": "contrib/vimrc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/contrib%2Fvimrc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3e1e6936a4bbeb7cd73640e046bb32d23997ac0/contrib%2Fvimrc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fvimrc?ref=c3e1e6936a4bbeb7cd73640e046bb32d23997ac0", "patch": "@@ -0,0 +1,45 @@\n+\" Code formatting settings for Vim.\n+\"\n+\" To enable this for GCC files by default, you can either source this file\n+\" in your .vimrc via autocmd:\n+\"   :au BufNewFile,BufReadPost path/to/gcc/* :so path/to/gcc/contrib/vimrc\n+\" or source the script manually for each newly opened file:\n+\"   :so contrib/vimrc\n+\" You could also use numerous plugins that enable local vimrc e.g.\n+\" mbr's localvimrc or thinca's vim-localrc (but note that the latter\n+\" is much less secure). To install local vimrc config, run\n+\"   $ make vimrc\n+\" from GCC build folder.\n+\" \n+\" Copyright (C) 2014 Free Software Foundation, Inc.\n+\"\n+\" This program is free software; you can redistribute it and/or modify\n+\" it under the terms of the GNU General Public License as published by\n+\" the Free Software Foundation; either version 3 of the License, or\n+\" (at your option) any later version.\n+\"\n+\" This program is distributed in the hope that it will be useful,\n+\" but WITHOUT ANY WARRANTY; without even the implied warranty of\n+\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+\" GNU General Public License for more details.\n+\"\n+\" You should have received a copy of the GNU General Public License\n+\" along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+function! SetStyle()\n+  let l:fname = expand(\"%:p\")\n+  if stridx(l:fname, 'libsanitizer') != -1\n+    return\n+  endif\n+  let l:ext = fnamemodify(l:fname, \":e\")\n+  let l:c_exts = ['c', 'h', 'cpp', 'cc', 'C', 'H', 'def', 'java']\n+  if index(l:c_exts, l:ext) != -1\n+    setlocal cindent\n+    setlocal softtabstop=2\n+    setlocal cinoptions=>4,n-2,{2,^-2,:2,=2,g0,f0,h2,p4,t0,+2,(0,u0,w1,m0\n+    setlocal textwidth=80\n+    setlocal formatoptions-=ro formatoptions+=cqlt\n+  endif\n+endfunction\n+\n+call SetStyle()"}]}