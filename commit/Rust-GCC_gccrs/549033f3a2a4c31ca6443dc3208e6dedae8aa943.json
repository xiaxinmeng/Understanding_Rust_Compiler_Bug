{"sha": "549033f3a2a4c31ca6443dc3208e6dedae8aa943", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ5MDMzZjNhMmE0YzMxY2E2NDQzZGMzMjA4ZTZkZWRhZThhYTk0Mw==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "coudert@clipper.ens.fr", "date": "2006-06-08T21:48:05Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-06-08T21:48:05Z"}, "message": "re PR fortran/27958 (assignments to and from zero-sized string selections not handled)\n\n\tPR fortran/27958\n\n\t* trans-expr.c (gfc_conv_substring): If the substring start is\n\tgreater than its end, the length of the substring is zero, and\n\tnot negative.\n\t(gfc_trans_string_copy): Don't generate a call to\n\t_gfortran_copy_string when destination length is zero.\n\n\t* gcc/testsuite/gfortran.dg/substr_2.f: New test.\n\nFrom-SVN: r114496", "tree": {"sha": "b0ea7c8e8dc9a94d1d9c5409105320893e6ed0d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0ea7c8e8dc9a94d1d9c5409105320893e6ed0d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/549033f3a2a4c31ca6443dc3208e6dedae8aa943", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/549033f3a2a4c31ca6443dc3208e6dedae8aa943", "html_url": "https://github.com/Rust-GCC/gccrs/commit/549033f3a2a4c31ca6443dc3208e6dedae8aa943", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/549033f3a2a4c31ca6443dc3208e6dedae8aa943/comments", "author": null, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6cf0340b9a28d1cdf632d1f4d1becc470d34ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6cf0340b9a28d1cdf632d1f4d1becc470d34ba9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6cf0340b9a28d1cdf632d1f4d1becc470d34ba9"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "0a3d2c12bee9f0e966f6356f24319ae07accaa0f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549033f3a2a4c31ca6443dc3208e6dedae8aa943/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549033f3a2a4c31ca6443dc3208e6dedae8aa943/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=549033f3a2a4c31ca6443dc3208e6dedae8aa943", "patch": "@@ -1,3 +1,12 @@\n+2006-06-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/27958\n+\t* trans-expr.c (gfc_conv_substring): If the substring start is\n+\tgreater than its end, the length of the substring is zero, and\n+\tnot negative.\n+\t(gfc_trans_string_copy): Don't generate a call to\n+\t_gfortran_copy_string when destination length is zero.\n+\n 2006-06-08  Asher Langton  <langton2@llnl.gov>\n \t\n \tPR fortran/27786"}, {"sha": "9e5524f09c387056d6a605a2f993f5dc0d5e587d", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549033f3a2a4c31ca6443dc3208e6dedae8aa943/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549033f3a2a4c31ca6443dc3208e6dedae8aa943/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=549033f3a2a4c31ca6443dc3208e6dedae8aa943", "patch": "@@ -275,6 +275,8 @@ gfc_conv_substring (gfc_se * se, gfc_ref * ref, int kind)\n \t\t     build_int_cst (gfc_charlen_type_node, 1),\n \t\t     start.expr);\n   tmp = fold_build2 (PLUS_EXPR, gfc_charlen_type_node, end.expr, tmp);\n+  tmp = fold_build2 (MAX_EXPR, gfc_charlen_type_node, tmp,\n+\t\t     build_int_cst (gfc_charlen_type_node, 0));\n   se->string_length = tmp;\n }\n \n@@ -2196,6 +2198,7 @@ gfc_trans_string_copy (stmtblock_t * block, tree dlen, tree dest,\n   tree tmp;\n   tree dsc;\n   tree ssc;\n+  tree cond;\n \n   /* Deal with single character specially.  */\n   dsc = gfc_to_single_character (dlen, dest);\n@@ -2206,12 +2209,16 @@ gfc_trans_string_copy (stmtblock_t * block, tree dlen, tree dest,\n       return;\n     }\n \n+  cond = fold_build2 (GT_EXPR, boolean_type_node, dlen,\n+\t\t      build_int_cst (gfc_charlen_type_node, 0));\n+\n   tmp = NULL_TREE;\n   tmp = gfc_chainon_list (tmp, dlen);\n   tmp = gfc_chainon_list (tmp, dest);\n   tmp = gfc_chainon_list (tmp, slen);\n   tmp = gfc_chainon_list (tmp, src);\n   tmp = build_function_call_expr (gfor_fndecl_copy_string, tmp);\n+  tmp = fold_build3 (COND_EXPR, void_type_node, cond, tmp, build_empty_stmt ());\n   gfc_add_expr_to_block (block, tmp);\n }\n "}, {"sha": "53c280a0dbf3514ce00bc497814c5d2b02c3a667", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549033f3a2a4c31ca6443dc3208e6dedae8aa943/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549033f3a2a4c31ca6443dc3208e6dedae8aa943/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=549033f3a2a4c31ca6443dc3208e6dedae8aa943", "patch": "@@ -1,3 +1,8 @@\n+2006-06-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/27958\n+\t* gcc/testsuite/gfortran.dg/substr_2.f: New test.\n+\n 2006-06-08  Asher Langton  <langton2@llnl.gov>\n \t\n \tPR fortran/27786"}, {"sha": "a7e43b635e8f3ddfe6a021593899f2fc17de8b7a", "filename": "gcc/testsuite/gfortran.dg/substr_2.f", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/549033f3a2a4c31ca6443dc3208e6dedae8aa943/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/549033f3a2a4c31ca6443dc3208e6dedae8aa943/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fsubstr_2.f?ref=549033f3a2a4c31ca6443dc3208e6dedae8aa943", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do run }\n+! Check that substrings behave correctly even when zero-sized\n+      implicit none\n+      character(len=10) :: s, t\n+      integer :: i, j\n+\n+      s = \"abcdefghij\"\n+      t(:10) = s(1:)\n+      s(6:5) = \"foo\"\n+      if (s /= t) call abort\n+      i = 2\n+      j = -1\n+      s(i:i+j) = \"foo\"\n+      if (s /= t) call abort\n+      i = 20\n+      s(i+1:i) = \"foo\"\n+      if (s /= t) call abort\n+      s(6:5) = s(7:5)\n+      if (s /= t) call abort\n+      s = t(7:6)\n+      if (len(trim(s)) /= 0) call abort\n+      if (len(t(8:4)) /= 0) call abort\n+      if (len(trim(t(8:4))) /= 0) call abort\n+      end"}]}