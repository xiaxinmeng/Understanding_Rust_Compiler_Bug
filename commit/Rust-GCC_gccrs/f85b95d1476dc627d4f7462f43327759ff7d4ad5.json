{"sha": "f85b95d1476dc627d4f7462f43327759ff7d4ad5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg1Yjk1ZDE0NzZkYzYyN2Q0Zjc0NjJmNDMzMjc3NTlmZjdkNGFkNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-28T18:57:49Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-04-28T18:57:49Z"}, "message": "(emit_block_move): Cast to unsiged HOST_WIDE_INT instead of unsigned int.\n\nFrom-SVN: r4260", "tree": {"sha": "e089f26dad6ac2d2e79bc3334e4947435fbaa771", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e089f26dad6ac2d2e79bc3334e4947435fbaa771"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f85b95d1476dc627d4f7462f43327759ff7d4ad5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85b95d1476dc627d4f7462f43327759ff7d4ad5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f85b95d1476dc627d4f7462f43327759ff7d4ad5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f85b95d1476dc627d4f7462f43327759ff7d4ad5/comments", "author": null, "committer": null, "parents": [{"sha": "dbbe64450e86716dd63319ce855844c6fa82eda7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbbe64450e86716dd63319ce855844c6fa82eda7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbbe64450e86716dd63319ce855844c6fa82eda7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4b317cb446c591f3a330c3bcb5e1fccc9b398eff", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f85b95d1476dc627d4f7462f43327759ff7d4ad5/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f85b95d1476dc627d4f7462f43327759ff7d4ad5/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f85b95d1476dc627d4f7462f43327759ff7d4ad5", "patch": "@@ -1377,7 +1377,7 @@ emit_block_move (x, y, size, align)\n \t\t here because if SIZE is less than the mode mask, as it is\n \t\t returned by the macro, it will definitely be less than the\n \t\t actual mode mask.  */\n-\t      && (unsigned) INTVAL (size) <= GET_MODE_MASK (mode)\n+\t      && (unsigned HOST_WIDE_INT) INTVAL (size) <= GET_MODE_MASK (mode)\n \t      && (insn_operand_predicate[(int) code][0] == 0\n \t\t  || (*insn_operand_predicate[(int) code][0]) (x, BLKmode))\n \t      && (insn_operand_predicate[(int) code][1] == 0"}]}