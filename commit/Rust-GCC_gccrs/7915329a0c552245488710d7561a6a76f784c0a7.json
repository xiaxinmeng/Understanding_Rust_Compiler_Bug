{"sha": "7915329a0c552245488710d7561a6a76f784c0a7", "node_id": "C_kwDOANBUbNoAKDc5MTUzMjlhMGM1NTIyNDU0ODg3MTBkNzU2MWE2YTc2Zjc4NGMwYTc", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-22T09:24:46Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-04-22T09:24:46Z"}, "message": "Add support for isize and usize type-hints\n\nThis bug turned out to be that we expected a usize for the array capacity\nbut the specified capacity turned out to be an integer inference variable\nwhich will default to a signed integer. The type resolution was missing\nhandling the type-hints of isize and usize\n\nFixes #1152", "tree": {"sha": "2d96d02b9907a9b28273d60b91c6e10dd58f6ffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d96d02b9907a9b28273d60b91c6e10dd58f6ffd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7915329a0c552245488710d7561a6a76f784c0a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7915329a0c552245488710d7561a6a76f784c0a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7915329a0c552245488710d7561a6a76f784c0a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7915329a0c552245488710d7561a6a76f784c0a7/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243ef0dfe713a9fc8d4d80feb488a58b2639f39f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243ef0dfe713a9fc8d4d80feb488a58b2639f39f"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "4e8fa269ca62b97d5e840d1899ef8e7c469b5827", "filename": "gcc/rust/typecheck/rust-hir-type-check-base.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7915329a0c552245488710d7561a6a76f784c0a7/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-base.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7915329a0c552245488710d7561a6a76f784c0a7/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-base.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-base.cc?ref=7915329a0c552245488710d7561a6a76f784c0a7", "patch": "@@ -133,6 +133,14 @@ TypeCheckBase::resolve_literal (const Analysis::NodeMapping &expr_mappings,\n \t    ok = context->lookup_builtin (\"f64\", &infered);\n \t    break;\n \n+\t  case CORETYPE_ISIZE:\n+\t    ok = context->lookup_builtin (\"isize\", &infered);\n+\t    break;\n+\n+\t  case CORETYPE_USIZE:\n+\t    ok = context->lookup_builtin (\"usize\", &infered);\n+\t    break;\n+\n \t  default:\n \t    ok = true;\n \t    infered"}, {"sha": "630eb601885740d2dd5b52a977e74dfe69356e67", "filename": "gcc/rust/typecheck/rust-hir-type-check-expr.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7915329a0c552245488710d7561a6a76f784c0a7/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7915329a0c552245488710d7561a6a76f784c0a7/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-type-check-expr.h?ref=7915329a0c552245488710d7561a6a76f784c0a7", "patch": "@@ -619,6 +619,8 @@ class TypeCheckExpr : public TypeCheckBase\n \t    = (negated_expr_ty->get_kind () == TyTy::TypeKind::INT)\n \t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::UINT)\n \t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::FLOAT)\n+\t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::ISIZE)\n+\t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::USIZE)\n \t      || (negated_expr_ty->get_kind () == TyTy::TypeKind::INFER\n \t\t  && (((TyTy::InferType *) negated_expr_ty)->get_infer_kind ()\n \t\t      == TyTy::InferType::INTEGRAL))"}, {"sha": "18eee9e6b4a63695584975c16bdd2c192be7bd14", "filename": "gcc/testsuite/rust/compile/issue-1152.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7915329a0c552245488710d7561a6a76f784c0a7/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1152.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7915329a0c552245488710d7561a6a76f784c0a7/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1152.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1152.rs?ref=7915329a0c552245488710d7561a6a76f784c0a7", "patch": "@@ -0,0 +1,8 @@\n+fn test() {\n+    let f = [0; -4_isize];\n+    // { dg-error \"expected .usize. got .isize.\" \"\" { target *-*-* } .-1 }\n+    // { dg-error \"failed to type resolve expression\" \"\" { target *-*-* } .-2 }\n+    let f = [0_usize; -1_isize];\n+    // { dg-error \"expected .usize. got .isize.\" \"\" { target *-*-* } .-1 }\n+    // { dg-error \"failed to type resolve expression\" \"\" { target *-*-* } .-2 }\n+}"}]}