{"sha": "b9cbf8c9e0bc72f59b643165247fae646560aadd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjljYmY4YzllMGJjNzJmNTliNjQzMTY1MjQ3ZmFlNjQ2NTYwYWFkZA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-28T22:14:38Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-07-28T22:14:38Z"}, "message": "Correct -Warray-bounds handling if function pointers [PR101601].\n\nResolves:\nPR middle-end/101601 - -Warray-bounds triggers error: arrays of functions are not meaningful\n\n\tPR middle-end/101601\n\ngcc/ChangeLog:\n\n\t* gimple-array-bounds.cc (array_bounds_checker::check_mem_ref): Remove\n\ta pointless test.\n\tHandle pointers to functions.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/warn/Warray-bounds-25.C: New test.\n\t* gcc.dg/Warray-bounds-85.c: New test.", "tree": {"sha": "ba826defe0728c66693746d587fa5e933ffc928e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ba826defe0728c66693746d587fa5e933ffc928e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9cbf8c9e0bc72f59b643165247fae646560aadd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cbf8c9e0bc72f59b643165247fae646560aadd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9cbf8c9e0bc72f59b643165247fae646560aadd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9cbf8c9e0bc72f59b643165247fae646560aadd/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a837de28ee94b4ec201059a9a7aaa852e6808da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a837de28ee94b4ec201059a9a7aaa852e6808da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a837de28ee94b4ec201059a9a7aaa852e6808da"}], "stats": {"total": 126, "additions": 111, "deletions": 15}, "files": [{"sha": "0517e5ddd8e6370a094b6ac6aa4283c91c1b9cca", "filename": "gcc/gimple-array-bounds.cc", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cbf8c9e0bc72f59b643165247fae646560aadd/gcc%2Fgimple-array-bounds.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cbf8c9e0bc72f59b643165247fae646560aadd/gcc%2Fgimple-array-bounds.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-array-bounds.cc?ref=b9cbf8c9e0bc72f59b643165247fae646560aadd", "patch": "@@ -421,10 +421,9 @@ array_bounds_checker::check_mem_ref (location_t location, tree ref,\n   /* The type and size of the access.  */\n   tree axstype = TREE_TYPE (ref);\n   offset_int axssize = 0;\n-  if (TREE_CODE (axstype) != UNION_TYPE)\n-    if (tree access_size = TYPE_SIZE_UNIT (axstype))\n-      if (TREE_CODE (access_size) == INTEGER_CST)\n-\taxssize = wi::to_offset (access_size);\n+  if (tree access_size = TYPE_SIZE_UNIT (axstype))\n+    if (TREE_CODE (access_size) == INTEGER_CST)\n+      axssize = wi::to_offset (access_size);\n \n   access_ref aref;\n   if (!compute_objsize (ref, 0, &aref, ranges))\n@@ -451,20 +450,28 @@ array_bounds_checker::check_mem_ref (location_t location, tree ref,\n   tree reftype = TREE_TYPE (aref.ref);\n   /* The size of the referenced array element.  */\n   offset_int eltsize = 1;\n-  /* The byte size of the array has already been determined above\n-     based on a pointer ARG.  Set ELTSIZE to the size of the type\n-     it points to and REFTYPE to the array with the size, rounded\n-     down as necessary.  */\n   if (POINTER_TYPE_P (reftype))\n     reftype = TREE_TYPE (reftype);\n-  if (TREE_CODE (reftype) == ARRAY_TYPE)\n-    reftype = TREE_TYPE (reftype);\n-  if (tree refsize = TYPE_SIZE_UNIT (reftype))\n-    if (TREE_CODE (refsize) == INTEGER_CST)\n-      eltsize = wi::to_offset (refsize);\n \n-  const offset_int nelts = aref.sizrng[1] / eltsize;\n-  reftype = build_printable_array_type (reftype, nelts.to_uhwi ());\n+  if (TREE_CODE (reftype) == FUNCTION_TYPE)\n+    /* Restore the original (pointer) type and avoid trying to create\n+       an array of functions (done below).  */\n+    reftype = TREE_TYPE (aref.ref);\n+  else\n+    {\n+      /* The byte size of the array has already been determined above\n+\t based on a pointer ARG.  Set ELTSIZE to the size of the type\n+\t it points to and REFTYPE to the array with the size, rounded\n+\t down as necessary.  */\n+      if (TREE_CODE (reftype) == ARRAY_TYPE)\n+\treftype = TREE_TYPE (reftype);\n+      if (tree refsize = TYPE_SIZE_UNIT (reftype))\n+\tif (TREE_CODE (refsize) == INTEGER_CST)\n+\t  eltsize = wi::to_offset (refsize);\n+\n+      const offset_int nelts = aref.sizrng[1] / eltsize;\n+      reftype = build_printable_array_type (reftype, nelts.to_uhwi ());\n+    }\n \n   /* Compute the more permissive upper bound when IGNORE_OFF_BY_ONE\n      is set (when taking the address of the one-past-last element"}, {"sha": "a93da03756084b1905ea0f3068a6ed28b4fed85e", "filename": "gcc/testsuite/g++.dg/warn/Warray-bounds-25.C", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cbf8c9e0bc72f59b643165247fae646560aadd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cbf8c9e0bc72f59b643165247fae646560aadd/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWarray-bounds-25.C?ref=b9cbf8c9e0bc72f59b643165247fae646560aadd", "patch": "@@ -0,0 +1,59 @@\n+/* PR middle-end/101601 - [12 Regression] -Warray-bounds triggers error:\n+   arrays of functions are not meaningful\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+typedef void Fvv (void);\n+\n+extern Fvv* pf;       // { dg-message \"'pf'\" }\n+\n+void f (...);\n+\n+void test_funptr (void)\n+{\n+  f (&pf);\n+  f (&pf + 1);\n+  f (&pf + 2);        // { dg-warning \"subscript 2 is outside array bounds of 'void \\\\\\(\\\\\\* ?\\\\\\[1]\\\\\\)\\\\\\(\\\\\\)'\" }\n+}\n+\n+typedef int Fii_ (int, ...);\n+\n+extern Fii_* pfa[3];  // { dg-message \"'pfa'\" }\n+\n+void test_funptr_array (void)\n+{\n+  f (pfa);\n+  f (pfa + 1);\n+  f (pfa + 2);\n+  f (pfa + 3);\n+  f (pfa + 4);        // { dg-warning \"subscript 4 is outside array bounds of 'int \\\\\\(\\\\\\* ?\\\\\\[3]\\\\\\)\\\\\\(int, ...\\\\\\)'\" }\n+}\n+\n+\n+struct A;\n+typedef void (A::*MFvv)(void);\n+\n+MFvv pmf;\n+\n+void test_memfunptr (void)\n+{\n+  f (&pmf);\n+  f (&pmf + 1);\n+  f (&pmf + 2);       // { dg-warning \"subscript 2 is outside array bounds of 'void \\\\\\(A::\\\\\\* ?\\\\\\[1]\\\\\\)\\\\\\(\\\\\\)'\" }\n+}\n+\n+\n+typedef int (A::*MFii)(int);\n+\n+MFii pmfa[4];\n+\n+void test_memfunptr_array (void)\n+{\n+  f (pmfa);\n+  f (pmfa + 1);\n+  f (pmfa + 2);\n+  f (pmfa + 3);\n+  f (pmfa + 4);\n+  f (pmfa + 5);       // { dg-warning \"subscript 5 is outside array bounds of 'int \\\\\\(A::\\\\\\* ?\\\\\\[4]\\\\\\)\\\\\\(int\\\\\\)'\" }\n+\n+}"}, {"sha": "0ee71200cbb837339c1e096413aeefc09883f3c4", "filename": "gcc/testsuite/gcc.dg/Warray-bounds-85.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9cbf8c9e0bc72f59b643165247fae646560aadd/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-85.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9cbf8c9e0bc72f59b643165247fae646560aadd/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-85.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWarray-bounds-85.c?ref=b9cbf8c9e0bc72f59b643165247fae646560aadd", "patch": "@@ -0,0 +1,30 @@\n+/* PR middle-end/101601 - [12 Regression] -Warray-bounds triggers error:\n+   arrays of functions are not meaningful\n+   { dg-do compile }\n+   { dg-options \"-O2 -Wall\" } */\n+\n+typedef void Fvv (void);\n+\n+extern Fvv* pf;       // { dg-message \"'pf'\" }\n+\n+void f (void*);\n+\n+void test_funptr (void)\n+{\n+  f (&pf);\n+  f (&pf + 1);\n+  f (&pf + 2);        // { dg-warning \"subscript 2 is outside array bounds of 'void \\\\\\(\\\\\\*\\\\\\[1]\\\\\\)\\\\\\(void\\\\\\)'\" }\n+}\n+\n+typedef int Fii_ (int, ...);\n+\n+extern Fii_* pfa[3];  // { dg-message \"'pfa'\" }\n+\n+void test_funptr_array (void)\n+{\n+  f (pfa);\n+  f (pfa + 1);\n+  f (pfa + 2);\n+  f (pfa + 3);\n+  f (pfa + 4);        // { dg-warning \"subscript 4 is outside array bounds of 'int \\\\\\(\\\\\\*\\\\\\[3]\\\\\\)\\\\\\(int, ...\\\\\\)'\" }\n+}"}]}