{"sha": "f17aba3c82d9c316ab550b81cf9c7f141b31b999", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE3YWJhM2M4MmQ5YzMxNmFiNTUwYjgxY2Y5YzdmMTQxYjMxYjk5OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-21T15:45:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-21T15:45:36Z"}, "message": "* stor-layout.c (bit_from_pos): Do not distribute the conversion.\n\nFrom-SVN: r253074", "tree": {"sha": "6325b02b4d685a04e146bde2bde57168b841ae8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6325b02b4d685a04e146bde2bde57168b841ae8c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f17aba3c82d9c316ab550b81cf9c7f141b31b999", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f17aba3c82d9c316ab550b81cf9c7f141b31b999", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f17aba3c82d9c316ab550b81cf9c7f141b31b999", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f17aba3c82d9c316ab550b81cf9c7f141b31b999/comments", "author": null, "committer": null, "parents": [{"sha": "65d8c94d372c195d935c3d02a8a9fe566157b769", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d8c94d372c195d935c3d02a8a9fe566157b769", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d8c94d372c195d935c3d02a8a9fe566157b769"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "3071a86c7174464a9ad3968f4239413b780ef9e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f17aba3c82d9c316ab550b81cf9c7f141b31b999", "patch": "@@ -1,8 +1,6 @@\n-2017-09-21  Tamar Christina  <tamar.christina@arm.com>\n+2017-09-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n-\tPR testsuite/78421\n-\t* lib/target-supports.exp (check_effective_target_vect_hw_misalign):\n-\tInvert arm check.\n+\t* stor-layout.c (bit_from_pos): Do not distribute the conversion.\n \n 2017-09-21  Segher Boessenkool  <segher@kernel.crashing.org>\n "}, {"sha": "938be6745af4aaa7f146f3a66a54af28809cf7bf", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=f17aba3c82d9c316ab550b81cf9c7f141b31b999", "patch": "@@ -853,14 +853,10 @@ start_record_layout (tree t)\n tree\n bit_from_pos (tree offset, tree bitpos)\n {\n-  if (TREE_CODE (offset) == PLUS_EXPR)\n-    offset = size_binop (PLUS_EXPR,\n-\t\t\t fold_convert (bitsizetype, TREE_OPERAND (offset, 0)),\n-\t\t\t fold_convert (bitsizetype, TREE_OPERAND (offset, 1)));\n-  else\n-    offset = fold_convert (bitsizetype, offset);\n   return size_binop (PLUS_EXPR, bitpos,\n-\t\t     size_binop (MULT_EXPR, offset, bitsize_unit_node));\n+\t\t     size_binop (MULT_EXPR,\n+\t\t\t\t fold_convert (bitsizetype, offset),\n+\t\t\t\t bitsize_unit_node));\n }\n \n /* Return the combined truncated byte position for the byte offset OFFSET and"}, {"sha": "ce407c667b5f6375a71810132f668269eb20241c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f17aba3c82d9c316ab550b81cf9c7f141b31b999", "patch": "@@ -1,3 +1,14 @@\n+2017-09-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr48.adb: New test.\n+\t* gnat.dg/discr48_pkg.ads: New helper.\n+\n+2017-09-21  Tamar Christina  <tamar.christina@arm.com>\n+\n+\tPR testsuite/78421\n+\t* lib/target-supports.exp (check_effective_target_vect_hw_misalign):\n+\tInvert arm check.\n+\n 2017-09-21  Cesar Philippidis  <cesar@codesourcery.com>\n \n \t* gfortran.dg/goacc/wait.f90: New test."}, {"sha": "677f6ec67b126c0952f3b7c98ef86abddcd5f848", "filename": "gcc/testsuite/gnat.dg/discr48.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr48.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr48.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr48.adb?ref=f17aba3c82d9c316ab550b81cf9c7f141b31b999", "patch": "@@ -0,0 +1,9 @@\n+-- { dg-do compile }\n+\n+with Discr48_Pkg; use Discr48_Pkg;\n+\n+function Discr48 return Rec_Access is\n+   C : constant Rec := (Count => 1, Seps => (1 .. 0 => Null_XString));\n+begin\n+   return new Rec'(C);\n+end;"}, {"sha": "646b4f11bd3eda9f05b913b4c5f41e9a4fce798c", "filename": "gcc/testsuite/gnat.dg/discr48_pkg.ads", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr48_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f17aba3c82d9c316ab550b81cf9c7f141b31b999/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr48_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr48_pkg.ads?ref=f17aba3c82d9c316ab550b81cf9c7f141b31b999", "patch": "@@ -0,0 +1,19 @@\n+with Ada.Finalization;\n+\n+package Discr48_Pkg is\n+\n+   type XString is new Ada.Finalization.Controlled with record\n+      B : Boolean;\n+   end record;\n+\n+   Null_XString : constant XString := (Ada.Finalization.Controlled with B => False);\n+\n+   type XString_Array is array (Natural range <>) of XString;\n+\n+   type Rec (Count : Positive) is record\n+      Seps : XString_Array (2 .. Count);\n+   end record;\n+\n+   type Rec_Access is access all Rec;\n+\n+end Discr48_Pkg;"}]}