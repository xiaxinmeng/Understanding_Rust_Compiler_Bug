{"sha": "c90e1eca3782b667c081e08dad03aee5b4f16276", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzkwZTFlY2EzNzgyYjY2N2MwODFlMDhkYWQwM2FlZTViNGYxNjI3Ng==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2019-12-13T09:05:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-13T09:05:28Z"}, "message": "[Ada] Spurious error on precondition of subprogram instantiation\n\n2019-12-13  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch13.adb (Analyze_Aspect_Specification): Processing a\n\tprecondition, if the expression is of the form A and then B, do\n\tnot generate separate Pre/Post aspects for the separate clases\n\twhen we are processing a generic unit. Required to avoid\n\treporting spurious visibility errors on the instantiations.\n\nFrom-SVN: r279365", "tree": {"sha": "feac080fee7ac02c28a6cb9c04f4c1504b5d9433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feac080fee7ac02c28a6cb9c04f4c1504b5d9433"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c90e1eca3782b667c081e08dad03aee5b4f16276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c90e1eca3782b667c081e08dad03aee5b4f16276", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c90e1eca3782b667c081e08dad03aee5b4f16276", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c90e1eca3782b667c081e08dad03aee5b4f16276/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1e1e53a4861f5addee43088de14dadf47892f23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1e1e53a4861f5addee43088de14dadf47892f23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1e1e53a4861f5addee43088de14dadf47892f23"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "bfc9be15be2a9e1b445f16e61fe75e02b7c13356", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c90e1eca3782b667c081e08dad03aee5b4f16276/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c90e1eca3782b667c081e08dad03aee5b4f16276/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c90e1eca3782b667c081e08dad03aee5b4f16276", "patch": "@@ -1,3 +1,11 @@\n+2019-12-13  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specification): Processing a\n+\tprecondition, if the expression is of the form A and then B, do\n+\tnot generate separate Pre/Post aspects for the separate clases\n+\twhen we are processing a generic unit. Required to avoid\n+\treporting spurious visibility errors on the instantiations.\n+\n 2019-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* sem_res.adb (Resolve_Actuals): Give canonical error for"}, {"sha": "e266af9265d805737b1359ab93245d43efe17a19", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c90e1eca3782b667c081e08dad03aee5b4f16276/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c90e1eca3782b667c081e08dad03aee5b4f16276/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=c90e1eca3782b667c081e08dad03aee5b4f16276", "patch": "@@ -3479,11 +3479,14 @@ package body Sem_Ch13 is\n                   --  don't do this in GNATprove mode, because it brings no\n                   --  benefit for proof and causes annoynace for flow analysis,\n                   --  which prefers to be as close to the original source code\n-                  --  as possible.\n+                  --  as possible. Also we don't do this when analyzing generic\n+                  --  units since it causes spurious visibility errors in the\n+                  --  preanalysis of instantiations.\n \n                   if not (ASIS_Mode or GNATprove_Mode)\n                     and then (Pname = Name_Postcondition\n                                or else not Class_Present (Aspect))\n+                    and then not Inside_A_Generic\n                   then\n                      while Nkind (Expr) = N_And_Then loop\n                         Insert_After (Aspect,"}]}