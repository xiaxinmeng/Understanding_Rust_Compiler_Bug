{"sha": "cea914801febc623f9a6ed0e9559b6793464161c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VhOTE0ODAxZmViYzYyM2Y5YTZlZDBlOTU1OWI2NzkzNDY0MTYxYw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2005-03-03T00:27:03Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2005-03-03T00:27:03Z"}, "message": "jcf-io.c (caching_stat): Use __extension__ to avoid pedantic warning.\n\n\t* jcf-io.c (caching_stat): Use __extension__ to avoid pedantic\n\twarning.\n\t* Make-lang.in: Don't elide warnings in jcf-io.c.\n\nFrom-SVN: r95819", "tree": {"sha": "32eaf5a5a3af63ad36c4a96fead1ee4594b2c676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32eaf5a5a3af63ad36c4a96fead1ee4594b2c676"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cea914801febc623f9a6ed0e9559b6793464161c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea914801febc623f9a6ed0e9559b6793464161c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea914801febc623f9a6ed0e9559b6793464161c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea914801febc623f9a6ed0e9559b6793464161c/comments", "author": null, "committer": null, "parents": [{"sha": "79a8dc5b6ae436bffab080c09adf2c051b05ddc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79a8dc5b6ae436bffab080c09adf2c051b05ddc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79a8dc5b6ae436bffab080c09adf2c051b05ddc9"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "0fd4364f0b94000eb1a85b07fa274c64a9a463a3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea914801febc623f9a6ed0e9559b6793464161c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea914801febc623f9a6ed0e9559b6793464161c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=cea914801febc623f9a6ed0e9559b6793464161c", "patch": "@@ -1,3 +1,9 @@\n+2005-03-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* jcf-io.c (caching_stat): Use __extension__ to avoid pedantic\n+\twarning.\n+\t* Make-lang.in: Don't elide warnings in jcf-io.c.\n+\n 2005-03-01  Per Bothner  <per@bothner.com>\n \n \tPR java/8608"}, {"sha": "ccdc38e7a4f8ed1a89bb1d2107caf51085ac802c", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea914801febc623f9a6ed0e9559b6793464161c/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea914801febc623f9a6ed0e9559b6793464161c/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=cea914801febc623f9a6ed0e9559b6793464161c", "patch": "@@ -129,9 +129,6 @@ jvspec.o-warn = -Wno-error\n java/parse-scan.o-warn = -Wno-error\n java/parse.o-warn = -Wno-error\n \n-# Use of non-standardized scandir\n-java/jcf-io.o-warn = -Wno-error\n-\n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS)\n \trm -f $@\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o $@ \\"}, {"sha": "6588ef2444112ac9d0930702248e1565b7976b47", "filename": "gcc/java/jcf-io.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea914801febc623f9a6ed0e9559b6793464161c/gcc%2Fjava%2Fjcf-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea914801febc623f9a6ed0e9559b6793464161c/gcc%2Fjava%2Fjcf-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjcf-io.c?ref=cea914801febc623f9a6ed0e9559b6793464161c", "patch": "@@ -376,11 +376,11 @@ caching_stat (char *filename, struct stat *buf)\n \t particular, the type of the function pointer passed as the\n \t third argument sometimes takes a \"const struct dirent *\"\n \t parameter, and sometimes just a \"struct dirent *\".  We cast\n-\t to (void *) so that either way it is quietly accepted.\n-\t FIXME: scandir is not in POSIX.  */\n-      dent->num_files = scandir (filename, &dent->files, \n-\t\t\t\t (void *) java_or_class_file, \n-\t\t\t\t alphasort);\n+\t to (void *) and use __extension__ so that either way it is\n+\t quietly accepted.  FIXME: scandir is not in POSIX.  */\n+      dent->num_files = __extension__ scandir (filename, &dent->files, \n+\t\t\t\t\t       (void *) java_or_class_file, \n+\t\t\t\t\t       alphasort);\n       *slot = dent;\n     }\n   else"}]}