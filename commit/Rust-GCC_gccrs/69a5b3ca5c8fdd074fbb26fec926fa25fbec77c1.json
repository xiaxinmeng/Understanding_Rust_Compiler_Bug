{"sha": "69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1", "node_id": "C_kwDOANBUbNoAKDY5YTViM2NhNWM4ZmRkMDc0ZmJiMjZmZWM5MjZmYTI1ZmJlYzc3YzE", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-11-17T19:47:48Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-11-17T19:48:31Z"}, "message": "i386: Redefine indirect_thunks_used as HARD_REG_SET.\n\nChange indirect_thunks_used to HARD_REG_SET to avoid recalculations\nof correct register numbers and allow usage of SET/TEST_HARD_REG_BIT\naccessors.\n\n2021-11-17  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\t* config/i386/i386.c (indirect_thunks_used): Redefine as HARD_REG_SET.\n\t(ix86_code_end): Use TEST_HARD_REG_BIT on indirect_thunks_used.\n\t(ix86_output_indirect_branch_via_reg): Use SET_HARD_REG_BIT\n\ton indirect_thunks_used.\n\t(ix86_output_indirect_function_return): Ditto.", "tree": {"sha": "c679daca100fd26e8b3d95031f7c93c57579722e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c679daca100fd26e8b3d95031f7c93c57579722e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74509b963ef64101ce601a497913c13021994f51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74509b963ef64101ce601a497913c13021994f51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74509b963ef64101ce601a497913c13021994f51"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "c9129ae25e4f34986eefdf875e901450917a9530", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=69a5b3ca5c8fdd074fbb26fec926fa25fbec77c1", "patch": "@@ -5733,7 +5733,7 @@ static bool indirect_thunk_needed = false;\n \n /* Bit masks of integer registers, which contain branch target, used\n    by call thunk functions.  */\n-static int indirect_thunks_used;\n+static HARD_REG_SET indirect_thunks_used;\n \n /* True if return thunk function is needed.  */\n static bool indirect_return_needed = false;\n@@ -6030,8 +6030,7 @@ ix86_code_end (void)\n \n   for (regno = FIRST_REX_INT_REG; regno <= LAST_REX_INT_REG; regno++)\n     {\n-      unsigned int i = regno - FIRST_REX_INT_REG + LAST_INT_REG + 1;\n-      if ((indirect_thunks_used & (1 << i)))\n+      if (TEST_HARD_REG_BIT (indirect_thunks_used, regno))\n \toutput_indirect_thunk_function (indirect_thunk_prefix_none,\n \t\t\t\t\tregno, false);\n     }\n@@ -6041,7 +6040,7 @@ ix86_code_end (void)\n       char name[32];\n       tree decl;\n \n-      if ((indirect_thunks_used & (1 << regno)))\n+      if (TEST_HARD_REG_BIT (indirect_thunks_used, regno))\n \toutput_indirect_thunk_function (indirect_thunk_prefix_none,\n \t\t\t\t\tregno, false);\n \n@@ -16014,12 +16013,8 @@ ix86_output_indirect_branch_via_reg (rtx call_op, bool sibcall_p)\n       != indirect_branch_thunk_inline)\n     {\n       if (cfun->machine->indirect_branch_type == indirect_branch_thunk)\n-\t{\n-\t  int i = regno;\n-\t  if (i >= FIRST_REX_INT_REG)\n-\t    i -= (FIRST_REX_INT_REG - LAST_INT_REG - 1);\n-\t  indirect_thunks_used |= 1 << i;\n-\t}\n+\tSET_HARD_REG_BIT (indirect_thunks_used, regno);\n+\n       indirect_thunk_name (thunk_name_buf, regno, need_prefix, false);\n       thunk_name = thunk_name_buf;\n     }\n@@ -16307,7 +16302,7 @@ ix86_output_indirect_function_return (rtx ret_op)\n \t  if (need_thunk)\n \t    {\n \t      indirect_return_via_cx = true;\n-\t      indirect_thunks_used |= 1 << CX_REG;\n+\t      SET_HARD_REG_BIT (indirect_thunks_used, CX_REG);\n \t    }\n \t  fprintf (asm_out_file, \"\\tjmp\\t\");\n \t  assemble_name (asm_out_file, thunk_name);"}]}