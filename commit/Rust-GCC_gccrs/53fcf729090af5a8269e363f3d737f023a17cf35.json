{"sha": "53fcf729090af5a8269e363f3d737f023a17cf35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNmY2Y3MjkwOTBhZjVhODI2OWUzNjNmM2Q3MzdmMDIzYTE3Y2YzNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-02-13T13:04:56Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-02-13T13:04:56Z"}, "message": "Fix -fdec simplification (PR fortran/88649).\n\n2019-02-13  Martin Liska  <mliska@suse.cz>\n\n\tPR fortran/88649\n\t* resolve.c (resolve_operator): Initialize 't' right\n\tafter function entry.  Skip switch (e->value.op.op)\n\tfor -fdec operands that become function calls.\n\nFrom-SVN: r268842", "tree": {"sha": "8b91d10643513fdf41960b57408dabc6d0451862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b91d10643513fdf41960b57408dabc6d0451862"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53fcf729090af5a8269e363f3d737f023a17cf35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53fcf729090af5a8269e363f3d737f023a17cf35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53fcf729090af5a8269e363f3d737f023a17cf35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53fcf729090af5a8269e363f3d737f023a17cf35/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "548538ce07ce78151dbaf2efdf48bb514794b915", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548538ce07ce78151dbaf2efdf48bb514794b915", "html_url": "https://github.com/Rust-GCC/gccrs/commit/548538ce07ce78151dbaf2efdf48bb514794b915"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "c573f77410ce50b32f4759f51b2b33d1a8bde075", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53fcf729090af5a8269e363f3d737f023a17cf35/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53fcf729090af5a8269e363f3d737f023a17cf35/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=53fcf729090af5a8269e363f3d737f023a17cf35", "patch": "@@ -1,3 +1,10 @@\n+2019-02-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR fortran/88649\n+\t* resolve.c (resolve_operator): Initialize 't' right\n+\tafter function entry.  Skip switch (e->value.op.op)\n+\tfor -fdec operands that become function calls.\n+\n 2019-02-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/71723"}, {"sha": "e215fef2be5a5f9dd256468a37267355466f5081", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53fcf729090af5a8269e363f3d737f023a17cf35/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53fcf729090af5a8269e363f3d737f023a17cf35/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=53fcf729090af5a8269e363f3d737f023a17cf35", "patch": "@@ -3880,7 +3880,7 @@ resolve_operator (gfc_expr *e)\n   gfc_expr *op1, *op2;\n   char msg[200];\n   bool dual_locus_error;\n-  bool t;\n+  bool t = true;\n \n   /* Resolve all subnodes-- give them types.  */\n \n@@ -4002,7 +4002,7 @@ resolve_operator (gfc_expr *e)\n \t  if (op2->ts.type != e->ts.type || op2->ts.kind != e->ts.kind)\n \t    gfc_convert_type (op2, &e->ts, 1);\n \t  e = logical_to_bitwise (e);\n-\t  break;\n+\t  goto simplify_op;\n \t}\n \n       sprintf (msg, _(\"Operands of logical operator %%<%s%%> at %%L are %s/%s\"),\n@@ -4018,7 +4018,7 @@ resolve_operator (gfc_expr *e)\n \t  e->ts.type = BT_INTEGER;\n \t  e->ts.kind = op1->ts.kind;\n \t  e = logical_to_bitwise (e);\n-\t  break;\n+\t  goto simplify_op;\n \t}\n \n       if (op1->ts.type == BT_LOGICAL)\n@@ -4143,8 +4143,6 @@ resolve_operator (gfc_expr *e)\n \n   /* Deal with arrayness of an operand through an operator.  */\n \n-  t = true;\n-\n   switch (e->value.op.op)\n     {\n     case INTRINSIC_PLUS:\n@@ -4234,6 +4232,8 @@ resolve_operator (gfc_expr *e)\n       break;\n     }\n \n+simplify_op:\n+\n   /* Attempt to simplify the expression.  */\n   if (t)\n     {"}]}