{"sha": "4c98bdadcb67e12c63882587d96ab6335711f009", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM5OGJkYWRjYjY3ZTEyYzYzODgyNTg3ZDk2YWI2MzM1NzExZjAwOQ==", "commit": {"author": {"name": "Sunil K Pandey", "email": "sunil.k.pandey@intel.com", "date": "2019-07-11T19:09:37Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2019-07-11T19:09:37Z"}, "message": "i386: Add AVX512 unaligned intrinsics\n\n__m512i _mm512_loadu_epi64( void * sa);\nvoid _mm512_storeu_epi64(void * d, __m512i a);\n__m512i _mm512_loadu_epi32( void * sa);\nvoid _mm512_storeu_epi32(void * d, __m512i a);\nvoid _mm256_storeu_epi64(void * d, __m256i a);\nvoid _mm_storeu_epi64(void * d, __m128i a);\nvoid _mm256_storeu_epi32(void * d, __m256i a);\nvoid _mm_storeu_epi32(void * d, __m128i a);\n\nTested on x86-64.\n\n2019-07-11  Sunil K Pandey  <sunil.k.pandey@intel.com>\n\ngcc/\n\n\tPR target/90980\n\t* config/i386/avx512fintrin.h (_mm512_loadu_epi64): New.\n\t(_mm512_storeu_epi64): Likewise.\n\t(_mm512_loadu_epi32): Likewise.\n\t(_mm512_storeu_epi32): Likewise.\n\t* config/i386/avx512vlintrin.h (_mm256_storeu_epi64): New.\n\t(_mm_storeu_epi64): Likewise.\n\t(_mm256_storeu_epi32): Likewise.\n\t(_mm_storeu_epi32): Likewise.\n\ngcc/testsuite/\n\n\tPR target/90980\n\t* gcc.target/i386/pr90980-1.c: New test.\n\t* gcc.target/i386/pr90980-2.c: Likewise.\n\t* gcc.target/i386/pr90980-3.c: Likewise.\n\nFrom-SVN: r273416", "tree": {"sha": "9402d47d87aa700ffe7730a1652c608b58896f21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9402d47d87aa700ffe7730a1652c608b58896f21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c98bdadcb67e12c63882587d96ab6335711f009", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c98bdadcb67e12c63882587d96ab6335711f009", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c98bdadcb67e12c63882587d96ab6335711f009", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c98bdadcb67e12c63882587d96ab6335711f009/comments", "author": {"login": "skpgkp1", "id": 33876910, "node_id": "MDQ6VXNlcjMzODc2OTEw", "avatar_url": "https://avatars.githubusercontent.com/u/33876910?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skpgkp1", "html_url": "https://github.com/skpgkp1", "followers_url": "https://api.github.com/users/skpgkp1/followers", "following_url": "https://api.github.com/users/skpgkp1/following{/other_user}", "gists_url": "https://api.github.com/users/skpgkp1/gists{/gist_id}", "starred_url": "https://api.github.com/users/skpgkp1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skpgkp1/subscriptions", "organizations_url": "https://api.github.com/users/skpgkp1/orgs", "repos_url": "https://api.github.com/users/skpgkp1/repos", "events_url": "https://api.github.com/users/skpgkp1/events{/privacy}", "received_events_url": "https://api.github.com/users/skpgkp1/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "998175f6465a95fe812c0bc793600115393bb315", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998175f6465a95fe812c0bc793600115393bb315", "html_url": "https://github.com/Rust-GCC/gccrs/commit/998175f6465a95fe812c0bc793600115393bb315"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "235cc53cb37baa15cb9deb779ea5ef7d12071565", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c98bdadcb67e12c63882587d96ab6335711f009", "patch": "@@ -1,3 +1,15 @@\n+2019-07-11  Sunil K Pandey  <sunil.k.pandey@intel.com>\n+\n+\tPR target/90980\n+\t* config/i386/avx512fintrin.h (_mm512_loadu_epi64): New.\n+\t(_mm512_storeu_epi64): Likewise.\n+\t(_mm512_loadu_epi32): Likewise.\n+\t(_mm512_storeu_epi32): Likewise.\n+\t* config/i386/avx512vlintrin.h (_mm256_storeu_epi64): New.\n+\t(_mm_storeu_epi64): Likewise.\n+\t(_mm256_storeu_epi32): Likewise.\n+\t(_mm_storeu_epi32): Likewise.\n+\n 2019-07-11  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000-logue.c: Add Modula-2 to comment."}, {"sha": "454fd3d247d88d918b71495e258cef312b5092c8", "filename": "gcc/config/i386/avx512fintrin.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Fconfig%2Fi386%2Favx512fintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512fintrin.h?ref=4c98bdadcb67e12c63882587d96ab6335711f009", "patch": "@@ -6350,6 +6350,13 @@ _mm_mask_store_sd (double *__P, __mmask8 __U, __m128d __A)\n   __builtin_ia32_storesd_mask (__P, (__v2df) __A, (__mmask8) __U);\n }\n \n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_loadu_epi64 (void const *__P)\n+{\n+  return *(__m512i_u *) __P;\n+}\n+\n extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_mask_loadu_epi64 (__m512i __W, __mmask8 __U, void const *__P)\n@@ -6369,6 +6376,13 @@ _mm512_maskz_loadu_epi64 (__mmask8 __U, void const *__P)\n \t\t\t\t\t\t     (__mmask8) __U);\n }\n \n+extern __inline void\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_storeu_epi64 (void *__P, __m512i __A)\n+{\n+  *(__m512i_u *) __P = (__m512i_u) __A;\n+}\n+\n extern __inline void\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_mask_storeu_epi64 (void *__P, __mmask8 __U, __m512i __A)\n@@ -6384,6 +6398,13 @@ _mm512_loadu_si512 (void const *__P)\n   return *(__m512i_u *)__P;\n }\n \n+extern __inline __m512i\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_loadu_epi32 (void const *__P)\n+{\n+  return *(__m512i_u *) __P;\n+}\n+\n extern __inline __m512i\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_mask_loadu_epi32 (__m512i __W, __mmask16 __U, void const *__P)\n@@ -6410,6 +6431,13 @@ _mm512_storeu_si512 (void *__P, __m512i __A)\n   *(__m512i_u *)__P = __A;\n }\n \n+extern __inline void\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm512_storeu_epi32 (void *__P, __m512i __A)\n+{\n+  *(__m512i_u *) __P = (__m512i_u) __A;\n+}\n+\n extern __inline void\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm512_mask_storeu_epi32 (void *__P, __mmask16 __U, __m512i __A)"}, {"sha": "bd8746ddc94854559c969d2ab5a4361db686609f", "filename": "gcc/config/i386/avx512vlintrin.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512vlintrin.h?ref=4c98bdadcb67e12c63882587d96ab6335711f009", "patch": "@@ -755,6 +755,13 @@ _mm_maskz_loadu_epi64 (__mmask8 __U, void const *__P)\n \t\t\t\t\t\t     (__mmask8) __U);\n }\n \n+extern __inline void\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm256_storeu_epi64 (void *__P, __m256i __A)\n+{\n+  *(__m256i_u *) __P = (__m256i_u) __A;\n+}\n+\n extern __inline void\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm256_mask_storeu_epi64 (void *__P, __mmask8 __U, __m256i __A)\n@@ -764,6 +771,13 @@ _mm256_mask_storeu_epi64 (void *__P, __mmask8 __U, __m256i __A)\n \t\t\t\t     (__mmask8) __U);\n }\n \n+extern __inline void\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_storeu_epi64 (void *__P, __m128i __A)\n+{\n+  *(__m128i_u *) __P = (__m128i_u) __A;\n+}\n+\n extern __inline void\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_mask_storeu_epi64 (void *__P, __mmask8 __U, __m128i __A)\n@@ -811,6 +825,13 @@ _mm_maskz_loadu_epi32 (__mmask8 __U, void const *__P)\n \t\t\t\t\t\t     (__mmask8) __U);\n }\n \n+extern __inline void\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm256_storeu_epi32 (void *__P, __m256i __A)\n+{\n+  *(__m256i_u *) __P = (__m256i_u) __A;\n+}\n+\n extern __inline void\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm256_mask_storeu_epi32 (void *__P, __mmask8 __U, __m256i __A)\n@@ -820,6 +841,13 @@ _mm256_mask_storeu_epi32 (void *__P, __mmask8 __U, __m256i __A)\n \t\t\t\t     (__mmask8) __U);\n }\n \n+extern __inline void\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_storeu_epi32 (void *__P, __m128i __A)\n+{\n+  *(__m128i_u *) __P = (__m128i_u) __A;\n+}\n+\n extern __inline void\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_mask_storeu_epi32 (void *__P, __mmask8 __U, __m128i __A)"}, {"sha": "cfc96b03dc751815269f3fe3aa9d7be5e59bfbc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c98bdadcb67e12c63882587d96ab6335711f009", "patch": "@@ -1,3 +1,10 @@\n+2019-07-11  Sunil K Pandey  <sunil.k.pandey@intel.com>\n+\n+\tPR target/90980\n+\t* gcc.target/i386/pr90980-1.c: New test.\n+\t* gcc.target/i386/pr90980-2.c: Likewise.\n+\t* gcc.target/i386/pr90980-3.c: Likewise.\n+\n 2019-07-11  Yannick Moy  <moy@adacore.com>\n \n \t* gnat.dg/loop_entry1.adb: New testcase."}, {"sha": "72a30dc8da2485076f77c2c6979639e6fa7eaa57", "filename": "gcc/testsuite/gcc.target/i386/pr90980-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-1.c?ref=4c98bdadcb67e12c63882587d96ab6335711f009", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=skylake-avx512 -O2\" } */\n+/* { dg-final { scan-assembler-times \"(?:vmovups|vmovdqu)\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*\\\\)(?:\\n|\\[ \\\\t\\]+#)\" 2 } } */\n+\n+#include <immintrin.h>\n+\n+int *a;\n+long long *b;\n+volatile __m128i xx;\n+volatile __m128i xx1;\n+\n+void extern\n+avx512vl_test (void)\n+{\n+  _mm_storeu_epi32 (a, xx);\n+  _mm_storeu_epi64 (b, xx1);\n+}"}, {"sha": "b1980e651408bd0e8eb1654082e5e0c7ce331287", "filename": "gcc/testsuite/gcc.target/i386/pr90980-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-2.c?ref=4c98bdadcb67e12c63882587d96ab6335711f009", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=skylake-avx512 -O2\" } */\n+/* { dg-final { scan-assembler-times \"vmovdqu\\[0-9\\]*\\[ \\\\t\\]+\\[^\\{\\n\\]*%ymm\\[0-9\\]+\\[^\\n\\]*\\\\)(?:\\n|\\[ \\\\t\\]+#)\" 2 } } */\n+\n+#include <immintrin.h>\n+\n+int *a;\n+long long *b;\n+volatile __m256i yy;\n+volatile __m256i yy1;\n+\n+void extern\n+avx512vl_test (void)\n+{\n+  _mm256_storeu_epi32 (a, yy);\n+  _mm256_storeu_epi64 (b, yy1);\n+}"}, {"sha": "d839ee011aaa636d6585171fd5ce23285ba8f6a6", "filename": "gcc/testsuite/gcc.target/i386/pr90980-3.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c98bdadcb67e12c63882587d96ab6335711f009/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90980-3.c?ref=4c98bdadcb67e12c63882587d96ab6335711f009", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=skylake-avx512 -O2\" } */\n+/* { dg-final { scan-assembler-times \"vmovdqu64\\[ \\\\t\\]+\\[^\\{\\n\\]*\\\\)\\[^\\n\\]*%zmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu64\\[ \\\\t\\]+\\[^\\{\\n\\]*%zmm\\[0-9\\]+\\[^\\n\\]*\\\\)(?:\\n|\\[ \\\\t\\]+#)\" 2 } } */\n+\n+#include <immintrin.h>\n+\n+int *a;\n+long long *b;\n+volatile __m512i zz;\n+volatile __m512i zz1;\n+\n+void extern\n+avx512f_test (void)\n+{\n+  zz = _mm512_loadu_epi32 (a);\n+  _mm512_storeu_epi32 (a, zz);\n+  zz1 = _mm512_loadu_epi64 (b);\n+  _mm512_storeu_epi64 (b, zz1);\n+}"}]}