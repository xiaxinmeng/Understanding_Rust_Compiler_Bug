{"sha": "e2eee239811d4335f28ccdf7c2d9c490fcf6612d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJlZWUyMzk4MTFkNDMzNWYyOGNjZGY3YzJkOWM0OTBmY2Y2NjEyZA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-08-28T16:24:38Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-08-28T16:24:38Z"}, "message": "PR driver/80545 - option -Wstringop-overflow not recognized by Fortran\n\ngcc/ChangeLog:\n\n\tPR driver/80545\n\t* opts-common.c (option_enabled): Correct checking for language\n\toptions.\n\nFrom-SVN: r274996", "tree": {"sha": "e5e1bb9719c5f4735ac8513a0fefdffc0b7b5eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5e1bb9719c5f4735ac8513a0fefdffc0b7b5eb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2eee239811d4335f28ccdf7c2d9c490fcf6612d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2eee239811d4335f28ccdf7c2d9c490fcf6612d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2eee239811d4335f28ccdf7c2d9c490fcf6612d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2eee239811d4335f28ccdf7c2d9c490fcf6612d/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc4aa158c9490e76573bee3eec90f893b7d0b1ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc4aa158c9490e76573bee3eec90f893b7d0b1ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc4aa158c9490e76573bee3eec90f893b7d0b1ae"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "6fa40905144ff8c97c18313407fd2848a7af2d20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2eee239811d4335f28ccdf7c2d9c490fcf6612d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2eee239811d4335f28ccdf7c2d9c490fcf6612d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2eee239811d4335f28ccdf7c2d9c490fcf6612d", "patch": "@@ -1,3 +1,9 @@\n+2019-08-28  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR driver/80545\n+\t* opts-common.c (option_enabled): Correct checking for language\n+\toptions.\n+\n 2019-08-28  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386-features.c"}, {"sha": "200951b5010d281847d29c04c4ccfb0045b2bdf3", "filename": "gcc/opts-common.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2eee239811d4335f28ccdf7c2d9c490fcf6612d/gcc%2Fopts-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2eee239811d4335f28ccdf7c2d9c490fcf6612d/gcc%2Fopts-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts-common.c?ref=e2eee239811d4335f28ccdf7c2d9c490fcf6612d", "patch": "@@ -1532,7 +1532,9 @@ option_enabled (int opt_idx, unsigned lang_mask, void *opts)\n \n   /* A language-specific option can only be considered enabled when it's\n      valid for the current language.  */\n-  if (option->flags & CL_LANG_ALL && !(option->flags | lang_mask))\n+  if (!(option->flags & CL_COMMON)\n+      && (option->flags & CL_LANG_ALL)\n+      && !(option->flags & lang_mask))\n     return 0;\n \n   struct gcc_options *optsg = (struct gcc_options *) opts;"}]}