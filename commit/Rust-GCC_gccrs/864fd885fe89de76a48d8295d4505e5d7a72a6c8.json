{"sha": "864fd885fe89de76a48d8295d4505e5d7a72a6c8", "node_id": "C_kwDOANBUbNoAKDg2NGZkODg1ZmU4OWRlNzZhNDhkODI5NWQ0NTA1ZTVkN2E3MmE2Yzg", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2021-10-28T21:36:37Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2021-11-05T16:34:22Z"}, "message": "Turn 'rust_error_at' plus always-failing 'rust_assert' into 'rust_internal_error_at'\n\nThese three were added in commit cbfc0ee239fafc0dadaae314138410f9119c65fa\n\"This allows for query based compilation\", part of\n<https://github.com/Rust-GCC/gccrs/pull/640> \"Optional Trait items constants\".\n\nGiven:\n\n    if ([...]\n        && [X])\n      {\n        rust_error_at ([...]);\n        rust_assert (![X]);\n      }\n\n..., this means that the 'rust_assert' always fires, so this is a condition\nthat is not meant to happen (also, there are no test cases triggering this),\nso use 'rust_internal_error_at' instead.", "tree": {"sha": "b1f80026b840eed94e655a724c4fe8fbacfa570f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1f80026b840eed94e655a724c4fe8fbacfa570f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/864fd885fe89de76a48d8295d4505e5d7a72a6c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864fd885fe89de76a48d8295d4505e5d7a72a6c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/864fd885fe89de76a48d8295d4505e5d7a72a6c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/864fd885fe89de76a48d8295d4505e5d7a72a6c8/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "228240f32114fbbc17b73b1e91f245177c5aacc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/228240f32114fbbc17b73b1e91f245177c5aacc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/228240f32114fbbc17b73b1e91f245177c5aacc7"}], "stats": {"total": 27, "additions": 9, "deletions": 18}, "files": [{"sha": "05c791061e50ea3177cdb7cc0b8b6c4266769cb8", "filename": "gcc/rust/backend/rust-compile-implitem.h", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/864fd885fe89de76a48d8295d4505e5d7a72a6c8/gcc%2Frust%2Fbackend%2Frust-compile-implitem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/864fd885fe89de76a48d8295d4505e5d7a72a6c8/gcc%2Frust%2Fbackend%2Frust-compile-implitem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-implitem.h?ref=864fd885fe89de76a48d8295d4505e5d7a72a6c8", "patch": "@@ -46,12 +46,9 @@ class CompileInherentImplItem : public HIRCompileBase\n \n     if (is_query_mode\n \t&& ctx->get_backend ()->is_error_expression (compiler.reference))\n-      {\n-\trust_error_at (ref_locus, \"failed to compile impl item: %s\",\n-\t\t       item->as_string ().c_str ());\n-\trust_assert (\n-\t  !ctx->get_backend ()->is_error_expression (compiler.reference));\n-      }\n+      rust_internal_error_at (ref_locus, \"failed to compile impl item: %s\",\n+\t\t\t      item->as_string ().c_str ());\n+\n     return compiler.reference;\n   }\n \n@@ -341,12 +338,9 @@ class CompileTraitItem : public HIRCompileBase\n \n     if (is_query_mode\n \t&& ctx->get_backend ()->is_error_expression (compiler.reference))\n-      {\n-\trust_error_at (ref_locus, \"failed to compile trait item: %s\",\n-\t\t       item->as_string ().c_str ());\n-\trust_assert (\n-\t  !ctx->get_backend ()->is_error_expression (compiler.reference));\n-      }\n+      rust_internal_error_at (ref_locus, \"failed to compile trait item: %s\",\n+\t\t\t      item->as_string ().c_str ());\n+\n     return compiler.reference;\n   }\n "}, {"sha": "6691c2abb9be55472eaf92163c869962232dc85b", "filename": "gcc/rust/backend/rust-compile-item.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/864fd885fe89de76a48d8295d4505e5d7a72a6c8/gcc%2Frust%2Fbackend%2Frust-compile-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/864fd885fe89de76a48d8295d4505e5d7a72a6c8/gcc%2Frust%2Fbackend%2Frust-compile-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-item.h?ref=864fd885fe89de76a48d8295d4505e5d7a72a6c8", "patch": "@@ -48,12 +48,9 @@ class CompileItem : public HIRCompileBase\n \n     if (is_query_mode\n \t&& ctx->get_backend ()->is_error_expression (compiler.reference))\n-      {\n-\trust_error_at (ref_locus, \"failed to compile item: %s\",\n-\t\t       item->as_string ().c_str ());\n-\trust_assert (\n-\t  !ctx->get_backend ()->is_error_expression (compiler.reference));\n-      }\n+      rust_internal_error_at (ref_locus, \"failed to compile item: %s\",\n+\t\t\t      item->as_string ().c_str ());\n+\n     return compiler.reference;\n   }\n "}]}