{"sha": "acd693d10c5d694eb221071d0b171edbada6202a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWNkNjkzZDEwYzVkNjk0ZWIyMjEwNzFkMGIxNzFlZGJhZGE2MjAyYQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-02-08T21:39:33Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-02-08T21:39:33Z"}, "message": "output.h (current_function_has_computed_jump): Rename from current_function_addresses_labels.\n\n        * output.h (current_function_has_computed_jump): Rename from\n        current_function_addresses_labels.\n        * function.h (struct function): Likewise for addresses_labels member.\n        * rtl.h (FUNCTION_FLAGS_HAS_COMPUTED_JUMP): Likewise.\n        * function.c (current_function_has_computed_jump): Likewise.\n        Update all references.\n        * integrate.c (function_cannot_inline_p):\n        Test current_function_has_computed_jump instead of addresses_labels.\n        (initialize_for_inline): Likewise save.\n        (output_inline_function): Likewise restore.\n        * expr.c (expand_expr): Don't reference addresses_labels variables.\n        * stmt.c (expand_computed_goto): Set has_computed_jump.\n\nFrom-SVN: r25100", "tree": {"sha": "7741976eef8dfd7090489ac85cbac76e34a04fc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7741976eef8dfd7090489ac85cbac76e34a04fc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/acd693d10c5d694eb221071d0b171edbada6202a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd693d10c5d694eb221071d0b171edbada6202a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/acd693d10c5d694eb221071d0b171edbada6202a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/acd693d10c5d694eb221071d0b171edbada6202a/comments", "author": null, "committer": null, "parents": [{"sha": "6ffc8580a7098be91a58d8aeca413fc7e2d61def", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ffc8580a7098be91a58d8aeca413fc7e2d61def", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ffc8580a7098be91a58d8aeca413fc7e2d61def"}], "stats": {"total": 61, "additions": 35, "deletions": 26}, "files": [{"sha": "6a6e1ab14f09293ed5f7f162b1922a726ba16026", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=acd693d10c5d694eb221071d0b171edbada6202a", "patch": "@@ -1,3 +1,19 @@\n+Mon Feb  8 21:36:44 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* output.h (current_function_has_computed_jump): Rename from\n+\tcurrent_function_addresses_labels.\n+\t* function.h (struct function): Likewise for addresses_labels member.\n+\t* rtl.h (FUNCTION_FLAGS_HAS_COMPUTED_JUMP): Likewise.\n+\t* function.c (current_function_has_computed_jump): Likewise.\n+\tUpdate all references.\n+\t* integrate.c (function_cannot_inline_p):\n+\tTest current_function_has_computed_jump instead of addresses_labels.\n+\t(initialize_for_inline): Likewise save.\n+\t(output_inline_function): Likewise restore.\n+\n+\t* expr.c (expand_expr): Don't reference addresses_labels variables.\n+\t* stmt.c (expand_computed_goto): Set has_computed_jump.\n+\n 1999-02-08  Michael Meissner  <meissner@cygnus.com>\n \n \tThis is being installed only to get it into the repository to help"}, {"sha": "5eca5f5e8782e5ea24de9786ec379d384da1da0b", "filename": "gcc/expr.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=acd693d10c5d694eb221071d0b171edbada6202a", "patch": "@@ -5603,12 +5603,10 @@ expand_expr (exp, target, tmode, modifier)\n \t    p->forced_labels = gen_rtx_EXPR_LIST (VOIDmode,\n \t\t\t\t\t\t  label_rtx (exp),\n \t\t\t\t\t\t  p->forced_labels);\n-\t    p->addresses_labels = 1;\n \t    pop_obstacks ();\n \t  }\n \telse\n \t  {\n-\t    current_function_addresses_labels = 1;\n \t    if (modifier == EXPAND_INITIALIZER)\n \t      forced_labels = gen_rtx_EXPR_LIST (VOIDmode,\n \t\t\t\t\t\t label_rtx (exp),"}, {"sha": "c9ec569c57063c47a1b277017d6fe0a042bdafb2", "filename": "gcc/function.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=acd693d10c5d694eb221071d0b171edbada6202a", "patch": "@@ -148,10 +148,9 @@ int current_function_contains_functions;\n \n int current_function_sp_is_unchanging;\n \n-/* Nonzero if the function being compiled has the address of its\n-   labels taken. */\n+/* Nonzero if the function being compiled issues a computed jump.  */\n \n-int current_function_addresses_labels;\n+int current_function_has_computed_jump;\n \n /* Nonzero if the current function is a thunk (a lightweight function that\n    just adjusts one of its arguments and forwards to another function), so\n@@ -525,7 +524,7 @@ push_function_context_to (context)\n   p->has_nonlocal_label = current_function_has_nonlocal_label;\n   p->has_nonlocal_goto = current_function_has_nonlocal_goto;\n   p->contains_functions = current_function_contains_functions;\n-  p->addresses_labels = current_function_addresses_labels;\n+  p->has_computed_jump = current_function_has_computed_jump;\n   p->is_thunk = current_function_is_thunk;\n   p->args_size = current_function_args_size;\n   p->pretend_args_size = current_function_pretend_args_size;\n@@ -598,7 +597,7 @@ pop_function_context_from (context)\n   current_function_contains_functions\n     = p->contains_functions || p->inline_obstacks\n       || context == current_function_decl;\n-  current_function_addresses_labels = p->addresses_labels;\n+  current_function_has_computed_jump = p->has_computed_jump;\n   current_function_name = p->name;\n   current_function_decl = p->decl;\n   current_function_pops_args = p->pops_args;\n@@ -5582,7 +5581,7 @@ init_function_start (subr, filename, line)\n   current_function_has_nonlocal_goto = 0;\n   current_function_contains_functions = 0;\n   current_function_sp_is_unchanging = 0;\n-  current_function_addresses_labels = 0;\n+  current_function_has_computed_jump = 0;\n   current_function_is_thunk = 0;\n \n   current_function_returns_pcc_struct = 0;"}, {"sha": "2a3e8238226493ef4e6dd33260b2dcf5445a7ca9", "filename": "gcc/function.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=acd693d10c5d694eb221071d0b171edbada6202a", "patch": "@@ -80,7 +80,7 @@ struct function\n   int has_nonlocal_label;\n   int has_nonlocal_goto;\n   int contains_functions;\n-  int addresses_labels;\n+  int has_computed_jump;\n   int is_thunk;\n   rtx nonlocal_goto_handler_slots;\n   rtx nonlocal_goto_stack_level;"}, {"sha": "e9c356174edb1b3672398237721548810ea5abd3", "filename": "gcc/integrate.c", "status": "modified", "additions": 8, "deletions": 13, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=acd693d10c5d694eb221071d0b171edbada6202a", "patch": "@@ -182,16 +182,11 @@ function_cannot_inline_p (fndecl)\n \treturn N_(\"function too large to be inline\");\n     }\n \n-  /* We cannot inline this function it has the addresses of its labels\n-     taken.  This can mean that a label in this function was used as an\n-     initializer either statically or dynamically or stored outside the\n-     function.  Because labels can not be duplicated, all labels in the\n-     function will be renamed when it is inlined.  However, there is no way\n-     to find and fix all variables initialized with addresses of labels in this\n-     function, hence inlining is impossible.  */\n-\n-  if (current_function_addresses_labels)\n-    return N_(\"function with label addresses taken cannot inline\");\n+  /* We will not inline a function which uses computed goto.  The addresses of\n+     its local labels, which may be tucked into global storage, are of course\n+     not constant across instantiations, which causes unexpected behaviour.  */\n+  if (current_function_has_computed_jump)\n+    return N_(\"function with computed jump cannot inline\");\n \n   /* We cannot inline a nested function that jumps to a nonlocal label.  */\n   if (current_function_has_nonlocal_goto)\n@@ -303,7 +298,7 @@ initialize_for_inline (fndecl, min_labelno, max_labelno, max_reg, copy)\n        + current_function_uses_const_pool * FUNCTION_FLAGS_USES_CONST_POOL\n        + (current_function_uses_pic_offset_table\n \t  * FUNCTION_FLAGS_USES_PIC_OFFSET_TABLE)\n-       + current_function_addresses_labels * FUNCTION_FLAGS_ADDRESSES_LABELS);\n+       + current_function_has_computed_jump * FUNCTION_FLAGS_HAS_COMPUTED_JUMP);\n \n   /* Clear out PARMDECL_MAP.  It was allocated in the caller's frame.  */\n   bzero ((char *) parmdecl_map, max_parm_reg * sizeof (tree));\n@@ -3388,8 +3383,8 @@ output_inline_function (fndecl)\n   stack_slot_list = STACK_SLOT_LIST (head);\n   forced_labels = FORCED_LABELS (head);\n \n-  if (FUNCTION_FLAGS (head) & FUNCTION_FLAGS_ADDRESSES_LABELS)\n-    current_function_addresses_labels = 1;\n+  if (FUNCTION_FLAGS (head) & FUNCTION_FLAGS_HAS_COMPUTED_JUMP)\n+    current_function_has_computed_jump = 1;\n \n   if (FUNCTION_FLAGS (head) & FUNCTION_FLAGS_CALLS_ALLOCA)\n     current_function_calls_alloca = 1;"}, {"sha": "3a34371d0e8766e2818772747c40e688d337d421", "filename": "gcc/output.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=acd693d10c5d694eb221071d0b171edbada6202a", "patch": "@@ -389,10 +389,9 @@ extern int current_function_contains_functions;\n \n extern int current_function_sp_is_unchanging;\n \n-/* Nonzero if the function being compiled has the address of its\n-   labels taken. */\n+/* Nonzero if the function being compiled issues a computed jump.  */\n \n-extern int current_function_addresses_labels;\n+extern int current_function_has_computed_jump;\n \n /* Nonzero if the current function returns a pointer type */\n "}, {"sha": "f036a6fe9178f99c196be8edaf7c9ce8eeb72a8f", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=acd693d10c5d694eb221071d0b171edbada6202a", "patch": "@@ -715,7 +715,7 @@ extern char *note_insn_name[];\n #define FUNCTION_FLAGS_USES_CONST_POOL 0200\n #define FUNCTION_FLAGS_CALLS_LONGJMP 0400\n #define FUNCTION_FLAGS_USES_PIC_OFFSET_TABLE 01000\n-#define FUNCTION_FLAGS_ADDRESSES_LABELS 02000\n+#define FUNCTION_FLAGS_HAS_COMPUTED_JUMP 02000\n \n /* Define a macro to look for REG_INC notes,\n    but save time on machines where they never exist.  */"}, {"sha": "62f880dd4d24456aee7fa364edbf5d2ff12ed6f2", "filename": "gcc/stmt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/acd693d10c5d694eb221071d0b171edbada6202a/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=acd693d10c5d694eb221071d0b171edbada6202a", "patch": "@@ -593,6 +593,8 @@ expand_computed_goto (exp)\n \n   do_pending_stack_adjust ();\n   emit_indirect_jump (x);\n+\n+  current_function_has_computed_jump = 1;\n }\n \f\n /* Handle goto statements and the labels that they can go to.  */"}]}