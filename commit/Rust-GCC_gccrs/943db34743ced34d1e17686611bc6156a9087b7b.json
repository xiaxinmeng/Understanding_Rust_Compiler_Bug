{"sha": "943db34743ced34d1e17686611bc6156a9087b7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQzZGIzNDc0M2NlZDM0ZDFlMTc2ODY2MTFiYzYxNTZhOTA4N2I3Yg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-10-21T16:29:58Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-10-21T16:29:58Z"}, "message": "re PR objc/17923 (const-str-[34].m fails on the mainline (next runtime))\n\n2004-10-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR objc/17923\n        * tree.c (staticp): A CONST_DECL has static storage if either\n        TREE_STATIC or DECL_EXTERNAL is set.\n        * c-decl.c (pushdecl_top_level): Accept CONST_DECLs which can\n        have null names.\n\n2004-10-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR objc/17923\n        * objc-act.c (objc_build_string_object): Create a CONST_DECL\n        for the NeXT runtime case.\n\n2004-10-21  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR objc/17923\n        * objc.dg/const-str-7.m: New test.\n\nFrom-SVN: r89384", "tree": {"sha": "9a1e960bf3fcbb05dde5a7d547ebaebe89e75e97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a1e960bf3fcbb05dde5a7d547ebaebe89e75e97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/943db34743ced34d1e17686611bc6156a9087b7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943db34743ced34d1e17686611bc6156a9087b7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/943db34743ced34d1e17686611bc6156a9087b7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/943db34743ced34d1e17686611bc6156a9087b7b/comments", "author": null, "committer": null, "parents": [{"sha": "5bee567d896ebb2d4ed1e636855b7e2f71832d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bee567d896ebb2d4ed1e636855b7e2f71832d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bee567d896ebb2d4ed1e636855b7e2f71832d54"}], "stats": {"total": 87, "additions": 80, "deletions": 7}, "files": [{"sha": "ba84e868f7d554c0c1c79045e35cead32831b94c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=943db34743ced34d1e17686611bc6156a9087b7b", "patch": "@@ -1,3 +1,11 @@\n+2004-10-21  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR objc/17923\n+\t* tree.c (staticp): A CONST_DECL has static storage if either\n+\tTREE_STATIC or DECL_EXTERNAL is set.\n+\t* c-decl.c (pushdecl_top_level): Accept CONST_DECLs which can\n+\thave null names.\n+\n 2004-10-21  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* expr.c (store_expr): Remove dont_store_target."}, {"sha": "a2443ec6c19e8419fc9bb0e2eb0000b05b2581f3", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=943db34743ced34d1e17686611bc6156a9087b7b", "patch": "@@ -2128,12 +2128,11 @@ pushdecl_top_level (tree x)\n {\n   tree name;\n   bool nested = false;\n-\n-  gcc_assert (TREE_CODE (x) == VAR_DECL);\n+  gcc_assert (TREE_CODE (x) == VAR_DECL || TREE_CODE (x) == CONST_DECL);\n \n   name = DECL_NAME (x);\n \n-  gcc_assert (!I_SYMBOL_BINDING (name));\n+ gcc_assert (TREE_CODE (x) == CONST_DECL || !I_SYMBOL_BINDING (name));\n \n   if (TREE_PUBLIC (x))\n     {"}, {"sha": "b904fa0ee5e736a1e341ba713c3855951e71affa", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=943db34743ced34d1e17686611bc6156a9087b7b", "patch": "@@ -1,3 +1,9 @@\n+2004-10-21  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR objc/17923\n+\t* objc-act.c (objc_build_string_object): Create a CONST_DECL\n+\tfor the NeXT runtime case.\n+\n 2004-10-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* objc-act.c: Fix comment typos."}, {"sha": "34550959482910706b04c29d2a7b9c9eb3406d25", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=943db34743ced34d1e17686611bc6156a9087b7b", "patch": "@@ -1661,6 +1661,7 @@ objc_build_string_object (tree string)\n \n   if (!desc)\n     {\n+      tree var;\n       *loc = desc = ggc_alloc (sizeof (*desc));\n       desc->literal = string;\n \n@@ -1685,14 +1686,18 @@ objc_build_string_object (tree string)\n       if (!flag_next_runtime)\n \tconstructor\n \t  = objc_add_static_instance (constructor, constant_string_type);\n-\n+      else\n+        {\n+\t  var = build_decl (CONST_DECL, NULL, TREE_TYPE (constructor));\n+\t  DECL_INITIAL (var) = constructor;\n+\t  TREE_STATIC (var) = 1;\n+\t  pushdecl_top_level (var);\n+\t  constructor = var;\n+\t}\n       desc->constructor = constructor;\n     }\n \n   addr = build_unary_op (ADDR_EXPR, desc->constructor, 1);\n-  TREE_CONSTANT (addr) = true;\n-  TREE_INVARIANT (addr) = true;\n-  TREE_STATIC (addr) = true;\n \n   return addr;\n }"}, {"sha": "b7f25ddf4dde71d7e34cc158ba62dc1df5ee9070", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=943db34743ced34d1e17686611bc6156a9087b7b", "patch": "@@ -1,3 +1,8 @@\n+2004-10-21  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR objc/17923\n+\t* objc.dg/const-str-7.m: New test.\n+\n 2004-10-20  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* g++.dg/template/memfriend11.C: Fix comment typo."}, {"sha": "3691579381d3a931b3697862998782ab77bc1cd5", "filename": "gcc/testsuite/objc.dg/const-str-7.m", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-7.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-7.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fconst-str-7.m?ref=943db34743ced34d1e17686611bc6156a9087b7b", "patch": "@@ -0,0 +1,46 @@\n+/* Test to make sure that the const objc strings are the same across\n+   scopes.  */\n+/* Developed by Andrew Pinski <pinskia@physics.uc.edu> */\n+\n+\n+/* { dg-options \"-fnext-runtime -fconstant-string-class=Foo -lobjc\" } */\n+/* { dg-do run { target *-*-darwin* } } */\n+\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <memory.h>\n+#include <objc/objc.h>\n+#include <objc/Object.h>\n+\n+\n+@interface Foo: Object {\n+  char *cString;\n+  unsigned int len;\n+}\n+- (char *)customString;\n+@end\n+\n+struct objc_class _FooClassReference;\n+\n+\n+@implementation Foo : Object\n+- (char *)customString {\n+  return cString;\n+}\n+@end\n+\n+\n+int main () {\n+  Foo *string = @\"bla\";\n+  {\n+    Foo *string2 = @\"bla\";\n+\n+\n+    if(string != string2)\n+      abort();\n+    printf(\"Strings are being uniqued properly\\n\");\n+   }\n+  return 0;\n+}\n+"}, {"sha": "b132571b5f397839c334b8fd9cc045d9d401d9c1", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/943db34743ced34d1e17686611bc6156a9087b7b/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=943db34743ced34d1e17686611bc6156a9087b7b", "patch": "@@ -1489,6 +1489,10 @@ staticp (tree arg)\n \t      && ! DECL_NON_ADDR_CONST_P (arg)\n \t      ? arg : NULL);\n \n+    case CONST_DECL:\n+      return ((TREE_STATIC (arg) || DECL_EXTERNAL (arg))\n+\t      ? arg : NULL);\n+\n     case CONSTRUCTOR:\n       return TREE_STATIC (arg) ? arg : NULL;\n "}]}