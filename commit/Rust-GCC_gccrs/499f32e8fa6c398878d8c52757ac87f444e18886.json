{"sha": "499f32e8fa6c398878d8c52757ac87f444e18886", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk5ZjMyZThmYTZjMzk4ODc4ZDhjNTI3NTdhYzg3ZjQ0NGUxODg4Ng==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2013-02-07T23:19:27Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2013-02-07T23:19:27Z"}, "message": "Fix variable tracking for leaf functions on sparc.\n\n\t* dwarf2out.c (based_loc_descr): Perform leaf register remapping\n\ton 'reg'.\n\t* var-tracking.c (vt_add_function_parameter): Test the presence of\n\tHAVE_window_save properly and do not remap argument registers when\n\twe have a leaf function.\n\nFrom-SVN: r195869", "tree": {"sha": "f23a678c9097ac59a77279afd266d0db3247bbd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f23a678c9097ac59a77279afd266d0db3247bbd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/499f32e8fa6c398878d8c52757ac87f444e18886", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499f32e8fa6c398878d8c52757ac87f444e18886", "html_url": "https://github.com/Rust-GCC/gccrs/commit/499f32e8fa6c398878d8c52757ac87f444e18886", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/499f32e8fa6c398878d8c52757ac87f444e18886/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "48227088fd83bcfa7f05192475923171431e9719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48227088fd83bcfa7f05192475923171431e9719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48227088fd83bcfa7f05192475923171431e9719"}], "stats": {"total": 64, "additions": 42, "deletions": 22}, "files": [{"sha": "dcbe029272a08edfc9aa8e33a019cc2eb5bd1865", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499f32e8fa6c398878d8c52757ac87f444e18886/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499f32e8fa6c398878d8c52757ac87f444e18886/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=499f32e8fa6c398878d8c52757ac87f444e18886", "patch": "@@ -1,3 +1,11 @@\n+2013-02-07  David S. Miller  <davem@davemloft.net>\n+\n+\t* dwarf2out.c (based_loc_descr): Perform leaf register remapping\n+\ton 'reg'.\n+\t* var-tracking.c (vt_add_function_parameter): Test the presence of\n+\tHAVE_window_save properly and do not remap argument registers when\n+\twe have a leaf function.\n+\n 2013-02-07  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR bootstrap/56227"}, {"sha": "4e75407fedfcfe943a0109634140b08b8fece925", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499f32e8fa6c398878d8c52757ac87f444e18886/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499f32e8fa6c398878d8c52757ac87f444e18886/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=499f32e8fa6c398878d8c52757ac87f444e18886", "patch": "@@ -10865,7 +10865,16 @@ based_loc_descr (rtx reg, HOST_WIDE_INT offset,\n \t}\n     }\n \n-  regno = DWARF_FRAME_REGNUM (REGNO (reg));\n+  regno = REGNO (reg);\n+#ifdef LEAF_REG_REMAP\n+  if (crtl->uses_only_leaf_regs)\n+    {\n+      int leaf_reg = LEAF_REG_REMAP (regno);\n+      if (leaf_reg != -1)\n+\tregno = (unsigned) leaf_reg;\n+    }\n+#endif\n+  regno = DWARF_FRAME_REGNUM (regno);\n \n   if (!optimize && fde\n       && (fde->drap_reg == regno || fde->vdrap_reg == regno))"}, {"sha": "0db15625b70948b3e4d19f85a2b13cf6f8693844", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 24, "deletions": 21, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/499f32e8fa6c398878d8c52757ac87f444e18886/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/499f32e8fa6c398878d8c52757ac87f444e18886/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=499f32e8fa6c398878d8c52757ac87f444e18886", "patch": "@@ -9502,31 +9502,34 @@ vt_add_function_parameter (tree parm)\n   /* DECL_INCOMING_RTL uses the INCOMING_REGNO of parameter registers.\n      If the target machine has an explicit window save instruction, the\n      actual entry value is the corresponding OUTGOING_REGNO instead.  */\n-  if (REG_P (incoming)\n-      && HARD_REGISTER_P (incoming)\n-      && OUTGOING_REGNO (REGNO (incoming)) != REGNO (incoming))\n+  if (HAVE_window_save && !crtl->uses_only_leaf_regs)\n     {\n-      parm_reg_t p;\n-      p.incoming = incoming;\n-      incoming\n-\t= gen_rtx_REG_offset (incoming, GET_MODE (incoming),\n-\t\t\t      OUTGOING_REGNO (REGNO (incoming)), 0);\n-      p.outgoing = incoming;\n-      vec_safe_push (windowed_parm_regs, p);\n-    }\n-  else if (MEM_P (incoming)\n-\t   && REG_P (XEXP (incoming, 0))\n-\t   && HARD_REGISTER_P (XEXP (incoming, 0)))\n-    {\n-      rtx reg = XEXP (incoming, 0);\n-      if (OUTGOING_REGNO (REGNO (reg)) != REGNO (reg))\n+      if (REG_P (incoming)\n+\t  && HARD_REGISTER_P (incoming)\n+\t  && OUTGOING_REGNO (REGNO (incoming)) != REGNO (incoming))\n \t{\n \t  parm_reg_t p;\n-\t  p.incoming = reg;\n-\t  reg = gen_raw_REG (GET_MODE (reg), OUTGOING_REGNO (REGNO (reg)));\n-\t  p.outgoing = reg;\n+\t  p.incoming = incoming;\n+\t  incoming\n+\t    = gen_rtx_REG_offset (incoming, GET_MODE (incoming),\n+\t\t\t\t  OUTGOING_REGNO (REGNO (incoming)), 0);\n+\t  p.outgoing = incoming;\n \t  vec_safe_push (windowed_parm_regs, p);\n-\t  incoming = replace_equiv_address_nv (incoming, reg);\n+\t}\n+      else if (MEM_P (incoming)\n+\t       && REG_P (XEXP (incoming, 0))\n+\t       && HARD_REGISTER_P (XEXP (incoming, 0)))\n+\t{\n+\t  rtx reg = XEXP (incoming, 0);\n+\t  if (OUTGOING_REGNO (REGNO (reg)) != REGNO (reg))\n+\t    {\n+\t      parm_reg_t p;\n+\t      p.incoming = reg;\n+\t      reg = gen_raw_REG (GET_MODE (reg), OUTGOING_REGNO (REGNO (reg)));\n+\t      p.outgoing = reg;\n+\t      vec_safe_push (windowed_parm_regs, p);\n+\t      incoming = replace_equiv_address_nv (incoming, reg);\n+\t    }\n \t}\n     }\n #endif"}]}