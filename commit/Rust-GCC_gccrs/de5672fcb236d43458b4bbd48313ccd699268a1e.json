{"sha": "de5672fcb236d43458b4bbd48313ccd699268a1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU1NjcyZmNiMjM2ZDQzNDU4YjRiYmQ0ODMxM2NjZDY5OTI2OGExZQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-11-12T15:50:05Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-11-12T15:50:05Z"}, "message": "Fix big memory leak in ix86_valid_target_attribute_p\n\n\t* config/i386/i386.c (ix86_valid_target_attribute_p):\n\tFinalize options at the of the function.\n\t* gcc.c (driver_get_configure_time_options): Call newly\n\tintroduced init_opts_obstack.\n\t* lto-wrapper.c (main): Likewise.\n\t* opts.c (init_opts_obstack): New function.\n\t(init_options_struct): Call newly\n\tintroduced init_opts_obstack.\n\t* opts.h (init_options_struct): Declare.\n\nFrom-SVN: r230264", "tree": {"sha": "d8c21743c5863ddf0f3ca4d381a04732f4ce45b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8c21743c5863ddf0f3ca4d381a04732f4ce45b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de5672fcb236d43458b4bbd48313ccd699268a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5672fcb236d43458b4bbd48313ccd699268a1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de5672fcb236d43458b4bbd48313ccd699268a1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5672fcb236d43458b4bbd48313ccd699268a1e/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "808b6bb7a8a4c30ac6f375ca2f6f0cb72fb3e766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808b6bb7a8a4c30ac6f375ca2f6f0cb72fb3e766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/808b6bb7a8a4c30ac6f375ca2f6f0cb72fb3e766"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "4770f0f5e232814d75223c9211f997e8a96f389a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de5672fcb236d43458b4bbd48313ccd699268a1e", "patch": "@@ -1,3 +1,15 @@\n+2015-11-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* config/i386/i386.c (ix86_valid_target_attribute_p):\n+\tFinalize options at the of the function.\n+\t* gcc.c (driver_get_configure_time_options): Call newly\n+\tintroduced init_opts_obstack.\n+\t* lto-wrapper.c (main): Likewise.\n+\t* opts.c (init_opts_obstack): New function.\n+\t(init_options_struct): Call newly\n+\tintroduced init_opts_obstack.\n+\t* opts.h (init_options_struct): Declare.\n+\n 2015-11-12  Martin Liska  <mliska@suse.cz>\n \n \tPR ipa/68035"}, {"sha": "805f7a8897843ed13514fbda5378a8d11290b930", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=de5672fcb236d43458b4bbd48313ccd699268a1e", "patch": "@@ -6237,6 +6237,8 @@ ix86_valid_target_attribute_p (tree fndecl,\n \tDECL_FUNCTION_SPECIFIC_OPTIMIZATION (fndecl) = new_optimize;\n     }\n \n+  finalize_options_struct (&func_options);\n+\n   return ret;\n }\n "}, {"sha": "87d19799266d09a00c32e27eb2cbc713c8765ed6", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=de5672fcb236d43458b4bbd48313ccd699268a1e", "patch": "@@ -9915,7 +9915,7 @@ driver_get_configure_time_options (void (*cb) (const char *option,\n   size_t i;\n \n   obstack_init (&obstack);\n-  gcc_obstack_init (&opts_obstack);\n+  init_opts_obstack ();\n   n_switches = 0;\n \n   for (i = 0; i < ARRAY_SIZE (option_default_specs); i++)"}, {"sha": "b9ac5356e021c164cd0f77c886e6fb2c17ee389d", "filename": "gcc/lto-wrapper.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Flto-wrapper.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Flto-wrapper.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-wrapper.c?ref=de5672fcb236d43458b4bbd48313ccd699268a1e", "patch": "@@ -1355,7 +1355,7 @@ main (int argc, char *argv[])\n {\n   const char *p;\n \n-  gcc_obstack_init (&opts_obstack);\n+  init_opts_obstack ();\n \n   p = argv[0] + strlen (argv[0]);\n   while (p != argv[0] && !IS_DIR_SEPARATOR (p[-1]))"}, {"sha": "930ae431157e5fd07e001c2e8d4c34668f0812d5", "filename": "gcc/opts.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=de5672fcb236d43458b4bbd48313ccd699268a1e", "patch": "@@ -266,14 +266,28 @@ add_comma_separated_to_vector (void **pvec, const char *arg)\n   *pvec = v;\n }\n \n+/* Initialize opts_obstack if not initialized.  */\n+\n+void\n+init_opts_obstack (void)\n+{\n+  static bool opts_obstack_initialized = false;\n+\n+  if (!opts_obstack_initialized)\n+    {\n+      opts_obstack_initialized = true;\n+      gcc_obstack_init (&opts_obstack);\n+    }\n+}\n+\n /* Initialize OPTS and OPTS_SET before using them in parsing options.  */\n \n void\n init_options_struct (struct gcc_options *opts, struct gcc_options *opts_set)\n {\n   size_t num_params = get_num_compiler_params ();\n \n-  gcc_obstack_init (&opts_obstack);\n+  init_opts_obstack ();\n \n   *opts = global_options_init;\n "}, {"sha": "2eb2d9735c6ab8ef98d61c56918dc5e651ebe12c", "filename": "gcc/opts.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Fopts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5672fcb236d43458b4bbd48313ccd699268a1e/gcc%2Fopts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.h?ref=de5672fcb236d43458b4bbd48313ccd699268a1e", "patch": "@@ -323,6 +323,7 @@ extern void decode_cmdline_options_to_array (unsigned int argc,\n extern void init_options_once (void);\n extern void init_options_struct (struct gcc_options *opts,\n \t\t\t\t struct gcc_options *opts_set);\n+extern void init_opts_obstack (void);\n extern void finalize_options_struct (struct gcc_options *opts);\n extern void decode_cmdline_options_to_array_default_mask (unsigned int argc,\n \t\t\t\t\t\t\t  const char **argv, "}]}