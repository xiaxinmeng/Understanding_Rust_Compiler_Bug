{"sha": "12487dd07ef8c5b789ad47dc7f4341347e68f625", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI0ODdkZDA3ZWY4YzViNzg5YWQ0N2RjN2Y0MzQxMzQ3ZTY4ZjYyNQ==", "commit": {"author": {"name": "Ollie Wild", "email": "aaw@google.com", "date": "2007-09-28T04:25:54Z"}, "committer": {"name": "Ollie Wild", "email": "aaw@gcc.gnu.org", "date": "2007-09-28T04:25:54Z"}, "message": "varasm.c (compare_constant): Removed call to lang_hooks.expand_constant.\n\n\tgcc/\n\t* varasm.c (compare_constant): Removed call to\n\tlang_hooks.expand_constant.\n\t(copy_constants): Removed call to lang_hooks.expand_constant.\n\t(compute_reloc_for_constant): Removed call to\n\tlang_hooks.expand_constant.\n\t(output_addressed_constants): Removed call to\n\tlang_hooks.expand_constant.\n\t(constructor_static_from_elts_p): Removed call to\n\tlang_hooks.expand_constant.\n\t(output_constant): Removed calls to lang_hooks.expand_constant.\n\t* langhooks.h (struct lang_hooks): Removed field expand_constant.\n\t* langhooks-def.h (lhd_return_tree): Removed.\n\t(LANG_HOOKS_EXPAND_CONSTANT): Removed.\n\t(LANG_HOOKS_INITIALIZER): Removed LANG_HOOKS_EXPAND_CONSTANT.\n\t* langhooks.c (lhd_return_tree): Removed.\n\n\tgcc/cp/\n\t* typeck2.c (digest_init): Call cplus_expand_constant after\n\tconvert_for_initialization.\n\t* cp-objcp-common.h (LANG_HOOKS_EXPAND_CONSTANT): Removed.\n\t* expr.c (cplus_expand_constant): Updated function description.\n\nFrom-SVN: r128859", "tree": {"sha": "879e65668805330d7be1aedfae2d117c74ba8aec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/879e65668805330d7be1aedfae2d117c74ba8aec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12487dd07ef8c5b789ad47dc7f4341347e68f625", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12487dd07ef8c5b789ad47dc7f4341347e68f625", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12487dd07ef8c5b789ad47dc7f4341347e68f625", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12487dd07ef8c5b789ad47dc7f4341347e68f625/comments", "author": {"login": "olliewild", "id": 11523068, "node_id": "MDQ6VXNlcjExNTIzMDY4", "avatar_url": "https://avatars.githubusercontent.com/u/11523068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olliewild", "html_url": "https://github.com/olliewild", "followers_url": "https://api.github.com/users/olliewild/followers", "following_url": "https://api.github.com/users/olliewild/following{/other_user}", "gists_url": "https://api.github.com/users/olliewild/gists{/gist_id}", "starred_url": "https://api.github.com/users/olliewild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olliewild/subscriptions", "organizations_url": "https://api.github.com/users/olliewild/orgs", "repos_url": "https://api.github.com/users/olliewild/repos", "events_url": "https://api.github.com/users/olliewild/events{/privacy}", "received_events_url": "https://api.github.com/users/olliewild/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e60eff0f3e4808393ced59da85219fb99d38220", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e60eff0f3e4808393ced59da85219fb99d38220", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e60eff0f3e4808393ced59da85219fb99d38220"}], "stats": {"total": 102, "additions": 45, "deletions": 57}, "files": [{"sha": "e3e7fc67febd643eebc87ae43e5e36aacb691b34", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -1,3 +1,21 @@\n+2007-09-27  Ollie Wild  <aaw@google.com>\n+\n+\t* varasm.c (compare_constant): Removed call to\n+\tlang_hooks.expand_constant.\n+\t(copy_constants): Removed call to lang_hooks.expand_constant.\n+\t(compute_reloc_for_constant): Removed call to\n+\tlang_hooks.expand_constant.\n+\t(output_addressed_constants): Removed call to\n+\tlang_hooks.expand_constant.\n+\t(constructor_static_from_elts_p): Removed call to\n+\tlang_hooks.expand_constant.\n+\t(output_constant): Removed calls to lang_hooks.expand_constant.\n+\t* langhooks.h (struct lang_hooks): Removed field expand_constant.\n+\t* langhooks-def.h (lhd_return_tree): Removed.\n+\t(LANG_HOOKS_EXPAND_CONSTANT): Removed.\n+\t(LANG_HOOKS_INITIALIZER): Removed LANG_HOOKS_EXPAND_CONSTANT.\n+\t* langhooks.c (lhd_return_tree): Removed.\n+\n 2007-09-27  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR middle-end/33436"}, {"sha": "8c1d9e2b8791c102d6545f118560f45407db7679", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -1,3 +1,10 @@\n+2007-09-27  Ollie Wild  <aaw@google.com>\n+\n+\t* typeck2.c (digest_init): Call cplus_expand_constant after\n+\tconvert_for_initialization.\n+\t* cp-objcp-common.h (LANG_HOOKS_EXPAND_CONSTANT): Removed.\n+\t* expr.c (cplus_expand_constant): Updated function description.\n+\n 2007-09-27  Jason Merrill  <jason@redhat.com>\n \n \t* decl2.c (is_late_template_attribute): Don't crash on unknown"}, {"sha": "60d78181ad1f370d0afc345c4e2a774bd22a09eb", "filename": "gcc/cp/cp-objcp-common.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fcp%2Fcp-objcp-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fcp%2Fcp-objcp-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.h?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -50,8 +50,6 @@ extern tree objcp_tsubst_copy_and_build (tree, tree, tsubst_flags_t,\n #define LANG_HOOKS_POST_OPTIONS c_common_post_options\n #undef LANG_HOOKS_GET_ALIAS_SET\n #define LANG_HOOKS_GET_ALIAS_SET cxx_get_alias_set\n-#undef LANG_HOOKS_EXPAND_CONSTANT\n-#define LANG_HOOKS_EXPAND_CONSTANT cplus_expand_constant\n #undef LANG_HOOKS_EXPAND_EXPR\n #define LANG_HOOKS_EXPAND_EXPR cxx_expand_expr\n #undef LANG_HOOKS_EXPAND_DECL"}, {"sha": "b5186462e5ec3efe0da76e1350dc423d1aafbdae", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -33,8 +33,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"except.h\"\n #include \"tm_p.h\"\n \n-/* Hook used by output_constant to expand language-specific\n-   constants.  */\n+/* Expand C++-specific constants.  Currently, this means PTRMEM_CST.  */\n \n tree\n cplus_expand_constant (tree cst)"}, {"sha": "adbe9de75413e3b5411d481cfe5cdc514b11aa35", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -703,8 +703,23 @@ digest_init (tree type, tree init)\n   /* Handle scalar types (including conversions) and references.  */\n   if (TREE_CODE (type) != COMPLEX_TYPE\n       && (SCALAR_TYPE_P (type) || code == REFERENCE_TYPE))\n-    return convert_for_initialization (0, type, init, LOOKUP_NORMAL,\n-\t\t\t\t       \"initialization\", NULL_TREE, 0);\n+    {\n+      tree *exp;\n+\n+      init = convert_for_initialization (0, type, init, LOOKUP_NORMAL,\n+\t\t\t\t\t \"initialization\", NULL_TREE, 0);\n+      exp = &init;\n+\n+      /* Skip any conversions since we'll be outputting the underlying\n+\t constant.  */\n+      while (TREE_CODE (*exp) == NOP_EXPR || TREE_CODE (*exp) == CONVERT_EXPR\n+\t     || TREE_CODE (*exp) == NON_LVALUE_EXPR)\n+\texp = &TREE_OPERAND (*exp, 0);\n+\n+      *exp = cplus_expand_constant (*exp);\n+\n+      return init;\n+    }\n \n   /* Come here only for aggregates: records, arrays, unions, complex numbers\n      and vectors.  */"}, {"sha": "e0bfb67a305e5991157461cf956404c55f627f24", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -41,7 +41,6 @@ extern void lhd_do_nothing_i (int);\n extern void lhd_do_nothing_f (struct function *);\n extern bool lhd_post_options (const char **);\n extern alias_set_type lhd_get_alias_set (tree);\n-extern tree lhd_return_tree (tree);\n extern tree lhd_return_null_tree_v (void);\n extern tree lhd_return_null_tree (tree);\n extern tree lhd_return_null_const_tree (const_tree);\n@@ -93,7 +92,6 @@ extern void lhd_omp_firstprivatize_type_sizes (struct gimplify_omp_ctx *,\n #define LANG_HOOKS_MISSING_ARGUMENT\thook_bool_constcharptr_size_t_false\n #define LANG_HOOKS_POST_OPTIONS\t\tlhd_post_options\n #define LANG_HOOKS_GET_ALIAS_SET\tlhd_get_alias_set\n-#define LANG_HOOKS_EXPAND_CONSTANT\tlhd_return_tree\n #define LANG_HOOKS_EXPAND_EXPR\t\tlhd_expand_expr\n #define LANG_HOOKS_EXPAND_DECL\t\tlhd_expand_decl\n #define LANG_HOOKS_FINISH_INCOMPLETE_DECL lhd_do_nothing_t\n@@ -250,7 +248,6 @@ extern tree lhd_make_node (enum tree_code);\n   LANG_HOOKS_PARSE_FILE, \\\n   LANG_HOOKS_CLEAR_BINDING_STACK, \\\n   LANG_HOOKS_GET_ALIAS_SET, \\\n-  LANG_HOOKS_EXPAND_CONSTANT, \\\n   LANG_HOOKS_EXPAND_EXPR, \\\n   LANG_HOOKS_EXPAND_DECL, \\\n   LANG_HOOKS_FINISH_INCOMPLETE_DECL, \\"}, {"sha": "6a9a74dc70cb30591562809f4bf90dcc6e305d0a", "filename": "gcc/langhooks.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -76,14 +76,6 @@ lhd_do_nothing_f (struct function * ARG_UNUSED (f))\n {\n }\n \n-/* Do nothing (return the tree node passed).  */\n-\n-tree\n-lhd_return_tree (tree t)\n-{\n-  return t;\n-}\n-\n /* Do nothing (return NULL_TREE).  */\n \n tree"}, {"sha": "0efb13956d333d4248a0fbd50405f62c84c8c6d2", "filename": "gcc/langhooks.h", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -287,11 +287,6 @@ struct lang_hooks\n      Returns -1 if the language does nothing special for it.  */\n   alias_set_type (*get_alias_set) (tree);\n \n-  /* Called with an expression that is to be processed as a constant.\n-     Returns either the same expression or a language-independent\n-     constant equivalent to its input.  */\n-  tree (*expand_constant) (tree);\n-\n   /* Called by expand_expr for language-specific tree codes.\n      Fourth argument is actually an enum expand_modifier.  */\n   rtx (*expand_expr) (tree, rtx, enum machine_mode, int, rtx *);"}, {"sha": "e85824577f6361dd7be7ca4e62cda499b0c80c63", "filename": "gcc/varasm.c", "status": "modified", "additions": 2, "deletions": 35, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12487dd07ef8c5b789ad47dc7f4341347e68f625/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=12487dd07ef8c5b789ad47dc7f4341347e68f625", "patch": "@@ -2985,15 +2985,7 @@ compare_constant (const tree t1, const tree t2)\n       return compare_constant (TREE_OPERAND (t1, 0), TREE_OPERAND (t2, 0));\n \n     default:\n-      {\n-\ttree nt1, nt2;\n-\tnt1 = lang_hooks.expand_constant (t1);\n-\tnt2 = lang_hooks.expand_constant (t2);\n-\tif (nt1 != t1 || nt2 != t2)\n-\t  return compare_constant (nt1, nt2);\n-\telse\n-\t  return 0;\n-      }\n+      return 0;\n     }\n \n   gcc_unreachable ();\n@@ -3061,12 +3053,7 @@ copy_constant (tree exp)\n       }\n \n     default:\n-      {\n-\ttree t = lang_hooks.expand_constant (exp);\n-\n-\tgcc_assert (t != exp);\n-\treturn copy_constant (t);\n-      }\n+      gcc_unreachable ();\n     }\n }\n \f\n@@ -3910,10 +3897,6 @@ compute_reloc_for_constant (tree exp)\n   int reloc = 0, reloc2;\n   tree tem;\n \n-  /* Give the front-end a chance to convert VALUE to something that\n-     looks more like a constant to the back-end.  */\n-  exp = lang_hooks.expand_constant (exp);\n-\n   switch (TREE_CODE (exp))\n     {\n     case ADDR_EXPR:\n@@ -3978,10 +3961,6 @@ output_addressed_constants (tree exp)\n {\n   tree tem;\n \n-  /* Give the front-end a chance to convert VALUE to something that\n-     looks more like a constant to the back-end.  */\n-  exp = lang_hooks.expand_constant (exp);\n-\n   switch (TREE_CODE (exp))\n     {\n     case ADDR_EXPR:\n@@ -4055,10 +4034,6 @@ constructor_static_from_elts_p (const_tree ctor)\n tree\n initializer_constant_valid_p (tree value, tree endtype)\n {\n-  /* Give the front-end a chance to convert VALUE to something that\n-     looks more like a constant to the back-end.  */\n-  value = lang_hooks.expand_constant (value);\n-\n   switch (TREE_CODE (value))\n     {\n     case CONSTRUCTOR:\n@@ -4317,11 +4292,6 @@ output_constant (tree exp, unsigned HOST_WIDE_INT size, unsigned int align)\n   enum tree_code code;\n   unsigned HOST_WIDE_INT thissize;\n \n-  /* Some front-ends use constants other than the standard language-independent\n-     varieties, but which may still be output directly.  Give the front-end a\n-     chance to convert EXP to a language-independent representation.  */\n-  exp = lang_hooks.expand_constant (exp);\n-\n   if (size == 0 || flag_syntax_only)\n     return;\n \n@@ -4378,9 +4348,6 @@ output_constant (tree exp, unsigned HOST_WIDE_INT size, unsigned int align)\n   code = TREE_CODE (TREE_TYPE (exp));\n   thissize = int_size_in_bytes (TREE_TYPE (exp));\n \n-  /* Give the front end another chance to expand constants.  */\n-  exp = lang_hooks.expand_constant (exp);\n-\n   /* Allow a constructor with no elements for any data type.\n      This means to fill the space with zeros.  */\n   if (TREE_CODE (exp) == CONSTRUCTOR"}]}