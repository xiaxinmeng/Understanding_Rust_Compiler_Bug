{"sha": "c05a07664ed2c729182c1e8fd16e19cd27f3df44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1YTA3NjY0ZWQyYzcyOTE4MmMxZThmZDE2ZTE5Y2QyN2YzZGY0NA==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-07-21T22:34:33Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-07-21T22:34:33Z"}, "message": "alias.c (nonoverlapping_component_refs_p): Use TYPE_MAIN_VARIANT, revert to returning false.\n\n2005-07-20  Daniel Berlin  <dberlin@dberlin.org>\n\n\t* alias.c (nonoverlapping_component_refs_p): Use TYPE_MAIN_VARIANT,\n\trevert to returning false.\n\nFrom-SVN: r102256", "tree": {"sha": "c93a7013d4e5b662d8272f86ad8a5b740297ccae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c93a7013d4e5b662d8272f86ad8a5b740297ccae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05a07664ed2c729182c1e8fd16e19cd27f3df44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05a07664ed2c729182c1e8fd16e19cd27f3df44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05a07664ed2c729182c1e8fd16e19cd27f3df44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05a07664ed2c729182c1e8fd16e19cd27f3df44/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "58669148c9e700f02dcc9b489c21429375962755", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58669148c9e700f02dcc9b489c21429375962755", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58669148c9e700f02dcc9b489c21429375962755"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "276483175beea6f8ad9c12669d63a23e73e2d738", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05a07664ed2c729182c1e8fd16e19cd27f3df44/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05a07664ed2c729182c1e8fd16e19cd27f3df44/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c05a07664ed2c729182c1e8fd16e19cd27f3df44", "patch": "@@ -1,3 +1,8 @@\n+2005-07-20  Daniel Berlin  <dberlin@dberlin.org>\n+\t\n+\t* alias.c (nonoverlapping_component_refs_p): Use TYPE_MAIN_VARIANT,\n+\trevert to returning false.\n+\n 2005-07-21  Uros Bizjak  <uros@kss-loka.si>\n \n         PR target/21149"}, {"sha": "49f712e97e069e73ebdec3dd6554d3b2bdc501f5", "filename": "gcc/alias.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05a07664ed2c729182c1e8fd16e19cd27f3df44/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05a07664ed2c729182c1e8fd16e19cd27f3df44/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=c05a07664ed2c729182c1e8fd16e19cd27f3df44", "patch": "@@ -1952,13 +1952,13 @@ nonoverlapping_component_refs_p (tree x, tree y)\n       do\n \t{\n \t  fieldx = TREE_OPERAND (x, 1);\n-\t  typex = DECL_FIELD_CONTEXT (fieldx);\n+\t  typex = TYPE_MAIN_VARIANT (DECL_FIELD_CONTEXT (fieldx));\n \n \t  y = orig_y;\n \t  do\n \t    {\n \t      fieldy = TREE_OPERAND (y, 1);\n-\t      typey = DECL_FIELD_CONTEXT (fieldy);\n+\t      typey = TYPE_MAIN_VARIANT (DECL_FIELD_CONTEXT (fieldy));\n \n \t      if (typex == typey)\n \t\tgoto found;\n@@ -1971,7 +1971,7 @@ nonoverlapping_component_refs_p (tree x, tree y)\n \t}\n       while (x && TREE_CODE (x) == COMPONENT_REF);\n       /* Never found a common type.  */\n-      return true;\n+      return false;\n \n     found:\n       /* If we're left with accessing different fields of a structure,"}]}