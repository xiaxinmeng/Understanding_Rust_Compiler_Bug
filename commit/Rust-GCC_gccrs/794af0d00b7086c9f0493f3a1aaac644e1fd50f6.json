{"sha": "794af0d00b7086c9f0493f3a1aaac644e1fd50f6", "node_id": "C_kwDOANBUbNoAKDc5NGFmMGQwMGI3MDg2YzlmMDQ5M2YzYTFhYWFjNjQ0ZTFmZDUwZjY", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-22T21:03:31Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2022-12-22T21:03:31Z"}, "message": "Fortran: check for invalid uses of statement functions arguments [PR69604]\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/69604\n\t* match.cc (chk_stmt_fcn_body): New function.  Check for invalid uses\n\tof statement functions arguments.\n\t(gfc_match_st_function): Use above.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/69604\n\t* gfortran.dg/statement_function_4.f90: New test.", "tree": {"sha": "e8215bc4ae259fa3813ecb2163e33779860e4a0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8215bc4ae259fa3813ecb2163e33779860e4a0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/794af0d00b7086c9f0493f3a1aaac644e1fd50f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794af0d00b7086c9f0493f3a1aaac644e1fd50f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/794af0d00b7086c9f0493f3a1aaac644e1fd50f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794af0d00b7086c9f0493f3a1aaac644e1fd50f6/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74544bdadc44edcd8d55792972e35b2cc07515a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74544bdadc44edcd8d55792972e35b2cc07515a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74544bdadc44edcd8d55792972e35b2cc07515a4"}], "stats": {"total": 37, "additions": 37, "deletions": 0}, "files": [{"sha": "3d346788416f3e81bacebbdf3052402627f4c11c", "filename": "gcc/fortran/match.cc", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794af0d00b7086c9f0493f3a1aaac644e1fd50f6/gcc%2Ffortran%2Fmatch.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794af0d00b7086c9f0493f3a1aaac644e1fd50f6/gcc%2Ffortran%2Fmatch.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.cc?ref=794af0d00b7086c9f0493f3a1aaac644e1fd50f6", "patch": "@@ -5915,6 +5915,30 @@ recursive_stmt_fcn (gfc_expr *e, gfc_symbol *sym)\n }\n \n \n+/* Check for invalid uses of statement function dummy arguments in body.  */\n+\n+static bool\n+chk_stmt_fcn_body (gfc_expr *e, gfc_symbol *sym, int *f ATTRIBUTE_UNUSED)\n+{\n+  gfc_formal_arglist *formal;\n+\n+  if (e == NULL || e->symtree == NULL || e->expr_type != EXPR_FUNCTION)\n+    return false;\n+\n+  for (formal = sym->formal; formal; formal = formal->next)\n+    {\n+      if (formal->sym == e->symtree->n.sym)\n+\t{\n+\t  gfc_error (\"Invalid use of statement function argument at %L\",\n+\t\t     &e->where);\n+\t  return true;\n+\t}\n+    }\n+\n+  return false;\n+}\n+\n+\n /* Match a statement function declaration.  It is so easy to match\n    non-statement function statements with a MATCH_ERROR as opposed to\n    MATCH_NO that we suppress error message in most cases.  */\n@@ -5983,6 +6007,9 @@ gfc_match_st_function (void)\n       return MATCH_ERROR;\n     }\n \n+  if (gfc_traverse_expr (expr, sym, chk_stmt_fcn_body, 0))\n+    return MATCH_ERROR;\n+\n   sym->value = expr;\n \n   if ((gfc_current_state () == COMP_FUNCTION"}, {"sha": "6ce5951b53a1d5515451336b8d0506541ee967d0", "filename": "gcc/testsuite/gfortran.dg/statement_function_4.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794af0d00b7086c9f0493f3a1aaac644e1fd50f6/gcc%2Ftestsuite%2Fgfortran.dg%2Fstatement_function_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794af0d00b7086c9f0493f3a1aaac644e1fd50f6/gcc%2Ftestsuite%2Fgfortran.dg%2Fstatement_function_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstatement_function_4.f90?ref=794af0d00b7086c9f0493f3a1aaac644e1fd50f6", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! PR fortran/69604\n+! Contributed by G.Steinmetz\n+\n+program p\n+  x(n) = 1 + n(2.0) ! { dg-error \"Invalid use of statement function argument\" }\n+  y(k) = k()        ! { dg-error \"Invalid use of statement function argument\" }\n+  z(m) = m          ! { dg-warning \"Statement function\" }\n+  print *, x(n)\n+end"}]}