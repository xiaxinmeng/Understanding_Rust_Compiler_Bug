{"sha": "1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU5OTNjYjgyZDYwMGExZDJkNzk4ZDE4NDU0YThjMmM4ZDRjNzY3OQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@apple.com", "date": "2006-09-20T08:11:19Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-09-20T08:11:19Z"}, "message": "i386.c (x86_fisttp): Remove.\n\n2006-09-20  Eric Christopher  <echristo@apple.com>\n\n        * config/i386/i386.c (x86_fisttp): Remove.\n        * config/i386/i386.h (x86_fisttp): Ditto.\n        (TARGET_FISTTP): Ditto.\n\n2006-09-20  Eric Christopher  <echristo@apple.com>\n\n        * gcc.target/i386/sse3-not-fisttp.c: New.\n\nFrom-SVN: r117076", "tree": {"sha": "4adb0050008d787556c956c69a683a80c0bcee72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4adb0050008d787556c956c69a683a80c0bcee72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/comments", "author": {"login": "echristo", "id": 327308, "node_id": "MDQ6VXNlcjMyNzMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/327308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/echristo", "html_url": "https://github.com/echristo", "followers_url": "https://api.github.com/users/echristo/followers", "following_url": "https://api.github.com/users/echristo/following{/other_user}", "gists_url": "https://api.github.com/users/echristo/gists{/gist_id}", "starred_url": "https://api.github.com/users/echristo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/echristo/subscriptions", "organizations_url": "https://api.github.com/users/echristo/orgs", "repos_url": "https://api.github.com/users/echristo/repos", "events_url": "https://api.github.com/users/echristo/events{/privacy}", "received_events_url": "https://api.github.com/users/echristo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aac8697859d550b39baf967900578ee47259c419", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aac8697859d550b39baf967900578ee47259c419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aac8697859d550b39baf967900578ee47259c419"}], "stats": {"total": 40, "additions": 36, "deletions": 4}, "files": [{"sha": "f7361e3a67a79d95cb80e27dc5764230de34d433", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "patch": "@@ -1,3 +1,9 @@\n+2006-09-20  Eric Christopher  <echristo@apple.com>\n+\n+\t* config/i386/i386.c (x86_fisttp): Remove.\n+\t* config/i386/i386.h (x86_fisttp): Ditto.\n+\t(TARGET_FISTTP): Ditto.\n+\n 2006-09-19  Eric Christopher  <echristo@apple.com>\n \n \t* doc/tm.texi (OBJC_JBLEN): Describe."}, {"sha": "cdbd0c658c5812787f8a554757a6fb26036c2dd0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "patch": "@@ -743,7 +743,6 @@ const int x86_double_with_add = ~m_386;\n const int x86_use_bit_test = m_386;\n const int x86_unroll_strlen = m_486 | m_PENT | m_PPRO | m_ATHLON_K8 | m_K6 | m_GENERIC;\n const int x86_cmove = m_PPRO | m_ATHLON_K8 | m_PENT4 | m_NOCONA;\n-const int x86_fisttp = m_NOCONA;\n const int x86_3dnow_a = m_ATHLON_K8;\n const int x86_deep_branch = m_PPRO | m_K6 | m_ATHLON_K8 | m_PENT4 | m_NOCONA | m_GENERIC;\n /* Branch hints were put in P4 based on simulation result. But"}, {"sha": "f2e6ce06a960dba2a4ad22d3dc15232cd5f24790", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "patch": "@@ -142,7 +142,7 @@ extern const struct processor_costs *ix86_cost;\n \n #define TUNEMASK (1 << ix86_tune)\n extern const int x86_use_leave, x86_push_memory, x86_zero_extend_with_and;\n-extern const int x86_use_bit_test, x86_cmove, x86_fisttp, x86_deep_branch;\n+extern const int x86_use_bit_test, x86_cmove, x86_deep_branch;\n extern const int x86_branch_hints, x86_unroll_strlen;\n extern const int x86_double_with_add, x86_partial_reg_stall, x86_movx;\n extern const int x86_use_himode_fiop, x86_use_simode_fiop;\n@@ -175,8 +175,7 @@ extern int x86_prefetch_sse;\n /* For sane SSE instruction set generation we need fcomi instruction.  It is\n    safe to enable all CMOVE instructions.  */\n #define TARGET_CMOVE ((x86_cmove & (1 << ix86_arch)) || TARGET_SSE)\n-#define TARGET_FISTTP (((x86_fisttp & (1 << ix86_arch)) || TARGET_SSE3) \\\n-\t\t\t&& TARGET_80387)\n+#define TARGET_FISTTP (TARGET_SSE3 && TARGET_80387)\n #define TARGET_DEEP_BRANCH_PREDICTION (x86_deep_branch & TUNEMASK)\n #define TARGET_BRANCH_PREDICTION_HINTS (x86_branch_hints & TUNEMASK)\n #define TARGET_DOUBLE_WITH_ADD (x86_double_with_add & TUNEMASK)"}, {"sha": "5a7a5405b170f85dc99b75458426269290577752", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "patch": "@@ -1,3 +1,7 @@\n+2006-09-20  Eric Christopher  <echristo@apple.com>\n+\n+\t* gcc.target/i386/sse3-not-fisttp.c: New.\n+\n 2006-09-19  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \t* gfortran.dg/vect/vect-5.f90: Don't xfail lp64."}, {"sha": "2f3261ac598b6eb251fc8ee433c5cf317b875c83", "filename": "gcc/testsuite/gcc.target/i386/sse3-not-fisttp.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse3-not-fisttp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e993cb82d600a1d2d798d18454a8c2c8d4c7679/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse3-not-fisttp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse3-not-fisttp.c?ref=1e993cb82d600a1d2d798d18454a8c2c8d4c7679", "patch": "@@ -0,0 +1,24 @@\n+/* Test that we don't generate a fisttp instruction when -mno-sse3.  */\n+/* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n+/* { dg-options \"-O -march=nocona -mno-sse3\" } */\n+/* { dg-final { scan-assembler-not \"fisttp\" } } */\n+struct foo\n+{\n+ long a;\n+ long b;\n+};\n+\n+extern double c;\n+\n+extern unsigned long long baz (void);\n+\n+int\n+walrus (const struct foo *input)\n+{\n+    unsigned long long d;\n+\n+    d = baz ()\n+      + (unsigned long long) (((double) input->a * 1000000000\n+\t\t\t      + (double) input->b) * c);\n+    return (d ? 1 : 0);\n+}"}]}