{"sha": "ec34277611416aacdfdf3b8469b8e6ed43f623e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMzNDI3NzYxMTQxNmFhY2RmZGYzYjg0NjliOGU2ZWQ0M2Y2MjNlNg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-09T16:23:22Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-06-09T17:50:27Z"}, "message": "Remove dead code\n\nThis removes dead code left over from the reduction vectorization\nrefactoring last year.\n\n2020-06-09  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vect-loop.c (vectorizable_induction): Remove dead code.", "tree": {"sha": "e507ee2aed3e8b84b0acbc170eaad28f327b052c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e507ee2aed3e8b84b0acbc170eaad28f327b052c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec34277611416aacdfdf3b8469b8e6ed43f623e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec34277611416aacdfdf3b8469b8e6ed43f623e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec34277611416aacdfdf3b8469b8e6ed43f623e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec34277611416aacdfdf3b8469b8e6ed43f623e6/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98866120092edfd7d5a7ae008db960dae8ab1523", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98866120092edfd7d5a7ae008db960dae8ab1523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98866120092edfd7d5a7ae008db960dae8ab1523"}], "stats": {"total": 42, "additions": 0, "deletions": 42}, "files": [{"sha": "5329982e4c9c876b188e6ca492c2dafe7ccce899", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 0, "deletions": 42, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec34277611416aacdfdf3b8469b8e6ed43f623e6/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec34277611416aacdfdf3b8469b8e6ed43f623e6/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=ec34277611416aacdfdf3b8469b8e6ed43f623e6", "patch": "@@ -7373,11 +7373,6 @@ vectorizable_induction (loop_vec_info loop_vinfo,\n   unsigned i;\n   tree expr;\n   gimple_seq stmts;\n-  imm_use_iterator imm_iter;\n-  use_operand_p use_p;\n-  gimple *exit_phi;\n-  edge latch_e;\n-  tree loop_arg;\n   gimple_stmt_iterator si;\n \n   gphi *phi = dyn_cast <gphi *> (stmt_info->stmt);\n@@ -7485,9 +7480,6 @@ vectorizable_induction (loop_vec_info loop_vinfo,\n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location, \"transform induction phi.\\n\");\n \n-  latch_e = loop_latch_edge (iv_loop);\n-  loop_arg = PHI_ARG_DEF_FROM_EDGE (phi, latch_e);\n-\n   step_expr = STMT_VINFO_LOOP_PHI_EVOLUTION_PART (stmt_info);\n   gcc_assert (step_expr != NULL_TREE);\n   tree step_vectype = get_same_sized_vectype (TREE_TYPE (step_expr), vectype);\n@@ -7872,40 +7864,6 @@ vectorizable_induction (loop_vec_info loop_vinfo,\n \t}\n     }\n \n-  if (nested_in_vect_loop)\n-    {\n-      /* Find the loop-closed exit-phi of the induction, and record\n-         the final vector of induction results:  */\n-      exit_phi = NULL;\n-      FOR_EACH_IMM_USE_FAST (use_p, imm_iter, loop_arg)\n-        {\n-\t  gimple *use_stmt = USE_STMT (use_p);\n-\t  if (is_gimple_debug (use_stmt))\n-\t    continue;\n-\n-\t  if (!flow_bb_inside_loop_p (iv_loop, gimple_bb (use_stmt)))\n-\t    {\n-\t      exit_phi = use_stmt;\n-\t      break;\n-\t    }\n-        }\n-      if (exit_phi)\n-\t{\n-\t  stmt_vec_info stmt_vinfo = loop_vinfo->lookup_stmt (exit_phi);\n-\t  /* FORNOW. Currently not supporting the case that an inner-loop induction\n-\t     is not used in the outer-loop (i.e. only outside the outer-loop).  */\n-\t  gcc_assert (STMT_VINFO_RELEVANT_P (stmt_vinfo)\n-\t\t      && !STMT_VINFO_LIVE_P (stmt_vinfo));\n-\n-\t  STMT_VINFO_VEC_STMT (stmt_vinfo) = new_stmt_info;\n-\t  if (dump_enabled_p ())\n-\t    dump_printf_loc (MSG_NOTE, vect_location,\n-\t\t\t     \"vector of inductions after inner-loop:%G\",\n-\t\t\t     new_stmt);\n-\t}\n-    }\n-\n-\n   if (dump_enabled_p ())\n     dump_printf_loc (MSG_NOTE, vect_location,\n \t\t     \"transform induction: created def-use cycle: %G%G\","}]}