{"sha": "b6ded5bdea275e95743d0b2baab42a393800c8db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZkZWQ1YmRlYTI3NWU5NTc0M2QwYjJiYWFiNDJhMzkzODAwYzhkYg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-06-27T18:55:15Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-06-27T18:55:15Z"}, "message": "20021123-1.c: Remove duplicate of 20021110.c.\n\n\t* gcc.c-torture/compile/20021123-1.c: Remove duplicate of\n\t20021110.c.\n\t* gcc.c-torture/compile/20021123-4.c: Remove duplicate of\n\t20021119-1.c.\n\t* gcc.dg/vmx/5-05.c, gcc.dg/vmx/5-06.c, gcc.dg/vmx/5-07.c,\n\tgcc.dg/vmx/5-08.c: Remove duplicates of 5-01.c, 5-02.c, 5-03.c,\n\t5-04.c.\n\t* gcc.dg/builtins-42.c: Remove duplicate of builtins-41.c.\n\t* g++.dg/other/new1.C: Remove duplicate of g++.dg/init/new1.C.\n\t* g++.dg/init/elide3.C: Remove duplicate of elide2.C.\n\t* g++.old-deja/g++.law/enum8.C: Remove duplicate of\n\tg++.brendan/enum14.C.\n\t* g++.old-deja/g++.mike/ns8.C: Remove duplicate of ns6.C\n\t* g++.old-deja/g++.ns/alias5.C: Remove duplicate of alias1.C.\n\t* g++.old-deja/g++.other/virtual1.C: Remove duplicate of\n\tg++.mike/virt1.C.\n\t* g++.old-deja/g++.pt/memtemp27.C: Remove duplicate of\n\tmemtemp24.C.\n\nFrom-SVN: r83739", "tree": {"sha": "73b28ebf9074a20cec4a20c52889c5f5f87aba62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73b28ebf9074a20cec4a20c52889c5f5f87aba62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6ded5bdea275e95743d0b2baab42a393800c8db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ded5bdea275e95743d0b2baab42a393800c8db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ded5bdea275e95743d0b2baab42a393800c8db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ded5bdea275e95743d0b2baab42a393800c8db/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe0b9fb522697476efe3f577aa92d0aac6bd220e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe0b9fb522697476efe3f577aa92d0aac6bd220e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe0b9fb522697476efe3f577aa92d0aac6bd220e"}], "stats": {"total": 264, "additions": 21, "deletions": 243}, "files": [{"sha": "d559086c58c4972baeb255f3fb82af7efe2a14ae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6ded5bdea275e95743d0b2baab42a393800c8db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6ded5bdea275e95743d0b2baab42a393800c8db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b6ded5bdea275e95743d0b2baab42a393800c8db", "patch": "@@ -1,3 +1,24 @@\n+2004-06-27  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* gcc.c-torture/compile/20021123-1.c: Remove duplicate of\n+\t20021110.c.\n+\t* gcc.c-torture/compile/20021123-4.c: Remove duplicate of\n+\t20021119-1.c.\n+\t* gcc.dg/vmx/5-05.c, gcc.dg/vmx/5-06.c, gcc.dg/vmx/5-07.c,\n+\tgcc.dg/vmx/5-08.c: Remove duplicates of 5-01.c, 5-02.c, 5-03.c,\n+\t5-04.c.\n+\t* gcc.dg/builtins-42.c: Remove duplicate of builtins-41.c.\n+\t* g++.dg/other/new1.C: Remove duplicate of g++.dg/init/new1.C.\n+\t* g++.dg/init/elide3.C: Remove duplicate of elide2.C.\n+\t* g++.old-deja/g++.law/enum8.C: Remove duplicate of\n+\tg++.brendan/enum14.C.\n+\t* g++.old-deja/g++.mike/ns8.C: Remove duplicate of ns6.C\n+\t* g++.old-deja/g++.ns/alias5.C: Remove duplicate of alias1.C.\n+\t* g++.old-deja/g++.other/virtual1.C: Remove duplicate of\n+\tg++.mike/virt1.C.\n+\t* g++.old-deja/g++.pt/memtemp27.C: Remove duplicate of\n+\tmemtemp24.C.\n+\n 2004-06-27  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcc.dg/20040527-1.c: New test case."}, {"sha": "e6d3300b56bc754d87703ec2dcdf2e06ba6e7ce4", "filename": "gcc/testsuite/g++.dg/init/elide3.C", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Felide3.C?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,30 +0,0 @@\n-// PR c++/8674\n-\n-// Bug: Since B().a is an rvalue, we tried to treat it like a TARGET_EXPR\n-// and elide the copy.  But that produces a bitwise copy, which causes us\n-// to abort in cp_expr_size.\n-\n-// Test that we actually run the A copy constructor when calling f().\n-\n-// { dg-do run }\n-\n-int c;\n-\n-struct A\n-{\n-  A () { ++c; }\n-  A (const A&) { ++c; }\n-};\n-\n-struct B\n-{\n-  A a;\n-};\n-\n-void f (A) { }\n-\n-int main ()\n-{\n-  f (B().a);\n-  return c < 2;\n-}"}, {"sha": "5015d819f7f96fbca9f049c077b258c56559bb8a", "filename": "gcc/testsuite/g++.dg/other/new1.C", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fnew1.C?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,19 +0,0 @@\n-// Origin: asharji@uwaterloo.ca\n-\n-// { dg-do compile }\n-\n-typedef __SIZE_TYPE__ size_t;\n-\n-class bar {\n-    int i;\n-  public :\n-    void * operator new ( size_t , void * storage );\n-};\n-\n-class foo {\n-    int storage[ 5 ];\n-  public:\n-    void mem ( ) {\n-        bar *s = new ( ( void * ) & storage ) bar;\n-    }\n-};"}, {"sha": "e18284458eb675b11249342aa8c5b0c1835ffcd3", "filename": "gcc/testsuite/g++.old-deja/g++.law/enum8.C", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum8.C?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,4 +0,0 @@\n-// { dg-do assemble  }\n-// { dg-options \"-fshort-enums\" }\n-// GROUPS passed enums\n-  enum E { A = 0x80000000 };"}, {"sha": "275e7ba8535346c6f7b5d85c4e565e28f091d57e", "filename": "gcc/testsuite/g++.old-deja/g++.mike/ns8.C", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fns8.C?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,9 +0,0 @@\n-// { dg-do assemble  }\n-\n-namespace A {\n-  int i = 1;\n-}\n-\n-namespace A {\n-  int j = i;\n-}"}, {"sha": "e46d74dff45a58c21ee619193d20ed79882f9d09", "filename": "gcc/testsuite/g++.old-deja/g++.ns/alias5.C", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Falias5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Falias5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Falias5.C?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,19 +0,0 @@\n-// { dg-do run  }\n-namespace foo{\n- int eine_funktion(int)\n- {\n-   return 0;\n- }\n-}\n-\n-namespace foo{\n- void eine_funktion(int,int)\n- {}\n-}\n-\n-namespace bar = foo;\n-\n-int main()\n-{\n-  return bar::eine_funktion(3);\n-}"}, {"sha": "f8ee4edb0373e5220570d1681e110c3799d87f82", "filename": "gcc/testsuite/g++.old-deja/g++.other/virtual1.C", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvirtual1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvirtual1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvirtual1.C?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,13 +0,0 @@\n-// { dg-do assemble  }\n-\n-struct S0 { virtual void f1 () { } };\n-\n-struct S1 : virtual public S0 { virtual void f1 () { } };\n-\n-struct S2 : public S1 { virtual void f1 () { } };\n-\n-struct S3 : virtual public S0 { virtual void f1 () { } };\n-\n-struct S4 : public S3 { };\n-\n-void creator () { new S4; }"}, {"sha": "4e81d015d06a9c75f9a27a3dc6ce9a07ee9fdc71", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp27.C", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp27.C?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,25 +0,0 @@\n-// { dg-do link  }\n-// GROUPS passed templates membertemplates\n-extern \"C\" int printf(const char*, ...);\n-\n-template <class X>\n-struct S\n-{\n-  S()\n-  { printf (\"In S::S()\\n\"); f(3); }\n-  \n-  S(char)\n-  { printf (\"In S::S(char)\\n\"); f(*this); }\n-\n-  template <class U>\n-  void f(U u)\n-  { printf (\"In S::f(U)\\nsizeof(U) == %d\\n\", sizeof(u)); }\n-\n-  int c[16];\n-};\n-\n-int main()\n-{\n-  S<char*> s;\n-  S<char*> s2('a');\n-}"}, {"sha": "dd2aa7e09dd141c364b76462a32e483efb5f022d", "filename": "gcc/testsuite/gcc.c-torture/compile/20021123-1.c", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-1.c?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,10 +0,0 @@\n-/* PR c/8439 */\n-/* Verify that GCC properly handles null increments. */\n-\n-struct empty {\n-};\n-\n-void foo(struct empty *p)\n-{\n-   p++;\n-}"}, {"sha": "d4306b89b999f485385c2099818f8fc64a81bca5", "filename": "gcc/testsuite/gcc.c-torture/compile/20021123-4.c", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20021123-4.c?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,11 +0,0 @@\n-/* PR c/8588 */\n-/* Contributed by Volker Reichelt. */\n-\n-/* Verify that GCC converts integer constants\n-   in shift operations. */\n-   \n-void foo()\n-{\n-  unsigned int i, j;\n-  j = (i >> 0xf0);\n-}"}, {"sha": "5b96551fb116a01d73cbb61b92d94f2d3c17a06e", "filename": "gcc/testsuite/gcc.dg/builtins-42.c", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-42.c?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,57 +0,0 @@\n-/* Copyright (C) 2004 Free Software Foundation.\n-\n-   Check that constant folding of copysign, copysignf and copysignl math\n-   functions doesn't break anything and produces the expected results.\n-\n-   Written by Roger Sayle, 6th June 2004.  */\n-\n-/* { dg-do link } */\n-/* { dg-options \"-O2\" } */\n-\n-extern void link_error(void);\n-\n-extern double copysign(double, double);\n-extern float copysignf(float, float);\n-extern long double copysignl(long double, long double);\n-\n-int main()\n-{\n-  if (copysign (2.0, 1.0) != 2.0)\n-    link_error ();\n-  if (copysign (2.0, -1.0) != -2.0)\n-    link_error ();\n-  if (copysign (-2.0, 1.0) != 2.0)\n-    link_error ();\n-  if (copysign (-2.0, -1.0) != -2.0)\n-    link_error ();\n-\n-  if (copysign (2.0, 1.0) != 2.0)\n-    link_error ();\n-  if (copysign (2.0, -1.0) != -2.0)\n-    link_error ();\n-  if (copysign (-2.0, 1.0) != 2.0)\n-    link_error ();\n-  if (copysign (-2.0, -1.0) != -2.0)\n-    link_error ();\n-\n-  if (copysignf (2.0f, 1.0f) != 2.0f)\n-    link_error ();\n-  if (copysignf (2.0f, -1.0f) != -2.0f)\n-    link_error ();\n-  if (copysignf (-2.0f, 1.0f) != 2.0f)\n-    link_error ();\n-  if (copysignf (-2.0f, -1.0f) != -2.0f)\n-    link_error ();\n-\n-  if (copysignl (2.0l, 1.0l) != 2.0l)\n-    link_error ();\n-  if (copysignl (2.0l, -1.0l) != -2.0l)\n-    link_error ();\n-  if (copysignl (-2.0l, 1.0l) != 2.0l)\n-    link_error ();\n-  if (copysignl (-2.0l, -1.0l) != -2.0l)\n-    link_error ();\n-\n-  return 0;\n-}\n-"}, {"sha": "c3cb6e990dc56b1bb8e40fc34e3a7a77cdce9495", "filename": "gcc/testsuite/gcc.dg/vmx/5-05.c", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-05.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-05.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-05.c?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,4 +0,0 @@\n-/* { dg-do compile } */\n-#include <altivec.h>\n-vector unsigned int a = {1,1,1,1};\n-vector unsigned int b = {1,2,3,4};"}, {"sha": "0bb4eb0084f5687fed52025cfe18eea117a46c3e", "filename": "gcc/testsuite/gcc.dg/vmx/5-06.c", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-06.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-06.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-06.c?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,4 +0,0 @@\n-/* { dg-do compile } */\n-#include <altivec.h>\n-vector float a = {1,1,1,1};\n-vector float b = {1,2.0,3,4U};"}, {"sha": "3d048e87b012eb1ba51de93f713352ccf131d775", "filename": "gcc/testsuite/gcc.dg/vmx/5-07.c", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-07.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-07.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-07.c?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,28 +0,0 @@\n-/* { dg-do compile } */\n-#include <altivec.h>\n-vector unsigned char u8 = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};\n-vector signed char s8 = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};\n-vector bool char b8 = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};\n-vector unsigned short u16 = {1,1,1,1,1,1,1,1};\n-vector signed short s16 = {1,1,1,1,1,1,1,1};\n-vector bool short b16 = {1,1,1,1,1,1,1,1};\n-vector unsigned int u32 = {1,1,1,1};\n-vector signed int s32 = {1,1,1,1};\n-vector bool int b32 = {1,1,1,1};\n-vector float f32 = {1,1,1,1};\n-vector pixel p16 = {1,1,1,1,1,1,1,1};\n-\n-vector unsigned char u8_\n-  = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};\n-vector signed char s8_\n-  = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};\n-vector bool char b8_\n-  = {1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16};\n-vector unsigned short u16_ = {1,2,3,4,5,6,7,8};\n-vector signed short s16_ = {1,2,3,4,5,6,7,8};\n-vector bool short b16_ = {1,2,3,4,5,6,7,8};\n-vector unsigned int u32_ = {1,2,3,4};\n-vector signed int s32_ = {1,2,3,4};\n-vector bool int b32_ = {1,2,3,4};\n-vector float f32_ = {1,2,3,4};\n-vector pixel p16_ = {1,2,3,4,5,6,7,8};"}, {"sha": "c5135e88864974ce6e39dc4720c54801919e7979", "filename": "gcc/testsuite/gcc.dg/vmx/5-08.c", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-08.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe0b9fb522697476efe3f577aa92d0aac6bd220e/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-08.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F5-08.c?ref=fe0b9fb522697476efe3f577aa92d0aac6bd220e", "patch": "@@ -1,10 +0,0 @@\n-/* { dg-do compile } */\n-#include <altivec.h>\n-vector unsigned int a;\n-vector unsigned int b;\n-void\n-f(void) \n-{\n-  a = ((vector unsigned int){1,1,1,1});\n-  b = ((vector unsigned int){1,2,3,4});\n-}"}]}