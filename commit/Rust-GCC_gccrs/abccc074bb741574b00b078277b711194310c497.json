{"sha": "abccc074bb741574b00b078277b711194310c497", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWJjY2MwNzRiYjc0MTU3NGIwMGIwNzgyNzdiNzExMTk0MzEwYzQ5Nw==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T22:41:10Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-11-17T22:41:10Z"}, "message": "Enable building libmpx with Intel CET\n\nlibmpx/\n\t* Makefile.in: Regenerate.\n\t* acinclude.m4: Add enable.m4 and cet.m4.\n\t* configure: Regenerate.\n\t* configure.ac: Set CET_FLAGS. Update XCFLAGS.\n\t* mpxrt/Makefile.am: Update libmpx_la_CFLAGS.\n\t* mpxrt/Makefile.in: Regenerate.\n\t* mpxwrap/Makefile.am: Add AM_CFLAGS. Update\n\tlibmpxwrappers_la_CFLAGS.\n\t* mpxwrap/Makefile.in: Regenerate.\n\nFrom-SVN: r254900", "tree": {"sha": "97acddd4eaed58045b878032b231aee06c51efce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97acddd4eaed58045b878032b231aee06c51efce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abccc074bb741574b00b078277b711194310c497", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abccc074bb741574b00b078277b711194310c497", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abccc074bb741574b00b078277b711194310c497", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abccc074bb741574b00b078277b711194310c497/comments", "author": null, "committer": null, "parents": [{"sha": "fda26abecc9a71f75d654776fdd97183f15f7df7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fda26abecc9a71f75d654776fdd97183f15f7df7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fda26abecc9a71f75d654776fdd97183f15f7df7"}], "stats": {"total": 115, "additions": 106, "deletions": 9}, "files": [{"sha": "9ae654270b773f032172a1ef1c5d413f58d3d707", "filename": "libmpx/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FChangeLog?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -1,3 +1,15 @@\n+ 2017-11-17  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t * Makefile.in: Regenerate.\n+\t * acinclude.m4: Add enable.m4 and cet.m4.\n+\t * configure: Regenerate.\n+\t * configure.ac: Set CET_FLAGS. Update XCFLAGS.\n+\t * mpxrt/Makefile.am: Update libmpx_la_CFLAGS.\n+\t * mpxrt/Makefile.in: Regenerate.\n+\t * mpxwrap/Makefile.am: Add AM_CFLAGS. Update\n+\t libmpxwrappers_la_CFLAGS.\n+\t * mpxwrap/Makefile.in: Regenerate.\n+\n 2017-01-30  Jakub Jelinek  <jakub@redhat.com>\n \n \t* mpxrt/mpxrt-utils.h (__mpxrt_stop): New prototype."}, {"sha": "358956c917b2810c11857611861d8a35bc1938cf", "filename": "libmpx/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FMakefile.in?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -66,7 +66,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\"}, {"sha": "c432ae660a178320f4c264f2a5b7c5cae4fb9a99", "filename": "libmpx/acinclude.m4", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Facinclude.m4?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -2,6 +2,8 @@ dnl ----------------------------------------------------------------------\n dnl This whole bit snagged from libgfortran.\n \n sinclude(../libtool.m4)\n+sinclude(../config/enable.m4)\n+sinclude(../config/cet.m4)\n dnl The lines below arrange for aclocal not to bring an installed\n dnl libtool.m4 into aclocal.m4, while still arranging for automake to\n dnl add a definition of LIBTOOL to Makefile.in."}, {"sha": "7bc68b81e4f4bb969a117a376a43cf13398cf83e", "filename": "libmpx/configure", "status": "modified", "additions": 74, "deletions": 2, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -732,6 +732,7 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n+enable_cet\n with_gcc_major_version_only\n '\n       ac_precious_vars='build_alias\n@@ -1372,6 +1373,8 @@ Optional Features:\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n+  --enable-cet            enable Intel CET in target libraries\n+                          [default=default]\n \n Optional Packages:\n   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n@@ -11234,7 +11237,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11237 \"configure\"\n+#line 11240 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11340,7 +11343,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11343 \"configure\"\n+#line 11346 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11581,6 +11584,75 @@ CC=\"$lt_save_CC\"\n \n \n XCFLAGS=\"-Wall -Wextra\"\n+# Add CET specific flags if CET is enabled\n+ # Check whether --enable-cet was given.\n+if test \"${enable_cet+set}\" = set; then :\n+  enableval=$enable_cet;\n+      case \"$enableval\" in\n+       yes|no|default) ;;\n+       *) as_fn_error \"Unknown argument to enable/disable cet\" \"$LINENO\" 5 ;;\n+                          esac\n+\n+else\n+  enable_cet=default\n+fi\n+\n+\n+case \"$host\" in\n+  i[34567]86-*-linux* | x86_64-*-linux*)\n+    case \"$enable_cet\" in\n+      default)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+  enable_cet=yes\n+else\n+  enable_cet=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+      yes)\n+\t# Check if assembler supports CET.\n+\tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+asm (\"setssbsy\");\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error \"assembler with CET support is required for --enable-cet\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+\t;;\n+    esac\n+    ;;\n+  *)\n+    enable_cet=no\n+    ;;\n+esac\n+if test x$enable_cet = xyes; then\n+  CET_FLAGS=\"-fcf-protection -mcet\"\n+fi\n+\n+XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n+\n \n \n if test \"${multilib}\" = \"yes\"; then"}, {"sha": "dc0c2a83809c6355456f606f22cd93a821c2d99f", "filename": "libmpx/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure.ac?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -117,6 +117,10 @@ AC_SUBST(enable_shared)\n AC_SUBST(enable_static)\n \n XCFLAGS=\"-Wall -Wextra\"\n+# Add CET specific flags if CET is enabled\n+GCC_CET_FLAGS(CET_FLAGS)\n+XCFLAGS=\"$XCFLAGS $CET_FLAGS\"\n+\n AC_SUBST(XCFLAGS)\n \n if test \"${multilib}\" = \"yes\"; then"}, {"sha": "0dd0bed4e237fed365ed867f3d648912702ee165", "filename": "libmpx/mpxrt/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2Fmpxrt%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2Fmpxrt%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxrt%2FMakefile.am?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -11,7 +11,7 @@ toolexeclib_LTLIBRARIES = libmpx.la\n \n libmpx_la_SOURCES = mpxrt.c mpxrt-utils.c\n \n-libmpx_la_CFLAGS = -fPIC\n+libmpx_la_CFLAGS = -fPIC $(XCFLAGS)\n libmpx_la_DEPENDENCIES = libmpx.map\n libmpx_la_LDFLAGS = -Wl,--version-script=$(srcdir)/libmpx.map $(link_libmpx) \\\n                     -version-info `grep -v '^\\#' $(srcdir)/libtool-version`"}, {"sha": "17e0ac52b04a021e03c42ce7ba0ec680961b9c1d", "filename": "libmpx/mpxrt/Makefile.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2Fmpxrt%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2Fmpxrt%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxrt%2FMakefile.in?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -62,7 +62,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -256,7 +257,7 @@ ACLOCAL_AMFLAGS = -I $(top_srcdir) -I $(top_srcdir)/config\n @LIBMPX_SUPPORTED_TRUE@AM_CFLAGS = $(XCFLAGS)\n @LIBMPX_SUPPORTED_TRUE@toolexeclib_LTLIBRARIES = libmpx.la\n @LIBMPX_SUPPORTED_TRUE@libmpx_la_SOURCES = mpxrt.c mpxrt-utils.c\n-@LIBMPX_SUPPORTED_TRUE@libmpx_la_CFLAGS = -fPIC\n+@LIBMPX_SUPPORTED_TRUE@libmpx_la_CFLAGS = -fPIC $(XCFLAGS)\n @LIBMPX_SUPPORTED_TRUE@libmpx_la_DEPENDENCIES = libmpx.map\n @LIBMPX_SUPPORTED_TRUE@libmpx_la_LDFLAGS = -Wl,--version-script=$(srcdir)/libmpx.map $(link_libmpx) \\\n @LIBMPX_SUPPORTED_TRUE@                    -version-info `grep -v '^\\#' $(srcdir)/libtool-version`"}, {"sha": "6dba674fff1e781a22fc07830351d72d1f1b3a51", "filename": "libmpx/mpxwrap/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2Fmpxwrap%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2Fmpxwrap%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2FMakefile.am?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -1,11 +1,13 @@\n ALCLOCAL_AMFLAGS = -I .. -I ../config\n AM_CPPFLAGS = -I $(top_srcdir)\n+AM_CFLAGS = $(XCFLAGS)\n \n # May be used by toolexeclibdir.\n gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n \n libmpxwrappers_la_CFLAGS = -fcheck-pointer-bounds -mmpx -fno-chkp-check-read \\\n-\t\t\t   -fno-chkp-check-write -fno-chkp-use-wrappers -fPIC\n+\t\t\t   -fno-chkp-check-write -fno-chkp-use-wrappers \\\n+\t\t\t   -fPIC $(XCFLAGS)\n libmpxwrappers_la_DEPENDENCIES = libmpxwrappers.map\n libmpxwrappers_la_LDFLAGS = -Wl,--version-script=$(srcdir)/libmpxwrappers.map \\\n                -version-info `grep -v '^\\#' $(srcdir)/libtool-version`"}, {"sha": "6693a09a088aa5a688605c6ffb89e88ec88479fb", "filename": "libmpx/mpxwrap/Makefile.in", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abccc074bb741574b00b078277b711194310c497/libmpx%2Fmpxwrap%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abccc074bb741574b00b078277b711194310c497/libmpx%2Fmpxwrap%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fmpxwrap%2FMakefile.in?ref=abccc074bb741574b00b078277b711194310c497", "patch": "@@ -62,7 +62,8 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n \t$(top_srcdir)/../ltoptions.m4 $(top_srcdir)/../ltsugar.m4 \\\n \t$(top_srcdir)/../ltversion.m4 $(top_srcdir)/../lt~obsolete.m4 \\\n \t$(top_srcdir)/acinclude.m4 $(top_srcdir)/../libtool.m4 \\\n-\t$(top_srcdir)/configure.ac\n+\t$(top_srcdir)/../config/enable.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n@@ -249,11 +250,13 @@ top_builddir = @top_builddir@\n top_srcdir = @top_srcdir@\n ALCLOCAL_AMFLAGS = -I .. -I ../config\n AM_CPPFLAGS = -I $(top_srcdir)\n+AM_CFLAGS = $(XCFLAGS)\n \n # May be used by toolexeclibdir.\n gcc_version := $(shell @get_gcc_base_ver@ $(top_srcdir)/../gcc/BASE-VER)\n libmpxwrappers_la_CFLAGS = -fcheck-pointer-bounds -mmpx -fno-chkp-check-read \\\n-\t\t\t   -fno-chkp-check-write -fno-chkp-use-wrappers -fPIC\n+\t\t\t   -fno-chkp-check-write -fno-chkp-use-wrappers \\\n+\t\t\t   -fPIC $(XCFLAGS)\n \n libmpxwrappers_la_DEPENDENCIES = libmpxwrappers.map\n libmpxwrappers_la_LDFLAGS = -Wl,--version-script=$(srcdir)/libmpxwrappers.map \\"}]}