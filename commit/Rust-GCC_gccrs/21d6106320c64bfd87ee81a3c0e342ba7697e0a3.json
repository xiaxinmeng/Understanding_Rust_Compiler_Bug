{"sha": "21d6106320c64bfd87ee81a3c0e342ba7697e0a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFkNjEwNjMyMGM2NGJmZDg3ZWU4MWEzYzBlMzQyYmE3Njk3ZTBhMw==", "commit": {"author": {"name": "Max Ostapenko", "email": "m.ostapenko@partner.samsung.com", "date": "2015-10-21T07:51:03Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2015-10-21T07:51:03Z"}, "message": "sanitizer_stacktrace.cc (GetCanonicFrame): Assume we compiled code with GCC when extracting the caller PC for ARM if...\n\nlibsanitizer/\n\n\t* sanitizer_common/sanitizer_stacktrace.cc (GetCanonicFrame): Assume we\n\tcompiled code with GCC when extracting the caller PC for ARM if no\n\tvalid frame pointer is available.\n\nFrom-SVN: r229115", "tree": {"sha": "7f623e5c442aab66f9a863b9042ba31de703ef00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f623e5c442aab66f9a863b9042ba31de703ef00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21d6106320c64bfd87ee81a3c0e342ba7697e0a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d6106320c64bfd87ee81a3c0e342ba7697e0a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21d6106320c64bfd87ee81a3c0e342ba7697e0a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21d6106320c64bfd87ee81a3c0e342ba7697e0a3/comments", "author": null, "committer": null, "parents": [{"sha": "15ebe1fe46a75067b027128e35d75b17a5d4e299", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ebe1fe46a75067b027128e35d75b17a5d4e299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ebe1fe46a75067b027128e35d75b17a5d4e299"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "2ed4cc321913f0dea1d811323c5b88c90cadc9be", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21d6106320c64bfd87ee81a3c0e342ba7697e0a3/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21d6106320c64bfd87ee81a3c0e342ba7697e0a3/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=21d6106320c64bfd87ee81a3c0e342ba7697e0a3", "patch": "@@ -1,3 +1,9 @@\n+2015-10-21  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n+\n+\t* sanitizer_common/sanitizer_stacktrace.cc (GetCanonicFrame): Assume we\n+\tcompiled code with GCC when extracting the caller PC for ARM if no\n+\tvalid frame pointer is available.\n+\n 2015-10-21  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \tPR bootstrap/63888"}, {"sha": "796d472a1eba948bbdad06aac920f4ba7d9e75ae", "filename": "libsanitizer/sanitizer_common/sanitizer_stacktrace.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21d6106320c64bfd87ee81a3c0e342ba7697e0a3/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21d6106320c64bfd87ee81a3c0e342ba7697e0a3/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_stacktrace.cc?ref=21d6106320c64bfd87ee81a3c0e342ba7697e0a3", "patch": "@@ -60,8 +60,8 @@ static inline uhwptr *GetCanonicFrame(uptr bp,\n   // Nope, this does not look right either. This means the frame after next does\n   // not have a valid frame pointer, but we can still extract the caller PC.\n   // Unfortunately, there is no way to decide between GCC and LLVM frame\n-  // layouts. Assume LLVM.\n-  return bp_prev;\n+  // layouts. Assume GCC.\n+  return bp_prev - 1;\n #else\n   return (uhwptr*)bp;\n #endif"}]}