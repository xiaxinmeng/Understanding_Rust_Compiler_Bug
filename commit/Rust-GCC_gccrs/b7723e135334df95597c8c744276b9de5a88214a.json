{"sha": "b7723e135334df95597c8c744276b9de5a88214a", "node_id": "C_kwDOANBUbNoAKGI3NzIzZTEzNTMzNGRmOTU1OTdjOGM3NDQyNzZiOWRlNWE4ODIxNGE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-22T12:30:44Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-29T09:26:33Z"}, "message": "support -gz=zstd for both linker and assembler\n\n\tPR driver/106897\n\ngcc/ChangeLog:\n\n\t* common.opt: Add -gz=zstd value.\n\t* configure.ac: Detect --compress-debug-sections=zstd\n\tfor both linker and assembler.\n\t* configure: Regenerate.\n\t* gcc.cc (LINK_COMPRESS_DEBUG_SPEC): Handle -gz=zstd.\n\t(ASM_COMPRESS_DEBUG_SPEC): Likewise.", "tree": {"sha": "ac7ee403bfe7a33f2e0e9c469e7622dcea2fa7fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac7ee403bfe7a33f2e0e9c469e7622dcea2fa7fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7723e135334df95597c8c744276b9de5a88214a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7723e135334df95597c8c744276b9de5a88214a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7723e135334df95597c8c744276b9de5a88214a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7723e135334df95597c8c744276b9de5a88214a/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b0d780514131e09634b01ab3ec43a9a85aecb3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0d780514131e09634b01ab3ec43a9a85aecb3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0d780514131e09634b01ab3ec43a9a85aecb3b"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "58dc1a0a78059d00617cee6b917b6b3cbd9669e4", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7723e135334df95597c8c744276b9de5a88214a/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7723e135334df95597c8c744276b9de5a88214a/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=b7723e135334df95597c8c744276b9de5a88214a", "patch": "@@ -3419,7 +3419,10 @@ EnumValue\n Enum(compressed_debug_sections) String(zlib) Value(1)\n \n EnumValue\n-Enum(compressed_debug_sections) String(zlib-gnu) Value(2)\n+Enum(compressed_debug_sections) String(zstd) Value(2)\n+\n+EnumValue\n+Enum(compressed_debug_sections) String(zlib-gnu) Value(3)\n \n gz\n Common Driver"}, {"sha": "ce4e1859e1f665c66b422a4b452cb1510dbaa589", "filename": "gcc/configure", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7723e135334df95597c8c744276b9de5a88214a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7723e135334df95597c8c744276b9de5a88214a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=b7723e135334df95597c8c744276b9de5a88214a", "patch": "@@ -29727,13 +29727,16 @@ else\n    if $gcc_cv_as --compress-debug-sections -o conftest.o conftest.s 2>&1 | grep -i warning > /dev/null\n    then\n      gcc_cv_as_compress_debug=0\n-   # Since binutils 2.26, gas supports --compress-debug-sections=zlib,\n-   # defaulting to the ELF gABI format.\n    elif $gcc_cv_as --compress-debug-sections=zlib -o conftest.o conftest.s > /dev/null 2>&1\n    then\n      gcc_cv_as_compress_debug=1\n      gcc_cv_as_compress_debug_option=\"--compress-debug-sections\"\n      gcc_cv_as_no_compress_debug_option=\"--nocompress-debug-sections\"\n+     # Since binutils 2.40, gas supports --compress-debug-sections=zstd.\n+     if $gcc_cv_as --compress-debug-sections=zstd -o conftest.o conftest.s > /dev/null 2>&1\n+     then\n+       gcc_cv_as_compress_debug=2\n+     fi\n    else\n      gcc_cv_as_compress_debug=0\n    fi\n@@ -30251,6 +30254,10 @@ $as_echo_n \"checking linker for compressed debug sections... \" >&6; }\n if $gcc_cv_ld --help 2>&1 | grep -- '--compress-debug-sections.*\\<zlib-gabi\\>' > /dev/null; then\n     gcc_cv_ld_compress_debug=1\n     gcc_cv_ld_compress_debug_option=\"--compress-debug-sections\"\n+    # Detect zstd debug section compression support\n+    if $gcc_cv_ld --help 2>&1 | grep -- '--compress-debug-sections.*\\<zstd\\>' > /dev/null; then\n+      gcc_cv_ld_compress_debug=2\n+    fi\n else\n   case \"${target}\" in\n     *-*-solaris2*)"}, {"sha": "b6bafa8b7d692b33585d8e811872a08524861c9a", "filename": "gcc/configure.ac", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7723e135334df95597c8c744276b9de5a88214a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7723e135334df95597c8c744276b9de5a88214a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=b7723e135334df95597c8c744276b9de5a88214a", "patch": "@@ -5732,13 +5732,16 @@ gcc_GAS_CHECK_FEATURE([compressed debug sections],\n    if $gcc_cv_as --compress-debug-sections -o conftest.o conftest.s 2>&1 | grep -i warning > /dev/null\n    then\n      gcc_cv_as_compress_debug=0\n-   # Since binutils 2.26, gas supports --compress-debug-sections=zlib,\n-   # defaulting to the ELF gABI format.\n    elif $gcc_cv_as --compress-debug-sections=zlib -o conftest.o conftest.s > /dev/null 2>&1\n    then\n      gcc_cv_as_compress_debug=1\n      gcc_cv_as_compress_debug_option=\"--compress-debug-sections\"\n      gcc_cv_as_no_compress_debug_option=\"--nocompress-debug-sections\"\n+     # Since binutils 2.40, gas supports --compress-debug-sections=zstd.\n+     if $gcc_cv_as --compress-debug-sections=zstd -o conftest.o conftest.s > /dev/null 2>&1\n+     then\n+       gcc_cv_as_compress_debug=2\n+     fi\n    else\n      gcc_cv_as_compress_debug=0\n    fi])\n@@ -6127,6 +6130,10 @@ AC_MSG_CHECKING(linker for compressed debug sections)\n if $gcc_cv_ld --help 2>&1 | grep -- '--compress-debug-sections.*\\<zlib-gabi\\>' > /dev/null; then\n     gcc_cv_ld_compress_debug=1\n     gcc_cv_ld_compress_debug_option=\"--compress-debug-sections\"\n+    # Detect zstd debug section compression support\n+    if $gcc_cv_ld --help 2>&1 | grep -- '--compress-debug-sections.*\\<zstd\\>' > /dev/null; then\n+      gcc_cv_ld_compress_debug=2\n+    fi\n else\n changequote(,)dnl\n   case \"${target}\" in"}, {"sha": "2ffbbc0bf2abf81ef281db88cb058a017fd391e5", "filename": "gcc/gcc.cc", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7723e135334df95597c8c744276b9de5a88214a/gcc%2Fgcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7723e135334df95597c8c744276b9de5a88214a/gcc%2Fgcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.cc?ref=b7723e135334df95597c8c744276b9de5a88214a", "patch": "@@ -835,6 +835,14 @@ proper position among the other output files.  */\n #define LINK_COMPRESS_DEBUG_SPEC \\\n \t\" %{gz|gz=zlib:\"  LD_COMPRESS_DEBUG_OPTION \"=zlib}\" \\\n \t\" %{gz=none:\"\t  LD_COMPRESS_DEBUG_OPTION \"=none}\" \\\n+\t\" %{gz*:%e-gz=zstd is not supported in this configuration} \" \\\n+\t\" %{gz=zlib-gnu:}\" /* Ignore silently zlib-gnu option value.  */\n+#elif HAVE_LD_COMPRESS_DEBUG == 2\n+/* ELF gABI style and ZSTD.  */\n+#define LINK_COMPRESS_DEBUG_SPEC \\\n+\t\" %{gz|gz=zlib:\"  LD_COMPRESS_DEBUG_OPTION \"=zlib}\" \\\n+\t\" %{gz=none:\"\t  LD_COMPRESS_DEBUG_OPTION \"=none}\" \\\n+\t\" %{gz=zstd:\"\t  LD_COMPRESS_DEBUG_OPTION \"=zstd}\" \\\n \t\" %{gz=zlib-gnu:}\" /* Ignore silently zlib-gnu option value.  */\n #else\n #error Unknown value for HAVE_LD_COMPRESS_DEBUG.\n@@ -890,6 +898,13 @@ proper position among the other output files.  */\n \t\" %{gz|gz=zlib:\"  AS_COMPRESS_DEBUG_OPTION \"=zlib}\" \\\n \t\" %{gz=none:\"\t  AS_COMPRESS_DEBUG_OPTION \"=none}\" \\\n \t\" %{gz=zlib-gnu:}\" /* Ignore silently zlib-gnu option value.  */\n+#elif HAVE_AS_COMPRESS_DEBUG == 2\n+/* ELF gABI style and ZSTD.  */\n+#define ASM_COMPRESS_DEBUG_SPEC \\\n+\t\" %{gz|gz=zlib:\"  AS_COMPRESS_DEBUG_OPTION \"=zlib}\" \\\n+\t\" %{gz=none:\"\t  AS_COMPRESS_DEBUG_OPTION \"=none}\" \\\n+\t\" %{gz=zstd:\"\t  AS_COMPRESS_DEBUG_OPTION \"=zstd}\" \\\n+\t\" %{gz=zlib-gnu:}\" /* Ignore silently zlib-gnu option value.  */\n #else\n #error Unknown value for HAVE_AS_COMPRESS_DEBUG.\n #endif"}]}