{"sha": "f25507d041de4df6fffabedbed57c07ecff0d9ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI1NTA3ZDA0MWRlNGRmNmZmZmFiZWRiZWQ1N2MwN2VjZmYwZDlhYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-01-10T18:58:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-01-10T18:58:08Z"}, "message": "re PR tree-optimization/88792 (wrong-code in RPO VN since r263875)\n\n2019-01-10  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/88792\n\t* tree-ssa-pre.c (get_representative_for): Do not return a\n\tvalue-number here.\n\n\t* gcc.dg/torture/pr88792.c: New testcase.\n\nFrom-SVN: r267821", "tree": {"sha": "8491328f395b92a8c5ba25c92f141041b8e25044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8491328f395b92a8c5ba25c92f141041b8e25044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f25507d041de4df6fffabedbed57c07ecff0d9ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25507d041de4df6fffabedbed57c07ecff0d9ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f25507d041de4df6fffabedbed57c07ecff0d9ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f25507d041de4df6fffabedbed57c07ecff0d9ab/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bebf94afe55f257942ca4bd378b4006f1f17a0c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebf94afe55f257942ca4bd378b4006f1f17a0c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebf94afe55f257942ca4bd378b4006f1f17a0c8"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "a0276f28834af0cfb7fe243ac133fb29d86f510c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25507d041de4df6fffabedbed57c07ecff0d9ab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25507d041de4df6fffabedbed57c07ecff0d9ab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f25507d041de4df6fffabedbed57c07ecff0d9ab", "patch": "@@ -1,3 +1,9 @@\n+2019-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88792\n+\t* tree-ssa-pre.c (get_representative_for): Do not return a\n+\tvalue-number here.\n+\n 2019-01-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/84877"}, {"sha": "ef231a2ac203bedfe9a6619f0c5f419f1e1760df", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25507d041de4df6fffabedbed57c07ecff0d9ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25507d041de4df6fffabedbed57c07ecff0d9ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f25507d041de4df6fffabedbed57c07ecff0d9ab", "patch": "@@ -1,3 +1,8 @@\n+2019-01-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/88792\n+\t* gcc.dg/torture/pr88792.c: New testcase.\n+\n 2019-01-10  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/86322"}, {"sha": "e7f8fc0a6242fc9024479253dfe50962c47634c2", "filename": "gcc/testsuite/gcc.dg/torture/pr88792.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25507d041de4df6fffabedbed57c07ecff0d9ab/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr88792.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25507d041de4df6fffabedbed57c07ecff0d9ab/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr88792.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr88792.c?ref=f25507d041de4df6fffabedbed57c07ecff0d9ab", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do run } */\n+\n+int one = 1;\n+\n+char\n+__attribute__((noipa))\n+foo(char v)\n+{\n+  int modec;\n+\n+  if (one)\n+    {\n+      modec = ((v < 'A' || v > 'Z') ? v : v + ('a' - 'A'));\n+      if (modec != 't' && modec != 'c' && modec != 'g')\n+\tmodec = 0;\n+    }\n+  else\n+    modec = 'g';\n+\n+  return modec;\n+}\n+\n+int main(int argc, char **argv)\n+{\n+  char c = 't';\n+  int r = foo (c);\n+\n+  if (r != c)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}, {"sha": "3f38371cb21a205ad745972ec69f518f2e8e4ad1", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f25507d041de4df6fffabedbed57c07ecff0d9ab/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f25507d041de4df6fffabedbed57c07ecff0d9ab/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=f25507d041de4df6fffabedbed57c07ecff0d9ab", "patch": "@@ -1262,7 +1262,7 @@ get_representative_for (const pre_expr e, basic_block b = NULL)\n   switch (e->kind)\n     {\n     case NAME:\n-      return VN_INFO (PRE_EXPR_NAME (e))->valnum;\n+      return PRE_EXPR_NAME (e);\n     case CONSTANT:\n       return PRE_EXPR_CONSTANT (e);\n     case NARY:"}]}