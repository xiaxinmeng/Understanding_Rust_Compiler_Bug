{"sha": "0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM1YzBiNGNkNWNjMDI4ZTMwZTBmYTEyNDVlNTQ2Zjc2MWQwYzMwZQ==", "commit": {"author": {"name": "Sebastian Huber", "email": "sebastian.huber@embedded-brains.de", "date": "2013-02-11T23:11:12Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2013-02-11T23:11:12Z"}, "message": "2013-02-11  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n\n        * lib/target-supports.exp\n        (check_effective_target_powerpc_eabi_ok): New.\n        * gcc.target/powerpc/ppc-eabi.c: Use require effective target\n        powerpc_eabi_ok.\n        * gcc.target/powerpc/ppc-sdata-1.c: Likewise.\n        * gcc.target/powerpc/spe-small-data-2.c: Likewise. Do not run, compile\n        only.\n        * gcc.target/powerpc/ppc-sdata-2.c: Add powerpc-*-rtems*.\n        * gcc.target/powerpc/pr51623.c: Likewise.\n        * gcc.target/powerpc/ppc-stackalign-1.c: Likewise.\n        * gcc.target/powerpc/ppc-ldstruct.c: Likewise.\n\nFrom-SVN: r195957", "tree": {"sha": "98174f44e4efaf83a5e399cf66c20808aa0ab371", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98174f44e4efaf83a5e399cf66c20808aa0ab371"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/comments", "author": {"login": "sebhub", "id": 932056, "node_id": "MDQ6VXNlcjkzMjA1Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/932056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebhub", "html_url": "https://github.com/sebhub", "followers_url": "https://api.github.com/users/sebhub/followers", "following_url": "https://api.github.com/users/sebhub/following{/other_user}", "gists_url": "https://api.github.com/users/sebhub/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebhub/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebhub/subscriptions", "organizations_url": "https://api.github.com/users/sebhub/orgs", "repos_url": "https://api.github.com/users/sebhub/repos", "events_url": "https://api.github.com/users/sebhub/events{/privacy}", "received_events_url": "https://api.github.com/users/sebhub/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a52ccb3b897320a90cc86709249db167605a42f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a52ccb3b897320a90cc86709249db167605a42f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a52ccb3b897320a90cc86709249db167605a42f"}], "stats": {"total": 43, "additions": 36, "deletions": 7}, "files": [{"sha": "2add53a87d90acd705ee5ab19c8e145f9c21a31c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -1,3 +1,17 @@\n+2013-02-11  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_powerpc_eabi_ok): New.\n+\t* gcc.target/powerpc/ppc-eabi.c: Use require effective target\n+\tpowerpc_eabi_ok.\n+\t* gcc.target/powerpc/ppc-sdata-1.c: Likewise.\n+\t* gcc.target/powerpc/spe-small-data-2.c: Likewise. Do not run, compile\n+\tonly.\n+\t* gcc.target/powerpc/ppc-sdata-2.c: Add powerpc-*-rtems*.\n+\t* gcc.target/powerpc/pr51623.c: Likewise.\n+\t* gcc.target/powerpc/ppc-stackalign-1.c: Likewise.\n+\t* gcc.target/powerpc/ppc-ldstruct.c: Likewise.\n+\n 2013-02-11  Alexander Potapenko <glider@google.com>\n \t    Jack Howarth  <howarth@bromo.med.uc.edu>\n \t    Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "cd15586c29e1a24390f048081eada6bf11eb6e99", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-eabi.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-eabi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-eabi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-eabi.c?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -1,4 +1,5 @@\n /* PR target/16952 */\n-/* { dg-do compile { target { powerpc*-*-linux* && ilp32 } } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_eabi_ok } */\n /* { dg-options \"-meabi -mrelocatable\" } */\n char *s = \"boo\";"}, {"sha": "ffb4264773fdf9b54ab4a7646b92cb0da1fe44cd", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-ldstruct.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-ldstruct.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-ldstruct.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-ldstruct.c?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target powerpc*-*-eabi* powerpc*-*-elf* powerpc*-*-linux* } } */\n+/* { dg-do run { target powerpc*-*-eabi* powerpc*-*-elf* powerpc*-*-linux* powerpc*-*-rtems* } } */\n /* { dg-options \"-O -mlong-double-128\" } */\n \n #include <stdlib.h>"}, {"sha": "efd5a5ec40c11ba5164aca5d734be5fdb9b907ec", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-sdata-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-1.c?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -1,5 +1,6 @@\n-/* { dg-do compile { target { { powerpc*-*-linux* && ilp32 } || { powerpc-*-eabi* } } } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fno-common -G 8 -meabi -msdata=eabi\" } */\n+/* { dg-require-effective-target powerpc_eabi_ok } */\n /* { dg-require-effective-target nonpic } */\n /* { dg-final { scan-assembler \"\\\\.section\\[ \\t\\]\\\\.sdata,\" } } */\n /* { dg-final { scan-assembler \"\\\\.section\\[ \\t\\]\\\\.sdata2,\" } } */"}, {"sha": "570c81f7e33033d2cce3bb362877dbce4851b660", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-sdata-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-sdata-2.c?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { { powerpc*-*-linux* && ilp32 } || { powerpc-*-eabi* } } } } */\n+/* { dg-do compile { target { { powerpc*-*-linux* && ilp32 } || { powerpc-*-eabi* powerpc-*-rtems* } } } } */\n /* { dg-options \"-O2 -fno-common -G 8 -msdata=sysv\" } */\n /* { dg-require-effective-target nonpic } */\n /* { dg-final { scan-assembler \"\\\\.section\\[ \\t\\]\\\\.sdata,\" } } */"}, {"sha": "59bd39fcf16848ba26b2748e926026150a6f3865", "filename": "gcc/testsuite/gcc.target/powerpc/ppc-stackalign-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-stackalign-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-stackalign-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc-stackalign-1.c?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do run { target powerpc*-*-linux* powerpc*-*-eabi* } } */\n+/* { dg-do run { target powerpc*-*-linux* powerpc*-*-eabi* powerpc-*-rtems* } } */\n /* { dg-options {} } */\n \n /* Test stack pointer alignment against variable alloca.  */"}, {"sha": "2ac118c7fac1751776f0b333a606265c734edf3f", "filename": "gcc/testsuite/gcc.target/powerpc/pr51623.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr51623.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr51623.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr51623.c?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -1,5 +1,5 @@\n /* PR target/51623 */\n-/* { dg-do compile { target { { powerpc*-*-linux* && ilp32 } || { powerpc-*-eabi* } } } } */\n+/* { dg-do compile { target { { powerpc*-*-linux* && ilp32 } || { powerpc-*-eabi* powerpc-*-rtems* } } } } */\n /* { dg-options \"-mrelocatable -ffreestanding\" } */\n \n /* This generated an error, since the compiler was calling"}, {"sha": "5354e49f470cb7544f37f40fca256aadf6b683b6", "filename": "gcc/testsuite/gcc.target/powerpc/spe-small-data-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-small-data-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-small-data-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fspe-small-data-2.c?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -1,5 +1,6 @@\n /* Verify that we don't ICE trying to put float data in .sdata2.  */\n-/* { dg-do run { target { powerpc*-*-linux* && powerpc_spe } } } */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target powerpc_eabi_ok } */\n /* { dg-options \"-msdata=eabi -mcall-eabi -G 8\" } */\n \n double x;"}, {"sha": "a146f1732c9cef013f4beaf0740d1a451a6e3058", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=0c5c0b4cd5cc028e30e0fa1245e546f761d0c30e", "patch": "@@ -2605,6 +2605,18 @@ proc check_effective_target_arm_prefer_ldrd_strd { } {\n     }  \"-O2 -mthumb\" ]\n }\n \n+# Return 1 if this is a PowerPC target supporting -meabi.\n+\n+proc check_effective_target_powerpc_eabi_ok { } {\n+    if { [istarget powerpc*-*-*] } {\n+\treturn [check_no_compiler_messages powerpc_eabi_ok object {\n+\t    int dummy;\n+\t} \"-meabi\"]\n+    } else {\n+\treturn 0\n+    }\n+}\n+\n # Return 1 if this is a PowerPC target with floating-point registers.\n \n proc check_effective_target_powerpc_fprs { } {"}]}