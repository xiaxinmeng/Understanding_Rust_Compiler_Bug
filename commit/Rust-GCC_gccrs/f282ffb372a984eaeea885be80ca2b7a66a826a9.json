{"sha": "f282ffb372a984eaeea885be80ca2b7a66a826a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjI4MmZmYjM3MmE5ODRlYWVlYTg4NWJlODBjYTJiN2E2NmE4MjZhOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2002-02-23T12:59:09Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2002-02-23T12:59:09Z"}, "message": "contribute.texi, [...]: Remove trailing whitespace.\n\n\t* doc/contribute.texi, doc/extend.texi, doc/install.texi,\n\tdoc/invoke.texi, doc/md.texi, doc/passes.texi, doc/rtl.texi,\n\tdoc/standards.texi, doc/tm.texi: Remove trailing whitespace.\n\nFrom-SVN: r49991", "tree": {"sha": "705fd94cb497758010b990b1fdd8a5751a1557c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/705fd94cb497758010b990b1fdd8a5751a1557c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f282ffb372a984eaeea885be80ca2b7a66a826a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f282ffb372a984eaeea885be80ca2b7a66a826a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f282ffb372a984eaeea885be80ca2b7a66a826a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f282ffb372a984eaeea885be80ca2b7a66a826a9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0210b33b54f8a1581d2aec1ac36ee2947bd7600b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0210b33b54f8a1581d2aec1ac36ee2947bd7600b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0210b33b54f8a1581d2aec1ac36ee2947bd7600b"}], "stats": {"total": 112, "additions": 59, "deletions": 53}, "files": [{"sha": "7845935daa9737a13e1bd1720a294a55daf2bd2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -1,3 +1,9 @@\n+2002-02-23  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* doc/contribute.texi, doc/extend.texi, doc/install.texi,\n+\tdoc/invoke.texi, doc/md.texi, doc/passes.texi, doc/rtl.texi,\n+\tdoc/standards.texi, doc/tm.texi: Remove trailing whitespace.\n+\n 2002-02-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR optimization/5747"}, {"sha": "0aec26842b8fd414cef2bb8427141ab6c48f60da", "filename": "gcc/doc/contribute.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fcontribute.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fcontribute.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcontribute.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -15,7 +15,7 @@ If you would like to work on improvements to GCC, please read the\n advice at these URLs:\n \n @smallexample\n-@uref{http://gcc.gnu.org/contribute.html} \n+@uref{http://gcc.gnu.org/contribute.html}\n @uref{http://gcc.gnu.org/contributewhy.html}\n @end smallexample\n "}, {"sha": "cc4e25d0feb9abf093b7d9eca3701e4de8739e7f", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -2556,7 +2556,7 @@ An attribute specifier list may appear immediately before the comma,\n than a function definition.  At present, such attribute specifiers apply\n to the declared object or function, but in future they may attach to the\n outermost adjacent declarator.  In simple cases there is no difference,\n-but, for example, in \n+but, for example, in\n \n @smallexample\n void (****f)(void) __attribute__((noreturn));\n@@ -2615,7 +2615,7 @@ declaration @code{T D} specifies the type\n @var{type-qualifier-and-attribute-specifier-list} @var{Type}'' for\n @var{ident}.\n \n-For example, \n+For example,\n \n @smallexample\n void (__attribute__((noreturn)) ****f) (void);\n@@ -4634,7 +4634,7 @@ for (i = 0; i < n; i++)\n   @}\n @end smallexample\n \n-Data prefetch does not generate faults if @var{addr} is invalid, but \n+Data prefetch does not generate faults if @var{addr} is invalid, but\n the address expression itself must be valid.  For example, a prefetch\n of @code{p->next} will not fault if @code{p->next} is not a valid\n address, but evaluation will fault if @code{p} is not a valid address.\n@@ -5713,7 +5713,7 @@ vector signed int vec_all_gt (vector unsigned char,\n vector signed int vec_all_gt (vector signed char, vector signed char);\n vector signed int vec_all_gt (vector signed short,\n                               vector unsigned short);\n-vector signed int vec_all_gt (vector unsigned short,    \n+vector signed int vec_all_gt (vector unsigned short,\n                               vector signed short);\n vector signed int vec_all_gt (vector unsigned short,\n                               vector unsigned short);"}, {"sha": "afffb870b83eb04a7f4059db6b560b9429112bf0", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -615,7 +615,7 @@ single-float, biendian, softfloat.\n \n @item powerpc*-*-*, rs6000*-*-*\n aix64, pthread, softfloat, powercpu, powerpccpu, powerpcos, biendian,\n-sysv, aix. \n+sysv, aix.\n \n @end table\n \n@@ -863,7 +863,7 @@ Now that GCC is configured, you are ready to build the compiler and\n runtime libraries.\n \n We @strong{highly} recommend that GCC be built using GNU make;\n-other versions may work, then again they might not.  \n+other versions may work, then again they might not.\n GNU make is required for compiling GNAT, the Ada compiler.\n \n (For example, many broken versions of make will fail if you use the\n@@ -921,7 +921,7 @@ gperf.\n @item\n Build target tools for use by the compiler such as binutils (bfd,\n binutils, gas, gprof, ld, and opcodes)\n-if they have been individually linked \n+if they have been individually linked\n or moved into the top level GCC source tree before configuring.\n \n @item\n@@ -1050,7 +1050,7 @@ source distribution):\n @end example\n \n At the moment, the GNAT library and several tools for GNAT are not built\n-by @samp{make bootstrap}.  You have to invoke \n+by @samp{make bootstrap}.  You have to invoke\n @samp{make gnatlib_and_tools} in the @file{@var{objdir}/gcc}\n subdirectory before proceeding with the next steps.\n \n@@ -1059,10 +1059,10 @@ following commands (assuming @command{make} is GNU make):\n \n @example\n     cd @var{objdir}\n-    @var{srcdir}/configure --enable-languages=c,ada \n+    @var{srcdir}/configure --enable-languages=c,ada\n     cd @var{srcdir}/gcc/ada\n     touch treeprs.ads [es]info.h nmake.ad[bs]\n-    cd @var{objdir}    \n+    cd @var{objdir}\n     make bootstrap\n     cd gcc\n     make gnatlib_and_tools\n@@ -2167,7 +2167,7 @@ bootstrap}.\n @heading @anchor{hppa*-hp-hpux11}hppa*-hp-hpux11\n \n GCC 3.0 supports HP-UX 11.  You must use GNU binutils 2.11 or above on\n-this platform.  Thread support is not currently implemented for this \n+this platform.  Thread support is not currently implemented for this\n platform, so @option{--enable-threads} does not work.\n See @uref{http://gcc.gnu.org/ml/gcc-prs/2002-01/msg00551.html}\n and @uref{http://gcc.gnu.org/ml/gcc-bugs/2002-01/msg00663.html}.\n@@ -2777,7 +2777,7 @@ does not happen on 3.1.\n You absolutely @strong{must} use GNU sed and GNU make on this platform.\n \n \n-On NeXTSTEP 3.x where x < 3 the build of GCC will abort during  \n+On NeXTSTEP 3.x where x < 3 the build of GCC will abort during\n stage1 with an error message like this:\n \n @example\n@@ -3082,10 +3082,10 @@ to increase its table size for switch statements with the\n optimization option, you also need to use @option{-Olimit 3000}.\n \n To enable debugging under IRIX 5, you must use GNU @command{as} 2.11.2\n-or later, \n+or later,\n and use the @option{--with-gnu-as} configure option when configuring GCC.\n GNU @command{as} is distributed as part of the binutils package.\n-When using release 2.11.2, you need to apply a patch \n+When using release 2.11.2, you need to apply a patch\n @uref{http://sources.redhat.com/ml/binutils/2001-07/msg00352.html,,http://sources.redhat.com/ml/binutils/2001-07/msg00352.html}\n which will be included in the next release of binutils.\n \n@@ -3360,14 +3360,14 @@ can be safely ignored; the stage 3 compiler is correct.\n <hr>\n @end html\n @heading @anchor{s390-*-linux*}s390-*-linux*\n-S/390 system running Linux for S/390@. \n+S/390 system running Linux for S/390@.\n \n @html\n </p>\n <hr>\n @end html\n @heading @anchor{s390x-*-linux*}s390x-*-linux*\n-zSeries system (64 Bit) running Linux for zSeries@. \n+zSeries system (64 Bit) running Linux for zSeries@.\n \n @html\n </p>\n@@ -3488,7 +3488,7 @@ the hosts that run GCC itself.  Second, Sun says that 106950-03 is\n only a partial fix for bug 4210064, but Sun doesn't know whether the\n partial fix is adequate for GCC@.  Revision -08 or later should fix\n the bug.  The current (as of 2001-09-24) revision is -14, and is included in\n-the Solaris 7 Recommended Patch Cluster. \n+the Solaris 7 Recommended Patch Cluster.\n @end itemize\n \n \n@@ -3685,7 +3685,7 @@ This target is for Xtensa systems running GNU/Linux.  It supports ELF\n shared objects and the GNU C library (glibc).  It also generates\n position-independent code (PIC) regardless of whether the\n @option{-fpic} or @option{-fPIC} options are used.  In other\n-respects, this target is the same as the \n+respects, this target is the same as the\n @uref{#xtensa-*-elf,,@samp{xtensa-*-elf}} target.\n \n @html"}, {"sha": "1b91a10f5c0889b4913c658ba8c846302e2faff8", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -2586,7 +2586,7 @@ appropriate may not be detected.  This option has no effect unless\n @item -Wno-deprecated-declarations\n @opindex Wno-deprecated-declarations\n Do not warn about uses of functions, variables, and types marked as\n-deprecated by using the @code{deprecated} attribute. \n+deprecated by using the @code{deprecated} attribute.\n (@pxref{Function Attributes}, @pxref{Variable Attributes},\n @pxref{Type Attributes}.)\n \n@@ -8319,7 +8319,7 @@ arithmetic instead of IEEE single and double precision.\n @opindex mexplicit-relocs\n @opindex mno-explicit-relocs\n Older Alpha assemblers provided no way to generate symbol relocations\n-except via assembler macros.  Use of these macros does not allow \n+except via assembler macros.  Use of these macros does not allow\n optimial instruction scheduling.  GNU binutils as of version 2.12\n supports a new syntax that allows the compiler to explicitly mark\n which relocations should apply to which instructions.  This option\n@@ -8330,7 +8330,7 @@ the assembler when it is built and sets the default accordingly.\n @itemx -mlarge-data\n @opindex msmall-data\n @opindex mlarge-data\n-When @option{-mexplicit-relocs} is in effect, static data is \n+When @option{-mexplicit-relocs} is in effect, static data is\n accessed via @dfn{gp-relative} relocations.  When @option{-msmall-data}\n is used, objects 8 bytes long or smaller are placed in a @dfn{small data area}\n (the @code{.sdata} and @code{.sbss} sections) and are accessed via\n@@ -9321,7 +9321,7 @@ generates IEEE floating-point instructions.  This is the default.\n @itemx -mno-backchain\n @opindex mbackchain\n @opindex mno-backchain\n-Generate (or do not generate) code which maintains an explicit \n+Generate (or do not generate) code which maintains an explicit\n backchain within the stack frame that points to the caller's frame.\n This is currently needed to allow debugging.  The default is to\n generate the backchain.\n@@ -9330,8 +9330,8 @@ generate the backchain.\n @itemx -mno-small-exec\n @opindex msmall-exec\n @opindex mno-small-exec\n-Generate (or do not generate) code using the @code{bras} instruction \n-to do subroutine calls. \n+Generate (or do not generate) code using the @code{bras} instruction\n+to do subroutine calls.\n This only works reliably if the total executable size does not\n exceed 64k.  The default is to use the @code{basr} instruction instead,\n which does not have this limitation.\n@@ -9344,14 +9344,14 @@ When @option{-m31} is specified, generate code compliant to the\n Linux for S/390 ABI@.  When @option{-m64} is specified, generate\n code compliant to the Linux for zSeries ABI@.  This allows GCC in\n particular to generate 64-bit instructions.  For the @samp{s390}\n-targets, the default is @option{-m31}, while the @samp{s390x} \n+targets, the default is @option{-m31}, while the @samp{s390x}\n targets default to @option{-m64}.\n \n @item -mmvcle\n @itemx -mno-mvcle\n @opindex mmvcle\n @opindex mno-mvcle\n-Generate (or do not generate) code using the @code{mvcle} instruction \n+Generate (or do not generate) code using the @code{mvcle} instruction\n to perform block moves.  When @option{-mno-mvcle} is specifed,\n use a @code{mvc} loop instead.  This is the default.\n "}, {"sha": "2bb3d1824e9344ac17e1d08dc3f3e30ef9510aab", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -185,10 +185,10 @@ Here is an actual example of an instruction pattern, for the 68000/68020.\n         (match_operand:SI 0 \"general_operand\" \"rm\"))]\n   \"\"\n   \"*\n-@{ \n+@{\n   if (TARGET_68020 || ! ADDRESS_REG_P (operands[0]))\n     return \\\"tstl %0\\\";\n-  return \\\"cmpl #0,%0\\\"; \n+  return \\\"cmpl #0,%0\\\";\n @}\")\n @end example\n \n@@ -200,10 +200,10 @@ This can also be written using braced strings:\n   [(set (cc0)\n         (match_operand:SI 0 \"general_operand\" \"rm\"))]\n   \"\"\n-@{ \n+@{\n   if (TARGET_68020 || ! ADDRESS_REG_P (operands[0]))\n     return \"tstl %0\";\n-  return \"cmpl #0,%0\"; \n+  return \"cmpl #0,%0\";\n @})\n @end example\n \n@@ -2208,7 +2208,7 @@ register.  See the discussion of the @code{SECONDARY_RELOAD_CLASS}\n macro in @pxref{Register Classes}.\n \n There are special restrictions on the form of the @code{match_operand}s\n-used in these patterns.  First, only the predicate for the reload \n+used in these patterns.  First, only the predicate for the reload\n operand is examined, i.e., @code{reload_in} examines operand 1, but not\n the predicates for operand 0 or 2.  Second, there may be only one\n alternative in the constraints.  Third, only a single register class\n@@ -3955,7 +3955,7 @@ are not valid.\n The splitter is allowed to split jump instructions into sequence of\n jumps or create new jumps in while splitting non-jump instructions.  As\n the central flowgraph and branch prediction information needs to be updated,\n-several restriction apply. \n+several restriction apply.\n \n Splitting of jump instruction into sequence that over by another jump\n instruction is always valid, as compiler expect identical behavior of new\n@@ -4004,7 +4004,7 @@ from i386.md:\n   \"TARGET_ZERO_EXTEND_WITH_AND && !optimize_size\"\n   \"#\"\n   \"&& reload_completed\"\n-  [(parallel [(set (match_dup 0) \n+  [(parallel [(set (match_dup 0)\n                    (and:SI (match_dup 0) (const_int 65535)))\n \t      (clobber (reg:CC 17))])]\n   \"\"\n@@ -4041,7 +4041,7 @@ For example:\n \n @smallexample\n \n-(include \"filestuff\") \n+(include \"filestuff\")\n \n @end smallexample\n \n@@ -4050,14 +4050,14 @@ specifies the include file to be in @file{gcc/config/target/filestuff}. The\n directory @file{gcc/config/target} is regarded as the default directory.\n \n \n-Machine descriptions may be split up into smaller more manageable subsections \n-and placed into subdirectories. \n+Machine descriptions may be split up into smaller more manageable subsections\n+and placed into subdirectories.\n \n By specifying:\n \n @smallexample\n \n-(include \"BOGUS/filestuff\") \n+(include \"BOGUS/filestuff\")\n \n @end smallexample\n \n@@ -4066,10 +4066,10 @@ the include file is specified to be in @file{gcc/config/@var{target}/BOGUS/files\n Specifying an absolute path for the include file such as;\n @smallexample\n \n-(include \"/u2/BOGUS/filestuff\") \n+(include \"/u2/BOGUS/filestuff\")\n \n @end smallexample\n-is permitted but is not encouraged. \n+is permitted but is not encouraged.\n \n @subsection RTL Generation Tool Options for Directory Search\n @cindex directory options .md"}, {"sha": "6ca5b856550eb1247a8d6465483aad86217be5c9", "filename": "gcc/doc/passes.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fpasses.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fpasses.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fpasses.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -130,7 +130,7 @@ representation, before converting into RTL code.\n @cindex inline on trees, automatic\n Currently, the main optimization performed here is tree-based\n inlining.\n-This is implemented in @file{tree-inline.c} and used by both C and C++.  \n+This is implemented in @file{tree-inline.c} and used by both C and C++.\n Note that tree based inlining turns off rtx based inlining (since it's more\n powerful, it would be a waste of time to do rtx based inlining in\n addition)."}, {"sha": "2151047ea89a5f8ee5ce72100b3f4c809dbf3599", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -2317,7 +2317,7 @@ either wrap around or use saturating addition depending on the value\n of a special control register:\n \n @example\n-(parallel [(set (reg:SI 2) (unspec:SI [(reg:SI 3) \n+(parallel [(set (reg:SI 2) (unspec:SI [(reg:SI 3)\n                                        (reg:SI 4)] 0))\n            (use (reg:SI 1))])\n @end example"}, {"sha": "eead5c2f61617ff6170cbc7cde46f6a65d052781", "filename": "gcc/doc/standards.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fstandards.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Fstandards.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fstandards.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -164,7 +164,7 @@ recent version, while @uref{http://www.toodarkpark.org/computers/objc/}\n is an older example.  @uref{http://www.gnustep.org} includes useful\n information as well.\n \n-@xref{Top, GNAT Reference Manual, About This Guide, gnat_rm, \n+@xref{Top, GNAT Reference Manual, About This Guide, gnat_rm,\n GNAT Reference Manual}, for information on standard\n conformance and compatibility of the Ada compiler.\n "}, {"sha": "edee7e3a09a0939bf867492d1bcf94eb2917ed05", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f282ffb372a984eaeea885be80ca2b7a66a826a9/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=f282ffb372a984eaeea885be80ca2b7a66a826a9", "patch": "@@ -1604,10 +1604,10 @@ in which function addresses are always even, according to\n @findex TARGET_VTABLE_USES_DESCRIPTORS\n @item TARGET_VTABLE_USES_DESCRIPTORS\n Normally, the C++ compiler uses function pointers in vtables.  This\n-macro allows the target to change to use ``function descriptors'' \n+macro allows the target to change to use ``function descriptors''\n instead.  Function descriptors are found on targets for whom a\n function pointer is actually a small data structure.  Normally the\n-data structure consists of the actual code address plus a data \n+data structure consists of the actual code address plus a data\n pointer to which the function's data is relative.\n \n If vtables are used, the value of this macro should be the number\n@@ -1729,10 +1729,10 @@ exit, if the register is used within the function.\n @cindex call-used register\n @cindex call-clobbered register\n @cindex call-saved register\n-Like @code{CALL_USED_REGISTERS} except this macro doesn't require \n-that the entire set of @code{FIXED_REGISTERS} be included.  \n+Like @code{CALL_USED_REGISTERS} except this macro doesn't require\n+that the entire set of @code{FIXED_REGISTERS} be included.\n (@code{CALL_USED_REGISTERS} must be a superset of @code{FIXED_REGISTERS}).\n-This macro is optional.  If not specified, it defaults to the value \n+This macro is optional.  If not specified, it defaults to the value\n of @code{CALL_USED_REGISTERS}.\n \n @findex HARD_REGNO_CALL_PART_CLOBBERED\n@@ -2805,7 +2805,7 @@ and @file{unwind-ia64.c}.  @var{context} is an @code{_Unwind_Context};\n for the address of the code being executed and @code{context->cfa} for\n the stack pointer value.  If the frame can be decoded, the register save\n addresses should be updated in @var{fs} and the macro should branch to\n-@var{success}.  If the frame cannot be decoded, the macro should do \n+@var{success}.  If the frame cannot be decoded, the macro should do\n nothing.\n @end table\n \n@@ -5770,7 +5770,7 @@ Output assembly directives to switch to section @var{name}.  The section\n should have attributes as specified by @var{flags}, which is a bit mask\n of the @code{SECTION_*} flags defined in @file{output.h}.  If @var{align}\n is nonzero, it contains an alignment in bytes to be used for the section,\n-otherwise some target default should be used.  Only targets that must \n+otherwise some target default should be used.  Only targets that must\n specify an alignment within the section directive need pay attention to\n @var{align} -- we will still use @code{ASM_OUTPUT_ALIGN}.\n @end deftypefn\n@@ -6481,7 +6481,7 @@ Termination functions are handled similarly.\n \n This method will be chosen as the default by @file{target-def.h} if\n @code{TARGET_ASM_NAMED_SECTION} is defined.  A target that does not\n-support arbitrary sections, but does support special designated \n+support arbitrary sections, but does support special designated\n constructor and destructor sections may define @code{CTORS_SECTION_ASM_OP}\n and @code{DTORS_SECTION_ASM_OP} to achieve the same effect.\n \n@@ -6591,7 +6591,7 @@ the object format requires an explicit initialization function, then a\n function called @code{_GLOBAL__DI} will be generated.\n \n This function and the following one are used by collect2 when linking a\n-shared library that needs constructors or destructors, or has DWARF2 \n+shared library that needs constructors or destructors, or has DWARF2\n exception tables embedded in the code.\n \n @item COLLECT_SHARED_FINI_FUNC (@var{stream}, @var{func})\n@@ -6872,7 +6872,7 @@ first variant.\n \n If this macro is defined, you may use constructs of the form\n @smallexample\n-@samp{@{option0|option1|option2@dots{}@}} \n+@samp{@{option0|option1|option2@dots{}@}}\n @end smallexample\n @noindent\n in the output templates of patterns (@pxref{Output Template}) or in the"}]}