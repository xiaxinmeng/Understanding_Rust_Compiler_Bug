{"sha": "e468dd40150ad20fe87d315c2638c572ca44dc3b", "node_id": "C_kwDOANBUbNoAKGU0NjhkZDQwMTUwYWQyMGZlODdkMzE1YzI2MzhjNTcyY2E0NGRjM2I", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2022-11-06T12:41:38Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@xry111.site", "date": "2022-11-12T07:01:09Z"}, "message": "LoongArch: Rename frint_<fmt> to rint<mode>2\n\nUse standard name so __builtin_rint{,f} can be expanded to one\ninstruction.\n\ngcc/ChangeLog:\n\n\t* config/loongarch/loongarch.md (frint_<fmt>): Rename to ..\n\t(rint<mode>2): .. this.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/loongarch/frint.c: New test.", "tree": {"sha": "49d3196ffc367cf52871c674cfbe2fd6b86750ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49d3196ffc367cf52871c674cfbe2fd6b86750ab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e468dd40150ad20fe87d315c2638c572ca44dc3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQSR0PV2MB+STX3t3OisqtIOGecQ4wUCY29EtQAKCRCsqtIOGecQ\n407gAPsEKPRWi/rFT0KBnMkvHrO1UuZ0PV/qyvcgyWgPRPGxKAEA9kZP60zM/bwC\nQWFNcvGbt3Bs73BEX6uE2tdFNL66Gwc=\n=9iXd\n-----END PGP SIGNATURE-----", "payload": "tree 49d3196ffc367cf52871c674cfbe2fd6b86750ab\nparent ba7551485bc5760371462517ec05bc6ba20b3b35\nauthor Xi Ruoyao <xry111@xry111.site> 1667738498 +0800\ncommitter Xi Ruoyao <xry111@xry111.site> 1668236469 +0800\n\nLoongArch: Rename frint_<fmt> to rint<mode>2\n\nUse standard name so __builtin_rint{,f} can be expanded to one\ninstruction.\n\ngcc/ChangeLog:\n\n\t* config/loongarch/loongarch.md (frint_<fmt>): Rename to ..\n\t(rint<mode>2): .. this.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/loongarch/frint.c: New test.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e468dd40150ad20fe87d315c2638c572ca44dc3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e468dd40150ad20fe87d315c2638c572ca44dc3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e468dd40150ad20fe87d315c2638c572ca44dc3b/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba7551485bc5760371462517ec05bc6ba20b3b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7551485bc5760371462517ec05bc6ba20b3b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7551485bc5760371462517ec05bc6ba20b3b35"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "a14ab14ac24feeabfd1de32f4495ef41ca7c9178", "filename": "gcc/config/loongarch/loongarch.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e468dd40150ad20fe87d315c2638c572ca44dc3b/gcc%2Fconfig%2Floongarch%2Floongarch.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e468dd40150ad20fe87d315c2638c572ca44dc3b/gcc%2Fconfig%2Floongarch%2Floongarch.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Floongarch%2Floongarch.md?ref=e468dd40150ad20fe87d315c2638c572ca44dc3b", "patch": "@@ -2012,8 +2012,8 @@\n   [(set_attr \"type\" \"move\")]\n )\n \n-;; Convert floating-point numbers to integers\n-(define_insn \"frint_<fmt>\"\n+;; Round floating-point numbers to integers\n+(define_insn \"rint<mode>2\"\n   [(set (match_operand:ANYF 0 \"register_operand\" \"=f\")\n \t(unspec:ANYF [(match_operand:ANYF 1 \"register_operand\" \"f\")]\n \t\t      UNSPEC_FRINT))]"}, {"sha": "3ee6a8f973a64018e36520686268b876b6f8c90e", "filename": "gcc/testsuite/gcc.target/loongarch/frint.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e468dd40150ad20fe87d315c2638c572ca44dc3b/gcc%2Ftestsuite%2Fgcc.target%2Floongarch%2Ffrint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e468dd40150ad20fe87d315c2638c572ca44dc3b/gcc%2Ftestsuite%2Fgcc.target%2Floongarch%2Ffrint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Floongarch%2Ffrint.c?ref=e468dd40150ad20fe87d315c2638c572ca44dc3b", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mdouble-float\" } */\n+/* { dg-final { scan-assembler \"frint\\\\.s\" } } */\n+/* { dg-final { scan-assembler \"frint\\\\.d\" } } */\n+\n+double\n+my_rint (double a)\n+{\n+  return __builtin_rint (a);\n+}\n+\n+float\n+my_rintf (float a)\n+{\n+  return __builtin_rintf (a);\n+}"}]}