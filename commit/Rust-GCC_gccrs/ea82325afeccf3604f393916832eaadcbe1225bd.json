{"sha": "ea82325afeccf3604f393916832eaadcbe1225bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE4MjMyNWFmZWNjZjM2MDRmMzkzOTE2ODMyZWFhZGNiZTEyMjViZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-07-09T09:29:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-07-09T09:29:30Z"}, "message": "openmp: Change omp_atv_default value and rename omp_atv_sequential to omp_atv_serialized.\n\nWhile this is an OpenMP 5.1 change, it is undesirable to let people use different\nvalues and then deal with ABI backwards compatibility in a year or two.\n\n2020-07-09  Jakub Jelinek  <jakub@redhat.com>\n\n\t* omp.h.in (omp_alloctrait_value_t): Change omp_atv_default from\n\t2 to -1.  Add omp_atv_serialized and define omp_atv_sequential using\n\tit.  Remove __omp_alloctrait_value_max__.\n\t* allocator.c (omp_init_allocator): Handle omp_atv_default for\n\tomp_atk_alignment and omp_atk_pool_size.", "tree": {"sha": "7e61a4ef6bf9b4095e86428c7e9b74ca848cb31e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e61a4ef6bf9b4095e86428c7e9b74ca848cb31e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea82325afeccf3604f393916832eaadcbe1225bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea82325afeccf3604f393916832eaadcbe1225bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea82325afeccf3604f393916832eaadcbe1225bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea82325afeccf3604f393916832eaadcbe1225bd/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edf95e51e53697f3050f076675c26a4cece17741", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edf95e51e53697f3050f076675c26a4cece17741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edf95e51e53697f3050f076675c26a4cece17741"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "76feba71082ccc62d57a87350dd258b10f7c0fc9", "filename": "libgomp/allocator.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea82325afeccf3604f393916832eaadcbe1225bd/libgomp%2Fallocator.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea82325afeccf3604f393916832eaadcbe1225bd/libgomp%2Fallocator.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fallocator.c?ref=ea82325afeccf3604f393916832eaadcbe1225bd", "patch": "@@ -90,6 +90,11 @@ omp_init_allocator (omp_memspace_handle_t memspace, int ntraits,\n \t  }\n \tbreak;\n       case omp_atk_alignment:\n+        if (traits[i].value == omp_atv_default)\n+\t  {\n+\t    data.alignment = 1;\n+\t    break;\n+\t  }\n \tif ((traits[i].value & (traits[i].value - 1)) != 0\n \t    || !traits[i].value)\n \t  return omp_null_allocator;\n@@ -112,7 +117,10 @@ omp_init_allocator (omp_memspace_handle_t memspace, int ntraits,\n \t  }\n \tbreak;\n       case omp_atk_pool_size:\n-\tdata.pool_size = traits[i].value;\n+\tif (traits[i].value == omp_atv_default)\n+\t  data.pool_size = ~(uintptr_t) 0;\n+\telse\n+\t  data.pool_size = traits[i].value;\n \tbreak;\n       case omp_atk_fallback:\n \tswitch (traits[i].value)"}, {"sha": "57af73720f1d640ba976c0faf38d7025f1baae04", "filename": "libgomp/omp.h.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea82325afeccf3604f393916832eaadcbe1225bd/libgomp%2Fomp.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea82325afeccf3604f393916832eaadcbe1225bd/libgomp%2Fomp.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fomp.h.in?ref=ea82325afeccf3604f393916832eaadcbe1225bd", "patch": "@@ -136,12 +136,13 @@ typedef enum omp_alloctrait_key_t\n \n typedef enum omp_alloctrait_value_t\n {\n+  omp_atv_default = (__UINTPTR_TYPE__) -1,\n   omp_atv_false = 0,\n   omp_atv_true = 1,\n-  omp_atv_default = 2,\n   omp_atv_contended = 3,\n   omp_atv_uncontended = 4,\n-  omp_atv_sequential = 5,\n+  omp_atv_serialized = 5,\n+  omp_atv_sequential = omp_atv_serialized,\n   omp_atv_private = 6,\n   omp_atv_all = 7,\n   omp_atv_thread = 8,\n@@ -154,8 +155,7 @@ typedef enum omp_alloctrait_value_t\n   omp_atv_environment = 15,\n   omp_atv_nearest = 16,\n   omp_atv_blocked = 17,\n-  omp_atv_interleaved = 18,\n-  __omp_alloctrait_value_max__ = __UINTPTR_MAX__\n+  omp_atv_interleaved = 18\n } omp_alloctrait_value_t;\n \n typedef struct omp_alloctrait_t"}]}