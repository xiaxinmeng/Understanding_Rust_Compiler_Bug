{"sha": "c8305c98510ac10855723216959cbca83182aeb8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzgzMDVjOTg1MTBhYzEwODU1NzIzMjE2OTU5Y2JjYTgzMTgyYWViOA==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2007-12-10T21:31:59Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2007-12-10T21:31:59Z"}, "message": "[multiple changes]\n\n2007-12-10  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\tPR rtl-optimization/34302\n\t* auto-inc-dec.c (attempt_change): Change place where move is\n\tinserted.\n\n2007-12-10  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/34302\n\t* gcc.c-torture/execute/20071210-1.c: New test.\n\nFrom-SVN: r130751", "tree": {"sha": "6b17aca629fb07f8dd1cd92489d1718c8d612fe2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b17aca629fb07f8dd1cd92489d1718c8d612fe2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c8305c98510ac10855723216959cbca83182aeb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8305c98510ac10855723216959cbca83182aeb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8305c98510ac10855723216959cbca83182aeb8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8305c98510ac10855723216959cbca83182aeb8/comments", "author": null, "committer": null, "parents": [{"sha": "030e2013b15ffb169b44f18f54bb6480372f4bb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/030e2013b15ffb169b44f18f54bb6480372f4bb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/030e2013b15ffb169b44f18f54bb6480372f4bb6"}], "stats": {"total": 85, "additions": 83, "deletions": 2}, "files": [{"sha": "e9dca619baab185ff0b5f79bd10a6b71d020277d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8305c98510ac10855723216959cbca83182aeb8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8305c98510ac10855723216959cbca83182aeb8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c8305c98510ac10855723216959cbca83182aeb8", "patch": "@@ -1,3 +1,9 @@\n+2007-12-10  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\tPR rtl-optimization/34302\n+\t* auto-inc-dec.c (attempt_change): Change place where move is\n+\tinserted.\n+\n 2007-12-10  Jakub Jelinek  <jakub@redhat.com>\n \n \t* dwarf2out.c (gen_array_type_die, gen_descr_array_type_die): For"}, {"sha": "2e2d047bf97ef4873e576271b467ea3f68ff1936", "filename": "gcc/auto-inc-dec.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8305c98510ac10855723216959cbca83182aeb8/gcc%2Fauto-inc-dec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8305c98510ac10855723216959cbca83182aeb8/gcc%2Fauto-inc-dec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fauto-inc-dec.c?ref=c8305c98510ac10855723216959cbca83182aeb8", "patch": "@@ -550,7 +550,10 @@ attempt_change (rtx new_addr, rtx inc_reg)\n   switch (inc_insn.form)\n     {\n     case FORM_PRE_ADD:\n-      mov_insn = insert_move_insn_before (mem_insn.insn, \n+      /* Replace the addition with a move.  Do it at the location of\n+\t the addition since the operand of the addition may change\n+\t before the memory reference.  */\n+      mov_insn = insert_move_insn_before (inc_insn.insn, \n \t\t\t\t\t  inc_insn.reg_res, inc_insn.reg0);\n       move_dead_notes (mov_insn, inc_insn.insn, inc_insn.reg0);\n \n@@ -673,7 +676,7 @@ try_merge (void)\n     }\n \n   /* Look to see if the inc register is dead after the memory\n-     reference.  If it is do not do the combination.  */\n+     reference.  If it is, do not do the combination.  */\n   if (find_regno_note (last_insn, REG_DEAD, REGNO (inc_reg)))\n     {\n       if (dump_file)"}, {"sha": "dfcb3b05ae474d7d95d975db294757477e09c12d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8305c98510ac10855723216959cbca83182aeb8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8305c98510ac10855723216959cbca83182aeb8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c8305c98510ac10855723216959cbca83182aeb8", "patch": "@@ -1,3 +1,8 @@\n+2007-12-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/34302\n+\t* gcc.c-torture/execute/20071210-1.c: New test.\n+\n 2007-12-10  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/34395"}, {"sha": "0d113c008f7977c628d0e282b32ee58d9fcdf265", "filename": "gcc/testsuite/gcc.c-torture/execute/20071210-1.c", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c8305c98510ac10855723216959cbca83182aeb8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071210-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c8305c98510ac10855723216959cbca83182aeb8/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071210-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20071210-1.c?ref=c8305c98510ac10855723216959cbca83182aeb8", "patch": "@@ -0,0 +1,67 @@\n+/* PR rtl-optimization/34302 */\n+\n+extern void abort (void);\n+\n+struct S\n+{\n+  int n1, n2, n3, n4;\n+};\n+\n+__attribute__((noinline)) struct S\n+foo (int x, int y, int z)\n+{\n+  if (x != 10 || y != 9 || z != 8)\n+    abort ();\n+  struct S s = { 1, 2, 3, 4 };\n+  return s;\n+}\n+\n+__attribute__((noinline)) void **\n+bar (void **u, int *v)\n+{\n+  void **w = u;\n+  int *s = v, x, y, z;\n+  void **p, **q;\n+  static void *l[] = { &&lab1, &&lab1, &&lab2, &&lab3, &&lab4 };\n+\n+  if (!u)\n+    return l;\n+\n+  q = *w++;\n+  goto *q;\n+lab2:\n+  p = q;\n+  q = *w++;\n+  x = s[2];\n+  y = s[1];\n+  z = s[0];\n+  s -= 1;\n+  struct S r = foo (x, y, z);\n+  s[3] = r.n1;\n+  s[2] = r.n2;\n+  s[1] = r.n3;\n+  s[0] = r.n4;\n+  goto *q;\n+lab3:\n+  p = q;\n+  q = *w++;\n+  s += 1;\n+  s[0] = 23;\n+lab1:\n+  goto *q;\n+lab4:\n+  return 0;\n+}\n+\n+int\n+main (void)\n+{\n+  void **u = bar ((void **) 0, (int *) 0);\n+  void *t[] = { u[2], u[4] };\n+  int s[] = { 7, 8, 9, 10, 11, 12 };\n+  if (bar (t, &s[1]) != (void **) 0\n+      || s[0] != 4 || s[1] != 3 || s[2] != 2 || s[3] != 1\n+      || s[4] != 11 || s[5] != 12)\n+    abort ();\n+  return 0;\n+}"}]}