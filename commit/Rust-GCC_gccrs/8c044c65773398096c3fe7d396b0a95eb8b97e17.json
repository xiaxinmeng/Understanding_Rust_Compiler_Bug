{"sha": "8c044c65773398096c3fe7d396b0a95eb8b97e17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGMwNDRjNjU3NzMzOTgwOTZjM2ZlN2QzOTZiMGE5NWViOGI5N2UxNw==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-03-05T21:16:02Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-03-05T21:16:02Z"}, "message": "Commit correct version of gimple.c file", "tree": {"sha": "2bc997b9a098eee25ee4c936e62f35e2eb08578a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2bc997b9a098eee25ee4c936e62f35e2eb08578a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c044c65773398096c3fe7d396b0a95eb8b97e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c044c65773398096c3fe7d396b0a95eb8b97e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c044c65773398096c3fe7d396b0a95eb8b97e17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c044c65773398096c3fe7d396b0a95eb8b97e17/comments", "author": null, "committer": null, "parents": [{"sha": "55ace4d14637866466498ed43e02d6f95af98f10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ace4d14637866466498ed43e02d6f95af98f10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ace4d14637866466498ed43e02d6f95af98f10"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "61a400b356f8cb435174bbb72ea857d019bfe69c", "filename": "gcc/gimple.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c044c65773398096c3fe7d396b0a95eb8b97e17/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c044c65773398096c3fe7d396b0a95eb8b97e17/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=8c044c65773398096c3fe7d396b0a95eb8b97e17", "patch": "@@ -3289,7 +3289,7 @@ gimple_inexpensive_call_p (gcall *stmt)\n    location information, get the location from EXPR.  */\n \n location_t\n-gimple_or_expr_nonartificial_location (gimple *stmt, tree)\n+gimple_or_expr_nonartificial_location (gimple *stmt, tree expr)\n {\n   location_t loc = gimple_nonartificial_location (stmt);\n   if (loc == UNKNOWN_LOCATION && EXPR_HAS_LOCATION (expr))"}]}