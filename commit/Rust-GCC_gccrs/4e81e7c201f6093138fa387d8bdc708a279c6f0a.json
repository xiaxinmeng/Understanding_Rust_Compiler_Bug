{"sha": "4e81e7c201f6093138fa387d8bdc708a279c6f0a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGU4MWU3YzIwMWY2MDkzMTM4ZmEzODdkOGJkYzcwOGEyNzljNmYwYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-04-29T14:45:43Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-04-29T14:45:43Z"}, "message": "fr30.c (fr30_expand_prologue): Use gcc_assert and gcc_unreachable as appropriate.\n\n\n\t* config/fr30/fr30.c (fr30_expand_prologue): Use gcc_assert and\n\tgcc_unreachable as appropriate.\n\t(fr30_expand_epilogue, fr30_setup_incoming_varargs,\n\tfr30_print_operand, fr30_move_double): Likewise.\n\t* config/fr30/fr30.md (*movsi_internal, *movsf_internal): Likewise.\n\nFrom-SVN: r98991", "tree": {"sha": "e7ba9e83bb945f27c04e478fdcfb01ac5159e57a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7ba9e83bb945f27c04e478fdcfb01ac5159e57a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e81e7c201f6093138fa387d8bdc708a279c6f0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e81e7c201f6093138fa387d8bdc708a279c6f0a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e81e7c201f6093138fa387d8bdc708a279c6f0a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e81e7c201f6093138fa387d8bdc708a279c6f0a/comments", "author": null, "committer": null, "parents": [{"sha": "1fb2002d69c09edb91d88e99a21a86f908b7b85b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fb2002d69c09edb91d88e99a21a86f908b7b85b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fb2002d69c09edb91d88e99a21a86f908b7b85b"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "889a78ea4a1ace940f00b7e6f737cdf7c730025b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e81e7c201f6093138fa387d8bdc708a279c6f0a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e81e7c201f6093138fa387d8bdc708a279c6f0a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e81e7c201f6093138fa387d8bdc708a279c6f0a", "patch": "@@ -1,3 +1,11 @@\n+2005-04-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* config/fr30/fr30.c (fr30_expand_prologue): Use gcc_assert and\n+\tgcc_unreachable as appropriate.\n+\t(fr30_expand_epilogue, fr30_setup_incoming_varargs,\n+\tfr30_print_operand, fr30_move_double): Likewise.\n+\t* config/fr30/fr30.md (*movsi_internal, *movsf_internal): Likewise.\n+\n 2005-04-29  Mark Mitchell  <mark@codesourcery.com>\n \n \t* config/arm/arm.h (ARM_EABI_CTORS_SECTION_OP): Do not define if a"}, {"sha": "7346cff31745c127bd12380681aacf9d922c42fe", "filename": "gcc/config/fr30/fr30.c", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e81e7c201f6093138fa387d8bdc708a279c6f0a/gcc%2Fconfig%2Ffr30%2Ffr30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e81e7c201f6093138fa387d8bdc708a279c6f0a/gcc%2Fconfig%2Ffr30%2Ffr30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.c?ref=4e81e7c201f6093138fa387d8bdc708a279c6f0a", "patch": "@@ -243,9 +243,7 @@ fr30_expand_prologue (void)\n     fr30_compute_frame_size (0, 0);\n \n   /* This cases shouldn't happen.  Catch it now.  */\n-  if (current_frame_info.total_size == 0\n-      && current_frame_info.gmask)\n-    abort ();\n+  gcc_assert (current_frame_info.total_size || !current_frame_info.gmask);\n \n   /* Allocate space for register arguments if this is a variadic function.  */\n   if (current_frame_info.pretend_size)\n@@ -367,9 +365,8 @@ fr30_expand_epilogue (void)\n   int regno;\n \n   /* Perform the inversion operations of the prologue.  */\n-  if (! current_frame_info.initialised)\n-    abort ();\n-\n+  gcc_assert (current_frame_info.initialised);\n+  \n   /* Pop local variables and arguments off the stack.\n      If frame_pointer_needed is TRUE then the frame pointer register\n      has actually been used as a frame pointer, and we can recover\n@@ -430,8 +427,7 @@ fr30_setup_incoming_varargs (CUMULATIVE_ARGS *arg_regs_used_so_far,\n   int size;\n \n   /* All BLKmode values are passed by reference.  */\n-  if (mode == BLKmode)\n-    abort ();\n+  gcc_assert (mode != BLKmode);\n \n   /* ??? This run-time test as well as the code inside the if\n      statement is probably unnecessary.  */\n@@ -595,8 +591,7 @@ fr30_print_operand (FILE *file, rtx x, int code)\n       switch (GET_CODE (x0))\n \t{\n \tcase REG:\n-\t  if ((unsigned) REGNO (x0) >= ARRAY_SIZE (reg_names))\n-\t    abort ();\n+\t  gcc_assert ((unsigned) REGNO (x0) < ARRAY_SIZE (reg_names));\n \t  fprintf (file, \"@%s\", reg_names [REGNO (x0)]);\n \t  break;\n \n@@ -841,8 +836,7 @@ fr30_move_double (rtx * operands)\n \t     must load it last.  Otherwise, load it first.  */\n \t  int reverse = (refers_to_regno_p (dregno, dregno + 1, addr, 0) != 0);\n \n-\t  if (GET_CODE (addr) != REG)\n-\t    abort ();\n+\t  gcc_assert (GET_CODE (addr) == REG);\n \t  \n \t  dest0 = operand_subword (dest, reverse, TRUE, mode);\n \t  dest1 = operand_subword (dest, !reverse, TRUE, mode);\n@@ -895,8 +889,7 @@ fr30_move_double (rtx * operands)\n       rtx src0;\n       rtx src1;\n \n-      if (GET_CODE (addr) != REG)\n-\tabort ();\n+      gcc_assert (GET_CODE (addr) == REG);\n       \n       src0 = operand_subword (src, 0, TRUE, mode);\n       src1 = operand_subword (src, 1, TRUE, mode);\n@@ -929,7 +922,7 @@ fr30_move_double (rtx * operands)\n     }\n   else\n     /* This should have been prevented by the constraints on movdi_insn.  */\n-    abort ();\n+    gcc_unreachable ();\n   \n   val = get_insns ();\n   end_sequence ();"}, {"sha": "c48dad3da3275088c7757b1d79f440dfb6b5e26c", "filename": "gcc/config/fr30/fr30.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e81e7c201f6093138fa387d8bdc708a279c6f0a/gcc%2Fconfig%2Ffr30%2Ffr30.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e81e7c201f6093138fa387d8bdc708a279c6f0a/gcc%2Fconfig%2Ffr30%2Ffr30.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.md?ref=4e81e7c201f6093138fa387d8bdc708a279c6f0a", "patch": "@@ -356,7 +356,7 @@\n     case 4: return   \\\"mov   \\\\t%1, %0\\\";\n     case 5: return   \\\"st    \\\\t%1, %0\\\";\n     case 6: return   \\\"ld    \\\\t%1, %0\\\";\n-    default: abort ();\t       \n+    default: gcc_unreachable ();\t       \n     }\n   }\"\n   [(set (attr \"length\") (cond [(eq_attr \"alternative\" \"1\") (const_int 4)\n@@ -554,7 +554,7 @@\n     case 2: return   \\\"mov   \\\\t%1, %0\\\";\n     case 3: return   \\\"st    \\\\t%1, %0\\\";\n     case 4: return   \\\"ld    \\\\t%1, %0\\\";\n-    default: abort ();\t       \n+    default: gcc_unreachable ();\t       \n     }\n   }\"\n   [(set (attr \"length\") (cond [(eq_attr \"alternative\" \"0\") (const_int 6)"}]}