{"sha": "d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDExMGMzZWQ5N2FjM2E3MDgzZmEzMmY3ZjFmNTM5ODRlYmRmMWQ5Mg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-10-15T10:24:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-10-15T10:24:36Z"}, "message": "* stor-layout.c (self_referential_size): Do not promote arguments.\n\nFrom-SVN: r216249", "tree": {"sha": "cd386b20df090229accc3b268bc523735f189eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd386b20df090229accc3b268bc523735f189eed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/comments", "author": null, "committer": null, "parents": [{"sha": "d73326ca59c975967be01add1918f0743c779bb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d73326ca59c975967be01add1918f0743c779bb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d73326ca59c975967be01add1918f0743c779bb4"}], "stats": {"total": 112, "additions": 106, "deletions": 6}, "files": [{"sha": "5bc3571e39f89f57f1ba4b24c951ca5fd072968b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "patch": "@@ -1,3 +1,7 @@\n+2014-10-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* stor-layout.c (self_referential_size): Do not promote arguments.\n+\n 2014-10-15  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/invoke.texi: Update to reflect that GNU11 is the default"}, {"sha": "a95722ac10ec959bce4cefe28a57e6b8eb3fcfaf", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "patch": "@@ -211,12 +211,7 @@ self_referential_size (tree size)\n       param_type = TREE_TYPE (ref);\n       param_decl\n \t= build_decl (input_location, PARM_DECL, param_name, param_type);\n-      if (targetm.calls.promote_prototypes (NULL_TREE)\n-\t  && INTEGRAL_TYPE_P (param_type)\n-\t  && TYPE_PRECISION (param_type) < TYPE_PRECISION (integer_type_node))\n-\tDECL_ARG_TYPE (param_decl) = integer_type_node;\n-      else\n-\tDECL_ARG_TYPE (param_decl) = param_type;\n+      DECL_ARG_TYPE (param_decl) = param_type;\n       DECL_ARTIFICIAL (param_decl) = 1;\n       TREE_READONLY (param_decl) = 1;\n "}, {"sha": "fb25dae6f94a5e19f562eb13eec46df0467085dc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "patch": "@@ -1,3 +1,8 @@\n+2014-10-15  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/opt41.adb: New test.\n+\t* gnat.dg/opt41_pkg.ad[sb]: New helper.\n+\n 2014-10-15  Richard Biener  <rguenther@suse.de>\n \n \t* g++.dg/torture/pr63419.C: Add -Wno-psabi."}, {"sha": "21660431c50dbf3e5d22e6d1324319ac87353592", "filename": "gcc/testsuite/gnat.dg/opt41.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41.adb?ref=d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "patch": "@@ -0,0 +1,15 @@\n+-- { dg-do run }\n+-- { dg-options \"-Os\" }\n+\n+with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;\n+with Opt41_Pkg;             use Opt41_Pkg;\n+\n+procedure Opt41 is\n+   R  : Rec := (Five, To_Unbounded_String (\"CONFIG\"));\n+   SP : String_Access := new String'(To_String (Rec_Write (R)));\n+   RP : Rec_Ptr := new Rec'(Rec_Read (SP));\n+begin\n+   if RP.D /= R.D then\n+      raise Program_Error;\n+   end if;\n+end;"}, {"sha": "c43c1bfdf049dcc0acbd5c0388b0d93007d873b8", "filename": "gcc/testsuite/gnat.dg/opt41_pkg.adb", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41_pkg.adb?ref=d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "patch": "@@ -0,0 +1,53 @@\n+with Ada.Streams; use Ada.Streams;\r\n+\r\n+package body Opt41_Pkg is\r\n+\r\n+   type Wstream is new Root_Stream_Type with record\r\n+      S : Unbounded_String;\r\n+   end record;\r\n+\r\n+   procedure Read (Stream : in out Wstream;\r\n+                   Item   : out Stream_Element_Array;\r\n+                   Last   : out Stream_Element_Offset) is null;\r\n+\r\n+   procedure Write (Stream : in out Wstream; Item : Stream_Element_Array) is\r\n+   begin\r\n+      for J in Item'Range loop\r\n+         Append (Stream.S, Character'Val (Item (J)));\r\n+      end loop;\r\n+   end Write;\r\n+\r\n+   function Rec_Write (R : Rec) return Unbounded_String is\r\n+      S : aliased Wstream;\r\n+   begin\r\n+      Rec'Output (S'Access, R);\r\n+      return S.S;\r\n+   end Rec_Write;\r\n+\r\n+   type Rstream is new Root_Stream_Type with record\r\n+      S   : String_Access;\r\n+      Idx : Integer := 1;\r\n+   end record;\r\n+\r\n+   procedure Write (Stream : in out Rstream; Item : Stream_Element_Array) is null;\r\n+\r\n+   procedure Read (Stream : in out Rstream;\r\n+                   Item   : out Stream_Element_Array;\r\n+                   Last   : out Stream_Element_Offset) is\r\n+   begin\r\n+      Last := Stream_Element_Offset'Min\r\n+         (Item'Last, Item'First + Stream_Element_Offset (Stream.S'Last - Stream.Idx));\r\n+      for I in Item'First .. Last loop\r\n+         Item (I) := Stream_Element (Character'Pos (Stream.S (Stream.Idx)));\r\n+         Stream.Idx := Stream.Idx + 1;\r\n+      end loop;\r\n+   end Read;\r\n+\r\n+   function Rec_Read (Str : String_Access) return Rec is\r\n+      S : aliased Rstream;\r\n+   begin\r\n+      S.S := Str;\r\n+      return Rec'Input (S'Access);\r\n+   end Rec_Read;\r\n+\r\n+end Opt41_Pkg;\r"}, {"sha": "e73bc9319270c808409322bb482c7574fb3bb14e", "filename": "gcc/testsuite/gnat.dg/opt41_pkg.ads", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fopt41_pkg.ads?ref=d110c3ed97ac3a7083fa32f7f1f53984ebdf1d92", "patch": "@@ -0,0 +1,28 @@\n+with Ada.Strings.Unbounded; use Ada.Strings.Unbounded;\r\n+\r\n+package Opt41_Pkg is\r\n+\r\n+   type Enum is (One, Two, Three, Four, Five, Six);\r\n+\r\n+   type Rec (D : Enum) is record\r\n+      case D is\r\n+         when One => \r\n+            I : Integer;\r\n+         when Two | Five | Six =>\r\n+            S : Unbounded_String;\r\n+            case D is\r\n+               when Two => B : Boolean;\r\n+               when others => null;\r\n+            end case;\r\n+         when others =>\r\n+            null;\r\n+      end case;\r\n+   end record;\r\n+\r\n+   type Rec_Ptr is access all Rec;\r\n+\r\n+   function Rec_Write (R : Rec) return Unbounded_String;\r\n+\r\n+   function Rec_Read (Str : String_Access) return Rec;\r\n+\r\n+end Opt41_Pkg;\r"}]}