{"sha": "a3fc8f169fc51d7774c6217056532b2540ce7290", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNmYzhmMTY5ZmM1MWQ3Nzc0YzYyMTcwNTY1MzJiMjU0MGNlNzI5MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-12-13T09:05:07Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-12-13T09:05:07Z"}, "message": "decl.c (gnat_to_gnu_entity): Robustify test for types descendant of System.Address.\n\n\t* gcc-interface/decl.c (gnat_to_gnu_entity): Robustify test for types\n\tdescendant of System.Address.\n\t(gnat_to_gnu_subprog_type): Likewise.\n\nFrom-SVN: r255599", "tree": {"sha": "39b9b78535a82e5febc6a21a0a8ac90cbd84b985", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39b9b78535a82e5febc6a21a0a8ac90cbd84b985"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3fc8f169fc51d7774c6217056532b2540ce7290", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3fc8f169fc51d7774c6217056532b2540ce7290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3fc8f169fc51d7774c6217056532b2540ce7290", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3fc8f169fc51d7774c6217056532b2540ce7290/comments", "author": null, "committer": null, "parents": [{"sha": "b8d7e076ed0cf5fde5f5d875e4145d63317a6180", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8d7e076ed0cf5fde5f5d875e4145d63317a6180", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8d7e076ed0cf5fde5f5d875e4145d63317a6180"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "70c596efbaef6eb57642c9de057df9c1a20e53d9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fc8f169fc51d7774c6217056532b2540ce7290/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fc8f169fc51d7774c6217056532b2540ce7290/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a3fc8f169fc51d7774c6217056532b2540ce7290", "patch": "@@ -1,3 +1,9 @@\n+2017-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity): Robustify test for types\n+\tdescendant of System.Address.\n+\t(gnat_to_gnu_subprog_type): Likewise.\n+\n 2017-12-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc-interface/utils.c (gnat_internal_attribute_table): Add"}, {"sha": "f626e6186d23f1a69be7cc98f749c0d3b024d79e", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3fc8f169fc51d7774c6217056532b2540ce7290/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3fc8f169fc51d7774c6217056532b2540ce7290/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=a3fc8f169fc51d7774c6217056532b2540ce7290", "patch": "@@ -659,7 +659,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \n \t/* Get the type after elaborating the renamed object.  */\n \tif (Has_Foreign_Convention (gnat_entity)\n-\t    && Is_Descendant_Of_Address (gnat_type))\n+\t    && Is_Descendant_Of_Address (Underlying_Type (gnat_type)))\n \t  gnu_type = ptr_type_node;\n \telse\n \t  {\n@@ -5594,7 +5594,7 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n       /* For foreign convention subprograms, return System.Address as void *\n \t or equivalent.  Note that this comprises GCC builtins.  */\n       if (Has_Foreign_Convention (gnat_subprog)\n-\t  && Is_Descendant_Of_Address (gnat_return_type))\n+\t  && Is_Descendant_Of_Address (Underlying_Type (gnat_return_type)))\n \tgnu_return_type = ptr_type_node;\n       else\n \tgnu_return_type = gnat_to_gnu_profile_type (gnat_return_type);\n@@ -5761,7 +5761,7 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n \t  /* For foreign convention subprograms, pass System.Address as void *\n \t     or equivalent.  Note that this comprises GCC builtins.  */\n \t  if (Has_Foreign_Convention (gnat_subprog)\n-\t      && Is_Descendant_Of_Address (gnat_param_type))\n+\t      && Is_Descendant_Of_Address (Underlying_Type (gnat_param_type)))\n \t    gnu_param_type = ptr_type_node;\n \t  else\n \t    gnu_param_type = gnat_to_gnu_profile_type (gnat_param_type);"}]}