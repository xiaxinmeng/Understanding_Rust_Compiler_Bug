{"sha": "6b2300b390d106266a01778ba792075c3b6c7e7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIyMzAwYjM5MGQxMDYyNjZhMDE3NzhiYTc5MjA3NWMzYjZjN2U3Yg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2003-03-19T00:13:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-03-19T00:13:02Z"}, "message": "s390.c (s390_output_dwarf_dtprel): New.\n\n\t* config/s390/s390.c (s390_output_dwarf_dtprel): New.\n\t* config/s390/s390-protos.h (s390_output_dwarf_dtprel): New proto.\n\t* config/s390/s390.h (ASM_OUTPUT_DWARF_DTPREL): Define.\n\n\t* config/ia64/ia64.c (ia64_output_dwarf_dtprel): New.\n\t* config/ia64/ia64-protos.h (ia64_output_dwarf_dtprel): New proto.\n\t* config/ia64/ia64.h (ASM_OUTPUT_DWARF_DTPREL): Define.\n\nFrom-SVN: r64556", "tree": {"sha": "8df5587636d3313a32b82daf3705e3d1f102a21b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8df5587636d3313a32b82daf3705e3d1f102a21b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b2300b390d106266a01778ba792075c3b6c7e7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2300b390d106266a01778ba792075c3b6c7e7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b2300b390d106266a01778ba792075c3b6c7e7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b2300b390d106266a01778ba792075c3b6c7e7b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ba6918ee8902e201afea501752ee53dca9f5271", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ba6918ee8902e201afea501752ee53dca9f5271", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ba6918ee8902e201afea501752ee53dca9f5271"}], "stats": {"total": 66, "additions": 66, "deletions": 0}, "files": [{"sha": "cadc4f9474cacb5b1a1bcc24f15df0d18ed1233c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b2300b390d106266a01778ba792075c3b6c7e7b", "patch": "@@ -1,3 +1,13 @@\n+2003-03-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/s390/s390.c (s390_output_dwarf_dtprel): New.\n+\t* config/s390/s390-protos.h (s390_output_dwarf_dtprel): New proto.\n+\t* config/s390/s390.h (ASM_OUTPUT_DWARF_DTPREL): Define.\n+\n+\t* config/ia64/ia64.c (ia64_output_dwarf_dtprel): New.\n+\t* config/ia64/ia64-protos.h (ia64_output_dwarf_dtprel): New proto.\n+\t* config/ia64/ia64.h (ASM_OUTPUT_DWARF_DTPREL): Define.\n+\n 2003-03-18  Geoffrey Keating  <geoffk@apple.com>\n \n \t* Makefile.in (emit-rtl.o): Add gt-emit-rtl.h to dependencies."}, {"sha": "7cd696ef2cdf641919d522b3f1c8fb1571a3930d", "filename": "gcc/config/ia64/ia64-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fia64%2Fia64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64-protos.h?ref=6b2300b390d106266a01778ba792075c3b6c7e7b", "patch": "@@ -98,6 +98,7 @@ extern void ia64_print_operand PARAMS((FILE *, rtx, int));\n extern enum reg_class ia64_secondary_reload_class PARAMS((enum reg_class,\n \t\t\t\t\t\t\t  enum machine_mode,\n \t\t\t\t\t\t\t  rtx));\n+extern void ia64_output_dwarf_dtprel PARAMS ((FILE*, int, rtx));\n extern void ia64_reorg PARAMS((rtx));\n extern void process_for_unwind_directive PARAMS ((FILE *, rtx));\n extern const char *get_bundle_name PARAMS ((int));"}, {"sha": "fe6fa37d744f61b6ba4f8d2c641b5ec784103997", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=6b2300b390d106266a01778ba792075c3b6c7e7b", "patch": "@@ -3797,6 +3797,22 @@ ia64_function_value (valtype, func)\n     }\n }\n \n+/* This is called from dwarf2out.c via ASM_OUTPUT_DWARF_DTPREL.\n+   We need to emit DTP-relative relocations.  */\n+\n+void\n+ia64_output_dwarf_dtprel (file, size, x)\n+     FILE *file;\n+     int size;\n+     rtx x;\n+{\n+  if (size != 8)\n+    abort ();\n+  fputs (\"\\tdata8.ua\\t@dtprel(\", file);\n+  output_addr_const (file, x);\n+  fputs (\")\", file);\n+}\n+\n /* Print a memory address as an operand to reference that memory location.  */\n \n /* ??? Do we need this?  It gets used only for 'a' operands.  We could perhaps"}, {"sha": "d4fb75baa94435fc393045c5e6b15fc7da4f5f6c", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=6b2300b390d106266a01778ba792075c3b6c7e7b", "patch": "@@ -1994,6 +1994,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n   { \"loc79\", LOC_REG (79) }, \t\t\t\t\t\t\\\n }\n \n+/* Emit a dtp-relative reference to a TLS variable.  */\n+\n+#ifdef HAVE_AS_TLS\n+#define ASM_OUTPUT_DWARF_DTPREL(FILE, SIZE, X) \\\n+  ia64_output_dwarf_dtprel (FILE, SIZE, X)\n+#endif\n+\n /* A C compound statement to output to stdio stream STREAM the assembler syntax\n    for an instruction operand X.  X is an RTL expression.  */\n "}, {"sha": "12b2674cc364c3e1a2fee96b6a0ef2fbed78d304", "filename": "gcc/config/s390/s390-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-protos.h?ref=6b2300b390d106266a01778ba792075c3b6c7e7b", "patch": "@@ -76,6 +76,7 @@ extern void s390_output_constant_pool PARAMS ((rtx, rtx));\n extern void s390_trampoline_template PARAMS ((FILE *));\n extern void s390_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n extern rtx s390_gen_rtx_const_DI PARAMS ((int, int));\n+extern void s390_output_dwarf_dtprel PARAMS ((FILE*, int, rtx));\n extern void s390_machine_dependent_reorg PARAMS ((rtx));\n extern int s390_agen_dep_p PARAMS ((rtx, rtx));\n "}, {"sha": "13e4bf50802c843a33aa4d10843dfaad21eed6cf", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=6b2300b390d106266a01778ba792075c3b6c7e7b", "patch": "@@ -3056,6 +3056,30 @@ s390_expand_cmpstr (target, op0, op1, len)\n     }\n }\n \n+/* This is called from dwarf2out.c via ASM_OUTPUT_DWARF_DTPREL.\n+   We need to emit DTP-relative relocations.  */\n+\n+void\n+s390_output_dwarf_dtprel (file, size, x)\n+     FILE *file;\n+     int size;\n+     rtx x;\n+{\n+  switch (size)\n+    {\n+    case 4:\n+      fputs (\"\\t.long\\t\", file);\n+      break;\n+    case 8:\n+      fputs (\"\\t.quad\\t\", file);\n+      break;\n+    default:\n+      abort ();\n+    }\n+  output_addr_const (file, x);\n+  fputs (\"@DTPOFF\", file);\n+}\n+\n /* In the name of slightly smaller debug output, and to cater to\n    general assembler losage, recognize various UNSPEC sequences\n    and turn them back into a direct symbol reference.  */"}, {"sha": "53e0d14cf4b6715eeefdc87b335bf17d9f905eb1", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b2300b390d106266a01778ba792075c3b6c7e7b/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=6b2300b390d106266a01778ba792075c3b6c7e7b", "patch": "@@ -921,6 +921,13 @@ extern int flag_pic;\n   \"%ap\",  \"%cc\",  \"%fp\"\t\t\t\t\t\t\t\\\n }\n \n+/* Emit a dtp-relative reference to a TLS variable.  */\n+\n+#ifdef HAVE_AS_TLS\n+#define ASM_OUTPUT_DWARF_DTPREL(FILE, SIZE, X) \\\n+  s390_output_dwarf_dtprel (FILE, SIZE, X)\n+#endif\n+\n /* Print operand X (an rtx) in assembler syntax to file FILE.  */\n #define PRINT_OPERAND(FILE, X, CODE) print_operand (FILE, X, CODE)\n #define PRINT_OPERAND_ADDRESS(FILE, ADDR) print_operand_address (FILE, ADDR)"}]}