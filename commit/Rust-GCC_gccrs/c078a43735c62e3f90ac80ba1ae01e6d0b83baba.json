{"sha": "c078a43735c62e3f90ac80ba1ae01e6d0b83baba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA3OGE0MzczNWM2MmUzZjkwYWM4MGJhMWFlMDFlNmQwYjgzYmFiYQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2005-12-22T04:03:32Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-12-22T04:03:32Z"}, "message": "re PR middle-end/23518 (some gcc optimizations do not take overflow into account with -fwrapv)\n\ngcc/\n\tPR tree-optimization/23518\n\t* fold-const.c (make_range): Don't move a constant to the\n\tother side of the comparison if the type is signed and -fwrapv\n\tis given.\n\ngcc/testsuite/\n\tPR tree-optimization/23518\n\t* testsuite/gcc.dg/pr23518.c: New.\n\nFrom-SVN: r108940", "tree": {"sha": "66a616b689f118212742fb5cadb2a0578277dd95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66a616b689f118212742fb5cadb2a0578277dd95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c078a43735c62e3f90ac80ba1ae01e6d0b83baba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c078a43735c62e3f90ac80ba1ae01e6d0b83baba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c078a43735c62e3f90ac80ba1ae01e6d0b83baba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/comments", "author": null, "committer": null, "parents": [{"sha": "8ad4c89538959cda77bcf90164c79b4b74f9f602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ad4c89538959cda77bcf90164c79b4b74f9f602", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ad4c89538959cda77bcf90164c79b4b74f9f602"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "b1b50aa7398f3c2d764222120b214b5ae7e49305", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c078a43735c62e3f90ac80ba1ae01e6d0b83baba", "patch": "@@ -1,3 +1,10 @@\n+2005-12-22  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\tPR tree-optimization/23518\n+\t* fold-const.c (make_range): Don't move a constant to the\n+\tother side of the comparison if the type is signed and -fwrapv\n+\tis given.\n+\n 2005-12-22  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* tree-vrp.c (extract_range_from_binary_expr): Clean up uses"}, {"sha": "b801f2ac9e963336090e9f7c8ce7c542f2d39fd3", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=c078a43735c62e3f90ac80ba1ae01e6d0b83baba", "patch": "@@ -3836,6 +3836,11 @@ make_range (tree exp, int *pin_p, tree *plow, tree *phigh)\n \t  if (TREE_CODE (arg1) != INTEGER_CST)\n \t    break;\n \n+\t  /* If flag_wrapv and ARG0_TYPE is signed, then we cannot\n+\t     move a constant to the other side.  */\n+\t  if (flag_wrapv && !TYPE_UNSIGNED (arg0_type))\n+\t    break;\n+\n \t  /* If EXP is signed, any overflow in the computation is undefined,\n \t     so we don't worry about it so long as our computations on\n \t     the bounds don't overflow.  For unsigned, overflow is defined"}, {"sha": "acfd2c89d52b258dca6a766e125a6b414f39dea8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c078a43735c62e3f90ac80ba1ae01e6d0b83baba", "patch": "@@ -1,3 +1,8 @@\n+2005-12-22  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\tPR tree-optimization/23518\n+\t* testsuite/gcc.dg/pr23518.c: New.\n+\n 2005-12-21  Mike Stump  <mrs@apple.com>\n \n \t* gcc.dg/attr-weakref-1.c: Really skip on darwin."}, {"sha": "3c6bd2754e68e4b82c87c5282c234893b1afe1f9", "filename": "gcc/testsuite/gcc.dg/pr23518.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23518.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c078a43735c62e3f90ac80ba1ae01e6d0b83baba/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23518.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr23518.c?ref=c078a43735c62e3f90ac80ba1ae01e6d0b83baba", "patch": "@@ -0,0 +1,21 @@\n+/* PR tree-optimization/23518.\n+   make_range used to transform a + 1 < 0 into a < -1 even when a is\n+   signed and -fwrapv is given.  Make sure that no longer happens.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -fwrapv\" } */\n+\n+#include <limits.h>\n+\n+extern void abort (void);\n+extern void exit (int);\n+\n+int\n+main (void)\n+{\n+  int a = INT_MAX;\n+  if ((a < 0) || (a + 1 < 0))\n+    exit (0);\n+\n+  abort ();\n+}"}]}