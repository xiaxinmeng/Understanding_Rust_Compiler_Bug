{"sha": "2d4e1e144c25e526e4f668be5a0bc10d0c1c738c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQ0ZTFlMTQ0YzI1ZTUyNmU0ZjY2OGJlNWEwYmMxMGQwYzFjNzM4Yw==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-05-06T19:53:33Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2020-05-18T23:01:54Z"}, "message": "c++: ICE when shortening right shift [PR94955]\n\nSince r10-6527 fold_for_warn calls maybe_constant_value, which means it\ncan fold more than it previously could.  In this testcase it means that\ncp_build_binary_op/RSHIFT_EXPR set short_shift because now we were able\nto fold op1 to an INTEGER_CST.  But then when actually performing the\nshortening we crashed because cp_fold_rvalue wasn't able to fold as much\nas f_f_w and so tree_int_cst_sgn crashed on a NOP_EXPR.  Therefore the\ncalls should probably match.\n\n\tPR c++/94955\n\t* typeck.c (cp_build_binary_op): Use fold_for_warn instead of\n\tcp_fold_rvalue.\n\n\t* g++.dg/cpp0x/constexpr-shift2.C: New test.", "tree": {"sha": "1e73b7bcfa85d209cf4dcd1ada19fb46f881b49a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e73b7bcfa85d209cf4dcd1ada19fb46f881b49a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bf732686c0b9c42a2fe119db774c5a65e5a97174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf732686c0b9c42a2fe119db774c5a65e5a97174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf732686c0b9c42a2fe119db774c5a65e5a97174"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "4e446585aa42f4104057155e4c06a4f9573ea746", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2d4e1e144c25e526e4f668be5a0bc10d0c1c738c", "patch": "@@ -1,3 +1,9 @@\n+2020-05-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94955\n+\t* typeck.c (cp_build_binary_op): Use fold_for_warn instead of\n+\tcp_fold_rvalue.\n+\n 2020-05-18  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/94937"}, {"sha": "d2e6c90762206644ea5f996c3a028450c131151c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=2d4e1e144c25e526e4f668be5a0bc10d0c1c738c", "patch": "@@ -5633,7 +5633,9 @@ cp_build_binary_op (const op_location_t &location,\n \t{\n \t  int unsigned_arg;\n \t  tree arg0 = get_narrower (op0, &unsigned_arg);\n-\t  tree const_op1 = cp_fold_rvalue (op1);\n+\t  /* We're not really warning here but when we set short_shift we\n+\t     used fold_for_warn to fold the operand.  */\n+\t  tree const_op1 = fold_for_warn (op1);\n \n \t  final_type = result_type;\n "}, {"sha": "02de8028552991f2c2572deff25f99e661c54ce6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2d4e1e144c25e526e4f668be5a0bc10d0c1c738c", "patch": "@@ -1,3 +1,8 @@\n+2020-05-18  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/94955\n+\t* g++.dg/cpp0x/constexpr-shift2.C: New test.\n+\n 2020-05-18  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/94937"}, {"sha": "9b3490a66a712fb0cfa476b9262ce61ebec53d7c", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-shift2.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-shift2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d4e1e144c25e526e4f668be5a0bc10d0c1c738c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-shift2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-shift2.C?ref=2d4e1e144c25e526e4f668be5a0bc10d0c1c738c", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/94955\n+// { dg-do compile { target c++11 } }\n+\n+struct S {\n+  static constexpr char foo() { return 10; }\n+};\n+\n+short int\n+fn (short int e)\n+{\n+  return e >> S::foo();\n+}"}]}