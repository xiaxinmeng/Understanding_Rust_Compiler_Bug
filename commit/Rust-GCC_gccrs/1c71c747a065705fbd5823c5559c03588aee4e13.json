{"sha": "1c71c747a065705fbd5823c5559c03588aee4e13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3MWM3NDdhMDY1NzA1ZmJkNTgyM2M1NTU5YzAzNTg4YWVlNGUxMw==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-01-23T18:22:29Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-01-23T18:22:29Z"}, "message": "cp-tree.h (build_x_delete): Remove prototype.\n\n\t* cp-tree.h (build_x_delete): Remove prototype.\n\t* init.c (build_vec_delete_1): Call build_op_delete_call directly\n\tand not via build_x_delete.\n\t(build_x_delete): Remove.\n\nFrom-SVN: r110138", "tree": {"sha": "e19e83de51f27837ae93985f881a400533cb10b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e19e83de51f27837ae93985f881a400533cb10b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c71c747a065705fbd5823c5559c03588aee4e13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c71c747a065705fbd5823c5559c03588aee4e13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c71c747a065705fbd5823c5559c03588aee4e13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c71c747a065705fbd5823c5559c03588aee4e13/comments", "author": null, "committer": null, "parents": [{"sha": "6d1e9d18820210572be79e27413d7f2d66a53a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d1e9d18820210572be79e27413d7f2d66a53a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d1e9d18820210572be79e27413d7f2d66a53a2a"}], "stats": {"total": 38, "additions": 9, "deletions": 29}, "files": [{"sha": "018a25dbc9ec211f759252a14cefbe976d7350b2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c71c747a065705fbd5823c5559c03588aee4e13/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c71c747a065705fbd5823c5559c03588aee4e13/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1c71c747a065705fbd5823c5559c03588aee4e13", "patch": "@@ -1,5 +1,10 @@\n 2006-01-23  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n+\t* cp-tree.h (build_x_delete): Remove prototype.\n+\t* init.c (build_vec_delete_1): Call build_op_delete_call directly\n+\tand not via build_x_delete.\n+\t(build_x_delete): Remove.\n+\n \t* cp-tree.h (get_vtt_name): Remove prototype.\n \t* class.c (get_vtt_name): Remove.\n \t(build_vtt): Call mangle_vtt_for_type instead of get_vtt_name."}, {"sha": "0c777d790c4432770f18a0bbd2676db0c4873bfe", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c71c747a065705fbd5823c5559c03588aee4e13/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c71c747a065705fbd5823c5559c03588aee4e13/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1c71c747a065705fbd5823c5559c03588aee4e13", "patch": "@@ -3949,7 +3949,6 @@ extern tree build_zero_init\t\t\t(tree, tree, bool);\n extern tree build_offset_ref\t\t\t(tree, tree, bool);\n extern tree build_new\t\t\t\t(tree, tree, tree, tree, int);\n extern tree build_vec_init\t\t\t(tree, tree, tree, bool, int);\n-extern tree build_x_delete\t\t\t(tree, int, tree);\n extern tree build_delete\t\t\t(tree, tree,\n \t\t\t\t\t\t special_function_kind,\n \t\t\t\t\t\t int, int);"}, {"sha": "a9b394af6abd4dd08b490bad1166ea07c2ca2cb0", "filename": "gcc/cp/init.c", "status": "modified", "additions": 4, "deletions": 28, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c71c747a065705fbd5823c5559c03588aee4e13/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c71c747a065705fbd5823c5559c03588aee4e13/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=1c71c747a065705fbd5823c5559c03588aee4e13", "patch": "@@ -2247,9 +2247,10 @@ build_vec_delete_1 (tree base, tree maxindex, tree type,\n \t}\n \n       if (auto_delete_vec == sfk_deleting_destructor)\n-\tdeallocate_expr = build_x_delete (base_tbd,\n-\t\t\t\t\t  2 | use_global_delete,\n-\t\t\t\t\t  virtual_size);\n+\tdeallocate_expr = build_op_delete_call (VEC_DELETE_EXPR,\n+\t\t\t\t\t\tbase_tbd, virtual_size,\n+\t\t\t\t\t\tuse_global_delete & 1,\n+\t\t\t\t\t\tNULL_TREE);\n     }\n \n   body = loop;\n@@ -2609,31 +2610,6 @@ build_vec_init (tree base, tree maxindex, tree init,\n   return stmt_expr;\n }\n \n-/* Free up storage of type TYPE, at address ADDR.\n-\n-   TYPE is a POINTER_TYPE and can be ptr_type_node for no special type\n-   of pointer.\n-\n-   VIRTUAL_SIZE is the amount of storage that was allocated, and is\n-   used as the second argument to operator delete.  It can include\n-   things like padding and magic size cookies.  It has virtual in it,\n-   because if you have a base pointer and you delete through a virtual\n-   destructor, it should be the size of the dynamic object, not the\n-   static object, see Free Store 12.5 ISO C++.\n-\n-   This does not call any destructors.  */\n-\n-tree\n-build_x_delete (tree addr, int which_delete, tree virtual_size)\n-{\n-  int use_global_delete = which_delete & 1;\n-  int use_vec_delete = !!(which_delete & 2);\n-  enum tree_code code = use_vec_delete ? VEC_DELETE_EXPR : DELETE_EXPR;\n-\n-  return build_op_delete_call (code, addr, virtual_size, use_global_delete,\n-\t\t\t       NULL_TREE);\n-}\n-\n /* Call the DTOR_KIND destructor for EXP.  FLAGS are as for\n    build_delete.  */\n "}]}