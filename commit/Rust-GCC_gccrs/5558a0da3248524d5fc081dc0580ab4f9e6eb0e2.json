{"sha": "5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTU1OGEwZGEzMjQ4NTI0ZDVmYzA4MWRjMDU4MGFiNGY5ZTZlYjBlMg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-12-03T08:19:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-12-03T08:19:04Z"}, "message": "re PR c++/92695 (P1064R0 - virtual constexpr fails if object taken from array)\n\n\tPR c++/92695\n\t* constexpr.c (cxx_bind_parameters_in_call): For virtual calls,\n\tadjust the first argument to point to the derived object rather\n\tthan its base.\n\n\t* g++.dg/cpp2a/constexpr-virtual14.C: New test.\n\nFrom-SVN: r278921", "tree": {"sha": "ea748b6074ebac645335ae075a76ac871e132270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea748b6074ebac645335ae075a76ac871e132270"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d109462bdd666cc5ce2d0b6b0c3b7a3c19b0b4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d109462bdd666cc5ce2d0b6b0c3b7a3c19b0b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d109462bdd666cc5ce2d0b6b0c3b7a3c19b0b4c"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "1565d72b45583193f572968120f0abe08bbcfea8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "patch": "@@ -1,3 +1,10 @@\n+2019-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/92695\n+\t* constexpr.c (cxx_bind_parameters_in_call): For virtual calls,\n+\tadjust the first argument to point to the derived object rather\n+\tthan its base.\n+\n 2019-12-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/92695"}, {"sha": "39118200285c67c892a05fc0e1ebfa841abef7ed", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "patch": "@@ -1441,6 +1441,26 @@ cxx_bind_parameters_in_call (const constexpr_ctx *ctx, tree t,\n \t    arg = adjust_temp_type (type, arg);\n \t  if (!TREE_CONSTANT (arg))\n \t    *non_constant_args = true;\n+\t  /* For virtual calls, adjust the this argument, so that it is\n+\t     the object on which the method is called, rather than\n+\t     one of its bases.  */\n+\t  if (i == 0 && DECL_VIRTUAL_P (fun))\n+\t    {\n+\t      tree addr = arg;\n+\t      STRIP_NOPS (addr);\n+\t      if (TREE_CODE (addr) == ADDR_EXPR)\n+\t\t{\n+\t\t  tree obj = TREE_OPERAND (addr, 0);\n+\t\t  while (TREE_CODE (obj) == COMPONENT_REF\n+\t\t\t && DECL_FIELD_IS_BASE (TREE_OPERAND (obj, 1))\n+\t\t\t && !same_type_ignoring_top_level_qualifiers_p\n+\t\t\t\t\t(TREE_TYPE (obj), DECL_CONTEXT (fun)))\n+\t\t    obj = TREE_OPERAND (obj, 0);\n+\t\t  if (obj != TREE_OPERAND (addr, 0))\n+\t\t    arg = build_fold_addr_expr_with_type (obj,\n+\t\t\t\t\t\t\t  TREE_TYPE (arg));\n+\t\t}\n+\t    }\n \t  TREE_VEC_ELT (binds, i) = arg;\n \t}\n       parms = TREE_CHAIN (parms);"}, {"sha": "edd1869f384bda1ed581883a31e6684adc7b5757", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "patch": "@@ -1,3 +1,8 @@\n+2019-12-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/92695\n+\t* g++.dg/cpp2a/constexpr-virtual14.C: New test.\n+\n 2019-12-03  Luo Xiong Hu  <luoxhu@linux.ibm.com>\n \n \t* gcc.target/powerpc/pr72804.c: Fix missing space."}, {"sha": "b29d3f6aefb0630744caaf42864043214db3b468", "filename": "gcc/testsuite/g++.dg/cpp2a/constexpr-virtual14.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5558a0da3248524d5fc081dc0580ab4f9e6eb0e2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconstexpr-virtual14.C?ref=5558a0da3248524d5fc081dc0580ab4f9e6eb0e2", "patch": "@@ -0,0 +1,27 @@\n+// PR c++/92695\n+// { dg-do compile { target c++2a } }\n+\n+struct A {\n+  virtual int get () = 0;\n+  virtual int set (A *o) = 0;\n+};\n+struct B : A {\n+  constexpr int get () override { return 10; }\n+  constexpr int set (A *o) override { a = o; return 20; }\n+  A *a {};\n+};\n+constexpr auto addressof = [] (A &n) { return &n; };\n+struct C {\n+  B b;\n+  A *c { addressof (b) };\n+  constexpr int add () { return c->set (addressof (b)); }\n+};\n+struct D {\n+  B b[2];\n+  A *c { addressof (b[0]) };\n+  constexpr int add () { return c->set (addressof (b[0])); }\n+};\n+template <typename T>\n+constexpr int get () { T f; return f.add (); }\n+static_assert (get<C> () == 20);\n+static_assert (get<D> () == 20);"}]}