{"sha": "8e104951788de1a591287637d2b29fa37d8822ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUxMDQ5NTE3ODhkZTFhNTkxMjg3NjM3ZDJiMjlmYTM3ZDg4MjJlYQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2016-10-25T14:16:10Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2016-10-25T14:16:10Z"}, "message": "Fix not caught use-after-scope with -O1 (PR sanitize/78106)\n\n\tPR sanitizer/78106\n\t* sanopt.c (imm_dom_path_with_freeing_call): Handle gasm\n\tstatements as they can also contain possibly a freeing call.\n\tPR sanitizer/78106\n\t* gcc.dg/asan/pr78106.c: New test.\n\nFrom-SVN: r241511", "tree": {"sha": "18fc8d8acdae6c8a7b6ba799f256667fab11c24b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/18fc8d8acdae6c8a7b6ba799f256667fab11c24b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e104951788de1a591287637d2b29fa37d8822ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e104951788de1a591287637d2b29fa37d8822ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e104951788de1a591287637d2b29fa37d8822ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e104951788de1a591287637d2b29fa37d8822ea/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b93ee1bb06d43c0547b4de6f1389deafa28a474c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b93ee1bb06d43c0547b4de6f1389deafa28a474c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b93ee1bb06d43c0547b4de6f1389deafa28a474c"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "65483863f7151b12cbe7fac1dae041b4076107ff", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e104951788de1a591287637d2b29fa37d8822ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e104951788de1a591287637d2b29fa37d8822ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e104951788de1a591287637d2b29fa37d8822ea", "patch": "@@ -1,3 +1,9 @@\n+2016-10-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/78106\n+\t* sanopt.c (imm_dom_path_with_freeing_call): Handle gasm\n+\tstatements as they can also contain possibly a freeing call.\n+\n 2016-10-25  H.J. Lu  <hongjiu.lu@intel.com>\n \t    Martin Liska  <mliska@suse.cz>\n "}, {"sha": "8a6fbe9da9513d0a83a6defb0656c173086431d8", "filename": "gcc/sanopt.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e104951788de1a591287637d2b29fa37d8822ea/gcc%2Fsanopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e104951788de1a591287637d2b29fa37d8822ea/gcc%2Fsanopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsanopt.c?ref=8e104951788de1a591287637d2b29fa37d8822ea", "patch": "@@ -211,8 +211,12 @@ imm_dom_path_with_freeing_call (basic_block bb, basic_block dom)\n       for (gsi = gsi_start_bb (e->src); !gsi_end_p (gsi); gsi_next (&gsi))\n \t{\n \t  gimple *stmt = gsi_stmt (gsi);\n+\t  gasm *asm_stmt;\n \n-\t  if (is_gimple_call (stmt) && !nonfreeing_call_p (stmt))\n+\t  if ((is_gimple_call (stmt) && !nonfreeing_call_p (stmt))\n+\t      || ((asm_stmt = dyn_cast <gasm *> (stmt))\n+\t\t  && (gimple_asm_clobbers_memory_p (asm_stmt)\n+\t\t      || gimple_asm_volatile_p (asm_stmt))))\n \t    {\n \t      pred_info->has_freeing_call_p = true;\n \t      break;"}, {"sha": "edc026eb44fc75b75ea82a81be3d7ba84b5f1c7b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e104951788de1a591287637d2b29fa37d8822ea/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e104951788de1a591287637d2b29fa37d8822ea/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8e104951788de1a591287637d2b29fa37d8822ea", "patch": "@@ -1,3 +1,8 @@\n+2016-10-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR sanitizer/78106\n+\t* gcc.dg/asan/pr78106.c: New test.\n+\n 2016-10-25  Martin Liska  <mliska@suse.cz>\n \n \t* gcc.dg/ipa/ipa-icf-32.c: Removed one scanned pattern."}, {"sha": "d333f9bc082d567fc18f14365cf4800e7dc8e315", "filename": "gcc/testsuite/gcc.dg/asan/pr78106.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e104951788de1a591287637d2b29fa37d8822ea/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78106.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e104951788de1a591287637d2b29fa37d8822ea/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78106.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fasan%2Fpr78106.c?ref=8e104951788de1a591287637d2b29fa37d8822ea", "patch": "@@ -0,0 +1,31 @@\n+/* PR sanitizer/78106 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fsanitize=address -fdump-tree-sanopt-details\" } */\n+\n+int *variable;\n+\n+void __attribute__((used)) release()\n+{\n+  __builtin_free (variable);\n+}\n+\n+int main2(int argc)\n+{\n+  *variable = 2;\n+\n+  if (argc <= 5)\n+    asm volatile (\"call release\");\n+\n+  *variable = 2;\n+  __builtin_abort ();\n+\n+  return 0;\n+}\n+\n+int main(int argc, char **argv)\n+{\n+  variable = __builtin_malloc (sizeof(int));\n+  return main2(argc);\n+}\n+\n+/* { dg-final { scan-tree-dump-not \"Optimizing out(\\n|\\r\\n|\\r)  ASAN_CHECK \\\\(7, variable.*\" \"sanopt\" } } */"}]}