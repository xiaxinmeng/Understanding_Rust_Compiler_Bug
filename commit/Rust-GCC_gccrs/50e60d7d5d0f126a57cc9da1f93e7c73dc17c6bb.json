{"sha": "50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBlNjBkN2Q1ZDBmMTI2YTU3Y2M5ZGExZjkzZTdjNzNkYzE3YzZiYg==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2013-10-11T14:03:53Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2013-10-11T14:03:53Z"}, "message": "i386.c (bdesc_args): Change corresponding pattern for __builtin_ia32_cvtps2dq...\n\n        * config/i386/i386.c (bdesc_args): Change corresponding pattern  for\n        __builtin_ia32_cvtps2dq, __builtin_ia32_cvtps2dq256.\n        * config/i386/sse.md (VI4_AVX): New.\n        (sf2simodelower): Ditto.\n        (sse2_cvtps2dq): Change to ...\n        (<sse2_avx_avx512f>_fix_notrunc<sf2simodelower><mode>): This.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\nCo-Authored-By: Sergey Lega <sergey.s.lega@intel.com>\n\nFrom-SVN: r203441", "tree": {"sha": "d3e4935b64a94fb27159273e3e92ac42c167e13a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3e4935b64a94fb27159273e3e92ac42c167e13a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb/comments", "author": null, "committer": null, "parents": [{"sha": "f62ce24ff7570cf14d351c15d2799ad91ee54335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f62ce24ff7570cf14d351c15d2799ad91ee54335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f62ce24ff7570cf14d351c15d2799ad91ee54335"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "bedc5d4b87c7a8f82e1cf892261c42b6ce5e962c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb", "patch": "@@ -1,3 +1,20 @@\n+2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Sergey Lega  <sergey.s.lega@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/i386.c (bdesc_args): Change corresponding pattern  for\n+\t__builtin_ia32_cvtps2dq, __builtin_ia32_cvtps2dq256.\n+\t* config/i386/sse.md (VI4_AVX): New.\n+\t(sf2simodelower): Ditto.\n+\t(sse2_cvtps2dq): Change to ...\n+\t(<sse2_avx_avx512f>_fix_notrunc<sf2simodelower><mode>): This.\n+\n 2013-10-11  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n \t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n \t    Sergey Lega  <sergey.s.lega@intel.com>"}, {"sha": "f6058a42ea94d28d974a459e6d23b1cac9c020ef", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb", "patch": "@@ -27777,7 +27777,7 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_64BIT, CODE_FOR_sse2_cvtsd2siq, \"__builtin_ia32_cvtsd2si64\", IX86_BUILTIN_CVTSD2SI64, UNKNOWN, (int) INT64_FTYPE_V2DF },\n   { OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_64BIT, CODE_FOR_sse2_cvttsd2siq, \"__builtin_ia32_cvttsd2si64\", IX86_BUILTIN_CVTTSD2SI64, UNKNOWN, (int) INT64_FTYPE_V2DF },\n \n-  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtps2dq, \"__builtin_ia32_cvtps2dq\", IX86_BUILTIN_CVTPS2DQ, UNKNOWN, (int) V4SI_FTYPE_V4SF },\n+  { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_fix_notruncv4sfv4si, \"__builtin_ia32_cvtps2dq\", IX86_BUILTIN_CVTPS2DQ, UNKNOWN, (int) V4SI_FTYPE_V4SF },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_sse2_cvtps2pd, \"__builtin_ia32_cvtps2pd\", IX86_BUILTIN_CVTPS2PD, UNKNOWN, (int) V2DF_FTYPE_V4SF },\n   { OPTION_MASK_ISA_SSE2, CODE_FOR_fix_truncv4sfv4si2, \"__builtin_ia32_cvttps2dq\", IX86_BUILTIN_CVTTPS2DQ, UNKNOWN, (int) V4SI_FTYPE_V4SF },\n \n@@ -28125,7 +28125,7 @@ static const struct builtin_description bdesc_args[] =\n   { OPTION_MASK_ISA_AVX, CODE_FOR_floatv4siv4df2, \"__builtin_ia32_cvtdq2pd256\", IX86_BUILTIN_CVTDQ2PD256, UNKNOWN, (int) V4DF_FTYPE_V4SI },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_floatv8siv8sf2, \"__builtin_ia32_cvtdq2ps256\", IX86_BUILTIN_CVTDQ2PS256, UNKNOWN, (int) V8SF_FTYPE_V8SI },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_cvtpd2ps256, \"__builtin_ia32_cvtpd2ps256\", IX86_BUILTIN_CVTPD2PS256, UNKNOWN, (int) V4SF_FTYPE_V4DF },\n-  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_cvtps2dq256, \"__builtin_ia32_cvtps2dq256\", IX86_BUILTIN_CVTPS2DQ256, UNKNOWN, (int) V8SI_FTYPE_V8SF },\n+  { OPTION_MASK_ISA_AVX, CODE_FOR_avx_fix_notruncv8sfv8si, \"__builtin_ia32_cvtps2dq256\", IX86_BUILTIN_CVTPS2DQ256, UNKNOWN, (int) V8SI_FTYPE_V8SF },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_cvtps2pd256, \"__builtin_ia32_cvtps2pd256\", IX86_BUILTIN_CVTPS2PD256, UNKNOWN, (int) V4DF_FTYPE_V4SF },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_fix_truncv4dfv4si2, \"__builtin_ia32_cvttpd2dq256\", IX86_BUILTIN_CVTTPD2DQ256, UNKNOWN, (int) V4SI_FTYPE_V4DF },\n   { OPTION_MASK_ISA_AVX, CODE_FOR_avx_cvtpd2dq256, \"__builtin_ia32_cvtpd2dq256\", IX86_BUILTIN_CVTPD2DQ256, UNKNOWN, (int) V4SI_FTYPE_V4DF },"}, {"sha": "09f5ce472430bc557c3f8c95db1f477765cc0b58", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=50e60d7d5d0f126a57cc9da1f93e7c73dc17c6bb", "patch": "@@ -207,6 +207,9 @@\n (define_mode_iterator VI2_AVX512F\n   [(V32HI \"TARGET_AVX512F\") (V16HI \"TARGET_AVX2\") V8HI])\n \n+(define_mode_iterator VI4_AVX\n+  [(V8SI \"TARGET_AVX\") V4SI])\n+\n (define_mode_iterator VI4_AVX2\n   [(V8SI \"TARGET_AVX2\") V4SI])\n \n@@ -2827,20 +2830,16 @@\n   DONE;\n })\n \n-(define_insn \"avx_cvtps2dq256\"\n-  [(set (match_operand:V8SI 0 \"register_operand\" \"=x\")\n-\t(unspec:V8SI [(match_operand:V8SF 1 \"nonimmediate_operand\" \"xm\")]\n-\t\t     UNSPEC_FIX_NOTRUNC))]\n-  \"TARGET_AVX\"\n-  \"vcvtps2dq\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"prefix\" \"vex\")\n-   (set_attr \"mode\" \"OI\")])\n \n-(define_insn \"sse2_cvtps2dq\"\n-  [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n-\t(unspec:V4SI [(match_operand:V4SF 1 \"nonimmediate_operand\" \"xm\")]\n-\t\t     UNSPEC_FIX_NOTRUNC))]\n+;; For <sse2_avx_avx512f>_fix_notrunc<sf2simodelower><mode> insn pattern\n+(define_mode_attr sf2simodelower\n+  [(V16SI \"v16sf\") (V8SI \"v8sf\") (V4SI \"v4sf\")])\n+\n+(define_insn \"<sse2_avx_avx512f>_fix_notrunc<sf2simodelower><mode>\"\n+  [(set (match_operand:VI4_AVX 0 \"register_operand\" \"=v\")\n+\t(unspec:VI4_AVX\n+\t  [(match_operand:<ssePSmode> 1 \"nonimmediate_operand\" \"vm\")]\n+\t  UNSPEC_FIX_NOTRUNC))]\n   \"TARGET_SSE2\"\n   \"%vcvtps2dq\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n@@ -2850,7 +2849,7 @@\n      (const_string \"*\")\n      (const_string \"1\")))\n    (set_attr \"prefix\" \"maybe_vex\")\n-   (set_attr \"mode\" \"TI\")])\n+   (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"<fixsuffix>fix_truncv16sfv16si2\"\n   [(set (match_operand:V16SI 0 \"register_operand\" \"=v\")"}]}