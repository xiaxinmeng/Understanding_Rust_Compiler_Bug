{"sha": "87603e565615db055f7f60db0c9888f71d233826", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc2MDNlNTY1NjE1ZGIwNTVmN2Y2MGRiMGM5ODg4ZjcxZDIzMzgyNg==", "commit": {"author": {"name": "Felix Willgerodt", "email": "felix.willgerodt@intel.com", "date": "2020-08-17T11:36:49Z"}, "committer": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2020-09-08T17:38:12Z"}, "message": "floatformat.h: Add bfloat16 support.\n\nThis change is motivated by a patchset that adds bfloat16 debugging\nsupport for new avx512 instructions to GDB. The gdb thread can be found\nhere: https://sourceware.org/pipermail/gdb-patches/2020-July/170820.html\n\ninclude:\n2020-08-17  Felix Willgerodt  <felix.willgerodt@intel.com>\n\n\t* floatformat.h (floatformat_bfloat16_big): New.\n\t(floatformat_bfloat16_little): New.\n\nlibiberty:\n2020-08-17  Felix Willgerodt  <felix.willgerodt@intel.com>\n\n\t* floatformat.c (floatformat_bfloat16_big): New.\n\t(floatformat_bfloat16_little): New.", "tree": {"sha": "e192a2eebf77e81a0245d5f82755ac42946bf041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e192a2eebf77e81a0245d5f82755ac42946bf041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87603e565615db055f7f60db0c9888f71d233826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87603e565615db055f7f60db0c9888f71d233826", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87603e565615db055f7f60db0c9888f71d233826", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87603e565615db055f7f60db0c9888f71d233826/comments", "author": {"login": "felix-willgerodt", "id": 68062808, "node_id": "MDQ6VXNlcjY4MDYyODA4", "avatar_url": "https://avatars.githubusercontent.com/u/68062808?v=4", "gravatar_id": "", "url": "https://api.github.com/users/felix-willgerodt", "html_url": "https://github.com/felix-willgerodt", "followers_url": "https://api.github.com/users/felix-willgerodt/followers", "following_url": "https://api.github.com/users/felix-willgerodt/following{/other_user}", "gists_url": "https://api.github.com/users/felix-willgerodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/felix-willgerodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/felix-willgerodt/subscriptions", "organizations_url": "https://api.github.com/users/felix-willgerodt/orgs", "repos_url": "https://api.github.com/users/felix-willgerodt/repos", "events_url": "https://api.github.com/users/felix-willgerodt/events{/privacy}", "received_events_url": "https://api.github.com/users/felix-willgerodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34d926dba097c4965917d09a3eedec11242c5457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34d926dba097c4965917d09a3eedec11242c5457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34d926dba097c4965917d09a3eedec11242c5457"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "630fade044984a51dd8b1320e6888c27d2b25969", "filename": "include/floatformat.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87603e565615db055f7f60db0c9888f71d233826/include%2Ffloatformat.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87603e565615db055f7f60db0c9888f71d233826/include%2Ffloatformat.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Ffloatformat.h?ref=87603e565615db055f7f60db0c9888f71d233826", "patch": "@@ -133,6 +133,9 @@ extern const struct floatformat floatformat_ia64_quad_little;\n /* IBM long double (double+double).  */\n extern const struct floatformat floatformat_ibm_long_double_big;\n extern const struct floatformat floatformat_ibm_long_double_little;\n+/* bfloat16.  */\n+extern const struct floatformat floatformat_bfloat16_big;\n+extern const struct floatformat floatformat_bfloat16_little;\n \n /* Convert from FMT to a double.\n    FROM is the address of the extended float."}, {"sha": "6b9b03288e29cee2713f7232e7585e8ebf5429bd", "filename": "libiberty/floatformat.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87603e565615db055f7f60db0c9888f71d233826/libiberty%2Ffloatformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87603e565615db055f7f60db0c9888f71d233826/libiberty%2Ffloatformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffloatformat.c?ref=87603e565615db055f7f60db0c9888f71d233826", "patch": "@@ -389,7 +389,24 @@ const struct floatformat floatformat_ibm_long_double_little =\n   floatformat_ibm_long_double_is_valid,\n   &floatformat_ieee_double_little\n };\n-\f\n+\n+const struct floatformat floatformat_bfloat16_big =\n+{\n+  floatformat_big, 16, 0, 1, 8, 127, 255, 9, 7,\n+  floatformat_intbit_no,\n+  \"floatformat_bfloat16_big\",\n+  floatformat_always_valid,\n+  NULL\n+};\n+\n+const struct floatformat floatformat_bfloat16_little =\n+{\n+  floatformat_little, 16, 0, 1, 8, 127, 255, 9, 7,\n+  floatformat_intbit_no,\n+  \"floatformat_bfloat16_little\",\n+  floatformat_always_valid,\n+  NULL\n+};\n \n #ifndef min\n #define min(a, b) ((a) < (b) ? (a) : (b))"}]}