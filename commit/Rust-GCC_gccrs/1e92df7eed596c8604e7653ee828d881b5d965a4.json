{"sha": "1e92df7eed596c8604e7653ee828d881b5d965a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU5MmRmN2VlZDU5NmM4NjA0ZTc2NTNlZTgyOGQ4ODFiNWQ5NjVhNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-07T09:51:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-07T09:51:46Z"}, "message": "re PR debug/88723 (PR debug/88635 patch breaks testsuite_shared.cc compilation)\n\n\tPR debug/88723\n\t* dwarf2out.c (const_ok_for_output_1): Remove redundant call to\n\tconst_not_ok_for_debug_p target hook.\n\t(mem_loc_descriptor) <case UNSPEC>: Only call const_ok_for_output_1\n\ton UNSPEC and subexpressions thereof if all subexpressions of the\n\tUNSPEC are CONSTANT_P.\n\nFrom-SVN: r267638", "tree": {"sha": "4297ec7f51d59e568ccf6caf45cc5e259af7e3b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4297ec7f51d59e568ccf6caf45cc5e259af7e3b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e92df7eed596c8604e7653ee828d881b5d965a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e92df7eed596c8604e7653ee828d881b5d965a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e92df7eed596c8604e7653ee828d881b5d965a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e92df7eed596c8604e7653ee828d881b5d965a4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0119d5a23abf2f45f5ec336589d4adad9dfc5c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0119d5a23abf2f45f5ec336589d4adad9dfc5c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0119d5a23abf2f45f5ec336589d4adad9dfc5c7f"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "a17c6c7b020e6c50d68149f310f2d02c1fdb3a6d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e92df7eed596c8604e7653ee828d881b5d965a4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e92df7eed596c8604e7653ee828d881b5d965a4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e92df7eed596c8604e7653ee828d881b5d965a4", "patch": "@@ -1,5 +1,12 @@\n 2019-01-07  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR debug/88723\n+\t* dwarf2out.c (const_ok_for_output_1): Remove redundant call to\n+\tconst_not_ok_for_debug_p target hook.\n+\t(mem_loc_descriptor) <case UNSPEC>: Only call const_ok_for_output_1\n+\ton UNSPEC and subexpressions thereof if all subexpressions of the\n+\tUNSPEC are CONSTANT_P.\n+\n \tPR tree-optimization/88676\n \t* tree-ssa-phiopt.c (two_value_replacement): New function.\n \t(tree_ssa_phiopt_worker): Call it."}, {"sha": "8b4f7bc95bf297156c0813880ae1cd07b59f9791", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e92df7eed596c8604e7653ee828d881b5d965a4/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e92df7eed596c8604e7653ee828d881b5d965a4/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=1e92df7eed596c8604e7653ee828d881b5d965a4", "patch": "@@ -14445,13 +14445,6 @@ const_ok_for_output_1 (rtx rtl)\n   if (CONST_POLY_INT_P (rtl))\n     return false;\n \n-  if (targetm.const_not_ok_for_debug_p (rtl))\n-    {\n-      expansion_failed (NULL_TREE, rtl,\n-\t\t\t\"Expression rejected for debug by the backend.\\n\");\n-      return false;\n-    }\n-\n   /* FIXME: Refer to PR60655. It is possible for simplification\n      of rtl expressions in var tracking to produce such expressions.\n      We should really identify / validate expressions\n@@ -15660,8 +15653,17 @@ mem_loc_descriptor (rtx rtl, machine_mode mode,\n \t  bool not_ok = false;\n \t  subrtx_var_iterator::array_type array;\n \t  FOR_EACH_SUBRTX_VAR (iter, array, rtl, ALL)\n-\t    if ((*iter != rtl && !CONSTANT_P (*iter))\n-\t\t|| !const_ok_for_output_1 (*iter))\n+\t    if (*iter != rtl && !CONSTANT_P (*iter))\n+\t      {\n+\t\tnot_ok = true;\n+\t\tbreak;\n+\t      }\n+\n+\t  if (not_ok)\n+\t    break;\n+\n+\t  FOR_EACH_SUBRTX_VAR (iter, array, rtl, ALL)\n+\t    if (!const_ok_for_output_1 (*iter))\n \t      {\n \t\tnot_ok = true;\n \t\tbreak;"}]}