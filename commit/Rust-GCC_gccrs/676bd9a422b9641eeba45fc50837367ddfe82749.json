{"sha": "676bd9a422b9641eeba45fc50837367ddfe82749", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc2YmQ5YTQyMmI5NjQxZWViYTQ1ZmM1MDgzNzM2N2RkZmU4Mjc0OQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2012-06-01T16:41:25Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2012-06-01T16:41:25Z"}, "message": "vxworks.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Restore the \"do {\" part of the do-while(0) loop.\n\n        * config/rs6000/vxworks.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Restore the\n        \"do {\" part of the do-while(0) loop.\n\nFrom-SVN: r188114", "tree": {"sha": "ad1f50fb37360086c227c374ffbbb999028c1b72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad1f50fb37360086c227c374ffbbb999028c1b72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/676bd9a422b9641eeba45fc50837367ddfe82749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/676bd9a422b9641eeba45fc50837367ddfe82749", "html_url": "https://github.com/Rust-GCC/gccrs/commit/676bd9a422b9641eeba45fc50837367ddfe82749", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/676bd9a422b9641eeba45fc50837367ddfe82749/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5714705f1189d42e55c4209e2d2485c9d3bea1cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5714705f1189d42e55c4209e2d2485c9d3bea1cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5714705f1189d42e55c4209e2d2485c9d3bea1cd"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4b802230f3f69709de613af5d92f56ee3d8e99f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676bd9a422b9641eeba45fc50837367ddfe82749/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676bd9a422b9641eeba45fc50837367ddfe82749/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=676bd9a422b9641eeba45fc50837367ddfe82749", "patch": "@@ -1,3 +1,8 @@\n+2012-06-01  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/rs6000/vxworks.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Restore\n+\tthe \"do {\" part of the do-while(0) loop.\n+\n 2012-06-01  Yuri Rumyantsev  <yuri.s.rumyantsev@intel.com>\n \n \t* config/i386/i386.c (x86_sched_reorder): New function."}, {"sha": "6169f1660595cef1ec5ee02eb7f60a8a30a2d9fb", "filename": "gcc/config/rs6000/vxworks.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/676bd9a422b9641eeba45fc50837367ddfe82749/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/676bd9a422b9641eeba45fc50837367ddfe82749/gcc%2Fconfig%2Frs6000%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvxworks.h?ref=676bd9a422b9641eeba45fc50837367ddfe82749", "patch": "@@ -124,6 +124,7 @@ VXWORKS_ADDITIONAL_CPP_SPEC\n \n #undef SUBSUBTARGET_OVERRIDE_OPTIONS\n #define SUBSUBTARGET_OVERRIDE_OPTIONS\t\t\\\n+  do {\t\t\t\t\t\t\\\n   if (!global_options_set.x_g_switch_value)\t\\\n     g_switch_value = SDATA_DEFAULT_SIZE;\t\\\n   VXWORKS_OVERRIDE_OPTIONS;\t\t\t\\"}]}