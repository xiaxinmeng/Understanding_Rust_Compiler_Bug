{"sha": "86b76c209b26dba6ebeacd9464cfb4df75ff9e6e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODZiNzZjMjA5YjI2ZGJhNmViZWFjZDk0NjRjZmI0ZGY3NWZmOWU2ZQ==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2015-06-09T15:46:30Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2015-06-09T15:46:30Z"}, "message": "Handle location in expand_ifn_va_arg_1\n\n2015-06-09  Tom de Vries  <tom@codesourcery.com>\n\n\t* tree-stdarg.c (expand_ifn_va_arg_1): Handle location.\n\n\t* gcc.target/i386/vararg-loc.c: New test.\n\nFrom-SVN: r224288", "tree": {"sha": "c1f1f3ef87b64552b369711daf25581b555fc3c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1f1f3ef87b64552b369711daf25581b555fc3c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/comments", "author": null, "committer": null, "parents": [{"sha": "5af874fb6518ed3e21c1e0f750fac86788fdafa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5af874fb6518ed3e21c1e0f750fac86788fdafa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5af874fb6518ed3e21c1e0f750fac86788fdafa3"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "27b6cd219d1704d6b14a1ca41c391dda5a0f0e24", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=86b76c209b26dba6ebeacd9464cfb4df75ff9e6e", "patch": "@@ -1,3 +1,7 @@\n+2015-06-09  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* tree-stdarg.c (expand_ifn_va_arg_1): Handle location.\n+\n 2015-06-09  Jason Merrill  <jason@redhat.com>\n \n \tPR bootstrap/66448"}, {"sha": "64e924aae54b9506aaeabdd163e2b89a99fb00b5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=86b76c209b26dba6ebeacd9464cfb4df75ff9e6e", "patch": "@@ -1,3 +1,7 @@\n+2015-06-09  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* gcc.target/i386/vararg-loc.c: New test.\n+\n 2015-06-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/65815"}, {"sha": "f236fe3986eb7d40dee074d170b516f24ed72898", "filename": "gcc/testsuite/gcc.target/i386/vararg-loc.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvararg-loc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvararg-loc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvararg-loc.c?ref=86b76c209b26dba6ebeacd9464cfb4df75ff9e6e", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-g -O0\" } */\n+\n+#include <stdarg.h>\n+\n+int\t\t\t\t/* 6.  */\n+\t\t\t\t/* 7.  */\n+f (int a, ...)\t\t\t/* 8.  */\n+\t\t\t\t/* 9.  */\n+{\n+\n+  int sum = a;\n+\n+  va_list ap;\n+\n+  va_start (ap, a);\n+\n+  sum += va_arg (ap, int);\t/* 18.  */\n+\n+  sum += va_arg (ap, int);\t/* 20.  */\n+\n+  return sum;\n+}\n+\n+/* { dg-final { scan-assembler-not \"\\\\.loc 1 \\[6789\\] 0\" } } */\n+/* { dg-final { scan-assembler-times \"\\\\.loc 1 18 0\" 1 } } */\n+/* { dg-final { scan-assembler-times \"\\\\.loc 1 20 0\" 1 } } */"}, {"sha": "65fe9f9e767b6178d587a43ee93c40b052d4441b", "filename": "gcc/tree-stdarg.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/gcc%2Ftree-stdarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/86b76c209b26dba6ebeacd9464cfb4df75ff9e6e/gcc%2Ftree-stdarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-stdarg.c?ref=86b76c209b26dba6ebeacd9464cfb4df75ff9e6e", "patch": "@@ -1031,6 +1031,7 @@ expand_ifn_va_arg_1 (function *fun)\n   bool modified = false;\n   basic_block bb;\n   gimple_stmt_iterator i;\n+  location_t saved_location;\n \n   FOR_EACH_BB_FN (bb, fun)\n     for (i = gsi_start_bb (bb); !gsi_end_p (i); gsi_next (&i))\n@@ -1051,6 +1052,8 @@ expand_ifn_va_arg_1 (function *fun)\n \tap = build_fold_indirect_ref (ap);\n \n \tpush_gimplify_context (false);\n+\tsaved_location = input_location;\n+\tinput_location = gimple_location (stmt);\n \n \t/* Make it easier for the backends by protecting the valist argument\n \t   from multiple evaluations.  */\n@@ -1081,6 +1084,7 @@ expand_ifn_va_arg_1 (function *fun)\n \telse\n \t  gimplify_expr (&expr, &pre, &post, is_gimple_lvalue, fb_lvalue);\n \n+\tinput_location = saved_location;\n \tpop_gimplify_context (NULL);\n \n \tgimple_seq_add_seq (&pre, post);"}]}