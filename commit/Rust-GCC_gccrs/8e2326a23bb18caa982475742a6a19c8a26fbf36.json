{"sha": "8e2326a23bb18caa982475742a6a19c8a26fbf36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGUyMzI2YTIzYmIxOGNhYTk4MjQ3NTc0MmE2YTE5YzhhMjZmYmYzNg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-10-31T08:01:14Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-10-31T08:01:14Z"}, "message": "combine.c (make_extraction): Remove dead wanted_inner_mode- and pos_rtx-related code.\n\ngcc/\n\t* combine.c (make_extraction): Remove dead wanted_inner_mode-\n\tand pos_rtx-related code.\n\nFrom-SVN: r193025", "tree": {"sha": "6b84c73b938d2794ffb1a08967b6cedf2bdb308c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b84c73b938d2794ffb1a08967b6cedf2bdb308c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8e2326a23bb18caa982475742a6a19c8a26fbf36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e2326a23bb18caa982475742a6a19c8a26fbf36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e2326a23bb18caa982475742a6a19c8a26fbf36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e2326a23bb18caa982475742a6a19c8a26fbf36/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "17a73ba04992fcbd31b572c7492699cff0248995", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a73ba04992fcbd31b572c7492699cff0248995", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17a73ba04992fcbd31b572c7492699cff0248995"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "5b6fd01d85fa751c3259b02674b17fe08da7e230", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2326a23bb18caa982475742a6a19c8a26fbf36/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2326a23bb18caa982475742a6a19c8a26fbf36/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8e2326a23bb18caa982475742a6a19c8a26fbf36", "patch": "@@ -1,3 +1,8 @@\n+2012-10-31  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* combine.c (make_extraction): Remove dead wanted_inner_mode-\n+\tand pos_rtx-related code.\n+\n 2012-10-31  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* expmed.c (store_bit_field_1): Move generation of MEM insvs"}, {"sha": "e9d0a45d6339e45bd465e7a22ca2f1701e6d858a", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8e2326a23bb18caa982475742a6a19c8a26fbf36/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8e2326a23bb18caa982475742a6a19c8a26fbf36/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=8e2326a23bb18caa982475742a6a19c8a26fbf36", "patch": "@@ -7211,10 +7211,6 @@ make_extraction (enum machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n       && GET_MODE_SIZE (extraction_mode) < GET_MODE_SIZE (mode))\n     extraction_mode = mode;\n \n-  if (pos_rtx && GET_MODE (pos_rtx) != VOIDmode\n-      && GET_MODE_SIZE (pos_mode) < GET_MODE_SIZE (GET_MODE (pos_rtx)))\n-    pos_mode = GET_MODE (pos_rtx);\n-\n   /* If this is not from memory, the desired mode is the preferred mode\n      for an extraction pattern's first input operand, or word_mode if there\n      is none.  */\n@@ -7231,14 +7227,6 @@ make_extraction (enum machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n \t  wanted_inner_mode = GET_MODE_WIDER_MODE (wanted_inner_mode);\n \t  gcc_assert (wanted_inner_mode != VOIDmode);\n \t}\n-\n-      /* If we have to change the mode of memory and cannot, the desired mode\n-\t is EXTRACTION_MODE.  */\n-      if (inner_mode != wanted_inner_mode\n-\t  && (mode_dependent_address_p (XEXP (inner, 0), MEM_ADDR_SPACE (inner))\n-\t      || MEM_VOLATILE_P (inner)\n-\t      || pos_rtx))\n-\twanted_inner_mode = extraction_mode;\n     }\n \n   orig_pos = pos;\n@@ -7359,9 +7347,6 @@ make_extraction (enum machine_mode mode, rtx inner, HOST_WIDE_INT pos,\n \t}\n       pos_rtx = temp;\n     }\n-  else if (pos_rtx != 0\n-\t   && GET_MODE_SIZE (pos_mode) < GET_MODE_SIZE (GET_MODE (pos_rtx)))\n-    pos_rtx = gen_lowpart (pos_mode, pos_rtx);\n \n   /* Make POS_RTX unless we already have it and it is correct.  If we don't\n      have a POS_RTX but we do have an ORIG_POS_RTX, the latter must"}]}