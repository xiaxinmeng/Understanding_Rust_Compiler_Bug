{"sha": "7235c3007d0da74919e1399cfab838b03b6f8c3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIzNWMzMDA3ZDBkYTc0OTE5ZTEzOTljZmFiODM4YjAzYjZmOGMzYg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2005-03-04T15:38:13Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2005-03-04T15:38:13Z"}, "message": "re PR java/18362 (internal compiler error: in size_binop, at fold-const.c:1598)\n\n2005-03-04  Andrew Haley  <aph@redhat.com>\n\n        PR java/18362\n        * class.c (set_method_index): Don't set method_index if it is\n        NULL_TREE.\n        (layout_class_method): Don't complain about \"non-static method foo\n        overrides static method\" in the case of indirect dispatch.\n\nFrom-SVN: r95888", "tree": {"sha": "1673d4dd26e1d5a4f1b5ea444dae3777284ffdb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1673d4dd26e1d5a4f1b5ea444dae3777284ffdb6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7235c3007d0da74919e1399cfab838b03b6f8c3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7235c3007d0da74919e1399cfab838b03b6f8c3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7235c3007d0da74919e1399cfab838b03b6f8c3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7235c3007d0da74919e1399cfab838b03b6f8c3b/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "730967114bbf3cc902659a26cf43e5005c86977a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/730967114bbf3cc902659a26cf43e5005c86977a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/730967114bbf3cc902659a26cf43e5005c86977a"}], "stats": {"total": 30, "additions": 22, "deletions": 8}, "files": [{"sha": "cee0acb0947a1b034ccf1a3092697b79536e4ed1", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235c3007d0da74919e1399cfab838b03b6f8c3b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235c3007d0da74919e1399cfab838b03b6f8c3b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7235c3007d0da74919e1399cfab838b03b6f8c3b", "patch": "@@ -1,3 +1,11 @@\n+2005-03-04  Andrew Haley  <aph@redhat.com>\n+\n+        PR java/18362\n+        * class.c (set_method_index): Don't set method_index if it is\n+        NULL_TREE.\n+        (layout_class_method): Don't complain about \"non-static method foo\n+        overrides static method\" in the case of indirect dispatch.\n+\n 2005-03-02  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* jcf-io.c (caching_stat): Use __extension__ to avoid pedantic\n@@ -59,7 +67,7 @@\n \tPR java/19907\n \t* expr.c (expand_byte_code): Call promote_arguments().\n \t(promote_arguments): New function.\n-\t* decl.c (check_local_unnamed_variable): Remve special case for\n+\t* decl.c (check_local_unnamed_variable): Remove special case for\n \tnew verifier.\n \t(find_local_variable): Promote all boolean types to int\n \twhen searching for local variable decls."}, {"sha": "5e2e535dbc9462f8af417644cb42427679261d28", "filename": "gcc/java/class.c", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7235c3007d0da74919e1399cfab838b03b6f8c3b/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7235c3007d0da74919e1399cfab838b03b6f8c3b/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=7235c3007d0da74919e1399cfab838b03b6f8c3b", "patch": "@@ -1476,14 +1476,19 @@ get_dispatch_table (tree type, tree this_class_addr)\n void\n set_method_index (tree decl, tree method_index)\n {\n-  method_index = fold (convert (sizetype, method_index));\n+  if (method_index != NULL_TREE)\n+    {\n+      /* method_index is null if we're using indirect dispatch.  */\n+      method_index = fold (convert (sizetype, method_index));\n \n-  if (TARGET_VTABLE_USES_DESCRIPTORS)\n-    /* Add one to skip bogus descriptor for class and GC descriptor. */\n-    method_index = size_binop (PLUS_EXPR, method_index, size_int (1));\n-  else\n-    /* Add 1 to skip \"class\" field of dtable, and 1 to skip GC descriptor.  */\n-    method_index = size_binop (PLUS_EXPR, method_index, size_int (2));\n+      if (TARGET_VTABLE_USES_DESCRIPTORS)\n+\t/* Add one to skip bogus descriptor for class and GC descriptor. */\n+\tmethod_index = size_binop (PLUS_EXPR, method_index, size_int (1));\n+      else\n+\t/* Add 1 to skip \"class\" field of dtable, and 1 to skip GC\n+\t   descriptor.  */\n+\tmethod_index = size_binop (PLUS_EXPR, method_index, size_int (2));\n+    }\n \n   DECL_VINDEX (decl) = method_index;\n }\n@@ -2357,6 +2362,7 @@ layout_class_method (tree this_class, tree super_class,\n \t  tree method_index = get_method_index (super_method);\n \t  set_method_index (method_decl, method_index);\n \t  if (method_index == NULL_TREE \n+\t      && ! flag_indirect_dispatch\n \t      && !CLASS_FROM_SOURCE_P (this_class)\n \t      && ! DECL_ARTIFICIAL (super_method))\n \t    error (\"%Jnon-static method '%D' overrides static method\","}]}