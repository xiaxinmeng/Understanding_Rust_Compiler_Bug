{"sha": "ae14ad94e41607e5e7594f88d064140b9a48274f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxNGFkOTRlNDE2MDdlNWU3NTk0Zjg4ZDA2NDE0MGI5YTQ4Mjc0Zg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2010-01-11T11:47:16Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2010-01-11T11:47:16Z"}, "message": "* cpplib.pot: Regenerate.\n\nFrom-SVN: r155806", "tree": {"sha": "b9aadcc29c9a3e996425b1977754f547416c0b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9aadcc29c9a3e996425b1977754f547416c0b5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae14ad94e41607e5e7594f88d064140b9a48274f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae14ad94e41607e5e7594f88d064140b9a48274f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae14ad94e41607e5e7594f88d064140b9a48274f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae14ad94e41607e5e7594f88d064140b9a48274f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c76b34f6fdc9837d7cec1da440b1170d1d66457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c76b34f6fdc9837d7cec1da440b1170d1d66457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c76b34f6fdc9837d7cec1da440b1170d1d66457"}], "stats": {"total": 108, "additions": 58, "deletions": 50}, "files": [{"sha": "596da678932a4bf543f5b221f0c57eec74e4f01f", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae14ad94e41607e5e7594f88d064140b9a48274f/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae14ad94e41607e5e7594f88d064140b9a48274f/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=ae14ad94e41607e5e7594f88d064140b9a48274f", "patch": "@@ -1,3 +1,7 @@\n+2010-01-11  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2010-01-09  Joseph Myers  <joseph@codesourcery.com>\n \n \t* nl.po: Update."}, {"sha": "0c99a8f2ef29060c52aa9910bff090fb9c00293e", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 54, "deletions": 50, "changes": 104, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae14ad94e41607e5e7594f88d064140b9a48274f/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae14ad94e41607e5e7594f88d064140b9a48274f/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=ae14ad94e41607e5e7594f88d064140b9a48274f", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2009-12-02 14:22+0000\\n\"\n+\"POT-Creation-Date: 2010-01-11 11:42+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -420,207 +420,211 @@ msgstr \"\"\n msgid \"%s: %s\"\n msgstr \"\"\n \n-#: expr.c:279\n+#: expr.c:282\n msgid \"too many decimal points in number\"\n msgstr \"\"\n \n-#: expr.c:308\n-#: expr.c:390\n+#: expr.c:311\n+#: expr.c:396\n msgid \"fixed-point constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:321\n+#: expr.c:324\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in binary constant\"\n msgstr \"\"\n \n-#: expr.c:323\n+#: expr.c:326\n #, c-format\n msgid \"invalid digit \\\"%c\\\" in octal constant\"\n msgstr \"\"\n \n-#: expr.c:331\n+#: expr.c:334\n msgid \"invalid prefix \\\"0b\\\" for floating constant\"\n msgstr \"\"\n \n-#: expr.c:337\n+#: expr.c:339\n+msgid \"no digits in hexadecimal floating constant\"\n+msgstr \"\"\n+\n+#: expr.c:343\n msgid \"use of C99 hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:346\n+#: expr.c:352\n msgid \"exponent has no digits\"\n msgstr \"\"\n \n-#: expr.c:353\n+#: expr.c:359\n msgid \"hexadecimal floating constants require an exponent\"\n msgstr \"\"\n \n-#: expr.c:359\n+#: expr.c:365\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on floating constant\"\n msgstr \"\"\n \n-#: expr.c:369\n-#: expr.c:418\n+#: expr.c:375\n+#: expr.c:424\n #, c-format\n msgid \"traditional C rejects the \\\"%.*s\\\" suffix\"\n msgstr \"\"\n \n-#: expr.c:377\n+#: expr.c:383\n msgid \"suffix for double constant is a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:383\n+#: expr.c:389\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" with hexadecimal floating constant\"\n msgstr \"\"\n \n-#: expr.c:394\n+#: expr.c:400\n msgid \"decimal float constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:404\n+#: expr.c:410\n #, c-format\n msgid \"invalid suffix \\\"%.*s\\\" on integer constant\"\n msgstr \"\"\n \n-#: expr.c:427\n+#: expr.c:433\n msgid \"use of C++0x long long integer constant\"\n msgstr \"\"\n \n-#: expr.c:436\n+#: expr.c:442\n msgid \"imaginary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:439\n+#: expr.c:445\n msgid \"binary constants are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:532\n+#: expr.c:538\n msgid \"integer constant is too large for its type\"\n msgstr \"\"\n \n-#: expr.c:563\n+#: expr.c:569\n msgid \"integer constant is so large that it is unsigned\"\n msgstr \"\"\n \n-#: expr.c:658\n+#: expr.c:664\n msgid \"missing ')' after \\\"defined\\\"\"\n msgstr \"\"\n \n-#: expr.c:665\n+#: expr.c:671\n msgid \"operator \\\"defined\\\" requires an identifier\"\n msgstr \"\"\n \n-#: expr.c:673\n+#: expr.c:679\n #, c-format\n msgid \"(\\\"%s\\\" is an alternative token for \\\"%s\\\" in C++)\"\n msgstr \"\"\n \n-#: expr.c:683\n+#: expr.c:689\n msgid \"this use of \\\"defined\\\" may not be portable\"\n msgstr \"\"\n \n-#: expr.c:736\n+#: expr.c:742\n msgid \"floating constant in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:742\n+#: expr.c:748\n msgid \"imaginary number in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:789\n+#: expr.c:795\n #, c-format\n msgid \"\\\"%s\\\" is not defined\"\n msgstr \"\"\n \n-#: expr.c:801\n+#: expr.c:807\n msgid \"assertions are a GCC extension\"\n msgstr \"\"\n \n-#: expr.c:804\n+#: expr.c:810\n msgid \"assertions are a deprecated extension\"\n msgstr \"\"\n \n-#: expr.c:937\n-#: expr.c:966\n+#: expr.c:943\n+#: expr.c:972\n #, c-format\n msgid \"missing binary operator before token \\\"%s\\\"\"\n msgstr \"\"\n \n-#: expr.c:957\n+#: expr.c:963\n #, c-format\n msgid \"token \\\"%s\\\" is not valid in preprocessor expressions\"\n msgstr \"\"\n \n-#: expr.c:974\n+#: expr.c:980\n msgid \"missing expression between '(' and ')'\"\n msgstr \"\"\n \n-#: expr.c:977\n+#: expr.c:983\n #, c-format\n msgid \"%s with no expression\"\n msgstr \"\"\n \n-#: expr.c:980\n+#: expr.c:986\n #, c-format\n msgid \"operator '%s' has no right operand\"\n msgstr \"\"\n \n-#: expr.c:985\n+#: expr.c:991\n #, c-format\n msgid \"operator '%s' has no left operand\"\n msgstr \"\"\n \n-#: expr.c:1011\n+#: expr.c:1017\n msgid \" ':' without preceding '?'\"\n msgstr \"\"\n \n-#: expr.c:1039\n+#: expr.c:1045\n #, c-format\n msgid \"unbalanced stack in %s\"\n msgstr \"\"\n \n-#: expr.c:1059\n+#: expr.c:1065\n #, c-format\n msgid \"impossible operator '%u'\"\n msgstr \"\"\n \n-#: expr.c:1160\n+#: expr.c:1166\n msgid \"missing ')' in expression\"\n msgstr \"\"\n \n-#: expr.c:1189\n+#: expr.c:1195\n msgid \"'?' without following ':'\"\n msgstr \"\"\n \n-#: expr.c:1199\n+#: expr.c:1205\n msgid \"integer overflow in preprocessor expression\"\n msgstr \"\"\n \n-#: expr.c:1204\n+#: expr.c:1210\n msgid \"missing '(' in expression\"\n msgstr \"\"\n \n-#: expr.c:1236\n+#: expr.c:1242\n #, c-format\n msgid \"the left operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1241\n+#: expr.c:1247\n #, c-format\n msgid \"the right operand of \\\"%s\\\" changes sign when promoted\"\n msgstr \"\"\n \n-#: expr.c:1500\n+#: expr.c:1506\n msgid \"traditional C rejects the unary plus operator\"\n msgstr \"\"\n \n-#: expr.c:1583\n+#: expr.c:1589\n msgid \"comma operator in operand of #if\"\n msgstr \"\"\n \n-#: expr.c:1719\n+#: expr.c:1725\n msgid \"division by zero in #if\"\n msgstr \"\"\n "}]}