{"sha": "74d58ad2c208c9c445bb3e8288db08e092a66316", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRkNThhZDJjMjA4YzljNDQ1YmIzZTgyODhkYjA4ZTA5MmE2NjMxNg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2020-05-07T23:34:11Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2020-05-07T23:34:11Z"}, "message": "rs6000: Tests for setnbc\n\n2020-05-07  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* gcc.target/powerpc/setnbc.h: New.\n\t* gcc.target/powerpc/setnbceq.c: New.\n\t* gcc.target/powerpc/setnbcge.c: New.\n\t* gcc.target/powerpc/setnbcgt.c: New.\n\t* gcc.target/powerpc/setnbcle.c: New.\n\t* gcc.target/powerpc/setnbclt.c: New.\n\t* gcc.target/powerpc/setnbcne.c: New.", "tree": {"sha": "cae3a68e2f30405107eb88fc6ded7a1aaf2ebf26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cae3a68e2f30405107eb88fc6ded7a1aaf2ebf26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74d58ad2c208c9c445bb3e8288db08e092a66316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74d58ad2c208c9c445bb3e8288db08e092a66316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74d58ad2c208c9c445bb3e8288db08e092a66316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74d58ad2c208c9c445bb3e8288db08e092a66316/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "057e1eedac864342866393f260295b2c73718595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/057e1eedac864342866393f260295b2c73718595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/057e1eedac864342866393f260295b2c73718595"}], "stats": {"total": 99, "additions": 99, "deletions": 0}, "files": [{"sha": "088b80ea38f1009b46e446a1370b0f271a781e80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=74d58ad2c208c9c445bb3e8288db08e092a66316", "patch": "@@ -1,3 +1,13 @@\n+2020-05-07  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/setnbc.h: New.\n+\t* gcc.target/powerpc/setnbceq.c: New.\n+\t* gcc.target/powerpc/setnbcge.c: New.\n+\t* gcc.target/powerpc/setnbcgt.c: New.\n+\t* gcc.target/powerpc/setnbcle.c: New.\n+\t* gcc.target/powerpc/setnbclt.c: New.\n+\t* gcc.target/powerpc/setnbcne.c: New.\n+\n 2020-05-07  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* gcc.target/powerpc/setbc.h: New."}, {"sha": "d278d4a687f17c39b2219247ce531e9f69cdcfaa", "filename": "gcc/testsuite/gcc.target/powerpc/setnbc.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbc.h?ref=74d58ad2c208c9c445bb3e8288db08e092a66316", "patch": "@@ -0,0 +1,27 @@\n+#define XSTR(a,b) a ## b\n+#define T(a,b) XSTR(a,b)\n+\n+int  T(NAME,ii)(int a, int b)   { return -(a CODE b); }\n+int  T(NAME,il)(long a, long b) { return -(a CODE b); }\n+long T(NAME,li)(int a, int b)   { return -(a CODE b); }\n+long T(NAME,ll)(long a, long b) { return -(a CODE b); }\n+\n+int  T(NAME,iin0)(int a)  { return -(a CODE 0); }\n+int  T(NAME,iln0)(long a) { return -(a CODE 0); }\n+long T(NAME,lin0)(int a)  { return -(a CODE 0); }\n+long T(NAME,lln0)(long a) { return -(a CODE 0); }\n+\n+int  T(NAME,iin1)(int a)  { return -(a CODE 1); }\n+int  T(NAME,iln1)(long a) { return -(a CODE 1); }\n+long T(NAME,lin1)(int a)  { return -(a CODE 1); }\n+long T(NAME,lln1)(long a) { return -(a CODE 1); }\n+\n+int  T(NAME,iinm1)(int a)  { return -(a CODE -1); }\n+int  T(NAME,ilnm1)(long a) { return -(a CODE -1); }\n+long T(NAME,linm1)(int a)  { return -(a CODE -1); }\n+long T(NAME,llnm1)(long a) { return -(a CODE -1); }\n+\n+int  T(NAME,iin42)(int a)  { return -(a CODE 42); }\n+int  T(NAME,iln42)(long a) { return -(a CODE 42); }\n+long T(NAME,lin42)(int a)  { return -(a CODE 42); }\n+long T(NAME,lln42)(long a) { return -(a CODE 42); }"}, {"sha": "ff4af8f71fa81aeacb068ba4f719598fedadec77", "filename": "gcc/testsuite/gcc.target/powerpc/setnbceq.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbceq.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbceq.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbceq.c?ref=74d58ad2c208c9c445bb3e8288db08e092a66316", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME eq\n+#define CODE ==\n+\n+#include \"setnbc.h\"\n+\n+/* { dg-final { scan-assembler-times {\\msetnbc\\M} 20 } } */"}, {"sha": "68ee6bda0d0e2089e5ba3e5b660e0eb8f7afb24c", "filename": "gcc/testsuite/gcc.target/powerpc/setnbcge.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcge.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcge.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcge.c?ref=74d58ad2c208c9c445bb3e8288db08e092a66316", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME ge\n+#define CODE >=\n+\n+#include \"setnbc.h\"\n+\n+/* \"x >= 0\" is done without setnbc.\n+   The generic code sometimes transforms \"x >= A\" to \"x > A-1\"; we allow\n+   either here.  */\n+/* { dg-final { scan-assembler-times {\\msetnbcr?\\M} 16 } } */"}, {"sha": "e0f51d49bd1ddcd8f081f3535bfe2ca460a51a62", "filename": "gcc/testsuite/gcc.target/powerpc/setnbcgt.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcgt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcgt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcgt.c?ref=74d58ad2c208c9c445bb3e8288db08e092a66316", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME gt\n+#define CODE >\n+\n+#include \"setnbc.h\"\n+\n+/* \"x > -1\" is done without setnbc.  */\n+/* { dg-final { scan-assembler-times {\\msetnbc\\M} 16 } } */"}, {"sha": "33a5da96964ac00bf68796eec3fd43e45f003939", "filename": "gcc/testsuite/gcc.target/powerpc/setnbcle.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcle.c?ref=74d58ad2c208c9c445bb3e8288db08e092a66316", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME le\n+#define CODE <=\n+\n+#include \"setnbc.h\"\n+\n+/* \"x <= -1\" is done without setnbc.  */\n+/* { dg-final { scan-assembler-times {\\msetnbcr\\M} 16 } } */"}, {"sha": "127d7bfece49e0c5dd8eec138e77de7c8a7dcb24", "filename": "gcc/testsuite/gcc.target/powerpc/setnbclt.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbclt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbclt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbclt.c?ref=74d58ad2c208c9c445bb3e8288db08e092a66316", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME lt\n+#define CODE <\n+\n+#include \"setnbc.h\"\n+\n+/* \"x < 0\" is done without setnbc.\n+   The generic code sometimes transforms \"x < A\" to \"x <= A-1\"; we allow\n+   either here.  */\n+/* { dg-final { scan-assembler-times {\\msetnbcr?\\M} 16 } } */"}, {"sha": "be1624d6ec2b7ee46dcca54260f3e92e8bae2056", "filename": "gcc/testsuite/gcc.target/powerpc/setnbcne.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74d58ad2c208c9c445bb3e8288db08e092a66316/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsetnbcne.c?ref=74d58ad2c208c9c445bb3e8288db08e092a66316", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=future\" } */\n+\n+#define NAME ne\n+#define CODE !=\n+\n+#include \"setnbc.h\"\n+\n+/* { dg-final { scan-assembler-times {\\msetnbcr\\M} 20 } } */"}]}