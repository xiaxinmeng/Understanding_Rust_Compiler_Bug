{"sha": "b1d2645883936093f0fdb885d53cca67cb193adf", "node_id": "C_kwDOANBUbNoAKGIxZDI2NDU4ODM5MzYwOTNmMGZkYjg4NWQ1M2NjYTY3Y2IxOTNhZGY", "commit": {"author": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2023-02-02T16:25:05Z"}, "committer": {"name": "Andrea Corallo", "email": "andrea.corallo@arm.com", "date": "2023-02-08T13:45:13Z"}, "message": "aarch64: Fix return_address_sign_ab_exception.C regression\n\nHi all,\n\nthis is to fix the regression of\ng++.target/aarch64/return_address_sign_ab_exception.C that I\nintroduced with d8dadbc9a5199bf7bac1ab7376b0f84f45e94350.\n\n'aarch_ra_sign_key' for aarch64 ended up being non defined in the opt\nfile and the function attribute \"branch-protection=pac-ret+leaf+b-key\"\nstopped working as expected.\n\nThis patch moves the definition of 'aarch_ra_sign_key' to the opt\nfiles for both Arm back-ends.\n\nRegards\n\n  Andera Corallo\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-protos.h (aarch_ra_sign_key): Remove\n\tdeclaration.\n\t* config/aarch64/aarch64.cc (aarch_ra_sign_key): Remove\n\tdefinition.\n\t* config/aarch64/aarch64.opt (aarch64_ra_sign_key): Rename\n\tto 'aarch_ra_sign_key'.\n\t* config/arm/aarch-common.cc (aarch_ra_sign_key): Remove\n\tdeclaration.\n\t* config/arm/arm-protos.h (aarch_ra_sign_key): Likewise.\n\t* config/arm/arm.cc (enum aarch_key_type): Remove definition.\n\t* config/arm/arm.opt: Define.", "tree": {"sha": "55160bc59ee0a419b3761f9ab33584795265dd75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55160bc59ee0a419b3761f9ab33584795265dd75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1d2645883936093f0fdb885d53cca67cb193adf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d2645883936093f0fdb885d53cca67cb193adf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1d2645883936093f0fdb885d53cca67cb193adf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d2645883936093f0fdb885d53cca67cb193adf/comments", "author": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AndreaCorallo", "id": 6765576, "node_id": "MDQ6VXNlcjY3NjU1NzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6765576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AndreaCorallo", "html_url": "https://github.com/AndreaCorallo", "followers_url": "https://api.github.com/users/AndreaCorallo/followers", "following_url": "https://api.github.com/users/AndreaCorallo/following{/other_user}", "gists_url": "https://api.github.com/users/AndreaCorallo/gists{/gist_id}", "starred_url": "https://api.github.com/users/AndreaCorallo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AndreaCorallo/subscriptions", "organizations_url": "https://api.github.com/users/AndreaCorallo/orgs", "repos_url": "https://api.github.com/users/AndreaCorallo/repos", "events_url": "https://api.github.com/users/AndreaCorallo/events{/privacy}", "received_events_url": "https://api.github.com/users/AndreaCorallo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d451c4228cc80c5ec3c4601118a1cf7a6f3d231", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d451c4228cc80c5ec3c4601118a1cf7a6f3d231", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d451c4228cc80c5ec3c4601118a1cf7a6f3d231"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "f75eb892f3daa7c2576efcedc8d944ab1e895cdb", "filename": "gcc/config/aarch64/aarch64-protos.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-protos.h?ref=b1d2645883936093f0fdb885d53cca67cb193adf", "patch": "@@ -662,8 +662,6 @@ enum simd_immediate_check {\n   AARCH64_CHECK_MOV  = AARCH64_CHECK_ORR | AARCH64_CHECK_BIC\n };\n \n-extern enum aarch_key_type aarch_ra_sign_key;\n-\n extern struct tune_params aarch64_tune_params;\n \n /* The available SVE predicate patterns, known in the ACLE as \"svpattern\".  */"}, {"sha": "5c40b6ed22a508723bd535a7460762c3a243d441", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=b1d2645883936093f0fdb885d53cca67cb193adf", "patch": "@@ -2759,8 +2759,6 @@ static const struct processor all_cores[] =\n   {NULL, aarch64_none, aarch64_none, aarch64_no_arch, 0, NULL}\n };\n \n-enum aarch_key_type aarch_ra_sign_key = AARCH_KEY_A;\n-\n /* The current tuning set.  */\n struct tune_params aarch64_tune_params = generic_tunings;\n "}, {"sha": "1d7967db9c0ca867fd0699370ce67b5242235c7f", "filename": "gcc/config/aarch64/aarch64.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Faarch64%2Faarch64.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.opt?ref=b1d2645883936093f0fdb885d53cca67cb193adf", "patch": "@@ -40,7 +40,7 @@ TargetVariable\n unsigned aarch_enable_bti = 2\n \n TargetVariable\n-enum aarch64_key_type aarch64_ra_sign_key = AARCH64_KEY_A\n+enum aarch_key_type aarch_ra_sign_key = AARCH_KEY_A\n \n ; The TLS dialect names to use with -mtls-dialect.\n "}, {"sha": "5b96ff4c2e89722a2cad686bd78ce12721a02010", "filename": "gcc/config/arm/aarch-common.cc", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Farm%2Faarch-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Farm%2Faarch-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-common.cc?ref=b1d2645883936093f0fdb885d53cca67cb193adf", "patch": "@@ -661,7 +661,6 @@ arm_md_asm_adjust (vec<rtx> &outputs, vec<rtx> & /*inputs*/,\n \n #define BRANCH_PROTECT_STR_MAX 255\n extern char *accepted_branch_protection_string;\n-extern enum aarch_key_type aarch_ra_sign_key;\n \n static enum aarch_parse_opt_result\n aarch_handle_no_branch_protection (char* str, char* rest)"}, {"sha": "c8ae5e1e9c16b35cd04147f98b4cc97641a4bb3b", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=b1d2645883936093f0fdb885d53cca67cb193adf", "patch": "@@ -585,7 +585,6 @@ struct cpu_option\n extern const arch_option all_architectures[];\n extern const cpu_option all_cores[];\n \n-extern enum aarch_key_type aarch_ra_sign_key;\n \n const cpu_option *arm_parse_cpu_option_name (const cpu_option *, const char *,\n \t\t\t\t\t     const char *, bool = true);"}, {"sha": "a46627bc375719c8ff30b6857ca864d71e130a4f", "filename": "gcc/config/arm/arm.cc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Farm%2Farm.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Farm%2Farm.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.cc?ref=b1d2645883936093f0fdb885d53cca67cb193adf", "patch": "@@ -2420,9 +2420,6 @@ const struct tune_params arm_fa726te_tune =\n   tune_params::SCHED_AUTOPREF_OFF\n };\n \n-/* Key type for Pointer Authentication extension.  */\n-enum aarch_key_type aarch_ra_sign_key = AARCH_KEY_A;\n-\n char *accepted_branch_protection_string = NULL;\n \n /* Auto-generated CPU, FPU and architecture tables.  */"}, {"sha": "3a49b51ece0e3711d49ee5fb94e2bfdac3a05e38", "filename": "gcc/config/arm/arm.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Farm%2Farm.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1d2645883936093f0fdb885d53cca67cb193adf/gcc%2Fconfig%2Farm%2Farm.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.opt?ref=b1d2645883936093f0fdb885d53cca67cb193adf", "patch": "@@ -30,6 +30,9 @@ enum aarch_function_type aarch_ra_sign_scope = AARCH_FUNCTION_NONE\n TargetVariable\n unsigned aarch_enable_bti = 0\n \n+TargetVariable\n+enum aarch_key_type aarch_ra_sign_key = AARCH_KEY_A\n+\n Enum\n Name(tls_type) Type(enum arm_tls_type)\n TLS dialect to use:"}]}