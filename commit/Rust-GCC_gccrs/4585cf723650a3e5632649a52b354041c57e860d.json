{"sha": "4585cf723650a3e5632649a52b354041c57e860d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU4NWNmNzIzNjUwYTNlNTYzMjY0OWE1MmIzNTQwNDFjNTdlODYwZA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely.gcc@gmail.com", "date": "2010-05-31T18:41:33Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-05-31T18:41:33Z"}, "message": "re PR libstdc++/43820 (auto_ptr used with incomplete type no longer triggers warning)\n\n2010-05-31  Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\tPR libstdc++/43820\n\t* include/bits/shared_ptr_base.h: Require complete type.\n\t* include/tr1/shared_ptr.h: Likewise.\n\t* testsuite/20_util/shared_ptr/cons/43820.cc: New.\n\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/43820.cc: New.\n\nFrom-SVN: r160082", "tree": {"sha": "85b85c938bcd3f83352e3681784ccac3c8ebf7e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85b85c938bcd3f83352e3681784ccac3c8ebf7e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4585cf723650a3e5632649a52b354041c57e860d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4585cf723650a3e5632649a52b354041c57e860d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4585cf723650a3e5632649a52b354041c57e860d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4585cf723650a3e5632649a52b354041c57e860d/comments", "author": null, "committer": null, "parents": [{"sha": "63f1c6992dd11f754e975580374b557db4c496b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63f1c6992dd11f754e975580374b557db4c496b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63f1c6992dd11f754e975580374b557db4c496b8"}], "stats": {"total": 104, "additions": 97, "deletions": 7}, "files": [{"sha": "13d7ea82ba0359cdaddfb66119484e91ab16e3c1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4585cf723650a3e5632649a52b354041c57e860d", "patch": "@@ -1,3 +1,11 @@\n+2010-05-31  Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\tPR libstdc++/43820\n+\t* include/bits/shared_ptr_base.h: Require complete type.\n+\t* include/tr1/shared_ptr.h: Likewise.\n+\t* testsuite/20_util/shared_ptr/cons/43820.cc: New.\n+\t* testsuite/tr1/2_general_utilities/shared_ptr/cons/43820.cc: New.\n+\n 2010-05-31  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/bits/basic_string.h (front, back): Add."}, {"sha": "0c366b8ef1a58f98834f9ec2cace9032a43a908a", "filename": "libstdc++-v3/include/bits/shared_ptr_base.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fshared_ptr_base.h?ref=4585cf723650a3e5632649a52b354041c57e860d", "patch": "@@ -97,7 +97,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n       { delete this; }\n \n       virtual void*\n-      _M_get_deleter(const std::type_info& __ti)\n+      _M_get_deleter(const std::type_info&)\n       { return 0; }\n \n       _Sp_counted_ptr(const _Sp_counted_ptr&) = delete;\n@@ -545,7 +545,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \texplicit __shared_ptr(_Tp1* __p) : _M_ptr(__p), _M_refcount(__p)\n \t{\n \t  __glibcxx_function_requires(_ConvertibleConcept<_Tp1*, _Tp*>)\n-\t  // __glibcxx_function_requires(_CompleteConcept<_Tp1*>)\n+\t  static_assert( sizeof(_Tp1) > 0, \"incomplete type\" );\n \t  __enable_shared_from_this_helper(_M_refcount, __p, __p);\n \t}\n \n@@ -624,7 +624,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \t: _M_ptr(__r.get()), _M_refcount()\n \t{\n \t  __glibcxx_function_requires(_ConvertibleConcept<_Tp1*, _Tp*>)\n-\t  // TODO requires _Tp1 is complete, delete __r.release() well-formed\n+\t  static_assert( sizeof(_Tp1) > 0, \"incomplete type\" );\n \t  _Tp1* __tmp = __r.get();\n \t  _M_refcount = __shared_count<_Lp>(std::move(__r));\n \t  __enable_shared_from_this_helper(_M_refcount, __tmp, __tmp);"}, {"sha": "f504e083c52fceec529173b05750d2514eb2a888", "filename": "libstdc++-v3/include/tr1/shared_ptr.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fshared_ptr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fshared_ptr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Fshared_ptr.h?ref=4585cf723650a3e5632649a52b354041c57e860d", "patch": "@@ -1,6 +1,6 @@\n // <tr1/shared_ptr.h> -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -367,7 +367,7 @@ namespace tr1\n \t: _M_ptr(__p), _M_refcount(__p)\n         {\n \t  __glibcxx_function_requires(_ConvertibleConcept<_Tp1*, _Tp*>)\n-\t  // __glibcxx_function_requires(_CompleteConcept<_Tp1*>)\n+\t  typedef int _IsComplete[sizeof(_Tp1)];\n \t  __enable_shared_from_this_helper(_M_refcount, __p, __p);\n \t}\n \n@@ -404,9 +404,9 @@ namespace tr1\n         explicit\n         __shared_ptr(std::auto_ptr<_Tp1>& __r)\n \t: _M_ptr(__r.get()), _M_refcount()\n-        {\n+        { // TODO requries delete __r.release() well-formed\n \t  __glibcxx_function_requires(_ConvertibleConcept<_Tp1*, _Tp*>)\n-\t  // TODO requires _Tp1 is complete, delete __r.release() well-formed\n+\t  typedef int _IsComplete[sizeof(_Tp1)];\n \t  _Tp1* __tmp = __r.get();\n \t  _M_refcount = __shared_count<_Lp>(__r);\n \t  __enable_shared_from_this_helper(_M_refcount, __tmp, __tmp);"}, {"sha": "6350079983842b89938addfa1f9b2f340760f4cc", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/cons/43820.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcons%2F43820.cc?ref=4585cf723650a3e5632649a52b354041c57e860d", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 20.9.11.2 Template class shared_ptr [util.smartptr.shared]\n+\n+#include <memory>\n+\n+// incomplete type\n+struct X;\n+\n+// get an auto_ptr rvalue\n+std::auto_ptr<X>&& ap();\n+\n+void test01()\n+{\n+  X* px = 0;\n+  std::shared_ptr<X> p1(px);   // { dg-error \"here\" }\n+  // { dg-error \"incomplete\" \"\" { target *-*-* } 549 }\n+\n+  std::shared_ptr<X> p9(ap());  // { dg-error \"here\" }\n+  // { dg-error \"incomplete\" \"\" { target *-*-* } 630 }\n+\n+}\n+\n+// { dg-excess-errors \"\" }"}, {"sha": "b5fe3567f9ad1032520d1a974d84dee60ba3f27c", "filename": "libstdc++-v3/testsuite/tr1/2_general_utilities/shared_ptr/cons/43820.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fcons%2F43820.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4585cf723650a3e5632649a52b354041c57e860d/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fcons%2F43820.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F2_general_utilities%2Fshared_ptr%2Fcons%2F43820.cc?ref=4585cf723650a3e5632649a52b354041c57e860d", "patch": "@@ -0,0 +1,40 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2010 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// 2.2.3 Class template shared_ptr [tr.util.smartptr.shared]\n+\n+#include <tr1/memory>\n+\n+// incomplete type\n+struct X;\n+\n+std::auto_ptr<X>& ap();\n+\n+void test01()\n+{\n+  X* px = 0;\n+  std::tr1::shared_ptr<X> p1(px);   // { dg-error \"here\" }\n+  // { dg-error \"incomplete\" \"\" { target *-*-* } 370 }\n+\n+  std::tr1::shared_ptr<X> p9(ap());  // { dg-error \"here\" }\n+  // { dg-error \"incomplete\" \"\" { target *-*-* } 409 }\n+\n+}\n+\n+// { dg-excess-errors \"\" }"}]}