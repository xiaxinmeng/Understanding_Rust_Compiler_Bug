{"sha": "f94cc92f8c4338318b81f101d185d99eef6ae11d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk0Y2M5MmY4YzQzMzgzMThiODFmMTAxZDE4NWQ5OWVlZjZhZTExZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-28T11:09:13Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-12-28T11:09:13Z"}, "message": "(get_inner_reference): Don't look at flag_volatile.\n\n(expand_expr, case INDIRECT_REF, OFFSET_REF): Likewise.\n\nFrom-SVN: r2973", "tree": {"sha": "8380fea82cc7a258e1c0578bdafa25dbd8652c20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8380fea82cc7a258e1c0578bdafa25dbd8652c20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f94cc92f8c4338318b81f101d185d99eef6ae11d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94cc92f8c4338318b81f101d185d99eef6ae11d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f94cc92f8c4338318b81f101d185d99eef6ae11d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f94cc92f8c4338318b81f101d185d99eef6ae11d/comments", "author": null, "committer": null, "parents": [{"sha": "3bed814135dda6a1aa1171c0719675f1903f346f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bed814135dda6a1aa1171c0719675f1903f346f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bed814135dda6a1aa1171c0719675f1903f346f"}], "stats": {"total": 7, "additions": 2, "deletions": 5}, "files": [{"sha": "6265f21c039c9139c11dedf4a6b4a4abf7dd7026", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f94cc92f8c4338318b81f101d185d99eef6ae11d/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f94cc92f8c4338318b81f101d185d99eef6ae11d/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=f94cc92f8c4338318b81f101d185d99eef6ae11d", "patch": "@@ -2836,9 +2836,6 @@ get_inner_reference (exp, pbitsize, pbitpos, poffset, pmode, punsignedp, pvolati\n \n   while (1)\n     {\n-      if (TREE_CODE (exp) == INDIRECT_REF && flag_volatile)\n- \t*pvolatilep = 1;\n-\n       if (TREE_CODE (exp) == COMPONENT_REF || TREE_CODE (exp) == BIT_FIELD_REF)\n \t{\n \t  tree pos = (TREE_CODE (exp) == COMPONENT_REF\n@@ -3676,7 +3673,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t    || TREE_CODE (TREE_TYPE (exp2)) == RECORD_TYPE\n \t\t    || TREE_CODE (TREE_TYPE (exp2)) == UNION_TYPE)))\n \t  MEM_IN_STRUCT_P (temp) = 1;\n-\tMEM_VOLATILE_P (temp) = TREE_THIS_VOLATILE (exp) || flag_volatile;\n+\tMEM_VOLATILE_P (temp) = TREE_THIS_VOLATILE (exp);\n #if 0 /* It is incorrectto set RTX_UNCHANGING_P here, because the fact that\n \t a location is accessed through a pointer to const does not mean\n \t that the value there can never change.  */\n@@ -3939,7 +3936,7 @@ expand_expr (exp, target, tmode, modifier)\n \top0 = expand_expr (addr, NULL_RTX, VOIDmode, EXPAND_SUM);\n \ttemp = gen_rtx (MEM, mode, memory_address (mode, op0));\n \tMEM_IN_STRUCT_P (temp) = 1;\n-\tMEM_VOLATILE_P (temp) = TREE_THIS_VOLATILE (exp) || flag_volatile;\n+\tMEM_VOLATILE_P (temp) = TREE_THIS_VOLATILE (exp);\n #if 0 /* It is incorrectto set RTX_UNCHANGING_P here, because the fact that\n \t a location is accessed through a pointer to const does not mean\n \t that the value there can never change.  */"}]}