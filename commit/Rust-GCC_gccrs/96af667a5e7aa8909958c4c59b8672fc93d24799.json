{"sha": "96af667a5e7aa8909958c4c59b8672fc93d24799", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhZjY2N2E1ZTdhYTg5MDk5NThjNGM1OWI4NjcyZmM5M2QyNDc5OQ==", "commit": {"author": {"name": "Geoff Keating", "email": "geoffk@cygnus.com", "date": "2000-10-23T18:42:52Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2000-10-23T18:42:52Z"}, "message": "local-alloc.c (update_equiv_regs): Add an abort().\n\n\t* local-alloc.c (update_equiv_regs): Add an abort().  When\n\tdeleting or moving insns, update reg_equiv[regno].init_insns.\n\nFrom-SVN: r37018", "tree": {"sha": "888ef45583d24a7d5f9aed639416b2cda4936a27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/888ef45583d24a7d5f9aed639416b2cda4936a27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96af667a5e7aa8909958c4c59b8672fc93d24799", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96af667a5e7aa8909958c4c59b8672fc93d24799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96af667a5e7aa8909958c4c59b8672fc93d24799", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96af667a5e7aa8909958c4c59b8672fc93d24799/comments", "author": null, "committer": null, "parents": [{"sha": "ea343d1a913bdac775bb5649b0c7546542206aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea343d1a913bdac775bb5649b0c7546542206aad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea343d1a913bdac775bb5649b0c7546542206aad"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "8a97f077e584896e3616afeac3091588b0ed3d1e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96af667a5e7aa8909958c4c59b8672fc93d24799/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96af667a5e7aa8909958c4c59b8672fc93d24799/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96af667a5e7aa8909958c4c59b8672fc93d24799", "patch": "@@ -1,3 +1,8 @@\n+2000-10-23  Geoff Keating  <geoffk@cygnus.com>\n+\n+\t* local-alloc.c (update_equiv_regs): Add an abort().  When\n+\tdeleting or moving insns, update reg_equiv[regno].init_insns.\n+\n 2000-10-23  Mark Mitchell  <mark@codesourcery.com>\n \n \t* c-tree.texi: Improve documentation for IF_STMTs and related"}, {"sha": "2d7cac8f01f4cdbc4cc0abec19995ff7f5310ca7", "filename": "gcc/local-alloc.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96af667a5e7aa8909958c4c59b8672fc93d24799/gcc%2Flocal-alloc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96af667a5e7aa8909958c4c59b8672fc93d24799/gcc%2Flocal-alloc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flocal-alloc.c?ref=96af667a5e7aa8909958c4c59b8672fc93d24799", "patch": "@@ -1088,6 +1088,9 @@ update_equiv_regs ()\n \t\t once and used once.  (If it were only set, but not used,\n \t\t flow would have deleted the setting insns.)  Hence\n \t\t there can only be one insn in reg_equiv[REGNO].init_insns.  */\n+\t      if (reg_equiv[regno].init_insns == NULL_RTX\n+\t\t  || XEXP (reg_equiv[regno].init_insns, 1) != NULL_RTX)\n+\t\tabort ();\n \t      equiv_insn = XEXP (reg_equiv[regno].init_insns, 0);\n \n \t      if (asm_noperands (PATTERN (equiv_insn)) < 0\n@@ -1123,21 +1126,28 @@ update_equiv_regs ()\n \t\t  PUT_CODE (equiv_insn, NOTE);\n \t\t  NOTE_LINE_NUMBER (equiv_insn) = NOTE_INSN_DELETED;\n \t\t  NOTE_SOURCE_FILE (equiv_insn) = 0;\n+\t\t  \n+\t\t  reg_equiv[regno].init_insns = \n+\t\t    XEXP (reg_equiv[regno].init_insns, 1);\n \t\t}\n \t      /* Move the initialization of the register to just before\n \t\t INSN.  Update the flow information.  */\n \t      else if (PREV_INSN (insn) != equiv_insn)\n \t\t{\n \t\t  int l;\n+\t\t  rtx new_insn;\n \n-\t\t  emit_insn_before (copy_rtx (PATTERN (equiv_insn)), insn);\n+\t\t  new_insn = emit_insn_before (copy_rtx (PATTERN (equiv_insn)),\n+\t\t\t\t\t       insn);\n \t\t  REG_NOTES (PREV_INSN (insn)) = REG_NOTES (equiv_insn);\n \t\t  REG_NOTES (equiv_insn) = 0;\n \n \t\t  PUT_CODE (equiv_insn, NOTE);\n \t\t  NOTE_LINE_NUMBER (equiv_insn) = NOTE_INSN_DELETED;\n \t\t  NOTE_SOURCE_FILE (equiv_insn) = 0;\n \n+\t\t  XEXP (reg_equiv[regno].init_insns, 0) = new_insn;\n+\n \t\t  REG_BASIC_BLOCK (regno) = block >= 0 ? block : 0;\n \t\t  REG_N_CALLS_CROSSED (regno) = 0;\n \t\t  REG_LIVE_LENGTH (regno) = 2;"}]}