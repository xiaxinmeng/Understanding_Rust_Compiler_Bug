{"sha": "ec0c6743bb2cceaec4262c01133124b195ca30b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMwYzY3NDNiYjJjY2VhZWM0MjYyYzAxMTMzMTI0YjE5NWNhMzBiNg==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2015-05-02T21:07:15Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-05-02T21:07:15Z"}, "message": "make emit_partition_copy return a rtx_insn *\n\ngcc/ChangeLog:\n\n2015-05-02  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* tree-outof-ssa.c (emit_partition_copy): Return rtx_insn *.\n\t(insert_partition_copy_on_edge): Adjust.\n\t(insert_rtx_to_part_on_edge): Likewise.\n\t(insert_part_to_rtx_on_edge): Likewise.\n\nFrom-SVN: r222742", "tree": {"sha": "1245847a0c9ea5d407ceb9ee0dda6614f0b6df9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1245847a0c9ea5d407ceb9ee0dda6614f0b6df9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec0c6743bb2cceaec4262c01133124b195ca30b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec0c6743bb2cceaec4262c01133124b195ca30b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec0c6743bb2cceaec4262c01133124b195ca30b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec0c6743bb2cceaec4262c01133124b195ca30b6/comments", "author": null, "committer": null, "parents": [{"sha": "d38ff8dd18174f7e28303dcb3981cc375277f518", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d38ff8dd18174f7e28303dcb3981cc375277f518", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d38ff8dd18174f7e28303dcb3981cc375277f518"}], "stats": {"total": 38, "additions": 20, "deletions": 18}, "files": [{"sha": "56d9d5d28ba9fa83ce4e616d7b7ce56024556de8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec0c6743bb2cceaec4262c01133124b195ca30b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec0c6743bb2cceaec4262c01133124b195ca30b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec0c6743bb2cceaec4262c01133124b195ca30b6", "patch": "@@ -1,3 +1,10 @@\n+2015-05-02  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* tree-outof-ssa.c (emit_partition_copy): Return rtx_insn *.\n+\t(insert_partition_copy_on_edge): Adjust.\n+\t(insert_rtx_to_part_on_edge): Likewise.\n+\t(insert_part_to_rtx_on_edge): Likewise.\n+\n 2015-05-02  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* function.c (set_return_jump_label): Change type of argument to"}, {"sha": "e23bc0bfc87fb756650657b40e67b1bc58af05c2", "filename": "gcc/tree-outof-ssa.c", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec0c6743bb2cceaec4262c01133124b195ca30b6/gcc%2Ftree-outof-ssa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec0c6743bb2cceaec4262c01133124b195ca30b6/gcc%2Ftree-outof-ssa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-outof-ssa.c?ref=ec0c6743bb2cceaec4262c01133124b195ca30b6", "patch": "@@ -242,11 +242,9 @@ set_location_for_edge (edge e)\n    SRC/DEST might be BLKmode memory locations SIZEEXP is a tree from\n    which we deduce the size to copy in that case.  */\n \n-static inline rtx\n+static inline rtx_insn *\n emit_partition_copy (rtx dest, rtx src, int unsignedsrcp, tree sizeexp)\n {\n-  rtx seq;\n-\n   start_sequence ();\n \n   if (GET_MODE (src) != VOIDmode && GET_MODE (src) != GET_MODE (dest))\n@@ -259,7 +257,7 @@ emit_partition_copy (rtx dest, rtx src, int unsignedsrcp, tree sizeexp)\n   else\n     emit_move_insn (dest, src);\n \n-  seq = get_insns ();\n+  rtx_insn *seq = get_insns ();\n   end_sequence ();\n \n   return seq;\n@@ -271,7 +269,6 @@ static void\n insert_partition_copy_on_edge (edge e, int dest, int src, source_location locus)\n {\n   tree var;\n-  rtx seq;\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file,\n@@ -291,10 +288,10 @@ insert_partition_copy_on_edge (edge e, int dest, int src, source_location locus)\n     set_curr_insn_location (locus);\n \n   var = partition_to_var (SA.map, src);\n-  seq = emit_partition_copy (copy_rtx (SA.partition_to_pseudo[dest]),\n-\t\t\t     copy_rtx (SA.partition_to_pseudo[src]),\n-\t\t\t     TYPE_UNSIGNED (TREE_TYPE (var)),\n-\t\t\t     var);\n+  rtx_insn *seq = emit_partition_copy (copy_rtx (SA.partition_to_pseudo[dest]),\n+\t\t\t\t       copy_rtx (SA.partition_to_pseudo[src]),\n+\t\t\t\t       TYPE_UNSIGNED (TREE_TYPE (var)),\n+\t\t\t\t       var);\n \n   insert_insn_on_edge (seq, e);\n }\n@@ -365,7 +362,6 @@ static void\n insert_rtx_to_part_on_edge (edge e, int dest, rtx src, int unsignedsrcp,\n \t\t\t    source_location locus)\n {\n-  rtx seq;\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file,\n@@ -387,9 +383,9 @@ insert_rtx_to_part_on_edge (edge e, int dest, rtx src, int unsignedsrcp,\n      mems.  Usually we give the source.  As we result from SSA names\n      the left and right size should be the same (and no WITH_SIZE_EXPR\n      involved), so it doesn't matter.  */\n-  seq = emit_partition_copy (copy_rtx (SA.partition_to_pseudo[dest]),\n-\t\t\t     src, unsignedsrcp,\n-\t\t\t     partition_to_var (SA.map, dest));\n+  rtx_insn *seq = emit_partition_copy (copy_rtx (SA.partition_to_pseudo[dest]),\n+\t\t\t\t       src, unsignedsrcp,\n+\t\t\t\t       partition_to_var (SA.map, dest));\n \n   insert_insn_on_edge (seq, e);\n }\n@@ -401,7 +397,6 @@ static void\n insert_part_to_rtx_on_edge (edge e, rtx dest, int src, source_location locus)\n {\n   tree var;\n-  rtx seq;\n   if (dump_file && (dump_flags & TDF_DETAILS))\n     {\n       fprintf (dump_file,\n@@ -420,10 +415,10 @@ insert_part_to_rtx_on_edge (edge e, rtx dest, int src, source_location locus)\n     set_curr_insn_location (locus);\n \n   var = partition_to_var (SA.map, src);\n-  seq = emit_partition_copy (dest,\n-\t\t\t     copy_rtx (SA.partition_to_pseudo[src]),\n-\t\t\t     TYPE_UNSIGNED (TREE_TYPE (var)),\n-\t\t\t     var);\n+  rtx_insn *seq = emit_partition_copy (dest,\n+\t\t\t\t       copy_rtx (SA.partition_to_pseudo[src]),\n+\t\t\t\t       TYPE_UNSIGNED (TREE_TYPE (var)),\n+\t\t\t\t       var);\n \n   insert_insn_on_edge (seq, e);\n }"}]}