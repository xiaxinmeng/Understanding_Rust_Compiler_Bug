{"sha": "5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWVjYzNhNzY3NmNlOGU0ZTJkYTU5ZDdmYjhkODI2ZjBiM2I4MzJjNw==", "commit": {"author": {"name": "Guilhem Lavaux", "email": "guilhem@kaffe.org", "date": "2003-12-16T11:35:40Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-12-16T11:35:40Z"}, "message": "TypeSignature.java (getClassForEncoding): Splitted the method so we can specify an explicit boot loader.\n\n2003-12-16 Guilhem Lavaux <guilhem@kaffe.org>\n           Helmer Kraemer <hkraemer@freenet.de>\n\n\t* gnu/java/lang/reflect/TypeSignature.java (getClassForEncoding):\n\tSplitted the method so we can specify an explicit boot loader.\n\nCo-Authored-By: Helmer Kraemer <hkraemer@freenet.de>\n\nFrom-SVN: r74687", "tree": {"sha": "43e7e9a71bb64de9a6b042112c914242dd70c5ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43e7e9a71bb64de9a6b042112c914242dd70c5ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7/comments", "author": null, "committer": null, "parents": [{"sha": "9a1349b9209349989a0b776fe0683c21b197776e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a1349b9209349989a0b776fe0683c21b197776e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a1349b9209349989a0b776fe0683c21b197776e"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "2210d5f382386ec5d413d651e625e67e2299178f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7", "patch": "@@ -1,3 +1,9 @@\n+2003-12-16 Guilhem Lavaux <guilhem@kaffe.org>\n+           Helmer Kraemer <hkraemer@freenet.de>\n+ \n+\t* gnu/java/lang/reflect/TypeSignature.java (getClassForEncoding):\n+\tSplitted the method so we can specify an explicit boot loader.\n+\n 2003-12-15  Graydon Hoare  <graydon@redhat.com>\n \n \t* jni/gtk-peer/gdkfont.h: New file."}, {"sha": "1cf55a698e929b066a9cbd5a89c07ffd3d35a7a5", "filename": "libjava/gnu/java/lang/reflect/TypeSignature.java", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7/libjava%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7/libjava%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java?ref=5ecc3a7676ce8e4e2da59d7fb8d826f0b3b832c7", "patch": "@@ -1,5 +1,5 @@\n /* TypeSignature.java -- Class used to compute type signatures\n-   Copyright (C) 1998, 2000, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 2000, 2002, 2003 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -149,6 +149,29 @@ public static String getEncodingOfClass(Class clazz)\n    */\n   public static Class getClassForEncoding(String type_code, boolean descriptor)\n     throws ClassNotFoundException\n+  {\n+    return getClassForEncoding(type_code, descriptor, null);\n+  }\n+\n+  /**\n+   * This function is the inverse of <code>getEncodingOfClass</code>. This\n+   * accepts both object and descriptor formats, but must know which style\n+   * of string is being passed in (usually, descriptor should be true).In\n+   * descriptor format, \"I\" is treated as int.class, in object format, it\n+   * is treated as a class named I in the unnamed package. It also\n+  * accepts a <code>ClassLoader</code>, which is used to load the class.\n+   *\n+   * @param type_code the class name to decode\n+   * @param descriptor if the string is in descriptor format\n+   * @param loader the class loader used to load the class\n+   * @return the corresponding Class object\n+   * @throws ClassNotFoundException if the class cannot be located\n+   * @see #getEncodingOfClass(Class, boolean)\n+   * @see #getClassForEncoding(String, boolean)\n+   */\n+  public static Class getClassForEncoding(String type_code, boolean descriptor,\n+\t\t\t\t\t  ClassLoader loader)\n+    throws ClassNotFoundException\n   {\n     if (descriptor)\n       {"}]}