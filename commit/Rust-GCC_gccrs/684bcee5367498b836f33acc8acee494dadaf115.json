{"sha": "684bcee5367498b836f33acc8acee494dadaf115", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg0YmNlZTUzNjc0OThiODM2ZjMzYWNjOGFjZWU0OTRkYWRhZjExNQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2004-01-14T16:25:09Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2004-01-14T16:25:09Z"}, "message": "regrename.c (find_oldest_value_reg): If the replacement uses multiple hard registers...\n\n* regrename.c (find_oldest_value_reg): If the replacement uses\nmultiple hard registers, check that all of them are in CLASS.\n\nFrom-SVN: r75867", "tree": {"sha": "cfe0e511c5773b158e11452df022ec23938aee59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfe0e511c5773b158e11452df022ec23938aee59"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/684bcee5367498b836f33acc8acee494dadaf115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684bcee5367498b836f33acc8acee494dadaf115", "html_url": "https://github.com/Rust-GCC/gccrs/commit/684bcee5367498b836f33acc8acee494dadaf115", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/684bcee5367498b836f33acc8acee494dadaf115/comments", "author": null, "committer": null, "parents": [{"sha": "e7844ffbe7f9312fd83d1f5f62b5d22fde785c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7844ffbe7f9312fd83d1f5f62b5d22fde785c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7844ffbe7f9312fd83d1f5f62b5d22fde785c6c"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "63bebc545c492e7d51b1aaf3031b7fbc7b98c24d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/684bcee5367498b836f33acc8acee494dadaf115/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/684bcee5367498b836f33acc8acee494dadaf115/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=684bcee5367498b836f33acc8acee494dadaf115", "patch": "@@ -1,3 +1,8 @@\n+2004-01-14  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* regrename.c (find_oldest_value_reg): If the replacement uses \n+\tmultiple hard registers, check that all of them are in CLASS.\n+\n 2004-01-14  Jan Hubicka  <jh@suse.cz>\n \n \t* alias.c (get_alias_set):  Initialize alias set to 0 when subset is"}, {"sha": "871507b28f0d1d9a895e7516ea284b9cd3e543ca", "filename": "gcc/regrename.c", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/684bcee5367498b836f33acc8acee494dadaf115/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/684bcee5367498b836f33acc8acee494dadaf115/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=684bcee5367498b836f33acc8acee494dadaf115", "patch": "@@ -1,5 +1,5 @@\n /* Register renaming for the GNU compiler.\n-   Copyright (C) 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n+   Copyright (C) 2000, 2001, 2002, 2003, 2004  Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -1339,15 +1339,19 @@ find_oldest_value_reg (enum reg_class class, rtx reg, struct value_data *vd)\n     {\n       enum machine_mode oldmode = vd->e[i].mode;\n       rtx new;\n+      unsigned int last;\n \n-    if (TEST_HARD_REG_BIT (reg_class_contents[class], i)\n-\t&& (new = maybe_mode_change (oldmode, vd->e[regno].mode, mode, i,\n-\t\t\t\t     regno)))\n-      {\n-\tORIGINAL_REGNO (new) = ORIGINAL_REGNO (reg);\n-        REG_ATTRS (new) = REG_ATTRS (reg);\n-\treturn new;\n-      }\n+      for (last = i; last < i + HARD_REGNO_NREGS (i, mode); last++)\n+\tif (!TEST_HARD_REG_BIT (reg_class_contents[class], last))\n+\t  return NULL_RTX;\n+\n+      if (new = maybe_mode_change (oldmode, vd->e[regno].mode, mode, i,\n+\t\t\t\t   regno))\n+\t{\n+\t  ORIGINAL_REGNO (new) = ORIGINAL_REGNO (reg);\n+\t  REG_ATTRS (new) = REG_ATTRS (reg);\n+\t  return new;\n+\t}\n     }\n \n   return NULL_RTX;"}]}