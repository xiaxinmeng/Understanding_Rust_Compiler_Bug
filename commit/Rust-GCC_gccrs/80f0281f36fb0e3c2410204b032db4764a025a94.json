{"sha": "80f0281f36fb0e3c2410204b032db4764a025a94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBmMDI4MWYzNmZiMGUzYzI0MTAyMDRiMDMyZGI0NzY0YTAyNWE5NA==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargls@comcast.net", "date": "2007-01-01T19:17:50Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2007-01-01T19:17:50Z"}, "message": "Rotate ChangeLog\n\nFrom-SVN: r120311", "tree": {"sha": "714d711777cd8f2c2c020f5157d399b6e7a57617", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/714d711777cd8f2c2c020f5157d399b6e7a57617"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80f0281f36fb0e3c2410204b032db4764a025a94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f0281f36fb0e3c2410204b032db4764a025a94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80f0281f36fb0e3c2410204b032db4764a025a94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80f0281f36fb0e3c2410204b032db4764a025a94/comments", "author": null, "committer": null, "parents": [{"sha": "624168de91614862f409aa3757343c6bbdeb512f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/624168de91614862f409aa3757343c6bbdeb512f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/624168de91614862f409aa3757343c6bbdeb512f"}], "stats": {"total": 3270, "additions": 1637, "deletions": 1633}, "files": [{"sha": "75476ca1002b0132e4970aa00605b616dc733404", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 3, "deletions": 1633, "changes": 1636, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80f0281f36fb0e3c2410204b032db4764a025a94/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80f0281f36fb0e3c2410204b032db4764a025a94/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=80f0281f36fb0e3c2410204b032db4764a025a94", "patch": "@@ -1,1634 +1,4 @@\n-2006-12-30  Thomas Koenig  <Thomas.Koenig@online.de>\n+2007-01-01  Steven G. Kargl  <kargls@comcast.net>\n \n-\tPR libfortran/30321\n-\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code):\n-\tCheck for extents < 0 for zero-sized arrays.  If\n-\tno retarray has been specified and the size is zero,\n-\treturn early.\n-\t(`m'name`'rtype_qual`_'atype_code): Likewise.\n-\t* generated/all_l16.c: Regenerated.\n-\t* generated/all_l4.c: Regenerated.\n-\t* generated/all_l8.c: Regenerated.\n-\t* generated/any_l16.c: Regenerated.\n-\t* generated/any_l4.c: Regenerated.\n-\t* generated/any_l8.c: Regenerated.\n-\t* generated/count_16_l16.c: Regenerated.\n-\t* generated/count_16_l4.c: Regenerated.\n-\t* generated/count_16_l8.c: Regenerated.\n-\t* generated/count_4_l16.c: Regenerated.\n-\t* generated/count_4_l4.c: Regenerated.\n-\t* generated/count_4_l8.c: Regenerated.\n-\t* generated/count_8_l16.c: Regenerated.\n-\t* generated/count_8_l4.c: Regenerated.\n-\t* generated/count_8_l8.c: Regenerated.\n-\t* generated/cshift1_16.c: Regenerated.\n-\t* generated/cshift1_4.c: Regenerated.\n-\t* generated/cshift1_8.c: Regenerated.\n-\t* generated/maxloc1_16_i16.c: Regenerated.\n-\t* generated/maxloc1_16_i4.c: Regenerated.\n-\t* generated/maxloc1_16_i8.c: Regenerated.\n-\t* generated/maxloc1_16_r10.c: Regenerated.\n-\t* generated/maxloc1_16_r16.c: Regenerated.\n-\t* generated/maxloc1_16_r4.c: Regenerated.\n-\t* generated/maxloc1_16_r8.c: Regenerated.\n-\t* generated/maxloc1_4_i16.c: Regenerated.\n-\t* generated/maxloc1_4_i4.c: Regenerated.\n-\t* generated/maxloc1_4_i8.c: Regenerated.\n-\t* generated/maxloc1_4_r10.c: Regenerated.\n-\t* generated/maxloc1_4_r16.c: Regenerated.\n-\t* generated/maxloc1_4_r4.c: Regenerated.\n-\t* generated/maxloc1_4_r8.c: Regenerated.\n-\t* generated/maxloc1_8_i16.c: Regenerated.\n-\t* generated/maxloc1_8_i4.c: Regenerated.\n-\t* generated/maxloc1_8_i8.c: Regenerated.\n-\t* generated/maxloc1_8_r10.c: Regenerated.\n-\t* generated/maxloc1_8_r16.c: Regenerated.\n-\t* generated/maxloc1_8_r4.c: Regenerated.\n-\t* generated/maxloc1_8_r8.c: Regenerated.\n-\t* generated/maxval_i16.c: Regenerated.\n-\t* generated/maxval_i4.c: Regenerated.\n-\t* generated/maxval_i8.c: Regenerated.\n-\t* generated/maxval_r10.c: Regenerated.\n-\t* generated/maxval_r16.c: Regenerated.\n-\t* generated/maxval_r4.c: Regenerated.\n-\t* generated/maxval_r8.c: Regenerated.\n-\t* generated/minloc1_16_i16.c: Regenerated.\n-\t* generated/minloc1_16_i4.c: Regenerated.\n-\t* generated/minloc1_16_i8.c: Regenerated.\n-\t* generated/minloc1_16_r10.c: Regenerated.\n-\t* generated/minloc1_16_r16.c: Regenerated.\n-\t* generated/minloc1_16_r4.c: Regenerated.\n-\t* generated/minloc1_16_r8.c: Regenerated.\n-\t* generated/minloc1_4_i16.c: Regenerated.\n-\t* generated/minloc1_4_i4.c: Regenerated.\n-\t* generated/minloc1_4_i8.c: Regenerated.\n-\t* generated/minloc1_4_r10.c: Regenerated.\n-\t* generated/minloc1_4_r16.c: Regenerated.\n-\t* generated/minloc1_4_r4.c: Regenerated.\n-\t* generated/minloc1_4_r8.c: Regenerated.\n-\t* generated/minloc1_8_i16.c: Regenerated.\n-\t* generated/minloc1_8_i4.c: Regenerated.\n-\t* generated/minloc1_8_i8.c: Regenerated.\n-\t* generated/minloc1_8_r10.c: Regenerated.\n-\t* generated/minloc1_8_r16.c: Regenerated.\n-\t* generated/minloc1_8_r4.c: Regenerated.\n-\t* generated/minloc1_8_r8.c: Regenerated.\n-\t* generated/minval_i16.c: Regenerated.\n-\t* generated/minval_i4.c: Regenerated.\n-\t* generated/minval_i8.c: Regenerated.\n-\t* generated/minval_r10.c: Regenerated.\n-\t* generated/minval_r16.c: Regenerated.\n-\t* generated/minval_r4.c: Regenerated.\n-\t* generated/minval_r8.c: Regenerated.\n-\t* generated/product_c10.c: Regenerated.\n-\t* generated/product_c16.c: Regenerated.\n-\t* generated/product_c4.c: Regenerated.\n-\t* generated/product_c8.c: Regenerated.\n-\t* generated/product_i16.c: Regenerated.\n-\t* generated/product_i4.c: Regenerated.\n-\t* generated/product_i8.c: Regenerated.\n-\t* generated/product_r10.c: Regenerated.\n-\t* generated/product_r16.c: Regenerated.\n-\t* generated/product_r4.c: Regenerated.\n-\t* generated/product_r8.c: Regenerated.\n-\t* generated/sum_c10.c: Regenerated.\n-\t* generated/sum_c16.c: Regenerated.\n-\t* generated/sum_c4.c: Regenerated.\n-\t* generated/sum_c8.c: Regenerated.\n-\t* generated/sum_i16.c: Regenerated.\n-\t* generated/sum_i4.c: Regenerated.\n-\t* generated/sum_i8.c: Regenerated.\n-\t* generated/sum_r10.c: Regenerated.\n-\t* generated/sum_r16.c: Regenerated.\n-\t* generated/sum_r4.c: Regenerated.\n-\t* generated/sum_r8.c: Regenerated.\n-\n-2006-12-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/30014\n-\t*io/io.h (st_parameter_dt): Change *size and *iolength type to\n-\tGFC_IO_INT.\n-\t*io/transfer.c (finalize_transfer): Cast dtp->u.p.size_used to\n-\tGFC_IO_INT.  (iolength_transfer): Cast size * nelems to GFC_IO_INT.\n-\n-2006-12-17  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* intrinsics/associated.c: Check for associated(NULL,NULL).\n-\n-2006-12-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libfortran/30145\n-\t* io/transfer.c (transfer_array):  Check for negative extent.\n-\n-2006-12-13  Richard Guenther  <rguenther@suse.de>\n-\n-\tPR fortran/30115\n-\t* runtime/memory.c (allocate_size): Change interface to\n-\tvoid *()(size_t, GFC_INTEGER_4 *).\n-\t(allocate): Likewise.\n-\t(allocate64): Likewise.\n-\t(allocate_array): Change interface to\n-\tvoid *()(void *, size_t, GFC_INTEGER_4 *).\n-\t(allocate64_array): Likewise.\n-\t(deallocate): Change interface to\n-\tvoid ()(void *, GFC_INTEGER_4 *).\n-\n-2006-12-06  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/29810\n-\t* intrinsics/c99_functions.c (fmodf, fmodl, floorl): New functions.\n-\t* c99_protos.h (fmodf, fmodl, floorl): New prototypes.\n-\t* configure.ac: Check for fmodf, fmod and fmodl.\n-\t* configure: Regenerate.\n-\t* config.h.in: Regenerate.\n-\n-2006-12-06  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR libfortran/30009\n-\tPR libfortran/30056\n-\t* libgfortran.h:  Add ERROR_CORRUPT_FILE to error_codes.\n-\t* runtime/error.c (translate_error):  Add handling for\n-\tERROR_CORRUPT_FILE.\n-\t* io/transfer.c (read_block_direct):  Add comment about\n-\tEOR for stream files.\n-\tRemove test for no bytes left for direct access files.\n-\tGenerate an ERROR_SHORT_RECORD if the read was short.\n-\tFor unformatted sequential files:  Check endfile condition.\n-\tRemove test for no bytes left.  End of file here means\n-\tthat the file structure has been corrupted.  Pre-position\n-\tthe file for the next record in case of error.\n-\t(write_buf):  Whitespace fix.  Subtract the number of bytes\n-\twritten from bytes_left.\n-\n-2006-12-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libfortran/30005\n-\t* io/open.c: Add errno.h include.\n-\t(new_unit): Add new error messages with file name for file open.\n-\n-2006-12-01  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR libfortran/29568\n-\t* libgfortran/libgfortran.h (compile_options_t):  Add\n-\trecord_marker. (top level):  Define GFC_MAX_SUBRECORD_LENGTH.\n-\t* runtime/compile_options.c (set_record_marker):  Change\n-\tdefault to four-byte record marker.\n-\t(set_max_subrecord_length):  New function.\n-\t* runtime/error.c (translate_error):  Change error message\n-\tfor short record on unformatted read.\n-\t* io/io.h (gfc_unit):  Add recl_subrecord, bytes_left_subrecord\n-\tand continued.\n-\t* io/file_pos.c (unformatted_backspace):  Change default of record\n-\tmarker size to four bytes.  Loop over subrecords.\n-\t* io/open.c:  Default recl is max_offset.  If\n-\tcompile_options.max_subrecord_length has been set, set set\n-\tu->recl_subrecord to its value, to the maximum value otherwise.\n-\t* io/transfer.c (top level):  Add prototypes for us_read, us_write,\n-\tnext_record_r_unf and next_record_w_unf.\n-\t(read_block_direct):  Separate codepaths for unformatted direct\n-\tand unformatted sequential.  If a recl has been set by the\n-\tuser, use the number of bytes left for the record if it is smaller\n-\tthan the read request.  Loop over subrecords.  Set an error if the\n-\tuser has set a recl and the read was short.\n-\t(write_buf):  Separate codepaths for unformatted direct and\n-\tunformatted sequential. If a recl has been set by the\n-\tuser, use the number of bytes left for the record if it is smaller\n-\tthan the read request.  Loop over subrecords.  Set an error if the\n-\tuser has set a recl and the read was short.\n-\t(us_read):  Add parameter continued (to indicate that bytes_left\n-\tshould not be intialized).  Change default of record marker size\n-\tto four bytes. Use subrecord.  If the subrecord length is smaller than\n-\tzero, this indicates a continuation.\n-\t(us_write):  Add parameter continued (to indicate that the continued\n-\tflag should be set).  Use subrecord.\n-\t(pre_position):  Use 0 for continued on us_write and us_read calls.\n-\t(skip_record):  New function.\n-\t(next_record_r_unf):  New function.\n-\t(next_record_r):  Use next_record_r_unf.\n-\t(write_us_marker):  Default size for record markers is four bytes.\n-\t(next_record_w_unf):  New function.\n-\t(next_record_w):  Use next_record_w_unf.\n-\n-2006-11-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* Makefile.am: Remove intrinsics/erf.c and intrinsics/bessel.c.\n-\t* Makefile.in: Regenerate.\n-\t* intrinsics/erf.c: Remove.\n-\t* intrinsics/bessel.c: Remove.\n-\t* c99_protos.h: Add prototypes for bessel and error functions.\n-\t* intrinsics/c99_functions.c: Move content for intrinsics/erf.c\n-\tand intrinsics/bessel.c here.\n-\n-2006-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\t* io/io.h (unit_flags): Add new flag has_recl.\n-\t* io.open.c (new_unit): Set flag if RECL= was specified.\n-\t* io/transfer.c (us_write): If flag set, leave recl as initialized by\n-\tnew_unit.\n-\n-2006-11-16  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* io/open.c (new_unit): Format %d expects an int variable.\n-\t* runtime/error.c (show_locus): Format %d expects an int variable.\n-\n-2006-11-08  Steven G. Kargl <kargl@gcc.gnu.org>\n-\n-\t* io/read.c (max_value): Hide \"int n\" in an #ifdef.\n-\n-2006-11-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/29752\n-\t* io/transfer.c (finalize_transfer): Flush on ADVANCE_NO.\n-\n-2006-11-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\t* io/transfer.c (next_record_w): Fix indentation.\n-\n-2006-11-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/25545\n-\t* io/transfer.c (write_block): Cleanup code paths between\n-\tstream and non-stream I/O.\n-\t(write_buf):  Cleanup.\n-\t(read_block): Cleanup.\n-\t(finalize_transfer): Call next_record for '$' edit descriptor handling\n-\tof internal unit. Cleanup code for readability.\n-\n-2006-11-03  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/27895\n-\t* intrinsics/reshape_generic.c (reshape_internal): Fix so that it\n-\tworks correctly for zero-sized arrays.\n-\t* m4/reshape.m4: Likewise.\n-\t* generated/reshape_r16.c: Regenerate.\n-\t* generated/reshape_c4.c: Regenerate.\n-\t* generated/reshape_i4.c: Regenerate.\n-\t* generated/reshape_c16.c: Regenerate.\n-\t* generated/reshape_r10.c: Regenerate.\n-\t* generated/reshape_r8.c: Regenerate.\n-\t* generated/reshape_c10.c: Regenerate.\n-\t* generated/reshape_c8.c: Regenerate.\n-\t* generated/reshape_i8.c: Regenerate.\n-\t* generated/reshape_i16.c: Regenerate.\n-\t* generated/reshape_r4.c: Regenerate.\n-\n-2006-10-31  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR libfortran/29627\n-\t* libgfortran.h: Add ERROR_SHORT_RECORD\n-\t* runtime/error.c (translate_error): Add case\n-\tfor ERROR_SHORT_RECORD.\n-\t* io/transfer.c (read_block_direct):  Separate codepaths\n-\tfor stream and record unformatted I/O.  Remove unneeded\n-\ttests for standard input, padding and formatted I/O.\n-\tIf the record is short, read in as much data as possible,\n-\tthen raise the error.\n-\n-2006-10-30  Tobias Burnus  <burnus@net-b.de>\n-\n-\tPR fortran/29452\n-\t* runtime/string.c (compare0): Check whether string lengths match.\n-\n-2006-10-29  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* configure: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Regenerate.\n-\n-2006-10-28  Tobias Burnus <burnus@net-b.de>\n-\n-\tPR fortran/29625\n-\t* io/transfer.c (formatted_transfer_scalar): Allow binary edit\n-\t  descriptors for real variables; give error for BOZ edit\n-\t  descriptor for non-integers when using -std=f*.\n-\n-2006-10-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/29563\n-\t* io/list_read.c (next_char): Fix an error in previous commit.\n-\n-2006-10-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/29563\n-\t* io/io.h (st_parameter_dt): Add new flag at_eof.\n-\t* io/list_read.c (next_char): Set flag when EOF and return '\\n' to\n-\tsignal EOR.  Check flag on next call and jump out.\n-\t* io/unit.c (get_internal_unit): Initialize new flag.\n-\n-2006-10-22  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR fortran/26025\n-\t* m4/matmul.m4: Add possible call to gemm routine.\n-\t* generated/matmul_r8.c: Regenerate.\n-\t* generated/matmul_r16.c: Regenerate.\n-\t* generated/matmul_c8.c: Regenerate.\n-\t* generated/matmul_i8.c: Regenerate.\n-\t* generated/matmul_c16.c: Regenerate.\n-\t* generated/matmul_r10.c: Regenerate.\n-\t* generated/matmul_r4.c: Regenerate.\n-\t* generated/matmul_c10.c: Regenerate.\n-\t* generated/matmul_c4.c: Regenerate.\n-\t* generated/matmul_i4.c: Regenerate.\n-\t* generated/matmul_i16.c: Regenerate.\n-\n-2006-10-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\t* runtime/error.c: Add errno.h\n-\t(generate_error): Set iostat to errno on OS error.\n-\t* libgfortran.h: Set ERROR_OS to 5000\n-\n-2006-10-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* generated/minval_r8.c: Regenerate.\n-\t* generated/maxloc1_4_r8.c: Regenerate.\n-\t* generated/minloc1_16_r16.c: Regenerate.\n-\t* generated/sum_i8.c: Regenerate.\n-\t* generated/eoshift3_4.c: Regenerate.\n-\t* generated/any_l16.c: Regenerate.\n-\t* generated/eoshift1_8.c: Regenerate.\n-\t* generated/reshape_r16.c: Regenerate.\n-\t* generated/product_r4.c: Regenerate.\n-\t* generated/maxloc1_8_i4.c: Regenerate.\n-\t* generated/maxloc0_4_r4.c: Regenerate.\n-\t* generated/in_unpack_i8.c: Regenerate.\n-\t* generated/minloc0_4_r16.c: Regenerate.\n-\t* generated/reshape_c4.c: Regenerate.\n-\t* generated/maxloc0_4_r16.c: Regenerate.\n-\t* generated/minloc1_8_r16.c: Regenerate.\n-\t* generated/maxloc1_8_r16.c: Regenerate.\n-\t* generated/in_unpack_i16.c: Regenerate.\n-\t* generated/maxloc0_8_i8.c: Regenerate.\n-\t* generated/sum_r16.c: Regenerate.\n-\t* generated/minloc1_4_r8.c: Regenerate.\n-\t* generated/maxloc1_16_r16.c: Regenerate.\n-\t* generated/minloc1_16_i4.c: Regenerate.\n-\t* generated/maxloc1_16_i4.c: Regenerate.\n-\t* generated/minloc0_16_i8.c: Regenerate.\n-\t* generated/maxloc0_16_i8.c: Regenerate.\n-\t* generated/maxval_r16.c: Regenerate.\n-\t* generated/count_16_l16.c: Regenerate.\n-\t* generated/count_8_l8.c: Regenerate.\n-\t* generated/product_c10.c: Regenerate.\n-\t* generated/minloc1_8_i4.c: Regenerate.\n-\t* generated/minloc0_16_i16.c: Regenerate.\n-\t* generated/eoshift1_16.c: Regenerate.\n-\t* generated/minloc0_4_r4.c: Regenerate.\n-\t* generated/product_c4.c: Regenerate.\n-\t* generated/sum_r4.c: Regenerate.\n-\t* generated/in_pack_c16.c: Regenerate.\n-\t* generated/reshape_i4.c: Regenerate.\n-\t* generated/minloc0_8_i8.c: Regenerate.\n-\t* generated/minloc1_16_r10.c: Regenerate.\n-\t* generated/in_pack_c4.c: Regenerate.\n-\t* generated/all_l16.c: Regenerate.\n-\t* generated/reshape_c16.c: Regenerate.\n-\t* generated/maxloc1_8_r8.c: Regenerate.\n-\t* generated/minval_i16.c: Regenerate.\n-\t* generated/reshape_r10.c: Regenerate.\n-\t* generated/maxval_i4.c: Regenerate.\n-\t* generated/any_l4.c: Regenerate.\n-\t* generated/minval_i8.c: Regenerate.\n-\t* generated/maxloc1_4_i8.c: Regenerate.\n-\t* generated/maxloc0_16_i16.c: Regenerate.\n-\t* generated/maxloc0_8_r4.c: Regenerate.\n-\t* generated/minloc1_4_i16.c: Regenerate.\n-\t* generated/minloc0_4_r10.c: Regenerate.\n-\t* generated/maxloc1_4_i16.c: Regenerate.\n-\t* generated/minloc0_8_i16.c: Regenerate.\n-\t* generated/maxloc0_4_r10.c: Regenerate.\n-\t* generated/maxloc0_8_i16.c: Regenerate.\n-\t* generated/minloc1_8_r10.c: Regenerate.\n-\t* generated/product_i4.c: Regenerate.\n-\t* generated/minloc0_16_r4.c: Regenerate.\n-\t* generated/sum_c16.c: Regenerate.\n-\t* generated/maxloc1_8_r10.c: Regenerate.\n-\t* generated/maxloc0_16_r4.c: Regenerate.\n-\t* generated/minloc1_16_r8.c: Regenerate.\n-\t* generated/maxloc0_4_i4.c: Regenerate.\n-\t* generated/maxloc1_16_r8.c: Regenerate.\n-\t* generated/cshift1_4.c: Regenerate.\n-\t* generated/sum_r10.c: Regenerate.\n-\t* generated/sum_c4.c: Regenerate.\n-\t* generated/maxloc1_16_r10.c: Regenerate.\n-\t* generated/count_4_l16.c: Regenerate.\n-\t* generated/in_pack_i4.c: Regenerate.\n-\t* generated/minloc1_8_r8.c: Regenerate.\n-\t* generated/count_4_l4.c: Regenerate.\n-\t* generated/maxval_r10.c: Regenerate.\n-\t* generated/minloc1_4_i8.c: Regenerate.\n-\t* generated/in_unpack_c4.c: Regenerate.\n-\t* generated/minloc0_8_r4.c: Regenerate.\n-\t* generated/product_i16.c: Regenerate.\n-\t* generated/minloc0_16_r16.c: Regenerate.\n-\t* generated/reshape_r8.c: Regenerate.\n-\t* generated/all_l4.c: Regenerate.\n-\t* generated/in_pack_c10.c: Regenerate.\n-\t* generated/minloc0_4_i4.c: Regenerate.\n-\t* generated/reshape_c10.c: Regenerate.\n-\t* generated/minval_r4.c: Regenerate.\n-\t* generated/maxloc1_4_r4.c: Regenerate.\n-\t* generated/sum_i4.c: Regenerate.\n-\t* generated/count_16_l8.c: Regenerate.\n-\t* generated/maxval_r8.c: Regenerate.\n-\t* generated/eoshift1_4.c: Regenerate.\n-\t* generated/eoshift3_8.c: Regenerate.\n-\t* generated/minval_r16.c: Regenerate.\n-\t* generated/product_r8.c: Regenerate.\n-\t* generated/maxloc1_8_i8.c: Regenerate.\n-\t* generated/maxloc0_4_r8.c: Regenerate.\n-\t* generated/maxloc0_16_r16.c: Regenerate.\n-\t* generated/in_unpack_i4.c: Regenerate.\n-\t* generated/sum_c10.c: Regenerate.\n-\t* generated/minloc1_4_r16.c: Regenerate.\n-\t* generated/maxloc1_4_r16.c: Regenerate.\n-\t* generated/in_unpack_c16.c: Regenerate.\n-\t* generated/minloc0_8_r16.c: Regenerate.\n-\t* generated/reshape_c8.c: Regenerate.\n-\t* generated/maxloc0_8_r16.c: Regenerate.\n-\t* generated/maxloc0_8_i4.c: Regenerate.\n-\t* generated/minloc1_4_r4.c: Regenerate.\n-\t* generated/minloc0_16_i4.c: Regenerate.\n-\t* generated/maxloc0_16_i4.c: Regenerate.\n-\t* generated/minloc1_16_i8.c: Regenerate.\n-\t* generated/maxloc1_16_i8.c: Regenerate.\n-\t* generated/count_8_l4.c: Regenerate.\n-\t* generated/minloc0_16_r10.c: Regenerate.\n-\t* generated/minloc1_8_i8.c: Regenerate.\n-\t* generated/minloc0_4_r8.c: Regenerate.\n-\t* generated/product_r16.c: Regenerate.\n-\t* generated/product_c8.c: Regenerate.\n-\t* generated/sum_r8.c: Regenerate.\n-\t* generated/in_pack_i16.c: Regenerate.\n-\t* generated/minloc0_8_i4.c: Regenerate.\n-\t* generated/minloc1_16_i16.c: Regenerate.\n-\t* generated/reshape_i8.c: Regenerate.\n-\t* generated/in_pack_c8.c: Regenerate.\n-\t* generated/maxloc1_8_r4.c: Regenerate.\n-\t* generated/reshape_i16.c: Regenerate.\n-\t* generated/minval_r10.c: Regenerate.\n-\t* generated/minval_i4.c: Regenerate.\n-\t* generated/maxloc1_4_i4.c: Regenerate.\n-\t* generated/maxval_i8.c: Regenerate.\n-\t* generated/eoshift3_16.c: Regenerate.\n-\t* generated/any_l8.c: Regenerate.\n-\t* generated/maxloc0_16_r10.c: Regenerate.\n-\t* generated/minloc0_4_i16.c: Regenerate.\n-\t* generated/maxloc0_8_r8.c: Regenerate.\n-\t* generated/maxloc0_4_i16.c: Regenerate.\n-\t* generated/minloc1_4_r10.c: Regenerate.\n-\t* generated/minloc1_8_i16.c: Regenerate.\n-\t* generated/maxloc1_4_r10.c: Regenerate.\n-\t* generated/minloc0_8_r10.c: Regenerate.\n-\t* generated/maxloc1_8_i16.c: Regenerate.\n-\t* generated/in_unpack_c10.c: Regenerate.\n-\t* generated/maxloc0_8_r10.c: Regenerate.\n-\t* generated/minloc1_16_r4.c: Regenerate.\n-\t* generated/maxloc1_16_r4.c: Regenerate.\n-\t* generated/minloc0_16_r8.c: Regenerate.\n-\t* generated/product_i8.c: Regenerate.\n-\t* generated/maxloc0_16_r8.c: Regenerate.\n-\t* generated/sum_i16.c: Regenerate.\n-\t* generated/maxloc0_4_i8.c: Regenerate.\n-\t* generated/cshift1_8.c: Regenerate.\n-\t* generated/maxloc1_16_i16.c: Regenerate.\n-\t* generated/minloc1_8_r4.c: Regenerate.\n-\t* generated/sum_c8.c: Regenerate.\n-\t* generated/count_8_l16.c: Regenerate.\n-\t* generated/in_pack_i8.c: Regenerate.\n-\t* generated/maxval_i16.c: Regenerate.\n-\t* generated/count_4_l8.c: Regenerate.\n-\t* generated/minloc1_4_i4.c: Regenerate.\n-\t* generated/product_c16.c: Regenerate.\n-\t* generated/reshape_r4.c: Regenerate.\n-\t* generated/minloc0_8_r8.c: Regenerate.\n-\t* generated/in_unpack_c8.c: Regenerate.\n-\t* generated/product_r10.c: Regenerate.\n-\t* generated/cshift1_16.c: Regenerate.\n-\t* generated/all_l8.c: Regenerate.\n-\t* generated/minloc0_4_i8.c: Regenerate.\n-\t* generated/maxval_r4.c: Regenerate.\n-\t* generated/count_16_l4.c: Regenerate.\n-\n-2006-10-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/27895\n-\t* intrinsics/cshift0.c: Special cases for zero-sized arrays.\n-\t* intrinsics/pack_generic.c: Likewise.\n-\t* intrinsics/spread_generic.c: Likewise.\n-\n-2006-10-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/29277\n-\t* io/write.c (write_a): Add conversion of LF to CR-LF for systems with\n-\t#define HAVE_CRLF.\n-\n-2006-10-18  Tobias Burnus  <burnus@net-b.de>\n-\n-\t* m4/in_pack.m4: Fixed a typo.\n-\t* m4/iforeach.m4: Fixed a typo.\n-\t* m4/eoshift1.m4: Fixed a typo.\n-\t* m4/eoshift3.m4: Fixed a typo.\n-\t* m4/cshift1.m4: Fixed a typo.\n-\t* m4/in_unpack.m4: Fixed a typo.\n-\t* m4/reshape.m4: Fixed a typo.\n-\t* m4/ifunction.m4: Fixed a typo.\n-\t* runtime/environ.c: Fixed a typo.\n-\t* runtime/in_pack_generic.c: Fixed a typo.\n-\t* runtime/in_unpack_generic.c: Fixed a typo.\n-\t* runtime/memory.c: Fixed a typo.\n-\t* intrinsics/cshift0.c: Fixed a typo.\n-\t* intrinsics/cpu_time.c: Fixed a typo.\n-\t* intrinsics/pack_generic.c: Fixed a typo.\n-\t* intrinsics/unpack_generic.c: Fixed a typo.\n-\t* intrinsics/eoshift0.c: Fixed a typo.\n-\t* intrinsics/eoshift2.c: Fixed a typo.\n-\t* intrinsics/reshape_generic.c: Fixed a typo.\n-\t* io/open.c: Fixed a typo.\n-\t* io/list_read.c: Fixed a typo.\n-\t* io/io.h: Fixed a typo.\n-\t* io/transfer.c: Fixed a typo.\n-\t* io/write.c: Fixed a typo.\n-\n-2006-10-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/29277\n-\t* io/list_read.c (next_char): Update strm_pos.\n-\t(eat_separator): Delete extra call to unget_char.\n-\t* io/transfer.c (read_block): Use read_sf for formatted stream I/O.\n-\t(next_record_r): Update strm_pos for formatted stream I/O and handle\n-\tend-of-record correctly.\n-\t(next_record_w): Ditto.\n-\t(next_record): Enable next record (r/w) functions and update strm_pos.\n-\t(finalize_transfer): Call next_record to finish the record.\n-\n-2006-10-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\t* m4/spacing.m4: Use scalbn[f,l] if ldexp[f,l] is unavailable.\n-\t* m4/rrspacing.m4: Ditto.\n-\t* generated/spacing_r4.c: Regenerated.\n-\t* generated/spacing_r8.c: Ditto.\n-\t* generated/spacing_r10.c: Ditto.\n-\t* generated/spacing_r16.c: Ditto.\n-\t* generated/rrspacing_r4.c: Ditto.\n-\t* generated/rrspacing_r8.c: Ditto.\n-\t* generated/rrspacing_r10.c: Ditto.\n-\t* generated/rrspacing_r16.c: Ditto.\n-\n-2006-10-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\tPR fortran/15441\n-\tPR fortran/29312\n-\t* configure.ac: Add HAVE_LDEXPF, HAVE_LDEXP, and HAVE_LDEXPL\n-\t* m4/spacing.m4: New file.  Use new HAVE_* defines.\n-\t* m4/rrspacing.m4: Ditto.\n-\t* Makefile.am: Handle new files.\n-\t* configure: Regenerated.\n-\t* Makefile.in: Ditto.\n-\t* config.h.in: Ditto.\n-\t* generated/spacing_r4.c: Generated.\n-\t* generated/spacing_r8.c: Ditto.\n-\t* generated/spacing_r10.c: Ditto.\n-\t* generated/spacing_r16.c: Ditto.\n-\t* generated/rrspacing_r4.c: Ditto.\n-\t* generated/rrspacing_r8.c: Ditto.\n-\t* generated/rrspacing_r10.c: Ditto.\n-\t* generated/rrspacing_r16.c: Ditto.\n-\n-2006-10-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* intrinsics/hyper.c: Remove file.\n-\t* intrinsics/c99_functions.c: Add fallback functions asinhf,\n-\tacoshf and atanhf.\n-\t* Makefile.am: Remove file intrinsics/hyper.c.\n-\t* Makefile.in: Regenerate.\n-\n-2006-10-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* c99_protos.h: Correctly protect definitions of prototypes for\n-\tasinhf, acoshf and atanhf to be the same as in intrinsics/hyper.c.\n-\n-2006-10-08  Paul Thomas  <pault@gcc.gnu.org>\n-\t    Erik Edelmann  <edelmann@gcc.gnu.org>\n-\n-\tPR libgfortran/20541\n-\t* Makefile.in : Add move_alloc.\n-\t* intrinsics/move_alloc.c: New function.\n-\t* Makefile.am : Add move_alloc.\n-\n-2006-10-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/26540\n-\t* intrinsics/signal.c (signal_sub, signal_sub_int): Use intptr_t\n-\tif available to cast function pointers to int and back.\n-\t* configure.ac: Check for intptr_t.\n-\t* config.h.in: Regenerate.\n-\t* configure: Regenerate.\n-\n-2006-10-01  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR fortran/16580\n-\tPR fortran/29288\n-\t* libgfortran/Makefile.am: Add the new files to the build\n-\tprocess, and rules to build them.\n-\t* libgfortran/Makefile.in: Regenerate.\n-\t* libgfortran/m4/misc_specifics.m4: New file.\n-\t* libgfortran/m4/specific.m4: Add new special cases for function\n-\twith complex argument and real result, like abs_c* and aimag_c*.\n-\t* libgfortran/intrinsics/f2c_specifics.F90: Add specifics for\n-\tAIMAG, ASINH, ACOSH and ATANH.\n-\t* libgfortran/generated/_aimag_c4.F90: New file.\n-\t* libgfortran/generated/_aimag_c8.F90: New file.\n-\t* libgfortran/generated/_asinh_r10.F90: New file.\n-\t* libgfortran/generated/_acosh_r16.F90: New file.\n-\t* libgfortran/generated/_aimag_c10.F90: New file.\n-\t* libgfortran/generated/_atanh_r16.F90: New file.\n-\t* libgfortran/generated/_acosh_r4.F90: New file.\n-\t* libgfortran/generated/_acosh_r8.F90: New file.\n-\t* libgfortran/generated/_asinh_r4.F90: New file.\n-\t* libgfortran/generated/_asinh_r8.F90: New file.\n-\t* libgfortran/generated/_asinh_r16.F90: New file.\n-\t* libgfortran/generated/_atanh_r4.F90: New file.\n-\t* libgfortran/generated/_atanh_r8.F90: New file.\n-\t* libgfortran/generated/_acosh_r10.F90: New file.\n-\t* libgfortran/generated/misc_specifics.F90: New file.\n-\t* libgfortran/generated/_aimag_c16.F90: New file.\n-\t* libgfortran/generated/_atanh_r10.F90: New file.\n-\n-2006-10-05  Danny Smith  <dannysmith@users.sourceforge.net>\n-\n-\t* acinclude.m4 (HAVE_ATTRIBUTE_ALIAS): Remove __USER_LABEL_PREFIX__\n-\tfrom test.\n-\t* configure: Regenerate.\n-\n-2006-10-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\t* Makefile.am: Use $(M4) instead of m4.\n-\t* Makefile.in: Regenerated.\n-\n-2006-10-01  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* libgfortran.h: Add prototype for internal_unpack_c16.\n-\n-2006-09-29  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/18791\n-\t* m4/specific.m4: Special-case cabs so that its return type is\n-\treal. Special-case conjg so that their suffices are _4, _8, _10 and\n-\t_16 instead of _c4, _c8, _c10 and _c16.\n-\t* intrinsics/f2c_specifics.F90: Special-case conjg functions so\n-\tthat their suffices are _4 and _8 instead of _c4 and _c8.\n-\t* generated/_conjg_c4.F90: Regenerate.\n-\t* generated/_conjg_c8.F90: Regenerate.\n-\t* generated/_conjg_c10.F90: Regenerate.\n-\t* generated/_conjg_c16.F90: Regenerate.\n-\t* generated/_abs_c4.F90: Regenerate.\n-\t* generated/_abs_c8.F90: Regenerate.\n-\t* generated/_abs_c10.F90: Regenerate.\n-\t* generated/_abs_c16.F90: Regenerate.\n-\n-2006-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n-\n-\t* intrinsics/cpu_time.c:  Add cpu_time_10 and cpu_time_16 routines.\n-\n-2006-09-28  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-D\n-\t* Makefile.am: Install libgfortranbegin inside compiler libraries\n-\tdirectory instead of system libraries directory.\n-\t* Makefile.in: Regenerate.\n-\n-2006-09-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* Makefile.am: Remove dependency on gfortypes.h.\n-\t* Makefile.in: Regenerate.\n-\n-2006-09-22  Danny Smith  <dannysmith@users.sourceforge.net>\n-\n-\tPR libfortran/27964\n-\t* configure.ac: Check for setmode() function.\n-\t* configure: Regenerate.\n-\t* config.h.in: Regenerate.\n-\t* io/unix.c (output_stream): Force stdout to binary mode. \n-\t(error_stream): Force stderr to binary mode.\n-\n-2006-09-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/29099\n-\t* intrinsics/date_and_time.c (secnds): Fix case of zero time.\n-\n-2006-09-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/29053\n-\t* io.h (gfc_unit): Add variable, strm_pos, to track\n-\tSTREAM I/O file position.\n-\t* file_pos.c (st_rewind): Set strm_pos to beginning.\n-\t* open.c (new_unit): Initialize strm_pos.\n-\t* read.c (read_x): Bump strm_pos.\n-\t* inquire.c (inquire_via_unit): Return strm_pos value.\n-\t* transfer.c (read_block),(read_block_direct),(write_block)\n-\t(write_buf): Seek to strm_pos - 1.  Update strm_pos when done.\n-\t(pre_position): Initialize strm_pos.\n-\t(data_transfer_init): Set strm_pos if DT_HAS_REC.\n-\t(finalize_transfer): Flush file, no need to update strm_pos.\n-\n-2006-09-10  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR libfortran/28947\n-\t* m4/matmul.m4: For the case where the second input argument is\n-\ttransposed, ensure that the case with rank (a) == 1 is\n-\tcorrectly calculated.\n-\t* generated/matmul_r4.c: Regenerate.\n-\t* generated/matmul_r8.c: Regenerate.\n-\t* generated/matmul_r10.c: Regenerate.\n-\t* generated/matmul_r16.c: Regenerate.\n-\t* generated/matmul_c4.c: Regenerate.\n-\t* generated/matmul_c8.c: Regenerate.\n-\t* generated/matmul_c10.c: Regenerate.\n-\t* generated/matmul_c16.c: Regenerate.\n-\t* generated/matmul_i4.c: Regenerate.\n-\t* generated/matmul_i8.c: Regenerate.\n-\t* generated/matmul_i16.c: Regenerate.\n-\n-2006-08-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/28354\n-\t* io/write.c: Check for special case of zero precision in format\n-\tand pre-round the real value.\n-\n-2006-08-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/25828\n-\t* libgfortran.h: Rename GFC_LARGE_IO_INT to GFC_IO_INT.\n-\t* io/file_pos.c (st_backspace): Ignore if access=STREAM.\n-\t(st_rewind): Handle case of access=STREAM.\n-\t* io/open.c (access_opt): Add STREAM_ACCESS.\n-\t(edit_modes): Set current_record to zero only if not STREAM.\n-\t(new_unit): Initialize maxrec, recl, and last_record for STREAM.\n-\t* io/read.c (read_x): Advance file position for STREAM.\n-\t* io/io.h (enum unit_access): Align IOPARM flags with frontend.\n-\tAdd ACCESS_STREAM. Add prototype for is_stream_io () function.\n-\tUse GFC_IO_INT.\n-\t* io/inquire.c (inquire_via_unit): Add text for access = \"STREAM\".\n-\t* io/unit.c (is_stream_io): New function to return true if access =\n-\tSTREAM.\n-\t* io/transfer.c (file_mode): Add modes for unformatted stream and\n-\tformatted stream. (current_mode): Return appropriate file mode based\n-\ton access flags.\n-\t(read_block): Handle formatted stream reads.\n-\t(read_block_direct): Handle unformatted stream reads.\n-\t(write_block): Handle formatted stream writes.\n-\t(write_buf): Handle unformatted stream writes.\n-\t(unformatted_read): Fix up, use temporary for size.\n-\t(pre_position): Position file for STREAM access.\n-\t(data_transfer_init): Initialize for stream access, skip irrelevent\n-\terror checks.\n-\t(next_record_r),(next_record_w), and (next_record): Do nothing for\n-\tstream I/O.\n-\t(finalize_transfer): Flush when all done if stream I/O.\n-\n-2006-08-12  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* intrinsics/bessel.c: Add prototypes for all functions.\n-\n-2006-08-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* intrinsics/access.c (access_func): Remove export directive.\n-\n-2006-08-02  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\t* Makefile.in:  Regenerate using automake 1.9.6.\n-\t* aclocal.m4:  Revert to previous version.\n-\n-2006-08-01  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR libfortran/28452\n-\t* Makefile.am:  Remove normalize.c.\n-\t* aclocal.m4:  Regenerate using aclocal 1.9.3.\n-\t* Makefile.in:  Regenerate using automake 1.9.3.\n-\t* libgfortran.h:  #include <float.h>.\n-\tDefine GFC_REAL_*_DIGITS and GFC_REAL_*_RADIX.\n-\tRemove prototypes for normalize_r4_i4 and normalize_r8_i8.\n-\t* intrinsics/random.c (top level): Add prototypes for\n-\trandom_r10, arandom_r10, random_r16 and arandom_r16.\n-\t(rnumber_4):  New static function.\n-\t(rnumber_8):  New static function.\n-\t(rnumber_10): New static function.\n-\t(rnumber_16): New static function.\n-\t(top level):  Set to kiss_size to 12 if we have\n-\tREAL(KIND=16), to 8 otherwise.\n-\tDefine KISS_DEFAULT_SEED_1, KISS_DEFAULT_SEED_2 and\n-\tKISS_DEFAULT_SEED_3.\n-\t(kiss_random_kernel):  Take argument to differentiate\n-\tbetween different random number generators.\n-\t(random_r4):  Add argument to call to kiss_random_kernel,\n-\tuse rnumber_*.\n-\t(random_r8):  Likewise.\n-\t(random_r10):  New function.\n-\t(random_r16):  New function.\n-\t(arandom_r4):  Add argument to call to kiss_random_kernel,\n-\tuse_rnumber_*.\n-\t(arandom_r8):  Likewise.\n-\t(arandom_r10):  New function.\n-\t(arandom_r16):  New function.\n-\t* intrinsics/rand.c (rand):  Use shift and mask.\n-\t* runtime/normalize.c:  Remove.\n-\n-2006-07-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/28335\n-\t* file_position.c (st_flush): Add clearer error when UNIT does not\n-\texist. Add reference to standard in comment.\n-\n-2006-07-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/28335\n-\t* close.c (st_close): Revert previous patch and add comment.\n-\t* file_position.c (st_flush): Revert previous patch and add comment.\n-\n-2006-07-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* intrinsics/date_and_time.c: Add functions for GMTIME and LTIME.\n-\t* intrinsics/access.c: New file.\n-\t* intrinsics/chmod.c: New file.\n-\t* configure.ac: Add checks for <sys/wait.h>, access, fork,execl\n-\tand wait.\n-\t* Makefile.am: Add new files intrinsics/access.c and\n-\tintrinsics/chmod.c.\n-\t* configure: Regenerate.\n-\t* config.h.in: Regenerate.\n-\t* Makefile.in: Regenerate.\n-\n-2006-07-30  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* io/transfer.c (transfer_array): Remove stride0 fix.\n-\t\n-2006-07-26  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* configure.ac: Check for function clock.\n-\t* Makefile.am: Compile new file intrinsics/clock.c.\n-\t* intrinsics/clock.c: New file.\n-\t* Makefile.in: Regenerate.\n-\t* configure: Regenerate.\n-\t* config.h.in: Regenerate.\n-\t* intrinsics/stat.c: Rename the old stat_i?_sub functions to\n-\thelper functions stat_i?_sub_0, and use them for both STAT and\n-\tLSTAT.\n-\n-2006-07-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/28335\n-\t* close.c (st_close): Add error when UNIT does not exist.\n-\t* file_position.c (st_flush): Add error when UNIT does not exist.\n-\n-2006-07-25  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\tPR build/26188\n-\t* configure: Regenerate.\n-\n-2006-07-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/25289\n-\t* libgfortran.h: Add conditional definition of GFC_LARGE_IO_INT type.\n-\t* io/io.h (st_parameter_dt): Define rec as type GFC_LARGE_IO_INT.\n-\n-2006-07-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/28339\n-\t* io/transfer.c (next_record_w): Use next_array_record result to set\n-\tEND_FILE. (write_block): Test for END_FILE before the next write occurs.\n-\t* io/unit.c (get_internal_unit): Initialize iunit->endfile for internal\n-\tunit.\n-\n-2006-07-19  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR fortran/27919\n-\t* m4/dotprodc.m4: Remove.\n-\t* m4/dotprodl.m4: Remove.\n-\t* m4/dotprod.m4: Remove.\n-\t* generated/dotprod_*.c: Remove.\n-\t* Makefile.am: Remove any references to dot_product\n-\timplementation.\n-\t* Makefile.in: Regenerated.\n-\t\n-2006-07-18  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\t* configure: Regenerate.\n-\n-2006-07-15  Steven G. Kargl  <kargls@comcast.net>\n-\n-\t* intrinsics/etime.c: Remove etime_\n-\t* libtool-version: Bump from libgfortran.so.1 to libgfortran.so.2\n-\n-2006-07-12  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR fortran/28163\n-\t* intrinsics/string_intrinsics.c (copy_string): Remove function.\n-\n-2006-07-04  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* intrinsics/date_and_time.c (itime0,idate0,itime_i4,itime_i8,\n-\tidate_i4,idate_i8): New functions.\n-\n-2006-07-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/27704\n-\t* runtime/error.c (notify_std): Pass common flags into function. Use\n-\tflags to show locus of error or warning.\n-\t* libgfortran.h: Add enum try.  Add prototype for notify_std.\n-\t* io/open.c (edit_modes): Allow status=\"old\" and add extension to\n-\tallow status=\"scratch\"\n-\t*io/list_read.c (nml_read_obj): Update call to notify_std.\n-\t*io/io.h: Remove enum try and prototype for notify_std.\n-\t*io/transfer.c (read_sf): Update call to notify_std.\n-\t*io/format.c (parse_format_list): Update call to notify_std.\n-\n-2006-06-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* io/io.h: Move proto for unit_to_fd...\n-\t* libgfortran.h: ...here.\n-\n-2006-06-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* intrinsics/ierrno.c: Don't include \"io/io.h\".\n-\t* intrinsics/sleep.c: Likewise.\n-\t* intrinsics/perror.c: Likewise.\n-\t* intrinsics/stat.c: Likewise.\n-\t* intrinsics/kill.c: Likewise.\n-\t* intrinsics/time.c: Likewise.\n-\t* intrinsics/fnum.c: Likewise.\n-\t* intrinsics/rename.c: Likewise.\n-\t* intrinsics/symlnk.c: Likewise.\n-\t* intrinsics/chdir.c: Likewise.\n-\t* intrinsics/link.c: Likewise.\n-\t* intrinsics/random.c: Don't include \"io/io.h\". Include\t<gthr.h>.\n-\t* intrinsics/rand.c: Likewise.\n-\n-2006-06-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR fortran/28094\n-\t* Makefile.am: Add _mod_r10.F90 and _mod_r16.F90.\n-\t* Makefile.in: Regenerate.\n-\t* generated/_mod_r10.F90: New file.\n-\t* generated/_mod_r16.F90: New file.\n-\n-2006-06-22  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/26769\n-\t* Makefile.am: Add r4 and r8 versions of reshape and transpose.\n-\t* Makefile.in: Regenerate.\n-\t* generated/reshape_r4.c: New file.\n-\t* generated/reshape_r8.c: New file.\n-\t* generated/transpose_r4.c: New file.\n-\t* generated/transpose_r8.c: New file.\n-\n-2006-06-20  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR libfortran/28005\n-\t* m4/matmul.m4: aystride = 1 does not uniquely detect the\n-\tpresence of a temporary transpose; an array element in the\n-\tfirst dimension produces the same signature.  Detect this\n-\tusing the rank of a and add specific code.\n-\t* generated/matmul_r4.c: Regenerate.\n-\t* generated/matmul_r8.c: Regenerate.\n-\t* generated/matmul_r10.c: Regenerate.\n-\t* generated/matmul_r16.c: Regenerate.\n-\t* generated/matmul_c4.c: Regenerate.\n-\t* generated/matmul_c8.c: Regenerate.\n-\t* generated/matmul_c10.c: Regenerate.\n-\t* generated/matmul_c16.c: Regenerate.\n-\t* generated/matmul_i4.c: Regenerate.\n-\t* generated/matmul_i8.c: Regenerate.\n-\t* generated/matmul_i16.c: Regenerate.\n-\n-2006-06-18  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n-\n-\tPR libgomp/27254\n-\t* io/unit.c (get_internal_unit): Initialize and lock thread mutex\n-\tfor internal units.\n-\n-2006-06-06  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* m4/in_pack.m4: Add TODO comment about detecting temporaries,\n-\tremove test for stride 0, update copyright year.\n-\t* m4/transpose.m4: Remove test for stride 0, update copyright\n-\tyear.\n-\t* m4/iforeach.m4: Likewise.\n-\t* m4/shape.m4: Likewise.\n-\t* m4/in_unpack.m4: Likewise.\n-\t* m4/reshape.m4: Likewise.\n-\t* m4/ifunction.m4: Likewise.\n-\t* m4/matmul.m4: Likewise.\n-\t* m4/matmull.m4: Likewise.\n-\t* intrinsics/etime.c: Likewise.\n-\t* intrinsics/transpose_generic.c: Likewise.\n-\t* intrinsics/spread_generic.c: Likewise.\n-\t* intrinsics/stat.c: Likewise.\n-\t* intrinsics/reshape_generic.c: Likewise.\n-\t* intrinsics/random.c: Likewise.\n-\t* generated/*: Regenerated from above changed m4 files.\n-\t\n-2006-05-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/27757\n-\t* io/unix.c (fd_seek): Set active to zero.\n-\n-2006-05-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/27634\n-\t* io/format.c (parse_format_list): Allow missing period in format only\n-\tif -std=legacy.\n-\n-2006-05-28  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\t* intrinsics/string_intrinsics.c (compare_string):\n-\tUse memcmp instead of strncmp to avoid tripping over\n-\tCHAR(0) in a string.\n-\n-2006-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* io/io.h (find_or_create_unit): Correct export declaration.\n-\t\n-2006-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* intrinsics/abort.c (abort_): Remove.\n-\n-2006-05-26  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* configure.ac: Remove AC_FUNC_MMAP.\n-\t* configure: Regenerated.\n-\t* Makefile.in: Regenerated.\n-\t* config.h.in: Regenerated.\n-\t* aclocal.m4: Regenerated.\n-\n-2006-05-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* intrinsics/associated.c (associated): Zero-sized arrays should\n-\tnot be reported as ASSOCIATED.\n-\n-2006-05-24  Carlos O'Donell  <carlos@codesourcery.com>\n-\n-\t* Makefile.am: Add install-html target. Add install-html to .PHONY\n-\t* Makefile.in: Regenerate.\n-\t* aclocal.m4: Regenerate.\n-\t\n-2006-05-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/24459\n-\t* io/list_read.c (nml_parse_qualifier): Leave loop spec end value\n-\tat default value unless -std=f95 or if an array section\n-\tis specified in namelist input.  Warn if -pedantic.\n-\t* io/io.h (st_parameter_dt): Add expanded_read flag.\n-\n-2006-05-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/22423\n-\t* io/transfer.c (read_block): Return NULL instead of nothing.\n-\t\n-2006-05-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/27575\n-\t* io/transfer.c (read_block):  Add check for end file condition.\n-\t(read_block_direct): Add check for end file condition.\n-\n-2006-05-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/26985\n-\t* m4/matmul.m4: Correct the condition for the memset call,\n-\tand remove the unneeded call to size0.\n-\t* generated/matmul_r4.c: Regenerate.\n-\t* generated/matmul_r8.c: Regenerate.\n-\t* generated/matmul_r10.c: Regenerate.\n-\t* generated/matmul_r16.c: Regenerate.\n-\t* generated/matmul_c4.c: Regenerate.\n-\t* generated/matmul_c8.c: Regenerate.\n-\t* generated/matmul_c10.c: Regenerate.\n-\t* generated/matmul_c16.c: Regenerate.\n-\t* generated/matmul_i4.c: Regenerate.\n-\t* generated/matmul_i8.c: Regenerate.\n-\t* generated/matmul_i16.c: Regenerate.\n-\n-2006-04-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/27360\n-\t* io/list_read.c (read_logical):  Free line_buffer and free saved.\n-\n-2006-04-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/27304\n-\t* io/transfer.c (formatted_transfer_scalar):  Generate error if data\n-\tdescriptors are exhausted.\n-\t* io/format.c (next_format0): Fix comment.\n-\n-2006-04-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/20257\n-\t* io/io.h: Add prototypes for get_internal_unit and free_internal_unit.\n-\t* io/unit.c (get_internal_unit): Initialize unit number, not zero.\n-\t(free_internal_unit): New function to consolidate freeing memory.\n-\t(get_unit): Initialize internal_unit_desc to NULL when unit is\n-\texternal.\n-\t* io/unix.c (mem_close): Check for not NULL before freeing memory.\n-\t* io/transfer.c (read_block): Reset bytes_left and skip error if unit\n-\tis preconnected and default record length is reached.\n-\t(read_block_direct): Ditto.\n-\t(write_block): Ditto.\n-\t(write_buf): Ditto.\n-\t(data_transfer_init): Only flush if not internal unit.\n-\t(finalize_transfer): Ditto and delete code to free memory used by\n-\tinternal units.\n-\t(st_read_done): Use new function - free_internal_unit.\n-\t(st_write_done): Use new function - free_internal unit.\n-\n-2006-04-22  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tPR fortran/26769\n-\t* Makefile.am (i_transpose_c): Add generated/transpose_r16.c.\n-\t(i_reshape_c): Add generated/reshape_r16.c.\n-\t* Makefile.in: Regenerated.\n-\t* generated/transpose_r16.c: Generated new file.\n-\t* generated/redhape_r16.c: Generated new file.\n-\n-2006-04-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/27138\n-\t* io/list_read.c (eat_line): New function.\n-\t(parse_repeat): Use new function and free_saved.\n-\t(read_logical): Same.\n-\t(read_integer): Use new function.\n-\t(parse_real): Use nml_bad_return and new function.\n-\t(read_complex): Use new function and free_saved.\n-\t(read_real): Same.\n-\n-2006-04-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26766\n-\t* io/io.h: Add bit to identify associated unit as internal.\n-\t* io/unit.c (get_external_unit): Renamed the find_unit_1 function to\n-\treflect the external unit functionality vs internal unit.\n-\t(get_internal_unit): New function to allocate and initialize an internal\n-\tunit structure.\n-\t(get_unit): Use get_internal_unit and get_external_unit.\n-\t(is_internal_unit): Revised to use new bit added in io.h.\n-\t* io/transfer.c (data_transfer_init): Fix line width.\n-\t(st_read_done): Free memory allocated for internal unit.\n-\t(st_write_done): Add test to only flush and truncate when not an\n-\tinternal unit.  Free memory allocated for internal unit.\n-\n-2006-04-11  Jakub Jelinek  <jakub@redhat.com>\n-\n-\t* io/io.h (st_parameter_dt): Revert 2005-12-10 change to\n-\tu.pad, fix comment.\n-\t(check_st_parameter_dt): New compile time assert.\n-\n-2006-04-10  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tPR libgfortran/24685\n-\t* io/write.c (MIN_FIELD_WIDTH, STR, STR1): Define.\n-\t(output_float): Increase buffer sizes for IEEE quad and IBM extended\n-\tlong double.\n-\t(write_real): Output REAL(16) as 1PG43.34E4 rather than 1PG40.31E4.\n-\n-2006-04-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26890\n-\t* io/io.h: Revert change to pad size made on 2006-03-30.\n-\tAdd comment explaining dependency with fortran/trans-io.c.\n-\t\n-2006-04-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\t* io/write.c (output_float): Update condition to not error when\n-\tdecimal precision in format specifier is zero.\n-\n-2006-04-01  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* config/fpu-387.h: Use previously added SSE code in all\n-\tcases, as it really is the right thing to do.\n-\n-2006-03-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26890\n-\t* io/io.h: Add size_used to st_parameter_dt, adjust pad size.\n-\t*io/transfer.c (data_transfer_init): Initialize size_used to zero.\n-\t(read_sf): Use size_used.\n-\t(read_block): Likewise.\n-\t(read_block_direct): Likewise.\n-\t(write_block): Likewise.\n-\t(write_buf): Likewise and eliminate erroneous FAILURE return.\n-\t(finalize_transfer): Assign value of size_used to *dtp->size.\n-\n-2006-03-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/26712\n-\t* config/fpu-387.h: Add special case for handling of SSE\n-\tcontrol bit on i386-darwin.\n-\n-2006-03-30  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR fortran/25031\n-\t* runtime/memory.c (allocate_array):  If stat is present and\n-\tthe variable is already allocated, free the variable, do\n-\tthe allocation and set stat.\n-\t(allocate_array_64):  Likewise.  Whitespace fix.\n-\n-2006-03-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26880\n-\t* io/file_pos.c (st_rewind): Clear read_bad flag.\n-\n-2006-03-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26661\n-\t* io/io.h: Add read_sf so it can be used by read_x.\n-\t* io/transfer.c (read_sf): Pass no_error flag to read_sf.  Use it to\n-\tbreak out rather than error on EOF or EOR conditions.\n-\t(read_block): Update call to read_sf.\n-\t(read_block_direct): Ditto.\n-\t* io/read.c (read_x): Use the modified read_sf instead of read_block.\n-\n-2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR libfortran/26735\n-\t* io/transfer.c (data_transfer_init):  Set u_flags.convert\n-\ton an unopened unit if specified by environment variable\n-\t(via get_unformatted_convert) or by compile-time option.\n-\n-2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR fortran/26769\n-\t* Makefile.am:  Add transpose_r10.c and reshape_r10.c.\n-\t* aclocal.m4:  Regenerate using aclocal 1.9.3.\n-\t* Makefile.in:  Regenerate using automake 1.9.3.\n-\t* m4/iparm.m4 (rtype_ccode):  If rtype_letter is `i',\n-\tevaluate to rtype_kind, otherwise to rtype_code.\n-\t* generated/transpose_r10.c:  Add.\n-\t* generated/reshape_r10.c:  Add.\n-\n-2006-03-22  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR fortran/19303\n-\t* libgfortran.h (compile_options_t):  Add record_marker.\n-\t* runtime/compile_options.c (set_record_marker):\n-\tNew function.\n-\t* io/open.c:  If we have four-byte record markers, use\n-\tGFC_INTEGER_4_HUGE as default record length.\n-\t* io/file_pos.c (unformatted_backspace):  Handle\n-\tdifferent size record markers.\n-\t* io/transfer.c (us_read):  Likewise.\n-\t(us_write):  Likewise.\n-\t(next_record_r):  Likewise.\n-\t(write_us_marker):  Likewise.\n-\t(next_record_w):  Likewise.\n-\n-2006-03-20  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR fortran/20935\n-\t* m4/iforeach.m4:  Add SCALAR_FOREACH_FUNCTION macro.\n-\t* m4/ifunction.m4:  Add SCALAR_ARRAY_FUNCTION macro.\n-\t* m4/minloc0.m4:  Use SCALAR_FOREACH_FUNCTION.\n-\t* m4/minloc1.m4:  Use SCALAR_ARRAY_FUNCTION.\n-\t* m4/maxloc0.m4:  Use SCALAR_FOREACH_FUNCTION.\n-\t* m4/maxloc1.m4:  Use SCALAR_ARRAY_FUNCTION.\n-\t* m4/minval.m4:  Likewise.\n-\t* m4/maxval.m4:  Likewise.\n-\t* m4/product.m4:  Likewise.\n-\t* m4/sum.m4:  Likewise.\n-\t* minloc0_16_i16.c : Regenerated.\n-\t* minloc0_16_i4.c : Regenerated.\n-\t* minloc0_16_i8.c : Regenerated.\n-\t* minloc0_16_r10.c : Regenerated.\n-\t* minloc0_16_r16.c : Regenerated.\n-\t* minloc0_16_r4.c : Regenerated.\n-\t* minloc0_16_r8.c : Regenerated.\n-\t* minloc0_4_i16.c : Regenerated.\n-\t* minloc0_4_i4.c : Regenerated.\n-\t* minloc0_4_i8.c : Regenerated.\n-\t* minloc0_4_r10.c : Regenerated.\n-\t* minloc0_4_r16.c : Regenerated.\n-\t* minloc0_4_r4.c : Regenerated.\n-\t* minloc0_4_r8.c : Regenerated.\n-\t* minloc0_8_i16.c : Regenerated.\n-\t* minloc0_8_i4.c : Regenerated.\n-\t* minloc0_8_i8.c : Regenerated.\n-\t* minloc0_8_r10.c : Regenerated.\n-\t* minloc0_8_r16.c : Regenerated.\n-\t* minloc0_8_r4.c : Regenerated.\n-\t* minloc0_8_r8.c : Regenerated.\n-\t* minloc1_16_i16.c : Regenerated.\n-\t* minloc1_16_i4.c : Regenerated.\n-\t* minloc1_16_i8.c : Regenerated.\n-\t* minloc1_16_r10.c : Regenerated.\n-\t* minloc1_16_r16.c : Regenerated.\n-\t* minloc1_16_r4.c : Regenerated.\n-\t* minloc1_16_r8.c : Regenerated.\n-\t* minloc1_4_i16.c : Regenerated.\n-\t* minloc1_4_i4.c : Regenerated.\n-\t* minloc1_4_i8.c : Regenerated.\n-\t* minloc1_4_r10.c : Regenerated.\n-\t* minloc1_4_r16.c : Regenerated.\n-\t* minloc1_4_r4.c : Regenerated.\n-\t* minloc1_4_r8.c : Regenerated.\n-\t* minloc1_8_i16.c : Regenerated.\n-\t* minloc1_8_i4.c : Regenerated.\n-\t* minloc1_8_i8.c : Regenerated.\n-\t* minloc1_8_r10.c : Regenerated.\n-\t* minloc1_8_r16.c : Regenerated.\n-\t* minloc1_8_r4.c : Regenerated.\n-\t* minloc1_8_r8.c : Regenerated.\n-\t* maxloc0_16_i16.c : Regenerated.\n-\t* maxloc0_16_i4.c : Regenerated.\n-\t* maxloc0_16_i8.c : Regenerated.\n-\t* maxloc0_16_r10.c : Regenerated.\n-\t* maxloc0_16_r16.c : Regenerated.\n-\t* maxloc0_16_r4.c : Regenerated.\n-\t* maxloc0_16_r8.c : Regenerated.\n-\t* maxloc0_4_i16.c : Regenerated.\n-\t* maxloc0_4_i4.c : Regenerated.\n-\t* maxloc0_4_i8.c : Regenerated.\n-\t* maxloc0_4_r10.c : Regenerated.\n-\t* maxloc0_4_r16.c : Regenerated.\n-\t* maxloc0_4_r4.c : Regenerated.\n-\t* maxloc0_4_r8.c : Regenerated.\n-\t* maxloc0_8_i16.c : Regenerated.\n-\t* maxloc0_8_i4.c : Regenerated.\n-\t* maxloc0_8_i8.c : Regenerated.\n-\t* maxloc0_8_r10.c : Regenerated.\n-\t* maxloc0_8_r16.c : Regenerated.\n-\t* maxloc0_8_r4.c : Regenerated.\n-\t* maxloc0_8_r8.c : Regenerated.\n-\t* maxloc1_16_i16.c : Regenerated.\n-\t* maxloc1_16_i4.c : Regenerated.\n-\t* maxloc1_16_i8.c : Regenerated.\n-\t* maxloc1_16_r10.c : Regenerated.\n-\t* maxloc1_16_r16.c : Regenerated.\n-\t* maxloc1_16_r4.c : Regenerated.\n-\t* maxloc1_16_r8.c : Regenerated.\n-\t* maxloc1_4_i16.c : Regenerated.\n-\t* maxloc1_4_i4.c : Regenerated.\n-\t* maxloc1_4_i8.c : Regenerated.\n-\t* maxloc1_4_r10.c : Regenerated.\n-\t* maxloc1_4_r16.c : Regenerated.\n-\t* maxloc1_4_r4.c : Regenerated.\n-\t* maxloc1_4_r8.c : Regenerated.\n-\t* maxloc1_8_i16.c : Regenerated.\n-\t* maxloc1_8_i4.c : Regenerated.\n-\t* maxloc1_8_i8.c : Regenerated.\n-\t* maxloc1_8_r10.c : Regenerated.\n-\t* maxloc1_8_r16.c : Regenerated.\n-\t* maxloc1_8_r4.c : Regenerated.\n-\t* maxloc1_8_r8.c : Regenerated.\n-\t* maxval_i16.c : Regenerated.\n-\t* maxval_i4.c : Regenerated.\n-\t* maxval_i8.c : Regenerated.\n-\t* maxval_r10.c : Regenerated.\n-\t* maxval_r16.c : Regenerated.\n-\t* maxval_r4.c : Regenerated.\n-\t* maxval_r8.c : Regenerated.\n-\t* minval_i16.c : Regenerated.\n-\t* minval_i4.c : Regenerated.\n-\t* minval_i8.c : Regenerated.\n-\t* minval_r10.c : Regenerated.\n-\t* minval_r16.c : Regenerated.\n-\t* minval_r4.c : Regenerated.\n-\t* minval_r8.c : Regenerated.\n-\t* sum_c10.c : Regenerated.\n-\t* sum_c16.c : Regenerated.\n-\t* sum_c4.c : Regenerated.\n-\t* sum_c8.c : Regenerated.\n-\t* sum_i16.c : Regenerated.\n-\t* sum_i4.c : Regenerated.\n-\t* sum_i8.c : Regenerated.\n-\t* sum_r10.c : Regenerated.\n-\t* sum_r16.c : Regenerated.\n-\t* sum_r4.c : Regenerated.\n-\t* sum_r8.c : Regenerated.\n-\t* product_c10.c : Regenerated.\n-\t* product_c16.c : Regenerated.\n-\t* product_c4.c : Regenerated.\n-\t* product_c8.c : Regenerated.\n-\t* product_i16.c : Regenerated.\n-\t* product_i4.c : Regenerated.\n-\t* product_i8.c : Regenerated.\n-\t* product_r10.c : Regenerated.\n-\t* product_r16.c : Regenerated.\n-\t* product_r4.c : Regenerated.\n-\t* product_r8.c : Regenerated.\n-\n-2006-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26509\n-\t* libgfortran.h: Add ERROR_DIRECT_EOR.\n-\t* runtime/error.c (translate_error): Add translation for new error.\n-\t* io/transfer.c (write_buf): Add check for EOR when mode is \n-\tdirect access.\n-\n-2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n-\n-\tPR fortran/25378\n-\t* libgfortran/m4/minloc1.m4: Set the initial position to zero and\n-\tmodify the condition for updating it, to implement the F2003\n-\trequirement for all(mask).eq.false.\n-\t* libgfortran/m4/maxloc1.m4: The same.\n-\t* libgfortran/m4/iforeach.m4: The same.\n-\t* libgfortran/m4/minloc0.m4: The same.\n-\t* libgfortran/m4/maxloc0.m4: The same.\n-\t* libgfortran/generated/maxloc0_16_i16.c: Regenerated, together\n-\twith 41 others.\n-\t* libgfortran/generated/minloc0_16_i16.c: Regenerated, together\n-\twith 41 others.\n-\n-2006-03-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26499\n-\t* io/file_pos (st_rewind): Flush always.\n-\t* io/unix.c (fd_truncate): Return SUCCESS rather than FAILURE for\n-\tspecial files like /dev/null.\n-\t* io/transfer.c (st_write_done): Remove broken logic that\n-\tprevented calling fd_truncate.\n-\n-2006-03-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26554\n-\t* io/list_read.c (read_logical): Return the value if not in namelist\n-\tmode.\n-\n-2006-03-03  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR fortran/25031\n-\t* runtime/memory.c:  Adjust copyright years.\n-\t(allocate_array):  New function.\n-\t(allocate64_array):  New function.\n-\t* libgfortran.h (error_codes):  Add ERROR_ALLOCATION.\n-\n-2006-02-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26136\n-\t* io/io.h: Add flag for reading from line_buffer.\n-\t* io/list_read.c (l_push_char): New function to save namelist\n-\tinput when reading logicals.\n-\t(free_line): New function to free line_buffer memory.\n-\t(next_char): Added feature to read from line_buffer.\n-\t(read_logical): Use new functions to test for '=' after reading a\n-\tlogical value, checking for possible variable name.\n-\t(namelist_read): Use free_line when all done.\n-\n-2006-02-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26464\n-\t* io/file_pos.c (st_backspace): Flush and truncate file\n-\twhen in AFTER_ENDFILE condition.\n-\t* io/transfer.c (st_read_done): Remove flush, no longer needed.\n-\n-2006-02-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/26423\n-\t* io/unix.c (fd_seek): Revert change from 25949.\n-\t(fd_read): Same.\n-\t(fd_write): Same.\n-\n-2006-02-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\t* io/open.c (edit_modes): Correct abusive copy-pasting.\n-\n-2006-02-16  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/24903\n-\t* m4/dotprodc.m4: Use __builtin_conj instead of assigning real\n-\tand imaginary parts separately.\n-\t* generated/dotprod_c4.c: Regenerated.\n-\t* generated/dotprod_c8.c: Regenerated.\n-\t* generated/dotprod_c10.c: Regenerated.\n-\t* generated/dotprod_c16.c: Regenerated.\n-\n-2006-02-12  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\tPR libgfortran/25949\n-\t* io/io.h: Add set function pointer to struct stream.  \n-\t* io/unix.c (fd_seek): Only update offset, don't seek.\n-\t(fd_sset): New function.\n-\t(fd_read): Call lseek directly if necessary.\n-\t(fd_write): Likewise.\n-\t(fd_open): Set pointer to fd_sset.\n-\t(mem_set): New function.\n-\t(open_internal): Set pointer to mem_set.\n-\t* io/transfer.c (write_block_direct): Rename to write_buf, add\n-\terror return, non-pointer length argument.\n-\t(unformatted_write): Update to use write_buf.\n-\t(us_write): Simplify by using swrite instead of salloc_w.\n-\t(write_us_marker): New function.\n-\t(new_record_w): Use sset instead of memset, use write_us_marker,\n-\tsimplify by using swrite instead of salloc_w.\n-\n-2006-02-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/25425\n-\t* libgfortran.h: Add pedantic field to compile_options struct.\n-\t* io/write.c (calculate_G_format): Depending on the standard,\n-\tchoose E or F format for list-directed output of 0.0.\n-\t* runtime/error.c (notify_std): Make warning and error dependent\n-\ton pedanticity.\n-\t* runtime/compile_options.c (set_std): Use new pedantic argument.\n-\n-2006-02-07  Dale Ranta  <dir@lanl.gov>\n-\n-\tPR fortran/25577\n-\t* intrinsics/mvbits.c: Shift '(TYPE)1' type when building 'lenmask'.\n-\n-2006-02-07  Rainer Emrich <r.emrich@de.tecosim.com>\n-\n-\t* intrinsics/c99_functions.c: Work around incompatible\n-\tdeclarations of cabs{,f,l} on pre-C99 IRIX systems.\n-\n-2005-02-06  Thomas Koenig  <Thomas.Koenig@online.de>\n-\n-\tPR libfortran/23815\n-\t* runtime/environ.c (init_unformatted):  Add GFORTRAN_CONVERT_UNIT\n-\tenvironment variable.\n-\t(top level):  Add defines, type and static variables for\n-\tGFORTRAN_CONVERT_UNIT handling.\n-\t(search_unit):  New function.\n-\t(match_word): New function.\n-\t(match_integer): New function.\n-\t(next_token): New function.\n-\t(push_token): New function.\n-\t(mark_single): New function.\n-\t(mark_range): New funciton.\n-\t(do_parse): New function.\n-\t(init_unformatted): New function.\n-\t(get_unformatted_convert): New function.\n-\t* runtime/compile_options.c:  Add set_convert().\n-\t* libgfortran.h:  Add convert to compile_options_t.\n-\t* io/open.c (st_open): Call get_unformatted_convert to get\n-\tunit default; if CONVERT_NONE is returned, check for\n-\tthe presence of a CONVERT specifier and use it.\n-\tAs default, use compile_options.convert.\n-\t* io/io.h (top level): Add CONVERT_NONE to unit_convert, to signal\n-\t\"nothing has been set\".\n-\t(top level): Add prototype for get_unformatted_convert.\n-\n-2006-02-06  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n-\n-\tPR libfortran/24685\n-\t* io/write.c (write_real): Widen the default format for real(10)\n-\tvariables output.\n-\n-2006-01-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/25835\n-\t* io/transfer.c (st_read_done): Flush buffers when read is done.\n-\n-2006-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/25697\n-\t* io/transfer.c (us_read): Detect end of file condition from previous\n-\toperations and bail out (no need to pre-position).\n-\n-2006-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/25631\n-\t* io/transfer.c (formatted_transfer_scalar): Adjust pending_spaces and\n-\tskips so that TL works correctly when no bytes_used yet.  \n-\n-2006-01-16  Roger Sayle  <roger@eyesopen.com>\n-\n-\t* configure.ac (CFLAGS): Update to include -std=gnu99 so that\n-\tthe configure tests will be run with the same environment as\n-\tused to compile the libgfortran source code.\n-\t* configure: Regenerate.\n-\n-2006-01-12  Roger Sayle  <roger@eyesopen.com>\n-\n-\t* intrinsics/c99_functions.c: Add function prototypes to avoid\n-\twarnings from -Wstrict-prototypes -Wmissing-prototypes.  On Tru64\n-\twork around a brain-dead libm by redirecting calls to cabs{,f,l}\n-\tto a local __gfc_cabs{,f,l}.\n-\n-2006-01-07  Janne Blomqvist  <jb@gcc.gnu.org>\n-\n-\t* configure.ac: Remove check for sys/mman.h.\n-\t* configure: Regenerated.\n-\t* Makefile.in: Regenerated.\n-\t* config.h.in: Regenerated.\n-\t* aclocal.m4: Regenerated.\n-\t\n-2006-01-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n-\n-\tPR libgfortran/25598\n-\t* io/file_pos.c (unformatted_backspace): Assure the new file position\n-\tto seek is not less than zero.\n-\t(st_backspace): Set unit bytes_left to zero.\n-\t* io/transfer.c (next_record_r): Fix line lengths, no functional change.\n-\n-2006-01-02  Paolo Bonzini  <bonzini@gnu.org>\n-\n-\tPR target/25259\n-\t* configure.ac: Use GCC_HEADER_STDINT.\n-\t* libgfortran.h: Include gstdint.h.\n-\t* aclocal.m4: Regenerate.\n-\t* configure: Regenerate.\n-\n-2006-01-01  Steven G. Kargl  <kargls@comcast.net>\n-\n-\t* ChangeLog: Split into years ...\n-\t* ChangeLog-2002: here.\n-\t* ChangeLog-2003: here.\n-\t* ChangeLog-2004: here.\n-\t* ChangeLog-2005: here.\n+\t* ChangeLog: Copied to ...\n+\t* ChangeLog-2006: here."}, {"sha": "2096806c6bdee773b706e2f0c523c384ea3a9783", "filename": "libgfortran/ChangeLog-2006", "status": "added", "additions": 1634, "deletions": 0, "changes": 1634, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80f0281f36fb0e3c2410204b032db4764a025a94/libgfortran%2FChangeLog-2006", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80f0281f36fb0e3c2410204b032db4764a025a94/libgfortran%2FChangeLog-2006", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog-2006?ref=80f0281f36fb0e3c2410204b032db4764a025a94", "patch": "@@ -0,0 +1,1634 @@\n+2006-12-30  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/30321\n+\t* m4/ifunction.m4 (name`'rtype_qual`_'atype_code):\n+\tCheck for extents < 0 for zero-sized arrays.  If\n+\tno retarray has been specified and the size is zero,\n+\treturn early.\n+\t(`m'name`'rtype_qual`_'atype_code): Likewise.\n+\t* generated/all_l16.c: Regenerated.\n+\t* generated/all_l4.c: Regenerated.\n+\t* generated/all_l8.c: Regenerated.\n+\t* generated/any_l16.c: Regenerated.\n+\t* generated/any_l4.c: Regenerated.\n+\t* generated/any_l8.c: Regenerated.\n+\t* generated/count_16_l16.c: Regenerated.\n+\t* generated/count_16_l4.c: Regenerated.\n+\t* generated/count_16_l8.c: Regenerated.\n+\t* generated/count_4_l16.c: Regenerated.\n+\t* generated/count_4_l4.c: Regenerated.\n+\t* generated/count_4_l8.c: Regenerated.\n+\t* generated/count_8_l16.c: Regenerated.\n+\t* generated/count_8_l4.c: Regenerated.\n+\t* generated/count_8_l8.c: Regenerated.\n+\t* generated/cshift1_16.c: Regenerated.\n+\t* generated/cshift1_4.c: Regenerated.\n+\t* generated/cshift1_8.c: Regenerated.\n+\t* generated/maxloc1_16_i16.c: Regenerated.\n+\t* generated/maxloc1_16_i4.c: Regenerated.\n+\t* generated/maxloc1_16_i8.c: Regenerated.\n+\t* generated/maxloc1_16_r10.c: Regenerated.\n+\t* generated/maxloc1_16_r16.c: Regenerated.\n+\t* generated/maxloc1_16_r4.c: Regenerated.\n+\t* generated/maxloc1_16_r8.c: Regenerated.\n+\t* generated/maxloc1_4_i16.c: Regenerated.\n+\t* generated/maxloc1_4_i4.c: Regenerated.\n+\t* generated/maxloc1_4_i8.c: Regenerated.\n+\t* generated/maxloc1_4_r10.c: Regenerated.\n+\t* generated/maxloc1_4_r16.c: Regenerated.\n+\t* generated/maxloc1_4_r4.c: Regenerated.\n+\t* generated/maxloc1_4_r8.c: Regenerated.\n+\t* generated/maxloc1_8_i16.c: Regenerated.\n+\t* generated/maxloc1_8_i4.c: Regenerated.\n+\t* generated/maxloc1_8_i8.c: Regenerated.\n+\t* generated/maxloc1_8_r10.c: Regenerated.\n+\t* generated/maxloc1_8_r16.c: Regenerated.\n+\t* generated/maxloc1_8_r4.c: Regenerated.\n+\t* generated/maxloc1_8_r8.c: Regenerated.\n+\t* generated/maxval_i16.c: Regenerated.\n+\t* generated/maxval_i4.c: Regenerated.\n+\t* generated/maxval_i8.c: Regenerated.\n+\t* generated/maxval_r10.c: Regenerated.\n+\t* generated/maxval_r16.c: Regenerated.\n+\t* generated/maxval_r4.c: Regenerated.\n+\t* generated/maxval_r8.c: Regenerated.\n+\t* generated/minloc1_16_i16.c: Regenerated.\n+\t* generated/minloc1_16_i4.c: Regenerated.\n+\t* generated/minloc1_16_i8.c: Regenerated.\n+\t* generated/minloc1_16_r10.c: Regenerated.\n+\t* generated/minloc1_16_r16.c: Regenerated.\n+\t* generated/minloc1_16_r4.c: Regenerated.\n+\t* generated/minloc1_16_r8.c: Regenerated.\n+\t* generated/minloc1_4_i16.c: Regenerated.\n+\t* generated/minloc1_4_i4.c: Regenerated.\n+\t* generated/minloc1_4_i8.c: Regenerated.\n+\t* generated/minloc1_4_r10.c: Regenerated.\n+\t* generated/minloc1_4_r16.c: Regenerated.\n+\t* generated/minloc1_4_r4.c: Regenerated.\n+\t* generated/minloc1_4_r8.c: Regenerated.\n+\t* generated/minloc1_8_i16.c: Regenerated.\n+\t* generated/minloc1_8_i4.c: Regenerated.\n+\t* generated/minloc1_8_i8.c: Regenerated.\n+\t* generated/minloc1_8_r10.c: Regenerated.\n+\t* generated/minloc1_8_r16.c: Regenerated.\n+\t* generated/minloc1_8_r4.c: Regenerated.\n+\t* generated/minloc1_8_r8.c: Regenerated.\n+\t* generated/minval_i16.c: Regenerated.\n+\t* generated/minval_i4.c: Regenerated.\n+\t* generated/minval_i8.c: Regenerated.\n+\t* generated/minval_r10.c: Regenerated.\n+\t* generated/minval_r16.c: Regenerated.\n+\t* generated/minval_r4.c: Regenerated.\n+\t* generated/minval_r8.c: Regenerated.\n+\t* generated/product_c10.c: Regenerated.\n+\t* generated/product_c16.c: Regenerated.\n+\t* generated/product_c4.c: Regenerated.\n+\t* generated/product_c8.c: Regenerated.\n+\t* generated/product_i16.c: Regenerated.\n+\t* generated/product_i4.c: Regenerated.\n+\t* generated/product_i8.c: Regenerated.\n+\t* generated/product_r10.c: Regenerated.\n+\t* generated/product_r16.c: Regenerated.\n+\t* generated/product_r4.c: Regenerated.\n+\t* generated/product_r8.c: Regenerated.\n+\t* generated/sum_c10.c: Regenerated.\n+\t* generated/sum_c16.c: Regenerated.\n+\t* generated/sum_c4.c: Regenerated.\n+\t* generated/sum_c8.c: Regenerated.\n+\t* generated/sum_i16.c: Regenerated.\n+\t* generated/sum_i4.c: Regenerated.\n+\t* generated/sum_i8.c: Regenerated.\n+\t* generated/sum_r10.c: Regenerated.\n+\t* generated/sum_r16.c: Regenerated.\n+\t* generated/sum_r4.c: Regenerated.\n+\t* generated/sum_r8.c: Regenerated.\n+\n+2006-12-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/30014\n+\t*io/io.h (st_parameter_dt): Change *size and *iolength type to\n+\tGFC_IO_INT.\n+\t*io/transfer.c (finalize_transfer): Cast dtp->u.p.size_used to\n+\tGFC_IO_INT.  (iolength_transfer): Cast size * nelems to GFC_IO_INT.\n+\n+2006-12-17  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* intrinsics/associated.c: Check for associated(NULL,NULL).\n+\n+2006-12-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/30145\n+\t* io/transfer.c (transfer_array):  Check for negative extent.\n+\n+2006-12-13  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR fortran/30115\n+\t* runtime/memory.c (allocate_size): Change interface to\n+\tvoid *()(size_t, GFC_INTEGER_4 *).\n+\t(allocate): Likewise.\n+\t(allocate64): Likewise.\n+\t(allocate_array): Change interface to\n+\tvoid *()(void *, size_t, GFC_INTEGER_4 *).\n+\t(allocate64_array): Likewise.\n+\t(deallocate): Change interface to\n+\tvoid ()(void *, GFC_INTEGER_4 *).\n+\n+2006-12-06  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/29810\n+\t* intrinsics/c99_functions.c (fmodf, fmodl, floorl): New functions.\n+\t* c99_protos.h (fmodf, fmodl, floorl): New prototypes.\n+\t* configure.ac: Check for fmodf, fmod and fmodl.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n+2006-12-06  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/30009\n+\tPR libfortran/30056\n+\t* libgfortran.h:  Add ERROR_CORRUPT_FILE to error_codes.\n+\t* runtime/error.c (translate_error):  Add handling for\n+\tERROR_CORRUPT_FILE.\n+\t* io/transfer.c (read_block_direct):  Add comment about\n+\tEOR for stream files.\n+\tRemove test for no bytes left for direct access files.\n+\tGenerate an ERROR_SHORT_RECORD if the read was short.\n+\tFor unformatted sequential files:  Check endfile condition.\n+\tRemove test for no bytes left.  End of file here means\n+\tthat the file structure has been corrupted.  Pre-position\n+\tthe file for the next record in case of error.\n+\t(write_buf):  Whitespace fix.  Subtract the number of bytes\n+\twritten from bytes_left.\n+\n+2006-12-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/30005\n+\t* io/open.c: Add errno.h include.\n+\t(new_unit): Add new error messages with file name for file open.\n+\n+2006-12-01  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/29568\n+\t* libgfortran/libgfortran.h (compile_options_t):  Add\n+\trecord_marker. (top level):  Define GFC_MAX_SUBRECORD_LENGTH.\n+\t* runtime/compile_options.c (set_record_marker):  Change\n+\tdefault to four-byte record marker.\n+\t(set_max_subrecord_length):  New function.\n+\t* runtime/error.c (translate_error):  Change error message\n+\tfor short record on unformatted read.\n+\t* io/io.h (gfc_unit):  Add recl_subrecord, bytes_left_subrecord\n+\tand continued.\n+\t* io/file_pos.c (unformatted_backspace):  Change default of record\n+\tmarker size to four bytes.  Loop over subrecords.\n+\t* io/open.c:  Default recl is max_offset.  If\n+\tcompile_options.max_subrecord_length has been set, set set\n+\tu->recl_subrecord to its value, to the maximum value otherwise.\n+\t* io/transfer.c (top level):  Add prototypes for us_read, us_write,\n+\tnext_record_r_unf and next_record_w_unf.\n+\t(read_block_direct):  Separate codepaths for unformatted direct\n+\tand unformatted sequential.  If a recl has been set by the\n+\tuser, use the number of bytes left for the record if it is smaller\n+\tthan the read request.  Loop over subrecords.  Set an error if the\n+\tuser has set a recl and the read was short.\n+\t(write_buf):  Separate codepaths for unformatted direct and\n+\tunformatted sequential. If a recl has been set by the\n+\tuser, use the number of bytes left for the record if it is smaller\n+\tthan the read request.  Loop over subrecords.  Set an error if the\n+\tuser has set a recl and the read was short.\n+\t(us_read):  Add parameter continued (to indicate that bytes_left\n+\tshould not be intialized).  Change default of record marker size\n+\tto four bytes. Use subrecord.  If the subrecord length is smaller than\n+\tzero, this indicates a continuation.\n+\t(us_write):  Add parameter continued (to indicate that the continued\n+\tflag should be set).  Use subrecord.\n+\t(pre_position):  Use 0 for continued on us_write and us_read calls.\n+\t(skip_record):  New function.\n+\t(next_record_r_unf):  New function.\n+\t(next_record_r):  Use next_record_r_unf.\n+\t(write_us_marker):  Default size for record markers is four bytes.\n+\t(next_record_w_unf):  New function.\n+\t(next_record_w):  Use next_record_w_unf.\n+\n+2006-11-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* Makefile.am: Remove intrinsics/erf.c and intrinsics/bessel.c.\n+\t* Makefile.in: Regenerate.\n+\t* intrinsics/erf.c: Remove.\n+\t* intrinsics/bessel.c: Remove.\n+\t* c99_protos.h: Add prototypes for bessel and error functions.\n+\t* intrinsics/c99_functions.c: Move content for intrinsics/erf.c\n+\tand intrinsics/bessel.c here.\n+\n+2006-11-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* io/io.h (unit_flags): Add new flag has_recl.\n+\t* io.open.c (new_unit): Set flag if RECL= was specified.\n+\t* io/transfer.c (us_write): If flag set, leave recl as initialized by\n+\tnew_unit.\n+\n+2006-11-16  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* io/open.c (new_unit): Format %d expects an int variable.\n+\t* runtime/error.c (show_locus): Format %d expects an int variable.\n+\n+2006-11-08  Steven G. Kargl <kargl@gcc.gnu.org>\n+\n+\t* io/read.c (max_value): Hide \"int n\" in an #ifdef.\n+\n+2006-11-08  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/29752\n+\t* io/transfer.c (finalize_transfer): Flush on ADVANCE_NO.\n+\n+2006-11-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* io/transfer.c (next_record_w): Fix indentation.\n+\n+2006-11-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/25545\n+\t* io/transfer.c (write_block): Cleanup code paths between\n+\tstream and non-stream I/O.\n+\t(write_buf):  Cleanup.\n+\t(read_block): Cleanup.\n+\t(finalize_transfer): Call next_record for '$' edit descriptor handling\n+\tof internal unit. Cleanup code for readability.\n+\n+2006-11-03  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/27895\n+\t* intrinsics/reshape_generic.c (reshape_internal): Fix so that it\n+\tworks correctly for zero-sized arrays.\n+\t* m4/reshape.m4: Likewise.\n+\t* generated/reshape_r16.c: Regenerate.\n+\t* generated/reshape_c4.c: Regenerate.\n+\t* generated/reshape_i4.c: Regenerate.\n+\t* generated/reshape_c16.c: Regenerate.\n+\t* generated/reshape_r10.c: Regenerate.\n+\t* generated/reshape_r8.c: Regenerate.\n+\t* generated/reshape_c10.c: Regenerate.\n+\t* generated/reshape_c8.c: Regenerate.\n+\t* generated/reshape_i8.c: Regenerate.\n+\t* generated/reshape_i16.c: Regenerate.\n+\t* generated/reshape_r4.c: Regenerate.\n+\n+2006-10-31  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/29627\n+\t* libgfortran.h: Add ERROR_SHORT_RECORD\n+\t* runtime/error.c (translate_error): Add case\n+\tfor ERROR_SHORT_RECORD.\n+\t* io/transfer.c (read_block_direct):  Separate codepaths\n+\tfor stream and record unformatted I/O.  Remove unneeded\n+\ttests for standard input, padding and formatted I/O.\n+\tIf the record is short, read in as much data as possible,\n+\tthen raise the error.\n+\n+2006-10-30  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/29452\n+\t* runtime/string.c (compare0): Check whether string lengths match.\n+\n+2006-10-29  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\n+2006-10-28  Tobias Burnus <burnus@net-b.de>\n+\n+\tPR fortran/29625\n+\t* io/transfer.c (formatted_transfer_scalar): Allow binary edit\n+\t  descriptors for real variables; give error for BOZ edit\n+\t  descriptor for non-integers when using -std=f*.\n+\n+2006-10-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/29563\n+\t* io/list_read.c (next_char): Fix an error in previous commit.\n+\n+2006-10-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/29563\n+\t* io/io.h (st_parameter_dt): Add new flag at_eof.\n+\t* io/list_read.c (next_char): Set flag when EOF and return '\\n' to\n+\tsignal EOR.  Check flag on next call and jump out.\n+\t* io/unit.c (get_internal_unit): Initialize new flag.\n+\n+2006-10-22  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/26025\n+\t* m4/matmul.m4: Add possible call to gemm routine.\n+\t* generated/matmul_r8.c: Regenerate.\n+\t* generated/matmul_r16.c: Regenerate.\n+\t* generated/matmul_c8.c: Regenerate.\n+\t* generated/matmul_i8.c: Regenerate.\n+\t* generated/matmul_c16.c: Regenerate.\n+\t* generated/matmul_r10.c: Regenerate.\n+\t* generated/matmul_r4.c: Regenerate.\n+\t* generated/matmul_c10.c: Regenerate.\n+\t* generated/matmul_c4.c: Regenerate.\n+\t* generated/matmul_i4.c: Regenerate.\n+\t* generated/matmul_i16.c: Regenerate.\n+\n+2006-10-21  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* runtime/error.c: Add errno.h\n+\t(generate_error): Set iostat to errno on OS error.\n+\t* libgfortran.h: Set ERROR_OS to 5000\n+\n+2006-10-20  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* generated/minval_r8.c: Regenerate.\n+\t* generated/maxloc1_4_r8.c: Regenerate.\n+\t* generated/minloc1_16_r16.c: Regenerate.\n+\t* generated/sum_i8.c: Regenerate.\n+\t* generated/eoshift3_4.c: Regenerate.\n+\t* generated/any_l16.c: Regenerate.\n+\t* generated/eoshift1_8.c: Regenerate.\n+\t* generated/reshape_r16.c: Regenerate.\n+\t* generated/product_r4.c: Regenerate.\n+\t* generated/maxloc1_8_i4.c: Regenerate.\n+\t* generated/maxloc0_4_r4.c: Regenerate.\n+\t* generated/in_unpack_i8.c: Regenerate.\n+\t* generated/minloc0_4_r16.c: Regenerate.\n+\t* generated/reshape_c4.c: Regenerate.\n+\t* generated/maxloc0_4_r16.c: Regenerate.\n+\t* generated/minloc1_8_r16.c: Regenerate.\n+\t* generated/maxloc1_8_r16.c: Regenerate.\n+\t* generated/in_unpack_i16.c: Regenerate.\n+\t* generated/maxloc0_8_i8.c: Regenerate.\n+\t* generated/sum_r16.c: Regenerate.\n+\t* generated/minloc1_4_r8.c: Regenerate.\n+\t* generated/maxloc1_16_r16.c: Regenerate.\n+\t* generated/minloc1_16_i4.c: Regenerate.\n+\t* generated/maxloc1_16_i4.c: Regenerate.\n+\t* generated/minloc0_16_i8.c: Regenerate.\n+\t* generated/maxloc0_16_i8.c: Regenerate.\n+\t* generated/maxval_r16.c: Regenerate.\n+\t* generated/count_16_l16.c: Regenerate.\n+\t* generated/count_8_l8.c: Regenerate.\n+\t* generated/product_c10.c: Regenerate.\n+\t* generated/minloc1_8_i4.c: Regenerate.\n+\t* generated/minloc0_16_i16.c: Regenerate.\n+\t* generated/eoshift1_16.c: Regenerate.\n+\t* generated/minloc0_4_r4.c: Regenerate.\n+\t* generated/product_c4.c: Regenerate.\n+\t* generated/sum_r4.c: Regenerate.\n+\t* generated/in_pack_c16.c: Regenerate.\n+\t* generated/reshape_i4.c: Regenerate.\n+\t* generated/minloc0_8_i8.c: Regenerate.\n+\t* generated/minloc1_16_r10.c: Regenerate.\n+\t* generated/in_pack_c4.c: Regenerate.\n+\t* generated/all_l16.c: Regenerate.\n+\t* generated/reshape_c16.c: Regenerate.\n+\t* generated/maxloc1_8_r8.c: Regenerate.\n+\t* generated/minval_i16.c: Regenerate.\n+\t* generated/reshape_r10.c: Regenerate.\n+\t* generated/maxval_i4.c: Regenerate.\n+\t* generated/any_l4.c: Regenerate.\n+\t* generated/minval_i8.c: Regenerate.\n+\t* generated/maxloc1_4_i8.c: Regenerate.\n+\t* generated/maxloc0_16_i16.c: Regenerate.\n+\t* generated/maxloc0_8_r4.c: Regenerate.\n+\t* generated/minloc1_4_i16.c: Regenerate.\n+\t* generated/minloc0_4_r10.c: Regenerate.\n+\t* generated/maxloc1_4_i16.c: Regenerate.\n+\t* generated/minloc0_8_i16.c: Regenerate.\n+\t* generated/maxloc0_4_r10.c: Regenerate.\n+\t* generated/maxloc0_8_i16.c: Regenerate.\n+\t* generated/minloc1_8_r10.c: Regenerate.\n+\t* generated/product_i4.c: Regenerate.\n+\t* generated/minloc0_16_r4.c: Regenerate.\n+\t* generated/sum_c16.c: Regenerate.\n+\t* generated/maxloc1_8_r10.c: Regenerate.\n+\t* generated/maxloc0_16_r4.c: Regenerate.\n+\t* generated/minloc1_16_r8.c: Regenerate.\n+\t* generated/maxloc0_4_i4.c: Regenerate.\n+\t* generated/maxloc1_16_r8.c: Regenerate.\n+\t* generated/cshift1_4.c: Regenerate.\n+\t* generated/sum_r10.c: Regenerate.\n+\t* generated/sum_c4.c: Regenerate.\n+\t* generated/maxloc1_16_r10.c: Regenerate.\n+\t* generated/count_4_l16.c: Regenerate.\n+\t* generated/in_pack_i4.c: Regenerate.\n+\t* generated/minloc1_8_r8.c: Regenerate.\n+\t* generated/count_4_l4.c: Regenerate.\n+\t* generated/maxval_r10.c: Regenerate.\n+\t* generated/minloc1_4_i8.c: Regenerate.\n+\t* generated/in_unpack_c4.c: Regenerate.\n+\t* generated/minloc0_8_r4.c: Regenerate.\n+\t* generated/product_i16.c: Regenerate.\n+\t* generated/minloc0_16_r16.c: Regenerate.\n+\t* generated/reshape_r8.c: Regenerate.\n+\t* generated/all_l4.c: Regenerate.\n+\t* generated/in_pack_c10.c: Regenerate.\n+\t* generated/minloc0_4_i4.c: Regenerate.\n+\t* generated/reshape_c10.c: Regenerate.\n+\t* generated/minval_r4.c: Regenerate.\n+\t* generated/maxloc1_4_r4.c: Regenerate.\n+\t* generated/sum_i4.c: Regenerate.\n+\t* generated/count_16_l8.c: Regenerate.\n+\t* generated/maxval_r8.c: Regenerate.\n+\t* generated/eoshift1_4.c: Regenerate.\n+\t* generated/eoshift3_8.c: Regenerate.\n+\t* generated/minval_r16.c: Regenerate.\n+\t* generated/product_r8.c: Regenerate.\n+\t* generated/maxloc1_8_i8.c: Regenerate.\n+\t* generated/maxloc0_4_r8.c: Regenerate.\n+\t* generated/maxloc0_16_r16.c: Regenerate.\n+\t* generated/in_unpack_i4.c: Regenerate.\n+\t* generated/sum_c10.c: Regenerate.\n+\t* generated/minloc1_4_r16.c: Regenerate.\n+\t* generated/maxloc1_4_r16.c: Regenerate.\n+\t* generated/in_unpack_c16.c: Regenerate.\n+\t* generated/minloc0_8_r16.c: Regenerate.\n+\t* generated/reshape_c8.c: Regenerate.\n+\t* generated/maxloc0_8_r16.c: Regenerate.\n+\t* generated/maxloc0_8_i4.c: Regenerate.\n+\t* generated/minloc1_4_r4.c: Regenerate.\n+\t* generated/minloc0_16_i4.c: Regenerate.\n+\t* generated/maxloc0_16_i4.c: Regenerate.\n+\t* generated/minloc1_16_i8.c: Regenerate.\n+\t* generated/maxloc1_16_i8.c: Regenerate.\n+\t* generated/count_8_l4.c: Regenerate.\n+\t* generated/minloc0_16_r10.c: Regenerate.\n+\t* generated/minloc1_8_i8.c: Regenerate.\n+\t* generated/minloc0_4_r8.c: Regenerate.\n+\t* generated/product_r16.c: Regenerate.\n+\t* generated/product_c8.c: Regenerate.\n+\t* generated/sum_r8.c: Regenerate.\n+\t* generated/in_pack_i16.c: Regenerate.\n+\t* generated/minloc0_8_i4.c: Regenerate.\n+\t* generated/minloc1_16_i16.c: Regenerate.\n+\t* generated/reshape_i8.c: Regenerate.\n+\t* generated/in_pack_c8.c: Regenerate.\n+\t* generated/maxloc1_8_r4.c: Regenerate.\n+\t* generated/reshape_i16.c: Regenerate.\n+\t* generated/minval_r10.c: Regenerate.\n+\t* generated/minval_i4.c: Regenerate.\n+\t* generated/maxloc1_4_i4.c: Regenerate.\n+\t* generated/maxval_i8.c: Regenerate.\n+\t* generated/eoshift3_16.c: Regenerate.\n+\t* generated/any_l8.c: Regenerate.\n+\t* generated/maxloc0_16_r10.c: Regenerate.\n+\t* generated/minloc0_4_i16.c: Regenerate.\n+\t* generated/maxloc0_8_r8.c: Regenerate.\n+\t* generated/maxloc0_4_i16.c: Regenerate.\n+\t* generated/minloc1_4_r10.c: Regenerate.\n+\t* generated/minloc1_8_i16.c: Regenerate.\n+\t* generated/maxloc1_4_r10.c: Regenerate.\n+\t* generated/minloc0_8_r10.c: Regenerate.\n+\t* generated/maxloc1_8_i16.c: Regenerate.\n+\t* generated/in_unpack_c10.c: Regenerate.\n+\t* generated/maxloc0_8_r10.c: Regenerate.\n+\t* generated/minloc1_16_r4.c: Regenerate.\n+\t* generated/maxloc1_16_r4.c: Regenerate.\n+\t* generated/minloc0_16_r8.c: Regenerate.\n+\t* generated/product_i8.c: Regenerate.\n+\t* generated/maxloc0_16_r8.c: Regenerate.\n+\t* generated/sum_i16.c: Regenerate.\n+\t* generated/maxloc0_4_i8.c: Regenerate.\n+\t* generated/cshift1_8.c: Regenerate.\n+\t* generated/maxloc1_16_i16.c: Regenerate.\n+\t* generated/minloc1_8_r4.c: Regenerate.\n+\t* generated/sum_c8.c: Regenerate.\n+\t* generated/count_8_l16.c: Regenerate.\n+\t* generated/in_pack_i8.c: Regenerate.\n+\t* generated/maxval_i16.c: Regenerate.\n+\t* generated/count_4_l8.c: Regenerate.\n+\t* generated/minloc1_4_i4.c: Regenerate.\n+\t* generated/product_c16.c: Regenerate.\n+\t* generated/reshape_r4.c: Regenerate.\n+\t* generated/minloc0_8_r8.c: Regenerate.\n+\t* generated/in_unpack_c8.c: Regenerate.\n+\t* generated/product_r10.c: Regenerate.\n+\t* generated/cshift1_16.c: Regenerate.\n+\t* generated/all_l8.c: Regenerate.\n+\t* generated/minloc0_4_i8.c: Regenerate.\n+\t* generated/maxval_r4.c: Regenerate.\n+\t* generated/count_16_l4.c: Regenerate.\n+\n+2006-10-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/27895\n+\t* intrinsics/cshift0.c: Special cases for zero-sized arrays.\n+\t* intrinsics/pack_generic.c: Likewise.\n+\t* intrinsics/spread_generic.c: Likewise.\n+\n+2006-10-18  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/29277\n+\t* io/write.c (write_a): Add conversion of LF to CR-LF for systems with\n+\t#define HAVE_CRLF.\n+\n+2006-10-18  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* m4/in_pack.m4: Fixed a typo.\n+\t* m4/iforeach.m4: Fixed a typo.\n+\t* m4/eoshift1.m4: Fixed a typo.\n+\t* m4/eoshift3.m4: Fixed a typo.\n+\t* m4/cshift1.m4: Fixed a typo.\n+\t* m4/in_unpack.m4: Fixed a typo.\n+\t* m4/reshape.m4: Fixed a typo.\n+\t* m4/ifunction.m4: Fixed a typo.\n+\t* runtime/environ.c: Fixed a typo.\n+\t* runtime/in_pack_generic.c: Fixed a typo.\n+\t* runtime/in_unpack_generic.c: Fixed a typo.\n+\t* runtime/memory.c: Fixed a typo.\n+\t* intrinsics/cshift0.c: Fixed a typo.\n+\t* intrinsics/cpu_time.c: Fixed a typo.\n+\t* intrinsics/pack_generic.c: Fixed a typo.\n+\t* intrinsics/unpack_generic.c: Fixed a typo.\n+\t* intrinsics/eoshift0.c: Fixed a typo.\n+\t* intrinsics/eoshift2.c: Fixed a typo.\n+\t* intrinsics/reshape_generic.c: Fixed a typo.\n+\t* io/open.c: Fixed a typo.\n+\t* io/list_read.c: Fixed a typo.\n+\t* io/io.h: Fixed a typo.\n+\t* io/transfer.c: Fixed a typo.\n+\t* io/write.c: Fixed a typo.\n+\n+2006-10-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/29277\n+\t* io/list_read.c (next_char): Update strm_pos.\n+\t(eat_separator): Delete extra call to unget_char.\n+\t* io/transfer.c (read_block): Use read_sf for formatted stream I/O.\n+\t(next_record_r): Update strm_pos for formatted stream I/O and handle\n+\tend-of-record correctly.\n+\t(next_record_w): Ditto.\n+\t(next_record): Enable next record (r/w) functions and update strm_pos.\n+\t(finalize_transfer): Call next_record to finish the record.\n+\n+2006-10-13  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* m4/spacing.m4: Use scalbn[f,l] if ldexp[f,l] is unavailable.\n+\t* m4/rrspacing.m4: Ditto.\n+\t* generated/spacing_r4.c: Regenerated.\n+\t* generated/spacing_r8.c: Ditto.\n+\t* generated/spacing_r10.c: Ditto.\n+\t* generated/spacing_r16.c: Ditto.\n+\t* generated/rrspacing_r4.c: Ditto.\n+\t* generated/rrspacing_r8.c: Ditto.\n+\t* generated/rrspacing_r10.c: Ditto.\n+\t* generated/rrspacing_r16.c: Ditto.\n+\n+2006-10-06  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/15441\n+\tPR fortran/29312\n+\t* configure.ac: Add HAVE_LDEXPF, HAVE_LDEXP, and HAVE_LDEXPL\n+\t* m4/spacing.m4: New file.  Use new HAVE_* defines.\n+\t* m4/rrspacing.m4: Ditto.\n+\t* Makefile.am: Handle new files.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Ditto.\n+\t* config.h.in: Ditto.\n+\t* generated/spacing_r4.c: Generated.\n+\t* generated/spacing_r8.c: Ditto.\n+\t* generated/spacing_r10.c: Ditto.\n+\t* generated/spacing_r16.c: Ditto.\n+\t* generated/rrspacing_r4.c: Ditto.\n+\t* generated/rrspacing_r8.c: Ditto.\n+\t* generated/rrspacing_r10.c: Ditto.\n+\t* generated/rrspacing_r16.c: Ditto.\n+\n+2006-10-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/hyper.c: Remove file.\n+\t* intrinsics/c99_functions.c: Add fallback functions asinhf,\n+\tacoshf and atanhf.\n+\t* Makefile.am: Remove file intrinsics/hyper.c.\n+\t* Makefile.in: Regenerate.\n+\n+2006-10-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* c99_protos.h: Correctly protect definitions of prototypes for\n+\tasinhf, acoshf and atanhf to be the same as in intrinsics/hyper.c.\n+\n+2006-10-08  Paul Thomas  <pault@gcc.gnu.org>\n+\t    Erik Edelmann  <edelmann@gcc.gnu.org>\n+\n+\tPR libgfortran/20541\n+\t* Makefile.in : Add move_alloc.\n+\t* intrinsics/move_alloc.c: New function.\n+\t* Makefile.am : Add move_alloc.\n+\n+2006-10-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/26540\n+\t* intrinsics/signal.c (signal_sub, signal_sub_int): Use intptr_t\n+\tif available to cast function pointers to int and back.\n+\t* configure.ac: Check for intptr_t.\n+\t* config.h.in: Regenerate.\n+\t* configure: Regenerate.\n+\n+2006-10-01  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/16580\n+\tPR fortran/29288\n+\t* libgfortran/Makefile.am: Add the new files to the build\n+\tprocess, and rules to build them.\n+\t* libgfortran/Makefile.in: Regenerate.\n+\t* libgfortran/m4/misc_specifics.m4: New file.\n+\t* libgfortran/m4/specific.m4: Add new special cases for function\n+\twith complex argument and real result, like abs_c* and aimag_c*.\n+\t* libgfortran/intrinsics/f2c_specifics.F90: Add specifics for\n+\tAIMAG, ASINH, ACOSH and ATANH.\n+\t* libgfortran/generated/_aimag_c4.F90: New file.\n+\t* libgfortran/generated/_aimag_c8.F90: New file.\n+\t* libgfortran/generated/_asinh_r10.F90: New file.\n+\t* libgfortran/generated/_acosh_r16.F90: New file.\n+\t* libgfortran/generated/_aimag_c10.F90: New file.\n+\t* libgfortran/generated/_atanh_r16.F90: New file.\n+\t* libgfortran/generated/_acosh_r4.F90: New file.\n+\t* libgfortran/generated/_acosh_r8.F90: New file.\n+\t* libgfortran/generated/_asinh_r4.F90: New file.\n+\t* libgfortran/generated/_asinh_r8.F90: New file.\n+\t* libgfortran/generated/_asinh_r16.F90: New file.\n+\t* libgfortran/generated/_atanh_r4.F90: New file.\n+\t* libgfortran/generated/_atanh_r8.F90: New file.\n+\t* libgfortran/generated/_acosh_r10.F90: New file.\n+\t* libgfortran/generated/misc_specifics.F90: New file.\n+\t* libgfortran/generated/_aimag_c16.F90: New file.\n+\t* libgfortran/generated/_atanh_r10.F90: New file.\n+\n+2006-10-05  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\t* acinclude.m4 (HAVE_ATTRIBUTE_ALIAS): Remove __USER_LABEL_PREFIX__\n+\tfrom test.\n+\t* configure: Regenerate.\n+\n+2006-10-05  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* Makefile.am: Use $(M4) instead of m4.\n+\t* Makefile.in: Regenerated.\n+\n+2006-10-01  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* libgfortran.h: Add prototype for internal_unpack_c16.\n+\n+2006-09-29  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/18791\n+\t* m4/specific.m4: Special-case cabs so that its return type is\n+\treal. Special-case conjg so that their suffices are _4, _8, _10 and\n+\t_16 instead of _c4, _c8, _c10 and _c16.\n+\t* intrinsics/f2c_specifics.F90: Special-case conjg functions so\n+\tthat their suffices are _4 and _8 instead of _c4 and _c8.\n+\t* generated/_conjg_c4.F90: Regenerate.\n+\t* generated/_conjg_c8.F90: Regenerate.\n+\t* generated/_conjg_c10.F90: Regenerate.\n+\t* generated/_conjg_c16.F90: Regenerate.\n+\t* generated/_abs_c4.F90: Regenerate.\n+\t* generated/_abs_c8.F90: Regenerate.\n+\t* generated/_abs_c10.F90: Regenerate.\n+\t* generated/_abs_c16.F90: Regenerate.\n+\n+2006-09-29  Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\t* intrinsics/cpu_time.c:  Add cpu_time_10 and cpu_time_16 routines.\n+\n+2006-09-28  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+D\n+\t* Makefile.am: Install libgfortranbegin inside compiler libraries\n+\tdirectory instead of system libraries directory.\n+\t* Makefile.in: Regenerate.\n+\n+2006-09-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* Makefile.am: Remove dependency on gfortypes.h.\n+\t* Makefile.in: Regenerate.\n+\n+2006-09-22  Danny Smith  <dannysmith@users.sourceforge.net>\n+\n+\tPR libfortran/27964\n+\t* configure.ac: Check for setmode() function.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* io/unix.c (output_stream): Force stdout to binary mode. \n+\t(error_stream): Force stderr to binary mode.\n+\n+2006-09-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/29099\n+\t* intrinsics/date_and_time.c (secnds): Fix case of zero time.\n+\n+2006-09-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/29053\n+\t* io.h (gfc_unit): Add variable, strm_pos, to track\n+\tSTREAM I/O file position.\n+\t* file_pos.c (st_rewind): Set strm_pos to beginning.\n+\t* open.c (new_unit): Initialize strm_pos.\n+\t* read.c (read_x): Bump strm_pos.\n+\t* inquire.c (inquire_via_unit): Return strm_pos value.\n+\t* transfer.c (read_block),(read_block_direct),(write_block)\n+\t(write_buf): Seek to strm_pos - 1.  Update strm_pos when done.\n+\t(pre_position): Initialize strm_pos.\n+\t(data_transfer_init): Set strm_pos if DT_HAS_REC.\n+\t(finalize_transfer): Flush file, no need to update strm_pos.\n+\n+2006-09-10  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR libfortran/28947\n+\t* m4/matmul.m4: For the case where the second input argument is\n+\ttransposed, ensure that the case with rank (a) == 1 is\n+\tcorrectly calculated.\n+\t* generated/matmul_r4.c: Regenerate.\n+\t* generated/matmul_r8.c: Regenerate.\n+\t* generated/matmul_r10.c: Regenerate.\n+\t* generated/matmul_r16.c: Regenerate.\n+\t* generated/matmul_c4.c: Regenerate.\n+\t* generated/matmul_c8.c: Regenerate.\n+\t* generated/matmul_c10.c: Regenerate.\n+\t* generated/matmul_c16.c: Regenerate.\n+\t* generated/matmul_i4.c: Regenerate.\n+\t* generated/matmul_i8.c: Regenerate.\n+\t* generated/matmul_i16.c: Regenerate.\n+\n+2006-08-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/28354\n+\t* io/write.c: Check for special case of zero precision in format\n+\tand pre-round the real value.\n+\n+2006-08-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/25828\n+\t* libgfortran.h: Rename GFC_LARGE_IO_INT to GFC_IO_INT.\n+\t* io/file_pos.c (st_backspace): Ignore if access=STREAM.\n+\t(st_rewind): Handle case of access=STREAM.\n+\t* io/open.c (access_opt): Add STREAM_ACCESS.\n+\t(edit_modes): Set current_record to zero only if not STREAM.\n+\t(new_unit): Initialize maxrec, recl, and last_record for STREAM.\n+\t* io/read.c (read_x): Advance file position for STREAM.\n+\t* io/io.h (enum unit_access): Align IOPARM flags with frontend.\n+\tAdd ACCESS_STREAM. Add prototype for is_stream_io () function.\n+\tUse GFC_IO_INT.\n+\t* io/inquire.c (inquire_via_unit): Add text for access = \"STREAM\".\n+\t* io/unit.c (is_stream_io): New function to return true if access =\n+\tSTREAM.\n+\t* io/transfer.c (file_mode): Add modes for unformatted stream and\n+\tformatted stream. (current_mode): Return appropriate file mode based\n+\ton access flags.\n+\t(read_block): Handle formatted stream reads.\n+\t(read_block_direct): Handle unformatted stream reads.\n+\t(write_block): Handle formatted stream writes.\n+\t(write_buf): Handle unformatted stream writes.\n+\t(unformatted_read): Fix up, use temporary for size.\n+\t(pre_position): Position file for STREAM access.\n+\t(data_transfer_init): Initialize for stream access, skip irrelevent\n+\terror checks.\n+\t(next_record_r),(next_record_w), and (next_record): Do nothing for\n+\tstream I/O.\n+\t(finalize_transfer): Flush when all done if stream I/O.\n+\n+2006-08-12  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/bessel.c: Add prototypes for all functions.\n+\n+2006-08-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/access.c (access_func): Remove export directive.\n+\n+2006-08-02  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\t* Makefile.in:  Regenerate using automake 1.9.6.\n+\t* aclocal.m4:  Revert to previous version.\n+\n+2006-08-01  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/28452\n+\t* Makefile.am:  Remove normalize.c.\n+\t* aclocal.m4:  Regenerate using aclocal 1.9.3.\n+\t* Makefile.in:  Regenerate using automake 1.9.3.\n+\t* libgfortran.h:  #include <float.h>.\n+\tDefine GFC_REAL_*_DIGITS and GFC_REAL_*_RADIX.\n+\tRemove prototypes for normalize_r4_i4 and normalize_r8_i8.\n+\t* intrinsics/random.c (top level): Add prototypes for\n+\trandom_r10, arandom_r10, random_r16 and arandom_r16.\n+\t(rnumber_4):  New static function.\n+\t(rnumber_8):  New static function.\n+\t(rnumber_10): New static function.\n+\t(rnumber_16): New static function.\n+\t(top level):  Set to kiss_size to 12 if we have\n+\tREAL(KIND=16), to 8 otherwise.\n+\tDefine KISS_DEFAULT_SEED_1, KISS_DEFAULT_SEED_2 and\n+\tKISS_DEFAULT_SEED_3.\n+\t(kiss_random_kernel):  Take argument to differentiate\n+\tbetween different random number generators.\n+\t(random_r4):  Add argument to call to kiss_random_kernel,\n+\tuse rnumber_*.\n+\t(random_r8):  Likewise.\n+\t(random_r10):  New function.\n+\t(random_r16):  New function.\n+\t(arandom_r4):  Add argument to call to kiss_random_kernel,\n+\tuse_rnumber_*.\n+\t(arandom_r8):  Likewise.\n+\t(arandom_r10):  New function.\n+\t(arandom_r16):  New function.\n+\t* intrinsics/rand.c (rand):  Use shift and mask.\n+\t* runtime/normalize.c:  Remove.\n+\n+2006-07-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/28335\n+\t* file_position.c (st_flush): Add clearer error when UNIT does not\n+\texist. Add reference to standard in comment.\n+\n+2006-07-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/28335\n+\t* close.c (st_close): Revert previous patch and add comment.\n+\t* file_position.c (st_flush): Revert previous patch and add comment.\n+\n+2006-07-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/date_and_time.c: Add functions for GMTIME and LTIME.\n+\t* intrinsics/access.c: New file.\n+\t* intrinsics/chmod.c: New file.\n+\t* configure.ac: Add checks for <sys/wait.h>, access, fork,execl\n+\tand wait.\n+\t* Makefile.am: Add new files intrinsics/access.c and\n+\tintrinsics/chmod.c.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* Makefile.in: Regenerate.\n+\n+2006-07-30  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/transfer.c (transfer_array): Remove stride0 fix.\n+\t\n+2006-07-26  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* configure.ac: Check for function clock.\n+\t* Makefile.am: Compile new file intrinsics/clock.c.\n+\t* intrinsics/clock.c: New file.\n+\t* Makefile.in: Regenerate.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* intrinsics/stat.c: Rename the old stat_i?_sub functions to\n+\thelper functions stat_i?_sub_0, and use them for both STAT and\n+\tLSTAT.\n+\n+2006-07-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/28335\n+\t* close.c (st_close): Add error when UNIT does not exist.\n+\t* file_position.c (st_flush): Add error when UNIT does not exist.\n+\n+2006-07-25  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR build/26188\n+\t* configure: Regenerate.\n+\n+2006-07-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/25289\n+\t* libgfortran.h: Add conditional definition of GFC_LARGE_IO_INT type.\n+\t* io/io.h (st_parameter_dt): Define rec as type GFC_LARGE_IO_INT.\n+\n+2006-07-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/28339\n+\t* io/transfer.c (next_record_w): Use next_array_record result to set\n+\tEND_FILE. (write_block): Test for END_FILE before the next write occurs.\n+\t* io/unit.c (get_internal_unit): Initialize iunit->endfile for internal\n+\tunit.\n+\n+2006-07-19  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR fortran/27919\n+\t* m4/dotprodc.m4: Remove.\n+\t* m4/dotprodl.m4: Remove.\n+\t* m4/dotprod.m4: Remove.\n+\t* generated/dotprod_*.c: Remove.\n+\t* Makefile.am: Remove any references to dot_product\n+\timplementation.\n+\t* Makefile.in: Regenerated.\n+\t\n+2006-07-18  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* configure: Regenerate.\n+\n+2006-07-15  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* intrinsics/etime.c: Remove etime_\n+\t* libtool-version: Bump from libgfortran.so.1 to libgfortran.so.2\n+\n+2006-07-12  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/28163\n+\t* intrinsics/string_intrinsics.c (copy_string): Remove function.\n+\n+2006-07-04  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/date_and_time.c (itime0,idate0,itime_i4,itime_i8,\n+\tidate_i4,idate_i8): New functions.\n+\n+2006-07-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/27704\n+\t* runtime/error.c (notify_std): Pass common flags into function. Use\n+\tflags to show locus of error or warning.\n+\t* libgfortran.h: Add enum try.  Add prototype for notify_std.\n+\t* io/open.c (edit_modes): Allow status=\"old\" and add extension to\n+\tallow status=\"scratch\"\n+\t*io/list_read.c (nml_read_obj): Update call to notify_std.\n+\t*io/io.h: Remove enum try and prototype for notify_std.\n+\t*io/transfer.c (read_sf): Update call to notify_std.\n+\t*io/format.c (parse_format_list): Update call to notify_std.\n+\n+2006-06-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* io/io.h: Move proto for unit_to_fd...\n+\t* libgfortran.h: ...here.\n+\n+2006-06-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/ierrno.c: Don't include \"io/io.h\".\n+\t* intrinsics/sleep.c: Likewise.\n+\t* intrinsics/perror.c: Likewise.\n+\t* intrinsics/stat.c: Likewise.\n+\t* intrinsics/kill.c: Likewise.\n+\t* intrinsics/time.c: Likewise.\n+\t* intrinsics/fnum.c: Likewise.\n+\t* intrinsics/rename.c: Likewise.\n+\t* intrinsics/symlnk.c: Likewise.\n+\t* intrinsics/chdir.c: Likewise.\n+\t* intrinsics/link.c: Likewise.\n+\t* intrinsics/random.c: Don't include \"io/io.h\". Include\t<gthr.h>.\n+\t* intrinsics/rand.c: Likewise.\n+\n+2006-06-24  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR fortran/28094\n+\t* Makefile.am: Add _mod_r10.F90 and _mod_r16.F90.\n+\t* Makefile.in: Regenerate.\n+\t* generated/_mod_r10.F90: New file.\n+\t* generated/_mod_r16.F90: New file.\n+\n+2006-06-22  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/26769\n+\t* Makefile.am: Add r4 and r8 versions of reshape and transpose.\n+\t* Makefile.in: Regenerate.\n+\t* generated/reshape_r4.c: New file.\n+\t* generated/reshape_r8.c: New file.\n+\t* generated/transpose_r4.c: New file.\n+\t* generated/transpose_r8.c: New file.\n+\n+2006-06-20  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR libfortran/28005\n+\t* m4/matmul.m4: aystride = 1 does not uniquely detect the\n+\tpresence of a temporary transpose; an array element in the\n+\tfirst dimension produces the same signature.  Detect this\n+\tusing the rank of a and add specific code.\n+\t* generated/matmul_r4.c: Regenerate.\n+\t* generated/matmul_r8.c: Regenerate.\n+\t* generated/matmul_r10.c: Regenerate.\n+\t* generated/matmul_r16.c: Regenerate.\n+\t* generated/matmul_c4.c: Regenerate.\n+\t* generated/matmul_c8.c: Regenerate.\n+\t* generated/matmul_c10.c: Regenerate.\n+\t* generated/matmul_c16.c: Regenerate.\n+\t* generated/matmul_i4.c: Regenerate.\n+\t* generated/matmul_i8.c: Regenerate.\n+\t* generated/matmul_i16.c: Regenerate.\n+\n+2006-06-18  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR libgomp/27254\n+\t* io/unit.c (get_internal_unit): Initialize and lock thread mutex\n+\tfor internal units.\n+\n+2006-06-06  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* m4/in_pack.m4: Add TODO comment about detecting temporaries,\n+\tremove test for stride 0, update copyright year.\n+\t* m4/transpose.m4: Remove test for stride 0, update copyright\n+\tyear.\n+\t* m4/iforeach.m4: Likewise.\n+\t* m4/shape.m4: Likewise.\n+\t* m4/in_unpack.m4: Likewise.\n+\t* m4/reshape.m4: Likewise.\n+\t* m4/ifunction.m4: Likewise.\n+\t* m4/matmul.m4: Likewise.\n+\t* m4/matmull.m4: Likewise.\n+\t* intrinsics/etime.c: Likewise.\n+\t* intrinsics/transpose_generic.c: Likewise.\n+\t* intrinsics/spread_generic.c: Likewise.\n+\t* intrinsics/stat.c: Likewise.\n+\t* intrinsics/reshape_generic.c: Likewise.\n+\t* intrinsics/random.c: Likewise.\n+\t* generated/*: Regenerated from above changed m4 files.\n+\t\n+2006-05-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/27757\n+\t* io/unix.c (fd_seek): Set active to zero.\n+\n+2006-05-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/27634\n+\t* io/format.c (parse_format_list): Allow missing period in format only\n+\tif -std=legacy.\n+\n+2006-05-28  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\t* intrinsics/string_intrinsics.c (compare_string):\n+\tUse memcmp instead of strncmp to avoid tripping over\n+\tCHAR(0) in a string.\n+\n+2006-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* io/io.h (find_or_create_unit): Correct export declaration.\n+\t\n+2006-05-27  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* intrinsics/abort.c (abort_): Remove.\n+\n+2006-05-26  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* configure.ac: Remove AC_FUNC_MMAP.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* config.h.in: Regenerated.\n+\t* aclocal.m4: Regenerated.\n+\n+2006-05-25  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* intrinsics/associated.c (associated): Zero-sized arrays should\n+\tnot be reported as ASSOCIATED.\n+\n+2006-05-24  Carlos O'Donell  <carlos@codesourcery.com>\n+\n+\t* Makefile.am: Add install-html target. Add install-html to .PHONY\n+\t* Makefile.in: Regenerate.\n+\t* aclocal.m4: Regenerate.\n+\t\n+2006-05-20  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/24459\n+\t* io/list_read.c (nml_parse_qualifier): Leave loop spec end value\n+\tat default value unless -std=f95 or if an array section\n+\tis specified in namelist input.  Warn if -pedantic.\n+\t* io/io.h (st_parameter_dt): Add expanded_read flag.\n+\n+2006-05-19  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/22423\n+\t* io/transfer.c (read_block): Return NULL instead of nothing.\n+\t\n+2006-05-16  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/27575\n+\t* io/transfer.c (read_block):  Add check for end file condition.\n+\t(read_block_direct): Add check for end file condition.\n+\n+2006-05-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/26985\n+\t* m4/matmul.m4: Correct the condition for the memset call,\n+\tand remove the unneeded call to size0.\n+\t* generated/matmul_r4.c: Regenerate.\n+\t* generated/matmul_r8.c: Regenerate.\n+\t* generated/matmul_r10.c: Regenerate.\n+\t* generated/matmul_r16.c: Regenerate.\n+\t* generated/matmul_c4.c: Regenerate.\n+\t* generated/matmul_c8.c: Regenerate.\n+\t* generated/matmul_c10.c: Regenerate.\n+\t* generated/matmul_c16.c: Regenerate.\n+\t* generated/matmul_i4.c: Regenerate.\n+\t* generated/matmul_i8.c: Regenerate.\n+\t* generated/matmul_i16.c: Regenerate.\n+\n+2006-04-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/27360\n+\t* io/list_read.c (read_logical):  Free line_buffer and free saved.\n+\n+2006-04-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/27304\n+\t* io/transfer.c (formatted_transfer_scalar):  Generate error if data\n+\tdescriptors are exhausted.\n+\t* io/format.c (next_format0): Fix comment.\n+\n+2006-04-22  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/20257\n+\t* io/io.h: Add prototypes for get_internal_unit and free_internal_unit.\n+\t* io/unit.c (get_internal_unit): Initialize unit number, not zero.\n+\t(free_internal_unit): New function to consolidate freeing memory.\n+\t(get_unit): Initialize internal_unit_desc to NULL when unit is\n+\texternal.\n+\t* io/unix.c (mem_close): Check for not NULL before freeing memory.\n+\t* io/transfer.c (read_block): Reset bytes_left and skip error if unit\n+\tis preconnected and default record length is reached.\n+\t(read_block_direct): Ditto.\n+\t(write_block): Ditto.\n+\t(write_buf): Ditto.\n+\t(data_transfer_init): Only flush if not internal unit.\n+\t(finalize_transfer): Ditto and delete code to free memory used by\n+\tinternal units.\n+\t(st_read_done): Use new function - free_internal_unit.\n+\t(st_write_done): Use new function - free_internal unit.\n+\n+2006-04-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/26769\n+\t* Makefile.am (i_transpose_c): Add generated/transpose_r16.c.\n+\t(i_reshape_c): Add generated/reshape_r16.c.\n+\t* Makefile.in: Regenerated.\n+\t* generated/transpose_r16.c: Generated new file.\n+\t* generated/redhape_r16.c: Generated new file.\n+\n+2006-04-14  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/27138\n+\t* io/list_read.c (eat_line): New function.\n+\t(parse_repeat): Use new function and free_saved.\n+\t(read_logical): Same.\n+\t(read_integer): Use new function.\n+\t(parse_real): Use nml_bad_return and new function.\n+\t(read_complex): Use new function and free_saved.\n+\t(read_real): Same.\n+\n+2006-04-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26766\n+\t* io/io.h: Add bit to identify associated unit as internal.\n+\t* io/unit.c (get_external_unit): Renamed the find_unit_1 function to\n+\treflect the external unit functionality vs internal unit.\n+\t(get_internal_unit): New function to allocate and initialize an internal\n+\tunit structure.\n+\t(get_unit): Use get_internal_unit and get_external_unit.\n+\t(is_internal_unit): Revised to use new bit added in io.h.\n+\t* io/transfer.c (data_transfer_init): Fix line width.\n+\t(st_read_done): Free memory allocated for internal unit.\n+\t(st_write_done): Add test to only flush and truncate when not an\n+\tinternal unit.  Free memory allocated for internal unit.\n+\n+2006-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* io/io.h (st_parameter_dt): Revert 2005-12-10 change to\n+\tu.pad, fix comment.\n+\t(check_st_parameter_dt): New compile time assert.\n+\n+2006-04-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgfortran/24685\n+\t* io/write.c (MIN_FIELD_WIDTH, STR, STR1): Define.\n+\t(output_float): Increase buffer sizes for IEEE quad and IBM extended\n+\tlong double.\n+\t(write_real): Output REAL(16) as 1PG43.34E4 rather than 1PG40.31E4.\n+\n+2006-04-07  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26890\n+\t* io/io.h: Revert change to pad size made on 2006-03-30.\n+\tAdd comment explaining dependency with fortran/trans-io.c.\n+\t\n+2006-04-03  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\t* io/write.c (output_float): Update condition to not error when\n+\tdecimal precision in format specifier is zero.\n+\n+2006-04-01  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* config/fpu-387.h: Use previously added SSE code in all\n+\tcases, as it really is the right thing to do.\n+\n+2006-03-30  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26890\n+\t* io/io.h: Add size_used to st_parameter_dt, adjust pad size.\n+\t*io/transfer.c (data_transfer_init): Initialize size_used to zero.\n+\t(read_sf): Use size_used.\n+\t(read_block): Likewise.\n+\t(read_block_direct): Likewise.\n+\t(write_block): Likewise.\n+\t(write_buf): Likewise and eliminate erroneous FAILURE return.\n+\t(finalize_transfer): Assign value of size_used to *dtp->size.\n+\n+2006-03-30  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/26712\n+\t* config/fpu-387.h: Add special case for handling of SSE\n+\tcontrol bit on i386-darwin.\n+\n+2006-03-30  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR fortran/25031\n+\t* runtime/memory.c (allocate_array):  If stat is present and\n+\tthe variable is already allocated, free the variable, do\n+\tthe allocation and set stat.\n+\t(allocate_array_64):  Likewise.  Whitespace fix.\n+\n+2006-03-26  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26880\n+\t* io/file_pos.c (st_rewind): Clear read_bad flag.\n+\n+2006-03-25  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26661\n+\t* io/io.h: Add read_sf so it can be used by read_x.\n+\t* io/transfer.c (read_sf): Pass no_error flag to read_sf.  Use it to\n+\tbreak out rather than error on EOF or EOR conditions.\n+\t(read_block): Update call to read_sf.\n+\t(read_block_direct): Ditto.\n+\t* io/read.c (read_x): Use the modified read_sf instead of read_block.\n+\n+2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/26735\n+\t* io/transfer.c (data_transfer_init):  Set u_flags.convert\n+\ton an unopened unit if specified by environment variable\n+\t(via get_unformatted_convert) or by compile-time option.\n+\n+2006-03-25  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR fortran/26769\n+\t* Makefile.am:  Add transpose_r10.c and reshape_r10.c.\n+\t* aclocal.m4:  Regenerate using aclocal 1.9.3.\n+\t* Makefile.in:  Regenerate using automake 1.9.3.\n+\t* m4/iparm.m4 (rtype_ccode):  If rtype_letter is `i',\n+\tevaluate to rtype_kind, otherwise to rtype_code.\n+\t* generated/transpose_r10.c:  Add.\n+\t* generated/reshape_r10.c:  Add.\n+\n+2006-03-22  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR fortran/19303\n+\t* libgfortran.h (compile_options_t):  Add record_marker.\n+\t* runtime/compile_options.c (set_record_marker):\n+\tNew function.\n+\t* io/open.c:  If we have four-byte record markers, use\n+\tGFC_INTEGER_4_HUGE as default record length.\n+\t* io/file_pos.c (unformatted_backspace):  Handle\n+\tdifferent size record markers.\n+\t* io/transfer.c (us_read):  Likewise.\n+\t(us_write):  Likewise.\n+\t(next_record_r):  Likewise.\n+\t(write_us_marker):  Likewise.\n+\t(next_record_w):  Likewise.\n+\n+2006-03-20  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR fortran/20935\n+\t* m4/iforeach.m4:  Add SCALAR_FOREACH_FUNCTION macro.\n+\t* m4/ifunction.m4:  Add SCALAR_ARRAY_FUNCTION macro.\n+\t* m4/minloc0.m4:  Use SCALAR_FOREACH_FUNCTION.\n+\t* m4/minloc1.m4:  Use SCALAR_ARRAY_FUNCTION.\n+\t* m4/maxloc0.m4:  Use SCALAR_FOREACH_FUNCTION.\n+\t* m4/maxloc1.m4:  Use SCALAR_ARRAY_FUNCTION.\n+\t* m4/minval.m4:  Likewise.\n+\t* m4/maxval.m4:  Likewise.\n+\t* m4/product.m4:  Likewise.\n+\t* m4/sum.m4:  Likewise.\n+\t* minloc0_16_i16.c : Regenerated.\n+\t* minloc0_16_i4.c : Regenerated.\n+\t* minloc0_16_i8.c : Regenerated.\n+\t* minloc0_16_r10.c : Regenerated.\n+\t* minloc0_16_r16.c : Regenerated.\n+\t* minloc0_16_r4.c : Regenerated.\n+\t* minloc0_16_r8.c : Regenerated.\n+\t* minloc0_4_i16.c : Regenerated.\n+\t* minloc0_4_i4.c : Regenerated.\n+\t* minloc0_4_i8.c : Regenerated.\n+\t* minloc0_4_r10.c : Regenerated.\n+\t* minloc0_4_r16.c : Regenerated.\n+\t* minloc0_4_r4.c : Regenerated.\n+\t* minloc0_4_r8.c : Regenerated.\n+\t* minloc0_8_i16.c : Regenerated.\n+\t* minloc0_8_i4.c : Regenerated.\n+\t* minloc0_8_i8.c : Regenerated.\n+\t* minloc0_8_r10.c : Regenerated.\n+\t* minloc0_8_r16.c : Regenerated.\n+\t* minloc0_8_r4.c : Regenerated.\n+\t* minloc0_8_r8.c : Regenerated.\n+\t* minloc1_16_i16.c : Regenerated.\n+\t* minloc1_16_i4.c : Regenerated.\n+\t* minloc1_16_i8.c : Regenerated.\n+\t* minloc1_16_r10.c : Regenerated.\n+\t* minloc1_16_r16.c : Regenerated.\n+\t* minloc1_16_r4.c : Regenerated.\n+\t* minloc1_16_r8.c : Regenerated.\n+\t* minloc1_4_i16.c : Regenerated.\n+\t* minloc1_4_i4.c : Regenerated.\n+\t* minloc1_4_i8.c : Regenerated.\n+\t* minloc1_4_r10.c : Regenerated.\n+\t* minloc1_4_r16.c : Regenerated.\n+\t* minloc1_4_r4.c : Regenerated.\n+\t* minloc1_4_r8.c : Regenerated.\n+\t* minloc1_8_i16.c : Regenerated.\n+\t* minloc1_8_i4.c : Regenerated.\n+\t* minloc1_8_i8.c : Regenerated.\n+\t* minloc1_8_r10.c : Regenerated.\n+\t* minloc1_8_r16.c : Regenerated.\n+\t* minloc1_8_r4.c : Regenerated.\n+\t* minloc1_8_r8.c : Regenerated.\n+\t* maxloc0_16_i16.c : Regenerated.\n+\t* maxloc0_16_i4.c : Regenerated.\n+\t* maxloc0_16_i8.c : Regenerated.\n+\t* maxloc0_16_r10.c : Regenerated.\n+\t* maxloc0_16_r16.c : Regenerated.\n+\t* maxloc0_16_r4.c : Regenerated.\n+\t* maxloc0_16_r8.c : Regenerated.\n+\t* maxloc0_4_i16.c : Regenerated.\n+\t* maxloc0_4_i4.c : Regenerated.\n+\t* maxloc0_4_i8.c : Regenerated.\n+\t* maxloc0_4_r10.c : Regenerated.\n+\t* maxloc0_4_r16.c : Regenerated.\n+\t* maxloc0_4_r4.c : Regenerated.\n+\t* maxloc0_4_r8.c : Regenerated.\n+\t* maxloc0_8_i16.c : Regenerated.\n+\t* maxloc0_8_i4.c : Regenerated.\n+\t* maxloc0_8_i8.c : Regenerated.\n+\t* maxloc0_8_r10.c : Regenerated.\n+\t* maxloc0_8_r16.c : Regenerated.\n+\t* maxloc0_8_r4.c : Regenerated.\n+\t* maxloc0_8_r8.c : Regenerated.\n+\t* maxloc1_16_i16.c : Regenerated.\n+\t* maxloc1_16_i4.c : Regenerated.\n+\t* maxloc1_16_i8.c : Regenerated.\n+\t* maxloc1_16_r10.c : Regenerated.\n+\t* maxloc1_16_r16.c : Regenerated.\n+\t* maxloc1_16_r4.c : Regenerated.\n+\t* maxloc1_16_r8.c : Regenerated.\n+\t* maxloc1_4_i16.c : Regenerated.\n+\t* maxloc1_4_i4.c : Regenerated.\n+\t* maxloc1_4_i8.c : Regenerated.\n+\t* maxloc1_4_r10.c : Regenerated.\n+\t* maxloc1_4_r16.c : Regenerated.\n+\t* maxloc1_4_r4.c : Regenerated.\n+\t* maxloc1_4_r8.c : Regenerated.\n+\t* maxloc1_8_i16.c : Regenerated.\n+\t* maxloc1_8_i4.c : Regenerated.\n+\t* maxloc1_8_i8.c : Regenerated.\n+\t* maxloc1_8_r10.c : Regenerated.\n+\t* maxloc1_8_r16.c : Regenerated.\n+\t* maxloc1_8_r4.c : Regenerated.\n+\t* maxloc1_8_r8.c : Regenerated.\n+\t* maxval_i16.c : Regenerated.\n+\t* maxval_i4.c : Regenerated.\n+\t* maxval_i8.c : Regenerated.\n+\t* maxval_r10.c : Regenerated.\n+\t* maxval_r16.c : Regenerated.\n+\t* maxval_r4.c : Regenerated.\n+\t* maxval_r8.c : Regenerated.\n+\t* minval_i16.c : Regenerated.\n+\t* minval_i4.c : Regenerated.\n+\t* minval_i8.c : Regenerated.\n+\t* minval_r10.c : Regenerated.\n+\t* minval_r16.c : Regenerated.\n+\t* minval_r4.c : Regenerated.\n+\t* minval_r8.c : Regenerated.\n+\t* sum_c10.c : Regenerated.\n+\t* sum_c16.c : Regenerated.\n+\t* sum_c4.c : Regenerated.\n+\t* sum_c8.c : Regenerated.\n+\t* sum_i16.c : Regenerated.\n+\t* sum_i4.c : Regenerated.\n+\t* sum_i8.c : Regenerated.\n+\t* sum_r10.c : Regenerated.\n+\t* sum_r16.c : Regenerated.\n+\t* sum_r4.c : Regenerated.\n+\t* sum_r8.c : Regenerated.\n+\t* product_c10.c : Regenerated.\n+\t* product_c16.c : Regenerated.\n+\t* product_c4.c : Regenerated.\n+\t* product_c8.c : Regenerated.\n+\t* product_i16.c : Regenerated.\n+\t* product_i4.c : Regenerated.\n+\t* product_i8.c : Regenerated.\n+\t* product_r10.c : Regenerated.\n+\t* product_r16.c : Regenerated.\n+\t* product_r4.c : Regenerated.\n+\t* product_r8.c : Regenerated.\n+\n+2006-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26509\n+\t* libgfortran.h: Add ERROR_DIRECT_EOR.\n+\t* runtime/error.c (translate_error): Add translation for new error.\n+\t* io/transfer.c (write_buf): Add check for EOR when mode is \n+\tdirect access.\n+\n+2006-03-13  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/25378\n+\t* libgfortran/m4/minloc1.m4: Set the initial position to zero and\n+\tmodify the condition for updating it, to implement the F2003\n+\trequirement for all(mask).eq.false.\n+\t* libgfortran/m4/maxloc1.m4: The same.\n+\t* libgfortran/m4/iforeach.m4: The same.\n+\t* libgfortran/m4/minloc0.m4: The same.\n+\t* libgfortran/m4/maxloc0.m4: The same.\n+\t* libgfortran/generated/maxloc0_16_i16.c: Regenerated, together\n+\twith 41 others.\n+\t* libgfortran/generated/minloc0_16_i16.c: Regenerated, together\n+\twith 41 others.\n+\n+2006-03-09  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26499\n+\t* io/file_pos (st_rewind): Flush always.\n+\t* io/unix.c (fd_truncate): Return SUCCESS rather than FAILURE for\n+\tspecial files like /dev/null.\n+\t* io/transfer.c (st_write_done): Remove broken logic that\n+\tprevented calling fd_truncate.\n+\n+2006-03-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26554\n+\t* io/list_read.c (read_logical): Return the value if not in namelist\n+\tmode.\n+\n+2006-03-03  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR fortran/25031\n+\t* runtime/memory.c:  Adjust copyright years.\n+\t(allocate_array):  New function.\n+\t(allocate64_array):  New function.\n+\t* libgfortran.h (error_codes):  Add ERROR_ALLOCATION.\n+\n+2006-02-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26136\n+\t* io/io.h: Add flag for reading from line_buffer.\n+\t* io/list_read.c (l_push_char): New function to save namelist\n+\tinput when reading logicals.\n+\t(free_line): New function to free line_buffer memory.\n+\t(next_char): Added feature to read from line_buffer.\n+\t(read_logical): Use new functions to test for '=' after reading a\n+\tlogical value, checking for possible variable name.\n+\t(namelist_read): Use free_line when all done.\n+\n+2006-02-27  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26464\n+\t* io/file_pos.c (st_backspace): Flush and truncate file\n+\twhen in AFTER_ENDFILE condition.\n+\t* io/transfer.c (st_read_done): Remove flush, no longer needed.\n+\n+2006-02-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/26423\n+\t* io/unix.c (fd_seek): Revert change from 25949.\n+\t(fd_read): Same.\n+\t(fd_write): Same.\n+\n+2006-02-19  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\t* io/open.c (edit_modes): Correct abusive copy-pasting.\n+\n+2006-02-16  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/24903\n+\t* m4/dotprodc.m4: Use __builtin_conj instead of assigning real\n+\tand imaginary parts separately.\n+\t* generated/dotprod_c4.c: Regenerated.\n+\t* generated/dotprod_c8.c: Regenerated.\n+\t* generated/dotprod_c10.c: Regenerated.\n+\t* generated/dotprod_c16.c: Regenerated.\n+\n+2006-02-12  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\tPR libgfortran/25949\n+\t* io/io.h: Add set function pointer to struct stream.  \n+\t* io/unix.c (fd_seek): Only update offset, don't seek.\n+\t(fd_sset): New function.\n+\t(fd_read): Call lseek directly if necessary.\n+\t(fd_write): Likewise.\n+\t(fd_open): Set pointer to fd_sset.\n+\t(mem_set): New function.\n+\t(open_internal): Set pointer to mem_set.\n+\t* io/transfer.c (write_block_direct): Rename to write_buf, add\n+\terror return, non-pointer length argument.\n+\t(unformatted_write): Update to use write_buf.\n+\t(us_write): Simplify by using swrite instead of salloc_w.\n+\t(write_us_marker): New function.\n+\t(new_record_w): Use sset instead of memset, use write_us_marker,\n+\tsimplify by using swrite instead of salloc_w.\n+\n+2006-02-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/25425\n+\t* libgfortran.h: Add pedantic field to compile_options struct.\n+\t* io/write.c (calculate_G_format): Depending on the standard,\n+\tchoose E or F format for list-directed output of 0.0.\n+\t* runtime/error.c (notify_std): Make warning and error dependent\n+\ton pedanticity.\n+\t* runtime/compile_options.c (set_std): Use new pedantic argument.\n+\n+2006-02-07  Dale Ranta  <dir@lanl.gov>\n+\n+\tPR fortran/25577\n+\t* intrinsics/mvbits.c: Shift '(TYPE)1' type when building 'lenmask'.\n+\n+2006-02-07  Rainer Emrich <r.emrich@de.tecosim.com>\n+\n+\t* intrinsics/c99_functions.c: Work around incompatible\n+\tdeclarations of cabs{,f,l} on pre-C99 IRIX systems.\n+\n+2005-02-06  Thomas Koenig  <Thomas.Koenig@online.de>\n+\n+\tPR libfortran/23815\n+\t* runtime/environ.c (init_unformatted):  Add GFORTRAN_CONVERT_UNIT\n+\tenvironment variable.\n+\t(top level):  Add defines, type and static variables for\n+\tGFORTRAN_CONVERT_UNIT handling.\n+\t(search_unit):  New function.\n+\t(match_word): New function.\n+\t(match_integer): New function.\n+\t(next_token): New function.\n+\t(push_token): New function.\n+\t(mark_single): New function.\n+\t(mark_range): New funciton.\n+\t(do_parse): New function.\n+\t(init_unformatted): New function.\n+\t(get_unformatted_convert): New function.\n+\t* runtime/compile_options.c:  Add set_convert().\n+\t* libgfortran.h:  Add convert to compile_options_t.\n+\t* io/open.c (st_open): Call get_unformatted_convert to get\n+\tunit default; if CONVERT_NONE is returned, check for\n+\tthe presence of a CONVERT specifier and use it.\n+\tAs default, use compile_options.convert.\n+\t* io/io.h (top level): Add CONVERT_NONE to unit_convert, to signal\n+\t\"nothing has been set\".\n+\t(top level): Add prototype for get_unformatted_convert.\n+\n+2006-02-06  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/24685\n+\t* io/write.c (write_real): Widen the default format for real(10)\n+\tvariables output.\n+\n+2006-01-24  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/25835\n+\t* io/transfer.c (st_read_done): Flush buffers when read is done.\n+\n+2006-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/25697\n+\t* io/transfer.c (us_read): Detect end of file condition from previous\n+\toperations and bail out (no need to pre-position).\n+\n+2006-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/25631\n+\t* io/transfer.c (formatted_transfer_scalar): Adjust pending_spaces and\n+\tskips so that TL works correctly when no bytes_used yet.  \n+\n+2006-01-16  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* configure.ac (CFLAGS): Update to include -std=gnu99 so that\n+\tthe configure tests will be run with the same environment as\n+\tused to compile the libgfortran source code.\n+\t* configure: Regenerate.\n+\n+2006-01-12  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* intrinsics/c99_functions.c: Add function prototypes to avoid\n+\twarnings from -Wstrict-prototypes -Wmissing-prototypes.  On Tru64\n+\twork around a brain-dead libm by redirecting calls to cabs{,f,l}\n+\tto a local __gfc_cabs{,f,l}.\n+\n+2006-01-07  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+\t* configure.ac: Remove check for sys/mman.h.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Regenerated.\n+\t* config.h.in: Regenerated.\n+\t* aclocal.m4: Regenerated.\n+\t\n+2006-01-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/25598\n+\t* io/file_pos.c (unformatted_backspace): Assure the new file position\n+\tto seek is not less than zero.\n+\t(st_backspace): Set unit bytes_left to zero.\n+\t* io/transfer.c (next_record_r): Fix line lengths, no functional change.\n+\n+2006-01-02  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR target/25259\n+\t* configure.ac: Use GCC_HEADER_STDINT.\n+\t* libgfortran.h: Include gstdint.h.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\n+2006-01-01  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* ChangeLog: Split into years ...\n+\t* ChangeLog-2002: here.\n+\t* ChangeLog-2003: here.\n+\t* ChangeLog-2004: here.\n+\t* ChangeLog-2005: here."}]}