{"sha": "b4ef293194e0f540762d3ab338e1c68676d67b23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjRlZjI5MzE5NGUwZjU0MDc2MmQzYWIzMzhlMWM2ODY3NmQ2N2IyMw==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-11-05T09:57:53Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-11-05T09:57:53Z"}, "message": "[fortran] Remove semicolon after do {} while (0) in match macros\n\n2017-11-05  Tom de Vries  <tom@codesourcery.com>\n\n\tPR other/82784\n\t* parse.c (match, matcha, matchs, matcho, matchds, matchdo): Remove\n\tsemicolon after \"do {} while (0)\".\n\nFrom-SVN: r254422", "tree": {"sha": "2893c806ea0338adf9bcb1aeda3fb83214f20665", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2893c806ea0338adf9bcb1aeda3fb83214f20665"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b4ef293194e0f540762d3ab338e1c68676d67b23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ef293194e0f540762d3ab338e1c68676d67b23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4ef293194e0f540762d3ab338e1c68676d67b23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4ef293194e0f540762d3ab338e1c68676d67b23/comments", "author": null, "committer": null, "parents": [{"sha": "f9c1b67a39201d6285dceb3aed85943bd258fe33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9c1b67a39201d6285dceb3aed85943bd258fe33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9c1b67a39201d6285dceb3aed85943bd258fe33"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "008d86fe060801d3160c997ec09e992b3a761de3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ef293194e0f540762d3ab338e1c68676d67b23/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ef293194e0f540762d3ab338e1c68676d67b23/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b4ef293194e0f540762d3ab338e1c68676d67b23", "patch": "@@ -1,3 +1,9 @@\n+2017-11-05  Tom de Vries  <tom@codesourcery.com>\n+\n+\tPR other/82784\n+\t* parse.c (match, matcha, matchs, matcho, matchds, matchdo): Remove\n+\tsemicolon after \"do {} while (0)\".\n+\n 2017-11-04  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \t* trans-expr.c (gfc_trans_assignment_1): Character kind conversion may"}, {"sha": "d025c9129217460091d4ee39432140de9b08e60e", "filename": "gcc/fortran/parse.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b4ef293194e0f540762d3ab338e1c68676d67b23/gcc%2Ffortran%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b4ef293194e0f540762d3ab338e1c68676d67b23/gcc%2Ffortran%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fparse.c?ref=b4ef293194e0f540762d3ab338e1c68676d67b23", "patch": "@@ -132,7 +132,7 @@ use_modules (void)\n \treturn st;\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n-    } while (0);\n+    } while (0)\n \n \n /* This is a specialist version of decode_statement that is used\n@@ -606,7 +606,7 @@ decode_statement (void)\n \treturn st;\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n-    } while (0);\n+    } while (0)\n \n static gfc_statement\n decode_oacc_directive (void)\n@@ -728,7 +728,7 @@ decode_oacc_directive (void)\n \t}\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n-    } while (0);\n+    } while (0)\n \n /* Like match, but don't match anything if not -fopenmp\n    and if spec_only, goto do_spec_only without actually matching.  */\n@@ -746,7 +746,7 @@ decode_oacc_directive (void)\n \t}\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n-    } while (0);\n+    } while (0)\n \n /* Like match, but set a flag simd_matched if keyword matched.  */\n #define matchds(keyword, subr, st)\t\t\t\t\\\n@@ -759,7 +759,7 @@ decode_oacc_directive (void)\n \t}\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n-    } while (0);\n+    } while (0)\n \n /* Like match, but don't match anything if not -fopenmp.  */\n #define matchdo(keyword, subr, st)\t\t\t\t\\\n@@ -774,7 +774,7 @@ decode_oacc_directive (void)\n \t}\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \tundo_new_statement ();\t\t\t\t  \t\\\n-    } while (0);\n+    } while (0)\n \n static gfc_statement\n decode_omp_directive (void)"}]}