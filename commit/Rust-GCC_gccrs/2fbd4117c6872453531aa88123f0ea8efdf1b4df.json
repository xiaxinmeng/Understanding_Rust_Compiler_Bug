{"sha": "2fbd4117c6872453531aa88123f0ea8efdf1b4df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZiZDQxMTdjNjg3MjQ1MzUzMWFhODgxMjNmMGVhOGVmZGYxYjRkZg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-08-31T10:22:32Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2009-08-31T10:22:32Z"}, "message": "re PR fortran/40996 ([F03] ALLOCATABLE scalars)\n\n2009-08-31  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40996\n\t* check.c (gfc_check_allocated): Implement allocatable scalars.\n\t* resolve.c (resolve_allocate_expr,resolve_fl_var_and_proc): Ditto.\n\t* trans-intrinsic.c (gfc_conv_allocated): Ditto.\n\n2009-08-31  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/40996\n\t* gfortran.dg/allocatable_scalar_1.f90: New.\n\t* gfortran.dg/allocatable_scalar_2.f90: Renamed from finalize_9.f03.\n\t* gfortran.dg/finalize_9.f03: Renamed to allocatable_scalar_2.f90.\n\t* gfortran.dg/proc_ptr_comp_pass_4.f90: Modified.\n\nFrom-SVN: r151240", "tree": {"sha": "10c30d1e9b304179c69b618cd75553a751574792", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10c30d1e9b304179c69b618cd75553a751574792"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fbd4117c6872453531aa88123f0ea8efdf1b4df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fbd4117c6872453531aa88123f0ea8efdf1b4df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fbd4117c6872453531aa88123f0ea8efdf1b4df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fbd4117c6872453531aa88123f0ea8efdf1b4df/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a435ffc1c4509ea53e9f93359ef0ed73dd12eec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a435ffc1c4509ea53e9f93359ef0ed73dd12eec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a435ffc1c4509ea53e9f93359ef0ed73dd12eec"}], "stats": {"total": 74, "additions": 61, "deletions": 13}, "files": [{"sha": "3d2aad65b9edddaf814a3c3f5e6de95bc2ea81a1", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2fbd4117c6872453531aa88123f0ea8efdf1b4df", "patch": "@@ -1,3 +1,10 @@\n+2009-08-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40996\n+\t* check.c (gfc_check_allocated): Implement allocatable scalars.\n+\t* resolve.c (resolve_allocate_expr,resolve_fl_var_and_proc): Ditto.\n+\t* trans-intrinsic.c (gfc_conv_allocated): Ditto.\n+\n 2009-08-30  Daniel Kraft  <d@domob.eu>\n \n \tPR fortran/37425"}, {"sha": "01775abdd3054f0a043662980865625680eb5894", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=2fbd4117c6872453531aa88123f0ea8efdf1b4df", "patch": "@@ -546,9 +546,6 @@ gfc_check_allocated (gfc_expr *array)\n       return FAILURE;\n     }\n \n-  if (array_check (array, 0) == FAILURE)\n-    return FAILURE;\n-\n   return SUCCESS;\n }\n "}, {"sha": "b665c35450333283ae8e465d9495ad7d4460cbf9", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=2fbd4117c6872453531aa88123f0ea8efdf1b4df", "patch": "@@ -5643,7 +5643,7 @@ resolve_allocate_expr (gfc_expr *e, gfc_code *code)\n       code->next = init_st;\n     }\n \n-  if (pointer && dimension == 0)\n+  if (pointer || dimension == 0)\n     return SUCCESS;\n \n   /* Make sure the next-to-last reference node is an array specification.  */\n@@ -7955,11 +7955,14 @@ resolve_fl_var_and_proc (gfc_symbol *sym, int mp_flag)\n       if (sym->attr.allocatable)\n \t{\n \t  if (sym->attr.dimension)\n-\t    gfc_error (\"Allocatable array '%s' at %L must have \"\n-\t\t       \"a deferred shape\", sym->name, &sym->declared_at);\n-\t  else\n-\t    gfc_error (\"Scalar object '%s' at %L may not be ALLOCATABLE\",\n-\t\t       sym->name, &sym->declared_at);\n+\t    {\n+\t      gfc_error (\"Allocatable array '%s' at %L must have \"\n+\t\t\t \"a deferred shape\", sym->name, &sym->declared_at);\n+\t      return FAILURE;\n+\t    }\n+\t  else if (gfc_notify_std (GFC_STD_F2003, \"Scalar object '%s' at %L \"\n+\t\t\t\t   \"may not be ALLOCATABLE\", sym->name,\n+\t\t\t\t   &sym->declared_at) == FAILURE)\n \t    return FAILURE;\n \t}\n "}, {"sha": "b9e5b865b190ed83ed92ed62dadb9a8e88ac5f1c", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=2fbd4117c6872453531aa88123f0ea8efdf1b4df", "patch": "@@ -4564,10 +4564,22 @@ gfc_conv_allocated (gfc_se *se, gfc_expr *expr)\n   gfc_init_se (&arg1se, NULL);\n   arg1 = expr->value.function.actual;\n   ss1 = gfc_walk_expr (arg1->expr);\n-  arg1se.descriptor_only = 1;\n-  gfc_conv_expr_descriptor (&arg1se, arg1->expr, ss1);\n \n-  tmp = gfc_conv_descriptor_data_get (arg1se.expr);\n+  if (ss1 == gfc_ss_terminator)\n+    {\n+      /* Allocatable scalar.  */\n+      arg1se.want_pointer = 1;\n+      gfc_conv_expr (&arg1se, arg1->expr);\n+      tmp = arg1se.expr;\n+    }\n+  else\n+    {\n+      /* Allocatable array.  */\n+      arg1se.descriptor_only = 1;\n+      gfc_conv_expr_descriptor (&arg1se, arg1->expr, ss1);\n+      tmp = gfc_conv_descriptor_data_get (arg1se.expr);\n+    }\n+\n   tmp = fold_build2 (NE_EXPR, boolean_type_node,\n \t\t     tmp, fold_convert (TREE_TYPE (tmp), null_pointer_node));\n   se->expr = convert (gfc_typenode_for_spec (&expr->ts), tmp);"}, {"sha": "6641a43fd2eea3f50eb4a369fbc0ba4362387235", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2fbd4117c6872453531aa88123f0ea8efdf1b4df", "patch": "@@ -1,3 +1,11 @@\n+2009-08-31  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/40996\n+\t* gfortran.dg/allocatable_scalar_1.f90: New.\n+\t* gfortran.dg/allocatable_scalar_2.f90: Renamed from finalize_9.f03.\n+\t* gfortran.dg/finalize_9.f03: Renamed to allocatable_scalar_2.f90.\n+\t* gfortran.dg/proc_ptr_comp_pass_4.f90: Modified.\n+\n 2009-08-30  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/41186"}, {"sha": "d83d2f7f72bdaa767413a8c6c44926661caccc35", "filename": "gcc/testsuite/gfortran.dg/allocatable_scalar_1.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_1.f90?ref=2fbd4117c6872453531aa88123f0ea8efdf1b4df", "patch": "@@ -0,0 +1,18 @@\n+! { dg-do run }\n+!\n+! PR 40996: [F03] ALLOCATABLE scalars\n+!\n+! Contributed by Janus Weil <janus@gcc.gnu.org>\n+\n+implicit none\n+real, allocatable :: scalar\n+\n+allocate(scalar)\n+scalar = exp(1.)\n+print *,scalar\n+if (.not. allocated(scalar)) call abort()\n+deallocate(scalar)\n+if (allocated(scalar)) call abort()\n+\n+end\n+"}, {"sha": "5ad58ca38ab3afeb4404249fd8d4c72b1f8c2427", "filename": "gcc/testsuite/gfortran.dg/allocatable_scalar_2.f90", "status": "renamed", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocatable_scalar_2.f90?ref=2fbd4117c6872453531aa88123f0ea8efdf1b4df", "patch": "@@ -1,8 +1,11 @@\n ! { dg-do compile }\n+! { dg-options \"-std=f95\" }\n \n ! Parsing of finalizer procedure definitions.\n ! While ALLOCATABLE scalars are not implemented, this even used to ICE.\n ! Thanks Tobias Burnus for the test!\n \n integer, allocatable :: x ! { dg-error \"may not be ALLOCATABLE\" }\n+\n end\n+", "previous_filename": "gcc/testsuite/gfortran.dg/finalize_9.f03"}, {"sha": "0a28b5340b331b299f98db1677da52553bfdc9f7", "filename": "gcc/testsuite/gfortran.dg/proc_ptr_comp_pass_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fbd4117c6872453531aa88123f0ea8efdf1b4df/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fproc_ptr_comp_pass_4.f90?ref=2fbd4117c6872453531aa88123f0ea8efdf1b4df", "patch": "@@ -51,7 +51,7 @@ subroutine foo2 (x2,y2)\n   type(t2) :: y2\n  end subroutine\n \n- subroutine foo3 (x3,y3)  ! { dg-error \"may not be ALLOCATABLE\" }\n+ subroutine foo3 (x3,y3)\n   type(t3),allocatable :: x3\n   type(t3) :: y3\n  end subroutine"}]}