{"sha": "88b1b955515cb787a2e4b08bc6ef646abe4d4db5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhiMWI5NTU1MTVjYjc4N2EyZTRiMDhiYzZlZjY0NmFiZTRkNGRiNQ==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-08-09T20:51:08Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1996-08-09T20:51:08Z"}, "message": "(untyped_call) Avoid SIGFPE.\n\nFrom-SVN: r12610", "tree": {"sha": "5f5eee7840492c44219197db08848f3e81f7bddb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f5eee7840492c44219197db08848f3e81f7bddb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88b1b955515cb787a2e4b08bc6ef646abe4d4db5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b1b955515cb787a2e4b08bc6ef646abe4d4db5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b1b955515cb787a2e4b08bc6ef646abe4d4db5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b1b955515cb787a2e4b08bc6ef646abe4d4db5/comments", "author": null, "committer": null, "parents": [{"sha": "66050251ac75220c6a7fe0eb7f003bc979e6f261", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66050251ac75220c6a7fe0eb7f003bc979e6f261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66050251ac75220c6a7fe0eb7f003bc979e6f261"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "2eaee7d575e0087f366fc9f8f1507c1e0df5b685", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b1b955515cb787a2e4b08bc6ef646abe4d4db5/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b1b955515cb787a2e4b08bc6ef646abe4d4db5/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=88b1b955515cb787a2e4b08bc6ef646abe4d4db5", "patch": "@@ -3562,7 +3562,6 @@ output_float_compare (insn, operands)\n   rtx body = XVECEXP (PATTERN (insn), 0, 0);\n   int unordered_compare = GET_MODE (SET_SRC (body)) == CCFPEQmode;\n   int target_fcomi = TARGET_CMOVE && STACK_REG_P (operands[1]);\n-  int target_fcomi = TARGET_CMOVE && STACK_REG_P (operands[1]);\n \n   rtx tmp;\n   if (! STACK_TOP_P (operands[0]))\n@@ -3612,18 +3611,14 @@ output_float_compare (insn, operands)\n \tstrcat (buf, \"p\");\n \n       if (NON_STACK_REG_P (operands[1]))\n-      else if (target_fcomi) \n-\t{\n-\t  rtx xops[] = {operands[0], operands[1], operands[0]};\n-\t  \n-\t  output_asm_insn (strcat (buf, AS2 (%z1,%y1,%2)), xops);\n-\t  RET;\n-\t}\n \toutput_op_from_reg (operands[1], strcat (buf, AS1 (%z0,%1)));\n       else if (target_fcomi) \n \t{\n-\t  rtx xops[] = {operands[0], operands[1], operands[0]};\n+\t  rtx xops[3];\n \t  \n+ \t  xops[0] = operands[0];\n+ \t  xops[1] = operands[1];\n+ \t  xops[2] = operands[0];\n \t  output_asm_insn (strcat (buf, AS2 (%z1,%y1,%2)), xops);\n \t  RET;\n \t}"}, {"sha": "96bdac51bd6fa0c19aa391890081f093d2e59414", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b1b955515cb787a2e4b08bc6ef646abe4d4db5/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b1b955515cb787a2e4b08bc6ef646abe4d4db5/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=88b1b955515cb787a2e4b08bc6ef646abe4d4db5", "patch": "@@ -5955,10 +5955,13 @@\n      coprocessor registers as containing a possible return value,\n      simply pretend the untyped call returns a complex long double\n      value.  */\n+  /*\n   emit_call_insn (TARGET_80387\n                   ? gen_call_value (gen_rtx (REG, XCmode, FIRST_FLOAT_REG),\n \t\t                  operands[0], const0_rtx)\n                   : gen_call (operands[0], const0_rtx));\n+  */\n+  emit_call_insn (gen_call (operands[0], const0_rtx, NULL, const0_rtx));\n \n   for (i = 0; i < XVECLEN (operands[2], 0); i++)\n     {"}]}