{"sha": "44f89620d9ecac3995e3cb7484221ce83f44a2b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRmODk2MjBkOWVjYWMzOTk1ZTNjYjc0ODQyMjFjZTgzZjQ0YTJiMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-31T19:54:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-31T19:54:32Z"}, "message": "tree-sra.c (ptr_parm_has_direct_uses): Rewrite to be conservatively correct.\n\n2010-01-31  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-sra.c (ptr_parm_has_direct_uses): Rewrite to be\n\tconservatively correct.\n\nFrom-SVN: r156413", "tree": {"sha": "fe492fd940655194debccd895f6aa03c14543b56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe492fd940655194debccd895f6aa03c14543b56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44f89620d9ecac3995e3cb7484221ce83f44a2b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f89620d9ecac3995e3cb7484221ce83f44a2b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44f89620d9ecac3995e3cb7484221ce83f44a2b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f89620d9ecac3995e3cb7484221ce83f44a2b0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "747b0aedad6db1b30c7d7f6051aa7624947e3611", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/747b0aedad6db1b30c7d7f6051aa7624947e3611", "html_url": "https://github.com/Rust-GCC/gccrs/commit/747b0aedad6db1b30c7d7f6051aa7624947e3611"}], "stats": {"total": 64, "additions": 39, "deletions": 25}, "files": [{"sha": "366652ce10901ff39cc5fe3c02dd2d0c5b3ba272", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44f89620d9ecac3995e3cb7484221ce83f44a2b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44f89620d9ecac3995e3cb7484221ce83f44a2b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44f89620d9ecac3995e3cb7484221ce83f44a2b0", "patch": "@@ -1,3 +1,8 @@\n+2010-01-31  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-sra.c (ptr_parm_has_direct_uses): Rewrite to be\n+\tconservatively correct.\n+\n 2010-01-31  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR target/42850"}, {"sha": "c0d3d3f8a5d83b4ae3c29f1145edd92b46371666", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 34, "deletions": 25, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44f89620d9ecac3995e3cb7484221ce83f44a2b0/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44f89620d9ecac3995e3cb7484221ce83f44a2b0/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=44f89620d9ecac3995e3cb7484221ce83f44a2b0", "patch": "@@ -2904,42 +2904,51 @@ ptr_parm_has_direct_uses (tree parm)\n \n   FOR_EACH_IMM_USE_STMT (stmt, ui, name)\n     {\n-      if (gimple_assign_single_p (stmt))\n+      int uses_ok = 0;\n+      use_operand_p use_p;\n+\n+      if (is_gimple_debug (stmt))\n+\tcontinue;\n+\n+      /* Valid uses include dereferences on the lhs and the rhs.  */\n+      if (gimple_has_lhs (stmt))\n \t{\n-\t  tree rhs = gimple_assign_rhs1 (stmt);\n-\t  if (rhs == name)\n-\t    ret = true;\n-\t  else if (TREE_CODE (rhs) == ADDR_EXPR)\n-\t    {\n-\t      do\n-\t\t{\n-\t\t  rhs = TREE_OPERAND (rhs, 0);\n-\t\t}\n-\t      while (handled_component_p (rhs));\n-\t      if (INDIRECT_REF_P (rhs) && TREE_OPERAND (rhs, 0) == name)\n-\t\tret = true;\n-\t    }\n+\t  tree lhs = gimple_get_lhs (stmt);\n+\t  while (handled_component_p (lhs))\n+\t    lhs = TREE_OPERAND (lhs, 0);\n+\t  if (INDIRECT_REF_P (lhs)\n+\t      && TREE_OPERAND (lhs, 0) == name)\n+\t    uses_ok++;\n \t}\n-      else if (gimple_code (stmt) == GIMPLE_RETURN)\n+      if (gimple_assign_single_p (stmt))\n \t{\n-\t  tree t = gimple_return_retval (stmt);\n-\t  if (t == name)\n-\t    ret = true;\n+\t  tree rhs = gimple_assign_rhs1 (stmt);\n+\t  while (handled_component_p (rhs))\n+\t    rhs = TREE_OPERAND (rhs, 0);\n+\t  if (INDIRECT_REF_P (rhs)\n+\t      && TREE_OPERAND (rhs, 0) == name)\n+\t    uses_ok++;\n \t}\n       else if (is_gimple_call (stmt))\n \t{\n \t  unsigned i;\n-\t  for (i = 0; i < gimple_call_num_args (stmt); i++)\n+\t  for (i = 0; i < gimple_call_num_args (stmt); ++i)\n \t    {\n \t      tree arg = gimple_call_arg (stmt, i);\n-\t      if (arg == name)\n-\t\t{\n-\t\t  ret = true;\n-\t\t  break;\n-\t\t}\n+\t      while (handled_component_p (arg))\n+\t\targ = TREE_OPERAND (arg, 0);\n+\t      if (INDIRECT_REF_P (arg)\n+\t\t  && TREE_OPERAND (arg, 0) == name)\n+\t\tuses_ok++;\n \t    }\n \t}\n-      else if (!is_gimple_debug (stmt))\n+\n+      /* If the number of valid uses does not match the number of\n+         uses in this stmt there is an unhandled use.  */\n+      FOR_EACH_IMM_USE_ON_STMT (use_p, ui)\n+\t--uses_ok;\n+\n+      if (uses_ok != 0)\n \tret = true;\n \n       if (ret)"}]}