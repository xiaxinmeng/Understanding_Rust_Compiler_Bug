{"sha": "4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRiMTVkNzVlYzUwYTllYjIwZWJkOGZhOTVhMWZkYTVjN2E2MzVlMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-09-04T10:30:26Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-09-04T10:30:26Z"}, "message": "re PR tree-optimization/37345 (Segfault in decl_function_context (TYPE_MAIN_VARIANT))\n\n\tPR tree-optimization/37345\n\tPR tree-optimization/37358\n\tPR tree-optimization/37357\n\t* tree.c (build_function_type_skip_args): Build distinct type copy;\n\tset TYPE_CONTEXT.\n\t(build_function_decl_skip_args): Set type of new decl not orig decl;\n\tclear DECL_VINDEX for methods turned into functions.\n\nFrom-SVN: r139980", "tree": {"sha": "81758f4a1a9d589ec8f3ccfa19b59c3b8a8e29e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81758f4a1a9d589ec8f3ccfa19b59c3b8a8e29e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/comments", "author": null, "committer": null, "parents": [{"sha": "28e6bb130e41cc18e1d07330a154862a4927af65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28e6bb130e41cc18e1d07330a154862a4927af65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28e6bb130e41cc18e1d07330a154862a4927af65"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "eba838bab8e0302b1db2d621d94cca62394df0b9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3", "patch": "@@ -1,3 +1,13 @@\n+2008-09-04  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/37345\n+\tPR tree-optimization/37358\n+\tPR tree-optimization/37357\n+\t* tree.c (build_function_type_skip_args): Build distinct type copy;\n+\tset TYPE_CONTEXT.\n+\t(build_function_decl_skip_args): Set type of new decl not orig decl;\n+\tclear DECL_VINDEX for methods turned into functions.\n+\n 2008-09-04  Nick Clifton  <nickc@redhat.com>\n \n \t* configure.ac (HAVE_GAS_LCOMM_WITH_ALIGNMENT): New assembler"}, {"sha": "40bf497a77fdfc9506070b16dce5eb1cb868887e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3", "patch": "@@ -1,3 +1,10 @@\n+2008-09-03  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/37345\n+\tPR tree-optimization/37358\n+\tPR tree-optimization/37357\n+\t* g++.dg/torture/pr37345.c: New file.\n+\n 2008-09-03  Tobias Grosser  <grosser@fim.uni-passau.de>\n \n \t* lib/target-supports.exp (check_effective_target_fgraphite): Fix test."}, {"sha": "5b49f53069d546513bc0a29994762bdd935323c6", "filename": "gcc/testsuite/g++.dg/torture/pr37345.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37345.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37345.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr37345.C?ref=4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+class EbmlElement {                                                                                                                                                    \n+    virtual EbmlElement * Clone() const;                                                                                                                               \n+};                                                                                                                                                                     \n+class KaxTracks : public EbmlElement {                                                                                                                                 \n+public:                                                                                                                                                                \n+    EbmlElement * Clone() const {                                                                                                                                      \n+        return new KaxTracks(*this);                                                                                                                                   \n+    }                                                                                                                                                                  \n+};                                                                                                                                                                     \n+KaxTracks kax_tracks;                                                                                                                                                  \n+void finish_file(void)                                                                                                                                                 \n+{                                                                                                                                                                      \n+  kax_tracks.Clone();                                                                                                                                                  \n+} "}, {"sha": "71267bdb82c57ebd15c457ebc0d9c00e91b51e8e", "filename": "gcc/tree.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=4db15d75ec50a9eb20ebd8fa95a1fda5c7a635e3", "patch": "@@ -5925,7 +5925,12 @@ build_function_type_skip_args (tree orig_type, bitmap args_to_skip)\n       TYPE_ARG_TYPES (new_type) = new_reversed;\n     }\n   else\n-    new_type = build_function_type (TREE_TYPE (orig_type), new_reversed);\n+    {\n+      new_type\n+        = build_distinct_type_copy (build_function_type (TREE_TYPE (orig_type),\n+\t\t\t\t\t\t\t new_reversed));\n+      TYPE_CONTEXT (new_type) = TYPE_CONTEXT (orig_type);\n+    }\n \n   /* This is a new type, not a copy of an old type.  Need to reassociate\n      variants.  We can handle everything except the main variant lazily.  */\n@@ -5959,7 +5964,12 @@ build_function_decl_skip_args (tree orig_decl, bitmap args_to_skip)\n   new_type = TREE_TYPE (orig_decl);\n   if (prototype_p (new_type))\n     new_type = build_function_type_skip_args (new_type, args_to_skip);\n-  TREE_TYPE (orig_decl) = new_type;\n+  TREE_TYPE (new_decl) = new_type;\n+\n+  /* For declarations setting DECL_VINDEX (i.e. methods)\n+     we expect first argument to be THIS pointer.   */\n+  if (bitmap_bit_p (args_to_skip, 0))\n+    DECL_VINDEX (new_decl) = NULL_TREE;\n   return new_decl;\n }\n "}]}