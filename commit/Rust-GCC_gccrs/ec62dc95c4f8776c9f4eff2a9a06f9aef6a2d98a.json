{"sha": "ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a", "node_id": "C_kwDOANBUbNoAKGVjNjJkYzk1YzRmODc3NmM5ZjRlZmYyYTlhMDZmOWFlZjZhMmQ5OGE", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2023-03-14T23:12:08Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2023-03-14T23:12:08Z"}, "message": "c++: constrained template friend class matching [PR96830]\n\nWhen instantiating a constrained template friend naming an already\ndeclared class template, tsubst_friend_class erroneously passes to\nredeclare_class_template the existing template's constraints instead of\nthose of the friend declaration, which causes the constraint comparison\ncheck therein to trivially succeed and we fail to diagnose legitimate\nconstraint mismatches.\n\n\tPR c++/96830\n\ngcc/cp/ChangeLog:\n\n\t* pt.cc (redeclare_class_template): Add missing \"of\" in\n\tconstraint mismatch diagnostic.\n\t(tsubst_friend_class): For an already declared class template,\n\tsubstitute and pass the friend declaration's constraints to\n\tredeclare_class_template instead of passing the existing\n\ttemplate's constraints.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/cpp2a/concepts-friend14.C: New test.", "tree": {"sha": "aeffebd9f1719a3e4b55b6a655fa07a0f88de044", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeffebd9f1719a3e4b55b6a655fa07a0f88de044"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a/comments", "author": null, "committer": null, "parents": [{"sha": "578f633ddabd62b41beed635697c95ee2aaa39c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578f633ddabd62b41beed635697c95ee2aaa39c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578f633ddabd62b41beed635697c95ee2aaa39c0"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "eb153adf383d4a121264c99b215c4dc828f527c2", "filename": "gcc/cp/pt.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a/gcc%2Fcp%2Fpt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a/gcc%2Fcp%2Fpt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.cc?ref=ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a", "patch": "@@ -6377,7 +6377,7 @@ redeclare_class_template (tree type, tree parms, tree cons)\n   if (!cp_tree_equal (req1, req2))\n     {\n       auto_diagnostic_group d;\n-      error_at (input_location, \"redeclaration %q#D with different \"\n+      error_at (input_location, \"redeclaration of %q#D with different \"\n                                 \"constraints\", tmpl);\n       inform (DECL_SOURCE_LOCATION (tmpl),\n               \"original declaration appeared here\");\n@@ -11564,7 +11564,11 @@ tsubst_friend_class (tree friend_tmpl, tree args)\n \t\t\t\t\t\t tf_warning_or_error);\n           location_t saved_input_location = input_location;\n           input_location = DECL_SOURCE_LOCATION (friend_tmpl);\n-          tree cons = get_constraints (tmpl);\n+\t  tree cons = get_constraints (friend_tmpl);\n+\t  ++processing_template_decl;\n+\t  cons = tsubst_constraint_info (cons, args, tf_warning_or_error,\n+\t\t\t\t\t DECL_FRIEND_CONTEXT (friend_tmpl));\n+\t  --processing_template_decl;\n           redeclare_class_template (TREE_TYPE (tmpl), parms, cons);\n           input_location = saved_input_location;\n \t}"}, {"sha": "f46c7e4bdfb3bc69cb8afc0591faab9d84204a57", "filename": "gcc/testsuite/g++.dg/cpp2a/concepts-friend14.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconcepts-friend14.C?ref=ec62dc95c4f8776c9f4eff2a9a06f9aef6a2d98a", "patch": "@@ -0,0 +1,26 @@\n+// PR c++/96830\n+// { dg-do compile { target c++20 } }\n+\n+template<class T> requires true\n+struct A {\n+  template<class U> friend struct A;                   // { dg-error \"different constraints\" }\n+  template<class U> requires (!!true) friend struct A; // { dg-error \"different constraints\" }\n+};\n+\n+template<class T>\n+struct B {\n+  template<class U> requires true friend struct A;\n+  template<class U> requires true friend struct B; // { dg-error \"different constraints\" }\n+};\n+\n+template<class T> concept C = true;\n+\n+template<C T>\n+struct D {\n+  template<class U> friend struct D; // { dg-error \"different constraints\" }\n+  template<C U> friend struct D;\n+};\n+\n+template struct A<int>;\n+template struct B<int>;\n+template struct D<int>;"}]}