{"sha": "84ed897a9b5dcb28cc0cf8a85296e3628b2f0e17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRlZDg5N2E5YjVkY2IyOGNjMGNmOGE4NTI5NmUzNjI4YjJmMGUxNw==", "commit": {"author": {"name": "Nala Ginrut", "email": "mulei@gnu.org", "date": "2020-06-05T03:42:59Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-11-28T21:13:16Z"}, "message": "Remove redundant virtual functions in Resolution class\nAll these virtual functions are inherited from AST::ASTVisitor class", "tree": {"sha": "092b229220f967169d3f3e7159950f4c345bec9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/092b229220f967169d3f3e7159950f4c345bec9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84ed897a9b5dcb28cc0cf8a85296e3628b2f0e17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ed897a9b5dcb28cc0cf8a85296e3628b2f0e17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ed897a9b5dcb28cc0cf8a85296e3628b2f0e17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ed897a9b5dcb28cc0cf8a85296e3628b2f0e17/comments", "author": {"login": "NalaGinrut", "id": 19734, "node_id": "MDQ6VXNlcjE5NzM0", "avatar_url": "https://avatars.githubusercontent.com/u/19734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/NalaGinrut", "html_url": "https://github.com/NalaGinrut", "followers_url": "https://api.github.com/users/NalaGinrut/followers", "following_url": "https://api.github.com/users/NalaGinrut/following{/other_user}", "gists_url": "https://api.github.com/users/NalaGinrut/gists{/gist_id}", "starred_url": "https://api.github.com/users/NalaGinrut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/NalaGinrut/subscriptions", "organizations_url": "https://api.github.com/users/NalaGinrut/orgs", "repos_url": "https://api.github.com/users/NalaGinrut/repos", "events_url": "https://api.github.com/users/NalaGinrut/events{/privacy}", "received_events_url": "https://api.github.com/users/NalaGinrut/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ec260e760835e769cf73de1e46eb0ee20d6acef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec260e760835e769cf73de1e46eb0ee20d6acef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec260e760835e769cf73de1e46eb0ee20d6acef"}], "stats": {"total": 205, "additions": 0, "deletions": 205}, "files": [{"sha": "9eb4b95a6fcf31c5cb3ffd487639308938740831", "filename": "gcc/rust/analysis/rust-resolution.h", "status": "modified", "additions": 0, "deletions": 205, "changes": 205, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84ed897a9b5dcb28cc0cf8a85296e3628b2f0e17/gcc%2Frust%2Fanalysis%2Frust-resolution.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84ed897a9b5dcb28cc0cf8a85296e3628b2f0e17/gcc%2Frust%2Fanalysis%2Frust-resolution.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-resolution.h?ref=84ed897a9b5dcb28cc0cf8a85296e3628b2f0e17", "patch": "@@ -20,211 +20,6 @@ class Resolution : public AST::ASTVisitor\n     typeScope.Pop ();\n   };\n \n-  // visitor impl\n-  // rust-ast.h\n-  // virtual void visit(AttrInput& attr_input);\n-  // virtual void visit(TokenTree& token_tree);\n-  // virtual void visit(MacroMatch& macro_match);\n-  virtual void visit (AST::Token &tok) = 0;\n-  virtual void visit (AST::DelimTokenTree &delim_tok_tree) = 0;\n-  virtual void visit (AST::AttrInputMetaItemContainer &input) = 0;\n-  // virtual void visit(MetaItem& meta_item) = 0;\n-  // virtual void vsit(Stmt& stmt) = 0;\n-  // virtual void visit(Expr& expr) = 0;\n-  virtual void visit (AST::IdentifierExpr &ident_expr) = 0;\n-  // virtual void visit(Pattern& pattern) = 0;\n-  // virtual void visit(Type& type) = 0;\n-  // virtual void visit(TypeParamBound& type_param_bound) = 0;\n-  virtual void visit (AST::Lifetime &lifetime) = 0;\n-  // virtual void visit(GenericParam& generic_param) = 0;\n-  virtual void visit (AST::LifetimeParam &lifetime_param) = 0;\n-  // virtual void visit(TraitItem& trait_item) = 0;\n-  // virtual void visit(InherentImplItem& inherent_impl_item) = 0;\n-  // virtual void visit(TraitImplItem& trait_impl_item) = 0;\n-  virtual void visit (AST::MacroInvocationSemi &macro) = 0;\n-\n-  // rust-path.h\n-  virtual void visit (AST::PathInExpression &path) = 0;\n-  virtual void visit (AST::TypePathSegment &segment) = 0;\n-  virtual void visit (AST::TypePathSegmentGeneric &segment) = 0;\n-  virtual void visit (AST::TypePathSegmentFunction &segment) = 0;\n-  virtual void visit (AST::TypePath &path) = 0;\n-  virtual void visit (AST::QualifiedPathInExpression &path) = 0;\n-  virtual void visit (AST::QualifiedPathInType &path) = 0;\n-\n-  // rust-expr.h\n-  virtual void visit (AST::LiteralExpr &expr) = 0;\n-  virtual void visit (AST::AttrInputLiteral &attr_input) = 0;\n-  virtual void visit (AST::MetaItemLitExpr &meta_item) = 0;\n-  virtual void visit (AST::MetaItemPathLit &meta_item) = 0;\n-  virtual void visit (AST::BorrowExpr &expr) = 0;\n-  virtual void visit (AST::DereferenceExpr &expr) = 0;\n-  virtual void visit (AST::ErrorPropagationExpr &expr) = 0;\n-  virtual void visit (AST::NegationExpr &expr) = 0;\n-  virtual void visit (AST::ArithmeticOrLogicalExpr &expr) = 0;\n-  virtual void visit (AST::ComparisonExpr &expr) = 0;\n-  virtual void visit (AST::LazyBooleanExpr &expr) = 0;\n-  virtual void visit (AST::TypeCastExpr &expr) = 0;\n-  virtual void visit (AST::AssignmentExpr &expr) = 0;\n-  virtual void visit (AST::CompoundAssignmentExpr &expr) = 0;\n-  virtual void visit (AST::GroupedExpr &expr) = 0;\n-  // virtual void visit(ArrayElems& elems) = 0;\n-  virtual void visit (AST::ArrayElemsValues &elems) = 0;\n-  virtual void visit (AST::ArrayElemsCopied &elems) = 0;\n-  virtual void visit (AST::ArrayExpr &expr) = 0;\n-  virtual void visit (AST::ArrayIndexExpr &expr) = 0;\n-  virtual void visit (AST::TupleExpr &expr) = 0;\n-  virtual void visit (AST::TupleIndexExpr &expr) = 0;\n-  virtual void visit (AST::StructExprStruct &expr) = 0;\n-  // virtual void visit(StructExprField& field) = 0;\n-  virtual void visit (AST::StructExprFieldIdentifier &field) = 0;\n-  virtual void visit (AST::StructExprFieldIdentifierValue &field) = 0;\n-  virtual void visit (AST::StructExprFieldIndexValue &field) = 0;\n-  virtual void visit (AST::StructExprStructFields &expr) = 0;\n-  virtual void visit (AST::StructExprStructBase &expr) = 0;\n-  virtual void visit (AST::StructExprTuple &expr) = 0;\n-  virtual void visit (AST::StructExprUnit &expr) = 0;\n-  // virtual void visit(EnumExprField& field) = 0;\n-  virtual void visit (AST::EnumExprFieldIdentifier &field) = 0;\n-  virtual void visit (AST::EnumExprFieldIdentifierValue &field) = 0;\n-  virtual void visit (AST::EnumExprFieldIndexValue &field) = 0;\n-  virtual void visit (AST::EnumExprStruct &expr) = 0;\n-  virtual void visit (AST::EnumExprTuple &expr) = 0;\n-  virtual void visit (AST::EnumExprFieldless &expr) = 0;\n-  virtual void visit (AST::CallExpr &expr) = 0;\n-  virtual void visit (AST::MethodCallExpr &expr) = 0;\n-  virtual void visit (AST::FieldAccessExpr &expr) = 0;\n-  virtual void visit (AST::ClosureExprInner &expr) = 0;\n-  virtual void visit (AST::BlockExpr &expr) = 0;\n-  virtual void visit (AST::ClosureExprInnerTyped &expr) = 0;\n-  virtual void visit (AST::ContinueExpr &expr) = 0;\n-  virtual void visit (AST::BreakExpr &expr) = 0;\n-  virtual void visit (AST::RangeFromToExpr &expr) = 0;\n-  virtual void visit (AST::RangeFromExpr &expr) = 0;\n-  virtual void visit (AST::RangeToExpr &expr) = 0;\n-  virtual void visit (AST::RangeFullExpr &expr) = 0;\n-  virtual void visit (AST::RangeFromToInclExpr &expr) = 0;\n-  virtual void visit (AST::RangeToInclExpr &expr) = 0;\n-  virtual void visit (AST::ReturnExpr &expr) = 0;\n-  virtual void visit (AST::UnsafeBlockExpr &expr) = 0;\n-  virtual void visit (AST::LoopExpr &expr) = 0;\n-  virtual void visit (AST::WhileLoopExpr &expr) = 0;\n-  virtual void visit (AST::WhileLetLoopExpr &expr) = 0;\n-  virtual void visit (AST::ForLoopExpr &expr) = 0;\n-  virtual void visit (AST::IfExpr &expr) = 0;\n-  virtual void visit (AST::IfExprConseqElse &expr) = 0;\n-  virtual void visit (AST::IfExprConseqIf &expr) = 0;\n-  virtual void visit (AST::IfExprConseqIfLet &expr) = 0;\n-  virtual void visit (AST::IfLetExpr &expr) = 0;\n-  virtual void visit (AST::IfLetExprConseqElse &expr) = 0;\n-  virtual void visit (AST::IfLetExprConseqIf &expr) = 0;\n-  virtual void visit (AST::IfLetExprConseqIfLet &expr) = 0;\n-  // virtual void visit(MatchCase& match_case) = 0;\n-  virtual void visit (AST::MatchCaseBlockExpr &match_case) = 0;\n-  virtual void visit (AST::MatchCaseExpr &match_case) = 0;\n-  virtual void visit (AST::MatchExpr &expr) = 0;\n-  virtual void visit (AST::AwaitExpr &expr) = 0;\n-  virtual void visit (AST::AsyncBlockExpr &expr) = 0;\n-\n-  // rust-item.h\n-  virtual void visit (AST::TypeParam &param) = 0;\n-  // virtual void visit(WhereClauseItem& item) = 0;\n-  virtual void visit (AST::LifetimeWhereClauseItem &item) = 0;\n-  virtual void visit (AST::TypeBoundWhereClauseItem &item) = 0;\n-  virtual void visit (AST::Method &method) = 0;\n-  virtual void visit (AST::ModuleBodied &module) = 0;\n-  virtual void visit (AST::ModuleNoBody &module) = 0;\n-  virtual void visit (AST::ExternCrate &crate) = 0;\n-  // virtual void visit(UseTree& use_tree) = 0;\n-  virtual void visit (AST::UseTreeGlob &use_tree) = 0;\n-  virtual void visit (AST::UseTreeList &use_tree) = 0;\n-  virtual void visit (AST::UseTreeRebind &use_tree) = 0;\n-  virtual void visit (AST::UseDeclaration &use_decl) = 0;\n-  virtual void visit (AST::Function &function) = 0;\n-  virtual void visit (AST::TypeAlias &type_alias) = 0;\n-  virtual void visit (AST::StructStruct &struct_item) = 0;\n-  virtual void visit (AST::TupleStruct &tuple_struct) = 0;\n-  virtual void visit (AST::EnumItem &item) = 0;\n-  virtual void visit (AST::EnumItemTuple &item) = 0;\n-  virtual void visit (AST::EnumItemStruct &item) = 0;\n-  virtual void visit (AST::EnumItemDiscriminant &item) = 0;\n-  virtual void visit (AST::Enum &enum_item) = 0;\n-  virtual void visit (AST::Union &union_item) = 0;\n-  virtual void visit (AST::ConstantItem &const_item) = 0;\n-  virtual void visit (AST::StaticItem &static_item) = 0;\n-  virtual void visit (AST::TraitItemFunc &item) = 0;\n-  virtual void visit (AST::TraitItemMethod &item) = 0;\n-  virtual void visit (AST::TraitItemConst &item) = 0;\n-  virtual void visit (AST::TraitItemType &item) = 0;\n-  virtual void visit (AST::Trait &trait) = 0;\n-  virtual void visit (AST::InherentImpl &impl) = 0;\n-  virtual void visit (AST::TraitImpl &impl) = 0;\n-  // virtual void visit(ExternalItem& item) = 0;\n-  virtual void visit (AST::ExternalStaticItem &item) = 0;\n-  virtual void visit (AST::ExternalFunctionItem &item) = 0;\n-  virtual void visit (AST::ExternBlock &block) = 0;\n-\n-  // rust-macro.h\n-  virtual void visit (AST::MacroMatchFragment &match) = 0;\n-  virtual void visit (AST::MacroMatchRepetition &match) = 0;\n-  virtual void visit (AST::MacroMatcher &matcher) = 0;\n-  virtual void visit (AST::MacroRulesDefinition &rules_def) = 0;\n-  virtual void visit (AST::MacroInvocation &macro_invoc) = 0;\n-  virtual void visit (AST::MetaItemPath &meta_item) = 0;\n-  virtual void visit (AST::MetaItemSeq &meta_item) = 0;\n-  virtual void visit (AST::MetaWord &meta_item) = 0;\n-  virtual void visit (AST::MetaNameValueStr &meta_item) = 0;\n-  virtual void visit (AST::MetaListPaths &meta_item) = 0;\n-  virtual void visit (AST::MetaListNameValueStr &meta_item) = 0;\n-\n-  // rust-pattern.h\n-  virtual void visit (AST::LiteralPattern &pattern) = 0;\n-  virtual void visit (AST::IdentifierPattern &pattern) = 0;\n-  virtual void visit (AST::WildcardPattern &pattern) = 0;\n-  // virtual void visit(RangePatternBound& bound) = 0;\n-  virtual void visit (AST::RangePatternBoundLiteral &bound) = 0;\n-  virtual void visit (AST::RangePatternBoundPath &bound) = 0;\n-  virtual void visit (AST::RangePatternBoundQualPath &bound) = 0;\n-  virtual void visit (AST::RangePattern &pattern) = 0;\n-  virtual void visit (AST::ReferencePattern &pattern) = 0;\n-  // virtual void visit(StructPatternField& field) = 0;\n-  virtual void visit (AST::StructPatternFieldTuplePat &field) = 0;\n-  virtual void visit (AST::StructPatternFieldIdentPat &field) = 0;\n-  virtual void visit (AST::StructPatternFieldIdent &field) = 0;\n-  virtual void visit (AST::StructPattern &pattern) = 0;\n-  // virtual void visit(TupleStructItems& tuple_items) = 0;\n-  virtual void visit (AST::TupleStructItemsNoRange &tuple_items) = 0;\n-  virtual void visit (AST::TupleStructItemsRange &tuple_items) = 0;\n-  virtual void visit (AST::TupleStructPattern &pattern) = 0;\n-  // virtual void visit(TuplePatternItems& tuple_items) = 0;\n-  virtual void visit (AST::TuplePatternItemsMultiple &tuple_items) = 0;\n-  virtual void visit (AST::TuplePatternItemsRanged &tuple_items) = 0;\n-  virtual void visit (AST::TuplePattern &pattern) = 0;\n-  virtual void visit (AST::GroupedPattern &pattern) = 0;\n-  virtual void visit (AST::SlicePattern &pattern) = 0;\n-\n-  // rust-stmt.h\n-  virtual void visit (AST::EmptyStmt &stmt) = 0;\n-  virtual void visit (AST::LetStmt &stmt) = 0;\n-  virtual void visit (AST::ExprStmtWithoutBlock &stmt) = 0;\n-  virtual void visit (AST::ExprStmtWithBlock &stmt) = 0;\n-\n-  // rust-type.h\n-  virtual void visit (AST::TraitBound &bound) = 0;\n-  virtual void visit (AST::ImplTraitType &type) = 0;\n-  virtual void visit (AST::TraitObjectType &type) = 0;\n-  virtual void visit (AST::ParenthesisedType &type) = 0;\n-  virtual void visit (AST::ImplTraitTypeOneBound &type) = 0;\n-  virtual void visit (AST::TraitObjectTypeOneBound &type) = 0;\n-  virtual void visit (AST::TupleType &type) = 0;\n-  virtual void visit (AST::NeverType &type) = 0;\n-  virtual void visit (AST::RawPointerType &type) = 0;\n-  virtual void visit (AST::ReferenceType &type) = 0;\n-  virtual void visit (AST::ArrayType &type) = 0;\n-  virtual void visit (AST::SliceType &type) = 0;\n-  virtual void visit (AST::InferredType &type) = 0;\n-  virtual void visit (AST::BareFunctionType &type) = 0;\n-\n private:\n   virtual bool go () = 0;\n "}]}