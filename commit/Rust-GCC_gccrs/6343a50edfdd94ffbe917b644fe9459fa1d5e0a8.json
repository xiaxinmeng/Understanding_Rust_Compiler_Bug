{"sha": "6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM0M2E1MGVkZmRkOTRmZmJlOTE3YjY0NGZlOTQ1OWZhMWQ1ZTBhOA==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@bitmover.com", "date": "1999-10-05T05:00:55Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "1999-10-05T05:00:55Z"}, "message": "resource.c (find_free_register): Mark class_str argument const.\n\n1999-10-04 21:58 -0700  Zack Weinberg  <zack@bitmover.com>\n\n\t* resource.c (find_free_register): Mark class_str argument const.\n\t* resource.h: Update prototype to match.\n\n\t* i386.h (PREDICATE_CODES): Add entry for long_memory_operand.\n\t* i386.md: Give all anonymous insns names.\n\nFrom-SVN: r29821", "tree": {"sha": "84db2c8d3e494ba0e40ff901c9a45afea2588aaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84db2c8d3e494ba0e40ff901c9a45afea2588aaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/comments", "author": null, "committer": null, "parents": [{"sha": "ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff54d46bc942630f0f76f093d7cc4d2e9b5b7c70"}], "stats": {"total": 155, "additions": 84, "deletions": 71}, "files": [{"sha": "6e281153f848bb8b066edbe30c239209cf2a56b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "patch": "@@ -1,3 +1,11 @@\n+1999-10-04 21:58 -0700  Zack Weinberg  <zack@bitmover.com>\n+\n+\t* resource.c (find_free_register): Mark class_str argument const.\n+\t* resource.h: Update prototype to match.\n+\n+\t* i386.h (PREDICATE_CODES): Add entry for long_memory_operand.\n+\t* i386.md: Give all anonymous insns names.\n+\n Mon Oct  4 21:12:02 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* flow.c (merge_blocks): Avoid assing BASIC_BLOCK for non-existent"}, {"sha": "4ad4ca9e7dba4304b8503d220fbf69d6840d02ff", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "patch": "@@ -2395,7 +2395,8 @@ do { long l;\t\t\t\t\t\t\\\n \t\t\t\t LSHIFTRT, ROTATERT}},\t\t\t\\\n   {\"memory_displacement_operand\", {MEM}},\t\t\t\t\\\n   {\"cmpsi_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\t\\\n-\t\t     LABEL_REF, SUBREG, REG, MEM, AND}},\n+\t\t     LABEL_REF, SUBREG, REG, MEM, AND}},\t\t\\\n+  {\"long_memory_operand\", {MEM}},\n \f\n /* Variables in i386.c */\n extern const char *ix86_cpu_string;\t\t/* for -mcpu=<xxx> */"}, {"sha": "ddb106bf4f95a97a1279236d3fdcbf97349bbde8", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 72, "deletions": 68, "changes": 140, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "patch": "@@ -70,6 +70,10 @@\n ;; 9  This is an `fnstsw' operation.\n ;; 10 This is a `sahf' operation.\n ;; 11 This is a `fstcw' operation\n+;;\n+;; Insns whose names begin with \"x86_\" are emitted by gen_FOO calls\n+;; from i386.c.\n+\n \f\n ;; Processor type.  This attribute must exactly match the processor_type\n ;; enumeration in i386.h.\n@@ -953,7 +957,7 @@\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"fcmp\")])\n \n-(define_insn \"\"\n+(define_insn \"*cmpfp_2_sf_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n@@ -972,7 +976,7 @@\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"fcmp\")])\n \n-(define_insn \"\"\n+(define_insn \"*cmpfp_2_df_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n@@ -991,7 +995,7 @@\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"fcmp\")])\n \n-(define_insn \"\"\n+(define_insn \"*cmpfp_2_xf_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n@@ -1012,7 +1016,7 @@\n   \"* return output_fp_compare (insn, operands, 0, 1);\"\n   [(set_attr \"type\" \"fcmp\")])\n \n-(define_insn \"\"\n+(define_insn \"*cmpfp_2u_1\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFPU\n@@ -1031,7 +1035,7 @@\n ;; can get rid of this once we teach reload to do memory input reloads \n ;; via pushes.\n \n-(define_insn \"\"\n+(define_insn \"*ficom_1\"\n   [(set (reg:CCFP 18)\n \t(compare:CCFP\n \t  (match_operand 0 \"register_operand\" \"f,f\")\n@@ -2372,7 +2376,7 @@\n ;; emit moves.\n \n ;; %%% Kill these when call knows how to work out a DFmode push earlier. \n-(define_insn \"\"\n+(define_insn \"*dummy_extendsfdf2\"\n   [(set (match_operand:DF 0 \"push_operand\" \"=<\")\n \t(float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"f\")))]\n   \"0\"\n@@ -2385,7 +2389,7 @@\n   [(set (reg:SI 7) (plus:SI (reg:SI 7) (const_int -8)))\n    (set (mem:DF (reg:SI 7)) (float_extend:DF (match_dup 1)))])\n \n-(define_insn \"\"\n+(define_insn \"*dummy_extendsfxf2\"\n   [(set (match_operand:XF 0 \"push_operand\" \"=<\")\n \t(float_extend:XF (match_operand:SF 1 \"nonimmediate_operand\" \"f\")))]\n   \"0\"\n@@ -2398,7 +2402,7 @@\n   [(set (reg:SI 7) (plus:SI (reg:SI 7) (const_int -12)))\n    (set (mem:DF (reg:SI 7)) (float_extend:XF (match_dup 1)))])\n \n-(define_insn \"\"\n+(define_insn \"*dummy_extenddfxf2\"\n   [(set (match_operand:XF 0 \"push_operand\" \"=<\")\n \t(float_extend:XF (match_operand:DF 1 \"nonimmediate_operand\" \"f\")))]\n   \"0\"\n@@ -3117,7 +3121,7 @@\n   [(set_attr \"type\" \"alu\")])\n \n ;; %%% Conditionally split these post-reload for better scheduling.\n-(define_insn \"\"\n+(define_insn \"*addsi_lea_1\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (plus:SI (plus:SI (match_operand:SI 1 \"register_operand\" \"r\")\n \t\t\t  (match_operand:SI 2 \"register_operand\" \"%r\"))\n@@ -3130,7 +3134,7 @@\n }\"\n   [(set_attr \"type\" \"lea\")])\n \n-(define_insn \"\"\n+(define_insn \"*addsi_lea_2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (plus:SI (mult:SI (match_operand:SI 1 \"reg_no_sp_operand\" \"r\")\n \t\t\t  (match_operand:SI 2 \"const248_operand\" \"I\"))\n@@ -3143,7 +3147,7 @@\n }\"\n   [(set_attr \"type\" \"lea\")])\n \n-(define_insn \"\"\n+(define_insn \"*addsi_lea_3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n         (plus:SI (plus:SI (mult:SI (match_operand:SI 1 \"reg_no_sp_operand\" \"r\")\n \t\t\t\t   (match_operand:SI 2 \"const248_operand\" \"I\"))\n@@ -3855,7 +3859,7 @@\n   \"{cltd|cdq}\\;idiv{l}\\\\t%2\"\n   [(set_attr \"type\" \"multi\")])\n \n-(define_insn \"\"\n+(define_insn \"*divmodsi_noext\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n \t(div:SI (match_operand:SI 1 \"register_operand\" \"A\")\n \t\t(match_operand:SI 2 \"nonimmediate_operand\" \"rm\")))\n@@ -3920,7 +3924,7 @@\n   \"xor{l}\\\\t%3, %3\\;div{l}\\\\t%2\"\n   [(set_attr \"type\" \"multi\")])\n \n-(define_insn \"\"\n+(define_insn \"*udivmodsi4_noext\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=a\")\n \t(udiv:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t\t (match_operand:SI 2 \"nonimmediate_operand\" \"rm\")))\n@@ -3964,7 +3968,7 @@\n   \"\"\n   \"operands[4] = gen_reg_rtx (HImode);\")\n \n-(define_insn \"*udivmodhi_1\"\n+(define_insn \"*udivmodhi_noext\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(udiv:HI (match_operand:HI 1 \"register_operand\" \"0\")\n \t\t (match_operand:HI 2 \"nonimmediate_operand\" \"rm\")))\n@@ -4084,7 +4088,7 @@\n   [(set_attr \"type\" \"icmp\")])\n \n ;; Combine likes to form bit extractions for some tests.  Humor it.\n-(define_insn \"\"\n+(define_insn \"*testqi_ext_3\"\n   [(set (reg:CCNO 17)\n         (compare:CCNO (zero_extract:SI\n \t\t\t(match_operand 0 \"nonimmediate_operand\" \"rm\")\n@@ -4693,7 +4697,7 @@\n   \"neg{l}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n-(define_insn \"\"\n+(define_insn \"*negsi2_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO (neg:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\"))\n \t\t (const_int 0)))\n@@ -4703,7 +4707,7 @@\n   \"neg{l}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n-(define_insn \"\"\n+(define_insn \"*negsi2_cmp\"\n   [(set (reg:CC 17)\n \t(compare:CC (neg:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\"))\n \t\t (const_int 0)))\n@@ -4721,7 +4725,7 @@\n   \"neg{w}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n-(define_insn \"\"\n+(define_insn \"*neghi2_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO (neg:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\"))\n \t\t (const_int 0)))\n@@ -4731,7 +4735,7 @@\n   \"neg{w}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n-(define_insn \"\"\n+(define_insn \"*neghi2_cmp\"\n   [(set (reg:CC 17)\n \t(compare:CC (neg:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\"))\n \t\t (const_int 0)))\n@@ -4749,7 +4753,7 @@\n   \"neg{b}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n-(define_insn \"\"\n+(define_insn \"*negqi2_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO (neg:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0\"))\n \t\t (const_int 0)))\n@@ -4759,7 +4763,7 @@\n   \"neg{b}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n-(define_insn \"\"\n+(define_insn \"*negqi2_cmp\"\n   [(set (reg:CC 17)\n \t(compare:CC (neg:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0\"))\n \t\t (const_int 0)))\n@@ -4785,7 +4789,7 @@\n   [(set_attr \"type\" \"fsgn\")\n    (set_attr \"ppro_uops\" \"few\")])\n \n-(define_insn \"\"\n+(define_insn \"*negextendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(neg:DF (float_extend:DF\n \t\t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n@@ -4802,7 +4806,7 @@\n   [(set_attr \"type\" \"fsgn\")\n    (set_attr \"ppro_uops\" \"few\")])\n \n-(define_insn \"\"\n+(define_insn \"*negextenddfxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(neg:XF (float_extend:XF\n \t\t  (match_operand:DF 1 \"register_operand\" \"0\"))))]\n@@ -4811,7 +4815,7 @@\n   [(set_attr \"type\" \"fsgn\")\n    (set_attr \"ppro_uops\" \"few\")])\n \n-(define_insn \"\"\n+(define_insn \"*negextendsfxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(neg:XF (float_extend:XF\n \t\t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n@@ -4836,7 +4840,7 @@\n   \"fabs\"\n   [(set_attr \"type\" \"fsgn\")])\n \n-(define_insn \"\"\n+(define_insn \"*absextendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(abs:DF (float_extend:DF\n \t\t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n@@ -4851,15 +4855,15 @@\n   \"fabs\"\n   [(set_attr \"type\" \"fsgn\")])\n \n-(define_insn \"\"\n+(define_insn \"*absextenddfxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(abs:XF (float_extend:XF\n \t  (match_operand:DF 1 \"register_operand\" \"0\"))))]\n   \"TARGET_80387\"\n   \"fabs\"\n   [(set_attr \"type\" \"fsgn\")])\n \n-(define_insn \"\"\n+(define_insn \"*absextendsfxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(abs:XF (float_extend:XF\n \t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n@@ -4876,7 +4880,7 @@\n   \"not{l}\\\\t%0\"\n   [(set_attr \"type\" \"negnot\")])\n \n-(define_insn \"\"\n+(define_insn \"*one_cmplsi2_1\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO (not:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\"))\n \t\t    (const_int 0)))\n@@ -4917,7 +4921,7 @@\n   \"operands[0] = gen_lowpart (SImode, operands[0]);\n    operands[1] = gen_lowpart (SImode, operands[1]);\")\n \n-(define_insn \"\"\n+(define_insn \"*one_cmplhi2_1\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO (not:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\"))\n \t\t      (const_int 0)))\n@@ -4951,7 +4955,7 @@\n    not{l}\\\\t%k0\"\n   [(set_attr \"type\" \"negnot\")])\n \n-(define_insn \"\"\n+(define_insn \"*one_cmplqi2_1\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO (not:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0\"))\n \t\t    (const_int 0)))\n@@ -5156,7 +5160,7 @@\n \t   ]\n \t   (const_string \"ishift\")))])\n \n-(define_insn \"\"\n+(define_insn \"*ashlsi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (ashift:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\")\n@@ -5232,7 +5236,7 @@\n   \"operands[0] = gen_lowpart (SImode, operands[0]);\n    operands[1] = gen_lowpart (SImode, operands[1]);\")\n \n-(define_insn \"\"\n+(define_insn \"*ashlhi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (ashift:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\")\n@@ -5311,7 +5315,7 @@\n \t   ]\n \t   (const_string \"ishift\")))])\n \n-(define_insn \"\"\n+(define_insn \"*ashlqi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (ashift:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0\")\n@@ -5468,7 +5472,7 @@\n    sar{l}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*ashrsi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (ashiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5493,7 +5497,7 @@\n    sar{w}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*ashrhi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (ashiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5518,7 +5522,7 @@\n    sar{b}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*ashrqi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (ashiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5600,7 +5604,7 @@\n    shr{l}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*lshrsi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5625,7 +5629,7 @@\n    shr{w}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*lshrhi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (lshiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5650,7 +5654,7 @@\n    shr{b}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*lshrqi2_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (lshiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5677,7 +5681,7 @@\n    rol{l}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*rotlsi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (rotate:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5702,7 +5706,7 @@\n    rol{w}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*rotlhi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (rotate:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5727,7 +5731,7 @@\n    rol{b}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*rotlqi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (rotate:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5752,7 +5756,7 @@\n    ror{l}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*rotrsi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (rotatert:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5777,7 +5781,7 @@\n    ror{w}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*rotrhi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (rotatert:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -5802,7 +5806,7 @@\n    ror{b}\\\\t{%b2, %0|%0, %b2}\"\n   [(set_attr \"type\" \"ishift\")])\n \n-(define_insn \"\"\n+(define_insn \"*rotrqi3_cmpno\"\n   [(set (reg:CCNO 17)\n \t(compare:CCNO\n \t  (rotatert:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0,0\")\n@@ -6224,7 +6228,7 @@\n   current_function_uses_pic_offset_table = 1;\n }\")\n \n-(define_insn \"\"\n+(define_insn \"*tablejump_pic\"\n   [(set (pc) (match_operand:SI 0 \"nonimmediate_operand\" \"rm\"))\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\"\n@@ -6250,7 +6254,7 @@\n   \"TARGET_USE_LOOP\"\n   \"\")\n \n-(define_insn \"\"\n+(define_insn \"*dbra_ne\"\n   [(set (pc)\n \t(if_then_else (ne (match_operand:SI 1 \"register_operand\" \"c,*r,*r\")\n \t\t\t  (const_int 1))\n@@ -6282,7 +6286,7 @@\n \t\t      (const_int 2)\n \t\t      (const_int 16)))])\n \n-(define_insn \"\"\n+(define_insn \"*dbra_ge\"\n   [(set (pc)\n \t(if_then_else (ge (match_operand:SI 1 \"register_operand\" \"c,*r,*r\")\n \t\t\t  (const_int 0))\n@@ -6448,7 +6452,7 @@\n \t\t\tcopy_to_mode_reg (Pmode, XEXP (operands[0], 0)));\n }\")\n \n-(define_insn \"\"\n+(define_insn \"*call_pop_pic\"\n   [(call (match_operand:QI 0 \"call_insn_operand\" \"m\")\n \t (match_operand:SI 1 \"general_operand\" \"g\"))\n    (set (reg:SI 7) (plus:SI (reg:SI 7)\n@@ -6464,7 +6468,7 @@\n }\"\n   [(set_attr \"type\" \"call\")])\n \n-(define_insn \"\"\n+(define_insn \"*call_pop_pic2\"\n   [(call (match_operand:QI 0 \"constant_call_address_operand\" \"\")\n          (match_operand:SI 1 \"general_operand\" \"g\"))\n    (set (reg:SI 7) (plus:SI (reg:SI 7)\n@@ -6496,7 +6500,7 @@\n \t\t\tcopy_to_mode_reg (Pmode, XEXP (operands[0], 0)));\n }\")\n \n-(define_insn \"\"\n+(define_insn \"*call_pic\"\n   [(call (match_operand:QI 0 \"call_insn_operand\" \"m\")\n \t (match_operand:SI 1 \"general_operand\" \"g\"))]\n   ;; Operand 1 not used on the i386.\n@@ -6511,7 +6515,7 @@\n }\"\n   [(set_attr \"type\" \"call\")])\n \n-(define_insn \"\"\n+(define_insn \"*call_pic2\"\n   [(call (match_operand:QI 0 \"constant_call_address_operand\" \"\")\n          (match_operand:SI 1 \"general_operand\" \"g\"))]\n   \"!HALF_PIC_P ()\"\n@@ -6553,7 +6557,7 @@\n \t\t\tcopy_to_mode_reg (Pmode, XEXP (operands[1], 0)));\n }\")\n \n-(define_insn \"\"\n+(define_insn \"*call_value_pop_pic\"\n   [(set (match_operand 0 \"\" \"=rf\")\n \t(call (match_operand:QI 1 \"call_insn_operand\" \"m\")\n \t      (match_operand:SI 2 \"general_operand\" \"g\")))\n@@ -6570,7 +6574,7 @@\n }\"\n   [(set_attr \"type\" \"callv\")])\n \n-(define_insn \"\"\n+(define_insn \"*call_value_pop_pic2\"\n   [(set (match_operand 0 \"\" \"=rf\")\n \t(call (match_operand:QI 1 \"constant_call_address_operand\" \"\")\n \t      (match_operand:SI 2 \"general_operand\" \"g\")))\n@@ -6604,7 +6608,7 @@\n \t\t\tcopy_to_mode_reg (Pmode, XEXP (operands[1], 0)));\n }\")\n \n-(define_insn \"\"\n+(define_insn \"*call_value_pic\"\n   [(set (match_operand 0 \"\" \"=rf\")\n \t(call (match_operand:QI 1 \"call_insn_operand\" \"m\")\n \t      (match_operand:SI 2 \"general_operand\" \"g\")))]\n@@ -6620,7 +6624,7 @@\n }\"\n   [(set_attr \"type\" \"callv\")])\n \n-(define_insn \"\"\n+(define_insn \"*call_value_pic2\"\n   [(set (match_operand 0 \"\" \"=rf\")\n \t(call (match_operand:QI 1 \"constant_call_address_operand\" \"\")\n \t      (match_operand:SI 2 \"general_operand\" \"g\")))]\n@@ -7158,7 +7162,7 @@\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")])\n \n-(define_insn \"\"\n+(define_insn \"*sqrtextendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(sqrt:DF (float_extend:DF\n \t\t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n@@ -7174,15 +7178,15 @@\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")])\n \n-(define_insn \"\"\n+(define_insn \"*sqrtextenddfxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(sqrt:XF (float_extend:XF\n \t\t  (match_operand:DF 1 \"register_operand\" \"0\"))))]\n   \"! TARGET_NO_FANCY_MATH_387 && TARGET_80387\"\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")])\n \n-(define_insn \"\"\n+(define_insn \"*sqrtextendsfxf2\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(sqrt:XF (float_extend:XF\n \t\t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n@@ -7204,7 +7208,7 @@\n   \"fsin\"\n   [(set_attr \"type\" \"fpspc\")])\n \n-(define_insn \"\"\n+(define_insn \"*sinextendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(unspec:DF [(float_extend:DF\n \t\t     (match_operand:SF 1 \"register_operand\" \"0\"))] 1))]\n@@ -7233,7 +7237,7 @@\n   \"fcos\"\n   [(set_attr \"type\" \"fpspc\")])\n \n-(define_insn \"\"\n+(define_insn \"*cosextendsfdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(unspec:DF [(float_extend:DF\n \t\t     (match_operand:SF 1 \"register_operand\" \"0\"))] 2))]\n@@ -7594,7 +7598,7 @@\n    (set_attr \"imm_disp\" \"false\")\n    (set_attr \"length\" \"2\")])\n \n-(define_insn \"\"\n+(define_insn \"*movsicc_noc\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(if_then_else:SI (match_operator 1 \"no_comparison_operator\" \n \t\t\t\t[(reg 17) (const_int 0)])\n@@ -7606,7 +7610,7 @@\n    cmov%c1\\\\t{%3, %0|%0, %3}\"\n   [(set_attr \"type\" \"icmov\")])\n \n-(define_insn \"\"\n+(define_insn \"*movsicc_c\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n \t(if_then_else:SI (match_operator 1 \"comparison_operator\" \n \t\t\t\t[(reg:CC 17) (const_int 0)])\n@@ -7626,7 +7630,7 @@\n   \"TARGET_CMOVE\"\n   \"if (!ix86_expand_int_movcc (operands)) FAIL; DONE;\")\n \n-(define_insn \"\"\n+(define_insn \"*movhicc_noc\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n \t(if_then_else:HI (match_operator 1 \"no_comparison_operator\" \n \t\t\t\t[(reg 17) (const_int 0)])\n@@ -7638,7 +7642,7 @@\n    cmov%c1\\\\t{%3, %0|%0, %3}\"\n   [(set_attr \"type\" \"icmov\")])\n \n-(define_insn \"\"\n+(define_insn \"*movhicc_c\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=r,r\")\n \t(if_then_else:HI (match_operator 1 \"comparison_operator\" \n \t\t\t\t[(reg:CC 17) (const_int 0)])\n@@ -7671,7 +7675,7 @@\n   \"TARGET_CMOVE\"\n   \"if (! ix86_expand_fp_movcc (operands)) FAIL; DONE;\")\n \n-(define_insn \"\"\n+(define_insn \"*movsfcc_1\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:SF (match_operator 1 \"fcmov_comparison_operator\" \n \t\t\t\t[(reg 17) (const_int 0)])\n@@ -7691,7 +7695,7 @@\n   \"TARGET_CMOVE\"\n   \"if (! ix86_expand_fp_movcc (operands)) FAIL; DONE;\")\n \n-(define_insn \"\"\n+(define_insn \"*movdfcc_1\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:DF (match_operator 1 \"fcmov_comparison_operator\" \n \t\t\t\t[(reg 17) (const_int 0)])\n@@ -7711,7 +7715,7 @@\n   \"TARGET_CMOVE\"\n   \"if (! ix86_expand_fp_movcc (operands)) FAIL; DONE;\")\n \n-(define_insn \"\"\n+(define_insn \"*movxfcc_1\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f,f\")\n \t(if_then_else:XF (match_operator 1 \"fcmov_comparison_operator\" \n \t\t\t\t[(reg 17) (const_int 0)])"}, {"sha": "e40619efb950b82a519345dbb4f50179696cb9bd", "filename": "gcc/resource.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "patch": "@@ -1249,7 +1249,7 @@ mark_end_of_function_resources (trial, include_delayed_effects)\n rtx\n find_free_register (current_insn, last_insn, class_str, mode, reg_set)\n      rtx current_insn, last_insn;\n-     char *class_str;\n+     const char *class_str;\n      int mode;\n      HARD_REG_SET *reg_set;\n {"}, {"sha": "ea7c4b28c8808ae5e0b2281764d5de4a481b534a", "filename": "gcc/resource.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2Fresource.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6343a50edfdd94ffbe917b644fe9459fa1d5e0a8/gcc%2Fresource.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.h?ref=6343a50edfdd94ffbe917b644fe9459fa1d5e0a8", "patch": "@@ -42,6 +42,6 @@ extern void incr_ticks_for_insn\t\tPROTO((rtx));\n extern void mark_end_of_function_resources PROTO ((rtx, int));\n extern void init_resource_info\t\tPROTO((rtx));\n extern void free_resource_info\t\tPROTO((void));\n-extern rtx find_free_register\t\tPROTO((rtx, rtx, char *, int,\n+extern rtx find_free_register\t\tPROTO((rtx, rtx, const char *, int,\n \t\t\t\t\t       HARD_REG_SET *));\n extern int reg_dead_p\t\t\tPROTO((rtx, rtx));"}]}