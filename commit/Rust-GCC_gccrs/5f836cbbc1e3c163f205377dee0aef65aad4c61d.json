{"sha": "5f836cbbc1e3c163f205377dee0aef65aad4c61d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY4MzZjYmJjMWUzYzE2M2YyMDUzNzdkZWUwYWVmNjVhYWQ0YzYxZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-06-11T21:43:45Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-06-11T21:43:45Z"}, "message": "libgomp.h (struct gomp_task): Add in_tied_task field.\n\n\t* libgomp.h (struct gomp_task): Add in_tied_task field.\n\t* task.c (gomp_init_task): Initialize it.\n\t(GOMP_task): Likewise.  Call gomp_team_barrier_set_task_pending\n\tunconditionally.  Don't call gomp_team_barrier_wake if\n\tcurrent task is implicit or if(0) from implicit and number of\n\trunning tasks is equal to nthreads - 1.\n\nFrom-SVN: r136682", "tree": {"sha": "e006f479132d2c9ab9f0c35199cdcdd31925db16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e006f479132d2c9ab9f0c35199cdcdd31925db16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f836cbbc1e3c163f205377dee0aef65aad4c61d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f836cbbc1e3c163f205377dee0aef65aad4c61d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f836cbbc1e3c163f205377dee0aef65aad4c61d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f836cbbc1e3c163f205377dee0aef65aad4c61d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "567f0b17912a7d55ec333eb93b74f82e7a4f8761", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/567f0b17912a7d55ec333eb93b74f82e7a4f8761", "html_url": "https://github.com/Rust-GCC/gccrs/commit/567f0b17912a7d55ec333eb93b74f82e7a4f8761"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "fb70823cfcc44cf3de62a62c73eaee3e0f8f9d4b", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f836cbbc1e3c163f205377dee0aef65aad4c61d/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f836cbbc1e3c163f205377dee0aef65aad4c61d/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=5f836cbbc1e3c163f205377dee0aef65aad4c61d", "patch": "@@ -1,5 +1,12 @@\n 2008-06-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* libgomp.h (struct gomp_task): Add in_tied_task field.\n+\t* task.c (gomp_init_task): Initialize it.\n+\t(GOMP_task): Likewise.  Call gomp_team_barrier_set_task_pending\n+\tunconditionally.  Don't call gomp_team_barrier_wake if\n+\tcurrent task is implicit or if(0) from implicit and number of\n+\trunning tasks is equal to nthreads - 1.\n+\n \tPR libgomp/36471\n \t* omp_lib.f90.in (omp_get_ancestor_thread_num_8,\n \tomp_get_team_size_8): Fix pastos."}, {"sha": "7292358b9aa96e02f010ef1445db74827eec1b79", "filename": "libgomp/libgomp.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f836cbbc1e3c163f205377dee0aef65aad4c61d/libgomp%2Flibgomp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f836cbbc1e3c163f205377dee0aef65aad4c61d/libgomp%2Flibgomp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.h?ref=5f836cbbc1e3c163f205377dee0aef65aad4c61d", "patch": "@@ -253,6 +253,7 @@ struct gomp_task\n   void *fn_data;\n   enum gomp_task_kind kind;\n   bool in_taskwait;\n+  bool in_tied_task;\n   gomp_sem_t taskwait_sem;\n };\n "}, {"sha": "ce991b8dca26198e9ea76fd08c83a94cfbbfdb24", "filename": "libgomp/task.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f836cbbc1e3c163f205377dee0aef65aad4c61d/libgomp%2Ftask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f836cbbc1e3c163f205377dee0aef65aad4c61d/libgomp%2Ftask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftask.c?ref=5f836cbbc1e3c163f205377dee0aef65aad4c61d", "patch": "@@ -43,6 +43,7 @@ gomp_init_task (struct gomp_task *task, struct gomp_task *parent_task,\n   task->icv = *prev_icv;\n   task->kind = GOMP_TASK_IMPLICIT;\n   task->in_taskwait = false;\n+  task->in_tied_task = false;\n   task->children = NULL;\n   gomp_sem_init (&task->taskwait_sem, 0);\n }\n@@ -103,6 +104,8 @@ GOMP_task (void (*fn) (void *), void *data, void (*cpyfn) (void *, void *),\n \n       gomp_init_task (&task, thr->task, gomp_icv (false));\n       task.kind = GOMP_TASK_IFFALSE;\n+      if (thr->task)\n+\ttask.in_tied_task = thr->task->in_tied_task;\n       thr->task = &task;\n       if (__builtin_expect (cpyfn != NULL, 0))\n \t{\n@@ -134,6 +137,7 @@ GOMP_task (void (*fn) (void *), void *data, void (*cpyfn) (void *, void *),\n \t\t      & ~(uintptr_t) (arg_align - 1));\n       gomp_init_task (task, parent, gomp_icv (false));\n       task->kind = GOMP_TASK_IFFALSE;\n+      task->in_tied_task = parent->in_tied_task;\n       thr->task = task;\n       if (cpyfn)\n \tcpyfn (arg, data);\n@@ -143,6 +147,7 @@ GOMP_task (void (*fn) (void *), void *data, void (*cpyfn) (void *, void *),\n       task->kind = GOMP_TASK_WAITING;\n       task->fn = fn;\n       task->fn_data = arg;\n+      task->in_tied_task = true;\n       gomp_mutex_lock (&team->task_lock);\n       if (parent->children)\n \t{\n@@ -170,9 +175,10 @@ GOMP_task (void (*fn) (void *), void *data, void (*cpyfn) (void *, void *),\n \t  task->prev_queue = task;\n \t  team->task_queue = task;\n \t}\n-      if (team->task_count++ == 0)\n-\tgomp_team_barrier_set_task_pending (&team->barrier);\n-      do_wake = team->task_running_count < team->nthreads;\n+      ++team->task_count;\n+      gomp_team_barrier_set_task_pending (&team->barrier);\n+      do_wake = team->task_running_count + !parent->in_tied_task\n+\t\t< team->nthreads;\n       gomp_mutex_unlock (&team->task_lock);\n       if (do_wake)\n \tgomp_team_barrier_wake (&team->barrier, 1);"}]}