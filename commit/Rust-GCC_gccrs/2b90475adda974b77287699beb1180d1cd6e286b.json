{"sha": "2b90475adda974b77287699beb1180d1cd6e286b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmI5MDQ3NWFkZGE5NzRiNzcyODc2OTliZWIxMTgwZDFjZDZlMjg2Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-05-06T09:08:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-05-06T09:08:57Z"}, "message": "re PR tree-optimization/43571 (domwalk sucks)\n\n2010-05-06  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43571\n\t* domwalk.c (walk_dominator_tree): Walk the dominator\n\tsons in more optimal order.\n\nFrom-SVN: r159100", "tree": {"sha": "36bd69de4dd9b2ad158519b9ff7a45a395af7f70", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36bd69de4dd9b2ad158519b9ff7a45a395af7f70"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b90475adda974b77287699beb1180d1cd6e286b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b90475adda974b77287699beb1180d1cd6e286b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b90475adda974b77287699beb1180d1cd6e286b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b90475adda974b77287699beb1180d1cd6e286b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3bdfed62abe1c163b93162e53a377b21b5658dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3bdfed62abe1c163b93162e53a377b21b5658dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3bdfed62abe1c163b93162e53a377b21b5658dc"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "aacaefe2fe757bd2ef0126916a88a4135d63b1bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b90475adda974b77287699beb1180d1cd6e286b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b90475adda974b77287699beb1180d1cd6e286b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b90475adda974b77287699beb1180d1cd6e286b", "patch": "@@ -1,3 +1,9 @@\n+2010-05-06  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43571\n+\t* domwalk.c (walk_dominator_tree): Walk the dominator\n+\tsons in more optimal order.\n+\n 2010-05-06  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/43934"}, {"sha": "4f0e9190c19cb413589ee53ee425cd812c8d07e8", "filename": "gcc/domwalk.c", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b90475adda974b77287699beb1180d1cd6e286b/gcc%2Fdomwalk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b90475adda974b77287699beb1180d1cd6e286b/gcc%2Fdomwalk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdomwalk.c?ref=2b90475adda974b77287699beb1180d1cd6e286b", "patch": "@@ -144,6 +144,9 @@ walk_dominator_tree (struct dom_walk_data *walk_data, basic_block bb)\n   basic_block dest;\n   basic_block *worklist = XNEWVEC (basic_block, n_basic_blocks * 2);\n   int sp = 0;\n+  sbitmap visited = sbitmap_alloc (last_basic_block + 1);\n+  sbitmap_zero (visited);\n+  SET_BIT (visited, ENTRY_BLOCK_PTR->index);\n \n   while (true)\n     {\n@@ -184,6 +187,8 @@ walk_dominator_tree (struct dom_walk_data *walk_data, basic_block bb)\n \t  if (walk_data->before_dom_children)\n \t    (*walk_data->before_dom_children) (walk_data, bb);\n \n+\t  SET_BIT (visited, bb->index);\n+\n \t  /* Mark the current BB to be popped out of the recursion stack\n \t     once children are processed.  */\n \t  worklist[sp++] = bb;\n@@ -213,11 +218,44 @@ walk_dominator_tree (struct dom_walk_data *walk_data, basic_block bb)\n \t    }\n \t}\n       if (sp)\n-\tbb = worklist[--sp];\n+\t{\n+\t  int spp;\n+\t  spp = sp - 1;\n+\t  if (walk_data->dom_direction == CDI_DOMINATORS)\n+\t    /* Find the dominator son that has all its predecessors\n+\t       visited and continue with that.  */\n+\t    while (1)\n+\t      {\n+\t\tedge_iterator ei;\n+\t\tedge e;\n+\t\tbool found = true;\n+\t\tbb = worklist[spp];\n+\t\tFOR_EACH_EDGE (e, ei, bb->preds)\n+\t\t  {\n+\t\t    if (!dominated_by_p (CDI_DOMINATORS, e->src, e->dest)\n+\t\t\t&& !TEST_BIT (visited, e->src->index))\n+\t\t      {\n+\t\t\tfound = false;\n+\t\t\tbreak;\n+\t\t      }\n+\t\t  }\n+\t\tif (found)\n+\t\t  break;\n+\t\t/* If we didn't find a dom child with all visited\n+\t\t   predecessors just use the candidate we were checking.\n+\t\t   This happens for candidates in irreducible loops.  */\n+\t\tif (!worklist[spp - 1])\n+\t\t  break;\n+\t\t--spp;\n+\t      }\n+\t  bb = worklist[spp];\n+\t  worklist[spp] = worklist[--sp];\n+\t}\n       else\n \tbreak;\n     }\n   free (worklist);\n+  sbitmap_free (visited);\n }\n \n void"}]}