{"sha": "0679e3fcb626d03ccdef64d4826c8ecac3b8a631", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDY3OWUzZmNiNjI2ZDAzY2NkZWY2NGQ0ODI2YzhlY2FjM2I4YTYzMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-10-25T23:56:23Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-10-25T23:56:23Z"}, "message": "stmt.c (expand_fixup): Set fixup->before_jump to a NOTE_INSN_DELETED instead of a NOTE_INSN_BLOCK_BEG.\n\n8\n\t* stmt.c (expand_fixup): Set fixup->before_jump to a\n\tNOTE_INSN_DELETED instead of a NOTE_INSN_BLOCK_BEG.\n\nFrom-SVN: r23330", "tree": {"sha": "9fc0f9f2b8a9b9f985f6e61ef96ea5774aae5c92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fc0f9f2b8a9b9f985f6e61ef96ea5774aae5c92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0679e3fcb626d03ccdef64d4826c8ecac3b8a631", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0679e3fcb626d03ccdef64d4826c8ecac3b8a631", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0679e3fcb626d03ccdef64d4826c8ecac3b8a631", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0679e3fcb626d03ccdef64d4826c8ecac3b8a631/comments", "author": null, "committer": null, "parents": [{"sha": "e17f9bc09816e3777c2dab4e4644c1c06f3422f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e17f9bc09816e3777c2dab4e4644c1c06f3422f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e17f9bc09816e3777c2dab4e4644c1c06f3422f9"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "46a5bcbf1f2281411857e09c885bc30873f0287a", "filename": "gcc/stmt.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0679e3fcb626d03ccdef64d4826c8ecac3b8a631/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0679e3fcb626d03ccdef64d4826c8ecac3b8a631/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=0679e3fcb626d03ccdef64d4826c8ecac3b8a631", "patch": "@@ -886,19 +886,25 @@ expand_fixup (tree_label, rtl_label, last_insn)\n \t code which we might later insert at this point in the insn\n \t stream.  Also, the BLOCK node will be the parent (i.e. the\n \t `SUPERBLOCK') of any other BLOCK nodes which we might create\n-\t later on when we are expanding the fixup code.  */\n+\t later on when we are expanding the fixup code.\n+\n+\t Note that optimization passes (including expand_end_loop)\n+\t might move the *_BLOCK notes away, so we use a NOTE_INSN_DELETED\n+\t as a placeholder.  */\n \n       {\n         register rtx original_before_jump\n           = last_insn ? last_insn : get_last_insn ();\n+\trtx start;\n \n         start_sequence ();\n         pushlevel (0);\n-        fixup->before_jump = emit_note (NULL_PTR, NOTE_INSN_BLOCK_BEG);\n+        start = emit_note (NULL_PTR, NOTE_INSN_BLOCK_BEG);\n+\tfixup->before_jump = emit_note (NULL_PTR, NOTE_INSN_DELETED);\n         last_block_end_note = emit_note (NULL_PTR, NOTE_INSN_BLOCK_END);\n         fixup->context = poplevel (1, 0, 0);  /* Create the BLOCK node now! */\n         end_sequence ();\n-        emit_insns_after (fixup->before_jump, original_before_jump);\n+        emit_insns_after (start, original_before_jump);\n       }\n \n       fixup->block_start_count = block_start_count;"}]}