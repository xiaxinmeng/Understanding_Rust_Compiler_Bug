{"sha": "a7a6649f4e7c459a95dee1600554ad06aaeb1cf6", "node_id": "C_kwDOANBUbNoAKGE3YTY2NDlmNGU3YzQ1OWE5NWRlZTE2MDA1NTRhZDA2YWFlYjFjZjY", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-09-22T14:27:17Z"}, "committer": {"name": "Andrew MacLeod", "email": "amacleod@redhat.com", "date": "2022-09-22T18:48:28Z"}, "message": "Fix calc_op1 for undefined op2_range.\n\nUnary operations pass the type of operand 1 into op1_range.  If that\nrange is undefined, the routine blindly picks the type of operand 2,\nwhich in the case of a unary op, does not exist and traps.\n\n\t* gimple-range-op.cc (gimple_range_op_handler::calc_op1): Use\n\t  operand 1 for second range if there is no operand 2.", "tree": {"sha": "bbdabc2730cb81be7c2803dca5196223fe0b8aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bbdabc2730cb81be7c2803dca5196223fe0b8aa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a7a6649f4e7c459a95dee1600554ad06aaeb1cf6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a6649f4e7c459a95dee1600554ad06aaeb1cf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7a6649f4e7c459a95dee1600554ad06aaeb1cf6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7a6649f4e7c459a95dee1600554ad06aaeb1cf6/comments", "author": null, "committer": null, "parents": [{"sha": "51ce06385bf259a092f830f1a6dcc4b98757919e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51ce06385bf259a092f830f1a6dcc4b98757919e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51ce06385bf259a092f830f1a6dcc4b98757919e"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "ab5b389449d0b09128f468c513c36883df17e4d4", "filename": "gcc/gimple-range-op.cc", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a7a6649f4e7c459a95dee1600554ad06aaeb1cf6/gcc%2Fgimple-range-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a7a6649f4e7c459a95dee1600554ad06aaeb1cf6/gcc%2Fgimple-range-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-op.cc?ref=a7a6649f4e7c459a95dee1600554ad06aaeb1cf6", "patch": "@@ -208,10 +208,14 @@ gimple_range_op_handler::calc_op1 (vrange &r, const vrange &lhs_range,\n   // If op2 is undefined, solve as if it is varying.\n   if (op2_range.undefined_p ())\n     {\n-      // This is sometimes invoked on single operand stmts.\n       if (gimple_num_ops (m_stmt) < 3)\n \treturn false;\n-      tree op2_type = TREE_TYPE (operand2 ());\n+      tree op2_type;\n+      // This is sometimes invoked on single operand stmts.\n+      if (operand2 ())\n+\top2_type = TREE_TYPE (operand2 ());\n+      else\n+\top2_type = TREE_TYPE (operand1 ());\n       Value_Range trange (op2_type);\n       trange.set_varying (op2_type);\n       return op1_range (r, type, lhs_range, trange);"}]}