{"sha": "b610c30453d8e4cc88693d85a5a100d089640be5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYxMGMzMDQ1M2Q4ZTRjYzg4NjkzZDg1YTVhMTAwZDA4OTY0MGJlNQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-03-09T18:13:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-03-09T18:13:11Z"}, "message": "phiopt: Fix up conditional_replacement [PR99305]\n\nBefore my PR97690 changes, conditional_replacement would not set neg\nwhen the nonzero arg was boolean true.\nI've simplified the testing, so that it first finds the zero argument\nand then checks the other argument for all the handled cases\n(1, -1 and 1 << X, where the last case is what the patch added support for).\nBut, unfortunately I've placed the integer_all_onesp test first.\nFor unsigned precision 1 types such as bool integer_all_onesp, integer_onep\nand integer_pow2p can all be true and the code set neg to true in that case,\nwhich is undesirable.\n\nThe following patch tests integer_pow2p first (which is trivially true\nfor integer_onep too and tree_log2 in that case gives shift == 0)\nand only if that isn't the case, integer_all_onesp.\n\n2021-03-09  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR tree-optimization/99305\n\t* tree-ssa-phiopt.c (conditional_replacement): Test integer_pow2p\n\tbefore integer_all_onesp instead of vice versa.\n\n\t* g++.dg/opt/pr99305.C: New test.", "tree": {"sha": "a7927f20db4d10668770625a9b0b59c447d676df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7927f20db4d10668770625a9b0b59c447d676df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b610c30453d8e4cc88693d85a5a100d089640be5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b610c30453d8e4cc88693d85a5a100d089640be5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b610c30453d8e4cc88693d85a5a100d089640be5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b610c30453d8e4cc88693d85a5a100d089640be5/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c60ad1c5fe0249f48362be0f989184ca447f9d17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c60ad1c5fe0249f48362be0f989184ca447f9d17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c60ad1c5fe0249f48362be0f989184ca447f9d17"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "8a91277e7928f5fc371b62cf9fc7557ce5734da7", "filename": "gcc/testsuite/g++.dg/opt/pr99305.C", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b610c30453d8e4cc88693d85a5a100d089640be5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr99305.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b610c30453d8e4cc88693d85a5a100d089640be5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr99305.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr99305.C?ref=b610c30453d8e4cc88693d85a5a100d089640be5", "patch": "@@ -0,0 +1,26 @@\n+// PR tree-optimization/99305\n+// { dg-do compile }\n+// { dg-options \"-O3 -fno-ipa-icf -fdump-tree-optimized\" }\n+// { dg-final { scan-tree-dump-times \" = \\\\\\(unsigned char\\\\\\) c_\\[0-9]*\\\\\\(D\\\\\\);\" 3 \"optimized\" } }\n+// { dg-final { scan-tree-dump-times \" = \\[^\\n\\r]* \\\\+ \\[0-9]*;\" 3 \"optimized\" } }\n+// { dg-final { scan-tree-dump-times \" = \\[^\\n\\r]* <= 9;\" 3 \"optimized\" } }\n+// { dg-final { scan-tree-dump-not \"if \\\\\\(c_\\[0-9]*\\\\\\(D\\\\\\) \\[!=]= 0\\\\\\)\" \"optimized\" } }\n+// { dg-final { scan-tree-dump-not \" = PHI <\" \"optimized\" } }\n+\n+bool\n+foo (char c)\n+{\n+  return c >= 48 && c <= 57;\n+}\n+\n+bool\n+bar (char c)\n+{\n+  return c != 0 && foo (c);\n+}\n+\n+bool\n+baz (char c)\n+{\n+  return c != 0 && c >= 48 && c <= 57;\n+}"}, {"sha": "aa48f447d23c4809f6b1c3e0cd7694b8da5056e3", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b610c30453d8e4cc88693d85a5a100d089640be5/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b610c30453d8e4cc88693d85a5a100d089640be5/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=b610c30453d8e4cc88693d85a5a100d089640be5", "patch": "@@ -808,14 +808,14 @@ conditional_replacement (basic_block cond_bb, basic_block middle_bb,\n     nonzero_arg = arg0;\n   else\n     return false;\n-  if (integer_all_onesp (nonzero_arg))\n-    neg = true;\n-  else if (integer_pow2p (nonzero_arg))\n+  if (integer_pow2p (nonzero_arg))\n     {\n       shift = tree_log2 (nonzero_arg);\n       if (shift && POINTER_TYPE_P (TREE_TYPE (nonzero_arg)))\n \treturn false;\n     }\n+  else if (integer_all_onesp (nonzero_arg))\n+    neg = true;\n   else\n     return false;\n "}]}