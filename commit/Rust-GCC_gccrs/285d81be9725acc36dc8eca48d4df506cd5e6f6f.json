{"sha": "285d81be9725acc36dc8eca48d4df506cd5e6f6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg1ZDgxYmU5NzI1YWNjMzZkYzhlY2E0OGQ0ZGY1MDZjZDVlNmY2Zg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-09-07T13:43:04Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-09-08T10:14:56Z"}, "message": "libphobos: libdruntime doesn't support shadow stack (PR95680)\n\nRather than implementing support within D runtime itself, use libc\ngetcontext/swapcontext functions if CET is enabled.\n\nRemoves whatever CET support was in the switchContext routine for x86\nD runtime, along with setting version AsmExternal, so that the fallback\nucontext_t implementation is used, which is capable of doing shadow\nstack handling.\n\nlibphobos/ChangeLog:\n\n\tPR d/95680\n\t* Makefile.in: Regenerate.\n\t* configure: Regenerate.\n\t* configure.ac (DCFG_ENABLE_CET): Substitute.\n\t* libdruntime/Makefile.in: Regenerate.\n\t* libdruntime/config/x86/switchcontext.S: Remove CET support code.\n\t* libdruntime/core/thread.d: Import gcc.config.  Don't set version\n\tAsmExternal when GNU_Enable_CET is true.\n\t* libdruntime/gcc/config.d.in (GNU_Enable_CET): Define.\n\t* src/Makefile.in: Regenerate.\n\t* testsuite/Makefile.in: Regenerate.", "tree": {"sha": "f11c13f6fd48555b952d1b3df40522ed8e3eecf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f11c13f6fd48555b952d1b3df40522ed8e3eecf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/285d81be9725acc36dc8eca48d4df506cd5e6f6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285d81be9725acc36dc8eca48d4df506cd5e6f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/285d81be9725acc36dc8eca48d4df506cd5e6f6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/285d81be9725acc36dc8eca48d4df506cd5e6f6f/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd2d3822ca0f2f743601cc9d048d51f6d326f6a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd2d3822ca0f2f743601cc9d048d51f6d326f6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd2d3822ca0f2f743601cc9d048d51f6d326f6a2"}], "stats": {"total": 98, "additions": 64, "deletions": 34}, "files": [{"sha": "f6cba17159fffe33985ab6522ba6f02bde1614a1", "filename": "libphobos/Makefile.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FMakefile.in?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -108,6 +108,8 @@ target_triplet = @target@\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -214,6 +216,7 @@ CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n+DCFG_ENABLE_CET = @DCFG_ENABLE_CET@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}, {"sha": "86a0aba6976b328b76f9bb8176eb9b1c40930dbe", "filename": "libphobos/configure", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -722,6 +722,7 @@ LIBTOOL\n CFLAGS_FOR_BUILD\n CC_FOR_BUILD\n AR\n+DCFG_ENABLE_CET\n CET_FLAGS\n RANLIB\n MAINT\n@@ -5586,7 +5587,7 @@ case \"$host\" in\n     case \"$enable_cet\" in\n       auto)\n \t# Check if target supports multi-byte NOPs\n-\t# and if assembler supports CET insn.\n+\t# and if compiler and assembler support CET insn.\n \tcet_save_CFLAGS=\"$CFLAGS\"\n \tCFLAGS=\"$CFLAGS -fcf-protection\"\n \tcat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -5650,6 +5651,12 @@ $as_echo \"no\" >&6; }\n fi\n \n \n+if test x$enable_cet = xyes; then :\n+  DCFG_ENABLE_CET=true\n+else\n+  DCFG_ENABLE_CET=false\n+fi\n+\n \n # This should be inherited in the recursive make, but ensure it is defined.\n test \"$AR\" || AR=ar\n@@ -11738,7 +11745,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11741 \"configure\"\n+#line 11748 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11844,7 +11851,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11847 \"configure\"\n+#line 11854 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "97f96934aafb33e1113e336856872f8def2c4127", "filename": "libphobos/configure.ac", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fconfigure.ac?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -68,6 +68,9 @@ AC_PROG_MAKE_SET\n # Add CET specific flags if CET is enabled\n GCC_CET_FLAGS(CET_FLAGS)\n AC_SUBST(CET_FLAGS)\n+AS_IF([test x$enable_cet = xyes],\n+  [DCFG_ENABLE_CET=true], [DCFG_ENABLE_CET=false])\n+AC_SUBST(DCFG_ENABLE_CET)\n \n # This should be inherited in the recursive make, but ensure it is defined.\n test \"$AR\" || AR=ar"}, {"sha": "28b4333838f7e436ba38cfa6575eb8634859ab4e", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -131,6 +131,8 @@ target_triplet = @target@\n subdir = libdruntime\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -565,6 +567,7 @@ CC = @CC@\n CCAS = @CCAS@\n CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n+CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n CHECKING_DFLAGS = @CHECKING_DFLAGS@\n@@ -573,6 +576,7 @@ CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n+DCFG_ENABLE_CET = @DCFG_ENABLE_CET@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}, {"sha": "85f2e00d186650467cd38c5e70c2375401ddc3ef", "filename": "libphobos/libdruntime/config/x86/switchcontext.S", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Flibdruntime%2Fconfig%2Fx86%2Fswitchcontext.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Flibdruntime%2Fconfig%2Fx86%2Fswitchcontext.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fconfig%2Fx86%2Fswitchcontext.S?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -24,21 +24,14 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n \n #include \"../common/threadasm.S\"\n \n-#ifdef __CET__\n-# include <cet.h>\n-#else\n-# define _CET_ENDBR\n-#endif\n-\n-#if defined(__i386__)\n+#if defined(__i386__) && !defined(__CET__)\n \n     .text\n     .globl CSYM(fiber_switchContext)\n     .type CSYM(fiber_switchContext), @function\n     .align 16\n CSYM(fiber_switchContext):\n     .cfi_startproc\n-    _CET_ENDBR\n     // save current stack state\n     push %ebp\n     mov  %esp, %ebp\n@@ -65,15 +58,14 @@ CSYM(fiber_switchContext):\n     .cfi_endproc\n     .size CSYM(fiber_switchContext),.-CSYM(fiber_switchContext)\n \n-#elif defined(__x86_64__) && !defined(__ILP32__)\n+#elif defined(__x86_64__) && !defined(__ILP32__) && !defined(__CET__)\n \n     .text\n     .globl CSYM(fiber_switchContext)\n     .type CSYM(fiber_switchContext), @function\n     .align 16\n CSYM(fiber_switchContext):\n     .cfi_startproc\n-    _CET_ENDBR\n     // Save current stack state.save current stack state\n     push %rbp\n     mov  %rsp, %rbp"}, {"sha": "8f4603d3d2f3bc19978e3cee83c02854151cca06", "filename": "libphobos/libdruntime/core/thread.d", "status": "modified", "additions": 31, "deletions": 21, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Flibdruntime%2Fcore%2Fthread.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Flibdruntime%2Fcore%2Fthread.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fthread.d?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -3586,35 +3586,45 @@ private\n     }\n     else version (X86)\n     {\n-        version = AsmExternal;\n+        import gcc.config;\n \n-        version (MinGW)\n-        {\n-            version = GNU_AsmX86_Windows;\n-            version = AlignFiberStackTo16Byte;\n-        }\n-        else version (Posix)\n+        version = AlignFiberStackTo16Byte;\n+\n+        static if (!GNU_Enable_CET)\n         {\n-            version = AsmX86_Posix;\n-            version (OSX)\n-                version = AlignFiberStackTo16Byte;\n+            version = AsmExternal;\n+\n+            version (MinGW)\n+            {\n+                version = GNU_AsmX86_Windows;\n+            }\n+            else version (Posix)\n+            {\n+                version = AsmX86_Posix;\n+            }\n         }\n     }\n     else version (X86_64)\n     {\n-        version (D_X32)\n-        {\n-            // let X32 be handled by ucontext swapcontext\n-        }\n-        else\n+        import gcc.config;\n+\n+        version = AlignFiberStackTo16Byte;\n+\n+        static if (!GNU_Enable_CET)\n         {\n-            version = AsmExternal;\n-            version = AlignFiberStackTo16Byte;\n+            version (D_X32)\n+            {\n+                // let X32 be handled by ucontext swapcontext\n+            }\n+            else\n+            {\n+                version = AsmExternal;\n \n-            version (MinGW)\n-                version = GNU_AsmX86_64_Windows;\n-            else version (Posix)\n-                version = AsmX86_64_Posix;\n+                version (MinGW)\n+                    version = GNU_AsmX86_64_Windows;\n+                else version (Posix)\n+                    version = AsmX86_64_Posix;\n+            }\n         }\n     }\n     else version (PPC)"}, {"sha": "9ac7d055271d2ab57e4590f3a14d94b7981e697e", "filename": "libphobos/libdruntime/gcc/config.d.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fgcc%2Fconfig.d.in?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -49,3 +49,6 @@ enum GNU_Have_LibAtomic = @DCFG_HAVE_LIBATOMIC@;\n \n // Do we have qsort_r function\n enum Have_Qsort_R = @DCFG_HAVE_QSORT_R@;\n+\n+// Whether libphobos been configured with --enable-cet.\n+enum GNU_Enable_CET = @DCFG_ENABLE_CET@;"}, {"sha": "dc5f4f5ca572f6c5f415150f4d1af5421af0a9b9", "filename": "libphobos/src/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Fsrc%2FMakefile.in?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -93,6 +93,8 @@ target_triplet = @target@\n subdir = src\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -321,6 +323,7 @@ CC = @CC@\n CCAS = @CCAS@\n CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n+CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n CHECKING_DFLAGS = @CHECKING_DFLAGS@\n@@ -329,6 +332,7 @@ CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n+DCFG_ENABLE_CET = @DCFG_ENABLE_CET@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}, {"sha": "5a4c0317509a309fc5a3abe1839880c310c9fb0f", "filename": "libphobos/testsuite/Makefile.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/285d81be9725acc36dc8eca48d4df506cd5e6f6f/libphobos%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Ftestsuite%2FMakefile.in?ref=285d81be9725acc36dc8eca48d4df506cd5e6f6f", "patch": "@@ -93,6 +93,8 @@ target_triplet = @target@\n subdir = testsuite\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/../config/acx.m4 \\\n+\t$(top_srcdir)/../config/cet.m4 \\\n+\t$(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../config/lead-dot.m4 \\\n \t$(top_srcdir)/../config/multi.m4 \\\n \t$(top_srcdir)/../config/override.m4 \\\n@@ -149,6 +151,7 @@ CC = @CC@\n CCAS = @CCAS@\n CCASFLAGS = @CCASFLAGS@\n CC_FOR_BUILD = @CC_FOR_BUILD@\n+CET_FLAGS = @CET_FLAGS@\n CFLAGS = @CFLAGS@\n CFLAGS_FOR_BUILD = @CFLAGS_FOR_BUILD@\n CHECKING_DFLAGS = @CHECKING_DFLAGS@\n@@ -157,6 +160,7 @@ CPPFLAGS = @CPPFLAGS@\n CYGPATH_W = @CYGPATH_W@\n DCFG_ARM_EABI_UNWINDER = @DCFG_ARM_EABI_UNWINDER@\n DCFG_DLPI_TLS_MODID = @DCFG_DLPI_TLS_MODID@\n+DCFG_ENABLE_CET = @DCFG_ENABLE_CET@\n DCFG_HAVE_64BIT_ATOMICS = @DCFG_HAVE_64BIT_ATOMICS@\n DCFG_HAVE_ATOMIC_BUILTINS = @DCFG_HAVE_ATOMIC_BUILTINS@\n DCFG_HAVE_LIBATOMIC = @DCFG_HAVE_LIBATOMIC@"}]}