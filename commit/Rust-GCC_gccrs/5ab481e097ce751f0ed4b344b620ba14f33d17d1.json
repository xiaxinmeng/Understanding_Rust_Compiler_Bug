{"sha": "5ab481e097ce751f0ed4b344b620ba14f33d17d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFiNDgxZTA5N2NlNzUxZjBlZDRiMzQ0YjYyMGJhMTRmMzNkMTdkMQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-06-16T18:44:50Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-06-16T18:44:50Z"}, "message": "[multiple changes]\n\n\n2003-06-16  Andreas Jaeger  <aj@suse.de>\n\n\t* acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE): Make\n\tcheck-abi multilib aware.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\n2003-06-16  Benjamin Kosnik  <bkoz@redhat.com>\n            Andreas Jaeger  <aj@suse.de>\n\n\t* configure.host: Set x86_64 abi_baseline pair correctly.\n\nFrom-SVN: r68029", "tree": {"sha": "0ae36b684241fdde464a1be1616c19cb6b1240fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ae36b684241fdde464a1be1616c19cb6b1240fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ab481e097ce751f0ed4b344b620ba14f33d17d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab481e097ce751f0ed4b344b620ba14f33d17d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ab481e097ce751f0ed4b344b620ba14f33d17d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ab481e097ce751f0ed4b344b620ba14f33d17d1/comments", "author": null, "committer": null, "parents": [{"sha": "7f42b6d7188f58cdb6450487d4c0037c831350bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f42b6d7188f58cdb6450487d4c0037c831350bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f42b6d7188f58cdb6450487d4c0037c831350bc"}], "stats": {"total": 45, "additions": 27, "deletions": 18}, "files": [{"sha": "7b6f186e3855379801b2478df07bf3d4946b331b", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5ab481e097ce751f0ed4b344b620ba14f33d17d1", "patch": "@@ -1,3 +1,15 @@\n+2003-06-16  Andreas Jaeger  <aj@suse.de>\n+\n+\t* acinclude.m4 (GLIBCPP_CONFIGURE_TESTSUITE): Make\n+\tcheck-abi multilib aware.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t\n+2003-06-16  Benjamin Kosnik  <bkoz@redhat.com>\n+            Andreas Jaeger  <aj@suse.de>\n+\n+\t* configure.host: Set x86_64 abi_baseline pair correctly.\n+\n 2003-06-16  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/27_io/basic_filebuf/sungetc/char/1.cc: Split and\n@@ -26,6 +38,8 @@\n \t* config/abi/x86_64-linux-gnu: ...this.\n \t* config/abi/i386-unknown-freebsd4: To...\n \t* config/abi/i386-freebsd4: ...this.\n+\t* config/linker-map.gnu: Cleanups, move libsupc++ bits into\n+\tCXXABI.\n \t* configure.host: abi_baseline_triplet to abi_baseline_pair.\n \tSimplify cpu bits so that abi_baseline_pair can use the same\n \tcpu configuration."}, {"sha": "fe6d1195cf2e47bb05f3f4157a36b351698ff3d4", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=5ab481e097ce751f0ed4b344b620ba14f33d17d1", "patch": "@@ -2055,7 +2055,7 @@ AC_DEFUN(GLIBCPP_CONFIGURE_TESTSUITE, [\n   GLIBCPP_CHECK_STDLIB_DECL_AND_LINKAGE_3(setenv)\n \n   # Export file names for ABI checking.\n-  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}/baseline_symbols.txt\"\n+  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)/baseline_symbols.txt\"\n   AC_SUBST(baseline_file)\n \n   dnl XXX move to configure.host?"}, {"sha": "ae824634c26cb1a8a3681aae4d642e3652230aa8", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=5ab481e097ce751f0ed4b344b620ba14f33d17d1", "patch": "@@ -2067,7 +2067,7 @@ AC_DEFUN(GLIBCPP_CONFIGURE_TESTSUITE, [\n   GLIBCPP_CHECK_STDLIB_DECL_AND_LINKAGE_3(setenv)\n \n   # Export file names for ABI checking.\n-  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}/baseline_symbols.txt\"\n+  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)/baseline_symbols.txt\"\n   AC_SUBST(baseline_file)\n \n   dnl XXX move to configure.host?"}, {"sha": "a6623c42ebec30641da8cbeb6fbdbbc5cba0709f", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=5ab481e097ce751f0ed4b344b620ba14f33d17d1", "patch": "@@ -23472,7 +23472,7 @@ done\n \n \n   # Export file names for ABI checking.\n-  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}/baseline_symbols.txt\"\n+  baseline_file=\"${glibcpp_srcdir}/config/abi/${abi_baseline_pair}\\$(MULTISUBDIR)/baseline_symbols.txt\"\n   \n \n     case \"$target\" in"}, {"sha": "aaaf932ecb2a229851ec8f8107422162e3d746d5", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ab481e097ce751f0ed4b344b620ba14f33d17d1/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=5ab481e097ce751f0ed4b344b620ba14f33d17d1", "patch": "@@ -97,23 +97,12 @@ case \"${host_cpu}\" in\n     ;;\n esac\n \n-\n-# Now look for the file(s) usually tied to a CPU model, and make default\n-# choices for those if they haven't been explicitly set already.\n-cpu_include_dir=\"cpu/${try_cpu}\"  \n+# Now look for the file(s) usually tied to a CPU model, and make\n+# default choices for those if they haven't been explicitly set\n+# already.  \n+cpu_include_dir=\"cpu/${try_cpu}\"\n ATOMICITYH=$cpu_include_dir\n-\n-\n-# Check whether ABI baseline file exists, if not try to guess name.\n abi_baseline_pair=${try_cpu}-${host_os}\n-try_baseline_file=config/abi/${abi_baseline_pair}/baseline_symbols.txt\n-if test ! -e ${glibcpp_srcdir}/${try_baseline_file} ; then\n-  case \"${host}\" in\n-    i*86-*-freebsd4*)\n-      abi_baseline_pair=\"i386-freebsd4\"\n-      ;;\n-  esac  \n-fi\n \n \n # Set any OS-dependent bits.\n@@ -199,4 +188,10 @@ case \"${host}\" in\n   mips*-*-linux*)\n     ATOMICITYH=\"cpu/mips\"\n     ;;\n+  x86_64-*-linux*)\n+    abi_baseline_pair=\"x86_64-linux-gnu\"\n+    ;;\n+  i*86-*-freebsd4*)\n+    abi_baseline_pair=\"i386-freebsd4\"\n+    ;;\n esac"}]}