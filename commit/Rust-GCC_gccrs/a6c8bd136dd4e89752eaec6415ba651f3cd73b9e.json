{"sha": "a6c8bd136dd4e89752eaec6415ba651f3cd73b9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZjOGJkMTM2ZGQ0ZTg5NzUyZWFlYzY0MTViYTY1MWYzY2Q3M2I5ZQ==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-08-22T12:44:46Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-08-22T13:56:26Z"}, "message": "Add impl-trait path probe helper\n\nThis adds a probe to lookup candidates for a segment for any impl block\nfor this receiver and trait. This simplifies some query based compilation\ncode. When the item is resolved to a trait item but might be overriden by\na reciever impl block instead.", "tree": {"sha": "de6014aa7088f6cbd6614c7a132a0ff829215711", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de6014aa7088f6cbd6614c7a132a0ff829215711"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6c8bd136dd4e89752eaec6415ba651f3cd73b9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c8bd136dd4e89752eaec6415ba651f3cd73b9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c8bd136dd4e89752eaec6415ba651f3cd73b9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c8bd136dd4e89752eaec6415ba651f3cd73b9e/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5dd96322b588ffcf5bdd2fe0e3a14eb217d75b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5dd96322b588ffcf5bdd2fe0e3a14eb217d75b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5dd96322b588ffcf5bdd2fe0e3a14eb217d75b2"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "60cd98a5e5edde933ad860342057bf12ea708ea6", "filename": "gcc/rust/typecheck/rust-hir-path-probe.h", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6c8bd136dd4e89752eaec6415ba651f3cd73b9e/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6c8bd136dd4e89752eaec6415ba651f3cd73b9e/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-path-probe.h?ref=a6c8bd136dd4e89752eaec6415ba651f3cd73b9e", "patch": "@@ -114,6 +114,7 @@ struct PathProbeCandidate\n \n class PathProbeType : public TypeCheckBase\n {\n+protected:\n   using Rust::Resolver::TypeCheckBase::visit;\n \n public:\n@@ -207,7 +208,7 @@ class PathProbeType : public TypeCheckBase\n       }\n   }\n \n-private:\n+protected:\n   void process_impl_items_for_candidates ()\n   {\n     mappings->iterate_impl_items ([&] (HirId id, HIR::ImplItem *item,\n@@ -313,7 +314,7 @@ class PathProbeType : public TypeCheckBase\n       }\n   }\n \n-private:\n+protected:\n   PathProbeType (const TyTy::BaseType *receiver,\n \t\t const HIR::PathIdentSegment &query)\n     : TypeCheckBase (), receiver (receiver), search (query),\n@@ -404,6 +405,33 @@ class ReportMultipleCandidateError : private TypeCheckBase\n   RichLocation &r;\n };\n \n+class PathProbeImplTrait : public PathProbeType\n+{\n+public:\n+  static std::vector<PathProbeCandidate>\n+  Probe (const TyTy::BaseType *receiver,\n+\t const HIR::PathIdentSegment &segment_name,\n+\t const TraitReference *trait_reference)\n+  {\n+    PathProbeImplTrait probe (receiver, segment_name, trait_reference);\n+    // iterate all impls for this trait and receiver\n+    // then search for possible candidates using base class behaviours\n+    probe.process_trait_impl_items_for_candidates ();\n+    return probe.candidates;\n+  }\n+\n+private:\n+  void process_trait_impl_items_for_candidates ();\n+\n+  PathProbeImplTrait (const TyTy::BaseType *receiver,\n+\t\t      const HIR::PathIdentSegment &query,\n+\t\t      const TraitReference *trait_reference)\n+    : PathProbeType (receiver, query), trait_reference (trait_reference)\n+  {}\n+\n+  const TraitReference *trait_reference;\n+};\n+\n } // namespace Resolver\n } // namespace Rust\n "}]}