{"sha": "dbca09c29d08d561ed9f08f1a1f6cfec86700ef4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJjYTA5YzI5ZDA4ZDU2MWVkOWYwOGYxYTFmNmNmZWM4NjcwMGVmNA==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2007-05-19T20:44:43Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2007-05-19T20:44:43Z"}, "message": "re PR libgcj/31659 (config-int.h:327:1: error: \"INT8_MIN\" redefined)\n\n2007-05-19  Andreas Tobler  <a.tobler@schweiz.org>\n\n\tPR libgcj/31659\n\t* m4/ax_create_stdint_h.m4: Apply patch from PR31659.\n\t* configure: Regenerate.\n\nFrom-SVN: r124860", "tree": {"sha": "6ae6e576fc910b8034959297185139b706d57a9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ae6e576fc910b8034959297185139b706d57a9d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4/comments", "author": null, "committer": null, "parents": [{"sha": "4e7cb428e91d40277a35c24e7f284dd380d60439", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e7cb428e91d40277a35c24e7f284dd380d60439", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e7cb428e91d40277a35c24e7f284dd380d60439"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "cf778b4a09025564d917003440fe0f8778fabc4a", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=dbca09c29d08d561ed9f08f1a1f6cfec86700ef4", "patch": "@@ -1,3 +1,9 @@\n+2007-05-19  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\tPR libgcj/31659\n+\t* m4/ax_create_stdint_h.m4: Apply patch from PR31659.\n+\t* configure: Regenerate.\n+\n 2007-05-07 Keith Seitz  <keiths@redhat.com>\n \n \t* gnu/classpath/jdwp/Jdwp.java (notify): Rewrite to call"}, {"sha": "f2a7bb02de392103a10ad13545e1ef01e04f0996", "filename": "libjava/classpath/configure", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=dbca09c29d08d561ed9f08f1a1f6cfec86700ef4", "patch": "@@ -22420,21 +22420,46 @@ typedef           long   intptr_t;\n /* These limits are merily those of a two complement byte-oriented system */\n \n /* Minimum of signed integral types.  */\n+#ifndef INT8_MIN\n # define INT8_MIN               (-128)\n+#endif\n+#ifndef INT16_MIN\n # define INT16_MIN              (-32767-1)\n+#endif\n+#ifndef INT32_MIN\n # define INT32_MIN              (-2147483647-1)\n+#endif\n+#ifndef INT64_MIN\n # define INT64_MIN              (-__INT64_C(9223372036854775807)-1)\n+#endif\n+\n /* Maximum of signed integral types.  */\n+#ifndef INT8_MAX\n # define INT8_MAX               (127)\n+#endif\n+#ifndef INT16_MAX\n # define INT16_MAX              (32767)\n+#endif\n+#ifndef INT32_MAX\n # define INT32_MAX              (2147483647)\n+#endif\n+#ifndef INT64_MAX\n # define INT64_MAX              (__INT64_C(9223372036854775807))\n+#endif\n \n /* Maximum of unsigned integral types.  */\n+#ifndef UINT8_MAX\n # define UINT8_MAX              (255)\n+#endif\n+#ifndef UINT16_MAX\n # define UINT16_MAX             (65535)\n+#endif\n+#ifndef UINT32_MAX\n # define UINT32_MAX             (4294967295U)\n+#endif\n+#ifndef UINT64_MAX\n # define UINT64_MAX             (__UINT64_C(18446744073709551615))\n+#endif\n \n /* Minimum of signed integral types having a minimum size.  */\n # define INT_LEAST8_MIN         INT8_MIN"}, {"sha": "453af07480e76b62ac722b61a76dbd6947e4946a", "filename": "libjava/classpath/m4/ax_create_stdint_h.m4", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4/libjava%2Fclasspath%2Fm4%2Fax_create_stdint_h.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbca09c29d08d561ed9f08f1a1f6cfec86700ef4/libjava%2Fclasspath%2Fm4%2Fax_create_stdint_h.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fm4%2Fax_create_stdint_h.m4?ref=dbca09c29d08d561ed9f08f1a1f6cfec86700ef4", "patch": "@@ -621,21 +621,46 @@ typedef           long   intptr_t;\n /* These limits are merily those of a two complement byte-oriented system */\n \n /* Minimum of signed integral types.  */\n+#ifndef INT8_MIN\n # define INT8_MIN               (-128)\n+#endif\n+#ifndef INT16_MIN\n # define INT16_MIN              (-32767-1)\n+#endif\n+#ifndef INT32_MIN\n # define INT32_MIN              (-2147483647-1)\n+#endif\n+#ifndef INT64_MIN\n # define INT64_MIN              (-__INT64_C(9223372036854775807)-1)\n+#endif\n+\n /* Maximum of signed integral types.  */\n+#ifndef INT8_MAX\n # define INT8_MAX               (127)\n+#endif\n+#ifndef INT16_MAX\n # define INT16_MAX              (32767)\n+#endif\n+#ifndef INT32_MAX\n # define INT32_MAX              (2147483647)\n+#endif\n+#ifndef INT64_MAX\n # define INT64_MAX              (__INT64_C(9223372036854775807))\n+#endif\n \n /* Maximum of unsigned integral types.  */\n+#ifndef UINT8_MAX\n # define UINT8_MAX              (255)\n+#endif\n+#ifndef UINT16_MAX\n # define UINT16_MAX             (65535)\n+#endif\n+#ifndef UINT32_MAX\n # define UINT32_MAX             (4294967295U)\n+#endif\n+#ifndef UINT64_MAX\n # define UINT64_MAX             (__UINT64_C(18446744073709551615))\n+#endif\n \n /* Minimum of signed integral types having a minimum size.  */\n # define INT_LEAST8_MIN         INT8_MIN"}]}