{"sha": "2e64cf055250718d8e1659d37738c9eb2d2da1e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2NGNmMDU1MjUwNzE4ZDhlMTY1OWQzNzczOGM5ZWIyZDJkYTFlMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-21T10:58:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:16Z"}, "message": "[Ada] Fix invalid expression sharing in Expand_Array_Equality\n\n2020-06-18  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch4.adb (Expand_Array_Equality): For the optimization of\n\tthe 2-element case, build new expression lists for the indices.", "tree": {"sha": "096699604d1e0afd5de2c620a107309c0bb3ce58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/096699604d1e0afd5de2c620a107309c0bb3ce58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e64cf055250718d8e1659d37738c9eb2d2da1e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e64cf055250718d8e1659d37738c9eb2d2da1e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e64cf055250718d8e1659d37738c9eb2d2da1e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e64cf055250718d8e1659d37738c9eb2d2da1e3/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e49f6ee11d9de33706a410f3f1cb328a4b6e6616", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e49f6ee11d9de33706a410f3f1cb328a4b6e6616", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e49f6ee11d9de33706a410f3f1cb328a4b6e6616"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "2735a480bd41086e23bd113cab95f12f8edf843a", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e64cf055250718d8e1659d37738c9eb2d2da1e3/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e64cf055250718d8e1659d37738c9eb2d2da1e3/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=2e64cf055250718d8e1659d37738c9eb2d2da1e3", "patch": "@@ -2009,34 +2009,33 @@ package body Exp_Ch4 is\n             Ctyp         : constant Entity_Id := Component_Type (Ltyp);\n             L, R         : Node_Id;\n             TestL, TestH : Node_Id;\n-            Index_List   : List_Id;\n \n          begin\n-            Index_List := New_List (New_Copy_Tree (Low_Bound (First_Idx)));\n-\n             L :=\n               Make_Indexed_Component (Loc,\n                 Prefix      => New_Copy_Tree (New_Lhs),\n-                Expressions => Index_List);\n+                Expressions =>\n+                  New_List (New_Copy_Tree (Low_Bound (First_Idx))));\n \n             R :=\n               Make_Indexed_Component (Loc,\n                 Prefix      => New_Copy_Tree (New_Rhs),\n-                Expressions => Index_List);\n+                Expressions =>\n+                  New_List (New_Copy_Tree (Low_Bound (First_Idx))));\n \n             TestL := Expand_Composite_Equality (Nod, Ctyp, L, R, Bodies);\n \n-            Index_List := New_List (New_Copy_Tree (High_Bound (First_Idx)));\n-\n             L :=\n               Make_Indexed_Component (Loc,\n                 Prefix      => New_Lhs,\n-                Expressions => Index_List);\n+                Expressions =>\n+                  New_List (New_Copy_Tree (High_Bound (First_Idx))));\n \n             R :=\n               Make_Indexed_Component (Loc,\n                 Prefix      => New_Rhs,\n-                Expressions => Index_List);\n+                Expressions =>\n+                  New_List (New_Copy_Tree (High_Bound (First_Idx))));\n \n             TestH := Expand_Composite_Equality (Nod, Ctyp, L, R, Bodies);\n "}]}