{"sha": "4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVmMjBjMjlhM2U2NzIyNGEzMzExZWY0ZjYyMGI4MTVkNGZjZWFlYg==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@arm.com", "date": "2014-09-24T07:00:55Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-09-24T07:00:55Z"}, "message": "re PR rtl-optimization/63210 (ira does not select the best register compared with gcc 4.8 for ARM THUMB1)\n\nChangeLog:\n2014-09-24  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\tPR rtl-optimization/63210\n\t* ira-color.c (assign_hard_reg): Ignore conflict cost if the\n\tHARD_REGNO is not availabe for CONFLICT_A.\n\ntestsuite/ChangeLog:\n2014-09-24  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n\n\t* gcc.target/arm/pr63210.c: New test.\n\nFrom-SVN: r215540", "tree": {"sha": "a51e3c8ae714c6784a3022ded163b248ac0c849a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a51e3c8ae714c6784a3022ded163b248ac0c849a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/comments", "author": null, "committer": null, "parents": [{"sha": "f704cf4c32a824de157757f9c4926e24d8904e80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f704cf4c32a824de157757f9c4926e24d8904e80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f704cf4c32a824de157757f9c4926e24d8904e80"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "10dbc523fb4c227af6d02b03ee1666f09aba89ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "patch": "@@ -1,3 +1,9 @@\n+2014-09-24  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\tPR rtl-optimization/63210\n+\t* ira-color.c (assign_hard_reg): Ignore conflict cost if the\n+\tHARD_REGNO is not available for CONFLICT_A.\n+\n 2014-09-23  Andi Kleen  <ak@linux.intel.com>\n \n \t* cgraph.h (symtab_node): Add no_reorder attribute."}, {"sha": "841d0d155a936c7778bd0a44ea685bcffc444c10", "filename": "gcc/ira-color.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "patch": "@@ -1709,6 +1709,7 @@ assign_hard_reg (ira_allocno_t a, bool retry_p)\n         {\n \t  ira_allocno_t conflict_a = OBJECT_ALLOCNO (conflict_obj);\n \t  enum reg_class conflict_aclass;\n+\t  allocno_color_data_t data = ALLOCNO_COLOR_DATA (conflict_a);\n \n \t  /* Reload can give another class so we need to check all\n \t     allocnos.  */\n@@ -1780,7 +1781,12 @@ assign_hard_reg (ira_allocno_t a, bool retry_p)\n \t\t    hard_regno = ira_class_hard_regs[aclass][j];\n \t\t    ira_assert (hard_regno >= 0);\n \t\t    k = ira_class_hard_reg_index[conflict_aclass][hard_regno];\n-\t\t    if (k < 0)\n+\t\t    if (k < 0\n+\t\t\t   /* If HARD_REGNO is not available for CONFLICT_A,\n+\t\t\t      the conflict would be ignored, since HARD_REGNO\n+\t\t\t      will never be assigned to CONFLICT_A.  */\n+\t\t\t|| !TEST_HARD_REG_BIT (data->profitable_hard_regs,\n+\t\t\t\t\t       hard_regno))\n \t\t      continue;\n \t\t    full_costs[j] -= conflict_costs[k];\n \t\t  }"}, {"sha": "a3f51b36d7e1e97eddbd19ae7e44e8e6de8ab36b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "patch": "@@ -1,3 +1,7 @@\n+2014-09-24  Zhenqiang Chen  <zhenqiang.chen@arm.com>\n+\n+\t* gcc.target/arm/pr63210.c: New test.\n+\n 2014-09-23  Andi Kleen  <ak@linux.intel.com>\n \n \t* gcc.dg/noreorder.c: New test."}, {"sha": "c3ae92801f55b19d9aede885a06c6ddaf1707349", "filename": "gcc/testsuite/gcc.target/arm/pr63210.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr63210.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef20c29a3e67224a3311ef4f620b815d4fceaeb/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr63210.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr63210.c?ref=4ef20c29a3e67224a3311ef4f620b815d4fceaeb", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do assemble } */\n+/* { dg-options \"-mthumb -Os \" }  */\n+/* { dg-require-effective-target arm_thumb1_ok } */\n+\n+int foo1 (int c);\n+int foo2 (int c);\n+\n+int test (int c)\n+{\n+  return (foo1 (c) || foo2 (c));\n+}\n+/* { dg-final { object-size text <= 28 } } */"}]}