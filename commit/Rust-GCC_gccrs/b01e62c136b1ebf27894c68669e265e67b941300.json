{"sha": "b01e62c136b1ebf27894c68669e265e67b941300", "node_id": "C_kwDOANBUbNoAKGIwMWU2MmMxMzZiMWViZjI3ODk0YzY4NjY5ZTI2NWU2N2I5NDEzMDA", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-25T16:08:55Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-10-27T09:18:33Z"}, "message": "Add WhereClauseItem::ItemType specifier to differentiate between items", "tree": {"sha": "1bfdd180d546c116a3a7b598cacf2db13805ab3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bfdd180d546c116a3a7b598cacf2db13805ab3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b01e62c136b1ebf27894c68669e265e67b941300", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01e62c136b1ebf27894c68669e265e67b941300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b01e62c136b1ebf27894c68669e265e67b941300", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b01e62c136b1ebf27894c68669e265e67b941300/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dc21da4d05ab19642f60c122e7d58d6372fff0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dc21da4d05ab19642f60c122e7d58d6372fff0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dc21da4d05ab19642f60c122e7d58d6372fff0d"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "de067e678a6966e9f39609becab0ad72595ef77d", "filename": "gcc/rust/hir/tree/rust-hir-item.h", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b01e62c136b1ebf27894c68669e265e67b941300/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b01e62c136b1ebf27894c68669e265e67b941300/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fhir%2Ftree%2Frust-hir-item.h?ref=b01e62c136b1ebf27894c68669e265e67b941300", "patch": "@@ -141,6 +141,12 @@ class TypeParam : public GenericParam\n class WhereClauseItem\n {\n public:\n+  enum ItemType\n+  {\n+    LIFETIME,\n+    TYPE_BOUND,\n+  };\n+\n   virtual ~WhereClauseItem () {}\n \n   // Unique pointer custom clone function\n@@ -155,6 +161,8 @@ class WhereClauseItem\n \n   virtual Analysis::NodeMapping get_mappings () const = 0;\n \n+  virtual ItemType get_item_type () const = 0;\n+\n protected:\n   // Clone function implementation as pure virtual method\n   virtual WhereClauseItem *clone_where_clause_item_impl () const = 0;\n@@ -190,6 +198,11 @@ class LifetimeWhereClauseItem : public WhereClauseItem\n     return mappings;\n   };\n \n+  ItemType get_item_type () const override final\n+  {\n+    return WhereClauseItem::ItemType::LIFETIME;\n+  }\n+\n protected:\n   // Clone function implementation as (not pure) virtual method\n   LifetimeWhereClauseItem *clone_where_clause_item_impl () const override\n@@ -269,6 +282,11 @@ class TypeBoundWhereClauseItem : public WhereClauseItem\n     return mappings;\n   };\n \n+  ItemType get_item_type () const override final\n+  {\n+    return WhereClauseItem::ItemType::TYPE_BOUND;\n+  }\n+\n protected:\n   // Clone function implementation as (not pure) virtual method\n   TypeBoundWhereClauseItem *clone_where_clause_item_impl () const override"}]}