{"sha": "e24e31ef9659afb9808d334d62158feef9c5f6f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI0ZTMxZWY5NjU5YWZiOTgwOGQzMzRkNjIxNThmZWVmOWM1ZjZmNA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2014-03-11T16:41:07Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-03-11T16:41:07Z"}, "message": "natObject.cc (_Jv_MonitorEnter): Add missing parenthesis around comparison with (address | LOCKED) in JvAssert.\n\n\t* java/lang/natObject.cc (_Jv_MonitorEnter): Add missing parenthesis\n\taround comparison with (address | LOCKED) in JvAssert.\n\nFrom-SVN: r208489", "tree": {"sha": "1d05c701534e2e1a0bdfe90386eb8f1dbaa58a73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d05c701534e2e1a0bdfe90386eb8f1dbaa58a73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e24e31ef9659afb9808d334d62158feef9c5f6f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e24e31ef9659afb9808d334d62158feef9c5f6f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e24e31ef9659afb9808d334d62158feef9c5f6f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e24e31ef9659afb9808d334d62158feef9c5f6f4/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bae56bbbeab4b32d034a8e24ba5a41ddc19facbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae56bbbeab4b32d034a8e24ba5a41ddc19facbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae56bbbeab4b32d034a8e24ba5a41ddc19facbd"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "28468725b6fe705232218f77e3c74d5e70bb5224", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e24e31ef9659afb9808d334d62158feef9c5f6f4/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e24e31ef9659afb9808d334d62158feef9c5f6f4/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=e24e31ef9659afb9808d334d62158feef9c5f6f4", "patch": "@@ -1,3 +1,8 @@\n+2014-03-11  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* java/lang/natObject.cc (_Jv_MonitorEnter): Add missing parenthesis\n+\taround comparison with (address | LOCKED) in JvAssert.\n+\n 2014-02-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libgcj/55637"}, {"sha": "1a666407a6632ee636ba59111a3a47a40b6b3fd9", "filename": "libjava/java/lang/natObject.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e24e31ef9659afb9808d334d62158feef9c5f6f4/libjava%2Fjava%2Flang%2FnatObject.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e24e31ef9659afb9808d334d62158feef9c5f6f4/libjava%2Fjava%2Flang%2FnatObject.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatObject.cc?ref=e24e31ef9659afb9808d334d62158feef9c5f6f4", "patch": "@@ -929,7 +929,7 @@ _Jv_MonitorEnter (jobject obj)\n \t  // only be held by other threads waiting for conversion, and\n \t  // they, like us, drop it quickly without blocking.\n \t  _Jv_MutexLock(&(hl->si.mutex));\n-\t  JvAssert(he -> address == address | LOCKED );\n+\t  JvAssert(he -> address == (address | LOCKED));\n \t  release_set(&(he -> address), (address | REQUEST_CONVERSION | HEAVY));\n \t\t\t\t// release lock on he\n \t  LOG(REQ_CONV, (address | REQUEST_CONVERSION | HEAVY), self);\n@@ -961,7 +961,7 @@ _Jv_MonitorEnter (jobject obj)\n     }\n   obj_addr_t was_heavy = (address & HEAVY);\n   if ((address & LOCKED) ||\n-      !compare_and_swap(&(he -> address), address, (address | LOCKED )))\n+      !compare_and_swap(&(he -> address), address, address | LOCKED ))\n     {\n       wait_unlocked(he);\n       goto retry;"}]}