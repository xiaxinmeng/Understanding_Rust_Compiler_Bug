{"sha": "7fa55ff675da902516b0e0624e8436b823122963", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZhNTVmZjY3NWRhOTAyNTE2YjBlMDYyNGU4NDM2YjgyMzEyMjk2Mw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2014-09-05T14:04:46Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2014-09-05T14:04:46Z"}, "message": "Drop uncast_insn from param 1 of final_scan_insn\n\ngcc/ChangeLog\n2014-09-05  David Malcolm  <dmalcolm@redhat.com>\n\n\t* output.h (final_scan_insn): Strengthen first param from rtx to\n\trtx_insn *.\n\n\t* final.c (final_scan_insn): Likewise, renaming it back from\n\t\"uncast_insn\" to \"insn\", eliminating the checked cast.\n\n\t* config/h8300/h8300.md (define_insn \"jump\"): Replace local rtx\n\t\"vec\" with an rtx_sequence * \"seq\", taking a copy of\n\t\"final_sequence\", and using methods of \"seq\" for clarity, and for\n\ttype-safety in the calls to final_scan_insn.\n\t* config/mips/mips.c (mips_output_conditional_branch): Use methods\n\tof \"final_sequence\" for clarity, and for type-safety in the call to\n\tfinal_scan_insn.\n\t* config/sh/sh.c (print_slot): Strengthen param from rtx to\n\trtx_sequence * and rename from \"insn\" to \"seq\".\n\nFrom-SVN: r214961", "tree": {"sha": "f511f0ad87a62f6b42667d2184981b61488818e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f511f0ad87a62f6b42667d2184981b61488818e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fa55ff675da902516b0e0624e8436b823122963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fa55ff675da902516b0e0624e8436b823122963", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fa55ff675da902516b0e0624e8436b823122963", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fa55ff675da902516b0e0624e8436b823122963/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "75677a6759750582b0aa92b3409d0061b4f66739", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75677a6759750582b0aa92b3409d0061b4f66739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75677a6759750582b0aa92b3409d0061b4f66739"}], "stats": {"total": 50, "additions": 33, "deletions": 17}, "files": [{"sha": "4a07b3c2a7255cc2847109e6833a4fab47fae2ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa55ff675da902516b0e0624e8436b823122963/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa55ff675da902516b0e0624e8436b823122963/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7fa55ff675da902516b0e0624e8436b823122963", "patch": "@@ -1,3 +1,21 @@\n+2014-09-05  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* output.h (final_scan_insn): Strengthen first param from rtx to\n+\trtx_insn *.\n+\n+\t* final.c (final_scan_insn): Likewise, renaming it back from\n+\t\"uncast_insn\" to \"insn\", eliminating the checked cast.\n+\n+\t* config/h8300/h8300.md (define_insn \"jump\"): Replace local rtx\n+\t\"vec\" with an rtx_sequence * \"seq\", taking a copy of\n+\t\"final_sequence\", and using methods of \"seq\" for clarity, and for\n+\ttype-safety in the calls to final_scan_insn.\n+\t* config/mips/mips.c (mips_output_conditional_branch): Use methods\n+\tof \"final_sequence\" for clarity, and for type-safety in the call to\n+\tfinal_scan_insn.\n+\t* config/sh/sh.c (print_slot): Strengthen param from rtx to\n+\trtx_sequence * and rename from \"insn\" to \"seq\".\n+\n 2014-09-05  David Malcolm  <dmalcolm@redhat.com>\n \n \t* jump.c (delete_related_insns): Introduce a new local \"table\" by"}, {"sha": "cb10203f16179001641e015144dcf7a258af4af7", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=7fa55ff675da902516b0e0624e8436b823122963", "patch": "@@ -2404,14 +2404,14 @@\n \t     bytes further than previously thought.  The length-based\n \t     test for bra vs. jump is very conservative though, so the\n \t     branch will still be within range.  */\n-\t  rtvec vec;\n+\t  rtx_sequence *seq;\n \t  int seen;\n \n-\t  vec = XVEC (final_sequence, 0);\n+\t  seq = final_sequence;\n \t  final_sequence = 0;\n-\t  final_scan_insn (RTVEC_ELT (vec, 1), asm_out_file, optimize, 1, & seen);\n-\t  final_scan_insn (RTVEC_ELT (vec, 0), asm_out_file, optimize, 1, & seen);\n-\t  INSN_DELETED_P (RTVEC_ELT (vec, 1)) = 1;\n+\t  final_scan_insn (seq->insn (1), asm_out_file, optimize, 1, & seen);\n+\t  final_scan_insn (seq->insn (0), asm_out_file, optimize, 1, & seen);\n+\t  INSN_DELETED_P (seq->insn (1)) = 1;\n \t  return \"\";\n \t}\n     }"}, {"sha": "f9713c17914a93e58b35127b6a23ee9ac2cd990c", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=7fa55ff675da902516b0e0624e8436b823122963", "patch": "@@ -12496,9 +12496,9 @@ mips_output_conditional_branch (rtx_insn *insn, rtx *operands,\n \t delay slot if is not annulled.  */\n       if (!INSN_ANNULLED_BRANCH_P (insn))\n \t{\n-\t  final_scan_insn (XVECEXP (final_sequence, 0, 1),\n+\t  final_scan_insn (final_sequence->insn (1),\n \t\t\t   asm_out_file, optimize, 1, NULL);\n-\t  INSN_DELETED_P (XVECEXP (final_sequence, 0, 1)) = 1;\n+\t  INSN_DELETED_P (final_sequence->insn (1)) = 1;\n \t}\n       else\n \toutput_asm_insn (\"nop\", 0);\n@@ -12521,9 +12521,9 @@ mips_output_conditional_branch (rtx_insn *insn, rtx *operands,\n \t Use INSN's delay slot if is annulled.  */\n       if (INSN_ANNULLED_BRANCH_P (insn))\n \t{\n-\t  final_scan_insn (XVECEXP (final_sequence, 0, 1),\n+\t  final_scan_insn (final_sequence->insn (1),\n \t\t\t   asm_out_file, optimize, 1, NULL);\n-\t  INSN_DELETED_P (XVECEXP (final_sequence, 0, 1)) = 1;\n+\t  INSN_DELETED_P (final_sequence->insn (1)) = 1;\n \t}\n       else\n \toutput_asm_insn (\"nop\", 0);"}, {"sha": "3b4acb97dafccd9524dc09afee0ee6eebd128287", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=7fa55ff675da902516b0e0624e8436b823122963", "patch": "@@ -184,7 +184,7 @@ static bool shmedia_space_reserved_for_target_registers;\n \n static void split_branches (rtx_insn *);\n static int branch_dest (rtx);\n-static void print_slot (rtx);\n+static void print_slot (rtx_sequence *);\n static rtx_code_label *add_constant (rtx, enum machine_mode, rtx);\n static void dump_table (rtx_insn *, rtx_insn *);\n static bool broken_move (rtx_insn *);\n@@ -2641,11 +2641,11 @@ output_movedouble (rtx insn ATTRIBUTE_UNUSED, rtx operands[],\n    another instruction, but couldn't because the other instruction expanded\n    into a sequence where putting the slot insn at the end wouldn't work.  */\n static void\n-print_slot (rtx insn)\n+print_slot (rtx_sequence *seq)\n {\n-  final_scan_insn (XVECEXP (insn, 0, 1), asm_out_file, optimize, 1, NULL);\n+  final_scan_insn (seq->insn (1), asm_out_file, optimize, 1, NULL);\n \n-  INSN_DELETED_P (XVECEXP (insn, 0, 1)) = 1;\n+  INSN_DELETED_P (seq->insn (1)) = 1;\n }\n \n const char *"}, {"sha": "81c750d0b6e103144ef6e250044aa63e557740de", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=7fa55ff675da902516b0e0624e8436b823122963", "patch": "@@ -2171,16 +2171,14 @@ call_from_call_insn (rtx_call_insn *insn)\n    both NOTE_INSN_PROLOGUE_END and NOTE_INSN_FUNCTION_BEG.  */\n \n rtx_insn *\n-final_scan_insn (rtx uncast_insn, FILE *file, int optimize_p ATTRIBUTE_UNUSED,\n+final_scan_insn (rtx_insn *insn, FILE *file, int optimize_p ATTRIBUTE_UNUSED,\n \t\t int nopeepholes ATTRIBUTE_UNUSED, int *seen)\n {\n #ifdef HAVE_cc0\n   rtx set;\n #endif\n   rtx_insn *next;\n \n-  rtx_insn *insn = as_a <rtx_insn *> (uncast_insn);\n-\n   insn_counter++;\n \n   /* Ignore deleted insns.  These can occur when we split insns (due to a"}, {"sha": "fd36f8b19895a67222e375a7381813f8b76cfbde", "filename": "gcc/output.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fa55ff675da902516b0e0624e8436b823122963/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=7fa55ff675da902516b0e0624e8436b823122963", "patch": "@@ -72,7 +72,7 @@ extern void final (rtx_insn *, FILE *, int);\n /* The final scan for one insn, INSN.  Args are same as in `final', except\n    that INSN is the insn being scanned.  Value returned is the next insn to\n    be scanned.  */\n-extern rtx_insn *final_scan_insn (rtx, FILE *, int, int, int *);\n+extern rtx_insn *final_scan_insn (rtx_insn *, FILE *, int, int, int *);\n \n /* Replace a SUBREG with a REG or a MEM, based on the thing it is a\n    subreg of.  */"}]}