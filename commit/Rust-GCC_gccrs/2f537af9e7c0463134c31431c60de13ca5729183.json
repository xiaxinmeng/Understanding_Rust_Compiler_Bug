{"sha": "2f537af9e7c0463134c31431c60de13ca5729183", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY1MzdhZjllN2MwNDYzMTM0YzMxNDMxYzYwZGUxM2NhNTcyOTE4Mw==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-29T19:04:34Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-29T19:04:34Z"}, "message": "h8300.md: Tweak operand numbers of some peephole2's.\n\n\t* config/h8300/h8300.md: Tweak operand numbers of some\n\tpeephole2's.\n\nFrom-SVN: r78658", "tree": {"sha": "91623ac36ca6f28cdf667933ee73d56c9b48ec95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91623ac36ca6f28cdf667933ee73d56c9b48ec95"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f537af9e7c0463134c31431c60de13ca5729183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f537af9e7c0463134c31431c60de13ca5729183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f537af9e7c0463134c31431c60de13ca5729183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f537af9e7c0463134c31431c60de13ca5729183/comments", "author": null, "committer": null, "parents": [{"sha": "a207f649ad9fcb75bd1c2c65d914fc2925113ddc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a207f649ad9fcb75bd1c2c65d914fc2925113ddc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a207f649ad9fcb75bd1c2c65d914fc2925113ddc"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "9d17775c7cc97652acf85f168ed24adb266c8af5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f537af9e7c0463134c31431c60de13ca5729183/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f537af9e7c0463134c31431c60de13ca5729183/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f537af9e7c0463134c31431c60de13ca5729183", "patch": "@@ -1,3 +1,8 @@\n+2004-02-29  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md: Tweak operand numbers of some\n+\tpeephole2's.\n+\n 2004-02-29  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md: Tweak comments about peephole2's."}, {"sha": "2f3448188d1892ea125178a3c18b6d3f3414baae", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f537af9e7c0463134c31431c60de13ca5729183/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f537af9e7c0463134c31431c60de13ca5729183/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=2f537af9e7c0463134c31431c60de13ca5729183", "patch": "@@ -4198,27 +4198,27 @@\n \t|| (TARGET_H8300S && INTVAL (operands[1]) == 3))\"\n   [(parallel [(set (match_dup 0)\n \t\t   (ashiftrt:HI (match_dup 0)\n-\t\t\t\t(match_dup 5)))\n+\t\t\t\t(match_dup 4)))\n \t      (clobber (scratch:QI))])\n    (set (cc0)\n \t(match_dup 0))\n    (set (pc)\n-\t(if_then_else (match_dup 4)\n+\t(if_then_else (match_dup 5)\n \t\t      (label_ref (match_dup 3))\n \t\t      (pc)))]\n   \"switch (GET_CODE (operands[2]))\n      {\n      case GTU:\n-       operands[4] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n+       operands[5] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n        break;\n      case LEU:\n-       operands[4] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n+       operands[5] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n        break;\n      default:\n-       operands[4] = operands[2];\n+       operands[5] = operands[2];\n        break;\n      }\n-   operands[5] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n+   operands[4] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n \n ;; Transform\n ;;\n@@ -4478,27 +4478,27 @@\n \t(match_dup 0))\n    (parallel [(set (match_dup 4)\n \t\t   (ashiftrt:SI (match_dup 4)\n-\t\t\t\t(match_dup 6)))\n+\t\t\t\t(match_dup 5)))\n \t      (clobber (scratch:QI))])\n    (set (cc0)\n \t(match_dup 4))\n    (set (pc)\n-\t(if_then_else (match_dup 5)\n+\t(if_then_else (match_dup 6)\n \t\t      (label_ref (match_dup 3))\n \t\t      (pc)))]\n   \"switch (GET_CODE (operands[2]))\n      {\n      case GTU:\n-       operands[5] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n+       operands[6] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n        break;\n      case LEU:\n-       operands[5] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n+       operands[6] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n        break;\n      default:\n-       operands[5] = operands[2];\n+       operands[6] = operands[2];\n        break;\n      }\n-   operands[6] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n+   operands[5] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n \n ;; Transform\n ;;\n@@ -4525,27 +4525,27 @@\n \t|| (TARGET_H8300S && INTVAL (operands[1]) == 3))\"\n   [(parallel [(set (match_dup 0)\n \t\t   (ashiftrt:SI (match_dup 0)\n-\t\t\t\t(match_dup 5)))\n+\t\t\t\t(match_dup 4)))\n \t      (clobber (scratch:QI))])\n    (set (cc0)\n \t(match_dup 0))\n    (set (pc)\n-\t(if_then_else (match_dup 4)\n+\t(if_then_else (match_dup 5)\n \t\t      (label_ref (match_dup 3))\n \t\t      (pc)))]\n   \"switch (GET_CODE (operands[2]))\n      {\n      case GTU:\n-       operands[4] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n+       operands[5] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n        break;\n      case LEU:\n-       operands[4] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n+       operands[5] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n        break;\n      default:\n-       operands[4] = operands[2];\n+       operands[5] = operands[2];\n        break;\n      }\n-   operands[5] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n+   operands[4] = GEN_INT (exact_log2 (INTVAL (operands[1]) + 1));\")\n \n ;; Transform\n ;;\n@@ -4578,26 +4578,26 @@\n        || INTVAL (operands[1]) == 255)\"\n   [(set (match_dup 0)\n \t(and:SI (match_dup 0)\n-\t\t(match_dup 5)))\n+\t\t(match_dup 4)))\n    (set (cc0)\n \t(match_dup 0))\n    (set (pc)\n-\t(if_then_else (match_dup 4)\n+\t(if_then_else (match_dup 5)\n \t\t      (label_ref (match_dup 3))\n \t\t      (pc)))]\n   \"switch (GET_CODE (operands[2]))\n      {\n      case GTU:\n-       operands[4] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n+       operands[5] = gen_rtx_NE (VOIDmode, cc0_rtx, const0_rtx);\n        break;\n      case LEU:\n-       operands[4] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n+       operands[5] = gen_rtx_EQ (VOIDmode, cc0_rtx, const0_rtx);\n        break;\n      default:\n-       operands[4] = operands[2];\n+       operands[5] = operands[2];\n        break;\n      }\n-   operands[5] = GEN_INT (~INTVAL (operands[1]));\")\n+   operands[4] = GEN_INT (~INTVAL (operands[1]));\")\n \n ;; Transform\n ;;"}]}