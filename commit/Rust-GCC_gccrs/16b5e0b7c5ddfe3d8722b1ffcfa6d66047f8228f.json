{"sha": "16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZiNWUwYjdjNWRkZmUzZDg3MjJiMWZmY2ZhNmQ2NjA0N2Y4MjI4Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2014-07-31T12:43:28Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T12:43:28Z"}, "message": "sem_ch3.adb (Process_Range_Expr_In_Decl): Add comments on generation of _FIRST and _LAST variables even in GNATprove_Mode.\n\n2014-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch3.adb (Process_Range_Expr_In_Decl): Add comments on\n\tgeneration of _FIRST and _LAST variables even in GNATprove_Mode.\n\t* gnat_ugn.texi: Minor editing.\n\t* sem_prag.adb (Ensure_Aggregate_Form): Make sure generated\n\taggregate is marked Comes_From_Source if argument is CFS.\n\nFrom-SVN: r213351", "tree": {"sha": "a37e2f2f0dfe990acae669f9ca5623030418594d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a37e2f2f0dfe990acae669f9ca5623030418594d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/comments", "author": null, "committer": null, "parents": [{"sha": "f15749aa1c22f3aebab55be5202d9fa852bd18fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f15749aa1c22f3aebab55be5202d9fa852bd18fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f15749aa1c22f3aebab55be5202d9fa852bd18fc"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "f48ceedd10251b1c38598a06364fa5999bf92fe8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f", "patch": "@@ -1,3 +1,11 @@\n+2014-07-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch3.adb (Process_Range_Expr_In_Decl): Add comments on\n+\tgeneration of _FIRST and _LAST variables even in GNATprove_Mode.\n+\t* gnat_ugn.texi: Minor editing.\n+\t* sem_prag.adb (Ensure_Aggregate_Form): Make sure generated\n+\taggregate is marked Comes_From_Source if argument is CFS.\n+\n 2014-07-31  Pascal Obry  <obry@adacore.com>\n \n \t* s-fileio.adb: Remove obsolete comment."}, {"sha": "19b4ecc03c7346845138f618e2d7a39896462b4a", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f", "patch": "@@ -18054,7 +18054,7 @@ pragma Linker_Options (\"-lmy_lib\");\n @end itemize\n \n Note that you may also load a library dynamically at\n-run time given its filename, as illustrated in the GNAT ``plugins'' example\n+run time given its filename, as illustrated in the GNAT @file{plugins} example\n in the directory @file{share/examples/gnat/plugins} within the GNAT\n install area.\n "}, {"sha": "8836038b0bfcc387305c3ffdf3abd9b687fc08ab", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f", "patch": "@@ -19169,18 +19169,26 @@ package body Sem_Ch3 is\n \n                --  If a subtype is given, then we capture the bounds if they\n                --  are not known at compile time, using constant identifiers\n-               --  xxxL and xxxH where xxx is the name of the subtype. No need\n-               --  to do that if they are already references to constants.\n+               --  xxx_FIRST and xxx_LAST where xxx is the name of the subtype.\n+\n+               --  Note: we do this transformation even if expansion is not\n+               --  active, and in particular we do it in GNATprove_Mode since\n+               --  the transformation is in general required to ensure that the\n+               --  resulting tree has proper Ada semantics.\n \n                --  Historical note: We used to just do Force_Evaluation calls\n                --  in all cases, but it is better to capture the bounds with\n-               --  proper non-serialized names, since these will be accesse\n+               --  proper non-serialized names, since these will be accessed\n                --  from other units, and hence may be public, and also we can\n                --  then expand 'First and 'Last references to be references to\n                --  these special names.\n \n                else\n                   if not Compile_Time_Known_Value (Lo)\n+\n+                    --  No need to capture bounds if they already are\n+                    --  references to constants.\n+\n                     and then not (Is_Entity_Name (Lo)\n                                    and then Is_Constant_Object (Entity (Lo)))\n                   then"}, {"sha": "bab3a4d89a29b8d0702de24a8240c4292b5e1657", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=16b5e0b7c5ddfe3d8722b1ffcfa6d66047f8228f", "patch": "@@ -5721,6 +5721,9 @@ package body Sem_Prag is\n          Comps : List_Id := No_List;\n          Exprs : List_Id := No_List;\n \n+         CFSD : constant Boolean := Get_Comes_From_Source_Default;\n+         --  Used to restore Comes_From_Source_Default\n+\n       begin\n          --  The argument is already in aggregate form, but the presence of a\n          --  name causes this to be interpreted as a named association which in\n@@ -5746,6 +5749,10 @@ package body Sem_Prag is\n             return;\n          end if;\n \n+         --  Everything comes from source if the original comes from source\n+\n+         Set_Comes_From_Source_Default (Comes_From_Source (Arg));\n+\n          --  Positional argument is transformed into an aggregate with an\n          --  Expressions list.\n \n@@ -5760,7 +5767,6 @@ package body Sem_Prag is\n               Make_Component_Association (Loc,\n                 Choices    => New_List (Make_Identifier (Loc, Chars (Arg))),\n                 Expression => Relocate_Node (Expr)));\n-\n          end if;\n \n          --  Remove the pragma argument name as this information has been\n@@ -5772,6 +5778,10 @@ package body Sem_Prag is\n            Make_Aggregate (Loc,\n              Component_Associations => Comps,\n              Expressions            => Exprs));\n+\n+         --  Restore Comes_From_Source default\n+\n+         Set_Comes_From_Source_Default (CFSD);\n       end Ensure_Aggregate_Form;\n \n       ------------------"}]}