{"sha": "681a3d868dc7f72c062905e9b4d17e206f2ede81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgxYTNkODY4ZGM3ZjcyYzA2MjkwNWU5YjRkMTdlMjA2ZjJlZGU4MQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-05-13T12:36:47Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-05-13T12:36:47Z"}, "message": "gimple-expr.h (is_gimple_constant): Reorder.\n\n\t* gimple-expr.h (is_gimple_constant): Reorder.\n\t* tree-ssa-propagate.c (before_dom_children): Use inline accessor.\n\nFrom-SVN: r223156", "tree": {"sha": "8b53a7dae30270eb3617cdf585635fb2e0c98598", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b53a7dae30270eb3617cdf585635fb2e0c98598"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/681a3d868dc7f72c062905e9b4d17e206f2ede81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681a3d868dc7f72c062905e9b4d17e206f2ede81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/681a3d868dc7f72c062905e9b4d17e206f2ede81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681a3d868dc7f72c062905e9b4d17e206f2ede81/comments", "author": null, "committer": null, "parents": [{"sha": "9933eb862e6f04425e628027bccc1542ee913ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9933eb862e6f04425e628027bccc1542ee913ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9933eb862e6f04425e628027bccc1542ee913ae4"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "f85bbae4fda1d14d3a38dbd029ae4c22d2db450a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681a3d868dc7f72c062905e9b4d17e206f2ede81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681a3d868dc7f72c062905e9b4d17e206f2ede81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=681a3d868dc7f72c062905e9b4d17e206f2ede81", "patch": "@@ -1,3 +1,8 @@\n+2015-05-13  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gimple-expr.h (is_gimple_constant): Reorder.\n+\t* tree-ssa-propagate.c (before_dom_children): Use inline accessor.\n+\n 2015-05-13  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* combine.c (simplify_set): When generating a CC set, if the"}, {"sha": "ed23eb24bfc59a6db94faa8ee02423afd2f0d263", "filename": "gcc/gimple-expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681a3d868dc7f72c062905e9b4d17e206f2ede81/gcc%2Fgimple-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681a3d868dc7f72c062905e9b4d17e206f2ede81/gcc%2Fgimple-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.h?ref=681a3d868dc7f72c062905e9b4d17e206f2ede81", "patch": "@@ -136,9 +136,9 @@ is_gimple_constant (const_tree t)\n     case INTEGER_CST:\n     case REAL_CST:\n     case FIXED_CST:\n-    case STRING_CST:\n     case COMPLEX_CST:\n     case VECTOR_CST:\n+    case STRING_CST:\n       return true;\n \n     default:"}, {"sha": "cc2b1c4f48f3a79048ff6e85a4ba89a391cb59ae", "filename": "gcc/tree-ssa-propagate.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/681a3d868dc7f72c062905e9b4d17e206f2ede81/gcc%2Ftree-ssa-propagate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/681a3d868dc7f72c062905e9b4d17e206f2ede81/gcc%2Ftree-ssa-propagate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-propagate.c?ref=681a3d868dc7f72c062905e9b4d17e206f2ede81", "patch": "@@ -1246,9 +1246,7 @@ substitute_and_fold_dom_walker::before_dom_children (basic_block bb)\n \t      && gimple_call_noreturn_p (stmt))\n \t    stmts_to_fixup.safe_push (stmt);\n \n-\t  if (is_gimple_assign (stmt)\n-\t      && (get_gimple_rhs_class (gimple_assign_rhs_code (stmt))\n-\t\t  == GIMPLE_SINGLE_RHS))\n+\t  if (gimple_assign_single_p (stmt))\n \t    {\n \t      tree rhs = gimple_assign_rhs1 (stmt);\n "}]}