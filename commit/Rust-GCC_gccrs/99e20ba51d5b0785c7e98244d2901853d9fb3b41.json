{"sha": "99e20ba51d5b0785c7e98244d2901853d9fb3b41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTllMjBiYTUxZDViMDc4NWM3ZTk4MjQ0ZDI5MDE4NTNkOWZiM2I0MQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-02-26T01:00:39Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-02-26T01:00:39Z"}, "message": "libgo: update to Go1.12rc1\n    \n    Reviewed-on: https://go-review.googlesource.com/c/162881\n\nFrom-SVN: r269202", "tree": {"sha": "d86fa5d601b8bc3629b3820df4d5e7042853453f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d86fa5d601b8bc3629b3820df4d5e7042853453f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99e20ba51d5b0785c7e98244d2901853d9fb3b41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e20ba51d5b0785c7e98244d2901853d9fb3b41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99e20ba51d5b0785c7e98244d2901853d9fb3b41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99e20ba51d5b0785c7e98244d2901853d9fb3b41/comments", "author": null, "committer": null, "parents": [{"sha": "e5e9b91bc61da0bdb58c6577c319e61a3ed04b17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5e9b91bc61da0bdb58c6577c319e61a3ed04b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5e9b91bc61da0bdb58c6577c319e61a3ed04b17"}], "stats": {"total": 2294, "additions": 2058, "deletions": 236}, "files": [{"sha": "fc7c1787b4ddc6d71016d48a3f258cd1b1e73c77", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1,4 +1,4 @@\n-45a2e231958854fd945961f0335ac0805d502510\n+51d2cb40a6475b126ed66cefa2aa6c8dbdc806d0\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "bf071a3a61eb2679ccad0a313b74c082315bd463", "filename": "libgo/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMERGE?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1,4 +1,4 @@\n-4b3f04c63b5b1a1bbc4dfd71c34341ea4e935115\n+1af509d46e31a14e7ff17e23b1fd84250976b405\n \n The first line of this file holds the git revision number of the\n last merge done from the master library sources."}, {"sha": "c13493b95121062c43c068e2860963fd241337c7", "filename": "libgo/VERSION", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2FVERSION", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2FVERSION", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FVERSION?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1 +1 @@\n-go1.12beta2\n+go1.12rc1"}, {"sha": "7db702f1266883a50cbc8d50f6167f030697b3ce", "filename": "libgo/go/cmd/cgo/gcc.go", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fcgo%2Fgcc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fcgo%2Fgcc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fcgo%2Fgcc.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1139,14 +1139,19 @@ func (p *Package) mangle(f *File, arg *ast.Expr) (ast.Expr, bool) {\n }\n \n // checkIndex checks whether arg has the form &a[i], possibly inside\n-// type conversions. If so, it writes\n+// type conversions. If so, then in the general case it writes\n //    _cgoIndexNN := a\n //    _cgoNN := &cgoIndexNN[i] // with type conversions, if any\n // to sb, and writes\n //    _cgoCheckPointer(_cgoNN, _cgoIndexNN)\n-// to sbCheck, and returns true. This tells _cgoCheckPointer to check\n-// the complete contents of the slice or array being indexed, but no\n-// other part of the memory allocation.\n+// to sbCheck, and returns true. If a is a simple variable or field reference,\n+// it writes\n+//    _cgoIndexNN := &a\n+// and dereferences the uses of _cgoIndexNN. Taking the address avoids\n+// making a copy of an array.\n+//\n+// This tells _cgoCheckPointer to check the complete contents of the\n+// slice or array being indexed, but no other part of the memory allocation.\n func (p *Package) checkIndex(sb, sbCheck *bytes.Buffer, arg ast.Expr, i int) bool {\n \t// Strip type conversions.\n \tx := arg\n@@ -1166,13 +1171,23 @@ func (p *Package) checkIndex(sb, sbCheck *bytes.Buffer, arg ast.Expr, i int) boo\n \t\treturn false\n \t}\n \n-\tfmt.Fprintf(sb, \"_cgoIndex%d := %s; \", i, gofmtPos(index.X, index.X.Pos()))\n+\taddr := \"\"\n+\tderef := \"\"\n+\tif p.isVariable(index.X) {\n+\t\taddr = \"&\"\n+\t\tderef = \"*\"\n+\t}\n+\n+\tfmt.Fprintf(sb, \"_cgoIndex%d := %s%s; \", i, addr, gofmtPos(index.X, index.X.Pos()))\n \torigX := index.X\n \tindex.X = ast.NewIdent(fmt.Sprintf(\"_cgoIndex%d\", i))\n+\tif deref == \"*\" {\n+\t\tindex.X = &ast.StarExpr{X: index.X}\n+\t}\n \tfmt.Fprintf(sb, \"_cgo%d := %s; \", i, gofmtPos(arg, arg.Pos()))\n \tindex.X = origX\n \n-\tfmt.Fprintf(sbCheck, \"_cgoCheckPointer(_cgo%d, _cgoIndex%d); \", i, i)\n+\tfmt.Fprintf(sbCheck, \"_cgoCheckPointer(_cgo%d, %s_cgoIndex%d); \", i, deref, i)\n \n \treturn true\n }\n@@ -1298,6 +1313,17 @@ func (p *Package) isConst(f *File, x ast.Expr) bool {\n \treturn false\n }\n \n+// isVariable reports whether x is a variable, possibly with field references.\n+func (p *Package) isVariable(x ast.Expr) bool {\n+\tswitch x := x.(type) {\n+\tcase *ast.Ident:\n+\t\treturn true\n+\tcase *ast.SelectorExpr:\n+\t\treturn p.isVariable(x.X)\n+\t}\n+\treturn false\n+}\n+\n // rewriteUnsafe returns a version of t with references to unsafe.Pointer\n // rewritten to use _cgo_unsafe.Pointer instead.\n func (p *Package) rewriteUnsafe(t ast.Expr) ast.Expr {"}, {"sha": "64384a606b261f03874bb6e48b1bd5fe898c9690", "filename": "libgo/go/cmd/cgo/godefs.go", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fcgo%2Fgodefs.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fcgo%2Fgodefs.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fcgo%2Fgodefs.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -127,8 +127,35 @@ func gofmt(n interface{}) string {\n \treturn gofmtBuf.String()\n }\n \n+// gofmtLineReplacer is used to put a gofmt-formatted string for an\n+// AST expression onto a single line. The lexer normally inserts a\n+// semicolon at each newline, so we can replace newline with semicolon.\n+// However, we can't do that in cases where the lexer would not insert\n+// a semicolon. We only have to worry about cases that can occur in an\n+// expression passed through gofmt, which means composite literals and\n+// (due to the printer possibly inserting newlines because of position\n+// information) operators.\n+var gofmtLineReplacer = strings.NewReplacer(\n+\t\"{\\n\", \"{\",\n+\t\",\\n\", \",\",\n+\t\"++\\n\", \"++;\",\n+\t\"--\\n\", \"--;\",\n+\t\"+\\n\", \"+\",\n+\t\"-\\n\", \"-\",\n+\t\"*\\n\", \"*\",\n+\t\"/\\n\", \"/\",\n+\t\"%\\n\", \"%\",\n+\t\"&\\n\", \"&\",\n+\t\"|\\n\", \"|\",\n+\t\"^\\n\", \"^\",\n+\t\"<\\n\", \"<\",\n+\t\">\\n\", \">\",\n+\t\"=\\n\", \"=\",\n+\t\"\\n\", \";\",\n+)\n+\n // gofmtLine returns the gofmt-formatted string for an AST node,\n // ensuring that it is on a single line.\n func gofmtLine(n interface{}) string {\n-\treturn strings.Replace(gofmt(n), \"\\n\", \";\", -1)\n+\treturn gofmtLineReplacer.Replace(gofmt(n))\n }"}, {"sha": "9e6fe6f1d01e75774d993f1469c307a706d74a30", "filename": "libgo/go/cmd/cgo/out.go", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fcgo%2Fout.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fcgo%2Fout.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fcgo%2Fout.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -781,6 +781,13 @@ func (p *Package) writeExports(fgo2, fm, fgcc, fgcch io.Writer) {\n \tfmt.Fprintf(fgcc, \"#include <stdlib.h>\\n\")\n \tfmt.Fprintf(fgcc, \"#include \\\"_cgo_export.h\\\"\\n\\n\")\n \n+\t// We use packed structs, but they are always aligned.\n+\t// The pragmas and address-of-packed-member are not recognized as warning groups in clang 3.4.1, so ignore unknown pragmas first.\n+\t// remove as part of #27619 (all: drop support for FreeBSD 10).\n+\tfmt.Fprintf(fgcc, \"#pragma GCC diagnostic ignored \\\"-Wunknown-pragmas\\\"\\n\")\n+\tfmt.Fprintf(fgcc, \"#pragma GCC diagnostic ignored \\\"-Wpragmas\\\"\\n\")\n+\tfmt.Fprintf(fgcc, \"#pragma GCC diagnostic ignored \\\"-Waddress-of-packed-member\\\"\\n\")\n+\n \tfmt.Fprintf(fgcc, \"extern void crosscall2(void (*fn)(void *, int, __SIZE_TYPE__), void *, int, __SIZE_TYPE__);\\n\")\n \tfmt.Fprintf(fgcc, \"extern __SIZE_TYPE__ _cgo_wait_runtime_init_done();\\n\")\n \tfmt.Fprintf(fgcc, \"extern void _cgo_release_context(__SIZE_TYPE__);\\n\\n\")\n@@ -1260,7 +1267,7 @@ func determineGccgoManglingScheme() bool {\n \tcmd := exec.Command(gccgocmd, \"-S\", \"-o\", \"-\", gofilename)\n \tbuf, cerr := cmd.CombinedOutput()\n \tif cerr != nil {\n-\t\tfatalf(\"%s\", err)\n+\t\tfatalf(\"%s\", cerr)\n \t}\n \n \t// New mangling: expect go.l..u00e4ufer.Run\n@@ -1478,6 +1485,14 @@ __cgo_size_assert(double, 8)\n \n extern char* _cgo_topofstack(void);\n \n+/* We use packed structs, but they are always aligned.  */\n+/* The pragmas and address-of-packed-member are not recognized as warning groups in clang 3.4.1, so ignore unknown pragmas first. */\n+/* remove as part of #27619 (all: drop support for FreeBSD 10). */\n+\n+#pragma GCC diagnostic ignored \"-Wunknown-pragmas\"\n+#pragma GCC diagnostic ignored \"-Wpragmas\"\n+#pragma GCC diagnostic ignored \"-Waddress-of-packed-member\"\n+\n #include <errno.h>\n #include <string.h>\n `"}, {"sha": "186f42156a2efd2ed2273ab49f718153bcbcf09b", "filename": "libgo/go/cmd/go/alldocs.go", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Falldocs.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Falldocs.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Falldocs.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -442,11 +442,14 @@\n // command alias, described below.\n //\n // To convey to humans and machine tools that code is generated,\n-// generated source should have a line early in the file that\n-// matches the following regular expression (in Go syntax):\n+// generated source should have a line that matches the following\n+// regular expression (in Go syntax):\n //\n // \t^// Code generated .* DO NOT EDIT\\.$\n //\n+// The line may appear anywhere in the file, but is typically\n+// placed near the beginning so it is easy to find.\n+//\n // Note that go generate does not parse the file, so lines that look\n // like directives in comments or multiline strings will be treated\n // as directives.\n@@ -1397,7 +1400,6 @@\n // in the standard user cache directory for the current operating system.\n // Setting the GOCACHE environment variable overrides this default,\n // and running 'go env GOCACHE' prints the current cache directory.\n-// You can set the variable to 'off' to disable the cache.\n //\n // The go command periodically deletes cached data that has not been\n // used recently. Running 'go clean -cache' deletes all cached data.\n@@ -1596,14 +1598,14 @@\n // line comment. See the go/build package documentation for\n // more details.\n //\n-// Non-test Go source files can also include a //go:binary-only-package\n-// comment, indicating that the package sources are included\n-// for documentation only and must not be used to build the\n-// package binary. This enables distribution of Go packages in\n-// their compiled form alone. Even binary-only packages require\n-// accurate import blocks listing required dependencies, so that\n-// those dependencies can be supplied when linking the resulting\n-// command.\n+// Through the Go 1.12 release, non-test Go source files can also include\n+// a //go:binary-only-package comment, indicating that the package\n+// sources are included for documentation only and must not be used to\n+// build the package binary. This enables distribution of Go packages in\n+// their compiled form alone. Even binary-only packages require accurate\n+// import blocks listing required dependencies, so that those\n+// dependencies can be supplied when linking the resulting command.\n+// Note that this feature is scheduled to be removed after the Go 1.12 release.\n //\n //\n // The go.mod file\n@@ -2494,7 +2496,8 @@\n // development module, then get will update the required version.\n // Specifying a version earlier than the current required version is valid and\n // downgrades the dependency. The version suffix @none indicates that the\n-// dependency should be removed entirely.\n+// dependency should be removed entirely, downgrading or removing modules\n+// depending on it as needed.\n //\n // Although get defaults to using the latest version of the module containing\n // a named package, it does not use the latest version of that module's"}, {"sha": "d1166b1ed15fc0122bb48d1a32acd1628b3937c0", "filename": "libgo/go/cmd/go/go_test.go", "status": "modified", "additions": 45, "deletions": 6, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Fgo_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Fgo_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Fgo_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -894,12 +894,54 @@ func (tg *testgoData) failSSH() {\n \n func TestNewReleaseRebuildsStalePackagesInGOPATH(t *testing.T) {\n \tif testing.Short() {\n-\t\tt.Skip(\"don't rebuild the standard library in short mode\")\n+\t\tt.Skip(\"skipping lengthy test in short mode\")\n \t}\n \n \ttg := testgo(t)\n \tdefer tg.cleanup()\n \n+\t// Copy the runtime packages into a temporary GOROOT\n+\t// so that we can change files.\n+\tfor _, copydir := range []string{\n+\t\t\"src/runtime\",\n+\t\t\"src/internal/bytealg\",\n+\t\t\"src/internal/cpu\",\n+\t\t\"src/unsafe\",\n+\t\tfilepath.Join(\"pkg\", runtime.GOOS+\"_\"+runtime.GOARCH),\n+\t\tfilepath.Join(\"pkg/tool\", runtime.GOOS+\"_\"+runtime.GOARCH),\n+\t\t\"pkg/include\",\n+\t} {\n+\t\tsrcdir := filepath.Join(testGOROOT, copydir)\n+\t\ttg.tempDir(filepath.Join(\"goroot\", copydir))\n+\t\terr := filepath.Walk(srcdir,\n+\t\t\tfunc(path string, info os.FileInfo, err error) error {\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t\tif info.IsDir() {\n+\t\t\t\t\treturn nil\n+\t\t\t\t}\n+\t\t\t\tsrcrel, err := filepath.Rel(srcdir, path)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t\tdest := filepath.Join(\"goroot\", copydir, srcrel)\n+\t\t\t\tdata, err := ioutil.ReadFile(path)\n+\t\t\t\tif err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t\ttg.tempFile(dest, string(data))\n+\t\t\t\tif err := os.Chmod(tg.path(dest), info.Mode()); err != nil {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t\treturn nil\n+\t\t\t})\n+\t\tif err != nil {\n+\t\t\tt.Fatal(err)\n+\t\t}\n+\t}\n+\ttg.setenv(\"GOROOT\", tg.path(\"goroot\"))\n+\n \taddVar := func(name string, idx int) (restore func()) {\n \t\tdata, err := ioutil.ReadFile(name)\n \t\tif err != nil {\n@@ -928,7 +970,7 @@ func TestNewReleaseRebuildsStalePackagesInGOPATH(t *testing.T) {\n \t// Changing mtime of runtime/internal/sys/sys.go\n \t// should have no effect: only the content matters.\n \t// In fact this should be true even outside a release branch.\n-\tsys := runtime.GOROOT() + \"/src/runtime/internal/sys/sys.go\"\n+\tsys := tg.path(\"goroot/src/runtime/internal/sys/sys.go\")\n \ttg.sleep()\n \trestore := addVar(sys, 0)\n \trestore()\n@@ -943,7 +985,7 @@ func TestNewReleaseRebuildsStalePackagesInGOPATH(t *testing.T) {\n \trestore()\n \ttg.wantNotStale(\"p1\", \"\", \"./testgo list claims p1 is stale, incorrectly, after changing back to old release\")\n \taddVar(sys, 2)\n-\ttg.wantStale(\"p1\", \"stale dependency: runtime/internal/sys\", \"./testgo list claims p1 is NOT stale, incorrectly, after changing sys.go again\")\n+\ttg.wantStale(\"p1\", \"stale dependency: runtime\", \"./testgo list claims p1 is NOT stale, incorrectly, after changing sys.go again\")\n \ttg.run(\"install\", \"-i\", \"p1\")\n \ttg.wantNotStale(\"p1\", \"\", \"./testgo list claims p1 is stale after building with new release\")\n \n@@ -952,9 +994,6 @@ func TestNewReleaseRebuildsStalePackagesInGOPATH(t *testing.T) {\n \ttg.wantStale(\"p1\", \"stale dependency: runtime/internal/sys\", \"./testgo list claims p1 is NOT stale, incorrectly, after restoring sys.go\")\n \ttg.run(\"install\", \"-i\", \"p1\")\n \ttg.wantNotStale(\"p1\", \"\", \"./testgo list claims p1 is stale after building with old release\")\n-\n-\t// Everything is out of date. Rebuild to leave things in a better state.\n-\ttg.run(\"install\", \"std\")\n }\n \n func testLocalRun(tg *testgoData, exepath, local, match string) {"}, {"sha": "27121ed2ae679b1cfc155852065aca41622bfd3c", "filename": "libgo/go/cmd/go/internal/clean/clean.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fclean%2Fclean.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fclean%2Fclean.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fclean%2Fclean.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -152,7 +152,9 @@ func runClean(cmd *base.Command, args []string) {\n \t\t\t\tprev, _ := strconv.ParseInt(strings.TrimSpace(string(buf)), 10, 64)\n \t\t\t\tif now > prev {\n \t\t\t\t\tif err = f.Truncate(0); err == nil {\n-\t\t\t\t\t\t_, err = fmt.Fprintf(f, \"%d\\n\", now)\n+\t\t\t\t\t\tif _, err = f.Seek(0, 0); err == nil {\n+\t\t\t\t\t\t\t_, err = fmt.Fprintf(f, \"%d\\n\", now)\n+\t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tif closeErr := f.Close(); err == nil {"}, {"sha": "124dbc05f5d8f3fa6eee4ce6e7ee0b40ce9fce8f", "filename": "libgo/go/cmd/go/internal/generate/generate.go", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fgenerate%2Fgenerate.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fgenerate%2Fgenerate.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fgenerate%2Fgenerate.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -49,11 +49,14 @@ that can be run locally. It must either be in the shell path\n command alias, described below.\n \n To convey to humans and machine tools that code is generated,\n-generated source should have a line early in the file that\n-matches the following regular expression (in Go syntax):\n+generated source should have a line that matches the following\n+regular expression (in Go syntax):\n \n \t^// Code generated .* DO NOT EDIT\\.$\n \n+The line may appear anywhere in the file, but is typically\n+placed near the beginning so it is easy to find.\n+\n Note that go generate does not parse the file, so lines that look\n like directives in comments or multiline strings will be treated\n as directives."}, {"sha": "c219a45d74948004b1c9f1febc591ce13cb0d1b4", "filename": "libgo/go/cmd/go/internal/help/helpdoc.go", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fhelp%2Fhelpdoc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fhelp%2Fhelpdoc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fhelp%2Fhelpdoc.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -636,14 +636,14 @@ at the first item in the file that is not a blank line or //-style\n line comment. See the go/build package documentation for\n more details.\n \n-Non-test Go source files can also include a //go:binary-only-package\n-comment, indicating that the package sources are included\n-for documentation only and must not be used to build the\n-package binary. This enables distribution of Go packages in\n-their compiled form alone. Even binary-only packages require\n-accurate import blocks listing required dependencies, so that\n-those dependencies can be supplied when linking the resulting\n-command.\n+Through the Go 1.12 release, non-test Go source files can also include\n+a //go:binary-only-package comment, indicating that the package\n+sources are included for documentation only and must not be used to\n+build the package binary. This enables distribution of Go packages in\n+their compiled form alone. Even binary-only packages require accurate\n+import blocks listing required dependencies, so that those\n+dependencies can be supplied when linking the resulting command.\n+Note that this feature is scheduled to be removed after the Go 1.12 release.\n \t`,\n }\n \n@@ -705,7 +705,6 @@ The default location for cache data is a subdirectory named go-build\n in the standard user cache directory for the current operating system.\n Setting the GOCACHE environment variable overrides this default,\n and running 'go env GOCACHE' prints the current cache directory.\n-You can set the variable to 'off' to disable the cache.\n \n The go command periodically deletes cached data that has not been\n used recently. Running 'go clean -cache' deletes all cached data."}, {"sha": "789e93660854f7b14756e69eb840f2820efbbc7d", "filename": "libgo/go/cmd/go/internal/modcmd/tidy.go", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodcmd%2Ftidy.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodcmd%2Ftidy.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodcmd%2Ftidy.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -75,6 +75,7 @@ func modTidyGoSum() {\n \t// we only have to tell modfetch what needs keeping.\n \treqs := modload.Reqs()\n \tkeep := make(map[module.Version]bool)\n+\treplaced := make(map[module.Version]bool)\n \tvar walk func(module.Version)\n \twalk = func(m module.Version) {\n \t\t// If we build using a replacement module, keep the sum for the replacement,\n@@ -87,10 +88,11 @@ func modTidyGoSum() {\n \t\t\tkeep[m] = true\n \t\t} else {\n \t\t\tkeep[r] = true\n+\t\t\treplaced[m] = true\n \t\t}\n \t\tlist, _ := reqs.Required(m)\n \t\tfor _, r := range list {\n-\t\t\tif !keep[r] {\n+\t\t\tif !keep[r] && !replaced[r] {\n \t\t\t\twalk(r)\n \t\t\t}\n \t\t}"}, {"sha": "17a0ed45e21b4ed780d763bf03a639e0b0674bd6", "filename": "libgo/go/cmd/go/internal/modget/get.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodget%2Fget.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodget%2Fget.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodget%2Fget.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -56,7 +56,8 @@ If a module under consideration is already a dependency of the current\n development module, then get will update the required version.\n Specifying a version earlier than the current required version is valid and\n downgrades the dependency. The version suffix @none indicates that the\n-dependency should be removed entirely.\n+dependency should be removed entirely, downgrading or removing modules\n+depending on it as needed.\n \n Although get defaults to using the latest version of the module containing\n a named package, it does not use the latest version of that module's"}, {"sha": "6103545ea65cb934f5f6ea3688b113ab2844d88b", "filename": "libgo/go/cmd/go/internal/modload/build.go", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodload%2Fbuild.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodload%2Fbuild.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fmodload%2Fbuild.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -250,6 +250,16 @@ func findModule(target, path string) module.Version {\n }\n \n func ModInfoProg(info string) []byte {\n+\t// Inject a variable with the debug information as runtime/debug.modinfo,\n+\t// but compile it in package main so that it is specific to the binary.\n+\t//\n+\t// The variable must be a literal so that it will have the correct value\n+\t// before the initializer for package main runs.\n+\t//\n+\t// We also want the value to be present even if runtime/debug.modinfo is\n+\t// otherwise unused in the rest of the program. Reading it in an init function\n+\t// suffices for now.\n+\n \treturn []byte(fmt.Sprintf(`package main\n import _ \"unsafe\"\n //go:linkname __set_debug_modinfo__ runtime..z2fdebug.setmodinfo"}, {"sha": "a30bc3fa05a6c9fda464d44f8a0c0fc1ae3dee5a", "filename": "libgo/go/cmd/internal/objabi/funcid.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Finternal%2Fobjabi%2Ffuncid.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcmd%2Finternal%2Fobjabi%2Ffuncid.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Finternal%2Fobjabi%2Ffuncid.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -83,7 +83,7 @@ func GetFuncID(name, file string) FuncID {\n \tcase \"runtime.panicwrap\":\n \t\treturn FuncID_panicwrap\n \t}\n-\tif file == \"<autogenerated>\" && !strings.HasSuffix(name, \".init\") {\n+\tif file == \"<autogenerated>\" {\n \t\treturn FuncID_wrapper\n \t}\n \tif strings.HasPrefix(name, \"runtime.call\") {"}, {"sha": "53308ae92e33fdefbc77990618a17da84b249431", "filename": "libgo/go/crypto/aes/block.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Faes%2Fblock.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Faes%2Fblock.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Faes%2Fblock.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -31,7 +31,7 @@\n //\n // See FIPS 197 for specification, and see Daemen and Rijmen's Rijndael submission\n // for implementation details.\n-//\thttps://www.csrc.nist.gov/publications/fips/fips197/fips-197.pdf\n+//\thttps://csrc.nist.gov/csrc/media/publications/fips/197/final/documents/fips-197.pdf\n //\thttps://csrc.nist.gov/archive/aes/rijndael/Rijndael-ammended.pdf\n \n package aes"}, {"sha": "c84657c5e36777fcdf435b56ecf34d958f1b686f", "filename": "libgo/go/crypto/elliptic/elliptic.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Felliptic%2Felliptic.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Felliptic%2Felliptic.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Felliptic%2Felliptic.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -210,8 +210,9 @@ func (curve *CurveParams) doubleJacobian(x, y, z *big.Int) (*big.Int, *big.Int,\n \n \tx3 := new(big.Int).Mul(alpha, alpha)\n \tbeta8 := new(big.Int).Lsh(beta, 3)\n+\tbeta8.Mod(beta8, curve.P)\n \tx3.Sub(x3, beta8)\n-\tfor x3.Sign() == -1 {\n+\tif x3.Sign() == -1 {\n \t\tx3.Add(x3, curve.P)\n \t}\n \tx3.Mod(x3, curve.P)"}, {"sha": "7c3cf05c462c4c474231a7c7b5869d43dba33c42", "filename": "libgo/go/crypto/subtle/constant_time.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsubtle%2Fconstant_time.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -6,9 +6,9 @@\n // code but require careful thought to use correctly.\n package subtle\n \n-// ConstantTimeCompare returns 1 if and only if the two slices, x\n-// and y, have equal contents. The time taken is a function of the length of\n-// the slices and is independent of the contents.\n+// ConstantTimeCompare returns 1 if the two slices, x and y, have equal contents\n+// and 0 otherwise. The time taken is a function of the length of the slices and\n+// is independent of the contents.\n func ConstantTimeCompare(x, y []byte) int {\n \tif len(x) != len(y) {\n \t\treturn 0\n@@ -23,7 +23,7 @@ func ConstantTimeCompare(x, y []byte) int {\n \treturn ConstantTimeByteEq(v, 0)\n }\n \n-// ConstantTimeSelect returns x if v is 1 and y if v is 0.\n+// ConstantTimeSelect returns x if v == 1 and y if v == 0.\n // Its behavior is undefined if v takes any other value.\n func ConstantTimeSelect(v, x, y int) int { return ^(v-1)&x | (v-1)&y }\n "}, {"sha": "f695528fe07c190e2da5c0ea27afd783d611ff61", "filename": "libgo/go/crypto/tls/common.go", "status": "modified", "additions": 54, "deletions": 5, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fcommon.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fcommon.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fcommon.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -16,6 +16,7 @@ import (\n \t\"io\"\n \t\"math/big\"\n \t\"net\"\n+\t\"os\"\n \t\"strings\"\n \t\"sync\"\n \t\"time\"\n@@ -160,7 +161,7 @@ const (\n )\n \n // supportedSignatureAlgorithms contains the signature and hash algorithms that\n-// the code advertises as supported in a TLS 1.2 ClientHello and in a TLS 1.2\n+// the code advertises as supported in a TLS 1.2+ ClientHello and in a TLS 1.2+\n // CertificateRequest. The two fields are merged to match with TLS 1.3.\n // Note that in TLS 1.2, the ECDSA algorithms are not constrained to P-256, etc.\n var supportedSignatureAlgorithms = []SignatureScheme{\n@@ -177,6 +178,9 @@ var supportedSignatureAlgorithms = []SignatureScheme{\n \tECDSAWithSHA1,\n }\n \n+// RSA-PSS is disabled in TLS 1.2 for Go 1.12. See Issue 30055.\n+var supportedSignatureAlgorithmsTLS12 = supportedSignatureAlgorithms[3:]\n+\n // helloRetryRequestRandom is set as the Random value of a ServerHello\n // to signal that the message is actually a HelloRetryRequest.\n var helloRetryRequestRandom = []byte{ // See RFC 8446, Section 4.1.3.\n@@ -199,7 +203,7 @@ type ConnectionState struct {\n \tVersion                     uint16                // TLS version used by the connection (e.g. VersionTLS12)\n \tHandshakeComplete           bool                  // TLS handshake is complete\n \tDidResume                   bool                  // connection resumes a previous TLS connection\n-\tCipherSuite                 uint16                // cipher suite in use (TLS_RSA_WITH_RC4_128_SHA, ...)\n+\tCipherSuite                 uint16                // cipher suite in use (TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256, ...)\n \tNegotiatedProtocol          string                // negotiated next protocol (not guaranteed to be from Config.NextProtos)\n \tNegotiatedProtocolIsMutual  bool                  // negotiated protocol was advertised by server (client side only)\n \tServerName                  string                // server name requested by client, if any (server side only)\n@@ -315,7 +319,7 @@ const (\n // guide certificate selection in the GetCertificate callback.\n type ClientHelloInfo struct {\n \t// CipherSuites lists the CipherSuites supported by the client (e.g.\n-\t// TLS_RSA_WITH_RC4_128_SHA).\n+\t// TLS_AES_128_GCM_SHA256, TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256).\n \tCipherSuites []uint16\n \n \t// ServerName indicates the name of the server requested by the client\n@@ -521,8 +525,11 @@ type Config struct {\n \t// This should be used only for testing.\n \tInsecureSkipVerify bool\n \n-\t// CipherSuites is a list of supported cipher suites. If CipherSuites\n-\t// is nil, TLS uses a list of suites supported by the implementation.\n+\t// CipherSuites is a list of supported cipher suites for TLS versions up to\n+\t// TLS 1.2. If CipherSuites is nil, a default list of secure cipher suites\n+\t// is used, with a preference order based on hardware performance. The\n+\t// default cipher suites might change over Go versions. Note that TLS 1.3\n+\t// ciphersuites are not configurable.\n \tCipherSuites []uint16\n \n \t// PreferServerCipherSuites controls whether the server selects the\n@@ -772,11 +779,53 @@ func (c *Config) supportedVersions(isClient bool) []uint16 {\n \t\tif isClient && v < VersionTLS10 {\n \t\t\tcontinue\n \t\t}\n+\t\t// TLS 1.3 is opt-in in Go 1.12.\n+\t\tif v == VersionTLS13 && !isTLS13Supported() {\n+\t\t\tcontinue\n+\t\t}\n \t\tversions = append(versions, v)\n \t}\n \treturn versions\n }\n \n+// tls13Support caches the result for isTLS13Supported.\n+var tls13Support struct {\n+\tsync.Once\n+\tcached bool\n+}\n+\n+// isTLS13Supported returns whether the program opted into TLS 1.3 via\n+// GODEBUG=tls13=1. It's cached after the first execution.\n+func isTLS13Supported() bool {\n+\ttls13Support.Do(func() {\n+\t\ttls13Support.cached = goDebugString(\"tls13\") == \"1\"\n+\t})\n+\treturn tls13Support.cached\n+}\n+\n+// goDebugString returns the value of the named GODEBUG key.\n+// GODEBUG is of the form \"key=val,key2=val2\".\n+func goDebugString(key string) string {\n+\ts := os.Getenv(\"GODEBUG\")\n+\tfor i := 0; i < len(s)-len(key)-1; i++ {\n+\t\tif i > 0 && s[i-1] != ',' {\n+\t\t\tcontinue\n+\t\t}\n+\t\tafterKey := s[i+len(key):]\n+\t\tif afterKey[0] != '=' || s[i:i+len(key)] != key {\n+\t\t\tcontinue\n+\t\t}\n+\t\tval := afterKey[1:]\n+\t\tfor i, b := range val {\n+\t\t\tif b == ',' {\n+\t\t\t\treturn val[:i]\n+\t\t\t}\n+\t\t}\n+\t\treturn val\n+\t}\n+\treturn \"\"\n+}\n+\n func (c *Config) maxSupportedVersion(isClient bool) uint16 {\n \tsupportedVersions := c.supportedVersions(isClient)\n \tif len(supportedVersions) == 0 {"}, {"sha": "57f61050e5ff2c6319e54aa1a490950d5329d41b", "filename": "libgo/go/crypto/tls/conn_test.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fconn_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fconn_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fconn_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -142,6 +142,7 @@ func runDynamicRecordSizingTest(t *testing.T, config *Config) {\n \n \thandshakeDone := make(chan struct{})\n \trecordSizesChan := make(chan []int, 1)\n+\tdefer func() { <-recordSizesChan }() // wait for the goroutine to exit\n \tgo func() {\n \t\t// This goroutine performs a TLS handshake over clientConn and\n \t\t// then reads TLS records until EOF. It writes a slice that"}, {"sha": "7441e5b55623314ecb14f294b31ad383451d70cd", "filename": "libgo/go/crypto/tls/handshake_client_test.go", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -855,6 +855,30 @@ func TestHandshakeClientCertRSAPKCS1v15(t *testing.T) {\n \trunClientTestTLS12(t, test)\n }\n \n+func TestHandshakeClientCertPSSDisabled(t *testing.T) {\n+\tconfig := testConfig.Clone()\n+\tcert, _ := X509KeyPair([]byte(clientCertificatePEM), []byte(clientKeyPEM))\n+\tconfig.Certificates = []Certificate{cert}\n+\n+\ttest := &clientTest{\n+\t\tname:   \"ClientCert-RSA-PSS-Disabled\",\n+\t\targs:   []string{\"-cipher\", \"AES128\", \"-Verify\", \"1\"},\n+\t\tconfig: config,\n+\t}\n+\n+\t// Restore the default signature algorithms, disabling RSA-PSS in TLS 1.2,\n+\t// and check that handshakes still work.\n+\ttestSupportedSignatureAlgorithmsTLS12 := supportedSignatureAlgorithmsTLS12\n+\tdefer func() { supportedSignatureAlgorithmsTLS12 = testSupportedSignatureAlgorithmsTLS12 }()\n+\tsupportedSignatureAlgorithmsTLS12 = savedSupportedSignatureAlgorithmsTLS12\n+\n+\t// Use t.Run to ensure the defer runs after all parallel tests end.\n+\tt.Run(\"\", func(t *testing.T) {\n+\t\trunClientTestTLS12(t, test)\n+\t\trunClientTestTLS13(t, test)\n+\t})\n+}\n+\n func TestClientKeyUpdate(t *testing.T) {\n \ttest := &clientTest{\n \t\tname:          \"KeyUpdate\","}, {"sha": "4f4b60ae2cea8566c11947fa79deaec0f04d2662", "filename": "libgo/go/crypto/tls/handshake_server.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -463,7 +463,7 @@ func (hs *serverHandshakeState) doFullHandshake() error {\n \t\t}\n \t\tif c.vers >= VersionTLS12 {\n \t\t\tcertReq.hasSignatureAlgorithm = true\n-\t\t\tcertReq.supportedSignatureAlgorithms = supportedSignatureAlgorithms\n+\t\t\tcertReq.supportedSignatureAlgorithms = supportedSignatureAlgorithmsTLS12\n \t\t}\n \n \t\t// An empty list of certificateAuthorities signals to\n@@ -559,7 +559,7 @@ func (hs *serverHandshakeState) doFullHandshake() error {\n \t\t}\n \n \t\t// Determine the signature type.\n-\t\t_, sigType, hashFunc, err := pickSignatureAlgorithm(pub, []SignatureScheme{certVerify.signatureAlgorithm}, supportedSignatureAlgorithms, c.vers)\n+\t\t_, sigType, hashFunc, err := pickSignatureAlgorithm(pub, []SignatureScheme{certVerify.signatureAlgorithm}, supportedSignatureAlgorithmsTLS12, c.vers)\n \t\tif err != nil {\n \t\t\tc.sendAlert(alertIllegalParameter)\n \t\t\treturn err"}, {"sha": "c23f98f6bc5c17da1fe8a83b5656b8c64f831177", "filename": "libgo/go/crypto/tls/handshake_server_test.go", "status": "modified", "additions": 152, "deletions": 37, "changes": 189, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1211,6 +1211,33 @@ func TestHandshakeServerRSAPSS(t *testing.T) {\n \trunServerTestTLS13(t, test)\n }\n \n+func TestHandshakeServerPSSDisabled(t *testing.T) {\n+\ttest := &serverTest{\n+\t\tname:    \"RSA-PSS-Disabled\",\n+\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\"},\n+\t\twait:    true,\n+\t}\n+\n+\t// Restore the default signature algorithms, disabling RSA-PSS in TLS 1.2,\n+\t// and check that handshakes still work.\n+\ttestSupportedSignatureAlgorithmsTLS12 := supportedSignatureAlgorithmsTLS12\n+\tdefer func() { supportedSignatureAlgorithmsTLS12 = testSupportedSignatureAlgorithmsTLS12 }()\n+\tsupportedSignatureAlgorithmsTLS12 = savedSupportedSignatureAlgorithmsTLS12\n+\n+\trunServerTestTLS12(t, test)\n+\trunServerTestTLS13(t, test)\n+\n+\ttest = &serverTest{\n+\t\tname:    \"RSA-PSS-Disabled-Required\",\n+\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-sigalgs\", \"rsa_pss_rsae_sha256\"},\n+\t\twait:    true,\n+\n+\t\texpectHandshakeErrorIncluding: \"peer doesn't support any common signature algorithms\",\n+\t}\n+\n+\trunServerTestTLS12(t, test)\n+}\n+\n func benchmarkHandshakeServer(b *testing.B, version uint16, cipherSuite uint16, curve CurveID, cert []byte, key crypto.PrivateKey) {\n \tconfig := testConfig.Clone()\n \tconfig.CipherSuites = []uint16{cipherSuite}\n@@ -1390,49 +1417,82 @@ func TestClientAuth(t *testing.T) {\n \t\tdefer os.Remove(ecdsaCertPath)\n \t\tecdsaKeyPath = tempFile(clientECDSAKeyPEM)\n \t\tdefer os.Remove(ecdsaKeyPath)\n-\t} else {\n-\t\tt.Parallel()\n \t}\n \n-\tconfig := testConfig.Clone()\n-\tconfig.ClientAuth = RequestClientCert\n+\tt.Run(\"Normal\", func(t *testing.T) {\n+\t\tconfig := testConfig.Clone()\n+\t\tconfig.ClientAuth = RequestClientCert\n \n-\ttest := &serverTest{\n-\t\tname:    \"ClientAuthRequestedNotGiven\",\n-\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\"},\n-\t\tconfig:  config,\n-\t}\n-\trunServerTestTLS12(t, test)\n-\trunServerTestTLS13(t, test)\n+\t\ttest := &serverTest{\n+\t\t\tname:    \"ClientAuthRequestedNotGiven\",\n+\t\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\"},\n+\t\t\tconfig:  config,\n+\t\t}\n+\t\trunServerTestTLS12(t, test)\n+\t\trunServerTestTLS13(t, test)\n \n-\ttest = &serverTest{\n-\t\tname: \"ClientAuthRequestedAndGiven\",\n-\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\",\n-\t\t\t\"-cert\", certPath, \"-key\", keyPath, \"-sigalgs\", \"rsa_pss_rsae_sha256\"},\n-\t\tconfig:            config,\n-\t\texpectedPeerCerts: []string{clientCertificatePEM},\n-\t}\n-\trunServerTestTLS12(t, test)\n-\trunServerTestTLS13(t, test)\n+\t\tconfig.ClientAuth = RequireAnyClientCert\n \n-\ttest = &serverTest{\n-\t\tname: \"ClientAuthRequestedAndECDSAGiven\",\n-\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\",\n-\t\t\t\"-cert\", ecdsaCertPath, \"-key\", ecdsaKeyPath},\n-\t\tconfig:            config,\n-\t\texpectedPeerCerts: []string{clientECDSACertificatePEM},\n-\t}\n-\trunServerTestTLS12(t, test)\n-\trunServerTestTLS13(t, test)\n+\t\ttest = &serverTest{\n+\t\t\tname: \"ClientAuthRequestedAndGiven\",\n+\t\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\",\n+\t\t\t\t\"-cert\", certPath, \"-key\", keyPath, \"-sigalgs\", \"rsa_pss_rsae_sha256\"},\n+\t\t\tconfig:            config,\n+\t\t\texpectedPeerCerts: []string{clientCertificatePEM},\n+\t\t}\n+\t\trunServerTestTLS12(t, test)\n+\t\trunServerTestTLS13(t, test)\n+\n+\t\ttest = &serverTest{\n+\t\t\tname: \"ClientAuthRequestedAndECDSAGiven\",\n+\t\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\",\n+\t\t\t\t\"-cert\", ecdsaCertPath, \"-key\", ecdsaKeyPath},\n+\t\t\tconfig:            config,\n+\t\t\texpectedPeerCerts: []string{clientECDSACertificatePEM},\n+\t\t}\n+\t\trunServerTestTLS12(t, test)\n+\t\trunServerTestTLS13(t, test)\n+\n+\t\ttest = &serverTest{\n+\t\t\tname: \"ClientAuthRequestedAndPKCS1v15Given\",\n+\t\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\",\n+\t\t\t\t\"-cert\", certPath, \"-key\", keyPath, \"-sigalgs\", \"rsa_pkcs1_sha256\"},\n+\t\t\tconfig:            config,\n+\t\t\texpectedPeerCerts: []string{clientCertificatePEM},\n+\t\t}\n+\t\trunServerTestTLS12(t, test)\n+\t})\n \n-\ttest = &serverTest{\n-\t\tname: \"ClientAuthRequestedAndPKCS1v15Given\",\n-\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\",\n-\t\t\t\"-cert\", certPath, \"-key\", keyPath, \"-sigalgs\", \"rsa_pkcs1_sha256\"},\n-\t\tconfig:            config,\n-\t\texpectedPeerCerts: []string{clientCertificatePEM},\n-\t}\n-\trunServerTestTLS12(t, test)\n+\t// Restore the default signature algorithms, disabling RSA-PSS in TLS 1.2,\n+\t// and check that handshakes still work.\n+\ttestSupportedSignatureAlgorithmsTLS12 := supportedSignatureAlgorithmsTLS12\n+\tdefer func() { supportedSignatureAlgorithmsTLS12 = testSupportedSignatureAlgorithmsTLS12 }()\n+\tsupportedSignatureAlgorithmsTLS12 = savedSupportedSignatureAlgorithmsTLS12\n+\n+\tt.Run(\"PSSDisabled\", func(t *testing.T) {\n+\t\tconfig := testConfig.Clone()\n+\t\tconfig.ClientAuth = RequireAnyClientCert\n+\n+\t\ttest := &serverTest{\n+\t\t\tname: \"ClientAuthRequestedAndGiven-PSS-Disabled\",\n+\t\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\",\n+\t\t\t\t\"-cert\", certPath, \"-key\", keyPath},\n+\t\t\tconfig:            config,\n+\t\t\texpectedPeerCerts: []string{clientCertificatePEM},\n+\t\t}\n+\t\trunServerTestTLS12(t, test)\n+\t\trunServerTestTLS13(t, test)\n+\n+\t\ttest = &serverTest{\n+\t\t\tname: \"ClientAuthRequestedAndGiven-PSS-Disabled-Required\",\n+\t\t\tcommand: []string{\"openssl\", \"s_client\", \"-no_ticket\", \"-cipher\", \"AES128-SHA\",\n+\t\t\t\t\"-cert\", certPath, \"-key\", keyPath, \"-client_sigalgs\", \"rsa_pss_rsae_sha256\"},\n+\t\t\tconfig: config,\n+\n+\t\t\texpectHandshakeErrorIncluding: \"client didn't provide a certificate\",\n+\t\t}\n+\t\trunServerTestTLS12(t, test)\n+\t})\n }\n \n func TestSNIGivenOnFailure(t *testing.T) {\n@@ -1697,3 +1757,58 @@ func TestCloneHash(t *testing.T) {\n \t\tt.Error(\"cloned hash generated a different sum\")\n \t}\n }\n+\n+func TestKeyTooSmallForRSAPSS(t *testing.T) {\n+\tclientConn, serverConn := localPipe(t)\n+\tclient := Client(clientConn, testConfig)\n+\tcert, err := X509KeyPair([]byte(`-----BEGIN CERTIFICATE-----\n+MIIBcTCCARugAwIBAgIQGjQnkCFlUqaFlt6ixyz/tDANBgkqhkiG9w0BAQsFADAS\n+MRAwDgYDVQQKEwdBY21lIENvMB4XDTE5MDExODIzMjMyOFoXDTIwMDExODIzMjMy\n+OFowEjEQMA4GA1UEChMHQWNtZSBDbzBcMA0GCSqGSIb3DQEBAQUAA0sAMEgCQQDd\n+ez1rFUDwax2HTxbcnFUP9AhcgEGMHVV2nn4VVEWFJB6I8C/Nkx0XyyQlrmFYBzEQ\n+nIPhKls4T0hFoLvjJnXpAgMBAAGjTTBLMA4GA1UdDwEB/wQEAwIFoDATBgNVHSUE\n+DDAKBggrBgEFBQcDATAMBgNVHRMBAf8EAjAAMBYGA1UdEQQPMA2CC2V4YW1wbGUu\n+Y29tMA0GCSqGSIb3DQEBCwUAA0EAxDuUS+BrrS3c+h+k+fQPOmOScy6yTX9mHw0Q\n+KbucGamXYEy0URIwOdO0tQ3LHPc1YGvYSPwkDjkjqECs2Vm/AA==\n+-----END CERTIFICATE-----`), []byte(`-----BEGIN RSA PRIVATE KEY-----\n+MIIBOgIBAAJBAN17PWsVQPBrHYdPFtycVQ/0CFyAQYwdVXaefhVURYUkHojwL82T\n+HRfLJCWuYVgHMRCcg+EqWzhPSEWgu+MmdekCAwEAAQJBALjQYNTdXF4CFBbXwUz/\n+yt9QFDYT9B5WT/12jeGAe653gtYS6OOi/+eAkGmzg1GlRnw6fOfn+HYNFDORST7z\n+4j0CIQDn2xz9hVWQEu9ee3vecNT3f60huDGTNoRhtqgweQGX0wIhAPSLj1VcRZEz\n+nKpbtU22+PbIMSJ+e80fmY9LIPx5N4HTAiAthGSimMR9bloz0EY3GyuUEyqoDgMd\n+hXxjuno2WesoJQIgemilbcALXpxsLmZLgcQ2KSmaVr7jb5ECx9R+hYKTw1sCIG4s\n+T+E0J8wlH24pgwQHzy7Ko2qLwn1b5PW8ecrlvP1g\n+-----END RSA PRIVATE KEY-----`))\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tdone := make(chan struct{})\n+\tgo func() {\n+\t\tconfig := testConfig.Clone()\n+\t\tconfig.Certificates = []Certificate{cert}\n+\t\tconfig.MinVersion = VersionTLS13\n+\t\tserver := Server(serverConn, config)\n+\t\terr := server.Handshake()\n+\t\tif !strings.Contains(err.Error(), \"key size too small for PSS signature\") {\n+\t\t\tt.Errorf(`expected \"key size too small for PSS signature\", got %q`, err)\n+\t\t}\n+\t\tclose(done)\n+\t}()\n+\terr = client.Handshake()\n+\tif !strings.Contains(err.Error(), \"handshake failure\") {\n+\t\tt.Errorf(`expected \"handshake failure\", got %q`, err)\n+\t}\n+\t<-done\n+\n+\t// With RSA-PSS disabled and TLS 1.2, this should work.\n+\n+\ttestSupportedSignatureAlgorithmsTLS12 := supportedSignatureAlgorithmsTLS12\n+\tdefer func() { supportedSignatureAlgorithmsTLS12 = testSupportedSignatureAlgorithmsTLS12 }()\n+\tsupportedSignatureAlgorithmsTLS12 = savedSupportedSignatureAlgorithmsTLS12\n+\n+\tserverConfig := testConfig.Clone()\n+\tserverConfig.Certificates = []Certificate{cert}\n+\tserverConfig.MaxVersion = VersionTLS12\n+\ttestHandshake(t, testConfig, serverConfig)\n+}"}, {"sha": "fd65ac11909901b5dae02a5862c58de8f7283549", "filename": "libgo/go/crypto/tls/handshake_server_tls13.go", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_tls13.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_tls13.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_tls13.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -635,7 +635,13 @@ func (hs *serverHandshakeStateTLS13) sendServerCertificate() error {\n \t}\n \tsig, err := hs.cert.PrivateKey.(crypto.Signer).Sign(c.config.rand(), h.Sum(nil), signOpts)\n \tif err != nil {\n-\t\tc.sendAlert(alertInternalError)\n+\t\tpublic := hs.cert.PrivateKey.(crypto.Signer).Public()\n+\t\tif rsaKey, ok := public.(*rsa.PublicKey); ok && sigType == signatureRSAPSS &&\n+\t\t\trsaKey.N.BitLen()/8 < sigHash.Size()*2+2 { // key too small for RSA-PSS\n+\t\t\tc.sendAlert(alertHandshakeFailure)\n+\t\t} else {\n+\t\t\tc.sendAlert(alertInternalError)\n+\t\t}\n \t\treturn errors.New(\"tls: failed to sign handshake: \" + err.Error())\n \t}\n \tcertVerifyMsg.signature = sig"}, {"sha": "05fe77b3e205b18a098cb9b6ee1820a677f4bd97", "filename": "libgo/go/crypto/tls/key_agreement.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fkey_agreement.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Fkey_agreement.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fkey_agreement.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -177,7 +177,7 @@ NextCandidate:\n \t\treturn nil, errors.New(\"tls: certificate private key does not implement crypto.Signer\")\n \t}\n \n-\tsignatureAlgorithm, sigType, hashFunc, err := pickSignatureAlgorithm(priv.Public(), clientHello.supportedSignatureAlgorithms, supportedSignatureAlgorithms, ka.version)\n+\tsignatureAlgorithm, sigType, hashFunc, err := pickSignatureAlgorithm(priv.Public(), clientHello.supportedSignatureAlgorithms, supportedSignatureAlgorithmsTLS12, ka.version)\n \tif err != nil {\n \t\treturn nil, err\n \t}"}, {"sha": "9d59cb125d452ac158810e298467f94a55578157", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-RSA-PSS-Disabled", "status": "added", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-PSS-Disabled", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-PSS-Disabled", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-PSS-Disabled?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,137 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 f8 01 00 00  f4 03 03 00 00 00 00 00  |................|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 20 00 00 00 00  |........... ....|\n+00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000040  00 00 00 00 00 00 00 00  00 00 00 00 00 32 cc a8  |.............2..|\n+00000050  cc a9 c0 2f c0 2b c0 30  c0 2c c0 27 c0 13 c0 23  |.../.+.0.,.'...#|\n+00000060  c0 09 c0 14 c0 0a 00 9c  00 9d 00 3c 00 2f 00 35  |...........<./.5|\n+00000070  c0 12 00 0a 00 05 c0 11  c0 07 13 01 13 03 13 02  |................|\n+00000080  01 00 00 79 00 05 00 05  01 00 00 00 00 00 0a 00  |...y............|\n+00000090  0a 00 08 00 1d 00 17 00  18 00 19 00 0b 00 02 01  |................|\n+000000a0  00 00 0d 00 18 00 16 08  04 08 05 08 06 04 01 04  |................|\n+000000b0  03 05 01 05 03 06 01 06  03 02 01 02 03 ff 01 00  |................|\n+000000c0  01 00 00 12 00 00 00 2b  00 09 08 03 04 03 03 03  |.......+........|\n+000000d0  02 03 01 00 33 00 26 00  24 00 1d 00 20 2f e5 7d  |....3.&.$... /.}|\n+000000e0  a3 47 cd 62 43 15 28 da  ac 5f bb 29 07 30 ff f6  |.G.bC.(.._.).0..|\n+000000f0  84 af c4 cf c2 ed 90 99  5f 58 cb 3b 74           |........_X.;t|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 59 02 00 00  55 03 03 33 ad 8d f8 90  |....Y...U..3....|\n+00000010  d1 72 5d ef e8 94 0f d7  58 15 59 9f 0b f9 ec 73  |.r].....X.Y....s|\n+00000020  99 53 f7 03 81 53 1a aa  05 f0 17 20 55 a1 9e 4e  |.S...S..... U..N|\n+00000030  98 26 6b b8 d5 bc 2c 3e  ca f6 a0 d9 bb f2 3b dd  |.&k...,>......;.|\n+00000040  be 99 f1 35 de 1c f6 51  5b 19 4f 55 c0 2f 00 00  |...5...Q[.OU./..|\n+00000050  0d ff 01 00 01 00 00 0b  00 04 03 00 01 02 16 03  |................|\n+00000060  03 02 59 0b 00 02 55 00  02 52 00 02 4f 30 82 02  |..Y...U..R..O0..|\n+00000070  4b 30 82 01 b4 a0 03 02  01 02 02 09 00 e8 f0 9d  |K0..............|\n+00000080  3f e2 5b ea a6 30 0d 06  09 2a 86 48 86 f7 0d 01  |?.[..0...*.H....|\n+00000090  01 0b 05 00 30 1f 31 0b  30 09 06 03 55 04 0a 13  |....0.1.0...U...|\n+000000a0  02 47 6f 31 10 30 0e 06  03 55 04 03 13 07 47 6f  |.Go1.0...U....Go|\n+000000b0  20 52 6f 6f 74 30 1e 17  0d 31 36 30 31 30 31 30  | Root0...1601010|\n+000000c0  30 30 30 30 30 5a 17 0d  32 35 30 31 30 31 30 30  |00000Z..25010100|\n+000000d0  30 30 30 30 5a 30 1a 31  0b 30 09 06 03 55 04 0a  |0000Z0.1.0...U..|\n+000000e0  13 02 47 6f 31 0b 30 09  06 03 55 04 03 13 02 47  |..Go1.0...U....G|\n+000000f0  6f 30 81 9f 30 0d 06 09  2a 86 48 86 f7 0d 01 01  |o0..0...*.H.....|\n+00000100  01 05 00 03 81 8d 00 30  81 89 02 81 81 00 db 46  |.......0.......F|\n+00000110  7d 93 2e 12 27 06 48 bc  06 28 21 ab 7e c4 b6 a2  |}...'.H..(!.~...|\n+00000120  5d fe 1e 52 45 88 7a 36  47 a5 08 0d 92 42 5b c2  |]..RE.z6G....B[.|\n+00000130  81 c0 be 97 79 98 40 fb  4f 6d 14 fd 2b 13 8b c2  |....y.@.Om..+...|\n+00000140  a5 2e 67 d8 d4 09 9e d6  22 38 b7 4a 0b 74 73 2b  |..g.....\"8.J.ts+|\n+00000150  c2 34 f1 d1 93 e5 96 d9  74 7b f3 58 9f 6c 61 3c  |.4......t{.X.la<|\n+00000160  c0 b0 41 d4 d9 2b 2b 24  23 77 5b 1c 3b bd 75 5d  |..A..++$#w[.;.u]|\n+00000170  ce 20 54 cf a1 63 87 1d  1e 24 c4 f3 1d 1a 50 8b  |. T..c...$....P.|\n+00000180  aa b6 14 43 ed 97 a7 75  62 f4 14 c8 52 d7 02 03  |...C...ub...R...|\n+00000190  01 00 01 a3 81 93 30 81  90 30 0e 06 03 55 1d 0f  |......0..0...U..|\n+000001a0  01 01 ff 04 04 03 02 05  a0 30 1d 06 03 55 1d 25  |.........0...U.%|\n+000001b0  04 16 30 14 06 08 2b 06  01 05 05 07 03 01 06 08  |..0...+.........|\n+000001c0  2b 06 01 05 05 07 03 02  30 0c 06 03 55 1d 13 01  |+.......0...U...|\n+000001d0  01 ff 04 02 30 00 30 19  06 03 55 1d 0e 04 12 04  |....0.0...U.....|\n+000001e0  10 9f 91 16 1f 43 43 3e  49 a6 de 6d b6 80 d7 9f  |.....CC>I..m....|\n+000001f0  60 30 1b 06 03 55 1d 23  04 14 30 12 80 10 48 13  |`0...U.#..0...H.|\n+00000200  49 4d 13 7e 16 31 bb a3  01 d5 ac ab 6e 7b 30 19  |IM.~.1......n{0.|\n+00000210  06 03 55 1d 11 04 12 30  10 82 0e 65 78 61 6d 70  |..U....0...examp|\n+00000220  6c 65 2e 67 6f 6c 61 6e  67 30 0d 06 09 2a 86 48  |le.golang0...*.H|\n+00000230  86 f7 0d 01 01 0b 05 00  03 81 81 00 9d 30 cc 40  |.............0.@|\n+00000240  2b 5b 50 a0 61 cb ba e5  53 58 e1 ed 83 28 a9 58  |+[P.a...SX...(.X|\n+00000250  1a a9 38 a4 95 a1 ac 31  5a 1a 84 66 3d 43 d3 2d  |..8....1Z..f=C.-|\n+00000260  d9 0b f2 97 df d3 20 64  38 92 24 3a 00 bc cf 9c  |...... d8.$:....|\n+00000270  7d b7 40 20 01 5f aa d3  16 61 09 a2 76 fd 13 c3  |}.@ ._...a..v...|\n+00000280  cc e1 0c 5c ee b1 87 82  f1 6c 04 ed 73 bb b3 43  |...\\.....l..s..C|\n+00000290  77 8d 0c 1c f1 0f a1 d8  40 83 61 c9 4c 72 2b 9d  |w.......@.a.Lr+.|\n+000002a0  ae db 46 06 06 4d f4 c1  b3 3e c0 d1 bd 42 d4 db  |..F..M...>...B..|\n+000002b0  fe 3d 13 60 84 5c 21 d3  3b e9 fa e7 16 03 03 00  |.=.`.\\!.;.......|\n+000002c0  ac 0c 00 00 a8 03 00 1d  20 2d c8 0c d2 27 fc f9  |........ -...'..|\n+000002d0  79 71 c4 17 ea 45 ec 0b  dd 66 ce af ec 49 96 7d  |yq...E...f...I.}|\n+000002e0  43 ff 88 68 b1 a8 bb e1  38 08 04 00 80 5a ab 5b  |C..h....8....Z.[|\n+000002f0  e6 b3 32 e2 98 ae c3 ed  7c f9 90 c4 a4 ea dd 70  |..2.....|......p|\n+00000300  fc a4 f8 ef d1 15 0d b7  ad b8 e3 1f 3e c0 e4 40  |............>..@|\n+00000310  0d 7b 50 36 8f 88 cb 88  59 7c 20 63 d1 7f 36 9e  |.{P6....Y| c..6.|\n+00000320  de a7 cb 6a 49 fd 65 32  36 0b 10 6a df 58 ef fd  |...jI.e26..j.X..|\n+00000330  f6 fc e6 65 e7 81 0e 73  25 87 c7 89 dc ec ae 7c  |...e...s%......||\n+00000340  e4 81 79 79 a2 b9 12 28  ab 3b d0 2e 5e 81 47 2a  |..yy...(.;..^.G*|\n+00000350  79 1e 16 21 fa 64 78 24  33 24 f7 ac f1 11 a7 15  |y..!.dx$3$......|\n+00000360  98 f6 24 52 14 7c 1f 28  0c 24 b1 a9 8a 16 03 03  |..$R.|.(.$......|\n+00000370  00 3a 0d 00 00 36 03 01  02 40 00 2e 04 03 05 03  |.:...6...@......|\n+00000380  06 03 08 07 08 08 08 09  08 0a 08 0b 08 04 08 05  |................|\n+00000390  08 06 04 01 05 01 06 01  03 03 02 03 03 01 02 01  |................|\n+000003a0  03 02 02 02 04 02 05 02  06 02 00 00 16 03 03 00  |................|\n+000003b0  04 0e 00 00 00                                    |.....|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 01 fd 0b 00 01  f9 00 01 f6 00 01 f3 30  |...............0|\n+00000010  82 01 ef 30 82 01 58 a0  03 02 01 02 02 10 5c 19  |...0..X.......\\.|\n+00000020  c1 89 65 83 55 6f dc 0b  c9 b9 93 9f e9 bc 30 0d  |..e.Uo........0.|\n+00000030  06 09 2a 86 48 86 f7 0d  01 01 0b 05 00 30 12 31  |..*.H........0.1|\n+00000040  10 30 0e 06 03 55 04 0a  13 07 41 63 6d 65 20 43  |.0...U....Acme C|\n+00000050  6f 30 1e 17 0d 31 36 30  38 31 37 32 31 35 32 33  |o0...16081721523|\n+00000060  31 5a 17 0d 31 37 30 38  31 37 32 31 35 32 33 31  |1Z..170817215231|\n+00000070  5a 30 12 31 10 30 0e 06  03 55 04 0a 13 07 41 63  |Z0.1.0...U....Ac|\n+00000080  6d 65 20 43 6f 30 81 9f  30 0d 06 09 2a 86 48 86  |me Co0..0...*.H.|\n+00000090  f7 0d 01 01 01 05 00 03  81 8d 00 30 81 89 02 81  |...........0....|\n+000000a0  81 00 ba 6f aa 86 bd cf  bf 9f f2 ef 5c 94 60 78  |...o........\\.`x|\n+000000b0  6f e8 13 f2 d1 96 6f cd  d9 32 6e 22 37 ce 41 f9  |o.....o..2n\"7.A.|\n+000000c0  ca 5d 29 ac e1 27 da 61  a2 ee 81 cb 10 c7 df 34  |.])..'.a.......4|\n+000000d0  58 95 86 e9 3d 19 e6 5c  27 73 60 c8 8d 78 02 f4  |X...=..\\'s`..x..|\n+000000e0  1d a4 98 09 a3 19 70 69  3c 25 62 66 2a ab 22 23  |......pi<%bf*.\"#|\n+000000f0  c5 7b 85 38 4f 2e 09 73  32 a7 bd 3e 9b ad ca 84  |.{.8O..s2..>....|\n+00000100  07 e6 0f 3a ff 77 c5 9d  41 85 00 8a b6 9b ee b0  |...:.w..A.......|\n+00000110  a4 3f 2d 4c 4c e6 42 3e  bb 51 c8 dd 48 54 f4 0c  |.?-LL.B>.Q..HT..|\n+00000120  8e 47 02 03 01 00 01 a3  46 30 44 30 0e 06 03 55  |.G......F0D0...U|\n+00000130  1d 0f 01 01 ff 04 04 03  02 05 a0 30 13 06 03 55  |...........0...U|\n+00000140  1d 25 04 0c 30 0a 06 08  2b 06 01 05 05 07 03 01  |.%..0...+.......|\n+00000150  30 0c 06 03 55 1d 13 01  01 ff 04 02 30 00 30 0f  |0...U.......0.0.|\n+00000160  06 03 55 1d 11 04 08 30  06 87 04 7f 00 00 01 30  |..U....0.......0|\n+00000170  0d 06 09 2a 86 48 86 f7  0d 01 01 0b 05 00 03 81  |...*.H..........|\n+00000180  81 00 46 ab 44 a2 fb 28  54 f8 5a 67 f8 62 94 f1  |..F.D..(T.Zg.b..|\n+00000190  9a b2 18 9e f2 b1 de 1d  7e 6f 76 95 a9 ba e7 5d  |........~ov....]|\n+000001a0  a8 16 6c 9c f7 09 d3 37  e4 4b 2b 36 7c 01 ad 41  |..l....7.K+6|..A|\n+000001b0  d2 32 d8 c3 d2 93 f9 10  6b 8e 95 b9 2c 17 8a a3  |.2......k...,...|\n+000001c0  44 48 bc 59 13 83 16 04  88 a4 81 5c 25 0d 98 0c  |DH.Y.......\\%...|\n+000001d0  ac 11 b1 28 56 be 1d cd  61 62 84 09 bf d6 80 c6  |...(V...ab......|\n+000001e0  45 8d 82 2c b4 d8 83 9b  db c9 22 b7 2a 12 11 7b  |E..,......\".*..{|\n+000001f0  fa 02 3b c1 c9 ff ea c9  9d a8 49 d3 95 d7 d5 0e  |..;.......I.....|\n+00000200  e5 35 16 03 03 00 25 10  00 00 21 20 2f e5 7d a3  |.5....%...! /.}.|\n+00000210  47 cd 62 43 15 28 da ac  5f bb 29 07 30 ff f6 84  |G.bC.(.._.).0...|\n+00000220  af c4 cf c2 ed 90 99 5f  58 cb 3b 74 16 03 03 00  |......._X.;t....|\n+00000230  88 0f 00 00 84 08 04 00  80 8b ad 4b 9a 7a 53 b8  |...........K.zS.|\n+00000240  6a 0a e7 71 6a 9b 8b 89  7d 3a 49 c9 af ce 3f e2  |j..qj...}:I...?.|\n+00000250  3e cc 0b da 57 9b 8c 2f  58 0f a9 05 4d e9 de 83  |>...W../X...M...|\n+00000260  60 e8 1c 77 ef 23 e4 aa  6b c3 15 64 98 f8 b1 72  |`..w.#..k..d...r|\n+00000270  b2 8a 9e a3 19 3d 73 84  05 53 59 e1 bb e1 db 51  |.....=s..SY....Q|\n+00000280  49 38 cf 8b ee 3c b6 05  0d ba 62 02 b3 36 dc c1  |I8...<....b..6..|\n+00000290  e1 52 4d bd 6a c1 3e 55  ff 82 5f e3 7c 84 1c 65  |.RM.j.>U.._.|..e|\n+000002a0  45 53 b9 c0 56 99 ac 56  d7 4a fa 72 3e 63 36 06  |ES..V..V.J.r>c6.|\n+000002b0  d3 60 ef 34 05 3f 57 20  79 14 03 03 00 01 01 16  |.`.4.?W y.......|\n+000002c0  03 03 00 28 00 00 00 00  00 00 00 00 00 26 b7 73  |...(.........&.s|\n+000002d0  b5 e9 b3 8a 63 00 9b 36  a0 cf 2a 60 0f 8a 59 75  |....c..6..*`..Yu|\n+000002e0  08 71 97 dc 66 73 15 04  08 b4 d3 91              |.q..fs......|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 28 d2 b2 3f a8 43  |..........(..?.C|\n+00000010  41 1a 85 20 9f ee 21 6a  c5 96 cf 7c 01 8e f6 3a  |A.. ..!j...|...:|\n+00000020  e3 29 14 68 ea 74 a3 ef  85 04 78 33 db c7 d4 c9  |.).h.t....x3....|\n+00000030  a2 fd 6a                                          |..j|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 1e 00 00 00  00 00 00 00 01 c3 3b 68  |..............;h|\n+00000010  b5 e9 4d 75 22 92 fb 19  85 88 38 97 12 3f ce ca  |..Mu\".....8..?..|\n+00000020  36 c0 d6 15 03 03 00 1a  00 00 00 00 00 00 00 02  |6...............|\n+00000030  c1 a9 03 81 61 04 7c 86  24 e9 90 22 59 6f c7 bc  |....a.|.$..\"Yo..|\n+00000040  c2 a1                                             |..|"}, {"sha": "98d718bab2b7f1f88b41e1191fbe1335ecb5d8c4", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv13-ClientCert-RSA-PSS-Disabled", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv13-ClientCert-RSA-PSS-Disabled", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv13-ClientCert-RSA-PSS-Disabled", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv13-ClientCert-RSA-PSS-Disabled?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,138 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 f8 01 00 00  f4 03 03 00 00 00 00 00  |................|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 20 00 00 00 00  |........... ....|\n+00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000040  00 00 00 00 00 00 00 00  00 00 00 00 00 32 cc a8  |.............2..|\n+00000050  cc a9 c0 2f c0 2b c0 30  c0 2c c0 27 c0 13 c0 23  |.../.+.0.,.'...#|\n+00000060  c0 09 c0 14 c0 0a 00 9c  00 9d 00 3c 00 2f 00 35  |...........<./.5|\n+00000070  c0 12 00 0a 00 05 c0 11  c0 07 13 01 13 03 13 02  |................|\n+00000080  01 00 00 79 00 05 00 05  01 00 00 00 00 00 0a 00  |...y............|\n+00000090  0a 00 08 00 1d 00 17 00  18 00 19 00 0b 00 02 01  |................|\n+000000a0  00 00 0d 00 18 00 16 08  04 08 05 08 06 04 01 04  |................|\n+000000b0  03 05 01 05 03 06 01 06  03 02 01 02 03 ff 01 00  |................|\n+000000c0  01 00 00 12 00 00 00 2b  00 09 08 03 04 03 03 03  |.......+........|\n+000000d0  02 03 01 00 33 00 26 00  24 00 1d 00 20 2f e5 7d  |....3.&.$... /.}|\n+000000e0  a3 47 cd 62 43 15 28 da  ac 5f bb 29 07 30 ff f6  |.G.bC.(.._.).0..|\n+000000f0  84 af c4 cf c2 ed 90 99  5f 58 cb 3b 74           |........_X.;t|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 7a 02 00 00  76 03 03 e5 55 1c 7e bc  |....z...v...U.~.|\n+00000010  05 a3 af 8b 02 03 6a 08  34 35 43 9f 35 c1 39 36  |......j.45C.5.96|\n+00000020  97 ab d9 4f 77 26 88 31  f8 1c a4 20 00 00 00 00  |...Ow&.1... ....|\n+00000030  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000040  00 00 00 00 00 00 00 00  00 00 00 00 13 01 00 00  |................|\n+00000050  2e 00 2b 00 02 03 04 00  33 00 24 00 1d 00 20 63  |..+.....3.$... c|\n+00000060  74 2f 45 26 f4 7c cd d6  cb 8d 9f b5 6b 88 41 ef  |t/E&.|......k.A.|\n+00000070  f4 cd 00 54 91 29 98 e4  a0 6b 6d b5 2f 39 01 14  |...T.)...km./9..|\n+00000080  03 03 00 01 01 17 03 03  00 17 e6 81 13 75 85 fe  |.............u..|\n+00000090  7d c6 09 24 01 bf 44 78  65 4e 5f d0 37 b9 89 15  |}..$..DxeN_.7...|\n+000000a0  98 17 03 03 00 42 88 5c  b3 19 ee 62 c0 2d 95 51  |.....B.\\...b.-.Q|\n+000000b0  fd 88 e0 13 aa 53 e5 5a  45 be 0f 07 6f 46 c8 1b  |.....S.ZE...oF..|\n+000000c0  a2 b5 2a 7c 46 5f b5 90  46 95 b9 a4 ce 44 a8 a7  |..*|F_..F....D..|\n+000000d0  3d 8e ce d2 76 57 44 e0  0e 83 af f3 2f 00 55 cb  |=...vWD...../.U.|\n+000000e0  1f e7 d2 42 22 6f 78 0c  17 03 03 02 6d 45 f7 95  |...B\"ox.....mE..|\n+000000f0  68 b9 ad 32 13 34 84 c2  dd 62 a7 f5 18 0f 0b a6  |h..2.4...b......|\n+00000100  b8 5c dd 06 69 0d 07 ea  6b ec ad ad a7 13 ea f3  |.\\..i...k.......|\n+00000110  87 9b 74 a9 53 49 b3 a9  ff f3 eb 71 1b 25 63 8b  |..t.SI.....q.%c.|\n+00000120  c6 0f 6a 21 bc f1 fb 4b  8e d4 07 6e c6 8e 9f bf  |..j!...K...n....|\n+00000130  73 eb 1e a5 d7 e4 a1 cd  6e 7e de 45 a2 b4 6f 25  |s.......n~.E..o%|\n+00000140  fe c2 a1 84 b8 09 d1 65  90 6d ef 07 ea d0 25 01  |.......e.m....%.|\n+00000150  54 f2 8e f8 53 38 1e 35  a9 af be 2a 8d 81 9b 77  |T...S8.5...*...w|\n+00000160  38 22 42 b8 56 ea 72 ab  c3 ac 9b 17 1a 0b 65 94  |8\"B.V.r.......e.|\n+00000170  8a 81 6d 83 c6 f4 76 32  ed f7 84 4d ec 17 0e 45  |..m...v2...M...E|\n+00000180  74 e8 ba b0 46 92 62 8c  73 07 a8 1f d5 d3 44 d1  |t...F.b.s.....D.|\n+00000190  53 21 62 8b 02 c6 20 40  1d f1 75 2b 8a 6a 60 2a  |S!b... @..u+.j`*|\n+000001a0  ee 04 5f c0 46 6d 74 7a  18 4a e0 ca d4 a6 6a a2  |.._.Fmtz.J....j.|\n+000001b0  11 21 20 4a 3e 57 3c 67  ff 61 3d 15 32 14 f2 01  |.! J>W<g.a=.2...|\n+000001c0  a2 cc 96 f6 d1 2d 4f ba  67 ed 02 ae a9 08 13 74  |.....-O.g......t|\n+000001d0  33 f6 b5 ad e3 e3 ee 0e  65 f6 89 db 80 d4 f5 23  |3.......e......#|\n+000001e0  7b 5d 7a af 5f c6 43 b7  87 f6 90 25 5a f0 f6 76  |{]z._.C....%Z..v|\n+000001f0  63 9c 93 d0 f3 94 9c 55  f7 e7 8f 2d cb 83 fb a1  |c......U...-....|\n+00000200  b3 db 11 d7 f9 f7 4b 66  50 55 64 31 3f fc 97 df  |......KfPUd1?...|\n+00000210  65 f9 e0 eb a2 5e 4d 9d  c7 35 fb 1c 22 79 b1 00  |e....^M..5..\"y..|\n+00000220  28 e9 54 28 a9 e6 97 e8  33 92 ac 8e f7 c0 82 ac  |(.T(....3.......|\n+00000230  99 04 f0 f0 cc e7 4f 04  ad fe dc 9f 25 82 93 12  |......O.....%...|\n+00000240  64 4a f6 34 da 41 8a f7  a9 3e fe 24 ae be 40 b7  |dJ.4.A...>.$..@.|\n+00000250  10 59 17 11 6f 3c 11 8b  eb b2 42 e7 d5 b7 ee d2  |.Y..o<....B.....|\n+00000260  ae 95 9c 21 48 34 d9 5a  20 95 7c 72 35 05 5e 6c  |...!H4.Z .|r5.^l|\n+00000270  a2 05 46 30 e6 33 d3 91  ac c8 17 4b b1 15 cc f0  |..F0.3.....K....|\n+00000280  af bb 7c 56 e0 5b 25 8e  35 e0 2e 35 91 0d e0 bc  |..|V.[%.5..5....|\n+00000290  f6 9c 3b 15 f8 96 dc 4e  6c aa 57 c9 f0 1f 55 e2  |..;....Nl.W...U.|\n+000002a0  d9 5d 09 71 f9 af 17 69  29 d5 94 8a 5f fa b2 ad  |.].q...i)..._...|\n+000002b0  1b b9 ce 90 e7 bd 02 1b  ad 9d 91 19 7e f3 8f 2d  |............~..-|\n+000002c0  70 d5 af 2c e7 29 b1 f9  3c 5a 7f 04 6f 73 88 da  |p..,.)..<Z..os..|\n+000002d0  84 bd d7 ad 01 dd 35 b7  1f 64 79 89 ab cb 21 d1  |......5..dy...!.|\n+000002e0  20 c5 71 b7 78 fe 93 c0  41 33 d8 aa a2 ed a4 64  | .q.x...A3.....d|\n+000002f0  fb 5b c1 6e 0d 1e f7 ca  f6 01 a1 9a fc 82 af 34  |.[.n...........4|\n+00000300  e3 45 d8 5a b9 81 e7 e4  c2 26 a7 79 b7 f4 87 9f  |.E.Z.....&.y....|\n+00000310  2e 16 ab 96 21 e2 5f 1f  c9 e0 30 3e 97 27 42 15  |....!._...0>.'B.|\n+00000320  6f 13 da a1 b2 b1 43 76  69 eb f1 c6 e2 b5 6c 57  |o.....Cvi.....lW|\n+00000330  e0 88 c9 0d 7d 37 1b 0b  a0 b7 cd 6b ba 3a 52 55  |....}7.....k.:RU|\n+00000340  61 c6 5c 71 ce 1e 69 b9  ea b4 c6 a5 78 c5 b8 b6  |a.\\q..i.....x...|\n+00000350  4e b1 94 84 a3 d4 31 d9  3b 15 17 03 03 00 99 6c  |N.....1.;......l|\n+00000360  5d dd 43 24 9d 6e 5d 64  d3 54 30 aa 98 c3 7e 21  |].C$.n]d.T0...~!|\n+00000370  05 06 fc 3b eb 52 12 36  6b 2e e1 32 5a 59 30 a7  |...;.R.6k..2ZY0.|\n+00000380  b0 bb 52 1a 36 e6 78 20  84 8c cf 0d 90 da c7 88  |..R.6.x ........|\n+00000390  c4 2f bc b4 b6 03 1b 34  9b c8 12 db bc 87 95 d3  |./.....4........|\n+000003a0  84 4e 41 c1 de 2f 4c 66  d9 13 fc 78 31 05 6c 67  |.NA../Lf...x1.lg|\n+000003b0  e3 3d 28 36 0f fe 5f 45  29 d2 1b 4d a5 60 dc f7  |.=(6.._E)..M.`..|\n+000003c0  20 74 cf f5 7b 3f f7 58  53 0c 64 7d 3f c6 f1 ac  | t..{?.XS.d}?...|\n+000003d0  a9 1b 60 d8 ea a5 32 11  23 6d 66 19 70 2b fa ce  |..`...2.#mf.p+..|\n+000003e0  c8 f6 9d cc 12 83 a1 e1  4b be 98 d3 c2 56 65 34  |........K....Ve4|\n+000003f0  73 3a b3 6e d8 2c db 3b  17 03 03 00 35 e6 ce 17  |s:.n.,.;....5...|\n+00000400  e5 92 38 9e 00 2d 66 bf  a9 e2 13 66 01 af 64 15  |..8..-f....f..d.|\n+00000410  8d da 6b f3 a7 f6 5c 76  e1 f4 c4 2f dc 93 c4 3c  |..k...\\v.../...<|\n+00000420  69 5a 30 e5 db 5a b5 0b  98 4e 43 a3 51 ba 41 9d  |iZ0..Z...NC.Q.A.|\n+00000430  18 c0                                             |..|\n+>>> Flow 3 (client to server)\n+00000000  14 03 03 00 01 01 17 03  03 02 11 24 0f 0c cc 6a  |...........$...j|\n+00000010  8e 07 9c d7 f9 84 55 cc  79 a7 c1 c5 fb 6e 29 5e  |......U.y....n)^|\n+00000020  31 e1 b1 00 c0 c9 a8 94  59 75 f4 b5 86 7c a4 8c  |1.......Yu...|..|\n+00000030  8d 79 dd 42 45 67 69 f5  fb f0 02 54 f5 8f 1a 86  |.y.BEgi....T....|\n+00000040  2f a0 4e 9b 68 e2 69 36  48 cb 8e cc 26 fa 1b 60  |/.N.h.i6H...&..`|\n+00000050  c8 f3 b7 7c 36 dd 59 71  a3 f8 9a 7a bc 8a e1 10  |...|6.Yq...z....|\n+00000060  8f 6d 69 60 07 b6 62 6d  d3 2b fa a4 81 eb ae 3f  |.mi`..bm.+.....?|\n+00000070  9d 7e 1d d7 d1 89 24 4e  7e 65 4b d2 37 58 b2 56  |.~....$N~eK.7X.V|\n+00000080  a1 8e 10 73 44 9c f1 c7  60 97 49 99 e2 82 74 58  |...sD...`.I...tX|\n+00000090  e3 1f 41 ec 1d 13 85 f1  95 98 39 cb d1 51 f7 0e  |..A.......9..Q..|\n+000000a0  fe e4 fa 04 20 1a f2 c5  ae 64 9d eb f8 ff 03 ce  |.... ....d......|\n+000000b0  ca 12 7c dd a6 b4 2c a3  eb 8e 83 2c cf 77 6b 82  |..|...,....,.wk.|\n+000000c0  68 77 58 5d 3e ef 01 0b  78 e9 37 b0 36 9c 62 44  |hwX]>...x.7.6.bD|\n+000000d0  88 ae f1 5a d7 93 81 0a  84 cf 4f 3b db 05 41 92  |...Z......O;..A.|\n+000000e0  4d 31 3d 06 9e 73 11 43  de 3e ec b8 b0 48 99 84  |M1=..s.C.>...H..|\n+000000f0  bc 0c 7c 86 93 03 d5 5f  c5 21 34 a5 cc c7 d5 42  |..|...._.!4....B|\n+00000100  1d 69 94 53 39 d9 56 07  40 46 44 89 e6 95 8d e9  |.i.S9.V.@FD.....|\n+00000110  ca 6d f0 e0 2a 22 70 bc  e7 7f 8e 15 0c 56 51 e3  |.m..*\"p......VQ.|\n+00000120  46 5c b9 66 c5 8b 07 d3  f0 bb 84 fe 71 d6 a2 90  |F\\.f........q...|\n+00000130  d9 ec 46 00 82 10 38 9c  8f 35 e5 48 d8 82 7f 65  |..F...8..5.H...e|\n+00000140  68 f5 42 48 74 6b 29 79  f3 32 b6 a1 aa 42 73 e3  |h.BHtk)y.2...Bs.|\n+00000150  c3 f6 fc 76 9e 32 59 26  a6 75 4a dc 65 23 73 10  |...v.2Y&.uJ.e#s.|\n+00000160  35 79 a5 41 7b 72 d5 cd  33 1f 7d 98 b3 39 4b f6  |5y.A{r..3.}..9K.|\n+00000170  e8 09 ed d6 62 a0 48 b5  76 47 2e 7e 1a 5d 75 6d  |....b.H.vG.~.]um|\n+00000180  c2 98 22 17 b1 8f 2e a5  a2 b3 b3 5e d9 89 c5 a0  |..\"........^....|\n+00000190  46 2a ac af 20 66 e9 f3  02 84 26 51 c0 0a 2e 0c  |F*.. f....&Q....|\n+000001a0  d3 90 3c 9f 19 3f 25 3e  7d 3a 38 6f f3 ce 2f c4  |..<..?%>}:8o../.|\n+000001b0  7b 84 e4 d5 c2 c8 90 54  6d 2c 59 70 34 44 53 25  |{......Tm,Yp4DS%|\n+000001c0  ee ee d6 7e 13 30 1e 09  ff f2 79 bd 7c a1 af a9  |...~.0....y.|...|\n+000001d0  a9 7b 51 6a d8 17 41 22  f5 d0 5d 84 00 a7 5f 1a  |.{Qj..A\"..]..._.|\n+000001e0  b6 15 98 de f4 bd cd fe  70 38 5c 0f 44 60 5a 7d  |........p8\\.D`Z}|\n+000001f0  be df 6e 56 bb 83 0b 10  fa 5d 3a 2c 9e 4a 00 7f  |..nV.....]:,.J..|\n+00000200  ec f4 42 52 52 95 5e e1  bd cc cf a0 45 c2 79 2c  |..BRR.^.....E.y,|\n+00000210  10 4d 14 35 ad bd 18 d4  b1 aa 09 65 17 03 03 00  |.M.5.......e....|\n+00000220  99 a4 2c 7a c2 25 ba 3b  a2 84 1f e8 a0 d1 5c c4  |..,z.%.;......\\.|\n+00000230  bb c6 f8 fc eb 19 3e f5  e6 53 9f c3 35 d3 7a 00  |......>..S..5.z.|\n+00000240  68 e1 e0 2f 73 75 d7 2d  df 44 aa 34 43 bf 66 c1  |h../su.-.D.4C.f.|\n+00000250  31 0d e6 86 f8 71 6b 71  ac 89 c5 26 cf d9 1e 43  |1....qkq...&...C|\n+00000260  33 c3 48 68 e0 4d f5 d5  69 ff fc 02 47 cc 91 41  |3.Hh.M..i...G..A|\n+00000270  83 41 58 04 2a 02 53 3c  3b 0a 4c 18 16 00 fd e8  |.AX.*.S<;.L.....|\n+00000280  64 54 0d 34 a1 3d a5 4b  bd c2 54 17 c3 5a 82 7a  |dT.4.=.K..T..Z.z|\n+00000290  55 5d a9 57 63 62 ef 8b  3a 75 f2 cd 34 ef d6 30  |U].Wcb..:u..4..0|\n+000002a0  08 7f 03 0b c3 eb 29 94  88 11 38 42 40 6f bf cc  |......)...8B@o..|\n+000002b0  d4 01 3f 8a 90 11 f9 da  fd 9e 17 03 03 00 35 7d  |..?...........5}|\n+000002c0  2d 12 d7 58 d0 76 43 25  d1 8d 5c 5c b1 7f fa 48  |-..X.vC%..\\\\...H|\n+000002d0  a9 21 48 02 64 76 91 6c  79 7e b9 22 33 f7 32 cb  |.!H.dv.ly~.\"3.2.|\n+000002e0  50 22 78 02 96 4e 2d f6  09 68 06 8e 44 e6 fd 7f  |P\"x..N-..h..D...|\n+000002f0  cf 0a 7e a3 17 03 03 00  17 84 cd d8 f2 e2 38 2e  |..~...........8.|\n+00000300  57 e5 47 76 48 50 34 9e  65 d4 c6 1d 7d b3 4e 91  |W.GvHP4.e...}.N.|\n+00000310  17 03 03 00 13 e5 05 98  5b 87 5d db ae 89 38 2c  |........[.]...8,|\n+00000320  35 89 31 14 73 cd 16 54                           |5.1.s..T|"}, {"sha": "cb626a11042669ffe554c624fd796a5559cfdaa4", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ClientAuthRequestedAndGiven-PSS-Disabled", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven-PSS-Disabled", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven-PSS-Disabled", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven-PSS-Disabled?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,126 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 97 01 00 00  93 03 03 9e b1 2a 26 04  |.............*&.|\n+00000010  8d 66 df 43 cb 0a 85 80  4f f2 99 7d 80 20 64 7e  |.f.C....O..}. d~|\n+00000020  30 a0 bb 60 ac 0e d4 ce  f0 ae 98 00 00 04 00 2f  |0..`.........../|\n+00000030  00 ff 01 00 00 66 00 00  00 0e 00 0c 00 00 09 31  |.....f.........1|\n+00000040  32 37 2e 30 2e 30 2e 31  00 0b 00 04 03 00 01 02  |27.0.0.1........|\n+00000050  00 0a 00 0c 00 0a 00 1d  00 17 00 1e 00 19 00 18  |................|\n+00000060  00 16 00 00 00 17 00 00  00 0d 00 30 00 2e 04 03  |...........0....|\n+00000070  05 03 06 03 08 07 08 08  08 09 08 0a 08 0b 08 04  |................|\n+00000080  08 05 08 06 04 01 05 01  06 01 03 03 02 03 03 01  |................|\n+00000090  02 01 03 02 02 02 04 02  05 02 06 02              |............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 44 4f 57 4e 47  52 44 01 00 00 2f 00 00  |...DOWNGRD.../..|\n+00000030  05 ff 01 00 01 00 16 03  03 02 59 0b 00 02 55 00  |..........Y...U.|\n+00000040  02 52 00 02 4f 30 82 02  4b 30 82 01 b4 a0 03 02  |.R..O0..K0......|\n+00000050  01 02 02 09 00 e8 f0 9d  3f e2 5b ea a6 30 0d 06  |........?.[..0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 0b 05 00 30 1f 31 0b  |.*.H........0.1.|\n+00000070  30 09 06 03 55 04 0a 13  02 47 6f 31 10 30 0e 06  |0...U....Go1.0..|\n+00000080  03 55 04 03 13 07 47 6f  20 52 6f 6f 74 30 1e 17  |.U....Go Root0..|\n+00000090  0d 31 36 30 31 30 31 30  30 30 30 30 30 5a 17 0d  |.160101000000Z..|\n+000000a0  32 35 30 31 30 31 30 30  30 30 30 30 5a 30 1a 31  |250101000000Z0.1|\n+000000b0  0b 30 09 06 03 55 04 0a  13 02 47 6f 31 0b 30 09  |.0...U....Go1.0.|\n+000000c0  06 03 55 04 03 13 02 47  6f 30 81 9f 30 0d 06 09  |..U....Go0..0...|\n+000000d0  2a 86 48 86 f7 0d 01 01  01 05 00 03 81 8d 00 30  |*.H............0|\n+000000e0  81 89 02 81 81 00 db 46  7d 93 2e 12 27 06 48 bc  |.......F}...'.H.|\n+000000f0  06 28 21 ab 7e c4 b6 a2  5d fe 1e 52 45 88 7a 36  |.(!.~...]..RE.z6|\n+00000100  47 a5 08 0d 92 42 5b c2  81 c0 be 97 79 98 40 fb  |G....B[.....y.@.|\n+00000110  4f 6d 14 fd 2b 13 8b c2  a5 2e 67 d8 d4 09 9e d6  |Om..+.....g.....|\n+00000120  22 38 b7 4a 0b 74 73 2b  c2 34 f1 d1 93 e5 96 d9  |\"8.J.ts+.4......|\n+00000130  74 7b f3 58 9f 6c 61 3c  c0 b0 41 d4 d9 2b 2b 24  |t{.X.la<..A..++$|\n+00000140  23 77 5b 1c 3b bd 75 5d  ce 20 54 cf a1 63 87 1d  |#w[.;.u]. T..c..|\n+00000150  1e 24 c4 f3 1d 1a 50 8b  aa b6 14 43 ed 97 a7 75  |.$....P....C...u|\n+00000160  62 f4 14 c8 52 d7 02 03  01 00 01 a3 81 93 30 81  |b...R.........0.|\n+00000170  90 30 0e 06 03 55 1d 0f  01 01 ff 04 04 03 02 05  |.0...U..........|\n+00000180  a0 30 1d 06 03 55 1d 25  04 16 30 14 06 08 2b 06  |.0...U.%..0...+.|\n+00000190  01 05 05 07 03 01 06 08  2b 06 01 05 05 07 03 02  |........+.......|\n+000001a0  30 0c 06 03 55 1d 13 01  01 ff 04 02 30 00 30 19  |0...U.......0.0.|\n+000001b0  06 03 55 1d 0e 04 12 04  10 9f 91 16 1f 43 43 3e  |..U..........CC>|\n+000001c0  49 a6 de 6d b6 80 d7 9f  60 30 1b 06 03 55 1d 23  |I..m....`0...U.#|\n+000001d0  04 14 30 12 80 10 48 13  49 4d 13 7e 16 31 bb a3  |..0...H.IM.~.1..|\n+000001e0  01 d5 ac ab 6e 7b 30 19  06 03 55 1d 11 04 12 30  |....n{0...U....0|\n+000001f0  10 82 0e 65 78 61 6d 70  6c 65 2e 67 6f 6c 61 6e  |...example.golan|\n+00000200  67 30 0d 06 09 2a 86 48  86 f7 0d 01 01 0b 05 00  |g0...*.H........|\n+00000210  03 81 81 00 9d 30 cc 40  2b 5b 50 a0 61 cb ba e5  |.....0.@+[P.a...|\n+00000220  53 58 e1 ed 83 28 a9 58  1a a9 38 a4 95 a1 ac 31  |SX...(.X..8....1|\n+00000230  5a 1a 84 66 3d 43 d3 2d  d9 0b f2 97 df d3 20 64  |Z..f=C.-...... d|\n+00000240  38 92 24 3a 00 bc cf 9c  7d b7 40 20 01 5f aa d3  |8.$:....}.@ ._..|\n+00000250  16 61 09 a2 76 fd 13 c3  cc e1 0c 5c ee b1 87 82  |.a..v......\\....|\n+00000260  f1 6c 04 ed 73 bb b3 43  77 8d 0c 1c f1 0f a1 d8  |.l..s..Cw.......|\n+00000270  40 83 61 c9 4c 72 2b 9d  ae db 46 06 06 4d f4 c1  |@.a.Lr+...F..M..|\n+00000280  b3 3e c0 d1 bd 42 d4 db  fe 3d 13 60 84 5c 21 d3  |.>...B...=.`.\\!.|\n+00000290  3b e9 fa e7 16 03 03 00  1b 0d 00 00 17 02 01 40  |;..............@|\n+000002a0  00 10 04 01 04 03 05 01  05 03 06 01 06 03 02 01  |................|\n+000002b0  02 03 00 00 16 03 03 00  04 0e 00 00 00           |.............|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 01 fd 0b 00 01  f9 00 01 f6 00 01 f3 30  |...............0|\n+00000010  82 01 ef 30 82 01 58 a0  03 02 01 02 02 10 5c 19  |...0..X.......\\.|\n+00000020  c1 89 65 83 55 6f dc 0b  c9 b9 93 9f e9 bc 30 0d  |..e.Uo........0.|\n+00000030  06 09 2a 86 48 86 f7 0d  01 01 0b 05 00 30 12 31  |..*.H........0.1|\n+00000040  10 30 0e 06 03 55 04 0a  13 07 41 63 6d 65 20 43  |.0...U....Acme C|\n+00000050  6f 30 1e 17 0d 31 36 30  38 31 37 32 31 35 32 33  |o0...16081721523|\n+00000060  31 5a 17 0d 31 37 30 38  31 37 32 31 35 32 33 31  |1Z..170817215231|\n+00000070  5a 30 12 31 10 30 0e 06  03 55 04 0a 13 07 41 63  |Z0.1.0...U....Ac|\n+00000080  6d 65 20 43 6f 30 81 9f  30 0d 06 09 2a 86 48 86  |me Co0..0...*.H.|\n+00000090  f7 0d 01 01 01 05 00 03  81 8d 00 30 81 89 02 81  |...........0....|\n+000000a0  81 00 ba 6f aa 86 bd cf  bf 9f f2 ef 5c 94 60 78  |...o........\\.`x|\n+000000b0  6f e8 13 f2 d1 96 6f cd  d9 32 6e 22 37 ce 41 f9  |o.....o..2n\"7.A.|\n+000000c0  ca 5d 29 ac e1 27 da 61  a2 ee 81 cb 10 c7 df 34  |.])..'.a.......4|\n+000000d0  58 95 86 e9 3d 19 e6 5c  27 73 60 c8 8d 78 02 f4  |X...=..\\'s`..x..|\n+000000e0  1d a4 98 09 a3 19 70 69  3c 25 62 66 2a ab 22 23  |......pi<%bf*.\"#|\n+000000f0  c5 7b 85 38 4f 2e 09 73  32 a7 bd 3e 9b ad ca 84  |.{.8O..s2..>....|\n+00000100  07 e6 0f 3a ff 77 c5 9d  41 85 00 8a b6 9b ee b0  |...:.w..A.......|\n+00000110  a4 3f 2d 4c 4c e6 42 3e  bb 51 c8 dd 48 54 f4 0c  |.?-LL.B>.Q..HT..|\n+00000120  8e 47 02 03 01 00 01 a3  46 30 44 30 0e 06 03 55  |.G......F0D0...U|\n+00000130  1d 0f 01 01 ff 04 04 03  02 05 a0 30 13 06 03 55  |...........0...U|\n+00000140  1d 25 04 0c 30 0a 06 08  2b 06 01 05 05 07 03 01  |.%..0...+.......|\n+00000150  30 0c 06 03 55 1d 13 01  01 ff 04 02 30 00 30 0f  |0...U.......0.0.|\n+00000160  06 03 55 1d 11 04 08 30  06 87 04 7f 00 00 01 30  |..U....0.......0|\n+00000170  0d 06 09 2a 86 48 86 f7  0d 01 01 0b 05 00 03 81  |...*.H..........|\n+00000180  81 00 46 ab 44 a2 fb 28  54 f8 5a 67 f8 62 94 f1  |..F.D..(T.Zg.b..|\n+00000190  9a b2 18 9e f2 b1 de 1d  7e 6f 76 95 a9 ba e7 5d  |........~ov....]|\n+000001a0  a8 16 6c 9c f7 09 d3 37  e4 4b 2b 36 7c 01 ad 41  |..l....7.K+6|..A|\n+000001b0  d2 32 d8 c3 d2 93 f9 10  6b 8e 95 b9 2c 17 8a a3  |.2......k...,...|\n+000001c0  44 48 bc 59 13 83 16 04  88 a4 81 5c 25 0d 98 0c  |DH.Y.......\\%...|\n+000001d0  ac 11 b1 28 56 be 1d cd  61 62 84 09 bf d6 80 c6  |...(V...ab......|\n+000001e0  45 8d 82 2c b4 d8 83 9b  db c9 22 b7 2a 12 11 7b  |E..,......\".*..{|\n+000001f0  fa 02 3b c1 c9 ff ea c9  9d a8 49 d3 95 d7 d5 0e  |..;.......I.....|\n+00000200  e5 35 16 03 03 00 86 10  00 00 82 00 80 3f 1b ee  |.5...........?..|\n+00000210  02 ec a5 9f 6e 38 69 2c  b7 03 89 65 b4 92 79 a0  |....n8i,...e..y.|\n+00000220  b2 0b ab 9b 44 9c 68 d1  8e 5c 40 9c b5 1c a5 70  |....D.h..\\@....p|\n+00000230  00 a2 2e fb 98 b7 45 7b  9c 63 46 68 1d 55 9e 01  |......E{.cFh.U..|\n+00000240  7f 84 31 62 07 c4 2f 20  5f 1a 94 8c 1f f4 3a 6d  |..1b../ _.....:m|\n+00000250  a8 2b b8 08 5b ec 27 e3  49 9e 51 b3 66 98 09 ba  |.+..[.'.I.Q.f...|\n+00000260  64 65 c8 3c 11 fb 14 4a  c9 ea 3c 5e 52 10 a0 0b  |de.<...J..<^R...|\n+00000270  a9 fc 10 13 c9 99 0c a0  8b b4 40 66 0e 11 5e 1d  |..........@f..^.|\n+00000280  8b 45 5c 4d 0d 39 39 f6  0c 59 8f 06 99 16 03 03  |.E\\M.99..Y......|\n+00000290  00 88 0f 00 00 84 04 01  00 80 71 1c 9c fd b2 c9  |..........q.....|\n+000002a0  b9 7f f3 51 e2 63 96 08  56 d2 bd 19 61 9f 3f be  |...Q.c..V...a.?.|\n+000002b0  e5 4c 22 a8 3f 81 98 2d  67 56 4e 2d 61 6e 51 e5  |.L\".?..-gVN-anQ.|\n+000002c0  11 24 bd 1b 38 ba dc 8c  76 51 1d 3c 6e 81 50 9a  |.$..8...vQ.<n.P.|\n+000002d0  b5 24 9c d8 af f7 80 8a  51 43 ec b3 59 18 bd ea  |.$......QC..Y...|\n+000002e0  8a be af 11 c8 ac 60 88  e3 67 a2 ae c2 95 16 47  |......`..g.....G|\n+000002f0  2b e2 ea 42 0a 0a 3f 2b  8b c8 ec 9d e7 b2 a6 ee  |+..B..?+........|\n+00000300  f4 9b ba 28 47 e2 30 ae  05 89 09 65 3d b6 54 8a  |...(G.0....e=.T.|\n+00000310  4a df d4 fa a5 4c 30 38  53 f2 14 03 03 00 01 01  |J....L08S.......|\n+00000320  16 03 03 00 40 97 50 23  88 56 0d d4 1b ba 6f 3e  |....@.P#.V....o>|\n+00000330  8d 82 6c f3 04 55 2c 13  d9 5b 0a 73 88 4f 8b 3c  |..l..U,..[.s.O.<|\n+00000340  cd ef 1a a7 15 7c 33 bb  ff fa 01 c4 87 d7 df 47  |.....|3........G|\n+00000350  37 b6 fe 1d e6 82 c2 8a  33 b1 c9 ae 85 45 c8 0d  |7.......3....E..|\n+00000360  38 47 69 2d 54                                    |8Gi-T|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 20 98 12 44 63  |........... ..Dc|\n+00000020  e7 77 e6 e8 c0 c7 d7 b6  f7 c4 4e 13 e3 79 af 33  |.w........N..y.3|\n+00000030  3b 6c 86 22 c5 9e dd 25  74 e5 7b 37 fb 24 c6 48  |;l.\"...%t.{7.$.H|\n+00000040  c9 74 a7 9b 9b 32 a7 c1  b9 bb e0 17 03 03 00 40  |.t...2.........@|\n+00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000060  80 d7 ec 51 cf ae d4 1a  af 11 59 d1 0c 62 a6 67  |...Q......Y..b.g|\n+00000070  2e 6f 18 23 29 75 92 07  b1 16 09 8f 2d f8 04 fe  |.o.#)u......-...|\n+00000080  ce 71 2c b6 00 fd 7b 53  cb 6d 97 06 06 e6 af f4  |.q,...{S.m......|\n+00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+000000a0  00 00 00 00 00 73 14 3a  87 3b ca 3a 2b b2 52 30  |.....s.:.;.:+.R0|\n+000000b0  98 62 88 1b a7 58 66 47  66 72 fd bb b6 b7 6b 99  |.b...XfGfr....k.|\n+000000c0  20 ab e9 22 62                                    | ..\"b|"}, {"sha": "86d5415cc8fc305f8eab4bfa13092054d8ccc9e4", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ClientAuthRequestedAndGiven-PSS-Disabled-Required", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven-PSS-Disabled-Required", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven-PSS-Disabled-Required", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven-PSS-Disabled-Required?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,74 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 97 01 00 00  93 03 03 d7 9c de f8 62  |...............b|\n+00000010  7e 32 5b bc d5 12 35 89  42 37 be ca 55 74 24 61  |~2[...5.B7..Ut$a|\n+00000020  c0 50 91 0f 1b 42 29 9f  c1 6a cb 00 00 04 00 2f  |.P...B)..j...../|\n+00000030  00 ff 01 00 00 66 00 00  00 0e 00 0c 00 00 09 31  |.....f.........1|\n+00000040  32 37 2e 30 2e 30 2e 31  00 0b 00 04 03 00 01 02  |27.0.0.1........|\n+00000050  00 0a 00 0c 00 0a 00 1d  00 17 00 1e 00 19 00 18  |................|\n+00000060  00 16 00 00 00 17 00 00  00 0d 00 30 00 2e 04 03  |...........0....|\n+00000070  05 03 06 03 08 07 08 08  08 09 08 0a 08 0b 08 04  |................|\n+00000080  08 05 08 06 04 01 05 01  06 01 03 03 02 03 03 01  |................|\n+00000090  02 01 03 02 02 02 04 02  05 02 06 02              |............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 44 4f 57 4e 47  52 44 01 00 00 2f 00 00  |...DOWNGRD.../..|\n+00000030  05 ff 01 00 01 00 16 03  03 02 59 0b 00 02 55 00  |..........Y...U.|\n+00000040  02 52 00 02 4f 30 82 02  4b 30 82 01 b4 a0 03 02  |.R..O0..K0......|\n+00000050  01 02 02 09 00 e8 f0 9d  3f e2 5b ea a6 30 0d 06  |........?.[..0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 0b 05 00 30 1f 31 0b  |.*.H........0.1.|\n+00000070  30 09 06 03 55 04 0a 13  02 47 6f 31 10 30 0e 06  |0...U....Go1.0..|\n+00000080  03 55 04 03 13 07 47 6f  20 52 6f 6f 74 30 1e 17  |.U....Go Root0..|\n+00000090  0d 31 36 30 31 30 31 30  30 30 30 30 30 5a 17 0d  |.160101000000Z..|\n+000000a0  32 35 30 31 30 31 30 30  30 30 30 30 5a 30 1a 31  |250101000000Z0.1|\n+000000b0  0b 30 09 06 03 55 04 0a  13 02 47 6f 31 0b 30 09  |.0...U....Go1.0.|\n+000000c0  06 03 55 04 03 13 02 47  6f 30 81 9f 30 0d 06 09  |..U....Go0..0...|\n+000000d0  2a 86 48 86 f7 0d 01 01  01 05 00 03 81 8d 00 30  |*.H............0|\n+000000e0  81 89 02 81 81 00 db 46  7d 93 2e 12 27 06 48 bc  |.......F}...'.H.|\n+000000f0  06 28 21 ab 7e c4 b6 a2  5d fe 1e 52 45 88 7a 36  |.(!.~...]..RE.z6|\n+00000100  47 a5 08 0d 92 42 5b c2  81 c0 be 97 79 98 40 fb  |G....B[.....y.@.|\n+00000110  4f 6d 14 fd 2b 13 8b c2  a5 2e 67 d8 d4 09 9e d6  |Om..+.....g.....|\n+00000120  22 38 b7 4a 0b 74 73 2b  c2 34 f1 d1 93 e5 96 d9  |\"8.J.ts+.4......|\n+00000130  74 7b f3 58 9f 6c 61 3c  c0 b0 41 d4 d9 2b 2b 24  |t{.X.la<..A..++$|\n+00000140  23 77 5b 1c 3b bd 75 5d  ce 20 54 cf a1 63 87 1d  |#w[.;.u]. T..c..|\n+00000150  1e 24 c4 f3 1d 1a 50 8b  aa b6 14 43 ed 97 a7 75  |.$....P....C...u|\n+00000160  62 f4 14 c8 52 d7 02 03  01 00 01 a3 81 93 30 81  |b...R.........0.|\n+00000170  90 30 0e 06 03 55 1d 0f  01 01 ff 04 04 03 02 05  |.0...U..........|\n+00000180  a0 30 1d 06 03 55 1d 25  04 16 30 14 06 08 2b 06  |.0...U.%..0...+.|\n+00000190  01 05 05 07 03 01 06 08  2b 06 01 05 05 07 03 02  |........+.......|\n+000001a0  30 0c 06 03 55 1d 13 01  01 ff 04 02 30 00 30 19  |0...U.......0.0.|\n+000001b0  06 03 55 1d 0e 04 12 04  10 9f 91 16 1f 43 43 3e  |..U..........CC>|\n+000001c0  49 a6 de 6d b6 80 d7 9f  60 30 1b 06 03 55 1d 23  |I..m....`0...U.#|\n+000001d0  04 14 30 12 80 10 48 13  49 4d 13 7e 16 31 bb a3  |..0...H.IM.~.1..|\n+000001e0  01 d5 ac ab 6e 7b 30 19  06 03 55 1d 11 04 12 30  |....n{0...U....0|\n+000001f0  10 82 0e 65 78 61 6d 70  6c 65 2e 67 6f 6c 61 6e  |...example.golan|\n+00000200  67 30 0d 06 09 2a 86 48  86 f7 0d 01 01 0b 05 00  |g0...*.H........|\n+00000210  03 81 81 00 9d 30 cc 40  2b 5b 50 a0 61 cb ba e5  |.....0.@+[P.a...|\n+00000220  53 58 e1 ed 83 28 a9 58  1a a9 38 a4 95 a1 ac 31  |SX...(.X..8....1|\n+00000230  5a 1a 84 66 3d 43 d3 2d  d9 0b f2 97 df d3 20 64  |Z..f=C.-...... d|\n+00000240  38 92 24 3a 00 bc cf 9c  7d b7 40 20 01 5f aa d3  |8.$:....}.@ ._..|\n+00000250  16 61 09 a2 76 fd 13 c3  cc e1 0c 5c ee b1 87 82  |.a..v......\\....|\n+00000260  f1 6c 04 ed 73 bb b3 43  77 8d 0c 1c f1 0f a1 d8  |.l..s..Cw.......|\n+00000270  40 83 61 c9 4c 72 2b 9d  ae db 46 06 06 4d f4 c1  |@.a.Lr+...F..M..|\n+00000280  b3 3e c0 d1 bd 42 d4 db  fe 3d 13 60 84 5c 21 d3  |.>...B...=.`.\\!.|\n+00000290  3b e9 fa e7 16 03 03 00  1b 0d 00 00 17 02 01 40  |;..............@|\n+000002a0  00 10 04 01 04 03 05 01  05 03 06 01 06 03 02 01  |................|\n+000002b0  02 03 00 00 16 03 03 00  04 0e 00 00 00           |.............|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 07 0b 00 00  03 00 00 00 16 03 03 00  |................|\n+00000010  86 10 00 00 82 00 80 1d  c6 6c b0 b9 b3 41 06 80  |.........l...A..|\n+00000020  e0 f5 df 06 ae 0f 2f 5f  72 14 44 47 16 c4 f0 a6  |....../_r.DG....|\n+00000030  68 be fa ee ec 9b 38 b0  e4 bd a3 e9 ca 18 5b 25  |h.....8.......[%|\n+00000040  33 31 57 86 63 59 0e ce  10 77 f8 42 a6 5c ad 3f  |31W.cY...w.B.\\.?|\n+00000050  80 85 a5 c1 06 4c 36 aa  f3 ee 62 39 66 69 76 51  |.....L6...b9fivQ|\n+00000060  57 cc a0 b1 35 81 d5 38  01 2d 83 0e 2e 6b a9 84  |W...5..8.-...k..|\n+00000070  0d 8b 29 93 90 78 2d 0d  33 5f 85 0d 00 0c e2 5f  |..)..x-.3_....._|\n+00000080  83 21 28 27 83 ad 9d 19  2d 01 35 6d 85 2e 8d 6b  |.!('....-.5m...k|\n+00000090  eb 7a cd 8a 3f 42 e2 14  03 03 00 01 01 16 03 03  |.z..?B..........|\n+000000a0  00 40 5e 19 0f d0 4c 17  e0 25 e6 6b a1 d9 ea 59  |.@^...L..%.k...Y|\n+000000b0  f4 3a 55 84 2c 50 1e 53  47 78 45 b8 97 f7 7f 3d  |.:U.,P.SGxE....=|\n+000000c0  af d9 7a ad 30 30 77 1a  93 05 19 5b 9b 13 70 e0  |..z.00w....[..p.|\n+000000d0  e0 f8 ba 6a bd 74 c5 71  0d 5a 2c 3f 2d 98 1a 3c  |...j.t.q.Z,?-..<|\n+000000e0  5a 7d                                             |Z}|\n+>>> Flow 4 (server to client)\n+00000000  15 03 03 00 02 02 2a                              |......*|"}, {"sha": "302e64e60f36d72bc8691e41c21e1fb5381473bd", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-PSS-Disabled", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-PSS-Disabled", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-PSS-Disabled", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-PSS-Disabled?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,84 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 cb 01 00 00  c7 03 03 ed 3d 3e 10 95  |............=>..|\n+00000010  8b 6f 6c be 5c b7 77 c0  79 91 f8 b3 6f 52 27 18  |.ol.\\.w.y...oR'.|\n+00000020  0a b7 88 52 df 3c 6c 87  b4 5a 4c 00 00 38 c0 2c  |...R.<l..ZL..8.,|\n+00000030  c0 30 00 9f cc a9 cc a8  cc aa c0 2b c0 2f 00 9e  |.0.........+./..|\n+00000040  c0 24 c0 28 00 6b c0 23  c0 27 00 67 c0 0a c0 14  |.$.(.k.#.'.g....|\n+00000050  00 39 c0 09 c0 13 00 33  00 9d 00 9c 00 3d 00 3c  |.9.....3.....=.<|\n+00000060  00 35 00 2f 00 ff 01 00  00 66 00 00 00 0e 00 0c  |.5./.....f......|\n+00000070  00 00 09 31 32 37 2e 30  2e 30 2e 31 00 0b 00 04  |...127.0.0.1....|\n+00000080  03 00 01 02 00 0a 00 0c  00 0a 00 1d 00 17 00 1e  |................|\n+00000090  00 19 00 18 00 16 00 00  00 17 00 00 00 0d 00 30  |...............0|\n+000000a0  00 2e 04 03 05 03 06 03  08 07 08 08 08 09 08 0a  |................|\n+000000b0  08 0b 08 04 08 05 08 06  04 01 05 01 06 01 03 03  |................|\n+000000c0  02 03 03 01 02 01 03 02  02 02 04 02 05 02 06 02  |................|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 44 4f 57 4e 47  52 44 01 00 c0 30 00 00  |...DOWNGRD...0..|\n+00000030  05 ff 01 00 01 00 16 03  03 02 59 0b 00 02 55 00  |..........Y...U.|\n+00000040  02 52 00 02 4f 30 82 02  4b 30 82 01 b4 a0 03 02  |.R..O0..K0......|\n+00000050  01 02 02 09 00 e8 f0 9d  3f e2 5b ea a6 30 0d 06  |........?.[..0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 0b 05 00 30 1f 31 0b  |.*.H........0.1.|\n+00000070  30 09 06 03 55 04 0a 13  02 47 6f 31 10 30 0e 06  |0...U....Go1.0..|\n+00000080  03 55 04 03 13 07 47 6f  20 52 6f 6f 74 30 1e 17  |.U....Go Root0..|\n+00000090  0d 31 36 30 31 30 31 30  30 30 30 30 30 5a 17 0d  |.160101000000Z..|\n+000000a0  32 35 30 31 30 31 30 30  30 30 30 30 5a 30 1a 31  |250101000000Z0.1|\n+000000b0  0b 30 09 06 03 55 04 0a  13 02 47 6f 31 0b 30 09  |.0...U....Go1.0.|\n+000000c0  06 03 55 04 03 13 02 47  6f 30 81 9f 30 0d 06 09  |..U....Go0..0...|\n+000000d0  2a 86 48 86 f7 0d 01 01  01 05 00 03 81 8d 00 30  |*.H............0|\n+000000e0  81 89 02 81 81 00 db 46  7d 93 2e 12 27 06 48 bc  |.......F}...'.H.|\n+000000f0  06 28 21 ab 7e c4 b6 a2  5d fe 1e 52 45 88 7a 36  |.(!.~...]..RE.z6|\n+00000100  47 a5 08 0d 92 42 5b c2  81 c0 be 97 79 98 40 fb  |G....B[.....y.@.|\n+00000110  4f 6d 14 fd 2b 13 8b c2  a5 2e 67 d8 d4 09 9e d6  |Om..+.....g.....|\n+00000120  22 38 b7 4a 0b 74 73 2b  c2 34 f1 d1 93 e5 96 d9  |\"8.J.ts+.4......|\n+00000130  74 7b f3 58 9f 6c 61 3c  c0 b0 41 d4 d9 2b 2b 24  |t{.X.la<..A..++$|\n+00000140  23 77 5b 1c 3b bd 75 5d  ce 20 54 cf a1 63 87 1d  |#w[.;.u]. T..c..|\n+00000150  1e 24 c4 f3 1d 1a 50 8b  aa b6 14 43 ed 97 a7 75  |.$....P....C...u|\n+00000160  62 f4 14 c8 52 d7 02 03  01 00 01 a3 81 93 30 81  |b...R.........0.|\n+00000170  90 30 0e 06 03 55 1d 0f  01 01 ff 04 04 03 02 05  |.0...U..........|\n+00000180  a0 30 1d 06 03 55 1d 25  04 16 30 14 06 08 2b 06  |.0...U.%..0...+.|\n+00000190  01 05 05 07 03 01 06 08  2b 06 01 05 05 07 03 02  |........+.......|\n+000001a0  30 0c 06 03 55 1d 13 01  01 ff 04 02 30 00 30 19  |0...U.......0.0.|\n+000001b0  06 03 55 1d 0e 04 12 04  10 9f 91 16 1f 43 43 3e  |..U..........CC>|\n+000001c0  49 a6 de 6d b6 80 d7 9f  60 30 1b 06 03 55 1d 23  |I..m....`0...U.#|\n+000001d0  04 14 30 12 80 10 48 13  49 4d 13 7e 16 31 bb a3  |..0...H.IM.~.1..|\n+000001e0  01 d5 ac ab 6e 7b 30 19  06 03 55 1d 11 04 12 30  |....n{0...U....0|\n+000001f0  10 82 0e 65 78 61 6d 70  6c 65 2e 67 6f 6c 61 6e  |...example.golan|\n+00000200  67 30 0d 06 09 2a 86 48  86 f7 0d 01 01 0b 05 00  |g0...*.H........|\n+00000210  03 81 81 00 9d 30 cc 40  2b 5b 50 a0 61 cb ba e5  |.....0.@+[P.a...|\n+00000220  53 58 e1 ed 83 28 a9 58  1a a9 38 a4 95 a1 ac 31  |SX...(.X..8....1|\n+00000230  5a 1a 84 66 3d 43 d3 2d  d9 0b f2 97 df d3 20 64  |Z..f=C.-...... d|\n+00000240  38 92 24 3a 00 bc cf 9c  7d b7 40 20 01 5f aa d3  |8.$:....}.@ ._..|\n+00000250  16 61 09 a2 76 fd 13 c3  cc e1 0c 5c ee b1 87 82  |.a..v......\\....|\n+00000260  f1 6c 04 ed 73 bb b3 43  77 8d 0c 1c f1 0f a1 d8  |.l..s..Cw.......|\n+00000270  40 83 61 c9 4c 72 2b 9d  ae db 46 06 06 4d f4 c1  |@.a.Lr+...F..M..|\n+00000280  b3 3e c0 d1 bd 42 d4 db  fe 3d 13 60 84 5c 21 d3  |.>...B...=.`.\\!.|\n+00000290  3b e9 fa e7 16 03 03 00  ac 0c 00 00 a8 03 00 1d  |;...............|\n+000002a0  20 2f e5 7d a3 47 cd 62  43 15 28 da ac 5f bb 29  | /.}.G.bC.(.._.)|\n+000002b0  07 30 ff f6 84 af c4 cf  c2 ed 90 99 5f 58 cb 3b  |.0.........._X.;|\n+000002c0  74 04 01 00 80 a5 a9 75  be 51 ff dc b3 bb 77 79  |t......u.Q....wy|\n+000002d0  ef 5b 9f d9 27 6c 76 ea  ce 5c 66 20 03 2e 94 fd  |.[..'lv..\\f ....|\n+000002e0  28 94 69 ff 06 ab bd 34  43 51 72 fb 15 42 e6 38  |(.i....4CQr..B.8|\n+000002f0  c5 7a 5d 7f 35 a7 3c 85  ec df 95 23 0f 28 c7 dc  |.z].5.<....#.(..|\n+00000300  0e a6 ec fe 5e 77 3f 95  1d a7 73 1d d8 7b 68 92  |....^w?...s..{h.|\n+00000310  5b a5 b8 ba f5 7c a5 60  2e 43 d6 60 64 3e 33 c7  |[....|.`.C.`d>3.|\n+00000320  8b c2 56 68 e3 28 2b 2e  8b 9a 85 29 77 73 24 3e  |..Vh.(+....)ws$>|\n+00000330  2b 95 b8 40 a7 f1 60 b5  9e 85 3e 1d ae ab 7f 85  |+..@..`...>.....|\n+00000340  63 63 d1 cf 62 16 03 03  00 04 0e 00 00 00        |cc..b.........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 25 10 00 00  21 20 43 dd 3e 28 34 9f  |....%...! C.>(4.|\n+00000010  a9 0c 8e 14 66 01 a1 dd  15 8e 71 b4 05 83 d9 a3  |....f.....q.....|\n+00000020  5f 5c a3 31 ad 5c d5 5a  ad 56 14 03 03 00 01 01  |_\\.1.\\.Z.V......|\n+00000030  16 03 03 00 28 f3 ad d2  ec 9e 1e 85 2d 96 5f bc  |....(.......-._.|\n+00000040  70 cc 0a c2 22 ef 0a fe  fb b0 77 f1 59 59 08 a6  |p...\".....w.YY..|\n+00000050  57 39 16 00 82 0b 60 1e  9a 74 75 3a 8a           |W9....`..tu:.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 28 00 00 00 00 00  |..........(.....|\n+00000010  00 00 00 cf 63 14 29 73  c7 7b 6c 98 50 db 5f 8e  |....c.)s.{l.P._.|\n+00000020  f4 de 68 bc c0 60 2c db  9e 1f d9 48 55 51 05 47  |..h..`,....HUQ.G|\n+00000030  7e 43 37 17 03 03 00 25  00 00 00 00 00 00 00 01  |~C7....%........|\n+00000040  67 0a e7 77 dd 1a 30 87  27 90 b0 42 31 42 09 53  |g..w..0.'..B1B.S|\n+00000050  03 bf 0c 10 3a c3 a7 95  e9 6e 63 57 ad 15 03 03  |....:....ncW....|\n+00000060  00 1a 00 00 00 00 00 00  00 02 d5 1a ac 66 50 93  |.............fP.|\n+00000070  46 0a da 98 1f cc 30 40  c1 47 c7 88              |F.....0@.G..|"}, {"sha": "9e9570fed0c2241ca0e993d822ebc00e15f2a2c2", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-PSS-Disabled-Required", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-PSS-Disabled-Required", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-PSS-Disabled-Required", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-PSS-Disabled-Required?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,54 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 91 01 00 00  8d 03 03 5a 8a 66 22 31  |...........Z.f\"1|\n+00000010  69 92 30 d5 7b 7c 17 a7  7c 14 d6 3c a9 9e ba dd  |i.0.{|..|..<....|\n+00000020  7c 73 fe b4 b4 dd d8 28  39 32 0d 00 00 2a c0 30  ||s.....(92...*.0|\n+00000030  00 9f cc a8 cc aa c0 2f  00 9e c0 28 00 6b c0 27  |......./...(.k.'|\n+00000040  00 67 c0 14 00 39 c0 13  00 33 00 9d 00 9c 00 3d  |.g...9...3.....=|\n+00000050  00 3c 00 35 00 2f 00 ff  01 00 00 3a 00 00 00 0e  |.<.5./.....:....|\n+00000060  00 0c 00 00 09 31 32 37  2e 30 2e 30 2e 31 00 0b  |.....127.0.0.1..|\n+00000070  00 04 03 00 01 02 00 0a  00 0c 00 0a 00 1d 00 17  |................|\n+00000080  00 1e 00 19 00 18 00 16  00 00 00 17 00 00 00 0d  |................|\n+00000090  00 04 00 02 08 04                                 |......|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 31 02 00 00  2d 03 03 00 00 00 00 00  |....1...-.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 44 4f 57 4e 47  52 44 01 00 c0 30 00 00  |...DOWNGRD...0..|\n+00000030  05 ff 01 00 01 00 16 03  03 02 59 0b 00 02 55 00  |..........Y...U.|\n+00000040  02 52 00 02 4f 30 82 02  4b 30 82 01 b4 a0 03 02  |.R..O0..K0......|\n+00000050  01 02 02 09 00 e8 f0 9d  3f e2 5b ea a6 30 0d 06  |........?.[..0..|\n+00000060  09 2a 86 48 86 f7 0d 01  01 0b 05 00 30 1f 31 0b  |.*.H........0.1.|\n+00000070  30 09 06 03 55 04 0a 13  02 47 6f 31 10 30 0e 06  |0...U....Go1.0..|\n+00000080  03 55 04 03 13 07 47 6f  20 52 6f 6f 74 30 1e 17  |.U....Go Root0..|\n+00000090  0d 31 36 30 31 30 31 30  30 30 30 30 30 5a 17 0d  |.160101000000Z..|\n+000000a0  32 35 30 31 30 31 30 30  30 30 30 30 5a 30 1a 31  |250101000000Z0.1|\n+000000b0  0b 30 09 06 03 55 04 0a  13 02 47 6f 31 0b 30 09  |.0...U....Go1.0.|\n+000000c0  06 03 55 04 03 13 02 47  6f 30 81 9f 30 0d 06 09  |..U....Go0..0...|\n+000000d0  2a 86 48 86 f7 0d 01 01  01 05 00 03 81 8d 00 30  |*.H............0|\n+000000e0  81 89 02 81 81 00 db 46  7d 93 2e 12 27 06 48 bc  |.......F}...'.H.|\n+000000f0  06 28 21 ab 7e c4 b6 a2  5d fe 1e 52 45 88 7a 36  |.(!.~...]..RE.z6|\n+00000100  47 a5 08 0d 92 42 5b c2  81 c0 be 97 79 98 40 fb  |G....B[.....y.@.|\n+00000110  4f 6d 14 fd 2b 13 8b c2  a5 2e 67 d8 d4 09 9e d6  |Om..+.....g.....|\n+00000120  22 38 b7 4a 0b 74 73 2b  c2 34 f1 d1 93 e5 96 d9  |\"8.J.ts+.4......|\n+00000130  74 7b f3 58 9f 6c 61 3c  c0 b0 41 d4 d9 2b 2b 24  |t{.X.la<..A..++$|\n+00000140  23 77 5b 1c 3b bd 75 5d  ce 20 54 cf a1 63 87 1d  |#w[.;.u]. T..c..|\n+00000150  1e 24 c4 f3 1d 1a 50 8b  aa b6 14 43 ed 97 a7 75  |.$....P....C...u|\n+00000160  62 f4 14 c8 52 d7 02 03  01 00 01 a3 81 93 30 81  |b...R.........0.|\n+00000170  90 30 0e 06 03 55 1d 0f  01 01 ff 04 04 03 02 05  |.0...U..........|\n+00000180  a0 30 1d 06 03 55 1d 25  04 16 30 14 06 08 2b 06  |.0...U.%..0...+.|\n+00000190  01 05 05 07 03 01 06 08  2b 06 01 05 05 07 03 02  |........+.......|\n+000001a0  30 0c 06 03 55 1d 13 01  01 ff 04 02 30 00 30 19  |0...U.......0.0.|\n+000001b0  06 03 55 1d 0e 04 12 04  10 9f 91 16 1f 43 43 3e  |..U..........CC>|\n+000001c0  49 a6 de 6d b6 80 d7 9f  60 30 1b 06 03 55 1d 23  |I..m....`0...U.#|\n+000001d0  04 14 30 12 80 10 48 13  49 4d 13 7e 16 31 bb a3  |..0...H.IM.~.1..|\n+000001e0  01 d5 ac ab 6e 7b 30 19  06 03 55 1d 11 04 12 30  |....n{0...U....0|\n+000001f0  10 82 0e 65 78 61 6d 70  6c 65 2e 67 6f 6c 61 6e  |...example.golan|\n+00000200  67 30 0d 06 09 2a 86 48  86 f7 0d 01 01 0b 05 00  |g0...*.H........|\n+00000210  03 81 81 00 9d 30 cc 40  2b 5b 50 a0 61 cb ba e5  |.....0.@+[P.a...|\n+00000220  53 58 e1 ed 83 28 a9 58  1a a9 38 a4 95 a1 ac 31  |SX...(.X..8....1|\n+00000230  5a 1a 84 66 3d 43 d3 2d  d9 0b f2 97 df d3 20 64  |Z..f=C.-...... d|\n+00000240  38 92 24 3a 00 bc cf 9c  7d b7 40 20 01 5f aa d3  |8.$:....}.@ ._..|\n+00000250  16 61 09 a2 76 fd 13 c3  cc e1 0c 5c ee b1 87 82  |.a..v......\\....|\n+00000260  f1 6c 04 ed 73 bb b3 43  77 8d 0c 1c f1 0f a1 d8  |.l..s..Cw.......|\n+00000270  40 83 61 c9 4c 72 2b 9d  ae db 46 06 06 4d f4 c1  |@.a.Lr+...F..M..|\n+00000280  b3 3e c0 d1 bd 42 d4 db  fe 3d 13 60 84 5c 21 d3  |.>...B...=.`.\\!.|\n+00000290  3b e9 fa e7 15 03 03 00  02 02 28                 |;.........(|"}, {"sha": "89361f155772bd5b19af1880094a225654b79ff6", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv13-ClientAuthRequestedAndGiven-PSS-Disabled", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv13-ClientAuthRequestedAndGiven-PSS-Disabled", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv13-ClientAuthRequestedAndGiven-PSS-Disabled", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv13-ClientAuthRequestedAndGiven-PSS-Disabled?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,182 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 e0 01 00 00  dc 03 03 32 03 2a b3 ed  |...........2.*..|\n+00000010  c2 1a 71 f2 ff ea 0b 1c  fa f9 c6 88 03 7c 84 89  |..q..........|..|\n+00000020  4e 45 60 81 d9 58 dc 9f  0a 60 d1 20 ce 4d 59 a5  |NE`..X...`. .MY.|\n+00000030  10 b1 76 53 f5 77 26 fd  17 08 f9 e5 14 03 c4 0a  |..vS.w&.........|\n+00000040  65 fd 83 bb a9 3b 24 05  24 1b ef 00 00 08 13 02  |e....;$.$.......|\n+00000050  13 03 13 01 00 ff 01 00  00 8b 00 00 00 0e 00 0c  |................|\n+00000060  00 00 09 31 32 37 2e 30  2e 30 2e 31 00 0b 00 04  |...127.0.0.1....|\n+00000070  03 00 01 02 00 0a 00 0c  00 0a 00 1d 00 17 00 1e  |................|\n+00000080  00 19 00 18 00 16 00 00  00 17 00 00 00 0d 00 1e  |................|\n+00000090  00 1c 04 03 05 03 06 03  08 07 08 08 08 09 08 0a  |................|\n+000000a0  08 0b 08 04 08 05 08 06  04 01 05 01 06 01 00 2b  |...............+|\n+000000b0  00 03 02 03 04 00 2d 00  02 01 01 00 33 00 26 00  |......-.....3.&.|\n+000000c0  24 00 1d 00 20 06 b0 03  80 81 d6 e7 f4 31 85 4c  |$... ........1.L|\n+000000d0  e3 50 35 c1 df 6e 28 9f  38 ce c0 7b fc 71 00 8c  |.P5..n(.8..{.q..|\n+000000e0  9a 25 07 95 57                                    |.%..W|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 7a 02 00 00  76 03 03 00 00 00 00 00  |....z...v.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 20 ce 4d 59 a5  |........... .MY.|\n+00000030  10 b1 76 53 f5 77 26 fd  17 08 f9 e5 14 03 c4 0a  |..vS.w&.........|\n+00000040  65 fd 83 bb a9 3b 24 05  24 1b ef 00 13 02 00 00  |e....;$.$.......|\n+00000050  2e 00 2b 00 02 03 04 00  33 00 24 00 1d 00 20 2f  |..+.....3.$... /|\n+00000060  e5 7d a3 47 cd 62 43 15  28 da ac 5f bb 29 07 30  |.}.G.bC.(.._.).0|\n+00000070  ff f6 84 af c4 cf c2 ed  90 99 5f 58 cb 3b 74 14  |.........._X.;t.|\n+00000080  03 03 00 01 01 17 03 03  00 17 ad ce ff 21 b8 39  |.............!.9|\n+00000090  16 f6 10 6e 8d 6c 0f 46  2f 58 55 b3 e4 4f 2d 5c  |...n.l.F/XU..O-\\|\n+000000a0  26 17 03 03 00 3c fd 24  07 75 28 2b f2 ec d9 74  |&....<.$.u(+...t|\n+000000b0  f0 76 e4 02 e6 02 bd 47  58 0f 68 60 ac 6c 59 a8  |.v.....GX.h`.lY.|\n+000000c0  87 94 b9 cb c3 fa 41 15  4c 95 b8 58 da 8c d9 ea  |......A.L..X....|\n+000000d0  3a ab 0c 06 83 a5 2b d1  39 6f 32 92 bf e1 c0 f4  |:.....+.9o2.....|\n+000000e0  49 51 17 03 03 02 6d 22  dc 8c fc ae 21 96 41 17  |IQ....m\"....!.A.|\n+000000f0  45 93 6e 08 61 6b 46 b9  9a cf 2e 79 a8 1a 46 30  |E.n.akF....y..F0|\n+00000100  a4 de 3d 53 87 bf 57 3a  44 4f 5b 3f c9 b2 f0 0e  |..=S..W:DO[?....|\n+00000110  56 5f 5a ee 5a 1f df cc  fe f3 54 ab 87 d7 bb 00  |V_Z.Z.....T.....|\n+00000120  2c 61 de ad 31 9c d4 cf  43 bf e7 84 d1 1d 3c cb  |,a..1...C.....<.|\n+00000130  82 d1 81 9d 13 90 6b c8  fd 01 53 4f 13 a5 91 a4  |......k...SO....|\n+00000140  fe 20 ce 2c 34 96 62 b7  6f f0 f0 65 f0 01 18 99  |. .,4.b.o..e....|\n+00000150  31 3d cb c6 72 6f 54 d6  ec fa a3 dd 94 67 6b b9  |1=..roT......gk.|\n+00000160  ff 2c 41 ba 00 d5 25 ba  b1 7a e5 d2 1c 0b 37 ad  |.,A...%..z....7.|\n+00000170  df 0b 62 be b3 69 5b 84  39 2d 72 c2 b9 ec 68 87  |..b..i[.9-r...h.|\n+00000180  32 23 92 4b a8 f0 17 25  0f d7 86 97 45 65 73 e1  |2#.K...%....Ees.|\n+00000190  49 c4 3c 8d 26 43 34 06  4c be 50 76 ae 63 6f 1d  |I.<.&C4.L.Pv.co.|\n+000001a0  ed 57 93 5a 7f 98 e2 1e  5f 94 74 a2 54 59 63 12  |.W.Z...._.t.TYc.|\n+000001b0  bb 8b df 77 20 3a 9c ea  c7 40 b0 cf 8e 7f f8 98  |...w :...@......|\n+000001c0  06 92 38 be 77 11 17 03  c2 ac af fc 8d 7d d5 6b  |..8.w........}.k|\n+000001d0  f7 2b 7a f3 b8 dc b0 cf  3e f7 c5 f4 b3 34 4b 06  |.+z.....>....4K.|\n+000001e0  c6 ed b5 dc 0c 2d 4e bc  03 94 cc 03 f2 9f 5d c6  |.....-N.......].|\n+000001f0  57 36 5a 01 81 65 27 75  1d 4f 22 9f b5 da 7f e2  |W6Z..e'u.O\".....|\n+00000200  7d 36 f3 4b 05 3f 40 47  c6 1b af e6 99 c0 ca 35  |}6.K.?@G.......5|\n+00000210  98 c8 30 60 7b 42 4e e7  5c 90 28 d7 4e db f3 78  |..0`{BN.\\.(.N..x|\n+00000220  22 e2 a3 86 0c 9e 19 43  0e 89 d4 f6 78 38 21 16  |\"......C....x8!.|\n+00000230  84 38 36 6a 2d a5 94 2c  52 2b 00 de 67 16 e8 89  |.86j-..,R+..g...|\n+00000240  32 21 0e fd b0 23 91 06  8b fa 82 70 21 bc 1f 29  |2!...#.....p!..)|\n+00000250  32 af f4 b9 15 7f aa 22  c1 e8 e3 2c 92 b4 d8 2a  |2......\"...,...*|\n+00000260  64 58 f4 f1 85 85 14 92  f3 16 8e 2d 5b a6 7e ef  |dX.........-[.~.|\n+00000270  22 5a 58 bb 4c f1 36 70  2f ca 03 df fb 0a d0 03  |\"ZX.L.6p/.......|\n+00000280  55 5d d9 6b 63 48 d2 75  82 d4 56 af 17 5a 60 4f  |U].kcH.u..V..Z`O|\n+00000290  af 8b 17 d6 fd 96 be 3d  82 25 0e 73 2e 58 0e 0a  |.......=.%.s.X..|\n+000002a0  5c 2d c8 f5 17 b0 ae 7d  39 90 cb 75 bb 4b 33 22  |\\-.....}9..u.K3\"|\n+000002b0  bd a2 02 00 70 43 a8 54  ee 7c 25 d5 d7 88 08 f6  |....pC.T.|%.....|\n+000002c0  3f 34 61 55 f5 d3 53 0c  8c b1 9b fd 4e d9 65 7a  |?4aU..S.....N.ez|\n+000002d0  2b 6e b4 d5 37 34 18 f3  14 00 9f 56 40 d9 15 ea  |+n..74.....V@...|\n+000002e0  59 5a 4b 4a bb f7 19 72  60 4a 08 8f 75 d6 7b a4  |YZKJ...r`J..u.{.|\n+000002f0  de 79 c5 21 1a cb 82 97  b3 88 d8 ae 65 30 cc 56  |.y.!........e0.V|\n+00000300  da a3 04 5c 63 f4 44 a5  eb 05 55 ad 78 46 44 ac  |...\\c.D...U.xFD.|\n+00000310  56 2e f6 f7 eb 47 f6 f1  62 8d df 27 7d 86 5e 58  |V....G..b..'}.^X|\n+00000320  5f 4c 34 6e f6 c0 fd 56  7d 46 82 5d 53 db 2a 84  |_L4n...V}F.]S.*.|\n+00000330  45 db e7 9c b9 23 32 59  cf 85 f7 12 c5 e8 9e 3c  |E....#2Y.......<|\n+00000340  2d 3f 81 a5 24 cf 36 ad  d6 65 02 35 84 de 43 f8  |-?..$.6..e.5..C.|\n+00000350  04 e2 8b ae 17 03 03 00  99 ce e8 48 a3 34 5e fb  |...........H.4^.|\n+00000360  76 f1 e4 3b da 94 0a 25  ee 78 f6 31 24 10 05 25  |v..;...%.x.1$..%|\n+00000370  9c e5 ca fc ef c5 66 86  08 15 d8 69 75 d8 49 e9  |......f....iu.I.|\n+00000380  9b 86 71 3f 1f 41 ee f0  bc 8d 4e aa bc 30 f0 8f  |..q?.A....N..0..|\n+00000390  7b b1 94 7e aa 74 3f eb  23 c5 c9 aa 9a c3 f7 12  |{..~.t?.#.......|\n+000003a0  23 30 95 2e e1 1b 9c fe  8b 50 b1 d9 17 cf af a1  |#0.......P......|\n+000003b0  ff ce 8d fa 7e bd 23 59  d0 7a fb 30 12 f4 8d 86  |....~.#Y.z.0....|\n+000003c0  0c 3c fd 03 50 d4 7f bb  f6 fa ba 1d fc 32 cc 7e  |.<..P........2.~|\n+000003d0  12 3a 33 90 c6 82 5d 6a  90 23 6d b8 e6 60 7d d3  |.:3...]j.#m..`}.|\n+000003e0  a8 f0 0c 75 bc b5 67 68  ed 58 ef 4d ac 91 47 c9  |...u..gh.X.M..G.|\n+000003f0  c4 bc 17 03 03 00 45 ae  0d 8d 76 8d 28 34 1b 09  |......E...v.(4..|\n+00000400  4d d5 df 2e aa f8 ff 71  b2 0e 60 a1 ce 8a 58 9c  |M......q..`...X.|\n+00000410  45 64 31 6c 9b 46 66 64  27 98 e6 f3 93 e8 92 81  |Ed1l.Ffd'.......|\n+00000420  3d 4f db da 98 72 0d b7  71 27 ac 2b 61 81 97 0b  |=O...r..q'.+a...|\n+00000430  e7 ae 32 d7 e2 66 4d 5d  f7 01 d0 77              |..2..fM]...w|\n+>>> Flow 3 (client to server)\n+00000000  14 03 03 00 01 01 17 03  03 02 11 f6 03 90 9e bc  |................|\n+00000010  dc 00 9b f9 dd 7b 65 dd  b0 69 b4 b5 42 fc 25 f2  |.....{e..i..B.%.|\n+00000020  2b 7e be 52 1a 4b f1 e4  21 94 0d 88 4a 58 07 37  |+~.R.K..!...JX.7|\n+00000030  67 c7 e3 c4 62 eb 17 57  5d 52 d4 a9 03 39 0e 7d  |g...b..W]R...9.}|\n+00000040  d0 c3 1a 8d ef ec b7 a8  9b 93 50 0d 7f fd a1 10  |..........P.....|\n+00000050  b6 82 99 21 3f e3 3d 3d  47 04 c3 cd a7 b3 ab e0  |...!?.==G.......|\n+00000060  f6 33 47 0e 1c 30 36 45  21 32 34 c2 2c 72 20 72  |.3G..06E!24.,r r|\n+00000070  b6 c7 5b 95 8a 97 84 54  2e d0 5f d5 80 e7 8f 7a  |..[....T.._....z|\n+00000080  6f 50 96 8a 33 13 c6 97  85 25 47 6b 8a b2 a0 29  |oP..3....%Gk...)|\n+00000090  cd 7f 0e 38 94 53 08 8b  c3 2f 89 a2 10 c2 22 5a  |...8.S.../....\"Z|\n+000000a0  95 42 a3 45 73 a8 d0 ac  6d ba 95 a4 51 63 b9 b4  |.B.Es...m...Qc..|\n+000000b0  79 61 be dd c6 ab 97 72  38 30 63 55 a7 7d 9a eb  |ya.....r80cU.}..|\n+000000c0  bb 5a f6 d0 3d 05 81 5d  0e e5 7a 8b ae fe d2 3b  |.Z..=..]..z....;|\n+000000d0  db 85 3a 13 81 ee 36 b3  ff 41 47 d1 67 bf 17 5e  |..:...6..AG.g..^|\n+000000e0  9d a3 4c 92 51 a9 1b 4b  ca 13 f6 ee 8a e5 b3 01  |..L.Q..K........|\n+000000f0  e7 87 ee 1e 2a 9e 56 3d  01 7e 0f cb e5 d6 ea 13  |....*.V=.~......|\n+00000100  05 3e 8c 5a 24 d0 36 6b  54 9f 8e 3f 07 73 a0 bf  |.>.Z$.6kT..?.s..|\n+00000110  84 c2 90 72 ce 48 50 49  47 27 b3 14 56 5c c7 63  |...r.HPIG'..V\\.c|\n+00000120  7e 7e b5 8f 9d 6d 70 32  6f 3f 4d 53 80 ae f6 2b  |~~...mp2o?MS...+|\n+00000130  fb c9 7a de 76 aa 68 a3  9b a9 a7 47 55 d0 cb f8  |..z.v.h....GU...|\n+00000140  e8 c4 1c f5 0f 54 82 5b  c5 45 18 41 05 da 72 ce  |.....T.[.E.A..r.|\n+00000150  84 d1 8b 00 40 e9 f9 cf  b5 d5 3e 71 ee 25 dc 7d  |....@.....>q.%.}|\n+00000160  3b 00 67 68 9d 78 d2 c0  7b cb 5d 9e 79 2c b5 f4  |;.gh.x..{.].y,..|\n+00000170  1b ea b8 d8 de bd 36 71  2a 26 49 44 1b 5b 92 ad  |......6q*&ID.[..|\n+00000180  1c 2d 2f ab 8e 15 d7 b3  96 89 da 58 77 75 42 32  |.-/........XwuB2|\n+00000190  c3 6b f1 5e 0b da 91 71  1e d5 f1 dd 32 d8 b6 a5  |.k.^...q....2...|\n+000001a0  21 a1 1d 5e b1 df 01 37  33 ac 93 11 94 6d b8 e6  |!..^...73....m..|\n+000001b0  3b be 86 31 da cf b6 ab  cd f5 12 4f 85 45 24 06  |;..1.......O.E$.|\n+000001c0  34 40 7b c5 f8 5f c3 f9  3b cf 9d 2a b3 2e 65 e4  |4@{.._..;..*..e.|\n+000001d0  0e ed fc 7c b4 2b 32 bf  0e 8f b3 85 93 74 8b e8  |...|.+2......t..|\n+000001e0  25 e0 47 c0 d8 52 8e c9  ed 7f 16 41 3f b3 79 d8  |%.G..R.....A?.y.|\n+000001f0  d1 47 19 ae fb ab 97 a5  b2 42 7c a0 73 ad 4f 62  |.G.......B|.s.Ob|\n+00000200  cf 35 52 7c d6 47 b8 1f  e9 65 b0 99 f7 67 e7 64  |.5R|.G...e...g.d|\n+00000210  14 83 46 c7 90 6e 4d 01  3a c2 e6 19 17 03 03 00  |..F..nM.:.......|\n+00000220  99 a5 e0 38 3a 91 4a 1d  87 9a eb a6 95 87 35 fc  |...8:.J.......5.|\n+00000230  ae 42 8d 3a fe f6 39 f3  c2 c2 f0 9a f5 8f b5 75  |.B.:..9........u|\n+00000240  18 6b 84 c0 5b 96 6a 9c  0c aa 81 fc 9a 2e 01 f7  |.k..[.j.........|\n+00000250  d8 b1 5d 4a 54 cf 79 90  fb 79 57 ff d9 d1 46 59  |..]JT.y..yW...FY|\n+00000260  02 84 3d ee cc 68 ea 05  1d a2 79 fb 1d 1e d6 ad  |..=..h....y.....|\n+00000270  5b 95 3b 6b 9a c9 07 e5  e4 20 07 6a a0 74 c8 1a  |[.;k..... .j.t..|\n+00000280  31 53 a4 e6 bb bb 28 61  47 41 d5 f3 45 38 71 86  |1S....(aGA..E8q.|\n+00000290  35 12 f4 8a f2 e4 e9 ae  96 a9 14 ce 8a 1c 5d 59  |5.............]Y|\n+000002a0  3c d7 3a e7 93 35 c2 53  9f d8 4d cb 98 bd e1 72  |<.:..5.S..M....r|\n+000002b0  a8 80 55 a6 cd 9c 50 41  ec 50 17 03 03 00 45 2d  |..U...PA.P....E-|\n+000002c0  90 3b 73 cc 24 52 ad 22  90 0e 7d bf 2a a2 44 09  |.;s.$R.\"..}.*.D.|\n+000002d0  e2 43 61 f2 48 9b 73 85  00 05 8b 0a 51 ad a0 c0  |.Ca.H.s.....Q...|\n+000002e0  64 ef 5e 11 86 37 b0 32  af 11 f7 98 7b 74 39 90  |d.^..7.2....{t9.|\n+000002f0  fa d0 32 f3 fe 4d 01 6b  78 75 31 7e 67 4f 61 0f  |..2..M.kxu1~gOa.|\n+00000300  bb c6 3e c0                                       |..>.|\n+>>> Flow 4 (server to client)\n+00000000  17 03 03 02 9b f5 b2 d6  62 fe e0 c8 8d cc 7a cd  |........b.....z.|\n+00000010  29 51 b2 77 0d 9a 54 fb  43 6d f6 9c e1 ff 28 be  |)Q.w..T.Cm....(.|\n+00000020  fc 50 68 80 2f 1c 4f 50  44 95 64 49 0a 66 fe 79  |.Ph./.OPD.dI.f.y|\n+00000030  46 ba 88 e9 03 be 5c 91  60 84 78 03 a8 c6 21 90  |F.....\\.`.x...!.|\n+00000040  cd 79 de 2d 2f 81 dd 08  1f 52 1a 0e d8 69 16 22  |.y.-/....R...i.\"|\n+00000050  a6 59 5b 2b 85 08 00 16  e7 85 bd 43 9a cc ce e6  |.Y[+.......C....|\n+00000060  3a ee 70 25 0b 95 90 4b  c0 42 4a 48 25 d3 50 92  |:.p%...K.BJH%.P.|\n+00000070  19 e1 3e b8 72 c5 a1 e8  dd 9f a4 57 2d b0 a6 24  |..>.r......W-..$|\n+00000080  8b 8c 55 41 f3 26 45 dd  dd 2b d3 15 8d d9 ca e4  |..UA.&E..+......|\n+00000090  15 6e b5 6d 99 79 ba 46  00 e6 5e 75 52 fd f9 26  |.n.m.y.F..^uR..&|\n+000000a0  cf cd 69 cf be 29 a7 b9  7d 1b 1d 6b ab 17 ee 4e  |..i..)..}..k...N|\n+000000b0  f5 24 b0 89 0f b5 c7 41  4e ea cd 32 98 47 23 bc  |.$.....AN..2.G#.|\n+000000c0  91 03 b1 23 e0 5c 5e 37  40 95 da 90 ef eb 95 81  |...#.\\^7@.......|\n+000000d0  7b 2d c7 15 8f f8 2d ba  69 41 0e a9 eb 19 6c 6c  |{-....-.iA....ll|\n+000000e0  73 b0 05 fc b9 f4 76 91  2b 6a 72 fa d6 e5 87 a9  |s.....v.+jr.....|\n+000000f0  90 49 81 8c d5 fa 78 a2  a1 8f 77 c7 35 78 1b ba  |.I....x...w.5x..|\n+00000100  ac 3c 41 51 ce 4e 99 c9  74 a0 bc 51 12 b5 15 2c  |.<AQ.N..t..Q...,|\n+00000110  8e 36 6e e1 c9 bb 0f d2  fd 00 97 56 de 66 a9 19  |.6n........V.f..|\n+00000120  c7 2f 18 e5 67 b4 34 73  9e b2 6f 68 26 8d 2f da  |./..g.4s..oh&./.|\n+00000130  92 bd 52 13 32 3c 49 80  8c c7 3c 11 9d 9f 05 c0  |..R.2<I...<.....|\n+00000140  aa 5d 63 33 8e 07 60 20  6a 01 1f 5a 16 45 4d ba  |.]c3..` j..Z.EM.|\n+00000150  b0 2a 5c 26 b1 ea 26 72  59 c5 b0 59 8a 1a cb 9a  |.*\\&..&rY..Y....|\n+00000160  6a 54 55 06 75 37 a0 c9  04 4e 2f 61 de ef b5 df  |jTU.u7...N/a....|\n+00000170  68 ae 42 03 29 91 e3 1d  a0 6b 18 4d 17 23 3d 61  |h.B.)....k.M.#=a|\n+00000180  87 72 06 9f 45 98 0d 1e  f7 f1 f5 f3 f7 04 a5 98  |.r..E...........|\n+00000190  29 c2 2e 77 d9 2c 95 df  5d 3d 20 41 36 26 1b 46  |)..w.,..]= A6&.F|\n+000001a0  ea 54 9e a3 96 05 ba f7  33 01 85 b0 d1 9f 78 3c  |.T......3.....x<|\n+000001b0  0f 73 0d 04 52 7f 02 f4  cb 79 f1 e2 d1 63 60 d6  |.s..R....y...c`.|\n+000001c0  e1 34 05 23 79 c3 37 eb  d0 5b ea bc f4 f9 bb 7a  |.4.#y.7..[.....z|\n+000001d0  85 9e 42 50 3c c8 f8 e6  f4 93 71 c2 6a 46 b9 26  |..BP<.....q.jF.&|\n+000001e0  8c 17 b4 c9 65 00 fb 9a  d6 54 ab e6 71 c1 1b 5a  |....e....T..q..Z|\n+000001f0  51 a2 6f df 0b 52 29 8c  c3 ec 8e bf 31 36 93 7e  |Q.o..R).....16.~|\n+00000200  59 cc ca 49 71 dc ce 84  40 7d 43 81 5c 96 ed ca  |Y..Iq...@}C.\\...|\n+00000210  d1 e6 15 40 cf 19 f4 ed  61 28 9a e3 6b e7 1c 9b  |...@....a(..k...|\n+00000220  c1 71 d0 46 ef 79 3b d8  35 e3 7b 47 3f a2 78 76  |.q.F.y;.5.{G?.xv|\n+00000230  17 58 13 67 5f 4e f0 ed  2e e9 84 e1 92 0c a6 36  |.X.g_N.........6|\n+00000240  5c 5b de 8e 5c 04 ed d4  a4 75 10 fd 85 9c e5 8e  |\\[..\\....u......|\n+00000250  ca 02 14 fb 91 8b 85 14  79 e5 97 1f 63 46 48 90  |........y...cFH.|\n+00000260  26 c7 2f a2 c0 18 71 d9  2e e3 81 78 7b 74 67 e0  |&./...q....x{tg.|\n+00000270  e1 ef 48 af 41 96 9f 1a  44 d8 6c 94 49 3e 9b 47  |..H.A...D.l.I>.G|\n+00000280  71 63 2f 0c 94 c9 42 ac  bc 4c 0a 16 fe 9a 90 eb  |qc/...B..L......|\n+00000290  02 75 16 1a 10 23 b2 75  67 c7 c5 17 55 9b cf 69  |.u...#.ug...U..i|\n+000002a0  17 03 03 00 1e 45 8c ed  99 0f 8a 83 d8 89 70 49  |.....E........pI|\n+000002b0  17 a8 fd 2b 6e ef ff 53  fa 99 52 89 ee 8b 19 f1  |...+n..S..R.....|\n+000002c0  41 09 30 17 03 03 00 13  14 f0 f6 ef c5 f9 52 15  |A.0...........R.|\n+000002d0  77 de 5e 46 63 8d 3b 2f  07 84 aa                 |w.^Fc.;/...|"}, {"sha": "c13db8d68a6624a2ef9de8646b37efe0175d0fc3", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv13-RSA-PSS-Disabled", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv13-RSA-PSS-Disabled", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv13-RSA-PSS-Disabled", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv13-RSA-PSS-Disabled?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,103 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 e0 01 00 00  dc 03 03 1e 9f 50 05 56  |.............P.V|\n+00000010  a7 21 c8 df 56 a8 f3 bb  e4 15 3b b0 04 e5 f5 10  |.!..V.....;.....|\n+00000020  d8 5b 0e 68 d3 b4 39 64  b5 89 9c 20 5a 6b 29 6d  |.[.h..9d... Zk)m|\n+00000030  22 a0 e0 fb 7f 2d 87 48  e7 b4 c9 b3 5a d0 2b c7  |\"....-.H....Z.+.|\n+00000040  ad d8 e4 ad d5 eb 81 b3  1f 61 0e 65 00 08 13 02  |.........a.e....|\n+00000050  13 03 13 01 00 ff 01 00  00 8b 00 00 00 0e 00 0c  |................|\n+00000060  00 00 09 31 32 37 2e 30  2e 30 2e 31 00 0b 00 04  |...127.0.0.1....|\n+00000070  03 00 01 02 00 0a 00 0c  00 0a 00 1d 00 17 00 1e  |................|\n+00000080  00 19 00 18 00 16 00 00  00 17 00 00 00 0d 00 1e  |................|\n+00000090  00 1c 04 03 05 03 06 03  08 07 08 08 08 09 08 0a  |................|\n+000000a0  08 0b 08 04 08 05 08 06  04 01 05 01 06 01 00 2b  |...............+|\n+000000b0  00 03 02 03 04 00 2d 00  02 01 01 00 33 00 26 00  |......-.....3.&.|\n+000000c0  24 00 1d 00 20 ba 67 99  b3 60 71 ed 6c bb 8d 7e  |$... .g..`q.l..~|\n+000000d0  4c c3 ea 37 6d 90 b6 f8  91 67 71 2c 84 a7 32 3a  |L..7m....gq,..2:|\n+000000e0  23 2a 90 13 35                                    |#*..5|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 7a 02 00 00  76 03 03 00 00 00 00 00  |....z...v.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 20 5a 6b 29 6d  |........... Zk)m|\n+00000030  22 a0 e0 fb 7f 2d 87 48  e7 b4 c9 b3 5a d0 2b c7  |\"....-.H....Z.+.|\n+00000040  ad d8 e4 ad d5 eb 81 b3  1f 61 0e 65 13 02 00 00  |.........a.e....|\n+00000050  2e 00 2b 00 02 03 04 00  33 00 24 00 1d 00 20 2f  |..+.....3.$... /|\n+00000060  e5 7d a3 47 cd 62 43 15  28 da ac 5f bb 29 07 30  |.}.G.bC.(.._.).0|\n+00000070  ff f6 84 af c4 cf c2 ed  90 99 5f 58 cb 3b 74 14  |.........._X.;t.|\n+00000080  03 03 00 01 01 17 03 03  00 17 d9 74 68 ee e6 54  |...........th..T|\n+00000090  e3 7a 0e ee 86 c7 a8 bb  c7 65 fc e4 c4 6c 58 7a  |.z.......e...lXz|\n+000000a0  1e 17 03 03 02 6d 98 c3  0c cc 80 fe ea 70 13 4e  |.....m.......p.N|\n+000000b0  2f f6 49 99 5f 27 0a f9  4d cf e5 1a 9a 37 fb e7  |/.I._'..M....7..|\n+000000c0  3b a4 60 82 43 df fb fa  47 15 6f d8 db d2 3e c3  |;.`.C...G.o...>.|\n+000000d0  dd a0 37 ca b2 b4 c9 1b  5c 86 4a e0 7e 06 1e 27  |..7.....\\.J.~..'|\n+000000e0  73 c6 cd 54 37 df 95 b1  c6 d5 44 85 2c 67 7d a7  |s..T7.....D.,g}.|\n+000000f0  2a 7d 87 86 5e f3 e5 60  f8 7c de bf 78 89 35 9b  |*}..^..`.|..x.5.|\n+00000100  d1 0b 8a dd 6f 40 d8 5a  55 10 e2 71 b0 7a 5e 4b  |....o@.ZU..q.z^K|\n+00000110  86 18 be 18 a7 f8 8e c6  ae 8c 1e df bf 84 77 c5  |..............w.|\n+00000120  dc b1 17 26 72 ea bb 9b  28 6c bf 19 8d 1a 22 90  |...&r...(l....\".|\n+00000130  0f 19 92 5b ff db 07 84  48 61 68 f0 50 20 76 a3  |...[....Hah.P v.|\n+00000140  d3 f2 4a 3b 60 f5 73 cb  61 f7 11 63 f2 a7 0e 18  |..J;`.s.a..c....|\n+00000150  30 96 d0 17 f1 2f 58 09  49 33 15 3e 31 e4 17 e8  |0..../X.I3.>1...|\n+00000160  07 48 b5 43 06 40 60 4f  a0 78 0d 51 0c 3f 0f 1a  |.H.C.@`O.x.Q.?..|\n+00000170  8c 95 7a 3e 36 66 36 22  dc 58 4e b7 3e 19 ad de  |..z>6f6\".XN.>...|\n+00000180  c9 f9 b0 76 e4 e2 8c 04  27 6f 67 8f fe 86 b9 41  |...v....'og....A|\n+00000190  53 7d 9f d1 e0 a6 0b ec  fc c0 82 bf 00 36 28 4d  |S}...........6(M|\n+000001a0  20 3a e3 42 67 87 16 64  6c 4f e2 54 23 d1 0f 32  | :.Bg..dlO.T#..2|\n+000001b0  e9 16 9a da 46 a6 39 18  d5 6e a6 93 25 de a1 77  |....F.9..n..%..w|\n+000001c0  d9 26 b5 7c b4 85 8a 69  48 90 11 a9 8c 42 ca b8  |.&.|...iH....B..|\n+000001d0  88 63 df ec 6c e3 9f 2c  29 75 9b 57 79 8b 69 66  |.c..l..,)u.Wy.if|\n+000001e0  16 9e 93 48 04 8a 41 e0  8b 0e fb a5 9c fd 68 f6  |...H..A.......h.|\n+000001f0  5f ab 89 11 e4 aa 4c 6c  92 df b3 a3 39 f0 38 d9  |_.....Ll....9.8.|\n+00000200  7d 1b 42 13 ee d1 83 e2  20 3f 60 81 96 d9 63 2c  |}.B..... ?`...c,|\n+00000210  e8 54 a5 08 41 9b 1d 02  41 37 a2 ce 0c 9b 34 bf  |.T..A...A7....4.|\n+00000220  43 c5 ac 90 67 cd 6b b6  55 31 36 b1 2b 0e ed 8c  |C...g.k.U16.+...|\n+00000230  23 ae 71 b2 ab f3 94 68  f2 f6 87 d3 87 61 ca aa  |#.q....h.....a..|\n+00000240  0b 65 63 a1 11 dc 6d 74  33 c8 24 a6 ae 40 27 c7  |.ec...mt3.$..@'.|\n+00000250  d4 06 51 89 15 35 66 21  b0 82 15 87 70 c5 b8 8d  |..Q..5f!....p...|\n+00000260  34 48 ff 41 e0 1a b0 46  f7 38 47 53 64 f7 a3 a2  |4H.A...F.8GSd...|\n+00000270  61 96 72 ea 90 de 86 18  64 49 91 ed 97 05 e3 27  |a.r.....dI.....'|\n+00000280  47 df ea 06 c6 28 f9 79  51 5e 64 b6 de 52 75 8a  |G....(.yQ^d..Ru.|\n+00000290  79 8d 8e a6 d5 b0 f1 a6  ab 76 44 25 4b 80 5e e4  |y........vD%K.^.|\n+000002a0  d4 aa c6 2d 77 1a 49 52  16 d6 73 6b 18 2d d1 a6  |...-w.IR..sk.-..|\n+000002b0  4c e1 be 4d f8 79 34 a1  4c 81 88 9c 4b 85 f3 28  |L..M.y4.L...K..(|\n+000002c0  97 fc 3a 7e cf d4 81 2c  d3 57 df 09 f5 49 f5 cf  |..:~...,.W...I..|\n+000002d0  c7 7c 22 b3 8e 95 0f 97  6d d1 56 e3 43 7e 52 0f  |.|\".....m.V.C~R.|\n+000002e0  d4 da 3f e0 4e 06 b9 84  18 7d 7c 56 49 e0 d7 4a  |..?.N....}|VI..J|\n+000002f0  d6 df c4 70 0c 74 5b 1f  4d 76 28 cd 3b b0 9e 27  |...p.t[.Mv(.;..'|\n+00000300  cc 6b 1a 13 41 1a 6b bf  0d 2d 93 b2 d5 7e 7e 25  |.k..A.k..-...~~%|\n+00000310  0e 8a 9c 17 03 03 00 99  df 4b 8e 3e d0 14 be 76  |.........K.>...v|\n+00000320  f1 d3 ca b1 39 c0 7e 6c  4f 8c d9 0d b8 83 07 39  |....9.~lO......9|\n+00000330  08 55 13 1e 3d 68 0f 99  9f 9a 68 1f 57 6a aa 41  |.U..=h....h.Wj.A|\n+00000340  a4 40 2b 12 f2 4b 6c db  3c 59 fa 99 5c e2 c7 2d  |.@+..Kl.<Y..\\..-|\n+00000350  4b 55 4c 27 b1 6c bf 99  c3 36 1d 73 7a 8b fd bc  |KUL'.l...6.sz...|\n+00000360  93 77 27 f5 9e cd 10 61  bc 8d b5 bf 7b bb 69 00  |.w'....a....{.i.|\n+00000370  f9 f0 d3 22 dd 4e 7d 12  5a 61 49 1d d4 29 14 43  |...\".N}.ZaI..).C|\n+00000380  e5 62 ab d8 c6 78 75 80  4b 7a 6b 3f af 4b 92 2a  |.b...xu.Kzk?.K.*|\n+00000390  23 29 da 85 c0 d7 35 03  9d ed 9c f7 83 39 cf cb  |#)....5......9..|\n+000003a0  0f 85 5e 9f 29 61 d8 a2  d0 cb 14 2d 71 50 6f d5  |..^.)a.....-qPo.|\n+000003b0  c2 17 03 03 00 45 be 9b  ee 5d e1 08 8a c2 d6 67  |.....E...].....g|\n+000003c0  df 3b 84 50 28 30 69 bd  11 89 6a ab 02 ad d7 79  |.;.P(0i...j....y|\n+000003d0  8b 2c 0a a9 9c ce e5 30  49 2d 59 82 e8 ee d3 03  |.,.....0I-Y.....|\n+000003e0  77 d3 fc 22 dd 81 be e6  f4 22 36 8d 8e b1 7c 4a  |w..\".....\"6...|J|\n+000003f0  b9 9c 6a ea 3f f0 aa ac  ec b6 c7 17 03 03 00 a3  |..j.?...........|\n+00000400  69 e0 19 38 57 54 62 6c  28 d9 54 94 79 6e 7b 48  |i..8WTbl(.T.yn{H|\n+00000410  25 55 7f 5f bb cc 91 07  30 47 55 9b f3 6e b9 ba  |%U._....0GU..n..|\n+00000420  50 65 9b e9 81 5d 53 20  cd 27 5d ee 92 93 01 8f  |Pe...]S .'].....|\n+00000430  5a d6 02 b9 26 1b 45 c3  40 26 6b 81 c3 ba 1e 3c  |Z...&.E.@&k....<|\n+00000440  e6 03 93 b0 18 fe 2d be  07 97 b1 a1 a7 55 8f d8  |......-......U..|\n+00000450  96 7a 58 ad 7d c1 72 71  d9 25 07 56 22 9a 7a f9  |.zX.}.rq.%.V\".z.|\n+00000460  4a 1b 82 30 e9 fb b0 26  81 45 d2 45 5b 1c 7d 97  |J..0...&.E.E[.}.|\n+00000470  89 6d 17 69 81 27 a6 4c  be d0 78 1d b5 6c 3f 94  |.m.i.'.L..x..l?.|\n+00000480  ef e4 6b ec 02 63 8b bf  f9 00 8a 8a 46 43 5d e0  |..k..c......FC].|\n+00000490  52 38 8c d5 76 d7 79 42  a3 6b 35 e2 45 f3 0f b5  |R8..v.yB.k5.E...|\n+000004a0  9f 22 f9                                          |.\".|\n+>>> Flow 3 (client to server)\n+00000000  14 03 03 00 01 01 17 03  03 00 45 4b 7c c5 9e c6  |..........EK|...|\n+00000010  47 4a 90 d8 c2 c0 49 f7  3b c4 26 eb 15 18 9c bc  |GJ....I.;.&.....|\n+00000020  c8 44 f0 53 94 2f 0f c8  d7 c1 86 42 ed b7 8f 63  |.D.S./.....B...c|\n+00000030  a0 97 5d 5b 15 01 3a 3d  ca a6 d0 1a a4 77 cc 7e  |..][..:=.....w.~|\n+00000040  88 fd 0b c9 a0 46 b7 40  25 8a 03 6e 99 66 bb 84  |.....F.@%..n.f..|\n+>>> Flow 4 (server to client)\n+00000000  17 03 03 00 1e 6a 41 80  ca 72 5f c3 ee e1 88 49  |.....jA..r_....I|\n+00000010  6d be a4 d9 26 07 5c 2b  2c a7 83 b5 c4 eb 4e 4b  |m...&.\\+,.....NK|\n+00000020  a1 29 98 17 03 03 00 13  2a f9 33 6c 46 f7 9a 51  |.)......*.3lF..Q|\n+00000030  1b 36 cd bc d8 5d 94 0d  9e 4b 72                 |.6...]...Kr|"}, {"sha": "208c13c195314538f06cd2786cec50d82068d4e4", "filename": "libgo/go/crypto/tls/tls_test.go", "status": "modified", "additions": 47, "deletions": 6, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftls_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Ftls%2Ftls_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftls_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -18,10 +18,22 @@ import (\n \t\"os\"\n \t\"reflect\"\n \t\"strings\"\n+\t\"sync\"\n \t\"testing\"\n \t\"time\"\n )\n \n+var savedSupportedSignatureAlgorithmsTLS12 = supportedSignatureAlgorithmsTLS12\n+\n+func init() {\n+\t// TLS 1.3 is opt-in for Go 1.12, and RSA-PSS is disabled in TLS 1.2, but we\n+\t// want to run most tests with both enabled. TestTLS13Switch below and the\n+\t// \"PSS-Disabled\" recordings test the disabled behavior. See Issue 30055.\n+\ttls13Support.Do(func() {}) // defuse the sync.Once\n+\ttls13Support.cached = true\n+\tsupportedSignatureAlgorithmsTLS12 = supportedSignatureAlgorithms\n+}\n+\n var rsaCertPEM = `-----BEGIN CERTIFICATE-----\n MIIB0zCCAX2gAwIBAgIJAI/M7BYjwB+uMA0GCSqGSIb3DQEBBQUAMEUxCzAJBgNV\n BAYTAkFVMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX\n@@ -1076,18 +1088,47 @@ func TestEscapeRoute(t *testing.T) {\n \t\tVersionSSL30,\n \t}\n \n-\tss, cs, err := testHandshake(t, testConfig, testConfig)\n+\texpectVersion(t, testConfig, testConfig, VersionTLS12)\n+}\n+\n+func expectVersion(t *testing.T, clientConfig, serverConfig *Config, v uint16) {\n+\tss, cs, err := testHandshake(t, clientConfig, serverConfig)\n \tif err != nil {\n-\t\tt.Fatalf(\"Handshake failed when support for TLS 1.3 was dropped: %v\", err)\n+\t\tt.Fatalf(\"Handshake failed: %v\", err)\n \t}\n-\tif ss.Version != VersionTLS12 {\n-\t\tt.Errorf(\"Server negotiated version %x, expected %x\", cs.Version, VersionTLS12)\n+\tif ss.Version != v {\n+\t\tt.Errorf(\"Server negotiated version %x, expected %x\", cs.Version, v)\n \t}\n-\tif cs.Version != VersionTLS12 {\n-\t\tt.Errorf(\"Client negotiated version %x, expected %x\", cs.Version, VersionTLS12)\n+\tif cs.Version != v {\n+\t\tt.Errorf(\"Client negotiated version %x, expected %x\", cs.Version, v)\n \t}\n }\n \n+// TestTLS13Switch checks the behavior of GODEBUG=tls13=[0|1]. See Issue 30055.\n+func TestTLS13Switch(t *testing.T) {\n+\tdefer func(savedGODEBUG string) {\n+\t\tos.Setenv(\"GODEBUG\", savedGODEBUG)\n+\t}(os.Getenv(\"GODEBUG\"))\n+\n+\tos.Setenv(\"GODEBUG\", \"tls13=0\")\n+\ttls13Support.Once = sync.Once{} // reset the cache\n+\n+\ttls12Config := testConfig.Clone()\n+\ttls12Config.MaxVersion = VersionTLS12\n+\texpectVersion(t, testConfig, testConfig, VersionTLS12)\n+\texpectVersion(t, tls12Config, testConfig, VersionTLS12)\n+\texpectVersion(t, testConfig, tls12Config, VersionTLS12)\n+\texpectVersion(t, tls12Config, tls12Config, VersionTLS12)\n+\n+\tos.Setenv(\"GODEBUG\", \"tls13=1\")\n+\ttls13Support.Once = sync.Once{} // reset the cache\n+\n+\texpectVersion(t, testConfig, testConfig, VersionTLS13)\n+\texpectVersion(t, tls12Config, testConfig, VersionTLS12)\n+\texpectVersion(t, testConfig, tls12Config, VersionTLS12)\n+\texpectVersion(t, tls12Config, tls12Config, VersionTLS12)\n+}\n+\n // Issue 28744: Ensure that we don't modify memory\n // that Config doesn't own such as Certificates.\n func TestBuildNameToCertificate_doesntModifyCertificates(t *testing.T) {"}, {"sha": "3e1e5fb8cd1c1ff405539fcbfe6ca41e2629f560", "filename": "libgo/go/crypto/x509/cert_pool.go", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Fx509%2Fcert_pool.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Fx509%2Fcert_pool.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fcert_pool.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -71,10 +71,15 @@ func (s *CertPool) findPotentialParents(cert *Certificate) []int {\n \tif s == nil {\n \t\treturn nil\n \t}\n+\n+\tvar candidates []int\n \tif len(cert.AuthorityKeyId) > 0 {\n-\t\treturn s.bySubjectKeyId[string(cert.AuthorityKeyId)]\n+\t\tcandidates = s.bySubjectKeyId[string(cert.AuthorityKeyId)]\n+\t}\n+\tif len(candidates) == 0 {\n+\t\tcandidates = s.byName[string(cert.RawIssuer)]\n \t}\n-\treturn s.byName[string(cert.RawIssuer)]\n+\treturn candidates\n }\n \n func (s *CertPool) contains(cert *Certificate) bool {"}, {"sha": "86fe76a57d7f83e8bf65fa42566bbf9ec8b479d0", "filename": "libgo/go/crypto/x509/verify_test.go", "status": "modified", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Fx509%2Fverify_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Fx509%2Fverify_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fverify_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -386,6 +386,19 @@ var verifyTests = []verifyTest{\n \n \t\terrorCallback: expectHostnameError(\"not valid for any names\"),\n \t},\n+\t{\n+\t\t// A certificate with an AKID should still chain to a parent without SKID.\n+\t\t// See Issue 30079.\n+\t\tleaf:        leafWithAKID,\n+\t\troots:       []string{rootWithoutSKID},\n+\t\tcurrentTime: 1550000000,\n+\t\tdnsName:     \"example\",\n+\t\tsystemSkip:  true,\n+\n+\t\texpectedChains: [][]string{\n+\t\t\t{\"Acme LLC\", \"Acme Co\"},\n+\t\t},\n+\t},\n }\n \n func expectHostnameError(msg string) func(*testing.T, int, error) bool {\n@@ -1679,6 +1692,109 @@ h7olHCpY9yMRiz0=\n -----END CERTIFICATE-----\n `\n \n+const (\n+\trootWithoutSKID = `\n+Certificate:\n+    Data:\n+        Version: 3 (0x2)\n+        Serial Number:\n+            78:29:2a:dc:2f:12:39:7f:c9:33:93:ea:61:39:7d:70\n+        Signature Algorithm: ecdsa-with-SHA256\n+        Issuer: O = Acme Co\n+        Validity\n+            Not Before: Feb  4 22:56:34 2019 GMT\n+            Not After : Feb  1 22:56:34 2029 GMT\n+        Subject: O = Acme Co\n+        Subject Public Key Info:\n+            Public Key Algorithm: id-ecPublicKey\n+                Public-Key: (256 bit)\n+                pub:\n+                    04:84:a6:8c:69:53:af:87:4b:39:64:fe:04:24:e6:\n+                    d8:fc:d6:46:39:35:0e:92:dc:48:08:7e:02:5f:1e:\n+                    07:53:5c:d9:e0:56:c5:82:07:f6:a3:e2:ad:f6:ad:\n+                    be:a0:4e:03:87:39:67:0c:9c:46:91:68:6b:0e:8e:\n+                    f8:49:97:9d:5b\n+                ASN1 OID: prime256v1\n+                NIST CURVE: P-256\n+        X509v3 extensions:\n+            X509v3 Key Usage: critical\n+                Digital Signature, Key Encipherment, Certificate Sign\n+            X509v3 Extended Key Usage:\n+                TLS Web Server Authentication\n+            X509v3 Basic Constraints: critical\n+                CA:TRUE\n+            X509v3 Subject Alternative Name:\n+                DNS:example\n+    Signature Algorithm: ecdsa-with-SHA256\n+         30:46:02:21:00:c6:81:61:61:42:8d:37:e7:d0:c3:72:43:44:\n+         17:bd:84:ff:88:81:68:9a:99:08:ab:3c:3a:c0:1e:ea:8c:ba:\n+         c0:02:21:00:de:c9:fa:e5:5e:c6:e2:db:23:64:43:a9:37:42:\n+         72:92:7f:6e:89:38:ea:9e:2a:a7:fd:2f:ea:9a:ff:20:21:e7\n+-----BEGIN CERTIFICATE-----\n+MIIBbzCCARSgAwIBAgIQeCkq3C8SOX/JM5PqYTl9cDAKBggqhkjOPQQDAjASMRAw\n+DgYDVQQKEwdBY21lIENvMB4XDTE5MDIwNDIyNTYzNFoXDTI5MDIwMTIyNTYzNFow\n+EjEQMA4GA1UEChMHQWNtZSBDbzBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABISm\n+jGlTr4dLOWT+BCTm2PzWRjk1DpLcSAh+Al8eB1Nc2eBWxYIH9qPirfatvqBOA4c5\n+ZwycRpFoaw6O+EmXnVujTDBKMA4GA1UdDwEB/wQEAwICpDATBgNVHSUEDDAKBggr\n+BgEFBQcDATAPBgNVHRMBAf8EBTADAQH/MBIGA1UdEQQLMAmCB2V4YW1wbGUwCgYI\n+KoZIzj0EAwIDSQAwRgIhAMaBYWFCjTfn0MNyQ0QXvYT/iIFompkIqzw6wB7qjLrA\n+AiEA3sn65V7G4tsjZEOpN0Jykn9uiTjqniqn/S/qmv8gIec=\n+-----END CERTIFICATE-----\n+`\n+\tleafWithAKID = `\n+\tCertificate:\n+    Data:\n+        Version: 3 (0x2)\n+        Serial Number:\n+            f0:8a:62:f0:03:84:a2:cf:69:63:ad:71:3b:b6:5d:8c\n+        Signature Algorithm: ecdsa-with-SHA256\n+        Issuer: O = Acme Co\n+        Validity\n+            Not Before: Feb  4 23:06:52 2019 GMT\n+            Not After : Feb  1 23:06:52 2029 GMT\n+        Subject: O = Acme LLC\n+        Subject Public Key Info:\n+            Public Key Algorithm: id-ecPublicKey\n+                Public-Key: (256 bit)\n+                pub:\n+                    04:5a:4e:4d:fb:ff:17:f7:b6:13:e8:29:45:34:81:\n+                    39:ff:8c:9c:d9:8c:0a:9f:dd:b5:97:4c:2b:20:91:\n+                    1c:4f:6b:be:53:27:66:ec:4a:ad:08:93:6d:66:36:\n+                    0c:02:70:5d:01:ca:7f:c3:29:e9:4f:00:ba:b4:14:\n+                    ec:c5:c3:34:b3\n+                ASN1 OID: prime256v1\n+                NIST CURVE: P-256\n+        X509v3 extensions:\n+            X509v3 Key Usage: critical\n+                Digital Signature, Key Encipherment\n+            X509v3 Extended Key Usage:\n+                TLS Web Server Authentication\n+            X509v3 Basic Constraints: critical\n+                CA:FALSE\n+            X509v3 Authority Key Identifier:\n+                keyid:C2:2B:5F:91:78:34:26:09:42:8D:6F:51:B2:C5:AF:4C:0B:DE:6A:42\n+\n+            X509v3 Subject Alternative Name:\n+                DNS:example\n+    Signature Algorithm: ecdsa-with-SHA256\n+         30:44:02:20:64:e0:ba:56:89:63:ce:22:5e:4f:22:15:fd:3c:\n+         35:64:9a:3a:6b:7b:9a:32:a0:7f:f7:69:8c:06:f0:00:58:b8:\n+         02:20:09:e4:9f:6d:8b:9e:38:e1:b6:01:d5:ee:32:a4:94:65:\n+         93:2a:78:94:bb:26:57:4b:c7:dd:6c:3d:40:2b:63:90\n+-----BEGIN CERTIFICATE-----\n+MIIBjTCCATSgAwIBAgIRAPCKYvADhKLPaWOtcTu2XYwwCgYIKoZIzj0EAwIwEjEQ\n+MA4GA1UEChMHQWNtZSBDbzAeFw0xOTAyMDQyMzA2NTJaFw0yOTAyMDEyMzA2NTJa\n+MBMxETAPBgNVBAoTCEFjbWUgTExDMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAE\n+Wk5N+/8X97YT6ClFNIE5/4yc2YwKn921l0wrIJEcT2u+Uydm7EqtCJNtZjYMAnBd\n+Acp/wynpTwC6tBTsxcM0s6NqMGgwDgYDVR0PAQH/BAQDAgWgMBMGA1UdJQQMMAoG\n+CCsGAQUFBwMBMAwGA1UdEwEB/wQCMAAwHwYDVR0jBBgwFoAUwitfkXg0JglCjW9R\n+ssWvTAveakIwEgYDVR0RBAswCYIHZXhhbXBsZTAKBggqhkjOPQQDAgNHADBEAiBk\n+4LpWiWPOIl5PIhX9PDVkmjpre5oyoH/3aYwG8ABYuAIgCeSfbYueOOG2AdXuMqSU\n+ZZMqeJS7JldLx91sPUArY5A=\n+-----END CERTIFICATE-----\n+`\n+)\n+\n var unknownAuthorityErrorTests = []struct {\n \tcert     string\n \texpected string"}, {"sha": "58098adc2d5a2c53b0ea5757cd86047481185e7f", "filename": "libgo/go/crypto/x509/x509.go", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -2272,21 +2272,25 @@ type CertificateRequest struct {\n \n \tSubject pkix.Name\n \n-\t// Attributes is the dried husk of a bug and shouldn't be used.\n+\t// Attributes contains the CSR attributes that can parse as\n+\t// pkix.AttributeTypeAndValueSET.\n+\t//\n+\t// Deprecated: use Extensions and ExtraExtensions instead for parsing and\n+\t// generating the requestedExtensions attribute.\n \tAttributes []pkix.AttributeTypeAndValueSET\n \n-\t// Extensions contains raw X.509 extensions. When parsing CSRs, this\n-\t// can be used to extract extensions that are not parsed by this\n+\t// Extensions contains all requested extensions, in raw form. When parsing\n+\t// CSRs, this can be used to extract extensions that are not parsed by this\n \t// package.\n \tExtensions []pkix.Extension\n \n-\t// ExtraExtensions contains extensions to be copied, raw, into any\n-\t// marshaled CSR. Values override any extensions that would otherwise\n-\t// be produced based on the other fields but are overridden by any\n-\t// extensions specified in Attributes.\n+\t// ExtraExtensions contains extensions to be copied, raw, into any CSR\n+\t// marshaled by CreateCertificateRequest. Values override any extensions\n+\t// that would otherwise be produced based on the other fields but are\n+\t// overridden by any extensions specified in Attributes.\n \t//\n-\t// The ExtraExtensions field is not populated when parsing CSRs, see\n-\t// Extensions.\n+\t// The ExtraExtensions field is not populated by ParseCertificateRequest,\n+\t// see Extensions instead.\n \tExtraExtensions []pkix.Extension\n \n \t// Subject Alternate Name values.\n@@ -2385,21 +2389,21 @@ func parseCSRExtensions(rawAttributes []asn1.RawValue) ([]pkix.Extension, error)\n // CreateCertificateRequest creates a new certificate request based on a\n // template. The following members of template are used:\n //\n-//  - Attributes\n+//  - SignatureAlgorithm\n+//  - Subject\n //  - DNSNames\n //  - EmailAddresses\n-//  - ExtraExtensions\n //  - IPAddresses\n //  - URIs\n-//  - SignatureAlgorithm\n-//  - Subject\n+//  - ExtraExtensions\n+//  - Attributes (deprecated)\n //\n-// The private key is the private key of the signer.\n+// priv is the private key to sign the CSR with, and the corresponding public\n+// key will be included in the CSR. It must implement crypto.Signer and its\n+// Public() method must return a *rsa.PublicKey or a *ecdsa.PublicKey. (A\n+// *rsa.PrivateKey or *ecdsa.PrivateKey satisfies this.)\n //\n // The returned slice is the certificate request in DER encoding.\n-//\n-// All keys types that are implemented via crypto.Signer are supported (This\n-// includes *rsa.PublicKey and *ecdsa.PublicKey.)\n func CreateCertificateRequest(rand io.Reader, template *CertificateRequest, priv interface{}) (csr []byte, err error) {\n \tkey, ok := priv.(crypto.Signer)\n \tif !ok {"}, {"sha": "8cdc903c6808d173e9cddec8be34bddff6d0d771", "filename": "libgo/go/database/sql/sql.go", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1698,7 +1698,7 @@ func (db *DB) Conn(ctx context.Context) (*Conn, error) {\n \t\t}\n \t}\n \tif err == driver.ErrBadConn {\n-\t\tdc, err = db.conn(ctx, cachedOrNewConn)\n+\t\tdc, err = db.conn(ctx, alwaysNewConn)\n \t}\n \tif err != nil {\n \t\treturn nil, err\n@@ -2256,6 +2256,13 @@ var (\n \n // Stmt is a prepared statement.\n // A Stmt is safe for concurrent use by multiple goroutines.\n+//\n+// If a Stmt is prepared on a Tx or Conn, it will be bound to a single\n+// underlying connection forever. If the Tx or Conn closes, the Stmt will\n+// become unusable and all operations will return an error.\n+// If a Stmt is prepared on a DB, it will remain usable for the lifetime of the\n+// DB. When the Stmt needs to execute on a new underlying connection, it will\n+// prepare itself on the new connection automatically.\n type Stmt struct {\n \t// Immutable:\n \tdb        *DB    // where we came from"}, {"sha": "dea63f1850fef444dc8a6a3490c6d3983c97afba", "filename": "libgo/go/encoding/json/encode.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -259,6 +259,7 @@ func (e *InvalidUTF8Error) Error() string {\n \treturn \"json: invalid UTF-8 in string: \" + strconv.Quote(e.S)\n }\n \n+// A MarshalerError represents an error from calling a MarshalJSON or MarshalText method.\n type MarshalerError struct {\n \tType reflect.Type\n \tErr  error"}, {"sha": "c312c62a582157b342552196104d358218f2a536", "filename": "libgo/go/flag/flag.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fflag%2Fflag.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fflag%2Fflag.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fflag%2Fflag.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -548,6 +548,8 @@ func (f *FlagSet) PrintDefaults() {\n // the output will be\n //\t-I directory\n //\t\tsearch directory for include files.\n+//\n+// To change the destination for flag messages, call CommandLine.SetOutput.\n func PrintDefaults() {\n \tCommandLine.PrintDefaults()\n }"}, {"sha": "5656280e84dabcfb0b7f4754c91ed8fc236692c7", "filename": "libgo/go/math/big/ratconv.go", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fmath%2Fbig%2Fratconv.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fmath%2Fbig%2Fratconv.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Fbig%2Fratconv.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -38,8 +38,8 @@ func (z *Rat) Scan(s fmt.ScanState, ch rune) error {\n }\n \n // SetString sets z to the value of s and returns z and a boolean indicating\n-// success. s can be given as a fraction \"a/b\" or as a floating-point number\n-// optionally followed by an exponent. The entire string (not just a prefix)\n+// success. s can be given as a fraction \"a/b\" or as a decimal floating-point\n+// number optionally followed by an exponent. The entire string (not just a prefix)\n // must be valid for success. If the operation failed, the value of z is\n // undefined but the returned value is nil.\n func (z *Rat) SetString(s string) (*Rat, bool) {\n@@ -78,6 +78,7 @@ func (z *Rat) SetString(s string) (*Rat, bool) {\n \t}\n \n \t// mantissa\n+\t// TODO(gri) allow other bases besides 10 for mantissa and exponent? (issue #29799)\n \tvar ecorr int\n \tz.a.abs, _, ecorr, err = z.a.abs.scan(r, 10, true)\n \tif err != nil {"}, {"sha": "921f86bd92dc742e18891837544787a034e11bb3", "filename": "libgo/go/net/http/client.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Fclient.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Fclient.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fclient.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -478,10 +478,10 @@ func urlErrorOp(method string) string {\n // error.\n //\n // If the returned error is nil, the Response will contain a non-nil\n-// Body which the user is expected to close. If the Body is not\n-// closed, the Client's underlying RoundTripper (typically Transport)\n-// may not be able to re-use a persistent TCP connection to the server\n-// for a subsequent \"keep-alive\" request.\n+// Body which the user is expected to close. If the Body is not both\n+// read to EOF and closed, the Client's underlying RoundTripper\n+// (typically Transport) may not be able to re-use a persistent TCP\n+// connection to the server for a subsequent \"keep-alive\" request.\n //\n // The request Body, if non-nil, will be closed by the underlying\n // Transport, even on errors."}, {"sha": "82e13a464d7dd38cf87da22968ad31b73708381f", "filename": "libgo/go/net/http/fs_test.go", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Ffs_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Ffs_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ffs_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -583,16 +583,23 @@ func TestFileServerZeroByte(t *testing.T) {\n \tts := httptest.NewServer(FileServer(Dir(\".\")))\n \tdefer ts.Close()\n \n-\tres, err := Get(ts.URL + \"/..\\x00\")\n+\tc, err := net.Dial(\"tcp\", ts.Listener.Addr().String())\n \tif err != nil {\n \t\tt.Fatal(err)\n \t}\n-\tb, err := ioutil.ReadAll(res.Body)\n+\tdefer c.Close()\n+\t_, err = fmt.Fprintf(c, \"GET /..\\x00 HTTP/1.0\\r\\n\\r\\n\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tvar got bytes.Buffer\n+\tbufr := bufio.NewReader(io.TeeReader(c, &got))\n+\tres, err := ReadResponse(bufr, nil)\n \tif err != nil {\n-\t\tt.Fatal(\"reading Body:\", err)\n+\t\tt.Fatal(\"ReadResponse: \", err)\n \t}\n \tif res.StatusCode == 200 {\n-\t\tt.Errorf(\"got status 200; want an error. Body is:\\n%s\", string(b))\n+\t\tt.Errorf(\"got status 200; want an error. Body is:\\n%s\", got.Bytes())\n \t}\n }\n "}, {"sha": "a848d68fd9c39a461983c89fab5e03c1bc71f301", "filename": "libgo/go/net/http/h2_bundle.go", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Fh2_bundle.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Fh2_bundle.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fh2_bundle.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -4852,7 +4852,7 @@ func (sc *http2serverConn) resetStream(se http2StreamError) {\n \n // processFrameFromReader processes the serve loop's read from readFrameCh from the\n // frame-reading goroutine.\n-// processFrameFromReader reports whether the connection should be kept open.\n+// processFrameFromReader returns whether the connection should be kept open.\n func (sc *http2serverConn) processFrameFromReader(res http2readFrameResult) bool {\n \tsc.serveG.check()\n \terr := res.err\n@@ -5157,12 +5157,6 @@ func (sc *http2serverConn) processData(f *http2DataFrame) error {\n \t\t// type PROTOCOL_ERROR.\"\n \t\treturn http2ConnectionError(http2ErrCodeProtocol)\n \t}\n-\t// RFC 7540, sec 6.1: If a DATA frame is received whose stream is not in\n-\t// \"open\" or \"half-closed (local)\" state, the recipient MUST respond with a\n-\t// stream error (Section 5.4.2) of type STREAM_CLOSED.\n-\tif state == http2stateClosed {\n-\t\treturn http2streamError(id, http2ErrCodeStreamClosed)\n-\t}\n \tif st == nil || state != http2stateOpen || st.gotTrailerHeader || st.resetQueued {\n \t\t// This includes sending a RST_STREAM if the stream is\n \t\t// in stateHalfClosedLocal (which currently means that"}, {"sha": "e5d59e14120baa18eeea51f2c8ea76072124aa26", "filename": "libgo/go/net/http/http.go", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Fhttp.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Fhttp.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fhttp.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -59,6 +59,17 @@ func isASCII(s string) bool {\n \treturn true\n }\n \n+// stringContainsCTLByte reports whether s contains any ASCII control character.\n+func stringContainsCTLByte(s string) bool {\n+\tfor i := 0; i < len(s); i++ {\n+\t\tb := s[i]\n+\t\tif b < ' ' || b == 0x7f {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}\n+\n func hexEscapeNonASCII(s string) string {\n \tnewLen := 0\n \tfor i := 0; i < len(s); i++ {"}, {"sha": "dcad2b6fab366dd631a656a9957f0cc29c947474", "filename": "libgo/go/net/http/request.go", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Frequest.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Frequest.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Frequest.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -550,7 +550,12 @@ func (r *Request) write(w io.Writer, usingProxy bool, extraHeaders Header, waitF\n \t\t\truri = r.URL.Opaque\n \t\t}\n \t}\n-\t// TODO(bradfitz): escape at least newlines in ruri?\n+\tif stringContainsCTLByte(ruri) {\n+\t\treturn errors.New(\"net/http: can't write control character in Request.URL\")\n+\t}\n+\t// TODO: validate r.Method too? At least it's less likely to\n+\t// come from an attacker (more likely to be a constant in\n+\t// code).\n \n \t// Wrap the writer in a bufio Writer if it's not already buffered.\n \t// Don't always call NewWriter, as that forces a bytes.Buffer"}, {"sha": "b110b57b1ab922ec213c10311891c1a2eb6dd9ad", "filename": "libgo/go/net/http/requestwrite_test.go", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Frequestwrite_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fhttp%2Frequestwrite_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Frequestwrite_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -576,6 +576,17 @@ var reqWriteTests = []reqWriteTest{\n \t\t\t\"User-Agent: Go-http-client/1.1\\r\\n\" +\n \t\t\t\"X-Foo: X-Bar\\r\\n\\r\\n\",\n \t},\n+\n+\t25: {\n+\t\tReq: Request{\n+\t\t\tMethod: \"GET\",\n+\t\t\tURL: &url.URL{\n+\t\t\t\tHost:     \"www.example.com\",\n+\t\t\t\tRawQuery: \"new\\nline\", // or any CTL\n+\t\t\t},\n+\t\t},\n+\t\tWantError: errors.New(\"net/http: can't write control character in Request.URL\"),\n+\t},\n }\n \n func TestRequestWrite(t *testing.T) {"}, {"sha": "85bcb2b8960b20a207507fac7ed64cfd3db5fef6", "filename": "libgo/go/net/lookup_test.go", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Flookup_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Flookup_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Flookup_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -207,6 +207,9 @@ var lookupGmailTXTTests = []struct {\n }\n \n func TestLookupGmailTXT(t *testing.T) {\n+\tif runtime.GOOS == \"plan9\" {\n+\t\tt.Skip(\"skipping on plan9; see https://golang.org/issue/29722\")\n+\t}\n \tt.Parallel()\n \tmustHaveExternalNetwork(t)\n \n@@ -237,11 +240,16 @@ func TestLookupGmailTXT(t *testing.T) {\n \t\tif len(txts) == 0 {\n \t\t\tt.Error(\"got no record\")\n \t\t}\n+\t\tfound := false\n \t\tfor _, txt := range txts {\n-\t\t\tif !strings.Contains(txt, tt.txt) || (!strings.HasSuffix(txt, tt.host) && !strings.HasSuffix(txt, tt.host+\".\")) {\n-\t\t\t\tt.Errorf(\"got %s; want a record containing %s, %s\", txt, tt.txt, tt.host)\n+\t\t\tif strings.Contains(txt, tt.txt) && (strings.HasSuffix(txt, tt.host) || strings.HasSuffix(txt, tt.host+\".\")) {\n+\t\t\t\tfound = true\n+\t\t\t\tbreak\n \t\t\t}\n \t\t}\n+\t\tif !found {\n+\t\t\tt.Errorf(\"got %v; want a record containing %s, %s\", txts, tt.txt, tt.host)\n+\t\t}\n \t}\n }\n "}, {"sha": "2b5845bb1580f3f5f4fdef7d24ef45dc4c8bba5f", "filename": "libgo/go/net/net_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fnet_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Fnet_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fnet_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -529,7 +529,7 @@ func TestNotTemporaryRead(t *testing.T) {\n \tserver := func(cs *TCPConn) error {\n \t\tcs.SetLinger(0)\n \t\t// Give the client time to get stuck in a Read.\n-\t\ttime.Sleep(20 * time.Millisecond)\n+\t\ttime.Sleep(50 * time.Millisecond)\n \t\tcs.Close()\n \t\treturn nil\n \t}"}, {"sha": "64274a0a364d0c2ae3ec60bc41c1c9d3c8f3a390", "filename": "libgo/go/net/url/url.go", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Furl%2Furl.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Furl%2Furl.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Furl%2Furl.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -513,6 +513,10 @@ func parse(rawurl string, viaRequest bool) (*URL, error) {\n \tvar rest string\n \tvar err error\n \n+\tif stringContainsCTLByte(rawurl) {\n+\t\treturn nil, errors.New(\"net/url: invalid control character in URL\")\n+\t}\n+\n \tif rawurl == \"\" && viaRequest {\n \t\treturn nil, errors.New(\"empty url\")\n \t}\n@@ -1134,3 +1138,14 @@ func validUserinfo(s string) bool {\n \t}\n \treturn true\n }\n+\n+// stringContainsCTLByte reports whether s contains any ASCII control character.\n+func stringContainsCTLByte(s string) bool {\n+\tfor i := 0; i < len(s); i++ {\n+\t\tb := s[i]\n+\t\tif b < ' ' || b == 0x7f {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}"}, {"sha": "c5fc90d5156fd9f0a73b1dc3066abf9355ffddb6", "filename": "libgo/go/net/url/url_test.go", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Furl%2Furl_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fnet%2Furl%2Furl_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Furl%2Furl_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1738,12 +1738,33 @@ func TestNilUser(t *testing.T) {\n }\n \n func TestInvalidUserPassword(t *testing.T) {\n-\t_, err := Parse(\"http://us\\ner:pass\\nword@foo.com/\")\n+\t_, err := Parse(\"http://user^:passwo^rd@foo.com/\")\n \tif got, wantsub := fmt.Sprint(err), \"net/url: invalid userinfo\"; !strings.Contains(got, wantsub) {\n \t\tt.Errorf(\"error = %q; want substring %q\", got, wantsub)\n \t}\n }\n \n+func TestRejectControlCharacters(t *testing.T) {\n+\ttests := []string{\n+\t\t\"http://foo.com/?foo\\nbar\",\n+\t\t\"http\\r://foo.com/\",\n+\t\t\"http://foo\\x7f.com/\",\n+\t}\n+\tfor _, s := range tests {\n+\t\t_, err := Parse(s)\n+\t\tconst wantSub = \"net/url: invalid control character in URL\"\n+\t\tif got := fmt.Sprint(err); !strings.Contains(got, wantSub) {\n+\t\t\tt.Errorf(\"Parse(%q) error = %q; want substring %q\", s, got, wantSub)\n+\t\t}\n+\t}\n+\n+\t// But don't reject non-ASCII CTLs, at least for now:\n+\tif _, err := Parse(\"http://foo.com/ctl\\x80\"); err != nil {\n+\t\tt.Errorf(\"error parsing URL with non-ASCII control byte: %v\", err)\n+\t}\n+\n+}\n+\n var escapeBenchmarks = []struct {\n \tunescaped string\n \tquery     string"}, {"sha": "912ba5affea5c14219c78876f9051a67d871b3f5", "filename": "libgo/go/os/file_unix.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Ffile_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Ffile_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ffile_unix.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -192,6 +192,7 @@ func epipecheck(file *File, e error) {\n const DevNull = \"/dev/null\"\n \n // openFileNolog is the Unix implementation of OpenFile.\n+// Changes here should be reflected in openFdAt, if relevant.\n func openFileNolog(name string, flag int, perm FileMode) (*File, error) {\n \tsetSticky := false\n \tif !supportsCreateWithStickyBit && flag&O_CREATE != 0 && perm&ModeSticky != 0 {"}, {"sha": "104b7ceaf7dad37e58d852b954036ed9a790ba11", "filename": "libgo/go/os/path.go", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Fpath.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Fpath.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fpath.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -58,6 +58,14 @@ func MkdirAll(path string, perm FileMode) error {\n \treturn nil\n }\n \n+// RemoveAll removes path and any children it contains.\n+// It removes everything it can but returns the first error\n+// it encounters. If the path does not exist, RemoveAll\n+// returns nil (no error).\n+func RemoveAll(path string) error {\n+\treturn removeAll(path)\n+}\n+\n // endsWithDot reports whether the final component of path is \".\".\n func endsWithDot(path string) bool {\n \tif path == \".\" {"}, {"sha": "d1210ee1fde68377462d3619011b7b2279c21834", "filename": "libgo/go/os/removeall_at.go", "status": "modified", "additions": 38, "deletions": 12, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Fremoveall_at.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Fremoveall_at.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fremoveall_at.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -9,10 +9,11 @@ package os\n import (\n \t\"internal/syscall/unix\"\n \t\"io\"\n+\t\"runtime\"\n \t\"syscall\"\n )\n \n-func RemoveAll(path string) error {\n+func removeAll(path string) error {\n \tif path == \"\" {\n \t\t// fail silently to retain compatibility with previous behavior\n \t\t// of RemoveAll. See issue 28830.\n@@ -56,8 +57,13 @@ func removeAllFrom(parent *File, path string) error {\n \t\treturn nil\n \t}\n \n-\t// If not a \"is directory\" error, we have a problem\n-\tif err != syscall.EISDIR && err != syscall.EPERM {\n+\t// EISDIR means that we have a directory, and we need to\n+\t// remove its contents.\n+\t// EPERM or EACCES means that we don't have write permission on\n+\t// the parent directory, but this entry might still be a directory\n+\t// whose contents need to be removed.\n+\t// Otherwise just return the error.\n+\tif err != syscall.EISDIR && err != syscall.EPERM && err != syscall.EACCES {\n \t\treturn err\n \t}\n \n@@ -68,11 +74,11 @@ func removeAllFrom(parent *File, path string) error {\n \t\treturn statErr\n \t}\n \tif statInfo.Mode&syscall.S_IFMT != syscall.S_IFDIR {\n-\t\t// Not a directory; return the error from the Remove\n+\t\t// Not a directory; return the error from the Remove.\n \t\treturn err\n \t}\n \n-\t// Remove the directory's entries\n+\t// Remove the directory's entries.\n \tvar recurseErr error\n \tfor {\n \t\tconst request = 1024\n@@ -87,7 +93,7 @@ func removeAllFrom(parent *File, path string) error {\n \t\t}\n \n \t\tnames, readErr := file.Readdirnames(request)\n-\t\t// Errors other than EOF should stop us from continuing\n+\t\t// Errors other than EOF should stop us from continuing.\n \t\tif readErr != nil && readErr != io.EOF {\n \t\t\tfile.Close()\n \t\t\tif IsNotExist(readErr) {\n@@ -116,7 +122,7 @@ func removeAllFrom(parent *File, path string) error {\n \t\t}\n \t}\n \n-\t// Remove the directory itself\n+\t// Remove the directory itself.\n \tunlinkError := unix.Unlinkat(parentFd, path, unix.AT_REMOVEDIR)\n \tif unlinkError == nil || IsNotExist(unlinkError) {\n \t\treturn nil\n@@ -128,11 +134,31 @@ func removeAllFrom(parent *File, path string) error {\n \treturn unlinkError\n }\n \n-func openFdAt(fd int, path string) (*File, error) {\n-\tfd, err := unix.Openat(fd, path, O_RDONLY, 0)\n-\tif err != nil {\n-\t\treturn nil, err\n+// openFdAt opens path relative to the directory in fd.\n+// Other than that this should act like openFileNolog.\n+// This acts like openFileNolog rather than OpenFile because\n+// we are going to (try to) remove the file.\n+// The contents of this file are not relevant for test caching.\n+func openFdAt(dirfd int, name string) (*File, error) {\n+\tvar r int\n+\tfor {\n+\t\tvar e error\n+\t\tr, e = unix.Openat(dirfd, name, O_RDONLY, 0)\n+\t\tif e == nil {\n+\t\t\tbreak\n+\t\t}\n+\n+\t\t// See comment in openFileNolog.\n+\t\tif runtime.GOOS == \"darwin\" && e == syscall.EINTR {\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\treturn nil, &PathError{\"openat\", name, e}\n+\t}\n+\n+\tif !supportsCloseOnExec {\n+\t\tsyscall.CloseOnExec(r)\n \t}\n \n-\treturn NewFile(uintptr(fd), path), nil\n+\treturn newFile(uintptr(r), name, kindOpenFile), nil\n }"}, {"sha": "7d9f73e71239b24dd38624576eb87a3b203240c4", "filename": "libgo/go/os/removeall_noat.go", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Fremoveall_noat.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Fremoveall_noat.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fremoveall_noat.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -11,11 +11,7 @@ import (\n \t\"syscall\"\n )\n \n-// RemoveAll removes path and any children it contains.\n-// It removes everything it can but returns the first error\n-// it encounters. If the path does not exist, RemoveAll\n-// returns nil (no error).\n-func RemoveAll(path string) error {\n+func removeAll(path string) error {\n \tif path == \"\" {\n \t\t// fail silently to retain compatibility with previous behavior\n \t\t// of RemoveAll. See issue 28830."}, {"sha": "9dab0d4bb1079a8881e4a7d1437d822aed2696d2", "filename": "libgo/go/os/removeall_test.go", "status": "modified", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Fremoveall_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fos%2Fremoveall_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fremoveall_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -292,3 +292,83 @@ func TestRemoveReadOnlyDir(t *testing.T) {\n \t\tt.Error(\"subdirectory was not removed\")\n \t}\n }\n+\n+// Issue #29983.\n+func TestRemoveAllButReadOnly(t *testing.T) {\n+\tswitch runtime.GOOS {\n+\tcase \"nacl\", \"js\", \"windows\":\n+\t\tt.Skipf(\"skipping test on %s\", runtime.GOOS)\n+\t}\n+\n+\tif Getuid() == 0 {\n+\t\tt.Skip(\"skipping test when running as root\")\n+\t}\n+\n+\tt.Parallel()\n+\n+\ttempDir, err := ioutil.TempDir(\"\", \"TestRemoveAllButReadOnly-\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tdefer RemoveAll(tempDir)\n+\n+\tdirs := []string{\n+\t\t\"a\",\n+\t\t\"a/x\",\n+\t\t\"a/x/1\",\n+\t\t\"b\",\n+\t\t\"b/y\",\n+\t\t\"b/y/2\",\n+\t\t\"c\",\n+\t\t\"c/z\",\n+\t\t\"c/z/3\",\n+\t}\n+\treadonly := []string{\n+\t\t\"b\",\n+\t}\n+\tinReadonly := func(d string) bool {\n+\t\tfor _, ro := range readonly {\n+\t\t\tif d == ro {\n+\t\t\t\treturn true\n+\t\t\t}\n+\t\t\tdd, _ := filepath.Split(d)\n+\t\t\tif filepath.Clean(dd) == ro {\n+\t\t\t\treturn true\n+\t\t\t}\n+\t\t}\n+\t\treturn false\n+\t}\n+\n+\tfor _, dir := range dirs {\n+\t\tif err := Mkdir(filepath.Join(tempDir, dir), 0777); err != nil {\n+\t\t\tt.Fatal(err)\n+\t\t}\n+\t}\n+\tfor _, dir := range readonly {\n+\t\td := filepath.Join(tempDir, dir)\n+\t\tif err := Chmod(d, 0555); err != nil {\n+\t\t\tt.Fatal(err)\n+\t\t}\n+\n+\t\t// Defer changing the mode back so that the deferred\n+\t\t// RemoveAll(tempDir) can succeed.\n+\t\tdefer Chmod(d, 0777)\n+\t}\n+\n+\tif err := RemoveAll(tempDir); err == nil {\n+\t\tt.Fatal(\"RemoveAll succeeded unexpectedly\")\n+\t}\n+\n+\tfor _, dir := range dirs {\n+\t\t_, err := Stat(filepath.Join(tempDir, dir))\n+\t\tif inReadonly(dir) {\n+\t\t\tif err != nil {\n+\t\t\t\tt.Errorf(\"file %q was deleted but should still exist\", dir)\n+\t\t\t}\n+\t\t} else {\n+\t\t\tif err == nil {\n+\t\t\t\tt.Errorf(\"file %q still exists but should have been deleted\", dir)\n+\t\t\t}\n+\t\t}\n+\t}\n+}"}, {"sha": "deeb47ed7190802427b40964ab06b03f990375e4", "filename": "libgo/go/path/filepath/path_test.go", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1378,13 +1378,27 @@ func TestWalkSymlink(t *testing.T) {\n }\n \n func TestIssue29372(t *testing.T) {\n-\tf, err := ioutil.TempFile(\"\", \"issue29372\")\n+\ttmpDir, err := ioutil.TempDir(\"\", \"TestIssue29372\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tdefer os.RemoveAll(tmpDir)\n+\n+\tif runtime.GOOS == \"windows\" {\n+\t\t// This test is broken on windows, if temporary directory\n+\t\t// is a symlink. See issue 29746.\n+\t\t// TODO(brainman): Remove this hack once issue #29746 is fixed.\n+\t\ttmpDir, err = filepath.EvalSymlinks(tmpDir)\n+\t\tif err != nil {\n+\t\t\tt.Fatal(err)\n+\t\t}\n+\t}\n+\n+\tpath := filepath.Join(tmpDir, \"file.txt\")\n+\terr = ioutil.WriteFile(path, nil, 0644)\n \tif err != nil {\n \t\tt.Fatal(err)\n \t}\n-\tf.Close()\n-\tpath := f.Name()\n-\tdefer os.Remove(path)\n \n \tpathSeparator := string(filepath.Separator)\n \ttests := []string{"}, {"sha": "d2d869951c1a821d229749b3b96f00587a67ea09", "filename": "libgo/go/runtime/malloc.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fruntime%2Fmalloc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fruntime%2Fmalloc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmalloc.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -1029,7 +1029,7 @@ func mallocgc(size uintptr, typ *_type, needzero bool) unsafe.Pointer {\n \t}\n \n \tif rate := MemProfileRate; rate > 0 {\n-\t\tif size < uintptr(rate) && int32(size) < c.next_sample {\n+\t\tif rate != 1 && int32(size) < c.next_sample {\n \t\t\tc.next_sample -= int32(size)\n \t\t} else {\n \t\t\tmp := acquirem()"}, {"sha": "2332a2e40bf7bd44653e018bddea91315d13fda4", "filename": "libgo/go/runtime/mheap.go", "status": "modified", "additions": 150, "deletions": 57, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fruntime%2Fmheap.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fruntime%2Fmheap.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmheap.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -107,6 +107,14 @@ type mheap struct {\n \t// This is accessed atomically.\n \treclaimCredit uintptr\n \n+\t// scavengeCredit is spare credit for extra bytes scavenged.\n+\t// Since the scavenging mechanisms operate on spans, it may\n+\t// scavenge more than requested. Any spare pages released\n+\t// go to this credit pool.\n+\t//\n+\t// This is protected by the mheap lock.\n+\tscavengeCredit uintptr\n+\n \t// Malloc stats.\n \tlargealloc  uint64                  // bytes allocated for large objects\n \tnlargealloc uint64                  // number of large object allocations\n@@ -165,7 +173,7 @@ type mheap struct {\n \t// simply blocking GC (by disabling preemption).\n \tsweepArenas []arenaIdx\n \n-\t_ uint32 // ensure 64-bit alignment of central\n+\t// _ uint32 // ensure 64-bit alignment of central\n \n \t// central free lists for small size classes.\n \t// the padding makes sure that the mcentrals are\n@@ -419,6 +427,115 @@ func (s *mspan) physPageBounds() (uintptr, uintptr) {\n \treturn start, end\n }\n \n+func (h *mheap) coalesce(s *mspan) {\n+\t// We scavenge s at the end after coalescing if s or anything\n+\t// it merged with is marked scavenged.\n+\tneedsScavenge := false\n+\tprescavenged := s.released() // number of bytes already scavenged.\n+\n+\t// merge is a helper which merges other into s, deletes references to other\n+\t// in heap metadata, and then discards it. other must be adjacent to s.\n+\tmerge := func(other *mspan) {\n+\t\t// Adjust s via base and npages and also in heap metadata.\n+\t\ts.npages += other.npages\n+\t\ts.needzero |= other.needzero\n+\t\tif other.startAddr < s.startAddr {\n+\t\t\ts.startAddr = other.startAddr\n+\t\t\th.setSpan(s.base(), s)\n+\t\t} else {\n+\t\t\th.setSpan(s.base()+s.npages*pageSize-1, s)\n+\t\t}\n+\n+\t\t// If before or s are scavenged, then we need to scavenge the final coalesced span.\n+\t\tneedsScavenge = needsScavenge || other.scavenged || s.scavenged\n+\t\tprescavenged += other.released()\n+\n+\t\t// The size is potentially changing so the treap needs to delete adjacent nodes and\n+\t\t// insert back as a combined node.\n+\t\tif other.scavenged {\n+\t\t\th.scav.removeSpan(other)\n+\t\t} else {\n+\t\t\th.free.removeSpan(other)\n+\t\t}\n+\t\tother.state = mSpanDead\n+\t\th.spanalloc.free(unsafe.Pointer(other))\n+\t}\n+\n+\t// realign is a helper which shrinks other and grows s such that their\n+\t// boundary is on a physical page boundary.\n+\trealign := func(a, b, other *mspan) {\n+\t\t// Caller must ensure a.startAddr < b.startAddr and that either a or\n+\t\t// b is s. a and b must be adjacent. other is whichever of the two is\n+\t\t// not s.\n+\n+\t\t// If pageSize <= physPageSize then spans are always aligned\n+\t\t// to physical page boundaries, so just exit.\n+\t\tif pageSize <= physPageSize {\n+\t\t\treturn\n+\t\t}\n+\t\t// Since we're resizing other, we must remove it from the treap.\n+\t\tif other.scavenged {\n+\t\t\th.scav.removeSpan(other)\n+\t\t} else {\n+\t\t\th.free.removeSpan(other)\n+\t\t}\n+\t\t// Round boundary to the nearest physical page size, toward the\n+\t\t// scavenged span.\n+\t\tboundary := b.startAddr\n+\t\tif a.scavenged {\n+\t\t\tboundary &^= (physPageSize - 1)\n+\t\t} else {\n+\t\t\tboundary = (boundary + physPageSize - 1) &^ (physPageSize - 1)\n+\t\t}\n+\t\ta.npages = (boundary - a.startAddr) / pageSize\n+\t\tb.npages = (b.startAddr + b.npages*pageSize - boundary) / pageSize\n+\t\tb.startAddr = boundary\n+\n+\t\th.setSpan(boundary-1, a)\n+\t\th.setSpan(boundary, b)\n+\n+\t\t// Re-insert other now that it has a new size.\n+\t\tif other.scavenged {\n+\t\t\th.scav.insert(other)\n+\t\t} else {\n+\t\t\th.free.insert(other)\n+\t\t}\n+\t}\n+\n+\t// Coalesce with earlier, later spans.\n+\tif before := spanOf(s.base() - 1); before != nil && before.state == mSpanFree {\n+\t\tif s.scavenged == before.scavenged {\n+\t\t\tmerge(before)\n+\t\t} else {\n+\t\t\trealign(before, s, before)\n+\t\t}\n+\t}\n+\n+\t// Now check to see if next (greater addresses) span is free and can be coalesced.\n+\tif after := spanOf(s.base() + s.npages*pageSize); after != nil && after.state == mSpanFree {\n+\t\tif s.scavenged == after.scavenged {\n+\t\t\tmerge(after)\n+\t\t} else {\n+\t\t\trealign(s, after, after)\n+\t\t}\n+\t}\n+\n+\tif needsScavenge {\n+\t\t// When coalescing spans, some physical pages which\n+\t\t// were not returned to the OS previously because\n+\t\t// they were only partially covered by the span suddenly\n+\t\t// become available for scavenging. We want to make sure\n+\t\t// those holes are filled in, and the span is properly\n+\t\t// scavenged. Rather than trying to detect those holes\n+\t\t// directly, we collect how many bytes were already\n+\t\t// scavenged above and subtract that from heap_released\n+\t\t// before re-scavenging the entire newly-coalesced span,\n+\t\t// which will implicitly bump up heap_released.\n+\t\tmemstats.heap_released -= uint64(prescavenged)\n+\t\ts.scavenge()\n+\t}\n+}\n+\n func (s *mspan) scavenge() uintptr {\n \t// start and end must be rounded in, otherwise madvise\n \t// will round them *out* and release more memory\n@@ -1081,6 +1198,16 @@ HaveSpan:\n \t\t// heap_released since we already did so earlier.\n \t\tsysUsed(unsafe.Pointer(s.base()), s.npages<<_PageShift)\n \t\ts.scavenged = false\n+\n+\t\t// Since we allocated out of a scavenged span, we just\n+\t\t// grew the RSS. Mitigate this by scavenging enough free\n+\t\t// space to make up for it.\n+\t\t//\n+\t\t// Also, scavengeLargest may cause coalescing, so prevent\n+\t\t// coalescing with s by temporarily changing its state.\n+\t\ts.state = mSpanManual\n+\t\th.scavengeLargest(s.npages * pageSize)\n+\t\ts.state = mSpanFree\n \t}\n \ts.unusedsince = 0\n \n@@ -1215,62 +1342,8 @@ func (h *mheap) freeSpanLocked(s *mspan, acctinuse, acctidle bool, unusedsince i\n \t\ts.unusedsince = nanotime()\n \t}\n \n-\t// We scavenge s at the end after coalescing if s or anything\n-\t// it merged with is marked scavenged.\n-\tneedsScavenge := false\n-\tprescavenged := s.released() // number of bytes already scavenged.\n-\n-\t// Coalesce with earlier, later spans.\n-\tif before := spanOf(s.base() - 1); before != nil && before.state == mSpanFree {\n-\t\t// Now adjust s.\n-\t\ts.startAddr = before.startAddr\n-\t\ts.npages += before.npages\n-\t\ts.needzero |= before.needzero\n-\t\th.setSpan(before.base(), s)\n-\t\t// If before or s are scavenged, then we need to scavenge the final coalesced span.\n-\t\tneedsScavenge = needsScavenge || before.scavenged || s.scavenged\n-\t\tprescavenged += before.released()\n-\t\t// The size is potentially changing so the treap needs to delete adjacent nodes and\n-\t\t// insert back as a combined node.\n-\t\tif before.scavenged {\n-\t\t\th.scav.removeSpan(before)\n-\t\t} else {\n-\t\t\th.free.removeSpan(before)\n-\t\t}\n-\t\tbefore.state = mSpanDead\n-\t\th.spanalloc.free(unsafe.Pointer(before))\n-\t}\n-\n-\t// Now check to see if next (greater addresses) span is free and can be coalesced.\n-\tif after := spanOf(s.base() + s.npages*pageSize); after != nil && after.state == mSpanFree {\n-\t\ts.npages += after.npages\n-\t\ts.needzero |= after.needzero\n-\t\th.setSpan(s.base()+s.npages*pageSize-1, s)\n-\t\tneedsScavenge = needsScavenge || after.scavenged || s.scavenged\n-\t\tprescavenged += after.released()\n-\t\tif after.scavenged {\n-\t\t\th.scav.removeSpan(after)\n-\t\t} else {\n-\t\t\th.free.removeSpan(after)\n-\t\t}\n-\t\tafter.state = mSpanDead\n-\t\th.spanalloc.free(unsafe.Pointer(after))\n-\t}\n-\n-\tif needsScavenge {\n-\t\t// When coalescing spans, some physical pages which\n-\t\t// were not returned to the OS previously because\n-\t\t// they were only partially covered by the span suddenly\n-\t\t// become available for scavenging. We want to make sure\n-\t\t// those holes are filled in, and the span is properly\n-\t\t// scavenged. Rather than trying to detect those holes\n-\t\t// directly, we collect how many bytes were already\n-\t\t// scavenged above and subtract that from heap_released\n-\t\t// before re-scavenging the entire newly-coalesced span,\n-\t\t// which will implicitly bump up heap_released.\n-\t\tmemstats.heap_released -= uint64(prescavenged)\n-\t\ts.scavenge()\n-\t}\n+\t// Coalesce span with neighbors.\n+\th.coalesce(s)\n \n \t// Insert s into the appropriate treap.\n \tif s.scavenged {\n@@ -1284,6 +1357,14 @@ func (h *mheap) freeSpanLocked(s *mspan, acctinuse, acctidle bool, unusedsince i\n // starting from the largest span and working down. It then takes those spans\n // and places them in scav. h must be locked.\n func (h *mheap) scavengeLargest(nbytes uintptr) {\n+\t// Use up scavenge credit if there's any available.\n+\tif nbytes > h.scavengeCredit {\n+\t\tnbytes -= h.scavengeCredit\n+\t\th.scavengeCredit = 0\n+\t} else {\n+\t\th.scavengeCredit -= nbytes\n+\t\treturn\n+\t}\n \t// Iterate over the treap backwards (from largest to smallest) scavenging spans\n \t// until we've reached our quota of nbytes.\n \treleased := uintptr(0)\n@@ -1304,10 +1385,18 @@ func (h *mheap) scavengeLargest(nbytes uintptr) {\n \t\t}\n \t\tn := t.prev()\n \t\th.free.erase(t)\n+\t\t// Now that s is scavenged, we must eagerly coalesce it\n+\t\t// with its neighbors to prevent having two spans with\n+\t\t// the same scavenged state adjacent to each other.\n+\t\th.coalesce(s)\n \t\tt = n\n \t\th.scav.insert(s)\n \t\treleased += r\n \t}\n+\t// If we over-scavenged, turn that extra amount into credit.\n+\tif released > nbytes {\n+\t\th.scavengeCredit += released - nbytes\n+\t}\n }\n \n // scavengeAll visits each node in the unscav treap and scavenges the\n@@ -1323,6 +1412,10 @@ func (h *mheap) scavengeAll(now, limit uint64) uintptr {\n \t\t\tr := s.scavenge()\n \t\t\tif r != 0 {\n \t\t\t\th.free.erase(t)\n+\t\t\t\t// Now that s is scavenged, we must eagerly coalesce it\n+\t\t\t\t// with its neighbors to prevent having two spans with\n+\t\t\t\t// the same scavenged state adjacent to each other.\n+\t\t\t\th.coalesce(s)\n \t\t\t\th.scav.insert(s)\n \t\t\t\treleased += r\n \t\t\t}"}, {"sha": "7b134bc0784031ddcd0156e3135fb43ddd574f2a", "filename": "libgo/go/runtime/testdata/testprog/memprof.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprog%2Fmemprof.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprog%2Fmemprof.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Ftestdata%2Ftestprog%2Fmemprof.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -21,7 +21,10 @@ var memProfBuf bytes.Buffer\n var memProfStr string\n \n func MemProf() {\n-\tfor i := 0; i < 1000; i++ {\n+\t// Force heap sampling for determinism.\n+\truntime.MemProfileRate = 1\n+\n+\tfor i := 0; i < 10; i++ {\n \t\tfmt.Fprintf(&memProfBuf, \"%*d\\n\", i, i)\n \t}\n \tmemProfStr = memProfBuf.String()"}, {"sha": "dd5bb3762e364bff87a8baf4d809c63f5795a4dc", "filename": "libgo/go/sort/sort.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fsort%2Fsort.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fsort%2Fsort.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsort%2Fsort.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -131,7 +131,7 @@ func doPivot(data Interface, lo, hi int) (midlo, midhi int) {\n \t\tc--\n \t}\n \t// If hi-c<3 then there are duplicates (by property of median of nine).\n-\t// Let be a bit more conservative, and set border to 5.\n+\t// Let's be a bit more conservative, and set border to 5.\n \tprotect := hi-c < 5\n \tif !protect && hi-c < (hi-lo)/4 {\n \t\t// Lets test some points for equality to pivot"}, {"sha": "108b76b8049039b990860057c01048a415f3271e", "filename": "libgo/go/sync/atomic/doc.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fsync%2Fatomic%2Fdoc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Fsync%2Fatomic%2Fdoc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsync%2Fatomic%2Fdoc.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -47,7 +47,8 @@ import (\n //\n // On non-Linux ARM, the 64-bit functions use instructions unavailable before the ARMv6k core.\n //\n-// On both ARM and x86-32, it is the caller's responsibility to arrange for 64-bit\n+// On ARM, x86-32, and 32-bit MIPS,\n+// it is the caller's responsibility to arrange for 64-bit\n // alignment of 64-bit words accessed atomically. The first word in a\n // variable or in an allocated struct, array, or slice can be relied upon to be\n // 64-bit aligned."}, {"sha": "5a6d51be592f99dfad5cae94fe445715b375597f", "filename": "libgo/go/testing/sub_test.go", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Ftesting%2Fsub_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Ftesting%2Fsub_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftesting%2Fsub_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -706,6 +706,55 @@ func TestRacyOutput(t *T) {\n \t}\n }\n \n+// The late log message did not include the test name.  Issue 29388.\n+func TestLogAfterComplete(t *T) {\n+\tctx := newTestContext(1, newMatcher(regexp.MatchString, \"\", \"\"))\n+\tvar buf bytes.Buffer\n+\tt1 := &T{\n+\t\tcommon: common{\n+\t\t\t// Use a buffered channel so that tRunner can write\n+\t\t\t// to it although nothing is reading from it.\n+\t\t\tsignal: make(chan bool, 1),\n+\t\t\tw:      &buf,\n+\t\t},\n+\t\tcontext: ctx,\n+\t}\n+\n+\tc1 := make(chan bool)\n+\tc2 := make(chan string)\n+\ttRunner(t1, func(t *T) {\n+\t\tt.Run(\"TestLateLog\", func(t *T) {\n+\t\t\tgo func() {\n+\t\t\t\tdefer close(c2)\n+\t\t\t\tdefer func() {\n+\t\t\t\t\tp := recover()\n+\t\t\t\t\tif p == nil {\n+\t\t\t\t\t\tc2 <- \"subtest did not panic\"\n+\t\t\t\t\t\treturn\n+\t\t\t\t\t}\n+\t\t\t\t\ts, ok := p.(string)\n+\t\t\t\t\tif !ok {\n+\t\t\t\t\t\tc2 <- fmt.Sprintf(\"subtest panic with unexpected value %v\", p)\n+\t\t\t\t\t\treturn\n+\t\t\t\t\t}\n+\t\t\t\t\tconst want = \"Log in goroutine after TestLateLog has completed\"\n+\t\t\t\t\tif !strings.Contains(s, want) {\n+\t\t\t\t\t\tc2 <- fmt.Sprintf(\"subtest panic %q does not contain %q\", s, want)\n+\t\t\t\t\t}\n+\t\t\t\t}()\n+\n+\t\t\t\t<-c1\n+\t\t\t\tt.Log(\"log after test\")\n+\t\t\t}()\n+\t\t})\n+\t})\n+\tclose(c1)\n+\n+\tif s := <-c2; s != \"\" {\n+\t\tt.Error(s)\n+\t}\n+}\n+\n func TestBenchmark(t *T) {\n \tres := Benchmark(func(b *B) {\n \t\tfor i := 0; i < 5; i++ {"}, {"sha": "3068630e8a97685c686ca988913d58d9693ec308", "filename": "libgo/go/testing/testing.go", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Ftesting%2Ftesting.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fgo%2Ftesting%2Ftesting.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftesting%2Ftesting.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -618,17 +618,20 @@ func (c *common) log(s string) {\n func (c *common) logDepth(s string, depth int) {\n \tc.mu.Lock()\n \tdefer c.mu.Unlock()\n-\t// If this test has already finished try and log this message with our parent\n-\t// with this test name tagged so we know where it came from.\n-\t// If we don't have a parent panic.\n-\tif c.done {\n-\t\tif c.parent != nil {\n-\t\t\tc.parent.logDepth(s, depth+1)\n-\t\t} else {\n-\t\t\tpanic(\"Log in goroutine after \" + c.name + \" has completed\")\n-\t\t}\n-\t} else {\n+\tif !c.done {\n \t\tc.output = append(c.output, c.decorate(s, depth+1)...)\n+\t} else {\n+\t\t// This test has already finished. Try and log this message\n+\t\t// with our parent. If we don't have a parent, panic.\n+\t\tfor parent := c.parent; parent != nil; parent = parent.parent {\n+\t\t\tparent.mu.Lock()\n+\t\t\tdefer parent.mu.Unlock()\n+\t\t\tif !parent.done {\n+\t\t\t\tparent.output = append(parent.output, parent.decorate(s, depth+1)...)\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t}\n+\t\tpanic(\"Log in goroutine after \" + c.name + \" has completed\")\n \t}\n }\n "}, {"sha": "2cb93d9c2eb283555bbe486a65d177e021e9e0c0", "filename": "libgo/misc/cgo/test/cgo_test.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fmisc%2Fcgo%2Ftest%2Fcgo_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fmisc%2Fcgo%2Ftest%2Fcgo_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmisc%2Fcgo%2Ftest%2Fcgo_test.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -94,6 +94,7 @@ func Test26066(t *testing.T)                 { test26066(t) }\n func Test26213(t *testing.T)                 { test26213(t) }\n func Test27660(t *testing.T)                 { test27660(t) }\n func Test28896(t *testing.T)                 { test28896(t) }\n+func Test30065(t *testing.T)                 { test30065(t) }\n \n func BenchmarkCgoCall(b *testing.B)  { benchCgoCall(b) }\n func BenchmarkGoString(b *testing.B) { benchGoString(b) }"}, {"sha": "8229b3bcf08d4a5817c1d1c50a97e68ca20608c7", "filename": "libgo/misc/cgo/test/issue29748.go", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue29748.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue29748.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue29748.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Error handling a struct initializer that requires pointer checking.\n+// Compilation test only, nothing to run.\n+\n+package cgotest\n+\n+// typedef struct { char **p; } S29748;\n+// static int f29748(S29748 *p) { return 0; }\n+import \"C\"\n+\n+var Vissue29748 = C.f29748(&C.S29748{\n+\tnil,\n+})\n+\n+func Fissue299748() {\n+\tC.f29748(&C.S29748{\n+\t\tnil,\n+\t})\n+}"}, {"sha": "0fd8c08b8eb0e41850018005e8deeb813406b4a5", "filename": "libgo/misc/cgo/test/issue29781.go", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue29781.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue29781.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue29781.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Error with newline inserted into constant expression.\n+// Compilation test only, nothing to run.\n+\n+package cgotest\n+\n+// static void issue29781F(char **p, int n) {}\n+// #define ISSUE29781C 0\n+import \"C\"\n+\n+func issue29781G() {\n+\tvar p *C.char\n+\tC.issue29781F(&p, C.ISSUE29781C+1)\n+}"}, {"sha": "396d437f7ab3e6bf1359148c9c6ff17de585bf9f", "filename": "libgo/misc/cgo/test/issue30065.go", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue30065.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99e20ba51d5b0785c7e98244d2901853d9fb3b41/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue30065.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fmisc%2Fcgo%2Ftest%2Fissue30065.go?ref=99e20ba51d5b0785c7e98244d2901853d9fb3b41", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2019 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Don't make a private copy of an array when taking the address of an\n+// element.\n+\n+package cgotest\n+\n+// #include <string.h>\n+import \"C\"\n+\n+import (\n+\t\"testing\"\n+\t\"unsafe\"\n+)\n+\n+func test30065(t *testing.T) {\n+\tvar a [256]byte\n+\tb := []byte(\"a\")\n+\tC.memcpy(unsafe.Pointer(&a), unsafe.Pointer(&b[0]), 1)\n+\tif a[0] != 'a' {\n+\t\tt.Errorf(\"&a failed: got %c, want %c\", a[0], 'a')\n+\t}\n+\n+\tb = []byte(\"b\")\n+\tC.memcpy(unsafe.Pointer(&a[0]), unsafe.Pointer(&b[0]), 1)\n+\tif a[0] != 'b' {\n+\t\tt.Errorf(\"&a[0] failed: got %c, want %c\", a[0], 'b')\n+\t}\n+\n+\td := make([]byte, 256)\n+\tb = []byte(\"c\")\n+\tC.memcpy(unsafe.Pointer(&d[0]), unsafe.Pointer(&b[0]), 1)\n+\tif d[0] != 'c' {\n+\t\tt.Errorf(\"&d[0] failed: got %c, want %c\", d[0], 'c')\n+\t}\n+}"}]}