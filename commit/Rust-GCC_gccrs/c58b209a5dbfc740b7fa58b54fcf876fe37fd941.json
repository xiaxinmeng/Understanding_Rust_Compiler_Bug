{"sha": "c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzU4YjIwOWE1ZGJmYzc0MGI3ZmE1OGI1NGZjZjg3NmZlMzdmZDk0MQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.co.uk", "date": "2003-01-01T12:27:02Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2003-01-01T12:27:02Z"}, "message": "c-pragma.c (c_register_pragma): New.\n\n\t* c-pragma.c (c_register_pragma): New.\n\t(init_pragma): Use it.\n\t* c-pragma.h (cpp_register_pragma): Don't declare.\n\t(c_register_pragma): New.\n\t* cpplib.h: Remove #ifdef GCC_C_PRAGMA_H.\n\t* config/darwin.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/arm/arm.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/c4x/c4x.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/h8300/h8300.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/i370/i370.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/i960/i960.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/ia64/hpux.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/rs6000/rs6000.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/sh/sh.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* config/v850/v850.h (REGISTER_TARGET_PRAGMAS): Update.\n\t* doc/tm.texi (REGISTER_TARGET_PRAGMAS): Update\ncp:\n\t* lex.c: Remove superfluous include of cpplib.h.\n\t(CONSTRAINT): Define without conditions.\n\t(init_cp_pragma): Use c_register_pragma.\n\nFrom-SVN: r60740", "tree": {"sha": "084056090b17ca08c6d590d93ec42d45ceee9b53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/084056090b17ca08c6d590d93ec42d45ceee9b53"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/comments", "author": {"login": "neilb-xx", "id": 160762, "node_id": "MDQ6VXNlcjE2MDc2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/160762?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neilb-xx", "html_url": "https://github.com/neilb-xx", "followers_url": "https://api.github.com/users/neilb-xx/followers", "following_url": "https://api.github.com/users/neilb-xx/following{/other_user}", "gists_url": "https://api.github.com/users/neilb-xx/gists{/gist_id}", "starred_url": "https://api.github.com/users/neilb-xx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neilb-xx/subscriptions", "organizations_url": "https://api.github.com/users/neilb-xx/orgs", "repos_url": "https://api.github.com/users/neilb-xx/repos", "events_url": "https://api.github.com/users/neilb-xx/events{/privacy}", "received_events_url": "https://api.github.com/users/neilb-xx/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7347c2c511c96c1300b8eaa1570107f4a5251016", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7347c2c511c96c1300b8eaa1570107f4a5251016", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7347c2c511c96c1300b8eaa1570107f4a5251016"}], "stats": {"total": 235, "additions": 124, "deletions": 111}, "files": [{"sha": "b441b7877a6cea621a2cdb6666a1cdd01bd0f46d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,3 +1,22 @@\n+2003-01-01  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* c-pragma.c (c_register_pragma): New.\n+\t(init_pragma): Use it.\n+\t* c-pragma.h (cpp_register_pragma): Don't declare.\n+\t(c_register_pragma): New.\n+\t* cpplib.h: Remove #ifdef GCC_C_PRAGMA_H.\n+\t* config/darwin.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/arm/arm.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/c4x/c4x.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/h8300/h8300.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/i370/i370.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/i960/i960.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/ia64/hpux.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/rs6000/rs6000.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/sh/sh.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* config/v850/v850.h (REGISTER_TARGET_PRAGMAS): Update.\n+\t* doc/tm.texi (REGISTER_TARGET_PRAGMAS): Update\n+\n 2002-12-31  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300-protos.h: Update the prototypes."}, {"sha": "d489cdca0da9279e36635b1846dc4d2e4cc4d1d8", "filename": "gcc/c-pragma.c", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.c?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,5 +1,5 @@\n /* Handle #pragma, system V.4 style.  Supports #pragma weak and #pragma pack.\n-   Copyright (C) 1992, 1997, 1998, 1999, 2000, 2001, 2002\n+   Copyright (C) 1992, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -483,26 +483,36 @@ maybe_apply_renaming_pragma (decl, asmname)\n   return asmname;\n }\n \n+/* Front-end wrapper for pragma registration to avoid dragging\n+   cpplib.h in almost everywhere.  */\n+void\n+c_register_pragma (space, name, handler)\n+     const char *space;\n+     const char *name;\n+     void (*handler) PARAMS ((struct cpp_reader *));\n+{\n+  cpp_register_pragma (parse_in, space, name, handler);\n+}\n+\n+/* Set up front-end pragmas.  */\n void\n init_pragma ()\n {\n #ifdef HANDLE_PRAGMA_PACK\n-  cpp_register_pragma (parse_in, 0, \"pack\", handle_pragma_pack);\n+  c_register_pragma (0, \"pack\", handle_pragma_pack);\n #endif\n #ifdef HANDLE_PRAGMA_WEAK\n-  cpp_register_pragma (parse_in, 0, \"weak\", handle_pragma_weak);\n+  c_register_pragma (0, \"weak\", handle_pragma_weak);\n #endif\n #ifdef HANDLE_PRAGMA_REDEFINE_EXTNAME\n-  cpp_register_pragma (parse_in, 0, \"redefine_extname\",\n-\t\t       handle_pragma_redefine_extname);\n+  c_register_pragma (0, \"redefine_extname\", handle_pragma_redefine_extname);\n #endif\n #ifdef HANDLE_PRAGMA_EXTERN_PREFIX\n-  cpp_register_pragma (parse_in, 0, \"extern_prefix\",\n-\t\t       handle_pragma_extern_prefix);\n+  c_register_pragma (0, \"extern_prefix\", handle_pragma_extern_prefix);\n #endif\n \n #ifdef REGISTER_TARGET_PRAGMAS\n-  REGISTER_TARGET_PRAGMAS (parse_in);\n+  REGISTER_TARGET_PRAGMAS ();\n #endif\n }\n "}, {"sha": "d90be3d6d2264b1762531a73e5e2712903e1aa99", "filename": "gcc/c-pragma.h", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fc-pragma.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fc-pragma.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pragma.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,5 +1,5 @@\n /* Pragma related interfaces.\n-   Copyright (C) 1995, 1998, 1999, 2000, 2001, 2002\n+   Copyright (C) 1995, 1998, 1999, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -50,16 +50,11 @@ extern struct cpp_reader* parse_in;\n \n extern void init_pragma PARAMS ((void));\n \n-/* Duplicate prototypes for the register_pragma stuff and the typedef for\n-   cpp_reader, to avoid dragging cpplib.h in almost everywhere...  */\n-#ifndef GCC_CPPLIB_H\n-typedef struct cpp_reader cpp_reader;\n-\n-extern void cpp_register_pragma PARAMS ((cpp_reader *,\n-\t\t\t\t\t const char *, const char *,\n-\t\t\t\t\t void (*) PARAMS ((cpp_reader *))));\n-#endif\n-\n+/* Front-end wrapper for pragma registration to avoid dragging\n+   cpplib.h in almost everywhere.  */\n+extern void c_register_pragma\n+\tPARAMS ((const char *, const char *,\n+\t\t void (*) PARAMS ((struct cpp_reader *))));\n extern void maybe_apply_pragma_weak PARAMS ((tree));\n extern tree maybe_apply_renaming_pragma PARAMS ((tree, tree));\n extern void add_to_renaming_pragma_list PARAMS ((tree, tree));"}, {"sha": "03396412b8cbecab35c35babe2368323e7a6589f", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for ARM.\n    Copyright (C) 1991, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-   2001, 2002 Free Software Foundation, Inc.\n+   2001, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Pieter `Tiggr' Schoenmakers (rcpieter@win.tue.nl)\n    and Martin Simmons (@harleqn.co.uk).\n    More major hacks by Richard Earnshaw (rearnsha@arm.com)\n@@ -2438,10 +2438,10 @@ extern const char * arm_pic_register_string;\n extern int making_const_table;\n \f\n /* Handle pragmas for compatibility with Intel's compilers.  */\n-#define REGISTER_TARGET_PRAGMAS(PFILE) do { \\\n-  cpp_register_pragma (PFILE, 0, \"long_calls\", arm_pr_long_calls); \\\n-  cpp_register_pragma (PFILE, 0, \"no_long_calls\", arm_pr_no_long_calls); \\\n-  cpp_register_pragma (PFILE, 0, \"long_calls_off\", arm_pr_long_calls_off); \\\n+#define REGISTER_TARGET_PRAGMAS() do {\t\t\t\t\t\\\n+  c_register_pragma (0, \"long_calls\", arm_pr_long_calls);\t\t\\\n+  c_register_pragma (0, \"no_long_calls\", arm_pr_no_long_calls);\t\t\\\n+  c_register_pragma (0, \"long_calls_off\", arm_pr_long_calls_off);\t\\\n } while (0)\n \n /* Condition code information. */"}, {"sha": "e0733744e92f60171a70e6f20e4e140d3bedad02", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  TMS320C[34]x\n-   Copyright (C) 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+   2003 Free Software Foundation, Inc.\n \n    Contributed by Michael Hayes (m.hayes@elec.canterbury.ac.nz)\n               and Herman Ten Brugge (Haj.Ten.Brugge@net.HCC.nl).\n@@ -1837,18 +1837,17 @@ do {\t\t\t\t\t\t\\\n #define PRINT_OPERAND_ADDRESS(FILE, X) c4x_print_operand_address(FILE, X)\n \n /* C4x specific pragmas.  */\n-#define REGISTER_TARGET_PRAGMAS(PFILE) do {\t\t\t\t\\\n-  cpp_register_pragma (PFILE, 0, \"CODE_SECTION\", c4x_pr_CODE_SECTION);\t\\\n-  cpp_register_pragma (PFILE, 0, \"DATA_SECTION\", c4x_pr_DATA_SECTION);\t\\\n-  cpp_register_pragma (PFILE, 0, \"FUNC_CANNOT_INLINE\", c4x_pr_ignored);\t\\\n-  cpp_register_pragma (PFILE, 0, \"FUNC_EXT_CALLED\", c4x_pr_ignored);\t\\\n-  cpp_register_pragma (PFILE, 0, \"FUNC_IS_PURE\", c4x_pr_FUNC_IS_PURE);\t\\\n-  cpp_register_pragma (PFILE, 0, \"FUNC_IS_SYSTEM\", c4x_pr_ignored);\t\\\n-  cpp_register_pragma (PFILE, 0, \"FUNC_NEVER_RETURNS\",\t\t\t\\\n-\t\t       c4x_pr_FUNC_NEVER_RETURNS);\t\t\t\\\n-  cpp_register_pragma (PFILE, 0, \"FUNC_NO_GLOBAL_ASG\", c4x_pr_ignored);\t\\\n-  cpp_register_pragma (PFILE, 0, \"FUNC_NO_IND_ASG\", c4x_pr_ignored);\t\\\n-  cpp_register_pragma (PFILE, 0, \"INTERRUPT\", c4x_pr_INTERRUPT);\t\\\n+#define REGISTER_TARGET_PRAGMAS() do {\t\t\t\t\t  \\\n+  c_register_pragma (0, \"CODE_SECTION\", c4x_pr_CODE_SECTION);\t\t  \\\n+  c_register_pragma (0, \"DATA_SECTION\", c4x_pr_DATA_SECTION);\t\t  \\\n+  c_register_pragma (0, \"FUNC_CANNOT_INLINE\", c4x_pr_ignored);\t\t  \\\n+  c_register_pragma (0, \"FUNC_EXT_CALLED\", c4x_pr_ignored);\t\t  \\\n+  c_register_pragma (0, \"FUNC_IS_PURE\", c4x_pr_FUNC_IS_PURE);\t\t  \\\n+  c_register_pragma (0, \"FUNC_IS_SYSTEM\", c4x_pr_ignored);\t\t  \\\n+  c_register_pragma (0, \"FUNC_NEVER_RETURNS\", c4x_pr_FUNC_NEVER_RETURNS); \\\n+  c_register_pragma (0, \"FUNC_NO_GLOBAL_ASG\", c4x_pr_ignored);\t\t  \\\n+  c_register_pragma (0, \"FUNC_NO_IND_ASG\", c4x_pr_ignored);\t\t  \\\n+  c_register_pragma (0, \"INTERRUPT\", c4x_pr_INTERRUPT);\t\t\t  \\\n } while (0)\n \n /* Assembler Commands for Alignment.  */"}, {"sha": "020bc1f3b93f980f4887a22889be2deaeee0c5fc", "filename": "gcc/config/darwin.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdarwin.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for Darwin (Mac OS X) systems.\n-   Copyright (C) 1989, 1990, 1991, 1992, 1993, 2000, 2001, 2002\n+   Copyright (C) 1989, 1990, 1991, 1992, 1993, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n    Contributed by Apple Computer Inc.\n \n@@ -793,12 +793,12 @@ enum machopic_addr_class {\n \n #define TARGET_TERMINATE_DW2_EH_FRAME_INFO false\n \n-#define DARWIN_REGISTER_TARGET_PRAGMAS(PFILE)\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\t\\\n-    cpp_register_pragma (PFILE, 0, \"mark\", darwin_pragma_ignore);\t\\\n-    cpp_register_pragma (PFILE, 0, \"options\", darwin_pragma_options);\t\\\n-    cpp_register_pragma (PFILE, 0, \"segment\", darwin_pragma_ignore);\t\\\n-    cpp_register_pragma (PFILE, 0, \"unused\", darwin_pragma_unused);\t\\\n+#define DARWIN_REGISTER_TARGET_PRAGMAS()\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\\\n+    c_register_pragma (0, \"mark\", darwin_pragma_ignore);\t\\\n+    c_register_pragma (0, \"options\", darwin_pragma_options);\t\\\n+    c_register_pragma (0, \"segment\", darwin_pragma_ignore);\t\\\n+    c_register_pragma (0, \"unused\", darwin_pragma_unused);\t\\\n   } while (0)\n \n #undef ASM_APP_ON"}, {"sha": "07a011f0cac2aba43e62bba80b69fea646a22890", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,7 +1,7 @@\n /* Definitions of target machine for GNU compiler.\n    Hitachi H8/300 version generating coff\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002 Free Software Foundation, Inc.\n+   2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com),\n    Jim Wilson (wilson@cygnus.com), and Doug Evans (dje@cygnus.com).\n \n@@ -1257,12 +1257,12 @@ struct cum_arg\n #define PRINT_OPERAND_ADDRESS(FILE, ADDR) print_operand_address (FILE, ADDR)\n \n /* H8300 specific pragmas.  */\n-#define REGISTER_TARGET_PRAGMAS(PFILE)\t\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\t\\\n-      cpp_register_pragma (PFILE, 0, \"saveall\", h8300_pr_saveall);\t\\\n-      cpp_register_pragma (PFILE, 0, \"interrupt\", h8300_pr_interrupt);\t\\\n-    }\t\t\t\t\t\t\t\t\t\\\n+#define REGISTER_TARGET_PRAGMAS()\t\t\t\t\\\n+  do\t\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      c_register_pragma (0, \"saveall\", h8300_pr_saveall);\t\\\n+      c_register_pragma (0, \"interrupt\", h8300_pr_interrupt);\t\\\n+    }\t\t\t\t\t\t\t\t\\\n   while (0)\n \n #define FINAL_PRESCAN_INSN(insn, operand, nop)\t\\"}, {"sha": "201174267406ede8125339f3398330ba578b4c23", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.  System/370 version.\n-   Copyright (C) 1989, 1993, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1989, 1993, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+   2003 Free Software Foundation, Inc.\n    Contributed by Jan Stein (jan@cd.chalmers.se).\n    Modified for OS/390 LanguageEnvironment C by Dave Pitts (dpitts@cozx.com)\n    Hacked for Linux-ELF/390 by Linas Vepstas (linas@linas.org)\n@@ -150,8 +150,7 @@ extern int mvs_function_name_length;\n \n #ifdef TARGET_HLASM\n /* HLASM requires #pragma map.  */\n-#define REGISTER_TARGET_PRAGMAS(PFILE) \\\n-  cpp_register_pragma (PFILE, 0, \"map\", i370_pr_map)\n+#define REGISTER_TARGET_PRAGMAS() c_register_pragma (0, \"map\", i370_pr_map)\n #endif /* TARGET_HLASM */\n \n /* Define maximum length of page minus page escape overhead.  */"}, {"sha": "3b84d048dd8faca47488c07d5cf28c3296018890", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -130,9 +130,9 @@ Boston, MA 02111-1307, USA.  */\n extern int i960_maxbitalignment;\n extern int i960_last_maxbitalignment;\n \n-#define REGISTER_TARGET_PRAGMAS(PFILE) do {\t\t\t\\\n-  cpp_register_pragma (PFILE, 0, \"align\", i960_pr_align);\t\\\n-  cpp_register_pragma (PFILE, 0, \"noalign\", i960_pr_noalign);\t\\\n+#define REGISTER_TARGET_PRAGMAS() do {\t\t\t\\\n+  c_register_pragma (0, \"align\", i960_pr_align);\t\\\n+  c_register_pragma (0, \"noalign\", i960_pr_noalign);\t\\\n } while (0)\n \n /* Run-time compilation parameters selecting different hardware subsets.  */"}, {"sha": "d11d8ecf7b96f9e8aac3b733f007476bf30e9ec4", "filename": "gcc/config/ia64/hpux.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine GNU compiler.  IA-64 version.\n-   Copyright (C) 1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Steve Ellcey <sje@cup.hp.com> and\n                   Reva Cuthbertson <reva@cup.hp.com>\n \n@@ -130,8 +130,8 @@ do {\t\t\t\t\t\t\t\t\\\n #undef PAD_VARARGS_DOWN\n #define PAD_VARARGS_DOWN (!AGGREGATE_TYPE_P (type))\n \n-#define REGISTER_TARGET_PRAGMAS(PFILE) \\\n-  cpp_register_pragma (PFILE, 0, \"builtin\", ia64_hpux_handle_builtin_pragma)\n+#define REGISTER_TARGET_PRAGMAS() \\\n+  c_register_pragma (0, \"builtin\", ia64_hpux_handle_builtin_pragma)\n \n /* Tell ia64.c that we are using the HP linker and we should delay output of\n    function extern declarations so that we don't output them for functions"}, {"sha": "b5876bd49fa2bb2ffbca5accf4d363c298f0428d", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler, for IBM RS/6000.\n    Copyright (C) 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002 Free Software Foundation, Inc.\n+   2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n    Contributed by Richard Kenner (kenner@vlsi1.ultra.nyu.edu)\n \n This file is part of GNU CC.\n@@ -460,8 +460,8 @@ extern int rs6000_default_long_calls;\n #define CAN_DEBUG_WITHOUT_FP\n \n /* Target pragma.  */\n-#define REGISTER_TARGET_PRAGMAS(PFILE) do { \\\n-  cpp_register_pragma (PFILE, 0, \"longcall\", rs6000_pragma_longcall); \\\n+#define REGISTER_TARGET_PRAGMAS() do {\t\t\t\t\\\n+  c_register_pragma (0, \"longcall\", rs6000_pragma_longcall);\t\\\n } while (0)\n \n /* Target #defines.  */"}, {"sha": "474fa734847727f02393422ca56dcb54ef83d731", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler for Hitachi / SuperH SH.\n-   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n+   2003 Free Software Foundation, Inc.\n    Contributed by Steve Chamberlain (sac@cygnus.com).\n    Improved by Jim Wilson (wilson@cygnus.com).\n \n@@ -3165,10 +3165,10 @@ extern enum mdep_reorg_phase_e mdep_reorg_phase;\n #define TARGET_MEM_FUNCTIONS\n \n /* Handle Hitachi compiler's pragmas.  */\n-#define REGISTER_TARGET_PRAGMAS(PFILE) do {\t\t\t\t    \\\n-  cpp_register_pragma (PFILE, 0, \"interrupt\", sh_pr_interrupt);\t\t    \\\n-  cpp_register_pragma (PFILE, 0, \"trapa\", sh_pr_trapa);\t\t\t    \\\n-  cpp_register_pragma (PFILE, 0, \"nosave_low_regs\", sh_pr_nosave_low_regs); \\\n+#define REGISTER_TARGET_PRAGMAS() do {\t\t\t\t\t\\\n+  c_register_pragma (0, \"interrupt\", sh_pr_interrupt);\t\t\t\\\n+  c_register_pragma (0, \"trapa\", sh_pr_trapa);\t\t\t\t\\\n+  c_register_pragma (0, \"nosave_low_regs\", sh_pr_nosave_low_regs);\t\\\n } while (0)\n \n /* Set when processing a function with pragma interrupt turned on.  */"}, {"sha": "29c992176d1238286af071e770a37281266477da", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler. NEC V850 series\n-   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002\n+   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n    Contributed by Jeff Law (law@cygnus.com).\n \n@@ -1413,15 +1413,15 @@ zbss_section ()\t\t\t\t\t\t\t\t\\\n #define FUNCTION_MODE QImode\n \n /* Tell compiler we want to support GHS pragmas */\n-#define REGISTER_TARGET_PRAGMAS(PFILE) do {\t\t\t\t  \\\n-  cpp_register_pragma (PFILE, \"ghs\", \"interrupt\", ghs_pragma_interrupt);  \\\n-  cpp_register_pragma (PFILE, \"ghs\", \"section\",   ghs_pragma_section);    \\\n-  cpp_register_pragma (PFILE, \"ghs\", \"starttda\",  ghs_pragma_starttda);   \\\n-  cpp_register_pragma (PFILE, \"ghs\", \"startsda\",  ghs_pragma_startsda);   \\\n-  cpp_register_pragma (PFILE, \"ghs\", \"startzda\",  ghs_pragma_startzda);   \\\n-  cpp_register_pragma (PFILE, \"ghs\", \"endtda\",    ghs_pragma_endtda);\t  \\\n-  cpp_register_pragma (PFILE, \"ghs\", \"endsda\",    ghs_pragma_endsda);\t  \\\n-  cpp_register_pragma (PFILE, \"ghs\", \"endzda\",    ghs_pragma_endzda);\t  \\\n+#define REGISTER_TARGET_PRAGMAS() do {\t\t\t\t\\\n+  c_register_pragma (\"ghs\", \"interrupt\", ghs_pragma_interrupt);\t\\\n+  c_register_pragma (\"ghs\", \"section\",   ghs_pragma_section);\t\\\n+  c_register_pragma (\"ghs\", \"starttda\",  ghs_pragma_starttda);\t\\\n+  c_register_pragma (\"ghs\", \"startsda\",  ghs_pragma_startsda);\t\\\n+  c_register_pragma (\"ghs\", \"startzda\",  ghs_pragma_startzda);\t\\\n+  c_register_pragma (\"ghs\", \"endtda\",    ghs_pragma_endtda);\t\\\n+  c_register_pragma (\"ghs\", \"endsda\",    ghs_pragma_endsda);\t\\\n+  c_register_pragma (\"ghs\", \"endzda\",    ghs_pragma_endzda);\t\\\n } while (0)\n \n /* enum GHS_SECTION_KIND is an enumeration of the kinds of sections that"}, {"sha": "f5b3fd267878d279227052b20c6915178939bfd0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,3 +1,9 @@\n+2003-01-01  Neil Booth  <neil@daikokuya.co.uk>\n+\n+\t* lex.c: Remove superfluous include of cpplib.h.\n+\t(CONSTRAINT): Define without conditions.\n+\t(init_cp_pragma): Use c_register_pragma.\n+\n 2002-12-31  Neil Booth  <neil@daikokuya.co.uk>\n \n \t* .cvsignore: Remove."}, {"sha": "29753992b54551d47078f2bff5858805b3f0971a", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 8, "deletions": 19, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,6 +1,6 @@\n /* Separate lexical analyzer for GNU C++.\n    Copyright (C) 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n-   1999, 2000, 2001, 2002 Free Software Foundation, Inc.\n+   1999, 2000, 2001, 2002, 2003 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GCC.\n@@ -61,13 +61,7 @@ static void init_operators PARAMS ((void));\n static void copy_lang_type PARAMS ((tree));\n \n /* A constraint that can be tested at compile time.  */\n-#ifdef __STDC__\n #define CONSTRAINT(name, expr) extern int constraint_##name [(expr) ? 1 : -1]\n-#else\n-#define CONSTRAINT(name, expr) extern int constraint_/**/name [(expr) ? 1 : -1]\n-#endif\n-\n-#include \"cpplib.h\"\n \n /* Functions and data structures for #pragma interface.\n \n@@ -403,18 +397,13 @@ init_reswords ()\n static void\n init_cp_pragma ()\n {\n-  cpp_register_pragma (parse_in, 0, \"vtable\", handle_pragma_vtable);\n-  cpp_register_pragma (parse_in, 0, \"unit\", handle_pragma_unit);\n-\n-  cpp_register_pragma (parse_in, 0, \"interface\", handle_pragma_interface);\n-  cpp_register_pragma (parse_in, 0, \"implementation\",\n-\t\t       handle_pragma_implementation);\n-\n-  cpp_register_pragma (parse_in, \"GCC\", \"interface\", handle_pragma_interface);\n-  cpp_register_pragma (parse_in, \"GCC\", \"implementation\",\n-\t\t       handle_pragma_implementation);\n-  cpp_register_pragma (parse_in, \"GCC\", \"java_exceptions\",\n-\t\t       handle_pragma_java_exceptions);\n+  c_register_pragma (0, \"vtable\", handle_pragma_vtable);\n+  c_register_pragma (0, \"unit\", handle_pragma_unit);\n+  c_register_pragma (0, \"interface\", handle_pragma_interface);\n+  c_register_pragma (0, \"implementation\", handle_pragma_implementation);\n+  c_register_pragma (\"GCC\", \"interface\", handle_pragma_interface);\n+  c_register_pragma (\"GCC\", \"implementation\", handle_pragma_implementation);\n+  c_register_pragma (\"GCC\", \"java_exceptions\", handle_pragma_java_exceptions);\n }\n \n /* Initialize the C++ front end.  This function is very sensitive to"}, {"sha": "271a75531e9252c9b5c51159269c19cc0e0a50b1", "filename": "gcc/cpplib.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.h?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for CPP library.\n-   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002\n+   Copyright (C) 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003\n    Free Software Foundation, Inc.\n    Written by Per Bothner, 1994-95.\n \n@@ -31,10 +31,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n extern \"C\" {\n #endif\n \n-/* For complex reasons, cpp_reader is also typedefed in c-pragma.h.  */\n-#ifndef GCC_C_PRAGMA_H\n typedef struct cpp_reader cpp_reader;\n-#endif\n typedef struct cpp_buffer cpp_buffer;\n typedef struct cpp_options cpp_options;\n typedef struct cpp_token cpp_token;"}, {"sha": "76160f035e68ae8c58a5d466f3b9cf150f5c7c8a", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c58b209a5dbfc740b7fa58b54fcf876fe37fd941/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=c58b209a5dbfc740b7fa58b54fcf876fe37fd941", "patch": "@@ -1,5 +1,5 @@\n-@c Copyright (C) 1988,1989,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002\n-@c Free Software Foundation, Inc.\n+@c Copyright (C) 1988,1989,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,\n+@c 2002, 2003 Free Software Foundation, Inc.\n @c This is part of the GCC manual.\n @c For copying conditions, see the file gcc.texi.\n \n@@ -8785,11 +8785,10 @@ This macro is no longer supported.  You must use\n @findex REGISTER_TARGET_PRAGMAS\n @findex #pragma\n @findex pragma\n-@item REGISTER_TARGET_PRAGMAS (@var{pfile})\n+@item REGISTER_TARGET_PRAGMAS ()\n Define this macro if you want to implement any target-specific pragmas.\n If defined, it is a C expression which makes a series of calls to\n-@code{cpp_register_pragma} for each pragma, with @var{pfile} passed as\n-the first argument to to these functions.  The macro may also do any\n+@code{c_register_pragma} for each pragma.  The macro may also do any\n setup required for the pragmas.\n \n The primary reason to define this macro is to provide compatibility with\n@@ -8803,9 +8802,9 @@ Preprocessor macros that appear on pragma lines are not expanded.  All\n @samp{#pragma} directives that do not match any registered pragma are\n silently ignored, unless the user specifies @option{-Wunknown-pragmas}.\n \n-@deftypefun void cpp_register_pragma (cpp_reader *@var{pfile}, const char *@var{space}, const char *@var{name}, void (*@var{callback}) (cpp_reader *))\n+@deftypefun void c_register_pragma (const char *@var{space}, const char *@var{name}, void (*@var{callback}) (struct cpp_reader *))\n \n-Each call to @code{cpp_register_pragma} establishes one pragma.  The\n+Each call to @code{c_register_pragma} establishes one pragma.  The\n @var{callback} routine will be called when the preprocessor encounters a\n pragma of the form\n "}]}