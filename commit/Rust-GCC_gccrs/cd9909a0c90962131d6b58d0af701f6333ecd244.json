{"sha": "cd9909a0c90962131d6b58d0af701f6333ecd244", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q5OTA5YTBjOTA5NjIxMzFkNmI1OGQwYWY3MDFmNjMzM2VjZDI0NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T14:34:26Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-10T14:34:26Z"}, "message": "[multiple changes]\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* frontend.adb: Minor reformatting.\n\n2010-09-10  Robert Dewar  <dewar@adacore.com>\n\n\t* par-ch4.adb (P_Conditional_Expression): Use P_Condition for condition\n\t* par-ch5.adb (P_Condition): Move from body to spec\n\t* par.adb (Ch5.P_Condition): Move from body to spec\n\n2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_cg.adb (Write_Call_Info): If a type that has been registered in\n\tthe call table is private, use its full view to generate information\n\ton its operations.\n\nFrom-SVN: r164181", "tree": {"sha": "b877860313e1304b6652f4cf97e7a337ac6efded", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b877860313e1304b6652f4cf97e7a337ac6efded"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd9909a0c90962131d6b58d0af701f6333ecd244", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9909a0c90962131d6b58d0af701f6333ecd244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9909a0c90962131d6b58d0af701f6333ecd244", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9909a0c90962131d6b58d0af701f6333ecd244/comments", "author": null, "committer": null, "parents": [{"sha": "2962b1bbdf404ecd418ed0203efda19ee8c37431", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2962b1bbdf404ecd418ed0203efda19ee8c37431", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2962b1bbdf404ecd418ed0203efda19ee8c37431"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "11ff5dcffa9c5d3d24a36c6f003fd4303e831d07", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cd9909a0c90962131d6b58d0af701f6333ecd244", "patch": "@@ -1,3 +1,19 @@\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* frontend.adb: Minor reformatting.\n+\n+2010-09-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par-ch4.adb (P_Conditional_Expression): Use P_Condition for condition\n+\t* par-ch5.adb (P_Condition): Move from body to spec\n+\t* par.adb (Ch5.P_Condition): Move from body to spec\n+\n+2010-09-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_cg.adb (Write_Call_Info): If a type that has been registered in\n+\tthe call table is private, use its full view to generate information\n+\ton its operations.\n+\n 2010-09-10  Jose Ruiz  <ruiz@adacore.com>\n \n \t* exp_cg.adb (Is_Predefined_Dispatching_Operation): When trying the"}, {"sha": "425ae540526d25a9f568316f83452ba65f3a5249", "filename": "gcc/ada/exp_cg.adb", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Fexp_cg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Fexp_cg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_cg.adb?ref=cd9909a0c90962131d6b58d0af701f6333ecd244", "patch": "@@ -129,6 +129,14 @@ package body Exp_CG is\n             Write_Call_Info (N);\n \n          else pragma Assert (Nkind (N) = N_Defining_Identifier);\n+\n+            --  The type may be a private untagged type whose completion is\n+            --  tagged, in which case we must use the full tagged view.\n+\n+            if not Is_Tagged_Type (N) and then Is_Private_Type (N) then\n+               N := Full_View (N);\n+            end if;\n+\n             pragma Assert (Is_Tagged_Type (N));\n \n             Write_Type_Info (N);"}, {"sha": "54616feae744891ecdac31b9195545ebf88f925b", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=cd9909a0c90962131d6b58d0af701f6333ecd244", "patch": "@@ -161,7 +161,6 @@ begin\n          if Source_gnat_adc /= No_Source_File then\n             Initialize_Scanner (No_Unit, Source_gnat_adc);\n             Config_Pragmas := Par (Configuration_Pragmas => True);\n-\n          else\n             Config_Pragmas := Empty_List;\n          end if;"}, {"sha": "2d388f67b5a03626bdfa03065e6745bfd18ad5d9", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=cd9909a0c90962131d6b58d0af701f6333ecd244", "patch": "@@ -2788,7 +2788,7 @@ package body Ch4 is\n       end if;\n \n       Scan; -- past IF or ELSIF\n-      Append_To (Exprs, P_Expression_No_Right_Paren);\n+      Append_To (Exprs, P_Condition);\n       TF_Then;\n       Append_To (Exprs, P_Expression);\n "}, {"sha": "30433ef208ef6bbe6c79f483ec09a15960345b43", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=cd9909a0c90962131d6b58d0af701f6333ecd244", "patch": "@@ -34,7 +34,6 @@ package body Ch5 is\n \n    function P_Case_Statement                     return Node_Id;\n    function P_Case_Statement_Alternative         return Node_Id;\n-   function P_Condition                          return Node_Id;\n    function P_Exit_Statement                     return Node_Id;\n    function P_Goto_Statement                     return Node_Id;\n    function P_If_Statement                       return Node_Id;"}, {"sha": "28c2ca789eee9d4f87cb7bdca56e4fee197b803e", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd9909a0c90962131d6b58d0af701f6333ecd244/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=cd9909a0c90962131d6b58d0af701f6333ecd244", "patch": "@@ -709,6 +709,9 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n    -------------\n \n    package Ch5 is\n+      function P_Condition return Node_Id;\n+      --  Scan out and return a condition\n+\n       function P_Statement_Name (Name_Node : Node_Id) return Node_Id;\n       --  Given a node representing a name (which is a call), converts it\n       --  to the syntactically corresponding procedure call statement.\n@@ -1255,6 +1258,7 @@ function Par (Configuration_Pragmas : Boolean) return List_Id is\n --  Start of processing for Par\n \n begin\n+   Compiler_State := Parsing;\n \n    --  Deal with configuration pragmas case first\n \n@@ -1266,10 +1270,12 @@ begin\n       begin\n          loop\n             if Token = Tok_EOF then\n+               Compiler_State := Analyzing;\n                return Pragmas;\n \n             elsif Token /= Tok_Pragma then\n                Error_Msg_SC (\"only pragmas allowed in configuration file\");\n+               Compiler_State := Analyzing;\n                return Error_List;\n \n             else\n@@ -1479,6 +1485,7 @@ begin\n \n       Restore_Opt_Config_Switches (Save_Config_Switches);\n       Set_Comes_From_Source_Default (False);\n+      Compiler_State := Analyzing;\n       return Empty_List;\n    end if;\n end Par;"}]}