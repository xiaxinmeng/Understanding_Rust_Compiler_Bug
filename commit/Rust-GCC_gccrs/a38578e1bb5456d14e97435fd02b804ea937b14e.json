{"sha": "a38578e1bb5456d14e97435fd02b804ea937b14e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM4NTc4ZTFiYjU0NTZkMTRlOTc0MzVmZDAyYjgwNGVhOTM3YjE0ZQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2005-09-02T15:39:04Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2005-09-02T15:39:04Z"}, "message": "re PR c++/23167 (internal compiler error: in create_tmp_var)\n\n\tPR c++/23167\n\t* gimplify.c (gimplify_expr): Handle TREE_ADDRESSABLE types when\n\tgenerating synthetic loads from volatile lvalues.\n\n\tPR c++/23167\n\t* g++.dg/expr/volatile1.C: New test.\n\nFrom-SVN: r103782", "tree": {"sha": "5ec83c8b345f4e45753db9770b07a1f4d80d8457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ec83c8b345f4e45753db9770b07a1f4d80d8457"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a38578e1bb5456d14e97435fd02b804ea937b14e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a38578e1bb5456d14e97435fd02b804ea937b14e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a38578e1bb5456d14e97435fd02b804ea937b14e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a38578e1bb5456d14e97435fd02b804ea937b14e/comments", "author": null, "committer": null, "parents": [{"sha": "ebf178cd33b328d2d47c4845e5711edd4492b85d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebf178cd33b328d2d47c4845e5711edd4492b85d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebf178cd33b328d2d47c4845e5711edd4492b85d"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "c7dccbd65b26504a04139de7dbb7db13611f9a3a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a38578e1bb5456d14e97435fd02b804ea937b14e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a38578e1bb5456d14e97435fd02b804ea937b14e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a38578e1bb5456d14e97435fd02b804ea937b14e", "patch": "@@ -1,3 +1,9 @@\n+2005-08-31  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23167\n+\t* gimplify.c (gimplify_expr): Handle TREE_ADDRESSABLE types when\n+\tgenerating synthetic loads from volatile lvalues.\n+\n 005-09-02  Nick Clifton  <nickc@redhat.com>\n \n \t* config/stormy16/stormy16-lib2.c (__popcounthi2, __parityhi2,"}, {"sha": "c72e09e362d26dd71a63df24f009cc6b2fe1fb2c", "filename": "gcc/gimplify.c", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a38578e1bb5456d14e97435fd02b804ea937b14e/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a38578e1bb5456d14e97435fd02b804ea937b14e/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=a38578e1bb5456d14e97435fd02b804ea937b14e", "patch": "@@ -4454,7 +4454,15 @@ gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p,\n \t  /* Historically, the compiler has treated a bare\n \t     reference to a volatile lvalue as forcing a load.  */\n \t  tree type = TYPE_MAIN_VARIANT (TREE_TYPE (*expr_p));\n-\t  tree tmp = create_tmp_var (type, \"vol\");\n+\t  /* Normally, we do want to create a temporary for a\n+\t     TREE_ADDRESSABLE type because such a type should not be\n+\t     copied by bitwise-assignment.  However, we make an\n+\t     exception here, as all we are doing here is ensuring that\n+\t     we read the bytes that make up the type.  We use\n+\t     create_tmp_var_raw because create_tmp_var will abort when\n+\t     given a TREE_ADDRESSSABLE type.  */\n+\t  tree tmp = create_tmp_var_raw (type, \"vol\");\n+\t  gimple_add_tmp_var (tmp);\n \t  *expr_p = build (MODIFY_EXPR, type, tmp, *expr_p);\n \t}\n       else"}, {"sha": "6da1500d0b75666cb02e5299fbf905a37ad83dbc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a38578e1bb5456d14e97435fd02b804ea937b14e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a38578e1bb5456d14e97435fd02b804ea937b14e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a38578e1bb5456d14e97435fd02b804ea937b14e", "patch": "@@ -1,3 +1,8 @@\n+2005-08-31  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/23167\n+\t* g++.dg/expr/volatile1.C: New test.\n+\n 2005-09-02  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/23547"}, {"sha": "712c9e0fbdde40456a2a6e70cdc8635c0cf1a2e8", "filename": "gcc/testsuite/g++.dg/expr/volatile1.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a38578e1bb5456d14e97435fd02b804ea937b14e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fvolatile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a38578e1bb5456d14e97435fd02b804ea937b14e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fvolatile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fvolatile1.C?ref=a38578e1bb5456d14e97435fd02b804ea937b14e", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/23167\n+\n+struct dom\n+{\n+  static int tostr();\n+  void eval_old() volatile{tostr();}\n+  ~dom() throw();\n+};\n+"}]}