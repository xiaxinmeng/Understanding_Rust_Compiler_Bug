{"sha": "a811f7cbad669cb3398ada5fd29cea19f7dff1d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTgxMWY3Y2JhZDY2OWNiMzM5OGFkYTVmZDI5Y2VhMTlmN2RmZjFkMw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-09-09T12:09:50Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-09-09T12:09:50Z"}, "message": "re PR tree-optimization/58294 (ice in update_ssa_across_abnormal_edges, at tree-inline.c:1892)\n\n\tPR middle-end/58294\n\t* value-prof.c (gimple_ic): Copy also abnormal edges.\n\t* g++.dg/torture/PR58294.C: New testcase.\n\nFrom-SVN: r202389", "tree": {"sha": "469273de9e3e40df54ce28e45a95668c9755fada", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/469273de9e3e40df54ce28e45a95668c9755fada"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a811f7cbad669cb3398ada5fd29cea19f7dff1d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a811f7cbad669cb3398ada5fd29cea19f7dff1d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a811f7cbad669cb3398ada5fd29cea19f7dff1d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/comments", "author": null, "committer": null, "parents": [{"sha": "dcad1dd3a35d7df31ce81bed0f94bb5b6d5a3328", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcad1dd3a35d7df31ce81bed0f94bb5b6d5a3328", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcad1dd3a35d7df31ce81bed0f94bb5b6d5a3328"}], "stats": {"total": 60, "additions": 45, "deletions": 15}, "files": [{"sha": "ceaf0e50e55c2fcab9db6e985bb53cd5637c7860", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a811f7cbad669cb3398ada5fd29cea19f7dff1d3", "patch": "@@ -1,3 +1,8 @@\n+2013-09-09  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/58294\n+\t* value-prof.c (gimple_ic): Copy also abnormal edges.\n+\n 2013-09-09  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* asan.c (asan_shadow_cst): Use gen_int_mode."}, {"sha": "51cab1b35bf05fa2c4d8421386b356827613d6fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a811f7cbad669cb3398ada5fd29cea19f7dff1d3", "patch": "@@ -1,3 +1,8 @@\n+2013-09-09  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR middle-end/58294\n+\t* g++.dg/torture/PR58294.C: New testcase.\n+\n 2013-09-08  Jeff Law  <law@redhat.com>\n \n \t* gcc.c-torture/compile/pr58340.c: New test."}, {"sha": "e1fb95ae23dc49f4361fa9a6e8c536da1f2b38b7", "filename": "gcc/testsuite/g++.dg/torture/PR58294.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2FPR58294.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2FPR58294.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2FPR58294.C?ref=a811f7cbad669cb3398ada5fd29cea19f7dff1d3", "patch": "@@ -0,0 +1,20 @@\n+// { dg-do compile }\n+struct A {\n+  virtual ~A();\n+  virtual void m_fn1() { delete this; }\n+  void m_fn2() { m_fn1(); }\n+};\n+\n+struct B {\n+  A *pi_;\n+  B() { pi_->m_fn2(); }\n+};\n+struct C {\n+  B pn;\n+};\n+void _setjmp();\n+int png_decode() {\n+  _setjmp();\n+  C a;\n+  return 0;\n+}"}, {"sha": "498eb907e81e893a6aa048c5186e90a9b52d3b8a", "filename": "gcc/value-prof.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/gcc%2Fvalue-prof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a811f7cbad669cb3398ada5fd29cea19f7dff1d3/gcc%2Fvalue-prof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvalue-prof.c?ref=a811f7cbad669cb3398ada5fd29cea19f7dff1d3", "patch": "@@ -1299,6 +1299,9 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n   edge e_cd, e_ci, e_di, e_dj = NULL, e_ij;\n   gimple_stmt_iterator gsi;\n   int lp_nr, dflags;\n+  edge e_eh, e;\n+  edge_iterator ei;\n+  gimple_stmt_iterator psi;\n \n   cond_bb = gimple_bb (icall_stmt);\n   gsi = gsi_for_stmt (icall_stmt);\n@@ -1401,24 +1404,21 @@ gimple_ic (gimple icall_stmt, struct cgraph_node *direct_call,\n   lp_nr = lookup_stmt_eh_lp (icall_stmt);\n   if (lp_nr > 0 && stmt_could_throw_p (dcall_stmt))\n     {\n-      edge e_eh, e;\n-      edge_iterator ei;\n-      gimple_stmt_iterator psi;\n-\n       add_stmt_to_eh_lp (dcall_stmt, lp_nr);\n-      FOR_EACH_EDGE (e_eh, ei, icall_bb->succs)\n-\tif (e_eh->flags & EDGE_EH)\n-\t  break;\n-      e = make_edge (dcall_bb, e_eh->dest, EDGE_EH);\n-      for (psi = gsi_start_phis (e_eh->dest);\n-\t   !gsi_end_p (psi); gsi_next (&psi))\n-\t{\n-\t  gimple phi = gsi_stmt (psi);\n-\t  SET_USE (PHI_ARG_DEF_PTR_FROM_EDGE (phi, e),\n-\t\t   PHI_ARG_DEF_FROM_EDGE (phi, e_eh));\n-\t}\n     }\n \n+  FOR_EACH_EDGE (e_eh, ei, icall_bb->succs)\n+    if (e_eh->flags & (EDGE_EH | EDGE_ABNORMAL))\n+      {\n+\te = make_edge (dcall_bb, e_eh->dest, e_eh->flags);\n+\tfor (psi = gsi_start_phis (e_eh->dest);\n+\t     !gsi_end_p (psi); gsi_next (&psi))\n+\t  {\n+\t    gimple phi = gsi_stmt (psi);\n+\t    SET_USE (PHI_ARG_DEF_PTR_FROM_EDGE (phi, e),\n+\t\t     PHI_ARG_DEF_FROM_EDGE (phi, e_eh));\n+\t  }\n+       }\n   return dcall_stmt;\n }\n "}]}