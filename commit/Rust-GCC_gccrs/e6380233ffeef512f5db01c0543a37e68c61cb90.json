{"sha": "e6380233ffeef512f5db01c0543a37e68c61cb90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYzODAyMzNmZmVlZjUxMmY1ZGIwMWMwNTQzYTM3ZTY4YzYxY2I5MA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-09-02T09:02:33Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-09-02T09:02:33Z"}, "message": "combine.c (simplify_rtx): Recognize another case of a synthesized sign extension.\n\n        * combine.c (simplify_rtx): Recognize another case of a synthesized\n        sign extension.\n\nFrom-SVN: r29055", "tree": {"sha": "0785d8c746f37a1f8ab7349ae33e718925c05cd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0785d8c746f37a1f8ab7349ae33e718925c05cd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6380233ffeef512f5db01c0543a37e68c61cb90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6380233ffeef512f5db01c0543a37e68c61cb90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6380233ffeef512f5db01c0543a37e68c61cb90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6380233ffeef512f5db01c0543a37e68c61cb90/comments", "author": null, "committer": null, "parents": [{"sha": "08e105064ff2af90818c04eeeeef5de9203733a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e105064ff2af90818c04eeeeef5de9203733a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e105064ff2af90818c04eeeeef5de9203733a8"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "42f596bbd4574b61fa17ded25f4f571eeae0c1ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6380233ffeef512f5db01c0543a37e68c61cb90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6380233ffeef512f5db01c0543a37e68c61cb90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6380233ffeef512f5db01c0543a37e68c61cb90", "patch": "@@ -13,6 +13,9 @@ Thu Sep  2 00:43:59 1999  Finn Hakansson  <finn@axis.com>\n \n Thu Sep  2 00:06:43 1999  Jeffrey A Law  (law@cygnus.com)\n \n+\t* combine.c (simplify_rtx): Recognize another case of a synthesized\n+\tsign extension.\n+\n \t* varasm.c (mark_constant_pool): When marking indirect references,\n \tonly look at SYMBOL_REFs.\n "}, {"sha": "01703ba67f98875fe8b70f8d3022819ed4e4228f", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6380233ffeef512f5db01c0543a37e68c61cb90/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6380233ffeef512f5db01c0543a37e68c61cb90/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e6380233ffeef512f5db01c0543a37e68c61cb90", "patch": "@@ -3913,12 +3913,14 @@ simplify_rtx (x, op0_mode, last, in_dest)\n       /* (plus (xor (and <foo> (const_int pow2 - 1)) <c>) <-c>)\n \t when c is (const_int (pow2 + 1) / 2) is a sign extension of a\n \t bit-field and can be replaced by either a sign_extend or a\n-\t sign_extract.  The `and' may be a zero_extend.  */\n+\t sign_extract.  The `and' may be a zero_extend and the two\n+\t <c>, -<c> constants may be reversed.  */\n       if (GET_CODE (XEXP (x, 0)) == XOR\n \t  && GET_CODE (XEXP (x, 1)) == CONST_INT\n \t  && GET_CODE (XEXP (XEXP (x, 0), 1)) == CONST_INT\n \t  && INTVAL (XEXP (x, 1)) == - INTVAL (XEXP (XEXP (x, 0), 1))\n-\t  && (i = exact_log2 (INTVAL (XEXP (XEXP (x, 0), 1)))) >= 0\n+\t  && ((i = exact_log2 (INTVAL (XEXP (XEXP (x, 0), 1)))) >= 0\n+\t      || (i = exact_log2 (INTVAL (XEXP (x, 1)))) >= 0)\n \t  && GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT\n \t  && ((GET_CODE (XEXP (XEXP (x, 0), 0)) == AND\n \t       && GET_CODE (XEXP (XEXP (XEXP (x, 0), 0), 1)) == CONST_INT"}]}