{"sha": "6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJmMWZmZTE4YzExN2M5YzgzZjFmZTJiMzhjNmRmMDUzMmE4ZjU3Yw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-05-28T11:53:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2003-05-28T11:53:34Z"}, "message": "inclhack.def: Add missing declaration of getpagesize() to unistd.h on Solaris 2.5.1.\n\n\t* fixinc/inclhack.def: Add missing declaration of getpagesize()\n\tto unistd.h on Solaris 2.5.1.\n\tFix prototype of recv() and send() in sys/socket.h on\n\tSolaris 2.5.1 and 2.6.\n\t* fixinc/tests/base/unistd.h: Add solaris_unistd fix test.\n\t* fixinc/tests/base/sys/socket.h: Add solaris_socket test.\n\t* fixinc/check.tpl: Use 'diff -c', not 'diff -u'.\n\t* fixinc/fixincl.x: Regenerate.\n\nFrom-SVN: r67206", "tree": {"sha": "0e89929148cc8d0813e05fdc887aba4ca4e96adc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0e89929148cc8d0813e05fdc887aba4ca4e96adc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/comments", "author": null, "committer": null, "parents": [{"sha": "7101ac35a4df7df770771b32c44a4f569fb88e01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7101ac35a4df7df770771b32c44a4f569fb88e01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7101ac35a4df7df770771b32c44a4f569fb88e01"}], "stats": {"total": 174, "additions": 167, "deletions": 7}, "files": [{"sha": "f8d9e7991a4a945afe89fcf0200d380aa7d11b29", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "patch": "@@ -1,3 +1,16 @@\n+2003-05-28  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+            Bruce Korb  <bkorb@gnu.org>\n+            Arno Klaassen  <arno@heho.snv.jussieu.fr>\n+\n+\t* fixinc/inclhack.def: Add missing declaration of getpagesize()\n+\tto unistd.h on Solaris 2.5.1.\n+\tFix prototype of recv() and send() in sys/socket.h on\n+\tSolaris 2.5.1 and 2.6.\n+\t* fixinc/tests/base/unistd.h: Add solaris_unistd fix test.\n+\t* fixinc/tests/base/sys/socket.h: Add solaris_socket test.\n+\t* fixinc/check.tpl: Use 'diff -c', not 'diff -u'.\n+\t* fixinc/fixincl.x: Regenerate.\n+\n 2003-05-27  Jason Merrill  <jason@redhat.com>\n \n \t* tree.c (expr_first, expr_length): New fns.\n@@ -6,7 +19,7 @@\n \t* tree.c (iterative_hash_expr): Hash commutative expressions\n \tconsistently.\n \n-2003-05027  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+2003-05-27  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* tree.h (contains_placeholder_p): Now returns bool.\n \t(CONTAINS_PLACEHOLDER_P): New macro."}, {"sha": "9f8750b8bacc6220bf97b2b801d68e7aebeb4db5", "filename": "gcc/fixinc/check.tpl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Fcheck.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Fcheck.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Fcheck.tpl?ref=6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "patch": "@@ -135,7 +135,7 @@ do\n     :\n \n   else\n-    ${DIFF:-diff} -u $f ${TESTBASE}/$f >&2 || :\n+    ${DIFF:-diff} -c $f ${TESTBASE}/$f >&2 || :\n     exitok=false\n   fi\n done"}, {"sha": "20f13c85b93bf0308061734680c7180bfabb5e1f", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 97, "deletions": 5, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "patch": "@@ -2,11 +2,11 @@\n  * \n  * DO NOT EDIT THIS FILE   (fixincl.x)\n  * \n- * It has been AutoGen-ed  Thursday May 22, 2003 at 10:03:21 AM PDT\n+ * It has been AutoGen-ed  Wednesday May 28, 2003 at 12:55:57 AM CDT\n  * From the definitions    inclhack.def\n  * and the template file   fixincl\n  */\n-/* DO NOT CVS-MERGE THIS FILE, EITHER Thu May 22 10:03:21 PDT 2003\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Wed May 28 00:55:57 CDT 2003\n  *\n  * You must regenerate it.  Use the ./genfixes script.\n  *\n@@ -15,7 +15,7 @@\n  * certain ANSI-incompatible system header files which are fixed to work\n  * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n- * This file contains 152 fixup descriptions.\n+ * This file contains 154 fixup descriptions.\n  *\n  * See README for more information.\n  *\n@@ -3965,6 +3965,42 @@ static const char* apzSolaris_Mutex_Init_2Patch[] = {\n     \"(^#define[ \\t]+PTHREAD_(MUTEX|COND)_INITIALIZER[ \\t]+{.*),[ \\t]*0}(|[ \\t].*)$\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris_Socket fix\n+ */\n+tSCC zSolaris_SocketName[] =\n+     \"solaris_socket\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris_SocketList[] =\n+  \"|sys/socket.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzSolaris_SocketMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSolaris_SocketSelect0[] =\n+       \"@\\\\(#\\\\)socket.h[ \\t]+1.[123][0-9][ \\t]+9[567]/[0-9/]+ SMI\";\n+\n+#define    SOLARIS_SOCKET_TEST_CT  1\n+static tTestDesc aSolaris_SocketTests[] = {\n+  { TT_EGREP,    zSolaris_SocketSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Solaris_Socket\n+ */\n+static const char* apzSolaris_SocketPatch[] = {\n+    \"format\",\n+    \"extern int %1(int, %2void *, int, int);\",\n+    \"^extern int (recv|send)\\\\(int, (const )*char \\\\*, int, int\\\\);\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Solaris_Stdio_Tag fix\n@@ -3999,6 +4035,50 @@ static const char* apzSolaris_Stdio_TagPatch[] = { \"sed\",\n     \"-e\", \"s/defined(__cplusplus) && (__cplusplus < 54321L)/0/\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Solaris_Unistd fix\n+ */\n+tSCC zSolaris_UnistdName[] =\n+     \"solaris_unistd\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zSolaris_UnistdList[] =\n+  \"|unistd.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+#define apzSolaris_UnistdMachs (const char**)NULL\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zSolaris_UnistdSelect0[] =\n+       \"@\\\\(#\\\\)unistd.h[ \\t]+1.3[0-9][ \\t]+9[567]/[0-9/]+ SMI\";\n+\n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zSolaris_UnistdBypass0[] =\n+       \"getpagesize\";\n+\n+#define    SOLARIS_UNISTD_TEST_CT  2\n+static tTestDesc aSolaris_UnistdTests[] = {\n+  { TT_NEGREP,   zSolaris_UnistdBypass0, (regex_t*)NULL },\n+  { TT_EGREP,    zSolaris_UnistdSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Solaris_Unistd\n+ */\n+static const char* apzSolaris_UnistdPatch[] = {\n+    \"format\",\n+    \"extern int getpagesize();\\n\\\n+%0\",\n+    \"^extern (pid_t|int) getpgid\\\\(.*\\\\);\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Solaris_Widec fix\n@@ -6018,9 +6098,9 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          168\n+#define REGEX_COUNT          171\n #define MACH_LIST_SIZE_LIMIT 261\n-#define FIX_COUNT            152\n+#define FIX_COUNT            154\n \n /*\n  *  Enumerate the fixes\n@@ -6124,7 +6204,9 @@ typedef enum {\n     SCO_UTIME_FIXIDX,\n     SOLARIS_MUTEX_INIT_1_FIXIDX,\n     SOLARIS_MUTEX_INIT_2_FIXIDX,\n+    SOLARIS_SOCKET_FIXIDX,\n     SOLARIS_STDIO_TAG_FIXIDX,\n+    SOLARIS_UNISTD_FIXIDX,\n     SOLARIS_WIDEC_FIXIDX,\n     STATSSWTCH_FIXIDX,\n     STDIO_STDARG_H_FIXIDX,\n@@ -6671,11 +6753,21 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      SOLARIS_MUTEX_INIT_2_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aSolaris_Mutex_Init_2Tests,   apzSolaris_Mutex_Init_2Patch, 0 },\n \n+  {  zSolaris_SocketName,    zSolaris_SocketList,\n+     apzSolaris_SocketMachs,\n+     SOLARIS_SOCKET_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSolaris_SocketTests,   apzSolaris_SocketPatch, 0 },\n+\n   {  zSolaris_Stdio_TagName,    zSolaris_Stdio_TagList,\n      apzSolaris_Stdio_TagMachs,\n      SOLARIS_STDIO_TAG_TEST_CT, FD_MACH_ONLY,\n      aSolaris_Stdio_TagTests,   apzSolaris_Stdio_TagPatch, 0 },\n \n+  {  zSolaris_UnistdName,    zSolaris_UnistdList,\n+     apzSolaris_UnistdMachs,\n+     SOLARIS_UNISTD_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aSolaris_UnistdTests,   apzSolaris_UnistdPatch, 0 },\n+\n   {  zSolaris_WidecName,    zSolaris_WidecList,\n      apzSolaris_WidecMachs,\n      SOLARIS_WIDEC_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "b43b215aa79bbd5365a806374e0843fc9a98ed64", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "patch": "@@ -2199,6 +2199,26 @@ fix = {\n };\n \n \n+/*\n+ * Solaris 2.5.1 and 2.6 use an outdated prototype for send & recv\n+ * in sys/socket.h.  This is corrected in Solaris 7 and up.\n+ */\n+fix = {\n+    hackname = solaris_socket;\n+    files = sys/socket.h;\n+    select = '@\\(#\\)socket.h' \"[ \\t]+1.[123][0-9][ \\t]+9[567]/[0-9/]+ SMI\";\n+    c_fix = format;\n+    c_fix_arg = \"extern int %1(int, %2void *, int, int);\";\n+    c_fix_arg = '^extern int (recv|send)\\(int,'\n+                ' (const )*char '\n+                '\\*, int, int\\);';\n+\n+    test_text = '#ident   \"@(#)socket.h   1.30    97/01/20 SMI\"'\"\\n\"\n+                \"extern int recv(int, char *, int, int);\\n\"\n+                \"extern int send(int, const char *, int, int);\";\n+};\n+\n+\n /*\n  * Solaris 2.8 has what appears to be some gross workaround for \n  * some old version of their c++ compiler.  G++ doesn't want it\n@@ -2214,6 +2234,25 @@ fix = {\n     test_text = \"#if\\tdefined(__cplusplus) && (__cplusplus < 54321L)\";\n };\n \n+\n+/*\n+ * Sun Solaris 2.5.1 doesn't define 'getpagesize' in <unistd.h>, as is done\n+ * on Solaris 2.6 and up.\n+ */\n+fix = {\n+    hackname  = solaris_unistd;\n+    files = unistd.h;\n+    select = '@\\(#\\)unistd.h' \"[ \\t]+1.3[0-9][ \\t]+9[567]/[0-9/]+ SMI\";\n+    bypass = \"getpagesize\";\n+    c_fix = format;\n+    c_fix_arg = \"extern int getpagesize();\\n%0\";\n+    c_fix_arg = '^extern (pid_t|int) getpgid\\(.*\\);';\n+    test_text = '#ident \"@(#)unistd.h   1.33    95/08/28 SMI\"'\"\\n\"\n+                \"extern pid_t getpgid(pid_t);\\n\"\n+                \"extern int getpgid();\";\n+};\n+\n+\n /*\n  * <widec.h> until Solaris 2.5.1 defines macros for a couple of <wchar.h>\n  * functions, breaking their prototypes if that file is included afterwards."}, {"sha": "0898ed00a5bf63f6f4da0f5c9ebbed9656ec45ad", "filename": "gcc/fixinc/tests/base/sys/socket.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Fsys%2Fsocket.h?ref=6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "patch": "@@ -17,3 +17,10 @@ typedef int socklen_t;\n typedef u_int32_t socklen_t;\n #endif /* _NO_XOPEN4 && _NO_XOPEN5 */\n #endif  /* IRIX_SOCKLEN_T_CHECK */\n+\n+\n+#if defined( SOLARIS_SOCKET_CHECK )\n+#ident   \"@(#)socket.h   1.30    97/01/20 SMI\"\n+extern int recv(int, void *, int, int);\n+extern int send(int, const void *, int, int);\n+#endif  /* SOLARIS_SOCKET_CHECK */"}, {"sha": "5bfb9b96d171a55045a0d66a7f00507f47477ff0", "filename": "gcc/fixinc/tests/base/unistd.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Ftests%2Fbase%2Funistd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c/gcc%2Ffixinc%2Ftests%2Fbase%2Funistd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ftests%2Fbase%2Funistd.h?ref=6bf1ffe18c117c9c83f1fe2b38c6df0532a8f57c", "patch": "@@ -12,3 +12,12 @@\n #if defined( ALPHA_SBRK_CHECK )\n extern void *sbrk(ptrdiff_t increment);\n #endif  /* ALPHA_SBRK_CHECK */\n+\n+\n+#if defined( SOLARIS_UNISTD_CHECK )\n+#ident \"@(#)unistd.h   1.33    95/08/28 SMI\"\n+extern int getpagesize();\n+extern pid_t getpgid(pid_t);\n+extern int getpagesize();\n+extern int getpgid();\n+#endif  /* SOLARIS_UNISTD_CHECK */"}]}