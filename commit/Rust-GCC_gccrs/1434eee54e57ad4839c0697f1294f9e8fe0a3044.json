{"sha": "1434eee54e57ad4839c0697f1294f9e8fe0a3044", "node_id": "C_kwDOANBUbNoAKDE0MzRlZWU1NGU1N2FkNDgzOWMwNjk3ZjEyOTRmOWU4ZmUwYTMwNDQ", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2023-02-14T12:27:18Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2023-02-14T12:27:18Z"}, "message": "Fix small regression in Ada\n\ngcc/\n\t* gimplify.cc (gimplify_save_expr): Add missing guard.\ngcc/ada/\n\t* gcc-interface/trans.cc (gnat_gimplify_expr): Add missing guard.\ngcc/testsuite/\n\t* gnat.dg/shift2.adb: New test.", "tree": {"sha": "da2846f853832ef36475a49fec7616de51c1b26a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da2846f853832ef36475a49fec7616de51c1b26a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1434eee54e57ad4839c0697f1294f9e8fe0a3044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1434eee54e57ad4839c0697f1294f9e8fe0a3044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1434eee54e57ad4839c0697f1294f9e8fe0a3044", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1434eee54e57ad4839c0697f1294f9e8fe0a3044/comments", "author": null, "committer": null, "parents": [{"sha": "a16fc9333f1762d9b5a9da7239fe6a5cc9a6d190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a16fc9333f1762d9b5a9da7239fe6a5cc9a6d190", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a16fc9333f1762d9b5a9da7239fe6a5cc9a6d190"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "5fc1a26fedefa405ace7a8bb83055667e32850fb", "filename": "gcc/ada/gcc-interface/trans.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1434eee54e57ad4839c0697f1294f9e8fe0a3044/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1434eee54e57ad4839c0697f1294f9e8fe0a3044/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.cc?ref=1434eee54e57ad4839c0697f1294f9e8fe0a3044", "patch": "@@ -9049,7 +9049,9 @@ gnat_gimplify_expr (tree *expr_p, gimple_seq *pre_p,\n \n       /* Propagate TREE_NO_WARNING from expression to temporary by using the\n \t SAVE_EXPR itself as an intermediate step.  See gimplify_save_expr.  */\n-      if (SAVE_EXPR_RESOLVED_P (expr))\n+      if (type == void_type_node)\n+\t;\n+      else if (SAVE_EXPR_RESOLVED_P (expr))\n \tTREE_NO_WARNING (op) = TREE_NO_WARNING (expr);\n       else\n \tTREE_NO_WARNING (expr) = TREE_NO_WARNING (op);"}, {"sha": "96845154a926f97735d6f268a7e985316585f923", "filename": "gcc/gimplify.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1434eee54e57ad4839c0697f1294f9e8fe0a3044/gcc%2Fgimplify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1434eee54e57ad4839c0697f1294f9e8fe0a3044/gcc%2Fgimplify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.cc?ref=1434eee54e57ad4839c0697f1294f9e8fe0a3044", "patch": "@@ -6441,7 +6441,7 @@ gimplify_save_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n   gcc_assert (TREE_CODE (*expr_p) == SAVE_EXPR);\n   val = TREE_OPERAND (*expr_p, 0);\n \n-  if (TREE_TYPE (val) == error_mark_node)\n+  if (val && TREE_TYPE (val) == error_mark_node)\n     return GS_ERROR;\n \n   /* If the SAVE_EXPR has not been resolved, then evaluate it once.  */"}, {"sha": "b45e44018132025ce9e5de76e516011c4d868542", "filename": "gcc/testsuite/gnat.dg/shift2.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1434eee54e57ad4839c0697f1294f9e8fe0a3044/gcc%2Ftestsuite%2Fgnat.dg%2Fshift2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1434eee54e57ad4839c0697f1294f9e8fe0a3044/gcc%2Ftestsuite%2Fgnat.dg%2Fshift2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fshift2.adb?ref=1434eee54e57ad4839c0697f1294f9e8fe0a3044", "patch": "@@ -0,0 +1,8 @@\n+-- { dg-do compile }\n+\n+with Interfaces; use Interfaces;\n+\n+function Shift2 (V : Unsigned_32) return Unsigned_32 is\n+begin\n+  return Shift_Left (V, (case V is when 0 => 1, when others => 0));\n+end;"}]}