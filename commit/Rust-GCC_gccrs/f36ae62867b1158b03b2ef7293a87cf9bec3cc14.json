{"sha": "f36ae62867b1158b03b2ef7293a87cf9bec3cc14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM2YWU2Mjg2N2IxMTU4YjAzYjJlZjcyOTNhODdjZjliZWMzY2MxNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-06-30T19:09:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-06-30T19:09:57Z"}, "message": "re PR c++/61647 (internal compiler error: in push_access_scope, at cp/pt.c:219 for a c++ header, clang++ 3.4 generate .pch without error)\n\n\tPR c++/61647\n\t* pt.c (type_dependent_expression_p): Check BASELINK_OPTYPE.\n\nFrom-SVN: r212168", "tree": {"sha": "26f4ea53ca1ffb5eaa1a1657fc056f05a9db6b6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26f4ea53ca1ffb5eaa1a1657fc056f05a9db6b6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f36ae62867b1158b03b2ef7293a87cf9bec3cc14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36ae62867b1158b03b2ef7293a87cf9bec3cc14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f36ae62867b1158b03b2ef7293a87cf9bec3cc14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f36ae62867b1158b03b2ef7293a87cf9bec3cc14/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cae7c96095c645003b25e1b69bee46ade7fce344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cae7c96095c645003b25e1b69bee46ade7fce344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cae7c96095c645003b25e1b69bee46ade7fce344"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "dba9c551bacfc8f2b64a5fc816de89355c233c56", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36ae62867b1158b03b2ef7293a87cf9bec3cc14/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36ae62867b1158b03b2ef7293a87cf9bec3cc14/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f36ae62867b1158b03b2ef7293a87cf9bec3cc14", "patch": "@@ -1,5 +1,8 @@\n 2014-06-30  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/61647\n+\t* pt.c (type_dependent_expression_p): Check BASELINK_OPTYPE.\n+\n \tPR c++/61566\n \t* mangle.c (decl_mangling_context): Look through a TEMPLATE_DECL.\n "}, {"sha": "355b63e50f1ca3c986786a0a78275e204c908329", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36ae62867b1158b03b2ef7293a87cf9bec3cc14/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36ae62867b1158b03b2ef7293a87cf9bec3cc14/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=f36ae62867b1158b03b2ef7293a87cf9bec3cc14", "patch": "@@ -21089,7 +21089,12 @@ type_dependent_expression_p (tree expression)\n \treturn true;\n \n       if (BASELINK_P (expression))\n-\texpression = BASELINK_FUNCTIONS (expression);\n+\t{\n+\t  if (BASELINK_OPTYPE (expression)\n+\t      && dependent_type_p (BASELINK_OPTYPE (expression)))\n+\t    return true;\n+\t  expression = BASELINK_FUNCTIONS (expression);\n+\t}\n \n       if (TREE_CODE (expression) == TEMPLATE_ID_EXPR)\n \t{"}, {"sha": "509ae6a654652e6016059dab107ccde604398ba9", "filename": "gcc/testsuite/g++.dg/template/conv14.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f36ae62867b1158b03b2ef7293a87cf9bec3cc14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f36ae62867b1158b03b2ef7293a87cf9bec3cc14/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fconv14.C?ref=f36ae62867b1158b03b2ef7293a87cf9bec3cc14", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/61647\n+\n+class XX;\n+\n+template<typename Container, typename Key>\n+struct Accessor;\n+\n+template<typename Container, typename Key, typename KeyStore = Key>\n+class Variant {\n+protected:\n+    KeyStore index;\n+    Container state;\n+public:\n+    Variant(Container st, const Key& i) : index(i), state(st) {}\n+\n+    template<typename T>\n+    operator T() const {\n+        return Accessor<Container, KeyStore>::template get<T>(state, index);\n+    }\n+};\n+\n+class AutoCleanVariant : public Variant<XX*, int> {\n+public:\n+    AutoCleanVariant(XX* st, int i) : Variant<XX*,int>(st,i) {}\n+\n+    template<typename T>\n+    operator T() const {\n+         return Variant<XX*, int>::operator T();\n+    }\n+};"}]}