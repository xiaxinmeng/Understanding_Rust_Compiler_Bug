{"sha": "be7ad7dfdb3b853d47d1e50d1ed580d47feff569", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU3YWQ3ZGZkYjNiODUzZDQ3ZDFlNTBkMWVkNTgwZDQ3ZmVmZjU2OQ==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@gcc.gnu.org", "date": "2020-09-01T02:37:41Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-09-01T02:37:41Z"}, "message": "test/rs6000: Add Power9 and up as vect_len target\n\nPower9 supports vector with length in bytes load/store, this patch\nis to teach check_effective_target_vect_len_load_store to take it\nand its laters as effective vector with length targets.\n\nAlso supplement the documents for has_arch_pwr*.\n\nBootstrapped/regtested on powerpc64le-linux-gnu P8, also on\npowerpc64le-linux-gnu P9 with explicit usage setting.\n\ngcc/ChangeLog:\n\n\t* doc/sourcebuild.texi (has_arch_pwr5, has_arch_pwr6, has_arch_pwr7,\n\thas_arch_pwr8, has_arch_pwr9): Document.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/target-supports.exp\n\t(check_effective_target_vect_len_load_store): Call check function\n\tcheck_effective_target_has_arch_pwr9.", "tree": {"sha": "e9e5137eb8735c6ea6f8ca84dbb2ddaf4963970c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9e5137eb8735c6ea6f8ca84dbb2ddaf4963970c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be7ad7dfdb3b853d47d1e50d1ed580d47feff569", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7ad7dfdb3b853d47d1e50d1ed580d47feff569", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be7ad7dfdb3b853d47d1e50d1ed580d47feff569", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be7ad7dfdb3b853d47d1e50d1ed580d47feff569/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13e4ba28f36817eec190fbd0dccd1f4aa99875a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13e4ba28f36817eec190fbd0dccd1f4aa99875a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13e4ba28f36817eec190fbd0dccd1f4aa99875a1"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "65b2e552b74becdbc5474ba5ac387a4a0296e341", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7ad7dfdb3b853d47d1e50d1ed580d47feff569/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7ad7dfdb3b853d47d1e50d1ed580d47feff569/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=be7ad7dfdb3b853d47d1e50d1ed580d47feff569", "patch": "@@ -2199,6 +2199,26 @@ PowerPC target supports executing AltiVec instructions.\n \n @item vsx_hw\n PowerPC target supports executing VSX instructions (ISA 2.06).\n+\n+@item has_arch_pwr5\n+PowerPC target pre-defines macro _ARCH_PWR5 which means the @code{-mcpu}\n+setting is Power5 or later.\n+\n+@item has_arch_pwr6\n+PowerPC target pre-defines macro _ARCH_PWR6 which means the @code{-mcpu}\n+setting is Power6 or later.\n+\n+@item has_arch_pwr7\n+PowerPC target pre-defines macro _ARCH_PWR7 which means the @code{-mcpu}\n+setting is Power7 or later.\n+\n+@item has_arch_pwr8\n+PowerPC target pre-defines macro _ARCH_PWR8 which means the @code{-mcpu}\n+setting is Power8 or later.\n+\n+@item has_arch_pwr9\n+PowerPC target pre-defines macro _ARCH_PWR9 which means the @code{-mcpu}\n+setting is Power9 or later.\n @end table\n \n @subsubsection Other hardware attributes"}, {"sha": "e106278631f484ca99cd19f75baa3d7015246e7c", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be7ad7dfdb3b853d47d1e50d1ed580d47feff569/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be7ad7dfdb3b853d47d1e50d1ed580d47feff569/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=be7ad7dfdb3b853d47d1e50d1ed580d47feff569", "patch": "@@ -7085,7 +7085,7 @@ proc check_effective_target_vect_fully_masked { } {\n # @code{len_store} optabs.\n \n proc check_effective_target_vect_len_load_store { } {\n-    return 0\n+    return [check_effective_target_has_arch_pwr9]\n }\n \n # Return the value of parameter vect-partial-vector-usage specified for"}]}