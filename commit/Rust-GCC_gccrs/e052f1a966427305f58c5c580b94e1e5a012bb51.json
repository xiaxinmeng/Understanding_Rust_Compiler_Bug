{"sha": "e052f1a966427305f58c5c580b94e1e5a012bb51", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA1MmYxYTk2NjQyNzMwNWY1OGM1YzU4MGI5NGUxZTVhMDEyYmI1MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-10-08T21:55:05Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-10-08T21:55:05Z"}, "message": "romp-protos.h (romp_initialize_trampoline): New function.\n\n\t* romp-protos.h (romp_initialize_trampoline): New function.\n\t* romp.c (romp_initialize_trampoline): Likewise.\n\t* romp.h (INITIALIZE_TRAMPOLINE): Define in terms of\n\tromp_initialize_trampoline.\n\nFrom-SVN: r46104", "tree": {"sha": "171d5a0438ed08588a5ac088e6771b51b6e3cef9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/171d5a0438ed08588a5ac088e6771b51b6e3cef9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e052f1a966427305f58c5c580b94e1e5a012bb51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e052f1a966427305f58c5c580b94e1e5a012bb51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e052f1a966427305f58c5c580b94e1e5a012bb51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e052f1a966427305f58c5c580b94e1e5a012bb51/comments", "author": null, "committer": null, "parents": [{"sha": "da905677f1192d67ba9ec28235674ab91437cbbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da905677f1192d67ba9ec28235674ab91437cbbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da905677f1192d67ba9ec28235674ab91437cbbf"}], "stats": {"total": 65, "additions": 34, "deletions": 31}, "files": [{"sha": "e8f087cf2926cbca873c0068131ca8e8bbd67248", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e052f1a966427305f58c5c580b94e1e5a012bb51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e052f1a966427305f58c5c580b94e1e5a012bb51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e052f1a966427305f58c5c580b94e1e5a012bb51", "patch": "@@ -1,3 +1,10 @@\n+2001-10-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* romp-protos.h (romp_initialize_trampoline): New function.\n+\t* romp.c (romp_initialize_trampoline): Likewise.\n+\t* romp.h (INITIALIZE_TRAMPOLINE): Define in terms of\n+\tromp_initialize_trampoline.\n+\n 2001-10-08  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* m68k/3b1.h (ASM_OUTPUT_SOURCE_LINE): Don't reference `last_linenum'."}, {"sha": "8ec306f3802358b085d9715e2258e7c791d2df9a", "filename": "gcc/config/romp/romp-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e052f1a966427305f58c5c580b94e1e5a012bb51/gcc%2Fconfig%2Fromp%2Fromp-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e052f1a966427305f58c5c580b94e1e5a012bb51/gcc%2Fconfig%2Fromp%2Fromp-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp-protos.h?ref=e052f1a966427305f58c5c580b94e1e5a012bb51", "patch": "@@ -47,6 +47,7 @@ extern int reg_15_operand PARAMS ((rtx, enum machine_mode));\n extern int float_binary PARAMS ((rtx, enum machine_mode));\n extern int float_unary PARAMS ((rtx, enum machine_mode));\n extern int float_conversion PARAMS ((rtx, enum machine_mode));\n+extern void romp_initialize_trampoline PARAMS ((rtx, rtx, rtx));\n #endif /* RTX_CODE */\n \n extern int first_reg_to_save PARAMS ((void));"}, {"sha": "2d9f9772ecd4c42e64c5b9ffcb1c21e75463126d", "filename": "gcc/config/romp/romp.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e052f1a966427305f58c5c580b94e1e5a012bb51/gcc%2Fconfig%2Fromp%2Fromp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e052f1a966427305f58c5c580b94e1e5a012bb51/gcc%2Fconfig%2Fromp%2Fromp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.c?ref=e052f1a966427305f58c5c580b94e1e5a012bb51", "patch": "@@ -2046,3 +2046,28 @@ romp_debugger_arg_correction (offset)\n \n   return (offset - fp_to_argp);\n }\n+\n+void\n+romp_initialize_trampoline (tramp, fnaddr, cxt)\n+     rtx tramp, fnaddr, cxt;\n+{\n+  rtx addr, temp, val;\n+\n+  temp = expand_simple_binop (SImode, PLUS, tramp, GEN_INT (4),\n+\t\t\t       0, 1, OPTAB_LIB_WIDEN);\n+  emit_move_insn (gen_rtx_MEM (SImode, memory_address (SImode, tramp)), temp);\n+\n+  val = force_reg (SImode, cxt);\n+  addr = memory_address (HImode, plus_constant (tramp, 10));\n+  emit_move_insn (gen_rtx_MEM (HImode, addr), gen_lowpart (HImode, val));\n+  temp = expand_shift (RSHIFT_EXPR, SImode, val, build_int_2 (16, 0), 0, 1);\n+  addr = memory_address (HImode, plus_constant (tramp, 6));\n+  emit_move_insn (gen_rtx_MEM (HImode, addr), gen_lowpart (HImode, temp));\n+\n+  val = force_reg (SImode, fnaddr);\n+  addr = memory_address (HImode, plus_constant (tramp, 24));\n+  emit_move_insn (gen_rtx_MEM (HImode, addr), gen_lowpart (HImode, val));\n+  temp = expand_shift (RSHIFT_EXPR, SImode, val, build_int_2 (16, 0), 0, 1);\n+  addr = memory_address (HImode, plus_constant (tramp, 20));\n+  emit_move_insn (gen_rtx_MEM (HImode, addr), gen_lowpart (HImode, temp));\n+}"}, {"sha": "d1d3174d9902a5c6b23de2695c25b77423d93037", "filename": "gcc/config/romp/romp.h", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e052f1a966427305f58c5c580b94e1e5a012bb51/gcc%2Fconfig%2Fromp%2Fromp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e052f1a966427305f58c5c580b94e1e5a012bb51/gcc%2Fconfig%2Fromp%2Fromp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fromp%2Fromp.h?ref=e052f1a966427305f58c5c580b94e1e5a012bb51", "patch": "@@ -785,37 +785,7 @@ struct rt_cargs {int gregs, fregs; };\n    data area.  */\n \n #define INITIALIZE_TRAMPOLINE(ADDR, FNADDR, CXT)\t\t\\\n-{\t\t\t\t\t\t\t\t\\\n-  rtx _addr, _temp;\t\t\t\t\t\t\\\n-  rtx _val;\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  _temp = expand_binop (SImode, add_optab, ADDR,\t\t\\\n-\t\t\tGEN_INT (4),\t\t\t\t\\\n-\t\t\t0, 1, OPTAB_LIB_WIDEN);\t\t\t\\\n-  emit_move_insn (gen_rtx_MEM (SImode,\t\t\t\t\\\n-\t\t\t       memory_address (SImode, ADDR)), _temp); \\\n-\t\t\t\t\t\t\t\t\\\n-  _val = force_reg (SImode, CXT);\t\t\t\t\\\n-  _addr = memory_address (HImode, plus_constant (ADDR, 10));\t\\\n-  emit_move_insn (gen_rtx_MEM (HImode, _addr),\t\t\t\\\n-\t\t  gen_lowpart (HImode, _val));\t\t\t\\\n-  _temp = expand_shift (RSHIFT_EXPR, SImode, _val,\t\t\\\n-\t\t\tbuild_int_2 (16, 0), 0, 1);\t\t\\\n-  _addr = memory_address (HImode, plus_constant (ADDR, 6));\t\\\n-  emit_move_insn (gen_rtx_MEM (HImode, _addr),\t\t\t\\\n-\t\t  gen_lowpart (HImode, _temp));\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-  _val = force_reg (SImode, FNADDR);\t\t\t\t\\\n-  _addr = memory_address (HImode, plus_constant (ADDR, 24));\t\\\n-  emit_move_insn (gen_rtx_MEM (HImode, _addr),\t\t\t\\\n-\t\t  gen_lowpart (HImode, _val));\t\t\t\\\n-  _temp = expand_shift (RSHIFT_EXPR, SImode, _val,\t\t\\\n-\t\t\tbuild_int_2 (16, 0), 0, 1);\t\t\\\n-  _addr = memory_address (HImode, plus_constant (ADDR, 20));\t\\\n-  emit_move_insn (gen_rtx_MEM (HImode, _addr),\t\t\t\\\n-\t\t  gen_lowpart (HImode, _temp));\t\t\t\\\n-\t\t\t\t\t\t\t\t\\\n-}\n+\tromp_initialize_trampoline (ADDR, FNADDR, CXT)\n \f\n /* Definitions for register eliminations.\n "}]}