{"sha": "73f4149137364da5b6d1238720b7fc21226b5b27", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmNDE0OTEzNzM2NGRhNWI2ZDEyMzg3MjBiN2ZjMjEyMjZiNWIyNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-10-26T20:08:29Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-10-26T20:08:29Z"}, "message": "re PR other/55087 (bogus \"linux-vdso.so.1: No such file or directory\" caused by libbacktrace)\n\n\tPR other/55087\n\t* posix.c (backtrace_open): Add does_not_exist parameter.\n\t* elf.c (phdr_callback): Do not warn if shared library could not\n\tbe opened.\n\t* fileline.c (fileline_initialize): Update calls to\n\tbacktrace_open.\n\t* internal.h (backtrace_open): Update declaration.\n\nFrom-SVN: r192861", "tree": {"sha": "19f70c7335db3f471b050d0ffdf8011662c823c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19f70c7335db3f471b050d0ffdf8011662c823c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f4149137364da5b6d1238720b7fc21226b5b27", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f4149137364da5b6d1238720b7fc21226b5b27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f4149137364da5b6d1238720b7fc21226b5b27", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f4149137364da5b6d1238720b7fc21226b5b27/comments", "author": null, "committer": null, "parents": [{"sha": "9430b7bad813a444e6a7e35d6b5f92d2b99f40cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9430b7bad813a444e6a7e35d6b5f92d2b99f40cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9430b7bad813a444e6a7e35d6b5f92d2b99f40cf"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "4850d9de37bd3a5a37cb35de4f24f5d341beeff1", "filename": "libbacktrace/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2FChangeLog?ref=73f4149137364da5b6d1238720b7fc21226b5b27", "patch": "@@ -1,3 +1,13 @@\n+2012-10-26  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR other/55087\n+\t* posix.c (backtrace_open): Add does_not_exist parameter.\n+\t* elf.c (phdr_callback): Do not warn if shared library could not\n+\tbe opened.\n+\t* fileline.c (fileline_initialize): Update calls to\n+\tbacktrace_open.\n+\t* internal.h (backtrace_open): Update declaration.\n+\n 2012-10-26  Jack Howarth  <howarth@bromo.med.uc.edu>\n \n \tPR target/55061"}, {"sha": "8433a72fcd6ddcc31e06485c702dd6cf5fa12468", "filename": "libbacktrace/elf.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2Felf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Felf.c?ref=73f4149137364da5b6d1238720b7fc21226b5b27", "patch": "@@ -810,6 +810,7 @@ phdr_callback (struct dl_phdr_info *info, size_t size ATTRIBUTE_UNUSED,\n {\n   struct phdr_data *pd = (struct phdr_data *) pdata;\n   int descriptor;\n+  int does_not_exist;\n   fileline elf_fileline_fn;\n   int found_dwarf;\n \n@@ -821,7 +822,8 @@ phdr_callback (struct dl_phdr_info *info, size_t size ATTRIBUTE_UNUSED,\n       || info->dlpi_addr == 0)\n     return 0;\n \n-  descriptor = backtrace_open (info->dlpi_name, pd->error_callback, pd->data);\n+  descriptor = backtrace_open (info->dlpi_name, pd->error_callback, pd->data,\n+\t\t\t       &does_not_exist);\n   if (descriptor < 0)\n     return 0;\n "}, {"sha": "e577ecc9061602a48def60d1fddaa02845a2ed6c", "filename": "libbacktrace/fileline.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2Ffileline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2Ffileline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Ffileline.c?ref=73f4149137364da5b6d1238720b7fc21226b5b27", "patch": "@@ -80,9 +80,9 @@ fileline_initialize (struct backtrace_state *state,\n   /* We have not initialized the information.  Do it now.  */\n \n   if (state->filename != NULL)\n-    descriptor = backtrace_open (state->filename, error_callback, data);\n+    descriptor = backtrace_open (state->filename, error_callback, data, NULL);\n   else\n-    descriptor = backtrace_open (\"/proc/self/exe\", error_callback, data);\n+    descriptor = backtrace_open (\"/proc/self/exe\", error_callback, data, NULL);\n   if (descriptor < 0)\n     failed = 1;\n "}, {"sha": "5e0dba44a8560998f632fc8b3cc61f693ce04b0e", "filename": "libbacktrace/internal.h", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2Finternal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2Finternal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Finternal.h?ref=73f4149137364da5b6d1238720b7fc21226b5b27", "patch": "@@ -109,10 +109,16 @@ struct backtrace_state\n   struct backtrace_freelist_struct *freelist;\n };\n \n-/* Open a file for reading.  Returns -1 on error.  */\n+/* Open a file for reading.  Returns -1 on error.  If DOES_NOT_EXIST\n+   is not NULL, *DOES_NOT_EXIST will be set to 0 normally and set to 1\n+   if the file does not exist.  If the file does not exist and\n+   DOES_NOT_EXIST is not NULL, the function will return -1 and will\n+   not call ERROR_CALLBACK.  On other errors, or if DOES_NOT_EXIST is\n+   NULL, the function will call ERROR_CALLBACK before returning.  */\n extern int backtrace_open (const char *filename,\n \t\t\t   backtrace_error_callback error_callback,\n-\t\t\t   void *data);\n+\t\t\t   void *data,\n+\t\t\t   int *does_not_exist);\n \n /* A view of the contents of a file.  This supports mmap when\n    available.  A view will remain in memory even after backtrace_close"}, {"sha": "4d6c852b7813feb580e191f980ca032dc457c814", "filename": "libbacktrace/posix.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2Fposix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f4149137364da5b6d1238720b7fc21226b5b27/libbacktrace%2Fposix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libbacktrace%2Fposix.c?ref=73f4149137364da5b6d1238720b7fc21226b5b27", "patch": "@@ -57,14 +57,20 @@ POSSIBILITY OF SUCH DAMAGE.  */\n \n int\n backtrace_open (const char *filename, backtrace_error_callback error_callback,\n-\t\tvoid *data)\n+\t\tvoid *data, int *does_not_exist)\n {\n   int descriptor;\n \n+  if (does_not_exist != NULL)\n+    *does_not_exist = 0;\n+\n   descriptor = open (filename, O_RDONLY | O_BINARY | O_CLOEXEC);\n   if (descriptor < 0)\n     {\n-      error_callback (data, filename, errno);\n+      if (does_not_exist != NULL && errno == ENOENT)\n+\t*does_not_exist = 1;\n+      else\n+\terror_callback (data, filename, errno);\n       return -1;\n     }\n "}]}