{"sha": "7d48a109d36b4a228ba3822d5483647a0723cce2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q0OGExMDlkMzZiNGEyMjhiYTM4MjJkNTQ4MzY0N2EwNzIzY2NlMg==", "commit": {"author": {"name": "Tim Shen", "email": "timshen91@gmail.com", "date": "2013-10-01T23:44:04Z"}, "committer": {"name": "Tim Shen", "email": "timshen@gcc.gnu.org", "date": "2013-10-01T23:44:04Z"}, "message": "status_cxx2011.xml: Update regex status.\n\n2013-10-01  Tim Shen  <timshen91@gmail.com>\n\n\t* doc/xml/manual/status_cxx2011.xml: Update regex status.\n\t* include/bits/regex.h (match_results<>::begin,\n\tmatch_results<>::cbegin, match_results<>::end, match_results<>::cend):\n\t[28.10.3.13], [28.10.3.14] Always iterate the range [0, size()-2).\n\nFrom-SVN: r203096", "tree": {"sha": "dc49e3514f9ffdb35080e36fc700ad29676acdd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc49e3514f9ffdb35080e36fc700ad29676acdd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d48a109d36b4a228ba3822d5483647a0723cce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d48a109d36b4a228ba3822d5483647a0723cce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d48a109d36b4a228ba3822d5483647a0723cce2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d48a109d36b4a228ba3822d5483647a0723cce2/comments", "author": {"login": "timshen91", "id": 1157432, "node_id": "MDQ6VXNlcjExNTc0MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1157432?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timshen91", "html_url": "https://github.com/timshen91", "followers_url": "https://api.github.com/users/timshen91/followers", "following_url": "https://api.github.com/users/timshen91/following{/other_user}", "gists_url": "https://api.github.com/users/timshen91/gists{/gist_id}", "starred_url": "https://api.github.com/users/timshen91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timshen91/subscriptions", "organizations_url": "https://api.github.com/users/timshen91/orgs", "repos_url": "https://api.github.com/users/timshen91/repos", "events_url": "https://api.github.com/users/timshen91/events{/privacy}", "received_events_url": "https://api.github.com/users/timshen91/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "157ca3e989605194001568cc1864603b32fbd025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/157ca3e989605194001568cc1864603b32fbd025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/157ca3e989605194001568cc1864603b32fbd025"}], "stats": {"total": 74, "additions": 37, "deletions": 37}, "files": [{"sha": "1a2fb28e23325752dc385e06a6cfc53d6618c260", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d48a109d36b4a228ba3822d5483647a0723cce2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d48a109d36b4a228ba3822d5483647a0723cce2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7d48a109d36b4a228ba3822d5483647a0723cce2", "patch": "@@ -1,3 +1,10 @@\n+2013-10-01  Tim Shen  <timshen91@gmail.com>\n+\n+\t* doc/xml/manual/status_cxx2011.xml: Update regex status.\n+\t* include/bits/regex.h (match_results<>::begin,\n+\tmatch_results<>::cbegin, match_results<>::end, match_results<>::cend):\n+\t[28.10.3.13], [28.10.3.14] Always iterate the range [0, size()-2).\n+\n 2013-10-01  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* include/parallel/algobase.h (mismatch, equal): Provide parallel"}, {"sha": "29c235d1748d73fe8810acdeca5ae43011640b2c", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2011.xml", "status": "modified", "additions": 11, "deletions": 20, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d48a109d36b4a228ba3822d5483647a0723cce2/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d48a109d36b4a228ba3822d5483647a0723cce2/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2011.xml?ref=7d48a109d36b4a228ba3822d5483647a0723cce2", "patch": "@@ -2179,31 +2179,27 @@ particular release.\n       </entry>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>28.1</entry>\n       <entry>General</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>28.2</entry>\n       <entry>Definitions</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>28.3</entry>\n       <entry>Requirements</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>28.4</entry>\n       <entry>Header <code>&lt;regex&gt;</code> synopsis</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n@@ -2223,48 +2219,43 @@ particular release.\n       <entry>28.7</entry>\n       <entry>Class template <code>regex_traits</code></entry>\n       <entry>Partial</entry>\n+      <entry><code>transform_primary</code> is not implemented</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#B0B0B0\" ?>\n       <entry>28.8</entry>\n       <entry>Class template <code>basic_regex</code></entry>\n-      <entry>Partial</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#B0B0B0\" ?>\n       <entry>28.9</entry>\n       <entry>Class template <code>sub_match</code></entry>\n-      <entry>Partial</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#B0B0B0\" ?>\n       <entry>28.10</entry>\n       <entry>Class template <code>match_results</code></entry>\n-      <entry>Partial</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>28.11</entry>\n       <entry>Regular expression algorithms</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>28.12</entry>\n       <entry>Regular expression Iterators</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>\n-      <?dbhtml bgcolor=\"#C8B0B0\" ?>\n       <entry>28.13</entry>\n       <entry>Modified ECMAScript regular expression grammar</entry>\n-      <entry>N</entry>\n+      <entry>Y</entry>\n       <entry/>\n     </row>\n     <row>"}, {"sha": "4d7e7d7ff3634337fa50924d9e7f4afb2fd8745e", "filename": "libstdc++-v3/include/bits/regex.h", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d48a109d36b4a228ba3822d5483647a0723cce2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d48a109d36b4a228ba3822d5483647a0723cce2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fregex.h?ref=7d48a109d36b4a228ba3822d5483647a0723cce2", "patch": "@@ -220,10 +220,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tstring_type\n \ttransform_primary(_Fwd_iter __first, _Fwd_iter __last) const\n \t{\n+\t  // TODO : this is not entirely correct.\n+\t  // This function requires extra support from the platform.\n+\t  //\n+\t  // Read http://gcc.gnu.org/ml/libstdc++/2013-09/msg00117.html and\n+\t  // http://www.open-std.org/Jtc1/sc22/wg21/docs/papers/2003/n1429.htm\n+\t  // for details.\n \t  typedef std::ctype<char_type> __ctype_type;\n \t  const __ctype_type& __fctyp(use_facet<__ctype_type>(_M_locale));\n \t  std::vector<char_type> __s(__first, __last);\n-\t  // FIXME : this is not entirely correct\n \t  __fctyp.tolower(__s.data(), __s.data() + __s.size());\n \t  return this->transform(__s.data(), __s.data() + __s.size());\n \t}\n@@ -416,8 +421,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        * @throws regex_error if @p __p is not a valid regular expression.\n        */\n-      basic_regex(const _Ch_type* __p,\n-\t\t  std::size_t __len, flag_type __f = ECMAScript)\n+      basic_regex(const _Ch_type* __p, std::size_t __len,\n+\t\t  flag_type __f = ECMAScript)\n       : basic_regex(__p, __p + __len, __f)\n       { }\n \n@@ -484,8 +489,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *\n        * @throws regex_error if @p __l is not a valid regular expression.\n        */\n-      basic_regex(initializer_list<_Ch_type> __l,\n-\t\t  flag_type __f = ECMAScript)\n+      basic_regex(initializer_list<_Ch_type> __l, flag_type __f = ECMAScript)\n       : basic_regex(__l.begin(), __l.end(), __f)\n       { }\n \n@@ -1494,17 +1498,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        * @name 10.? Public Types\n        */\n       //@{\n-      typedef _Alloc                                       allocator_type;\n       typedef sub_match<_Bi_iter>                          value_type;\n       typedef const value_type&                            const_reference;\n       typedef const_reference                              reference;\n       typedef typename _Base_type::const_iterator          const_iterator;\n       typedef const_iterator                               iterator;\n       typedef typename __iter_traits::difference_type\t   difference_type;\n-      typedef typename __iter_traits::value_type \t   char_type;\n       typedef typename allocator_traits<_Alloc>::size_type size_type;\n-\n-\n+      typedef _Alloc                                       allocator_type;\n+      typedef typename __iter_traits::value_type \t   char_type;\n       typedef std::basic_string<char_type>                 string_type;\n       //@}\n \n@@ -1730,21 +1732,21 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        */\n       const_iterator\n       cbegin() const\n-      { return _Base_type::cbegin(); }\n+      { return _Base_type::cbegin() + 2; }\n \n       /**\n        * @brief Gets an iterator to one-past-the-end of the collection.\n        */\n       const_iterator\n       end() const\n-      { return !empty() ? _Base_type::end() - 2 : _Base_type::end(); }\n+      { return _Base_type::end() - 2; }\n \n       /**\n        * @brief Gets an iterator to one-past-the-end of the collection.\n        */\n       const_iterator\n       cend() const\n-      { return end(); }\n+      { return _Base_type::cend(); }\n \n       //@}\n \n@@ -2263,14 +2265,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _Rx_traits, typename _Ch_type,\n \t   typename _St, typename _Sa, typename _Fst, typename _Fsa>\n-    inline basic_string<_Ch_type>\n+    inline basic_string<_Ch_type, _St, _Sa>\n     regex_replace(const basic_string<_Ch_type, _St, _Sa>& __s,\n \t\t  const basic_regex<_Ch_type, _Rx_traits>& __e,\n \t\t  const basic_string<_Ch_type, _Fst, _Fsa>& __fmt,\n \t\t  regex_constants::match_flag_type __flags\n \t\t  = regex_constants::match_default)\n     {\n-      basic_string<_Ch_type> __result;\n+      basic_string<_Ch_type, _St, _Sa> __result;\n       regex_replace(std::back_inserter(__result),\n \t\t    __s.begin(), __s.end(), __e, __fmt, __flags);\n       return __result;\n@@ -2289,14 +2291,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    */\n   template<typename _Rx_traits, typename _Ch_type,\n \t   typename _St, typename _Sa>\n-    inline basic_string<_Ch_type>\n+    inline basic_string<_Ch_type, _St, _Sa>\n     regex_replace(const basic_string<_Ch_type, _St, _Sa>& __s,\n \t\t  const basic_regex<_Ch_type, _Rx_traits>& __e,\n \t\t  const _Ch_type* __fmt,\n \t\t  regex_constants::match_flag_type __flags\n \t\t  = regex_constants::match_default)\n     {\n-      basic_string<_Ch_type> __result;\n+      basic_string<_Ch_type, _St, _Sa> __result;\n       regex_replace(std::back_inserter(__result),\n \t\t    __s.begin(), __s.end(), __e, __fmt, __flags);\n       return __result;\n@@ -2662,7 +2664,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _M_end_of_seq()\n       { return _M_result == nullptr; }\n \n-      _Position _M_position;\n+      _Position         _M_position;\n       const value_type* _M_result;\n       value_type        _M_suffix;\n       std::size_t       _M_n;"}]}