{"sha": "db7317c3cf3dd7382077783e2da8fe84bc9b1f7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI3MzE3YzNjZjNkZDczODIwNzc3ODNlMmRhOGZlODRiYzliMWY3ZQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-12-05T00:51:26Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-12-05T00:51:26Z"}, "message": "re PR libfortran/30005 (Open errors (not/already exists etc.): show also the file name)\n\n2006-12-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/30005\n\t* io/open.c: Add errno.h include.\n\t(new_unit): Add new error messages with file name for file open.\n\nFrom-SVN: r119530", "tree": {"sha": "183a941f2c393552c39658128aff3a7f90722949", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/183a941f2c393552c39658128aff3a7f90722949"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db7317c3cf3dd7382077783e2da8fe84bc9b1f7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db7317c3cf3dd7382077783e2da8fe84bc9b1f7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db7317c3cf3dd7382077783e2da8fe84bc9b1f7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db7317c3cf3dd7382077783e2da8fe84bc9b1f7e/comments", "author": null, "committer": null, "parents": [{"sha": "e5ebbea51eb1a2d044a8761cf3f95d40b67f1329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ebbea51eb1a2d044a8761cf3f95d40b67f1329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ebbea51eb1a2d044a8761cf3f95d40b67f1329"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "8844e9ad336d873e5d95320c50915b6588f3b5e3", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db7317c3cf3dd7382077783e2da8fe84bc9b1f7e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db7317c3cf3dd7382077783e2da8fe84bc9b1f7e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=db7317c3cf3dd7382077783e2da8fe84bc9b1f7e", "patch": "@@ -1,3 +1,9 @@\n+2006-12-04  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/30005\n+\t* io/open.c: Add errno.h include.\n+\t(new_unit): Add new error messages with file name for file open.\n+\n 2006-12-01  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/29568"}, {"sha": "ef1ce1e02282861d821a0d2ab0e10b25e4dd4dfd", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db7317c3cf3dd7382077783e2da8fe84bc9b1f7e/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db7317c3cf3dd7382077783e2da8fe84bc9b1f7e/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=db7317c3cf3dd7382077783e2da8fe84bc9b1f7e", "patch": "@@ -32,6 +32,7 @@ Boston, MA 02110-1301, USA.  */\n #include <unistd.h>\n #include <stdio.h>\n #include <string.h>\n+#include <errno.h>\n #include \"libgfortran.h\"\n #include \"io.h\"\n \n@@ -374,7 +375,34 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n   s = open_external (opp, flags);\n   if (s == NULL)\n     {\n-      generate_error (&opp->common, ERROR_OS, NULL);\n+      char *path, *msg;\n+      path = (char *) gfc_alloca (opp->file_len + 1);\n+      msg = (char *) gfc_alloca (opp->file_len + 51);\n+      unpack_filename (path, opp->file, opp->file_len);\n+\n+      switch (errno)\n+\t{\n+\tcase ENOENT: \n+\t  st_sprintf (msg, \"File '%s' does not exist\", path);\n+\t  break;\n+\n+\tcase EEXIST:\n+\t  st_sprintf (msg, \"File '%s' already exists\", path);\n+\t  break;\n+\n+\tcase EACCES:\n+\t  st_sprintf (msg, \"Permission denied trying to open file '%s'\", path);\n+\t  break;\n+\n+\tcase EISDIR:\n+\t  st_sprintf (msg, \"'%s' is a directory\", path);\n+\t  break;\n+\n+\tdefault:\n+\t  msg = NULL;\n+\t}\n+\n+      generate_error (&opp->common, ERROR_OS, msg);\n       goto cleanup;\n     }\n "}]}