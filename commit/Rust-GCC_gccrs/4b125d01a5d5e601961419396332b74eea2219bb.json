{"sha": "4b125d01a5d5e601961419396332b74eea2219bb", "node_id": "C_kwDOANBUbNoAKDRiMTI1ZDAxYTVkNWU2MDE5NjE0MTkzOTYzMzJiNzRlZWEyMjE5YmI", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-01-23T18:33:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-01-23T19:09:49Z"}, "message": "c++: result location and explicit inst [PR108496]\n\nIn r13-4469 we started to build the RESULT_DECL in grokdeclarator, while we\nstill know the location of the return type.  But in this testcase, we hit\nthat code again when parsing the explicit instantiation, and clobber the\nDECL_RESULT that was previously used in parsing the function.  So, only set\nDECL_RESULT if it isn't already set.\n\n\tPR c++/108496\n\ngcc/cp/ChangeLog:\n\n\t* decl.cc (grokdeclarator): Check whether DECL_RESULT is already\n\tset.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/template/explicit-instantiation5.C: New test.", "tree": {"sha": "bc3c5e4f498cd73dfdada1262cbd180a8708b13f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc3c5e4f498cd73dfdada1262cbd180a8708b13f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b125d01a5d5e601961419396332b74eea2219bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b125d01a5d5e601961419396332b74eea2219bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b125d01a5d5e601961419396332b74eea2219bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b125d01a5d5e601961419396332b74eea2219bb/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c6c307792026705fe0398f5ee399f7668fed1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c6c307792026705fe0398f5ee399f7668fed1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c6c307792026705fe0398f5ee399f7668fed1b"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "d606b31d7a7afeee1d5bbaf31aa074eb7dea3528", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b125d01a5d5e601961419396332b74eea2219bb/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b125d01a5d5e601961419396332b74eea2219bb/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=4b125d01a5d5e601961419396332b74eea2219bb", "patch": "@@ -14776,14 +14776,18 @@ grokdeclarator (const cp_declarator *declarator,\n       {\n \t/* If we saw a return type, record its location.  */\n \tlocation_t loc = declspecs->locations[ds_type_spec];\n-\tif (loc != UNKNOWN_LOCATION)\n+\tif (loc == UNKNOWN_LOCATION)\n+\t  /* Build DECL_RESULT in start_preparsed_function.  */;\n+\telse if (!DECL_RESULT (decl))\n \t  {\n \t    tree restype = TREE_TYPE (TREE_TYPE (decl));\n \t    tree resdecl = build_decl (loc, RESULT_DECL, 0, restype);\n \t    DECL_ARTIFICIAL (resdecl) = 1;\n \t    DECL_IGNORED_P (resdecl) = 1;\n \t    DECL_RESULT (decl) = resdecl;\n \t  }\n+\telse if (funcdef_flag)\n+\t  DECL_SOURCE_LOCATION (DECL_RESULT (decl)) = loc;\n       }\n \n     /* Record constancy and volatility on the DECL itself .  There's"}, {"sha": "7bc007c8107d8eb236d537ecb335e7d6c76f65bb", "filename": "gcc/testsuite/g++.dg/template/explicit-instantiation5.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b125d01a5d5e601961419396332b74eea2219bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fexplicit-instantiation5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b125d01a5d5e601961419396332b74eea2219bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fexplicit-instantiation5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fexplicit-instantiation5.C?ref=4b125d01a5d5e601961419396332b74eea2219bb", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/108496\n+\n+struct S { long a, b, c; } s;\n+\n+template <int, typename>\n+S foo (S);\n+\n+template <>\n+S\n+foo <0, long> (S)\n+{\n+  return s;\n+}\n+\n+template S foo <0, long> (S);"}]}