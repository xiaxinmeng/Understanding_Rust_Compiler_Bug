{"sha": "90d55c93fba9ad7300728170e65f5c2724e8f467", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBkNTVjOTNmYmE5YWQ3MzAwNzI4MTcwZTY1ZjVjMjcyNGU4ZjQ2Nw==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2005-11-20T18:08:13Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2005-11-20T18:08:13Z"}, "message": "* cpplib.pot: Regenerate.\n\nFrom-SVN: r107256", "tree": {"sha": "5952f6b580bb72b719102b088c84b7dced7e93e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5952f6b580bb72b719102b088c84b7dced7e93e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90d55c93fba9ad7300728170e65f5c2724e8f467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d55c93fba9ad7300728170e65f5c2724e8f467", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d55c93fba9ad7300728170e65f5c2724e8f467", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d55c93fba9ad7300728170e65f5c2724e8f467/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f74a57f8b263368f564a7096120aa23b19e9201b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f74a57f8b263368f564a7096120aa23b19e9201b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f74a57f8b263368f564a7096120aa23b19e9201b"}], "stats": {"total": 211, "additions": 112, "deletions": 99}, "files": [{"sha": "0284bc94fc12943f4728e335564cb864ac676b4c", "filename": "libcpp/po/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d55c93fba9ad7300728170e65f5c2724e8f467/libcpp%2Fpo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d55c93fba9ad7300728170e65f5c2724e8f467/libcpp%2Fpo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2FChangeLog?ref=90d55c93fba9ad7300728170e65f5c2724e8f467", "patch": "@@ -1,3 +1,7 @@\n+2005-11-20  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* cpplib.pot: Regenerate.\n+\n 2005-09-04  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* be.po, ca.po, da.po, de.po, el.po, es.po, fr.po, ja.po, nl.po,"}, {"sha": "759a9229c9b8456b70381284c0b1e54f50a3abf5", "filename": "libcpp/po/cpplib.pot", "status": "modified", "additions": 108, "deletions": 99, "changes": 207, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d55c93fba9ad7300728170e65f5c2724e8f467/libcpp%2Fpo%2Fcpplib.pot", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d55c93fba9ad7300728170e65f5c2724e8f467/libcpp%2Fpo%2Fcpplib.pot", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fpo%2Fcpplib.pot?ref=90d55c93fba9ad7300728170e65f5c2724e8f467", "patch": "@@ -8,7 +8,7 @@ msgid \"\"\n msgstr \"\"\n \"Project-Id-Version: PACKAGE VERSION\\n\"\n \"Report-Msgid-Bugs-To: http://gcc.gnu.org/bugs.html\\n\"\n-\"POT-Creation-Date: 2005-06-07 23:27+0200\\n\"\n+\"POT-Creation-Date: 2005-11-20 18:04+0000\\n\"\n \"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\\n\"\n \"Last-Translator: FULL NAME <EMAIL@ADDRESS>\\n\"\n \"Language-Team: LANGUAGE <LL@li.org>\\n\"\n@@ -35,7 +35,8 @@ msgstr \"\"\n msgid \"character 0x%lx is not in the basic source character set\\n\"\n msgstr \"\"\n \n-#: charset.c:759 charset.c:1346\n+#: charset.c:759\n+#: charset.c:1352\n msgid \"converting to execution character set\"\n msgstr \"\"\n \n@@ -72,7 +73,8 @@ msgstr \"\"\n msgid \"%.*s is not a valid universal character\"\n msgstr \"\"\n \n-#: charset.c:1008 lex.c:472\n+#: charset.c:1008\n+#: lex.c:472\n msgid \"'$' in identifier or number\"\n msgstr \"\"\n \n@@ -86,7 +88,8 @@ msgstr \"\"\n msgid \"universal character %.*s is not valid at the start of an identifier\"\n msgstr \"\"\n \n-#: charset.c:1056 charset.c:1565\n+#: charset.c:1056\n+#: charset.c:1571\n msgid \"converting UCN to source character set\"\n msgstr \"\"\n \n@@ -124,239 +127,243 @@ msgstr \"\"\n msgid \"unknown escape sequence '\\\\%c'\"\n msgstr \"\"\n \n-#: charset.c:1281\n+#: charset.c:1286\n #, c-format\n-msgid \"unknown escape sequence: '\\\\%03o'\"\n+msgid \"unknown escape sequence: '\\\\%s'\"\n msgstr \"\"\n \n-#: charset.c:1287\n+#: charset.c:1293\n msgid \"converting escape sequence to execution character set\"\n msgstr \"\"\n \n-#: charset.c:1409 charset.c:1472\n+#: charset.c:1415\n+#: charset.c:1478\n msgid \"character constant too long for its type\"\n msgstr \"\"\n \n-#: charset.c:1412\n+#: charset.c:1418\n msgid \"multi-character character constant\"\n msgstr \"\"\n \n-#: charset.c:1504\n+#: charset.c:1510\n msgid \"empty character constant\"\n msgstr \"\"\n \n-#: charset.c:1606\n+#: charset.c:1612\n #, c-format\n msgid \"failure to convert %s to %s\"\n msgstr \"\"\n \n #: directives.c:219\n+#: directives.c:245\n #, c-format\n msgid \"extra tokens at end of #%s directive\"\n msgstr \"\"\n \n-#: directives.c:306\n+#: directives.c:346\n #, c-format\n msgid \"#%s is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:318\n+#: directives.c:358\n msgid \"suggest not using #elif in traditional C\"\n msgstr \"\"\n \n-#: directives.c:321\n+#: directives.c:361\n #, c-format\n msgid \"traditional C ignores #%s with the # indented\"\n msgstr \"\"\n \n-#: directives.c:325\n+#: directives.c:365\n #, c-format\n msgid \"suggest hiding #%s from traditional C with an indented #\"\n msgstr \"\"\n \n-#: directives.c:351\n+#: directives.c:391\n msgid \"embedding a directive within macro arguments is not portable\"\n msgstr \"\"\n \n-#: directives.c:371\n+#: directives.c:411\n msgid \"style of line directive is a GCC extension\"\n msgstr \"\"\n \n-#: directives.c:421\n+#: directives.c:461\n #, c-format\n msgid \"invalid preprocessing directive #%s\"\n msgstr \"\"\n \n-#: directives.c:492\n+#: directives.c:532\n msgid \"\\\"defined\\\" cannot be used as a macro name\"\n msgstr \"\"\n \n-#: directives.c:498\n+#: directives.c:538\n #, c-format\n msgid \"\\\"%s\\\" cannot be used as a macro name as it is an operator in C++\"\n msgstr \"\"\n \n-#: directives.c:501\n+#: directives.c:541\n #, c-format\n msgid \"no macro name given in #%s directive\"\n msgstr \"\"\n \n-#: directives.c:504\n+#: directives.c:544\n msgid \"macro names must be identifiers\"\n msgstr \"\"\n \n-#: directives.c:545\n+#: directives.c:585\n #, c-format\n msgid \"undefining \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:600\n+#: directives.c:640\n msgid \"missing terminating > character\"\n msgstr \"\"\n \n-#: directives.c:654\n+#: directives.c:695\n #, c-format\n msgid \"#%s expects \\\"FILENAME\\\" or <FILENAME>\"\n msgstr \"\"\n \n-#: directives.c:677\n+#: directives.c:735\n #, c-format\n msgid \"empty filename in #%s\"\n msgstr \"\"\n \n-#: directives.c:685\n+#: directives.c:745\n msgid \"#include nested too deeply\"\n msgstr \"\"\n \n-#: directives.c:723\n+#: directives.c:786\n msgid \"#include_next in primary source file\"\n msgstr \"\"\n \n-#: directives.c:749\n+#: directives.c:812\n #, c-format\n msgid \"invalid flag \\\"%s\\\" in line directive\"\n msgstr \"\"\n \n-#: directives.c:801\n+#: directives.c:864\n #, c-format\n msgid \"\\\"%s\\\" after #line is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:807\n+#: directives.c:870\n msgid \"line number out of range\"\n msgstr \"\"\n \n-#: directives.c:820 directives.c:897\n+#: directives.c:883\n+#: directives.c:960\n #, c-format\n msgid \"\\\"%s\\\" is not a valid filename\"\n msgstr \"\"\n \n-#: directives.c:857\n+#: directives.c:920\n #, c-format\n msgid \"\\\"%s\\\" after # is not a positive integer\"\n msgstr \"\"\n \n-#: directives.c:959\n+#: directives.c:1022\n #, c-format\n msgid \"invalid #%s directive\"\n msgstr \"\"\n \n-#: directives.c:1048\n+#: directives.c:1111\n #, c-format\n msgid \"registering \\\"%s\\\" as both a pragma and a pragma namespace\"\n msgstr \"\"\n \n-#: directives.c:1051\n+#: directives.c:1114\n #, c-format\n msgid \"#pragma %s %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1054\n+#: directives.c:1117\n #, c-format\n msgid \"#pragma %s is already registered\"\n msgstr \"\"\n \n-#: directives.c:1254\n+#: directives.c:1317\n msgid \"#pragma once in main file\"\n msgstr \"\"\n \n-#: directives.c:1277\n+#: directives.c:1340\n msgid \"invalid #pragma GCC poison directive\"\n msgstr \"\"\n \n-#: directives.c:1286\n+#: directives.c:1349\n #, c-format\n msgid \"poisoning existing macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: directives.c:1307\n+#: directives.c:1370\n msgid \"#pragma system_header ignored outside include file\"\n msgstr \"\"\n \n-#: directives.c:1331\n+#: directives.c:1394\n #, c-format\n msgid \"cannot find source file %s\"\n msgstr \"\"\n \n-#: directives.c:1335\n+#: directives.c:1398\n #, c-format\n msgid \"current file is older than %s\"\n msgstr \"\"\n \n-#: directives.c:1449\n+#: directives.c:1512\n msgid \"_Pragma takes a parenthesized string literal\"\n msgstr \"\"\n \n-#: directives.c:1550\n+#: directives.c:1613\n msgid \"#else without #if\"\n msgstr \"\"\n \n-#: directives.c:1555\n+#: directives.c:1618\n msgid \"#else after #else\"\n msgstr \"\"\n \n-#: directives.c:1557 directives.c:1590\n+#: directives.c:1620\n+#: directives.c:1653\n msgid \"the conditional began here\"\n msgstr \"\"\n \n-#: directives.c:1583\n+#: directives.c:1646\n msgid \"#elif without #if\"\n msgstr \"\"\n \n-#: directives.c:1588\n+#: directives.c:1651\n msgid \"#elif after #else\"\n msgstr \"\"\n \n-#: directives.c:1618\n+#: directives.c:1681\n msgid \"#endif without #if\"\n msgstr \"\"\n \n-#: directives.c:1695\n+#: directives.c:1758\n msgid \"missing '(' after predicate\"\n msgstr \"\"\n \n-#: directives.c:1710\n+#: directives.c:1773\n msgid \"missing ')' to complete answer\"\n msgstr \"\"\n \n-#: directives.c:1730\n+#: directives.c:1793\n msgid \"predicate's answer is empty\"\n msgstr \"\"\n \n-#: directives.c:1757\n+#: directives.c:1820\n msgid \"assertion without predicate\"\n msgstr \"\"\n \n-#: directives.c:1759\n+#: directives.c:1822\n msgid \"predicate must be an identifier\"\n msgstr \"\"\n \n-#: directives.c:1845\n+#: directives.c:1908\n #, c-format\n msgid \"\\\"%s\\\" re-asserted\"\n msgstr \"\"\n \n-#: directives.c:2069\n+#: directives.c:2132\n #, c-format\n msgid \"unterminated #%s\"\n msgstr \"\"\n@@ -373,11 +380,11 @@ msgstr \"\"\n msgid \"error: \"\n msgstr \"\"\n \n-#: errors.c:181\n+#: errors.c:186\n msgid \"stdout\"\n msgstr \"\"\n \n-#: errors.c:183\n+#: errors.c:188\n #, c-format\n msgid \"%s: %s\"\n msgstr \"\"\n@@ -547,70 +554,70 @@ msgstr \"\"\n msgid \"NULL directory in find_file\"\n msgstr \"\"\n \n-#: files.c:455\n+#: files.c:440\n msgid \"one or more PCH files were found, but they were invalid\"\n msgstr \"\"\n \n-#: files.c:458\n+#: files.c:443\n msgid \"use -Winvalid-pch for more information\"\n msgstr \"\"\n \n-#: files.c:523\n+#: files.c:501\n #, c-format\n msgid \"%s is a block device\"\n msgstr \"\"\n \n-#: files.c:540\n+#: files.c:518\n #, c-format\n msgid \"%s is too large\"\n msgstr \"\"\n \n-#: files.c:575\n+#: files.c:553\n #, c-format\n msgid \"%s is shorter than expected\"\n msgstr \"\"\n \n-#: files.c:804\n+#: files.c:782\n #, c-format\n msgid \"no include path in which to search for %s\"\n msgstr \"\"\n \n-#: files.c:1097\n+#: files.c:1071\n msgid \"Multiple include guards may be useful for:\\n\"\n msgstr \"\"\n \n-#: init.c:394\n+#: init.c:400\n msgid \"cppchar_t must be an unsigned type\"\n msgstr \"\"\n \n-#: init.c:398\n+#: init.c:404\n #, c-format\n msgid \"\"\n \"preprocessor arithmetic has maximum precision of %lu bits; target requires %\"\n \"lu bits\"\n msgstr \"\"\n \n-#: init.c:405\n+#: init.c:411\n msgid \"CPP arithmetic must be at least as precise as a target int\"\n msgstr \"\"\n \n-#: init.c:408\n+#: init.c:414\n msgid \"target char is less than 8 bits wide\"\n msgstr \"\"\n \n-#: init.c:412\n+#: init.c:418\n msgid \"target wchar_t is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:416\n+#: init.c:422\n msgid \"target int is narrower than target char\"\n msgstr \"\"\n \n-#: init.c:421\n+#: init.c:427\n msgid \"CPP half-integer narrower than CPP character\"\n msgstr \"\"\n \n-#: init.c:425\n+#: init.c:431\n #, c-format\n msgid \"\"\n \"CPP on this host cannot handle wide character constants over %lu bits, but \"\n@@ -675,7 +682,8 @@ msgstr \"\"\n msgid \"no newline at end of file\"\n msgstr \"\"\n \n-#: lex.c:990 traditional.c:162\n+#: lex.c:990\n+#: traditional.c:162\n msgid \"unterminated comment\"\n msgstr \"\"\n \n@@ -722,106 +730,107 @@ msgstr \"\"\n msgid \"could not determine date and time\"\n msgstr \"\"\n \n-#: macro.c:400\n+#: macro.c:391\n msgid \"invalid string literal, ignoring final '\\\\'\"\n msgstr \"\"\n \n-#: macro.c:483\n+#: macro.c:474\n #, c-format\n msgid \"pasting \\\"%s\\\" and \\\"%s\\\" does not give a valid preprocessing token\"\n msgstr \"\"\n \n-#: macro.c:521\n+#: macro.c:512\n msgid \"ISO C99 requires rest arguments to be used\"\n msgstr \"\"\n \n-#: macro.c:526\n+#: macro.c:517\n #, c-format\n msgid \"macro \\\"%s\\\" requires %u arguments, but only %u given\"\n msgstr \"\"\n \n-#: macro.c:531\n+#: macro.c:522\n #, c-format\n msgid \"macro \\\"%s\\\" passed %u arguments, but takes just %u\"\n msgstr \"\"\n \n-#: macro.c:642 traditional.c:675\n+#: macro.c:633\n+#: traditional.c:675\n #, c-format\n msgid \"unterminated argument list invoking macro \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:745\n+#: macro.c:736\n #, c-format\n msgid \"function-like macro \\\"%s\\\" must be used with arguments in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1261\n+#: macro.c:1252\n #, c-format\n msgid \"duplicate macro parameter \\\"%s\\\"\"\n msgstr \"\"\n \n-#: macro.c:1307\n+#: macro.c:1298\n #, c-format\n msgid \"\\\"%s\\\" may not appear in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1315\n+#: macro.c:1306\n msgid \"macro parameters must be comma-separated\"\n msgstr \"\"\n \n-#: macro.c:1332\n+#: macro.c:1323\n msgid \"parameter name missing\"\n msgstr \"\"\n \n-#: macro.c:1349\n+#: macro.c:1340\n msgid \"anonymous variadic macros were introduced in C99\"\n msgstr \"\"\n \n-#: macro.c:1354\n+#: macro.c:1345\n msgid \"ISO C does not permit named variadic macros\"\n msgstr \"\"\n \n-#: macro.c:1363\n+#: macro.c:1354\n msgid \"missing ')' in macro parameter list\"\n msgstr \"\"\n \n-#: macro.c:1441\n+#: macro.c:1432\n msgid \"ISO C99 requires whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1465\n+#: macro.c:1456\n msgid \"missing whitespace after the macro name\"\n msgstr \"\"\n \n-#: macro.c:1495\n+#: macro.c:1486\n msgid \"'#' is not followed by a macro parameter\"\n msgstr \"\"\n \n-#: macro.c:1514\n+#: macro.c:1505\n msgid \"'##' cannot appear at either end of a macro expansion\"\n msgstr \"\"\n \n-#: macro.c:1612\n+#: macro.c:1603\n #, c-format\n msgid \"\\\"%s\\\" redefined\"\n msgstr \"\"\n \n-#: macro.c:1617\n+#: macro.c:1608\n msgid \"this is the location of the previous definition\"\n msgstr \"\"\n \n-#: macro.c:1667\n+#: macro.c:1658\n #, c-format\n msgid \"macro argument \\\"%s\\\" would be stringified in traditional C\"\n msgstr \"\"\n \n-#: macro.c:1690\n+#: macro.c:1681\n #, c-format\n msgid \"invalid hash type %d in cpp_macro_definition\"\n msgstr \"\"\n \n-#: pch.c:84 pch.c:332 pch.c:354\n-#: pch.c:360\n+#: pch.c:84 pch.c:332\n+#: pch.c:354 pch.c:360\n msgid \"while writing precompiled header\"\n msgstr \"\"\n "}]}