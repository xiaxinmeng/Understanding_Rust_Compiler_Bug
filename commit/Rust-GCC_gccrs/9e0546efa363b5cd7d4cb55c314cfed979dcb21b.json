{"sha": "9e0546efa363b5cd7d4cb55c314cfed979dcb21b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwNTQ2ZWZhMzYzYjVjZDdkNGNiNTVjMzE0Y2ZlZDk3OWRjYjIxYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-05T10:20:38Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-05T10:20:38Z"}, "message": "lto-symtab.c (lto_symtab_resolve_can_prevail_p): Alias of variable with body can prevail.\n\n\t* lto-symtab.c (lto_symtab_resolve_can_prevail_p): Alias of variable\n\twith body can prevail.\n\n\t* lto-symtab.c (lto_symtab_merge_decls_1): Prefer declarations with\n\tsize.\n\nFrom-SVN: r159061", "tree": {"sha": "23be9470e7d518f344bb998e7a7e5dfa9aaf2fb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/23be9470e7d518f344bb998e7a7e5dfa9aaf2fb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e0546efa363b5cd7d4cb55c314cfed979dcb21b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e0546efa363b5cd7d4cb55c314cfed979dcb21b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e0546efa363b5cd7d4cb55c314cfed979dcb21b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e0546efa363b5cd7d4cb55c314cfed979dcb21b/comments", "author": null, "committer": null, "parents": [{"sha": "0277fabf2b92ed6e94812a8bd0dba50fd0214836", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0277fabf2b92ed6e94812a8bd0dba50fd0214836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0277fabf2b92ed6e94812a8bd0dba50fd0214836"}], "stats": {"total": 36, "additions": 32, "deletions": 4}, "files": [{"sha": "7f2f32a074bd0ed027dc589a561309e1c690298d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0546efa363b5cd7d4cb55c314cfed979dcb21b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0546efa363b5cd7d4cb55c314cfed979dcb21b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e0546efa363b5cd7d4cb55c314cfed979dcb21b", "patch": "@@ -1,3 +1,13 @@\n+2010-05-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-symtab.c (lto_symtab_resolve_can_prevail_p): Alias of variable\n+\twith body can prevail.\n+\n+2010-05-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* lto-symtab.c (lto_symtab_merge_decls_1): Prefer declarations with\n+\tsize.\n+\n 2010-05-05  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n \t* Makefile.in (build/gengtype.o): Add $(HASHTAB_H) to"}, {"sha": "c9ec62e45faff1b59f6c905800aad086ccbf5325", "filename": "gcc/lto-symtab.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0546efa363b5cd7d4cb55c314cfed979dcb21b/gcc%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0546efa363b5cd7d4cb55c314cfed979dcb21b/gcc%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-symtab.c?ref=9e0546efa363b5cd7d4cb55c314cfed979dcb21b", "patch": "@@ -416,7 +416,13 @@ lto_symtab_resolve_can_prevail_p (lto_symtab_entry_t e)\n \n   /* A variable should have a size.  */\n   else if (TREE_CODE (e->decl) == VAR_DECL)\n-    return (e->vnode && e->vnode->finalized);\n+    {\n+      if (!e->vnode)\n+\treturn false;\n+      if (e->vnode->finalized)\n+\treturn true;\n+      return e->vnode->alias && e->vnode->extra_name->finalized;\n+    }\n \n   gcc_unreachable ();\n }\n@@ -590,10 +596,22 @@ lto_symtab_merge_decls_1 (void **slot, void *data ATTRIBUTE_UNUSED)\n \twhile (!prevailing->node\n \t       && prevailing->next)\n \t  prevailing = prevailing->next;\n+      /* For variables chose with a priority variant with vnode\n+\t attached (i.e. from unit where external declaration of\n+\t variable is actually used).\n+\t When there are multiple variants, chose one with size.\n+\t This is needed for C++ typeinfos, for example in\n+\t lto/20081204-1 there are typeifos in both units, just\n+\t one of them do have size.  */\n       if (TREE_CODE (prevailing->decl) == VAR_DECL)\n-\twhile (!prevailing->vnode\n-\t       && prevailing->next)\n-\t  prevailing = prevailing->next;\n+\t{\n+\t  for (e = prevailing->next; e; e = e->next)\n+\t    if ((!prevailing->vnode && e->vnode)\n+\t\t|| ((prevailing->vnode != NULL) == (e->vnode != NULL)\n+\t\t    && !COMPLETE_TYPE_P (TREE_TYPE (prevailing->decl))\n+\t\t    && COMPLETE_TYPE_P (TREE_TYPE (e->decl))))\n+\t      prevailing = e;\n+\t}\n     }\n \n   /* Move it first in the list.  */"}]}