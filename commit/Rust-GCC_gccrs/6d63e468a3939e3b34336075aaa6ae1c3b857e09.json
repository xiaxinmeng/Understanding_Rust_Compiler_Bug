{"sha": "6d63e468a3939e3b34336075aaa6ae1c3b857e09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ2M2U0NjhhMzkzOWUzYjM0MzM2MDc1YWFhNmFlMWMzYjg1N2UwOQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T21:39:11Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2011-11-03T21:39:11Z"}, "message": "trans.h (struct gfc_ss_info, [...]): Rename the former to the latter.\n\n\t* trans.h (struct gfc_ss_info, struct gfc_array_info):\n\tRename the former to the latter.\n\t* trans-array.c (gfc_get_array_ss, gfc_trans_allocate_array_storage,\n\tget_array_ref_dim, gfc_trans_create_temp_array,\n\tgfc_trans_constant_array_constructor, gfc_set_vector_loop_bounds,\n\tgfc_conv_array_index_offset, gfc_conv_scalarized_array_ref,\n\tadd_array_offset, gfc_trans_preloop_setup, gfc_conv_section_startstride,\n\tgfc_conv_ss_startstride, gfc_conv_loop_setup, transposed_dims,\n\tgfc_conv_expr_descriptor): Update all uses.\n\t* trans-expr.c (gfc_conv_subref_array_arg, gfc_conv_procedure_call):\n\tDitto.\n\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer,\n\twalk_inline_intrinsic_transpose): Ditto.\n\t* trans-stmt.c (gfc_conv_elemental_dependencies,\n\tgfc_trans_pointer_assign_need_temp): Ditto.\n\nFrom-SVN: r180864", "tree": {"sha": "8307d3fc54a54fe1a01339b61d69a638d254aece", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8307d3fc54a54fe1a01339b61d69a638d254aece"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d63e468a3939e3b34336075aaa6ae1c3b857e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d63e468a3939e3b34336075aaa6ae1c3b857e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d63e468a3939e3b34336075aaa6ae1c3b857e09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d63e468a3939e3b34336075aaa6ae1c3b857e09/comments", "author": null, "committer": null, "parents": [{"sha": "a7fb208d57c48b3e84ee2e1eaceda43c5ce40de6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7fb208d57c48b3e84ee2e1eaceda43c5ce40de6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7fb208d57c48b3e84ee2e1eaceda43c5ce40de6"}], "stats": {"total": 88, "additions": 54, "deletions": 34}, "files": [{"sha": "1d0c67b8bd358bcb5b1c2351ded4908d5033e398", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6d63e468a3939e3b34336075aaa6ae1c3b857e09", "patch": "@@ -1,3 +1,21 @@\n+2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans.h (struct gfc_ss_info, struct gfc_array_info):\n+\tRename the former to the latter.\n+\t* trans-array.c (gfc_get_array_ss, gfc_trans_allocate_array_storage,\n+\tget_array_ref_dim, gfc_trans_create_temp_array,\n+\tgfc_trans_constant_array_constructor, gfc_set_vector_loop_bounds,\n+\tgfc_conv_array_index_offset, gfc_conv_scalarized_array_ref,\n+\tadd_array_offset, gfc_trans_preloop_setup, gfc_conv_section_startstride,\n+\tgfc_conv_ss_startstride, gfc_conv_loop_setup, transposed_dims,\n+\tgfc_conv_expr_descriptor): Update all uses.\n+\t* trans-expr.c (gfc_conv_subref_array_arg, gfc_conv_procedure_call):\n+\tDitto.\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer,\n+\twalk_inline_intrinsic_transpose): Ditto.\n+\t* trans-stmt.c (gfc_conv_elemental_dependencies,\n+\tgfc_trans_pointer_assign_need_temp): Ditto.\n+\n 2011-11-03  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* trans-array.c (dim_ok, transposed_dims): Rename the former to the"}, {"sha": "2e1a8d488854982938455a696164f84202ec09f2", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=6d63e468a3939e3b34336075aaa6ae1c3b857e09", "patch": "@@ -517,7 +517,7 @@ gfc_ss *\n gfc_get_array_ss (gfc_ss *next, gfc_expr *expr, int dimen, gfc_ss_type type)\n {\n   gfc_ss *ss;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   int i;\n \n   ss = gfc_get_ss ();\n@@ -685,7 +685,7 @@ gfc_set_loop_bounds_from_array_spec (gfc_interface_mapping * mapping,\n \n static void\n gfc_trans_allocate_array_storage (stmtblock_t * pre, stmtblock_t * post,\n-\t\t\t\t  gfc_ss_info * info, tree size, tree nelem,\n+\t\t\t\t  gfc_array_info * info, tree size, tree nelem,\n \t\t\t\t  tree initial, bool dynamic, bool dealloc)\n {\n   tree tmp;\n@@ -810,7 +810,7 @@ static int\n get_array_ref_dim (gfc_ss *ss, int loop_dim)\n {\n   int n, array_dim, array_ref_dim;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n \n   info = &ss->data.info;\n \n@@ -845,7 +845,7 @@ gfc_trans_create_temp_array (stmtblock_t * pre, stmtblock_t * post,\n \t\t\t     tree eltype, tree initial, bool dynamic,\n \t\t\t     bool dealloc, bool callee_alloc, locus * where)\n {\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   tree from[GFC_MAX_DIMENSIONS], to[GFC_MAX_DIMENSIONS];\n   tree type;\n   tree desc;\n@@ -1857,7 +1857,7 @@ gfc_build_constant_array_constructor (gfc_expr * expr, tree type)\n static void\n trans_constant_array_constructor (gfc_ss * ss, tree type)\n {\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   tree tmp;\n   int i;\n \n@@ -2099,7 +2099,7 @@ gfc_trans_array_constructor (gfc_loopinfo * loop, gfc_ss * ss, locus * where)\n static void\n set_vector_loop_bounds (gfc_loopinfo * loop, gfc_ss * ss)\n {\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   gfc_se se;\n   tree tmp;\n   tree desc;\n@@ -2516,7 +2516,7 @@ static tree\n conv_array_index_offset (gfc_se * se, gfc_ss * ss, int dim, int i,\n \t\t\t gfc_array_ref * ar, tree stride)\n {\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   tree index;\n   tree desc;\n   tree data;\n@@ -2629,7 +2629,7 @@ conv_array_index_offset (gfc_se * se, gfc_ss * ss, int dim, int i,\n static void\n gfc_conv_scalarized_array_ref (gfc_se * se, gfc_array_ref * ar)\n {\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   tree decl = NULL_TREE;\n   tree index;\n   tree tmp;\n@@ -2827,7 +2827,7 @@ add_array_offset (stmtblock_t *pblock, gfc_loopinfo *loop, gfc_ss *ss,\n \t\t  gfc_array_ref *ar, int array_dim, int loop_dim)\n {\n   gfc_se se;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   tree stride, index;\n \n   info = &ss->data.info;\n@@ -2854,7 +2854,7 @@ gfc_trans_preloop_setup (gfc_loopinfo * loop, int dim, int flag,\n \t\t\t stmtblock_t * pblock)\n {\n   tree stride;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   gfc_ss *ss;\n   gfc_array_ref *ar;\n   int i;\n@@ -3205,7 +3205,7 @@ gfc_conv_section_startstride (gfc_loopinfo * loop, gfc_ss * ss, int dim)\n   gfc_expr *stride = NULL;\n   tree desc;\n   gfc_se se;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   gfc_array_ref *ar;\n \n   gcc_assert (ss->type == GFC_SS_SECTION);\n@@ -3356,7 +3356,7 @@ gfc_conv_ss_startstride (gfc_loopinfo * loop)\n       tree end;\n       tree size[GFC_MAX_DIMENSIONS];\n       tree stride_pos, stride_neg, non_zerosized, tmp2, tmp3;\n-      gfc_ss_info *info;\n+      gfc_array_info *info;\n       char *msg;\n       int dim;\n \n@@ -3851,8 +3851,8 @@ void\n gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n {\n   int n, dim, spec_dim;\n-  gfc_ss_info *info;\n-  gfc_ss_info *specinfo;\n+  gfc_array_info *info;\n+  gfc_array_info *specinfo;\n   gfc_ss *ss;\n   tree tmp;\n   gfc_ss *loopspec[GFC_MAX_DIMENSIONS];\n@@ -4061,7 +4061,7 @@ gfc_conv_loop_setup (gfc_loopinfo * loop, locus * where)\n \n       tmp = loop->temp_ss->data.temp.type;\n       n = loop->temp_ss->data.temp.dimen;\n-      memset (&loop->temp_ss->data.info, 0, sizeof (gfc_ss_info));\n+      memset (&loop->temp_ss->data.info, 0, sizeof (gfc_array_info));\n       loop->temp_ss->type = GFC_SS_SECTION;\n       loop->temp_ss->data.info.dimen = n;\n \n@@ -5661,7 +5661,7 @@ get_array_charlen (gfc_expr *expr, gfc_se *se)\n static bool\n transposed_dims (gfc_ss *ss)\n {\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   int n;\n \n   info = &ss->data.info;\n@@ -5704,7 +5704,7 @@ void\n gfc_conv_expr_descriptor (gfc_se * se, gfc_expr * expr, gfc_ss * ss)\n {\n   gfc_loopinfo loop;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   int need_tmp;\n   int n;\n   tree tmp;"}, {"sha": "636c0b011ede8541c8eb663c36996ade23f57b04", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=6d63e468a3939e3b34336075aaa6ae1c3b857e09", "patch": "@@ -2359,7 +2359,7 @@ gfc_conv_subref_array_arg (gfc_se * parmse, gfc_expr * expr, int g77,\n   gfc_ss *rss;\n   gfc_loopinfo loop;\n   gfc_loopinfo loop2;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   tree offset;\n   tree tmp_index;\n   tree tmp;\n@@ -2854,7 +2854,7 @@ gfc_conv_procedure_call (gfc_se * se, gfc_symbol * sym,\n   tree fntype;\n   gfc_se parmse;\n   gfc_ss *argss;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   int byref;\n   int parm_kind;\n   tree type;"}, {"sha": "47313e65698ca3910f36b66f54db2aca7803ae99", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=6d63e468a3939e3b34336075aaa6ae1c3b857e09", "patch": "@@ -5269,7 +5269,7 @@ gfc_conv_intrinsic_transfer (gfc_se * se, gfc_expr * expr)\n   gfc_actual_arglist *arg;\n   gfc_se argse;\n   gfc_ss *ss;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   stmtblock_t block;\n   int n;\n   bool scalar_mold;\n@@ -6757,7 +6757,7 @@ walk_inline_intrinsic_transpose (gfc_ss *ss, gfc_expr *expr)\n \t  && tmp_ss->type != GFC_SS_REFERENCE)\n \t{\n \t  int tmp_dim;\n-\t  gfc_ss_info *info;\n+\t  gfc_array_info *info;\n \n \t  info = &tmp_ss->data.info;\n \t  gcc_assert (info->dimen == 2);"}, {"sha": "aa7591b8d4494e2ac0a8b27f172aaaa85cc6f753", "filename": "gcc/fortran/trans-stmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans-stmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans-stmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-stmt.c?ref=6d63e468a3939e3b34336075aaa6ae1c3b857e09", "patch": "@@ -193,7 +193,7 @@ gfc_conv_elemental_dependencies (gfc_se * se, gfc_se * loopse,\n   gfc_loopinfo tmp_loop;\n   gfc_se parmse;\n   gfc_ss *ss;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   gfc_symbol *fsym;\n   gfc_ref *ref;\n   int n;\n@@ -3306,7 +3306,7 @@ gfc_trans_pointer_assign_need_temp (gfc_expr * expr1, gfc_expr * expr2,\n   gfc_ss *lss, *rss;\n   gfc_se lse;\n   gfc_se rse;\n-  gfc_ss_info *info;\n+  gfc_array_info *info;\n   gfc_loopinfo loop;\n   tree desc;\n   tree parm;"}, {"sha": "6f9f6c8a76808860664cdd0fc339e831fa8a1cb7", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d63e468a3939e3b34336075aaa6ae1c3b857e09/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=6d63e468a3939e3b34336075aaa6ae1c3b857e09", "patch": "@@ -108,15 +108,10 @@ typedef enum\n gfc_coarray_type;\n \n \n-/* Scalarization State chain.  Created by walking an expression tree before\n-   creating the scalarization loops. Then passed as part of a gfc_se structure\n-   to translate the expression inside the loop.  Note that these chains are\n-   terminated by gfc_se_terminator, not NULL.  A NULL pointer in a gfc_se\n-   indicates to gfc_conv_* that this is a scalar expression.\n-   Note that some member arrays correspond to scalarizer rank and others\n-   are the variable rank.  */\n+/* The array-specific scalarization informations.  The array members of\n+   this struct are indexed by actual array index, and thus can be sparse.  */\n \n-typedef struct gfc_ss_info\n+typedef struct gfc_array_info\n {\n   int dimen;\n   /* The ref that holds information on this section.  */\n@@ -144,7 +139,7 @@ typedef struct gfc_ss_info\n      actual_dim = dim[loop_dim]  */\n   int dim[GFC_MAX_DIMENSIONS];\n }\n-gfc_ss_info;\n+gfc_array_info;\n \n typedef enum\n {\n@@ -190,8 +185,15 @@ typedef enum\n }\n gfc_ss_type;\n \n-/* SS structures can only belong to a single loopinfo.  They must be added\n+\n+/* Scalarization State chain.  Created by walking an expression tree before\n+   creating the scalarization loops.  Then passed as part of a gfc_se structure\n+   to translate the expression inside the loop.  Note that these chains are\n+   terminated by gfc_ss_terminator, not NULL.  A NULL pointer in a gfc_se\n+   indicates to gfc_conv_* that this is a scalar expression.\n+   SS structures can only belong to a single loopinfo.  They must be added\n    otherwise they will not get freed.  */\n+\n typedef struct gfc_ss\n {\n   gfc_ss_type type;\n@@ -217,7 +219,7 @@ typedef struct gfc_ss\n     }\n     temp;\n     /* All other types.  */\n-    gfc_ss_info info;\n+    gfc_array_info info;\n   }\n   data;\n "}]}