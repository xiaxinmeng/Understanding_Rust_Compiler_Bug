{"sha": "091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDkxYmZmYmE5MGUwYzcwZjc2ZWUxMzhmOTIwMjRhNmYzYjdhYTJiYw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-08-31T02:50:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-08-31T02:50:08Z"}, "message": "friend.c (make_friend_class): Handle template template parameters.\n\n\t* friend.c (make_friend_class): Handle template template parameters.\n\t* parser.c (cp_parser_template_declaration_after_export): Likewise.\n\t* pt.c (tsubst_friend_class): Likewise.\n\t(instantiate_class_template_1): Likewise\n\t* decl.c (check_elaborated_type_specifier): Likewise.\n\t(lookup_and_check_tag): Likewise.\n\nFrom-SVN: r190828", "tree": {"sha": "424314c23f47f26c9a20d19dc68f81690672bb2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/424314c23f47f26c9a20d19dc68f81690672bb2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5cb25c9c7b6581f62151741e3ceb2c5e57def30e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cb25c9c7b6581f62151741e3ceb2c5e57def30e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cb25c9c7b6581f62151741e3ceb2c5e57def30e"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "fc49329ed0d1e4979e5563db1d783265a32a6cc6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "patch": "@@ -1,5 +1,12 @@\n 2012-08-30  Jason Merrill  <jason@redhat.com>\n \n+\t* friend.c (make_friend_class): Handle template template parameters.\n+\t* parser.c (cp_parser_template_declaration_after_export): Likewise.\n+\t* pt.c (tsubst_friend_class): Likewise.\n+\t(instantiate_class_template_1): Likewise\n+\t* decl.c (check_elaborated_type_specifier): Likewise.\n+\t(lookup_and_check_tag): Likewise.\n+\n \t* pt.c (get_class_bindings): Call coerce_template_parms.  Add\n \tmain_tmpl parameter.\n \t(more_specialized_class): Add main_tmpl parameter."}, {"sha": "c909dea177580b67785c819a78e29112359114f7", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "patch": "@@ -11484,9 +11484,10 @@ check_elaborated_type_specifier (enum tag_types tag_code,\n \t     type, tag_name (tag_code));\n       return error_mark_node;\n     }\n-  /* Accept bound template template parameters.  */\n+  /* Accept template template parameters.  */\n   else if (allow_template_p\n-\t   && TREE_CODE (type) == BOUND_TEMPLATE_TEMPLATE_PARM)\n+\t   && (TREE_CODE (type) == BOUND_TEMPLATE_TEMPLATE_PARM\n+\t       || TREE_CODE (type) == TEMPLATE_TEMPLATE_PARM))\n     ;\n   /*   [dcl.type.elab]\n \n@@ -11574,7 +11575,9 @@ lookup_and_check_tag (enum tag_types tag_code, tree name,\n   else\n     decl = lookup_type_scope (name, scope);\n \n-  if (decl && DECL_CLASS_TEMPLATE_P (decl))\n+  if (decl\n+      && (DECL_CLASS_TEMPLATE_P (decl)\n+\t  || DECL_TEMPLATE_TEMPLATE_PARM_P (decl)))\n     decl = DECL_TEMPLATE_RESULT (decl);\n \n   if (decl && TREE_CODE (decl) == TYPE_DECL)\n@@ -11679,6 +11682,9 @@ xref_tag_1 (enum tag_types tag_code, tree name,\n       && template_class_depth (current_class_type)\n       && template_header_p)\n     {\n+      if (TREE_CODE (t) == TEMPLATE_TEMPLATE_PARM)\n+\treturn t;\n+\n       /* Since SCOPE is not TS_CURRENT, we are not looking at a\n \t definition of this tag.  Since, in addition, we are currently\n \t processing a (member) template declaration of a template"}, {"sha": "d4548ff7ad6cb3de5dca9c57c974b278ab8b999c", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "patch": "@@ -224,7 +224,8 @@ make_friend_class (tree type, tree friend_type, bool complain)\n   int class_template_depth = template_class_depth (type);\n   int friend_depth = processing_template_decl - class_template_depth;\n \n-  if (! MAYBE_CLASS_TYPE_P (friend_type))\n+  if (! MAYBE_CLASS_TYPE_P (friend_type)\n+      && TREE_CODE (friend_type) != TEMPLATE_TEMPLATE_PARM)\n     {\n       /* N1791: If the type specifier in a friend declaration designates a\n \t (possibly cv-qualified) class type, that class is declared as a\n@@ -349,6 +350,8 @@ make_friend_class (tree type, tree friend_type, bool complain)\n       error (\"template parameter type %qT declared %<friend%>\", friend_type);\n       return;\n     }\n+  else if (TREE_CODE (friend_type) == TEMPLATE_TEMPLATE_PARM)\n+    friend_type = TYPE_NAME (friend_type);\n   else if (!CLASSTYPE_TEMPLATE_INFO (friend_type))\n     {\n       /* template <class T> friend class A; where A is not a template */"}, {"sha": "091a96728ad17b02e6a6fbe51b5fe94c8ba944f6", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "patch": "@@ -21240,7 +21240,9 @@ cp_parser_template_declaration_after_export (cp_parser* parser, bool member_p)\n \n \t  decl = finish_member_template_decl (decl);\n \t}\n-      else if (friend_p && decl && TREE_CODE (decl) == TYPE_DECL)\n+      else if (friend_p && decl\n+\t       && (TREE_CODE (decl) == TYPE_DECL\n+\t\t   || DECL_TYPE_TEMPLATE_P (decl)))\n \tmake_friend_class (current_class_type, TREE_TYPE (decl),\n \t\t\t   /*complain=*/true);\n     }"}, {"sha": "6506a6719d8722e67626b724460b9ce3bbfc5110", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/091bffba90e0c70f76ee138f92024a6f3b7aa2bc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=091bffba90e0c70f76ee138f92024a6f3b7aa2bc", "patch": "@@ -8152,6 +8152,12 @@ tsubst_friend_class (tree friend_tmpl, tree args)\n   tree tmpl;\n   tree context;\n \n+  if (DECL_TEMPLATE_TEMPLATE_PARM_P (friend_tmpl))\n+    {\n+      tree t = tsubst (TREE_TYPE (friend_tmpl), args, tf_none, NULL_TREE);\n+      return TREE_TYPE (t);\n+    }\n+\n   context = CP_DECL_CONTEXT (friend_tmpl);\n \n   if (context != global_namespace)\n@@ -8736,7 +8742,8 @@ instantiate_class_template_1 (tree type)\n \t}\n       else\n \t{\n-\t  if (TYPE_P (t) || DECL_CLASS_TEMPLATE_P (t))\n+\t  if (TYPE_P (t) || DECL_CLASS_TEMPLATE_P (t)\n+\t      || DECL_TEMPLATE_TEMPLATE_PARM_P (t))\n \t    {\n \t      /* Build new CLASSTYPE_FRIEND_CLASSES.  */\n "}]}