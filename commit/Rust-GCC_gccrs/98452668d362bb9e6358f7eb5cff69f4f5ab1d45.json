{"sha": "98452668d362bb9e6358f7eb5cff69f4f5ab1d45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg0NTI2NjhkMzYyYmI5ZTYzNThmN2ViNWNmZjY5ZjRmNWFiMWQ0NQ==", "commit": {"author": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2020-05-19T19:33:20Z"}, "committer": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2020-05-19T19:43:57Z"}, "message": "[aarch64] PR target/94591: Don't generate invalid REV64 insns\n\nThis fixes PR94591. The problem was the function aarch64_evpc_rev_local()\nmatching vector permutations that were not reversals. In particular, prior to\nthis patch, this function matched the identity permutation which led to\ngenerating bogus REV64 insns which were rejected by the assembler.\n\ngcc/\n\tPR target/94591\n\t* config/aarch64/aarch64.c (aarch64_evpc_rev_local): Don't match\n\tidentity permutation.\n\ngcc/testsuite/\n\tPR target/94591\n\t* gcc.c-torture/execute/pr94591.c: New test.", "tree": {"sha": "597495ab1d146c96945da3edd2dc3a4d80d49ce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/597495ab1d146c96945da3edd2dc3a4d80d49ce6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98452668d362bb9e6358f7eb5cff69f4f5ab1d45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98452668d362bb9e6358f7eb5cff69f4f5ab1d45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98452668d362bb9e6358f7eb5cff69f4f5ab1d45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/comments", "author": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25c284f14881eeb68b9ddf16c6760b9535d824a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25c284f14881eeb68b9ddf16c6760b9535d824a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25c284f14881eeb68b9ddf16c6760b9535d824a8"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "9eee988e12cd4bf7e36afdb2bb6f132c43df2766", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98452668d362bb9e6358f7eb5cff69f4f5ab1d45", "patch": "@@ -1,3 +1,9 @@\n+2020-05-19  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/94591\n+\t* config/aarch64/aarch64.c (aarch64_evpc_rev_local): Don't match\n+\tidentity permutation.\n+\n 2020-05-19  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n \n \t* doc/sourcebuild.texi: Document new short_eq_int, ptr_eq_short,"}, {"sha": "79c016f4dc37c5cc02934dddee20db3a4fa9e8df", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=98452668d362bb9e6358f7eb5cff69f4f5ab1d45", "patch": "@@ -20191,7 +20191,8 @@ aarch64_evpc_rev_local (struct expand_vec_perm_d *d)\n \n   if (d->vec_flags == VEC_SVE_PRED\n       || !d->one_vector_p\n-      || !d->perm[0].is_constant (&diff))\n+      || !d->perm[0].is_constant (&diff)\n+      || !diff)\n     return false;\n \n   size = (diff + 1) * GET_MODE_UNIT_SIZE (d->vmode);"}, {"sha": "48671f1105a2baa3c8e03db7b2b1e38f159c445d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98452668d362bb9e6358f7eb5cff69f4f5ab1d45", "patch": "@@ -1,3 +1,8 @@\n+2020-05-19  Alex Coplan  <alex.coplan@arm.com>\n+\n+\tPR target/94591\n+\t* gcc.c-torture/execute/pr94591.c: New test.\n+\n 2020-05-19  Nathan Sidwell  <nathan@acm.org>\n \n \t* c-c++-common/raw-string-14.c: Adjust errors."}, {"sha": "42271ad8bce9e71ad99823b306b955102deb0b71", "filename": "gcc/testsuite/gcc.c-torture/execute/pr94591.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94591.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98452668d362bb9e6358f7eb5cff69f4f5ab1d45/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94591.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr94591.c?ref=98452668d362bb9e6358f7eb5cff69f4f5ab1d45", "patch": "@@ -0,0 +1,32 @@\n+typedef unsigned __attribute__((__vector_size__(8))) V2SI_u;\n+typedef int __attribute__((__vector_size__(8))) V2SI_d;\n+\n+typedef unsigned long __attribute__((__vector_size__(16))) V2DI_u;\n+typedef long __attribute__((__vector_size__(16))) V2DI_d;\n+\n+void id_V2SI(V2SI_d *v)\n+{\n+  *v = __builtin_shuffle(*v, (V2SI_d)(V2SI_u) { 0, 1 });\n+}\n+\n+void id_V2DI(V2DI_d *v)\n+{\n+  *v = __builtin_shuffle(*v, (V2DI_d)(V2DI_u) { 0, 1 });\n+}\n+\n+extern void abort(void);\n+\n+int main(void)\n+{\n+  V2SI_d si = { 35, 42 };\n+  id_V2SI(&si);\n+\n+  if (si[0] != 35 || si[1] != 42)\n+    abort();\n+\n+  V2DI_d di = { 63, 38 };\n+  id_V2DI(&di);\n+\n+  if (di[0] != 63 || di[1] != 38)\n+    abort();\n+}"}]}