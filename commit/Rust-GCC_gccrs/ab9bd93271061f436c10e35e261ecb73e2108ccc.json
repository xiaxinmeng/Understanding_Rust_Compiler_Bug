{"sha": "ab9bd93271061f436c10e35e261ecb73e2108ccc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5YmQ5MzI3MTA2MWY0MzZjMTBlMzVlMjYxZWNiNzNlMjEwOGNjYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-16T13:37:17Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-12-16T13:37:17Z"}, "message": "libstdc++: Fix errors from Library Fundamentals TS headers in C++11 [PR 98319]\n\nCurrently the <experimental/random>, <experimental/source_location> and\n<experimental/utility> headers can be included in C++98 and C++11 modes,\nbut gives errors. With this change they can be included, but define\nnothing.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/98319\n\t* include/experimental/random: Only define contents for C++14\n\tand later.\n\t* include/experimental/source_location: Likewise.\n\t* include/experimental/utility: Likewise.\n\t* testsuite/experimental/feat-lib-fund.cc: Include all LFTS\n\theaders that are present. Allow test to run for all modes.", "tree": {"sha": "6eda8ac1efa32a71701386abb149f9f133976e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6eda8ac1efa32a71701386abb149f9f133976e30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab9bd93271061f436c10e35e261ecb73e2108ccc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9bd93271061f436c10e35e261ecb73e2108ccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab9bd93271061f436c10e35e261ecb73e2108ccc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9bd93271061f436c10e35e261ecb73e2108ccc/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cee0c6562e5d8df69a9d6ad613a6f3edcfcc797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cee0c6562e5d8df69a9d6ad613a6f3edcfcc797", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cee0c6562e5d8df69a9d6ad613a6f3edcfcc797"}], "stats": {"total": 105, "additions": 45, "deletions": 60}, "files": [{"sha": "4165a8520c8c5e72f7e92adf366658b473bfb598", "filename": "libstdc++-v3/include/experimental/random", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9bd93271061f436c10e35e261ecb73e2108ccc/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Frandom", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9bd93271061f436c10e35e261ecb73e2108ccc/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Frandom", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Frandom?ref=ab9bd93271061f436c10e35e261ecb73e2108ccc", "patch": "@@ -30,6 +30,7 @@\n #ifndef _GLIBCXX_EXPERIMENTAL_RANDOM\n #define _GLIBCXX_EXPERIMENTAL_RANDOM 1\n \n+#if __cplusplus >= 201402L\n #include <random>\n #include <experimental/bits/lfts_config.h>\n \n@@ -78,4 +79,5 @@ inline namespace fundamentals_v2 {\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n-#endif\n+#endif // C++14\n+#endif // _GLIBCXX_EXPERIMENTAL_RANDOM"}, {"sha": "b4f00f1c0392b0763b8aa0ad5543f1df7fb13adc", "filename": "libstdc++-v3/include/experimental/source_location", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9bd93271061f436c10e35e261ecb73e2108ccc/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsource_location", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9bd93271061f436c10e35e261ecb73e2108ccc/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsource_location", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fsource_location?ref=ab9bd93271061f436c10e35e261ecb73e2108ccc", "patch": "@@ -30,6 +30,7 @@\n #ifndef _GLIBCXX_EXPERIMENTAL_SRCLOC\n #define _GLIBCXX_EXPERIMENTAL_SRCLOC 1\n \n+#if __cplusplus >= 201402L\n #include <cstdint>\n \n namespace std {\n@@ -84,4 +85,5 @@ inline namespace fundamentals_v2 {\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n-#endif\n+#endif // C++14\n+#endif // _GLIBCXX_EXPERIMENTAL_SRCLOC"}, {"sha": "8abf55c052672fcf95209966a85aed4c4966920e", "filename": "libstdc++-v3/include/experimental/utility", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9bd93271061f436c10e35e261ecb73e2108ccc/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Futility", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9bd93271061f436c10e35e261ecb73e2108ccc/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Futility", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Futility?ref=ab9bd93271061f436c10e35e261ecb73e2108ccc", "patch": "@@ -30,6 +30,7 @@\n #ifndef _GLIBCXX_EXPERIMENTAL_UTILITY\n #define _GLIBCXX_EXPERIMENTAL_UTILITY 1\n \n+#if __cplusplus >= 201402L\n #include <utility>\n #include <bits/uses_allocator.h>\n #include <experimental/bits/lfts_config.h>\n@@ -47,4 +48,5 @@ inline namespace fundamentals_v2 {\n _GLIBCXX_END_NAMESPACE_VERSION\n } // namespace std\n \n-#endif\n+#endif // C++14\n+#endif // _GLIBCXX_EXPERIMENTAL_UTILITY"}, {"sha": "342edc5352d89527f6a4d49341c3ded4e407c5b5", "filename": "libstdc++-v3/testsuite/experimental/feat-lib-fund.cc", "status": "modified", "additions": 36, "deletions": 57, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9bd93271061f436c10e35e261ecb73e2108ccc/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9bd93271061f436c10e35e261ecb73e2108ccc/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffeat-lib-fund.cc?ref=ab9bd93271061f436c10e35e261ecb73e2108ccc", "patch": "@@ -1,57 +1,36 @@\n-// { dg-do preprocess { target c++14 } }\n-\n-#if !__has_include(<experimental/tuple>)\n-#  error \"<experimental/tuple>\"\n-#endif\n-\n-#if !__has_include(<experimental/type_traits>)\n-#  error \"<experimental/type_traits>\"\n-#endif\n-\n-#if !__has_include(<experimental/ratio>)\n-#  error \"<experimental/ratio>\"\n-#endif\n-\n-#if !__has_include(<experimental/chrono>)\n-#  error \"<experimental/chrono>\"\n-#endif\n-\n-#if !__has_include(<experimental/system_error>)\n-#  error \"<experimental/system_error>\"\n-#endif\n-\n-#if !__has_include(<experimental/functional>)\n-#  error \"<experimental/functional>\"\n-#endif\n-\n-#if !__has_include(<experimental/optional>)\n-#  error \"<experimental/optional>\"\n-#endif\n-\n-#if !__has_include(<experimental/any>)\n-#  error \"<experimental/any>\"\n-#endif\n-\n-#if !__has_include(<experimental/string_view>)\n-#  error \"<experimental/string_view>\"\n-#endif\n-\n-//#if !__has_include(<experimental/memory>)\n-//#  error \"<experimental/memory>\"\n-//#endif\n-\n-//#if !__has_include(<experimental/memory_resource>)\n-//#  error \"<experimental/memory_resource>\"\n-//#endif\n-\n-//#if !__has_include(<experimental/future>)\n-//#  error \"<experimental/future>\"\n-//#endif\n-\n-#if !__has_include(<experimental/algorithm>)\n-#  error \"<experimental/algorithm>\"\n-#endif\n-\n-//#if !__has_include(<experimental/net>)\n-//#  error \"<experimental/net>\"\n-//#endif\n+// { dg-do preprocess }\n+\n+// Include all the LFTS headers. This should work with any -std flag.\n+\n+#include <experimental/algorithm>\n+#include <experimental/any>\n+#include <experimental/array>\n+#include <experimental/chrono>\n+#include <experimental/deque>\n+#include <experimental/forward_list>\n+#include <experimental/functional>\n+#if __has_include(<experimental/future>) // not supported as of GCC 11\n+# include <experimental/future>\n+#endif\n+#include <experimental/iterator>\n+#include <experimental/list>\n+#include <experimental/map>\n+#include <experimental/memory>\n+#include <experimental/memory_resource>\n+#include <experimental/numeric>\n+#include <experimental/optional>\n+#include <experimental/propagate_const>\n+#include <experimental/random>\n+#include <experimental/ratio>\n+#include <experimental/regex>\n+#include <experimental/set>\n+#include <experimental/source_location>\n+#include <experimental/string>\n+#include <experimental/string_view>\n+#include <experimental/system_error>\n+#include <experimental/tuple>\n+#include <experimental/type_traits>\n+#include <experimental/unordered_map>\n+#include <experimental/unordered_set>\n+#include <experimental/utility>\n+#include <experimental/vector>"}]}