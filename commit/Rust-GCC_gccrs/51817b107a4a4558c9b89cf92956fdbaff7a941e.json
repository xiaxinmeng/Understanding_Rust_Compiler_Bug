{"sha": "51817b107a4a4558c9b89cf92956fdbaff7a941e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE4MTdiMTA3YTRhNDU1OGM5Yjg5Y2Y5Mjk1NmZkYmFmZjdhOTQxZQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2001-07-02T18:35:32Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-07-02T18:35:32Z"}, "message": "Makefile.in (doc): Depend on $(GENERATED_MANPAGES).\n\ngcc:\n\t* Makefile.in (doc): Depend on $(GENERATED_MANPAGES).\n\t* doc/.cvsignore: Add gcc.1, cpp.1, gcov.1.\n\t* doc/gcc.1, doc/cpp.1, doc/gcov.1: Removed.\ncontrib:\n\t* gcc_update: Remove entries for gcc.1, cpp.1, gcov.1.\n\nFrom-SVN: r43698", "tree": {"sha": "bdf1a7d7e0e32f3acc47ed54181a91fb0dc35819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdf1a7d7e0e32f3acc47ed54181a91fb0dc35819"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51817b107a4a4558c9b89cf92956fdbaff7a941e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51817b107a4a4558c9b89cf92956fdbaff7a941e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51817b107a4a4558c9b89cf92956fdbaff7a941e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51817b107a4a4558c9b89cf92956fdbaff7a941e/comments", "author": null, "committer": null, "parents": [{"sha": "eea81d3e5d04ea812901fa4178465279bde96ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eea81d3e5d04ea812901fa4178465279bde96ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eea81d3e5d04ea812901fa4178465279bde96ca3"}], "stats": {"total": 9232, "additions": 14, "deletions": 9218}, "files": [{"sha": "bd0825e2332e105d746c22111884b704b2081c2f", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51817b107a4a4558c9b89cf92956fdbaff7a941e/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51817b107a4a4558c9b89cf92956fdbaff7a941e/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=51817b107a4a4558c9b89cf92956fdbaff7a941e", "patch": "@@ -1,3 +1,7 @@\n+2001-07-02  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* gcc_update: Remove entries for gcc.1, cpp.1, gcov.1.\n+\n 2001-07-01  Zoltan Felleg <zfelleg@telnet.hu>\n \n \t* warn_summary: Fix typo in a comment."}, {"sha": "575418d6182130345d852e9bd894b3ceb0f31fdb", "filename": "contrib/gcc_update", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51817b107a4a4558c9b89cf92956fdbaff7a941e/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51817b107a4a4558c9b89cf92956fdbaff7a941e/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=51817b107a4a4558c9b89cf92956fdbaff7a941e", "patch": "@@ -69,9 +69,6 @@ gcc/configure: gcc/configure.in\n gcc/cstamp-h.in: gcc/configure.in gcc/acconfig.h\n gcc/config.in: gcc/cstamp-h.in\n gcc/fixinc/fixincl.x: gcc/fixinc/fixincl.tpl gcc/fixinc/inclhack.def\n-gcc/doc/gcov.1: gcc/doc/gcov.texi\n-gcc/doc/cpp.1: gcc/doc/cpp.texi\n-gcc/doc/gcc.1: gcc/doc/invoke.texi\n # And then, language-specific files\n gcc/f/intdoc.texi: gcc/f/intdoc.in gcc/f/intdoc.c gcc/f/intrin.h gcc/f/intrin.def\n # And libraries, at last"}, {"sha": "ebaf3f544d055dabd13f80457c0b7aa374a02a36", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51817b107a4a4558c9b89cf92956fdbaff7a941e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51817b107a4a4558c9b89cf92956fdbaff7a941e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=51817b107a4a4558c9b89cf92956fdbaff7a941e", "patch": "@@ -1,3 +1,9 @@\n+2001-07-02  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* Makefile.in (doc): Depend on $(GENERATED_MANPAGES).\n+\t* doc/.cvsignore: Add gcc.1, cpp.1, gcov.1.\n+\t* doc/gcc.1, doc/cpp.1, doc/gcov.1: Removed.\n+\n 2001-07-02  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* doc/install.texi: Various spelling and markup fixes."}, {"sha": "09801e928edb9211725f187ed7cf2ea54aeab137", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51817b107a4a4558c9b89cf92956fdbaff7a941e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51817b107a4a4558c9b89cf92956fdbaff7a941e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=51817b107a4a4558c9b89cf92956fdbaff7a941e", "patch": "@@ -2208,7 +2208,7 @@ stmp-fixproto: fixhdr.ready fixproto stmp-int-hdrs\n \n docdir = $(srcdir)/doc\n \n-doc: $(BUILD_INFO) gccbug\n+doc: $(BUILD_INFO) $(GENERATED_MANPAGES) gccbug\n info: $(docdir)/cpp.info $(docdir)/gcc.info lang.info $(docdir)/cppinternals.info\n \n $(docdir)/cpp.info: $(docdir)/cpp.texi"}, {"sha": "e31607524e00ec4f8333255e8d567f02d317ea9a", "filename": "gcc/doc/.cvsignore", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51817b107a4a4558c9b89cf92956fdbaff7a941e/gcc%2Fdoc%2F.cvsignore", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51817b107a4a4558c9b89cf92956fdbaff7a941e/gcc%2Fdoc%2F.cvsignore", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2F.cvsignore?ref=51817b107a4a4558c9b89cf92956fdbaff7a941e", "patch": "@@ -1,3 +1,6 @@\n gcc.info*\n cpp.info*\n cppinternals.info*\n+gcc.1\n+cpp.1\n+gcov.1"}, {"sha": "281cd37c2d594b8d1aa0f758d219bd5614c4daf6", "filename": "gcc/doc/cpp.1", "status": "removed", "additions": 0, "deletions": 716, "changes": 716, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2Fdoc%2Fcpp.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2Fdoc%2Fcpp.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.1?ref=eea81d3e5d04ea812901fa4178465279bde96ca3", "patch": "@@ -1,716 +0,0 @@\n-.\\\" Automatically generated by Pod::Man version 1.16\n-.\\\" Sat Jun 16 11:46:14 2001\n-.\\\"\n-.\\\" Standard preamble:\n-.\\\" ======================================================================\n-.de Sh \\\" Subsection heading\n-.br\n-.if t .Sp\n-.ne 5\n-.PP\n-\\fB\\\\$1\\fR\n-.PP\n-..\n-.de Sp \\\" Vertical space (when we can't use .PP)\n-.if t .sp .5v\n-.if n .sp\n-..\n-.de Ip \\\" List item\n-.br\n-.ie \\\\n(.$>=3 .ne \\\\$3\n-.el .ne 3\n-.IP \"\\\\$1\" \\\\$2\n-..\n-.de Vb \\\" Begin verbatim text\n-.ft CW\n-.nf\n-.ne \\\\$1\n-..\n-.de Ve \\\" End verbatim text\n-.ft R\n-\n-.fi\n-..\n-.\\\" Set up some character translations and predefined strings.  \\*(-- will\n-.\\\" give an unbreakable dash, \\*(PI will give pi, \\*(L\" will give a left\n-.\\\" double quote, and \\*(R\" will give a right double quote.  | will give a\n-.\\\" real vertical bar.  \\*(C+ will give a nicer C++.  Capital omega is used\n-.\\\" to do unbreakable dashes and therefore won't be available.  \\*(C` and\n-.\\\" \\*(C' expand to `' in nroff, nothing in troff, for use with C<>\n-.tr \\(*W-|\\(bv\\*(Tr\n-.ds C+ C\\v'-.1v'\\h'-1p'\\s-2+\\h'-1p'+\\s0\\v'.1v'\\h'-1p'\n-.ie n \\{\\\n-.    ds -- \\(*W-\n-.    ds PI pi\n-.    if (\\n(.H=4u)&(1m=24u) .ds -- \\(*W\\h'-12u'\\(*W\\h'-12u'-\\\" diablo 10 pitch\n-.    if (\\n(.H=4u)&(1m=20u) .ds -- \\(*W\\h'-12u'\\(*W\\h'-8u'-\\\"  diablo 12 pitch\n-.    ds L\" \"\"\n-.    ds R\" \"\"\n-.    ds C` \"\"\n-.    ds C' \"\"\n-'br\\}\n-.el\\{\\\n-.    ds -- \\|\\(em\\|\n-.    ds PI \\(*p\n-.    ds L\" ``\n-.    ds R\" ''\n-'br\\}\n-.\\\"\n-.\\\" If the F register is turned on, we'll generate index entries on stderr\n-.\\\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and\n-.\\\" index entries marked with X<> in POD.  Of course, you'll have to process\n-.\\\" the output yourself in some meaningful fashion.\n-.if \\nF \\{\\\n-.    de IX\n-.    tm Index:\\\\$1\\t\\\\n%\\t\"\\\\$2\"\n-..\n-.    nr % 0\n-.    rr F\n-.\\}\n-.\\\"\n-.\\\" For nroff, turn off justification.  Always turn off hyphenation; it\n-.\\\" makes way too many mistakes in technical documents.\n-.hy 0\n-.if n .na\n-.\\\"\n-.\\\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).\n-.\\\" Fear.  Run.  Save yourself.  No user-serviceable parts.\n-.bd B 3\n-.    \\\" fudge factors for nroff and troff\n-.if n \\{\\\n-.    ds #H 0\n-.    ds #V .8m\n-.    ds #F .3m\n-.    ds #[ \\f1\n-.    ds #] \\fP\n-.\\}\n-.if t \\{\\\n-.    ds #H ((1u-(\\\\\\\\n(.fu%2u))*.13m)\n-.    ds #V .6m\n-.    ds #F 0\n-.    ds #[ \\&\n-.    ds #] \\&\n-.\\}\n-.    \\\" simple accents for nroff and troff\n-.if n \\{\\\n-.    ds ' \\&\n-.    ds ` \\&\n-.    ds ^ \\&\n-.    ds , \\&\n-.    ds ~ ~\n-.    ds /\n-.\\}\n-.if t \\{\\\n-.    ds ' \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\'\\h\"|\\\\n:u\"\n-.    ds ` \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\`\\h'|\\\\n:u'\n-.    ds ^ \\\\k:\\h'-(\\\\n(.wu*10/11-\\*(#H)'^\\h'|\\\\n:u'\n-.    ds , \\\\k:\\h'-(\\\\n(.wu*8/10)',\\h'|\\\\n:u'\n-.    ds ~ \\\\k:\\h'-(\\\\n(.wu-\\*(#H-.1m)'~\\h'|\\\\n:u'\n-.    ds / \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\z\\(sl\\h'|\\\\n:u'\n-.\\}\n-.    \\\" troff and (daisy-wheel) nroff accents\n-.ds : \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H+.1m+\\*(#F)'\\v'-\\*(#V'\\z.\\h'.2m+\\*(#F'.\\h'|\\\\n:u'\\v'\\*(#V'\n-.ds 8 \\h'\\*(#H'\\(*b\\h'-\\*(#H'\n-.ds o \\\\k:\\h'-(\\\\n(.wu+\\w'\\(de'u-\\*(#H)/2u'\\v'-.3n'\\*(#[\\z\\(de\\v'.3n'\\h'|\\\\n:u'\\*(#]\n-.ds d- \\h'\\*(#H'\\(pd\\h'-\\w'~'u'\\v'-.25m'\\f2\\(hy\\fP\\v'.25m'\\h'-\\*(#H'\n-.ds D- D\\\\k:\\h'-\\w'D'u'\\v'-.11m'\\z\\(hy\\v'.11m'\\h'|\\\\n:u'\n-.ds th \\*(#[\\v'.3m'\\s+1I\\s-1\\v'-.3m'\\h'-(\\w'I'u*2/3)'\\s-1o\\s+1\\*(#]\n-.ds Th \\*(#[\\s+2I\\s-2\\h'-\\w'I'u*3/5'\\v'-.3m'o\\v'.3m'\\*(#]\n-.ds ae a\\h'-(\\w'a'u*4/10)'e\n-.ds Ae A\\h'-(\\w'A'u*4/10)'E\n-.    \\\" corrections for vroff\n-.if v .ds ~ \\\\k:\\h'-(\\\\n(.wu*9/10-\\*(#H)'\\s-2\\u~\\d\\s+2\\h'|\\\\n:u'\n-.if v .ds ^ \\\\k:\\h'-(\\\\n(.wu*10/11-\\*(#H)'\\v'-.4m'^\\v'.4m'\\h'|\\\\n:u'\n-.    \\\" for low resolution devices (crt and lpr)\n-.if \\n(.H>23 .if \\n(.V>19 \\\n-\\{\\\n-.    ds : e\n-.    ds 8 ss\n-.    ds o a\n-.    ds d- d\\h'-1'\\(ga\n-.    ds D- D\\h'-1'\\(hy\n-.    ds th \\o'bp'\n-.    ds Th \\o'LP'\n-.    ds ae ae\n-.    ds Ae AE\n-.\\}\n-.rm #[ #] #H #V #F C\n-.\\\" ======================================================================\n-.\\\"\n-.IX Title \"CPP 1\"\n-.TH CPP 1 \"gcc-3.1\" \"2001-06-16\" \"GNU\"\n-.UC\n-.SH \"NAME\"\n-cpp \\- The C Preprocessor\n-.SH \"SYNOPSIS\"\n-.IX Header \"SYNOPSIS\"\n-cpp [\\fB\\-D\\fR\\fImacro\\fR[=\\fIdefn\\fR]...] [\\fB\\-U\\fR\\fImacro\\fR]\n-    [\\fB\\-I\\fR\\fIdir\\fR...] [\\fB\\-W\\fR\\fIwarn\\fR...]\n-    [\\fB\\-M\\fR|\\fB\\-MM\\fR] [\\fB\\-MG\\fR] [\\fB\\-MF\\fR \\fIfilename\\fR]\n-    [\\fB\\-MP\\fR] [\\fB\\-MQ\\fR \\fItarget\\fR...] [\\fB\\-MT\\fR \\fItarget\\fR...]\n-    [\\fB\\-x\\fR \\fIlanguage\\fR] [\\fB\\-std=\\fR\\fIstandard\\fR]\n-    \\fIinfile\\fR \\fIoutfile\\fR\n-.PP\n-Only the most useful options are listed here; see below for the remainder.\n-.SH \"DESCRIPTION\"\n-.IX Header \"DESCRIPTION\"\n-The C preprocessor, often known as \\fIcpp\\fR, is a \\fImacro processor\\fR\n-that is used automatically by the C compiler to transform your program\n-before compilation.  It is called a macro processor because it allows\n-you to define \\fImacros\\fR, which are brief abbreviations for longer\n-constructs.\n-.PP\n-The C preprocessor is intended to be used only with C, \\*(C+, and\n-Objective C source code.  In the past, it has been abused as a general\n-text processor.  It will choke on input which does not obey C's lexical\n-rules.  For example, apostrophes will be interpreted as the beginning of\n-character constants, and cause errors.  Also, you cannot rely on it\n-preserving characteristics of the input which are not significant to\n-C-family languages.  If a Makefile is preprocessed, all the hard tabs\n-will be removed, and the Makefile will not work.\n-.PP\n-Having said that, you can often get away with using cpp on things which\n-are not C.  Other Algol-ish programming languages are often safe\n-(Pascal, Ada, etc.) So is assembly, with caution.  \\fB\\-traditional\\fR\n-mode preserves more white space, and is otherwise more permissive.  Many\n-of the problems can be avoided by writing C or \\*(C+ style comments\n-instead of native language comments, and keeping macros simple.\n-.PP\n-Wherever possible, you should use a preprocessor geared to the language\n-you are writing in.  Modern versions of the \\s-1GNU\\s0 assembler have macro\n-facilities.  Most high level programming languages have their own\n-conditional compilation and inclusion mechanism.  If all else fails,\n-try a true general text processor, such as \\s-1GNU\\s0 M4.\n-.PP\n-C preprocessors vary in some details.  This manual discusses the \\s-1GNU\\s0 C\n-preprocessor, which provides a small superset of the features of \\s-1ISO\\s0\n-Standard C.  In its default mode, the \\s-1GNU\\s0 C preprocessor does not do a\n-few things required by the standard.  These are features which are\n-rarely, if ever, used, and may cause surprising changes to the meaning\n-of a program which does not expect them.  To get strict \\s-1ISO\\s0 Standard C,\n-you should use the \\fB\\-std=c89\\fR or \\fB\\-std=c99\\fR options, depending\n-on which version of the standard you want.  To get all the mandatory\n-diagnostics, you must also use \\fB\\-pedantic\\fR.  \n-.SH \"OPTIONS\"\n-.IX Header \"OPTIONS\"\n-The C preprocessor expects two file names as arguments, \\fIinfile\\fR and\n-\\&\\fIoutfile\\fR.  The preprocessor reads \\fIinfile\\fR together with any\n-other files it specifies with \\fB#include\\fR.  All the output generated\n-by the combined input files is written in \\fIoutfile\\fR.\n-.PP\n-Either \\fIinfile\\fR or \\fIoutfile\\fR may be \\fB-\\fR, which as\n-\\&\\fIinfile\\fR means to read from standard input and as \\fIoutfile\\fR\n-means to write to standard output.  Also, if either file is omitted, it\n-means the same as if \\fB-\\fR had been specified for that file.\n-.PP\n-Unless otherwise noted, or the option ends in \\fB=\\fR, all options\n-which take an argument may have that argument appear either immediately\n-after the option, or with a space between option and argument:\n-\\&\\fB\\-Ifoo\\fR and \\fB\\-I foo\\fR have the same effect.\n-.PP\n-Many options have multi-letter names; therefore multiple single-letter\n-options may \\fInot\\fR be grouped: \\fB\\-dM\\fR is very different from\n-\\&\\fB\\-d\\ \\-M\\fR.\n-.Ip \"\\fB\\-D\\fR \\fIname\\fR\" 4\n-.IX Item \"-D name\"\n-Predefine \\fIname\\fR as a macro, with definition \\f(CW\\*(C`1\\*(C'\\fR.\n-.Ip \"\\fB\\-D\\fR \\fIname\\fR\\fB=\\fR\\fIdefinition\\fR\" 4\n-.IX Item \"-D name=definition\"\n-Predefine \\fIname\\fR as a macro, with definition \\fIdefinition\\fR.\n-There are no restrictions on the contents of \\fIdefinition\\fR, but if\n-you are invoking the preprocessor from a shell or shell-like program you\n-may need to use the shell's quoting syntax to protect characters such as\n-spaces that have a meaning in the shell syntax.  If you use more than\n-one \\fB\\-D\\fR for the same \\fIname\\fR, the rightmost definition takes\n-effect.\n-.Sp\n-If you wish to define a function-like macro on the command line, write\n-its argument list with surrounding parentheses before the equals sign\n-(if any).  Parentheses are meaningful to most shells, so you will need\n-to quote the option.  With \\fBsh\\fR and \\fBcsh\\fR,\n-\\&\\fB\\-D'\\fR\\fIname\\fR\\fB(\\fR\\fIargs...\\fR\\fB)=\\fR\\fIdefinition\\fR\\fB'\\fR works.\n-.Ip \"\\fB\\-U\\fR \\fIname\\fR\" 4\n-.IX Item \"-U name\"\n-Cancel any previous definition of \\fIname\\fR, either built in or\n-provided with a \\fB\\-D\\fR option.\n-.Sp\n-All \\fB\\-imacros\\fR \\fIfile\\fR and \\fB\\-include\\fR \\fIfile\\fR options\n-are processed after all \\fB\\-D\\fR and \\fB\\-U\\fR options.\n-.Ip \"\\fB\\-undef\\fR\" 4\n-.IX Item \"-undef\"\n-Do not predefine any system-specific macros.  The common predefined\n-macros remain defined.\n-.Ip \"\\fB\\-I\\fR \\fIdir\\fR\" 4\n-.IX Item \"-I dir\"\n-Add the directory \\fIdir\\fR to the list of directories to be searched\n-for header files.    Directories named by \\fB\\-I\\fR\n-are searched before the standard system include directories.\n-.Sp\n-It is dangerous to specify a standard system include directory in an\n-\\&\\fB\\-I\\fR option.  This defeats the special treatment of system\n-headers.  It can also defeat the repairs to\n-buggy system headers which \\s-1GCC\\s0 makes when it is installed.\n-.Ip \"\\fB\\-o\\fR \\fIfile\\fR\" 4\n-.IX Item \"-o file\"\n-Write output to \\fIfile\\fR.  This is the same as specifying \\fIfile\\fR\n-as the second non-option argument to \\fBcpp\\fR.  \\fBgcc\\fR has a\n-different interpretation of a second non-option argument, so you must\n-use \\fB\\-o\\fR to specify the output file.\n-.Ip \"\\fB\\-Wall\\fR\" 4\n-.IX Item \"-Wall\"\n-Turns on all optional warnings which are desirable for normal code.  At\n-present this is \\fB\\-Wcomment\\fR and \\fB\\-Wtrigraphs\\fR.  Note that\n-many of the preprocessor's warnings are on by default and have no\n-options to control them.\n-.Ip \"\\fB\\-Wcomment\\fR\" 4\n-.IX Item \"-Wcomment\"\n-.PD 0\n-.Ip \"\\fB\\-Wcomments\\fR\" 4\n-.IX Item \"-Wcomments\"\n-.PD\n-Warn whenever a comment-start sequence \\fB/*\\fR appears in a \\fB/*\\fR\n-comment, or whenever a backslash-newline appears in a \\fB//\\fR comment.\n-(Both forms have the same effect.)\n-.Ip \"\\fB\\-Wtrigraphs\\fR\" 4\n-.IX Item \"-Wtrigraphs\"\n-Warn if any trigraphs are encountered.  This option used to take effect\n-only if \\fB\\-trigraphs\\fR was also specified, but now works\n-independently.  Warnings are not given for trigraphs within comments, as\n-they do not affect the meaning of the program.\n-.Ip \"\\fB\\-Wtraditional\\fR\" 4\n-.IX Item \"-Wtraditional\"\n-Warn about certain constructs that behave differently in traditional and\n-\\&\\s-1ISO\\s0 C.  Also warn about \\s-1ISO\\s0 C constructs that have no traditional C\n-equivalent, and problematic constructs which should be avoided.\n-.Ip \"\\fB\\-Wimport\\fR\" 4\n-.IX Item \"-Wimport\"\n-Warn the first time \\fB#import\\fR is used.\n-.Ip \"\\fB\\-Wundef\\fR\" 4\n-.IX Item \"-Wundef\"\n-Warn whenever an identifier which is not a macro is encountered in an\n-\\&\\fB#if\\fR directive, outside of \\fBdefined\\fR.  Such identifiers are\n-replaced with zero.\n-.Ip \"\\fB\\-Werror\\fR\" 4\n-.IX Item \"-Werror\"\n-Make all warnings into hard errors.  Source code which triggers warnings\n-will be rejected.\n-.Ip \"\\fB\\-Wsystem-headers\\fR\" 4\n-.IX Item \"-Wsystem-headers\"\n-Issue warnings for code in system headers.  These are normally unhelpful\n-in finding bugs in your own code, therefore suppressed.  If you are\n-responsible for the system library, you may want to see them.\n-.Ip \"\\fB\\-w\\fR\" 4\n-.IX Item \"-w\"\n-Suppress all warnings, including those which \\s-1GNU\\s0 \\s-1CPP\\s0 issues by default.\n-.Ip \"\\fB\\-pedantic\\fR\" 4\n-.IX Item \"-pedantic\"\n-Issue all the mandatory diagnostics listed in the C standard.  Some of\n-them are left out by default, since they trigger frequently on harmless\n-code.\n-.Ip \"\\fB\\-pedantic-errors\\fR\" 4\n-.IX Item \"-pedantic-errors\"\n-Issue all the mandatory diagnostics, and make all mandatory diagnostics\n-into errors.  This includes mandatory diagnostics that \\s-1GCC\\s0 issues\n-without \\fB\\-pedantic\\fR but treats as warnings.\n-.Ip \"\\fB\\-M\\fR\" 4\n-.IX Item \"-M\"\n-Instead of outputting the result of preprocessing, output a rule\n-suitable for \\fBmake\\fR describing the dependencies of the main\n-source file.  The preprocessor outputs one \\fBmake\\fR rule containing\n-the object file name for that source file, a colon, and the names of all\n-the included files, including those coming from \\fB\\-include\\fR or\n-\\&\\fB\\-imacros\\fR command line options.\n-.Sp\n-Unless specified explicitly (with \\fB\\-MT\\fR or \\fB\\-MQ\\fR), the\n-object file name consists of the basename of the source file with any\n-suffix replaced with object file suffix.  If there are many included\n-files then the rule is split into several lines using \\fB\\e\\fR\\-newline.\n-The rule has no commands.\n-.Ip \"\\fB\\-MM\\fR\" 4\n-.IX Item \"-MM\"\n-Like \\fB\\-M\\fR, but mention only the files included with \\f(CW\\*(C`#include\\ \"\\f(CIfile\\f(CW\"\\*(C'\\fR or with \\fB\\-include\\fR or \\fB\\-imacros\\fR command line\n-options.  System header files included with \\f(CW\\*(C`#include\\ <\\f(CIfile\\f(CW>\\*(C'\\fR\n-are omitted.\n-.Ip \"\\fB\\-MF\\fR \\fIfile\\fR\" 4\n-.IX Item \"-MF file\"\n-When used with \\fB\\-M\\fR or \\fB\\-MM\\fR, specifies a file to write the\n-dependencies to.  This allows the preprocessor to write the preprocessed\n-file to stdout normally.  If no \\fB\\-MF\\fR switch is given, \\s-1CPP\\s0 sends\n-the rules to stdout and suppresses normal preprocessed output.\n-.Ip \"\\fB\\-MG\\fR\" 4\n-.IX Item \"-MG\"\n-When used with \\fB\\-M\\fR or \\fB\\-MM\\fR, \\fB\\-MG\\fR says to treat missing\n-header files as generated files and assume they live in the same\n-directory as the source file.  It suppresses preprocessed output, as a\n-missing header file is ordinarily an error.\n-.Sp\n-This feature is used in automatic updating of makefiles.\n-.Ip \"\\fB\\-MP\\fR\" 4\n-.IX Item \"-MP\"\n-This option instructs \\s-1CPP\\s0 to add a phony target for each dependency\n-other than the main file, causing each to depend on nothing.  These\n-dummy rules work around errors \\fBmake\\fR gives if you remove header\n-files without updating the \\fIMakefile\\fR to match.\n-.Sp\n-This is typical output:\n-.Sp\n-.Vb 1\n-\\&        test.o: test.c test.h\n-.Ve\n-.Vb 1\n-\\&        test.h:\n-.Ve\n-.Ip \"\\fB\\-MT\\fR \\fItarget\\fR\" 4\n-.IX Item \"-MT target\"\n-Change the target of the rule emitted by dependency generation.  By\n-default \\s-1CPP\\s0 takes the name of the main input file, including any path,\n-deletes any file suffix such as \\fB.c\\fR, and appends the platform's\n-usual object suffix.  The result is the target.\n-.Sp\n-An \\fB\\-MT\\fR option will set the target to be exactly the string you\n-specify.  If you want multiple targets, you can specify them as a single\n-argument to \\fB\\-MT\\fR, or use multiple \\fB\\-MT\\fR options.\n-.Sp\n-For example, \\fB\\-MT\\ '$(objpfx)foo.o'\\fR might give\n-.Sp\n-.Vb 1\n-\\&        $(objpfx)foo.o: foo.c\n-.Ve\n-.Ip \"\\fB\\-MQ\\fR \\fItarget\\fR\" 4\n-.IX Item \"-MQ target\"\n-Same as \\fB\\-MT\\fR, but it quotes any characters which are special to\n-Make. \\fB\\-MQ\\ '$(objpfx)foo.o'\\fR gives\n-.Sp\n-.Vb 1\n-\\&        $$(objpfx)foo.o: foo.c\n-.Ve\n-The default target is automatically quoted, as if it were given with\n-\\&\\fB\\-MQ\\fR.\n-.Ip \"\\fB\\-MD\\fR \\fIfile\\fR\" 4\n-.IX Item \"-MD file\"\n-.PD 0\n-.Ip \"\\fB\\-MMD\\fR \\fIfile\\fR\" 4\n-.IX Item \"-MMD file\"\n-.PD\n-\\&\\fB\\-MD\\fR \\fIfile\\fR is equivalent to \\fB\\-M \\-MF\\fR \\fIfile\\fR, and\n-\\&\\fB\\-MMD\\fR \\fIfile\\fR is equivalent to \\fB\\-MM \\-MF\\fR \\fIfile\\fR.\n-.Sp\n-Due to limitations in the compiler driver, you must use these switches\n-when you want to generate a dependency file as a side-effect of normal\n-compilation.\n-.Ip \"\\fB\\-x c\\fR\" 4\n-.IX Item \"-x c\"\n-.PD 0\n-.Ip \"\\fB\\-x c++\\fR\" 4\n-.IX Item \"-x c++\"\n-.Ip \"\\fB\\-x objective-c\\fR\" 4\n-.IX Item \"-x objective-c\"\n-.Ip \"\\fB\\-x assembler-with-cpp\\fR\" 4\n-.IX Item \"-x assembler-with-cpp\"\n-.PD\n-Specify the source language: C, \\*(C+, Objective-C, or assembly.  This has\n-nothing to do with standards conformance or extensions; it merely\n-selects which base syntax to expect.  If you give none of these options,\n-cpp will deduce the language from the extension of the source file:\n-\\&\\fB.c\\fR, \\fB.cc\\fR, \\fB.m\\fR, or \\fB.S\\fR.  Some other common\n-extensions for \\*(C+ and assembly are also recognized.  If cpp does not\n-recognize the extension, it will treat the file as C; this is the most\n-generic mode.\n-.Sp\n-\\&\\fBNote:\\fR Previous versions of cpp accepted a \\fB\\-lang\\fR option\n-which selected both the language and the standards conformance level.\n-This option has been removed, because it conflicts with the \\fB\\-l\\fR\n-option.\n-.Ip \"\\fB\\-std=\\fR\\fIstandard\\fR\" 4\n-.IX Item \"-std=standard\"\n-.PD 0\n-.Ip \"\\fB\\-ansi\\fR\" 4\n-.IX Item \"-ansi\"\n-.PD\n-Specify the standard to which the code should conform.  Currently cpp\n-only knows about the standards for C; other language standards will be\n-added in the future.\n-.Sp\n-\\&\\fIstandard\\fR\n-may be one of:\n-.RS 4\n-.if n .Ip \"\\f(CW\"\"\"\"iso9899:1990\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWiso9899:1990\\fR\" 4\n-.IX Item \"iso9899:1990\"\n-.PD 0\n-.if n .Ip \"\\f(CW\"\"\"\"c89\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWc89\\fR\" 4\n-.IX Item \"c89\"\n-.PD\n-The \\s-1ISO\\s0 C standard from 1990.  \\fBc89\\fR is the customary shorthand for\n-this version of the standard.\n-.Sp\n-The \\fB\\-ansi\\fR option is equivalent to \\fB\\-std=c89\\fR.\n-.if n .Ip \"\\f(CW\"\"\"\"iso9899:199409\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWiso9899:199409\\fR\" 4\n-.IX Item \"iso9899:199409\"\n-The 1990 C standard, as amended in 1994.\n-.if n .Ip \"\\f(CW\"\"\"\"iso9899:1999\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWiso9899:1999\\fR\" 4\n-.IX Item \"iso9899:1999\"\n-.PD 0\n-.if n .Ip \"\\f(CW\"\"\"\"c99\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWc99\\fR\" 4\n-.IX Item \"c99\"\n-.if n .Ip \"\\f(CW\"\"\"\"iso9899:199x\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWiso9899:199x\\fR\" 4\n-.IX Item \"iso9899:199x\"\n-.if n .Ip \"\\f(CW\"\"\"\"c9x\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWc9x\\fR\" 4\n-.IX Item \"c9x\"\n-.PD\n-The revised \\s-1ISO\\s0 C standard, published in December 1999.  Before\n-publication, this was known as C9X.\n-.if n .Ip \"\\f(CW\"\"\"\"gnu89\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWgnu89\\fR\" 4\n-.IX Item \"gnu89\"\n-The 1990 C standard plus \\s-1GNU\\s0 extensions.  This is the default.\n-.if n .Ip \"\\f(CW\"\"\"\"gnu99\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWgnu99\\fR\" 4\n-.IX Item \"gnu99\"\n-.PD 0\n-.if n .Ip \"\\f(CW\"\"\"\"gnu9x\"\"\"\"\\fR\" 4\n-.el .Ip \"\\f(CWgnu9x\\fR\" 4\n-.IX Item \"gnu9x\"\n-.PD\n-The 1999 C standard plus \\s-1GNU\\s0 extensions.\n-.RE\n-.RS 4\n-.RE\n-.Ip \"\\fB\\-I-\\fR\" 4\n-.IX Item \"-I-\"\n-Split the include path.  Any directories specified with \\fB\\-I\\fR\n-options before \\fB\\-I-\\fR are searched only for headers requested with\n-\\&\\f(CW\\*(C`#include\\ \"\\f(CIfile\\f(CW\"\\*(C'\\fR; they are not searched for\n-\\&\\f(CW\\*(C`#include\\ <\\f(CIfile\\f(CW>\\*(C'\\fR.  If additional directories are\n-specified with \\fB\\-I\\fR options after the \\fB\\-I-\\fR, those\n-directories are searched for all \\fB#include\\fR directives.\n-.Sp\n-In addition, \\fB\\-I-\\fR inhibits the use of the directory of the current\n-file directory as the first search directory for \\f(CW\\*(C`#include\\ \"\\f(CIfile\\f(CW\"\\*(C'\\fR.  \n-.Ip \"\\fB\\-nostdinc\\fR\" 4\n-.IX Item \"-nostdinc\"\n-Do not search the standard system directories for header files.\n-Only the directories you have specified with \\fB\\-I\\fR options\n-(and the directory of the current file, if appropriate) are searched.\n-.Ip \"\\fB\\-nostdinc++\\fR\" 4\n-.IX Item \"-nostdinc++\"\n-Do not search for header files in the \\*(C+\\-specific standard directories,\n-but do still search the other standard directories.  (This option is\n-used when building the \\*(C+ library.)\n-.Ip \"\\fB\\-include\\fR \\fIfile\\fR\" 4\n-.IX Item \"-include file\"\n-Process \\fIfile\\fR as if \\f(CW\\*(C`#include \"file\"\\*(C'\\fR appeared as the first\n-line of the primary source file.  However, the first directory searched\n-for \\fIfile\\fR is the preprocessor's working directory \\fIinstead of\\fR\n-the directory containing the main source file.  If not found there, it\n-is searched for in the remainder of the \\f(CW\\*(C`#include \"...\"\\*(C'\\fR search\n-chain as normal.\n-.Sp\n-If multiple \\fB\\-include\\fR options are given, the files are included\n-in the order they appear on the command line.\n-.Ip \"\\fB\\-imacros\\fR \\fIfile\\fR\" 4\n-.IX Item \"-imacros file\"\n-Exactly like \\fB\\-include\\fR, except that any output produced by\n-scanning \\fIfile\\fR is thrown away.  Macros it defines remain defined.\n-This allows you to acquire all the macros from a header without also\n-processing its declarations.\n-.Sp\n-All files specified by \\fB\\-imacros\\fR are processed before all files\n-specified by \\fB\\-include\\fR.\n-.Ip \"\\fB\\-idirafter\\fR \\fIdir\\fR\" 4\n-.IX Item \"-idirafter dir\"\n-Search \\fIdir\\fR for header files, but do it \\fIafter\\fR all\n-directories specified with \\fB\\-I\\fR and the standard system directories\n-have been exhausted.  \\fIdir\\fR is treated as a system include directory.\n-.Ip \"\\fB\\-iprefix\\fR \\fIprefix\\fR\" 4\n-.IX Item \"-iprefix prefix\"\n-Specify \\fIprefix\\fR as the prefix for subsequent \\fB\\-iwithprefix\\fR\n-options.  If the prefix represents a directory, you should include the\n-final \\fB/\\fR.\n-.Ip \"\\fB\\-iwithprefix\\fR \\fIdir\\fR\" 4\n-.IX Item \"-iwithprefix dir\"\n-.PD 0\n-.Ip \"\\fB\\-iwithprefixbefore\\fR \\fIdir\\fR\" 4\n-.IX Item \"-iwithprefixbefore dir\"\n-.PD\n-Append \\fIdir\\fR to the prefix specified previously with\n-\\&\\fB\\-iprefix\\fR, and add the resulting directory to the include search\n-path.  \\fB\\-iwithprefixbefore\\fR puts it in the same place \\fB\\-I\\fR\n-would; \\fB\\-iwithprefix\\fR puts it where \\fB\\-idirafter\\fR would.\n-.Sp\n-Use of these options is discouraged.\n-.Ip \"\\fB\\-isystem\\fR \\fIdir\\fR\" 4\n-.IX Item \"-isystem dir\"\n-Search \\fIdir\\fR for header files, after all directories specified by\n-\\&\\fB\\-I\\fR but before the standard system directories.  Mark it\n-as a system directory, so that it gets the same special treatment as\n-is applied to the standard system directories.  \n-.Ip \"\\fB\\-fpreprocessed\\fR\" 4\n-.IX Item \"-fpreprocessed\"\n-Indicate to the preprocessor that the input file has already been\n-preprocessed.  This suppresses things like macro expansion, trigraph\n-conversion, escaped newline splicing, and processing of most directives.\n-The preprocessor still recognizes and removes comments, so that you can\n-pass a file preprocessed with \\fB\\-C\\fR to the compiler without\n-problems.  In this mode the integrated preprocessor is little more than\n-a tokenizer for the front ends.\n-.Sp\n-\\&\\fB\\-fpreprocessed\\fR is implicit if the input file has one of the\n-extensions \\fB.i\\fR, \\fB.ii\\fR or \\fB.mi\\fR.  These are the\n-extensions that \\s-1GCC\\s0 uses for preprocessed files created by\n-\\&\\fB\\-save-temps\\fR.\n-.Ip \"\\fB\\-ftabstop=\\fR\\fIwidth\\fR\" 4\n-.IX Item \"-ftabstop=width\"\n-Set the distance between tab stops.  This helps the preprocessor report\n-correct column numbers in warnings or errors, even if tabs appear on the\n-line.  If the value is less than 1 or greater than 100, the option is\n-ignored.  The default is 8.\n-.Ip \"\\fB\\-fno-show-column\\fR\" 4\n-.IX Item \"-fno-show-column\"\n-Do not print column numbers in diagnostics.  This may be necessary if\n-diagnostics are being scanned by a program that does not understand the\n-column numbers, such as \\fBdejagnu\\fR.\n-.Ip \"\\fB\\-A\\fR \\fIpredicate\\fR\\fB=\\fR\\fIanswer\\fR\" 4\n-.IX Item \"-A predicate=answer\"\n-Make an assertion with the predicate \\fIpredicate\\fR and answer\n-\\&\\fIanswer\\fR.  This form is preferred to the older form \\fB\\-A\\fR\n-\\&\\fIpredicate\\fR\\fB(\\fR\\fIanswer\\fR\\fB)\\fR, which is still supported, because\n-it does not use shell special characters.  \n-.Ip \"\\fB\\-A -\\fR\\fIpredicate\\fR\\fB=\\fR\\fIanswer\\fR\" 4\n-.IX Item \"-A -predicate=answer\"\n-Cancel an assertion with the predicate \\fIpredicate\\fR and answer\n-\\&\\fIanswer\\fR.\n-.Ip \"\\fB\\-A-\\fR\" 4\n-.IX Item \"-A-\"\n-Cancel all predefined assertions and all assertions preceding it on\n-the command line.  Also, undefine all predefined macros and all\n-macros preceding it on the command line.  (This is a historical wart and\n-may change in the future.)\n-.Ip \"\\fB\\-dCHARS\\fR\" 4\n-.IX Item \"-dCHARS\"\n-\\&\\fI\\s-1CHARS\\s0\\fR is a sequence of one or more of the following characters,\n-and must not be preceded by a space.  Other characters are reserved for\n-future versions of \\s-1GCC\\s0, and silently ignored.  If you specify characters\n-whose behavior conflicts, the result is undefined.\n-.RS 4\n-.Ip \"\\fBM\\fR\" 4\n-.IX Item \"M\"\n-Instead of the normal output, generate a list of \\fB#define\\fR\n-directives for all the macros defined during the execution of the\n-preprocessor, including predefined macros.  This gives you a way of\n-finding out what is predefined in your version of the preprocessor.\n-Assuming you have no file \\fIfoo.h\\fR, the command\n-.Sp\n-.Vb 1\n-\\&        touch foo.h; cpp -dM foo.h\n-.Ve\n-will show all the predefined macros.\n-.Ip \"\\fBD\\fR\" 4\n-.IX Item \"D\"\n-Like \\fBM\\fR except in two respects: it does \\fInot\\fR include the\n-predefined macros, and it outputs \\fIboth\\fR the \\fB#define\\fR\n-directives and the result of preprocessing.  Both kinds of output go to\n-the standard output file.\n-.Ip \"\\fBN\\fR\" 4\n-.IX Item \"N\"\n-Like \\fBD\\fR, but emit only the macro names, not their expansions.\n-.Ip \"\\fBI\\fR\" 4\n-.IX Item \"I\"\n-Output \\fB#include\\fR directives in addition to the result of\n-preprocessing.\n-.RE\n-.RS 4\n-.RE\n-.Ip \"\\fB\\-P\\fR\" 4\n-.IX Item \"-P\"\n-Inhibit generation of linemarkers in the output from the preprocessor.\n-This might be useful when running the preprocessor on something that is\n-not C code, and will be sent to a program which might be confused by the\n-linemarkers.  \n-.Ip \"\\fB\\-C\\fR\" 4\n-.IX Item \"-C\"\n-Do not discard comments.  All comments are passed through to the output\n-file, except for comments in processed directives, which are deleted\n-along with the directive.  Comments appearing in the expansion list of a\n-macro will be preserved, and appear in place wherever the macro is\n-invoked.\n-.Sp\n-You should be prepared for side effects when using \\fB\\-C\\fR; it causes\n-the preprocessor to treat comments as tokens in their own right.  For\n-example, macro redefinitions that were trivial when comments were\n-replaced by a single space might become significant when comments are\n-retained.  Also, comments appearing at the start of what would be a\n-directive line have the effect of turning that line into an ordinary\n-source line, since the first token on the line is no longer a \\fB#\\fR.\n-.Ip \"\\fB\\-gcc\\fR\" 4\n-.IX Item \"-gcc\"\n-Define the macros _\\|_GNUC_\\|_, _\\|_GNUC_MINOR_\\|_ and\n-_\\|_GNUC_PATCHLEVEL_\\|_. These are defined automatically when you use\n-\\&\\fBgcc \\-E\\fR; you can turn them off in that case with\n-\\&\\fB\\-no-gcc\\fR.\n-.Ip \"\\fB\\-traditional\\fR\" 4\n-.IX Item \"-traditional\"\n-Try to imitate the behavior of old-fashioned C, as opposed to \\s-1ISO\\s0\n-C. \n-.Ip \"\\fB\\-trigraphs\\fR\" 4\n-.IX Item \"-trigraphs\"\n-Process trigraph sequences.  \n-.Ip \"\\fB\\-remap\\fR\" 4\n-.IX Item \"-remap\"\n-Enable special code to work around file systems which only permit very\n-short file names, such as \\s-1MS-DOS\\s0.\n-.Ip \"\\fB\\-$\\fR\" 4\n-.IX Item \"-$\"\n-Forbid the use of \\fB$\\fR in identifiers.  The C standard allows\n-implementations to define extra characters that can appear in\n-identifiers.  By default \\s-1GNU\\s0 \\s-1CPP\\s0 permits \\fB$\\fR, a common extension.\n-.Ip \"\\fB\\-h\\fR\" 4\n-.IX Item \"-h\"\n-.PD 0\n-.Ip \"\\fB\\*(--help\\fR\" 4\n-.IX Item \"help\"\n-.Ip \"\\fB\\*(--target-help\\fR\" 4\n-.IX Item \"target-help\"\n-.PD\n-Print text describing all the command line options instead of\n-preprocessing anything.\n-.Ip \"\\fB\\-v\\fR\" 4\n-.IX Item \"-v\"\n-Verbose mode.  Print out \\s-1GNU\\s0 \\s-1CPP\\s0's version number at the beginning of\n-execution, and report the final form of the include path.\n-.Ip \"\\fB\\-H\\fR\" 4\n-.IX Item \"-H\"\n-Print the name of each header file used, in addition to other normal\n-activities.  Each name is indented to show how deep in the\n-\\&\\fB#include\\fR stack it is.\n-.Ip \"\\fB\\-version\\fR\" 4\n-.IX Item \"-version\"\n-.PD 0\n-.Ip \"\\fB\\*(--version\\fR\" 4\n-.IX Item \"version\"\n-.PD\n-Print out \\s-1GNU\\s0 \\s-1CPP\\s0's version number.  With one dash, proceed to\n-preprocess as normal.  With two dashes, exit immediately.\n-.SH \"SEE ALSO\"\n-.IX Header \"SEE ALSO\"\n-\\&\\fIgcc\\fR\\|(1), \\fIas\\fR\\|(1), \\fIld\\fR\\|(1), and the Info entries for \\fIcpp\\fR, \\fIgcc\\fR, and\n-\\&\\fIbinutils\\fR.\n-.SH \"COPYRIGHT\"\n-.IX Header \"COPYRIGHT\"\n-Copyright (c) 1987, 1989, 1991, 1992, 1993, 1994, 1995, 1996,\n-1997, 1998, 1999, 2000, 2001\n-Free Software Foundation, Inc.\n-.PP\n-Permission is granted to copy, distribute and/or modify this document\n-under the terms of the \\s-1GNU\\s0 Free Documentation License, Version 1.1 or\n-any later version published by the Free Software Foundation.  A copy of\n-the license is included in the accompanying manual for \\s-1GCC\\s0, in the\n-section ``\\s-1GNU\\s0 Free Documentation License''.\n-This manual contains no Invariant Sections, and has no Front-Cover Texts\n-or Back-Cover Texts."}, {"sha": "fd33750eb2460f19490852d7a8b233f4895c37c2", "filename": "gcc/doc/gcc.1", "status": "removed", "additions": 0, "deletions": 8092, "changes": 8092, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2Fdoc%2Fgcc.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2Fdoc%2Fgcc.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.1?ref=eea81d3e5d04ea812901fa4178465279bde96ca3"}, {"sha": "e2f1fa9cb6d30af287d49f1ec190087d44536136", "filename": "gcc/doc/gcov.1", "status": "removed", "additions": 0, "deletions": 406, "changes": 406, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2Fdoc%2Fgcov.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eea81d3e5d04ea812901fa4178465279bde96ca3/gcc%2Fdoc%2Fgcov.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.1?ref=eea81d3e5d04ea812901fa4178465279bde96ca3", "patch": "@@ -1,406 +0,0 @@\n-.\\\" Automatically generated by Pod::Man version 1.16\n-.\\\" Mon Jun 25 00:14:36 2001\n-.\\\"\n-.\\\" Standard preamble:\n-.\\\" ======================================================================\n-.de Sh \\\" Subsection heading\n-.br\n-.if t .Sp\n-.ne 5\n-.PP\n-\\fB\\\\$1\\fR\n-.PP\n-..\n-.de Sp \\\" Vertical space (when we can't use .PP)\n-.if t .sp .5v\n-.if n .sp\n-..\n-.de Ip \\\" List item\n-.br\n-.ie \\\\n(.$>=3 .ne \\\\$3\n-.el .ne 3\n-.IP \"\\\\$1\" \\\\$2\n-..\n-.de Vb \\\" Begin verbatim text\n-.ft CW\n-.nf\n-.ne \\\\$1\n-..\n-.de Ve \\\" End verbatim text\n-.ft R\n-\n-.fi\n-..\n-.\\\" Set up some character translations and predefined strings.  \\*(-- will\n-.\\\" give an unbreakable dash, \\*(PI will give pi, \\*(L\" will give a left\n-.\\\" double quote, and \\*(R\" will give a right double quote.  | will give a\n-.\\\" real vertical bar.  \\*(C+ will give a nicer C++.  Capital omega is used\n-.\\\" to do unbreakable dashes and therefore won't be available.  \\*(C` and\n-.\\\" \\*(C' expand to `' in nroff, nothing in troff, for use with C<>\n-.tr \\(*W-|\\(bv\\*(Tr\n-.ds C+ C\\v'-.1v'\\h'-1p'\\s-2+\\h'-1p'+\\s0\\v'.1v'\\h'-1p'\n-.ie n \\{\\\n-.    ds -- \\(*W-\n-.    ds PI pi\n-.    if (\\n(.H=4u)&(1m=24u) .ds -- \\(*W\\h'-12u'\\(*W\\h'-12u'-\\\" diablo 10 pitch\n-.    if (\\n(.H=4u)&(1m=20u) .ds -- \\(*W\\h'-12u'\\(*W\\h'-8u'-\\\"  diablo 12 pitch\n-.    ds L\" \"\"\n-.    ds R\" \"\"\n-.    ds C` \"\"\n-.    ds C' \"\"\n-'br\\}\n-.el\\{\\\n-.    ds -- \\|\\(em\\|\n-.    ds PI \\(*p\n-.    ds L\" ``\n-.    ds R\" ''\n-'br\\}\n-.\\\"\n-.\\\" If the F register is turned on, we'll generate index entries on stderr\n-.\\\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and\n-.\\\" index entries marked with X<> in POD.  Of course, you'll have to process\n-.\\\" the output yourself in some meaningful fashion.\n-.if \\nF \\{\\\n-.    de IX\n-.    tm Index:\\\\$1\\t\\\\n%\\t\"\\\\$2\"\n-..\n-.    nr % 0\n-.    rr F\n-.\\}\n-.\\\"\n-.\\\" For nroff, turn off justification.  Always turn off hyphenation; it\n-.\\\" makes way too many mistakes in technical documents.\n-.hy 0\n-.if n .na\n-.\\\"\n-.\\\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).\n-.\\\" Fear.  Run.  Save yourself.  No user-serviceable parts.\n-.bd B 3\n-.    \\\" fudge factors for nroff and troff\n-.if n \\{\\\n-.    ds #H 0\n-.    ds #V .8m\n-.    ds #F .3m\n-.    ds #[ \\f1\n-.    ds #] \\fP\n-.\\}\n-.if t \\{\\\n-.    ds #H ((1u-(\\\\\\\\n(.fu%2u))*.13m)\n-.    ds #V .6m\n-.    ds #F 0\n-.    ds #[ \\&\n-.    ds #] \\&\n-.\\}\n-.    \\\" simple accents for nroff and troff\n-.if n \\{\\\n-.    ds ' \\&\n-.    ds ` \\&\n-.    ds ^ \\&\n-.    ds , \\&\n-.    ds ~ ~\n-.    ds /\n-.\\}\n-.if t \\{\\\n-.    ds ' \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\'\\h\"|\\\\n:u\"\n-.    ds ` \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\`\\h'|\\\\n:u'\n-.    ds ^ \\\\k:\\h'-(\\\\n(.wu*10/11-\\*(#H)'^\\h'|\\\\n:u'\n-.    ds , \\\\k:\\h'-(\\\\n(.wu*8/10)',\\h'|\\\\n:u'\n-.    ds ~ \\\\k:\\h'-(\\\\n(.wu-\\*(#H-.1m)'~\\h'|\\\\n:u'\n-.    ds / \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H)'\\z\\(sl\\h'|\\\\n:u'\n-.\\}\n-.    \\\" troff and (daisy-wheel) nroff accents\n-.ds : \\\\k:\\h'-(\\\\n(.wu*8/10-\\*(#H+.1m+\\*(#F)'\\v'-\\*(#V'\\z.\\h'.2m+\\*(#F'.\\h'|\\\\n:u'\\v'\\*(#V'\n-.ds 8 \\h'\\*(#H'\\(*b\\h'-\\*(#H'\n-.ds o \\\\k:\\h'-(\\\\n(.wu+\\w'\\(de'u-\\*(#H)/2u'\\v'-.3n'\\*(#[\\z\\(de\\v'.3n'\\h'|\\\\n:u'\\*(#]\n-.ds d- \\h'\\*(#H'\\(pd\\h'-\\w'~'u'\\v'-.25m'\\f2\\(hy\\fP\\v'.25m'\\h'-\\*(#H'\n-.ds D- D\\\\k:\\h'-\\w'D'u'\\v'-.11m'\\z\\(hy\\v'.11m'\\h'|\\\\n:u'\n-.ds th \\*(#[\\v'.3m'\\s+1I\\s-1\\v'-.3m'\\h'-(\\w'I'u*2/3)'\\s-1o\\s+1\\*(#]\n-.ds Th \\*(#[\\s+2I\\s-2\\h'-\\w'I'u*3/5'\\v'-.3m'o\\v'.3m'\\*(#]\n-.ds ae a\\h'-(\\w'a'u*4/10)'e\n-.ds Ae A\\h'-(\\w'A'u*4/10)'E\n-.    \\\" corrections for vroff\n-.if v .ds ~ \\\\k:\\h'-(\\\\n(.wu*9/10-\\*(#H)'\\s-2\\u~\\d\\s+2\\h'|\\\\n:u'\n-.if v .ds ^ \\\\k:\\h'-(\\\\n(.wu*10/11-\\*(#H)'\\v'-.4m'^\\v'.4m'\\h'|\\\\n:u'\n-.    \\\" for low resolution devices (crt and lpr)\n-.if \\n(.H>23 .if \\n(.V>19 \\\n-\\{\\\n-.    ds : e\n-.    ds 8 ss\n-.    ds o a\n-.    ds d- d\\h'-1'\\(ga\n-.    ds D- D\\h'-1'\\(hy\n-.    ds th \\o'bp'\n-.    ds Th \\o'LP'\n-.    ds ae ae\n-.    ds Ae AE\n-.\\}\n-.rm #[ #] #H #V #F C\n-.\\\" ======================================================================\n-.\\\"\n-.IX Title \"GCOV 1\"\n-.TH GCOV 1 \"gcc-3.1\" \"2001-06-25\" \"GNU\"\n-.UC\n-.SH \"NAME\"\n-gcov \\- coverage testing tool\n-.SH \"SYNOPSIS\"\n-.IX Header \"SYNOPSIS\"\n-gcov [\\fB\\-b\\fR] [\\fB\\-c\\fR] [\\fB\\-v\\fR] [\\fB\\-n\\fR] [\\fB\\-l\\fR] [\\fB\\-f\\fR] [\\fB\\-o\\fR \\fIdirectory\\fR] \\fIsourcefile\\fR\n-.SH \"DESCRIPTION\"\n-.IX Header \"DESCRIPTION\"\n-\\&\\fBgcov\\fR is a test coverage program.  Use it in concert with \\s-1GCC\\s0\n-to analyze your programs to help create more efficient, faster\n-running code.  You can use \\fBgcov\\fR as a profiling tool to help\n-discover where your optimization efforts will best affect your code.  You\n-can also use \\fBgcov\\fR along with the other profiling tool,\n-\\&\\fBgprof\\fR, to assess which parts of your code use the greatest amount\n-of computing time.\n-.PP\n-Profiling tools help you analyze your code's performance.  Using a\n-profiler such as \\fBgcov\\fR or \\fBgprof\\fR, you can find out some\n-basic performance statistics, such as:\n-.Ip \"\\(bu\" 4\n-how often each line of code executes\n-.Ip \"\\(bu\" 4\n-what lines of code are actually executed\n-.Ip \"\\(bu\" 4\n-how much computing time each section of code uses\n-.PP\n-Once you know these things about how your code works when compiled, you\n-can look at each module to see which modules should be optimized.\n-\\&\\fBgcov\\fR helps you determine where to work on optimization.\n-.PP\n-Software developers also use coverage testing in concert with\n-testsuites, to make sure software is actually good enough for a release.\n-Testsuites can verify that a program works as expected; a coverage\n-program tests to see how much of the program is exercised by the\n-testsuite.  Developers can then determine what kinds of test cases need\n-to be added to the testsuites to create both better testing and a better\n-final product.\n-.PP\n-You should compile your code without optimization if you plan to use\n-\\&\\fBgcov\\fR because the optimization, by combining some lines of code\n-into one function, may not give you as much information as you need to\n-look for `hot spots' where the code is using a great deal of computer\n-time.  Likewise, because \\fBgcov\\fR accumulates statistics by line (at\n-the lowest resolution), it works best with a programming style that\n-places only one statement on each line.  If you use complicated macros\n-that expand to loops or to other control structures, the statistics are\n-less helpful\\-\\-\\-they only report on the line where the macro call\n-appears.  If your complex macros behave like functions, you can replace\n-them with inline functions to solve this problem.\n-.PP\n-\\&\\fBgcov\\fR creates a logfile called \\fI\\fIsourcefile\\fI.gcov\\fR which\n-indicates how many times each line of a source file \\fI\\fIsourcefile\\fI.c\\fR\n-has executed.  You can use these logfiles along with \\fBgprof\\fR to aid\n-in fine-tuning the performance of your programs.  \\fBgprof\\fR gives\n-timing information you can use along with the information you get from\n-\\&\\fBgcov\\fR.\n-.PP\n-\\&\\fBgcov\\fR works only on code compiled with \\s-1GCC\\s0.  It is not\n-compatible with any other profiling or test coverage mechanism.\n-.SH \"OPTIONS\"\n-.IX Header \"OPTIONS\"\n-.Ip \"\\fB\\-b\\fR\" 4\n-.IX Item \"-b\"\n-Write branch frequencies to the output file, and write branch summary\n-info to the standard output.  This option allows you to see how often\n-each branch in your program was taken.\n-.Ip \"\\fB\\-c\\fR\" 4\n-.IX Item \"-c\"\n-Write branch frequencies as the number of branches taken, rather than\n-the percentage of branches taken.\n-.Ip \"\\fB\\-v\\fR\" 4\n-.IX Item \"-v\"\n-Display the \\fBgcov\\fR version number (on the standard error stream).\n-.Ip \"\\fB\\-n\\fR\" 4\n-.IX Item \"-n\"\n-Do not create the \\fBgcov\\fR output file.\n-.Ip \"\\fB\\-l\\fR\" 4\n-.IX Item \"-l\"\n-Create long file names for included source files.  For example, if the\n-header file \\fIx.h\\fR contains code, and was included in the file\n-\\&\\fIa.c\\fR, then running \\fBgcov\\fR on the file \\fIa.c\\fR will produce\n-an output file called \\fIa.c.x.h.gcov\\fR instead of \\fIx.h.gcov\\fR.\n-This can be useful if \\fIx.h\\fR is included in multiple source files.\n-.Ip \"\\fB\\-f\\fR\" 4\n-.IX Item \"-f\"\n-Output summaries for each function in addition to the file level summary.\n-.Ip \"\\fB\\-o\\fR\" 4\n-.IX Item \"-o\"\n-The directory where the object files live.  Gcov will search for \\fI.bb\\fR,\n-\\&\\fI.bbg\\fR, and \\fI.da\\fR files in this directory.\n-.PP\n-When using \\fBgcov\\fR, you must first compile your program with two\n-special \\s-1GCC\\s0 options: \\fB\\-fprofile-arcs \\-ftest-coverage\\fR.\n-This tells the compiler to generate additional information needed by\n-gcov (basically a flow graph of the program) and also includes\n-additional code in the object files for generating the extra profiling\n-information needed by gcov.  These additional files are placed in the\n-directory where the source code is located.\n-.PP\n-Running the program will cause profile output to be generated.  For each\n-source file compiled with \\fB\\-fprofile-arcs\\fR, an accompanying \\fI.da\\fR\n-file will be placed in the source directory.\n-.PP\n-Running \\fBgcov\\fR with your program's source file names as arguments\n-will now produce a listing of the code along with frequency of execution\n-for each line.  For example, if your program is called \\fItmp.c\\fR, this\n-is what you see when you use the basic \\fBgcov\\fR facility:\n-.PP\n-.Vb 5\n-\\&        $ gcc -fprofile-arcs -ftest-coverage tmp.c\n-\\&        $ a.out\n-\\&        $ gcov tmp.c\n-\\&         87.50% of 8 source lines executed in file tmp.c\n-\\&        Creating tmp.c.gcov.\n-.Ve\n-The file \\fItmp.c.gcov\\fR contains output from \\fBgcov\\fR.\n-Here is a sample:\n-.PP\n-.Vb 3\n-\\&                        main()\n-\\&                        {\n-\\&                   1      int i, total;\n-.Ve\n-.Vb 1\n-\\&                   1      total = 0;\n-.Ve\n-.Vb 2\n-\\&                  11      for (i = 0; i < 10; i++)\n-\\&                  10        total += i;\n-.Ve\n-.Vb 5\n-\\&                   1      if (total != 45)\n-\\&              ######        printf (\"Failure\\en\");\n-\\&                          else\n-\\&                   1        printf (\"Success\\en\");\n-\\&                   1    }\n-.Ve\n-When you use the \\fB\\-b\\fR option, your output looks like this:\n-.PP\n-.Vb 6\n-\\&        $ gcov -b tmp.c\n-\\&         87.50% of 8 source lines executed in file tmp.c\n-\\&         80.00% of 5 branches executed in file tmp.c\n-\\&         80.00% of 5 branches taken at least once in file tmp.c\n-\\&         50.00% of 2 calls executed in file tmp.c\n-\\&        Creating tmp.c.gcov.\n-.Ve\n-Here is a sample of a resulting \\fItmp.c.gcov\\fR file:\n-.PP\n-.Vb 3\n-\\&                        main()\n-\\&                        {\n-\\&                   1      int i, total;\n-.Ve\n-.Vb 1\n-\\&                   1      total = 0;\n-.Ve\n-.Vb 5\n-\\&                  11      for (i = 0; i < 10; i++)\n-\\&        branch 0 taken = 91%\n-\\&        branch 1 taken = 100%\n-\\&        branch 2 taken = 100%\n-\\&                  10        total += i;\n-.Ve\n-.Vb 9\n-\\&                   1      if (total != 45)\n-\\&        branch 0 taken = 100%\n-\\&              ######        printf (\"Failure\\en\");\n-\\&        call 0 never executed\n-\\&        branch 1 never executed\n-\\&                          else\n-\\&                   1        printf (\"Success\\en\");\n-\\&        call 0 returns = 100%\n-\\&                   1    }\n-.Ve\n-For each basic block, a line is printed after the last line of the basic\n-block describing the branch or call that ends the basic block.  There can\n-be multiple branches and calls listed for a single source line if there\n-are multiple basic blocks that end on that line.  In this case, the\n-branches and calls are each given a number.  There is no simple way to map\n-these branches and calls back to source constructs.  In general, though,\n-the lowest numbered branch or call will correspond to the leftmost construct\n-on the source line.\n-.PP\n-For a branch, if it was executed at least once, then a percentage\n-indicating the number of times the branch was taken divided by the\n-number of times the branch was executed will be printed.  Otherwise, the\n-message ``never executed'' is printed.\n-.PP\n-For a call, if it was executed at least once, then a percentage\n-indicating the number of times the call returned divided by the number\n-of times the call was executed will be printed.  This will usually be\n-100%, but may be less for functions call \\f(CW\\*(C`exit\\*(C'\\fR or \\f(CW\\*(C`longjmp\\*(C'\\fR,\n-and thus may not return every time they are called.\n-.PP\n-The execution counts are cumulative.  If the example program were\n-executed again without removing the \\fI.da\\fR file, the count for the\n-number of times each line in the source was executed would be added to\n-the results of the previous run(s).  This is potentially useful in\n-several ways.  For example, it could be used to accumulate data over a\n-number of program runs as part of a test verification suite, or to\n-provide more accurate long-term information over a large number of\n-program runs.\n-.PP\n-The data in the \\fI.da\\fR files is saved immediately before the program\n-exits.  For each source file compiled with \\fB\\-fprofile-arcs\\fR, the profiling\n-code first attempts to read in an existing \\fI.da\\fR file; if the file\n-doesn't match the executable (differing number of basic block counts) it\n-will ignore the contents of the file.  It then adds in the new execution\n-counts and finally writes the data to the file.\n-.Sh \"Using \\fBgcov\\fP with \\s-1GCC\\s0 Optimization\"\n-.IX Subsection \"Using gcov with GCC Optimization\"\n-If you plan to use \\fBgcov\\fR to help optimize your code, you must\n-first compile your program with two special \\s-1GCC\\s0 options:\n-\\&\\fB\\-fprofile-arcs \\-ftest-coverage\\fR.  Aside from that, you can use any\n-other \\s-1GCC\\s0 options; but if you want to prove that every single line\n-in your program was executed, you should not compile with optimization\n-at the same time.  On some machines the optimizer can eliminate some\n-simple code lines by combining them with other lines.  For example, code\n-like this:\n-.PP\n-.Vb 4\n-\\&        if (a != b)\n-\\&          c = 1;\n-\\&        else\n-\\&          c = 0;\n-.Ve\n-can be compiled into one instruction on some machines.  In this case,\n-there is no way for \\fBgcov\\fR to calculate separate execution counts\n-for each line because there isn't separate code for each line.  Hence\n-the \\fBgcov\\fR output looks like this if you compiled the program with\n-optimization:\n-.PP\n-.Vb 4\n-\\&              100  if (a != b)\n-\\&              100    c = 1;\n-\\&              100  else\n-\\&              100    c = 0;\n-.Ve\n-The output shows that this block of code, combined by optimization,\n-executed 100 times.  In one sense this result is correct, because there\n-was only one instruction representing all four of these lines.  However,\n-the output does not indicate how many times the result was 0 and how\n-many times the result was 1.\n-.SH \"SEE ALSO\"\n-.IX Header \"SEE ALSO\"\n-\\&\\fIgcc\\fR\\|(1) and the Info entry for \\fIgcc\\fR.\n-.SH \"COPYRIGHT\"\n-.IX Header \"COPYRIGHT\"\n-Copyright (c) 1996, 1997, 1999, 2000 Free Software Foundation, Inc.\n-.PP\n-Permission is granted to make and distribute verbatim copies of this\n-manual provided the copyright notice and this permission notice are\n-preserved on all copies.\n-.PP\n-Permission is granted to copy and distribute modified versions of this\n-manual under the conditions for verbatim copying, provided also that the\n-entire resulting derived work is distributed under the terms of a\n-permission notice identical to this one.\n-.PP\n-Permission is granted to copy and distribute translations of this manual\n-into another language, under the above conditions for modified versions,\n-except that this permission notice may be included in translations\n-approved by the Free Software Foundation instead of in the original\n-English."}]}