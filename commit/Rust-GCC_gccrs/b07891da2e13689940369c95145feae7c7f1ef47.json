{"sha": "b07891da2e13689940369c95145feae7c7f1ef47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA3ODkxZGEyZTEzNjg5OTQwMzY5Yzk1MTQ1ZmVhZTdjN2YxZWY0Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-12-15T20:19:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-12-15T20:19:51Z"}, "message": "re PR c++/64297 (ICE: canonical types differ for identical types)\n\n\tPR c++/64297\n\t* typeck.c (apply_memfn_quals): Correct wrong TYPE_CANONICAL.\n\nFrom-SVN: r218763", "tree": {"sha": "f33260a7ccb7a432a194d5b0812d815cb7f717f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f33260a7ccb7a432a194d5b0812d815cb7f717f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b07891da2e13689940369c95145feae7c7f1ef47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07891da2e13689940369c95145feae7c7f1ef47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b07891da2e13689940369c95145feae7c7f1ef47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07891da2e13689940369c95145feae7c7f1ef47/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3202dcccb9dec6a008c9f1887fd4a4c75ebc8940"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "afb24839c4256792ef7251235194e5a966e11489", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07891da2e13689940369c95145feae7c7f1ef47/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07891da2e13689940369c95145feae7c7f1ef47/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b07891da2e13689940369c95145feae7c7f1ef47", "patch": "@@ -1,5 +1,8 @@\n 2014-12-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/64297\n+\t* typeck.c (apply_memfn_quals): Correct wrong TYPE_CANONICAL.\n+\n \tN3778: Sized Deallocation\n \t* call.c (non_placement_deallocation_fn_p): A global sized\n \toperator delete is not a usual deallocation function until C++14."}, {"sha": "9368b49b012c167f0effba5fa709a2d64cd8bf9d", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07891da2e13689940369c95145feae7c7f1ef47/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07891da2e13689940369c95145feae7c7f1ef47/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=b07891da2e13689940369c95145feae7c7f1ef47", "patch": "@@ -8945,6 +8945,12 @@ apply_memfn_quals (tree type, cp_cv_quals memfn_quals, cp_ref_qualifier rqual)\n   /* This should really have a different TYPE_MAIN_VARIANT, but that gets\n      complex.  */\n   tree result = build_qualified_type (type, memfn_quals);\n+  if (tree canon = TYPE_CANONICAL (result))\n+    if (canon != result)\n+      /* check_qualified_type doesn't check the ref-qualifier, so make sure\n+\t TYPE_CANONICAL is correct.  */\n+      TYPE_CANONICAL (result)\n+\t= build_ref_qualified_type (canon, type_memfn_rqual (result));\n   result = build_exception_variant (result, TYPE_RAISES_EXCEPTIONS (type));\n   return build_ref_qualified_type (result, rqual);\n }"}, {"sha": "1d7650bb61bad24ab5d1e52e525a7b32602308fa", "filename": "gcc/testsuite/g++.dg/cpp0x/ref-qual16.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b07891da2e13689940369c95145feae7c7f1ef47/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b07891da2e13689940369c95145feae7c7f1ef47/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual16.C?ref=b07891da2e13689940369c95145feae7c7f1ef47", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/64297\n+// { dg-do compile { target c++11 } }\n+\n+struct A {\n+  typedef int X;\n+  template <int> X m_fn1() const;\n+};\n+template <typename> struct is_function {};\n+is_function<int() const &> i;\n+struct D {\n+  template <typename Y, typename = is_function<Y>> D(Y);\n+} b(&A::m_fn1<0>);"}]}