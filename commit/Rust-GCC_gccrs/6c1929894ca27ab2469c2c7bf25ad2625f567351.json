{"sha": "6c1929894ca27ab2469c2c7bf25ad2625f567351", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMxOTI5ODk0Y2EyN2FiMjQ2OWMyYzdiZjI1YWQyNjI1ZjU2NzM1MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-09-03T08:04:22Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-23T08:24:59Z"}, "message": "[Ada] Fix logic in C_Select under mingw\n\ngcc/ada/\n\n\t* libgnat/g-socthi__mingw.adb (C_Select): Fix logic in code and\n\tmake it explicit that we are checking against null values before\n\tdereferencing them.", "tree": {"sha": "02afe911b4dbf1efdffcbb8732f21a8797e8c947", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02afe911b4dbf1efdffcbb8732f21a8797e8c947"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c1929894ca27ab2469c2c7bf25ad2625f567351", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c1929894ca27ab2469c2c7bf25ad2625f567351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c1929894ca27ab2469c2c7bf25ad2625f567351", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c1929894ca27ab2469c2c7bf25ad2625f567351/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a5c9377f6d99ea23520f71340880b2fcb7bef11", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5c9377f6d99ea23520f71340880b2fcb7bef11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5c9377f6d99ea23520f71340880b2fcb7bef11"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "dd8a68ca8ceb6ea510a9a4423adf6d3b4dbcfdca", "filename": "gcc/ada/libgnat/g-socthi__mingw.adb", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1929894ca27ab2469c2c7bf25ad2625f567351/gcc%2Fada%2Flibgnat%2Fg-socthi__mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1929894ca27ab2469c2c7bf25ad2625f567351/gcc%2Fada%2Flibgnat%2Fg-socthi__mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-socthi__mingw.adb?ref=6c1929894ca27ab2469c2c7bf25ad2625f567351", "patch": "@@ -375,13 +375,10 @@ package body GNAT.Sockets.Thin is\n       Exceptfds : access Fd_Set;\n       Timeout   : Timeval_Access) return C.int\n    is\n-      pragma Warnings (Off, Exceptfds);\n-\n-      Original_WFS : aliased constant Fd_Set := Writefds.all;\n-\n-      Res  : C.int;\n-      S    : aliased C.int;\n-      Last : aliased C.int;\n+      Original_WFS : aliased Fd_Set;\n+      Res          : C.int;\n+      S            : aliased C.int;\n+      Last         : aliased C.int;\n \n    begin\n       --  Asynchronous connection failures are notified in the exception fd\n@@ -392,7 +389,8 @@ package body GNAT.Sockets.Thin is\n       --  present in the initial write fd set, then move the socket from the\n       --  exception fd set to the write fd set.\n \n-      if Writefds /= No_Fd_Set_Access then\n+      if Writefds /= null then\n+         Original_WFS := Writefds.all;\n \n          --  Add any socket present in write fd set into exception fd set\n \n@@ -411,7 +409,7 @@ package body GNAT.Sockets.Thin is\n \n       Res := Standard_Select (Nfds, Readfds, Writefds, Exceptfds, Timeout);\n \n-      if Exceptfds /= No_Fd_Set_Access then\n+      if Exceptfds /= null then\n          declare\n             EFSC    : aliased Fd_Set := Exceptfds.all;\n             Flag    : constant C.int := SOSC.MSG_PEEK + SOSC.MSG_OOB;\n@@ -448,15 +446,16 @@ package body GNAT.Sockets.Thin is\n                   --  exception fd set back to write fd set. Otherwise, ignore\n                   --  this event since the user is not watching for it.\n \n-                  if Writefds /= No_Fd_Set_Access\n-                    and then (Is_Socket_In_Set (Original_WFS'Access, S) /= 0)\n+                  if Writefds /= null\n+                    and then Is_Socket_In_Set (Original_WFS'Access, S) /= 0\n                   then\n                      Insert_Socket_In_Set (Writefds, S);\n                   end if;\n                end if;\n             end loop;\n          end;\n       end if;\n+\n       return Res;\n    end C_Select;\n "}]}