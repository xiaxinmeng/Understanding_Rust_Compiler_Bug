{"sha": "5c4f225fcfbad841f98fe6b7813bf07de8817cea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM0ZjIyNWZjZmJhZDg0MWY5OGZlNmI3ODEzYmYwN2RlODgxN2NlYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2010-05-10T16:13:52Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2010-05-10T16:13:52Z"}, "message": "passes.c (ipa_write_summaries_1, [...]): Allocate encoders.\n\n\n\t* passes.c (ipa_write_summaries_1, ipa_write_optimization_summaries): Allocate\n\tencoders.\n\t* lto-section-out.c (lto_new_out_decl_state): Do not allocate it here.\n\t* lto-streamer.c (lto_streamer_cache_insert_1): Use alloc pool.\n\t(lto_streamer_cache_create): Init alloc pool.\n\t(lto_streamer_cache_delete): Free alloc pool.\n\t* lto-streamer.h: Include alloc pool.\n\t(lto_streamer_cache_d): Use alloc pool.\n\t* lto-stramer-out.c (produce_asm_for_decls): Delete fn_out_states.\n\nFrom-SVN: r159230", "tree": {"sha": "af4fa061a1b315f2199661fa8e32fbeec97d0a94", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af4fa061a1b315f2199661fa8e32fbeec97d0a94"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c4f225fcfbad841f98fe6b7813bf07de8817cea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c4f225fcfbad841f98fe6b7813bf07de8817cea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c4f225fcfbad841f98fe6b7813bf07de8817cea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c4f225fcfbad841f98fe6b7813bf07de8817cea/comments", "author": null, "committer": null, "parents": [{"sha": "de61f46712258bf735c5173e92655569bc732f13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de61f46712258bf735c5173e92655569bc732f13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de61f46712258bf735c5173e92655569bc732f13"}], "stats": {"total": 32, "additions": 28, "deletions": 4}, "files": [{"sha": "b4b9a65d099485859e15d4eda8f8f34d82c545f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c4f225fcfbad841f98fe6b7813bf07de8817cea", "patch": "@@ -1,3 +1,15 @@\n+2010-05-10  Jan Hubicka  <jh@suse.cz>\n+\n+\t* passes.c (ipa_write_summaries_1, ipa_write_optimization_summaries): Allocate\n+\tencoders.\n+\t* lto-section-out.c (lto_new_out_decl_state): Do not allocate it here.\n+\t* lto-streamer.c (lto_streamer_cache_insert_1): Use alloc pool.\n+\t(lto_streamer_cache_create): Init alloc pool.\n+\t(lto_streamer_cache_delete): Free alloc pool.\n+\t* lto-streamer.h: Include alloc pool.\n+\t(lto_streamer_cache_d): Use alloc pool.\n+\t* lto-stramer-out.c (produce_asm_for_decls): Delete fn_out_states.\n+\n 2010-05-10  Jan Hubicka  <jh@suse.cz>\n \n \t* Makefile.in (cgraphbuild.o): Add dependency on except.h."}, {"sha": "b5353f34af282c66966bda070c9fb60a9e55b3fc", "filename": "gcc/lto-section-out.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Flto-section-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Flto-section-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-section-out.c?ref=5c4f225fcfbad841f98fe6b7813bf07de8817cea", "patch": "@@ -542,9 +542,6 @@ lto_new_out_decl_state (void)\n       lto_init_tree_ref_encoder (&state->streams[i], hash_fn, eq_fn);\n     }\n \n-  state->cgraph_node_encoder = lto_cgraph_encoder_new ();\n-  state->varpool_node_encoder = lto_varpool_encoder_new ();\n-\n   return state;\n }\n "}, {"sha": "86f2c73aac9648e739ce122838990a8569cf35d6", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=5c4f225fcfbad841f98fe6b7813bf07de8817cea", "patch": "@@ -2505,6 +2505,7 @@ produce_asm_for_decls (cgraph_node_set set, varpool_node_set vset)\n       fn_out_state =\n \tVEC_index (lto_out_decl_state_ptr, lto_function_decl_states, idx);\n       lto_output_decl_state_refs (ob, decl_state_stream, fn_out_state);\n+      lto_delete_out_decl_state (fn_out_state);\n     }\n   lto_write_stream (decl_state_stream);\n   free(decl_state_stream);"}, {"sha": "0ae7c0c619637ea500d4a77e176a1e7b5661dd16", "filename": "gcc/lto-streamer.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Flto-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Flto-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.c?ref=5c4f225fcfbad841f98fe6b7813bf07de8817cea", "patch": "@@ -500,7 +500,7 @@ lto_streamer_cache_insert_1 (struct lto_streamer_cache_d *cache,\n       else\n \tix = *ix_p;\n \n-      entry = XCNEW (struct tree_int_map);\n+      entry = (struct tree_int_map *)pool_alloc (cache->node_map_entries);\n       entry->base.from = t;\n       entry->to = (unsigned) ix;\n       *slot = entry;\n@@ -762,6 +762,10 @@ lto_streamer_cache_create (void)\n \n   cache->node_map = htab_create (101, tree_int_map_hash, tree_int_map_eq, NULL);\n \n+  cache->node_map_entries = create_alloc_pool (\"node map\",\n+\t\t\t\t\t       sizeof (struct tree_int_map),\n+\t\t\t\t\t       100);\n+\n   /* Load all the well-known tree nodes that are always created by\n      the compiler on startup.  This prevents writing them out\n      unnecessarily.  */\n@@ -785,6 +789,7 @@ lto_streamer_cache_delete (struct lto_streamer_cache_d *c)\n     return;\n \n   htab_delete (c->node_map);\n+  free_alloc_pool (c->node_map_entries);\n   VEC_free (tree, gc, c->nodes);\n   VEC_free (unsigned, heap, c->offsets);\n   free (c);"}, {"sha": "65e2b3f4c75f71773c6764a3ec449c17ea1a4275", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=5c4f225fcfbad841f98fe6b7813bf07de8817cea", "patch": "@@ -30,6 +30,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"cgraph.h\"\n #include \"vec.h\"\n #include \"vecprim.h\"\n+#include \"alloc-pool.h\"\n \n /* Define when debugging the LTO streamer.  This causes the writer\n    to output the numeric value for the memory address of the tree node\n@@ -346,6 +347,9 @@ struct lto_streamer_cache_d\n   /* The mapping between tree nodes and slots into the nodes array.  */\n   htab_t node_map;\n \n+  /* Node map to store entries into.  */\n+  alloc_pool node_map_entries;\n+\n   /* Next available slot in the nodes and offsets arrays.  */\n   unsigned next_slot;\n "}, {"sha": "c087750cc19b5164c94c13f4ce912cd1ccbf32a6", "filename": "gcc/passes.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c4f225fcfbad841f98fe6b7813bf07de8817cea/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=5c4f225fcfbad841f98fe6b7813bf07de8817cea", "patch": "@@ -1694,6 +1694,9 @@ static void\n ipa_write_summaries_1 (cgraph_node_set set, varpool_node_set vset)\n {\n   struct lto_out_decl_state *state = lto_new_out_decl_state ();\n+  state->cgraph_node_encoder = lto_cgraph_encoder_new ();\n+  state->varpool_node_encoder = lto_varpool_encoder_new ();\n+\n   lto_push_out_decl_state (state);\n \n   gcc_assert (!flag_wpa);\n@@ -1805,6 +1808,8 @@ void\n ipa_write_optimization_summaries (cgraph_node_set set, varpool_node_set vset)\n {\n   struct lto_out_decl_state *state = lto_new_out_decl_state ();\n+  state->cgraph_node_encoder = lto_cgraph_encoder_new ();\n+  state->varpool_node_encoder = lto_varpool_encoder_new ();\n   lto_push_out_decl_state (state);\n \n   gcc_assert (flag_wpa);"}]}