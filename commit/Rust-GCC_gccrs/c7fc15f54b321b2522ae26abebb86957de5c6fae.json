{"sha": "c7fc15f54b321b2522ae26abebb86957de5c6fae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdmYzE1ZjU0YjMyMWIyNTIyYWUyNmFiZWJiODY5NTdkZTVjNmZhZQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-03-27T20:09:12Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2020-03-27T20:09:12Z"}, "message": "[pr84733]  Fix ICE popping local scope\n\n\tPR c++/84733\n\t* name-lookup.c (do_pushdecl): Look through cleanp levels.", "tree": {"sha": "8d01a790dc1cf2a91419db288f307e6bd2211d33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8d01a790dc1cf2a91419db288f307e6bd2211d33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7fc15f54b321b2522ae26abebb86957de5c6fae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7fc15f54b321b2522ae26abebb86957de5c6fae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7fc15f54b321b2522ae26abebb86957de5c6fae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7fc15f54b321b2522ae26abebb86957de5c6fae/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccacf77be5508dd5b4df59f402965196d11edb05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccacf77be5508dd5b4df59f402965196d11edb05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccacf77be5508dd5b4df59f402965196d11edb05"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "885f29d8c86fe04e234fa86b3e245593ea2577ba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7fc15f54b321b2522ae26abebb86957de5c6fae/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7fc15f54b321b2522ae26abebb86957de5c6fae/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c7fc15f54b321b2522ae26abebb86957de5c6fae", "patch": "@@ -1,3 +1,8 @@\n+2020-03-27  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/84733\n+\t* name-lookup.c (do_pushdecl): Look through cleanp levels.\n+\n 2020-03-27  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/94078"}, {"sha": "8dd0b0d723e76d8ced4f949e29d81c6e716fdd1c", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7fc15f54b321b2522ae26abebb86957de5c6fae/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7fc15f54b321b2522ae26abebb86957de5c6fae/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=c7fc15f54b321b2522ae26abebb86957de5c6fae", "patch": "@@ -2998,7 +2998,8 @@ do_pushdecl (tree decl, bool is_friend)\n   /* The binding level we will be pushing into.  During local class\n      pushing, we want to push to the containing scope.  */\n   cp_binding_level *level = current_binding_level;\n-  while (level->kind == sk_class)\n+  while (level->kind == sk_class\n+\t || level->kind == sk_cleanup)\n     level = level->level_chain;\n \n   /* An anonymous namespace has a NULL DECL_NAME, but we still want to"}, {"sha": "d0394eab89114c6adde54323041832be7840ead6", "filename": "gcc/testsuite/g++.dg/lookup/pr84733.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7fc15f54b321b2522ae26abebb86957de5c6fae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84733.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7fc15f54b321b2522ae26abebb86957de5c6fae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84733.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr84733.C?ref=c7fc15f54b321b2522ae26abebb86957de5c6fae", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile { target c++11 } }\n+// PR c++/84733 ICE popping local binding after cleanup region\n+\n+struct c {\n+  ~c();\n+} b;\n+\n+void f() {\n+#ifndef OK\n+  try {\n+  d:\n+    ;\n+  } catch (int) {\n+  }\n+#endif\n+  decltype(b) a;\n+  int e;\n+  struct e { } f;\n+  e = 5;\n+  struct e j;\n+}"}, {"sha": "d92e2920cd063cee5a657a0178184e8788d49a37", "filename": "gcc/testsuite/g++.dg/lookup/pr94257.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7fc15f54b321b2522ae26abebb86957de5c6fae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr94257.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7fc15f54b321b2522ae26abebb86957de5c6fae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr94257.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fpr94257.C?ref=c7fc15f54b321b2522ae26abebb86957de5c6fae", "patch": "@@ -0,0 +1,16 @@\n+// { dg-do compile { target c++11 } }\n+// PR94257 ICE with silly inline nest.\n+\n+inline namespace B { // { dg-message \"namespace B { }\" }\n+namespace B { }  // { dg-message \"namespace B::B { }\" }\n+}\n+\n+namespace B { // { dg-error \".namespace B. is ambiguous\" }\n+}\n+\n+// But this is fine\n+namespace D {\n+inline namespace D { }\n+}\n+namespace D {\n+}"}]}