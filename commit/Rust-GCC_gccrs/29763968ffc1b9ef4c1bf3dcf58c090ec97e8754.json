{"sha": "29763968ffc1b9ef4c1bf3dcf58c090ec97e8754", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk3NjM5NjhmZmMxYjllZjRjMWJmM2RjZjU4YzA5MGVjOTdlODc1NA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-01T17:23:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-01T17:23:22Z"}, "message": "* pa.c (pa_reorg): Explode ADDR_DIFF_VEC insns too.\n\nFrom-SVN: r14577", "tree": {"sha": "b02e1ac8541971f29aa038e74a0a354e4a7e5ec9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b02e1ac8541971f29aa038e74a0a354e4a7e5ec9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29763968ffc1b9ef4c1bf3dcf58c090ec97e8754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29763968ffc1b9ef4c1bf3dcf58c090ec97e8754", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29763968ffc1b9ef4c1bf3dcf58c090ec97e8754", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29763968ffc1b9ef4c1bf3dcf58c090ec97e8754/comments", "author": null, "committer": null, "parents": [{"sha": "8dff10278c53da7ae8ee33127897792d1788a16f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dff10278c53da7ae8ee33127897792d1788a16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dff10278c53da7ae8ee33127897792d1788a16f"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "b1b9d9dc1bcd7b25bb865c8b7759b6896b05bc02", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29763968ffc1b9ef4c1bf3dcf58c090ec97e8754/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29763968ffc1b9ef4c1bf3dcf58c090ec97e8754/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=29763968ffc1b9ef4c1bf3dcf58c090ec97e8754", "patch": "@@ -5809,16 +5809,17 @@ pa_reorg (insns)\n   /* This is fairly cheap, so always run it if optimizing.  */\n   if (optimize > 0 && !TARGET_BIG_SWITCH)\n     {\n-      /* Find and explode all ADDR_VEC insns.  */\n+      /* Find and explode all ADDR_VEC or ADDR_DIFF_VEC insns.  */\n       insns = get_insns ();\n       for (insn = insns; insn; insn = NEXT_INSN (insn))\n \t{\n \t  rtx pattern, tmp, location;\n \t  unsigned int length, i;\n \n-\t  /* Find an ADDR_VEC insn to explode.  */\n+\t  /* Find an ADDR_VEC or ADDR_DIFF_VEC insn to explode.  */\n \t  if (GET_CODE (insn) != JUMP_INSN\n-\t      || GET_CODE (PATTERN (insn)) != ADDR_VEC)\n+\t      || (GET_CODE (PATTERN (insn)) != ADDR_VEC\n+\t\t  && GET_CODE (PATTERN (insn)) != ADDR_DIFF_VEC))\n \t    continue;\n \n \t  /* If needed, emit marker for the beginning of the branch table.  */\n@@ -5827,7 +5828,7 @@ pa_reorg (insns)\n \n \t  pattern = PATTERN (insn);\n \t  location = PREV_INSN (insn);\n-          length = XVECLEN (pattern, 0);\n+          length = XVECLEN (pattern, GET_CODE (pattern) == ADDR_DIFF_VEC);\n \n \t  for (i = 0; i < length; i++)\n \t    {\n@@ -5838,12 +5839,24 @@ pa_reorg (insns)\n \t      emit_label_after (tmp, location);\n \t      location = NEXT_INSN (location);\n \n-\t      /* Emit the jump itself.  */\n-\t      tmp = gen_switch_jump (XEXP (XVECEXP (pattern, 0, i), 0));\n-\t      tmp = emit_jump_insn_after (tmp, location);\n-\t      JUMP_LABEL (tmp) = XEXP (XVECEXP (pattern, 0, i), 0);\n-\t      LABEL_NUSES (JUMP_LABEL (tmp))++;\n-\t      location = NEXT_INSN (location);\n+\t      if (GET_CODE (pattern) == ADDR_VEC)\n+\t\t{\n+\t\t  /* Emit the jump itself.  */\n+\t\t  tmp = gen_switch_jump (XEXP (XVECEXP (pattern, 0, i), 0));\n+\t\t  tmp = emit_jump_insn_after (tmp, location);\n+\t\t  JUMP_LABEL (tmp) = XEXP (XVECEXP (pattern, 0, i), 0);\n+\t\t  LABEL_NUSES (JUMP_LABEL (tmp))++;\n+\t\t  location = NEXT_INSN (location);\n+\t\t}\n+\t      else\n+\t\t{\n+\t\t  /* Emit the jump itself.  */\n+\t\t  tmp = gen_switch_jump (XEXP (XVECEXP (pattern, 1, i), 0));\n+\t\t  tmp = emit_jump_insn_after (tmp, location);\n+\t\t  JUMP_LABEL (tmp) = XEXP (XVECEXP (pattern, 1, i), 0);\n+\t\t  LABEL_NUSES (JUMP_LABEL (tmp))++;\n+\t\t  location = NEXT_INSN (location);\n+\t\t}\n \n \t      /* Emit a BARRIER after the jump.  */\n \t      emit_barrier_after (location);\n@@ -5858,7 +5871,7 @@ pa_reorg (insns)\n \t      emit_barrier_after (location);\n \t    }\n \n-\t  /* Delete the ADDR_VEC.  */\n+\t  /* Delete the ADDR_VEC or ADDR_DIFF_VEC.  */\n \t  delete_insn (insn);\n \t}\n     }\n@@ -5870,7 +5883,8 @@ pa_reorg (insns)\n \t{\n \t  /* Find an ADDR_VEC insn.  */\n \t  if (GET_CODE (insn) != JUMP_INSN\n-\t      || GET_CODE (PATTERN (insn)) != ADDR_VEC)\n+\t      || (GET_CODE (PATTERN (insn)) != ADDR_VEC\n+\t\t  && GET_CODE (PATTERN (insn)) != ADDR_DIFF_VEC))\n \t    continue;\n \n \t  /* Now generate markers for the beginning and end of the"}]}