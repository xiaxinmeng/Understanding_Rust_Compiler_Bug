{"sha": "9cd470742f356c4898b56bfca15f84c569701ce6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNkNDcwNzQyZjM1NmM0ODk4YjU2YmZjYTE1Zjg0YzU2OTcwMWNlNg==", "commit": {"author": {"name": "David Ayers", "email": "d.ayers@inode.at", "date": "2005-10-21T21:27:08Z"}, "committer": {"name": "David Ayers", "email": "ayers@gcc.gnu.org", "date": "2005-10-21T21:27:08Z"}, "message": "except-1.mm: Generalize for both Objective-C runtimes.\n\n2005-10-21  David Ayers  <d.ayers@inode.at>\n\n\t* obj-c++.dg/except-1.mm: Generalize for both Objective-C runtimes.\n\nFrom-SVN: r105770", "tree": {"sha": "6d8886dafe4c87964c07d3b3da9e3f156d496943", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d8886dafe4c87964c07d3b3da9e3f156d496943"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cd470742f356c4898b56bfca15f84c569701ce6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd470742f356c4898b56bfca15f84c569701ce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd470742f356c4898b56bfca15f84c569701ce6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd470742f356c4898b56bfca15f84c569701ce6/comments", "author": null, "committer": null, "parents": [{"sha": "c7ba5f8dff6d2607cf0b6822f89997fdc7e8f1ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7ba5f8dff6d2607cf0b6822f89997fdc7e8f1ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7ba5f8dff6d2607cf0b6822f89997fdc7e8f1ee"}], "stats": {"total": 50, "additions": 46, "deletions": 4}, "files": [{"sha": "8b7ea124e53aa85f139d9fe8bf4728cc766eee8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd470742f356c4898b56bfca15f84c569701ce6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd470742f356c4898b56bfca15f84c569701ce6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9cd470742f356c4898b56bfca15f84c569701ce6", "patch": "@@ -1,3 +1,7 @@\n+2005-10-21  David Ayers  <d.ayers@inode.at>\n+\n+\t* obj-c++.dg/except-1.mm: Generalize for both Objective-C runtimes.\n+\n 2005-10-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gfortran.dg/assumed_dummy_2.f90: New test."}, {"sha": "d92ac795e85aaed7d11bbfe39cce496ab875f30e", "filename": "gcc/testsuite/obj-c++.dg/except-1.mm", "status": "modified", "additions": 42, "deletions": 4, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cd470742f356c4898b56bfca15f84c569701ce6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexcept-1.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cd470742f356c4898b56bfca15f84c569701ce6/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexcept-1.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fexcept-1.mm?ref=9cd470742f356c4898b56bfca15f84c569701ce6", "patch": "@@ -1,18 +1,35 @@\n-/* { dg-do run { target \"*-*-darwin*\" } } */\n-/* { dg-options \"-framework Foundation\" } */\n+/* { dg-do run } */\n \n /* This tests that exceptions work.  It used to fail because\n    objc_msgSend was marked with DECL_NOTHROW. \n    If you include objc/Object.h, the problem goes away, because\n    that file includes objc/objc-runtime.h which explicitly prototypes\n    objc_msgSend without 'nothrow'.  */\n \n-#include <Foundation/Foundation.h>\n #include <stdio.h>\n #include <stdlib.h>\n \n+#ifndef __NEXT_RUNTIME__\n+extern \"C\" {\n+  extern id class_create_instance(Class _class);\n+}\n+#else\n+extern \"C\" {\n+  extern id (*_zoneAlloc)(Class, unsigned int, void *);\n+  extern void *malloc_default_zone(void);\n+}\n+#endif\n+\n+@interface RObject {\n+  Class isa;  \n+}\n++ initialize;\n++ alloc;\n+- init;\n+@end\n+\n // ObjectiveC class header\n-@interface ObjCclass : NSObject {\n+@interface ObjCclass : RObject {\n }\n -(void)method1;\n -(void)method2;\n@@ -63,3 +80,24 @@ -(void) method2\n \t/* Shouldn't be here because we threw.  */\n \tabort ();\n }\n+\n+@implementation RObject\n++ initialize\n+{\n+  return self;\n+}\n+\n+- init\n+{\n+  return self;\n+}\n+\n++ alloc\n+{\n+#ifndef __NEXT_RUNTIME__\n+  return class_create_instance(self);\n+#else\n+  return (*_zoneAlloc)((Class)self, 0, malloc_default_zone());\n+#endif\n+}\n+@end"}]}