{"sha": "72ab1c51b607dd5446ee24ff9fce9178d6b811cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJhYjFjNTFiNjA3ZGQ1NDQ2ZWUyNGZmOWZjZTkxNzhkNmI4MTFjYg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-07-12T10:33:52Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-07-12T10:33:52Z"}, "message": "Relax vector_builder::elt sanity check\n\nI'd made it a precondition of vector_builder::elt that the encoding\nmust have been fully populated and that all implicit elements are\ntherefore defined.  But for one of the AArch64 patches I'm working on,\nit'd be convenient to be able to look back at previous elements while\nbuilding up the encoding.  This patch therefore makes the assert\nspecific to implicit elements only.\n\n2019-07-12  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* vector-builder.h (vector_builder::elt): Allow already-supplied\n\telements to be read back before building is complete.\n\nFrom-SVN: r273440", "tree": {"sha": "4ea043f18db4a77be52c825960e2554ac7d007f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4ea043f18db4a77be52c825960e2554ac7d007f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72ab1c51b607dd5446ee24ff9fce9178d6b811cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ab1c51b607dd5446ee24ff9fce9178d6b811cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ab1c51b607dd5446ee24ff9fce9178d6b811cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ab1c51b607dd5446ee24ff9fce9178d6b811cb/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "49dbd6a0325f510af43b05bc0b91426779b4ed59", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49dbd6a0325f510af43b05bc0b91426779b4ed59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49dbd6a0325f510af43b05bc0b91426779b4ed59"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "43b52489921e4fe47c211d5d5dd3f915fd21cf6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72ab1c51b607dd5446ee24ff9fce9178d6b811cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72ab1c51b607dd5446ee24ff9fce9178d6b811cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=72ab1c51b607dd5446ee24ff9fce9178d6b811cb", "patch": "@@ -1,3 +1,8 @@\n+2019-07-12  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* vector-builder.h (vector_builder::elt): Allow already-supplied\n+\telements to be read back before building is complete.\n+\n 2019-07-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR rtl-optimization/91136"}, {"sha": "aac8a875a587126dc8fb1e92010793e8120ae704", "filename": "gcc/vector-builder.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72ab1c51b607dd5446ee24ff9fce9178d6b811cb/gcc%2Fvector-builder.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72ab1c51b607dd5446ee24ff9fce9178d6b811cb/gcc%2Fvector-builder.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvector-builder.h?ref=72ab1c51b607dd5446ee24ff9fce9178d6b811cb", "patch": "@@ -199,14 +199,15 @@ template<typename T, typename Derived>\n T\n vector_builder<T, Derived>::elt (unsigned int i) const\n {\n-  /* This only makes sense if the encoding has been fully populated.  */\n-  gcc_checking_assert (encoded_nelts () <= this->length ());\n-\n   /* First handle elements that are already present in the underlying\n      vector, regardless of whether they're part of the encoding or not.  */\n   if (i < this->length ())\n     return (*this)[i];\n \n+  /* Extrapolation is only possible if the encoding has been fully\n+     populated.  */\n+  gcc_checking_assert (encoded_nelts () <= this->length ());\n+\n   /* Identify the pattern that contains element I and work out the index of\n      the last encoded element for that pattern.  */\n   unsigned int pattern = i % m_npatterns;"}]}