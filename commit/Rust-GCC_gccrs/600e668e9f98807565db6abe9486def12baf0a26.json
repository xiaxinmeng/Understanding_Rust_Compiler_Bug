{"sha": "600e668e9f98807565db6abe9486def12baf0a26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjAwZTY2OGU5Zjk4ODA3NTY1ZGI2YWJlOTQ4NmRlZjEyYmFmMGEyNg==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2008-11-10T19:37:20Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2008-11-10T19:37:20Z"}, "message": "m32c.c (m32c_const_ok_for_constraint_p): Add ImB constraint for single-bit-clear in lower byte of HI constant...\n\n* config/m32c/m32c.c (m32c_const_ok_for_constraint_p): Add ImB\nconstraint for single-bit-clear in lower byte of HI constant, vs\nImb which just ignores the upper byte.\n* config/m32c/predicates.md (m32c_1mask8_operand): Use it.\n* config/m32c/bitops.md (andhi3_16, andhi3_24): Use it.\n(iorhi3_16): Check for single bit set, not single bit clear.\n\nFrom-SVN: r141747", "tree": {"sha": "fc77333c8328550fd03b66f40c0eb66ca526c51c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc77333c8328550fd03b66f40c0eb66ca526c51c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/600e668e9f98807565db6abe9486def12baf0a26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600e668e9f98807565db6abe9486def12baf0a26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/600e668e9f98807565db6abe9486def12baf0a26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/600e668e9f98807565db6abe9486def12baf0a26/comments", "author": null, "committer": null, "parents": [{"sha": "6f03c42c3365d61100c4ff0b4c96a3123dd7a248", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f03c42c3365d61100c4ff0b4c96a3123dd7a248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f03c42c3365d61100c4ff0b4c96a3123dd7a248"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "c30ee95b812c3cbcad07e1e8b0cdacc2b24a13d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600e668e9f98807565db6abe9486def12baf0a26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600e668e9f98807565db6abe9486def12baf0a26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=600e668e9f98807565db6abe9486def12baf0a26", "patch": "@@ -1,3 +1,12 @@\n+2008-11-10  DJ Delorie  <dj@redhat.com>\n+\n+\t* config/m32c/m32c.c (m32c_const_ok_for_constraint_p): Add ImB\n+\tconstraint for single-bit-clear in lower byte of HI constant, vs\n+\tImb which just ignores the upper byte.\n+\t* config/m32c/predicates.md (m32c_1mask8_operand): Use it.\n+\t* config/m32c/bitops.md (andhi3_16, andhi3_24): Use it.\n+\t(iorhi3_16): Check for single bit set, not single bit clear.\n+\n 2008-11-10  Janis Johnson  <janis187@us.ibm.com>\n \n \t* doc/sourcebuild.texi (Torture Tests): Fix formatting for bullets."}, {"sha": "d92494ac3efd2897348b0592acd67be87615832f", "filename": "gcc/config/m32c/bitops.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600e668e9f98807565db6abe9486def12baf0a26/gcc%2Fconfig%2Fm32c%2Fbitops.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600e668e9f98807565db6abe9486def12baf0a26/gcc%2Fconfig%2Fm32c%2Fbitops.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fbitops.md?ref=600e668e9f98807565db6abe9486def12baf0a26", "patch": "@@ -98,7 +98,7 @@\n (define_insn \"andhi3_16\"\n   [(set (match_operand:HI 0 \"mra_operand\" \"=Sp,Sp,Rhi,RhiSd,??Rmm,RhiSd,??Rmm\")\n \t(and:HI (match_operand:HI 1 \"mra_operand\" \"%0,0,0,0,0,0,0\")\n-\t\t(match_operand:HI 2 \"mrai_operand\" \"Imb,Imw,Imw,iRhiSd,?Rmm,?Rmm,iRhiSd\")))]\n+\t\t(match_operand:HI 2 \"mrai_operand\" \"ImB,Imw,Imw,iRhiSd,?Rmm,?Rmm,iRhiSd\")))]\n   \"TARGET_A16\"\n   \"@\n    \n@@ -159,7 +159,7 @@\n (define_insn \"iorhi3_16\"\n   [(set (match_operand:HI 0 \"mra_operand\" \"=Sp,Sp,Rhi,RhiSd,RhiSd,??Rmm,??Rmm\")\n \t(ior:HI (match_operand:HI 1 \"mra_operand\" \"%0,0,0,0,0,0,0\")\n-\t\t(match_operand:HI 2 \"mrai_operand\" \"Imb,Imw,Ilw,iRhiSd,?Rmm,iRhiSd,?Rmm\")))]\n+\t\t(match_operand:HI 2 \"mrai_operand\" \"Ilb,Ilw,Ilw,iRhiSd,?Rmm,iRhiSd,?Rmm\")))]\n   \"TARGET_A16\"\n   \"@\n    bset %B2,%0\n@@ -192,7 +192,7 @@\n (define_insn \"andhi3_24\"\n   [(set (match_operand:HI 0 \"mra_operand\" \"=Sd,Sd,Rqi,Rqi,RhiSd,??Rmm,RhiSd,??Rmm\")\n \t(and:HI (match_operand:HI 1 \"mra_operand\" \"%0,0,0,0,0,0,0,0\")\n-\t\t(match_operand:HI 2 \"mrai_operand\" \"Imb,Imw,Imb,Imw,iRhiSd,?Rmm,?Rmm,iRhiSd\")))]\n+\t\t(match_operand:HI 2 \"mrai_operand\" \"ImB,Imw,ImB,Imw,iRhiSd,?Rmm,?Rmm,iRhiSd\")))]\n   \"TARGET_A24\"\n   \"@\n    bclr\\t%B2,%0"}, {"sha": "d2260c86075e7df146b1106883c4b173778accf9", "filename": "gcc/config/m32c/m32c.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600e668e9f98807565db6abe9486def12baf0a26/gcc%2Fconfig%2Fm32c%2Fm32c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600e668e9f98807565db6abe9486def12baf0a26/gcc%2Fconfig%2Fm32c%2Fm32c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fm32c.c?ref=600e668e9f98807565db6abe9486def12baf0a26", "patch": "@@ -949,6 +949,11 @@ m32c_const_ok_for_constraint_p (HOST_WIDE_INT value,\n       int b = exact_log2 ((value ^ 0xff) & 0xff);\n       return (b >= 0 && b <= 7);\n     }\n+  if (memcmp (str, \"ImB\", 3) == 0)\n+    {\n+      int b = exact_log2 ((value ^ 0xffff) & 0xffff);\n+      return (b >= 0 && b <= 7);\n+    }\n   if (memcmp (str, \"Ilw\", 3) == 0)\n     {\n       int b = exact_log2 (value);"}, {"sha": "1a2ff4b4fe8fed8c1cdee6de16bd444b38c07319", "filename": "gcc/config/m32c/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/600e668e9f98807565db6abe9486def12baf0a26/gcc%2Fconfig%2Fm32c%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/600e668e9f98807565db6abe9486def12baf0a26/gcc%2Fconfig%2Fm32c%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32c%2Fpredicates.md?ref=600e668e9f98807565db6abe9486def12baf0a26", "patch": "@@ -284,7 +284,7 @@\n \n (define_predicate \"m32c_1mask8_operand\"\n   (and (match_operand 0 \"const_int_operand\")\n-       (match_test \"m32c_const_ok_for_constraint_p(INTVAL(op), 'I', \\\"Imb\\\")\")))\n+       (match_test \"m32c_const_ok_for_constraint_p(INTVAL(op), 'I', \\\"ImB\\\")\")))\n \n (define_predicate \"m32c_1mask16_operand\"\n   (and (match_operand 0 \"const_int_operand\")"}]}