{"sha": "4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA4NWZhZTBkY2ZkZjcyMThjODJlZWE4NjVlYjRlODVhNGYzM2Q5Yw==", "commit": {"author": {"name": "Yury Gribov", "email": "y.gribov@samsung.com", "date": "2013-12-27T13:56:18Z"}, "committer": {"name": "Yury Gribov", "email": "ygribov@gcc.gnu.org", "date": "2013-12-27T13:56:18Z"}, "message": "re PR sanitizer/59585 (Tests failing due to trailing newline)\n\n2013-12-27  Yury Gribov  <y.gribov@samsung.com>\n\n\tPR target/59585\n\t* c-c++-common/ubsan/div-by-zero-1.c: Fixed pattern.\n\t* c-c++-common/ubsan/div-by-zero-2.c: Likewise.\n\t* c-c++-common/ubsan/div-by-zero-3.c: Likewise.\n\t* c-c++-common/ubsan/load-bool-enum.c: Likewise.\n\t* c-c++-common/ubsan/overflow-add-2.c: Likewise.\n\t* c-c++-common/ubsan/overflow-mul-2.c: Likewise.\n\t* c-c++-common/ubsan/overflow-mul-4.c: Likewise.\n\t* c-c++-common/ubsan/overflow-negate-1.c: Likewise.\n\t* c-c++-common/ubsan/overflow-sub-2.c: Likewise.\n\t* c-c++-common/ubsan/pr59333.c: Likewise.\n\t* c-c++-common/ubsan/shift-1.c: Likewise.\n\t* c-c++-common/ubsan/shift-2.c: Likewise.\n\t* c-c++-common/ubsan/shift-4.c: Likewise.\n\t* c-c++-common/ubsan/vla-1.c: Likewise.\n\nFrom-SVN: r206219", "tree": {"sha": "0f737e34f4fdf88580adc1cd60074312a34d51e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f737e34f4fdf88580adc1cd60074312a34d51e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/comments", "author": null, "committer": null, "parents": [{"sha": "089a5d9939dc543c0dfe4b72bf93eb55e92b3d66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/089a5d9939dc543c0dfe4b72bf93eb55e92b3d66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/089a5d9939dc543c0dfe4b72bf93eb55e92b3d66"}], "stats": {"total": 48, "additions": 33, "deletions": 15}, "files": [{"sha": "bd46fa64ab2c2f6f892e437530e941a6ac341b4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -1,3 +1,21 @@\n+2013-12-27  Yury Gribov  <y.gribov@samsung.com>\n+\n+\tPR target/59585\n+\t* c-c++-common/ubsan/div-by-zero-1.c: Fixed pattern.\n+\t* c-c++-common/ubsan/div-by-zero-2.c: Likewise.\n+\t* c-c++-common/ubsan/div-by-zero-3.c: Likewise.\n+\t* c-c++-common/ubsan/load-bool-enum.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-add-2.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-mul-2.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-mul-4.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-negate-1.c: Likewise.\n+\t* c-c++-common/ubsan/overflow-sub-2.c: Likewise.\n+\t* c-c++-common/ubsan/pr59333.c: Likewise.\n+\t* c-c++-common/ubsan/shift-1.c: Likewise.\n+\t* c-c++-common/ubsan/shift-2.c: Likewise.\n+\t* c-c++-common/ubsan/shift-4.c: Likewise.\n+\t* c-c++-common/ubsan/vla-1.c: Likewise.\n+\n 2013-12-26   H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* g++.old-deja/g++.other/store-expr1.C (dg-options): Replace"}, {"sha": "ec391e40be24a1cabcf611442a5620dd4ad1cae1", "filename": "gcc/testsuite/c-c++-common/ubsan/div-by-zero-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-1.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -21,4 +21,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\" } */"}, {"sha": "c8820fa9466efbcb7270920fde13a8f802f6e781", "filename": "gcc/testsuite/c-c++-common/ubsan/div-by-zero-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-2.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -20,4 +20,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division by zero(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division by zero\" } */"}, {"sha": "399071ee7aa7e4fef0bf8ffcae8d75dc80149be5", "filename": "gcc/testsuite/c-c++-common/ubsan/div-by-zero-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fdiv-by-zero-3.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -18,4 +18,4 @@ main (void)\n \n /* { dg-output \"division of -2147483648 by -1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*division of -2147483648 by -1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*division of -2147483648 by -1 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*division of -2147483648 by -1 cannot be represented in type 'int'\" } */"}, {"sha": "96f7984f86a7a182c4f6e9b011bc0d85d5201eac", "filename": "gcc/testsuite/c-c++-common/ubsan/load-bool-enum.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fload-bool-enum.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -10,8 +10,8 @@ bool b;\n __attribute__((noinline, noclone)) enum A\n foo (bool *p)\n {\n-  *p = b;   /* { dg-output \"load-bool-enum.c:13:\\[^\\n\\r]*runtime error: load of value 4, which is not a valid value for type '(_B|b)ool'(\\n|\\r\\n|\\r)\" } */\n-  return a; /* { dg-output \"\\[^\\n\\r]*load-bool-enum.c:14:\\[^\\n\\r]*runtime error: load of value 9, which is not a valid value for type 'A'(\\n|\\r\\n|\\r)\" { target c++ } } */\n+  *p = b;   /* { dg-output \"load-bool-enum.c:13:\\[^\\n\\r]*runtime error: load of value 4, which is not a valid value for type '(_B|b)ool'(\\n|\\r\\n|\\r)*\" } */\n+  return a; /* { dg-output \"\\[^\\n\\r]*load-bool-enum.c:14:\\[^\\n\\r]*runtime error: load of value 9, which is not a valid value for type 'A'(\\n|\\r\\n|\\r)*\" { target c++ } } */\n }\n \n int"}, {"sha": "f8af8281f1c03d79b89e2fc019e289b004650d1f", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-add-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-add-2.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -58,4 +58,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\+ 1024 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -1 \\\\+ -\\[^\\n\\r]* cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'\" } */"}, {"sha": "ddfbb2e7ae06366cb36e9a533ef66c1387203924", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-mul-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-2.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -24,4 +24,4 @@ main (void)\n /* { dg-output \"signed integer overflow: 2147483647 \\\\* 2 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* 2147483647 cannot be represented in type 'int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: \\[^\\n\\r]* \\\\* 2 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* \\[^\\n\\r]* cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: 2 \\\\* \\[^\\n\\r]* cannot be represented in type 'long int'\" } */"}, {"sha": "b05c1a43fb7624851ea9e4c302d53c43c8fc8479", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-mul-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-mul-4.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -83,4 +83,4 @@ main ()\n /* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:48:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* 2166572391 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:49:\\[^\\n\\r]*signed integer overflow: -4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:50:\\[^\\n\\r]*signed integer overflow: -4257126176 \\\\* 2166572391 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:51:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*overflow-mul-4.c:51:\\[^\\n\\r]*signed integer overflow: 4257126176 \\\\* -2166572391 cannot be represented in type 'long long int'\" } */"}, {"sha": "b73787c1d19476b693b5a726c7e495f69ba5627c", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-negate-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-negate-1.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -36,4 +36,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*negation of -\\[^\\n\\r]* cannot be represented in type 'long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'; cast to an unsigned type to negate this value to itself(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*negation of -9223372036854775808 cannot be represented in type 'long long int'; cast to an unsigned type to negate this value to itself\" } */"}, {"sha": "99f59054e163bcbdc742a80e2dcfa97965cb3c58", "filename": "gcc/testsuite/c-c++-common/ubsan/overflow-sub-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Foverflow-sub-2.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -52,4 +52,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1024 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1048576 cannot be represented in type 'long int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*signed integer overflow: -\\[^\\n\\r]* \\\\+ -1048576 cannot be represented in type 'long int'\" } */"}, {"sha": "170da8c859b83fe81f0449e8461565dcd6fad8c5", "filename": "gcc/testsuite/c-c++-common/ubsan/pr59333.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fpr59333.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -16,4 +16,4 @@ main (void)\n   return 0;\n }\n \n-/* { dg-output \"signed integer overflow: 2 \\\\+ 9223372036854775807 cannot be represented in type 'long long int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"signed integer overflow: 2 \\\\+ 9223372036854775807 cannot be represented in type 'long long int'\" } */"}, {"sha": "d2538802aab2c3b08d4a2f4a6c251b17e71d1e6a", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-1.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -28,4 +28,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*shift exponent 154 is too large for \\[^\\n\\r]*-bit type 'int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent 524 is too large for \\[^\\n\\r]*-bit type 'long long unsigned int'(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent 370 is too large for \\[^\\n\\r]*-bit type 'int'(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent 402 is too large for \\[^\\n\\r]*-bit type 'long int'(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent 402 is too large for \\[^\\n\\r]*-bit type 'long int'\" } */"}, {"sha": "aaaeb6fcc0904abcaa5a3ea66b3ca8f14e67301c", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-2.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -20,4 +20,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*shift exponent -4 is negative(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent -5 is negative(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*shift exponent -6 is negative(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*shift exponent -11 is negative(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*shift exponent -11 is negative\" } */"}, {"sha": "5f095b61ac8b7096d70205f3174a1cbb8eae3131", "filename": "gcc/testsuite/c-c++-common/ubsan/shift-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fshift-4.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -11,4 +11,4 @@ main ()\n   return 0;\n }\n \n-/* { dg-output \"shift exponent 120 is too large\\[^\\n\\r]*(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"shift exponent 120 is too large\\[^\\n\\r]*\" } */"}, {"sha": "0fecfa2a3d5fb9501d2209d65ead3adb6f46c2db", "filename": "gcc/testsuite/c-c++-common/ubsan/vla-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4085fae0dcfdf7218c82eea865eb4e85a4f33d9c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Fvla-1.c?ref=4085fae0dcfdf7218c82eea865eb4e85a4f33d9c", "patch": "@@ -116,4 +116,4 @@ main (void)\n /* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -1(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -6(\\n|\\r\\n|\\r)\" } */\n-/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -4(\\n|\\r\\n|\\r)\" } */\n+/* { dg-output \"\\[^\\n\\r]*variable length array bound evaluates to non-positive value -4\" } */"}]}