{"sha": "cd6af0c13a345daa0d71484864072b26363d0523", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2YWYwYzEzYTM0NWRhYTBkNzE0ODQ4NjQwNzJiMjYzNjNkMDUyMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-04-09T13:59:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-04-09T13:59:59Z"}, "message": "init.c (build_member_call): For now, don't convert to intermediate base if it would cause an error.\n\n        * init.c (build_member_call): For now, don't convert to\n        intermediate base if it would cause an error.\n\nFrom-SVN: r52078", "tree": {"sha": "2f8e28107bdafe8a62d41c53b8bfceac8d8d4d32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f8e28107bdafe8a62d41c53b8bfceac8d8d4d32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd6af0c13a345daa0d71484864072b26363d0523", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6af0c13a345daa0d71484864072b26363d0523", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6af0c13a345daa0d71484864072b26363d0523", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6af0c13a345daa0d71484864072b26363d0523/comments", "author": null, "committer": null, "parents": [{"sha": "1ce7f3c2ab0b622ec93be5bc39c3d4efa7fbef5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ce7f3c2ab0b622ec93be5bc39c3d4efa7fbef5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ce7f3c2ab0b622ec93be5bc39c3d4efa7fbef5f"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "c0477bdf96cf28abfcb4fcbad251b08c47961d3b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6af0c13a345daa0d71484864072b26363d0523/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6af0c13a345daa0d71484864072b26363d0523/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=cd6af0c13a345daa0d71484864072b26363d0523", "patch": "@@ -1,3 +1,8 @@\n+2002-04-09  Jason Merrill  <jason@redhat.com>\n+\n+\t* init.c (build_member_call): For now, don't convert to\n+\tintermediate base if it would cause an error.\n+\n 2002-04-08  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* parse.y (namespace_qualifier, maybe_identifier,\n@@ -276,8 +281,8 @@\n \n 2002-03-22  Jeff Knaggs  <jknaggs@redhat.com>\n \n-\t* typeck.c (expand_ptrmemfunc_cst): Scale idx down to an index\n-\tinto the vtable_entry array regardless of\n+\t* typeck.c (get_member_function_from_ptrfunc): Scale idx down to\n+\tan index into the vtable_entry array regardless of\n \tTARGET_PTRMEMFUNC_VBIT_LOCATION.\n \n 2002-03-21  Aldy Hernandez  <aldyh@redhat.com>"}, {"sha": "2143af4b6656e6fd37649ff60e5455e9c322c4c7", "filename": "gcc/cp/init.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6af0c13a345daa0d71484864072b26363d0523/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6af0c13a345daa0d71484864072b26363d0523/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=cd6af0c13a345daa0d71484864072b26363d0523", "patch": "@@ -1497,7 +1497,11 @@ build_member_call (type, name, parmlist)\n \n   /* Convert 'this' to the specified type to disambiguate conversion\n      to the function's context.  */\n-  if (decl == current_class_ref)\n+  if (decl == current_class_ref\n+      /* ??? this is wrong, but if this conversion is invalid we need to\n+\t defer it until we know whether we are calling a static or\n+\t non-static member function.  Be conservative for now.  */\n+      && ACCESSIBLY_UNIQUELY_DERIVED_P (type, current_class_type))\n     {\n       basetype_path = NULL_TREE;\n       decl = build_scoped_ref (decl, type, &basetype_path);"}, {"sha": "0fe8d33b6ec51d9ea80b4baf3dfc7d7283de135d", "filename": "gcc/testsuite/g++.dg/lookup/scoped1.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6af0c13a345daa0d71484864072b26363d0523/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6af0c13a345daa0d71484864072b26363d0523/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped1.C?ref=cd6af0c13a345daa0d71484864072b26363d0523", "patch": "@@ -0,0 +1,22 @@\n+// Test that explicitly scoped references to static members work even if\n+// they belong to an inaccessible base.\n+\n+struct A\n+{\n+  static int i1;\n+  int i2;\n+  static void f1 ();\n+  void f2 ();\n+};\n+\n+struct B: private A { };\n+struct C: public B\n+{\n+  void g ()\n+  {\n+    ::A::i1 = 1;\n+    ::A::i2 = 1;\t\t// { dg-error \"access\" \"\" }\n+    ::A::f1 ();\n+    ::A::f2 ();\t\t\t// { dg-error \"access\" \"\" { xfail *-*-* } }\n+  }\n+};"}]}