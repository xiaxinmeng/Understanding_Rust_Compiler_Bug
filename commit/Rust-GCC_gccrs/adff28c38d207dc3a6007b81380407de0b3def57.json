{"sha": "adff28c38d207dc3a6007b81380407de0b3def57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRmZjI4YzM4ZDIwN2RjM2E2MDA3YjgxMzgwNDA3ZGUwYjNkZWY1Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-03-31T20:25:11Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-03-31T20:25:11Z"}, "message": "re PR java/10145 (java and c++ disagree about class layout)\n\n        PR java/10145\n        * stor-layout.c (update_alignment_for_field): Respect\n        DECL_USER_ALIGN for zero-length bitfields, too.\n        * c-decl.c (finish_struct): Don't set DECL_ALIGN for normal\n        fields.\n        * cp/class.c (check_field_decl): Don't set DECL_ALIGN.\n\nFrom-SVN: r65103", "tree": {"sha": "4a8375fa12eae842753474c9b26fb22fd446774f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4a8375fa12eae842753474c9b26fb22fd446774f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/adff28c38d207dc3a6007b81380407de0b3def57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adff28c38d207dc3a6007b81380407de0b3def57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adff28c38d207dc3a6007b81380407de0b3def57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adff28c38d207dc3a6007b81380407de0b3def57/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e66833ac07efec1f12f35de6e3694238dd8ff96f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e66833ac07efec1f12f35de6e3694238dd8ff96f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e66833ac07efec1f12f35de6e3694238dd8ff96f"}], "stats": {"total": 61, "additions": 39, "deletions": 22}, "files": [{"sha": "545b048b9331a38e31f31b06231f0f7933b16488", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=adff28c38d207dc3a6007b81380407de0b3def57", "patch": "@@ -1,3 +1,11 @@\n+2003-03-31  Jason Merrill  <jason@redhat.com>\n+\n+\tPR java/10145\n+\t* stor-layout.c (update_alignment_for_field): Respect\n+\tDECL_USER_ALIGN for zero-length bitfields, too.\n+\t* c-decl.c (finish_struct): Don't set DECL_ALIGN for normal\n+\tfields.\n+\n 2003-03-31  Matt Austern  <austern@apple.com>\n \n \t* cpppch.c (struct cpp_savedstate): Add defs and n_defs members."}, {"sha": "c9dd711f162bd8427693fb6b607d3a0f775abba8", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=adff28c38d207dc3a6007b81380407de0b3def57", "patch": "@@ -5257,18 +5257,6 @@ finish_struct (t, fieldlist, attributes)\n \t    }\n \t}\n \n-      else if (TREE_TYPE (x) != error_mark_node)\n-\t{\n-\t  unsigned int min_align = (DECL_PACKED (x) ? BITS_PER_UNIT\n-\t\t\t\t    : TYPE_ALIGN (TREE_TYPE (x)));\n-\n-\t  /* Non-bit-fields are aligned for their type, except packed\n-\t     fields which require only BITS_PER_UNIT alignment.  */\n-\t  DECL_ALIGN (x) = MAX (DECL_ALIGN (x), min_align);\n-\t  if (! DECL_PACKED (x))\n-\t    DECL_USER_ALIGN (x) |= TYPE_USER_ALIGN (TREE_TYPE (x));\n-\t}\n-\n       DECL_INITIAL (x) = 0;\n \n       /* Detect flexible array member in an invalid context.  */"}, {"sha": "6eb6d818305e2e7c2cc362ec56d36ebf5a539969", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=adff28c38d207dc3a6007b81380407de0b3def57", "patch": "@@ -1,3 +1,8 @@\n+2003-03-31  Jason Merrill  <jason@redhat.com>\n+\n+\tPR java/10145\n+\t* class.c (check_field_decl): Don't set DECL_ALIGN.\n+\n 2003-03-30  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/7647"}, {"sha": "01d4dd215ed6ac0085b7a9688c75d93722db7be1", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=adff28c38d207dc3a6007b81380407de0b3def57", "patch": "@@ -3057,15 +3057,6 @@ check_field_decl (tree field,\n \tcp_error_at (\"multiple fields in union `%T' initialized\");\n       *any_default_members = 1;\n     }\n-\n-  /* Non-bit-fields are aligned for their type, except packed fields\n-     which require only BITS_PER_UNIT alignment.  */\n-  DECL_ALIGN (field) = MAX (DECL_ALIGN (field), \n-\t\t\t    (DECL_PACKED (field) \n-\t\t\t     ? BITS_PER_UNIT\n-\t\t\t     : TYPE_ALIGN (TREE_TYPE (field))));\n-  if (! DECL_PACKED (field))\n-    DECL_USER_ALIGN (field) |= TYPE_USER_ALIGN (TREE_TYPE (field));\n }\n \n /* Check the data members (both static and non-static), class-scoped"}, {"sha": "af02cad7c28e7bfc18cf0bd08bc19aa3e5ec6a70", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=adff28c38d207dc3a6007b81380407de0b3def57", "patch": "@@ -746,7 +746,8 @@ update_alignment_for_field (rli, field, known_align)\n     {\n       /* A zero-length bit-field affects the alignment of the next\n \t field.  */\n-      if (!DECL_PACKED (field) && integer_zerop (DECL_SIZE (field)))\n+      if (!DECL_PACKED (field) && !user_align\n+\t  && integer_zerop (DECL_SIZE (field)))\n \t{\n \t  desired_align = TYPE_ALIGN (type);\n #ifdef ADJUST_FIELD_ALIGN"}, {"sha": "cb6dcab3dcc45d9aa32e27f730f8ab6d9102be27", "filename": "gcc/testsuite/gcc.dg/align-1.c", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Ftestsuite%2Fgcc.dg%2Falign-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/adff28c38d207dc3a6007b81380407de0b3def57/gcc%2Ftestsuite%2Fgcc.dg%2Falign-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falign-1.c?ref=adff28c38d207dc3a6007b81380407de0b3def57", "patch": "@@ -0,0 +1,24 @@\n+// PR java/10145\n+// Test that requesting an alignment of 1 does not increase the alignment\n+// of a long long field.\n+\n+// { dg-do run }\n+\n+struct A\n+{\n+  char c;\n+  long long i;\n+};\n+\n+struct B\n+{\n+  char c;\n+  long long i __attribute ((__aligned__ (1)));\n+};\n+\n+int main ()\n+{\n+  if (sizeof (struct A) != sizeof (struct B))\n+    abort ();\n+  return 0;\n+}"}]}