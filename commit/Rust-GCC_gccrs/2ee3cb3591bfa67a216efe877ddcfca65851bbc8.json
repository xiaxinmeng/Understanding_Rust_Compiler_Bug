{"sha": "2ee3cb3591bfa67a216efe877ddcfca65851bbc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmVlM2NiMzU5MWJmYTY3YTIxNmVmZTg3N2RkY2ZjYTY1ODUxYmJjOA==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-06-11T09:43:53Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-06-11T09:43:53Z"}, "message": "c-typeck.c (handle_warn_cast_qual): Add loc parameter.\n\n2010-06-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\t* c-typeck.c (handle_warn_cast_qual): Add loc\n\tparameter. Improve warning message.\n\t(build_c_cast): Pass location to handle_warn_cast_qual.\n\nFrom-SVN: r160601", "tree": {"sha": "5ccc3ce7c2754aaa5c4cd82a8c1dd624e4991b07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ccc3ce7c2754aaa5c4cd82a8c1dd624e4991b07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ee3cb3591bfa67a216efe877ddcfca65851bbc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ee3cb3591bfa67a216efe877ddcfca65851bbc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ee3cb3591bfa67a216efe877ddcfca65851bbc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ee3cb3591bfa67a216efe877ddcfca65851bbc8/comments", "author": null, "committer": null, "parents": [{"sha": "3d25c3960ba2eec2cfc8498c73c939619ec0efc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d25c3960ba2eec2cfc8498c73c939619ec0efc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d25c3960ba2eec2cfc8498c73c939619ec0efc9"}], "stats": {"total": 35, "additions": 21, "deletions": 14}, "files": [{"sha": "742950c041bb8045ab683dc7b4c021645d4d0877", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ee3cb3591bfa67a216efe877ddcfca65851bbc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ee3cb3591bfa67a216efe877ddcfca65851bbc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ee3cb3591bfa67a216efe877ddcfca65851bbc8", "patch": "@@ -1,3 +1,9 @@\n+2010-06-11  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* c-typeck.c (handle_warn_cast_qual): Add loc\n+\tparameter. Improve warning message.\n+\t(build_c_cast): Pass location to handle_warn_cast_qual.\n+\n 2010-06-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (pro_epilogue_adjust_stack_1) <TYPE_ALU>: Assert"}, {"sha": "f8bfb51971180a4c80b7690971c39cef4df7327f", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ee3cb3591bfa67a216efe877ddcfca65851bbc8/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ee3cb3591bfa67a216efe877ddcfca65851bbc8/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=2ee3cb3591bfa67a216efe877ddcfca65851bbc8", "patch": "@@ -4413,12 +4413,13 @@ build_compound_expr (location_t loc, tree expr1, tree expr2)\n \n /* Issue -Wcast-qual warnings when appropriate.  TYPE is the type to\n    which we are casting.  OTYPE is the type of the expression being\n-   cast.  Both TYPE and OTYPE are pointer types.  -Wcast-qual appeared\n-   on the command line.  Named address space qualifiers are not handled\n-   here, because they result in different warnings.  */\n+   cast.  Both TYPE and OTYPE are pointer types.  LOC is the location\n+   of the cast.  -Wcast-qual appeared on the command line.  Named\n+   address space qualifiers are not handled here, because they result\n+   in different warnings.  */\n \n static void\n-handle_warn_cast_qual (tree type, tree otype)\n+handle_warn_cast_qual (location_t loc, tree type, tree otype)\n {\n   tree in_type = type;\n   tree in_otype = otype;\n@@ -4451,15 +4452,15 @@ handle_warn_cast_qual (tree type, tree otype)\n \t && TREE_CODE (in_otype) == POINTER_TYPE);\n \n   if (added)\n-    warning (OPT_Wcast_qual, \"cast adds %q#v qualifier to function type\",\n-\t     added);\n+    warning_at (loc, OPT_Wcast_qual,\n+\t\t\"cast adds %q#v qualifier to function type\", added);\n \n   if (discarded)\n     /* There are qualifiers present in IN_OTYPE that are not present\n        in IN_TYPE.  */\n-    warning (OPT_Wcast_qual,\n-\t     \"cast discards %q#v qualifier from pointer target type\",\n-\t     discarded);\n+    warning_at (loc, OPT_Wcast_qual,\n+\t\t\"cast discards %q#v qualifier from pointer target type\",\n+\t\tdiscarded);\n \n   if (added || discarded)\n     return;\n@@ -4492,10 +4493,10 @@ handle_warn_cast_qual (tree type, tree otype)\n       if ((TYPE_QUALS (in_type) &~ TYPE_QUALS (in_otype)) != 0\n \t  && !is_const)\n \t{\n-\t  int added = TYPE_QUALS (in_type) &~ TYPE_QUALS (in_otype);\n-\t  warning (OPT_Wcast_qual,\n-\t\t   (\"new %qv qualifier in middle of multi-level non-const cast \"\n-\t\t    \"is unsafe\"), added);\n+\t  warning_at (loc, OPT_Wcast_qual,\n+\t\t      \"to be safe all intermediate pointers in cast from \"\n+                      \"%qT to %qT must be %<const%> qualified\",\n+\t\t      otype, type);\n \t  break;\n \t}\n       if (is_const)\n@@ -4599,7 +4600,7 @@ build_c_cast (location_t loc, tree type, tree expr)\n       if (warn_cast_qual\n \t  && TREE_CODE (type) == POINTER_TYPE\n \t  && TREE_CODE (otype) == POINTER_TYPE)\n-\thandle_warn_cast_qual (type, otype);\n+\thandle_warn_cast_qual (loc, type, otype);\n \n       /* Warn about conversions between pointers to disjoint\n \t address spaces.  */"}]}