{"sha": "81e7aa8e7acb26abcd654c77ee4d088babf45ba1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFlN2FhOGU3YWNiMjZhYmNkNjU0Yzc3ZWU0ZDA4OGJhYmY0NWJhMQ==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-05-04T19:40:02Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-05-04T19:40:02Z"}, "message": "* doc/md.texi (attr_flag): Update for changes of previous revision.\n\nFrom-SVN: r187179", "tree": {"sha": "8b7047a98b235d4c71864f97570e37e5c679ebd5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b7047a98b235d4c71864f97570e37e5c679ebd5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81e7aa8e7acb26abcd654c77ee4d088babf45ba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81e7aa8e7acb26abcd654c77ee4d088babf45ba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81e7aa8e7acb26abcd654c77ee4d088babf45ba1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81e7aa8e7acb26abcd654c77ee4d088babf45ba1/comments", "author": null, "committer": null, "parents": [{"sha": "593dbe119116727d9af8dcccf8f6cb6f7a98c243", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/593dbe119116727d9af8dcccf8f6cb6f7a98c243", "html_url": "https://github.com/Rust-GCC/gccrs/commit/593dbe119116727d9af8dcccf8f6cb6f7a98c243"}], "stats": {"total": 14, "additions": 3, "deletions": 11}, "files": [{"sha": "e04dbfb7ae87a29903c8e5b265921e0a99ebeed0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81e7aa8e7acb26abcd654c77ee4d088babf45ba1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81e7aa8e7acb26abcd654c77ee4d088babf45ba1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=81e7aa8e7acb26abcd654c77ee4d088babf45ba1", "patch": "@@ -5,6 +5,8 @@\n \tATTR_FLAG_very_likely, and ATTR_FLAG_very_unlikely.\n \t* reorg.c (get_jump_flags): Do not set the removed flags.\n \n+\t* doc/md.texi (attr_flag): Update for abovementioned changes.\n+\n 2012-05-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/53228"}, {"sha": "3e8e45ccbcd8067ad5a7e62f024ef5eda8769ec9", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81e7aa8e7acb26abcd654c77ee4d088babf45ba1/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81e7aa8e7acb26abcd654c77ee4d088babf45ba1/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=81e7aa8e7acb26abcd654c77ee4d088babf45ba1", "patch": "@@ -7707,12 +7707,7 @@ scheduled.\n \n @var{name} is a string specifying one of a fixed set of flags to test.\n Test the flags @code{forward} and @code{backward} to determine the\n-direction of a conditional branch.  Test the flags @code{very_likely},\n-@code{likely}, @code{very_unlikely}, and @code{unlikely} to determine\n-if a conditional branch is expected to be taken.\n-\n-If the @code{very_likely} flag is true, then the @code{likely} flag is also\n-true.  Likewise for the @code{very_unlikely} and @code{unlikely} flags.\n+direction of a conditional branch.\n \n This example describes a conditional branch delay slot which\n can be nullified for forward branches that are taken (annul-true) or\n@@ -7730,11 +7725,6 @@ for backward branches which are not taken (annul-false).\n The @code{forward} and @code{backward} flags are false if the current\n @code{insn} being scheduled is not a conditional branch.\n \n-The @code{very_likely} and @code{likely} flags are true if the\n-@code{insn} being scheduled is not a conditional branch.\n-The @code{very_unlikely} and @code{unlikely} flags are false if the\n-@code{insn} being scheduled is not a conditional branch.\n-\n @code{attr_flag} is only used during delay slot scheduling and has no\n meaning to other passes of the compiler.\n "}]}