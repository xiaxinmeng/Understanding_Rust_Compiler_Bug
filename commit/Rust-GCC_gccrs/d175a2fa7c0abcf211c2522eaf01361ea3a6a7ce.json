{"sha": "d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE3NWEyZmE3YzBhYmNmMjExYzI1MjJlYWYwMTM2MWVhM2E2YTdjZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-09T11:03:25Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-09T11:03:25Z"}, "message": "[multiple changes]\n\n2009-07-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch10.adb (Install_Context): If the unit is a package body,\n\tinstall the private with_clauses of the corresponding package\n\tdeclaration.\n\n2009-07-09  Robert Dewar  <dewar@adacore.com>\n\n\t* checks.adb: Minor reformatting\n\n2009-07-09  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* ug_words, gnat_ugn.texi: Move VMS equivalents of the last check in\n\tinto ug_words.\n\n2009-07-09  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause, case Address):\n\tDo not warn for a constant overlaying any constant object\n\nFrom-SVN: r149417", "tree": {"sha": "e78f29bd217b5573bdcef8ce9a2d0b4b7c328b39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e78f29bd217b5573bdcef8ce9a2d0b4b7c328b39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/comments", "author": null, "committer": null, "parents": [{"sha": "24da37f2b67d7f8773e8f12ec6cf2132a6be17de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24da37f2b67d7f8773e8f12ec6cf2132a6be17de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24da37f2b67d7f8773e8f12ec6cf2132a6be17de"}], "stats": {"total": 109, "additions": 60, "deletions": 49}, "files": [{"sha": "28131e58fe33235156ae8e9cadee2c0557b09681", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "patch": "@@ -485,15 +485,14 @@ package body Checks is\n       if Inside_A_Generic then\n          return;\n \n-      --  Only apply the run-time check if the access parameter\n-      --  has an associated extra access level parameter and\n-      --  when the level of the type is less deep than the level\n-      --  of the access parameter.\n+      --  Only apply the run-time check if the access parameter has an\n+      --  associated extra access level parameter and when the level of the\n+      --  type is less deep than the level of the access parameter, and\n+      --  accessibility checks are not suppressed.\n \n       elsif Present (Param_Ent)\n          and then Present (Extra_Accessibility (Param_Ent))\n-         and then UI_Gt (Object_Access_Level (N),\n-                         Type_Access_Level (Typ))\n+         and then UI_Gt (Object_Access_Level (N), Type_Access_Level (Typ))\n          and then not Accessibility_Checks_Suppressed (Param_Ent)\n          and then not Accessibility_Checks_Suppressed (Typ)\n       then"}, {"sha": "423d19723850b66b1cef08aac27157b3351647fd", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 34, "deletions": 36, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "patch": "@@ -1733,49 +1733,47 @@ ada/exp_ch3.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n    ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/sem.ads \\\n    ada/sem_attr.ads ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch3.ads \\\n-   ada/sem_ch8.ads ada/sem_disp.ads ada/sem_eval.ads ada/sem_mech.ads \\\n-   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sem_warn.ads \\\n-   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads \\\n-   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/system.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n+   ada/sem_ch6.ads ada/sem_ch8.ads ada/sem_disp.ads ada/sem_eval.ads \\\n+   ada/sem_mech.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/snames.ads ada/sprint.ads ada/stand.ads ada/stringt.ads \\\n+   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n \n ada/exp_ch4.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\\n-   ada/casing.ads ada/checks.ads ada/checks.adb ada/csets.ads \\\n-   ada/debug.ads ada/einfo.ads ada/einfo.adb ada/elists.ads ada/elists.adb \\\n+   ada/casing.ads ada/checks.ads ada/checks.adb ada/debug.ads \\\n+   ada/einfo.ads ada/einfo.adb ada/elists.ads ada/elists.adb \\\n    ada/err_vars.ads ada/errout.ads ada/erroutc.ads ada/eval_fat.ads \\\n    ada/exp_aggr.ads ada/exp_atag.ads ada/exp_ch11.ads ada/exp_ch2.ads \\\n    ada/exp_ch3.ads ada/exp_ch4.ads ada/exp_ch4.adb ada/exp_ch6.ads \\\n-   ada/exp_ch7.ads ada/exp_ch9.ads ada/exp_disp.ads ada/exp_dist.ads \\\n-   ada/exp_fixd.ads ada/exp_pakd.ads ada/exp_tss.ads ada/exp_util.ads \\\n-   ada/exp_util.adb ada/exp_vfpt.ads ada/fname.ads ada/fname-uf.ads \\\n-   ada/freeze.ads ada/get_targ.ads ada/gnat.ads ada/g-htable.ads \\\n-   ada/hostparm.ads ada/inline.ads ada/itypes.ads ada/lib.ads \\\n-   ada/lib-load.ads ada/namet.ads ada/nlists.ads ada/nlists.adb \\\n-   ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n-   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/rtsfind.adb \\\n+   ada/exp_ch7.ads ada/exp_ch9.ads ada/exp_disp.ads ada/exp_fixd.ads \\\n+   ada/exp_pakd.ads ada/exp_tss.ads ada/exp_util.ads ada/exp_util.adb \\\n+   ada/exp_vfpt.ads ada/fname.ads ada/fname-uf.ads ada/freeze.ads \\\n+   ada/get_targ.ads ada/gnat.ads ada/g-htable.ads ada/hostparm.ads \\\n+   ada/inline.ads ada/itypes.ads ada/lib.ads ada/namet.ads ada/nlists.ads \\\n+   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n+   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n    ada/sem.ads ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch13.ads \\\n-   ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads \\\n-   ada/sem_dist.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_res.ads \\\n-   ada/sem_type.ads ada/sem_util.ads ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/system.ads \\\n-   ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads \\\n-   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n-   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n-   ada/validsw.ads \n+   ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch8.ads ada/sem_eval.ads \\\n+   ada/sem_eval.adb ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n+   ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb ada/sinput.ads \\\n+   ada/snames.ads ada/sprint.ads ada/stand.ads ada/stringt.ads \\\n+   ada/stringt.adb ada/system.ads ada/s-exctab.ads ada/s-exctab.adb \\\n+   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-soflin.ads ada/s-stache.ads \\\n+   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n+   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n+   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n+   ada/urealp.ads ada/urealp.adb ada/validsw.ads \n \n ada/exp_ch5.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/atree.ads ada/atree.adb \\"}, {"sha": "9f6178d56ab6bdcbbc95a23a0978ed092c37aaf2", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "patch": "@@ -6506,8 +6506,9 @@ following @command{gcc} switches refine this default behavior.\n @cindex Suppressing checks\n @cindex Checks, suppressing\n @findex Suppress\n-Suppress all run-time checks as though @code{pragma Suppress (All_checks)}\n-had been present in the source. Validity checks are also suppressed (in\n+This switch causes the unit to be compiled\n+as though @code{pragma Suppress (All_checks)}\n+had been present in the source. Validity checks are also eliminated (in\n other words @option{-gnatp} also implies @option{-gnatVn}.\n Use this switch to improve the performance\n of the code at the expense of safety in the presence of invalid data or\n@@ -6519,7 +6520,9 @@ checking code is zero or near-zero, the compiler will generate it even\n if checks are suppressed. In particular, if the compiler can prove\n that a certain check will necessarily fail, it will generate code to\n do an unconditional ``raise'', even if checks are suppressed. The\n-compiler warns in this case.\n+compiler warns in this case. Another case in which checks may not be\n+eliminated is when they are embedded in certain run time routines such\n+as math library routines.\n \n Of course, run-time checks are omitted whenever the compiler can prove\n that they will not fail, whether or not checks are suppressed.\n@@ -6996,7 +6999,7 @@ This not normally required, but is used by separate analysis tools.\n Typically\n these tools do the necessary compilations automatically, so you should\n not have to specify this switch in normal operation.\n-Note that the combination of switches @option{^-gnatct^/NOLOAD /TREE_OUTPUT^}\n+Note that the combination of switches @option{-gnatct}\n generates a tree in the form required by ASIS applications.\n \n @item -gnatu\n@@ -20825,7 +20828,7 @@ structure and semantics as the @code{string_LITERAL} parameter of GNAT pragma\n @pxref{Pragma Style_Checks,,, gnat_rm, GNAT Reference Manual}). For example,\n @code{+RStyle_Checks:O} rule option activates and adds to @command{gnatcheck}\n output the compiler style check that corresponds to\n-@code{^-gnatyO^/STYLE_CHECKS=OVERRIDING_INDICATORS^} style check option.\n+@code{-gnatyO} style check option.\n \n @item Warnings\n To record compiler warnings (@pxref{Warning Message Control}), use the rule"}, {"sha": "41c6a723b7fb4d2f1ca49a4855ede8ad3ff6096d", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "patch": "@@ -3195,14 +3195,23 @@ package body Sem_Ch10 is\n       end if;\n \n       --  If the unit is a body, the context of the specification must also\n-      --  be installed.\n+      --  be installed. That includes private with_clauses in that context.\n \n       if Nkind (Lib_Unit) = N_Package_Body\n         or else (Nkind (Lib_Unit) = N_Subprogram_Body\n                    and then not Acts_As_Spec (N))\n       then\n          Install_Context (Library_Unit (N));\n \n+         --  Only install private with-clauses of a spec that comes from\n+         --  source, excluding specs created for a subprogram body that is\n+         --  a child unit.\n+\n+         if Comes_From_Source (Library_Unit (N)) then\n+            Install_Private_With_Clauses\n+              (Defining_Entity (Unit (Library_Unit (N))));\n+         end if;\n+\n          if Is_Child_Spec (Unit (Library_Unit (N))) then\n \n             --  If the unit is the body of a public child unit, the private"}, {"sha": "c61421dbcc60399f55fd7328e081d5c2981283ce", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "patch": "@@ -936,7 +936,7 @@ package body Sem_Ch13 is\n \n                   elsif Present (Aent)\n                     and then Ekind (U_Ent) = E_Constant\n-                    and then Ekind (Aent) /= E_Constant\n+                    and then not Is_Constant_Object (Aent)\n                   then\n                      Error_Msg_N (\"constant overlays a variable?\", Expr);\n "}, {"sha": "61191ef96445c0fb562fd191365e260c19ee8d7f", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=d175a2fa7c0abcf211c2522eaf01361ea3a6a7ce", "patch": "@@ -54,6 +54,7 @@ gcc -c          ^ GNAT COMPILE\n -gnatb          ^ /REPORT_ERRORS=BRIEF\n -gnatB          ^ /ASSUME_VALID\n -gnatc          ^ /NOLOAD\n+-gnatct         ^ /NOLOAD /TREE_OUTPUT\n -gnatdc         ^ /TRACE_UNITS\n -gnatdO         ^ /REPORT_ERRORS=IMMEDIATE\n -gnatC          ^ /COMPRESS_NAMES\n@@ -182,6 +183,7 @@ gcc -c          ^ GNAT COMPILE\n -gnatW8         ^ /WIDE_CHARACTER_ENCODING=UTF8\n -gnatW?         ^ /WIDE_CHARACTER_ENCODING=?\n -gnaty          ^ /STYLE_CHECKS\n+-gnatyO         ^ /STYLE_CHECKS=OVERRIDING_INDICATORS\n -gnatyy         ^ /STYLE_CHECKS=ALL_BUILTIN\n -gnatZ          ^ /ZERO_COST_EXCEPTIONS\n -gnatzc         ^ /DISTRIBUTION_STUBS=CALLER"}]}