{"sha": "269adb9dea5b2ded168fb9ca12bd29c4e217d241", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY5YWRiOWRlYTViMmRlZDE2OGZiOWNhMTJiZDI5YzRlMjE3ZDI0MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-11-20T15:51:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-11-20T15:51:35Z"}, "message": "c-common.c (shorten_compare): But look through macros from system headers.\n\n\t* c-common.c (shorten_compare): But look through macros from\n\tsystem headers.\n\nFrom-SVN: r230665", "tree": {"sha": "9a5ca109c0eccf8777190899db2f34866efb7366", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a5ca109c0eccf8777190899db2f34866efb7366"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/269adb9dea5b2ded168fb9ca12bd29c4e217d241", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/269adb9dea5b2ded168fb9ca12bd29c4e217d241", "html_url": "https://github.com/Rust-GCC/gccrs/commit/269adb9dea5b2ded168fb9ca12bd29c4e217d241", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/269adb9dea5b2ded168fb9ca12bd29c4e217d241/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e92560a9c9c57dfed3283c48ef5e46a7e0204b1"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "c19cafa05f88eab2f02378e10d726ae2d315f73a", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/269adb9dea5b2ded168fb9ca12bd29c4e217d241/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/269adb9dea5b2ded168fb9ca12bd29c4e217d241/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=269adb9dea5b2ded168fb9ca12bd29c4e217d241", "patch": "@@ -1,3 +1,8 @@\n+2015-11-19  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-common.c (shorten_compare): But look through macros from\n+\tsystem headers.\n+\n 2015-11-18  Jason Merrill  <jason@redhat.com>\n \n \t* c-common.c (shorten_compare): Don't -Wtype-limits if the"}, {"sha": "fe0a235988fe88a0e9020724b5b1f60df19945f7", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/269adb9dea5b2ded168fb9ca12bd29c4e217d241/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/269adb9dea5b2ded168fb9ca12bd29c4e217d241/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=269adb9dea5b2ded168fb9ca12bd29c4e217d241", "patch": "@@ -4651,8 +4651,10 @@ shorten_compare (location_t loc, tree *op0_ptr, tree *op1_ptr,\n \t}\n \n       if (TREE_CODE (primop0) != INTEGER_CST\n-\t  /* Don't warn if it's from a macro.  */\n-\t  && !from_macro_expansion_at (EXPR_LOCATION (primop0)))\n+\t  /* Don't warn if it's from a (non-system) macro.  */\n+\t  && !(from_macro_expansion_at\n+\t       (expansion_point_location_if_in_system_header\n+\t\t(EXPR_LOCATION (primop0)))))\n \t{\n \t  if (val == truthvalue_false_node)\n \t    warning_at (loc, OPT_Wtype_limits,"}, {"sha": "92151aa68c9c63dab93cf083413eed208142b8d7", "filename": "gcc/testsuite/gcc.dg/Wtype-limits2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/269adb9dea5b2ded168fb9ca12bd29c4e217d241/gcc%2Ftestsuite%2Fgcc.dg%2FWtype-limits2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/269adb9dea5b2ded168fb9ca12bd29c4e217d241/gcc%2Ftestsuite%2Fgcc.dg%2FWtype-limits2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWtype-limits2.c?ref=269adb9dea5b2ded168fb9ca12bd29c4e217d241", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wtype-limits\" } */\n+/* { dg-require-effective-target sync_char_short } */\n+\n+#include <stdatomic.h>\n+\n+unsigned foo (unsigned char *x)\n+{\n+  if (atomic_load (x) > 1000) /* { dg-warning \"comparison is always false due to limited range of data type\" } */\n+    return 0;\n+  return 1;\n+}"}]}