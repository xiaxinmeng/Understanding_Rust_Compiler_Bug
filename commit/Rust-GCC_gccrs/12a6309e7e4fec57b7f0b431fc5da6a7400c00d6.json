{"sha": "12a6309e7e4fec57b7f0b431fc5da6a7400c00d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTJhNjMwOWU3ZTRmZWM1N2I3ZjBiNDMxZmM1ZGE2YTc0MDBjMDBkNg==", "commit": {"author": {"name": "Zhouyi Zhou", "email": "zhouzhouyi@FreeBSD.org", "date": "2008-01-05T09:31:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-01-05T09:31:24Z"}, "message": "tree-vrp.c (find_conditional_asserts): Remove redundant check that edge does not point to current bb before changing...\n\n        * tree-vrp.c (find_conditional_asserts): Remove redundant check that\n        edge does not point to current bb before changing need_assert.\n\nFrom-SVN: r131333", "tree": {"sha": "a224a9aee633f40d48925abbb63a7282d9f62e7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a224a9aee633f40d48925abbb63a7282d9f62e7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6/comments", "author": null, "committer": null, "parents": [{"sha": "9ed6c6fa7fde2cbcafab0a6e16b15c45a360a43d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ed6c6fa7fde2cbcafab0a6e16b15c45a360a43d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ed6c6fa7fde2cbcafab0a6e16b15c45a360a43d"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "6f0c51233950e3eae7481f4025e2c510e6fc1afa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12a6309e7e4fec57b7f0b431fc5da6a7400c00d6", "patch": "@@ -1,3 +1,8 @@\n+2008-01-05  Zhouyi Zhou  <zhouzhouyi@FreeBSD.org>\n+\n+\t* tree-vrp.c (find_conditional_asserts): Remove redundant check that\n+\tedge does not point to current bb before changing need_assert.\n+\n 2008-01-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/34029\n@@ -64,8 +69,7 @@\n 2008-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/34608\n-\t* omp-low.c (expand_omp_parallel): Purge dead EH edges in the\n-\tchild fn.\n+\t* omp-low.c (expand_omp_parallel): Purge dead EH edges in the child fn.\n \n 2008-01-02  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n@@ -81,14 +85,14 @@\n \n 2008-01-02  Arthur Norman <acn1@cam.ac.uk>\n \n-\tPR 34013\n-\t* gcc/config/i386/i386.c: (ix86_expand_prologue): Save red-zone\n+\tPR target/34013\n+\t* gcc/config/i386/i386.c (ix86_expand_prologue): Save red-zone\n \twhile stack probing.\n \n 2008-01-01  Douglas Gregor  <doug.gregor@gmail.com>\n \n \t* c-opts.c (sanitize_cpp_opts): Don't warn about \"long long\" when\n-       in C++0x mode.\n+\tin C++0x mode.\n \n 2008-01-01  Volker Reichelt  <v.reichelt@netcologne.de>\n "}, {"sha": "5f9a3279aa3cb5df783a59c31ca747277736e273", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=12a6309e7e4fec57b7f0b431fc5da6a7400c00d6", "patch": "@@ -3825,8 +3825,7 @@ find_conditional_asserts (basic_block bb, tree last)\n       /* Traverse the strictly dominated sub-graph rooted at E->DEST\n \t to determine if any of the operands in the conditional\n \t predicate are used.  */\n-      if (e->dest != bb)\n-\tneed_assert |= find_assert_locations (e->dest);\n+      need_assert |= find_assert_locations (e->dest);\n \n       /* Register the necessary assertions for each operand in the\n \t conditional predicate.  */"}]}