{"sha": "8a48be3a16675308704e80694f6a600b7ad2ead9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGE0OGJlM2ExNjY3NTMwODcwNGU4MDY5NGY2YTYwMGI3YWQyZWFkOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-03-04T01:29:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2006-03-04T01:29:35Z"}, "message": "add comment\n\nFrom-SVN: r111701", "tree": {"sha": "19afd1469fbf90038e799133791341c3bcceb754", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19afd1469fbf90038e799133791341c3bcceb754"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a48be3a16675308704e80694f6a600b7ad2ead9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a48be3a16675308704e80694f6a600b7ad2ead9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a48be3a16675308704e80694f6a600b7ad2ead9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a48be3a16675308704e80694f6a600b7ad2ead9/comments", "author": null, "committer": null, "parents": [{"sha": "93f978b755d593ebe594c0529884418b3b69f49f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93f978b755d593ebe594c0529884418b3b69f49f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93f978b755d593ebe594c0529884418b3b69f49f"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "d82c07ff3292beffb7da4da8db3d4ae378baf075", "filename": "gcc/cp/except.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a48be3a16675308704e80694f6a600b7ad2ead9/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a48be3a16675308704e80694f6a600b7ad2ead9/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=8a48be3a16675308704e80694f6a600b7ad2ead9", "patch": "@@ -724,7 +724,11 @@ build_throw (tree exp)\n       temp_expr = NULL_TREE;\n       stabilize_init (exp, &temp_expr);\n \n+      /* Wrap the initialization in a CLEANUP_POINT_EXPR so that cleanups\n+\t for temporaries within the initialization are run before the one\n+\t for the exception object, preserving LIFO order.  */\n       exp = build1 (CLEANUP_POINT_EXPR, TREE_TYPE (exp), exp);\n+\n       if (elided)\n \texp = build2 (TRY_CATCH_EXPR, void_type_node, exp,\n \t\t      do_free_exception (ptr));"}]}