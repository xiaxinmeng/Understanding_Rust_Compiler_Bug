{"sha": "6c89617fc9525b726a494d4b44d19178049169a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4OTYxN2ZjOTUyNWI3MjZhNDk0ZDRiNDRkMTkxNzgwNDkxNjlhMA==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-12-10T17:48:11Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-12-17T17:23:46Z"}, "message": "Cleanup Makefile for Rust\n\nThis adds some extra Flags to ignore unused warnings and no\noverloaded-virtuals. This helps with compilation error diagnosis.", "tree": {"sha": "e560b2b5c2842381038d3c89bc786be55bc8cd39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e560b2b5c2842381038d3c89bc786be55bc8cd39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c89617fc9525b726a494d4b44d19178049169a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c89617fc9525b726a494d4b44d19178049169a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c89617fc9525b726a494d4b44d19178049169a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c89617fc9525b726a494d4b44d19178049169a0/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3514168b990fd67225c59e84c7fffec075788905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3514168b990fd67225c59e84c7fffec075788905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3514168b990fd67225c59e84c7fffec075788905"}], "stats": {"total": 33, "additions": 25, "deletions": 8}, "files": [{"sha": "182a0860a794330e83eed8487cbd056abc9bd39e", "filename": "gcc/rust/Make-lang.in", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c89617fc9525b726a494d4b44d19178049169a0/gcc%2Frust%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c89617fc9525b726a494d4b44d19178049169a0/gcc%2Frust%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2FMake-lang.in?ref=6c89617fc9525b726a494d4b44d19178049169a0", "patch": "@@ -218,7 +218,17 @@ CFLAGS-rust/rust-lang.o += -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n \t-DDEFAULT_TARGET_MACHINE=\\\"$(target_noncanonical)\\\"\n \n # cross-folder includes - add new folders later\n-RUST_INCLUDES = -I $(srcdir)/rust -I $(srcdir)/rust/lex -I $(srcdir)/rust/parse -I $(srcdir)/rust/ast -I $(srcdir)/rust/analysis -I $(srcdir)/rust/backend -I $(srcdir)/rust/expand -I $(srcdir)/rust/util\n+RUST_INCLUDES = -I $(srcdir)/rust \\\n+\t-I $(srcdir)/rust/lex \\\n+\t-I $(srcdir)/rust/parse \\\n+\t-I $(srcdir)/rust/ast \\\n+\t-I $(srcdir)/rust/analysis \\\n+\t-I $(srcdir)/rust/backend \\\n+\t-I $(srcdir)/rust/expand \\\n+\t-I $(srcdir)/rust/hir/tree \\\n+\t-I $(srcdir)/rust/hir \\\n+\t-I $(srcdir)/rust/hir_resolve \\\n+\t-I $(srcdir)/rust/util\n \n # add files that require cross-folder includes - currently rust-lang.o, rust-lex.o\n CFLAGS-rust/rust-lang.o += $(RUST_INCLUDES)\n@@ -227,33 +237,40 @@ CFLAGS-rust/rust-parse.o += $(RUST_INCLUDES)\n CFLAGS-rust/rust-session-manager.o += $(RUST_INCLUDES)\n \n # TODO: possibly find a way to ensure C++11 compilation level here?\n+RUST_CXXFLAGS = -std=c++11 -Wno-unused-parameter -Wno-overloaded-virtual\n \n # build all rust/lex files in rust folder, add cross-folder includes\n rust/%.o: rust/lex/%.cc\n-\t$(COMPILE) -std=c++11 $(RUST_INCLUDES) $<\n+\t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n \n # build all rust/parse files in rust folder, add cross-folder includes\n rust/%.o: rust/parse/%.cc\n-\t$(COMPILE) -std=c++11 $(RUST_INCLUDES) $<\n+\t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n \n # build rust/ast files in rust folder\n rust/%.o: rust/ast/%.cc\n-\t$(COMPILE) -std=c++11 $(RUST_INCLUDES) $<\n+\t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n \n # build rust/analysis files in rust folder\n rust/%.o: rust/analysis/%.cc\n-\t$(COMPILE) -std=c++11 $(RUST_INCLUDES) $<\n+\t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n \n # build rust/backend files in rust folder\n rust/%.o: rust/backend/%.cc\n-\t$(COMPILE) -std=c++11 $(RUST_INCLUDES) $<\n+\t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n \n-# build rust/backend files in rust folder\n+# build rust/expand files in rust folder\n rust/%.o: rust/expand/%.cc\n-\t$(COMPILE) -std=c++11 $(RUST_INCLUDES) $<\n+\t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n+\t$(POSTCOMPILE)\n+\n+# build rust/util files in rust folder\n+rust/%.o: rust/util/%.cc\n+\t$(COMPILE) $(RUST_CXXFLAGS) $(RUST_INCLUDES) $<\n \t$(POSTCOMPILE)\n+"}]}