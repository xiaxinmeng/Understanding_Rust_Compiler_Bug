{"sha": "6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIxZmVkYzNlMmE2ZDA4Y2QxZTljZTA5MzkyZjQ2OThjMTlkYmNiMg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-07-28T12:13:13Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-07-28T12:13:13Z"}, "message": "rs6000.md (\"move_from_CR_gt_bit\"): Rename to move_from_CR_eq_bit.\n\n\t* config/rs6000/rs6000.md (\"move_from_CR_gt_bit\"): Rename to\n\tmove_from_CR_eq_bit.\n\tRename UNSPEC_MV_CR_GT to UNSPEC_MV_CR_EQ.\n\n\n\t* config/rs6000/spe.md (\"e500_flip_gt_bit\"): Rename to\n\te500_flip_eq_bit.\n\n\t* config/rs6000/rs6000-protos.h: Rename output_e500_flip_gt_bit to\n\toutput_e500_flip_eq_bit.\n\n\t* config/rs6000/rs6000.c (output_e500_flip_gt_bit): Rename to\n\toutput_e500_flip_eq_bit.\n\t(rs6000_emit_sCOND): Rename call to output_e500_flip_gt_bit to\n\toutput_e500_flip_eq_bit.\n\tRename gen_move_from_CR_gt_bit to gen_move_from_CR_eq_bit.\n\t(print_operand): case D.  Get to EQ bit.\n\nFrom-SVN: r85259", "tree": {"sha": "a9a018355cfa2948f709d55479625e5af43e2ad2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a9a018355cfa2948f709d55479625e5af43e2ad2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1457ebf925ef36aa47d5733b0971092af74b5228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1457ebf925ef36aa47d5733b0971092af74b5228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1457ebf925ef36aa47d5733b0971092af74b5228"}], "stats": {"total": 52, "additions": 36, "deletions": 16}, "files": [{"sha": "cf2ddc336c1f1c6bf057b2dffc15ba3b74baf71b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "patch": "@@ -1,3 +1,23 @@\n+2004-07-28  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* config/rs6000/rs6000.md (\"move_from_CR_gt_bit\"): Rename to\n+\tmove_from_CR_eq_bit.\n+\tRename UNSPEC_MV_CR_GT to UNSPEC_MV_CR_EQ.\n+\t\n+\n+\t* config/rs6000/spe.md (\"e500_flip_gt_bit\"): Rename to\n+\te500_flip_eq_bit.\n+\n+\t* config/rs6000/rs6000-protos.h: Rename output_e500_flip_gt_bit to\n+\toutput_e500_flip_eq_bit.\n+\n+\t* config/rs6000/rs6000.c (output_e500_flip_gt_bit): Rename to\n+\toutput_e500_flip_eq_bit.\n+\t(rs6000_emit_sCOND): Rename call to output_e500_flip_gt_bit to\n+\toutput_e500_flip_eq_bit.\n+\tRename gen_move_from_CR_gt_bit to gen_move_from_CR_eq_bit.\n+\t(print_operand): case D.  Get to EQ bit.\n+\n 2004-07-28  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* gcov.c (function_summary): Add missing \\n."}, {"sha": "5a85078e15887fb0c5204360505d4cf7fc2ab537", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "patch": "@@ -117,7 +117,7 @@ extern enum rtx_code rs6000_reverse_condition (enum machine_mode,\n extern void rs6000_emit_sCOND (enum rtx_code, rtx);\n extern void rs6000_emit_cbranch (enum rtx_code, rtx);\n extern char * output_cbranch (rtx, const char *, int, rtx);\n-extern char * output_e500_flip_gt_bit (rtx, rtx);\n+extern char * output_e500_flip_eq_bit (rtx, rtx);\n extern rtx rs6000_emit_set_const (rtx, enum machine_mode, rtx, int);\n extern int rs6000_emit_cmove (rtx, rtx, rtx, rtx);\n extern void rs6000_emit_minmax (rtx, enum rtx_code, rtx, rtx);"}, {"sha": "254a68bf8557a39afe6a55ce9880485e42cbb438", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "patch": "@@ -9602,12 +9602,12 @@ print_operand (FILE *file, rtx x, int code)\n       return;\n \n     case 'D':\n-      /* Like 'J' but get to the GT bit.  */\n+      /* Like 'J' but get to the EQ bit.  */\n       if (GET_CODE (x) != REG)\n \tabort ();\n \n-      /* Bit 1 is GT bit.  */\n-      i = 4 * (REGNO (x) - CR0_REGNO) + 1;\n+      /* Bit 1 is EQ bit.  */\n+      i = 4 * (REGNO (x) - CR0_REGNO) + 2;\n \n       /* If we want bit 31, write a shift count of zero, not 32.  */\n       fprintf (file, \"%d\", i == 31 ? 0 : i + 1);\n@@ -10565,9 +10565,9 @@ rs6000_emit_sCOND (enum rtx_code code, rtx result)\n \tabort ();\n \n       if (cond_code == NE)\n-\temit_insn (gen_e500_flip_gt_bit (t, t));\n+\temit_insn (gen_e500_flip_eq_bit (t, t));\n \n-      emit_insn (gen_move_from_CR_gt_bit (result, t));\n+      emit_insn (gen_move_from_CR_eq_bit (result, t));\n       return;\n     }\n \n@@ -10748,9 +10748,9 @@ output_cbranch (rtx op, const char *label, int reversed, rtx insn)\n   return string;\n }\n \n-/* Return the string to flip the GT bit on a CR.  */\n+/* Return the string to flip the EQ bit on a CR.  */\n char *\n-output_e500_flip_gt_bit (rtx dst, rtx src)\n+output_e500_flip_eq_bit (rtx dst, rtx src)\n {\n   static char string[64];\n   int a, b;\n@@ -10759,9 +10759,9 @@ output_e500_flip_gt_bit (rtx dst, rtx src)\n       || GET_CODE (src) != REG || ! CR_REGNO_P (REGNO (src)))\n     abort ();\n \n-  /* GT bit.  */\n-  a = 4 * (REGNO (dst) - CR0_REGNO) + 1;\n-  b = 4 * (REGNO (src) - CR0_REGNO) + 1;\n+  /* EQ bit.  */\n+  a = 4 * (REGNO (dst) - CR0_REGNO) + 2;\n+  b = 4 * (REGNO (src) - CR0_REGNO) + 2;\n \n   sprintf (string, \"crnot %d,%d\", a, b);\n   return string;"}, {"sha": "be15c9212c04568ddb48221cac3a5be6a5f73831", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "patch": "@@ -50,7 +50,7 @@\n    (UNSPEC_TLSGOTTPREL\t\t28)\n    (UNSPEC_TLSTLS\t\t29)\n    (UNSPEC_FIX_TRUNC_TF\t\t30)\t; fadd, rounding towards zero\n-   (UNSPEC_MV_CR_GT\t\t31)\t; move_from_CR_gt_bit\n+   (UNSPEC_MV_CR_EQ\t\t31)\t; move_from_CR_eq_bit\n   ])\n \n ;;\n@@ -11396,9 +11396,9 @@\n    (set_attr \"length\" \"12\")])\n \n ;; Same as above, but get the GT bit.\n-(define_insn \"move_from_CR_gt_bit\"\n+(define_insn \"move_from_CR_eq_bit\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n-\t(unspec:SI [(match_operand 1 \"cc_reg_operand\" \"y\")] UNSPEC_MV_CR_GT))]\n+\t(unspec:SI [(match_operand 1 \"cc_reg_operand\" \"y\")] UNSPEC_MV_CR_EQ))]\n   \"TARGET_E500\"\n   \"mfcr %0\\;{rlinm|rlwinm} %0,%0,%D1,1\"\n   [(set_attr \"type\" \"mfcr\")"}, {"sha": "3627c88fe636f7af219eda66e1d049970cfc0b7b", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=6b1fedc3e2a6d08cd1e9ce09392f4698c19dbcb2", "patch": "@@ -2458,14 +2458,14 @@\n ;; FP comparison stuff.\n \n ;; Flip the GT bit.\n-(define_insn \"e500_flip_gt_bit\"\n+(define_insn \"e500_flip_eq_bit\"\n   [(set (match_operand:CCFP 0 \"cc_reg_operand\" \"=y\")\n \t(unspec:CCFP\n \t [(match_operand:CCFP 1 \"cc_reg_operand\" \"y\")] 999))]\n   \"!TARGET_FPRS && TARGET_HARD_FLOAT\"\n   \"*\n {\n-  return output_e500_flip_gt_bit (operands[0], operands[1]);\n+  return output_e500_flip_eq_bit (operands[0], operands[1]);\n }\"\n   [(set_attr \"type\" \"cr_logical\")])\n "}]}