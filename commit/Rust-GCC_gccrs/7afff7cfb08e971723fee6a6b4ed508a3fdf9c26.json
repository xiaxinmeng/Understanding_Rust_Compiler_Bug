{"sha": "7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FmZmY3Y2ZiMDhlOTcxNzIzZmVlNmE2YjRlZDUwOGEzZmRmOWMyNg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-03-20T07:58:41Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-03-20T07:58:41Z"}, "message": "Makefile.in: Update.\n\n\t* Makefile.in: Update.\n\t* c-common.c: Include langhooks.h.\n\t(inline_forbidden_p): Use new hook.\n\t* diagnostic.c: Include langhooks.h.\n\t(format_with_decl, announce_function,\n\tdefault_print_error_function): Use new hook.\n\t* dwarf2out.c (dwarf2_name): Use new hook.\n\t* function.c: Include langhooks.h.\n\t(init_function_start): Use new hook.\n\t* langhooks-def.h (lhd_decl_printable_name): New.\n\t(LANGHOOKS_DECL_PRINTABLE_NAME): New.\n\t(LANGHOOKS_INITIALIZER): Update.\n\t* langhooks.c (lhd_decl_printable_name): New.\n\t* langhooks.h (struct lang_hooks): New hook.\n\t* toplev.c (decl_name, decl_printable_name): Remove.\n\t(open_dump_file): Use new hook.\n\t(process_options): Remove old hook.\n\t* tree.h (decl_printable_name): Remove.\nada:\n\t* misc.c (LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n\t(gnat_init): Remove old hook.\ncp:\n\t* cp-lang.c (LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n\t* cp-tree.h (lang_printable_name): Rename.\n\t* error.c (lang_decl_name): Use new hook.\n\t* lex.c (cxx_init): Remove old hook.\n\t* pt.c (tsubst_expr): Use new hook.\n\t* tree.c (lang_printable_name): Rename.\nf:\n\t* com.c (lang_printable_name): Rename.\n\t(LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n\t(ffe_init): Don't use old hook.\njava:\n\t* decl.c (start_java_method): Use new hook.\n\t* lang.c (LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n\t(java_init): Remove old hook.\nobjc:\n\t* objc-act.c (objc_init): Remove old hook.\n\t(objc_printable_name): Export.\n\t* objc-act.h (objc_printable_name): New.\n\t* objc-lang.c (LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n\nFrom-SVN: r51066", "tree": {"sha": "ccf85c553253b7983f44238b9ca26593595b53df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccf85c553253b7983f44238b9ca26593595b53df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/comments", "author": null, "committer": null, "parents": [{"sha": "f78ce0b72f5df10408865142b003e7ed13cecd2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f78ce0b72f5df10408865142b003e7ed13cecd2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f78ce0b72f5df10408865142b003e7ed13cecd2c"}], "stats": {"total": 178, "additions": 113, "deletions": 65}, "files": [{"sha": "9cf4c2aa34ecdd7311b6e761b296f5f213cd2ca8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -1,3 +1,29 @@\n+2002-03-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* Makefile.in: Update.\n+\t* c-common.c: Include langhooks.h.\n+\t(inline_forbidden_p): Use new hook.\n+\t* diagnostic.c: Include langhooks.h.\n+\t(format_with_decl, announce_function,\n+\tdefault_print_error_function): Use new hook.\n+\t* dwarf2out.c (dwarf2_name): Use new hook.\n+\t* function.c: Include langhooks.h.\n+\t(init_function_start): Use new hook.\n+\t* langhooks-def.h (lhd_decl_printable_name): New.\n+\t(LANGHOOKS_DECL_PRINTABLE_NAME): New.\n+\t(LANGHOOKS_INITIALIZER): Update.\n+\t* langhooks.c (lhd_decl_printable_name): New.\n+\t* langhooks.h (struct lang_hooks): New hook.\n+\t* toplev.c (decl_name, decl_printable_name): Remove.\n+\t(open_dump_file): Use new hook.\n+\t(process_options): Remove old hook.\n+\t* tree.h (decl_printable_name): Remove.\n+objc:\n+\t* objc-act.c (objc_init): Remove old hook.\n+\t(objc_printable_name): Export.\n+\t* objc-act.h (objc_printable_name): New.\n+\t* objc-lang.c (LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n+\n 2002-03-19  Jim Blandy  <jimb@redhat.com>\n \n \t* c-lex.c (cb_file_change): Pass the #inclusion's line number to"}, {"sha": "2f967dfe0b131bd0be3c9d855763a4e82d0699bf", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -1157,7 +1157,7 @@ c-lex.o : c-lex.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) c-lex.h \\\n c-objc-common.o : c-objc-common.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) \\\n     $(C_TREE_H) $(RTL_H) insn-config.h integrate.h $(EXPR_H) $(C_TREE_H) \\\n     flags.h toplev.h tree-inline.h diagnostic.h integrate.h $(VARRAY_H) \\\n-    $(GGC_H)\n+    langhooks.h $(GGC_H)\n c-aux-info.o : c-aux-info.c  $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) \\\n     flags.h toplev.h\n c-convert.o : c-convert.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h toplev.h\n@@ -1340,7 +1340,7 @@ fold-const.o : fold-const.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h \\\n    toplev.h $(HASHTAB_H) $(EXPR_H) $(RTL_H) $(GGC_H) $(TM_P_H)\n diagnostic.o : diagnostic.c diagnostic.h real.h diagnostic.def \\\n    $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(TM_P_H) flags.h $(GGC_H) \\\n-   input.h toplev.h intl.h\n+   input.h toplev.h intl.h langhooks.h\n toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) function.h \\\n    flags.h xcoffout.h input.h $(INSN_ATTR_H) output.h diagnostic.h \\\n    debug.h insn-config.h intl.h $(RECOG_H) Makefile toplev.h \\\n@@ -1375,7 +1375,8 @@ varasm.o : varasm.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) flags.h \\\n    $(HASHTAB_H) $(TARGET_H) langhooks.h\n function.o : function.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h \\\n    function.h $(EXPR_H) libfuncs.h $(REGS_H) hard-reg-set.h \\\n-   insn-config.h $(RECOG_H) output.h toplev.h except.h hash.h $(GGC_H) $(TM_P_H)\n+   insn-config.h $(RECOG_H) output.h toplev.h except.h hash.h $(GGC_H) \\\n+   $(TM_P_H) langhooks.h\n stmt.o : stmt.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h function.h  \\\n    insn-config.h hard-reg-set.h $(EXPR_H) libfuncs.h except.h \\\n    $(LOOP_H) $(RECOG_H) toplev.h output.h varray.h $(GGC_H) $(TM_P_H)"}, {"sha": "4512729f4c7a8b271ee44cf03990647d912e2557", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -1,3 +1,8 @@\n+2002-03-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* misc.c (LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n+\t(gnat_init): Remove old hook.\n+\n 2002-03-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* misc.c (LANG_HOOKS_PARSE_FILE): Redefine."}, {"sha": "7073c8969f0effdb81c59f3127162df80bf568b3", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -109,6 +109,8 @@ static void gnat_parse_file\t\tPARAMS ((void));\n #define LANG_HOOKS_PRINT_DECL\t\tgnat_print_decl\n #undef LANG_HOOKS_PRINT_TYPE\n #define LANG_HOOKS_PRINT_TYPE\t\tgnat_print_type\n+#undef LANG_HOOKS_DECL_PRINTABLE_NAME\n+#define LANG_HOOKS_DECL_PRINTABLE_NAME\tgnat_printable_name\n \n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n \n@@ -358,7 +360,6 @@ gnat_init (filename)\n      it, but it's where g++ does it.  */\n \n   lang_expand_expr = gnat_expand_expr;\n-  decl_printable_name = gnat_printable_name;\n \n   gnat_init_decl_processing ();\n "}, {"sha": "91f2a20476b1812dda720f9a0806698a18725c9a", "filename": "gcc/c-common.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -37,6 +37,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"c-lex.h\"\n #include \"cpplib.h\"\n #include \"target.h\"\n+#include \"langhooks.h\"\n cpp_reader *parse_in;\t\t/* Declared in c-lex.h.  */\n \n #undef WCHAR_TYPE_SIZE\n@@ -483,7 +484,7 @@ fname_as_string (pretty_p)\n   \n   if (pretty_p)\n     name = (current_function_decl\n-\t    ? (*decl_printable_name) (current_function_decl, 2)\n+\t    ? (*lang_hooks.decl_printable_name) (current_function_decl, 2)\n \t    : \"top level\");\n   else if (current_function_decl && DECL_NAME (current_function_decl))\n     name = IDENTIFIER_POINTER (DECL_NAME (current_function_decl));"}, {"sha": "7e6ecad26715494f242d564281eb54b7fdcefdb4", "filename": "gcc/c-objc-common.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fc-objc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fc-objc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-objc-common.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -33,6 +33,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tree-inline.h\"\n #include \"varray.h\"\n #include \"ggc.h\"\n+#include \"langhooks.h\"\n \n static int c_tree_printer PARAMS ((output_buffer *));\n static tree inline_forbidden_p PARAMS ((tree *, int *, void *));\n@@ -392,7 +393,7 @@ c_tree_printer (buffer)\n     case 'T':\n       {\n         const char *n = DECL_NAME (t)\n-          ? (*decl_printable_name) (t, 2)\n+          ? (*lang_hooks.decl_printable_name) (t, 2)\n           : \"({anonymous})\";\n         output_add_string (buffer, n);\n       }"}, {"sha": "7dd27a413ffd2d9e89c58c271050fad2bccbf2f5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -1,3 +1,12 @@\n+2002-03-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cp-lang.c (LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n+\t* cp-tree.h (lang_printable_name): Rename.\n+\t* error.c (lang_decl_name): Use new hook.\n+\t* lex.c (cxx_init): Remove old hook.\n+\t* pt.c (tsubst_decl): Use new hook.\n+\t* tree.c (lang_printable_name): Rename.\n+\n 2002-03-18  Eric Botcazou  <ebotcazou@multimania.com>\n \n \tPR c++/3882"}, {"sha": "619e4f06ff824867be32c766c2b411c717969b73", "filename": "gcc/cp/cp-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Fcp-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Fcp-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-lang.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -67,6 +67,8 @@ static bool ok_to_generate_alias_set_for_type PARAMS ((tree));\n #define LANG_HOOKS_PRINT_TYPE cxx_print_type\n #undef LANG_HOOKS_PRINT_IDENTIFIER\n #define LANG_HOOKS_PRINT_IDENTIFIER cxx_print_identifier\n+#undef LANG_HOOKS_DECL_PRINTABLE_NAME\n+#define LANG_HOOKS_DECL_PRINTABLE_NAME\tcxx_printable_name\n #undef LANG_HOOKS_SET_YYDEBUG\n #define LANG_HOOKS_SET_YYDEBUG cxx_set_yydebug\n "}, {"sha": "35e1da9d9f53dd9a2248d0f9b2e8a4dbf67cefde", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -4263,7 +4263,7 @@ extern tree build_overload                      PARAMS ((tree, tree));\n extern tree function_arg_chain\t\t\tPARAMS ((tree));\n extern int promotes_to_aggr_type\t\tPARAMS ((tree, enum tree_code));\n extern int is_aggr_type_2\t\t\tPARAMS ((tree, tree));\n-extern const char *lang_printable_name\t\tPARAMS ((tree, int));\n+extern const char *cxx_printable_name\t\tPARAMS ((tree, int));\n extern tree build_exception_variant\t\tPARAMS ((tree, tree));\n extern tree bind_template_template_parm\t\tPARAMS ((tree, tree));\n extern tree array_type_nelts_total\t\tPARAMS ((tree));"}, {"sha": "20352e01b54191874dc0b7326cbc5d2a3c163bfc", "filename": "gcc/cp/error.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -2132,7 +2132,7 @@ context_as_string (context, flags)\n   return output_finalize_message (scratch_buffer);\n }\n \n-/* Generate the three forms of printable names for lang_printable_name.  */\n+/* Generate the three forms of printable names for cxx_printable_name.  */\n \n const char *\n lang_decl_name (decl, v)\n@@ -2436,7 +2436,7 @@ cp_print_error_function (buffer, dc)\n       else\n         output_printf\n           (buffer, \"In %s `%s':\", function_category (current_function_decl),\n-           (*decl_printable_name) (current_function_decl, 2));\n+           cxx_printable_name (current_function_decl, 2));\n       output_add_newline (buffer);\n \n       record_last_error_function ();"}, {"sha": "593f3121474df51c3bcc5b37ffba56b82696cef5", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -642,7 +642,6 @@ const char *\n cxx_init (filename)\n      const char *filename;\n {\n-  decl_printable_name = lang_printable_name;\n   input_filename = \"<internal>\";\n \n   init_reswords ();"}, {"sha": "e1b6c375113757e80a776806f86e56a9b80b1ce3", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -7364,7 +7364,7 @@ tsubst_expr (t, args, complain, in_decl)\n \t\t    /* For __PRETTY_FUNCTION__ we have to adjust the\n \t\t       initializer.  */\n \t\t    const char *const name\n-\t\t      = (*decl_printable_name) (current_function_decl, 2);\n+\t\t      = cxx_printable_name (current_function_decl, 2);\n \t\t    init = cp_fname_init (name);\n \t\t    TREE_TYPE (decl) = TREE_TYPE (init);\n \t\t  }"}, {"sha": "c547209d943621a286e725dc5930f42cce7015f8", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -1049,7 +1049,7 @@ cp_statement_code_p (code)\n #define PRINT_RING_SIZE 4\n \n const char *\n-lang_printable_name (decl, v)\n+cxx_printable_name (decl, v)\n      tree decl;\n      int v;\n {"}, {"sha": "7cb9c9bbea79541a4326f055e1bccb4b0495cd5f", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -34,6 +34,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"toplev.h\"\n #include \"intl.h\"\n #include \"diagnostic.h\"\n+#include \"langhooks.h\"\n \n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free  free\n@@ -867,7 +868,7 @@ format_with_decl (buffer, decl)\n   if (*p == '%')\t\t/* Print the name.  */\n     {\n       const char *const n = (DECL_NAME (decl)\n-\t\t\t     ? (*decl_printable_name) (decl, 2)\n+\t\t\t     ? (*lang_hooks.decl_printable_name) (decl, 2)\n \t\t\t     : _(\"((anonymous))\"));\n       output_add_string (buffer, n);\n       while (*p)\n@@ -1075,7 +1076,7 @@ announce_function (decl)\n       if (rtl_dump_and_exit)\n \tverbatim (\"%s \", IDENTIFIER_POINTER (DECL_NAME (decl)));\n       else\n-        verbatim (\" %s\", (*decl_printable_name) (decl, 2));\n+        verbatim (\" %s\", (*lang_hooks.decl_printable_name) (decl, 2));\n       fflush (stderr);\n       output_needs_newline (diagnostic_buffer) = 1;\n       record_last_error_function ();\n@@ -1105,11 +1106,11 @@ default_print_error_function (context, file)\n \t  if (TREE_CODE (TREE_TYPE (current_function_decl)) == METHOD_TYPE)\n             output_printf\n               ((output_buffer *) context, \"In member function `%s':\",\n-               (*decl_printable_name) (current_function_decl, 2));\n+               (*lang_hooks.decl_printable_name) (current_function_decl, 2));\n \t  else\n             output_printf\n               ((output_buffer *) context, \"In function `%s':\",\n-               (*decl_printable_name) (current_function_decl, 2));\n+               (*lang_hooks.decl_printable_name) (current_function_decl, 2));\n \t}\n       output_add_newline ((output_buffer *) context);\n "}, {"sha": "3528bc8ed21920763d82ef0a461219065efb6c01", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -6493,16 +6493,16 @@ output_comp_unit (die)\n     unmark_dies (die);\n }\n \n-/* The DWARF2 pubname for a nested thingy looks like \"A::f\".  The output\n-   of decl_printable_name for C++ looks like \"A::f(int)\".  Let's drop the\n-   argument list, and maybe the scope.  */\n+/* The DWARF2 pubname for a nested thingy looks like \"A::f\".  The\n+   output of lang_hooks.decl_printable_name for C++ looks like\n+   \"A::f(int)\".  Let's drop the argument list, and maybe the scope.  */\n \n static const char *\n dwarf2_name (decl, scope)\n      tree decl;\n      int scope;\n {\n-  return (*decl_printable_name) (decl, scope ? 1 : 0);\n+  return (*lang_hooks.decl_printable_name) (decl, scope ? 1 : 0);\n }\n \n /* Add a new entry to .debug_pubnames if appropriate.  */"}, {"sha": "690a4ee5d5eb8e8510c7cef8df9c44002fc727d7", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -1,3 +1,9 @@\n+Wed Mar 20 08:03:42 2002  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* com.c (lang_printable_name): Rename.\n+\t(LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n+\t(ffe_init): Don't use old hook.\n+\n Sun Mar 17 18:50:15 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* com.h (ffe_parse_file): Prototype."}, {"sha": "fa64b99ce941dd058386ce483f37e0290e085a62", "filename": "gcc/f/com.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -364,7 +364,7 @@ static void delete_block (tree block);\n static int duplicate_decls (tree newdecl, tree olddecl);\n static void finish_decl (tree decl, tree init, bool is_top_level);\n static void finish_function (int nested);\n-static const char *lang_printable_name (tree decl, int v);\n+static const char *ffe_printable_name (tree decl, int v);\n static tree lookup_name_current_level (tree name);\n static struct binding_level *make_binding_level (void);\n static void pop_f_function_context (void);\n@@ -13630,7 +13630,7 @@ finish_function (int nested)\n    nested function and all).  */\n \n static const char *\n-lang_printable_name (tree decl, int v)\n+ffe_printable_name (tree decl, int v)\n {\n   /* Just to keep GCC quiet about the unused variable.\n      In theory, differing values of V should produce different\n@@ -14215,6 +14215,8 @@ static void ffe_print_identifier PARAMS ((FILE *, tree, int));\n #define LANG_HOOKS_PARSE_FILE\t\tffe_parse_file\n #undef  LANG_HOOKS_PRINT_IDENTIFIER\n #define LANG_HOOKS_PRINT_IDENTIFIER\tffe_print_identifier\n+#undef  LANG_HOOKS_DECL_PRINTABLE_NAME\n+#define LANG_HOOKS_DECL_PRINTABLE_NAME\tffe_printable_name\n \n /* We do not wish to use alias-set based aliasing at all.  Used in the\n    extreme (every object with its own set, with equivalences recorded) it\n@@ -14277,7 +14279,6 @@ ffe_init (filename)\n #endif\n \n   ffecom_init_decl_processing ();\n-  decl_printable_name = lang_printable_name;\n   print_error_function = lang_print_error_function;\n \n   /* If the file is output from cpp, it should contain a first line"}, {"sha": "e7facd453b7de26a3618cbdc28ce283a4b49da60", "filename": "gcc/function.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -59,6 +59,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"ggc.h\"\n #include \"tm_p.h\"\n #include \"integrate.h\"\n+#include \"langhooks.h\"\n \n #ifndef TRAMPOLINE_ALIGNMENT\n #define TRAMPOLINE_ALIGNMENT FUNCTION_BOUNDARY\n@@ -6259,7 +6260,7 @@ init_function_start (subr, filename, line)\n {\n   prepare_function_start ();\n \n-  current_function_name = (*decl_printable_name) (subr, 2);\n+  current_function_name = (*lang_hooks.decl_printable_name) (subr, 2);\n   cfun->decl = subr;\n \n   /* Nonzero if this is a nested function that uses a static chain.  */"}, {"sha": "dc59c8323dbdf988c8cf88beae94d045ee1b7029", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -1,3 +1,9 @@\n+2002-03-20  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* decl.c (start_java_method): Use new hook.\n+\t* lang.c (LANG_HOOKS_DECL_PRINTABLE_NAME): Redefine.\n+\t(java_init): Remove old hook.\n+\n 2002-03-18  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* builtins.c (define_builtin): Do nothing if `type' is null."}, {"sha": "ffcccb282299c7c34b3b80a0e244b0e9106686ec", "filename": "gcc/java/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -1775,7 +1775,7 @@ start_java_method (fndecl)\n   type_map = (tree *) xrealloc (type_map, i * sizeof (tree));\n \n #if defined(DEBUG_JAVA_BINDING_LEVELS)\n-  fprintf (stderr, \"%s:\\n\", (*decl_printable_name) (fndecl, 2));\n+  fprintf (stderr, \"%s:\\n\", lang_printable_name (fndecl, 2));\n   current_pc = 0;\n #endif /* defined(DEBUG_JAVA_BINDING_LEVELS) */\n   pushlevel (1);  /* Push parameters. */"}, {"sha": "c612b491b4aa1ad541a906e2bae44e56686fb41c", "filename": "gcc/java/lang.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -225,6 +225,8 @@ static int dependency_tracking = 0;\n #define LANG_HOOKS_PARSE_FILE java_parse_file\n #undef LANG_HOOKS_DUP_LANG_SPECIFIC_DECL\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL java_dup_lang_specific_decl\n+#undef LANG_HOOKS_DECL_PRINTABLE_NAME\n+#define LANG_HOOKS_DECL_PRINTABLE_NAME lang_printable_name\n \n /* Each front end provides its own.  */\n const struct lang_hooks lang_hooks = LANG_HOOKS_INITIALIZER;\n@@ -506,7 +508,6 @@ java_init (filename)\n   jcf_path_init ();\n   jcf_path_seal (version_flag);\n \n-  decl_printable_name = lang_printable_name;\n   print_error_function = lang_print_error;\n   lang_expand_expr = java_lang_expand_expr;\n "}, {"sha": "404b4bc3689baf1a63fef30be60b854d4cc07f24", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -46,6 +46,7 @@ extern int lhd_safe_from_p PARAMS ((rtx, tree));\n extern int lhd_staticp PARAMS ((tree));\n extern void lhd_clear_binding_stack PARAMS ((void));\n extern void lhd_print_tree_nothing PARAMS ((FILE *, tree, int));\n+extern const char *lhd_decl_printable_name PARAMS ((tree, int));\n extern void lhd_set_yydebug PARAMS ((int));\n \n /* Declarations of default tree inlining hooks.  */\n@@ -86,6 +87,7 @@ tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n #define LANG_HOOKS_PRINT_DECL\t\tlhd_print_tree_nothing\n #define LANG_HOOKS_PRINT_TYPE\t\tlhd_print_tree_nothing\n #define LANG_HOOKS_PRINT_IDENTIFIER\tlhd_print_tree_nothing\n+#define LANG_HOOKS_DECL_PRINTABLE_NAME\tlhd_decl_printable_name\n #define LANG_HOOKS_SET_YYDEBUG\t\tlhd_set_yydebug\n \n /* Tree inlining hooks.  */\n@@ -160,6 +162,7 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_PRINT_DECL, \\\n   LANG_HOOKS_PRINT_TYPE, \\\n   LANG_HOOKS_PRINT_IDENTIFIER, \\\n+  LANG_HOOKS_DECL_PRINTABLE_NAME, \\\n   LANG_HOOKS_SET_YYDEBUG, \\\n   LANG_HOOKS_TREE_INLINING_INITIALIZER, \\\n   LANG_HOOKS_TREE_DUMP_INITIALIZER \\"}, {"sha": "cd36889a3225112d0fc8de8ecf4cec45ff1def11", "filename": "gcc/langhooks.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -134,6 +134,16 @@ hook_get_alias_set_0 (t)\n   return 0;\n }\n \n+/* This is the default decl_printable_name function.  */\n+\n+const char *\n+lhd_decl_printable_name (decl, verbosity)\n+     tree decl;\n+     int verbosity ATTRIBUTE_UNUSED;\n+{\n+  return IDENTIFIER_POINTER (DECL_NAME (decl));\n+}\n+\n /* lang_hooks.tree_inlining.walk_subtrees is called by walk_tree()\n    after handling common cases, but before walking code-specific\n    sub-trees.  If this hook is overridden for a language, it should"}, {"sha": "49c2c6803a1f45d9b4832e6e9d71310ef7731e19", "filename": "gcc/langhooks.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -160,6 +160,14 @@ struct lang_hooks\n   lang_print_tree_hook print_type;\n   lang_print_tree_hook print_identifier;\n \n+  /* Computes the name to use to print a declaration.  DECL is the\n+     non-NULL declaration in question.  VERBOSITY determines what\n+     information will be printed: 0: DECL_NAME, demangled as\n+     necessary.  1: and scope information.  2: and any other\n+     information that might be interesting, such as function parameter\n+     types in C++.  */\n+  const char *(*decl_printable_name) PARAMS ((tree decl, int verbosity));\n+\n   /* Set yydebug for bison-based parsers, when -dy is given on the\n      command line.  By default, if the parameter is non-zero, prints a\n      warning that the front end does not use such a parser.  */"}, {"sha": "2d689a25eb8e66533ff37cfb3e5ed048300b365f", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -165,7 +165,6 @@ static int check_methods_accessible\t\tPARAMS ((tree, tree,\n static void encode_aggregate_within\t\tPARAMS ((tree, int, int,\n \t\t\t\t\t               int, int));\n static const char *objc_demangle\t\tPARAMS ((const char *));\n-static const char *objc_printable_name\t\tPARAMS ((tree, int));\n static void objc_expand_function_end            PARAMS ((void));\n \n /* Hash tables to manage the global pool of method prototypes.  */\n@@ -477,8 +476,6 @@ objc_init (filename)\n {\n   filename = c_objc_common_init (filename);\n \n-  decl_printable_name = objc_printable_name;\n-\n   /* Force the line number back to 0; check_newline will have\n      raised it to 1, which will make the builtin functions appear\n      not to be built in.  */\n@@ -8028,7 +8025,7 @@ objc_demangle (mangled)\n     return mangled;             /* not an objc mangled name */\n }\n \n-static const char *\n+const char *\n objc_printable_name (decl, kind)\n      tree decl;\n      int kind ATTRIBUTE_UNUSED;"}, {"sha": "b4917f7a9e46186e9c3c1f16ee2117d8b69bd8d5", "filename": "gcc/objc/objc-act.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fobjc%2Fobjc-act.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fobjc%2Fobjc-act.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.h?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -25,6 +25,7 @@ Boston, MA 02111-1307, USA.  */\n \n const char *objc_init\t\t\t\tPARAMS ((const char *));\n int objc_decode_option\t\t\t\tPARAMS ((int, char **));\n+const char *objc_printable_name\t\t\tPARAMS ((tree, int));\n \n /* used by yyparse */\n "}, {"sha": "2be19df95230acb327ca80e51d046867490fcd33", "filename": "gcc/objc/objc-lang.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fobjc%2Fobjc-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Fobjc%2Fobjc-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-lang.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -52,6 +52,8 @@ static void objc_post_options                   PARAMS ((void));\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL c_dup_lang_specific_decl\n #undef LANG_HOOKS_PRINT_IDENTIFIER\n #define LANG_HOOKS_PRINT_IDENTIFIER c_print_identifier\n+#undef LANG_HOOKS_DECL_PRINTABLE_NAME\n+#define LANG_HOOKS_DECL_PRINTABLE_NAME objc_printable_name\n #undef LANG_HOOKS_SET_YYDEBUG\n #define LANG_HOOKS_SET_YYDEBUG c_set_yydebug\n /* Inlining hooks same as the C front end.  */"}, {"sha": "134541734ccb0f92d87091f6bb6153b5b3e0fdc1", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -108,7 +108,6 @@ static void init_asm_output PARAMS ((const char *));\n static void finalize PARAMS ((void));\n \n static void set_target_switch PARAMS ((const char *));\n-static const char *decl_name PARAMS ((tree, int));\n \n static void float_signal PARAMS ((int)) ATTRIBUTE_NORETURN;\n static void crash_signal PARAMS ((int)) ATTRIBUTE_NORETURN;\n@@ -353,16 +352,6 @@ tree current_function_decl;\n    if none.  */\n tree current_function_func_begin_label;\n \n-/* Pointer to function to compute the name to use to print a declaration.\n-   DECL is the declaration in question.\n-   VERBOSITY determines what information will be printed:\n-     0: DECL_NAME, demangled as necessary.\n-     1: and scope information.\n-     2: and any other information that might be interesting, such as function\n-        parameter types in C++.  */\n-\n-const char *(*decl_printable_name)\tPARAMS ((tree, int));\n-\n /* Pointer to function to compute rtl for a language-specific tree code.  */\n \n typedef rtx (*lang_expand_expr_t)\n@@ -1559,19 +1548,7 @@ read_integral_parameter (p, pname, defval)\n \n   return atoi (p);\n }\n-\n \f\n-/* This is the default decl_printable_name function.  */\n-\n-static const char *\n-decl_name (decl, verbosity)\n-     tree decl;\n-     int verbosity ATTRIBUTE_UNUSED;\n-{\n-  return IDENTIFIER_POINTER (DECL_NAME (decl));\n-}\n-\f\n-\n /* This calls abort and is used to avoid problems when abort if a macro.\n    It is used when we need to pass the address of abort.  */\n \n@@ -1829,7 +1806,7 @@ open_dump_file (index, decl)\n \n   if (decl)\n     fprintf (rtl_dump_file, \"\\n;; Function %s\\n\\n\",\n-\t     decl_printable_name (decl, 2));\n+\t     (*lang_hooks.decl_printable_name) (decl, 2));\n \n   timevar_pop (TV_DUMP);\n   return 1;\n@@ -5002,7 +4979,6 @@ process_options ()\n static void\n lang_independent_init ()\n {\n-  decl_printable_name = decl_name;\n   lang_expand_expr = (lang_expand_expr_t) do_abort;\n \n   /* Initialize the garbage-collector, and string pools.  */"}, {"sha": "6c03df798ccb10f3e8edf1fd084efb478abff380", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afff7cfb08e971723fee6a6b4ed508a3fdf9c26/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=7afff7cfb08e971723fee6a6b4ed508a3fdf9c26", "patch": "@@ -2713,16 +2713,6 @@ extern tree current_function_func_begin_label;\n \n extern int all_types_permanent;\n \n-/* Pointer to function to compute the name to use to print a declaration.\n-   DECL is the declaration in question.\n-   VERBOSITY determines what information will be printed:\n-     0: DECL_NAME, demangled as necessary.\n-     1: and scope information.\n-     2: and any other information that might be interesting, such as function\n-        parameter types in C++.  */\n-\n-extern const char *(*decl_printable_name)\tPARAMS ((tree, int));\n-\n /* Pointer to function to finish handling an incomplete decl at the\n    end of compilation.  */\n "}]}