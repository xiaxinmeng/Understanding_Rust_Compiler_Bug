{"sha": "b59b5081384b68e33c1a50ef4d047f95e171c05d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU5YjUwODEzODRiNjhlMzNjMWE1MGVmNGQwNDdmOTVlMTcxYzA1ZA==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2003-10-02T18:34:56Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2003-10-02T18:34:56Z"}, "message": "GtkComponentPeer.java (insets): New field.\n\n2003-10-02  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java (insets): New\n\tfield.\n\t(initializeInsets): New method.\n\t(GtkComponentPeer): Call initializeInsets.  Call setCursor and\n\tsetBounds unconditionally.\n\t(setBounds): Convert coordinates if parent is a Window.\n\t* gnu/java/awt/peer/gtk/GtkContainerPeer.java (insets): Move\n\tfield to GtkComponentPeer.\n\t(GtkContainerPeer): Don't initialize insets.\n\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (initializeInsets):\n\tNew method.\n\t(create): Call new GtkWindowPeer create method.\n\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (initializeInsets):\n\tNew method.\n\t(create): Call new GtkWindowPeer create method.\n\t(setBounds): Remove method.\n\t(postConfigureEvent): Likewise.\n\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java: Replace GTK window\n\ttype constants with GDK window type constants.\n\t(create(int,boolean,int,int,GtkWindowPeer)): New method.\n\t(create(int,boolean)): Likewise.\n\t(create()): Call create(int,boolean).\n\t(nativeSetBounds): New native method declaration.\n\t(setBounds): Call native method declaration.\n\t(setSize): New native method declaration.\n\t(setBoundsCallback): Likewise.\n\t(postConfigureEvent): Handle change in insets.  Call setSize and\n\tsetBoundsCallback methods.\n\t* java/awt/Window.java (Window): Set visible to false.\n\t(setBoundsCallback): New method.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(gtkWidgetGetLocationOnScreen): If this component is not a\n\tcontainer, adjust the location returned based on the peer's\n\tallocation.\n\t(set(String,boolean)): Revert change from 2003-09-19.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n\t(awt_event_handler): Fix inset calculation.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c: Add JNI\n\tglue for Window.setBoundsCallback.\n\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c (create):\n\tSet up stacking order, window decorations and window manager\n\thints.\n\t(setBoundsCallback): New method.\n\t(setSize): New method.\n\t(nativeSetBounds): New method.\n\t* jni/gtk-peer/gtkpeer.h: Declare setBoundsCallbackID.\n\nFrom-SVN: r72043", "tree": {"sha": "ad4d3237b7756c048c153b6523f2ac2e1afded13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad4d3237b7756c048c153b6523f2ac2e1afded13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b59b5081384b68e33c1a50ef4d047f95e171c05d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b59b5081384b68e33c1a50ef4d047f95e171c05d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b59b5081384b68e33c1a50ef4d047f95e171c05d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b59b5081384b68e33c1a50ef4d047f95e171c05d/comments", "author": null, "committer": null, "parents": [{"sha": "01d28c3ff91870a620f7a5a699e509e103afb8b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d28c3ff91870a620f7a5a699e509e103afb8b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01d28c3ff91870a620f7a5a699e509e103afb8b9"}], "stats": {"total": 425, "additions": 317, "deletions": 108}, "files": [{"sha": "a5184f5a956ab784484a885f86421fed1cc902ec", "filename": "libjava/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -1,3 +1,52 @@\n+2003-10-02  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java (insets): New\n+\tfield.\n+\t(initializeInsets): New method.\n+\t(GtkComponentPeer): Call initializeInsets.  Call setCursor and\n+\tsetBounds unconditionally.\n+\t(setBounds): Convert coordinates if parent is a Window.\n+\t* gnu/java/awt/peer/gtk/GtkContainerPeer.java (insets): Move\n+\tfield to GtkComponentPeer.\n+\t(GtkContainerPeer): Don't initialize insets.\n+\t* gnu/java/awt/peer/gtk/GtkDialogPeer.java (initializeInsets):\n+\tNew method.\n+\t(create): Call new GtkWindowPeer create method.\n+\t* gnu/java/awt/peer/gtk/GtkFramePeer.java (initializeInsets):\n+\tNew method.\n+\t(create): Call new GtkWindowPeer create method.\n+\t(setBounds): Remove method.\n+\t(postConfigureEvent): Likewise.\n+\t* gnu/java/awt/peer/gtk/GtkWindowPeer.java: Replace GTK window\n+\ttype constants with GDK window type constants.\n+\t(create(int,boolean,int,int,GtkWindowPeer)): New method.\n+\t(create(int,boolean)): Likewise.\n+\t(create()): Call create(int,boolean).\n+\t(nativeSetBounds): New native method declaration.\n+\t(setBounds): Call native method declaration.\n+\t(setSize): New native method declaration.\n+\t(setBoundsCallback): Likewise.\n+\t(postConfigureEvent): Handle change in insets.  Call setSize and\n+\tsetBoundsCallback methods.\n+\t* java/awt/Window.java (Window): Set visible to false.\n+\t(setBoundsCallback): New method.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(gtkWidgetGetLocationOnScreen): If this component is not a\n+\tcontainer, adjust the location returned based on the peer's\n+\tallocation.\n+\t(set(String,boolean)): Revert change from 2003-09-19.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c\n+\t(awt_event_handler): Fix inset calculation.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c: Add JNI\n+\tglue for Window.setBoundsCallback.\n+\t* jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c (create):\n+\tSet up stacking order, window decorations and window manager\n+\thints.\n+\t(setBoundsCallback): New method.\n+\t(setSize): New method.\n+\t(nativeSetBounds): New method.\n+\t* jni/gtk-peer/gtkpeer.h: Declare setBoundsCallbackID.\n+\n 2003-10-02  Tom Tromey  <tromey@redhat.com>\n \n \t* java/lang/VMClassLoader.java (loadClass): Now native."}, {"sha": "0f97d533cf76f6488561041f225668bf58178068", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -72,6 +72,8 @@ public class GtkComponentPeer extends GtkGenericPeer\n {\n   Component awtComponent;\n \n+  Insets insets;\n+\n   /* this isEnabled differs from Component.isEnabled, in that it\n      knows if a parent is disabled.  In that case Component.isEnabled \n      may return true, but our isEnabled will always return false */\n@@ -90,6 +92,11 @@ void create ()\n     throw new RuntimeException ();\n   }\n \n+  void initializeInsets ()\n+  {\n+    insets = new Insets (0, 0, 0, 0);\n+  }\n+\n   native void connectHooks ();\n \n   protected GtkComponentPeer (Component awtComponent)\n@@ -115,13 +122,13 @@ protected GtkComponentPeer (Component awtComponent)\n       //  \tc.setFont (cp.getFont ());\n       if (awtComponent.getFont() != null)\n \tsetFont(awtComponent.getFont());\n-      \n-      if (! (awtComponent instanceof Window))\n-\t{\n-\t  setCursor (awtComponent.getCursor ());\n-\t  Rectangle bounds = awtComponent.getBounds ();\n-\t  setBounds (bounds.x, bounds.y, bounds.width, bounds.height);\n-\t}\n+\n+      initializeInsets ();\n+\n+      setCursor (awtComponent.getCursor ());\n+      Rectangle bounds = awtComponent.getBounds ();\n+      setBounds (bounds.x, bounds.y, bounds.width, bounds.height);\n+\n     } catch (RuntimeException ex) { ; }\n   }\n \n@@ -278,11 +285,11 @@ public void setBounds (int x, int y, int width, int height)\n   {\n     Component parent = awtComponent.getParent ();\n     \n-    if (parent instanceof Frame)\n+    if (parent instanceof Window)\n       {\n-\tInsets insets = ((Frame)parent).getInsets ();\n-\t/* convert Java's coordinate space into GTK+'s coordinate space */\n-\tsetNativeBounds (x-insets.left, y-insets.top, width, height);\n+\tInsets insets = ((Window) parent).getInsets ();\n+\t// Convert from Java coordinates to GTK coordinates.\n+\tsetNativeBounds (x - insets.left, y - insets.top, width, height);\n       }\n     else\n       setNativeBounds (x, y, width, height);"}, {"sha": "5225ccc5f1433a918ecbb6c6d7b33add6431d73f", "filename": "libjava/gnu/java/awt/peer/gtk/GtkContainerPeer.java", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkContainerPeer.java?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -48,14 +48,12 @@\n public class GtkContainerPeer extends GtkComponentPeer\n   implements ContainerPeer\n {\n-  Insets insets;\n   Container c;\n \n   public GtkContainerPeer(Container c)\n   {\n     super (c);\n     this.c = c;\n-    insets = new Insets (0, 0, 0, 0);\n   }\n \n   public void beginValidate() "}, {"sha": "e7b047ea2e2b9d3b320ca6f414b707e954beccf6", "filename": "libjava/gnu/java/awt/peer/gtk/GtkDialogPeer.java", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkDialogPeer.java?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -41,6 +41,7 @@\n import java.awt.AWTEvent;\n import java.awt.Component;\n import java.awt.Dialog;\n+import java.awt.Insets;\n import java.awt.peer.DialogPeer;\n \n public class GtkDialogPeer extends GtkWindowPeer\n@@ -51,11 +52,19 @@ public GtkDialogPeer (Dialog dialog)\n     super (dialog);\n   }\n \n+  void initializeInsets ()\n+  {\n+    // Unfortunately, X does not provide a clean way to calculate the\n+    // dimensions of a dialog's borders before it has been displayed.\n+    // So we guess and then fix the dimensions upon receipt of the\n+    // first configure event.\n+    insets = new Insets (20, 6, 6, 6);\n+  }\n+\n   void create ()\n   {\n-    create (GTK_WINDOW_TOPLEVEL,\n-\t    awtComponent.getWidth(),\n-\t    awtComponent.getHeight());\n+    // Create a decorated dialog window.\n+    create (GDK_WINDOW_TYPE_HINT_DIALOG, true);\n   }\n \n   public void getArgs (Component component, GtkArgList args)"}, {"sha": "b44a02d13dbe2a7096c7b51278bd7b3e360b4cbd", "filename": "libjava/gnu/java/awt/peer/gtk/GtkFramePeer.java", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkFramePeer.java?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -42,6 +42,7 @@\n import java.awt.Frame;\n import java.awt.Graphics;\n import java.awt.Image;\n+import java.awt.Insets;\n import java.awt.MenuBar;\n import java.awt.Rectangle;\n import java.awt.event.PaintEvent;\n@@ -69,9 +70,19 @@ public GtkFramePeer (Frame frame)\n     super (frame);\n   }\n \n+  void initializeInsets ()\n+  {\n+    // Unfortunately, X does not provide a clean way to calculate the\n+    // dimensions of a frame's borders before it has been displayed.\n+    // So we guess and then fix the dimensions upon receipt of the\n+    // first configure event.\n+    insets = new Insets (20, 6, 6, 6);\n+  }\n+\n   void create ()\n   {\n-    create (GTK_WINDOW_TOPLEVEL);\n+    // Create a normal decorated window.\n+    create (GDK_WINDOW_TYPE_HINT_NORMAL, true);\n   }\n \n   public void getArgs (Component component, GtkArgList args)\n@@ -97,26 +108,8 @@ public Graphics getGraphics ()\n     return g;\n   }\n \n-  public void setBounds (int x, int y, int width, int height)\n-  {\n-    super.setBounds (0, 0, width - insets.left - insets.right,\n-\t\t     height - insets.top - insets.bottom + menuBarHeight);\n-  }\n-\n-  protected void postConfigureEvent (int x, int y, int width, int height,\n-\t\t\t\t     int top, int left, int bottom, int right)\n-  {\n-    if (((Frame)awtComponent).getMenuBar () != null)\n-      {\n-\tmenuBarHeight = getMenuBarHeight ();\n-\ttop += menuBarHeight;\n-      }\n-\n-    super.postConfigureEvent (0, 0,\n-\t\t\t      width + left + right,\n-\t\t\t      height + top + bottom - menuBarHeight,\n-\t\t\t      top, left, bottom, right);\n-  }\n+  // FIXME: When MenuBars work, override postConfigureEvent and\n+  // setBounds to account for MenuBar dimensions.\n \n   protected void postMouseEvent(int id, long when, int mods, int x, int y, \n \t\t\t\tint clickCount, boolean popupTrigger)\n@@ -128,8 +121,6 @@ protected void postMouseEvent(int id, long when, int mods, int x, int y,\n \n   protected void postExposeEvent (int x, int y, int width, int height)\n   {\n-//      System.out.println (\"x + insets.left:\" + (x + insets.left));\n-//      System.out.println (\"y + insets.top :\" + (y + insets.top));\n     q.postEvent (new PaintEvent (awtComponent, PaintEvent.PAINT,\n \t\t\t\t new Rectangle (x + insets.left, \n \t\t\t\t\t\ty + insets.top, "}, {"sha": "be615042524d4c6819ce9aa54fecea57fbe6f563", "filename": "libjava/gnu/java/awt/peer/gtk/GtkWindowPeer.java", "status": "modified", "additions": 96, "deletions": 27, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkWindowPeer.java?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -40,29 +40,43 @@\n \n import java.awt.Component;\n import java.awt.Dimension;\n+import java.awt.Insets;\n import java.awt.Window;\n import java.awt.peer.WindowPeer;\n \n public class GtkWindowPeer extends GtkContainerPeer\n   implements WindowPeer\n {\n-  static protected final int GTK_WINDOW_TOPLEVEL = 0;\n-  static protected final int GTK_WINDOW_POPUP = 1;\n-\n-  native void create (int type, int width, int height);\n-\n-  void create (int type)\n+  static protected final int GDK_WINDOW_TYPE_HINT_NORMAL = 0;\n+  static protected final int GDK_WINDOW_TYPE_HINT_DIALOG = 1;\n+  static protected final int GDK_WINDOW_TYPE_HINT_MENU = 2;\n+  static protected final int GDK_WINDOW_TYPE_HINT_TOOLBAR = 3;\n+  static protected final int GDK_WINDOW_TYPE_HINT_SPLASHSCREEN = 4;\n+  static protected final int GDK_WINDOW_TYPE_HINT_UTILITY = 5;\n+  static protected final int GDK_WINDOW_TYPE_HINT_DOCK = 6;\n+  static protected final int GDK_WINDOW_TYPE_HINT_DESKTOP = 7;\n+\n+  native void create (int type, boolean decorated,\n+\t\t      int width, int height,\n+\t\t      GtkWindowPeer parent);\n+\n+  void create (int type, boolean decorated)\n   {\n-    create (type,\n+    GtkWindowPeer parent_peer = null;\n+    Component parent = awtComponent.getParent();\n+    if (parent != null)\n+      parent_peer = (GtkWindowPeer) awtComponent.getParent().getPeer();\n+\n+    create (type, decorated,\n \t    awtComponent.getWidth(),\n-\t    awtComponent.getHeight());\n+\t    awtComponent.getHeight(),\n+\t    parent_peer);\n   }\n \n   void create ()\n   {\n-    create (GTK_WINDOW_POPUP,\n-\t    awtComponent.getWidth(),\n-\t    awtComponent.getHeight());\n+    // Create a normal undecorated window.\n+    create (GDK_WINDOW_TYPE_HINT_NORMAL, false);\n   }\n \n   native void connectHooks ();\n@@ -81,7 +95,14 @@ public void getArgs (Component component, GtkArgList args)\n   native public void toBack ();\n   native public void toFront ();\n \n-  native public void setBounds (int x, int y, int width, int height);\n+  native void nativeSetBounds (int x, int y, int width, int height);\n+\n+  public void setBounds (int x, int y, int width, int height)\n+  {\n+    nativeSetBounds (x, y,\n+\t\t     width - insets.left - insets.right,\n+\t\t     height - insets.top - insets.bottom);\n+  }\n \n   public void setTitle (String title)\n   {\n@@ -90,34 +111,82 @@ public void setTitle (String title)\n \n   public void setResizable (boolean resizable)\n   {\n+    // Call setSize; otherwise when resizable is changed from true to\n+    // false the window will shrink to the dimensions it had before it\n+    // was resizable.\n+    setSize (awtComponent.getWidth() - insets.left - insets.right,\n+\t     awtComponent.getHeight() - insets.top - insets.bottom);\n     set (\"allow_shrink\", resizable);\n     set (\"allow_grow\", resizable);\n   }\n \n+  native void setSize (int width, int height);\n+  native void setBoundsCallback (Window window,\n+\t\t\t\t int x, int y,\n+\t\t\t\t int width, int height);\n+\n   protected void postConfigureEvent (int x, int y, int width, int height,\n \t\t\t\t     int top, int left, int bottom, int right)\n   {\n-    /* \n-       If our borders change (which often happens when we opaque resize),\n-       we need to make sure that a new layout will happen, since Sun\n-       forgets to handle this case.\n-    */\n+    // Configure events tell us the location and dimensions of the\n+    // window within the frame borders, and the dimensions of the\n+    // frame borders (top, left, bottom, right).\n+\n+    // If our borders change we need to make sure that a new layout\n+    // will happen, since Sun forgets to handle this case.\n     if (insets.top != top\n \t|| insets.left != left\n \t|| insets.bottom != bottom\n \t|| insets.right != right)\n       {\n-\tawtComponent.invalidate ();\n+\t// When our insets change, we receive a configure event with\n+\t// the new insets, the old window location and the old window\n+\t// dimensions.  We update our Window object's location and\n+\t// size using our old inset values.\n+\tsetBoundsCallback ((Window) awtComponent,\n+\t\t\t   x - insets.left,\n+\t\t\t   y - insets.top,\n+\t\t\t   width + insets.left + insets.right,\n+\t\t\t   height + insets.top + insets.bottom);\n+\n+\t// The peer's dimensions do not get updated automatically when\n+\t// insets change so we need to do it manually.\n+\tsetSize (width + (insets.left - left) + (insets.right - right),\n+\t\t height + (insets.top - top) + (insets.bottom - bottom));\n+\n+\tinsets.top = top;\n+\tinsets.left = left;\n+\tinsets.bottom = bottom;\n+\tinsets.right = right;\n+\n+\tawtComponent.validate();\n+      }\n+    else\n+      {\n+\tint frame_x = x - insets.left;\n+\tint frame_y = y - insets.top;\n+\tint frame_width = width + insets.left + insets.right;\n+\tint frame_height = height + insets.top + insets.bottom;\n+\n+\tif (frame_x != awtComponent.getX()\n+\t    || frame_y != awtComponent.getY()\n+\t    || frame_width != awtComponent.getWidth()\n+\t    || frame_height != awtComponent.getHeight())\n+\t  {\n+\t    setBoundsCallback ((Window) awtComponent,\n+\t\t\t       frame_x,\n+\t\t\t       frame_y,\n+\t\t\t       frame_width,\n+\t\t\t       frame_height);\n+\n+\t    if (frame_width != awtComponent.getWidth()\n+\t\t|| frame_height != awtComponent.getHeight())\n+\t      setSize (width, height);\n+\n+\t    awtComponent.validate();\n+\t  }\n       }\n-    \n-    insets.top = top;\n-    insets.left = left;\n-    insets.bottom = bottom;\n-    insets.right = right;\n-\n-    awtComponent.setBounds (x, y, width, height);\n-    awtComponent.validate ();\n   }\n-  \n+\n   native public void setVisible (boolean b);\n }"}, {"sha": "3554bf5e581a610650fab367a8b95e65d9ab0e3d", "filename": "libjava/java/awt/Window.java", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjava%2Fawt%2FWindow.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjava%2Fawt%2FWindow.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fawt%2FWindow.java?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -90,6 +90,7 @@ public class Window extends Container implements Accessible\n    */\n   Window()\n   {\n+    visible = false;\n     setLayout(new BorderLayout());\n   }\n \n@@ -727,4 +728,28 @@ public void setFocusableWindowState (boolean focusableWindowState)\n   {\n     this.focusableWindowState = focusableWindowState;\n   }\n+\n+  // setBoundsCallback is needed so that when a user moves a window,\n+  // the Window's location can be updated without calling the peer's\n+  // setBounds method.  When a user moves a window the peer window's\n+  // location is updated automatically and the windowing system sends\n+  // a message back to the application informing it of its updated\n+  // dimensions.  We must update the AWT Window class with these new\n+  // dimensions.  But we don't want to call the peer's setBounds\n+  // method, because the peer's dimensions have already been updated.\n+  // (Under X, having this method prevents Configure event loops when\n+  // moving windows: Component.setBounds -> peer.setBounds ->\n+  // postConfigureEvent -> Component.setBounds -> ...  In some cases\n+  // Configure event loops cause windows to jitter back and forth\n+  // continuously).\n+  void setBoundsCallback (int x, int y, int w, int h)\n+  {\n+    if (this.x == x && this.y == y && width == w && height == h)\n+      return;\n+    invalidate();\n+    this.x = x;\n+    this.y = y;\n+    width = w;\n+    height = h;\n+  }\n }"}, {"sha": "455af68f2bc51a9cdfcaeac55ea9be1d83cb8ec3", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -172,7 +172,15 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetGetLocationOnScreen\n   point = (*env)->GetIntArrayElements (env, jpoint, 0);\n \n   gdk_threads_enter ();\n+\n   gdk_window_get_origin (GTK_WIDGET (ptr)->window, point, point+1);\n+\n+  if (!GTK_IS_CONTAINER (ptr))\n+    {\n+      *point += GTK_WIDGET(ptr)->allocation.x;\n+      *(point+1) += GTK_WIDGET(ptr)->allocation.y;\n+    }\n+\n   gdk_threads_leave ();\n \n   (*env)->ReleaseIntArrayElements(env, jpoint, point, 0);\n@@ -508,18 +516,14 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_set__Ljava_lang_String_2Ljava_lang_S\n }\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkComponentPeer_set__Ljava_lang_String_2Z\n-  (JNIEnv *env, jobject obj, jstring jname, jboolean jvalue)\n+  (JNIEnv *env, jobject obj, jstring jname, jboolean value)\n {\n   const char *name;\n-  gboolean value;\n   void *ptr;\n \n   ptr = NSA_GET_PTR (env, obj);\n \n   name = (*env)->GetStringUTFChars (env, jname, NULL);\n-  /* Apparently a jboolean can have a value greater than 1.  gboolean\n-     variables may only contain the value TRUE or FALSE. */\n-  value = jvalue ? TRUE : FALSE;\n \n   gdk_threads_enter();\n   g_object_set(ptr, name, value, NULL);"}, {"sha": "481fadf9d7365b6ef448d9e3d7deaf582c7540d1", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkEvents.c", "status": "modified", "additions": 30, "deletions": 21, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkEvents.c?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -981,31 +981,40 @@ awt_event_handler (GdkEvent *event)\n \t    if (widget && GTK_WIDGET_TOPLEVEL (widget))\n \t      {\n \t\tgint top, left, right, bottom;\n-\t\tgint x, y, w, h, wb, d;\n+\t\tgint x, y, w, h, d;\n+\t\tGdkRectangle r;\n \n-\t\t/* calculate our insets */\n-\t\tgdk_window_get_root_geometry (event->any.window, \n-\t\t\t\t\t      &x, &y, &w, &h, &wb, &d);\n+\t\t/* Configure events are not posted to the AWT event\n+\t\t   queue, and as such, the gdk/gtk peer functions will\n+\t\t   be called back before postConfigureEvent\n+\t\t   returns. */\n+\t\tgdk_threads_leave ();\n \n-\t\t/* We used to compute these based on the configure\n-\t\t   event's fields.  However, that gives strange and\n-\t\t   apparently incorrect results.  */\n-\t\ttop = left = bottom = right = 0;\n+\t\t/* Calculate our insets. */\n \n-\t\t/* configure events are not posted to the AWT event queue,\n-\t\t   and as such, gdk/gtk will be called back before\n-\t\t   postConfigureEvent returns */\n-\t\tgdk_threads_leave ();\n-\t\t(*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr, \n+\t\t/* When called from within the gdk_threads critical\n+\t\t   section these functions seem to return strange\n+\t\t   results, so we call them after\n+\t\t   gdk_threads_leave. */\n+\t\tgdk_window_get_geometry (event->any.window,\n+\t\t\t\t\t &x, &y, &w, &h, &d);\n+\t\tgdk_window_get_frame_extents (event->any.window, &r);\n+\n+\t\ttop = y;\n+\t\tleft = x;\n+\t\tbottom = r.height - h - y;\n+\t\tright = r.width - w - x;\n+\n+\t\t(*gdk_env)->CallVoidMethod (gdk_env, *obj_ptr,\n \t\t\t\t\t    postConfigureEventID,\n-\t\t\t\t\t    (jint)event->configure.x,\n-\t\t\t\t\t    (jint)event->configure.y,\n-\t\t\t\t\t    (jint)event->configure.width,\n-\t\t\t\t\t    (jint)event->configure.height,\n-\t\t\t\t\t    (jint)top,\n-\t\t\t\t\t    (jint)left,\n-\t\t\t\t\t    (jint)bottom,\n-\t\t\t\t\t    (jint)right);\n+\t\t\t\t\t    (jint) event->configure.x,\n+\t\t\t\t\t    (jint) event->configure.y,\n+\t\t\t\t\t    (jint) event->configure.width,\n+\t\t\t\t\t    (jint) event->configure.height,\n+\t\t\t\t\t    (jint) top,\n+\t\t\t\t\t    (jint) left,\n+\t\t\t\t\t    (jint) bottom,\n+\t\t\t\t\t    (jint) right);\n \t\tgdk_threads_enter ();\n \t      }\n \t  }"}, {"sha": "03566f228e4bca01644b7989ae9e5d80484e76f9", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkMainThread.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkMainThread.c?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -44,6 +44,8 @@ exception statement from your version. */\n   struct state_table *native_state_table;\n #endif\n \n+jmethodID setBoundsCallbackID;\n+\n jmethodID postActionEventID;\n jmethodID postMenuActionEventID;\n jmethodID postMouseEventID;\n@@ -74,7 +76,7 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n   char *homedir, *rcpath = NULL;\n /*    jclass gtkgenericpeer; */\n   jclass gtkcomponentpeer, gtkwindowpeer, gtkscrollbarpeer, gtklistpeer,\n-    gtkmenuitempeer, gtktextcomponentpeer;\n+    gtkmenuitempeer, gtktextcomponentpeer, window;\n \n   NSA_INIT (env, clazz);\n \n@@ -127,6 +129,9 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n   /* setup cached IDs for posting GTK events to Java */\n /*    gtkgenericpeer = (*env)->FindClass (env,  */\n /*  \t\t\t\t      \"gnu/java/awt/peer/gtk/GtkGenericPeer\"); */\n+\n+  window = (*env)->FindClass (env, \"java/awt/Window\");\n+\n   gtkcomponentpeer = (*env)->FindClass (env,\n \t\t\t\t     \"gnu/java/awt/peer/gtk/GtkComponentPeer\");\n   gtkwindowpeer = (*env)->FindClass (env,\n@@ -145,6 +150,10 @@ Java_gnu_java_awt_peer_gtk_GtkMainThread_gtkInit (JNIEnv *env, jclass clazz)\n /*  \t\t\t\t\t   \"postActionEvent\",  */\n /*  \t\t\t\t\t   \"(Ljava/lang/String;I)V\"); */\n \n+  setBoundsCallbackID = (*env)->GetMethodID (env, window,\n+\t\t\t\t\t     \"setBoundsCallback\",\n+\t\t\t\t\t     \"(IIII)V\");\n+\n   postMenuActionEventID = (*env)->GetMethodID (env, gtkmenuitempeer,\n \t\t\t\t\t       \"postMenuActionEvent\",\n \t\t\t\t\t       \"()V\");"}, {"sha": "692c50ecc180d2bb0703d105b0869b36fb167a30", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkWindowPeer.c", "status": "modified", "additions": 52, "deletions": 15, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkWindowPeer.c?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -43,20 +43,24 @@ exception statement from your version. */\n #include <gdk/gdkx.h>\n \n /*\n- * Make a new window (any type)\n+ * Make a new window.\n  */\n \n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create \n-  (JNIEnv *env, jobject obj, jint type, jint width, jint height)\n+  (JNIEnv *env, jobject obj, jint type, jboolean decorated,\n+   jint width, jint height, jobject parent)\n {\n-  GtkWidget *window;\n+  GtkWidget *window_widget;\n+  GtkWindow *window;\n+  void *window_parent;\n   GtkWidget *vbox, *layout;\n \n   gdk_threads_enter ();\n-  window = gtk_window_new (type);\n+  window_widget = gtk_window_new (GTK_WINDOW_TOPLEVEL);\n+  window = GTK_WINDOW (window_widget);\n \n-  gtk_window_set_default_size (GTK_WINDOW(window), width, height);\n+  gtk_window_set_default_size (window, width, height);\n \n   /* We must set this window's size requisition.  Otherwise when a\n      resize is queued (when gtk_widget_queue_resize is called) the\n@@ -65,17 +69,28 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_create\n      when their resizable property changes. */\n   gtk_widget_set_size_request (window, width, height);\n \n+  /* Keep this window in front of its parent, if it has one. */\n+  if (parent)\n+    {\n+      window_parent = NSA_GET_PTR (env, parent);\n+      gtk_window_set_transient_for (window, GTK_WINDOW(window_parent));\n+    }\n+\n+  gtk_window_set_decorated (window, decorated);\n+\n+  gtk_window_set_type_hint (window, type);\n+\n   vbox = gtk_vbox_new (0, 0);\n   layout = gtk_layout_new (NULL, NULL);\n   gtk_box_pack_end (GTK_BOX (vbox), layout, 1, 1, 0);\n-  gtk_container_add (GTK_CONTAINER (window), vbox);\n+  gtk_container_add (GTK_CONTAINER (window_widget), vbox);\n \n   gtk_widget_show (layout);\n   gtk_widget_show (vbox);\n \n   gdk_threads_leave ();\n \n-  NSA_SET_PTR (env, obj, window);\n+  NSA_SET_PTR (env, obj, window_widget);\n }\n \n JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setVisible\n@@ -218,20 +233,42 @@ Java_gnu_java_awt_peer_gtk_GtkWindowPeer_toFront (JNIEnv *env,\n   gdk_threads_leave ();\n }\n \n-JNIEXPORT void JNICALL Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setBounds\n-  (JNIEnv *env, jobject obj, jint x, jint y, jint width, jint height)\n+JNIEXPORT void JNICALL\n+Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setBoundsCallback\n+  (JNIEnv *env, jobject obj, jobject window,\n+   jint x, jint y, jint width, jint height)\n {\n-  void *ptr;\n-  GtkWidget *widget;\n+  /* Circumvent package-private access to call Window's\n+     setBoundsCallback method. */\n+  (*gdk_env)->CallVoidMethod (gdk_env, window, setBoundsCallbackID,\n+\t\t\t      x, y, width, height);\n+}\n \n-  ptr = NSA_GET_PTR (env, obj);\n+JNIEXPORT void JNICALL\n+Java_gnu_java_awt_peer_gtk_GtkWindowPeer_setSize\n+  (JNIEnv *env, jobject obj, jint width, jint height)\n+{\n+  void *ptr = NSA_GET_PTR (env, obj);\n \n   gdk_threads_enter ();\n+  gtk_widget_set_size_request (GTK_WIDGET(ptr), width, height);\n+  gdk_threads_leave ();\n+}\n \n-  widget = GTK_WIDGET (ptr);\n-  gtk_widget_set_size_request (widget, width, height);\n-  gtk_window_resize (GTK_WINDOW(widget), width, height);\n+JNIEXPORT void JNICALL\n+Java_gnu_java_awt_peer_gtk_GtkWindowPeer_nativeSetBounds\n+  (JNIEnv *env, jobject obj, jint x, jint y, jint width, jint height)\n+{\n+  void *ptr = NSA_GET_PTR (env, obj);\n \n+  gdk_threads_enter ();\n+  gtk_window_move (GTK_WINDOW(ptr), x, y);\n+  /* Need to change the widget's request size. */\n+  gtk_widget_set_size_request (GTK_WIDGET(ptr), width, height);\n+  /* Also need to call gtk_window_resize.  If the resize is requested\n+     by the program and the window's \"resizable\" property is true then\n+     the size request will not be honoured. */\n+  gtk_window_resize (GTK_WINDOW (ptr), width, height);\n   gdk_threads_leave ();\n }\n "}, {"sha": "8f3895362272e6c75c13eb868d08b2e417f69a5a", "filename": "libjava/jni/gtk-peer/gtkpeer.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b59b5081384b68e33c1a50ef4d047f95e171c05d/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgtkpeer.h?ref=b59b5081384b68e33c1a50ef4d047f95e171c05d", "patch": "@@ -343,6 +343,8 @@ struct graphics\n #define AWT_FOCUS_LOST 1004\n #define AWT_FOCUS_GAINED 1005\n \n+extern jmethodID setBoundsCallbackID;\n+\n extern jmethodID postActionEventID;\n extern jmethodID postMenuActionEventID;\n extern jmethodID postMouseEventID;"}]}