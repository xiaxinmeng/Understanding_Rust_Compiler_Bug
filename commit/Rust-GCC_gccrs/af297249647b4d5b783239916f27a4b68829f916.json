{"sha": "af297249647b4d5b783239916f27a4b68829f916", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYyOTcyNDk2NDdiNGQ1Yjc4MzIzOTkxNmYyN2E0YjY4ODI5ZjkxNg==", "commit": {"author": {"name": "Olga Makhotina", "email": "olga.makhotina@intel.com", "date": "2017-10-17T07:12:45Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2017-10-17T07:12:45Z"}, "message": "Add missing REDUCE[SD,SS] intrinsics\n\ngcc/\n\t* config/i386/avx512dqintrin.h (_mm_mask_reduce_sd,\n\t_mm_maskz_reduce_sd, _mm_mask_reduce_ss,=20\n\t_mm_maskz_reduce_ss): New.\n\t* config/i386/i386-builtin.def (__builtin_ia32_reducesd_mask,\n\t__builtin_ia32_reducess_mask): Ditto..\n\t(__builtin_ia32_reducesd, __builtin_ia32_reducess): Remove.\n\t* config/i386/sse.md (reduces<mode>): Renamed to ...\n\t(reduces<mode><mask_scalar_name>): ... this.\n\t(vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}): Changed\n\tto ...\n\t(vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0<mask_scalar_operand4>|\n\t%0<mask_scalar_operand4>, %1, %2, %3}): ... this.\n\ngcc/testsuite/\n\t* gcc.target/i386/avx512dq-vreducesd-1.c (_mm_mask_reduce_sd,\n\t_mm_maskz_reduce_sd): Test new intrinsics.\n\t* gcc.target/i386/avx512dq-vreducesd-2.c: New.\n\t* gcc.target/i386/avx512dq-vreducess-1.c (_mm_mask_reduce_ss,\n\t_mm_maskz_reduce_ss): Test new intrinsics.\n\t* gcc.target/i386/avx512dq-vreducess-2.c: New.\n\t* gcc.target/i386/avx-1.c (__builtin_ia32_reducesd,\n\t__builtin_ia32_reducess): Remove builtin.\n\t(__builtin_ia32_reducesd_mask,\n\t__builtin_ia32_reducess_mask): Test new builtin.\n\t* gcc.target/i386/sse-13.c: Ditto.\n\t* gcc.target/i386/sse-23.c: Ditto.\n\nFrom-SVN: r253803", "tree": {"sha": "e7a8e456bd0708bb84cf89fe8c5b577f1e09f627", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7a8e456bd0708bb84cf89fe8c5b577f1e09f627"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af297249647b4d5b783239916f27a4b68829f916", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af297249647b4d5b783239916f27a4b68829f916", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af297249647b4d5b783239916f27a4b68829f916", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af297249647b4d5b783239916f27a4b68829f916/comments", "author": {"login": "Djilka", "id": 6038217, "node_id": "MDQ6VXNlcjYwMzgyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/6038217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Djilka", "html_url": "https://github.com/Djilka", "followers_url": "https://api.github.com/users/Djilka/followers", "following_url": "https://api.github.com/users/Djilka/following{/other_user}", "gists_url": "https://api.github.com/users/Djilka/gists{/gist_id}", "starred_url": "https://api.github.com/users/Djilka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Djilka/subscriptions", "organizations_url": "https://api.github.com/users/Djilka/orgs", "repos_url": "https://api.github.com/users/Djilka/repos", "events_url": "https://api.github.com/users/Djilka/events{/privacy}", "received_events_url": "https://api.github.com/users/Djilka/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7f168a7ffc18cfe593928543d6cf3ea5e674fc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7f168a7ffc18cfe593928543d6cf3ea5e674fc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7f168a7ffc18cfe593928543d6cf3ea5e674fc9"}], "stats": {"total": 294, "additions": 274, "deletions": 20}, "files": [{"sha": "33596467c4a6e3b0916015b6abe4c06b9cb07941", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -1,3 +1,18 @@\n+17-10-2017  Olga Makhotina  <olga.makhotina@intel.com>\n+\n+\t* config/i386/avx512dqintrin.h (_mm_mask_reduce_sd,\n+\t_mm_maskz_reduce_sd, _mm_mask_reduce_ss,=20\n+\t_mm_maskz_reduce_ss): New.\n+\t* config/i386/i386-builtin.def (__builtin_ia32_reducesd_mask,\n+\t__builtin_ia32_reducess_mask): Ditto..\n+\t(__builtin_ia32_reducesd, __builtin_ia32_reducess): Remove.\n+\t* config/i386/sse.md (reduces<mode>): Renamed to ...\n+\t(reduces<mode><mask_scalar_name>): ... this.\n+\t(vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}): Changed\n+\tto ...\n+\t(vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0<mask_scalar_operand4>|\n+\t%0<mask_scalar_operand4>, %1, %2, %3}): ... this.\n+\n 2017-10-16  David Malcolm  <dmalcolm@redhat.com>\n \n \t* Makefile.in (OBJS): Add unique-ptr-tests.o."}, {"sha": "8e887d8c5ba8235f93c973e5a6183fabc1699a17", "filename": "gcc/config/i386/avx512dqintrin.h", "status": "modified", "additions": 77, "deletions": 8, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Favx512dqintrin.h?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -1160,16 +1160,63 @@ extern __inline __m128d\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_reduce_sd (__m128d __A, __m128d __B, int __C)\n {\n-  return (__m128d) __builtin_ia32_reducesd ((__v2df) __A,\n-\t\t\t\t\t\t (__v2df) __B, __C);\n+  return (__m128d) __builtin_ia32_reducesd_mask ((__v2df) __A,\n+\t\t\t\t\t\t (__v2df) __B, __C,\n+\t\t\t\t\t\t (__v2df) _mm_setzero_pd (),\n+\t\t\t\t\t\t (__mmask8) -1);\n+}\n+\n+extern __inline __m128d\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_mask_reduce_sd (__m128d __W,  __mmask8 __U, __m128d __A,\n+\t\t    __m128d __B, int __C)\n+{\n+  return (__m128d) __builtin_ia32_reducesd_mask ((__v2df) __A,\n+\t\t\t\t\t\t (__v2df) __B, __C,\n+\t\t\t\t\t\t (__v2df) __W,\n+\t\t\t\t\t\t (__mmask8) __U);\n+}\n+\n+extern __inline __m128d\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_maskz_reduce_sd (__mmask8 __U, __m128d __A, __m128d __B, int __C)\n+{\n+  return (__m128d) __builtin_ia32_reducesd_mask ((__v2df) __A,\n+\t\t\t\t\t\t (__v2df) __B, __C,\n+\t\t\t\t\t\t (__v2df) _mm_setzero_pd (),\n+\t\t\t\t\t\t (__mmask8) __U);\n }\n \n extern __inline __m128\n __attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n _mm_reduce_ss (__m128 __A, __m128 __B, int __C)\n {\n-  return (__m128) __builtin_ia32_reducess ((__v4sf) __A,\n-\t\t\t\t\t\t(__v4sf) __B, __C);\n+  return (__m128) __builtin_ia32_reducess_mask ((__v4sf) __A,\n+\t\t\t\t\t\t(__v4sf) __B, __C,\n+\t\t\t\t\t\t(__v4sf) _mm_setzero_ps (),\n+\t\t\t\t\t\t(__mmask8) -1);\n+}\n+\n+\n+extern __inline __m128\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_mask_reduce_ss (__m128 __W,  __mmask8 __U, __m128 __A,\n+\t\t    __m128 __B, int __C)\n+{\n+  return (__m128) __builtin_ia32_reducess_mask ((__v4sf) __A,\n+\t\t\t\t\t\t(__v4sf) __B, __C,\n+\t\t\t\t\t\t(__v4sf) __W,\n+\t\t\t\t\t\t(__mmask8) __U);\n+}\n+\n+extern __inline __m128\n+__attribute__ ((__gnu_inline__, __always_inline__, __artificial__))\n+_mm_maskz_reduce_ss (__mmask8 __U, __m128 __A, __m128 __B, int __C)\n+{\n+  return (__m128) __builtin_ia32_reducess_mask ((__v4sf) __A,\n+\t\t\t\t\t\t(__v4sf) __B, __C,\n+\t\t\t\t\t\t(__v4sf) _mm_setzero_ps (),\n+\t\t\t\t\t\t(__mmask8) __U);\n }\n \n extern __inline __m128d\n@@ -2449,12 +2496,34 @@ _mm512_fpclass_ps_mask (__m512 __A, const int __imm)\n \t\t\t\t\t\t (int) (c),(__mmask8)-1))\n \n #define _mm_reduce_sd(A, B, C)\t\t\t\t\t\t\\\n-  ((__m128d) __builtin_ia32_reducesd ((__v2df)(__m128d)(A),\t\\\n-    (__v2df)(__m128d)(B), (int)(C)))\t\t\t\t\t\\\n+  ((__m128d) __builtin_ia32_reducesd_mask ((__v2df)(__m128d)(A),\t\\\n+    (__v2df)(__m128d)(B), (int)(C), (__v2df) _mm_setzero_pd (),\t\t\\\n+    (__mmask8)-1))\n+\n+#define _mm_mask_reduce_sd(W, U, A, B, C)\t\t\t\t\\\n+  ((__m128d) __builtin_ia32_reducesd_mask ((__v2df)(__m128d)(A),\t\\\n+    (__v2df)(__m128d)(B), (int)(C), (__v2df)(__m128d)(W), (__mmask8)(U)))\n+\n+#define _mm_maskz_reduce_sd(U, A, B, C)\t\t\t\t\t\\\n+  ((__m128d) __builtin_ia32_reducesd_mask ((__v2df)(__m128d)(A),\t\\\n+    (__v2df)(__m128d)(B), (int)(C), (__v2df) _mm_setzero_pd (),\t\t\\\n+    (__mmask8)(U)))\n \n #define _mm_reduce_ss(A, B, C)\t\t\t\t\t\t\\\n-  ((__m128) __builtin_ia32_reducess ((__v4sf)(__m128)(A),\t\t\\\n-    (__v4sf)(__m128)(A), (int)(C)))\t\t\t\t\t\\\n+  ((__m128) __builtin_ia32_reducess_mask ((__v4sf)(__m128)(A),\t\t\\\n+    (__v4sf)(__m128)(B), (int)(C), (__v4sf) _mm_setzero_ps (),\t\t\\\n+    (__mmask8)-1))\n+\n+#define _mm_mask_reduce_ss(W, U, A, B, C)\t\t\t\t\\\n+  ((__m128) __builtin_ia32_reducess_mask ((__v4sf)(__m128)(A),\t\t\\\n+    (__v4sf)(__m128)(B), (int)(C), (__v4sf)(__m128)(W), (__mmask8)(U)))\n+\n+#define _mm_maskz_reduce_ss(U, A, B, C)\t\t\t\t\t\\\n+  ((__m128) __builtin_ia32_reducess_mask ((__v4sf)(__m128)(A),\t\t\\\n+    (__v4sf)(__m128)(B), (int)(C), (__v4sf) _mm_setzero_ps (),\t\t\\\n+    (__mmask8)(U)))\n+\n+\n \n #endif\n "}, {"sha": "4666a4e63001da2391f0ec7e4a3e4af3b7581a05", "filename": "gcc/config/i386/i386-builtin.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Fconfig%2Fi386%2Fi386-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-builtin.def?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -1666,8 +1666,8 @@ BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_reducepv4df\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_reducepv2df_mask, \"__builtin_ia32_reducepd128_mask\", IX86_BUILTIN_REDUCEPD128_MASK, UNKNOWN, (int) V2DF_FTYPE_V2DF_INT_V2DF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_reducepv8sf_mask, \"__builtin_ia32_reduceps256_mask\", IX86_BUILTIN_REDUCEPS256_MASK, UNKNOWN, (int) V8SF_FTYPE_V8SF_INT_V8SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512DQ | OPTION_MASK_ISA_AVX512VL, CODE_FOR_reducepv4sf_mask, \"__builtin_ia32_reduceps128_mask\", IX86_BUILTIN_REDUCEPS128_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_INT_V4SF_UQI)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_reducesv2df, \"__builtin_ia32_reducesd\", IX86_BUILTIN_REDUCESD_MASK, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_INT)\n-BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_reducesv4sf, \"__builtin_ia32_reducess\", IX86_BUILTIN_REDUCESS_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_INT)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_reducesv2df_mask, \"__builtin_ia32_reducesd_mask\", IX86_BUILTIN_REDUCESD128_MASK, UNKNOWN, (int) V2DF_FTYPE_V2DF_V2DF_INT_V2DF_UQI)\n+BDESC (OPTION_MASK_ISA_AVX512DQ, CODE_FOR_reducesv4sf_mask, \"__builtin_ia32_reducess_mask\", IX86_BUILTIN_REDUCESS128_MASK, UNKNOWN, (int) V4SF_FTYPE_V4SF_V4SF_INT_V4SF_UQI)\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_permvarv16hi_mask, \"__builtin_ia32_permvarhi256_mask\", IX86_BUILTIN_VPERMVARHI256_MASK, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_UHI)\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_permvarv8hi_mask, \"__builtin_ia32_permvarhi128_mask\", IX86_BUILTIN_VPERMVARHI128_MASK, UNKNOWN, (int) V8HI_FTYPE_V8HI_V8HI_V8HI_UQI)\n BDESC (OPTION_MASK_ISA_AVX512BW | OPTION_MASK_ISA_AVX512VL, CODE_FOR_avx512vl_vpermt2varv16hi3_mask, \"__builtin_ia32_vpermt2varhi256_mask\", IX86_BUILTIN_VPERMT2VARHI256, UNKNOWN, (int) V16HI_FTYPE_V16HI_V16HI_V16HI_UHI)"}, {"sha": "19b2c6951cbd5da3d0ecaa4cca4c6bd50a049d23", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -2522,7 +2522,7 @@\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"reduces<mode>\"\n+(define_insn \"reduces<mode><mask_scalar_name>\"\n   [(set (match_operand:VF_128 0 \"register_operand\" \"=v\")\n \t(vec_merge:VF_128\n \t  (unspec:VF_128\n@@ -2533,7 +2533,7 @@\n \t  (match_dup 1)\n \t  (const_int 1)))]\n   \"TARGET_AVX512DQ\"\n-  \"vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  \"vreduce<ssescalarmodesuffix>\\t{%3, %2, %1, %0<mask_scalar_operand4>|%0<mask_scalar_operand4>, %1, %2, %3}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<MODE>\")])"}, {"sha": "3059d23773d614994beb21e0885af906c80e8cb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -1,3 +1,18 @@\n+17-10-2017  Olga Makhotina  <olga.makhotina@intel.com>\n+\n+\t* gcc.target/i386/avx512dq-vreducesd-1.c (_mm_mask_reduce_sd,\n+\t_mm_maskz_reduce_sd): Test new intrinsics.\n+\t* gcc.target/i386/avx512dq-vreducesd-2.c: New.\n+\t* gcc.target/i386/avx512dq-vreducess-1.c (_mm_mask_reduce_ss,\n+\t_mm_maskz_reduce_ss): Test new intrinsics.\n+\t* gcc.target/i386/avx512dq-vreducess-2.c: New.\n+\t* gcc.target/i386/avx-1.c (__builtin_ia32_reducesd,\n+\t__builtin_ia32_reducess): Remove builtin.\n+\t(__builtin_ia32_reducesd_mask,\n+\t__builtin_ia32_reducess_mask): Test new builtin.\n+\t* gcc.target/i386/sse-13.c: Ditto.\n+\t* gcc.target/i386/sse-23.c: Ditto.\n+\n 2017-10-16  Martin Liska  <mliska@suse.cz>\n \n \t* c-c++-common/ubsan/attrib-5.c (float_cast2): Fix warning scan"}, {"sha": "d03625b55851a4438c8e209ae064560af8e3454a", "filename": "gcc/testsuite/gcc.target/i386/avx-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-1.c?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -412,8 +412,8 @@\n /* avx512dqintrin.h */\n #define __builtin_ia32_kshiftliqi(A, B) __builtin_ia32_kshiftliqi(A, 8)\n #define __builtin_ia32_kshiftriqi(A, B) __builtin_ia32_kshiftriqi(A, 8)\n-#define __builtin_ia32_reducess(A, B, F) __builtin_ia32_reducess(A, B, 1)\n-#define __builtin_ia32_reducesd(A, B, F) __builtin_ia32_reducesd(A, B, 1)\n+#define __builtin_ia32_reducess_mask(A, B, F, W, U) __builtin_ia32_reducess_mask(A, B, 1, W, U)\n+#define __builtin_ia32_reducesd_mask(A, B, F, W, U) __builtin_ia32_reducesd_mask(A, B, 1, W, U)\n #define __builtin_ia32_reduceps512_mask(A, E, C, D) __builtin_ia32_reduceps512_mask(A, 1, C, D)\n #define __builtin_ia32_reducepd512_mask(A, E, C, D) __builtin_ia32_reducepd512_mask(A, 1, C, D)\n #define __builtin_ia32_rangess128_round(A, B, I, F) __builtin_ia32_rangess128_round(A, B, 1, 8)"}, {"sha": "b8f24a0ccbd9889045a23bd46f608ee3bf2c34f1", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vreducesd-1.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducesd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducesd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducesd-1.c?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -2,13 +2,24 @@\n /* { dg-options \"-mavx512dq -O2\" } */\n /* { dg-final { scan-assembler-times \"vreducesd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n+/* { dg-final { scan-assembler-times \"vreducesd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vreducesd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vreducesd\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n+\n #include <immintrin.h>\n \n+#define IMM 123\n+\n volatile __m128d x1, x2;\n volatile __mmask8 m;\n \n void extern\n avx512dq_test (void)\n {\n-  x1 = _mm_reduce_sd (x1, x2, 123);\n+  x1 = _mm_reduce_sd (x1, x2, IMM);\n+\n+  x1 = _mm_mask_reduce_sd(x1, m, x1, x2, IMM);\n+\n+  x1 = _mm_maskz_reduce_sd(m, x1, x2, IMM);\n }"}, {"sha": "93e18271cbd568d84942a0c4eb2226911f0ad39a", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vreducesd-2.c", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducesd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducesd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducesd-2.c?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -0,0 +1,66 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+/* { dg-require-effective-target avx512dq } */\n+\n+#define AVX512DQ\n+#include \"avx512f-helper.h\"\n+#include <string.h>\n+\n+#define SIZE (AVX512F_LEN / 64)\n+#include \"avx512f-mask-type.h\"\n+\n+#define IMM 0x23\n+\n+void\n+CALC (double *r, double *s)\n+{\n+  int i;\n+\n+  memcpy (&r[1], &s[1], sizeof(double));\n+\n+  for (i = 0; i < 1; i++)\n+    {\n+      double tmp = (int) (4 * s[i]) / 4.0;\n+      r[i] = s[i] - tmp;\n+    }\n+}\n+\n+void\n+TEST (void)\n+{\n+  union128d res1, res2, res3;\n+  union128d s1, s2, src;\n+  double res_ref[2];\n+  MASK_TYPE mask = MASK_VALUE;\n+  int j;\n+\n+  for (j = 0; j < 2; j++)\n+    {\n+      s1.a[j] = j / 123.456;\n+      s2.a[j] = j / 123.456;\n+      res_ref[j] = j / 123.456;\n+      res1.a[j] = DEFAULT_VALUE;\n+      res2.a[j] = DEFAULT_VALUE;\n+      res3.a[j] = DEFAULT_VALUE;\n+    }\n+\n+  res1.x = _mm_reduce_sd (s1.x, s2.x, IMM);\n+  res2.x = _mm_mask_reduce_sd (s1.x, mask, s1.x, s2.x, IMM);\n+  res3.x = _mm_maskz_reduce_sd (mask, s1.x, s2.x, IMM);\n+\n+  CALC (res_ref, s2.a);\n+\n+  if (check_union128d (res1, res_ref))\n+    abort ();\n+ \n+  MASK_MERGE (d) (res_ref, mask, 1);\n+\n+  if (check_union128d (res2, res_ref))\n+    abort ();\n+\n+  MASK_ZERO (d) (res_ref, mask, 1);\n+\n+  if (check_union128d (res3, res_ref))\n+    abort ();\n+\n+}"}, {"sha": "804074e2ba68976a0cada0ab83ec9e118b8055c4", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vreducess-1.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducess-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducess-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducess-1.c?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -2,13 +2,23 @@\n /* { dg-options \"-mavx512dq -O2\" } */\n /* { dg-final { scan-assembler-times \"vreducess\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n \n+/* { dg-final { scan-assembler-times \"vreducess\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vreducess\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vreducess\\[ \\\\t\\]+\\[^\\{\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\{%k\\[1-7\\]\\}\\{z\\}(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+\n #include <immintrin.h>\n \n+#define IMM 123\n+\n volatile __m128 x1, x2;\n volatile __mmask8 m;\n \n void extern\n avx512dq_test (void)\n {\n-  x1 = _mm_reduce_ss (x1, x2, 123);\n+  x1 = _mm_reduce_ss (x1, x2, IMM);\n+\n+  x1 = _mm_mask_reduce_ss (x1, m, x1, x2, IMM);\n+ \n+  x1 = _mm_maskz_reduce_ss (m, x1, x2, IMM);\n }"}, {"sha": "8558c3b3468a0aaaa78fd2ea7971d8afb1dfbfd9", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-vreducess-2.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducess-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducess-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-vreducess-2.c?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -0,0 +1,68 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -mavx512dq\" } */\n+/* { dg-require-effective-target avx512dq } */\n+\n+#define AVX512DQ\n+#include \"avx512f-helper.h\"\n+#include <string.h>\n+\n+#define SIZE (AVX512F_LEN / 64)\n+#include \"avx512f-mask-type.h\"\n+\n+#define IMM 0x23\n+\n+void\n+CALC (float *r, float *s)\n+{\n+  int i;\n+\n+  memcpy (&r[1], &s[1], 2 * sizeof(float));\n+\n+  for (i = 0; i < 2; i++)\n+    {\n+      float tmp = (int) (4 * s[i]) / 4.0;\n+      r[i] = s[i] - tmp;\n+    }\n+}\n+\n+void\n+TEST (void)\n+{\n+  printf(\"\\nsize = %d\\n\\n\", SIZE);\n+\n+  union128 res1, res2, res3;\n+  union128 s1, s2, src;\n+  float res_ref[4];\n+  MASK_TYPE mask = MASK_VALUE;\n+  int j;\n+\n+  for (j = 0; j < 4; j++)\n+    {\n+      s1.a[j] = j / 123.456;\n+      s2.a[j] = j / 123.456;\n+      res_ref[j] = j / 123.456;\n+      res1.a[j] = DEFAULT_VALUE;\n+      res2.a[j] = DEFAULT_VALUE;\n+      res3.a[j] = DEFAULT_VALUE;\n+    }\n+\n+  res1.x = _mm_reduce_ss (s1.x, s2.x, IMM);\n+  res2.x = _mm_mask_reduce_ss (s1.x, mask, s1.x, s2.x, IMM);\n+  res3.x = _mm_maskz_reduce_ss (mask, s1.x, s2.x, IMM);\n+\n+  CALC (res_ref, s2.a);\n+\n+  if (check_union128 (res1, res_ref))\n+    abort ();\n+ \n+  MASK_MERGE () (res_ref, mask, 1);\n+\n+  if (check_union128 (res2, res_ref))\n+    abort ();\n+\n+  MASK_ZERO () (res_ref, mask, 1);\n+\n+  if (check_union128 (res3, res_ref))\n+    abort ();\n+\n+}"}, {"sha": "7ab222359b7e0e16b6382121b5c862942c29c64f", "filename": "gcc/testsuite/gcc.target/i386/sse-13.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-13.c?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -429,8 +429,8 @@\n /* avx512dqintrin.h */\n #define __builtin_ia32_kshiftliqi(A, B) __builtin_ia32_kshiftliqi(A, 8)\n #define __builtin_ia32_kshiftriqi(A, B) __builtin_ia32_kshiftriqi(A, 8)\n-#define __builtin_ia32_reducess(A, B, F) __builtin_ia32_reducess(A, B, 1)\n-#define __builtin_ia32_reducesd(A, B, F) __builtin_ia32_reducesd(A, B, 1)\n+#define __builtin_ia32_reducess_mask(A, B, F, W, U) __builtin_ia32_reducess_mask(A, B, 1, W, U)\n+#define __builtin_ia32_reducesd_mask(A, B, F, W, U) __builtin_ia32_reducesd_mask(A, B, 1, W, U)\n #define __builtin_ia32_reduceps512_mask(A, E, C, D) __builtin_ia32_reduceps512_mask(A, 1, C, D)\n #define __builtin_ia32_reducepd512_mask(A, E, C, D) __builtin_ia32_reducepd512_mask(A, 1, C, D)\n #define __builtin_ia32_rangess128_round(A, B, I, F) __builtin_ia32_rangess128_round(A, B, 1, 8)"}, {"sha": "3a90e54291fec25a60aa1f180f6ce08466d7eae7", "filename": "gcc/testsuite/gcc.target/i386/sse-23.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af297249647b4d5b783239916f27a4b68829f916/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-23.c?ref=af297249647b4d5b783239916f27a4b68829f916", "patch": "@@ -428,8 +428,8 @@\n /* avx512dqintrin.h */\n #define __builtin_ia32_kshiftliqi(A, B) __builtin_ia32_kshiftliqi(A, 8)\n #define __builtin_ia32_kshiftriqi(A, B) __builtin_ia32_kshiftriqi(A, 8)\n-#define __builtin_ia32_reducess(A, B, F) __builtin_ia32_reducess(A, B, 1)\n-#define __builtin_ia32_reducesd(A, B, F) __builtin_ia32_reducesd(A, B, 1)\n+#define __builtin_ia32_reducess_mask(A, B, F, W, U) __builtin_ia32_reducess_mask(A, B, 1, W, U)\n+#define __builtin_ia32_reducesd_mask(A, B, F, W, U) __builtin_ia32_reducesd_mask(A, B, 1, W, U)\n #define __builtin_ia32_reduceps512_mask(A, E, C, D) __builtin_ia32_reduceps512_mask(A, 1, C, D)\n #define __builtin_ia32_reducepd512_mask(A, E, C, D) __builtin_ia32_reducepd512_mask(A, 1, C, D)\n #define __builtin_ia32_rangess128_round(A, B, I, F) __builtin_ia32_rangess128_round(A, B, 1, 8)"}]}