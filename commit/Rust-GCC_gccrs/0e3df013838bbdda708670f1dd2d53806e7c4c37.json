{"sha": "0e3df013838bbdda708670f1dd2d53806e7c4c37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUzZGYwMTM4MzhiYmRkYTcwODY3MGYxZGQyZDUzODA2ZTdjNGMzNw==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-05-09T22:33:09Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-05-09T22:33:09Z"}, "message": "Add some transitive closure\n\nFrom-SVN: r26850", "tree": {"sha": "8603463cc204a9f6c71beec7b3187fc890e892c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8603463cc204a9f6c71beec7b3187fc890e892c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e3df013838bbdda708670f1dd2d53806e7c4c37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3df013838bbdda708670f1dd2d53806e7c4c37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e3df013838bbdda708670f1dd2d53806e7c4c37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e3df013838bbdda708670f1dd2d53806e7c4c37/comments", "author": null, "committer": null, "parents": [{"sha": "26837cfb5be067b824ff23df644628fc035a132b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26837cfb5be067b824ff23df644628fc035a132b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26837cfb5be067b824ff23df644628fc035a132b"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "8e7cc8e666ed97c67e390ab45773cb141f27b8b7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3df013838bbdda708670f1dd2d53806e7c4c37/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3df013838bbdda708670f1dd2d53806e7c4c37/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e3df013838bbdda708670f1dd2d53806e7c4c37", "patch": "@@ -1,3 +1,8 @@\n+Mon May 10 01:28:10 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\tFrom Fri May 7  9:31:41 1999 Donn Terry (donn@interix.com):\n+\t* varasm.c (mark_constant_pool): Add some transitive closure.\n+\n Sun May  9 22:51:04 1999  Craig Burley  <craig@jcb-sc.com>\n \n \tFix gcc.dg/990506-0.c:"}, {"sha": "e4eef2d9b4951d66efd50c65e179ba6a1fa4bf20", "filename": "gcc/varasm.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e3df013838bbdda708670f1dd2d53806e7c4c37/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e3df013838bbdda708670f1dd2d53806e7c4c37/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0e3df013838bbdda708670f1dd2d53806e7c4c37", "patch": "@@ -3718,6 +3718,33 @@ mark_constant_pool ()\n        insn = XEXP (insn, 1))\n     if (GET_RTX_CLASS (GET_CODE (insn)) == 'i')\n       mark_constants (PATTERN (insn));\n+\n+  /* It's possible that the only reference to a symbol is in a symbol\n+     that's in the constant pool.  This happens in Fortran under some\n+     situations.  (When the constant contains the address of another\n+     constant, and only the first is used directly in an insn.) \n+     This is potentially suboptimal if there's ever a possibility of\n+     backwards (in pool order) 2'd level references.  However, it's\n+     not clear that 2'd level references can happen. */\n+  for (pool = first_pool; pool; pool = pool->next)\n+    {\n+      struct pool_sym *sym;\n+      char *label;\n+\n+      /* skip unmarked entries; no insn refers to them. */\n+      if (!pool->mark)\n+\t  continue;\n+\n+      label = XSTR (pool->constant, 0);\n+\n+      /* Be sure the symbol's value is marked. */\n+      for (sym = const_rtx_sym_hash_table[SYMHASH (label)]; sym; \n+           sym = sym->next)\n+\t  if (sym->label == label)\n+\t    sym->pool->mark = 1;\n+      /* If we didn't find it, there's something truly wrong here, but it\n+\t will be announced by the assembler. */\n+    }\n }\n \n static void"}]}