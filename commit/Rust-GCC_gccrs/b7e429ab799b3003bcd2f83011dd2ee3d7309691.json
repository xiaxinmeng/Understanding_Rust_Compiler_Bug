{"sha": "b7e429ab799b3003bcd2f83011dd2ee3d7309691", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjdlNDI5YWI3OTliMzAwM2JjZDJmODMwMTFkZDJlZTNkNzMwOTY5MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-01-23T10:30:04Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-01-23T10:30:04Z"}, "message": "[multiple changes]\n\n2004-01-23  Robert Dewar  <dewar@gnat.com>\n\n\t* exp_aggr.adb: Minor reformatting\n\n\t* exp_ch9.adb: Minor code clean up\n\tMinor reformatting\n\tFix bad character in comment\n\n\t* targparm.adb (Get_Target_Parameters): Give clean abort error on\n\tunexpected end of file, along with more detailed message.\n\n2004-01-23  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* exp_pakd.adb (Install_PAT): Clear Freeze_Node for PAT and Etype of\n\tPAT.\n\n\t* decl.c (copy_alias_set): New function.\n\t(gnat_to_gnu_entity, make_aligning_type, make_packable_type): Use it.\n\n2004-01-23  Doug Rupp  <rupp@gnat.com>\n\n\t* Makefile.in (install-gnatlib): Change occurrences of lib$$file to\n\tlib$${file} in case subsequent character is not a separator.\n\n2004-01-23  Vincent Celier  <celier@gnat.com>\n\n\t* 5vml-tgt.adb (Build_Dynamic_Library): Invoke gcc with -shared-libgcc\n\twhen the GCC version is at least 3.\n\n\t* make.adb: (Scan_Make_Arg): Pass -B to Scan_Make_Switches\n\tRemove all \"Opt.\", to prepare for opt split\n\n\t* prj-part.adb (Parse_Single_Project): New Boolean out parameter\n\tExtends_All. Set to True when the project parsed is an extending all\n\tproject. Fails for importing an extending all project only when the\n\timported project is an extending all project.\n\t(Post_Parse_Context_Clause): Set Is_Extending_All to the with clause,\n\tdepending on the value of Extends_All returned.\n\n\t* prj-proc.adb (Process): Check that no project shares its object\n\tdirectory with a project that extends it, directly or indirectly,\n\tincluding a virtual project.\n\tCheck that no project extended by another project shares its object\n\tdirectory with another also extended project.\n\n\t* prj-tree.adb (Is_Extending_All, Set_Is_Extending_All): Allow for\n\tKind = N_With_Clause\n\n\t* prj-tree.ads: Minor reformatting\n\tIndicate that Flag2 also applies to N_With_Clause (Is_Extending_All).\n\n2004-01-23  Ed Schonberg  <schonberg@gnat.com>\n\n\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): If the attribute\n\tapplies to a type with an incomplete view, use full view in Name of\n\tclause, for consistency with uses of Get_Attribute_Definition_Clause.\n\n2004-01-23  Arnaud Charlet  <charlet@act-europe.fr>\n\n\t* 5itaprop.adb (Set_Priority): Reset the priority to 0 when using\n\tSCHED_RR, since other values are not supported by this policy.\n\t(Initialize): Move initialization of mutex attribute to package\n\telaboration, to prevent early access to this variable.\n\n\t* Makefile.in: Remove mention of Makefile.adalib, unused.\n\n\t* Makefile.adalib: Removed, unused.\n\nFrom-SVN: r76403", "tree": {"sha": "340e9db670c45f7e10eeb8d937a4635e112b782a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/340e9db670c45f7e10eeb8d937a4635e112b782a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b7e429ab799b3003bcd2f83011dd2ee3d7309691", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e429ab799b3003bcd2f83011dd2ee3d7309691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e429ab799b3003bcd2f83011dd2ee3d7309691", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e429ab799b3003bcd2f83011dd2ee3d7309691/comments", "author": null, "committer": null, "parents": [{"sha": "908f6e7c991ed97990fa97ed8ad953b88b70008e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/908f6e7c991ed97990fa97ed8ad953b88b70008e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/908f6e7c991ed97990fa97ed8ad953b88b70008e"}], "stats": {"total": 679, "additions": 388, "deletions": 291}, "files": [{"sha": "b967c18a95048e9ba6075fc1edf99ddf811f84b3", "filename": "gcc/ada/5itaprop.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2F5itaprop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2F5itaprop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5itaprop.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                  B o d y                                 --\n --                                                                          --\n---         Copyright (C) 1992-2003, Free Software Foundation, Inc.          --\n+--         Copyright (C) 1992-2004, Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -712,6 +712,7 @@ package body System.Task_Primitives.Operations is\n            (T.Common.LL.Thread, SCHED_FIFO, Param'Access);\n \n       else\n+         Param.sched_priority := 0;\n          Result := pthread_setschedparam\n            (T.Common.LL.Thread, SCHED_OTHER, Param'Access);\n       end if;\n@@ -1038,12 +1039,6 @@ package body System.Task_Primitives.Operations is\n    begin\n       Environment_Task_ID := Environment_Task;\n \n-      Result := pthread_mutexattr_init (Mutex_Attr'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n-      Result := pthread_condattr_init (Cond_Attr'Access);\n-      pragma Assert (Result = 0 or else Result = ENOMEM);\n-\n       Initialize_Lock (Single_RTS_Lock'Access, RTS_Lock_Level);\n \n       --  Initialize the global RTS lock\n@@ -1096,5 +1091,11 @@ begin\n             pragma Assert (Result = 0);\n          end if;\n       end loop;\n+\n+      Result := pthread_mutexattr_init (Mutex_Attr'Access);\n+      pragma Assert (Result = 0);\n+\n+      Result := pthread_condattr_init (Cond_Attr'Access);\n+      pragma Assert (Result = 0);\n    end;\n end System.Task_Primitives.Operations;"}, {"sha": "835443723f953d3c1aa473aac49bb451c5f650a7", "filename": "gcc/ada/5vml-tgt.adb", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2F5vml-tgt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2F5vml-tgt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2F5vml-tgt.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -69,6 +69,14 @@ package body MLib.Tgt is\n \n    Success : Boolean := False;\n \n+   Shared_Libgcc : aliased String := \"-shared-libgcc\";\n+\n+   No_Shared_Libgcc_Switch : aliased Argument_List := (1 .. 0 => null);\n+   Shared_Libgcc_Switch    : aliased Argument_List :=\n+                               (1 => Shared_Libgcc'Access);\n+   Link_With_Shared_Libgcc : Argument_List_Access :=\n+                               No_Shared_Libgcc_Switch'Access;\n+\n    ------------------------------\n    -- Target dependent section --\n    ------------------------------\n@@ -242,6 +250,14 @@ package body MLib.Tgt is\n    --  Start of processing for Build_Dynamic_Library\n \n    begin\n+      --  Invoke gcc with -shared-libgcc, but only for GCC 3 or higher\n+\n+      if GCC_Version >= 3 then\n+         Link_With_Shared_Libgcc := Shared_Libgcc_Switch'Access;\n+      else\n+         Link_With_Shared_Libgcc := No_Shared_Libgcc_Switch'Access;\n+      end if;\n+\n       VMS_Options (VMS_Options'First + 1) := For_Linker_Opt;\n \n       for J in Inter'Range loop\n@@ -451,7 +467,8 @@ package body MLib.Tgt is\n         (Output_File => Lib_File,\n          Objects     => Ofiles & Additional_Objects.all,\n          Options     => VMS_Options,\n-         Options_2   => Opts (Opts'First .. Last_Opt) &\n+         Options_2   => Link_With_Shared_Libgcc.all &\n+                        Opts (Opts'First .. Last_Opt) &\n                         Opts2 (Opts2'First .. Last_Opt2),\n          Driver_Name => Driver_Name);\n "}, {"sha": "d811dfcf25dd89322b3634fb9035122f1f54bdb5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -1,3 +1,72 @@\n+2004-01-23  Robert Dewar  <dewar@gnat.com>\n+\n+\t* exp_aggr.adb: Minor reformatting\n+\n+\t* exp_ch9.adb: Minor code clean up\n+\tMinor reformatting\n+\tFix bad character in comment\n+\n+\tPR ada/13471\n+\t* targparm.adb (Get_Target_Parameters): Give clean abort error on\n+\tunexpected end of file, along with more detailed message.\n+\n+2004-01-23  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* exp_pakd.adb (Install_PAT): Clear Freeze_Node for PAT and Etype of\n+\tPAT.\n+\n+\t* decl.c (copy_alias_set): New function.\n+\t(gnat_to_gnu_entity, make_aligning_type, make_packable_type): Use it.\n+\n+2004-01-23  Doug Rupp  <rupp@gnat.com>\n+\n+\t* Makefile.in (install-gnatlib): Change occurrences of lib$$file to\n+\tlib$${file} in case subsequent character is not a separator.\n+\n+2004-01-23  Vincent Celier  <celier@gnat.com>\n+\n+\t* 5vml-tgt.adb (Build_Dynamic_Library): Invoke gcc with -shared-libgcc\n+\twhen the GCC version is at least 3.\n+\n+\t* make.adb: (Scan_Make_Arg): Pass -B to Scan_Make_Switches\n+\tRemove all \"Opt.\", to prepare for opt split\n+\n+\t* prj-part.adb (Parse_Single_Project): New Boolean out parameter\n+\tExtends_All. Set to True when the project parsed is an extending all\n+\tproject. Fails for importing an extending all project only when the\n+\timported project is an extending all project.\n+\t(Post_Parse_Context_Clause): Set Is_Extending_All to the with clause,\n+\tdepending on the value of Extends_All returned.\n+\n+\t* prj-proc.adb (Process): Check that no project shares its object\n+\tdirectory with a project that extends it, directly or indirectly,\n+\tincluding a virtual project.\n+\tCheck that no project extended by another project shares its object\n+\tdirectory with another also extended project.\n+\n+\t* prj-tree.adb (Is_Extending_All, Set_Is_Extending_All): Allow for\n+\tKind = N_With_Clause\n+\n+\t* prj-tree.ads: Minor reformatting\n+\tIndicate that Flag2 also applies to N_With_Clause (Is_Extending_All).\n+\n+2004-01-23  Ed Schonberg  <schonberg@gnat.com>\n+\n+\t* sem_ch13.adb (Analyze_Attribute_Definition_Clause): If the attribute\n+\tapplies to a type with an incomplete view, use full view in Name of\n+\tclause, for consistency with uses of Get_Attribute_Definition_Clause.\n+\n+2004-01-23  Arnaud Charlet  <charlet@act-europe.fr>\n+\n+\t* 5itaprop.adb (Set_Priority): Reset the priority to 0 when using\n+\tSCHED_RR, since other values are not supported by this policy.\n+\t(Initialize): Move initialization of mutex attribute to package\n+\telaboration, to prevent early access to this variable.\n+\n+\t* Makefile.in: Remove mention of Makefile.adalib, unused.\n+\n+\t* Makefile.adalib: Removed, unused.\n+\n 2004-01-21  Javier Miranda  <miranda@gnat.com>\n \n \t* exp_aggr.adb (Build_Record_Aggr_Code): Do not build the master"}, {"sha": "ba084dcfbbdb61e9679a75e9b5207dee101b0996", "filename": "gcc/ada/Makefile.adalib", "status": "removed", "additions": 0, "deletions": 122, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/908f6e7c991ed97990fa97ed8ad953b88b70008e/gcc%2Fada%2FMakefile.adalib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/908f6e7c991ed97990fa97ed8ad953b88b70008e/gcc%2Fada%2FMakefile.adalib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.adalib?ref=908f6e7c991ed97990fa97ed8ad953b88b70008e", "patch": "@@ -1,122 +0,0 @@\n-# This is the Unix/NT makefile used to build an alternate GNAT run-time.\n-# Note that no files in the original GNAT library dirctory will be\n-# modified by this procedure\n-#\n-# This Makefile requires Gnu make.\n-# Here is how to use this Makefile\n-#\n-# 1. Create a new directory (say adalib)\n-#    e.g.  $ mkdir adalib\n-#          $ cd adalib           \n-#\n-# 2. Copy this Makefile from the standard Adalib directory, e.g.\n-#    $ cp /usr/local/gnat/lib/gcc-lib/<target>/<version>/adalib/Makefile.adalib .\n-#\n-# 3. If needed (e.g for pragma Normalize_Scalars), create a gnat.adc\n-#    containing the configuration pragmas you want to use to build the library\n-#    e.g. $ echo pragma Normalize_Scalars; > gnat.adc\n-#    Note that this step is usually not needed, and most pragmas are not\n-#    relevant to the GNAT run time. \n-#          \n-# 4. Determine the values of the following MACROS\n-#      ROOT   (location of GNAT installation, e.g /usr/local/gnat)\n-#    and optionnally\n-#      CFLAGS (back end compilation flags such as -g -O2)\n-#      ADAFLAGS (front end compilation flags such as -gnatpgn)\n-#                *beware* the minimum value for this MACRO is -gnatpg \n-#                for proper compilation of the GNAT library\n-# 5a. If you are using a native compile, call make\n-#   e.g.  $ make -f Makefile.adalib ROOT=/usr/local/gnat CFLAGS=\"-g -O0\"\n-#\n-# 5b. If you are using a cross compiler, you need to define two additional\n-#     MACROS:\n-#       CC    (name of the cross compiler)\n-#       AR    (name of the cross ar)\n-#\n-#   e.g.  $ make -f Makefile.adalib ROOT=/opt/gnu/gnat \\\n-#     CFLAGS=\"-O2 -g -I/usr/wind/target/h\" CC=powerpc-wrs-vxworks-gcc \\\n-#     AR=arppc\n-#\n-# 6. put this new library on your Object PATH where you want to use it\n-# in place of the original one. This can be achieved for instance by\n-# updating the value of the environment variable ADA_OBJECTS_PATH\n-\n-PWD_COMMAND=$${PWDCMD-pwd}\n-CC = gcc\n-AR = ar\n-\n-ifeq ($(strip $(filter-out %sh,$(SHELL))),)\n-   GNAT_ROOT = $(shell cd $(ROOT);${PWD_COMMAND})/\n-else\n-   GNAT_ROOT = $(ROOT)/\n-endif\n-\n-target = $(shell $(CC) -dumpmachine)\n-version = $(shell $(CC) -dumpversion)\n-ADA_INCLUDE_PATH = $(GNAT_ROOT)lib/gcc-lib/$(target)/$(version)/adainclude/\n-GCC_INCLUDE_PATH = $(GNAT_ROOT)lib/gcc-lib/$(target)/$(version)/gcc-include/\n-ADA_OBJECTS_PATH = $(GNAT_ROOT)lib/gcc-lib/$(target)/$(version)/adalib/\n-\n-vpath %.adb $(ADA_INCLUDE_PATH)\n-vpath %.ads $(ADA_INCLUDE_PATH)\n-vpath %.c $(ADA_INCLUDE_PATH)\n-vpath %.h $(ADA_INCLUDE_PATH)\n-\n-CFLAGS = -O2\n-GNATLIBCFLAGS = -DIN_RTS=1 -DIN_GCC=1 -fexceptions\n-ADAFLAGS = -gnatpgn\n-ALL_ADAFLAGS = $(CFLAGS) $(ADAFLAGS) -I. \n-FORCE_DEBUG_ADAFLAGS = -g\n-INCLUDES = -I$(ADA_INCLUDE_PATH) -I$(GCC_INCLUDE_PATH)/include   \\\n--I$(GCC_INCLUDE_PATH)/gcc/config -I$(GCC_INCLUDE_PATH)/gcc       \\\n--I$(GCC_INCLUDE_PATH)/gcc/ada    -I$(GCC_INCLUDE_PATH)\n-\n-# Say how to compile Ada programs.\n-.SUFFIXES: .ada .adb .ads\n-\n-.c.o:\n-\t$(CC) -c $(CFLAGS) $(GNATLIBCFLAGS) $(INCLUDES) $<\n-.adb.o:\n-\t$(CC) -c $(ALL_ADAFLAGS) $<\n-.ads.o:\n-\t$(CC) -c $(ALL_ADAFLAGS) $<\n-\n-GNAT_OBJS :=$(filter-out __%,$(shell $(AR) t $(ADA_OBJECTS_PATH)libgnat.a))\n-GNARL_OBJS:=$(filter-out __%,$(shell $(AR) t $(ADA_OBJECTS_PATH)libgnarl.a))\n-OBJS := $(GNAT_OBJS) $(GNARL_OBJS)\n-\n-all: libgnat.a libgnarl.a delete_objects g-trasym.o\n-\tchmod 0444 *.ali *.a\n-\n-delete_objects:\n-\trm *.o\n-\n-libgnat.a: $(GNAT_OBJS)\n-\t$(AR) r libgnat.a $(GNAT_OBJS)\n-\n-libgnarl.a: $(GNARL_OBJS)\n-\t$(AR) r libgnarl.a $(GNARL_OBJS)\n-\n-a-except.o: a-except.adb a-except.ads\n-\t$(CC) -c $(FORCE_DEBUG_ADAFLAGS) $(ALL_ADAFLAGS) -O0 -fno-inline $<\n-\n-s-assert.o: s-assert.adb s-assert.ads a-except.ads\n-\t$(CC) -c $(FORCE_DEBUG_ADAFLAGS) $(ALL_ADAFLAGS) $<\n-\n-s-tasdeb.o: s-tasdeb.adb\n-\t$(CC) -c $(FORCE_DEBUG_ADAFLAGS) $(ALL_ADAFLAGS) $<\n-\n-s-vaflop.o: s-vaflop.adb\n-\t$(CC) -c $(FORCE_DEBUG_ADAFLAGS) -O $(ALL_ADAFLAGS) $<\n-\n-s-memory.o: s-memory.adb s-memory.ads\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -O0 $(ADA_INCLUDES) $<\n-\n-s-traceb.o: s-traceb.adb\n-\t$(CC) -c $(ALL_ADAFLAGS) $(FORCE_DEBUG_ADAFLAGS) -fno-optimize-sibling-calls $(ADA_INCLUDES) $<\n-\n-tracebak.o: tracebak.c\n-\t$(CC) -c $(CFLAGS) $(GNATLIBCFLAGS) \\\n-\t\t$(ALL_CPPFLAGS) $(INCLUDES) -fno-omit-frame-pointer $<\n-\n-.PHONY: delete_objects"}, {"sha": "7252bc04138fa626cb8aaa1cda674fb378a12380", "filename": "gcc/ada/Makefile.in", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.in?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -1451,7 +1451,7 @@ RAVEN_OBJS = \\\n ADA_INCLUDE_SRCS =\\\n  ada.ads calendar.ads directio.ads gnat.ads interfac.ads ioexcept.ads \\\n  machcode.ads text_io.ads unchconv.ads unchdeal.ads \\\n- sequenio.ads system.ads Makefile.adalib Makefile.prolog Makefile.generic \\\n+ sequenio.ads system.ads Makefile.prolog Makefile.generic \\\n  memtrack.adb \\\n  a-*.adb a-*.ads g-*.ad? i-*.ad? \\\n  s-[a-o]*.adb s-[p-z]*.adb \\\n@@ -1706,13 +1706,13 @@ install-gnatlib: ../stamp-gnatlib\n #     for shared libraries on some targets, e.g. on HP-UX where the x\n #     permission is required.\n \tfor file in gnat gnarl; do \\\n-\t   if [ -f rts/lib$$file$(hyphen)$(LIBRARY_VERSION)$(soext) ]; then \\\n-\t      $(INSTALL) rts/lib$$file$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n+\t   if [ -f rts/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) ]; then \\\n+\t      $(INSTALL) rts/lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n \t\t\t $(DESTDIR)$(ADA_RTL_OBJ_DIR); \\\n \t   fi; \\\n-\t   if [ -f rts/lib$$file$(soext) ]; then \\\n-\t      $(LN_S) lib$$file$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n-\t      $(DESTDIR)$(ADA_RTL_OBJ_DIR)/lib$$file$(soext); \\\n+\t   if [ -f rts/lib$${file}$(soext) ]; then \\\n+\t      $(LN_S) lib$${file}$(hyphen)$(LIBRARY_VERSION)$(soext) \\\n+\t      $(DESTDIR)$(ADA_RTL_OBJ_DIR)/lib$${file}$(soext); \\\n \t   fi; \\\n \tdone\n # This copy must be done preserving the date on the original file."}, {"sha": "41669d097c65afd9a79959746b2f4ede44fcd682", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 52, "deletions": 23, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -82,6 +82,7 @@ static struct incomplete\n   Entity_Id full_type;\n } *defer_incomplete_list = 0;\n \n+static void copy_alias_set (tree, tree);\n static tree substitution_list (Entity_Id, Entity_Id, tree, int);\n static int allocatable_size_p (tree, int);\n static struct attrib *build_attr_list (Entity_Id);\n@@ -1605,13 +1606,18 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    tem = build_array_type (tem, gnu_index_types[index]);\n \t    TYPE_MULTI_ARRAY_P (tem) = (index > 0);\n \n-\t    /* ??? For now, we say that any component of aggregate type is\n-\t       addressable because the front end may take 'Reference of it.\n-\t       But we have to make it addressable if it must be passed by\n-\t       reference or it that is the default.  */\n+\t    /* If the type below this an multi-array type, then this\n+\t       does not not have aliased components.\n+\n+\t       ??? Otherwise, for now, we say that any component of aggregate\n+\t       type is addressable because the front end may take 'Reference\n+\t       of it. But we have to make it addressable if it must be passed\n+\t       by reference or it that is the default.  */\n \t    TYPE_NONALIASED_COMPONENT (tem)\n-\t      = (! Has_Aliased_Components (gnat_entity)\n-\t\t && ! AGGREGATE_TYPE_P (TREE_TYPE (tem)));\n+\t      = ((TREE_CODE (TREE_TYPE (tem)) == ARRAY_TYPE\n+\t\t  && TYPE_MULTI_ARRAY_P (TREE_TYPE (tem))) ? 1\n+\t\t : (! Has_Aliased_Components (gnat_entity)\n+\t\t    && ! AGGREGATE_TYPE_P (TREE_TYPE (tem))));\n \t  }\n \n \t/* If an alignment is specified, use it if valid.  But ignore it for\n@@ -1923,13 +1929,18 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t    {\n \t      gnu_type = build_array_type (gnu_type, gnu_index_type[index]);\n \t      TYPE_MULTI_ARRAY_P (gnu_type) = (index > 0);\n-\t      /* ??? For now, we say that any component of aggregate type is\n-\t\t addressable because the front end may take 'Reference.\n-\t\t But we have to make it addressable if it must be passed by\n-\t\t reference or it that is the default.  */\n+\t    /* If the type below this an multi-array type, then this\n+\t       does not not have aliased components.\n+\n+\t       ??? Otherwise, for now, we say that any component of aggregate\n+\t       type is addressable because the front end may take 'Reference\n+\t       of it. But we have to make it addressable if it must be passed\n+\t       by reference or it that is the default.  */\n \t      TYPE_NONALIASED_COMPONENT (gnu_type)\n-\t\t= (! Has_Aliased_Components (gnat_entity)\n-\t\t   && ! AGGREGATE_TYPE_P (TREE_TYPE (gnu_type)));\n+\t      = ((TREE_CODE (TREE_TYPE (gnu_type)) == ARRAY_TYPE\n+\t\t  && TYPE_MULTI_ARRAY_P (TREE_TYPE (gnu_type))) ? 1\n+\t\t : (! Has_Aliased_Components (gnat_entity)\n+\t\t    && ! AGGREGATE_TYPE_P (TREE_TYPE (gnu_type))));\n \t    }\n \n \t  /* If we are at file level and this is a multi-dimensional array, we\n@@ -2010,8 +2021,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \n \t  /* Set our alias set to that of our base type.  This gives all\n \t     array subtypes the same alias set.  */\n-\t  TYPE_ALIAS_SET (gnu_type) = get_alias_set (gnu_base_type);\n-\t  record_component_aliases (gnu_type);\n+\t  copy_alias_set (gnu_type, gnu_base_type);\n \t}\n \n       /* If this is a packed type, make this type the same as the packed\n@@ -2408,11 +2418,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \tif (Etype (gnat_entity) != gnat_entity\n \t    && ! (Is_Private_Type (Etype (gnat_entity))\n \t\t  && Full_View (Etype (gnat_entity)) == gnat_entity))\n-\t  {\n-\t    TYPE_ALIAS_SET (gnu_type)\n-\t      = get_alias_set (gnat_to_gnu_type (Etype (gnat_entity)));\n-\t    record_component_aliases (gnu_type);\n-\t  }\n+\t  copy_alias_set (gnu_type, gnat_to_gnu_type (Etype (gnat_entity)));\n \n \t/* Fill in locations of fields.  */\n \tannotate_rep (gnat_entity, gnu_type);\n@@ -2644,8 +2650,7 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t      TYPE_SIZE (gnu_type) = TYPE_SIZE (gnu_base_type);\n \t      TYPE_SIZE_UNIT (gnu_type) = TYPE_SIZE_UNIT (gnu_base_type);\n \t      SET_TYPE_ADA_SIZE (gnu_type, TYPE_ADA_SIZE (gnu_base_type));\n-\t      TYPE_ALIAS_SET (gnu_type) = get_alias_set (gnu_base_type);\n-\t      record_component_aliases (gnu_type);\n+\t      copy_alias_set (gnu_type, gnu_base_type);\n \n \t      if (CONTAINS_PLACEHOLDER_P (TYPE_SIZE (gnu_type)))\n \t\tfor (gnu_temp = gnu_subst_list;\n@@ -4144,6 +4149,30 @@ mark_out_of_scope (Entity_Id gnat_entity)\n     }\n }\n \f\n+/* Set the alias set of GNU_NEW_TYPE to be that of GNU_OLD_TYPE.  If this\n+   is a multi-dimensional array type, do this recursively.  */\n+\n+static void\n+copy_alias_set (tree gnu_new_type, tree gnu_old_type)\n+{\n+  if (TREE_CODE (gnu_new_type) == ARRAY_TYPE\n+      && TREE_CODE (TREE_TYPE (gnu_new_type)) == ARRAY_TYPE\n+      && TYPE_MULTI_ARRAY_P (TREE_TYPE (gnu_new_type)))\n+    {\n+      /* We need to be careful here in case GNU_OLD_TYPE is an unconstrained\n+\t array.  In that case, it doesn't have the same shape as GNU_NEW_TYPE,\n+\t so we need to go down to what does.  */\n+      if (TREE_CODE (gnu_old_type) == UNCONSTRAINED_ARRAY_TYPE)\n+\tgnu_old_type\n+\t  = TREE_TYPE (TREE_TYPE (TYPE_FIELDS (TREE_TYPE (gnu_old_type))));\n+\n+      copy_alias_set (TREE_TYPE (gnu_new_type), TREE_TYPE (gnu_old_type));\n+    }\n+\n+  TYPE_ALIAS_SET (gnu_new_type) = get_alias_set (gnu_old_type);\n+  record_component_aliases (gnu_new_type);\n+}\n+\f\n /* Return a TREE_LIST describing the substitutions needed to reflect\n    discriminant substitutions from GNAT_SUBTYPE to GNAT_TYPE and add\n    them to GNU_LIST.  If GNAT_TYPE is not specified, use the base type\n@@ -4543,7 +4572,7 @@ make_aligning_type (tree type, int align, tree size)\n \t\t  bitsize_int (align));\n   TYPE_SIZE_UNIT (record_type)\n     = size_binop (PLUS_EXPR, size, size_int (align / BITS_PER_UNIT));\n-  TYPE_ALIAS_SET (record_type) = get_alias_set (type);\n+  copy_alias_set (record_type, type);\n   return record_type;\n }\n \f\n@@ -4610,7 +4639,7 @@ make_packable_type (tree type)\n     }\n \n   finish_record_type (new_type, nreverse (field_list), 1, 1);\n-  TYPE_ALIAS_SET (new_type) = get_alias_set (type);\n+  copy_alias_set (new_type, type);\n   return TYPE_MODE (new_type) == BLKmode ? type : new_type;\n }\n \f"}, {"sha": "1a1b54ab497a93a62814b90cf835d1e2859235b3", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -1918,14 +1918,13 @@ package body Exp_Aggr is\n \n       Comp := First (Component_Associations (N));\n       while Present (Comp) loop\n-         Selector  := Entity (First (Choices (Comp)));\n+         Selector := Entity (First (Choices (Comp)));\n \n          --  Ada0Y (AI-287): Default initialization of a limited component\n \n          if Box_Present (Comp)\n             and then Is_Limited_Type (Etype (Selector))\n          then\n-\n             --  Ada0Y (AI-287): If the component type has tasks then generate\n             --  the activation chain and master entities (except in case of an\n             --  allocator because in that case these entities are generated\n@@ -1949,6 +1948,7 @@ package body Exp_Aggr is\n \n                   if not Inside_Init_Proc and not Inside_Allocator then\n                      Build_Activation_Chain_Entity (N);\n+\n                      if not Has_Master_Entity (Current_Scope) then\n                         Build_Master_Entity (Etype (N));\n                      end if;"}, {"sha": "76afc7b14950c52e9e97b26c42aeaa04f3c4d2d5", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -1198,7 +1198,8 @@ package body Exp_Ch9 is\n       Loc  : constant Source_Ptr := Sloc (E);\n       P    : Node_Id;\n       Decl : Node_Id;\n-      S    : Entity_Id := Scope (E);\n+      S    : Entity_Id;\n+\n    begin\n       --  Ada0Y (AI-287): Do not set/get the has_master_entity reminder in\n       --  internal scopes. Required for nested limited aggregates.\n@@ -1213,12 +1214,13 @@ package body Exp_Ch9 is\n          then\n             return;\n          end if;\n-      else\n \n-         --  Ada0Y (AI-287): Similar to the \ufffdprevious casebut skipping internal\n-         --  scopes. If we are not inside an internal scope this code is\n-         --  equivalent to the previous code.\n+      else\n+         --  Ada0Y (AI-287): Similar to the previous case but skipping\n+         --  internal scopes. If we are not inside an internal scope this\n+         --  code is equivalent to the previous code.\n \n+         S := Scope (E);\n          while Is_Internal (S) loop\n             S := Scope (S);\n          end loop;\n@@ -1228,7 +1230,6 @@ package body Exp_Ch9 is\n          then\n             return;\n          end if;\n-\n       end if;\n \n       --  Otherwise first build the master entity"}, {"sha": "f86ab6e8c27b6de91393defea25989c789c28f78", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -791,6 +791,12 @@ package body Exp_Pakd is\n \n          Set_Has_Delayed_Freeze (PAT, False);\n          Set_Has_Delayed_Freeze (Etype (PAT), False);\n+\n+         --  If we did allocate a freeze node, then clear out the reference\n+         --  since it is obsolete (should we delete the freeze node???)\n+\n+         Set_Freeze_Node (PAT, Empty);\n+         Set_Freeze_Node (Etype (PAT), Empty);\n       end Install_PAT;\n \n       -----------------"}, {"sha": "882fe6cab9a802f9882aaaf07277676cf7b83dff", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 87, "deletions": 86, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -862,7 +862,7 @@ package body Make is\n    begin\n       Add_Lib_Search_Dir (N);\n \n-      if Opt.Verbose_Mode then\n+      if Verbose_Mode then\n          Write_Str (\"Adding object directory \"\"\");\n          Write_Str (N);\n          Write_Str (\"\"\".\");\n@@ -878,7 +878,7 @@ package body Make is\n    begin\n       Add_Src_Search_Dir (N);\n \n-      if Opt.Verbose_Mode then\n+      if Verbose_Mode then\n          Write_Str (\"Adding source directory \"\"\");\n          Write_Str (N);\n          Write_Str (\"\"\".\");\n@@ -1037,7 +1037,7 @@ package body Make is\n                         --  modified.\n \n                      begin\n-                        if Opt.Verbose_Mode then\n+                        if Verbose_Mode then\n                            Write_Str (\"   Adding \");\n                            Write_Line (Argv);\n                         end if;\n@@ -1059,7 +1059,7 @@ package body Make is\n                      --  We need a copy, because Name_Buffer may be modified\n \n                   begin\n-                     if Opt.Verbose_Mode then\n+                     if Verbose_Mode then\n                         Write_Str (\"   Adding \");\n                         Write_Line (Argv);\n                      end if;\n@@ -1317,11 +1317,11 @@ package body Make is\n       if Read_Only then\n          declare\n             Saved_Check_Object_Consistency : constant Boolean :=\n-                                               Opt.Check_Object_Consistency;\n+                                               Check_Object_Consistency;\n          begin\n-            Opt.Check_Object_Consistency := False;\n+            Check_Object_Consistency := False;\n             Text := Read_Library_Info (Lib_File);\n-            Opt.Check_Object_Consistency := Saved_Check_Object_Consistency;\n+            Check_Object_Consistency := Saved_Check_Object_Consistency;\n          end;\n \n       else\n@@ -1384,7 +1384,7 @@ package body Make is\n          --  Don't take Ali file into account if it was generated without\n          --  object.\n \n-         if Opt.Operating_Mode /= Opt.Check_Semantics\n+         if Operating_Mode /= Check_Semantics\n            and then ALIs.Table (ALI).No_Object\n          then\n             Verbose_Msg (Full_Lib_File, \"has no corresponding object\");\n@@ -1394,7 +1394,7 @@ package body Make is\n \n          --  Check for matching compiler switches if needed\n \n-         if Opt.Check_Switches then\n+         if Check_Switches then\n \n             --  First, collect all the switches\n \n@@ -1465,7 +1465,7 @@ package body Make is\n                end loop;\n \n                if not Switch_Found then\n-                  if Opt.Verbose_Mode then\n+                  if Verbose_Mode then\n                      Verbose_Msg (ALIs.Table (ALI).Sfile,\n                                   \"switch mismatch \"\"\" &\n                                   Switches_To_Check.Table (J).all & '\"');\n@@ -1480,7 +1480,7 @@ package body Make is\n               Integer (Units.Table (ALIs.Table (ALI).First_Unit).Last_Arg -\n                        Units.Table (ALIs.Table (ALI).First_Unit).First_Arg + 1)\n             then\n-               if Opt.Verbose_Mode then\n+               if Verbose_Mode then\n                   Verbose_Msg (ALIs.Table (ALI).Sfile,\n                                \"different number of switches\");\n \n@@ -1516,7 +1516,7 @@ package body Make is\n          if Modified_Source /= No_File then\n             ALI := No_ALI_Id;\n \n-            if Opt.Verbose_Mode then\n+            if Verbose_Mode then\n                Source_Name := Full_Source_Name (Modified_Source);\n \n                if Source_Name /= No_File then\n@@ -1532,7 +1532,7 @@ package body Make is\n             if New_Spec /= No_File then\n                ALI := No_ALI_Id;\n \n-               if Opt.Verbose_Mode then\n+               if Verbose_Mode then\n                   Source_Name := Full_Source_Name (New_Spec);\n \n                   if Source_Name /= No_File then\n@@ -2545,14 +2545,14 @@ package body Make is\n       end if;\n \n       --  The following two flags affect the behavior of ALI.Set_Source_Table.\n-      --  We set Opt.Check_Source_Files to True to ensure that source file\n-      --  time stamps are checked, and we set Opt.All_Sources to False to\n+      --  We set Check_Source_Files to True to ensure that source file\n+      --  time stamps are checked, and we set All_Sources to False to\n       --  avoid checking the presence of the source files listed in the\n       --  source dependency section of an ali file (which would be a mistake\n       --  since the ali file may be obsolete).\n \n-      Opt.Check_Source_Files := True;\n-      Opt.All_Sources        := False;\n+      Check_Source_Files := True;\n+      All_Sources        := False;\n \n       Insert_Q (Main_Source);\n       Mark (Main_Source);\n@@ -2764,22 +2764,22 @@ package body Make is\n \n                declare\n                   Saved_Object_Consistency : constant Boolean :=\n-                                               Opt.Check_Object_Consistency;\n+                                               Check_Object_Consistency;\n \n                begin\n                   --  If compilation was not OK, or if output is not an\n                   --  object file and we don't do the bind step, don't check\n                   --  for object consistency.\n \n-                  Opt.Check_Object_Consistency :=\n-                    Opt.Check_Object_Consistency\n+                  Check_Object_Consistency :=\n+                    Check_Object_Consistency\n                     and Compilation_OK\n                     and (Output_Is_Object or Do_Bind_Step);\n                   Text := Read_Library_Info (Lib_File);\n \n                   --  Restore Check_Object_Consistency to its initial value\n \n-                  Opt.Check_Object_Consistency := Saved_Object_Consistency;\n+                  Check_Object_Consistency := Saved_Object_Consistency;\n                end;\n \n                --  If an ALI file was generated by this compilation, scan\n@@ -2808,7 +2808,7 @@ package body Make is\n \n                --  If we could not read the ALI file that was just generated\n                --  then there could be a problem reading either the ALI or the\n-               --  corresponding object file (if Opt.Check_Object_Consistency\n+               --  corresponding object file (if Check_Object_Consistency\n                --  is set Read_Library_Info checks that the time stamp of the\n                --  object file is more recent than that of the ALI). For an\n                --  example of problems caught by this test see [6625-009].\n@@ -2870,7 +2870,7 @@ package body Make is\n                      --  If we have a special runtime, we add the standard\n                      --  library only if we can find it.\n \n-                     if Opt.RTS_Switch then\n+                     if RTS_Switch then\n                         Add_It := Find_File (Sfile, Osint.Source) /= No_File;\n                      end if;\n \n@@ -2927,7 +2927,7 @@ package body Make is\n             end if;\n          end loop;\n \n-         if Opt.Display_Compilation_Progress then\n+         if Display_Compilation_Progress then\n             Write_Str (\"completed \");\n             Write_Int (Int (Q_Front));\n             Write_Str (\" out of \");\n@@ -3158,7 +3158,7 @@ package body Make is\n       if (not Debug.Debug_Flag_N) and Main_Project /= No_Project then\n          for Project in 1 .. Projects.Last loop\n             if Projects.Table (Project).Config_File_Temp then\n-               if Opt.Verbose_Mode then\n+               if Verbose_Mode then\n                   Write_Str (\"Deleting temp configuration file \"\"\");\n                   Write_Str (Get_Name_String\n                              (Projects.Table (Project).Config_File_Name));\n@@ -3405,7 +3405,7 @@ package body Make is\n          --  Do not check for an object file (\".o\") when compiling to\n          --  Java bytecode since \".class\" files are generated instead.\n \n-         Opt.Check_Object_Consistency := False;\n+         Check_Object_Consistency := False;\n       end if;\n \n       --  Special case when switch -B was specified\n@@ -3734,7 +3734,7 @@ package body Make is\n          end if;\n       end if;\n \n-      if Opt.Verbose_Mode then\n+      if Verbose_Mode then\n          Write_Eol;\n          Write_Str (\"GNATMAKE \");\n          Write_Str (Gnatvsn.Gnat_Version_String);\n@@ -3778,8 +3778,8 @@ package body Make is\n \n       --  If -M was specified, behave as if -n was specified\n \n-      if Opt.List_Dependencies then\n-         Opt.Do_Not_Execute := True;\n+      if List_Dependencies then\n+         Do_Not_Execute := True;\n       end if;\n \n       --  Note that Osint.Next_Main_Source will always return the (possibly\n@@ -3791,7 +3791,7 @@ package body Make is\n       Add_Switch (\"-I-\", Compiler, And_Save => True);\n \n       if Main_Project = No_Project then\n-         if Opt.Look_In_Primary_Dir then\n+         if Look_In_Primary_Dir then\n \n             Add_Switch\n               (\"-I\" &\n@@ -3815,13 +3815,13 @@ package body Make is\n          --  sources for other compilation units, when there are extending\n          --  projects.\n \n-         Opt.Look_In_Primary_Dir := False;\n+         Look_In_Primary_Dir := False;\n       end if;\n \n       --  If the user wants a program without a main subprogram, add the\n       --  appropriate switch to the binder.\n \n-      if Opt.No_Main_Subprogram then\n+      if No_Main_Subprogram then\n          Add_Switch (\"-z\", Binder, And_Save => True);\n       end if;\n \n@@ -3951,7 +3951,7 @@ package body Make is\n \n                   --  We only output the main source file if there is only one\n \n-                  if Opt.Verbose_Mode and then Osint.Number_Of_Files = 1 then\n+                  if Verbose_Mode and then Osint.Number_Of_Files = 1 then\n                      Write_Str (\"Main source file: \"\"\");\n                      Write_Str (Main_Unit_File_Name\n                                 (Pos + 1 .. Main_Unit_File_Name'Last));\n@@ -3971,7 +3971,7 @@ package body Make is\n                --  switches (if any).\n \n                if Osint.Number_Of_Files = 1 then\n-                  if Opt.Verbose_Mode then\n+                  if Verbose_Mode then\n                      Write_Str (\"Adding gnatmake switches for \"\"\");\n                      Write_Str (Main_Unit_File_Name);\n                      Write_Line (\"\"\".\");\n@@ -4004,7 +4004,7 @@ package body Make is\n \n                   begin\n                      if Defaults /= Nil_Variable_Value then\n-                        if (not Opt.Quiet_Output)\n+                        if (not Quiet_Output)\n                           and then Switches /= No_Array_Element\n                         then\n                            Write_Line\n@@ -4020,7 +4020,7 @@ package body Make is\n                            The_Package => Builder_Package,\n                            Program     => None);\n \n-                     elsif (not Opt.Quiet_Output)\n+                     elsif (not Quiet_Output)\n                        and then Switches /= No_Array_Element\n                      then\n                         Write_Line\n@@ -4046,7 +4046,7 @@ package body Make is\n             --  Add binder switches from the project file for the first main\n \n             if Do_Bind_Step and Binder_Package /= No_Package then\n-               if Opt.Verbose_Mode then\n+               if Verbose_Mode then\n                   Write_Str (\"Adding binder switches for \"\"\");\n                   Write_Str (Main_Unit_File_Name);\n                   Write_Line (\"\"\".\");\n@@ -4061,7 +4061,7 @@ package body Make is\n             --  Add linker switches from the project file for the first main\n \n             if Do_Link_Step and Linker_Package /= No_Package then\n-               if Opt.Verbose_Mode then\n+               if Verbose_Mode then\n                   Write_Str (\"Adding linker switches for\"\"\");\n                   Write_Str (Main_Unit_File_Name);\n                   Write_Line (\"\"\".\");\n@@ -4087,7 +4087,7 @@ package body Make is\n             Make_Failed (\"*** make failed.\");\n       end;\n \n-      Display_Commands (not Opt.Quiet_Output);\n+      Display_Commands (not Quiet_Output);\n \n       Check_Steps;\n \n@@ -4104,7 +4104,7 @@ package body Make is\n                     not MLib.Tgt.Library_Exists_For (Proj);\n \n                   if Projects.Table (Proj).Flag1 then\n-                     if Opt.Verbose_Mode then\n+                     if Verbose_Mode then\n                         Write_Str\n                           (\"Library file does not exist for project \"\"\");\n                         Write_Str\n@@ -4280,7 +4280,7 @@ package body Make is\n       --  precedence.\n \n       if Saved_Maximum_Processes = 0 then\n-         Saved_Maximum_Processes := Opt.Maximum_Processes;\n+         Saved_Maximum_Processes := Maximum_Processes;\n       end if;\n \n       --  Allocate as many temporary mapping file names as the maximum\n@@ -4470,15 +4470,15 @@ package body Make is\n                   Most_Recent_Obj_Stamp => Youngest_Obj_Stamp,\n                   Main_Unit             => Is_Main_Unit,\n                   Compilation_Failures  => Compilation_Failures,\n-                  Check_Readonly_Files  => Opt.Check_Readonly_Files,\n-                  Do_Not_Execute        => Opt.Do_Not_Execute,\n-                  Force_Compilations    => Opt.Force_Compilations,\n-                  In_Place_Mode         => Opt.In_Place_Mode,\n-                  Keep_Going            => Opt.Keep_Going,\n+                  Check_Readonly_Files  => Check_Readonly_Files,\n+                  Do_Not_Execute        => Do_Not_Execute,\n+                  Force_Compilations    => Force_Compilations,\n+                  In_Place_Mode         => In_Place_Mode,\n+                  Keep_Going            => Keep_Going,\n                   Initialize_ALI_Data   => True,\n                   Max_Process           => Saved_Maximum_Processes);\n \n-               if Opt.Verbose_Mode then\n+               if Verbose_Mode then\n                   Write_Str (\"End of compilation\");\n                   Write_Eol;\n                end if;\n@@ -4491,7 +4491,7 @@ package body Make is\n                  Total_Compilation_Failures + Compilation_Failures;\n \n                if Total_Compilation_Failures /= 0 then\n-                  if Opt.Keep_Going then\n+                  if Keep_Going then\n                      goto Next_Main;\n \n                   else\n@@ -4563,7 +4563,7 @@ package body Make is\n                   end loop;\n                end if;\n \n-               if Opt.List_Dependencies then\n+               if List_Dependencies then\n                   if First_Compiled_File /= No_File then\n                      Inform\n                        (First_Compiled_File,\n@@ -4574,13 +4574,13 @@ package body Make is\n \n                elsif First_Compiled_File = No_File\n                  and then not Do_Bind_Step\n-                 and then not Opt.Quiet_Output\n+                 and then not Quiet_Output\n                  and then not Library_Rebuilt\n                  and then Osint.Number_Of_Files = 1\n                then\n                   Inform (Msg => \"objects up to date.\");\n \n-               elsif Opt.Do_Not_Execute\n+               elsif Do_Not_Execute\n                  and then First_Compiled_File /= No_File\n                then\n                   Write_Name (First_Compiled_File);\n@@ -4598,8 +4598,8 @@ package body Make is\n \n                --    4) Made unit cannot be a main unit\n \n-               if (Opt.Do_Not_Execute\n-                   or Opt.List_Dependencies\n+               if (Do_Not_Execute\n+                   or List_Dependencies\n                    or not Do_Bind_Step\n                    or not Is_Main_Unit)\n                  and then not No_Main_Subprogram\n@@ -4659,7 +4659,7 @@ package body Make is\n                   --  and otherwise motivate the relink/rebind.\n \n                   if not Executable_Obsolete then\n-                     if not Opt.Quiet_Output then\n+                     if not Quiet_Output then\n                         Inform (Executable, \"up to date.\");\n                      end if;\n \n@@ -4722,7 +4722,7 @@ package body Make is\n             --  library path. In this case, use the corresponding library file\n             --  name.\n \n-            if Main_ALI_File = No_File and then Opt.In_Place_Mode then\n+            if Main_ALI_File = No_File and then In_Place_Mode then\n                Get_Name_String (Get_Directory (Full_Source_Name (Src_File)));\n                Get_Name_String_And_Append (ALI_File);\n                Main_ALI_File := Name_Find;\n@@ -5300,7 +5300,7 @@ package body Make is\n \n                   exception\n                      when Link_Failed =>\n-                        if Osint.Number_Of_Files = 1 or not Opt.Keep_Going then\n+                        if Osint.Number_Of_Files = 1 or not Keep_Going then\n                            raise;\n \n                         else\n@@ -5402,7 +5402,7 @@ package body Make is\n                   --  if any.\n \n                   if Do_Bind_Step and Binder_Package /= No_Package then\n-                     if Opt.Verbose_Mode then\n+                     if Verbose_Mode then\n                         Write_Str (\"Adding binder switches for \"\"\");\n                         Write_Str (Main_Unit_File_Name);\n                         Write_Line (\"\"\".\");\n@@ -5418,7 +5418,7 @@ package body Make is\n                   --  if any.\n \n                   if Do_Link_Step and Linker_Package /= No_Package then\n-                     if Opt.Verbose_Mode then\n+                     if Verbose_Mode then\n                         Write_Str (\"Adding linker switches for\"\"\");\n                         Write_Str (Main_Unit_File_Name);\n                         Write_Line (\"\"\".\");\n@@ -5649,7 +5649,7 @@ package body Make is\n       --  GNATMAKE since we do not need to check source consistency\n       --  again once GNATMAKE has looked at the sources to check.\n \n-      Opt.Check_Object_Consistency := True;\n+      Check_Object_Consistency := True;\n \n       --  Package initializations. The order of calls is important here.\n \n@@ -5689,14 +5689,14 @@ package body Make is\n \n       --  Test for trailing -o switch\n \n-      elsif Opt.Output_File_Name_Present\n+      elsif Output_File_Name_Present\n         and then not Output_File_Name_Seen\n       then\n          Make_Failed (\"output file name missing after -o\");\n \n       --  Test for trailing -D switch\n \n-      elsif Opt.Object_Directory_Present\n+      elsif Object_Directory_Present\n         and then not Object_Directory_Seen then\n          Make_Failed (\"object directory missing after -D\");\n       end if;\n@@ -5730,7 +5730,7 @@ package body Make is\n \n          --  A project file was specified by a -P switch\n \n-         if Opt.Verbose_Mode then\n+         if Verbose_Mode then\n             Write_Eol;\n             Write_Str (\"Parsing Project File \"\"\");\n             Write_Str (Project_File_Name.all);\n@@ -5740,7 +5740,7 @@ package body Make is\n \n          --  Avoid looking in the current directory for ALI files\n \n-         --  Opt.Look_In_Primary_Dir := False;\n+         --  Look_In_Primary_Dir := False;\n \n          --  Set the project parsing verbosity to whatever was specified\n          --  by a possible -vP switch.\n@@ -5759,7 +5759,7 @@ package body Make is\n             Make_Failed (\"\"\"\", Project_File_Name.all, \"\"\" processing failed\");\n          end if;\n \n-         if Opt.Verbose_Mode then\n+         if Verbose_Mode then\n             Write_Eol;\n             Write_Str (\"Parsing of Project File \"\"\");\n             Write_Str (Project_File_Name.all);\n@@ -5941,7 +5941,7 @@ package body Make is\n             --  is not marked.\n \n             if Sfile /= No_Name and then not Is_Marked (Sfile) then\n-               if Opt.Verbose_Mode then\n+               if Verbose_Mode then\n                   Write_Str (\"Adding \"\"\");\n                   Write_Str (Get_Name_String (Sfile));\n                   Write_Line (\"\"\" to the queue\");\n@@ -5959,7 +5959,7 @@ package body Make is\n             --  queue. This will allow parallel compilation processes if -jx\n             --  switch is used.\n \n-            if Opt.Verbose_Mode then\n+            if Verbose_Mode then\n                Write_Str (\"Adding \"\"\");\n                Write_Str (Get_Name_String (Sfile));\n                Write_Line (\"\"\" as if on the command line\");\n@@ -6229,7 +6229,7 @@ package body Make is\n \n          --  We have to provide the full library file name in In_Place_Mode\n \n-         if Opt.In_Place_Mode then\n+         if In_Place_Mode then\n             Lib_Name := Full_Lib_File_Name (Lib_Name);\n          end if;\n \n@@ -6249,7 +6249,7 @@ package body Make is\n             then\n                null;\n             else\n-               if not Opt.Quiet_Output then\n+               if not Quiet_Output then\n                   Src_Name := Full_Source_Name (Src_Name);\n                end if;\n \n@@ -6479,7 +6479,7 @@ package body Make is\n       --  flag (that is we have seen a -o), then the next argument is\n       --  the name of the output executable.\n \n-      elsif Opt.Output_File_Name_Present\n+      elsif Output_File_Name_Present\n         and then not Output_File_Name_Seen\n       then\n          Output_File_Name_Seen := True;\n@@ -6511,7 +6511,7 @@ package body Make is\n       --  (that is we have seen a -D), then the next argument is\n       --  the path name of the object directory..\n \n-      elsif Opt.Object_Directory_Present\n+      elsif Object_Directory_Present\n         and then not Object_Directory_Seen\n       then\n          Object_Directory_Seen := True;\n@@ -6581,7 +6581,7 @@ package body Make is\n \n          if Argv'Length > 2 and then Argv (1 .. 2) = \"-I\" then\n             if Argv (3 .. Argv'Last) = \"-\" then\n-               Opt.Look_In_Primary_Dir := False;\n+               Look_In_Primary_Dir := False;\n \n             elsif Program_Args = Compiler then\n                if Argv (3 .. Argv'Last) /= \"-\" then\n@@ -6683,9 +6683,9 @@ package body Make is\n \n                --  Valid --RTS switch\n \n-               Opt.No_Stdinc := True;\n-               Opt.No_Stdlib := True;\n-               Opt.RTS_Switch := True;\n+               No_Stdinc := True;\n+               No_Stdlib := True;\n+               RTS_Switch := True;\n \n                declare\n                   Src_Path_Name : constant String_Ptr :=\n@@ -6737,7 +6737,7 @@ package body Make is\n          --  -I-\n \n          elsif Argv (2 .. Argv'Last) = \"I-\" then\n-            Opt.Look_In_Primary_Dir := False;\n+            Look_In_Primary_Dir := False;\n \n          --  Forbid  -?-  or  -??-  where ? is any character\n \n@@ -6835,7 +6835,7 @@ package body Make is\n          elsif Argv (2) = 'd'\n            and then Argv'Last = 2\n          then\n-            Opt.Display_Compilation_Progress := True;\n+            Display_Compilation_Progress := True;\n \n          --  -i\n \n@@ -6862,15 +6862,15 @@ package body Make is\n          elsif Argv (2) = 'm'\n            and then Argv'Last = 2\n          then\n-            Opt.Minimal_Recompilation := True;\n+            Minimal_Recompilation := True;\n \n          --  -u\n \n          elsif Argv (2) = 'u'\n            and then Argv'Last = 2\n          then\n             Unique_Compile   := True;\n-            Opt.Compile_Only := True;\n+            Compile_Only := True;\n             Do_Bind_Step     := False;\n             Do_Link_Step     := False;\n \n@@ -6881,7 +6881,7 @@ package body Make is\n          then\n             Unique_Compile_All_Projects := True;\n             Unique_Compile   := True;\n-            Opt.Compile_Only := True;\n+            Compile_Only := True;\n             Do_Bind_Step     := False;\n             Do_Link_Step     := False;\n \n@@ -6962,9 +6962,9 @@ package body Make is\n             --  step are not executed.\n \n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n-            Opt.Operating_Mode := Opt.Check_Semantics;\n-            Opt.Check_Object_Consistency := False;\n-            Opt.Compile_Only             := True;\n+            Operating_Mode := Check_Semantics;\n+            Check_Object_Consistency := False;\n+            Compile_Only             := True;\n             Do_Bind_Step                 := False;\n             Do_Link_Step                 := False;\n \n@@ -6973,7 +6973,7 @@ package body Make is\n             --  Don't pass -nostdlib to gnatlink, it will disable\n             --  linking with all standard library files.\n \n-            Opt.No_Stdlib := True;\n+            No_Stdlib := True;\n \n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n             Add_Switch (Argv, Binder, And_Save => And_Save);\n@@ -6982,19 +6982,20 @@ package body Make is\n \n             --  Pass -nostdinc to the Compiler and to gnatbind\n \n-            Opt.No_Stdinc := True;\n+            No_Stdinc := True;\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n             Add_Switch (Argv, Binder, And_Save => And_Save);\n \n             --  By default all switches with more than one character\n             --  or one character switches which are not in 'a' .. 'z'\n-            --  (except 'C', 'F', and 'M') are passed to the compiler,\n+            --  (except 'C', 'F', 'M' and 'B') are passed to the compiler,\n             --  unless we are dealing with a debug switch (starts with 'd')\n \n          elsif Argv (2) /= 'd'\n            and then Argv (2 .. Argv'Last) /= \"C\"\n            and then Argv (2 .. Argv'Last) /= \"F\"\n            and then Argv (2 .. Argv'Last) /= \"M\"\n+           and then Argv (2 .. Argv'Last) /= \"B\"\n            and then (Argv'Length > 2 or else Argv (2) not in 'a' .. 'z')\n          then\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n@@ -7214,7 +7215,7 @@ package body Make is\n       Prefix : String := \"  -> \")\n    is\n    begin\n-      if not Opt.Verbose_Mode then\n+      if not Verbose_Mode then\n          return;\n       end if;\n "}, {"sha": "2415a3f31d1c825900f79328c7e301e6041f54cc", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -26,7 +26,7 @@\n \n with Err_Vars; use Err_Vars;\n with Namet;    use Namet;\n-with Opt;\n+with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Com;  use Prj.Com;\n@@ -167,6 +167,7 @@ package body Prj.Part is\n \n    procedure Parse_Single_Project\n      (Project       : out Project_Node_Id;\n+      Extends_All   : out Boolean;\n       Path_Name     : String;\n       Extended      : Boolean;\n       From_Extended : Extension_Origin);\n@@ -431,6 +432,7 @@ package body Prj.Part is\n       Store_Comments         : Boolean := False)\n    is\n       Current_Directory : constant String := Get_Current_Dir;\n+      Dummy : Boolean;\n \n    begin\n       --  Save the Packages_To_Check in Prj, so that it is visible from\n@@ -467,6 +469,7 @@ package body Prj.Part is\n \n          Parse_Single_Project\n            (Project       => Project,\n+            Extends_All   => Dummy,\n             Path_Name     => Path_Name,\n             Extended      => False,\n             From_Extended => None);\n@@ -678,6 +681,7 @@ package body Prj.Part is\n \n       Current_With : With_Record;\n       Limited_With : Boolean := False;\n+      Extends_All  : Boolean := False;\n \n    begin\n       Imported_Projects := Empty_Node;\n@@ -775,9 +779,13 @@ package body Prj.Part is\n                if Withed_Project = Empty_Node then\n                   Parse_Single_Project\n                     (Project       => Withed_Project,\n+                     Extends_All   => Extends_All,\n                      Path_Name     => Imported_Path_Name,\n                      Extended      => False,\n                      From_Extended => From_Extended);\n+\n+               else\n+                  Extends_All := Is_Extending_All (Withed_Project);\n                end if;\n \n                if Withed_Project = Empty_Node then\n@@ -805,6 +813,10 @@ package body Prj.Part is\n                   Name_Len := Imported_Path_Name'Length;\n                   Name_Buffer (1 .. Name_Len) := Imported_Path_Name;\n                   Set_Path_Name_Of (Current_Project, Name_Find);\n+\n+                  if Extends_All then\n+                     Set_Is_Extending_All (Current_Project);\n+                  end if;\n                end if;\n             end if;\n          end;\n@@ -817,6 +829,7 @@ package body Prj.Part is\n \n    procedure Parse_Single_Project\n      (Project       : out Project_Node_Id;\n+      Extends_All   : out Boolean;\n       Path_Name     : String;\n       Extended      : Boolean;\n       From_Extended : Extension_Origin)\n@@ -843,6 +856,8 @@ package body Prj.Part is\n       Project_Comment_State : Tree.Comment_State;\n \n    begin\n+      Extends_All := False;\n+\n       declare\n          Normed : String := Normalize_Pathname (Path_Name);\n       begin\n@@ -908,6 +923,8 @@ package body Prj.Part is\n                end if;\n \n             elsif A_Project_Name_And_Node.Extended then\n+               Extends_All := Is_Extending_All (A_Project_Name_And_Node.Node);\n+\n                --  If the imported project is an extended project A, and we are\n                --  in an extended project, replace A with the ultimate project\n                --  extending A.\n@@ -1136,13 +1153,14 @@ package body Prj.Part is\n \n          --  Make sure that gnatmake will use mapping files\n \n-         Opt.Create_Mapping_File := True;\n+         Create_Mapping_File := True;\n \n          --  We are extending another project\n \n          Scan; -- scan past EXTENDS\n \n          if Token = Tok_All then\n+            Extends_All := True;\n             Set_Is_Extending_All (Project);\n             Scan; --  scan past ALL\n          end if;\n@@ -1196,6 +1214,7 @@ package body Prj.Part is\n \n                      Parse_Single_Project\n                        (Project       => Extended_Project,\n+                        Extends_All   => Extends_All,\n                         Path_Name     => Extended_Project_Path_Name,\n                         Extended      => True,\n                         From_Extended => From_Extended);\n@@ -1226,14 +1245,15 @@ package body Prj.Part is\n             With_Clause_Loop :\n             while With_Clause /= Empty_Node loop\n                Imported := Project_Node_Of (With_Clause);\n-               With_Clause := Next_With_Clause_Of (With_Clause);\n \n-               if Is_Extending_All (Imported) then\n+               if Is_Extending_All (With_Clause) then\n                   Error_Msg_Name_1 := Name_Of (Imported);\n                   Error_Msg (\"cannot import extending-all project {\",\n                              Token_Ptr);\n                   exit With_Clause_Loop;\n                end if;\n+\n+               With_Clause := Next_With_Clause_Of (With_Clause);\n             end loop With_Clause_Loop;\n          end;\n       end if;"}, {"sha": "bb550b1b538fca3d4fe88cb15f34f8f1104c78a2", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 83, "deletions": 18, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -817,8 +817,9 @@ package body Prj.Proc is\n       From_Project_Node : Project_Node_Id;\n       Report_Error      : Put_Line_Access)\n    is\n-      Obj_Dir   : Name_Id;\n-      Extending : Project_Id;\n+      Obj_Dir    : Name_Id;\n+      Extending  : Project_Id;\n+      Extending2 : Project_Id;\n \n    begin\n       Error_Report := Report_Error;\n@@ -861,7 +862,7 @@ package body Prj.Proc is\n       end if;\n \n       --  Check that no extended project shares its object directory with\n-      --  another project.\n+      --  another extended project or with its extending project(s).\n \n       if Project /= No_Project then\n          for Extended in 1 .. Projects.Last loop\n@@ -870,45 +871,95 @@ package body Prj.Proc is\n             if Extending /= No_Project then\n                Obj_Dir := Projects.Table (Extended).Object_Directory;\n \n-               for Prj in 1 .. Projects.Last loop\n-                  if Prj /= Extended\n-                    and then Projects.Table (Prj).Sources_Present\n-                    and then Projects.Table (Prj).Object_Directory = Obj_Dir\n+               --  Check that a project being extended does not share its\n+               --  object directory with any project that extends it, directly\n+               --  or indirectly, including a virtual extending project.\n+\n+               --  Start with the project directly extending it\n+\n+               Extending2 := Extending;\n+\n+               while Extending2 /= No_Project loop\n+                  if Projects.Table (Extending2).Sources_Present\n+                    and then\n+                      Projects.Table (Extending2).Object_Directory = Obj_Dir\n                   then\n-                     if Projects.Table (Extending).Virtual then\n+                     if Projects.Table (Extending2).Virtual then\n                         Error_Msg_Name_1 := Projects.Table (Extended).Name;\n \n                         if Error_Report = null then\n                            Error_Msg\n-                             (\"project % cannot be extended by \" &\n-                              \"a virtual project\",\n-                              Projects.Table (Extending).Location);\n+                             (\"project % cannot be extended by a virtual \" &\n+                              \"project with the same object directory\",\n+                              Projects.Table (Extended).Location);\n \n                         else\n                            Error_Report\n                              (\"project \"\"\" &\n                               Get_Name_String (Error_Msg_Name_1) &\n-                              \"\"\" cannot be extended by a virtual project\",\n+                              \"\"\" cannot be extended by a virtual \" &\n+                              \"project with the same object directory\",\n                               Project);\n                         end if;\n \n                      else\n-                        Error_Msg_Name_1 := Projects.Table (Extending).Name;\n+                        Error_Msg_Name_1 :=\n+                          Projects.Table (Extending2).Name;\n                         Error_Msg_Name_2 := Projects.Table (Extended).Name;\n \n                         if Error_Report = null then\n-                           Error_Msg (\"project % cannot extend project %\",\n-                                      Projects.Table (Extending).Location);\n+                           Error_Msg\n+                             (\"project % cannot extend project %\",\n+                              Projects.Table (Extending2).Location);\n+                           Error_Msg\n+                             (\"\\they share the same object directory\",\n+                              Projects.Table (Extending2).Location);\n \n                         else\n                            Error_Report\n                              (\"project \"\"\" &\n                               Get_Name_String (Error_Msg_Name_1) &\n                               \"\"\" cannot extend project \"\"\" &\n-                              Get_Name_String (Error_Msg_Name_2) & '\"',\n+                              Get_Name_String (Error_Msg_Name_2) & \"\"\"\",\n+                              Project);\n+                           Error_Report\n+                             (\"they share the same object directory\",\n                               Project);\n                         end if;\n                      end if;\n+                  end if;\n+\n+                  --  Continue with the next extending project, if any\n+\n+                  Extending2 := Projects.Table (Extending2).Extended_By;\n+               end loop;\n+\n+               --  Check that two projects being extended do not share their\n+               --  project directories.\n+\n+               for Prj in Extended + 1 .. Projects.Last loop\n+                  Extending2 := Projects.Table (Prj).Extended_By;\n+\n+                  if Extending2 /= No_Project\n+                    and then Projects.Table (Prj).Sources_Present\n+                    and then Projects.Table (Prj).Object_Directory = Obj_Dir\n+                    and then not Projects.Table (Extending).Virtual\n+                  then\n+                     Error_Msg_Name_1 := Projects.Table (Extending).Name;\n+                     Error_Msg_Name_2 := Projects.Table (Extended).Name;\n+\n+                     if Error_Report = null then\n+                        Error_Msg (\"project % cannot extend project %\",\n+                                   Projects.Table (Extending).Location);\n+\n+                     else\n+                        Error_Report\n+                          (\"project \"\"\" &\n+                           Get_Name_String (Error_Msg_Name_1) &\n+                           \"\"\" cannot extend project \"\"\" &\n+                           Get_Name_String (Error_Msg_Name_2) & '\"',\n+                           Project);\n+                     end if;\n \n                      Error_Msg_Name_1 := Projects.Table (Extended).Name;\n                      Error_Msg_Name_2 := Projects.Table (Prj).Name;\n@@ -924,7 +975,21 @@ package body Prj.Proc is\n                           (\"project \"\"\" &\n                              Get_Name_String (Error_Msg_Name_1) &\n                              \"\"\" has the same object directory as project \"\"\" &\n-                             Get_Name_String (Error_Msg_Name_2) & '\"',\n+                             Get_Name_String (Error_Msg_Name_2) & \"\"\",\",\n+                           Project);\n+                     end if;\n+\n+                     Error_Msg_Name_1 := Projects.Table (Extending2).Name;\n+\n+                     if Error_Report = null then\n+                        Error_Msg\n+                          (\"\\which is extended by project %\",\n+                           Projects.Table (Extending).Location);\n+\n+                     else\n+                        Error_Report\n+                          (\"which is extended by project \"\"\" &\n+                           Get_Name_String (Error_Msg_Name_1) & '\"',\n                            Project);\n                      end if;\n "}, {"sha": "e8603c67bfb508737671071f410b0d99c6f365ae", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -933,7 +933,9 @@ package body Prj.Tree is\n       pragma Assert\n         (Node /= Empty_Node\n           and then\n-            Project_Nodes.Table (Node).Kind = N_Project);\n+           (Project_Nodes.Table (Node).Kind = N_Project\n+              or else\n+            Project_Nodes.Table (Node).Kind = N_With_Clause));\n       return Project_Nodes.Table (Node).Flag2;\n    end Is_Extending_All;\n \n@@ -1947,7 +1949,9 @@ package body Prj.Tree is\n       pragma Assert\n         (Node /= Empty_Node\n           and then\n-            Project_Nodes.Table (Node).Kind = N_Project);\n+            (Project_Nodes.Table (Node).Kind = N_Project\n+               or else\n+             Project_Nodes.Table (Node).Kind = N_With_Clause));\n       Project_Nodes.Table (Node).Flag2 := True;\n    end Set_Is_Extending_All;\n "}, {"sha": "7192fcee796aa2b7f31ef489edaca7205f23fbf2", "filename": "gcc/ada/prj-tree.ads", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fprj-tree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fprj-tree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.ads?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---             Copyright (C) 2001-2003 Free Software Foundation, Inc.       --\n+--             Copyright (C) 2001-2004 Free Software Foundation, Inc.       --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -245,7 +245,7 @@ package Prj.Tree is\n \n    function Is_Extending_All (Node  : Project_Node_Id) return Boolean;\n    pragma Inline (Is_Extending_All);\n-   --  Only valid for N_Project\n+   --  Only valid for N_Project and N_With_Clause\n \n    function First_Variable_Of\n      (Node : Project_Node_Id) return Variable_Node_Id;\n@@ -798,7 +798,7 @@ package Prj.Tree is\n          --    N_Project - it indicates that there are comments in the project\n          --                source that cannot be kept in the tree.\n          --    N_Project_Declaration\n-         --              - it indixates that there are unkept comment in the\n+         --              - it indicates that there are unkept comments in the\n          --                project.\n \n          Flag2 : Boolean := False;\n@@ -807,6 +807,9 @@ package Prj.Tree is\n          --                project.\n          --    N_Comment - it indicates that the comment is followed by an\n          --                empty line.\n+         --    N_With_Clause\n+         --              - it indicates that the originally imported project\n+         --                is an extending all project.\n \n          Comments : Project_Node_Id := Empty_Node;\n          --  For nodes other that N_Comment_Zones or N_Comment, designates the"}, {"sha": "7e4428f776259a84d00a39d6e14291e00f607431", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b7e429ab799b3003bcd2f83011dd2ee3d7309691/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=b7e429ab799b3003bcd2f83011dd2ee3d7309691", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2004, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -265,8 +265,14 @@ package body Sem_Ch13 is\n          U_Ent := Ent;\n \n       elsif Ekind (Ent) = E_Incomplete_Type then\n+\n+         --  The attribute applies to the full view, set the entity\n+         --  of the attribute definition accordingly.\n+\n          Ent := Underlying_Type (Ent);\n          U_Ent := Ent;\n+         Set_Entity (Nam, Ent);\n+\n       else\n          U_Ent := Underlying_Type (Ent);\n       end if;\n@@ -3035,8 +3041,7 @@ package body Sem_Ch13 is\n \n    function Minimum_Size\n      (T      : Entity_Id;\n-      Biased : Boolean := False)\n-      return   Nat\n+      Biased : Boolean := False) return Nat\n    is\n       Lo     : Uint    := No_Uint;\n       Hi     : Uint    := No_Uint;\n@@ -3253,7 +3258,7 @@ package body Sem_Ch13 is\n       -- Build_Spec --\n       ----------------\n \n-      function  Build_Spec return Node_Id is\n+      function Build_Spec return Node_Id is\n       begin\n          Subp_Id := Make_Defining_Identifier (Loc, Sname);\n \n@@ -3327,7 +3332,7 @@ package body Sem_Ch13 is\n       -- Build_Spec --\n       ----------------\n \n-      function  Build_Spec return Node_Id is\n+      function Build_Spec return Node_Id is\n       begin\n          Subp_Id := Make_Defining_Identifier (Loc, Sname);\n \n@@ -3394,9 +3399,8 @@ package body Sem_Ch13 is\n    ------------------------\n \n    function Rep_Item_Too_Early\n-     (T     : Entity_Id;\n-      N     : Node_Id)\n-      return  Boolean\n+     (T : Entity_Id;\n+      N : Node_Id) return Boolean\n    is\n    begin\n       --  Cannot apply rep items that are not operational items\n@@ -3446,8 +3450,7 @@ package body Sem_Ch13 is\n    function Rep_Item_Too_Late\n      (T     : Entity_Id;\n       N     : Node_Id;\n-      FOnly : Boolean := False)\n-      return  Boolean\n+      FOnly : Boolean := False) return Boolean\n    is\n       S           : Entity_Id;\n       Parent_Type : Entity_Id;"}]}