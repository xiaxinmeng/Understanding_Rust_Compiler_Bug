{"sha": "ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyNzQ2MmVkYzM5OGNhODJlODZjOGM3ZjEzZDlmYWI0OThiYTVjMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-11-27T11:56:36Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-11-27T11:56:36Z"}, "message": "cfgloop.h (struct loop): Document usage of USHRT_MAX for unroll.\n\n\t* cfgloop.h (struct loop): Document usage of USHRT_MAX for unroll.\n\t* loop-unroll.c (decide_unroll_constant_iterations): Implement it.\n\t(decide_unroll_runtime_iterations): Likewise.\n\t(decide_unroll_stupid): Likewise.\n\nFrom-SVN: r255165", "tree": {"sha": "08222828f4dd3f24e1e5561f204474cdf8789d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08222828f4dd3f24e1e5561f204474cdf8789d12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/comments", "author": null, "committer": null, "parents": [{"sha": "39335d1486c5f39182bd0cca6af52a49386319cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39335d1486c5f39182bd0cca6af52a49386319cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39335d1486c5f39182bd0cca6af52a49386319cb"}], "stats": {"total": 83, "additions": 70, "deletions": 13}, "files": [{"sha": "a7066fb7ad1969919d0274c08de78aa0a5033291", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -1,3 +1,10 @@\n+2017-11-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cfgloop.h (struct loop): Document usage of USHRT_MAX for unroll.\n+\t* loop-unroll.c (decide_unroll_constant_iterations): Implement it.\n+\t(decide_unroll_runtime_iterations): Likewise.\n+\t(decide_unroll_stupid): Likewise.\n+\n 2017-11-27  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \tPR target/83109"}, {"sha": "dce01bdd56a355c25ee80573b7f91ecbfada4894", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -221,9 +221,10 @@ struct GTY ((chain_next (\"%h.next\"))) loop {\n   /* True if the loop is part of an oacc kernels region.  */\n   unsigned in_oacc_kernels_region : 1;\n \n-  /* The number of times to unroll the loop.  0, means no information\n-     given, just do what we always do.  A value of 1, means don't unroll\n-     the loop.  */\n+  /* The number of times to unroll the loop.  0 means no information given,\n+     just do what we always do.  A value of 1 means do not unroll the loop.\n+     A value of USHRT_MAX means unroll with no specific unrolling factor.\n+     Other values means unroll with the given unrolling factor.  */\n   unsigned short unroll;\n \n   /* For SIMD loops, this is a unique identifier of the loop, referenced"}, {"sha": "0fdecd7fde2d693a04f4a138023d923d4c9e3eda", "filename": "gcc/loop-unroll.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Floop-unroll.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Floop-unroll.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-unroll.c?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -395,7 +395,7 @@ decide_unroll_constant_iterations (struct loop *loop, int flags)\n     }\n \n   /* Check for an explicit unrolling factor.  */\n-  if (loop->unroll)\n+  if (loop->unroll > 0 && loop->unroll < USHRT_MAX)\n     {\n       /* However we cannot unroll completely at the RTL level a loop with\n \t constant number of iterations; it should have been peeled instead.  */\n@@ -693,7 +693,7 @@ decide_unroll_runtime_iterations (struct loop *loop, int flags)\n   if (targetm.loop_unroll_adjust)\n     nunroll = targetm.loop_unroll_adjust (nunroll, loop);\n \n-  if (loop->unroll)\n+  if (loop->unroll > 0 && loop->unroll < USHRT_MAX)\n     nunroll = loop->unroll;\n \n   /* Skip big loops.  */\n@@ -1177,7 +1177,7 @@ decide_unroll_stupid (struct loop *loop, int flags)\n   if (targetm.loop_unroll_adjust)\n     nunroll = targetm.loop_unroll_adjust (nunroll, loop);\n \n-  if (loop->unroll)\n+  if (loop->unroll > 0 && loop->unroll < USHRT_MAX)\n     nunroll = loop->unroll;\n \n   /* Skip big loops.  */"}, {"sha": "cb3835b3e9de626403186cac2ec77db749629cd2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -1,3 +1,14 @@\n+2017-11-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/unroll1.ads: Remove alignment clause.\n+\t* gnat.dg/unroll2.ads: Likewise.\n+\t* gnat.dg/unroll3.ads: Likewise.\n+\t* gnat.dg/unroll1.adb: Remove bogus comment terminator.\n+\t* gnat.dg/unroll2.adb: Likewise.\n+\t* gnat.dg/unroll3.adb: Likewise.\n+\t* gnat.dg/unroll4.ad[sb]: New testcase.\n+\t* gnat.dg/unroll4_pkg.ads: New helper.\n+\n 2017-11-27  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \tPR target/83109"}, {"sha": "34d8a8f3f388d966483422751162341d4bedd698", "filename": "gcc/testsuite/gnat.dg/unroll1.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll1.adb?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -23,5 +23,5 @@ package body Unroll1 is\n \n end Unroll1;\n \n--- { dg-final { scan-tree-dump-times \"Not unrolling loop .: user didn't want it unrolled completely\" 2 \"cunrolli\" } } */\n--- { dg-final { scan-rtl-dump-times \"Not unrolling loop, user didn't want it unrolled\" 2 \"loop2_unroll\" } } */\n+-- { dg-final { scan-tree-dump-times \"Not unrolling loop .: user didn't want it unrolled completely\" 2 \"cunrolli\" } }\n+-- { dg-final { scan-rtl-dump-times \"Not unrolling loop, user didn't want it unrolled\" 2 \"loop2_unroll\" } }"}, {"sha": "b96762b0da9b8d9a62afbf2bdb489d973d4515ad", "filename": "gcc/testsuite/gnat.dg/unroll1.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll1.ads?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -1,7 +1,6 @@\n package Unroll1 is\n \n    type Sarray is array (1 .. 4) of Float;\n-   for Sarray'Alignment use 16;\n \n    function \"+\" (X, Y : Sarray) return Sarray;\n    procedure Add (X, Y : Sarray; R : out Sarray);"}, {"sha": "e4473cc05580be043ede3dce3b5ca4676c128880", "filename": "gcc/testsuite/gnat.dg/unroll2.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.adb?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -23,4 +23,4 @@ package body Unroll2 is\n \n end Unroll2;\n \n--- { dg-final { scan-tree-dump-times \"note: loop with 3 iterations completely unrolled\" 2 \"cunrolli\" } } */\n+-- { dg-final { scan-tree-dump-times \"note: loop with 3 iterations completely unrolled\" 2 \"cunrolli\" } }"}, {"sha": "342f371f1fec59cd690db3230a6bf9dfd3103c05", "filename": "gcc/testsuite/gnat.dg/unroll2.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll2.ads?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -1,7 +1,6 @@\n package Unroll2 is\n \n    type Sarray is array (1 .. 4) of Float;\n-   for Sarray'Alignment use 16;\n \n    function \"+\" (X, Y : Sarray) return Sarray;\n    procedure Add (X, Y : Sarray; R : out Sarray);"}, {"sha": "ba4e122530aa2202b553f4cba438a24e7f0d13a7", "filename": "gcc/testsuite/gnat.dg/unroll3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.adb?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -23,4 +23,4 @@ package body Unroll3 is\n \n end Unroll3;\n \n--- { dg-final { scan-tree-dump-times \"note: loop with 3 iterations completely unrolled\" 2 \"cunroll\" } } */\n+-- { dg-final { scan-tree-dump-times \"note: loop with 3 iterations completely unrolled\" 2 \"cunroll\" } }"}, {"sha": "8f0cae1cbfd1afd47da213d2c45f959b7a31762b", "filename": "gcc/testsuite/gnat.dg/unroll3.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll3.ads?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -1,7 +1,6 @@\n package Unroll3 is\n \n    type Sarray is array (1 .. 4) of Float;\n-   for Sarray'Alignment use 16;\n \n    function \"+\" (X, Y : Sarray) return Sarray;\n    procedure Add (X, Y : Sarray; R : out Sarray);"}, {"sha": "d9b763ae4015823a1a1387f063992106b18891f6", "filename": "gcc/testsuite/gnat.dg/unroll4.adb", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4.adb?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -0,0 +1,26 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O -fdump-rtl-loop2_unroll-details\" }\n+\n+package body Unroll4 is\n+\n+   function \"+\" (X, Y : Sarray) return Sarray is\n+      R : Sarray;\n+   begin\n+      for I in Sarray'Range loop\n+         pragma Loop_Optimize (Unroll);\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+      return R;\n+   end;\n+\n+   procedure Add (X, Y : Sarray; R : out Sarray) is\n+   begin\n+      for I in Sarray'Range loop\n+         pragma Loop_Optimize (Unroll);\n+         R(I) := X(I) + Y(I);\n+      end loop;\n+   end;\n+\n+end Unroll4;\n+\n+-- { dg-final { scan-rtl-dump-times \"note: loop unrolled 7 times\" 2 \"loop2_unroll\" } }"}, {"sha": "e36bc8070bc0b9e37cb010e34fd02ab15413c853", "filename": "gcc/testsuite/gnat.dg/unroll4.ads", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4.ads?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -0,0 +1,10 @@\n+with Unroll4_Pkg; use Unroll4_Pkg;\n+\n+package Unroll4 is\n+\n+   type Sarray is array (1 .. N) of Float;\n+\n+   function \"+\" (X, Y : Sarray) return Sarray;\n+   procedure Add (X, Y : Sarray; R : out Sarray);\n+\n+end Unroll4;"}, {"sha": "a0a45b007df099d9299fed35baaf9c98181422f5", "filename": "gcc/testsuite/gnat.dg/unroll4_pkg.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff27462edc398ca82e86c8c7f13d9fab498ba5c1/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Funroll4_pkg.ads?ref=ff27462edc398ca82e86c8c7f13d9fab498ba5c1", "patch": "@@ -0,0 +1,5 @@\n+package Unroll4_Pkg is\n+\n+   function N return Positive;\n+\n+end Unroll4_Pkg;"}]}