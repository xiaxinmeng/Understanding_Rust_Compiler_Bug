{"sha": "f8ba88b6a811ca9bb4b8411d3f65c329fb480ee1", "node_id": "C_kwDOANBUbNoAKGY4YmE4OGI2YTgxMWNhOWJiNGI4NDExZDNmNjVjMzI5ZmI0ODBlZTE", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-10-07T01:10:52Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2022-10-07T13:52:52Z"}, "message": "c++: catch parm initialization tweak\n\nWe want to push the INIT_EXPR inside the CLEANUP_POINT_EXPR for the same\nreason we want to push it into the MUST_NOT_THROW_EXPR: any cleanups follow\nthe initialization.\n\ngcc/cp/ChangeLog:\n\n\t* init.cc (expand_default_init): Also push the INIT_EXPR inside a\n\tCLEANUP_POINT_EXPR.", "tree": {"sha": "9175f73298390c300e31c5ce6e2b1336142ccceb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9175f73298390c300e31c5ce6e2b1336142ccceb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8ba88b6a811ca9bb4b8411d3f65c329fb480ee1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ba88b6a811ca9bb4b8411d3f65c329fb480ee1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8ba88b6a811ca9bb4b8411d3f65c329fb480ee1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8ba88b6a811ca9bb4b8411d3f65c329fb480ee1/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a308905c1baf64d0ea4d09d7d92b55e79a2a339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a308905c1baf64d0ea4d09d7d92b55e79a2a339", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a308905c1baf64d0ea4d09d7d92b55e79a2a339"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "0ab0aaabb16b2d6189e6c3179314f35506ae508e", "filename": "gcc/cp/init.cc", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8ba88b6a811ca9bb4b8411d3f65c329fb480ee1/gcc%2Fcp%2Finit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8ba88b6a811ca9bb4b8411d3f65c329fb480ee1/gcc%2Fcp%2Finit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.cc?ref=f8ba88b6a811ca9bb4b8411d3f65c329fb480ee1", "patch": "@@ -2124,19 +2124,20 @@ expand_default_init (tree binfo, tree true_exp, tree exp, tree init, int flags,\n \t    return false;\n \t}\n \n-      if (TREE_CODE (init) == MUST_NOT_THROW_EXPR)\n-\t/* We need to protect the initialization of a catch parm with a\n-\t   call to terminate(), which shows up as a MUST_NOT_THROW_EXPR\n-\t   around the TARGET_EXPR for the copy constructor.  See\n-\t   initialize_handler_parm.  */\n+      /* We need to protect the initialization of a catch parm with a\n+\t call to terminate(), which shows up as a MUST_NOT_THROW_EXPR\n+\t around the TARGET_EXPR for the copy constructor.  See\n+\t initialize_handler_parm.  */\n+      tree *p = &init;\n+      while (TREE_CODE (*p) == MUST_NOT_THROW_EXPR\n+\t     || TREE_CODE (*p) == CLEANUP_POINT_EXPR)\n \t{\n-\t  TREE_OPERAND (init, 0) = build2 (INIT_EXPR, TREE_TYPE (exp), exp,\n-\t\t\t\t\t   TREE_OPERAND (init, 0));\n-\t  TREE_TYPE (init) = void_type_node;\n+\t  /* Avoid voidify_wrapper_expr making a temporary.  */\n+\t  TREE_TYPE (*p) = void_type_node;\n+\t  p = &TREE_OPERAND (*p, 0);\n \t}\n-      else\n-\tinit = build2 (INIT_EXPR, TREE_TYPE (exp), exp, init);\n-      TREE_SIDE_EFFECTS (init) = 1;\n+      *p = build2 (INIT_EXPR, TREE_TYPE (exp), exp, *p);\n+      TREE_SIDE_EFFECTS (*p) = 1;\n       finish_expr_stmt (init);\n       return true;\n     }"}]}