{"sha": "6b00c969c4be4455d900fd7f2d802bb68f45598c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmIwMGM5NjljNGJlNDQ1NWQ5MDBmZDdmMmQ4MDJiYjY4ZjQ1NTk4Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2003-09-11T07:14:12Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2003-09-11T07:14:12Z"}, "message": "cgraphunit.c (cgraph_finalize_function): Add nested arg.\n\n        * cgraphunit.c (cgraph_finalize_function): Add nested arg.\n        Tweek tests for function already generated.\n        (cgraph_expand_function): Don't double announce in !unit-at-a-time.\n        * cgraph.h (cgraph_finalize_function): Update for extra arg.\n        * c-decl.c (finish_function): Likewise.\n\n        * semantics.c (expand_or_defer_fn): Update for new\n        cgraph_finalize_function argument.\n\n        * parse.y (source_end_java_method): Update for new\n        cgraph_finalize_function argument.\n\nFrom-SVN: r71298", "tree": {"sha": "b849ba0e43631f349c7d6dbe1465e4f5bbf2c0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b849ba0e43631f349c7d6dbe1465e4f5bbf2c0de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b00c969c4be4455d900fd7f2d802bb68f45598c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b00c969c4be4455d900fd7f2d802bb68f45598c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b00c969c4be4455d900fd7f2d802bb68f45598c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b00c969c4be4455d900fd7f2d802bb68f45598c/comments", "author": null, "committer": null, "parents": [{"sha": "dd5c7759f3432e795c5ee738eec5e931c0ef45b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd5c7759f3432e795c5ee738eec5e931c0ef45b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd5c7759f3432e795c5ee738eec5e931c0ef45b2"}], "stats": {"total": 71, "additions": 48, "deletions": 23}, "files": [{"sha": "71123fc08c0376f685c43497aa9d0cc7a74d6f91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b00c969c4be4455d900fd7f2d802bb68f45598c", "patch": "@@ -1,3 +1,11 @@\n+2003-09-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* cgraphunit.c (cgraph_finalize_function): Add nested arg.\n+\tTweek tests for function already generated.\n+\t(cgraph_expand_function): Don't double announce in !unit-at-a-time.\n+\t* cgraph.h (cgraph_finalize_function): Update for extra arg.\n+\t* c-decl.c (finish_function): Likewise.\n+\n 2003-09-10  Joe Buck  <jbuck@welsh-buck.org>\n \n \t* c-decl.c (poplevel): Eliminate use of |= in function_body assignment."}, {"sha": "1eb3482cc12d36114c4c0e87a4cbc849573a5f33", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=6b00c969c4be4455d900fd7f2d802bb68f45598c", "patch": "@@ -6144,7 +6144,7 @@ finish_function ()\n   /* ??? Objc emits functions after finalizing the compilation unit.\n      This should be cleaned up later and this conditional removed.  */\n   if (!cgraph_global_info_ready)\n-    cgraph_finalize_function (fndecl);\n+    cgraph_finalize_function (fndecl, false);\n   else\n     c_expand_body (fndecl);\n   current_function_decl = NULL;"}, {"sha": "3ec89b606592851a865a952bc9afd9b71b0271b2", "filename": "gcc/cgraph.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=6b00c969c4be4455d900fd7f2d802bb68f45598c", "patch": "@@ -168,7 +168,7 @@ void cgraph_varpool_finalize_decl (tree);\n bool cgraph_varpool_assemble_pending_decls (void);\n \n /* In cgraphunit.c  */\n-void cgraph_finalize_function (tree);\n+void cgraph_finalize_function (tree, bool);\n void cgraph_finalize_compilation_unit (void);\n void cgraph_create_edges (tree, tree);\n void cgraph_optimize (void);"}, {"sha": "3519359e9bf0fd8dc2f7afb73bcca433ea455d2b", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=6b00c969c4be4455d900fd7f2d802bb68f45598c", "patch": "@@ -106,7 +106,7 @@ decide_is_function_needed (struct cgraph_node *node, tree decl)\n   /* \"extern inline\" functions are never output locally.  */\n   if (DECL_EXTERNAL (decl))\n     return false;\n-  /* We want to emit COMDAT functions only when they turns out to be neccesary.  */\n+  /* We want to emit COMDAT functions only when absolutely neccesary.  */\n   if (DECL_COMDAT (decl))\n     return false;\n   if (!DECL_INLINE (decl)\n@@ -142,34 +142,39 @@ cgraph_assemble_pending_functions (void)\n   return output;\n }\n \n-/* Analyze function once it is parsed.  Set up the local information\n-   available - create cgraph edges for function calls via BODY.  */\n+/* DECL has been parsed.  Take it, queue it, compile it at the whim of the\n+   logic in effect.  If NESTED is true, then our caller cannot stand to have\n+   the garbage collector run at the moment.  We would need to either create\n+   a new GC context, or just not compile right now.  */\n \n void\n-cgraph_finalize_function (tree decl)\n+cgraph_finalize_function (tree decl, bool nested)\n {\n   struct cgraph_node *node = cgraph_node (decl);\n \n   if (node->local.finalized)\n     {\n       /* As an GCC extension we allow redefinition of the function.  The\n-\t semantics when both copies of bodies differ is not well defined.  We\n-\t replace the old body with new body so in unit at a time mode we always\n-\t use new body, while in normal mode we may end up with old body inlined\n-\t into some functions and new body expanded and inlined in others.\n+\t semantics when both copies of bodies differ is not well defined.\n+\t We replace the old body with new body so in unit at a time mode\n+\t we always use new body, while in normal mode we may end up with\n+\t old body inlined into some functions and new body expanded and\n+\t inlined in others.\n \t \n-\t ??? It may make more sense to use one body for inlining and other body\n-\t for expanding the function but this is dificult to do.  */\n-      /* Reset our datastructures so we can analyze the function body\n-\t again.  */\n+\t ??? It may make more sense to use one body for inlining and other\n+\t body for expanding the function but this is dificult to do.  */\n+\n+      if (TREE_ASM_WRITTEN (decl))\n+\tabort ();\n+\n+      /* Reset our datastructures so we can analyze the function again.  */\n       memset (&node->local, 0, sizeof (node->local));\n       memset (&node->global, 0, sizeof (node->global));\n       memset (&node->rtl, 0, sizeof (node->rtl));\n       node->analyzed = false;\n-      if (node->output)\n-\tabort ();\n       while (node->callees)\n \tcgraph_remove_call (node->decl, node->callees->callee->decl);\n+\n       /* We may need to re-queue the node for assembling in case\n          we already proceeded it and ignored as not needed.  */\n       if (node->reachable && !flag_unit_at_a_time)\n@@ -183,6 +188,7 @@ cgraph_finalize_function (tree decl)\n \t    node->reachable = 0;\n \t}\n     }\n+\n   notice_global_symbol (decl);\n   node->decl = decl;\n   node->local.finalized = true;\n@@ -195,13 +201,13 @@ cgraph_finalize_function (tree decl)\n   if (decide_is_function_needed (node, decl))\n     cgraph_mark_needed_node (node);\n \n-  /* If not unit at a time, go ahead and emit everything we've\n-     found to be reachable at this time.  Do this only at top-level.  */\n-  if (!node->origin)\n+  /* If not unit at a time, go ahead and emit everything we've found\n+     to be reachable at this time.  */\n+  if (!nested)\n     cgraph_assemble_pending_functions ();\n \n   /* If we've not yet emitted decl, tell the debug info about it.  */\n-  if (flag_unit_at_a_time || !node->reachable)\n+  if (!TREE_ASM_WRITTEN (decl))\n     (*debug_hooks->deferred_inline_function) (decl);\n }\n \n@@ -465,7 +471,8 @@ cgraph_expand_function (struct cgraph_node *node)\n   tree decl = node->decl;\n   struct cgraph_edge *e;\n \n-  announce_function (decl);\n+  if (flag_unit_at_a_time)\n+    announce_function (decl);\n \n   cgraph_optimize_function (node);\n "}, {"sha": "5c123b97bcb78e3f3070097b5a834c07d67cad22", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6b00c969c4be4455d900fd7f2d802bb68f45598c", "patch": "@@ -1,3 +1,8 @@\n+2003-09-11  Richard Henderson  <rth@redhat.com>\n+\n+\t* semantics.c (expand_or_defer_fn): Update for new\n+\tcgraph_finalize_function argument.\n+\n 2003-09-10  Richard Henderson  <rth@redhat.com>\n \n \t* decl2.c (cxx_callgraph_analyze_expr): Mark argument unused."}, {"sha": "b4ea1a18563f5dd3f493777e66d7fee76d97996c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=6b00c969c4be4455d900fd7f2d802bb68f45598c", "patch": "@@ -2940,7 +2940,7 @@ expand_or_defer_fn (tree fn)\n     import_export_decl (fn);\n \n   /* Expand or defer, at the whim of the compilation unit manager.  */\n-  cgraph_finalize_function (fn);\n+  cgraph_finalize_function (fn, function_depth > 1);\n }\n \n /* Helper function for walk_tree, used by finish_function to override all"}, {"sha": "337c2b1066cc9a211aab68daaa991bf1969df033", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=6b00c969c4be4455d900fd7f2d802bb68f45598c", "patch": "@@ -1,3 +1,8 @@\n+2003-09-11  Richard Henderson  <rth@redhat.com>\n+\n+        * parse.y (source_end_java_method): Update for new\n+        cgraph_finalize_function argument.\n+\n 2003-09-09  Richard Henderson  <rth@redhat.com>\n \n         * parse.y (source_end_java_method): Update call to"}, {"sha": "a5064e18465afde11729515f2a01f540ba5c5db6", "filename": "gcc/java/parse.y", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b00c969c4be4455d900fd7f2d802bb68f45598c/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=6b00c969c4be4455d900fd7f2d802bb68f45598c", "patch": "@@ -7474,7 +7474,7 @@ source_end_java_method (void)\n   /* In unit-at-a-time mode, don't expand the method yet.  */\n   if (DECL_SAVED_TREE (fndecl) && flag_unit_at_a_time)\n     {\n-      cgraph_finalize_function (fndecl);\n+      cgraph_finalize_function (fndecl, false);\n       current_function_decl = NULL_TREE;\n       java_parser_context_restore_global ();\n       return;"}]}