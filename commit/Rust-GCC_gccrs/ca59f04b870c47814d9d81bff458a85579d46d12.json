{"sha": "ca59f04b870c47814d9d81bff458a85579d46d12", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E1OWYwNGI4NzBjNDc4MTRkOWQ4MWJmZjQ1OGE4NTU3OWQ0NmQxMg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-09-04T17:05:39Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-09-04T17:05:39Z"}, "message": "re PR libobjc/23108 (alignment bug in libobjc/archive.c)\n\n2005-09-04  Andrew Pinski  <pinskia@physics.uc.edu>\n            Rasmus Hahn  <rassahah@neofonie.de>\n\n        PR libobjc/23108\n        * objc.dg/type-stream-1.m: New test.\n\n2005-09-04  Andrew Pinski  <pinskia@physics.uc.edu>\n            Rasmus Hahn  <rassahah@neofonie.de>\n\n        PR libobjc/23108\n        * archive.c (objc_write_type): Correct the element offset.\n        (objc_read_type): Likewise.\n\nCo-Authored-By: Rasmus Hahn <rassahah@neofonie.de>\n\nFrom-SVN: r103832", "tree": {"sha": "a90979153c5fafc3922a43e525762804418cabb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a90979153c5fafc3922a43e525762804418cabb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca59f04b870c47814d9d81bff458a85579d46d12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca59f04b870c47814d9d81bff458a85579d46d12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca59f04b870c47814d9d81bff458a85579d46d12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca59f04b870c47814d9d81bff458a85579d46d12/comments", "author": null, "committer": null, "parents": [{"sha": "1c9ef36d01436421d7f70b19bb1c3724e4226bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c9ef36d01436421d7f70b19bb1c3724e4226bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c9ef36d01436421d7f70b19bb1c3724e4226bd7"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "d9a5e5342164c3469a47c1f4fd8a83a425d83120", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca59f04b870c47814d9d81bff458a85579d46d12/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca59f04b870c47814d9d81bff458a85579d46d12/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ca59f04b870c47814d9d81bff458a85579d46d12", "patch": "@@ -1,3 +1,9 @@\n+2005-09-04  Andrew Pinski  <pinskia@physics.uc.edu>\n+            Rasmus Hahn  <rassahah@neofonie.de>\n+\n+\tPR libobjc/23108\n+\t* objc.dg/type-stream-1.m: New test.\n+\n 2005-09-04  Tobias Schl\"uter  <tobias.shclueter@physik.uni-muenchen.de>\n \n \tPR fortran/23661"}, {"sha": "edc04e6467bddddc346831c748f9e9f9a7cf5bba", "filename": "gcc/testsuite/objc.dg/type-stream-1.m", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca59f04b870c47814d9d81bff458a85579d46d12/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-stream-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca59f04b870c47814d9d81bff458a85579d46d12/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-stream-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Ftype-stream-1.m?ref=ca59f04b870c47814d9d81bff458a85579d46d12", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-options \"-fgnu-runtime\" } */\n+/* { dg-do run } */\n+#include <objc/typedstream.h>\n+#include <stdio.h>\n+#include <stdlib.h>\n+\n+int main (void)\n+{\n+  FILE *f; TypedStream *ts;\n+  struct T { int a, b; } x = { 1, 2 };\n+  f = fopen (\"foo\", \"w\"); ts = objc_open_typed_stream (f, OBJC_WRITEONLY);\n+  objc_write_type (ts, @encode(struct T), &x);\n+  objc_close_typed_stream (ts); fclose (f);\n+  f = fopen (\"foo\", \"r\"); ts = objc_open_typed_stream (f, OBJC_READONLY);\n+  struct T y;\n+  objc_read_type (ts, @encode(struct T), &y);\n+  if (y.a != 1)\n+   abort ();\n+  if (y.b != 2)\n+   abort ();\n+  objc_close_typed_stream (ts); fclose (f);\n+  remove (\"foo\");\n+  return 0;\n+}\n+"}, {"sha": "81e11ccbd5a47e3144c8e044e4d808bca33f3b74", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca59f04b870c47814d9d81bff458a85579d46d12/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca59f04b870c47814d9d81bff458a85579d46d12/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=ca59f04b870c47814d9d81bff458a85579d46d12", "patch": "@@ -1,3 +1,10 @@\n+2005-09-04  Andrew Pinski  <pinskia@physics.uc.edu>\n+            Rasmus Hahn  <rassahah@neofonie.de>\n+\n+\tPR libobjc/23108\n+\t* archive.c (objc_write_type): Correct the element offset.\n+\t(objc_read_type): Likewise.\n+\n 2005-08-17  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* All files: Update FSF address."}, {"sha": "992a69600d4a3295cddd0438cbf4f1a298c9b006", "filename": "libobjc/archive.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca59f04b870c47814d9d81bff458a85579d46d12/libobjc%2Farchive.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca59f04b870c47814d9d81bff458a85579d46d12/libobjc%2Farchive.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Farchive.c?ref=ca59f04b870c47814d9d81bff458a85579d46d12", "patch": "@@ -1069,7 +1069,7 @@ objc_write_type (TypedStream *stream, const char *type, const void *data)\n       while (*type != _C_STRUCT_E)\n \t{\n \t  align = objc_alignof_type (type);       /* padd to alignment */\n-\t  acc_size += ROUND (acc_size, align);\n+\t  acc_size = ROUND (acc_size, align);\n \t  objc_write_type (stream, type, ((char *) data) + acc_size);\n \t  acc_size += objc_sizeof_type (type);   /* add component size */\n \t  type = objc_skip_typespec (type);\t /* skip component */\n@@ -1165,7 +1165,7 @@ objc_read_type(TypedStream *stream, const char *type, void *data)\n       while (*type != _C_STRUCT_E)\n \t{\n \t  align = objc_alignof_type (type);       /* padd to alignment */\n-\t  acc_size += ROUND (acc_size, align);\n+\t  acc_size = ROUND (acc_size, align);\n \t  objc_read_type (stream, type, ((char*)data)+acc_size);\n \t  acc_size += objc_sizeof_type (type);   /* add component size */\n \t  type = objc_skip_typespec (type);\t /* skip component */"}]}