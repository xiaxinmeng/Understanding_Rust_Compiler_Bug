{"sha": "18c0ed4b46990c504525aa4928aab45907c8256d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThjMGVkNGI0Njk5MGM1MDQ1MjVhYTQ5MjhhYWI0NTkwN2M4MjU2ZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2019-07-09T17:30:34Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2019-07-09T17:30:34Z"}, "message": "rs6000-internal.h (create_TOC_reference): Delete.\n\n2019-07-09  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* config/rs6000/rs6000-internal.h (create_TOC_reference): Delete.\n\t* config/rs6000/rs6000-logue.c (create_TOC_reference): Move\n\tfunction from rs6000-logue.c back to rs6000.c.\n\t* config/rs6000/rs6000.c (create_TOC_reference): Likewise.\n\nFrom-SVN: r273309", "tree": {"sha": "00a03820eaa693fb9ce0138b1fcdbb7bfc8721b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00a03820eaa693fb9ce0138b1fcdbb7bfc8721b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18c0ed4b46990c504525aa4928aab45907c8256d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c0ed4b46990c504525aa4928aab45907c8256d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c0ed4b46990c504525aa4928aab45907c8256d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c0ed4b46990c504525aa4928aab45907c8256d/comments", "author": null, "committer": null, "parents": [{"sha": "6c1dae73cd2ceb6a326f786f6d4e8674863de45e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c1dae73cd2ceb6a326f786f6d4e8674863de45e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c1dae73cd2ceb6a326f786f6d4e8674863de45e"}], "stats": {"total": 82, "additions": 46, "deletions": 36}, "files": [{"sha": "dc34222f4d9e7d9d70bc1c0132afb49169c24f77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ed4b46990c504525aa4928aab45907c8256d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ed4b46990c504525aa4928aab45907c8256d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=18c0ed4b46990c504525aa4928aab45907c8256d", "patch": "@@ -1,3 +1,10 @@\n+2019-07-09  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-internal.h (create_TOC_reference): Delete.\n+\t* config/rs6000/rs6000-logue.c (create_TOC_reference): Move\n+\tfunction from rs6000-logue.c back to rs6000.c.\n+\t* config/rs6000/rs6000.c (create_TOC_reference): Likewise.\n+\n 2019-07-09  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/61339"}, {"sha": "c526967a3f78b89518bb95503fcc4961784816f9", "filename": "gcc/config/rs6000/rs6000-internal.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ed4b46990c504525aa4928aab45907c8256d/gcc%2Fconfig%2Frs6000%2Frs6000-internal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ed4b46990c504525aa4928aab45907c8256d/gcc%2Fconfig%2Frs6000%2Frs6000-internal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-internal.h?ref=18c0ed4b46990c504525aa4928aab45907c8256d", "patch": "@@ -92,7 +92,6 @@ extern void rs6000_emit_prologue_components (sbitmap components);\n extern void rs6000_emit_epilogue_components (sbitmap components);\n extern void rs6000_set_handled_components (sbitmap components);\n extern rs6000_stack_t * rs6000_stack_info (void);\n-extern rtx create_TOC_reference (rtx symbol, rtx largetoc_reg);\n extern rtx rs6000_got_sym (void);\n extern struct machine_function *rs6000_init_machine_status (void);\n extern bool save_reg_p (int reg);"}, {"sha": "acc11df0f2d1909322f4b2b044773928885b6fed", "filename": "gcc/config/rs6000/rs6000-logue.c", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ed4b46990c504525aa4928aab45907c8256d/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ed4b46990c504525aa4928aab45907c8256d/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-logue.c?ref=18c0ed4b46990c504525aa4928aab45907c8256d", "patch": "@@ -1406,41 +1406,6 @@ uses_TOC (void)\n }\n #endif\n \n-rtx\n-create_TOC_reference (rtx symbol, rtx largetoc_reg)\n-{\n-  rtx tocrel, tocreg, hi;\n-\n-  if (TARGET_DEBUG_ADDR)\n-    {\n-      if (SYMBOL_REF_P (symbol))\n-\tfprintf (stderr, \"\\ncreate_TOC_reference, (symbol_ref %s)\\n\",\n-\t\t XSTR (symbol, 0));\n-      else\n-\t{\n-\t  fprintf (stderr, \"\\ncreate_TOC_reference, code %s:\\n\",\n-\t\t   GET_RTX_NAME (GET_CODE (symbol)));\n-\t  debug_rtx (symbol);\n-\t}\n-    }\n-\n-  if (!can_create_pseudo_p ())\n-    df_set_regs_ever_live (TOC_REGISTER, true);\n-\n-  tocreg = gen_rtx_REG (Pmode, TOC_REGISTER);\n-  tocrel = gen_rtx_UNSPEC (Pmode, gen_rtvec (2, symbol, tocreg), UNSPEC_TOCREL);\n-  if (TARGET_CMODEL == CMODEL_SMALL || can_create_pseudo_p ())\n-    return tocrel;\n-\n-  hi = gen_rtx_HIGH (Pmode, copy_rtx (tocrel));\n-  if (largetoc_reg != NULL)\n-    {\n-      emit_move_insn (largetoc_reg, hi);\n-      hi = largetoc_reg;\n-    }\n-  return gen_rtx_LO_SUM (Pmode, hi, tocrel);\n-}\n-\n /* Issue assembly directives that create a reference to the given DWARF\n    FRAME_TABLE_LABEL from the current function section.  */\n void"}, {"sha": "ccc9d764382958d2a16b6ae4e0fa6807af8ac1e7", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18c0ed4b46990c504525aa4928aab45907c8256d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18c0ed4b46990c504525aa4928aab45907c8256d/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=18c0ed4b46990c504525aa4928aab45907c8256d", "patch": "@@ -7735,6 +7735,45 @@ constant_pool_expr_p (rtx op)\n \t  && ASM_OUTPUT_SPECIAL_POOL_ENTRY_P (get_pool_constant (base), Pmode));\n }\n \n+/* Create a TOC reference for symbol_ref SYMBOL.  If LARGETOC_REG is non-null,\n+   use that as the register to put the HIGH value into if register allocation\n+   is already done.  */\n+\n+rtx\n+create_TOC_reference (rtx symbol, rtx largetoc_reg)\n+{\n+  rtx tocrel, tocreg, hi;\n+\n+  if (TARGET_DEBUG_ADDR)\n+    {\n+      if (SYMBOL_REF_P (symbol))\n+\tfprintf (stderr, \"\\ncreate_TOC_reference, (symbol_ref %s)\\n\",\n+\t\t XSTR (symbol, 0));\n+      else\n+\t{\n+\t  fprintf (stderr, \"\\ncreate_TOC_reference, code %s:\\n\",\n+\t\t   GET_RTX_NAME (GET_CODE (symbol)));\n+\t  debug_rtx (symbol);\n+\t}\n+    }\n+\n+  if (!can_create_pseudo_p ())\n+    df_set_regs_ever_live (TOC_REGISTER, true);\n+\n+  tocreg = gen_rtx_REG (Pmode, TOC_REGISTER);\n+  tocrel = gen_rtx_UNSPEC (Pmode, gen_rtvec (2, symbol, tocreg), UNSPEC_TOCREL);\n+  if (TARGET_CMODEL == CMODEL_SMALL || can_create_pseudo_p ())\n+    return tocrel;\n+\n+  hi = gen_rtx_HIGH (Pmode, copy_rtx (tocrel));\n+  if (largetoc_reg != NULL)\n+    {\n+      emit_move_insn (largetoc_reg, hi);\n+      hi = largetoc_reg;\n+    }\n+  return gen_rtx_LO_SUM (Pmode, hi, tocrel);\n+}\n+\n /* These are only used to pass through from print_operand/print_operand_address\n    to rs6000_output_addr_const_extra over the intervening function\n    output_addr_const which is not target code.  */"}]}