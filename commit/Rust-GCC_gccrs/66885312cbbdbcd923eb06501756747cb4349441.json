{"sha": "66885312cbbdbcd923eb06501756747cb4349441", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjY4ODUzMTJjYmJkYmNkOTIzZWIwNjUwMTc1Njc0N2NiNDM0OTQ0MQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-05-24T07:24:26Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-05-24T07:24:26Z"}, "message": "Darwin, x86, testsuite - Make match strings more specific.\n\nSome of the i386.exp tests fail on Darwin (and at least one passes\nincorrectly on Linux) because their scan-asm match strings are too\ngeneral.  In some cases the strings also match instances in the .file\nand size directives or in comment output.  This patch makes the match\nstrings more specific.\n\n2019-05-24  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* gcc.target/i386/pconfig-1.c: Scan for the string in the generated\n\tcode, not in comments or miscellaneous directives. Adjust expected\n\tcount.\n\t* gcc.target/i386/pr18041-1.c: Likewise.\n\t* gcc.target/i386/pr18041-2.c: Likewise.\n\t* gcc.target/i386/wbinvd-1.c: Likewise.\n\t* gcc.target/i386/wbnoinvd-1.c: Likewise.\n\t* gcc.target/i386/pr66819-3.c: Specifically, check that there is no\n\tcall to \"bar\".\n\t* gcc.target/i386/pr66819-4.c: Likewise.\n\t* gcc.target/i386/pr82662.c\n\t* gcc.target/i386/ptwrite2.c: Make the checks look for the specific\n\tdestination register, don't try the m32 test on m64 targets.\n\nFrom-SVN: r271591", "tree": {"sha": "2418bf28f05c5ca2f6e7d72011d02c58deb3e471", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2418bf28f05c5ca2f6e7d72011d02c58deb3e471"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66885312cbbdbcd923eb06501756747cb4349441", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66885312cbbdbcd923eb06501756747cb4349441", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66885312cbbdbcd923eb06501756747cb4349441", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66885312cbbdbcd923eb06501756747cb4349441/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ef1d2e235e7990e499c91fcc7760e681c242983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef1d2e235e7990e499c91fcc7760e681c242983", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef1d2e235e7990e499c91fcc7760e681c242983"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "40b4c0c12720128e971070276e8c30c139a9867a", "filename": "gcc/testsuite/gcc.target/i386/pconfig-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpconfig-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpconfig-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpconfig-1.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mpconfig\" } */\n-/* { dg-final { scan-assembler-times \"pconfig\" 5 } } */\n+/* { dg-final { scan-assembler-times {\\tpconfig} 2 } } */\n \n #include <x86intrin.h>\n "}, {"sha": "dafe5a82d333b07c6f32aeafa5b99310880e7eab", "filename": "gcc/testsuite/gcc.target/i386/pr18041-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-1.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -9,5 +9,5 @@ foo (struct B *b)\n     b->bit0 = b->bit0 | b->bit1;\n }\n \n-/* { dg-final { scan-assembler-times \"and\" 1 } } */\n-/* { dg-final { scan-assembler-times \"or\" 1 } } */\n+/* { dg-final { scan-assembler-times {\\tand[l|q]} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tor[l|q]} 1 } } */"}, {"sha": "1d7748bccc4ed70b3ddb84edab00654ac4415a5e", "filename": "gcc/testsuite/gcc.target/i386/pr18041-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr18041-2.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -10,5 +10,5 @@ bar  (struct B *b, int x)\n }\n \n /* This fails to combine in 32bit mode but not for x32.  */\n-/* { dg-final { scan-assembler-times \"and\" 1 { xfail { { ! x32 } && ilp32 } } } } */\n-/* { dg-final { scan-assembler-times \"or\" 1 { xfail { { ! x32 } && ilp32 } } } } */\n+/* { dg-final { scan-assembler-times {\\tand[lq]} 1 { xfail { { ! x32 } && ilp32 } } } } */\n+/* { dg-final { scan-assembler-times {\\tor} 1 { xfail { { ! x32 } && ilp32 } } } } */"}, {"sha": "76e3726b38ae560906822752bfd497b2d6a536a5", "filename": "gcc/testsuite/gcc.target/i386/pr66819-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66819-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66819-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66819-3.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target ia32 } } */\n /* { dg-options \"-O2 -mregparm=3\" } */\n-/* { dg-final { scan-assembler-not \"call\" } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]+_?bar} } } */\n \n void (*bar)(int, int);\n "}, {"sha": "143360d0de38d3c7d22f5d4d785af96fa5c45704", "filename": "gcc/testsuite/gcc.target/i386/pr66819-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66819-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66819-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr66819-4.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target ia32 } } */\n /* { dg-options \"-O2 -mregparm=3\" } */\n-/* { dg-final { scan-assembler-not \"call\" } } */\n+/* { dg-final { scan-assembler-not {call[ \\t]+_?bar} } } */\n \n #include <stdarg.h>\n "}, {"sha": "ec08edc9824e5b90abf5eea350a2627b465233d5", "filename": "gcc/testsuite/gcc.target/i386/pr82662.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82662.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82662.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr82662.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -23,4 +23,4 @@ int f9 (S x, S y) { return x >= y; }\n int f10 (S x, S y) { return x < y; }\n int f11 (S x, S y) { return x <= y; }\n \n-/* { dg-final { scan-assembler-times {\\mset} 12 } } */\n+/* { dg-final { scan-assembler-times {\\tset} 12 } } */"}, {"sha": "be6b23eb838e7e8de58f5f6b3a8d1b21acee2635", "filename": "gcc/testsuite/gcc.target/i386/ptwrite2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fptwrite2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fptwrite2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fptwrite2.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mptwrite \" } */\n-/* { dg-final { scan-assembler \"ptwrite\\[^\\n\\r\\]+r\" } } */\n-/* { dg-final { scan-assembler \"ptwrite\\[^\\n\\r\\]+e\" } } */\n+/* { dg-final { scan-assembler {ptwrite[^\\n\\r]+%eax} } } */\n+/* { dg-final { scan-assembler {ptwrite[^\\n\\r]+%rax} { target lp64 } } } */\n \n #include <x86intrin.h>\n "}, {"sha": "9290d9b1945c68a07475d405564681ad3c1f6150", "filename": "gcc/testsuite/gcc.target/i386/wbinvd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwbinvd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwbinvd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwbinvd-1.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n-/* { dg-final { scan-assembler-times \"wbinvd\" 2 } } */\n+/* { dg-final { scan-assembler-times {\\twbinvd} 1 } } */\n \n #include \"immintrin.h\"\n "}, {"sha": "697f148b26cec577e702e427d06164a08728e1d2", "filename": "gcc/testsuite/gcc.target/i386/wbnoinvd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwbnoinvd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66885312cbbdbcd923eb06501756747cb4349441/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwbnoinvd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fwbnoinvd-1.c?ref=66885312cbbdbcd923eb06501756747cb4349441", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mwbnoinvd\" } */\n-/* { dg-final { scan-assembler-times \"wbnoinvd\" 2 } } */\n+/* { dg-final { scan-assembler-times {\\twbnoinvd} 1 } } */\n \n #include \"x86intrin.h\"\n "}]}