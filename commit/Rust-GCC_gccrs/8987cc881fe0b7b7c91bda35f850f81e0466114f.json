{"sha": "8987cc881fe0b7b7c91bda35f850f81e0466114f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk4N2NjODgxZmUwYjdiN2M5MWJkYTM1Zjg1MGY4MWUwNDY2MTE0Zg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-01-28T18:52:44Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-01-28T18:52:44Z"}, "message": "verify.cc (class _Jv_BytecodeVerifier): `nargs' byte is number of words, not number of arguments.\n\n\t* verify.cc (class _Jv_BytecodeVerifier) [op_invokeinterface]:\n\t`nargs' byte is number of words, not number of arguments.\n\nFrom-SVN: r49292", "tree": {"sha": "53e82853f723a42c220adfb09d0d0b52ab9783c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53e82853f723a42c220adfb09d0d0b52ab9783c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8987cc881fe0b7b7c91bda35f850f81e0466114f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8987cc881fe0b7b7c91bda35f850f81e0466114f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8987cc881fe0b7b7c91bda35f850f81e0466114f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8987cc881fe0b7b7c91bda35f850f81e0466114f/comments", "author": null, "committer": null, "parents": [{"sha": "e83cb5f0179be58ba7829f732a2ec824c47a388d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e83cb5f0179be58ba7829f732a2ec824c47a388d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e83cb5f0179be58ba7829f732a2ec824c47a388d"}], "stats": {"total": 28, "additions": 21, "deletions": 7}, "files": [{"sha": "1dedce8b966ac6bdfceaaf4e6ddfe9a3c828a55b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8987cc881fe0b7b7c91bda35f850f81e0466114f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8987cc881fe0b7b7c91bda35f850f81e0466114f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8987cc881fe0b7b7c91bda35f850f81e0466114f", "patch": "@@ -1,3 +1,8 @@\n+2002-01-28  Tom Tromey  <tromey@redhat.com>\n+\n+\t* verify.cc (class _Jv_BytecodeVerifier) [op_invokeinterface]:\n+\t`nargs' byte is number of words, not number of arguments.\n+\n 2002-01-27  Tom Tromey  <tromey@redhat.com>\n \n \t* java/awt/event/MouseEvent.java (modifiers): Removed field."}, {"sha": "910083104877b228520ac8255ab8ebb2eef4db55", "filename": "libjava/verify.cc", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8987cc881fe0b7b7c91bda35f850f81e0466114f/libjava%2Fverify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8987cc881fe0b7b7c91bda35f850f81e0466114f/libjava%2Fverify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fverify.cc?ref=8987cc881fe0b7b7c91bda35f850f81e0466114f", "patch": "@@ -2653,16 +2653,15 @@ class _Jv_BytecodeVerifier\n \t\t\t\t\t opcode == op_invokeinterface,\n \t\t\t\t\t &method_name,\n \t\t\t\t\t &method_signature);\n-\t      int arg_count = _Jv_count_arguments (method_signature);\n+\t      // NARGS is only used when we're processing\n+\t      // invokeinterface.  It is simplest for us to compute it\n+\t      // here and then verify it later.\n+\t      int nargs = 0;\n \t      if (opcode == op_invokeinterface)\n \t\t{\n-\t\t  int nargs = get_byte ();\n-\t\t  if (nargs == 0)\n-\t\t    verify_fail (\"too few arguments to invokeinterface\");\n+\t\t  nargs = get_byte ();\n \t\t  if (get_byte () != 0)\n \t\t    verify_fail (\"invokeinterface dummy byte is wrong\");\n-\t\t  if (nargs - 1 != arg_count)\n-\t\t    verify_fail (\"wrong argument count for invokeinterface\");\n \t\t}\n \n \t      bool is_init = false;\n@@ -2676,10 +2675,20 @@ class _Jv_BytecodeVerifier\n \t\tverify_fail (\"can't invoke method starting with `<'\");\n \n \t      // Pop arguments and check types.\n+\t      int arg_count = _Jv_count_arguments (method_signature);\n \t      type arg_types[arg_count];\n \t      compute_argument_types (method_signature, arg_types);\n \t      for (int i = arg_count - 1; i >= 0; --i)\n-\t\tpop_type (arg_types[i]);\n+\t\t{\n+\t\t  // This is only used for verifying the byte for\n+\t\t  // invokeinterface.\n+\t\t  nargs -= arg_types[i].depth ();\n+\t\t  pop_type (arg_types[i]);\n+\t\t}\n+\n+\t      if (opcode == op_invokeinterface\n+\t\t  && nargs != 1)\n+\t\tverify_fail (\"wrong argument count for invokeinterface\");\n \n \t      if (opcode != op_invokestatic)\n \t\t{"}]}