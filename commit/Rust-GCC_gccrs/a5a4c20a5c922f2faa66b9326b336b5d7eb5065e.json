{"sha": "a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVhNGMyMGE1YzkyMmYyZmFhNjZiOTMyNmIzMzZiNWQ3ZWI1MDY1ZQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-03-25T15:20:44Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-03-25T15:20:44Z"}, "message": "arm.md (f_sels, f_seld): New types.\n\ngcc/\n2013-03-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.md (f_sels, f_seld): New types.\n\t(*cmov<mode>): New pattern.\n\t* config/arm/predicates.md (arm_vsel_comparison_operator): New\n\tpredicate.\n\ngcc/testsuite/\n2013-03-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* gcc.target/arm/vseleqdf.c: New test.\n\t* gcc.target/arm/vseleqsf.c: Likewise.\n\t* gcc.target/arm/vselgedf.c: Likewise.\n\t* gcc.target/arm/vselgesf.c: Likewise.\n\t* gcc.target/arm/vselgtdf.c: Likewise.\n\t* gcc.target/arm/vselgtsf.c: Likewise.\n\t* gcc.target/arm/vselledf.c: Likewise.\n\t* gcc.target/arm/vsellesf.c: Likewise.\n\t* gcc.target/arm/vselltdf.c: Likewise.\n\t* gcc.target/arm/vselltsf.c: Likewise.\n\t* gcc.target/arm/vselnedf.c: Likewise.\n\t* gcc.target/arm/vselnesf.c: Likewise.\n\t* gcc.target/arm/vselvcdf.c: Likewise.\n\t* gcc.target/arm/vselvcsf.c: Likewise.\n\t* gcc.target/arm/vselvsdf.c: Likewise.\n\t* gcc.target/arm/vselvssf.c: Likewise.\n\nFrom-SVN: r197052", "tree": {"sha": "5dac6354cb8b2be5193e42c68facf0026b998ee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dac6354cb8b2be5193e42c68facf0026b998ee3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5784ce6249b20197e3082cc592c3640121dc020", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5784ce6249b20197e3082cc592c3640121dc020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5784ce6249b20197e3082cc592c3640121dc020"}], "stats": {"total": 277, "additions": 277, "deletions": 0}, "files": [{"sha": "fe328374d97f0d33aad80d81de4609154eb46e8e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -1,3 +1,10 @@\n+2013-03-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (f_sels, f_seld): New types.\n+\t(*cmov<mode>): New pattern.\n+\t* config/arm/predicates.md (arm_vsel_comparison_operator): New\n+\tpredicate.\n+\n 2013-03-25  Kai Tietz  <ktietz@redhat.com>\n \n \t* config/i386/xm-mingw32.h (__USE_MINGW_ANSI_STDIO): Enable"}, {"sha": "8895080cb0322fa1da63551749dfbea2bb0ebff5", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -288,6 +288,8 @@\n   f_2_r,\\\n   r_2_f,\\\n   f_cvt,\\\n+  f_sels,\\\n+  f_seld,\\\n   branch,\\\n   call,\\\n   load_byte,\\\n@@ -8102,6 +8104,39 @@\n   }\"\n )\n \n+(define_insn \"*cmov<mode>\"\n+    [(set (match_operand:SDF 0 \"s_register_operand\" \"=<F_constraint>\")\n+\t(if_then_else:SDF (match_operator 1 \"arm_vsel_comparison_operator\"\n+\t\t\t  [(match_operand 2 \"cc_register\" \"\") (const_int 0)])\n+\t\t\t  (match_operand:SDF 3 \"s_register_operand\"\n+\t\t\t                      \"<F_constraint>\")\n+\t\t\t  (match_operand:SDF 4 \"s_register_operand\"\n+\t\t\t                      \"<F_constraint>\")))]\n+  \"TARGET_HARD_FLOAT && TARGET_FPU_ARMV8 <vfp_double_cond>\"\n+  \"*\n+  {\n+    enum arm_cond_code code = maybe_get_arm_condition_code (operands[1]);\n+    switch (code)\n+      {\n+      case ARM_GE:\n+      case ARM_GT:\n+      case ARM_EQ:\n+      case ARM_VS:\n+        return \\\"vsel%d1.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>3, %<V_reg>4\\\";\n+      case ARM_LT:\n+      case ARM_LE:\n+      case ARM_NE:\n+      case ARM_VC:\n+        return \\\"vsel%D1.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>4, %<V_reg>3\\\";\n+      default:\n+        gcc_unreachable ();\n+      }\n+    return \\\"\\\";\n+  }\"\n+  [(set_attr \"conds\" \"use\")\n+   (set_attr \"type\" \"f_sel<vfp_type>\")]\n+)\n+\n (define_insn \"*movsicc_insn\"\n   [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r,r,r,r,r,r\")\n \t(if_then_else:SI"}, {"sha": "f301df2fcdb92392bb61e73fd52730ddf3c57ae3", "filename": "gcc/config/arm/predicates.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Fconfig%2Farm%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Fconfig%2Farm%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpredicates.md?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -270,6 +270,18 @@\n (define_special_predicate \"lt_ge_comparison_operator\"\n   (match_code \"lt,ge\"))\n \n+;; The vsel instruction only accepts the ARM condition codes listed below.\n+(define_special_predicate \"arm_vsel_comparison_operator\"\n+  (and (match_operand 0 \"expandable_comparison_operator\")\n+       (match_test \"maybe_get_arm_condition_code (op) == ARM_GE\n+                    || maybe_get_arm_condition_code (op) == ARM_GT\n+                    || maybe_get_arm_condition_code (op) == ARM_EQ\n+                    || maybe_get_arm_condition_code (op) == ARM_VS\n+                    || maybe_get_arm_condition_code (op) == ARM_LT\n+                    || maybe_get_arm_condition_code (op) == ARM_LE\n+                    || maybe_get_arm_condition_code (op) == ARM_NE\n+                    || maybe_get_arm_condition_code (op) == ARM_VC\")))\n+\n (define_special_predicate \"noov_comparison_operator\"\n   (match_code \"lt,ge,eq,ne\"))\n "}, {"sha": "b8073921b28a7fb6150414a174ad51f9b2c4e016", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -1,3 +1,22 @@\n+2013-03-25  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/vseleqdf.c: New test.\n+\t* gcc.target/arm/vseleqsf.c: Likewise.\n+\t* gcc.target/arm/vselgedf.c: Likewise.\n+\t* gcc.target/arm/vselgesf.c: Likewise.\n+\t* gcc.target/arm/vselgtdf.c: Likewise.\n+\t* gcc.target/arm/vselgtsf.c: Likewise.\n+\t* gcc.target/arm/vselledf.c: Likewise.\n+\t* gcc.target/arm/vsellesf.c: Likewise.\n+\t* gcc.target/arm/vselltdf.c: Likewise.\n+\t* gcc.target/arm/vselltsf.c: Likewise.\n+\t* gcc.target/arm/vselnedf.c: Likewise.\n+\t* gcc.target/arm/vselnesf.c: Likewise.\n+\t* gcc.target/arm/vselvcdf.c: Likewise.\n+\t* gcc.target/arm/vselvcsf.c: Likewise.\n+\t* gcc.target/arm/vselvsdf.c: Likewise.\n+\t* gcc.target/arm/vselvssf.c: Likewise.\n+\n 2013-03-25  Kyrylo Tkachov  <kyrylo.tkachov at arm.com>\n \n \t* gcc.target/aarch64/atomic-comp-swap-release-acquire.c: Move test"}, {"sha": "86e147b1f28d0a1da49915ad8ea17d8ccccd8b5a", "filename": "gcc/testsuite/gcc.target/arm/vseleqdf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvseleqdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvseleqdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvseleqdf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x, double y)\n+{\n+  volatile int i = 0;\n+  return i == 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vseleq.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "120f44bf01330a54c732c086db838ab195332d49", "filename": "gcc/testsuite/gcc.target/arm/vseleqsf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvseleqsf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvseleqsf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvseleqsf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x, float y)\n+{\n+  volatile int i = 0;\n+  return i == 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vseleq.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "cea08d12ea4a6b9fe8fda168a9bc0ede85ec8b02", "filename": "gcc/testsuite/gcc.target/arm/vselgedf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgedf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgedf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgedf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x, double y)\n+{\n+  volatile int i = 0;\n+  return i >= 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselge.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "86f2a04907fae41b7e5baa8478a1ca507f9bcaa6", "filename": "gcc/testsuite/gcc.target/arm/vselgesf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgesf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgesf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgesf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x, float y)\n+{\n+  volatile int i = 0;\n+  return i >= 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselge.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "2c4a6ba906d5460916ec6313f67138fdd84df300", "filename": "gcc/testsuite/gcc.target/arm/vselgtdf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgtdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgtdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgtdf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x, double y)\n+{\n+  volatile int i = 0;\n+  return i > 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselgt.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "388e74c111443b8fc1ca81dabdf85857995d3fcd", "filename": "gcc/testsuite/gcc.target/arm/vselgtsf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgtsf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgtsf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselgtsf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x, float y)\n+{\n+  volatile int i = 0;\n+  return i > 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselgt.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "088dc04b27499ef1860b9c16f58b23b12b2acf6e", "filename": "gcc/testsuite/gcc.target/arm/vselledf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselledf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselledf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselledf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x, double y)\n+{\n+  volatile int i = 0;\n+  return i <= 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselgt.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "d0afdbcec5127c1ff5f4ce4d5348044d5df8afb5", "filename": "gcc/testsuite/gcc.target/arm/vsellesf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvsellesf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvsellesf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvsellesf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x, float y)\n+{\n+  volatile int i = 0;\n+  return i <= 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselgt.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "fbcb9ea2b33bbf40b2533035b8c721f51ac01c53", "filename": "gcc/testsuite/gcc.target/arm/vselltdf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselltdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselltdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselltdf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x, double y)\n+{\n+  volatile int i = 0;\n+  return i < 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselge.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "959dab7fa32ff6bf5c5aeaa7414fcf0e9e26703d", "filename": "gcc/testsuite/gcc.target/arm/vselltsf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselltsf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselltsf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselltsf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x, float y)\n+{\n+  volatile int i = 0;\n+  return i < 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselge.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "cf67f29f3f8befaf84623a255542c2266fd52ca9", "filename": "gcc/testsuite/gcc.target/arm/vselnedf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselnedf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselnedf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselnedf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x, double y)\n+{\n+  volatile int i = 0;\n+  return i != 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vseleq.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "2e16423b57415ad0ca06a723cc94b707734033cb", "filename": "gcc/testsuite/gcc.target/arm/vselnesf.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselnesf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselnesf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselnesf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x, float y)\n+{\n+  volatile int i = 0;\n+  return i != 0 ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vseleq.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "7f30270c502259aff31024c8d47b45b2309accea", "filename": "gcc/testsuite/gcc.target/arm/vselvcdf.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvcdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvcdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvcdf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x, double y)\n+{\n+  return !__builtin_isunordered (x, y) ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselvs.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "1bb736925f9d23c1822eb7b725ffe0fd98468c68", "filename": "gcc/testsuite/gcc.target/arm/vselvcsf.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvcsf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvcsf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvcsf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x, float y)\n+{\n+  return !__builtin_isunordered (x, y) ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselvs.f32\\ts\\[0-9\\]+\" 1 } } */"}, {"sha": "83ad5bf695105178c261265f2b849e9e5713b56d", "filename": "gcc/testsuite/gcc.target/arm/vselvsdf.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvsdf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvsdf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvsdf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+double\n+foo (double x, double y)\n+{\n+  return __builtin_isunordered (x, y) ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselvs.f64\\td\\[0-9\\]+\" 1 } } */"}, {"sha": "7d762899cb38a9a7b7d6a1c1f9976d63defd6db0", "filename": "gcc/testsuite/gcc.target/arm/vselvssf.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvssf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5a4c20a5c922f2faa66b9326b336b5d7eb5065e/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvssf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fvselvssf.c?ref=a5a4c20a5c922f2faa66b9326b336b5d7eb5065e", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_vfp_ok } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-add-options arm_v8_vfp } */\n+\n+float\n+foo (float x, float y)\n+{\n+  return __builtin_isunordered (x, y) ? x : y;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vselvs.f32\\ts\\[0-9\\]+\" 1 } } */"}]}