{"sha": "203876fcae96c1b556fbe86a70975597a547beaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAzODc2ZmNhZTk2YzFiNTU2ZmJlODZhNzA5NzU1OTdhNTQ3YmVhZg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-04T10:01:40Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-03-04T10:01:40Z"}, "message": "[multiple changes]\n\n2015-03-04  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Abstract_State): Use routine\n\tMalformed_State_Error to issue general errors.\n\t(Analyze_Pragma): Diagnose a syntax error related to a state\n\tdeclaration with a simple option.\n\t(Malformed_State_Error): New routine.\n\n2015-03-04  Robert Dewar  <dewar@adacore.com>\n\n\t* a-strsup.adb (Super_Slice): Deal with super flat case.\n\t* einfo.ads: Minor reformatting.\n\t* s-imgdec.adb (Set_Decimal_Digits): Add comment about possibly\n\tredundant code.\n\n2015-03-04  Claire Dross  <dross@adacore.com>\n\n\t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads,\n\ta-cforse.ads, a-cofove.ads: Use Default_Initial_Condition on formal\n\tcontainers.\n\nFrom-SVN: r221180", "tree": {"sha": "e09a5e6c517c9329f65598c0cfeeacad14940e4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e09a5e6c517c9329f65598c0cfeeacad14940e4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/203876fcae96c1b556fbe86a70975597a547beaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203876fcae96c1b556fbe86a70975597a547beaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/203876fcae96c1b556fbe86a70975597a547beaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203876fcae96c1b556fbe86a70975597a547beaf/comments", "author": null, "committer": null, "parents": [{"sha": "5264d0df90c24246ba312c3bcce9b3841ca29a66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5264d0df90c24246ba312c3bcce9b3841ca29a66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5264d0df90c24246ba312c3bcce9b3841ca29a66"}], "stats": {"total": 175, "additions": 128, "deletions": 47}, "files": [{"sha": "294a43ed739cd84a4ed194d906caa56f9524a186", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -1,3 +1,24 @@\n+2015-03-04  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Abstract_State): Use routine\n+\tMalformed_State_Error to issue general errors.\n+\t(Analyze_Pragma): Diagnose a syntax error related to a state\n+\tdeclaration with a simple option.\n+\t(Malformed_State_Error): New routine.\n+\n+2015-03-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* a-strsup.adb (Super_Slice): Deal with super flat case.\n+\t* einfo.ads: Minor reformatting.\n+\t* s-imgdec.adb (Set_Decimal_Digits): Add comment about possibly\n+\tredundant code.\n+\n+2015-03-04  Claire Dross  <dross@adacore.com>\n+\n+\t* a-cfdlli.ads, a-cfhase.ads, a-cforma.ads, a-cfhama.ads,\n+\ta-cforse.ads, a-cofove.ads: Use Default_Initial_Condition on formal\n+\tcontainers.\n+\n 2015-03-04  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_warn.adb (Check_References): When checking for an unused"}, {"sha": "f4a25861bff6ed7b9255bd989454c26cd96e2379", "filename": "gcc/ada/a-cfdlli.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cfdlli.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cfdlli.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfdlli.ads?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -72,7 +72,7 @@ is\n                   Next        => Next,\n                   Has_Element => Has_Element,\n                   Element     => Element),\n-     Default_Initial_Condition;\n+     Default_Initial_Condition => Is_Empty (List);\n    pragma Preelaborable_Initialization (List);\n \n    type Cursor is private;"}, {"sha": "fd94b1b11016e6ecd2e4f7bd54fb6008fdd97247", "filename": "gcc/ada/a-cfhama.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cfhama.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cfhama.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhama.ads?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -76,7 +76,7 @@ is\n                   Next        => Next,\n                   Has_Element => Has_Element,\n                   Element     => Element),\n-     Default_Initial_Condition;\n+     Default_Initial_Condition => Is_Empty (Map);\n    pragma Preelaborable_Initialization (Map);\n \n    type Cursor is private;"}, {"sha": "e0d210e5334a9d69117c4af907d16e447d79b959", "filename": "gcc/ada/a-cfhase.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cfhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cfhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cfhase.ads?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -78,7 +78,7 @@ is\n                   Next        => Next,\n                   Has_Element => Has_Element,\n                   Element     => Element),\n-     Default_Initial_Condition;\n+     Default_Initial_Condition => Is_Empty (Set);\n    pragma Preelaborable_Initialization (Set);\n \n    type Cursor is private;"}, {"sha": "58a768c9b1f8850a057ac58bd12b8851291b5abd", "filename": "gcc/ada/a-cforma.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cforma.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cforma.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforma.ads?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -80,7 +80,7 @@ is\n                   Next        => Next,\n                   Has_Element => Has_Element,\n                   Element     => Element),\n-     Default_Initial_Condition;\n+     Default_Initial_Condition => Is_Empty (Map);\n    pragma Preelaborable_Initialization (Map);\n \n    type Cursor is private;"}, {"sha": "a69aa4f3de43fc52275136b8894d7cd55d6cf515", "filename": "gcc/ada/a-cforse.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cforse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cforse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cforse.ads?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -79,7 +79,7 @@ is\n                   Next        => Next,\n                   Has_Element => Has_Element,\n                   Element     => Element),\n-     Default_Initial_Condition;\n+     Default_Initial_Condition => Is_Empty (Set);\n    pragma Preelaborable_Initialization (Set);\n \n    type Cursor is private;"}, {"sha": "284f034e1ad426f01aac1d89f11451420fb3bd50", "filename": "gcc/ada/a-cofove.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cofove.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-cofove.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofove.ads?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -61,7 +61,7 @@ is\n      Count_Type range 0 .. Count_Type (Index_Type'Last - Index_Type'First + 1);\n \n    type Vector (Capacity : Capacity_Range) is limited private with\n-     Default_Initial_Condition;\n+     Default_Initial_Condition => Is_Empty (Vector);\n    --  In the bounded case, Capacity is the capacity of the container, which\n    --  never changes. In the unbounded case, Capacity is the initial capacity\n    --  of the container, and operations such as Reserve_Capacity and Append can"}, {"sha": "2ce40ac8cdb01a8a48fea3036058a9eec3a3280b", "filename": "gcc/ada/a-strsup.adb", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-strsup.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fa-strsup.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-strsup.adb?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2015, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1473,6 +1473,9 @@ package body Ada.Strings.Superbounded is\n             raise Index_Error;\n          end if;\n \n+         --  Note: in this case, superflat bounds are not a problem, we just\n+         --  get the null string in accordance with normal Ada slice rules.\n+\n          R := Source.Data (Low .. High);\n       end return;\n    end Super_Slice;\n@@ -1490,7 +1493,9 @@ package body Ada.Strings.Superbounded is\n             raise Index_Error;\n          end if;\n \n-         Result.Current_Length := High - Low + 1;\n+         --  Note: the Max operation here deals with the superflat case\n+\n+         Result.Current_Length := Integer'Max (0, High - Low + 1);\n          Result.Data (1 .. Result.Current_Length) := Source.Data (Low .. High);\n       end return;\n    end Super_Slice;\n@@ -1506,10 +1511,12 @@ package body Ada.Strings.Superbounded is\n         or else High > Source.Current_Length\n       then\n          raise Index_Error;\n-      else\n-         Target.Current_Length := High - Low + 1;\n-         Target.Data (1 .. Target.Current_Length) := Source.Data (Low .. High);\n       end if;\n+\n+      --  Note: the Max operation here deals with the superflat case\n+\n+      Target.Current_Length := Integer'Max (0, High - Low + 1);\n+      Target.Data (1 .. Target.Current_Length) := Source.Data (Low .. High);\n    end Super_Slice;\n \n    ----------------"}, {"sha": "dd51aa15073a914d4bc691ee62ba448bbdecc3f1", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -3234,12 +3234,12 @@ package Einfo is\n --       derived from a type with a clause present.\n \n --    Master_Id (Node17)\n---       Defined in access types and subtypes. Empty unless Has_Task is\n---       set for the designated type, in which case it points to the entity\n---       for the Master_Id for the access type master. Also set for access-to-\n---       limited-class-wide types whose root may be extended with task\n---       components, and for access-to-limited-interfaces because they can be\n---       used to reference tasks implementing such interface.\n+--       Defined in access types and subtypes. Empty unless Has_Task is set for\n+--       the designated type, in which case it points to the entity for the\n+--       Master_Id for the access type master. Also set for access-to-limited-\n+--       class-wide types whose root may be extended with task components, and\n+--       for access-to-limited-interfaces because they can be used to reference\n+--       tasks implementing such interface.\n \n --    Materialize_Entity (Flag168)\n --       Defined in all entities. Set only for renamed obects which should be\n@@ -3317,10 +3317,10 @@ package Einfo is\n --       not all of the fields in a partially initialized record). The code\n --       generator should instead use the flag Is_True_Constant.\n --\n---       For the purposes of this warning, the default assignment of\n---       access variables to null is not considered the assignment of\n---       of a value (so the warning can be given for code that relies\n---       on this initial null value, when no other value is ever set).\n+--       For the purposes of this warning, the default assignment of access\n+--       variables to null is not considered the assignment of a value (so\n+--       the warning can be given for code that relies on this initial null\n+--       value when no other value is ever set).\n --\n --       In variables and out parameters, if this flag is set after full\n --       processing of the corresponding declarative unit, it indicates that\n@@ -3333,10 +3333,10 @@ package Einfo is\n --       statement sequence, the meaning of the flag is \"not set yet\", and\n --       once this analysis is complete the flag means \"never assigned\".\n \n---       Note: for variables appearing in package declarations, this flag\n---       is never set. That is because there is no way to tell if some\n---       client modifies the variable (or in the case of variables in the\n---       private part, if some child unit modifies the variables).\n+--       Note: for variables appearing in package declarations, this flag is\n+--       never set. That is because there is no way to tell if some client\n+--       modifies the variable (or, in the case of variables in the private\n+--       part, if some child unit modifies the variables).\n \n --       Note: in the case of renamed objects, the flag must be set in the\n --       ultimate renamed object. Clients noting a possible modification\n@@ -3358,12 +3358,12 @@ package Einfo is\n --      discriminants in the record.\n \n --    Next_Discriminant (synthesized)\n---       Applies to discriminants returned by First/Next_Discriminant.\n---       Returns the next language-defined (ie: perhaps non-girder)\n---       discriminant by following the chain of declared entities as long as\n---       the kind of the entity corresponds to a discriminant. Note that the\n---       discriminants might be the only components of the record.\n---       Returns Empty if there are no more.\n+--       Applies to discriminants returned by First/Next_Discriminant. Returns\n+--       the next language-defined (ie: perhaps non-girder) discriminant by\n+--       following the chain of declared entities as long as the kind of the\n+--       entity corresponds to a discriminant. Note that the discriminants\n+--       might be the only components of the record. Returns Empty if there\n+--       are no more discriminants.\n \n --    Next_Entity (Node2)\n --       Defined in all entities. The entities of a scope are chained, with\n@@ -3374,9 +3374,9 @@ package Einfo is\n --       field are in Sinfo.\n \n --    Next_Formal (synthesized)\n---       Applies to the entity for a formal parameter. Returns the next\n---       formal parameter of the subprogram or subprogram type. Returns\n---       Empty if there are no more formals.\n+--       Applies to the entity for a formal parameter. Returns the next formal\n+--       parameter of the subprogram or subprogram type. Returns Empty if there\n+--       are no more formals.\n \n --    Next_Formal_With_Extras (synthesized)\n --       Applies to the entity for a formal parameter. Returns the next"}, {"sha": "bbd294306b0a42f60714ce68db8950985e125fbd", "filename": "gcc/ada/s-imgdec.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fs-imgdec.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fs-imgdec.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-imgdec.adb?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -330,6 +330,24 @@ package body System.Img_Dec is\n                DA := DA - LZ;\n \n                if DA < ND then\n+\n+                  --  Note: it is definitely possible for the above condition\n+                  --  to be True, for example:\n+\n+                  --    V => 1234, Scale => 5, Fore => 0, After => 1, Exp => 0\n+\n+                  --  but in this case DA = 0, ND = 1, FD = 1, FD + DA-1 = 0\n+                  --  so the arguments in the call are (1, 0) meaning that no\n+                  --  digits are output.\n+\n+                  --  No obvious example exists where the following call to\n+                  --  Set_Digits actually outputs some digits, but we lack a\n+                  --  proof that no such example exists.\n+\n+                  --  So it is safer to retain this call, even though as a\n+                  --  result it is hard (or perhaps impossible) to create a\n+                  --  coverage test for the inlined code of the call.\n+\n                   Set_Digits (FD, FD + DA - 1);\n \n                else"}, {"sha": "cae31f3f818536136da7e3e3ae6d5706bcfff3a6", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 42, "deletions": 7, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203876fcae96c1b556fbe86a70975597a547beaf/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=203876fcae96c1b556fbe86a70975597a547beaf", "patch": "@@ -9526,6 +9526,12 @@ package body Sem_Prag is\n             --  visibility chain. Pack_Id denotes the entity or the related\n             --  package where pragma Abstract_State appears.\n \n+            procedure Malformed_State_Error (State : Node_Id);\n+            --  Emit an error concerning the illegal declaration of abstract\n+            --  state State. This routine diagnoses syntax errors that lead to\n+            --  a different parse tree. The error is issued regardless of the\n+            --  SPARK mode in effect.\n+\n             ----------------------------\n             -- Analyze_Abstract_State --\n             ----------------------------\n@@ -10059,11 +10065,10 @@ package body Sem_Prag is\n                      Next (Opt);\n                   end loop;\n \n-               --  Any other attempt to declare a state is illegal. This is a\n-               --  syntax error, always report.\n+               --  Any other attempt to declare a state is illegal\n \n                else\n-                  Error_Msg_N (\"malformed abstract state declaration\", State);\n+                  Malformed_State_Error (State);\n                   return;\n                end if;\n \n@@ -10096,11 +10101,29 @@ package body Sem_Prag is\n                end if;\n             end Analyze_Abstract_State;\n \n+            ---------------------------\n+            -- Malformed_State_Error --\n+            ---------------------------\n+\n+            procedure Malformed_State_Error (State : Node_Id) is\n+            begin\n+               Error_Msg_N (\"malformed abstract state declaration\", State);\n+\n+               --  An abstract state with a simple option is being declared\n+               --  with \"=>\" rather than the legal \"with\". The state appears\n+               --  as a component association.\n+\n+               if Nkind (State) = N_Component_Association then\n+                  Error_Msg_N (\"\\\\use WITH to specify simple option\", State);\n+               end if;\n+            end Malformed_State_Error;\n+\n             --  Local variables\n \n             Pack_Decl : Node_Id;\n             Pack_Id   : Entity_Id;\n             State     : Node_Id;\n+            States    : Node_Id;\n \n          --  Start of processing for Abstract_State\n \n@@ -10137,22 +10160,34 @@ package body Sem_Prag is\n                Set_Is_Ghost_Entity (Pack_Id);\n             end if;\n \n-            State := Expression (Get_Argument (N));\n+            States := Expression (Get_Argument (N));\n \n             --  Multiple non-null abstract states appear as an aggregate\n \n-            if Nkind (State) = N_Aggregate then\n-               State := First (Expressions (State));\n+            if Nkind (States) = N_Aggregate then\n+               State := First (Expressions (States));\n                while Present (State) loop\n                   Analyze_Abstract_State (State, Pack_Id);\n                   Next (State);\n                end loop;\n \n+               --  An abstract state with a simple option is being illegaly\n+               --  declared with \"=>\" rather than \"with\". In this case the\n+               --  state declaration appears as a component association.\n+\n+               if Present (Component_Associations (States)) then\n+                  State := First (Component_Associations (States));\n+                  while Present (State) loop\n+                     Malformed_State_Error (State);\n+                     Next (State);\n+                  end loop;\n+               end if;\n+\n             --  Various forms of a single abstract state. Note that these may\n             --  include malformed state declarations.\n \n             else\n-               Analyze_Abstract_State (State, Pack_Id);\n+               Analyze_Abstract_State (States, Pack_Id);\n             end if;\n \n             --  Save the pragma for retrieval by other tools"}]}