{"sha": "1c1205fb0b9a3270c1bc43e6ad21cd23669081b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWMxMjA1ZmIwYjlhMzI3MGMxYmM0M2U2YWQyMWNkMjM2NjkwODFiMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenth@gcc.gnu.org", "date": "2005-06-02T21:55:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-06-02T21:55:52Z"}, "message": "tree-chrec.c (chrec_fold_plus_1): Ensure we build binary operations with the correct types.\n\n2005-06-02  Richard Guenther  <rguenth@gcc.gnu.org>\n\n\t* tree-chrec.c (chrec_fold_plus_1): Ensure we build\n\tbinary operations with the correct types.\n\t* tree-ssa-loo-ivopts.c (idx_find_step): Use sizetype\n\tfor all computation.\n\nFrom-SVN: r100517", "tree": {"sha": "5da965d0b7d30f4ab47448b7dee5619e882dc4f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5da965d0b7d30f4ab47448b7dee5619e882dc4f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2/comments", "author": null, "committer": null, "parents": [{"sha": "8ab5f5c9fa2e5161b4822e2205a17f6b5ba6528a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ab5f5c9fa2e5161b4822e2205a17f6b5ba6528a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ab5f5c9fa2e5161b4822e2205a17f6b5ba6528a"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "2f1cc1660f7947307984beb06a2833eee95a7e2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c1205fb0b9a3270c1bc43e6ad21cd23669081b2", "patch": "@@ -1,3 +1,10 @@\n+2005-06-02  Richard Guenther  <rguenth@gcc.gnu.org>\n+\n+\t* tree-chrec.c (chrec_fold_plus_1): Ensure we build\n+\tbinary operations with the correct types.\n+\t* tree-ssa-loo-ivopts.c (idx_find_step): Use sizetype\n+\tfor all computation.\n+\n 2005-06-02  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* tree-vrp.c, config/arm/arm.md, config/arm/arm1020e.md,"}, {"sha": "bd8bafc976261547c2b01b74ad987a7b22b0f676", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=1c1205fb0b9a3270c1bc43e6ad21cd23669081b2", "patch": "@@ -293,7 +293,9 @@ chrec_fold_plus_1 (enum tree_code code,\n \t\t&& size < PARAM_VALUE (PARAM_SCEV_MAX_EXPR_SIZE))\n \t      return build2 (code, type, op0, op1);\n \t    else if (size < PARAM_VALUE (PARAM_SCEV_MAX_EXPR_SIZE))\n-\t      return fold_build2 (code, type, op0, op1);\n+\t      return fold_build2 (code, type,\n+\t\t\t\t  fold_convert (type, op0),\n+\t\t\t\t  fold_convert (type, op1));\n \t    else\n \t      return chrec_dont_know;\n \t  }"}, {"sha": "8e4a574e8a8cadb2bfb8fd10806e9766521c98df", "filename": "gcc/tree-ssa-loop-ivopts.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2/gcc%2Ftree-ssa-loop-ivopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c1205fb0b9a3270c1bc43e6ad21cd23669081b2/gcc%2Ftree-ssa-loop-ivopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ivopts.c?ref=1c1205fb0b9a3270c1bc43e6ad21cd23669081b2", "patch": "@@ -1389,7 +1389,7 @@ idx_find_step (tree base, tree *idx, void *data)\n {\n   struct ifs_ivopts_data *dta = data;\n   struct iv *iv;\n-  tree step, type, iv_type, iv_step, lbound, off;\n+  tree step, iv_step, lbound, off;\n   struct loop *loop = dta->ivopts_data->current_loop;\n \n   if (TREE_CODE (base) == MISALIGNED_INDIRECT_REF\n@@ -1430,8 +1430,6 @@ idx_find_step (tree base, tree *idx, void *data)\n   if (!iv->step)\n     return true;\n \n-  iv_type = TREE_TYPE (iv->base);\n-  type = build_pointer_type (TREE_TYPE (base));\n   if (TREE_CODE (base) == ARRAY_REF)\n     {\n       step = array_ref_element_size (base);\n@@ -1442,26 +1440,26 @@ idx_find_step (tree base, tree *idx, void *data)\n     }\n   else\n     /* The step for pointer arithmetics already is 1 byte.  */\n-    step = build_int_cst (type, 1);\n+    step = build_int_cst (sizetype, 1);\n \n-  if (TYPE_PRECISION (iv_type) < TYPE_PRECISION (type))\n+  if (TYPE_PRECISION (TREE_TYPE (iv->base)) < TYPE_PRECISION (sizetype))\n     iv_step = can_count_iv_in_wider_type (dta->ivopts_data->current_loop,\n-\t\t\t\t\t  type, iv->base, iv->step, dta->stmt);\n+\t\t\t\t\t  sizetype, iv->base, iv->step, dta->stmt);\n   else\n-    iv_step = fold_convert (iv_type, iv->step);\n+    iv_step = fold_convert (sizetype, iv->step);\n \n   if (!iv_step)\n     {\n       /* The index might wrap.  */\n       return false;\n     }\n \n-  step = fold_build2 (MULT_EXPR, type, step, iv_step);\n+  step = fold_build2 (MULT_EXPR, sizetype, step, iv_step);\n \n   if (!*dta->step_p)\n     *dta->step_p = step;\n   else\n-    *dta->step_p = fold_build2 (PLUS_EXPR, type, *dta->step_p, step);\n+    *dta->step_p = fold_build2 (PLUS_EXPR, sizetype, *dta->step_p, step);\n \n   return true;\n }"}]}