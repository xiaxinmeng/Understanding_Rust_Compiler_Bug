{"sha": "97fceb9fa9ab2bf706c334f20f0ce605fae5a047", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdmY2ViOWZhOWFiMmJmNzA2YzMzNGYyMGYwY2U2MDVmYWU1YTA0Nw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2016-04-28T15:25:14Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2016-04-28T15:25:14Z"}, "message": "Don't include minor version in GCJ ABI version (PR java/70839)\n\n\tPR java/70839\n\t* decl.c (parse_version): Remove minor handling.\n\nFrom-SVN: r235575", "tree": {"sha": "e0488672be252d8eb0fe995f36c53cf1bad530b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0488672be252d8eb0fe995f36c53cf1bad530b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97fceb9fa9ab2bf706c334f20f0ce605fae5a047", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97fceb9fa9ab2bf706c334f20f0ce605fae5a047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97fceb9fa9ab2bf706c334f20f0ce605fae5a047", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97fceb9fa9ab2bf706c334f20f0ce605fae5a047/comments", "author": null, "committer": null, "parents": [{"sha": "713dedcd5dcaa3e7b1da940ffdde80dadeb2192f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/713dedcd5dcaa3e7b1da940ffdde80dadeb2192f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/713dedcd5dcaa3e7b1da940ffdde80dadeb2192f"}], "stats": {"total": 13, "additions": 3, "deletions": 10}, "files": [{"sha": "36989d380abcb6be6fe53a1f872e4b21f73206b8", "filename": "gcc/java/decl.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97fceb9fa9ab2bf706c334f20f0ce605fae5a047/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97fceb9fa9ab2bf706c334f20f0ce605fae5a047/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=97fceb9fa9ab2bf706c334f20f0ce605fae5a047", "patch": "@@ -507,7 +507,7 @@ static void\n parse_version (void)\n {\n   const char *p = version_string;\n-  unsigned int major = 0, minor = 0;\n+  unsigned int major = 0;\n   unsigned int abi_version;\n \n   /* Skip leading junk.  */\n@@ -525,13 +525,6 @@ parse_version (void)\n   gcc_assert (*p == '.' && ISDIGIT (p[1]));\n   ++p;\n \n-  /* Extract minor version.  */\n-  while (ISDIGIT (*p))\n-    {\n-      minor = minor * 10 + *p - '0';\n-      ++p;\n-    }\n-\n   if (flag_indirect_dispatch)\n     {\n       abi_version = GCJ_CURRENT_BC_ABI_VERSION;\n@@ -540,8 +533,8 @@ parse_version (void)\n   else /* C++ ABI */\n     {\n       /* Implicit in this computation is the idea that we won't break the\n-\t old-style binary ABI in a sub-minor release (e.g., from 6.0 to\n-\t 6.1).  */\n+\t old-style binary ABI in a minor release (e.g., from 6.1.0 to\n+\t 6.2.0).  */\n       abi_version = 100000 * major;\n     }\n   if (flag_bootstrap_classes)"}]}