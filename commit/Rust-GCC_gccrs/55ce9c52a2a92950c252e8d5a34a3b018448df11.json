{"sha": "55ce9c52a2a92950c252e8d5a34a3b018448df11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVjZTljNTJhMmE5Mjk1MGMyNTJlOGQ1YTM0YTNiMDE4NDQ4ZGYxMQ==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2004-04-30T18:19:37Z"}, "committer": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2004-04-30T18:19:37Z"}, "message": "re PR java/15133 (gcjh generates wrong method signatures)\n\n\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Use\n\tadditional option \"-Wmissing-prototypes\" for compiling C sources.\n\tPrint actual filename for pass/fail rather than $name.c.\n\t* testsuite/libjava.jni/PR15133.java: New testcase file.\n\t* testsuite/libjava.jni/PR15133.c: Likewise.\n\t* testsuite/libjava.jni/PR15133.out: Likewise.\n\nCo-Authored-By: Tom Tromey <tromey@redhat.com>\n\nFrom-SVN: r81358", "tree": {"sha": "6b89dbbf7c15425987ef61a507b3be356eb69537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b89dbbf7c15425987ef61a507b3be356eb69537"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55ce9c52a2a92950c252e8d5a34a3b018448df11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ce9c52a2a92950c252e8d5a34a3b018448df11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55ce9c52a2a92950c252e8d5a34a3b018448df11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55ce9c52a2a92950c252e8d5a34a3b018448df11/comments", "author": null, "committer": null, "parents": [{"sha": "3fb577a58935b9b1be60200000422ead1a69f561", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fb577a58935b9b1be60200000422ead1a69f561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fb577a58935b9b1be60200000422ead1a69f561"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "e2968ca346f6de7cb71aab35f650101c4412a6f3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=55ce9c52a2a92950c252e8d5a34a3b018448df11", "patch": "@@ -1,3 +1,13 @@\n+2004-04-30  Ranjit Mathew  <rmathew@hotmail.com>\n+            Tom Tromey  <tromey@redhat.com>\n+\n+\t* testsuite/libjava.jni/jni.exp (gcj_jni_compile_c_to_so): Use\n+\tadditional option \"-Wmissing-prototypes\" for compiling C sources.\n+\tPrint actual filename for pass/fail rather than $name.c.\n+\t* testsuite/libjava.jni/PR15133.java: New testcase file.\n+\t* testsuite/libjava.jni/PR15133.c: Likewise.\n+\t* testsuite/libjava.jni/PR15133.out: Likewise.\n+\n 2004-04-30  Roger Sayle  <roger@eyesopen.com>\n \n \t* testsuite/libjava.lang/MathBuiltin.java: Add tests for acos, asin,"}, {"sha": "be5a48efa3b8019955f8aed12576f8dfb318b477", "filename": "libjava/testsuite/libjava.jni/PR15133.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.c?ref=55ce9c52a2a92950c252e8d5a34a3b018448df11", "patch": "@@ -0,0 +1,9 @@\n+#include <stdio.h>\n+#include <jni.h>\n+#include \"PR15133.h\"\n+\n+JNIEXPORT void JNICALL\n+Java_PR15133_printIt (JNIEnv *env, jobject x, jint y)\n+{\n+  printf (\"%d\\n\", y);\n+}"}, {"sha": "90435765b3db0796361b02b9b7a33e527c0e461e", "filename": "libjava/testsuite/libjava.jni/PR15133.java", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.java?ref=55ce9c52a2a92950c252e8d5a34a3b018448df11", "patch": "@@ -0,0 +1,14 @@\n+/* Test case for PR java/15133 */\n+public class PR15133\n+{\n+  public void printIt (String dummy) { }\n+\n+  public native void printIt (int num);\n+\n+  public static void main (String[] args)\n+  {\n+    System.loadLibrary (\"PR15133\");\n+\n+    new PR15133( ).printIt( 1729);\n+  }\n+}"}, {"sha": "32bb421c624168cd17d29596a84b7a5f4a6bd8c7", "filename": "libjava/testsuite/libjava.jni/PR15133.out", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2FPR15133.out?ref=55ce9c52a2a92950c252e8d5a34a3b018448df11", "patch": "@@ -0,0 +1 @@\n+1729"}, {"sha": "a4bf4b80ee1abfbbed14f398724f8caffff5a2de", "filename": "libjava/testsuite/libjava.jni/jni.exp", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55ce9c52a2a92950c252e8d5a34a3b018448df11/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.jni%2Fjni.exp?ref=55ce9c52a2a92950c252e8d5a34a3b018448df11", "patch": "@@ -21,24 +21,33 @@ proc gcj_jni_compile_c_to_so {file {options {}}} {\n       set so_extension \"so\"\n       set so_flag \"-shared\"\n   }\n-  set name [file rootname [file tail $file]]\n+  set filename [file tail $file]\n+  set name [file rootname $filename]\n   set soname lib${name}.${so_extension}\n \n   lappend options \"additional_flags=${so_flag} -fPIC\"\n   # Find the generated header.\n   lappend options \"additional_flags=-I. -I..\"\n+\n+  # Ensure that the generated header has correct prototypes.\n+  set cfile [file rootname $file].c\n+  if { [file exists $cfile]} {\n+    # This option is only valid for C sources.\n+    lappend options \"additional_flags=-Wmissing-prototypes\"\n+  }\n+\n   # Find jni.h.\n   lappend options \"additional_flags=-I$srcdir/../include\"\n \n   set x [libjava_prune_warnings \\\n \t   [target_compile $file $soname executable $options]]\n   if {$x != \"\"} {\n     verbose \"target_compile failed: $x\" 2\n-    fail \"$name.c compilation\"\n+    fail \"$filename compilation\"\n     return 0\n   }\n \n-  pass \"$name.c compilation\"\n+  pass \"$filename compilation\"\n   return 1\n }\n "}]}