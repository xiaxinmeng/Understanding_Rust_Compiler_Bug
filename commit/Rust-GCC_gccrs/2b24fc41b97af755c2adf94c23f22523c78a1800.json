{"sha": "2b24fc41b97af755c2adf94c23f22523c78a1800", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmIyNGZjNDFiOTdhZjc1NWMyYWRmOTRjMjNmMjI1MjNjNzhhMTgwMA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2003-02-10T20:45:59Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2003-02-10T20:45:59Z"}, "message": "ppc64-fp.c: New file.\n\n2003-02-10  Janis Johnson  <janis187@us.ibm.com>\n\n\t* config/rs6000/ppc64-fp.c: New file.\n\t* config/rs6000/t-linux64 (LIB2FUNCS_EXTRA): Add ppc64-fp.c.\n\nFrom-SVN: r62652", "tree": {"sha": "6282d3fc26ff603bcaaed4ee89df7c03bf441413", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6282d3fc26ff603bcaaed4ee89df7c03bf441413"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b24fc41b97af755c2adf94c23f22523c78a1800", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b24fc41b97af755c2adf94c23f22523c78a1800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b24fc41b97af755c2adf94c23f22523c78a1800", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b24fc41b97af755c2adf94c23f22523c78a1800/comments", "author": null, "committer": null, "parents": [{"sha": "1b1edcfa616bfdff456dd08199063cc551e6edf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b1edcfa616bfdff456dd08199063cc551e6edf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b1edcfa616bfdff456dd08199063cc551e6edf9"}], "stats": {"total": 154, "additions": 154, "deletions": 0}, "files": [{"sha": "dbf40b374a10133e4b9334d5376f241305be6786", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b24fc41b97af755c2adf94c23f22523c78a1800/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b24fc41b97af755c2adf94c23f22523c78a1800/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2b24fc41b97af755c2adf94c23f22523c78a1800", "patch": "@@ -1,3 +1,8 @@\n+2003-02-10  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* config/rs6000/ppc64-fp.c: New file.\n+\t* config/rs6000/t-linux64 (LIB2FUNCS_EXTRA): Add ppc64-fp.c.\n+\n 2003-02-10  Josef Zlomek  <zlomekj@suse.cz>\n \n \t* Makefile.in (bb-reorder.o): Add dependency on $(FIBHEAP_H)."}, {"sha": "3f6d7cd1bb0c9bd2dd74ec2b3a6cc8195cf5af73", "filename": "gcc/config/rs6000/ppc64-fp.c", "status": "added", "additions": 146, "deletions": 0, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b24fc41b97af755c2adf94c23f22523c78a1800/gcc%2Fconfig%2Frs6000%2Fppc64-fp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b24fc41b97af755c2adf94c23f22523c78a1800/gcc%2Fconfig%2Frs6000%2Fppc64-fp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fppc64-fp.c?ref=2b24fc41b97af755c2adf94c23f22523c78a1800", "patch": "@@ -0,0 +1,146 @@\n+/* Functions needed for soft-float on powerpc64-linux, copied from\n+   libgcc2.c with macros expanded to force the use of specific types.\n+ \n+   Copyright (C) 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n+   2000, 2001, 2002, 2003  Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 2, or (at your option) any later\n+version.\n+\n+In addition to the permissions in the GNU General Public License, the\n+Free Software Foundation gives you unlimited permission to link the\n+compiled version of this file into combinations with other programs,\n+and to distribute those combinations without any restriction coming\n+from the use of this file.  (The General Public License restrictions\n+do apply in other respects; for example, they cover modification of\n+the file, and distribution when not linked into a combine\n+executable.)\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING.  If not, write to the Free\n+Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+02111-1307, USA.  */\n+\n+#if defined(__powerpc64__)\n+#include \"fp-bit.h\"\n+\n+extern DItype __fixdfdi (DFtype);\n+extern DItype __fixsfdi (SFtype);\n+extern USItype __fixunsdfsi (DFtype);\n+extern USItype __fixunssfsi (SFtype);\n+extern DFtype __floatdidf (DItype);\n+extern SFtype __floatdisf (DItype);\n+\n+static DItype local_fixunssfdi (SFtype);\n+static DItype local_fixunsdfdi (DFtype);\n+\n+DItype\n+__fixdfdi (DFtype a)\n+{\n+  if (a < 0)\n+    return - local_fixunsdfdi (-a);\n+  return local_fixunsdfdi (a);\n+}\n+\n+DItype\n+__fixsfdi (SFtype a)\n+{\n+  if (a < 0)\n+    return - local_fixunssfdi (-a);\n+  return local_fixunssfdi (a);\n+}\n+\n+USItype\n+__fixunsdfsi (DFtype a)\n+{\n+  if (a >= - (DFtype) (- ((SItype)(((USItype)1 << ((4 * 8) - 1)) - 1)) - 1))\n+    return (SItype) (a + (- ((SItype)(((USItype)1 << ((4 * 8) - 1)) - 1)) - 1))\n+                       - (- ((SItype)(((USItype)1 << ((4 * 8) - 1)) - 1)) - 1);\n+  return (SItype) a;\n+}\n+\n+USItype\n+__fixunssfsi (SFtype a)\n+{\n+  if (a >= - (SFtype) (- ((SItype)(((USItype)1 << ((4 * 8) - 1)) - 1)) - 1))\n+    return (SItype) (a + (- ((SItype)(((USItype)1 << ((4 * 8) - 1)) - 1)) - 1))\n+                       - (- ((SItype)(((USItype)1 << ((4 * 8) - 1)) - 1)) - 1);\n+  return (SItype) a;\n+}\n+\n+DFtype\n+__floatdidf (DItype u)\n+{\n+  DFtype d;\n+\n+  d = (SItype) (u >> (sizeof (SItype) * 8));\n+  d *= (((UDItype) 1) << ((sizeof (SItype) * 8) / 2));\n+  d *= (((UDItype) 1) << ((sizeof (SItype) * 8) / 2));\n+  d += (USItype) (u & ((((UDItype) 1) << (sizeof (SItype) * 8)) - 1));\n+\n+  return d;\n+}\n+\n+SFtype\n+__floatdisf (DItype u)\n+{\n+  DFtype f;\n+\n+  if (53 < (sizeof (DItype) * 8)\n+      && 53 > ((sizeof (DItype) * 8) - 53 + 24))\n+    {\n+      if (! (- ((DItype) 1 << 53) < u\n+             && u < ((DItype) 1 << 53)))\n+        {\n+          if ((UDItype) u & (((UDItype) 1 << ((sizeof (DItype) * 8) - 53)) - 1))\n+            {\n+              u &= ~ (((UDItype) 1 << ((sizeof (DItype) * 8) - 53)) - 1);\n+              u |= ((UDItype) 1 << ((sizeof (DItype) * 8) - 53));\n+            }\n+        }\n+    }\n+  f = (SItype) (u >> (sizeof (SItype) * 8));\n+  f *= (((UDItype) 1) << ((sizeof (SItype) * 8) / 2));\n+  f *= (((UDItype) 1) << ((sizeof (SItype) * 8) / 2));\n+  f += (USItype) (u & ((((UDItype) 1) << (sizeof (SItype) * 8)) - 1));\n+\n+  return (SFtype) f;\n+}\n+\n+/* This version is needed to prevent recursion; fixunsdfdi in libgcc\n+   calls fixdfdi, which in turn calls calls fixunsdfdi.  */\n+\n+static DItype\n+local_fixunsdfdi (DFtype a)\n+{\n+  USItype hi, lo;\n+\n+  hi = a / (((UDItype) 1) << (sizeof (SItype) * 8));\n+  lo = (a - ((DFtype) hi) * (((UDItype) 1) << (sizeof (SItype) * 8)));\n+  return ((UDItype) hi << (sizeof (SItype) * 8)) | lo;\n+}\n+\n+/* This version is needed to prevent recursion; fixunssfdi in libgcc\n+   calls fixsfdi, which in turn calls calls fixunssfdi.  */\n+\n+static DItype\n+local_fixunssfdi (SFtype original_a)\n+{\n+  DFtype a = original_a;\n+  USItype hi, lo;\n+\n+  hi = a / (((UDItype) 1) << (sizeof (SItype) * 8));\n+  lo = (a - ((DFtype) hi) * (((UDItype) 1) << (sizeof (SItype) * 8)));\n+  return ((UDItype) hi << (sizeof (SItype) * 8)) | lo;\n+}\n+\n+#endif /* __powerpc64__ */"}, {"sha": "af7b44bd70b75f19d1e4d3d84b5c052cb7013257", "filename": "gcc/config/rs6000/t-linux64", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b24fc41b97af755c2adf94c23f22523c78a1800/gcc%2Fconfig%2Frs6000%2Ft-linux64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b24fc41b97af755c2adf94c23f22523c78a1800/gcc%2Fconfig%2Frs6000%2Ft-linux64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-linux64?ref=2b24fc41b97af755c2adf94c23f22523c78a1800", "patch": "@@ -5,6 +5,9 @@ TARGET_LIBGCC2_CFLAGS =\n EXTRA_MULTILIB_PARTS=crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o \\\n \t\t\tcrtsavres.o\n \n+# These functions are needed for soft-float on powerpc64-linux.\n+LIB2FUNCS_EXTRA = $(srcdir)/config/rs6000/ppc64-fp.c\n+\n # ld provides these functions as needed.\n crtsavres.S:\n \techo >crtsavres.S"}]}