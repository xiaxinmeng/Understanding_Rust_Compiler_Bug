{"sha": "a749e46c012110579069947adb6fbfffb6c573fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTc0OWU0NmMwMTIxMTA1NzkwNjk5NDdhZGI2ZmJmZmZiNmM1NzNmZQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-02-26T21:39:45Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-02-26T21:39:45Z"}, "message": "acinclude.m4: Remove GC_CONFIGURE macro; move contents to configure.in.\n\n\t* acinclude.m4: Remove GC_CONFIGURE macro; move contents\n\tto configure.in.\n\t* aclocal.m4: Regenerate.\n\t* configure.in: Receive contents of GC_CONFIGURE macro.\n\t* configure: Regenerate.\n\n(Makefile.in and include/Makefile.in just got timestamp updates)\n\nFrom-SVN: r78523", "tree": {"sha": "5fea6da73931f5cb669581538953a9db9518e83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fea6da73931f5cb669581538953a9db9518e83c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a749e46c012110579069947adb6fbfffb6c573fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a749e46c012110579069947adb6fbfffb6c573fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a749e46c012110579069947adb6fbfffb6c573fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a749e46c012110579069947adb6fbfffb6c573fe/comments", "author": null, "committer": null, "parents": [{"sha": "6bf92cb6097c0efb59cab150cf308322256fb28c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bf92cb6097c0efb59cab150cf308322256fb28c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bf92cb6097c0efb59cab150cf308322256fb28c"}], "stats": {"total": 157, "additions": 52, "deletions": 105}, "files": [{"sha": "6324b0a29c5828d4349348bef870957f5b295b6e", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=a749e46c012110579069947adb6fbfffb6c573fe", "patch": "@@ -1,5 +1,11 @@\n 2004-02-26  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n+\t* acinclude.m4: Remove GC_CONFIGURE macro; move contents\n+\tto configure.in.\n+\t* aclocal.m4: Regenerate.\n+\t* configure.in: Receive contents of GC_CONFIGURE macro.\n+\t* configure: Regenerate.\n+\n \t* configure.in: Remove more obsolete, bogus code.\n \t* configure: Regenerate.\n "}, {"sha": "9f3be46a1b3cbbd3f112f2f18149a2a2bccfe300", "filename": "boehm-gc/acinclude.m4", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Facinclude.m4?ref=a749e46c012110579069947adb6fbfffb6c573fe", "patch": "@@ -11,56 +11,6 @@\n #\n # Original author: Tom Tromey\n \n-AC_DEFUN(GC_CONFIGURE,\n-[\n-\n-AM_INIT_AUTOMAKE(gc, 6.1a1, no-define)\n-\n-# The autoconf 2.5x version of the no-executables hack.\n-sinclude(../config/no-executables.m4)\n-GCC_NO_EXECUTABLES\n-\n-# Yak.  We must force CC and CXX to /not/ be precious variables; otherwise\n-# the wrong, non-multilib-adjusted value will be used in multilibs.\n-# As a side effect, we have to subst CFLAGS and CXXFLAGS ourselves.\n-\n-m4_rename([_AC_ARG_VAR_PRECIOUS],[real_PRECIOUS])\n-m4_define([_AC_ARG_VAR_PRECIOUS],[])\n-AC_PROG_CC\n-AC_PROG_CXX\n-m4_rename([real_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n-\n-AC_SUBST(CFLAGS)\n-AC_SUBST(CXXFLAGS)\n-\n-AC_CHECK_TOOL(AS, as)\n-AC_CHECK_TOOL(AR, ar)\n-AC_CHECK_TOOL(RANLIB, ranlib, :)\n-\n-AC_PROG_INSTALL\n-\n-AM_MAINTAINER_MODE\n-\n-. [$]{srcdir}/configure.host\n-\n-case [$]{gc_basedir} in\n-/* | [A-Za-z]:[/\\\\]*) gc_flagbasedir=[$]{gc_basedir} ;;\n-*) gc_flagbasedir='[$](top_builddir)/'[$]{gc_basedir} ;;\n-esac\n-\n-gc_cflags=\"[$]{gc_cflags} -I\"'[$](top_builddir)'\"/$1/targ-include -I[$]{gc_flagbasedir}/libc/include\"\n-case \"${host}\" in\n-  *-*-cygwin32*)\n-    gc_cflags=\"[$]{gc_cflags} -I[$]{gc_flagbasedir}/../winsup/include\"\n-    ;;\n-esac\n-\n-dnl gc_cflags=\"[$]{gc_cflags} -fno-builtin\"\n-\n-GC_CFLAGS=${gc_cflags}\n-AC_SUBST(GC_CFLAGS)\n-])\n-\n sinclude(../libtool.m4)\n dnl The line below arranges for aclocal not to bring a definition of\n dnl AM_PROG_LIBTOOL into aclocal.m4, while still arranging for automake"}, {"sha": "b3c3582e777f0938dbe730ce2bf9c1d5c8c186ba", "filename": "boehm-gc/aclocal.m4", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Faclocal.m4?ref=a749e46c012110579069947adb6fbfffb6c573fe", "patch": "@@ -23,56 +23,6 @@ dnl PARTICULAR PURPOSE.\n #\n # Original author: Tom Tromey\n \n-AC_DEFUN(GC_CONFIGURE,\n-[\n-\n-AM_INIT_AUTOMAKE(gc, 6.1a1, no-define)\n-\n-# The autoconf 2.5x version of the no-executables hack.\n-sinclude(../config/no-executables.m4)\n-GCC_NO_EXECUTABLES\n-\n-# Yak.  We must force CC and CXX to /not/ be precious variables; otherwise\n-# the wrong, non-multilib-adjusted value will be used in multilibs.\n-# As a side effect, we have to subst CFLAGS and CXXFLAGS ourselves.\n-\n-m4_rename([_AC_ARG_VAR_PRECIOUS],[real_PRECIOUS])\n-m4_define([_AC_ARG_VAR_PRECIOUS],[])\n-AC_PROG_CC\n-AC_PROG_CXX\n-m4_rename([real_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n-\n-AC_SUBST(CFLAGS)\n-AC_SUBST(CXXFLAGS)\n-\n-AC_CHECK_TOOL(AS, as)\n-AC_CHECK_TOOL(AR, ar)\n-AC_CHECK_TOOL(RANLIB, ranlib, :)\n-\n-AC_PROG_INSTALL\n-\n-AM_MAINTAINER_MODE\n-\n-. [$]{srcdir}/configure.host\n-\n-case [$]{gc_basedir} in\n-/* | [A-Za-z]:[/\\\\]*) gc_flagbasedir=[$]{gc_basedir} ;;\n-*) gc_flagbasedir='[$](top_builddir)/'[$]{gc_basedir} ;;\n-esac\n-\n-gc_cflags=\"[$]{gc_cflags} -I\"'[$](top_builddir)'\"/$1/targ-include -I[$]{gc_flagbasedir}/libc/include\"\n-case \"${host}\" in\n-  *-*-cygwin32*)\n-    gc_cflags=\"[$]{gc_cflags} -I[$]{gc_flagbasedir}/../winsup/include\"\n-    ;;\n-esac\n-\n-dnl gc_cflags=\"[$]{gc_cflags} -fno-builtin\"\n-\n-GC_CFLAGS=${gc_cflags}\n-AC_SUBST(GC_CFLAGS)\n-])\n-\n sinclude(../libtool.m4)\n dnl The line below arranges for aclocal not to bring a definition of\n dnl AM_PROG_LIBTOOL into aclocal.m4, while still arranging for automake"}, {"sha": "8033dd55f1fc43700722c7c8325b9740cb965239", "filename": "boehm-gc/configure", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=a749e46c012110579069947adb6fbfffb6c573fe", "patch": "@@ -1703,8 +1703,6 @@ echo \"${ECHO_T}no\" >&6\n fi\n \n \n-\n-\n PACKAGE=gc\n \n VERSION=6.1a1\n@@ -3411,7 +3409,6 @@ esac\n GC_CFLAGS=${gc_cflags}\n \n \n-\n # Check whether --enable-shared or --disable-shared was given.\n if test \"${enable_shared+set}\" = set; then\n   enableval=\"$enable_shared\"\n@@ -4154,7 +4151,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4157 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4154 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?"}, {"sha": "0ab5a84a3793d1cf6d782285adb7b069a6aa0803", "filename": "boehm-gc/configure.in", "status": "modified", "additions": 45, "deletions": 1, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a749e46c012110579069947adb6fbfffb6c573fe/boehm-gc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.in?ref=a749e46c012110579069947adb6fbfffb6c573fe", "patch": "@@ -69,7 +69,51 @@ _GCC_TOPLEV_NONCANONICAL_TARGET\n mkinstalldirs=\"`cd $ac_aux_dir && ${PWDCMD-pwd}`/mkinstalldirs\"\n AC_SUBST(mkinstalldirs)\n \n-GC_CONFIGURE(.)\n+AM_INIT_AUTOMAKE(gc, 6.1a1, no-define)\n+\n+# The autoconf 2.5x version of the no-executables hack.\n+sinclude(../config/no-executables.m4)\n+GCC_NO_EXECUTABLES\n+\n+# Yak.  We must force CC and CXX to /not/ be precious variables; otherwise\n+# the wrong, non-multilib-adjusted value will be used in multilibs.\n+# As a side effect, we have to subst CFLAGS and CXXFLAGS ourselves.\n+\n+m4_rename([_AC_ARG_VAR_PRECIOUS],[real_PRECIOUS])\n+m4_define([_AC_ARG_VAR_PRECIOUS],[])\n+AC_PROG_CC\n+AC_PROG_CXX\n+m4_rename([real_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n+\n+AC_SUBST(CFLAGS)\n+AC_SUBST(CXXFLAGS)\n+\n+AC_CHECK_TOOL(AS, as)\n+AC_CHECK_TOOL(AR, ar)\n+AC_CHECK_TOOL(RANLIB, ranlib, :)\n+\n+AC_PROG_INSTALL\n+\n+AM_MAINTAINER_MODE\n+\n+. [$]{srcdir}/configure.host\n+\n+case [$]{gc_basedir} in\n+/* | [A-Za-z]:[/\\\\]*) gc_flagbasedir=[$]{gc_basedir} ;;\n+*) gc_flagbasedir='[$](top_builddir)/'[$]{gc_basedir} ;;\n+esac\n+\n+gc_cflags=\"[$]{gc_cflags} -I\"'[$](top_builddir)'\"/./targ-include -I[$]{gc_flagbasedir}/libc/include\"\n+case \"${host}\" in\n+  *-*-cygwin32*)\n+    gc_cflags=\"[$]{gc_cflags} -I[$]{gc_flagbasedir}/../winsup/include\"\n+    ;;\n+esac\n+\n+dnl gc_cflags=\"[$]{gc_cflags} -fno-builtin\"\n+\n+GC_CFLAGS=${gc_cflags}\n+AC_SUBST(GC_CFLAGS)\n \n AM_PROG_LIBTOOL\n "}]}