{"sha": "247afa98ba2512c7d90f3e9e05af41067ef756a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3YWZhOThiYTI1MTJjN2Q5MGYzZTllMDVhZjQxMDY3ZWY3NTZhMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-10-10T14:02:25Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-10-10T14:02:25Z"}, "message": "re PR middle-end/92046 (Command line options (that are per-functions) are affecting --params which are global.)\n\n2019-10-10  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/92046\n\t* opts.c (finish_options): Do not influence global --params\n\tfrom options that are adjustable per function.\n\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n\tApply --param adjustment based on active cost-model.\n\t* tree-ssa-phiopt.c (cond_if_else_store_replacement): Disable\n\tfurther store-sinking when vectorization or if-conversion\n\tare not enabled.\n\nFrom-SVN: r276807", "tree": {"sha": "ab4b351127d672cf2cd574866297570353c15fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab4b351127d672cf2cd574866297570353c15fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/247afa98ba2512c7d90f3e9e05af41067ef756a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247afa98ba2512c7d90f3e9e05af41067ef756a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247afa98ba2512c7d90f3e9e05af41067ef756a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247afa98ba2512c7d90f3e9e05af41067ef756a3/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "019f36a648fd3f35e562eb7ddd3ff6393b30b4c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/019f36a648fd3f35e562eb7ddd3ff6393b30b4c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/019f36a648fd3f35e562eb7ddd3ff6393b30b4c7"}], "stats": {"total": 58, "additions": 30, "deletions": 28}, "files": [{"sha": "e70eb1d47a91ce50785839dd7d70df53a5a67daf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247afa98ba2512c7d90f3e9e05af41067ef756a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247afa98ba2512c7d90f3e9e05af41067ef756a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=247afa98ba2512c7d90f3e9e05af41067ef756a3", "patch": "@@ -1,3 +1,14 @@\n+2019-10-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/92046\n+\t* opts.c (finish_options): Do not influence global --params\n+\tfrom options that are adjustable per function.\n+\t* tree-vect-data-refs.c (vect_enhance_data_refs_alignment):\n+\tApply --param adjustment based on active cost-model.\n+\t* tree-ssa-phiopt.c (cond_if_else_store_replacement): Disable\n+\tfurther store-sinking when vectorization or if-conversion\n+\tare not enabled.\n+\n 2019-10-10  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR middle-end/92037"}, {"sha": "83d8a87034823f97c55c8b94411c7013ff8b9a95", "filename": "gcc/opts.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247afa98ba2512c7d90f3e9e05af41067ef756a3/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247afa98ba2512c7d90f3e9e05af41067ef756a3/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=247afa98ba2512c7d90f3e9e05af41067ef756a3", "patch": "@@ -1123,24 +1123,6 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n       && !opts_set->x_flag_reorder_functions)\n     opts->x_flag_reorder_functions = 1;\n \n-  /* Tune vectorization related parametees according to cost model.  */\n-  if (opts->x_flag_vect_cost_model == VECT_COST_MODEL_CHEAP)\n-    {\n-      maybe_set_param_value (PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS,\n-            6, opts->x_param_values, opts_set->x_param_values);\n-      maybe_set_param_value (PARAM_VECT_MAX_VERSION_FOR_ALIGNMENT_CHECKS,\n-            0, opts->x_param_values, opts_set->x_param_values);\n-      maybe_set_param_value (PARAM_VECT_MAX_PEELING_FOR_ALIGNMENT,\n-            0, opts->x_param_values, opts_set->x_param_values);\n-    }\n-\n-  /* Set PARAM_MAX_STORES_TO_SINK to 0 if either vectorization or if-conversion\n-     is disabled.  */\n-  if ((!opts->x_flag_tree_loop_vectorize && !opts->x_flag_tree_slp_vectorize)\n-       || !opts->x_flag_tree_loop_if_convert)\n-    maybe_set_param_value (PARAM_MAX_STORES_TO_SINK, 0,\n-                           opts->x_param_values, opts_set->x_param_values);\n-\n   /* The -gsplit-dwarf option requires -ggnu-pubnames.  */\n   if (opts->x_dwarf_split_debug_info)\n     opts->x_debug_generate_pub_sections = 2;"}, {"sha": "38bb8b241558bcbc59ad84e43c6eb84c18d65e35", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247afa98ba2512c7d90f3e9e05af41067ef756a3/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247afa98ba2512c7d90f3e9e05af41067ef756a3/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=247afa98ba2512c7d90f3e9e05af41067ef756a3", "patch": "@@ -2467,7 +2467,11 @@ cond_if_else_store_replacement (basic_block then_bb, basic_block else_bb,\n \t\t\t\t\t\t then_assign, else_assign);\n     }\n \n-  if (MAX_STORES_TO_SINK == 0)\n+  /* If either vectorization or if-conversion is disabled then do\n+     not sink any stores.  */\n+  if (MAX_STORES_TO_SINK == 0\n+      || (!flag_tree_loop_vectorize && !flag_tree_slp_vectorize)\n+      || !flag_tree_loop_if_convert)\n     return false;\n \n   /* Find data references.  */"}, {"sha": "e2baeb024834a16bd2bf713a8ef425956169b31a", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247afa98ba2512c7d90f3e9e05af41067ef756a3/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247afa98ba2512c7d90f3e9e05af41067ef756a3/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=247afa98ba2512c7d90f3e9e05af41067ef756a3", "patch": "@@ -2075,6 +2075,8 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n         {\n           unsigned max_allowed_peel\n             = PARAM_VALUE (PARAM_VECT_MAX_PEELING_FOR_ALIGNMENT);\n+\t  if (flag_vect_cost_model == VECT_COST_MODEL_CHEAP)\n+\t    max_allowed_peel = 0;\n           if (max_allowed_peel != (unsigned)-1)\n             {\n               unsigned max_peel = npeel;\n@@ -2168,15 +2170,16 @@ vect_enhance_data_refs_alignment (loop_vec_info loop_vinfo)\n   /* (2) Versioning to force alignment.  */\n \n   /* Try versioning if:\n-     1) optimize loop for speed\n+     1) optimize loop for speed and the cost-model is not cheap\n      2) there is at least one unsupported misaligned data ref with an unknown\n         misalignment, and\n      3) all misaligned data refs with a known misalignment are supported, and\n      4) the number of runtime alignment checks is within reason.  */\n \n-  do_versioning =\n-\toptimize_loop_nest_for_speed_p (loop)\n-\t&& (!loop->inner); /* FORNOW */\n+  do_versioning\n+    = (optimize_loop_nest_for_speed_p (loop)\n+       && !loop->inner /* FORNOW */\n+       && flag_vect_cost_model > VECT_COST_MODEL_CHEAP);\n \n   if (do_versioning)\n     {\n@@ -3641,13 +3644,15 @@ vect_prune_runtime_alias_test_list (loop_vec_info loop_vinfo)\n     dump_printf_loc (MSG_NOTE, vect_location,\n \t\t     \"improved number of alias checks from %d to %d\\n\",\n \t\t     may_alias_ddrs.length (), count);\n-  if ((int) count > PARAM_VALUE (PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS))\n+  unsigned limit = PARAM_VALUE (PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS);\n+  if (flag_simd_cost_model == VECT_COST_MODEL_CHEAP)\n+    limit = default_param_value\n+\t      (PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS) * 6 / 10;\n+  if (count > limit)\n     return opt_result::failure_at\n       (vect_location,\n-       \"number of versioning for alias \"\n-       \"run-time tests exceeds %d \"\n-       \"(--param vect-max-version-for-alias-checks)\\n\",\n-       PARAM_VALUE (PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS));\n+       \"number of versioning for alias run-time tests exceeds %d \"\n+       \"(--param vect-max-version-for-alias-checks)\\n\", limit);\n \n   return opt_result::success ();\n }"}]}