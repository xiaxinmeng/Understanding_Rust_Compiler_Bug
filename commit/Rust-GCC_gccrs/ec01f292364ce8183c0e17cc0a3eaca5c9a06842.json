{"sha": "ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMwMWYyOTIzNjRjZTgxODNjMGUxN2NjMGEzZWFjYTVjOWEwNjg0Mg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-11-08T16:22:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-11-08T16:22:21Z"}, "message": "basic_file_stdio.cc (fopen_mode): Add modes missing per DR 596.\n\n2007-11-08  Paolo Carlini  <pcarlini@suse.de>\n\n\t* config/io/basic_file_stdio.cc (fopen_mode): Add modes missing\n\tper DR 596.\n\t* testsuite/27_io/basic_filebuf/open/char/4.cc: Extend.\n\t* include/std/fstream: Update comment preceding open.\n\t* docs/html/ext/howto.html: Update.\n\nFrom-SVN: r130004", "tree": {"sha": "9a2c2ff8200875ea21507a390d66abed02b6242e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a2c2ff8200875ea21507a390d66abed02b6242e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/comments", "author": null, "committer": null, "parents": [{"sha": "8dc9f613eac2c3449d1b1d6269c811802cfe4b9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dc9f613eac2c3449d1b1d6269c811802cfe4b9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dc9f613eac2c3449d1b1d6269c811802cfe4b9c"}], "stats": {"total": 85, "additions": 64, "deletions": 21}, "files": [{"sha": "7abb3c281c166a78f4af6b627c5a6eb322b06db3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "patch": "@@ -1,3 +1,11 @@\n+2007-11-08  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* config/io/basic_file_stdio.cc (fopen_mode): Add modes missing\n+\tper DR 596.\n+\t* testsuite/27_io/basic_filebuf/open/char/4.cc: Extend.\n+\t* include/std/fstream: Update comment preceding open.\n+\t* docs/html/ext/howto.html: Update.\n+\n 2007-11-08  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/type_traits (__decay_selector<_Up, false, false>):"}, {"sha": "104f88c96f7c85283503d482807dbd4d36b513b8", "filename": "libstdc++-v3/config/io/basic_file_stdio.cc", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fio%2Fbasic_file_stdio.cc?ref=ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "patch": "@@ -1,6 +1,6 @@\n // Wrapper of C-language FILE struct -*- C++ -*-\n \n-// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2006\n+// Copyright (C) 2000, 2001, 2002, 2003, 2004, 2006, 2007\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -86,27 +86,31 @@ namespace\n \tapp    = std::ios_base::app,\n \tbinary = std::ios_base::binary\n       };\n-    \n+\n+    // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+    // 596. 27.8.1.3 Table 112 omits \"a+\" and \"a+b\" modes.\n     switch (mode & (in|out|trunc|app|binary))\n       {\n-      case (   out                 ): return \"w\";  \n-      case (   out      |app       ): return \"a\";  \n-      case (   out|trunc           ): return \"w\";  \n-      case (in                     ): return \"r\";  \n-      case (in|out                 ): return \"r+\"; \n-      case (in|out|trunc           ): return \"w+\"; \n-      // Extension to Table 92.\n-      case (in|out      |app       ): return \"a+\"; \n-\t\n-      case (   out          |binary): return \"wb\"; \n-      case (   out      |app|binary): return \"ab\"; \n-      case (   out|trunc    |binary): return \"wb\"; \n-      case (in              |binary): return \"rb\"; \n+      case (   out                 ): return \"w\";\n+      case (   out      |app       ): return \"a\";\n+      case (             app       ): return \"a\";\n+      case (   out|trunc           ): return \"w\";\n+      case (in                     ): return \"r\";\n+      case (in|out                 ): return \"r+\";\n+      case (in|out|trunc           ): return \"w+\";\n+      case (in|out      |app       ): return \"a+\";\n+      case (in          |app       ): return \"a+\";\n+\n+      case (   out          |binary): return \"wb\";\n+      case (   out      |app|binary): return \"ab\";\n+      case (             app|binary): return \"ab\";\n+      case (   out|trunc    |binary): return \"wb\";\n+      case (in              |binary): return \"rb\";\n       case (in|out          |binary): return \"r+b\";\n       case (in|out|trunc    |binary): return \"w+b\";\n-      // Extension to Table 92.\n       case (in|out      |app|binary): return \"a+b\";\n-\t\n+      case (in          |app|binary): return \"a+b\";\n+\n       default: return 0; // invalid\n       }\n   }"}, {"sha": "54dffbac573289a438257afa40896c44048d7ba8", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "patch": "@@ -626,6 +626,12 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n     <dd>Change it to be a formatted output function (i.e. catch exceptions).\n     </dd>\n \n+    <dt><a href=\"lwg-active.html#596\">596</a>:\n+        <em>27.8.1.3 Table 112 omits \"a+\" and \"a+b\" modes</em>\n+    </dt>\n+    <dd>Add the missing modes to fopen_mode.\n+    </dd>\n+\n     <dt><a href=\"lwg-defects.html#660\">660</a>:\n         <em>Missing bitwise operations</em>\n     </dt>"}, {"sha": "af7635e914598eaf5cef672a49acc349cba387cd", "filename": "libstdc++-v3/include/std/fstream", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffstream?ref=ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "patch": "@@ -259,26 +259,31 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n        *\n        *  Table 92, adapted here, gives the relation between openmode\n        *  combinations and the equivalent fopen() flags.\n-       *  (NB: lines in|out|app and binary|in|out|app per DR 596)\n+       *  (NB: lines app, in|out|app, in|app, binary|app, binary|in|out|app,\n+       *  and binary|in|app per DR 596)\n        *  +---------------------------------------------------------+\n        *  | ios_base Flag combination            stdio equivalent   |\n        *  |binary  in  out  trunc  app                              |\n        *  +---------------------------------------------------------+\n        *  |             +                        \"w\"                |\n        *  |             +           +            \"a\"                |\n+       *  |                         +            \"a\"                |\n        *  |             +     +                  \"w\"                |\n        *  |         +                            \"r\"                |\n        *  |         +   +                        \"r+\"               |\n        *  |         +   +     +                  \"w+\"               |\n        *  |         +   +           +            \"a+\"               |\n+       *  |         +               +            \"a+\"               |\n        *  +---------------------------------------------------------+\n        *  |   +         +                        \"wb\"               |\n        *  |   +         +           +            \"ab\"               |\n+       *  |   +                     +            \"ab\"               |\n        *  |   +         +     +                  \"wb\"               |\n        *  |   +     +                            \"rb\"               |\n        *  |   +     +   +                        \"r+b\"              |\n        *  |   +     +   +     +                  \"w+b\"              |\n        *  |   +     +   +           +            \"a+b\"              |\n+       *  |   +     +               +            \"a+b\"              |\n        *  +---------------------------------------------------------+\n        */\n       __filebuf_type*"}, {"sha": "1c8d9ea21f1ac22d2fc27338fdfa06a0e36d5124", "filename": "libstdc++-v3/testsuite/27_io/basic_filebuf/open/char/4.cc", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F4.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec01f292364ce8183c0e17cc0a3eaca5c9a06842/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F4.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_filebuf%2Fopen%2Fchar%2F4.cc?ref=ec01f292364ce8183c0e17cc0a3eaca5c9a06842", "patch": "@@ -1,6 +1,6 @@\n // 2006-10-01  Paolo Carlini  <pcarlini@suse.de>\n \n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -23,26 +23,46 @@\n #include <fstream>\n #include <testsuite_hooks.h>\n \n-// As an extension to Table 92, consistently with the C standards, we also\n-// allow in|out|app and in|out|app|binary.\n+// DR 596.\n void test01()\n {\n   bool test __attribute__((unused)) = true;\n   const char* name = \"tmp_file4\";\n \n   std::fstream scratch_file;\n \n+  scratch_file.open(name, std::ios_base::app);\n+  VERIFY( scratch_file );\n+  VERIFY( scratch_file.is_open() );\n+  scratch_file.close();\n+\n   scratch_file.open(name, std::ios_base::in | std::ios_base::out\n \t\t    | std::ios_base::app);\n   VERIFY( scratch_file );\n   VERIFY( scratch_file.is_open() );\n   scratch_file.close();\n \n+  scratch_file.open(name, std::ios_base::in | std::ios_base::app);\n+  VERIFY( scratch_file );\n+  VERIFY( scratch_file.is_open() );\n+  scratch_file.close();\n+\n+  scratch_file.open(name, std::ios_base::app | std::ios_base::binary);\n+  VERIFY( scratch_file );\n+  VERIFY( scratch_file.is_open() );\n+  scratch_file.close();\n+\n   scratch_file.open(name, std::ios_base::in | std::ios_base::out\n \t\t    | std::ios_base::app | std::ios_base::binary);\n   VERIFY( scratch_file );\n   VERIFY( scratch_file.is_open() );  \n   scratch_file.close();\n+\n+  scratch_file.open(name, std::ios_base::in | std::ios_base::app\n+\t\t    | std::ios_base::binary);\n+  VERIFY( scratch_file );\n+  VERIFY( scratch_file.is_open() );  \n+  scratch_file.close();\n }\n \n int"}]}