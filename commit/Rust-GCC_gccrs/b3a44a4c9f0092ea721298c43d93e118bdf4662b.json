{"sha": "b3a44a4c9f0092ea721298c43d93e118bdf4662b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNhNDRhNGM5ZjAwOTJlYTcyMTI5OGM0M2Q5M2UxMThiZGY0NjYyYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-12-07T07:49:33Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-12-07T07:49:33Z"}, "message": "tree.c (walk_tree): Don't recurse into DECL_INITIAL or DECL_SIZE unless...\n\n\t* tree.c (walk_tree): Don't recurse into DECL_INITIAL or DECL_SIZE\n\tunless we're declaring the variable in question.\n\nFrom-SVN: r30816", "tree": {"sha": "a0a8de69806c8f3530a583b6782cd3c52c017968", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0a8de69806c8f3530a583b6782cd3c52c017968"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3a44a4c9f0092ea721298c43d93e118bdf4662b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3a44a4c9f0092ea721298c43d93e118bdf4662b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3a44a4c9f0092ea721298c43d93e118bdf4662b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3a44a4c9f0092ea721298c43d93e118bdf4662b/comments", "author": null, "committer": null, "parents": [{"sha": "2fb9811eacce6e68f6a05a63e11bbcb03f7002c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb9811eacce6e68f6a05a63e11bbcb03f7002c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb9811eacce6e68f6a05a63e11bbcb03f7002c5"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "3de35c600b96884dbe4204cddf93fda4b6009d4d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3a44a4c9f0092ea721298c43d93e118bdf4662b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3a44a4c9f0092ea721298c43d93e118bdf4662b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b3a44a4c9f0092ea721298c43d93e118bdf4662b", "patch": "@@ -1,3 +1,8 @@\n+1999-12-06  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* tree.c (walk_tree): Don't recurse into DECL_INITIAL or DECL_SIZE\n+\tunless we're declaring the variable in question.\n+\n 1999-12-06  Mark Mitchell  <mark@codesourcery.com>\n \n \t* decl.c (init_decl_processing): #if 0 last patch."}, {"sha": "1cabf82c127ac92cf0e0a00ab065d843fa222b29", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3a44a4c9f0092ea721298c43d93e118bdf4662b/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3a44a4c9f0092ea721298c43d93e118bdf4662b/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=b3a44a4c9f0092ea721298c43d93e118bdf4662b", "patch": "@@ -1618,7 +1618,7 @@ walk_tree (tp, func, data)\n \n   code = TREE_CODE (*tp);\n \n-  /* Handle commmon cases up front.  */\n+  /* Handle common cases up front.  */\n   if (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code))\n       || TREE_CODE_CLASS (code) == 'r'\n       || TREE_CODE_CLASS (code) == 's')\n@@ -1632,16 +1632,29 @@ walk_tree (tp, func, data)\n       /* For statements, we also walk the chain so that we cover the\n \t entire statement tree.  */\n       if (statement_code_p (code))\n-\tWALK_SUBTREE (TREE_CHAIN (*tp));\n+\t{\n+\t  if (code == DECL_STMT \n+\t      && DECL_STMT_DECL (*tp) \n+\t      && TREE_CODE_CLASS (TREE_CODE (DECL_STMT_DECL (*tp))) == 'd')\n+\t    {\n+\t      /* Walk the DECL_INITIAL and DECL_SIZE.  We don't want to walk\n+\t\t into declarations that are just mentioned, rather than\n+\t\t declared; they don't really belong to this part of the tree.\n+\t\t And, we can see cycles: the initializer for a declaration can\n+\t\t refer to the declaration itself.  */\n+\t      WALK_SUBTREE (DECL_INITIAL (DECL_STMT_DECL (*tp)));\n+\t      WALK_SUBTREE (DECL_SIZE (DECL_STMT_DECL (*tp)));\n+\t    }\n+\n+\t  WALK_SUBTREE (TREE_CHAIN (*tp));\n+\t}\n \n       /* We didn't find what we were looking for.  */\n       return NULL_TREE;\n     }\n   else if (TREE_CODE_CLASS (code) == 'd')\n     {\n       WALK_SUBTREE (TREE_TYPE (*tp));\n-      WALK_SUBTREE (DECL_INITIAL (*tp));\n-      WALK_SUBTREE (DECL_SIZE (*tp));\n \n       /* We didn't find what we were looking for.  */\n       return NULL_TREE;"}]}