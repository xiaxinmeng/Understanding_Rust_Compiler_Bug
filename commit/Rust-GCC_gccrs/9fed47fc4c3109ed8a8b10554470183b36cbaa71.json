{"sha": "9fed47fc4c3109ed8a8b10554470183b36cbaa71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZlZDQ3ZmM0YzMxMDllZDhhOGIxMDU1NDQ3MDE4M2IzNmNiYWE3MQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-06-01T18:25:37Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-06-01T18:25:37Z"}, "message": "cp-tree.h (TYPE_FOR_JAVA): New macro.\n\n\ufffd\n\t* cp-tree.h (TYPE_FOR_JAVA):  New macro.\n\t* decl.c, cp-tree.h (java_byte_type_node, java_short_type_node,\n\tjava_int_type_node, java_long_type_node, java_float_type_node,\n\tjava_double_type_node, java_char_type_node, java_boolean_type_node):\n\tNew \"primitive\" types, with predefined names __java_byte etc.\n\t(record_builtin_java_type):  New function.\n\t(init_decl_processing):  Make Java types with record_builtin_java_type.\n\t(pushtag, grokdeclarator):  Set TYPE_FOR_JAVA if in extern \"JAVA\".\n\t(xref_baseypes):  If base class was TYPE_FOR_JAVA, so is this class.\n\t(grokfndecl):  Call check_java_method for Java classes.\n\t* method.c (is_java_type):  Removed.  Replaced with TYPE_FOR_JAVA.\n\t(process_overload_item):  Match types against specific\n\tjava_XX_type_node types, rather than using is_java_type.\n\t* class.c (finish_struct_1):  Don't add default copy constructor\n\tor operator= if TYPE_FOR_JAVA.\n\t(pop_lang_conext):  Restore strict_prototyp proper if Java.\n\t* decl2.c (acceptable_java_type, check_java_method):  New functions.\n\t* pt.c (instantiate_class_template):  Copy TYPE_FOR_JAVA from pattern.\n\t(tsubst):  Move common statement after if statement.\n\t* typeck.c (comptypes):  If strict, TYPE_FOR_JAVA must match.\n\nFrom-SVN: r20176", "tree": {"sha": "eac0ebd8286b3995efb34bbbc8ef7de1dad56719", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eac0ebd8286b3995efb34bbbc8ef7de1dad56719"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fed47fc4c3109ed8a8b10554470183b36cbaa71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fed47fc4c3109ed8a8b10554470183b36cbaa71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fed47fc4c3109ed8a8b10554470183b36cbaa71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fed47fc4c3109ed8a8b10554470183b36cbaa71/comments", "author": null, "committer": null, "parents": [{"sha": "ea419909d41ccfbed527b4959d02be4b958ad22c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea419909d41ccfbed527b4959d02be4b958ad22c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea419909d41ccfbed527b4959d02be4b958ad22c"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "ef04867d361e0a2bfa77023deb62dc4ee5dfcb0c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fed47fc4c3109ed8a8b10554470183b36cbaa71/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fed47fc4c3109ed8a8b10554470183b36cbaa71/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9fed47fc4c3109ed8a8b10554470183b36cbaa71", "patch": "@@ -1,3 +1,26 @@\n+1998-06-01  Per Bothner  <bothner@cygnus.com>\n+\n+\t* cp-tree.h (TYPE_FOR_JAVA):  New macro.\n+\t* decl.c, cp-tree.h (java_byte_type_node, java_short_type_node,\n+\tjava_int_type_node, java_long_type_node, java_float_type_node,\n+\tjava_double_type_node, java_char_type_node, java_boolean_type_node):\n+\tNew \"primitive\" types, with predefined names __java_byte etc.\n+\t(record_builtin_java_type):  New function.\n+\t(init_decl_processing):  Make Java types with record_builtin_java_type.\n+\t(pushtag, grokdeclarator):  Set TYPE_FOR_JAVA if in extern \"JAVA\".\n+\t(xref_baseypes):  If base class was TYPE_FOR_JAVA, so is this class.\n+\t(grokfndecl):  Call check_java_method for Java classes.\n+\t* method.c (is_java_type):  Removed.  Replaced with TYPE_FOR_JAVA.\n+\t(process_overload_item):  Match types against specific\n+\tjava_XX_type_node types, rather than using is_java_type.\n+\t* class.c (finish_struct_1):  Don't add default copy constructor\n+\tor operator= if TYPE_FOR_JAVA.\n+\t(pop_lang_conext):  Restore strict_prototyp proper if Java.\n+\t* decl2.c (acceptable_java_type, check_java_method):  New functions.\n+\t* pt.c (instantiate_class_template):  Copy TYPE_FOR_JAVA from pattern.\n+\t(tsubst):  Move common statement after if statement.\n+\t* typeck.c (comptypes):  If strict, TYPE_FOR_JAVA must match.\n+\n 1998-06-01  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* pt.c (for_each_template_parm): Use first_rtl_op."}]}