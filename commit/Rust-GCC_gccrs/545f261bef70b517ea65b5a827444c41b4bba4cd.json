{"sha": "545f261bef70b517ea65b5a827444c41b4bba4cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1ZjI2MWJlZjcwYjUxN2VhNjViNWE4Mjc0NDRjNDFiNGJiYTRjZA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-04-14T17:05:58Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-04-14T17:05:58Z"}, "message": "cp-tree.def (IF_STMT): Add an extra operand.\n\n\t* cp-tree.def (IF_STMT): Add an extra operand.\n\t* cp-objcp-common.c (cp_common_init_ts): Mark it as TS_TYPED.\n\t* cp-tree.h (IF_SCOPE): Define.\n\t* semantics.c (begin_if_stmt): Pass scope to build_stmt.\n\t(finish_if_stmt): Use IF_SCOPE instead of TREE_CHAIN.\n\nFrom-SVN: r172437", "tree": {"sha": "7c7aa65beb4d0df425539a4692a35ce53f77da3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c7aa65beb4d0df425539a4692a35ce53f77da3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/545f261bef70b517ea65b5a827444c41b4bba4cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545f261bef70b517ea65b5a827444c41b4bba4cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/545f261bef70b517ea65b5a827444c41b4bba4cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/545f261bef70b517ea65b5a827444c41b4bba4cd/comments", "author": null, "committer": null, "parents": [{"sha": "40e71fc77f174631af4978c9e3a5d949ecb9104a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40e71fc77f174631af4978c9e3a5d949ecb9104a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40e71fc77f174631af4978c9e3a5d949ecb9104a"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "6226030f5132d4c9c09a262bd99cce79048d6006", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=545f261bef70b517ea65b5a827444c41b4bba4cd", "patch": "@@ -1,3 +1,11 @@\n+2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* cp-tree.def (IF_STMT): Add an extra operand.\n+\t* cp-objcp-common.c (cp_common_init_ts): Mark it as TS_TYPED.\n+\t* cp-tree.h (IF_SCOPE): Define.\n+\t* semantics.c (begin_if_stmt): Pass scope to build_stmt.\n+\t(finish_if_stmt): Use IF_SCOPE instead of TREE_CHAIN.\n+\n 2011-04-14  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* cp-tree.def (FOR_STMT, RANGE_FOR_STMT): Add an extra operand."}, {"sha": "6aa24053f267ef0ea1ab437d1b81384e4fda9322", "filename": "gcc/cp/cp-objcp-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2Fcp-objcp-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2Fcp-objcp-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-objcp-common.c?ref=545f261bef70b517ea65b5a827444c41b4bba4cd", "patch": "@@ -238,7 +238,6 @@ cp_common_init_ts (void)\n   MARK_TS_COMMON (TEMPLATE_INFO);\n   MARK_TS_COMMON (TYPENAME_TYPE);\n   MARK_TS_COMMON (TYPEOF_TYPE);\n-  MARK_TS_COMMON (IF_STMT);\n   MARK_TS_COMMON (BASELINK);\n   MARK_TS_COMMON (SWITCH_STMT);\n   MARK_TS_COMMON (TYPE_PACK_EXPANSION);\n@@ -247,6 +246,7 @@ cp_common_init_ts (void)\n   MARK_TS_COMMON (BOUND_TEMPLATE_TEMPLATE_PARM);\n   MARK_TS_COMMON (UNBOUND_CLASS_TEMPLATE);\n \n+  MARK_TS_TYPED (IF_STMT);\n   MARK_TS_TYPED (FOR_STMT);\n   MARK_TS_TYPED (RANGE_FOR_STMT);\n   MARK_TS_TYPED (AGGR_INIT_EXPR);"}, {"sha": "59f89b8630a29e9b3799b7b5a58b95a8d6b0488a", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=545f261bef70b517ea65b5a827444c41b4bba4cd", "patch": "@@ -284,10 +284,10 @@ DEFTREECODE (MUST_NOT_THROW_EXPR, \"must_not_throw_expr\", tcc_expression, 1)\n DEFTREECODE (CLEANUP_STMT, \"cleanup_stmt\", tcc_statement, 3)\n \n /* Represents an 'if' statement. The operands are IF_COND,\n-   THEN_CLAUSE, and ELSE_CLAUSE, respectively.  */\n+   THEN_CLAUSE, and ELSE_CLAUSE, and the current scope, respectively.  */\n /* ??? It is currently still necessary to distinguish between IF_STMT\n    and COND_EXPR for the benefit of templates.  */\n-DEFTREECODE (IF_STMT, \"if_stmt\", tcc_statement, 3)\n+DEFTREECODE (IF_STMT, \"if_stmt\", tcc_statement, 4)\n \n /* Used to represent a `for' statement. The operands are\n    FOR_INIT_STMT, FOR_COND, FOR_EXPR, and FOR_BODY, respectively.  */"}, {"sha": "076754c2a8e71d122117bf563713f868312e6563", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=545f261bef70b517ea65b5a827444c41b4bba4cd", "patch": "@@ -3792,6 +3792,7 @@ more_aggr_init_expr_args_p (const aggr_init_expr_arg_iterator *iter)\n #define IF_COND(NODE)\t\tTREE_OPERAND (IF_STMT_CHECK (NODE), 0)\n #define THEN_CLAUSE(NODE)\tTREE_OPERAND (IF_STMT_CHECK (NODE), 1)\n #define ELSE_CLAUSE(NODE)\tTREE_OPERAND (IF_STMT_CHECK (NODE), 2)\n+#define IF_SCOPE(NODE)\t\tTREE_OPERAND (IF_STMT_CHECK (NODE), 3)\n \n /* WHILE_STMT accessors. These give access to the condition of the\n    while statement and the body of the while statement, respectively.  */"}, {"sha": "6e717331ad7d10e13f5176dbc5c35578d109920c", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/545f261bef70b517ea65b5a827444c41b4bba4cd/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=545f261bef70b517ea65b5a827444c41b4bba4cd", "patch": "@@ -662,8 +662,8 @@ begin_if_stmt (void)\n {\n   tree r, scope;\n   scope = do_pushlevel (sk_block);\n-  r = build_stmt (input_location, IF_STMT, NULL_TREE, NULL_TREE, NULL_TREE);\n-  TREE_CHAIN (r) = scope;\n+  r = build_stmt (input_location, IF_STMT, NULL_TREE,\n+\t\t  NULL_TREE, NULL_TREE, scope);\n   begin_cond (&IF_COND (r));\n   return r;\n }\n@@ -711,8 +711,8 @@ finish_else_clause (tree if_stmt)\n void\n finish_if_stmt (tree if_stmt)\n {\n-  tree scope = TREE_CHAIN (if_stmt);\n-  TREE_CHAIN (if_stmt) = NULL;\n+  tree scope = IF_SCOPE (if_stmt);\n+  IF_SCOPE (if_stmt) = NULL;\n   add_stmt (do_poplevel (scope));\n   finish_stmt ();\n }"}]}