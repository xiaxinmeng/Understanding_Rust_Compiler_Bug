{"sha": "852a13111dba712f147ea76b8924eda12d053644", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODUyYTEzMTExZGJhNzEyZjE0N2VhNzZiODkyNGVkYTEyZDA1MzY0NA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-06-30T09:32:41Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-06-30T09:32:41Z"}, "message": "* config/c4x/c4x.md: Fix comment.\n\nFrom-SVN: r83898", "tree": {"sha": "1fedbe38fd0bbcbf21aa94c1112fec73283729d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fedbe38fd0bbcbf21aa94c1112fec73283729d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/852a13111dba712f147ea76b8924eda12d053644", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/852a13111dba712f147ea76b8924eda12d053644", "html_url": "https://github.com/Rust-GCC/gccrs/commit/852a13111dba712f147ea76b8924eda12d053644", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/852a13111dba712f147ea76b8924eda12d053644/comments", "author": null, "committer": null, "parents": [{"sha": "badd64ad92b21a93d38da6ce99c559fff9a0ca0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/badd64ad92b21a93d38da6ce99c559fff9a0ca0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/badd64ad92b21a93d38da6ce99c559fff9a0ca0e"}], "stats": {"total": 26, "additions": 8, "deletions": 18}, "files": [{"sha": "bf7e9080a298083b3f04bdedcf677c3ff9a35b8f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/852a13111dba712f147ea76b8924eda12d053644/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/852a13111dba712f147ea76b8924eda12d053644/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=852a13111dba712f147ea76b8924eda12d053644", "patch": "@@ -1,4 +1,8 @@\n-2004-0630  Akos Kiss  <akiss@inf.u-szeged.hu>\n+2004-06-30  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* config/c4x/c4x.md: Fix comment.\n+\n+2004-06-30  Akos Kiss  <akiss@inf.u-szeged.hu>\n \n \t* arm.md (cond_return_inverted): Add \"length\" attribute.\n \n@@ -4861,7 +4865,7 @@\n \n 2004-05-22  Zack Weinberg  <zack@codesourcery.com>\n \n-       * tree.h (struct tree_decl): Add possibly_inlined bit.\n+\t* tree.h (struct tree_decl): Add possibly_inlined bit.\n \t(DECL_POSSIBLY_INLINED): New accessor macro.\n \t* cgraph.h: Remove declaration of cgraph_inline_hash.\n \t* cgraph.c: Remove definition of cgraph_inline_hash."}, {"sha": "adfdbac9d069626539805dabdd39667043b733e5", "filename": "gcc/config/c4x/c4x.md", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/852a13111dba712f147ea76b8924eda12d053644/gcc%2Fconfig%2Fc4x%2Fc4x.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/852a13111dba712f147ea76b8924eda12d053644/gcc%2Fconfig%2Fc4x%2Fc4x.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.md?ref=852a13111dba712f147ea76b8924eda12d053644", "patch": "@@ -474,31 +474,17 @@\n   ])\n \n ;\n-; C4x FUNCTIONAL UNITS\n-;\n-; Define functional units for instruction scheduling to minimize\n-; pipeline conflicts.\n+; C4x PIPELINE MODEL\n ;\n ; With the C3x, an external memory write (with no wait states) takes\n ; two cycles and an external memory read (with no wait states) takes\n ; one cycle.  However, an external read following an external write\n ; takes two cycles.  With internal memory, reads and writes take\n ; half a cycle.\n-;\n ; When a C4x address register is loaded it will not be available for\n ; an extra machine cycle.  Calculating with a C4x address register\n-; makes it unavailable for 2 machine cycles.  To notify GCC of these\n-; pipeline delays, each of the auxiliary and index registers are declared\n-; as separate functional units.\n+; makes it unavailable for 2 machine cycles.\n ;\n-; (define_function_unit NAME MULTIPLICITY SIMULTANEITY\n-;\t\t\tTEST READY-DELAY ISSUE-DELAY [CONFLICT-LIST])\n-;\n-; MULTIPLICITY 1 (C4x has no independent identical function units)\n-; SIMULTANEITY 0 (C4x is pipelined)\n-; READY_DELAY  1 (Results usually ready after every cyle)\n-; ISSUE_DELAY  1 (Can issue insns every cycle)\n-\n ; Just some dummy definitions. The real work is done in c4x_adjust_cost.\n ; These are needed so the min/max READY_DELAY is known.\n "}]}