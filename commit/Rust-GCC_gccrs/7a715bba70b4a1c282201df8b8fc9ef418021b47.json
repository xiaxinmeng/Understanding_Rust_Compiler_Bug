{"sha": "7a715bba70b4a1c282201df8b8fc9ef418021b47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E3MTViYmE3MGI0YTFjMjgyMjAxZGY4YjhmYzllZjQxODAyMWI0Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-04-09T20:52:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-04-09T20:52:30Z"}, "message": "ChangeLog: Fix ChangeLog.\n\n\t* gcc/ChangeLog: Fix ChangeLog.\n\t* gcc/testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r145855", "tree": {"sha": "06fe5d14d0cb55fb62ff9287e33051bb249c8e47", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/06fe5d14d0cb55fb62ff9287e33051bb249c8e47"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a715bba70b4a1c282201df8b8fc9ef418021b47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a715bba70b4a1c282201df8b8fc9ef418021b47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a715bba70b4a1c282201df8b8fc9ef418021b47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a715bba70b4a1c282201df8b8fc9ef418021b47/comments", "author": null, "committer": null, "parents": [{"sha": "cac9d8d6d237175b67bc301373d9002b3acb52a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cac9d8d6d237175b67bc301373d9002b3acb52a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cac9d8d6d237175b67bc301373d9002b3acb52a9"}], "stats": {"total": 94, "additions": 30, "deletions": 64}, "files": [{"sha": "f2e861c630c81a0c1aa7e01a0fa62341c0845cd3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 55, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a715bba70b4a1c282201df8b8fc9ef418021b47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a715bba70b4a1c282201df8b8fc9ef418021b47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a715bba70b4a1c282201df8b8fc9ef418021b47", "patch": "@@ -11,8 +11,7 @@\n \t* unwind-compat.c: Change copyright header to refer to version\n \t3 of the GNU General Public License with version 3.1 of the\n \tGCC Runtime Library Exception and to point readers at the\n-\tCOPYING3 and COPYING3.RUNTIME files and the FSF's license web\n-\tpage.\n+\tCOPYING3 and COPYING3.RUNTIME files and the FSF's license web page.\n \t* config/alpha/crtfastmath.c: Likewise.\n \t* config/alpha/linux-unwind.h: Likewise.\n \t* config/alpha/qrnnd.asm: Likewise.\n@@ -380,41 +379,6 @@\n         * genopinit.c (optabs): Delete sync_compare_and_swap_cc.\n         * doc/md.texi (sync_compare_and_swap_cc): Merge with\n         sync_compare_and_swap documentation.\n-=======\n-\t* config/i386/i386.md (cmpcc): New.\n-\t* config/i386/sync.md (sync_compare_and_swap*): Set FLAGS_REG.\n-\t(sync_compare_and_swap_cc*): Delete.\n-\n-\t* config/s390/s390.c (s390_compare_emitted): Remove.\n-\t(s390_emit_compare): Handle MODE_CC s390_compare_op0 like\n-\ts390_compare_emitted used to be handled.  Assert that modes match.\n-\t(s390_emit_compare_and_swap): Use s390_emit_compare, do not\n-\trefer to sync_compare_and_swap_ccsi.\n-\t* config/s390/s390.h (s390_compare_emitted): Remove.\n-\t* config/s390/s390.md (seq): Look for MODE_CC s390_compare_op0\n-\tinstead of s390_compare_emitted.\n-\t(stack_protect_test, sync_compare_and_swap_cc): Set s390_compare_op0\n-\tinstead of s390_compare_emitted.\n-\t* config/s390/s390.md (cmpcc): New.\n-\t(sync_compare_and_swapqi, sync_compare_and_swaphi): Clobber\n-\tCC_REGNUM, do not pretend it's set.\n-\t(sync_compare_and_swap_cc*): Delete.\n-\t* config/s390/predicates.md (cc_reg_operand): New.\n-\n-\t* expr.c (sync_compare_and_swap_cc): Delete.\n-\t* optabs.h (sync_compare_and_swap_cc): Delete.\n-\t* optabs.c (prepare_cmp_insn): Ignore which specific CCmode\n-\tis being used with can_compare_p.\n-\t(emit_cmp_and_jump_insn_1): Likewise when looking in the optab.\n-\t(find_cc_set): New.\n-\t(expand_bool_compare_and_swap): Do not use sync_compare_and_swap_cc,\n-\tlook for a MODE_CC set instead.  Use emit_store_flag.\n-\t(expand_compare_and_swap_loop): Likewise, with some additional\n-\tcomplication to avoid a force_reg when useless.  Use\n-\temit_cmp_and_jump_insns.\n-\t* genopinit.c (optabs): Delete sync_compare_and_swap_cc.\n-\t* doc/md.texi (sync_compare_and_swap_cc): Merge with\n-\tsync_compare_and_swap documentation.\n \n 2009-04-09  Jan Hubicka  <jh@suse.cz>\n \n@@ -819,8 +783,7 @@\n \t(vect_do_peeling_for_alignment): Adjust.  Unconditionally apply\n \tthe cost model check.\n \t(vect_loop_versioning): Take stmt and stmt list to put pre-condition\n-\tguards if we are going to peel.  Do not apply versioning in that\n-\tcase.\n+\tguards if we are going to peel.  Do not apply versioning in that case.\n \t* tree-vectorizer.h (vect_loop_versioning): Adjust declaration.\n \t(vect_do_peeling_for_loop_bound): Likewise.\n \t* tree-vect-loop.c (vect_transform_loop): If we are peeling for\n@@ -932,7 +895,9 @@\n \n \tPR rtl-optimization/39607\n \tPR rtl-optimization/39631\n-\tRevert\n+\n+\tRevert:\n+\t\n \t2009-03-30  Vladimir Makarov  <vmakarov@redhat.com>\n \t* reload.c (push_reload, find_dummy_reload): Use df_get_live_out\n \tinstead of DF_LR_OUT.\n@@ -1131,8 +1096,7 @@\n \t(record_equivalences_from_stmt): Likewise.\n \t(avail_expr_hash): Likewise.\n \t(avail_expr_eq): Likewise.\n-\t* tree-ssa-propagate.c (update_call_from_tree): Properly\n-\tupdate VOPs.\n+\t* tree-ssa-propagate.c (update_call_from_tree): Properly update VOPs.\n \t(stmt_makes_single_load): Likewise.\n \t(stmt_makes_single_store): Likewise.\n \t* tree-ssa-alias.c: Rewrite completely.\n@@ -1455,8 +1419,7 @@\n \t(PARAM_AVG_ALIASED_VOPS): Likewise.\n \t* tree-ssanames.c (init_ssanames): Allocate SYMS_TO_RENAME.\n \t(duplicate_ssa_name_ptr_info): No need to copy the shared bitmaps.\n-\t* tree-ssa-operands.c: Simplify for new virtual operand\n-\trepresentation.\n+\t* tree-ssa-operands.c: Simplify for new virtual operand representation.\n \t(operand_build_cmp, copy_virtual_operands,\n \tcreate_ssa_artificial_load_stmt, add_to_addressable_set,\n \tgimple_add_to_addresses_taken): Remove public functions.\n@@ -1611,7 +1574,8 @@\n \tAlso, make sure the function properly sets TYPE_STUB_DECL() on\n \tthe newly created typedef variant type.\n \t* c-common.h (is_typedef_decl, set_underlying_type): Declare ...\n-\t* c-common.c (is_typedef_decl, set_underlying_type): ... new entry points.\n+\t* c-common.c (is_typedef_decl, set_underlying_type): ... new entry\n+\tpoints.\n \n 2009-04-02  Richard Guenther  <rguenther@suse.de>\n \n@@ -1720,18 +1684,20 @@\n \n 2009-04-01  Matt Thomas <matt@3am-software.com>\n \n-\t* config/vax/predicates.md: New file. (symbolic_operand,\n-\tlocal_symbolic_operand, external_symbolic_operand,\n+\t* config/vax/predicates.md: New file.\n+\t(symbolic_operand, local_symbolic_operand, external_symbolic_operand,\n \texternal_const_operand, nonsymbolic_operand, external_memory_operand,\n \tindirect_memory_operand, indexed_memory_operand,\n \tillegal_blk_memory_operand, illegal_addsub_di_memory_operand,\n \tnonimmediate_addsub_di_operand, general_addsub_di_operand): New\n \tpredicate.\n-\t* config/vax/constraints.md: New file. (Z0, U06,  U08, U16, CN6, S08,\n-\tS16, I, J, K, L, M, N, O, G, Q, B, R, T): New constraint.\n-\t* config/vax/builtins.md: New file. (ffssi2, ffssi2_internal,\n-\tsync_lock_test_and_set<mode>, jbbssiqi, jbbssihi, jbbssisi,\n-\tsync_lock_release<mode>, jbbcciqi, jbbccihi, jbbccisi): Define.\n+\t* config/vax/constraints.md: New file.\n+\t(Z0, U06,  U08, U16, CN6, S08, S16, I, J, K, L, M, N, O, G, Q, B, R, T):\n+\tNew constraint.\n+\t* config/vax/builtins.md: New file.\n+\t(ffssi2, ffssi2_internal, sync_lock_test_and_set<mode>, jbbssiqi,\n+\tjbbssihi, jbbssisi, sync_lock_release<mode>, jbbcciqi, jbbccihi,\n+\tjbbccisi): Define.\n \t* config/vax/vax.opt (mqmath): Add option.\n \t* config/vax/vax.md (isfx): Extend with DI.\n \t(VAXintQH, VAXintQHSD): Define.\n@@ -1831,7 +1797,8 @@\n \n 2009-04-01  Rafael Avila de Espindola  <espindola@google.com>\n \n-       * varasm.c (default_function_rodata_section): Declare DOT as const char*.\n+\t* varasm.c (default_function_rodata_section): Declare DOT as\n+\tconst char*.\n \n 2009-04-01  Kai Tietz  <kai.tietz@onevision.com>\n \t    Andrey Galkin <agalkin@hypercom.com>\n@@ -1876,8 +1843,7 @@\n 2009-03-31  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-common.c (c_get_ident): New.\n-\t(c_common_nodes_and_builtins): Call it for type names that may be\n-\tNULL.\n+\t(c_common_nodes_and_builtins): Call it for type names that may be NULL.\n \n 2009-04-01  Ben Elliston  <bje@au.ibm.com>\n "}, {"sha": "01a21a47b85fd388ccde8e0322d71c27a50dc105", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a715bba70b4a1c282201df8b8fc9ef418021b47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a715bba70b4a1c282201df8b8fc9ef418021b47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a715bba70b4a1c282201df8b8fc9ef418021b47", "patch": "@@ -11,7 +11,7 @@\n \n 2009-04-09  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * gcc.dg/pr27150-1.c: Change to a link test.\n+\t* gcc.dg/pr27150-1.c: Change to a link test.\n \n 2009-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -54,8 +54,8 @@\n 2009-04-09  Joseph Myers  <joseph@codesourcery.com>\n \n \tPR c/39613\n-\t* gcc.dg/case-const-1.c, gcc.dg/case-const-2.c,\n-\tgcc.dg/case-const-3.c: New tests.\n+\t* gcc.dg/case-const-1.c, gcc.dg/case-const-2.c, gcc.dg/case-const-3.c:\n+\tNew tests.\n \n 2009-04-08  Joseph Myers  <joseph@codesourcery.com>\n \n@@ -136,7 +136,7 @@\n \n 2009-04-06  Laurent GUERBY  <laurent@guerby.net>\n \n-        * lib/gnat.exp: Handle multilib.\n+\t* lib/gnat.exp: Handle multilib.\n \t\n 2009-04-06  Paul Thomas  <pault@gcc.gnu.org>\n \n@@ -167,13 +167,13 @@\n \n 2009-04-06  Janus Weil  <janus@gcc.gnu.org>\n \n-       PR fortran/39414\n-       * gfortran.dg/proc_decl_21.f90: New.\n+\tPR fortran/39414\n+\t* gfortran.dg/proc_decl_21.f90: New.\n \n 2009-04-06  Paul Thomas  <pault@gcc.gnu.org>\n \n-        PR fortran/36091\n-        * gfortran.dg/forall_13.f90: Add -fbounds-check option.\n+\tPR fortran/36091\n+\t* gfortran.dg/forall_13.f90: Add -fbounds-check option.\n \n 2009-04-06  Hans-Peter Nilsson  <hp@axis.com>\n \n@@ -351,7 +351,7 @@\n 2009-04-02  Janis Johnson  <janis187@us.ibm.com>\n \n \tPR tree-optimization/31677\n-        * gcc.dg/memcpy-1.c: Add compiler option.\n+\t* gcc.dg/memcpy-1.c: Add compiler option.\n \n 2009-04-02  Ira Rosen  <irar@il.ibm.com>\n "}]}