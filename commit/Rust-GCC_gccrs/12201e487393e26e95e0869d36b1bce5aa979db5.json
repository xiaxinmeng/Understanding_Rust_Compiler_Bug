{"sha": "12201e487393e26e95e0869d36b1bce5aa979db5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTIyMDFlNDg3MzkzZTI2ZTk1ZTA4NjlkMzZiMWJjZTVhYTk3OWRiNQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-05-15T19:58:30Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-05-15T19:58:30Z"}, "message": "targhooks.c (GO_IF_MODE_DEPENDENT_ADDRESS): Use CONST_CAST_RTX.\n\n\t* targhooks.c (GO_IF_MODE_DEPENDENT_ADDRESS): Use CONST_CAST_RTX.\n\nFrom-SVN: r159441", "tree": {"sha": "ccde93d566d11e0372c1488993ca4e248f0d7a97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccde93d566d11e0372c1488993ca4e248f0d7a97"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12201e487393e26e95e0869d36b1bce5aa979db5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12201e487393e26e95e0869d36b1bce5aa979db5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12201e487393e26e95e0869d36b1bce5aa979db5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12201e487393e26e95e0869d36b1bce5aa979db5/comments", "author": null, "committer": null, "parents": [{"sha": "eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb5b0f64d2af67ce9323c1d0b5be67cfb45b210a"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "e4de1bbd5cb27799394927d01c89182a2716f7ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12201e487393e26e95e0869d36b1bce5aa979db5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12201e487393e26e95e0869d36b1bce5aa979db5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=12201e487393e26e95e0869d36b1bce5aa979db5", "patch": "@@ -1,3 +1,7 @@\n+2010-05-15  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* targhooks.c (GO_IF_MODE_DEPENDENT_ADDRESS): Use CONST_CAST_RTX.\n+\n 2010-05-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-decl.c (grokfield): Allow typedefs for anonymous structs and\n@@ -36,7 +40,7 @@\n \tipa_reference_read_optimization_summary): New.\n \t(struct ipa_opt_pass_d pass_ipa_reference): Add\n \toptimization summary streaming.\n-\t* lto-cgraph.c (referenced_from_this_partition_p, \n+\t* lto-cgraph.c (referenced_from_this_partition_p,\n \treachable_from_this_partition_p): New functions.\n \t* tree-ssa-alias.c (ref_maybe_used_by_call_p_1,\n \tcall_may_clobber_ref_p_1): Ask ipa-reference even for public vars.\n@@ -187,8 +191,8 @@\n \tAdd check for TARGET_SSE_PACKED_SINGLE_INSN_OPTIMAL to emit packed\n \tsingle logical operations i.e and, or and xor instead of packed double\n \tlogical operations for SSE and AVX.\n-\t* config/i386/i386-c.c: \n-\t(ix86_target_macros_internal): Add PROCESSOR_BDVER1.\n+\t* config/i386/i386-c.c (ix86_target_macros_internal):\n+\tAdd PROCESSOR_BDVER1.\n \t* config/i386/driver-i386.c: Turn on -mtune=native for BDVER1.\n \t(has_fma4, has_xop): New.\n \t* config/i386/i386.c (bdver1_cost): New variable.\n@@ -289,7 +293,7 @@\n \tt-mingw-w64 or t-mingw-w32 for multilib configuration.\n \t* config/i386/t-mingw-w32: New.\n \t* config/i386/t-mingw-w64 (MULTILIB_OSDIRNAMES): Change lib64 to lib.\n-\t\n+\n 2010-05-13  Martin Jambor  <mjambor@suse.cz>\n \n \t* gimple.c (gimple_fold_obj_type_ref): Removed (a replacement moved to\n@@ -318,8 +322,7 @@\n \tby SRA.\n \t* Makefile.in (dwarf2out.o): Depend on $(TREE_FLOW_H).\n \t* tree-sra.c (create_access_replacement): Call unshare_expr before\n-\tpassing expr to SET_DECL_DEBUG_EXPR, and remove any SSA_NAMEs from\n-\tit.\n+\tpassing expr to SET_DECL_DEBUG_EXPR, and remove any SSA_NAMEs from it.\n \t* dwarf2out.c: Include tree-flow.h.\n \t(struct var_loc_node): Rename var_loc_note field to loc, add comment.\n \t(size_of_loc_descr, output_loc_operands, output_loc_operands_raw):"}, {"sha": "da840190a2b8c691575a1bef757f2da93b9c95f9", "filename": "gcc/targhooks.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12201e487393e26e95e0869d36b1bce5aa979db5/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12201e487393e26e95e0869d36b1bce5aa979db5/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=12201e487393e26e95e0869d36b1bce5aa979db5", "patch": "@@ -965,7 +965,7 @@ default_mode_dependent_address_p (const_rtx addr ATTRIBUTE_UNUSED)\n {\n #ifdef GO_IF_MODE_DEPENDENT_ADDRESS\n \n-  GO_IF_MODE_DEPENDENT_ADDRESS ((rtx) addr, win);\n+  GO_IF_MODE_DEPENDENT_ADDRESS (CONST_CAST_RTX (addr), win);\n   return false;\n   /* Label `win' might (not) be used via GO_IF_MODE_DEPENDENT_ADDRESS.  */\n  win: ATTRIBUTE_UNUSED_LABEL"}]}