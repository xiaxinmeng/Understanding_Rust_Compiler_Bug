{"sha": "1cf06f1e2512b55a55f837b43c1ff235a9be1992", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNmMDZmMWUyNTEyYjU1YTU1ZjgzN2I0M2MxZmYyMzVhOWJlMTk5Mg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-02-26T18:59:50Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-02-26T18:59:50Z"}, "message": "re PR ipa/65008 (ICE: in estimate_edge_growth, at ipa-inline.h:298 with -O2)\n\n\tPR ipa/65008\n\t* ipa-inline.c (early_inliner): Recompute inline parameters.\n\n\t* g++.dg/ipa/pr65008.C: New test.\n\nFrom-SVN: r221025", "tree": {"sha": "fe3483b94d6692eccdf8db3480c51ec8064163db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe3483b94d6692eccdf8db3480c51ec8064163db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cf06f1e2512b55a55f837b43c1ff235a9be1992", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf06f1e2512b55a55f837b43c1ff235a9be1992", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cf06f1e2512b55a55f837b43c1ff235a9be1992", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cf06f1e2512b55a55f837b43c1ff235a9be1992/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3809f6458948459a466a559da99de6593bea1e83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3809f6458948459a466a559da99de6593bea1e83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3809f6458948459a466a559da99de6593bea1e83"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "4fa8ad664788542c41ce8f50bf3c7fd532a2494c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf06f1e2512b55a55f837b43c1ff235a9be1992/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf06f1e2512b55a55f837b43c1ff235a9be1992/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1cf06f1e2512b55a55f837b43c1ff235a9be1992", "patch": "@@ -1,3 +1,8 @@\n+2015-02-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR ipa/65008\n+\t* ipa-inline.c (early_inliner): Recompute inline parameters.\n+\n 2015-02-26  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/65171"}, {"sha": "c445f0a7a5d5d13c111b57917872e5e8ac2a1c5e", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf06f1e2512b55a55f837b43c1ff235a9be1992/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf06f1e2512b55a55f837b43c1ff235a9be1992/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=1cf06f1e2512b55a55f837b43c1ff235a9be1992", "patch": "@@ -2559,6 +2559,19 @@ early_inliner (function *fun)\n \t{\n \t  timevar_push (TV_INTEGRATION);\n \t  todo |= optimize_inline_calls (current_function_decl);\n+\t  /* optimize_inline_calls call above might have introduced new\n+\t     statements that don't have inline parameters computed.  */\n+\t  for (edge = node->callees; edge; edge = edge->next_callee)\n+\t    {\n+\t      if (inline_edge_summary_vec.length () > (unsigned) edge->uid)\n+\t\t{\n+\t\t  struct inline_edge_summary *es = inline_edge_summary (edge);\n+\t\t  es->call_stmt_size\n+\t\t    = estimate_num_insns (edge->call_stmt, &eni_size_weights);\n+\t\t  es->call_stmt_time\n+\t\t    = estimate_num_insns (edge->call_stmt, &eni_time_weights);\n+\t\t}\n+\t    }\n \t  inline_update_overall_summary (node);\n \t  inlined = false;\n \t  timevar_pop (TV_INTEGRATION);"}, {"sha": "be82a66b687d421c9cecd62d8fc371c7f28730b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf06f1e2512b55a55f837b43c1ff235a9be1992/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf06f1e2512b55a55f837b43c1ff235a9be1992/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1cf06f1e2512b55a55f837b43c1ff235a9be1992", "patch": "@@ -1,3 +1,8 @@\n+2015-02-26  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR ipa/65008\n+\t* g++.dg/ipa/pr65008.C: New test.\n+\n 2015-02-26  Tom de Vries  <tom@codesourcery.com>\n \n \t* lib/profopt.exp (profopt-target-cleanup): New proc."}, {"sha": "29b3a2f161fe40cbbed9dba99c0225ea3eaf84ed", "filename": "gcc/testsuite/g++.dg/ipa/pr65008.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cf06f1e2512b55a55f837b43c1ff235a9be1992/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65008.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cf06f1e2512b55a55f837b43c1ff235a9be1992/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65008.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr65008.C?ref=1cf06f1e2512b55a55f837b43c1ff235a9be1992", "patch": "@@ -0,0 +1,19 @@\n+// PR ipa/65008\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+struct A\n+{\n+  A ();\n+  virtual void foo () {}\n+};\n+\n+static inline int __attribute__ ((always_inline)) call_foo (A *a)\n+{\n+  a->foo ();\n+}\n+\n+A::A ()\n+{\n+  call_foo (this);\n+}"}]}