{"sha": "f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhMWFiZjhlM2RjMmVmNWNiNDdhMTNmMTRlNmE3ZWM4MTEzYTQ2Zg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-03-29T19:37:55Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-03-29T19:37:55Z"}, "message": "re PR lto/70283 (bogus vtable mismatch warnings)\n\n\n\tPR ipa/70283\n\t* ipa-devirt.c (methods_equal_p): New function.\n\t(compare_virtual_tables): Use it.\n\t* cgraph.h (symbol_table::symbol_suffix_separator): Declare.\n\t* cgraphclones.c (clone_function_name_1): Use\n\tsymbol_table::symbol_suffix_separator.\n\t* coverage.c (build_var): Likewise.\n\t* symtab.c (symbol_table::symbol_suffix_separator): New.\n\nFrom-SVN: r234532", "tree": {"sha": "0db1268677c278b70680ea23df35ab40f292d64f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0db1268677c278b70680ea23df35ab40f292d64f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/comments", "author": null, "committer": null, "parents": [{"sha": "a362f023e538bc30dd9f2107f71c2435f62b9289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a362f023e538bc30dd9f2107f71c2435f62b9289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a362f023e538bc30dd9f2107f71c2435f62b9289"}], "stats": {"total": 86, "additions": 64, "deletions": 22}, "files": [{"sha": "866531fe021442daab0d2f14283fd889eee86a3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "patch": "@@ -1,3 +1,14 @@\n+2016-03-10  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/70283\n+\t* ipa-devirt.c (methods_equal_p): New function.\n+\t(compare_virtual_tables): Use it.\n+\t* cgraph.h (symbol_table::symbol_suffix_separator): Declare.\n+\t* cgraphclones.c (clone_function_name_1): Use\n+\tsymbol_table::symbol_suffix_separator.\n+\t* coverage.c (build_var): Likewise.\n+\t* symtab.c (symbol_table::symbol_suffix_separator): New.\n+\n 2016-03-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR rtl-optimization/70429"}, {"sha": "e92928523992b1913d80f028a346fcc8f633f479", "filename": "gcc/cgraph.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "patch": "@@ -2173,6 +2173,9 @@ class GTY((tag (\"SYMTAB\"))) symbol_table\n \n   FILE* GTY ((skip)) dump_file;\n \n+  /* Return symbol used to separate symbol name from suffix.  */\n+  static char symbol_suffix_separator ();\n+\n private:\n   /* Allocate new callgraph node.  */\n   inline cgraph_node * allocate_cgraph_symbol (void);"}, {"sha": "07ceb1a80d49dcf3c940f2b0f265996f7b072e00", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "patch": "@@ -512,13 +512,7 @@ clone_function_name_1 (const char *name, const char *suffix)\n   prefix = XALLOCAVEC (char, len + strlen (suffix) + 2);\n   memcpy (prefix, name, len);\n   strcpy (prefix + len + 1, suffix);\n-#ifndef NO_DOT_IN_LABEL\n-  prefix[len] = '.';\n-#elif !defined NO_DOLLAR_IN_LABEL\n-  prefix[len] = '$';\n-#else\n-  prefix[len] = '_';\n-#endif\n+  prefix[len] = symbol_table::symbol_suffix_separator ();\n   ASM_FORMAT_PRIVATE_NAME (tmp_name, prefix, clone_fn_id_num++);\n   return get_identifier (tmp_name);\n }"}, {"sha": "b1fce7d0e7a462ef94c8973aab2bc43f5113bd0d", "filename": "gcc/coverage.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fcoverage.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fcoverage.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcoverage.c?ref=f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "patch": "@@ -745,11 +745,7 @@ build_var (tree fn_decl, tree type, int counter)\n   else\n     sprintf (buf, \"__gcov%u_\", counter);\n   len = strlen (buf);\n-#ifndef NO_DOT_IN_LABEL\n-  buf[len - 1] = '.';\n-#elif !defined NO_DOLLAR_IN_LABEL\n-  buf[len - 1] = '$';\n-#endif\n+  buf[len - 1] = symbol_table::symbol_suffix_separator ();\n   memcpy (buf + len, fn_name, fn_name_len + 1);\n   DECL_NAME (var) = get_identifier (buf);\n   TREE_STATIC (var) = 1;"}, {"sha": "069495105bfb368f4d87c7369fb09cccf7d55784", "filename": "gcc/ipa-devirt.c", "status": "modified", "additions": 34, "deletions": 10, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fipa-devirt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fipa-devirt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-devirt.c?ref=f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "patch": "@@ -705,6 +705,29 @@ odr_subtypes_equivalent_p (tree t1, tree t2,\n   return odr_types_equivalent_p (t1, t2, false, NULL, visited, loc1, loc2);\n }\n \n+/* Return true if DECL1 and DECL2 are identical methods.  Consider\n+   name equivalent to name.localalias.xyz.  */\n+\n+static bool\n+methods_equal_p (tree decl1, tree decl2)\n+{\n+  if (DECL_ASSEMBLER_NAME (decl1) == DECL_ASSEMBLER_NAME (decl2))\n+    return true;\n+  const char sep = symbol_table::symbol_suffix_separator ();\n+\n+  const char *name1 = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl1));\n+  const char *ptr1 = strchr (name1, sep);\n+  int len1 = ptr1 ? ptr1 - name1 : strlen (name1);\n+\n+  const char *name2 = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (decl2));\n+  const char *ptr2 = strchr (name2, sep);\n+  int len2 = ptr2 ? ptr2 - name2 : strlen (name2);\n+\n+  if (len1 != len2)\n+    return false;\n+  return !strncmp (name1, name2, len1);\n+}\n+\n /* Compare two virtual tables, PREVAILING and VTABLE and output ODR\n    violation warnings.  */\n \n@@ -758,8 +781,8 @@ compare_virtual_tables (varpool_node *prevailing, varpool_node *vtable)\n \t accept the other case.  */\n       while (!end2\n \t     && (end1\n-\t         || (DECL_ASSEMBLER_NAME (ref1->referred->decl)\n-\t\t     != DECL_ASSEMBLER_NAME (ref2->referred->decl)\n+\t         || (methods_equal_p (ref1->referred->decl,\n+\t\t\t\t      ref2->referred->decl)\n \t             && TREE_CODE (ref1->referred->decl) == FUNCTION_DECL))\n \t     && TREE_CODE (ref2->referred->decl) != FUNCTION_DECL)\n \t{\n@@ -785,8 +808,7 @@ compare_virtual_tables (varpool_node *prevailing, varpool_node *vtable)\n \t}\n       while (!end1\n \t     && (end2\n-\t         || (DECL_ASSEMBLER_NAME (ref2->referred->decl)\n-\t\t     != DECL_ASSEMBLER_NAME (ref1->referred->decl)\n+\t         || (methods_equal_p (ref2->referred->decl, ref1->referred->decl)\n \t             && TREE_CODE (ref2->referred->decl) == FUNCTION_DECL))\n \t     && TREE_CODE (ref1->referred->decl) != FUNCTION_DECL)\n \t{\n@@ -823,8 +845,7 @@ compare_virtual_tables (varpool_node *prevailing, varpool_node *vtable)\n \n       if (!end1 && !end2)\n \t{\n-\t  if (DECL_ASSEMBLER_NAME (ref1->referred->decl)\n-\t      == DECL_ASSEMBLER_NAME (ref2->referred->decl))\n+\t  if (methods_equal_p (ref1->referred->decl, ref2->referred->decl))\n \t    continue;\n \n \t  class_type->odr_violated = true;\n@@ -920,11 +941,14 @@ compare_virtual_tables (varpool_node *prevailing, varpool_node *vtable)\n \t\t      \"unit\");\n \t      gcc_assert (TREE_CODE (ref2->referred->decl)\n \t\t\t  == FUNCTION_DECL);\n-\t      inform (DECL_SOURCE_LOCATION (ref1->referred->decl),\n-\t\t      \"virtual method %qD\", ref1->referred->decl);\n-\t      inform (DECL_SOURCE_LOCATION (ref2->referred->decl),\n+\t      inform (DECL_SOURCE_LOCATION\n+\t\t\t (ref1->referred->ultimate_alias_target ()->decl),\n+\t\t      \"virtual method %qD\",\n+\t\t      ref1->referred->ultimate_alias_target ()->decl);\n+\t      inform (DECL_SOURCE_LOCATION\n+\t\t\t (ref2->referred->ultimate_alias_target ()->decl),\n \t\t      \"ought to match virtual method %qD but does not\",\n-\t\t      ref2->referred->decl);\n+\t\t      ref2->referred->ultimate_alias_target ()->decl);\n \t    }\n \t  else\n \t    inform (DECL_SOURCE_LOCATION"}, {"sha": "2d7705e657cb1e798ac739b2fc964caefc2194b2", "filename": "gcc/symtab.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fsymtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f/gcc%2Fsymtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymtab.c?ref=f8a1abf8e3dc2ef5cb47a13f14e6a7ec8113a46f", "patch": "@@ -2137,3 +2137,17 @@ symtab_node::definition_alignment ()\n   call_for_symbol_and_aliases (get_alignment_1, &align, true);\n   return align;\n }\n+\n+/* Return symbol used to separate symbol name from suffix.  */\n+\n+char \n+symbol_table::symbol_suffix_separator ()\n+{\n+#ifndef NO_DOT_IN_LABEL\n+  return '.';\n+#elif !defined NO_DOLLAR_IN_LABEL\n+  return '$';\n+#else\n+  return '_';\n+#endif\n+}"}]}