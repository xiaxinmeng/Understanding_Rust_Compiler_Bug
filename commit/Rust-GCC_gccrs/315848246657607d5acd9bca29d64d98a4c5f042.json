{"sha": "315848246657607d5acd9bca29d64d98a4c5f042", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE1ODQ4MjQ2NjU3NjA3ZDVhY2Q5YmNhMjlkNjRkOThhNGM1ZjA0Mg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-10-02T16:41:35Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2020-10-02T16:41:35Z"}, "message": "ipa-cp: Separate and increase the large-unit parameter\n\nA previous patch in the series has taught IPA-CP to identify the\nimportant cloning opportunities in 548.exchange2_r as worthwhile on\ntheir own, but the optimization is still prevented from taking place\nbecause of the overall unit-growh limit.  This patches raises that\nlimit so that it takes place and the benchmark runs 30% faster (on AMD\nZen2 CPU at least).\n\nBefore this patch, IPA-CP uses the following formulae to arrive at the\noverall_size limit:\n\nbase = MAX(orig_size, param_large_unit_insns)\nunit_growth_limit = base + base * param_ipa_cp_unit_growth / 100\n\nsince param_ipa_cp_unit_growth has default 10, param_large_unit_insns\nhas default value 10000.\n\nThe problem with exchange2 (at least on zen2 but I have had a quick\nlook on aarch64 too) is that the original estimated unit size is 10513\nand so param_large_unit_insns does not apply and the default limit is\ntherefore 11564 which is good enough only for one of the ideal 8\nclonings, we need the limit to be at least 16291.\n\nI would like to raise param_ipa_cp_unit_growth a little bit more soon\ntoo, but most certainly not to 55.  Therefore, the large_unit must be\nincreased.  In this patch, I decided to decouple the inlining and\nipa-cp large-unit parameters.  It also makes sense because IPA-CP uses\nit only at -O3 while inlining also at -O2 (IIUC).  But if we agree we\ncan try raising param_large_unit_insns to 13-14 thousand\n\"instructions,\" perhaps it is not necessary.  But then again, it may\nmake sense to actually increase the IPA-CP limit further.\n\nI plan to experiment with IPA-CP tuning on a larger set of programs.\nMeanwhile, mainly to address the 548.exchange2_r regression, I'm\nsuggesting this simple change.\n\ngcc/ChangeLog:\n\n2020-09-07  Martin Jambor  <mjambor@suse.cz>\n\n\t* params.opt (ipa-cp-large-unit-insns): New parameter.\n\t* ipa-cp.c (get_max_overall_size): Use the new parameter.", "tree": {"sha": "e07cdcae1759f6aac27f5d6e3dd65f5544c1973b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e07cdcae1759f6aac27f5d6e3dd65f5544c1973b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/315848246657607d5acd9bca29d64d98a4c5f042", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/315848246657607d5acd9bca29d64d98a4c5f042", "html_url": "https://github.com/Rust-GCC/gccrs/commit/315848246657607d5acd9bca29d64d98a4c5f042", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/315848246657607d5acd9bca29d64d98a4c5f042/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91153e0af9a457a0085bb796613a81404480d5af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91153e0af9a457a0085bb796613a81404480d5af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91153e0af9a457a0085bb796613a81404480d5af"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "2152f9e58762c2495ffc402455bf928dae48d2ed", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/315848246657607d5acd9bca29d64d98a4c5f042/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/315848246657607d5acd9bca29d64d98a4c5f042/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=315848246657607d5acd9bca29d64d98a4c5f042", "patch": "@@ -3448,7 +3448,7 @@ static long\n get_max_overall_size (cgraph_node *node)\n {\n   long max_new_size = orig_overall_size;\n-  long large_unit = opt_for_fn (node->decl, param_large_unit_insns);\n+  long large_unit = opt_for_fn (node->decl, param_ipa_cp_large_unit_insns);\n   if (max_new_size < large_unit)\n     max_new_size = large_unit;\n   int unit_growth = opt_for_fn (node->decl, param_ipa_cp_unit_growth);"}, {"sha": "6f308a10da0c2a470c75623e190e8c220c63e44b", "filename": "gcc/params.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/315848246657607d5acd9bca29d64d98a4c5f042/gcc%2Fparams.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/315848246657607d5acd9bca29d64d98a4c5f042/gcc%2Fparams.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.opt?ref=315848246657607d5acd9bca29d64d98a4c5f042", "patch": "@@ -214,6 +214,10 @@ Percentage penalty functions containing a single call to another function will r\n Common Joined UInteger Var(param_ipa_cp_unit_growth) Init(10) Param Optimization\n How much can given compilation unit grow because of the interprocedural constant propagation (in percent).\n \n+-param=ipa-cp-large-unit-insns=\n+Common Joined UInteger Var(param_ipa_cp_large_unit_insns) Optimization Init(16000) Param\n+The size of translation unit that IPA-CP pass considers large.\n+\n -param=ipa-cp-value-list-size=\n Common Joined UInteger Var(param_ipa_cp_value_list_size) Init(8) Param Optimization\n Maximum size of a list of values associated with each parameter for interprocedural constant propagation."}]}