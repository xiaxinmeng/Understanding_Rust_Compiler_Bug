{"sha": "a3a704a495fab23d8a9ed90a2207c09a61cca341", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNhNzA0YTQ5NWZhYjIzZDhhOWVkOTBhMjIwN2MwOWE2MWNjYTM0MQ==", "commit": {"author": {"name": "Mark Heffernan", "email": "meheff@google.com", "date": "2011-08-23T18:06:42Z"}, "committer": {"name": "Mark Heffernan", "email": "meheff@gcc.gnu.org", "date": "2011-08-23T18:06:42Z"}, "message": "re PR middle-end/38509 (Bogus \"attempt to free a non-heap object\" warning)\n\n2011-08-23  Mark Heffernan  <meheff@google.com>\n\n        PR middle-end/38509\n        * common.opt (Wfree-nonheap-object): New option.\n        * doc/invoke.texi (Warning options): Document -Wfree-nonheap-object.\n        * builtins.c (maybe_emit_free_warning): Add OPT_Wfree_nonheap_object\n        to warning.\n        (expand_builtin): Make warning conditional.\n\nFrom-SVN: r178004", "tree": {"sha": "617e016549617abef28a5f2414f2c7309caae53b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/617e016549617abef28a5f2414f2c7309caae53b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3a704a495fab23d8a9ed90a2207c09a61cca341", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a704a495fab23d8a9ed90a2207c09a61cca341", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3a704a495fab23d8a9ed90a2207c09a61cca341", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3a704a495fab23d8a9ed90a2207c09a61cca341/comments", "author": {"login": "meheffernan", "id": 8258238, "node_id": "MDQ6VXNlcjgyNTgyMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/8258238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/meheffernan", "html_url": "https://github.com/meheffernan", "followers_url": "https://api.github.com/users/meheffernan/followers", "following_url": "https://api.github.com/users/meheffernan/following{/other_user}", "gists_url": "https://api.github.com/users/meheffernan/gists{/gist_id}", "starred_url": "https://api.github.com/users/meheffernan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/meheffernan/subscriptions", "organizations_url": "https://api.github.com/users/meheffernan/orgs", "repos_url": "https://api.github.com/users/meheffernan/repos", "events_url": "https://api.github.com/users/meheffernan/events{/privacy}", "received_events_url": "https://api.github.com/users/meheffernan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "82feeb8d6804cfa21d451ade6e11240f0dc0d5b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82feeb8d6804cfa21d451ade6e11240f0dc0d5b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82feeb8d6804cfa21d451ade6e11240f0dc0d5b9"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "d65f7522fd3ce2464e998cf569b232886aa363ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a704a495fab23d8a9ed90a2207c09a61cca341/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a704a495fab23d8a9ed90a2207c09a61cca341/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3a704a495fab23d8a9ed90a2207c09a61cca341", "patch": "@@ -1,3 +1,12 @@\n+2011-08-23  Mark Heffernan  <meheff@google.com>\n+\n+\tPR middle-end/38509\n+\t* common.opt (Wfree-nonheap-object): New option.\n+\t* doc/invoke.texi (Warning options): Document -Wfree-nonheap-object.\n+\t* builtins.c (maybe_emit_free_warning): Add OPT_Wfree_nonheap_object\n+\tto warning.\n+\t(expand_builtin): Make warning conditional.\n+\n 2011-08-23  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (type): Add imulx, ishiftx and rotatex."}, {"sha": "b79ce6f4a7479fb7dba887d53de05c923009eb1c", "filename": "gcc/builtins.c", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a704a495fab23d8a9ed90a2207c09a61cca341/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a704a495fab23d8a9ed90a2207c09a61cca341/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=a3a704a495fab23d8a9ed90a2207c09a61cca341", "patch": "@@ -6096,7 +6096,8 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n       break;\n \n     case BUILT_IN_FREE:\n-      maybe_emit_free_warning (exp);\n+      if (warn_free_nonheap_object)\n+\tmaybe_emit_free_warning (exp);\n       break;\n \n     default:\t/* just do library call, if unknown builtin */\n@@ -11915,11 +11916,11 @@ maybe_emit_free_warning (tree exp)\n     return;\n \n   if (SSA_VAR_P (arg))\n-    warning_at (tree_nonartificial_location (exp),\n-\t\t0, \"%Kattempt to free a non-heap object %qD\", exp, arg);\n+    warning_at (tree_nonartificial_location (exp), OPT_Wfree_nonheap_object,\n+\t\t\"%Kattempt to free a non-heap object %qD\", exp, arg);\n   else\n-    warning_at (tree_nonartificial_location (exp),\n-\t\t0, \"%Kattempt to free a non-heap object\", exp);\n+    warning_at (tree_nonartificial_location (exp), OPT_Wfree_nonheap_object,\n+\t\t\"%Kattempt to free a non-heap object\", exp);\n }\n \n /* Fold a call to __builtin_object_size with arguments PTR and OST,"}, {"sha": "ba3e254dd1432febf773be72df9bf2e74c4296fb", "filename": "gcc/common.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a704a495fab23d8a9ed90a2207c09a61cca341/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a704a495fab23d8a9ed90a2207c09a61cca341/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=a3a704a495fab23d8a9ed90a2207c09a61cca341", "patch": "@@ -543,6 +543,10 @@ Wframe-larger-than=\n Common RejectNegative Joined UInteger\n -Wframe-larger-than=<number>\tWarn if a function's stack frame requires more than <number> bytes\n \n+Wfree-nonheap-object\n+Common Var(warn_free_nonheap_object) Init(1) Warning\n+Warn when attempting to free a non-heap object\n+\n Winline\n Common Var(warn_inline) Warning\n Warn when an inlined function cannot be inlined"}, {"sha": "62a841cca43521ece20ed4eb6b61cb13db44205b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3a704a495fab23d8a9ed90a2207c09a61cca341/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3a704a495fab23d8a9ed90a2207c09a61cca341/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=a3a704a495fab23d8a9ed90a2207c09a61cca341", "patch": "@@ -244,7 +244,8 @@ Objective-C and Objective-C++ Dialects}.\n -Wfatal-errors  -Wfloat-equal  -Wformat  -Wformat=2 @gol\n -Wno-format-contains-nul -Wno-format-extra-args -Wformat-nonliteral @gol\n -Wformat-security  -Wformat-y2k @gol\n--Wframe-larger-than=@var{len} -Wjump-misses-init -Wignored-qualifiers @gol\n+-Wframe-larger-than=@var{len} -Wno-free-nonheap-object -Wjump-misses-init @gol\n+-Wignored-qualifiers @gol\n -Wimplicit  -Wimplicit-function-declaration  -Wimplicit-int @gol\n -Winit-self  -Winline -Wmaybe-uninitialized @gol\n -Wno-int-to-pointer-cast -Wno-invalid-offsetof @gol\n@@ -3960,6 +3961,12 @@ via @code{alloca}, variable-length arrays, or related constructs\n is not included by the compiler when determining\n whether or not to issue a warning.\n \n+@item -Wno-free-nonheap-object\n+@opindex Wno-free-nonheap-object\n+@opindex Wfree-nonheap-object\n+Do not warn when attempting to free an object which was not allocated\n+on the heap.\n+\n @item -Wstack-usage=@var{len}\n @opindex Wstack-usage\n Warn if the stack usage of a function might be larger than @var{len} bytes."}]}