{"sha": "7fd4d3123d92d31dcf627fd357683642c32e297e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZkNGQzMTIzZDkyZDMxZGNmNjI3ZmQzNTc2ODM2NDJjMzJlMjk3ZQ==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobias.schlueter@physik.uni-muenchen.de", "date": "2005-09-20T15:05:32Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2005-09-20T15:05:32Z"}, "message": "re PR fortran/23420 (ICE on invalid print statement)\n\nfortran/\n\tPR fortran/23420\n\t* io.c (resolve_tag): Don't allow non-CHARACTER constants as formats.\n\t(match_io): Fix usage of gfc_find_symbol.\ntestsuite/\n\tPR fortran/23420\n\t* gfortran.dg/print_fmt_4.f: New.\n\nFrom-SVN: r104454", "tree": {"sha": "6a17ecec8dd841b485fa0161d2cd07ac51b50edf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a17ecec8dd841b485fa0161d2cd07ac51b50edf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fd4d3123d92d31dcf627fd357683642c32e297e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd4d3123d92d31dcf627fd357683642c32e297e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fd4d3123d92d31dcf627fd357683642c32e297e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fd4d3123d92d31dcf627fd357683642c32e297e/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a4ef45bf43dc2465861dbae5f886a5e91a6ff7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a4ef45bf43dc2465861dbae5f886a5e91a6ff7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a4ef45bf43dc2465861dbae5f886a5e91a6ff7d"}], "stats": {"total": 106, "additions": 66, "deletions": 40}, "files": [{"sha": "13af14bca7439f18c7705d7ed573f57b9e5103fa", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd4d3123d92d31dcf627fd357683642c32e297e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd4d3123d92d31dcf627fd357683642c32e297e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7fd4d3123d92d31dcf627fd357683642c32e297e", "patch": "@@ -1,3 +1,9 @@\n+2005-09-20  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/23420\n+\t* io.c (resolve_tag): Don't allow non-CHARACTER constants as formats.\n+\t(match_io): Fix usage of gfc_find_symbol.\n+\n 2005-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/23663"}, {"sha": "9f459c683631b017a37d94c7cbb24b4da548e81a", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 52, "deletions": 40, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd4d3123d92d31dcf627fd357683642c32e297e/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd4d3123d92d31dcf627fd357683642c32e297e/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=7fd4d3123d92d31dcf627fd357683642c32e297e", "patch": "@@ -979,6 +979,15 @@ resolve_tag (const io_tag * tag, gfc_expr * e)\n \n   if (tag == &tag_format)\n     {\n+      if (e->expr_type == EXPR_CONSTANT\n+\t  && (e->ts.type != BT_CHARACTER\n+\t      || e->ts.kind != gfc_default_character_kind))\n+\t{\n+\t  gfc_error (\"Constant expression in FORMAT tag at %L must be \"\n+\t\t     \"of type default CHARACTER\", &e->where);\n+\t  return FAILURE;\n+\t}\n+\n       /* If e's rank is zero and e is not an element of an array, it should be\n \t of integer or character type.  The integer variable should be\n \t ASSIGNED.  */\n@@ -2158,51 +2167,51 @@ match_io (io_kind k)\n \n   comma_flag = 0;\n   current_dt = dt = gfc_getmem (sizeof (gfc_dt));\n-\n   if (gfc_match_char ('(') == MATCH_NO)\n     {\n+      where = gfc_current_locus;\n       if (k == M_WRITE)\n \tgoto syntax;\n-      else if (k == M_PRINT \n-\t       && (gfc_current_form == FORM_FIXED\n-\t\t   || gfc_peek_char () == ' '))\n+      else if (k == M_PRINT)\n \t{\n \t  /* Treat the non-standard case of PRINT namelist.  */\n-\t  where = gfc_current_locus;\n-\t  if ((gfc_match_name (name) == MATCH_YES)\n-\t      && !gfc_find_symbol (name, NULL, 1, &sym)\n-\t      && sym->attr.flavor == FL_NAMELIST)\n+\t  if ((gfc_current_form == FORM_FIXED || gfc_peek_char () == ' ')\n+\t      && gfc_match_name (name) == MATCH_YES)\n \t    {\n-\t      if (gfc_notify_std (GFC_STD_GNU, \"PRINT namelist at \"\n-\t\t\t\t  \"%C is an extension\") == FAILURE)\n+\t      gfc_find_symbol (name, NULL, 1, &sym);\n+\t      if (sym && sym->attr.flavor == FL_NAMELIST)\n \t\t{\n-\t\t  m = MATCH_ERROR;\n-\t\t  goto cleanup;\n+\t\t  if (gfc_notify_std (GFC_STD_GNU, \"PRINT namelist at \"\n+\t\t\t\t      \"%C is an extension\") == FAILURE)\n+\t\t    {\n+\t\t      m = MATCH_ERROR;\n+\t\t      goto cleanup;\n+\t\t    }\n+\t\t  if (gfc_match_eos () == MATCH_NO)\n+\t\t    {\n+\t\t      gfc_error (\"Namelist followed by I/O list at %C\");\n+\t\t      m = MATCH_ERROR;\n+\t\t      goto cleanup;\n+\t\t    }\n+\n+\t\t  dt->io_unit = default_unit (k);\n+\t\t  dt->namelist = sym;\n+\t\t  goto get_io_list;\n \t\t}\n-\t      if (gfc_match_eos () == MATCH_NO)\n-\t\t{\n-\t\t  gfc_error (\"Namelist followed by I/O list at %C\");\n-\t\t  m = MATCH_ERROR;\n-\t\t  goto cleanup;\n-\t\t}\n-\n-\t      dt->io_unit = default_unit (k);\n-\t      dt->namelist = sym;\n-\t      goto get_io_list;\n+\t      else\n+\t\tgfc_current_locus = where;\n \t    }\n-\t  else\n-\t    gfc_current_locus = where;\n \t}\n \n       if (gfc_current_form == FORM_FREE)\n-       {\n-         c = gfc_peek_char();\n-         if (c != ' ' && c != '*' && c != '\\'' && c != '\"')\n-           {\n-             m = MATCH_NO;\n-             goto cleanup;\n-           }\n-       }\n+\t{\n+\t  c = gfc_peek_char();\n+\t  if (c != ' ' && c != '*' && c != '\\'' && c != '\"')\n+\t    {\n+\t      m = MATCH_NO;\n+\t      goto cleanup;\n+\t    }\n+\t}\n \n       m = match_dt_format (dt);\n       if (m == MATCH_ERROR)\n@@ -2240,17 +2249,20 @@ match_io (io_kind k)\n \n   where = gfc_current_locus;\n \n-  if (gfc_match_name (name) == MATCH_YES\n-      && !gfc_find_symbol (name, NULL, 1, &sym)\n-      && sym->attr.flavor == FL_NAMELIST)\n+  m = gfc_match_name (name);\n+  if (m == MATCH_YES)\n     {\n-      dt->namelist = sym;\n-      if (k == M_READ && check_namelist (sym))\n+      gfc_find_symbol (name, NULL, 1, &sym);\n+      if (sym && sym->attr.flavor == FL_NAMELIST)\n \t{\n-\t  m = MATCH_ERROR;\n-\t  goto cleanup;\n+\t  dt->namelist = sym;\n+\t  if (k == M_READ && check_namelist (sym))\n+\t    {\n+\t      m = MATCH_ERROR;\n+\t      goto cleanup;\n+\t    }\n+\t  goto next;\n \t}\n-      goto next;\n     }\n \n   gfc_current_locus = where;"}, {"sha": "f91da85168639c1edb3c73e36c34f25a96173f19", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd4d3123d92d31dcf627fd357683642c32e297e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd4d3123d92d31dcf627fd357683642c32e297e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7fd4d3123d92d31dcf627fd357683642c32e297e", "patch": "@@ -1,3 +1,8 @@\n+2005-09-20  Tobias Schl\"uter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/23420\n+\t* gfortran.dg/print_fmt_4.f: New.\n+\n 2005-09-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/23663"}, {"sha": "f8978ebc71ef96275ef6cbe38bb5144548fcfd99", "filename": "gcc/testsuite/gfortran.dg/print_fmt_4.f", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fd4d3123d92d31dcf627fd357683642c32e297e/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_fmt_4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fd4d3123d92d31dcf627fd357683642c32e297e/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_fmt_4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fprint_fmt_4.f?ref=7fd4d3123d92d31dcf627fd357683642c32e297e", "patch": "@@ -0,0 +1,3 @@\n+! { dg-do compile }\n+      print precision(1.) ! { dg-error \"must be of type default CHARACTER\" }\n+      end"}]}