{"sha": "365ca18bf02e2fe6b41e17990ea834d788a03856", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY1Y2ExOGJmMDJlMmZlNmI0MWUxNzk5MGVhODM0ZDc4OGEwMzg1Ng==", "commit": {"author": {"name": "Gavin Koch", "email": "gavin@cygnus.com", "date": "1998-02-17T18:31:03Z"}, "committer": {"name": "Gavin Romig-Koch", "email": "gavin@gcc.gnu.org", "date": "1998-02-17T18:31:03Z"}, "message": "mips.h (CAN_ELIMINATE): Don't eliminate the frame pointer for the stack pointer in MIPS16 and 64BIT.\n\n\t* mips/mips.h (CAN_ELIMINATE): Don't eliminate the frame\n\tpointer for the stack pointer in MIPS16 and 64BIT.\n\nFrom-SVN: r18035", "tree": {"sha": "45523813e74d79790d653c6639ef7cc9e2c8a2f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45523813e74d79790d653c6639ef7cc9e2c8a2f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/365ca18bf02e2fe6b41e17990ea834d788a03856", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365ca18bf02e2fe6b41e17990ea834d788a03856", "html_url": "https://github.com/Rust-GCC/gccrs/commit/365ca18bf02e2fe6b41e17990ea834d788a03856", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/365ca18bf02e2fe6b41e17990ea834d788a03856/comments", "author": null, "committer": null, "parents": [{"sha": "153305b05c2e5965f24a64ead19b97eb95c148bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/153305b05c2e5965f24a64ead19b97eb95c148bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/153305b05c2e5965f24a64ead19b97eb95c148bc"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "787f54626afaace53bb7291867121a23d02f20e5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365ca18bf02e2fe6b41e17990ea834d788a03856/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365ca18bf02e2fe6b41e17990ea834d788a03856/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=365ca18bf02e2fe6b41e17990ea834d788a03856", "patch": "@@ -1,3 +1,8 @@\n+Tue Feb 17 21:28:12 1998  Gavin Koch  <gavin@cygnus.com>\n+\n+\t* mips/mips.h (CAN_ELIMINATE): Don't eliminate the frame\n+\tpointer for the stack pointer in MIPS16 and 64BIT.\n+\n Tue Feb 17 21:17:30 1997  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* rtl.h (force_line_numbers, restore_line_number_status): Declare."}, {"sha": "582478f3fdb15332fe200f95133b6f8621eb0c44", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/365ca18bf02e2fe6b41e17990ea834d788a03856/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/365ca18bf02e2fe6b41e17990ea834d788a03856/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=365ca18bf02e2fe6b41e17990ea834d788a03856", "patch": "@@ -2115,16 +2115,23 @@ extern struct mips_frame_info current_frame_info;\n    cases preventing register elimination are things that the compiler\n    already knows about.\n \n-   We can always eliminate to the frame pointer.  We can eliminate to\n-   the stack pointer unless a frame pointer is needed.  In mips16\n-   mode, we need a frame pointer for a large frame; otherwise, reload\n-   may be unable to compute the address of a local variable, since\n-   there is no way to add a large constant to the stack pointer\n-   without using a temporary register.  */\n+   When not in mips16 and mips64, we can always eliminate to the\n+   frame pointer.  We can eliminate to the stack pointer unless\n+   a frame pointer is needed.  In mips16 mode, we need a frame\n+   pointer for a large frame; otherwise, reload may be unable\n+   to compute the address of a local variable, since there is\n+   no way to add a large constant to the stack pointer\n+   without using a temporary register.\n+\n+   In mips16, for some instructions (eg lwu), we can't eliminate the\n+   frame pointer for the stack pointer.  These instructions are\n+   only generated in TARGET_64BIT mode.\n+   */\n \n #define CAN_ELIMINATE(FROM, TO)\t\t\t\t\t\t\\\n   ((TO) == HARD_FRAME_POINTER_REGNUM\t\t\t\t\t\\\n    || ((TO) == STACK_POINTER_REGNUM && ! frame_pointer_needed\t\t\\\n+       && ! (TARGET_MIPS16 && TARGET_64BIT)                             \\\n        && (! TARGET_MIPS16\t\t\t\t\t\t\\\n \t   || compute_frame_size (get_frame_size ()) < 32768)))\n "}]}