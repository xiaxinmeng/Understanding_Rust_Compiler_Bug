{"sha": "f14e01090b090777be3b78441d851f221dd13230", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjE0ZTAxMDkwYjA5MDc3N2JlM2I3ODQ0MWQ4NTFmMjIxZGQxMzIzMA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-08-25T19:35:15Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-08-25T19:35:15Z"}, "message": "rs6000: Fix PR67346\n\n\"*ior<mode>_mask\" is a define_insn_and_split, so it shouldn't use\ncan_create_pseudo in its instruction condition, because IRA can then\ncreate such an instruction, and the condition becomes false before\nthe insn is split.  Use a scratch instead.\n\n\n2015-08-25  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\tPR target/67346\n\t* config/rs6000/rs6000.md (*ior<mode>_mask): Use a match_scratch.\n\nFrom-SVN: r227183", "tree": {"sha": "19897b3dccc8c0e7642624b8d3963a85a7f87dc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19897b3dccc8c0e7642624b8d3963a85a7f87dc6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f14e01090b090777be3b78441d851f221dd13230", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14e01090b090777be3b78441d851f221dd13230", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f14e01090b090777be3b78441d851f221dd13230", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f14e01090b090777be3b78441d851f221dd13230/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b733687e967cc21ae3610c3bca9250a82d66c193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b733687e967cc21ae3610c3bca9250a82d66c193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b733687e967cc21ae3610c3bca9250a82d66c193"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "3900191fceeb5e8103d88b38f230de24be65b5d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14e01090b090777be3b78441d851f221dd13230/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14e01090b090777be3b78441d851f221dd13230/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f14e01090b090777be3b78441d851f221dd13230", "patch": "@@ -1,3 +1,8 @@\n+2015-08-25  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/67346\n+\t* config/rs6000/rs6000.md (*ior<mode>_mask): Use a match_scratch.\n+\n 2015-08-25  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/67344"}, {"sha": "f7b3b4e3032f19dcfe67b18dcbece277c66b8f88", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f14e01090b090777be3b78441d851f221dd13230/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f14e01090b090777be3b78441d851f221dd13230/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f14e01090b090777be3b78441d851f221dd13230", "patch": "@@ -3652,9 +3652,9 @@\n (define_insn_and_split \"*ior<mode>_mask\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r\")\n \t(ior:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r\")\n-\t\t (match_operand:GPR 2 \"const_int_operand\" \"n\")))]\n-  \"can_create_pseudo_p ()\n-   && !logical_const_operand (operands[2], <MODE>mode)\n+\t\t (match_operand:GPR 2 \"const_int_operand\" \"n\")))\n+   (clobber (match_scratch:GPR 3 \"=r\"))]\n+  \"!logical_const_operand (operands[2], <MODE>mode)\n    && rs6000_is_valid_mask (operands[2], NULL, NULL, <MODE>mode)\"\n   \"#\"\n   \"&& 1\"\n@@ -3669,7 +3669,8 @@\n {\n   int nb, ne;\n   rs6000_is_valid_mask (operands[2], &nb, &ne, <MODE>mode);\n-  operands[3] = gen_reg_rtx (<MODE>mode);\n+  if (GET_CODE (operands[3]) == SCRATCH)\n+    operands[3] = gen_reg_rtx (<MODE>mode);\n   operands[4] = GEN_INT (ne);\n   operands[5] = GEN_INT (~UINTVAL (operands[2]));\n }"}]}