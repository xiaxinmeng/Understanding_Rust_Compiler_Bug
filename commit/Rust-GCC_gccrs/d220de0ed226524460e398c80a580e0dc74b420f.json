{"sha": "d220de0ed226524460e398c80a580e0dc74b420f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIyMGRlMGVkMjI2NTI0NDYwZTM5OGM4MGE1ODBlMGRjNzRiNDIwZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-21T00:39:05Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-21T00:39:05Z"}, "message": "alias.c (OUTGOING_REGNO): Don't define the default.\n\n\t* alias.c (OUTGOING_REGNO): Don't define the default.\n\t* builtins.c (OUTGOING_REGNO): Likewise.\n\t(INCOMING_REGNO): Likewise.\n\t(apply_args_register_offset): Always use OUTGOING_REGNO.\n\t* combine.c (OUTGOING_REGNO): Likewise.\n\t* sibcall.c (OUTGOING_REGNO): Likewise.\n\t* defaults.h (INCOMING_REGNO): Provide the default.\n\t(OUTGOING_REGNO): Likewise.\n\nFrom-SVN: r78203", "tree": {"sha": "9fa392b00802fdde47c169ef1bd870bd2e34eb66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fa392b00802fdde47c169ef1bd870bd2e34eb66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d220de0ed226524460e398c80a580e0dc74b420f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d220de0ed226524460e398c80a580e0dc74b420f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d220de0ed226524460e398c80a580e0dc74b420f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d220de0ed226524460e398c80a580e0dc74b420f/comments", "author": null, "committer": null, "parents": [{"sha": "701ad47e98c79fdeba475b499311d821d3dd3704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/701ad47e98c79fdeba475b499311d821d3dd3704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/701ad47e98c79fdeba475b499311d821d3dd3704"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "9b428ea6034901410edfc656b7e2822292d347cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d220de0ed226524460e398c80a580e0dc74b420f", "patch": "@@ -1,3 +1,14 @@\n+2004-02-20  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* alias.c (OUTGOING_REGNO): Don't define the default.\n+\t* builtins.c (OUTGOING_REGNO): Likewise.\n+\t(INCOMING_REGNO): Likewise.\n+\t(apply_args_register_offset): Always use OUTGOING_REGNO.\n+\t* combine.c (OUTGOING_REGNO): Likewise.\n+\t* sibcall.c (OUTGOING_REGNO): Likewise.\n+\t* defaults.h (INCOMING_REGNO): Provide the default.\n+\t(OUTGOING_REGNO): Likewise.\n+\n 2004-02-21  Jan Hubicka  <jh@suse.cz>\n \n \t* params.def (max-peeled-insns, max-completely-peeled-insns,"}, {"sha": "e7ace3fab3bd6a850f1ce3a80fe6e0abd737aef4", "filename": "gcc/alias.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=d220de0ed226524460e398c80a580e0dc74b420f", "patch": "@@ -2661,9 +2661,6 @@ init_alias_once (void)\n {\n   int i;\n \n-#ifndef OUTGOING_REGNO\n-#define OUTGOING_REGNO(N) N\n-#endif\n   for (i = 0; i < FIRST_PSEUDO_REGISTER; i++)\n     /* Check whether this register can hold an incoming pointer\n        argument.  FUNCTION_ARG_REGNO_P tests outgoing register"}, {"sha": "7e5953a955cef056718320ea50daea79cd5697aa", "filename": "gcc/builtins.c", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=d220de0ed226524460e398c80a580e0dc74b420f", "patch": "@@ -48,14 +48,6 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define CALLED_AS_BUILT_IN(NODE) \\\n    (!strncmp (IDENTIFIER_POINTER (DECL_NAME (NODE)), \"__builtin_\", 10))\n \n-/* Register mappings for target machines without register windows.  */\n-#ifndef INCOMING_REGNO\n-#define INCOMING_REGNO(OUT) (OUT)\n-#endif\n-#ifndef OUTGOING_REGNO\n-#define OUTGOING_REGNO(IN) (IN)\n-#endif\n-\n #ifndef PAD_VARARGS_DOWN\n #define PAD_VARARGS_DOWN BYTES_BIG_ENDIAN\n #endif\n@@ -902,10 +894,7 @@ apply_args_register_offset (int regno)\n \n   /* Arguments are always put in outgoing registers (in the argument\n      block) if such make sense.  */\n-#ifdef OUTGOING_REGNO\n-  regno = OUTGOING_REGNO (regno);\n-#endif\n-  return apply_args_reg_offset[regno];\n+  return apply_args_reg_offset[OUTGOING_REGNO (regno)];\n }\n \n /* Return the size required for the block returned by __builtin_apply_args,"}, {"sha": "8911cb2db327c21c16b535509cf0c09535230dfc", "filename": "gcc/combine.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d220de0ed226524460e398c80a580e0dc74b420f", "patch": "@@ -813,9 +813,6 @@ setup_incoming_promotions (void)\n \n   if (targetm.calls.promote_function_args (TREE_TYPE (cfun->decl)))\n     {\n-#ifndef OUTGOING_REGNO\n-#define OUTGOING_REGNO(N) N\n-#endif\n       for (regno = 0; regno < FIRST_PSEUDO_REGISTER; regno++)\n \t/* Check whether this register can hold an incoming pointer\n \t   argument.  FUNCTION_ARG_REGNO_P tests outgoing register"}, {"sha": "551c9783c3e9fe439a0d4353c537a004b9848364", "filename": "gcc/defaults.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=d220de0ed226524460e398c80a580e0dc74b420f", "patch": "@@ -690,4 +690,13 @@ You Lose!  You must define PREFERRED_DEBUGGING_TYPE!\n #define CASE_VECTOR_PC_RELATIVE 0\n #endif\n \n+/* Register mappings for target machines without register windows.  */\n+#ifndef INCOMING_REGNO\n+#define INCOMING_REGNO(N) (N)\n+#endif\n+\n+#ifndef OUTGOING_REGNO\n+#define OUTGOING_REGNO(N) (N)\n+#endif\n+\n #endif  /* ! GCC_DEFAULTS_H */"}, {"sha": "fc9a63f7f862eadf40c62f12d7c065838a576286", "filename": "gcc/sibcall.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Fsibcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d220de0ed226524460e398c80a580e0dc74b420f/gcc%2Fsibcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsibcall.c?ref=d220de0ed226524460e398c80a580e0dc74b420f", "patch": "@@ -174,10 +174,6 @@ skip_copy_to_return_value (rtx orig_insn)\n      called function's return value was copied.  Otherwise we're returning\n      some other value.  */\n \n-#ifndef OUTGOING_REGNO\n-#define OUTGOING_REGNO(N) (N)\n-#endif\n-\n   if (SET_DEST (set) == current_function_return_rtx\n       && REG_P (SET_DEST (set))\n       && OUTGOING_REGNO (REGNO (SET_DEST (set))) == REGNO (hardret)"}]}