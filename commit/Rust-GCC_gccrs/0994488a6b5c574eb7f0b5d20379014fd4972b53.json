{"sha": "0994488a6b5c574eb7f0b5d20379014fd4972b53", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDk5NDQ4OGE2YjVjNTc0ZWI3ZjBiNWQyMDM3OTAxNGZkNDk3MmI1Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-26T23:16:05Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-26T23:16:05Z"}, "message": "Changed Class * to Class in order to match NEXTSTEP and OpenStep\nruntime.\n\nFrom-SVN: r9497", "tree": {"sha": "ed95cfef8f672383b556a1b28fa706e099282eac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed95cfef8f672383b556a1b28fa706e099282eac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0994488a6b5c574eb7f0b5d20379014fd4972b53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0994488a6b5c574eb7f0b5d20379014fd4972b53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0994488a6b5c574eb7f0b5d20379014fd4972b53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0994488a6b5c574eb7f0b5d20379014fd4972b53/comments", "author": null, "committer": null, "parents": [{"sha": "bc1f3f779183a64a745f8fdbb816b83bf822cd91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1f3f779183a64a745f8fdbb816b83bf822cd91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc1f3f779183a64a745f8fdbb816b83bf822cd91"}], "stats": {"total": 299, "additions": 146, "deletions": 153}, "files": [{"sha": "cb8e00fecdb8ba8135ba98fd250ca652a1e22242", "filename": "gcc/objc/Object.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2FObject.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2FObject.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FObject.h?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,5 +1,5 @@\n /* Interface for the Object class for Objective-C.\n-   Copyright (C) 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -35,7 +35,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n  */\n @interface Object\n {\n-    Class*\tisa;\t/* A pointer to the instance's class structure */\n+    Class\tisa;\t/* A pointer to the instance's class structure */\n }\n \n         /* Initializing classes and instances */\n@@ -52,9 +52,9 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n - deepCopy;\n \n         /* Identifying classes */\n-- (Class*)class;\n-- (Class*)superClass;\n-- (MetaClass*)metaClass;\n+- (Class)class;\n+- (Class)superClass;\n+- (MetaClass)metaClass;\n - (const char *)name;\n \n         /* Identifying and comparing objects */\n@@ -69,8 +69,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n - (BOOL)isInstance;\n \n         /* Testing inheritance relationships */\n-- (BOOL)isKindOf:(Class*)aClassObject;\n-- (BOOL)isMemberOf:(Class*)aClassObject;\n+- (BOOL)isKindOf:(Class)aClassObject;\n+- (BOOL)isMemberOf:(Class)aClassObject;\n - (BOOL)isKindOfClassNamed:(const char *)aClassName;\n - (BOOL)isMemberOfClassNamed:(const char *)aClassName;\n \n@@ -97,8 +97,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n - (retval_t)performv:(SEL)aSel :(arglist_t)argFrame;\n \n         /* Posing */\n-+ poseAs:(Class*)aClassObject;\n-- (Class*)transmuteClassTo:(Class*)aClassObject;\n++ poseAs:(Class)aClassObject;\n+- (Class)transmuteClassTo:(Class)aClassObject;\n \n         /* Enforcing intentions */\n - subclassResponsibility:(SEL)aSel;"}, {"sha": "6187c9663babe26a75e327d071c941cbec0e2d2b", "filename": "gcc/objc/Object.m", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2FObject.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2FObject.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FObject.m?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,5 +1,5 @@\n /* The implementation of class Object for Objective-C.\n-   Copyright (C) 1993, 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -81,17 +81,17 @@ @implementation Object\n   return [self copy];\n }\n \n-- (Class*)class\n+- (Class)class\n {\n   return object_get_class(self);\n }\n \n-- (Class*)superClass\n+- (Class)superClass\n {\n   return object_get_super_class(self);\n }\n \n-- (MetaClass*)metaClass\n+- (MetaClass)metaClass\n {\n   return object_get_meta_class(self);\n }\n@@ -143,24 +143,24 @@ - (BOOL)isInstance\n   return object_is_instance(self);\n }\n \n-- (BOOL)isKindOf:(Class*)aClassObject\n+- (BOOL)isKindOf:(Class)aClassObject\n {\n-  Class* class;\n+  Class class;\n \n   for (class = self->isa; class!=Nil; class = class_get_super_class(class))\n     if (class==aClassObject)\n       return YES;\n   return NO;\n }\n \n-- (BOOL)isMemberOf:(Class*)aClassObject\n+- (BOOL)isMemberOf:(Class)aClassObject\n {\n   return self->isa==aClassObject;\n }\n \n - (BOOL)isKindOfClassNamed:(const char *)aClassName\n {\n-  Class* class;\n+  Class class;\n \n   if (aClassName!=NULL)\n     for (class = self->isa; class!=Nil; class = class_get_super_class(class))\n@@ -204,7 +204,7 @@ + (BOOL) conformsTo: (Protocol*)aProtocol\n   struct objc_protocol_list* proto_list;\n   id parent;\n \n-  for (proto_list = ((Class*)self)->protocols;\n+  for (proto_list = ((Class)self)->protocols;\n        proto_list; proto_list = proto_list->next)\n     {\n       for (i=0; i < proto_list->count; i++)\n@@ -280,19 +280,19 @@ - (retval_t)performv:(SEL)aSel :(arglist_t)argFrame\n   return objc_msg_sendv(self, aSel, argFrame);\n }\n \n-+ poseAs:(Class*)aClassObject\n++ poseAs:(Class)aClassObject\n {\n   return class_pose_as(self, aClassObject);\n }\n \n-- (Class*)transmuteClassTo:(Class*)aClassObject\n+- (Class)transmuteClassTo:(Class)aClassObject\n {\n   if (object_is_instance(self))\n     if (class_is_class(aClassObject))\n       if (class_get_instance_size(aClassObject)==class_get_instance_size(isa))\n         if ([self isKindOf:aClassObject])\n           {\n-            Class* old_isa = isa;\n+            Class old_isa = isa;\n             isa = aClassObject;\n             return old_isa;\n           }"}, {"sha": "42a4a004cf8cea8341ae97ab69dcf208eafa4c5a", "filename": "gcc/objc/archive.c", "status": "modified", "additions": 17, "deletions": 18, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Farchive.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Farchive.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Farchive.c?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,22 +1,21 @@\n /* GNU Objective C Runtime archiving\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n-\n-Author: Kresten Krab Thorup\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify it under the\n-   terms of the GNU General Public License as published by the Free Software\n-   Foundation; either version 2, or (at your option) any later version.\n+terms of the GNU General Public License as published by the Free Software\n+Foundation; either version 2, or (at your option) any later version.\n \n GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n-   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n-   details.\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+details.\n \n You should have received a copy of the GNU General Public License along with\n-   GNU CC; see the file COPYING.  If not, write to the Free Software\n-   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+GNU CC; see the file COPYING.  If not, write to the Free Software\n+Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, if you link this library with files compiled with\n    GCC to produce an executable, this does not cause the resulting executable\n@@ -45,7 +44,7 @@ extern int fflush(FILE*);\n /* Declare some functions... */\n \n static int\n-objc_read_class (struct objc_typed_stream* stream, Class** class);\n+objc_read_class (struct objc_typed_stream* stream, Class* class);\n \n int objc_sizeof_type(const char* type);\n \n@@ -796,7 +795,7 @@ objc_read_object (struct objc_typed_stream* stream, id* object)\n \n       if (buf[0] == (_B_EXT | _BX_OBJECT))\n \t{\n-\t  Class* class;\n+\t  Class class;\n \n \t  /* get class */\n \t  len = objc_read_class (stream, &class);\n@@ -849,7 +848,7 @@ objc_read_object (struct objc_typed_stream* stream, id* object)\n }\n \n static int\n-objc_read_class (struct objc_typed_stream* stream, Class** class)\n+objc_read_class (struct objc_typed_stream* stream, Class* class)\n {\n   unsigned char buf[sizeof (unsigned int)];\n   int len;\n@@ -958,7 +957,7 @@ objc_write_type(TypedStream* stream, const char* type, const void* data)\n     break;\n \n   case _C_CLASS:\n-    return objc_write_class (stream, *(Class**)data);\n+    return objc_write_class (stream, *(Class*)data);\n     break;\n \n   case _C_SEL:\n@@ -1052,7 +1051,7 @@ objc_read_type(TypedStream* stream, const char* type, void* data)\n     break;\n \n   case _C_CLASS:\n-    return objc_read_class (stream, (Class**)data);\n+    return objc_read_class (stream, (Class*)data);\n     break;\n \n   case _C_SEL:\n@@ -1153,7 +1152,7 @@ objc_write_types (TypedStream* stream, const char* type, ...)\n \tbreak;\n \n       case _C_CLASS:\n-\tres = objc_write_class (stream, *va_arg(args, Class**));\n+\tres = objc_write_class (stream, *va_arg(args, Class*));\n \tbreak;\n \n       case _C_SEL:\n@@ -1252,7 +1251,7 @@ objc_read_types(TypedStream* stream, const char* type, ...)\n \tbreak;\n \n       case _C_CLASS:\n-\tres = objc_read_class(stream, va_arg(args, Class**));\n+\tres = objc_read_class(stream, va_arg(args, Class*));\n \tbreak;\n \n       case _C_SEL:\n@@ -1589,7 +1588,7 @@ objc_flush_typed_stream (TypedStream* stream)\n }\n \n long\n-objc_get_stream_class_version (TypedStream* stream, Class* class)\n+objc_get_stream_class_version (TypedStream* stream, Class class)\n {\n   if (stream->class_table)\n     return PTR2LONG(hash_value_for_key (stream->class_table, class->name));"}, {"sha": "0e7d49b14035034011d65085b6a440327c03f4fb", "filename": "gcc/objc/class.c", "status": "modified", "additions": 31, "deletions": 32, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fclass.c?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,22 +1,21 @@\n /* GNU Objective C Runtime class related functions\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n-\n-Author: Kresten Krab Thorup, Dennis Glatting\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Contributed by Kresten Krab Thorup and Dennis Glatting.\n \n This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify it under the\n-   terms of the GNU General Public License as published by the Free Software\n-   Foundation; either version 2, or (at your option) any later version.\n+terms of the GNU General Public License as published by the Free Software\n+Foundation; either version 2, or (at your option) any later version.\n \n GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n-   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n-   details.\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+details.\n \n You should have received a copy of the GNU General Public License along with\n-   GNU CC; see the file COPYING.  If not, write to the Free Software\n-   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+GNU CC; see the file COPYING.  If not, write to the Free Software\n+Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, if you link this library with files compiled with\n    GCC to produce an executable, this does not cause the resulting executable\n@@ -33,7 +32,7 @@ static cache_ptr __objc_class_hash = 0;\n /* This is a hook which is called by objc_get_class and \n    objc_lookup_class if the runtime is not able to find the class.\n    This may e.g. try to load in the class using dynamic loading */\n-Class* (*_objc_lookup_class)(const char* name) = 0;\n+Class (*_objc_lookup_class)(const char* name) = 0;\n \n \n /* True when class links has been resolved */     \n@@ -59,9 +58,9 @@ void __objc_init_class_tables()\n /* This function adds a class to the class hash table, and assigns the \n    class a number, unless it's already known */\n void\n-__objc_add_class_to_hash(Class* class)\n+__objc_add_class_to_hash(Class class)\n {\n-  Class* h_class;\n+  Class h_class;\n \n   /* make sure the table is there */\n   assert(__objc_class_hash);\n@@ -88,9 +87,9 @@ __objc_add_class_to_hash(Class* class)\n /* Get the class object for the class named NAME.  If NAME does not\n    identify a known class, the hook _objc_lookup_class is called.  If\n    this fails, nil is returned */\n-Class* objc_lookup_class (const char* name)\n+Class objc_lookup_class (const char* name)\n {\n-  Class* class;\n+  Class class;\n \n   /* Make sure the class hash table exists.  */\n   assert (__objc_class_hash);\n@@ -109,10 +108,10 @@ Class* objc_lookup_class (const char* name)\n /* Get the class object for the class named NAME.  If NAME does not\n    identify a known class, the hook _objc_lookup_class is called.  If\n    this fails,  an error message is issued and the system aborts */\n-Class*\n+Class\n objc_get_class (const char *name)\n {\n-  Class* class;\n+  Class class;\n \n   /* Make sure the class hash table exists.  */\n   assert (__objc_class_hash);\n@@ -132,7 +131,7 @@ objc_get_class (const char *name)\n   abort();\n }\n \n-MetaClass*\n+MetaClass\n objc_get_meta_class(const char *name)\n {\n   return objc_get_class(name)->class_pointer;\n@@ -147,7 +146,7 @@ objc_get_meta_class(const char *name)\n        while ((class = objc_next_class(&es)))\n          ... do something with class; \n */\n-Class* \n+Class\n objc_next_class(void **enum_state)\n {\n   /* make sure the table is there */\n@@ -157,7 +156,7 @@ objc_next_class(void **enum_state)\n     hash_next(__objc_class_hash, *(node_ptr*)enum_state);\n   if (*(node_ptr*)enum_state)\n     return (*(node_ptr*)enum_state)->value;\n-  return (Class*)0;\n+  return (Class)0;\n }\n \n /* Resolve super/subclass links for all classes.  The only thing we \n@@ -166,15 +165,15 @@ objc_next_class(void **enum_state)\n void __objc_resolve_class_links()\n {\n   node_ptr node;\n-  Class* object_class = objc_get_class (\"Object\");\n+  Class object_class = objc_get_class (\"Object\");\n \n   assert(object_class);\n \n   /* Assign subclass links */\n   for (node = hash_next (__objc_class_hash, NULL); node;\n        node = hash_next (__objc_class_hash, node))\n     {\n-      Class* class1 = node->value;\n+      Class class1 = node->value;\n \n       /* Make sure we have what we think we have.  */\n       assert (CLS_ISCLASS(class1));\n@@ -190,7 +189,7 @@ void __objc_resolve_class_links()\n               \n           if(class1->super_class)\n             {   \n-              Class* a_super_class \n+              Class a_super_class \n                 = objc_get_class ((char *) class1->super_class);\n               \n               assert (a_super_class);\n@@ -225,8 +224,8 @@ void __objc_resolve_class_links()\n   for (node = hash_next (__objc_class_hash, NULL); node;\n        node = hash_next (__objc_class_hash, node))\n     {\n-      Class* class1 = node->value;\n-      Class* sub_class;\n+      Class class1 = node->value;\n+      Class sub_class;\n       for (sub_class = class1->subclass_list; sub_class;\n            sub_class = sub_class->sibling_class)\n         {\n@@ -241,11 +240,11 @@ void __objc_resolve_class_links()\n \n #define CLASSOF(c) ((c)->class_pointer)\n \n-Class*\n-class_pose_as (Class* impostor, Class* super_class)\n+Class\n+class_pose_as (Class impostor, Class super_class)\n {\n   node_ptr node;\n-  Class* class1;\n+  Class class1;\n \n   if (!CLS_ISRESOLV (impostor))\n     __objc_resolve_class_links ();\n@@ -259,16 +258,16 @@ class_pose_as (Class* impostor, Class* super_class)\n   assert (impostor->instance_size == super_class->instance_size);\n \n   {\n-    Class **subclass = &(super_class->subclass_list);\n+    Class *subclass = &(super_class->subclass_list);\n \n     /* move subclasses of super_class to impostor */\n     while (*subclass)\n       {\n-\tClass *nextSub = (*subclass)->sibling_class;\n+\tClass nextSub = (*subclass)->sibling_class;\n \n \tif (*subclass != impostor)\n \t  {\n-\t    Class *sub = *subclass;\n+\t    Class sub = *subclass;\n \n \t    /* classes */\n \t    sub->sibling_class = impostor->subclass_list;\n@@ -311,7 +310,7 @@ class_pose_as (Class* impostor, Class* super_class)\n   for (node = hash_next (__objc_class_hash, NULL); node;\n        node = hash_next (__objc_class_hash, node))\n     {\n-      class1 = (Class*)node->value;\n+      class1 = (Class)node->value;\n       if (class1 == super_class)\n \t{\n \t  node->value = impostor; /* change hash table value */"}, {"sha": "7f64046a4872190c64ef49348d21b2d1a6d614a3", "filename": "gcc/objc/encoding.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fencoding.c?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,7 +1,6 @@\n /* Encoding of types for Objective C.\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n-\n-Author: Kresten Krab Thorup\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n \n@@ -64,7 +63,7 @@ objc_sizeof_type(const char* type)\n     break;\n \n   case _C_CLASS:\n-    return sizeof(Class*);\n+    return sizeof(Class);\n     break;\n \n   case _C_SEL:\n@@ -171,7 +170,7 @@ objc_alignof_type(const char* type)\n     break;\n \n   case _C_CLASS:\n-    return __alignof__(Class*);\n+    return __alignof__(Class);\n     break;\n     \n   case _C_SEL:"}, {"sha": "93655e6c7ed4a99822824de79dc25f4787d23b55", "filename": "gcc/objc/objc.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fobjc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fobjc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc.h?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,5 +1,5 @@\n /* Basic data types for Objective C.\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -76,7 +76,7 @@ typedef id (*IMP)(id, SEL, ...);\n ** More simple types...\n */\n #define nil (id)0                               /* id of Nil instance */\n-#define Nil (Class*)0                          /* id of Nil class */\n+#define Nil (Class)0                            /* id of Nil class */\n typedef char *STR;                              /* String alias */\n \n /*\n@@ -89,10 +89,10 @@ typedef char *STR;                              /* String alias */\n ** change type. The compiler generates \"char* const\" and places a string in\n ** the following member variables:  super_class. \n */\n-typedef struct objc_class MetaClass;\n-typedef struct objc_class Class;\n+typedef struct objc_class *MetaClass;\n+typedef struct objc_class *Class;\n struct objc_class {     \n-  MetaClass*         class_pointer;          /* Pointer to the class's\n+  MetaClass           class_pointer;          /* Pointer to the class's\n                                                 meta class. */\n   struct objc_class*  super_class;            /* Pointer to the super \n                                                 class. NULL for class "}, {"sha": "ed0899eb77edd50d81f3a88b301ab2131d37da74", "filename": "gcc/objc/objects.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fobjects.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fobjects.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjects.c?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,22 +1,21 @@\n /* GNU Objective C Runtime class related functions\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n-\n-Author: Kresten Krab Thorup\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify it under the\n-   terms of the GNU General Public License as published by the Free Software\n-   Foundation; either version 2, or (at your option) any later version.\n+terms of the GNU General Public License as published by the Free Software\n+Foundation; either version 2, or (at your option) any later version.\n \n GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n-   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n-   details.\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+details.\n \n You should have received a copy of the GNU General Public License along with\n-   GNU CC; see the file COPYING.  If not, write to the Free Software\n-   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+GNU CC; see the file COPYING.  If not, write to the Free Software\n+Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, if you link this library with files compiled with\n    GCC to produce an executable, this does not cause the resulting executable\n@@ -27,16 +26,16 @@ You should have received a copy of the GNU General Public License along with\n #include \"../tconfig.h\"         /* include defs of bzero for target */\n #include \"runtime.h\"\t\t/* the kitchen sink */\n \n-id __objc_object_alloc(Class*);\n+id __objc_object_alloc(Class);\n id __objc_object_dispose(id);\n id __objc_object_copy(id);\n \n-id (*_objc_object_alloc)(Class*) = __objc_object_alloc;\n+id (*_objc_object_alloc)(Class)   = __objc_object_alloc;\n id (*_objc_object_dispose)(id)    = __objc_object_dispose;\n id (*_objc_object_copy)(id)       = __objc_object_copy;\n \n id\n-class_create_instance(Class* class)\n+class_create_instance(Class class)\n {\n   id new = nil;\n   if (CLS_ISCLASS(class))\n@@ -71,7 +70,7 @@ object_dispose(id object)\n   return nil;\n }\n \n-id __objc_object_alloc(Class* class)\n+id __objc_object_alloc(Class class)\n {\n   return (id)__objc_xmalloc(class->instance_size);\n }"}, {"sha": "8086b25b15bdedbd595e3ef15c236e84f40aab93", "filename": "gcc/objc/runtime.h", "status": "modified", "additions": 16, "deletions": 17, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fruntime.h?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,22 +1,21 @@\n /* GNU Objective C Runtime internal declarations\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n-\n-Author: Kresten Krab Thorup\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify it under the\n-   terms of the GNU General Public License as published by the Free Software\n-   Foundation; either version 2, or (at your option) any later version.\n+terms of the GNU General Public License as published by the Free Software\n+Foundation; either version 2, or (at your option) any later version.\n \n GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n-   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n-   details.\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+details.\n \n You should have received a copy of the GNU General Public License along with\n-   GNU CC; see the file COPYING.  If not, write to the Free Software\n-   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+GNU CC; see the file COPYING.  If not, write to the Free Software\n+Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, if you link this library with files compiled with\n    GCC to produce an executable, this does not cause the resulting executable\n@@ -41,15 +40,15 @@ You should have received a copy of the GNU General Public License along with\n #include \"objc/hash.h\"\t\t/* hash structures */\n #include \"objc/list.h\"\t\t/* linear lists */\n \n-extern void __objc_add_class_to_hash(Class*); /* (objc-class.c) */\n+extern void __objc_add_class_to_hash(Class);   /* (objc-class.c) */\n extern void __objc_init_selector_tables();     /* (objc-sel.c) */\n-extern void __objc_init_class_tables();     /* (objc-class.c) */\n+extern void __objc_init_class_tables();        /* (objc-class.c) */\n extern void __objc_init_dispatch_tables();     /* (objc-dispatch.c) */\n-extern void __objc_install_premature_dtable(Class*); /* (objc-dispatch.c) */\n-extern void __objc_resolve_class_links(); /* (objc-class.c) */\n-extern void __objc_register_selectors_from_class(Class*); /* (objc-sel.c) */\n-extern void __objc_update_dispatch_table_for_class (Class*);/* (objc-msg.c) */\n-extern void class_add_method_list(Class*, MethodList_t);\n+extern void __objc_install_premature_dtable(Class); /* (objc-dispatch.c) */\n+extern void __objc_resolve_class_links();      /* (objc-class.c) */\n+extern void __objc_register_selectors_from_class(Class); /* (objc-sel.c) */\n+extern void __objc_update_dispatch_table_for_class (Class);/* (objc-msg.c) */\n+extern void class_add_method_list(Class, MethodList_t);\n \n extern void objc_error(id object, const char* fmt, va_list);\n extern void (*_objc_error)(id, const char*, va_list);"}, {"sha": "9adb56a2948360cd089bf391740f783101d68eb1", "filename": "gcc/objc/selector.c", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fselector.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fselector.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fselector.c?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,22 +1,21 @@\n /* GNU Objective C Runtime selector related functions\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n-\n-Author: Kresten Krab Thorup\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify it under the\n-   terms of the GNU General Public License as published by the Free Software\n-   Foundation; either version 2, or (at your option) any later version.\n+terms of the GNU General Public License as published by the Free Software\n+Foundation; either version 2, or (at your option) any later version.\n \n GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n-   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n-   details.\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+details.\n \n You should have received a copy of the GNU General Public License along with\n-   GNU CC; see the file COPYING.  If not, write to the Free Software\n-   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+GNU CC; see the file COPYING.  If not, write to the Free Software\n+Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, if you link this library with files compiled with\n    GCC to produce an executable, this does not cause the resulting executable\n@@ -54,7 +53,7 @@ void __objc_init_selector_tables()\n /* This routine is given a class and records all of the methods in its class\n    structure in the record table.  */\n void\n-__objc_register_selectors_from_class (Class* class)\n+__objc_register_selectors_from_class (Class class)\n {\n   MethodList_t method_list;\n "}, {"sha": "9f252d8ffa592d8cb145253b2da59cf69b99efa3", "filename": "gcc/objc/sendmsg.c", "status": "modified", "additions": 27, "deletions": 28, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fsendmsg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Fsendmsg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fsendmsg.c?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,22 +1,21 @@\n /* GNU Objective C Runtime message lookup \n-   Copyright (C) 1993 Free Software Foundation, Inc.\n-\n-Author: Kresten Krab Thorup\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n+   Contributed by Kresten Krab Thorup\n \n This file is part of GNU CC.\n \n GNU CC is free software; you can redistribute it and/or modify it under the\n-   terms of the GNU General Public License as published by the Free Software\n-   Foundation; either version 2, or (at your option) any later version.\n+terms of the GNU General Public License as published by the Free Software\n+Foundation; either version 2, or (at your option) any later version.\n \n GNU CC is distributed in the hope that it will be useful, but WITHOUT ANY\n-   WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n-   FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n-   details.\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\n+FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more\n+details.\n \n You should have received a copy of the GNU General Public License along with\n-   GNU CC; see the file COPYING.  If not, write to the Free Software\n-   Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+GNU CC; see the file COPYING.  If not, write to the Free Software\n+Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n /* As a special exception, if you link this library with files compiled with\n    GCC to produce an executable, this does not cause the resulting executable\n@@ -43,9 +42,9 @@ You should have received a copy of the GNU General Public License along with\n struct sarray* __objc_uninstalled_dtable = 0;\n \n /* Send +initialize to class */\n-static void __objc_send_initialize(Class*);\n+static void __objc_send_initialize(Class);\n \n-static void __objc_install_dispatch_table_for_class (Class*);\n+static void __objc_install_dispatch_table_for_class (Class);\n \n /* Forward declare some functions */\n static void __objc_init_install_dtable(id, SEL);\n@@ -57,7 +56,7 @@ static __big\n static id\n #endif\n __objc_block_forward(id, SEL, ...);\n-static Method_t search_for_method_in_hierarchy (Class* class, SEL sel);\n+static Method_t search_for_method_in_hierarchy (Class class, SEL sel);\n static Method_t search_for_method_in_list(MethodList_t list, SEL op);\n id nil_method(id, SEL, ...);\n \n@@ -70,7 +69,7 @@ nil_method(id receiver, SEL op, ...)\n /* Given a class and selector, return the selector's implementation.  */\n __inline__\n IMP\n-get_imp (Class* class, SEL sel)\n+get_imp (Class class, SEL sel)\n {\n   IMP impl;\n   void* res = sarray_get (class->dtable, (size_t) sel->sel_id);\n@@ -187,16 +186,16 @@ static void __objc_init_install_dtable(id receiver, SEL op)\n   else\n     {\n       /* receiver is a class object */\n-      assert(CLS_ISCLASS((Class*)receiver));\n+      assert(CLS_ISCLASS((Class)receiver));\n       assert(CLS_ISMETA(receiver->class_pointer));\n \n       /* Install real dtable for factory methods */\n       __objc_install_dispatch_table_for_class (receiver->class_pointer);\n \n       if (strcmp (sel_get_name (op), \"initialize\"))\n-\t__objc_send_initialize((Class*)receiver);\n+\t__objc_send_initialize((Class)receiver);\n       else\n-\tCLS_SETINITIALIZED((Class*)receiver);\n+\tCLS_SETINITIALIZED((Class)receiver);\n     }\n \n allready_initialized:\n@@ -215,14 +214,14 @@ static void __objc_init_install_dtable(id receiver, SEL op)\n \n /* Install dummy table for class which causes the first message to\n    that class (or instances hereof) to be initialized properly */\n-void __objc_install_premature_dtable(Class* class)\n+void __objc_install_premature_dtable(Class class)\n {\n   assert(__objc_uninstalled_dtable);\n   class->dtable = __objc_uninstalled_dtable;\n }   \n \n /* Send +initialize to class if not already done */\n-static void __objc_send_initialize(Class* class)\n+static void __objc_send_initialize(Class class)\n {\n   /* This *must* be a class object */\n   assert(CLS_ISCLASS(class));\n@@ -264,9 +263,9 @@ static void __objc_send_initialize(Class* class)\n }  \n \n static void\n-__objc_install_dispatch_table_for_class (Class* class)\n+__objc_install_dispatch_table_for_class (Class class)\n {\n-  Class* super;\n+  Class super;\n   MethodList_t mlist;\n   int counter;\n \n@@ -302,9 +301,9 @@ __objc_install_dispatch_table_for_class (Class* class)\n     }\n }\n \n-void __objc_update_dispatch_table_for_class (Class* class)\n+void __objc_update_dispatch_table_for_class (Class class)\n {\n-  Class* next;\n+  Class next;\n \n   /* not yet installed -- skip it */\n   if (class->dtable == __objc_uninstalled_dtable) \n@@ -329,7 +328,7 @@ void __objc_update_dispatch_table_for_class (Class* class)\n    methods installed rightaway, and their selectors are made into\n    SEL's by the function __objc_register_selectors_from_class. */ \n void\n-class_add_method_list (Class* class, MethodList_t list)\n+class_add_method_list (Class class, MethodList_t list)\n {\n   int i;\n   static SEL initialize_sel = 0;\n@@ -370,13 +369,13 @@ class_add_method_list (Class* class, MethodList_t list)\n \n \n Method_t\n-class_get_instance_method(Class* class, SEL op)\n+class_get_instance_method(Class class, SEL op)\n {\n   return search_for_method_in_hierarchy(class, op);\n }\n \n Method_t\n-class_get_class_method(MetaClass* class, SEL op)\n+class_get_class_method(MetaClass class, SEL op)\n {\n   return search_for_method_in_hierarchy(class, op);\n }\n@@ -387,10 +386,10 @@ class_get_class_method(MetaClass* class, SEL op)\n    otherwise. */   \n \n static Method_t\n-search_for_method_in_hierarchy (Class* cls, SEL sel)\n+search_for_method_in_hierarchy (Class cls, SEL sel)\n {\n   Method_t method = NULL;\n-  Class* class;\n+  Class class;\n \n   if (! sel_is_mapped (sel))\n     return NULL;"}, {"sha": "f02a6fd1a4b167913d1592f111b84a9efc83d72e", "filename": "gcc/objc/typedstream.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Ftypedstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0994488a6b5c574eb7f0b5d20379014fd4972b53/gcc%2Fobjc%2Ftypedstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Ftypedstream.h?ref=0994488a6b5c574eb7f0b5d20379014fd4972b53", "patch": "@@ -1,5 +1,5 @@\n /* GNU Objective-C Typed Streams interface.\n-   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1995 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -98,7 +98,7 @@ int objc_read_types (TypedStream* stream, const char* type, ...);\n int objc_write_object_reference (TypedStream* stream, id object);\n int objc_write_root_object (TypedStream* stream, id object);\n \n-long objc_get_stream_class_version (TypedStream* stream, Class* class);\n+long objc_get_stream_class_version (TypedStream* stream, Class class);\n \n \n /*"}]}