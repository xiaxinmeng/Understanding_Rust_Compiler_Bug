{"sha": "21554a3e268a90a78cf0f4c6b8221361a8eced98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE1NTRhM2UyNjhhOTBhNzhjZjBmNGM2YjgyMjEzNjFhOGVjZWQ5OA==", "commit": {"author": {"name": "Adam Butcher", "email": "adam@jessamine.co.uk", "date": "2014-03-24T20:40:15Z"}, "committer": {"name": "Adam Butcher", "email": "abutcher@gcc.gnu.org", "date": "2014-03-24T20:40:15Z"}, "message": "re PR c++/60627 ([c++1y] ICE in explicit template instantiation containing auto parameter)\n\nFix PR c++/60627\n\n\tPR c++/60627\n\t* parser.c (cp_parser_parameter_declaration_clause): Prevent 'auto' from\n\tintroducing an implicit function template parameter within an explicit\n\tinstantiation.\n\n\tPR c++/60627\n\t* g++.dg/cpp1y/pr60627.C: New testcase.\n\nFrom-SVN: r208799", "tree": {"sha": "782efaf4122cae5b9378a5a23ca628cea7393a00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/782efaf4122cae5b9378a5a23ca628cea7393a00"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21554a3e268a90a78cf0f4c6b8221361a8eced98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21554a3e268a90a78cf0f4c6b8221361a8eced98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21554a3e268a90a78cf0f4c6b8221361a8eced98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21554a3e268a90a78cf0f4c6b8221361a8eced98/comments", "author": {"login": "abutcher-gh", "id": 10379705, "node_id": "MDQ6VXNlcjEwMzc5NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/10379705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abutcher-gh", "html_url": "https://github.com/abutcher-gh", "followers_url": "https://api.github.com/users/abutcher-gh/followers", "following_url": "https://api.github.com/users/abutcher-gh/following{/other_user}", "gists_url": "https://api.github.com/users/abutcher-gh/gists{/gist_id}", "starred_url": "https://api.github.com/users/abutcher-gh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abutcher-gh/subscriptions", "organizations_url": "https://api.github.com/users/abutcher-gh/orgs", "repos_url": "https://api.github.com/users/abutcher-gh/repos", "events_url": "https://api.github.com/users/abutcher-gh/events{/privacy}", "received_events_url": "https://api.github.com/users/abutcher-gh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "09f15d1b52b9e1e37dc02c8674c8738a1b036ea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/09f15d1b52b9e1e37dc02c8674c8738a1b036ea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/09f15d1b52b9e1e37dc02c8674c8738a1b036ea7"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "e0229906de3713bd5321088b65d651c6e9cf6b1e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21554a3e268a90a78cf0f4c6b8221361a8eced98/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21554a3e268a90a78cf0f4c6b8221361a8eced98/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=21554a3e268a90a78cf0f4c6b8221361a8eced98", "patch": "@@ -1,3 +1,10 @@\n+2014-03-24  Adam Butcher  <adam@jessamine.co.uk>\n+\n+\tPR c++/60627\n+\t* parser.c (cp_parser_parameter_declaration_clause): Prevent 'auto' from\n+\tintroducing an implicit function template parameter within an explicit\n+\tinstantiation.\n+\n 2014-03-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/60574"}, {"sha": "4ca08a13d64357d0f0ad9c103d3520d9723c544f", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21554a3e268a90a78cf0f4c6b8221361a8eced98/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21554a3e268a90a78cf0f4c6b8221361a8eced98/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=21554a3e268a90a78cf0f4c6b8221361a8eced98", "patch": "@@ -18207,7 +18207,9 @@ cp_parser_parameter_declaration_clause (cp_parser* parser)\n \n   (void) cleanup;\n \n-  if (!processing_specialization && !processing_template_parmlist)\n+  if (!processing_specialization\n+      && !processing_template_parmlist\n+      && !processing_explicit_instantiation)\n     if (!current_function_decl\n \t|| (current_class_type && LAMBDA_TYPE_P (current_class_type)))\n       parser->auto_is_implicit_function_template_parm_p = true;"}, {"sha": "9f9422abdc5a0620aab69dc843b1e493a95acda9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21554a3e268a90a78cf0f4c6b8221361a8eced98/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21554a3e268a90a78cf0f4c6b8221361a8eced98/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21554a3e268a90a78cf0f4c6b8221361a8eced98", "patch": "@@ -1,3 +1,8 @@\n+2014-03-24  Adam Butcher  <adam@jessamine.co.uk>\n+\n+\tPR c++/60627\n+\t* g++.dg/cpp1y/pr60627.C: New testcase.\n+\n 2014-03-24  Alex Velenko  <Alex.Velenko@arm.com>\n \n \t* gcc.target/aarch64/ushr64_1.c: New."}, {"sha": "9e2116e9cb5b970d8cee7521c2bdd885e719912d", "filename": "gcc/testsuite/g++.dg/cpp1y/pr60627.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21554a3e268a90a78cf0f4c6b8221361a8eced98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60627.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21554a3e268a90a78cf0f4c6b8221361a8eced98/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60627.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60627.C?ref=21554a3e268a90a78cf0f4c6b8221361a8eced98", "patch": "@@ -0,0 +1,12 @@\n+// PR c++/60627\n+// { dg-do compile { target c++1y } }\n+// { dg-options \"\" }\n+\n+template<typename T> void foo(T) {}\n+\n+template void foo(auto);  // { dg-error \"auto|does not match\" }\n+\n+void bar()\n+{\n+  foo(0);\n+}"}]}