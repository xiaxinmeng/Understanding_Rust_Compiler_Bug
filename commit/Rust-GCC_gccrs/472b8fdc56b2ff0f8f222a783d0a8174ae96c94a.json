{"sha": "472b8fdc56b2ff0f8f222a783d0a8174ae96c94a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDcyYjhmZGM1NmIyZmYwZjhmMjIyYTc4M2QwYTgxNzRhZTk2Yzk0YQ==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-03-12T15:52:51Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-03-12T15:52:51Z"}, "message": "ia64.c (ia64_function_arg_1): Move code around.\n\n2012-03-12  Tristan Gingold  <gingold@adacore.com>\n\n\t* config/ia64/ia64.c (ia64_function_arg_1): Move code around.\n\t(ia64_function_arg_advance): Ditto.\n\nFrom-SVN: r185246", "tree": {"sha": "9d36d4c47b5a11a84cc5fc3c7b9024f9c4bc0100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d36d4c47b5a11a84cc5fc3c7b9024f9c4bc0100"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/472b8fdc56b2ff0f8f222a783d0a8174ae96c94a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472b8fdc56b2ff0f8f222a783d0a8174ae96c94a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/472b8fdc56b2ff0f8f222a783d0a8174ae96c94a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/472b8fdc56b2ff0f8f222a783d0a8174ae96c94a/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4bc5c255acdf119ddc6f55cf26627895f216ce4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4bc5c255acdf119ddc6f55cf26627895f216ce4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4bc5c255acdf119ddc6f55cf26627895f216ce4"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "f3119994aa58e0670a4ab86059b834adb779c308", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/472b8fdc56b2ff0f8f222a783d0a8174ae96c94a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/472b8fdc56b2ff0f8f222a783d0a8174ae96c94a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=472b8fdc56b2ff0f8f222a783d0a8174ae96c94a", "patch": "@@ -1,3 +1,8 @@\n+2012-03-12  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* config/ia64/ia64.c (ia64_function_arg_1): Move code around.\n+\t(ia64_function_arg_advance): Ditto.\n+\n 2012-03-12  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* config.gcc (mips*-*-openbsd*): Remove."}, {"sha": "5b2d74826296ac6d9f0b1b4d4258ff9eac0b25b0", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/472b8fdc56b2ff0f8f222a783d0a8174ae96c94a/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/472b8fdc56b2ff0f8f222a783d0a8174ae96c94a/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=472b8fdc56b2ff0f8f222a783d0a8174ae96c94a", "patch": "@@ -4491,6 +4491,15 @@ ia64_function_arg_1 (cumulative_args_t cum_v, enum machine_mode mode,\n   if (cum->words + offset >= MAX_ARGUMENT_SLOTS)\n     return 0;\n \n+  /* On OpenVMS argument is either in Rn or Fn.  */\n+  if (TARGET_ABI_OPEN_VMS)\n+    {\n+      if (FLOAT_MODE_P (mode))\n+\treturn gen_rtx_REG (mode, FR_ARG_FIRST + cum->words);\n+      else\n+\treturn gen_rtx_REG (mode, basereg + cum->words);\n+    }\n+\n   /* Check for and handle homogeneous FP aggregates.  */\n   if (type)\n     hfa_mode = hfa_element_mode (type, 0);\n@@ -4577,15 +4586,6 @@ ia64_function_arg_1 (cumulative_args_t cum_v, enum machine_mode mode,\n       return gen_rtx_PARALLEL (mode, gen_rtvec_v (i, loc));\n     }\n   \n-  /* On OpenVMS variable argument is either in Rn or Fn.  */\n-  else if (TARGET_ABI_OPEN_VMS && named == 0)\n-    {\n-      if (FLOAT_MODE_P (mode))\n-\treturn gen_rtx_REG (mode, FR_ARG_FIRST + cum->words);\n-      else\n-\treturn gen_rtx_REG (mode, basereg + cum->words);\n-    }\n-\n   /* Integral and aggregates go in general registers.  If we have run out of\n      FR registers, then FP values must also go in general registers.  This can\n      happen when we have a SFmode HFA.  */\n@@ -4736,6 +4736,14 @@ ia64_function_arg_advance (cumulative_args_t cum_v, enum machine_mode mode,\n   cum->atypes[cum->words] = ia64_arg_type (mode);\n   cum->words += words + offset;\n \n+  /* On OpenVMS argument is either in Rn or Fn.  */\n+  if (TARGET_ABI_OPEN_VMS)\n+    {\n+      cum->int_regs = cum->words;\n+      cum->fp_regs = cum->words;\n+      return;\n+    }\n+\n   /* Check for and handle homogeneous FP aggregates.  */\n   if (type)\n     hfa_mode = hfa_element_mode (type, 0);\n@@ -4776,13 +4784,6 @@ ia64_function_arg_advance (cumulative_args_t cum_v, enum machine_mode mode,\n       cum->fp_regs = fp_regs;\n     }\n \n-  /* On OpenVMS variable argument is either in Rn or Fn.  */\n-  else if (TARGET_ABI_OPEN_VMS && named == 0)\n-    {\n-      cum->int_regs = cum->words;\n-      cum->fp_regs = cum->words;\n-    }\n-\n   /* Integral and aggregates go in general registers.  So do TFmode FP values.\n      If we have run out of FR registers, then other FP values must also go in\n      general registers.  This can happen when we have a SFmode HFA.  */"}]}