{"sha": "0069111f9c747028548f8c5dd7b91c4e5358039d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDA2OTExMWY5Yzc0NzAyODU0OGY4YzVkZDdiOTFjNGU1MzU4MDM5ZA==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2010-10-18T22:37:32Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2010-10-18T22:37:32Z"}, "message": "Fix PR 46041\n\nFrom-SVN: r165666", "tree": {"sha": "2de2f4a8635e093411b80f7af2f4ffe4987f3195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2de2f4a8635e093411b80f7af2f4ffe4987f3195"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0069111f9c747028548f8c5dd7b91c4e5358039d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0069111f9c747028548f8c5dd7b91c4e5358039d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0069111f9c747028548f8c5dd7b91c4e5358039d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0069111f9c747028548f8c5dd7b91c4e5358039d/comments", "author": null, "committer": null, "parents": [{"sha": "cd9c769aabbdf7ee4c5ad0954c099ebfd26b27b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd9c769aabbdf7ee4c5ad0954c099ebfd26b27b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd9c769aabbdf7ee4c5ad0954c099ebfd26b27b8"}], "stats": {"total": 66, "additions": 54, "deletions": 12}, "files": [{"sha": "b21e191198bdbeabc9e0036c2832ac38bbdfa765", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0069111f9c747028548f8c5dd7b91c4e5358039d", "patch": "@@ -1,3 +1,9 @@\n+2010-10-18  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/46041\n+\t* tree.h (mode_has_fma): Delete, move to c-cppbuiltins.c.\n+\t* builtins.c (mode_has_fma): Ditto.\n+\n 2010-10-18  Steve Ellcey  <sje@cup.hp.com>\n \n \tPR target/36898"}, {"sha": "ca69efa10d7837d93984f03d8e6fdd01be03f021", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=0069111f9c747028548f8c5dd7b91c4e5358039d", "patch": "@@ -13909,11 +13909,3 @@ is_inexpensive_builtin (tree decl)\n \n   return false;\n }\n-\n-/* Return true if MODE provides a fast multiply/add (FMA) builtin function.  */\n-\n-bool\n-mode_has_fma (enum machine_mode mode)\n-{\n-  return optab_handler (fma_optab, mode) != CODE_FOR_nothing;\n-}"}, {"sha": "7a17df7e7277ec70d98dd1ce472cf49833656bd0", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=0069111f9c747028548f8c5dd7b91c4e5358039d", "patch": "@@ -1,7 +1,15 @@\n+2010-10-18  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+\n+\tPR target/46041\n+\t* c-cppbuiltin.c (mode_has_fma): Move function here from\n+\tbuiltins.c.  Don't use the fma optab, instead just use the\n+\tHAVE_fma* macros, so that __FP_FAST_FMA* will be defined when\n+\tusing -save-temps.\n+\n 2010-10-18  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \tMerge from 'apple/trunk' branch on FSF servers.\n-\t\n+\n \t2005-11-08  Fariborz Jahanian <fjahanian@apple.com>\n \n         Radar 4330422\n@@ -16,15 +24,15 @@\n \n         Radar 4133425\n \t* c-common.h (objc_diagnose_private_ivar): New decl.\n-\t* stub-objc.c (objc_diagnose_private_ivar): New stub.\t\n+\t* stub-objc.c (objc_diagnose_private_ivar): New stub.\n \n 2010-10-17  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* c-common.c (c_common_reswords): Add package, RID_AT_PACKAGE.\n \t* c-common.h (enum rid): Add RID_AT_PACKAGE.\n \t(objc_ivar_visibility_kind): New enum.\n \t(objc_set_visibility): Adjust prototype to use visibility enum.\n-\t* stub-objc.c (objc_set_visibility): Adjust stub to use \n+\t* stub-objc.c (objc_set_visibility): Adjust stub to use\n \tvisibility enum.\n \n 2010-10-14  Michael Meissner  <meissner@linux.vnet.ibm.com>"}, {"sha": "7b5a14dda11afe9ceb08264e6f1b5ea2e86bcdcb", "filename": "gcc/c-family/c-cppbuiltin.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2Fc-family%2Fc-cppbuiltin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2Fc-family%2Fc-cppbuiltin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-cppbuiltin.c?ref=0069111f9c747028548f8c5dd7b91c4e5358039d", "patch": "@@ -65,6 +65,43 @@ static void builtin_define_float_constants (const char *,\n \t\t\t\t\t    const char *,\n \t\t\t\t\t    tree);\n \n+/* Return true if MODE provides a fast multiply/add (FMA) builtin function.\n+   Originally this function used the fma optab, but that doesn't work with\n+   -save-temps, so just rely on the HAVE_fma macros for the standard floating\n+   point types.  */\n+\n+static bool\n+mode_has_fma (enum machine_mode mode)\n+{\n+  switch (mode)\n+    {\n+#ifdef HAVE_fmasf4\n+    case SFmode:\n+      return !!HAVE_fmasf4;\n+#endif\n+\n+#ifdef HAVE_fmadf4\n+    case DFmode:\n+      return !!HAVE_fmadf4;\n+#endif\n+\n+#ifdef HAVE_fmaxf4\n+    case XFmode:\n+      return !!HAVE_fmaxf4;\n+#endif\n+\n+#ifdef HAVE_fmatf4\n+    case TFmode:\n+      return !!HAVE_fmatf4;\n+#endif\n+\n+    default:\n+      break;\n+    }\n+\n+  return false;\n+}\n+\n /* Define NAME with value TYPE size_unit.  */\n static void\n builtin_define_type_sizeof (const char *name, tree type)"}, {"sha": "3877ae55ad1b6628d887e54206ea87913882c6bd", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0069111f9c747028548f8c5dd7b91c4e5358039d/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=0069111f9c747028548f8c5dd7b91c4e5358039d", "patch": "@@ -5069,7 +5069,6 @@ extern bool merge_ranges (int *, tree *, tree *, int, tree, tree, int,\n extern void set_builtin_user_assembler_name (tree decl, const char *asmspec);\n extern bool is_simple_builtin (tree);\n extern bool is_inexpensive_builtin (tree);\n-extern bool mode_has_fma (enum machine_mode mode);\n \n /* In convert.c */\n extern tree strip_float_extensions (tree);"}]}