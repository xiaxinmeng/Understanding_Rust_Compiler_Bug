{"sha": "ce19ac123abde3d9c52d52e13a00bbbe60e08722", "node_id": "C_kwDOANBUbNoAKGNlMTlhYzEyM2FiZGUzZDljNTJkNTJlMTNhMDBiYmJlNjBlMDg3MjI", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2022-02-06T16:06:36Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-12T12:38:39Z"}, "message": "[Ada] Remove front-end SJLJ processing\n\nWe no longer use the so called front-end SJLJ exception mechanism, so\nget rid of it.\n\ngcc/ada/\n\n\t* ali.adb, ali.ads, bcheck.adb, exp_ch11.adb, fe.h,\n\tgnat1drv.adb, opt.adb, opt.ads, targparm.adb, targparm.ads,\n\tlib-writ.adb: Get rid of Frontend_Exceptions processing.\n\t* libgnat/system-aix.ads, libgnat/system-darwin-arm.ads,\n\tlibgnat/system-darwin-ppc.ads, libgnat/system-darwin-x86.ads,\n\tlibgnat/system-djgpp.ads, libgnat/system-dragonfly-x86_64.ads,\n\tlibgnat/system-freebsd.ads, libgnat/system-hpux-ia64.ads,\n\tlibgnat/system-hpux.ads, libgnat/system-linux-alpha.ads,\n\tlibgnat/system-linux-arm.ads, libgnat/system-linux-hppa.ads,\n\tlibgnat/system-linux-ia64.ads, libgnat/system-linux-m68k.ads,\n\tlibgnat/system-linux-mips.ads, libgnat/system-linux-ppc.ads,\n\tlibgnat/system-linux-riscv.ads, libgnat/system-linux-s390.ads,\n\tlibgnat/system-linux-sh4.ads, libgnat/system-linux-sparc.ads,\n\tlibgnat/system-linux-x86.ads, libgnat/system-lynxos178-ppc.ads,\n\tlibgnat/system-lynxos178-x86.ads, libgnat/system-mingw.ads,\n\tlibgnat/system-qnx-aarch64.ads, libgnat/system-rtems.ads,\n\tlibgnat/system-solaris-sparc.ads,\n\tlibgnat/system-solaris-x86.ads,\n\tlibgnat/system-vxworks-arm-rtp-smp.ads,\n\tlibgnat/system-vxworks-arm-rtp.ads,\n\tlibgnat/system-vxworks-arm.ads,\n\tlibgnat/system-vxworks-e500-kernel.ads,\n\tlibgnat/system-vxworks-e500-rtp-smp.ads,\n\tlibgnat/system-vxworks-e500-rtp.ads,\n\tlibgnat/system-vxworks-ppc-kernel.ads,\n\tlibgnat/system-vxworks-ppc-rtp-smp.ads,\n\tlibgnat/system-vxworks-ppc-rtp.ads,\n\tlibgnat/system-vxworks-x86-kernel.ads,\n\tlibgnat/system-vxworks-x86-rtp-smp.ads,\n\tlibgnat/system-vxworks-x86-rtp.ads,\n\tlibgnat/system-vxworks7-aarch64-rtp-smp.ads,\n\tlibgnat/system-vxworks7-aarch64.ads,\n\tlibgnat/system-vxworks7-arm-rtp-smp.ads,\n\tlibgnat/system-vxworks7-arm.ads,\n\tlibgnat/system-vxworks7-e500-kernel.ads,\n\tlibgnat/system-vxworks7-e500-rtp-smp.ads,\n\tlibgnat/system-vxworks7-e500-rtp.ads,\n\tlibgnat/system-vxworks7-ppc-kernel.ads,\n\tlibgnat/system-vxworks7-ppc-rtp-smp.ads,\n\tlibgnat/system-vxworks7-ppc-rtp.ads,\n\tlibgnat/system-vxworks7-ppc64-kernel.ads,\n\tlibgnat/system-vxworks7-ppc64-rtp-smp.ads,\n\tlibgnat/system-vxworks7-x86-kernel.ads,\n\tlibgnat/system-vxworks7-x86-rtp-smp.ads,\n\tlibgnat/system-vxworks7-x86-rtp.ads,\n\tlibgnat/system-vxworks7-x86_64-kernel.ads,\n\tlibgnat/system-vxworks7-x86_64-rtp-smp.ads: Remove\n\tFrontend_Exceptions line.\n\t* gcc-interface/decl.cc, gcc-interface/trans.cc\n\t(gnat_to_gnu_entity, gnat_to_gnu_subprog_type, gigi,\n\tgnat_to_gnu): Remove Front_End_SJLJ processing and always assume\n\tBack_End_Exceptions.", "tree": {"sha": "d99855570690c3ea71ec71db7ea07a93672f2c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d99855570690c3ea71ec71db7ea07a93672f2c1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce19ac123abde3d9c52d52e13a00bbbe60e08722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce19ac123abde3d9c52d52e13a00bbbe60e08722", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce19ac123abde3d9c52d52e13a00bbbe60e08722", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce19ac123abde3d9c52d52e13a00bbbe60e08722/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b4ae9b98b07764b074110ba7215428df9efe320", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b4ae9b98b07764b074110ba7215428df9efe320", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b4ae9b98b07764b074110ba7215428df9efe320"}], "stats": {"total": 552, "additions": 40, "deletions": 512}, "files": [{"sha": "90fcfad5bbe8b598d9228eb45ff8903978486664", "filename": "gcc/ada/ali.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fali.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fali.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.adb?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -670,7 +670,6 @@ package body ALI is\n       SSO_Default_Specified                  := False;\n       Task_Dispatching_Policy_Specified      := ' ';\n       Unreserve_All_Interrupts_Specified     := False;\n-      Frontend_Exceptions_Specified          := False;\n       Zero_Cost_Exceptions_Specified         := False;\n    end Initialize_ALI;\n \n@@ -1774,7 +1773,6 @@ package body ALI is\n         Unit_Exception_Table         => False,\n         Ver                          => (others => ' '),\n         Ver_Len                      => 0,\n-        Frontend_Exceptions          => False,\n         Zero_Cost_Exceptions         => False);\n \n       --  Now we acquire the input lines from the ALI file. Note that the\n@@ -1971,9 +1969,10 @@ package body ALI is\n             elsif C = 'F' then\n                C := Getc;\n \n+               --  Old front-end exceptions marker, ignore\n+\n                if C = 'X' then\n-                  ALIs.Table (Id).Frontend_Exceptions := True;\n-                  Frontend_Exceptions_Specified := True;\n+                  null;\n                else\n                   Fatal_Error_Ignore;\n                end if;"}, {"sha": "7419c57191f464619970d011068d3228ea0d725e", "filename": "gcc/ada/ali.ads", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fali.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fali.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -247,10 +247,6 @@ package ALI is\n       --  Set to True if unit exception table pointer generated. Not set if 'P'\n       --  appears in Ignore_Lines.\n \n-      Frontend_Exceptions : Boolean;\n-      --  Set to True if file was compiled with front-end exceptions. Not set\n-      --  if 'P' appears in Ignore_Lines.\n-\n       Zero_Cost_Exceptions : Boolean;\n       --  Set to True if file was compiled with zero cost exceptions. Not set\n       --  if 'P' appears in Ignore_Lines.\n@@ -559,10 +555,6 @@ package ALI is\n    --  Set to False by Initialize_ALI. Set to True if Scan_ALI reads\n    --  a unit for which dynamic elaboration checking is enabled.\n \n-   Frontend_Exceptions_Specified : Boolean := False;\n-   --  Set to False by Initialize_ALI. Set to True if an ali file is read that\n-   --  has a P line specifying the generation of front-end exceptions.\n-\n    GNATprove_Mode_Specified : Boolean := False;\n    --  Set to True if an ali file was produced in GNATprove mode.\n "}, {"sha": "edab9858312669ceffc14f7c88b6ec760546f20f", "filename": "gcc/ada/bcheck.adb", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fbcheck.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fbcheck.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbcheck.adb?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -94,9 +94,7 @@ package body Bcheck is\n          Check_Consistent_SSO_Default;\n       end if;\n \n-      if Zero_Cost_Exceptions_Specified\n-        or else Frontend_Exceptions_Specified\n-      then\n+      if Zero_Cost_Exceptions_Specified then\n          Check_Consistent_Exception_Handling;\n       end if;\n \n@@ -1245,11 +1243,8 @@ package body Bcheck is\n    procedure Check_Consistent_Exception_Handling is\n    begin\n       Check_Mechanism : for A1 in ALIs.First + 1 .. ALIs.Last loop\n-         if (ALIs.Table (A1).Zero_Cost_Exceptions /=\n-              ALIs.Table (ALIs.First).Zero_Cost_Exceptions)\n-           or else\n-            (ALIs.Table (A1).Frontend_Exceptions /=\n-              ALIs.Table (ALIs.First).Frontend_Exceptions)\n+         if ALIs.Table (A1).Zero_Cost_Exceptions /=\n+             ALIs.Table (ALIs.First).Zero_Cost_Exceptions\n          then\n             Error_Msg_File_1 := ALIs.Table (A1).Sfile;\n             Error_Msg_File_2 := ALIs.Table (ALIs.First).Sfile;"}, {"sha": "1867469bf9f9e8ffcb95441ca7044b8c8ba438b7", "filename": "gcc/ada/exp_ch11.adb", "status": "modified", "additions": 11, "deletions": 111, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fexp_ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fexp_ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch11.adb?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -41,7 +41,6 @@ with Restrict;       use Restrict;\n with Rident;         use Rident;\n with Rtsfind;        use Rtsfind;\n with Sem;            use Sem;\n-with Sem_Ch8;        use Sem_Ch8;\n with Sem_Res;        use Sem_Res;\n with Sem_Util;       use Sem_Util;\n with Sinfo;          use Sinfo;\n@@ -76,113 +75,18 @@ package body Exp_Ch11 is\n    ---------------------------\n \n    --  For a handled statement sequence that has a cleanup (At_End_Proc\n-   --  field set), an exception handler of the following form is required:\n+   --  field set), perform any needed expansion.\n \n-   --     exception\n-   --       when all others =>\n-   --          cleanup call\n-   --          raise;\n-\n-   --  Note: this exception handler is treated rather specially by\n-   --  subsequent expansion in two respects:\n-\n-   --    The normal call to Undefer_Abort is omitted\n-   --    The raise call does not do Defer_Abort\n-\n-   --  This is because the current tasking code seems to assume that\n-   --  the call to the cleanup routine that is made from an exception\n-   --  handler for the abort signal is called with aborts deferred.\n-\n-   --  This expansion is only done if we have front end exception handling.\n-   --  If we have back end exception handling, then the AT END handler is\n-   --  left alone, and cleanups (including the exceptional case) are handled\n-   --  by the back end.\n-\n-   --  In the front end case, the exception handler described above handles\n-   --  the exceptional case. The AT END handler is left in the generated tree\n-   --  and the code generator (e.g. gigi) must still handle proper generation\n-   --  of cleanup calls for the non-exceptional case.\n+   --  Do nothing by default. We used to perform a special expansion for\n+   --  front-end SJLJ, and we may want to customize this processing in\n+   --  the future for new back-ends.\n \n    procedure Expand_At_End_Handler (HSS : Node_Id; Blk_Id : Entity_Id) is\n-      Clean   : constant Entity_Id  := Entity (At_End_Proc (HSS));\n-      Ohandle : Node_Id;\n-      Stmnts  : List_Id;\n-\n-      Loc : constant Source_Ptr := No_Location;\n-      --  Location used for expansion. We quite deliberately do not set a\n-      --  specific source location for the expanded handler. This makes\n-      --  sense since really the handler is not associated with specific\n-      --  source. We used to set this to Sloc (Clean), but that caused\n-      --  useless and annoying bouncing around of line numbers in the\n-      --  debugger in some circumstances.\n-\n+      pragma Unreferenced (Blk_Id);\n    begin\n-      pragma Assert (Present (Clean));\n+      pragma Assert (Present (Entity (At_End_Proc (HSS))));\n       pragma Assert (No (Exception_Handlers (HSS)));\n-\n-      --  Back end exception schemes don't need explicit handlers to\n-      --  trigger AT-END actions on exceptional paths.\n-\n-      if Back_End_Exceptions then\n-         return;\n-      end if;\n-\n-      --  Don't expand an At End handler if we have already had configurable\n-      --  run-time violations, since likely this will just be a matter of\n-      --  generating useless cascaded messages\n-\n-      if Configurable_Run_Time_Violations > 0 then\n-         return;\n-      end if;\n-\n-      --  Don't expand an At End handler if we are not allowing exceptions\n-      --  or if exceptions are transformed into local gotos, and never\n-      --  propagated (No_Exception_Propagation).\n-\n-      if No_Exception_Handlers_Set then\n-         return;\n-      end if;\n-\n-      if Present (Blk_Id) then\n-         Push_Scope (Blk_Id);\n-      end if;\n-\n-      Ohandle :=\n-        Make_Others_Choice (Loc);\n-      Set_All_Others (Ohandle);\n-\n-      Stmnts := New_List (\n-        Make_Procedure_Call_Statement (Loc,\n-          Name => New_Occurrence_Of (Clean, Loc)));\n-\n-      --  Generate reraise statement as last statement of AT-END handler,\n-      --  unless we are under control of No_Exception_Propagation, in which\n-      --  case no exception propagation is possible anyway, so we do not need\n-      --  a reraise (the AT END handler in this case is only for normal exits\n-      --  not for exceptional exits). Also, we flag the Reraise statement as\n-      --  being part of an AT END handler to prevent signalling this reraise\n-      --  as a violation of the restriction when it is not set.\n-\n-      if not Restriction_Active (No_Exception_Propagation) then\n-         declare\n-            Rstm : constant Node_Id := Make_Raise_Statement (Loc);\n-         begin\n-            Set_From_At_End (Rstm);\n-            Append_To (Stmnts, Rstm);\n-         end;\n-      end if;\n-\n-      Set_Exception_Handlers (HSS, New_List (\n-        Make_Implicit_Exception_Handler (Loc,\n-          Exception_Choices => New_List (Ohandle),\n-          Statements        => Stmnts)));\n-\n-      Analyze_List (Stmnts, Suppress => All_Checks);\n-      Expand_Exception_Handlers (HSS);\n-\n-      if Present (Blk_Id) then\n-         Pop_Scope;\n-      end if;\n+      return;\n    end Expand_At_End_Handler;\n \n    -------------------------------\n@@ -987,13 +891,11 @@ package body Exp_Ch11 is\n                --        ...\n                --     end;\n \n-               --  This expansion is only performed when using front-end\n-               --  exceptions. Gigi will insert a call to initialize the\n-               --  choice parameter.\n+               --  This expansion is only performed when using CodePeer.\n+               --  Gigi will insert a call to initialize the choice parameter.\n \n                if Present (Choice_Parameter (Handler))\n-                 and then (Front_End_Exceptions\n-                            or else CodePeer_Mode)\n+                 and then CodePeer_Mode\n                then\n                   declare\n                      Cparm : constant Entity_Id  := Choice_Parameter (Handler);\n@@ -1717,9 +1619,7 @@ package body Exp_Ch11 is\n          --  GNATprove all code with exceptions falls outside the subset of\n          --  code which can be formally analyzed.\n \n-         if not CodePeer_Mode\n-           and then Back_End_Exceptions\n-         then\n+         if not CodePeer_Mode then\n             return;\n          end if;\n "}, {"sha": "dc3a1af2dc66853be32fd17dc3628a7dfc129559", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -219,7 +219,7 @@ typedef enum {\n } Ada_Version_Type;\n \n typedef enum {\n-  Front_End_SJLJ, Back_End_ZCX, Back_End_SJLJ\n+  Back_End_ZCX, Back_End_SJLJ\n } Exception_Mechanism_Type;\n \n extern Ada_Version_Type Ada_Version;\n@@ -238,13 +238,9 @@ extern Boolean Suppress_Checks;\n \n #define ZCX_Exceptions\t\topt__zcx_exceptions\n #define SJLJ_Exceptions\t\topt__sjlj_exceptions\n-#define Front_End_Exceptions\topt__front_end_exceptions\n-#define Back_End_Exceptions\topt__back_end_exceptions\n \n extern Boolean ZCX_Exceptions\t\t(void);\n extern Boolean SJLJ_Exceptions\t\t(void);\n-extern Boolean Front_End_Exceptions\t(void);\n-extern Boolean Back_End_Exceptions\t(void);\n \n /* restrict: */\n "}, {"sha": "56ad4998e2286c58fbb0eaf9ac74bc7d9d82e87f", "filename": "gcc/ada/gcc-interface/decl.cc", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fgcc-interface%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fgcc-interface%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.cc?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -1597,14 +1597,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \tif (TREE_CODE (gnu_decl) == CONST_DECL)\n \t  DECL_CONST_ADDRESS_P (gnu_decl) = constructor_address_p (gnu_expr);\n \n-\t/* If this object is declared in a block that contains a block with an\n-\t   exception handler, and we aren't using the GCC exception mechanism,\n-\t   we must force this variable in memory in order to avoid an invalid\n-\t   optimization.  */\n-\tif (Front_End_Exceptions ()\n-\t    && Has_Nested_Block_With_Handler (Scope (gnat_entity)))\n-\t  TREE_ADDRESSABLE (gnu_decl) = 1;\n-\n \t/* If this is a local variable with non-BLKmode and aggregate type,\n \t   and optimization isn't enabled, then force it in memory so that\n \t   a register won't be allocated to it with possible subparts left\n@@ -1618,24 +1610,6 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, bool definition)\n \t\t && !optimize)\n \t  TREE_ADDRESSABLE (gnu_decl) = 1;\n \n-\t/* If we are defining an object with variable size or an object with\n-\t   fixed size that will be dynamically allocated, and we are using the\n-\t   front-end setjmp/longjmp exception mechanism, update the setjmp\n-\t   buffer.  */\n-\tif (definition\n-\t    && Exception_Mechanism == Front_End_SJLJ\n-\t    && get_block_jmpbuf_decl ()\n-\t    && DECL_SIZE_UNIT (gnu_decl)\n-\t    && (TREE_CODE (DECL_SIZE_UNIT (gnu_decl)) != INTEGER_CST\n-\t\t|| (flag_stack_check == GENERIC_STACK_CHECK\n-\t\t    && compare_tree_int (DECL_SIZE_UNIT (gnu_decl),\n-\t\t\t\t\t STACK_CHECK_MAX_VAR_SIZE) > 0)))\n-\t  add_stmt_with_node (build_call_n_expr\n-\t\t\t      (update_setjmp_buf_decl, 1,\n-\t\t\t       build_unary_op (ADDR_EXPR, NULL_TREE,\n-\t\t\t\t\t       get_block_jmpbuf_decl ())),\n-\t\t\t      gnat_entity);\n-\n \t/* Back-annotate Esize and Alignment of the object if not already\n \t   known.  Note that we pick the values of the type, not those of\n \t   the object, to shield ourselves from low-level platform-dependent\n@@ -5801,7 +5775,7 @@ gnat_to_gnu_subprog_type (Entity_Id gnat_subprog, bool definition,\n      circuitry from it, we need to declare that calls to pure Ada subprograms\n      that can throw have side effects, since they can trigger an \"abnormal\"\n      transfer of control; therefore they cannot be \"pure\" in the GCC sense.  */\n-  bool pure_flag = Is_Pure (gnat_subprog) && Back_End_Exceptions ();\n+  bool pure_flag = Is_Pure (gnat_subprog);\n   bool return_by_direct_ref_p = false;\n   bool return_by_invisi_ref_p = false;\n   bool return_unconstrained_p = false;"}, {"sha": "5741986183803bd2a90bd9e1654095d8ac73bac1", "filename": "gcc/ada/gcc-interface/trans.cc", "status": "modified", "additions": 12, "deletions": 222, "changes": 234, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fgcc-interface%2Ftrans.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.cc?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -666,9 +666,7 @@ gigi (Node_Id gnat_root,\n \n   main_identifier_node = get_identifier (\"main\");\n \n-  /* If we are using the GCC exception mechanism, let GCC know.  */\n-  if (Back_End_Exceptions ())\n-    gnat_init_gcc_eh ();\n+  gnat_init_gcc_eh ();\n \n   /* Initialize the GCC support for FP operations.  */\n   gnat_init_gcc_fp ();\n@@ -5361,26 +5359,16 @@ Handled_Sequence_Of_Statements_to_gnu (Node_Id gnat_node)\n {\n   /* If just annotating, ignore all EH and cleanups.  */\n   const bool gcc_eh\n-    = (!type_annotate_only\n-       && Present (Exception_Handlers (gnat_node))\n-       && Back_End_Exceptions ());\n-  const bool fe_sjlj_eh\n-    = (!type_annotate_only\n-       && Present (Exception_Handlers (gnat_node))\n-       && Exception_Mechanism == Front_End_SJLJ);\n+    = !type_annotate_only && Present (Exception_Handlers (gnat_node));\n   const bool at_end = !type_annotate_only && Present (At_End_Proc (gnat_node));\n-  const bool binding_for_block = (at_end || gcc_eh || fe_sjlj_eh);\n-  tree gnu_jmpsave_decl = NULL_TREE;\n-  tree gnu_jmpbuf_decl = NULL_TREE;\n+  const bool binding_for_block = (at_end || gcc_eh);\n   tree gnu_inner_block; /* The statement(s) for the block itself.  */\n   tree gnu_result;\n-  tree gnu_expr;\n   Node_Id gnat_temp;\n \n-  /* The GCC exception handling mechanism can handle both ZCX and SJLJ schemes\n-     and the front-end has its own SJLJ mechanism.  To call the GCC mechanism,\n-     we call add_cleanup, and when we leave the binding, end_stmt_group will\n-     create the TRY_FINALLY_EXPR construct.\n+  /* The GCC exception handling mechanism can handle both ZCX and SJLJ schemes.\n+     To call the GCC mechanism, we call add_cleanup, and when we leave the\n+     binding, end_stmt_group will create the TRY_FINALLY_EXPR construct.\n \n      ??? The region level calls down there have been specifically put in place\n      for a ZCX context and currently the order in which things are emitted\n@@ -5390,45 +5378,13 @@ Handled_Sequence_Of_Statements_to_gnu (Node_Id gnat_node)\n      condition to make it not ZCX specific.\n \n      If there are any exceptions or cleanup processing involved, we need an\n-     outer statement group (for front-end SJLJ) and binding level.  */\n+     outer statement group and binding level.  */\n   if (binding_for_block)\n     {\n       start_stmt_group ();\n       gnat_pushlevel ();\n     }\n \n-  /* If using fe_sjlj_eh, make the variables for the setjmp buffer and save\n-     area for address of previous buffer.  Do this first since we need to have\n-     the setjmp buf known for any decls in this block.  */\n-  if (fe_sjlj_eh)\n-    {\n-      gnu_jmpsave_decl\n-\t= create_var_decl (get_identifier (\"JMPBUF_SAVE\"), NULL_TREE,\n-\t\t\t   jmpbuf_ptr_type,\n-\t\t\t   build_call_n_expr (get_jmpbuf_decl, 0),\n-\t\t\t   false, false, false, false, false, true, false,\n-\t\t\t   NULL, gnat_node);\n-\n-      /* The __builtin_setjmp receivers will immediately reinstall it.  Now\n-\t because of the unstructured form of EH used by fe_sjlj_eh, there\n-\t might be forward edges going to __builtin_setjmp receivers on which\n-\t it is uninitialized, although they will never be actually taken.  */\n-      suppress_warning (gnu_jmpsave_decl, OPT_Wuninitialized);\n-      gnu_jmpbuf_decl\n-\t= create_var_decl (get_identifier (\"JMP_BUF\"), NULL_TREE,\n-\t\t\t   jmpbuf_type,\n-\t\t\t   NULL_TREE,\n-\t\t\t   false, false, false, false, false, true, false,\n-\t\t\t   NULL, gnat_node);\n-\n-      set_block_jmpbuf_decl (gnu_jmpbuf_decl);\n-\n-      /* When we exit this block, restore the saved value.  */\n-      add_cleanup (build_call_n_expr (set_jmpbuf_decl, 1, gnu_jmpsave_decl),\n-\t\t   Present (End_Label (gnat_node))\n-\t\t   ? End_Label (gnat_node) : gnat_node);\n-    }\n-\n   /* If we are to call a function when exiting this block, add a cleanup\n      to the binding level we made above.  Note that add_cleanup is FIFO\n      so we must register this cleanup after the EH cleanup just above.  */\n@@ -5449,19 +5405,10 @@ Handled_Sequence_Of_Statements_to_gnu (Node_Id gnat_node)\n \t\t   ? End_Label (gnat_node) : At_End_Proc (gnat_node));\n     }\n \n-  /* Now build the tree for the declarations and statements inside this block.\n-     If this is SJLJ, set our jmp_buf as the current buffer.  */\n+  /* Now build the tree for the declarations and statements inside this\n+     block.  */\n   start_stmt_group ();\n \n-  if (fe_sjlj_eh)\n-    {\n-      gnu_expr = build_call_n_expr (set_jmpbuf_decl, 1,\n-\t\t\t\t    build_unary_op (ADDR_EXPR, NULL_TREE,\n-\t\t\t\t\t\t    gnu_jmpbuf_decl));\n-      set_expr_location_from_node (gnu_expr, gnat_node);\n-      add_stmt (gnu_expr);\n-    }\n-\n   if (Present (First_Real_Statement (gnat_node)))\n     process_decls (Statements (gnat_node), Empty,\n \t\t   First_Real_Statement (gnat_node), true, true);\n@@ -5475,81 +5422,7 @@ Handled_Sequence_Of_Statements_to_gnu (Node_Id gnat_node)\n \n   gnu_inner_block = end_stmt_group ();\n \n-  /* Now generate code for the two exception models, if either is relevant for\n-     this block.  */\n-  if (fe_sjlj_eh)\n-    {\n-      tree *gnu_else_ptr = 0;\n-      tree gnu_handler;\n-\n-      /* Make a binding level for the exception handling declarations and code\n-\t and set up gnu_except_ptr_stack for the handlers to use.  */\n-      start_stmt_group ();\n-      gnat_pushlevel ();\n-\n-      vec_safe_push (gnu_except_ptr_stack,\n-\t\t     create_var_decl (get_identifier (\"EXCEPT_PTR\"), NULL_TREE,\n-\t\t\t\t      build_pointer_type (except_type_node),\n-\t\t\t\t      build_call_n_expr (get_excptr_decl, 0),\n-\t\t\t\t      false, false, false, false, false,\n-\t\t\t\t      true, false, NULL, gnat_node));\n-\n-      /* Generate code for each handler. The N_Exception_Handler case does the\n-\t real work and returns a COND_EXPR for each handler, which we chain\n-\t together here.  */\n-      for (gnat_temp = First_Non_Pragma (Exception_Handlers (gnat_node));\n-\t   Present (gnat_temp); gnat_temp = Next_Non_Pragma (gnat_temp))\n-\t{\n-\t  gnu_expr = gnat_to_gnu (gnat_temp);\n-\n-\t  /* If this is the first one, set it as the outer one. Otherwise,\n-\t     point the \"else\" part of the previous handler to us. Then point\n-\t     to our \"else\" part.  */\n-\t  if (!gnu_else_ptr)\n-\t    add_stmt (gnu_expr);\n-\t  else\n-\t    *gnu_else_ptr = gnu_expr;\n-\n-\t  gnu_else_ptr = &COND_EXPR_ELSE (gnu_expr);\n-\t}\n-\n-      /* If none of the exception handlers did anything, re-raise but do not\n-\t defer abortion.  */\n-      gnu_expr = build_call_n_expr (raise_nodefer_decl, 1,\n-\t\t\t\t    gnu_except_ptr_stack->last ());\n-      set_expr_location_from_node\n-\t(gnu_expr,\n-\t Present (End_Label (gnat_node)) ? End_Label (gnat_node) : gnat_node);\n-\n-      if (gnu_else_ptr)\n-\t*gnu_else_ptr = gnu_expr;\n-      else\n-\tadd_stmt (gnu_expr);\n-\n-      /* End the binding level dedicated to the exception handlers and get the\n-\t whole statement group.  */\n-      gnu_except_ptr_stack->pop ();\n-      gnat_poplevel ();\n-      gnu_handler = end_stmt_group ();\n-\n-      /* If the setjmp returns 1, we restore our incoming longjmp value and\n-\t then check the handlers.  */\n-      start_stmt_group ();\n-      add_stmt_with_node (build_call_n_expr (set_jmpbuf_decl, 1,\n-\t\t\t\t\t     gnu_jmpsave_decl),\n-\t\t\t  gnat_node);\n-      add_stmt (gnu_handler);\n-      gnu_handler = end_stmt_group ();\n-\n-      /* This block is now \"if (setjmp) ... <handlers> else <block>\".  */\n-      gnu_result = build3 (COND_EXPR, void_type_node,\n-\t\t\t   (build_call_n_expr\n-\t\t\t    (setjmp_decl, 1,\n-\t\t\t     build_unary_op (ADDR_EXPR, NULL_TREE,\n-\t\t\t\t\t     gnu_jmpbuf_decl))),\n-\t\t\t   gnu_handler, gnu_inner_block);\n-    }\n-  else if (gcc_eh)\n+  if (gcc_eh)\n     {\n       tree gnu_handlers;\n       location_t locus;\n@@ -5592,75 +5465,6 @@ Handled_Sequence_Of_Statements_to_gnu (Node_Id gnat_node)\n   return gnu_result;\n }\n \n-/* Subroutine of gnat_to_gnu to translate gnat_node, an N_Exception_Handler,\n-   to a GCC tree, which is returned.  This is the variant for front-end sjlj\n-   exception handling.  */\n-\n-static tree\n-Exception_Handler_to_gnu_fe_sjlj (Node_Id gnat_node)\n-{\n-  /* Unless this is \"Others\" or the special \"Non-Ada\" exception for Ada, make\n-     an \"if\" statement to select the proper exceptions.  For \"Others\", exclude\n-     exceptions where Handled_By_Others is nonzero unless the All_Others flag\n-     is set. For \"Non-ada\", accept an exception if \"Lang\" is 'V'.  */\n-  tree gnu_choice = boolean_false_node;\n-  tree gnu_body = build_stmt_group (Statements (gnat_node), false);\n-  Node_Id gnat_temp;\n-\n-  for (gnat_temp = First (Exception_Choices (gnat_node));\n-       gnat_temp; gnat_temp = Next (gnat_temp))\n-    {\n-      tree this_choice;\n-\n-      if (Nkind (gnat_temp) == N_Others_Choice)\n-\t{\n-\t  if (All_Others (gnat_temp))\n-\t    this_choice = boolean_true_node;\n-\t  else\n-\t    this_choice\n-\t      = build_binary_op\n-\t\t(EQ_EXPR, boolean_type_node,\n-\t\t convert\n-\t\t (integer_type_node,\n-\t\t  build_component_ref\n-\t\t  (build_unary_op\n-\t\t   (INDIRECT_REF, NULL_TREE,\n-\t\t    gnu_except_ptr_stack->last ()),\n-\t\t   not_handled_by_others_decl,\n-\t\t   false)),\n-\t\t integer_zero_node);\n-\t}\n-\n-      else if (Nkind (gnat_temp) == N_Identifier\n-\t       || Nkind (gnat_temp) == N_Expanded_Name)\n-\t{\n-\t  Entity_Id gnat_ex_id = Entity (gnat_temp);\n-\t  tree gnu_expr;\n-\n-\t  /* Exception may be a renaming. Recover original exception which is\n-\t     the one elaborated and registered.  */\n-\t  if (Present (Renamed_Object (gnat_ex_id)))\n-\t    gnat_ex_id = Renamed_Object (gnat_ex_id);\n-\n-\t  gnu_expr = gnat_to_gnu_entity (gnat_ex_id, NULL_TREE, false);\n-\n-\t  this_choice\n-\t    = build_binary_op\n-\t      (EQ_EXPR, boolean_type_node,\n-\t       gnu_except_ptr_stack->last (),\n-\t       convert (TREE_TYPE (gnu_except_ptr_stack->last ()),\n-\t\t\tbuild_unary_op (ADDR_EXPR, NULL_TREE, gnu_expr)));\n-\t}\n-      else\n-\tgcc_unreachable ();\n-\n-      gnu_choice = build_binary_op (TRUTH_ORIF_EXPR, boolean_type_node,\n-\t\t\t\t    gnu_choice, this_choice);\n-    }\n-\n-  return build3 (COND_EXPR, void_type_node, gnu_choice, gnu_body, NULL_TREE);\n-}\n-\n /* Return true if no statement in GNAT_LIST can alter the control flow.  */\n \n static bool\n@@ -7871,30 +7675,16 @@ gnat_to_gnu (Node_Id gnat_node)\n     /***************************/\n \n     case N_Handled_Sequence_Of_Statements:\n-      /* If there is an At_End procedure attached to this node, and the EH\n-\t mechanism is front-end, we must have at least a corresponding At_End\n-\t handler, unless the No_Exception_Handlers restriction is set.  */\n-      gcc_assert (type_annotate_only\n-\t\t  || !Front_End_Exceptions ()\n-\t\t  || No (At_End_Proc (gnat_node))\n-\t\t  || Present (Exception_Handlers (gnat_node))\n-\t\t  || No_Exception_Handlers_Set ());\n-\n       gnu_result = Handled_Sequence_Of_Statements_to_gnu (gnat_node);\n       break;\n \n     case N_Exception_Handler:\n-      if (Back_End_Exceptions ())\n-\tgnu_result = Exception_Handler_to_gnu_gcc (gnat_node);\n-      else if (Exception_Mechanism == Front_End_SJLJ)\n-\tgnu_result = Exception_Handler_to_gnu_fe_sjlj (gnat_node);\n-      else\n-\tgcc_unreachable ();\n+      gnu_result = Exception_Handler_to_gnu_gcc (gnat_node);\n       break;\n \n     case N_Raise_Statement:\n       /* Only for reraise in back-end exceptions mode.  */\n-      gcc_assert (No (Name (gnat_node)) && Back_End_Exceptions ());\n+      gcc_assert (No (Name (gnat_node)));\n \n       start_stmt_group ();\n "}, {"sha": "39fa9bee9a780ac49ce2af78fe8ce04b1f9250f7", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 5, "deletions": 22, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -631,28 +631,11 @@ procedure Gnat1drv is\n       --  generating code.\n \n       if Operating_Mode = Generate_Code then\n-         case Targparm.Frontend_Exceptions_On_Target is\n-            when True =>\n-               case Targparm.ZCX_By_Default_On_Target is\n-                  when True =>\n-                     Write_Line\n-                       (\"Run-time library configured incorrectly\");\n-                     Write_Line\n-                       (\"(requesting support for Frontend ZCX exceptions)\");\n-                     raise Unrecoverable_Error;\n-\n-                  when False =>\n-                     Exception_Mechanism := Front_End_SJLJ;\n-               end case;\n-\n-            when False =>\n-               case Targparm.ZCX_By_Default_On_Target is\n-                  when True =>\n-                     Exception_Mechanism := Back_End_ZCX;\n-                  when False =>\n-                     Exception_Mechanism := Back_End_SJLJ;\n-               end case;\n-         end case;\n+         if Targparm.ZCX_By_Default_On_Target then\n+            Exception_Mechanism := Back_End_ZCX;\n+         else\n+            Exception_Mechanism := Back_End_SJLJ;\n+         end if;\n       end if;\n \n       --  Set proper status for overflow check mechanism"}, {"sha": "59a9170972b6b38222fb9457facfcb6af631c492", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -1234,10 +1234,6 @@ package body Lib.Writ is\n          Write_Info_Str (\" UA\");\n       end if;\n \n-      if Front_End_Exceptions then\n-         Write_Info_Str (\" FX\");\n-      end if;\n-\n       if ZCX_Exceptions then\n          Write_Info_Str (\" ZX\");\n       end if;"}, {"sha": "57756d4ccc30c780524f5cde66108888c659306c", "filename": "gcc/ada/libgnat/system-aix.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-aix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-aix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-aix.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -150,7 +150,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "7390f3a65e1fc60b7af2471525c1f0d4ce98febf", "filename": "gcc/ada/libgnat/system-darwin-arm.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-darwin-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-darwin-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-darwin-arm.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -166,7 +166,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "984d5a2a646ad85797692cf088c966887c9e3198", "filename": "gcc/ada/libgnat/system-darwin-ppc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-darwin-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-darwin-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-darwin-ppc.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -166,7 +166,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "8d8e5f04a80a01f3a0d31eefc489fed73f4c8172", "filename": "gcc/ada/libgnat/system-darwin-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-darwin-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-darwin-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-darwin-x86.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -166,7 +166,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "1148a46c38a81bcc60515d1f956dc1319e51e3f3", "filename": "gcc/ada/libgnat/system-djgpp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-djgpp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-djgpp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-djgpp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -140,7 +140,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "90abfe9e4e54eb6b91fec39b31840a67a3b01a28", "filename": "gcc/ada/libgnat/system-dragonfly-x86_64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-dragonfly-x86_64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-dragonfly-x86_64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-dragonfly-x86_64.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -140,7 +140,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "fcc0c4f846f1c902ac315564c6362c42a7cde9bb", "filename": "gcc/ada/libgnat/system-freebsd.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-freebsd.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-freebsd.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-freebsd.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -141,7 +141,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "0562bf74246348e46126f3a288b9bde9a6ad6808", "filename": "gcc/ada/libgnat/system-hpux-ia64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-hpux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-hpux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-hpux-ia64.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -140,7 +140,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "a8848d63b6bf01d171849a4e0a4738c03ab33025", "filename": "gcc/ada/libgnat/system-hpux.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-hpux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-hpux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-hpux.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -139,7 +139,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    --------------------------"}, {"sha": "56d708d5ee1c4649be0f6d88fab3959e1371d91d", "filename": "gcc/ada/libgnat/system-linux-alpha.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-alpha.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-alpha.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-alpha.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -140,7 +140,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "6f2cb247fec4b9484258d42fc7d22c61e297086b", "filename": "gcc/ada/libgnat/system-linux-arm.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-arm.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -149,7 +149,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "d4b83646306933464158858b620d2cd9f655227b", "filename": "gcc/ada/libgnat/system-linux-hppa.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-hppa.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-hppa.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-hppa.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -139,7 +139,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "0ebc23347ad92ecd19dbc7378cff706a8b3f355c", "filename": "gcc/ada/libgnat/system-linux-ia64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-ia64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-ia64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-ia64.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -148,7 +148,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "2189465e725f7a64775a40510c30531564ce6a6e", "filename": "gcc/ada/libgnat/system-linux-m68k.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-m68k.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-m68k.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-m68k.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -150,7 +150,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "d3bafb2f94441d2ed5a419a22cd465caae2aaf7d", "filename": "gcc/ada/libgnat/system-linux-mips.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-mips.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-mips.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-mips.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -140,7 +140,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "0b8aad954a67221f32a8bc68dac9122d9958f657", "filename": "gcc/ada/libgnat/system-linux-ppc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-ppc.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -148,7 +148,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "c65660427d2a87c09f4a1bde2763bb24e5c76729", "filename": "gcc/ada/libgnat/system-linux-riscv.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-riscv.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -139,7 +139,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "ee1e87ad88c034455448e9bebbb16d3940c733c4", "filename": "gcc/ada/libgnat/system-linux-s390.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-s390.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-s390.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-s390.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -139,7 +139,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "c4fb6ed96dd5006edb15c22deb2d8749dbe69364", "filename": "gcc/ada/libgnat/system-linux-sh4.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-sh4.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-sh4.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-sh4.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -147,7 +147,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "cc502da3e5b3b3d04515c8affae70413bdd17eeb", "filename": "gcc/ada/libgnat/system-linux-sparc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-sparc.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -139,7 +139,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "93362072f96a92307c5db791c8d30f019b893d10", "filename": "gcc/ada/libgnat/system-linux-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-linux-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-linux-x86.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -148,7 +148,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "2a693c531d74aa83b747b2a6903fef80c1974f5b", "filename": "gcc/ada/libgnat/system-lynxos178-ppc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-ppc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-ppc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-ppc.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -154,7 +154,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n \n end System;"}, {"sha": "2f13aaeb09238ad7fd2f6f3878cc7583555c90d4", "filename": "gcc/ada/libgnat/system-lynxos178-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-lynxos178-x86.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -154,7 +154,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := False;\n \n end System;"}, {"sha": "a2eaf6a306df3cbb7b3ed79e17938ae98c5f285d", "filename": "gcc/ada/libgnat/system-mingw.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-mingw.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -140,7 +140,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    ---------------------------"}, {"sha": "7e61ae3caf403e33d5cbb11b6817b6b74057b4c4", "filename": "gcc/ada/libgnat/system-qnx-aarch64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -149,7 +149,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "5959b72405b58f8438b167551827e8642b72f3a2", "filename": "gcc/ada/libgnat/system-rtems.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-rtems.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -156,7 +156,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "c15a517c657653a2349ae5724f2c36419b04dcec", "filename": "gcc/ada/libgnat/system-solaris-sparc.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-solaris-sparc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-solaris-sparc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-solaris-sparc.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -140,7 +140,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "981e7ca45b24a16bf67354b3727cceaceb2f30b2", "filename": "gcc/ada/libgnat/system-solaris-x86.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-solaris-x86.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-solaris-x86.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-solaris-x86.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -140,7 +140,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n end System;"}, {"sha": "42d14c43cf7d4f7dfabd8d0fdfc0b543cdd9964d", "filename": "gcc/ada/libgnat/system-vxworks-arm-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -158,7 +158,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "aa8515ac95074d525add5e03d76441a838ebd462", "filename": "gcc/ada/libgnat/system-vxworks-arm-rtp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm-rtp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "ae09b78c0b6c30295708d00239fe6a2c561a2a11", "filename": "gcc/ada/libgnat/system-vxworks-arm.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-arm.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -152,7 +152,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "4b091aef0691ae849d7c58fb86e1fec83052e6f9", "filename": "gcc/ada/libgnat/system-vxworks-e500-kernel.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-kernel.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -153,7 +153,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "a5d4d87fa43fa347d82543875a0418b538c7ebe0", "filename": "gcc/ada/libgnat/system-vxworks-e500-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -159,7 +159,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "4f96385d840a35a5eaee800b63322287df87e1b0", "filename": "gcc/ada/libgnat/system-vxworks-e500-rtp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-e500-rtp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "b8a0ba17735765270fa9176d80dce80fc12a10ab", "filename": "gcc/ada/libgnat/system-vxworks-ppc-kernel.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-kernel.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -152,7 +152,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "ecfd7e695e7a5dc9debfabca08a28c7cefa2109f", "filename": "gcc/ada/libgnat/system-vxworks-ppc-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -158,7 +158,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "72fb96363efd01e37e3bc998cb3fcd5f305e6b99", "filename": "gcc/ada/libgnat/system-vxworks-ppc-rtp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-ppc-rtp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "4c912b8e529229f0f2553c97b05b9b0b69bb0ca1", "filename": "gcc/ada/libgnat/system-vxworks-x86-kernel.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-kernel.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -156,7 +156,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "f8115a5203406d6f9deeb61317eb643db57c4170", "filename": "gcc/ada/libgnat/system-vxworks-x86-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "8894abbaab0a47c1c208e7d7eeee4711531c27cf", "filename": "gcc/ada/libgnat/system-vxworks-x86-rtp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks-x86-rtp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -156,7 +156,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "0556cbf1226bef60556983371e08b1b412dc938c", "filename": "gcc/ada/libgnat/system-vxworks7-aarch64-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "8bf58b7c91aee1d24f904b75570113aec8c0b85b", "filename": "gcc/ada/libgnat/system-vxworks7-aarch64.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-aarch64.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -154,7 +154,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "1341b9d6a2ccf6dcc70371e3254ba194788f6b2d", "filename": "gcc/ada/libgnat/system-vxworks7-arm-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -154,7 +154,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "ae09b78c0b6c30295708d00239fe6a2c561a2a11", "filename": "gcc/ada/libgnat/system-vxworks7-arm.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-arm.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -152,7 +152,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "c7b2c9719cf6e6e7402a99872c6d3b196771c9e5", "filename": "gcc/ada/libgnat/system-vxworks7-e500-kernel.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-kernel.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -153,7 +153,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "a9dbf9740e7fbf2469af4e95753ef4518328aa06", "filename": "gcc/ada/libgnat/system-vxworks7-e500-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -158,7 +158,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "83e44cb2970c0caa35d1445897a64e820faac144", "filename": "gcc/ada/libgnat/system-vxworks7-e500-rtp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-e500-rtp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "e7dfc29aa2a45c98308abf33a735a4708d8e1038", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-kernel.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-kernel.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -152,7 +152,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "146a87be77549731a7a6de2d683ab7403658e0b4", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "0e448d4eb577aaedeb4e3ad9c0e263def2ee2260", "filename": "gcc/ada/libgnat/system-vxworks7-ppc-rtp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc-rtp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "70c1e7c3abc3701085d3a14188d481dff2fd76ce", "filename": "gcc/ada/libgnat/system-vxworks7-ppc64-kernel.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-kernel.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -154,7 +154,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "bb42c6a17bed650dceb68c072546fb2ea641ba9a", "filename": "gcc/ada/libgnat/system-vxworks7-ppc64-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-ppc64-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -157,7 +157,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "f7be01d059ef6a2bf9544176aa77c9f4fb64180b", "filename": "gcc/ada/libgnat/system-vxworks7-x86-kernel.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-kernel.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -153,7 +153,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "05cadbc23d95c7eef0277ce696a3699b109e1417", "filename": "gcc/ada/libgnat/system-vxworks7-x86-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -156,7 +156,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "aebbfd74f01bce9f233e7a02c1d3de41e2c08e54", "filename": "gcc/ada/libgnat/system-vxworks7-x86-rtp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86-rtp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -156,7 +156,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "ed9850f54198d6534f8928062c418713699c7e3d", "filename": "gcc/ada/libgnat/system-vxworks7-x86_64-kernel.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-kernel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-kernel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-kernel.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -153,7 +153,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := True;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".out\";"}, {"sha": "3c98b4c2ff3ebc25fc0ddc560e5014da6d19c931", "filename": "gcc/ada/libgnat/system-vxworks7-x86_64-rtp-smp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-rtp-smp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-rtp-smp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-vxworks7-x86_64-rtp-smp.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -156,7 +156,6 @@ private\n    Always_Compatible_Rep     : constant Boolean := False;\n    Suppress_Standard_Library : constant Boolean := False;\n    Use_Ada_Main_Program_Name : constant Boolean := False;\n-   Frontend_Exceptions       : constant Boolean := False;\n    ZCX_By_Default            : constant Boolean := True;\n \n    Executable_Extension : constant String := \".vxe\";"}, {"sha": "24f6cc9042278e3b626e78d8daaef8a71f57405b", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -27,37 +27,13 @@ with Csets;          use Csets;\n \n package body Opt is\n \n-   -------------------------\n-   -- Back_End_Exceptions --\n-   -------------------------\n-\n-   function Back_End_Exceptions return Boolean is\n-   begin\n-      return\n-        Exception_Mechanism = Back_End_SJLJ\n-          or else\n-        Exception_Mechanism = Back_End_ZCX;\n-   end Back_End_Exceptions;\n-\n-   -------------------------\n-   -- Front_End_Exceptions --\n-   -------------------------\n-\n-   function Front_End_Exceptions return Boolean is\n-   begin\n-      return Exception_Mechanism = Front_End_SJLJ;\n-   end Front_End_Exceptions;\n-\n    --------------------\n    -- SJLJ_Exceptions --\n    --------------------\n \n    function SJLJ_Exceptions return Boolean is\n    begin\n-      return\n-        Exception_Mechanism = Back_End_SJLJ\n-          or else\n-        Exception_Mechanism = Front_End_SJLJ;\n+      return Exception_Mechanism = Back_End_SJLJ;\n    end SJLJ_Exceptions;\n \n    --------------------"}, {"sha": "0d8b25f13a03f214a16e4679373a6c1cd2da7027", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -567,13 +567,7 @@ package Opt is\n    type Exception_Mechanism_Type is\n    --  Determines the kind of mechanism used to handle exceptions\n    --\n-     (Front_End_SJLJ,\n-      --  Exceptions use setjmp/longjmp generated explicitly by the front end\n-      --  (this includes gigi or other equivalent parts of the code generator).\n-      --  AT END handlers are converted into exception handlers by the front\n-      --  end in this mode.\n-\n-      Back_End_ZCX,\n+     (Back_End_ZCX,\n       --  Exceptions are handled by the back end. The front end simply\n       --  generates the handlers as they appear in the source, and AT END\n       --  handlers are left untouched (they are not converted into exception\n@@ -589,16 +583,13 @@ package Opt is\n \n    --  WARNING: There is a matching C declaration of this type in fe.h\n \n-   Exception_Mechanism : Exception_Mechanism_Type := Front_End_SJLJ;\n+   Exception_Mechanism : Exception_Mechanism_Type := Back_End_SJLJ;\n    --  GNAT\n    --  Set to the appropriate value depending on the flags in system.ads\n-   --  (Frontend_Exceptions + ZCX_By_Default). The C convention is there to\n-   --  allow access by gigi.\n+   --  (ZCX_By_Default). The C convention is there to allow access by gigi.\n \n    --  WARNING: There is a matching C declaration of this variable in fe.h\n \n-   function Back_End_Exceptions return Boolean;\n-   function Front_End_Exceptions return Boolean;\n    function ZCX_Exceptions return Boolean;\n    function SJLJ_Exceptions return Boolean;\n    --  GNAT"}, {"sha": "fe436c0f22767fae6dd1b73a080683d3fa789f3e", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -48,7 +48,6 @@ package body Targparm is\n       D32,  --   Duration_32_Bits\n       DEN,  --   Denorm\n       EXS,  --   Exit_Status_Supported\n-      FEX,  --   Frontend_Exceptions\n       MOV,  --   Machine_Overflows\n       MRN,  --   Machine_Rounds\n       PAS,  --   Preallocated_Stacks\n@@ -79,7 +78,6 @@ package body Targparm is\n    D32_Str : aliased constant Source_Buffer := \"Duration_32_Bits\";\n    DEN_Str : aliased constant Source_Buffer := \"Denorm\";\n    EXS_Str : aliased constant Source_Buffer := \"Exit_Status_Supported\";\n-   FEX_Str : aliased constant Source_Buffer := \"Frontend_Exceptions\";\n    MOV_Str : aliased constant Source_Buffer := \"Machine_Overflows\";\n    MRN_Str : aliased constant Source_Buffer := \"Machine_Rounds\";\n    PAS_Str : aliased constant Source_Buffer := \"Preallocated_Stacks\";\n@@ -110,7 +108,6 @@ package body Targparm is\n       D32 => D32_Str'Access,\n       DEN => DEN_Str'Access,\n       EXS => EXS_Str'Access,\n-      FEX => FEX_Str'Access,\n       MOV => MOV_Str'Access,\n       MRN => MRN_Str'Access,\n       PAS => PAS_Str'Access,\n@@ -800,7 +797,6 @@ package body Targparm is\n                      when D32 => Duration_32_Bits_On_Target          := Result;\n                      when DEN => Denorm_On_Target                    := Result;\n                      when EXS => Exit_Status_Supported_On_Target     := Result;\n-                     when FEX => Frontend_Exceptions_On_Target       := Result;\n                      when MOV => Machine_Overflows_On_Target         := Result;\n                      when MRN => Machine_Rounds_On_Target            := Result;\n                      when PAS => Preallocated_Stacks_On_Target       := Result;"}, {"sha": "3d3290b53f1529f1baab3ce80930e5829fccddea", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce19ac123abde3d9c52d52e13a00bbbe60e08722/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=ce19ac123abde3d9c52d52e13a00bbbe60e08722", "patch": "@@ -263,9 +263,6 @@ package Targparm is\n    ZCX_By_Default_On_Target : Boolean := False;\n    --  Indicates if zero cost scheme for exceptions\n \n-   Frontend_Exceptions_On_Target : Boolean := True;\n-   --  Indicates if we're using a front-end scheme for exceptions\n-\n    ------------------------------------\n    -- Run-Time Library Configuration --\n    ------------------------------------"}]}