{"sha": "82cf0c8c008b9f8ab85a274d79ee73ea730caca0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjZjBjOGMwMDhiOWY4YWI4NWEyNzRkNzllZTczZWE3MzBjYWNhMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-02-18T08:58:14Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-02-18T08:58:14Z"}, "message": "dwarf2out.c (add_var_loc_to_decl): Change last argument to rtx...\n\n\t* dwarf2out.c (add_var_loc_to_decl): Change last argument to\n\trtx, allocate struct var_loc_node here and return it to the\n\tcaller, and only if it is actually needed.\n\t(dwarf2out_var_location): Adjust add_var_loc_to_decl caller,\n\tmove it earlier and return immediately if it returns NULL.\n\nFrom-SVN: r156860", "tree": {"sha": "c2e98a4b396eb4d3fc85f3d5d5bc3fb2f2dbd8de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2e98a4b396eb4d3fc85f3d5d5bc3fb2f2dbd8de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82cf0c8c008b9f8ab85a274d79ee73ea730caca0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82cf0c8c008b9f8ab85a274d79ee73ea730caca0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82cf0c8c008b9f8ab85a274d79ee73ea730caca0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82cf0c8c008b9f8ab85a274d79ee73ea730caca0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5a1e3b6c7fb3a3efbd1419673cfa58e600a8a2fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a1e3b6c7fb3a3efbd1419673cfa58e600a8a2fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a1e3b6c7fb3a3efbd1419673cfa58e600a8a2fd"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "bb696ae3890900bbfb3623a8423b030f8daecbdd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82cf0c8c008b9f8ab85a274d79ee73ea730caca0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82cf0c8c008b9f8ab85a274d79ee73ea730caca0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=82cf0c8c008b9f8ab85a274d79ee73ea730caca0", "patch": "@@ -1,3 +1,11 @@\n+2010-02-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* dwarf2out.c (add_var_loc_to_decl): Change last argument to\n+\trtx, allocate struct var_loc_node here and return it to the\n+\tcaller, and only if it is actually needed.\n+\t(dwarf2out_var_location): Adjust add_var_loc_to_decl caller,\n+\tmove it earlier and return immediately if it returns NULL.\n+\n 2010-02-17  Mikael Pettersson  <mikpe@it.uu.se>\n \n \t* config/sparc/gas.h: New file.  Restore"}, {"sha": "2e8712f74225f611405e8cc02eaef4ec84b53e65", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82cf0c8c008b9f8ab85a274d79ee73ea730caca0/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82cf0c8c008b9f8ab85a274d79ee73ea730caca0/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=82cf0c8c008b9f8ab85a274d79ee73ea730caca0", "patch": "@@ -1,6 +1,7 @@\n /* Output Dwarf2 format symbol table information from GCC.\n    Copyright (C) 1992, 1993, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,\n-   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n+   2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+   Free Software Foundation, Inc.\n    Contributed by Gary Funck (gary@intrepid.com).\n    Derived from DWARF 1 implementation of Ron Guilmette (rfg@monkeys.com).\n    Extensively modified by Jason Merrill (jason@cygnus.com).\n@@ -5983,7 +5984,7 @@ static hashval_t decl_loc_table_hash (const void *);\n static int decl_loc_table_eq (const void *, const void *);\n static var_loc_list *lookup_decl_loc (const_tree);\n static void equate_decl_number_to_die (tree, dw_die_ref);\n-static void add_var_loc_to_decl (tree, struct var_loc_node *);\n+static struct var_loc_node *add_var_loc_to_decl (tree, rtx);\n static void print_spaces (FILE *);\n static void print_die (dw_die_ref, FILE *);\n static void print_dwarf_line_table (FILE *);\n@@ -7762,12 +7763,13 @@ equate_decl_number_to_die (tree decl, dw_die_ref decl_die)\n \n /* Add a variable location node to the linked list for DECL.  */\n \n-static void\n-add_var_loc_to_decl (tree decl, struct var_loc_node *loc)\n+static struct var_loc_node *\n+add_var_loc_to_decl (tree decl, rtx loc_note)\n {\n   unsigned int decl_id = DECL_UID (decl);\n   var_loc_list *temp;\n   void **slot;\n+  struct var_loc_node *loc = NULL;\n \n   slot = htab_find_slot_with_hash (decl_loc_table, decl, decl_id, INSERT);\n   if (*slot == NULL)\n@@ -7785,24 +7787,27 @@ add_var_loc_to_decl (tree decl, struct var_loc_node *loc)\n \t and either both or neither of the locations is uninitialized,\n \t we have nothing to do.  */\n       if ((!rtx_equal_p (NOTE_VAR_LOCATION_LOC (temp->last->var_loc_note),\n-\t\t\t NOTE_VAR_LOCATION_LOC (loc->var_loc_note)))\n+\t\t\t NOTE_VAR_LOCATION_LOC (loc_note)))\n \t  || ((NOTE_VAR_LOCATION_STATUS (temp->last->var_loc_note)\n-\t       != NOTE_VAR_LOCATION_STATUS (loc->var_loc_note))\n+\t       != NOTE_VAR_LOCATION_STATUS (loc_note))\n \t      && ((NOTE_VAR_LOCATION_STATUS (temp->last->var_loc_note)\n \t\t   == VAR_INIT_STATUS_UNINITIALIZED)\n-\t\t  || (NOTE_VAR_LOCATION_STATUS (loc->var_loc_note)\n+\t\t  || (NOTE_VAR_LOCATION_STATUS (loc_note)\n \t\t      == VAR_INIT_STATUS_UNINITIALIZED))))\n \t{\n \t  /* Add LOC to the end of list and update LAST.  */\n+\t  loc = GGC_CNEW (struct var_loc_node);\n \t  temp->last->next = loc;\n \t  temp->last = loc;\n \t}\n     }\n   else\n     {\n+      loc = GGC_CNEW (struct var_loc_node);\n       temp->first = loc;\n       temp->last = loc;\n     }\n+  return loc;\n }\n \f\n /* Keep track of the number of spaces used to indent the\n@@ -20252,7 +20257,11 @@ dwarf2out_var_location (rtx loc_note)\n   if (next_real == NULL_RTX)\n     return;\n \n-  newloc = GGC_CNEW (struct var_loc_node);\n+  decl = NOTE_VAR_LOCATION_DECL (loc_note);\n+  newloc = add_var_loc_to_decl (decl, loc_note);\n+  if (newloc == NULL)\n+    return;\n+\n   /* If there were no real insns between note we processed last time\n      and this note, use the label we emitted last time.  */\n   if (last_var_location_insn == NULL_RTX\n@@ -20287,8 +20296,6 @@ dwarf2out_var_location (rtx loc_note)\n \n   last_var_location_insn = next_real;\n   last_in_cold_section_p = in_cold_section_p;\n-  decl = NOTE_VAR_LOCATION_DECL (loc_note);\n-  add_var_loc_to_decl (decl, newloc);\n }\n \n /* We need to reset the locations at the beginning of each"}]}