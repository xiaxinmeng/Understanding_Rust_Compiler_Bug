{"sha": "794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk0YTI5MmQxY2Q1ZmQzOWVkMGI1MzMwOGFjODEwMWRjN2Q2Y2IyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-07-15T06:57:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-07-15T06:57:36Z"}, "message": "re PR middle-end/7245 (ICE in find_reloads)\n\n\tPR middle-end/7245\n\t* config/i386/i386.c (const_int_1_31_operand): New.\n\t* config/i386/i386.h (PREDICATE_CODES): Add it.\n\t* config/i386/i386.md (ashlsi3_cmp, ashlsi3_cmp_zext, ashlhi3_cmp,\n\tashlqi3_cmp, ashrsi3_cmp, ashrsi3_cmp_zext, ashrhi3_cmp, ashrqi3_cmp,\n\tlshrsi3_cmp, lshrsi3_cmp_zext, lshrhi3_cmp, lshrqi3_cmp): Use it.\n\n\t* gcc.c-torture/compile/20020710-1.c: New test.\n\nFrom-SVN: r55451", "tree": {"sha": "f6742a0fdfc60264c0062935ff5be1c022dec0ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6742a0fdfc60264c0062935ff5be1c022dec0ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df815141ef37cf0d1d6cdbc6cfd2812d14272f1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df815141ef37cf0d1d6cdbc6cfd2812d14272f1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df815141ef37cf0d1d6cdbc6cfd2812d14272f1b"}], "stats": {"total": 62, "additions": 50, "deletions": 12}, "files": [{"sha": "8e16cb3cd32dbba9d6798c548cfb79673a2e0d33", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "patch": "@@ -1,3 +1,12 @@\n+2002-07-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/7245\n+\t* config/i386/i386.c (const_int_1_31_operand): New.\n+\t* config/i386/i386.h (PREDICATE_CODES): Add it.\n+\t* config/i386/i386.md (ashlsi3_cmp, ashlsi3_cmp_zext, ashlhi3_cmp,\n+\tashlqi3_cmp, ashrsi3_cmp, ashrsi3_cmp_zext, ashrhi3_cmp, ashrqi3_cmp,\n+\tlshrsi3_cmp, lshrsi3_cmp_zext, lshrhi3_cmp, lshrqi3_cmp): Use it.\n+\n 2002-07-14  Alan Modra  <amodra@bigpond.net.au>\n \n \tPR target/7282"}, {"sha": "4800949d3ad0ff7653f8c23994905526e372acac", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "patch": "@@ -2838,6 +2838,18 @@ const_int_1_operand (op, mode)\n   return (GET_CODE (op) == CONST_INT && INTVAL (op) == 1);\n }\n \n+/* Return nonzero if OP is CONST_INT >= 1 and <= 31 (a valid operand\n+   for shift & compare patterns, as shifting by 0 does not change flags),\n+   else return zero.  */\n+\n+int\n+const_int_1_31_operand (op, mode)\n+     rtx op;\n+     enum machine_mode mode ATTRIBUTE_UNUSED;\n+{\n+  return (GET_CODE (op) == CONST_INT && INTVAL (op) >= 1 && INTVAL (op) <= 31);\n+}\n+\n /* Returns 1 if OP is either a symbol reference or a sum of a symbol\n    reference and a constant.  */\n "}, {"sha": "826e77890d747f5f36b086cb72635b9e199315d9", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "patch": "@@ -3142,6 +3142,7 @@ do {\t\t\t\t\t\t\\\n \t\t\t\t       SYMBOL_REF, LABEL_REF}},\t\t\\\n   {\"shiftdi_operand\", {SUBREG, REG, MEM}},\t\t\t\t\\\n   {\"const_int_1_operand\", {CONST_INT}},\t\t\t\t\t\\\n+  {\"const_int_1_31_operand\", {CONST_INT}},\t\t\t\t\\\n   {\"symbolic_operand\", {SYMBOL_REF, LABEL_REF, CONST}},\t\t\t\\\n   {\"aligned_operand\", {CONST_INT, CONST_DOUBLE, CONST, SYMBOL_REF,\t\\\n \t\t       LABEL_REF, SUBREG, REG, MEM}},\t\t\t\\"}, {"sha": "d75ddee4415207cbe900ad7e334aaca73378d53f", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "patch": "@@ -10687,7 +10687,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (ashift:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\")\n-\t\t     (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t     (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm\")\n \t(ashift:SI (match_dup 1) (match_dup 2)))]\n@@ -10726,7 +10726,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (ashift:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t     (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t     (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (ashift:SI (match_dup 1) (match_dup 2))))]\n@@ -10851,7 +10851,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (ashift:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\")\n-\t\t     (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t     (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm\")\n \t(ashift:HI (match_dup 1) (match_dup 2)))]\n@@ -11015,7 +11015,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (ashift:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0\")\n-\t\t     (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t     (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm\")\n \t(ashift:QI (match_dup 1) (match_dup 2)))]\n@@ -11365,7 +11365,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (ashiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\")\n-\t\t       (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t       (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm\")\n \t(ashiftrt:SI (match_dup 1) (match_dup 2)))]\n@@ -11379,7 +11379,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (ashiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t       (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (ashiftrt:SI (match_dup 1) (match_dup 2))))]\n@@ -11451,7 +11451,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (ashiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\")\n-\t\t       (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t       (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm\")\n \t(ashiftrt:HI (match_dup 1) (match_dup 2)))]\n@@ -11551,7 +11551,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (ashiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0\")\n-\t\t       (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t       (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm\")\n \t(ashiftrt:QI (match_dup 1) (match_dup 2)))]\n@@ -11784,7 +11784,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (lshiftrt:SI (match_operand:SI 1 \"nonimmediate_operand\" \"0\")\n-\t\t       (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t       (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm\")\n \t(lshiftrt:SI (match_dup 1) (match_dup 2)))]\n@@ -11798,7 +11798,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (lshiftrt:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t       (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(lshiftrt:DI (zero_extend:DI (match_dup 1)) (match_dup 2)))]\n@@ -11870,7 +11870,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (lshiftrt:HI (match_operand:HI 1 \"nonimmediate_operand\" \"0\")\n-\t\t       (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t       (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=rm\")\n \t(lshiftrt:HI (match_dup 1) (match_dup 2)))]\n@@ -11970,7 +11970,7 @@\n   [(set (reg 17)\n \t(compare\n \t  (lshiftrt:QI (match_operand:QI 1 \"nonimmediate_operand\" \"0\")\n-\t\t       (match_operand:QI 2 \"immediate_operand\" \"I\"))\n+\t\t       (match_operand:QI 2 \"const_int_1_31_operand\" \"I\"))\n \t  (const_int 0)))\n    (set (match_operand:QI 0 \"nonimmediate_operand\" \"=qm\")\n \t(lshiftrt:QI (match_dup 1) (match_dup 2)))]"}, {"sha": "4883daf0ef0b0f6fbcc047d9d731b264146312a4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "patch": "@@ -1,3 +1,7 @@\n+2002-07-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20020710-1.c: New test.\n+\n Thu Jul 11 15:39:21 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n                           Andrew Pinski  <pinskia@physics.uc.edu>\n "}, {"sha": "bf6c9066cdd738b00dc0bf51ff1b7cae310fbbb0", "filename": "gcc/testsuite/gcc.c-torture/compile/20020710-1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020710-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/794a292d1cd5fd39ed0b53308ac8101dc7d6cb20/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020710-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20020710-1.c?ref=794a292d1cd5fd39ed0b53308ac8101dc7d6cb20", "patch": "@@ -0,0 +1,12 @@\n+/* Red Hat bugzilla #68395\n+   PR middle-end/7245\n+   This testcase ICEd on IA-32 because shift & compare patterns\n+   predicates allowed any immediate, but constraints allowed only\n+   numbers from 1 to 31.  */\n+\n+void foo (int *x, unsigned int y)\n+{\n+  int a = y >> -13;\n+  if (a)\n+    *x = a;\n+}"}]}