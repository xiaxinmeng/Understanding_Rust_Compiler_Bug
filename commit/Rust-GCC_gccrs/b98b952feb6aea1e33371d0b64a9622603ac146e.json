{"sha": "b98b952feb6aea1e33371d0b64a9622603ac146e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk4Yjk1MmZlYjZhZWExZTMzMzcxZDBiNjRhOTYyMjYwM2FjMTQ2ZQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-04-15T09:26:05Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-04-15T09:26:05Z"}, "message": "re PR libobjc/32037 (--enable-objc-gc on OS X won't build)\n\n\tPR libobjc/32037\n\t* Makefile.in (OBJC_GCFLAGS): Move ...\n\t* configure.ac (enable_objc_gc): ... here.\n\tAdd $(libsuffix) to OBJC_BOEHM_GC.\n\t* configure: Regenerate.\n\nFrom-SVN: r172477", "tree": {"sha": "44707a82d0a5720e8027d1d267f90e083dc9834c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44707a82d0a5720e8027d1d267f90e083dc9834c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b98b952feb6aea1e33371d0b64a9622603ac146e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98b952feb6aea1e33371d0b64a9622603ac146e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98b952feb6aea1e33371d0b64a9622603ac146e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98b952feb6aea1e33371d0b64a9622603ac146e/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ad19c4be9ab0c334aa539e3785380108a7bf5953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad19c4be9ab0c334aa539e3785380108a7bf5953", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad19c4be9ab0c334aa539e3785380108a7bf5953"}], "stats": {"total": 47, "additions": 38, "deletions": 9}, "files": [{"sha": "a29170442905715de11c2e99e8d45f7c71dd4419", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98b952feb6aea1e33371d0b64a9622603ac146e/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98b952feb6aea1e33371d0b64a9622603ac146e/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=b98b952feb6aea1e33371d0b64a9622603ac146e", "patch": "@@ -1,3 +1,11 @@\n+2011-04-15  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR libobjc/32037\n+\t* Makefile.in (OBJC_GCFLAGS): Move ...\n+\t* configure.ac (enable_objc_gc): ... here.\n+\tAdd $(libsuffix) to OBJC_BOEHM_GC.\n+\t* configure: Regenerate.\n+\n 2011-02-28  Nicola Pero  <nicola.pero@meta-innovation.com>\n \t\n \t* selector.c (sel_getTypedSelector): Return NULL if there are"}, {"sha": "e52f441d47a5ea8c37e97bda28468a66f1e01b6b", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98b952feb6aea1e33371d0b64a9622603ac146e/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98b952feb6aea1e33371d0b64a9622603ac146e/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=b98b952feb6aea1e33371d0b64a9622603ac146e", "patch": "@@ -93,7 +93,7 @@ LIBTOOL_INSTALL = $(LIBTOOL) --mode=install\n LIBTOOL_CLEAN   = $(LIBTOOL) --mode=clean\n #LIBTOOL_UNINSTALL = $(LIBTOOL) --mode=uninstall\n \n-OBJC_GCFLAGS=-DOBJC_WITH_GC=1\n+OBJC_GCFLAGS=@OBJC_GCFLAGS@\n OBJC_BOEHM_GC=@OBJC_BOEHM_GC@\n OBJC_BOEHM_GC_INCLUDES=@OBJC_BOEHM_GC_INCLUDES@\n OBJC_BOEHM_GC_LIBS=../boehm-gc/libgcjgc_convenience.la $(thread_libs_and_flags)"}, {"sha": "9c3f621c88910b927381d6e9f4f975fd960c0743", "filename": "libobjc/configure", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98b952feb6aea1e33371d0b64a9622603ac146e/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98b952feb6aea1e33371d0b64a9622603ac146e/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=b98b952feb6aea1e33371d0b64a9622603ac146e", "patch": "@@ -656,6 +656,7 @@ host\n multi_basedir\n OBJC_BOEHM_GC_INCLUDES\n OBJC_BOEHM_GC\n+OBJC_GCFLAGS\n VERSION\n target_subdir\n host_subdir\n@@ -2320,21 +2321,31 @@ $as_echo \"$version_specific_libs\" >&6; }\n if test \"${enable_objc_gc+set}\" = set; then :\n   enableval=$enable_objc_gc; case $enable_objc_gc in\n   no)\n+    OBJC_GCFLAGS=''\n     OBJC_BOEHM_GC=''\n     OBJC_BOEHM_GC_INCLUDES=''\n     ;;\n   *)\n-    OBJC_BOEHM_GC=libobjc_gc.la\n+    OBJC_GCFLAGS='-DOBJC_WITH_GC=1'\n+    OBJC_BOEHM_GC='libobjc_gc$(libsuffix).la'\n     OBJC_BOEHM_GC_INCLUDES='-I$(top_srcdir)/../boehm-gc/include -I../boehm-gc/include'\n+    case \"${host}\" in\n+      alpha*-dec-osf*)\n+        # boehm-gc headers include <pthread.h>, which needs to be compiled\n+\t# with -pthread on Tru64 UNIX.\n+        OBJC_GCFLAGS=\"${OBJC_GCFLAGS} -pthread\"\n+\t;;\n+    esac\n     ;;\n esac\n else\n-  OBJC_BOEHM_GC=''; OBJC_BOEHM_GC_INCLUDES=''\n+  OBJC_GCFLAGS=''; OBJC_BOEHM_GC=''; OBJC_BOEHM_GC_INCLUDES=''\n fi\n \n \n \n \n+\n # -----------\n # Directories\n # -----------\n@@ -10583,7 +10594,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10586 \"configure\"\n+#line 10597 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10689,7 +10700,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10692 \"configure\"\n+#line 10703 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11472,7 +11483,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then :\n   enableval=$enable_sjlj_exceptions; :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 11475 \"configure\"\n+#line 11486 \"configure\"\n @interface Frob\n @end\n @implementation Frob"}, {"sha": "35b724376cc8e31eb58f2360e4c6d4f6bc727c4e", "filename": "libobjc/configure.ac", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b98b952feb6aea1e33371d0b64a9622603ac146e/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b98b952feb6aea1e33371d0b64a9622603ac146e/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=b98b952feb6aea1e33371d0b64a9622603ac146e", "patch": "@@ -1,6 +1,6 @@\n # Process this file with autoconf to produce a configure script.\n #   Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2001, 2002, 2003, 2004\n-#   2005, 2006, 2009 Free Software Foundation, Inc.\n+#   2005, 2006, 2009, 2011 Free Software Foundation, Inc.\n #   Originally contributed by Dave Love (d.love@dl.ac.uk).\n #\n #This file is part of GCC.\n@@ -63,15 +63,25 @@ AC_ARG_ENABLE(objc-gc,\n                           the GNU Objective-C runtime.],\n [case $enable_objc_gc in\n   no)\n+    OBJC_GCFLAGS=''\n     OBJC_BOEHM_GC=''\n     OBJC_BOEHM_GC_INCLUDES=''\n     ;;\n   *)\n-    OBJC_BOEHM_GC=libobjc_gc.la\n+    OBJC_GCFLAGS='-DOBJC_WITH_GC=1'\n+    OBJC_BOEHM_GC='libobjc_gc$(libsuffix).la'\n     OBJC_BOEHM_GC_INCLUDES='-I$(top_srcdir)/../boehm-gc/include -I../boehm-gc/include'\n+    case \"${host}\" in\n+      alpha*-dec-osf*)\n+        # boehm-gc headers include <pthread.h>, which needs to be compiled\n+\t# with -pthread on Tru64 UNIX.\n+        OBJC_GCFLAGS=\"${OBJC_GCFLAGS} -pthread\"\n+\t;;\n+    esac\n     ;;\n esac],\n-[OBJC_BOEHM_GC=''; OBJC_BOEHM_GC_INCLUDES=''])\n+[OBJC_GCFLAGS=''; OBJC_BOEHM_GC=''; OBJC_BOEHM_GC_INCLUDES=''])\n+AC_SUBST(OBJC_GCFLAGS)\n AC_SUBST(OBJC_BOEHM_GC)\n AC_SUBST(OBJC_BOEHM_GC_INCLUDES)\n "}]}