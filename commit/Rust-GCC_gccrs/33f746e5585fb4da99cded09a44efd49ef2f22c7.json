{"sha": "33f746e5585fb4da99cded09a44efd49ef2f22c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNmNzQ2ZTU1ODVmYjRkYTk5Y2RlZDA5YTQ0ZWZkNDllZjJmMjJjNw==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2019-01-17T07:32:16Z"}, "committer": {"name": "Alexandre Oliva", "email": "aoliva@gcc.gnu.org", "date": "2019-01-17T07:32:16Z"}, "message": "[PR86648] use auto identifier for class placeholder templates\n\ndwarf2out recognizes unspecified auto types by the identifier.  C++\ntemplate class placeholders are unspecified auto types that take the\nidentifier of the class rather than those used by preexisting auto\ntypes, so dwarf2out ICEs when it finds one of those.  Alas, they may\nbe visible to dwarf2out, since the types of e.g. static data members\nof templates are only deduced at member instantiation, i.e., if the\ndata member is actually referenced, but the data member is added as a\nfield, still with unspecified auto placeholder type, when the\nenclosing class is instantiated.\n\nI've changed placeholder creator to use an auto identifier instead,\nwhich allowed dropping the placeholder test in C++'s is_auto (alas, it\ncan't be used in dwarf2out, think LTO).  To avoid losing information\nin error messages and dumps and whatnot, I've added code to recognize\nplaceholders for template classes say A and print them out as\nA<...auto...>.\n\nfor  gcc/cp/ChangeLog\n\n\tPR c++/86648\n        * pt.c (make_template_placeholder): Use auto_identifier.\n        (is_auto): Drop CLASS_PLACEHOLDER_TEMPLATE test.\n        * error.c (dump_type): Handle template placeholders.\n        * cxx-pretty-print.c (pp_cx_unqualified_id): Likewise.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR c++/86648\n        * gcc.dg/cpp1z/pr86648.C: New.\n\nFrom-SVN: r268005", "tree": {"sha": "c288da29f73644c8455d8be816191d34f7524634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c288da29f73644c8455d8be816191d34f7524634"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33f746e5585fb4da99cded09a44efd49ef2f22c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33f746e5585fb4da99cded09a44efd49ef2f22c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33f746e5585fb4da99cded09a44efd49ef2f22c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33f746e5585fb4da99cded09a44efd49ef2f22c7/comments", "author": null, "committer": null, "parents": [{"sha": "b25a37564938313a6deed3b6518d03552431c160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25a37564938313a6deed3b6518d03552431c160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b25a37564938313a6deed3b6518d03552431c160"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "73f1b76e5ff4dfb1be2cf3ecaf7dd240b04a9830", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=33f746e5585fb4da99cded09a44efd49ef2f22c7", "patch": "@@ -1,5 +1,11 @@\n 2019-01-17  Alexandre Oliva <aoliva@redhat.com>\n \n+\tPR c++/86648\n+\t* pt.c (make_template_placeholder): Use auto_identifier.\n+\t(is_auto): Drop CLASS_PLACEHOLDER_TEMPLATE test.\n+\t* error.c (dump_type): Handle template placeholders.\n+\t* cxx-pretty-print.c (pp_cx_unqualified_id): Likewise.\n+\n \tPR c++/88146\n \t* cvt.c (convert_to_void): Handle all cdtor calls as if\n \treturning void."}, {"sha": "a114d6654e9129971b6d6784c63ab7927747508b", "filename": "gcc/cp/cxx-pretty-print.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Fcp%2Fcxx-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Fcp%2Fcxx-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcxx-pretty-print.c?ref=33f746e5585fb4da99cded09a44efd49ef2f22c7", "patch": "@@ -187,7 +187,13 @@ pp_cxx_unqualified_id (cxx_pretty_printer *pp, tree t)\n \n     case TEMPLATE_TYPE_PARM:\n     case TEMPLATE_TEMPLATE_PARM:\n-      if (TYPE_IDENTIFIER (t))\n+      if (template_placeholder_p (t))\n+\t{\n+\t  t = TREE_TYPE (CLASS_PLACEHOLDER_TEMPLATE (t));\n+\t  pp_cxx_unqualified_id (pp, TYPE_IDENTIFIER (t));\n+\t  pp_string (pp, \"<...auto...>\");\n+\t}\n+      else if (TYPE_IDENTIFIER (t))\n \tpp_cxx_unqualified_id (pp, TYPE_IDENTIFIER (t));\n       else\n \tpp_cxx_canonical_template_parameter (pp, t);"}, {"sha": "f585d5fe58fe9ce03329f70aea8bc579da84c222", "filename": "gcc/cp/error.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=33f746e5585fb4da99cded09a44efd49ef2f22c7", "patch": "@@ -546,6 +546,12 @@ dump_type (cxx_pretty_printer *pp, tree t, int flags)\n       pp_cxx_cv_qualifier_seq (pp, t);\n       if (tree c = PLACEHOLDER_TYPE_CONSTRAINTS (t))\n \tpp_cxx_constrained_type_spec (pp, c);\n+      else if (template_placeholder_p (t))\n+\t{\n+\t  t = TREE_TYPE (CLASS_PLACEHOLDER_TEMPLATE (t));\n+\t  pp_cxx_tree_identifier (pp, TYPE_IDENTIFIER (t));\n+\t  pp_string (pp, \"<...auto...>\");\n+\t}\n       else if (TYPE_IDENTIFIER (t))\n \tpp_cxx_tree_identifier (pp, TYPE_IDENTIFIER (t));\n       else"}, {"sha": "e4f76478f543c4987063512f6934cdddf35102d3", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=33f746e5585fb4da99cded09a44efd49ef2f22c7", "patch": "@@ -26458,7 +26458,7 @@ make_auto (void)\n tree\n make_template_placeholder (tree tmpl)\n {\n-  tree t = make_auto_1 (DECL_NAME (tmpl), true);\n+  tree t = make_auto_1 (auto_identifier, true);\n   CLASS_PLACEHOLDER_TEMPLATE (t) = tmpl;\n   return t;\n }\n@@ -27391,8 +27391,7 @@ is_auto (const_tree type)\n {\n   if (TREE_CODE (type) == TEMPLATE_TYPE_PARM\n       && (TYPE_IDENTIFIER (type) == auto_identifier\n-\t  || TYPE_IDENTIFIER (type) == decltype_auto_identifier\n-\t  || CLASS_PLACEHOLDER_TEMPLATE (type)))\n+\t  || TYPE_IDENTIFIER (type) == decltype_auto_identifier))\n     return true;\n   else\n     return false;"}, {"sha": "3ce3da7940db0c68952aca55d82344a9c33959c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=33f746e5585fb4da99cded09a44efd49ef2f22c7", "patch": "@@ -1,3 +1,8 @@\n+2019-01-17  Alexandre Oliva <aoliva@redhat.com>\n+\n+\tPR c++/86648\n+\t* gcc.dg/cpp1z/pr86648.C: New.\n+\n 2019-01-17  Kewen Lin  <linkw@gcc.gnu.org>\n \n \tPR target/87306"}, {"sha": "20ee4c8c0d4465014b9199f0cf501939c94d44df", "filename": "gcc/testsuite/g++.dg/cpp1z/pr86648.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr86648.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33f746e5585fb4da99cded09a44efd49ef2f22c7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr86648.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fpr86648.C?ref=33f746e5585fb4da99cded09a44efd49ef2f22c7", "patch": "@@ -0,0 +1,5 @@\n+// { dg-do compile { target c++17 } }\n+\n+template <typename> class A;\n+template <class T> struct B { static A a{T::a}; };\n+void foo () { B<int> a; }"}]}