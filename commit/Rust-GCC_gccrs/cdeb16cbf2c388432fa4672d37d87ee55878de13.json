{"sha": "cdeb16cbf2c388432fa4672d37d87ee55878de13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RlYjE2Y2JmMmMzODg0MzJmYTQ2NzJkMzdkODdlZTU1ODc4ZGUxMw==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-12-09T13:21:44Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2016-12-09T13:21:44Z"}, "message": "re PR fortran/61767 ([OOP] ICE in generate_finalization_wrapper at fortran/class.c:1491)\n\n2016-12-09  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/61767\n\t* class.c (has_finalizer_component): Fix this function to detect only\n\tnon-pointer non-allocatable components which have a finalizer.\n\n2016-12-09  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/61767\n\t* gfortran.dg/finalize_31.f90: New test.\n\nFrom-SVN: r243483", "tree": {"sha": "8a5afc874e5edc2be1ea501e48bda1f67620b5e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a5afc874e5edc2be1ea501e48bda1f67620b5e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdeb16cbf2c388432fa4672d37d87ee55878de13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdeb16cbf2c388432fa4672d37d87ee55878de13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdeb16cbf2c388432fa4672d37d87ee55878de13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdeb16cbf2c388432fa4672d37d87ee55878de13/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffaf9305aa0f0d4a4cc6cc8afa5444b94b2b67a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffaf9305aa0f0d4a4cc6cc8afa5444b94b2b67a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffaf9305aa0f0d4a4cc6cc8afa5444b94b2b67a0"}], "stats": {"total": 68, "additions": 54, "deletions": 14}, "files": [{"sha": "819f5ef915620a29180f3470ccca91d9652c01fe", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdeb16cbf2c388432fa4672d37d87ee55878de13/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdeb16cbf2c388432fa4672d37d87ee55878de13/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cdeb16cbf2c388432fa4672d37d87ee55878de13", "patch": "@@ -1,3 +1,9 @@\n+2016-12-09  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/61767\n+\t* class.c (has_finalizer_component): Fix this function to detect only\n+\tnon-pointer non-allocatable components which have a finalizer.\n+\n 2016-12-09  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/78505"}, {"sha": "1fba6c9307244e8b13fd26ea5fcba778d9178def", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdeb16cbf2c388432fa4672d37d87ee55878de13/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdeb16cbf2c388432fa4672d37d87ee55878de13/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=cdeb16cbf2c388432fa4672d37d87ee55878de13", "patch": "@@ -841,20 +841,19 @@ has_finalizer_component (gfc_symbol *derived)\n    gfc_component *c;\n \n   for (c = derived->components; c; c = c->next)\n-    {\n-      if (c->ts.type == BT_DERIVED && c->ts.u.derived->f2k_derived\n-\t  && c->ts.u.derived->f2k_derived->finalizers)\n-\treturn true;\n-\n-      /* Stop infinite recursion through this function by inhibiting\n-\t calls when the derived type and that of the component are\n-\t the same.  */\n-      if (c->ts.type == BT_DERIVED\n-\t  && !gfc_compare_derived_types (derived, c->ts.u.derived)\n-\t  && !c->attr.pointer && !c->attr.allocatable\n-\t  && has_finalizer_component (c->ts.u.derived))\n-\treturn true;\n-    }\n+    if (c->ts.type == BT_DERIVED && !c->attr.pointer && !c->attr.allocatable)\n+      {\n+\tif (c->ts.u.derived->f2k_derived\n+\t    && c->ts.u.derived->f2k_derived->finalizers)\n+\t  return true;\n+\n+\t/* Stop infinite recursion through this function by inhibiting\n+\t  calls when the derived type and that of the component are\n+\t  the same.  */\n+\tif (!gfc_compare_derived_types (derived, c->ts.u.derived)\n+\t    && has_finalizer_component (c->ts.u.derived))\n+\t  return true;\n+      }\n   return false;\n }\n "}, {"sha": "3f1693671381f5a74335a4c3762a0d2ba72e96c2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdeb16cbf2c388432fa4672d37d87ee55878de13/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdeb16cbf2c388432fa4672d37d87ee55878de13/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cdeb16cbf2c388432fa4672d37d87ee55878de13", "patch": "@@ -1,3 +1,8 @@\n+2016-12-09  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/61767\n+\t* gfortran.dg/finalize_31.f90: New test.\n+\n 2016-12-09  Andre Vehreschild  <vehre@gcc.gnu.org>\n \n \tPR fortran/78505"}, {"sha": "8817a4f6365cef36f2c0f2721f106c8109645b0d", "filename": "gcc/testsuite/gfortran.dg/finalize_31.f90", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdeb16cbf2c388432fa4672d37d87ee55878de13/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_31.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdeb16cbf2c388432fa4672d37d87ee55878de13/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_31.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffinalize_31.f90?ref=cdeb16cbf2c388432fa4672d37d87ee55878de13", "patch": "@@ -0,0 +1,30 @@\n+! { dg-do run }\n+!\n+! PR 61767: [OOP] ICE in generate_finalization_wrapper at fortran/class.c:1491\n+!\n+! Contributed by <reubendb@gmail.com>\n+\n+module Communicator_Form\n+  implicit none\n+  type :: CommunicatorForm\n+  contains\n+    final :: Finalize\n+  end type\n+  type :: MessageTemplate\n+    type ( CommunicatorForm ), pointer :: Communicator\n+  end type\n+contains\n+  subroutine Finalize ( C )\n+    type ( CommunicatorForm ) :: C\n+    ! should not be called\n+    call abort()\n+  end subroutine\n+end module\n+\n+program p\n+  use Communicator_Form\n+  implicit none\n+  class ( MessageTemplate ), pointer :: M\n+  allocate(M)\n+  deallocate(M)\n+end"}]}