{"sha": "37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlNWVlZmI5MmNkYzZhN2EzMjBlZWNiNWI4MWJjYjNlNTI2YzM1Zg==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2018-11-13T02:06:30Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2018-11-13T02:06:30Z"}, "message": "re PR preprocessor/47823 (#pragma once is documented in a weird spot)\n\n2018-11-12  Sandra Loosemore  <sandra@codesourcery.com>\n\n\tPR preprocessor/47823\n\n\tgcc/\n\t* doc/cpp.texi (Alternatives to Wrapper #ifndef): Move #pragma once\n\tdocumentation to...\n\t(Pragmas): ...here.  \n\t* doc/extend.texi (Pragmas): Note additional pragmas documented\n\tin the CPP manual.\n\nFrom-SVN: r266043", "tree": {"sha": "312ba863e6c3484cc31c704c8093a93e1c310f57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/312ba863e6c3484cc31c704c8093a93e1c310f57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85177e1075ad8065f1e19cd822832cdf73a1b6ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85177e1075ad8065f1e19cd822832cdf73a1b6ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85177e1075ad8065f1e19cd822832cdf73a1b6ed"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "17f8d315336135e36e466aeb33c349e9c3b39a92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f", "patch": "@@ -1,3 +1,12 @@\n+2018-11-12  Sandra Loosemore  <sandra@codesourcery.com>\n+\n+\tPR preprocessor/47823\n+\t* doc/cpp.texi (Alternatives to Wrapper #ifndef): Move #pragma once\n+\tdocumentation to...\n+\t(Pragmas): ...here.  \n+\t* doc/extend.texi (Pragmas): Note additional pragmas documented\n+\tin the CPP manual.\n+\n 2018-11-13  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/86677"}, {"sha": "25518ee4a05079a148688e3d81d71025f44ac64b", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f", "patch": "@@ -958,10 +958,7 @@ prevent the file from ever being read again, by either @samp{#import} or\n @samp{#import} and @samp{#include} to refer to the same header file.\n \n Another way to prevent a header file from being included more than once\n-is with the @samp{#pragma once} directive.  If @samp{#pragma once} is\n-seen when scanning a header file, that file will never be read again, no\n-matter what.\n-\n+is with the @samp{#pragma once} directive (@pxref{Pragmas}).  \n @samp{#pragma once} does not have the problems that @samp{#import} does,\n but it is not recognized by all preprocessors, so you cannot rely on it\n in a portable program.\n@@ -3550,12 +3547,14 @@ idea of the directory containing the current file.\n @node Pragmas\n @chapter Pragmas\n \n+@cindex pragma directive\n+\n The @samp{#pragma} directive is the method specified by the C standard\n for providing additional information to the compiler, beyond what is\n conveyed in the language itself.  The forms of this directive\n (commonly known as @dfn{pragmas}) specified by C standard are prefixed with \n @code{STDC}.  A C compiler is free to attach any meaning it likes to other \n-pragmas.  All GNU-defined, supported pragmas have been given a\n+pragmas.  Most GNU-defined, supported pragmas have been given a\n @code{GCC} prefix.\n \n @cindex @code{_Pragma}\n@@ -3658,6 +3657,12 @@ contained in the pragma must be a single string literal.  Similarly,\n the @samp{#warning} and @samp{#error} directives, these pragmas can be\n embedded in preprocessor macros using @samp{_Pragma}.\n \n+@item #pragma once\n+If @code{#pragma once} is seen when scanning a header file, that\n+file will never be read again, no matter what.  It is a less-portable\n+alternative to using @samp{#ifndef} to guard the contents of header files\n+against multiple inclusions.\n+\n @end ftable\n \n @node Other Directives"}, {"sha": "5b180e76b214880b725ea3365c8ec6f0dbf88a7f", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=37e5eefb92cdc6a7a320eecb5b81bcb3e526c35f", "patch": "@@ -22064,6 +22064,10 @@ code originally written for other compilers.  Note that in general\n we do not recommend the use of pragmas; @xref{Function Attributes},\n for further explanation.\n \n+The GNU C preprocessor recognizes several pragmas in addition to the\n+compiler pragmas documented here.  Refer to the CPP manual for more\n+information.\n+\n @menu\n * AArch64 Pragmas::\n * ARM Pragmas::"}]}