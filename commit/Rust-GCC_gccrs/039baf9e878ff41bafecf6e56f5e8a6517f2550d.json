{"sha": "039baf9e878ff41bafecf6e56f5e8a6517f2550d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM5YmFmOWU4NzhmZjQxYmFmZWNmNmU1NmY1ZThhNjUxN2YyNTUwZA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2002-12-19T20:47:12Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2002-12-19T20:47:12Z"}, "message": "re PR rtl-optimization/8988 (gcc3.2 and 3.2.1 with -O2 and -mcpu=i386 generates code that segfaults)\n\n\tPR optimization/8988\n\t* loop.c (maybe_eliminate_biv): Kill REG_EQUAL notes mentioning\n\tthe biv when eliminating.\n\nFrom-SVN: r60334", "tree": {"sha": "470043d1de55a51cee45090944a3b15b2bdddf2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/470043d1de55a51cee45090944a3b15b2bdddf2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/039baf9e878ff41bafecf6e56f5e8a6517f2550d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039baf9e878ff41bafecf6e56f5e8a6517f2550d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039baf9e878ff41bafecf6e56f5e8a6517f2550d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039baf9e878ff41bafecf6e56f5e8a6517f2550d/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee8acf894eb94eaf79f1c8a5550c44cb1a76a595", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee8acf894eb94eaf79f1c8a5550c44cb1a76a595", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee8acf894eb94eaf79f1c8a5550c44cb1a76a595"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "5269ecc82e16a1e39f434485e149f7c040c29005", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039baf9e878ff41bafecf6e56f5e8a6517f2550d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039baf9e878ff41bafecf6e56f5e8a6517f2550d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=039baf9e878ff41bafecf6e56f5e8a6517f2550d", "patch": "@@ -1,3 +1,9 @@\n+2002-12-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR optimization/8988\n+\t* loop.c (maybe_eliminate_biv): Kill REG_EQUAL notes mentioning\n+\tthe biv when eliminating.\n+\n 2002-12-19  Devang Patel  <dpatel@apple.com>\n \t* gcc.c (struct default_compiler): Recognizes input file name with\n \t.CPP extension as C++ source files"}, {"sha": "b0ce7cd9d4345c866d5cf59389a4a4c0c22a86d0", "filename": "gcc/loop.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039baf9e878ff41bafecf6e56f5e8a6517f2550d/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039baf9e878ff41bafecf6e56f5e8a6517f2550d/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=039baf9e878ff41bafecf6e56f5e8a6517f2550d", "patch": "@@ -8612,11 +8612,12 @@ maybe_eliminate_biv (loop, bl, eliminate_p, threshold, insn_count)\n       enum rtx_code code = GET_CODE (p);\n       basic_block where_bb = 0;\n       rtx where_insn = threshold >= insn_count ? 0 : p;\n+      rtx note;\n \n       /* If this is a libcall that sets a giv, skip ahead to its end.  */\n       if (GET_RTX_CLASS (code) == 'i')\n \t{\n-\t  rtx note = find_reg_note (p, REG_LIBCALL, NULL_RTX);\n+\t  note = find_reg_note (p, REG_LIBCALL, NULL_RTX);\n \n \t  if (note)\n \t    {\n@@ -8634,6 +8635,8 @@ maybe_eliminate_biv (loop, bl, eliminate_p, threshold, insn_count)\n \t\t}\n \t    }\n \t}\n+\n+      /* Closely examine the insn if the biv is mentioned.  */\n       if ((code == INSN || code == JUMP_INSN || code == CALL_INSN)\n \t  && reg_mentioned_p (reg, PATTERN (p))\n \t  && ! maybe_eliminate_biv_1 (loop, PATTERN (p), p, bl,\n@@ -8645,6 +8648,12 @@ maybe_eliminate_biv (loop, bl, eliminate_p, threshold, insn_count)\n \t\t     bl->regno, INSN_UID (p));\n \t  break;\n \t}\n+\n+      /* If we are eliminating, kill REG_EQUAL notes mentioning the biv.  */\n+      if (eliminate_p\n+\t  && (note = find_reg_note (p, REG_EQUAL, NULL_RTX)) != NULL_RTX\n+\t  && reg_mentioned_p (reg, XEXP (note, 0)))\n+\tremove_note (p, note);\n     }\n \n   if (p == loop->end)"}, {"sha": "0e978c29b7ab4609a3816fc6ee153de1d8419b58", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039baf9e878ff41bafecf6e56f5e8a6517f2550d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039baf9e878ff41bafecf6e56f5e8a6517f2550d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=039baf9e878ff41bafecf6e56f5e8a6517f2550d", "patch": "@@ -1,3 +1,7 @@\n+2002-12-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gcc.c-torture/execute/20021219-1.c: New test.\n+\n 2002-12-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/i386-pic-1.c: New test."}, {"sha": "2e658a5a8859ce7dbb5825580c09b3615877bde7", "filename": "gcc/testsuite/gcc.c-torture/execute/20021219-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/039baf9e878ff41bafecf6e56f5e8a6517f2550d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021219-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/039baf9e878ff41bafecf6e56f5e8a6517f2550d/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021219-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20021219-1.c?ref=039baf9e878ff41bafecf6e56f5e8a6517f2550d", "patch": "@@ -0,0 +1,18 @@\n+/* PR optimization/8988 */\n+/* Contributed by Kevin Easton */\n+\n+void foo(char *p1, char **p2)\n+{}\n+ \n+int main(void)\n+{\n+  char str[] = \"foo { xx }\";\n+  char *ptr = str + 5;\n+\n+  foo(ptr, &ptr);\n+\n+  while (*ptr && (*ptr == 13 || *ptr == 32))\n+    ptr++;\n+\n+  return 0;\n+}"}]}