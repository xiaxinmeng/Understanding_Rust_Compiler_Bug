{"sha": "4b18b3c25be70a76f65629d11d80a64d396a1a7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIxOGIzYzI1YmU3MGE3NmY2NTYyOWQxMWQ4MGE2NGQzOTZhMWE3YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-01-12T15:01:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-01-12T15:01:09Z"}, "message": "re PR lto/47259 (LTO and global register variable)\n\n2011-01-12  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/47259\n\t* lto-streamer-out.c (output_gimple_stmt): Do not wrap\n\tregister variables in a MEM_REF.\n\nFrom-SVN: r168713", "tree": {"sha": "ad5c376095525a5ec7e80f68d14a2edf3f97b33a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad5c376095525a5ec7e80f68d14a2edf3f97b33a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b18b3c25be70a76f65629d11d80a64d396a1a7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b18b3c25be70a76f65629d11d80a64d396a1a7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b18b3c25be70a76f65629d11d80a64d396a1a7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b18b3c25be70a76f65629d11d80a64d396a1a7a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e38461c76dc3c71f494d41b3b78cf42160f41fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e38461c76dc3c71f494d41b3b78cf42160f41fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e38461c76dc3c71f494d41b3b78cf42160f41fd"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "4724df2f7b71276dff89d03b34b24cd9a813b226", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b18b3c25be70a76f65629d11d80a64d396a1a7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b18b3c25be70a76f65629d11d80a64d396a1a7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b18b3c25be70a76f65629d11d80a64d396a1a7a", "patch": "@@ -1,3 +1,9 @@\n+2011-01-12  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/47259\n+\t* lto-streamer-out.c (output_gimple_stmt): Do not wrap\n+\tregister variables in a MEM_REF.\n+\n 2011-01-12  Joseph Myers  <joseph@codesourcery.com>\n \n \t* config.gcc (arm*-*-linux*, bfin*-uclinux*, bfin*-linux-uclibc*,"}, {"sha": "e471d70bbcd7145566b13712260734b1ad42a6b1", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b18b3c25be70a76f65629d11d80a64d396a1a7a/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b18b3c25be70a76f65629d11d80a64d396a1a7a/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=4b18b3c25be70a76f65629d11d80a64d396a1a7a", "patch": "@@ -1769,7 +1769,8 @@ output_gimple_stmt (struct output_block *ob, gimple stmt)\n \t      while (handled_component_p (*basep))\n \t\tbasep = &TREE_OPERAND (*basep, 0);\n \t      if (TREE_CODE (*basep) == VAR_DECL\n-\t\t  && !auto_var_in_fn_p (*basep, current_function_decl))\n+\t\t  && !auto_var_in_fn_p (*basep, current_function_decl)\n+\t\t  && !DECL_REGISTER (*basep))\n \t\t{\n \t\t  bool volatilep = TREE_THIS_VOLATILE (*basep);\n \t\t  *basep = build2 (MEM_REF, TREE_TYPE (*basep),"}]}