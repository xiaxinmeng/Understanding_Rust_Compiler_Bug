{"sha": "2422831252036d2821984173a7a22aac5518ef5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQyMjgzMTI1MjAzNmQyODIxOTg0MTczYTdhMjJhYWM1NTE4ZWY1Yw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T09:22:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-08-01T09:22:39Z"}, "message": "[multiple changes]\n\n2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n\n\t* ug_words, xgnatugn.adb, gcc-interface/Make-lang.in: Remove\n\txgnatugn.adb and ug_words.\n\n2014-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference): Check whether\n\texpansion can be avoid for Machine, Model and Rounding.\n\t(Is_Inline_Floating_Point_Attribute): Return true for Machine\n\t& Model, as well as Rounding if wrapped in a conversion to an\n\tinteger type.\n\t* sem_res.adb (Simplify_Type_Conversion): Deal with Rounding as well.\n\t* gcc-interface/gigi.h (fp_arith_may_widen): Declare.\n\t* gcc-interface/utils.c (fp_arith_may_widen): New global variable.\n\t* gcc-interface/misc.c (enumerate_modes): Compute it.\n\t* gcc-interface/trans.c (FP_ARITH_MAY_WIDEN): Delete.\n\t(lvalue_required_for_attribute_p): Deal with Descriptor_Size,\n\tMachine and Model.\n\t(Attribute_to_gnu) <Attr_Model>: New case.\n\t<Attr_Machine>): Likewise.\n\t(convert_with_check): Test\n\tfp_arith_may_widen variable.\n\n2014-08-01  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.h (GNAT_FOPEN): New definition for Windows.\n\t(GNAT_OPEN): Likewise.\n\t(GNAT_STAT): Likewise.\n\t(GNAT_FSTAT): Likewise.\n\t(GNAT_LSTAT): Likewise.\n\t(GNAT_STRUCT_STAT): Likewise.\n\t* adaint.c (__gnat_stat): Fix computation of file size for\n\tWindows.\n\n2014-08-01  Vincent Celier  <celier@adacore.com>\n\n\t* Makefile.rtl: Minor comment update.\n\n2014-08-01  Vincent Celier  <celier@adacore.com>\n\n\t* Make-generated.in: Remove dependencies for vms-help.\n\nFrom-SVN: r213429", "tree": {"sha": "782a77c0def56618c442f8f456b1bf1a0de3729c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/782a77c0def56618c442f8f456b1bf1a0de3729c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2422831252036d2821984173a7a22aac5518ef5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2422831252036d2821984173a7a22aac5518ef5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2422831252036d2821984173a7a22aac5518ef5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2422831252036d2821984173a7a22aac5518ef5c/comments", "author": null, "committer": null, "parents": [{"sha": "d77cfab2813d0921344f74c219ec3e4a173aa3f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d77cfab2813d0921344f74c219ec3e4a173aa3f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d77cfab2813d0921344f74c219ec3e4a173aa3f1"}], "stats": {"total": 576, "additions": 177, "deletions": 399}, "files": [{"sha": "56d4e4669ed753f889314014b02ec1900155ae5b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -1,3 +1,46 @@\n+2014-08-01  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* ug_words, xgnatugn.adb, gcc-interface/Make-lang.in: Remove\n+\txgnatugn.adb and ug_words.\n+\n+2014-08-01  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference): Check whether\n+\texpansion can be avoid for Machine, Model and Rounding.\n+\t(Is_Inline_Floating_Point_Attribute): Return true for Machine\n+\t& Model, as well as Rounding if wrapped in a conversion to an\n+\tinteger type.\n+\t* sem_res.adb (Simplify_Type_Conversion): Deal with Rounding as well.\n+\t* gcc-interface/gigi.h (fp_arith_may_widen): Declare.\n+\t* gcc-interface/utils.c (fp_arith_may_widen): New global variable.\n+\t* gcc-interface/misc.c (enumerate_modes): Compute it.\n+\t* gcc-interface/trans.c (FP_ARITH_MAY_WIDEN): Delete.\n+\t(lvalue_required_for_attribute_p): Deal with Descriptor_Size,\n+\tMachine and Model.\n+\t(Attribute_to_gnu) <Attr_Model>: New case.\n+\t<Attr_Machine>): Likewise.\n+\t(convert_with_check): Test\n+\tfp_arith_may_widen variable.\n+\n+2014-08-01  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.h (GNAT_FOPEN): New definition for Windows.\n+\t(GNAT_OPEN): Likewise.\n+\t(GNAT_STAT): Likewise.\n+\t(GNAT_FSTAT): Likewise.\n+\t(GNAT_LSTAT): Likewise.\n+\t(GNAT_STRUCT_STAT): Likewise.\n+\t* adaint.c (__gnat_stat): Fix computation of file size for\n+\tWindows.\n+\n+2014-08-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* Makefile.rtl: Minor comment update.\n+\n+2014-08-01  Vincent Celier  <celier@adacore.com>\n+\n+\t* Make-generated.in: Remove dependencies for vms-help.\n+\n 2014-08-01  Gary Dismukes  <dismukes@adacore.com>\n \n \t* makeutl.ads, opt.ads: Minor grammar fixes."}, {"sha": "757eaa85b9045b603d773018b6703afde813a3b0", "filename": "gcc/ada/Make-generated.in", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2FMake-generated.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2FMake-generated.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMake-generated.in?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -95,11 +95,3 @@ $(ADA_GEN_SUBDIR)/stamp-sdefault : $(srcdir)/version.c Makefile\n \t$(ECHO) \"end Sdefault;\" >> tmp-sdefault.adb\n \t$(MOVE_IF_CHANGE) tmp-sdefault.adb $(ADA_GEN_SUBDIR)/sdefault.adb\n \ttouch $(ADA_GEN_SUBDIR)/stamp-sdefault\n-\n-$(ADA_GEN_SUBDIR)/gnat.hlp :  $(ADA_GEN_SUBDIR)/vms_help.adb $(ADA_GEN_SUBDIR)/vms_cmds.ads $(ADA_GEN_SUBDIR)/gnat.help_in $(ADA_GEN_SUBDIR)/vms_data.ads\n-\t-$(MKDIR) $(ADA_GEN_SUBDIR)/bldtools/gnat_hlp\n-\t$(RM) $(addprefix $(ADA_GEN_SUBDIR)/bldtools/gnat_hlp/,$(notdir $^))\n-\t$(CP) $^ $(ADA_GEN_SUBDIR)/bldtools/gnat_hlp\n-\t(cd $(ADA_GEN_SUBDIR)/bldtools/gnat_hlp; \\\n-\t  gnatmake -q vms_help; \\\n-\t  ./vms_help$(build_exeext) gnat.help_in vms_data.ads ../../gnat.hlp)"}, {"sha": "306be0e21488ae1c061ea57b2b05d2630cb07abd", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -18,7 +18,7 @@\n #<http://www.gnu.org/licenses/>.\n \n # This makefile fragment is included in the ada Makefile (both Unix\n-# and NT and VMS versions).\n+# and Windows).\n \n # Its purpose is to allow the separate maintainence of the list of\n # GNATRTL objects, which frequently changes."}, {"sha": "17aedae1f791fc6bc90cffe857024b90d1432301", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -1946,7 +1946,8 @@ __gnat_stat (char *name, GNAT_STRUCT_STAT *statbuf)\n   f2t (&fad.ftLastWriteTime, &statbuf->st_mtime);\n   f2t (&fad.ftLastAccessTime, &statbuf->st_atime);\n \n-  statbuf->st_size = (off_t)fad.nFileSizeLow;\n+  statbuf->st_size =\n+    (__int64)fad.nFileSizeLow | (__int64)fad.nFileSizeHigh << 32;\n \n   /* We do not have the S_IEXEC attribute, but this is not used on GNAT.  */\n   statbuf->st_mode = S_IREAD;"}, {"sha": "1605989e39985d43ff4a8f6640c5b49445dd2d5c", "filename": "gcc/ada/adaint.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fadaint.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fadaint.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.h?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -58,6 +58,15 @@ extern \"C\" {\n #define GNAT_FSTAT fstat64\n #define GNAT_LSTAT lstat64\n #define GNAT_STRUCT_STAT struct stat64\n+\n+#elif defined(_WIN32)\n+#define GNAT_FOPEN fopen64\n+#define GNAT_OPEN open\n+#define GNAT_STAT stat64\n+#define GNAT_FSTAT fstat64\n+#define GNAT_LSTAT lstat\n+#define GNAT_STRUCT_STAT struct stat64\n+\n #else\n #define GNAT_FOPEN fopen\n #define GNAT_OPEN open"}, {"sha": "fb715ea6d210782d5c937519ffd398e31de09d96", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -4068,10 +4068,13 @@ package body Exp_Attr is\n       -------------\n \n       --  Transforms 'Machine into a call to the floating-point attribute\n-      --  function Machine in Fat_xxx (where xxx is the root type)\n+      --  function Machine in Fat_xxx (where xxx is the root type).\n+      --  Expansion is avoided for cases the back end can handle directly.\n \n       when Attribute_Machine =>\n-         Expand_Fpt_Attribute_R (N);\n+         if not Is_Inline_Floating_Point_Attribute (N) then\n+            Expand_Fpt_Attribute_R (N);\n+         end if;\n \n       ----------------------\n       -- Machine_Rounding --\n@@ -4335,10 +4338,13 @@ package body Exp_Attr is\n       -----------\n \n       --  Transforms 'Model into a call to the floating-point attribute\n-      --  function Model in Fat_xxx (where xxx is the root type)\n+      --  function Model in Fat_xxx (where xxx is the root type).\n+      --  Expansion is avoided for cases the back end can handle directly.\n \n       when Attribute_Model =>\n-         Expand_Fpt_Attribute_R (N);\n+         if not Is_Inline_Floating_Point_Attribute (N) then\n+            Expand_Fpt_Attribute_R (N);\n+         end if;\n \n       -----------------\n       -- Object_Size --\n@@ -5411,9 +5417,12 @@ package body Exp_Attr is\n \n       --  Transforms 'Rounding into a call to the floating-point attribute\n       --  function Rounding in Fat_xxx (where xxx is the root type)\n+      --  Expansion is avoided for cases the back end can handle directly.\n \n       when Attribute_Rounding =>\n-         Expand_Fpt_Attribute_R (N);\n+         if not Is_Inline_Floating_Point_Attribute (N) then\n+            Expand_Fpt_Attribute_R (N);\n+         end if;\n \n       -------------\n       -- Scaling --\n@@ -7946,7 +7955,10 @@ package body Exp_Attr is\n       Id : constant Attribute_Id := Get_Attribute_Id (Attribute_Name (N));\n \n    begin\n-      if Nkind (Parent (N)) /= N_Type_Conversion\n+      if Id = Attribute_Machine or else Id = Attribute_Model then\n+         return True;\n+\n+      elsif Nkind (Parent (N)) /= N_Type_Conversion\n         or else not Is_Integer_Type (Etype (Parent (N)))\n       then\n          return False;\n@@ -7955,7 +7967,7 @@ package body Exp_Attr is\n       --  Should also support 'Machine_Rounding and 'Unbiased_Rounding, but\n       --  required back end support has not been implemented yet ???\n \n-      return Id = Attribute_Truncation;\n+      return Id = Attribute_Rounding or else Id = Attribute_Truncation;\n    end Is_Inline_Floating_Point_Attribute;\n \n end Exp_Attr;"}, {"sha": "b2c6498f672db7c273d111b98a7acc256c9d5800", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -654,26 +654,7 @@ ada.tags: force\n \n # Generate documentation.\n \n-ada/doctools/xgnatugn$(build_exeext): ada/xgnatugn.adb\n-\t-$(MKDIR) ada/doctools\n-\t$(CP) $^ ada/doctools\n-\tcd ada/doctools && gnatmake -q xgnatugn\n-\n-# Note that doc/gnat_ugn.texi and doc/projects.texi do not depend on\n-# xgnatugn being built so we can distribute a pregenerated doc/gnat_ugn.info\n-\n-doc/gnat_ugn.texi: $(srcdir)/ada/gnat_ugn.texi $(srcdir)/ada/ug_words \\\n-   doc/projects.texi $(gcc_docdir)/include/gcc-common.texi gcc-vers.texi\n-\t$(MAKE) ada/doctools/xgnatugn$(build_exeext)\n-\tada/doctools/xgnatugn unw $(srcdir)/ada/gnat_ugn.texi \\\n-\t   $(srcdir)/ada/ug_words doc/gnat_ugn.texi\n-\n-doc/projects.texi: $(srcdir)/ada/projects.texi\n-\t$(MAKE) ada/doctools/xgnatugn$(build_exeext)\n-\tada/doctools/xgnatugn unw $(srcdir)/ada/projects.texi \\\n-\t   $(srcdir)/ada/ug_words doc/projects.texi\n-\n-doc/gnat_ugn.info: doc/gnat_ugn.texi\t\t\t\\\n+doc/gnat_ugn.info: ada/gnat_ugn.texi ada/projects.texi \\\n    $(gcc_docdir)/include/fdl.texi $(gcc_docdir)/include/gcc-common.texi\t\\\n    gcc-vers.texi\n \tif [ x$(BUILD_INFO) = xinfo ]; then \\\n@@ -698,8 +679,7 @@ doc/gnat-style.info: ada/gnat-style.texi $(gcc_docdir)/include/fdl.texi\t\\\n             -I$(srcdir)/ada -o $@ $<; \\\n \telse true; fi\n \n-ADA_INFOFILES = doc/gnat_ugn.info doc/gnat_ugn.texi \\\n-                doc/gnat_rm.info doc/gnat-style.info\n+ADA_INFOFILES = doc/gnat_ugn.info doc/gnat_rm.info doc/gnat-style.info\n \n ada.info: $(ADA_INFOFILES)\n \n@@ -732,7 +712,8 @@ ada.html:\n \n ada.install-html:\n \n-doc/gnat_ugn.dvi: doc/gnat_ugn.texi $(gcc_docdir)/include/fdl.texi\t\\\n+doc/gnat_ugn.dvi: ada/gnat_ugn.texi ada/projects.texi \\\n+\t$(gcc_docdir)/include/fdl.texi\t\\\n \t$(gcc_docdir)/include/gcc-common.texi gcc-vers.texi\n \t$(TEXI2DVI) -c -I $(abs_docdir)/include -o $@ $<\n \n@@ -743,7 +724,8 @@ doc/gnat_rm.dvi: ada/gnat_rm.texi $(gcc_docdir)/include/fdl.texi\t\\\n doc/gnat-style.dvi: ada/gnat-style.texi $(gcc_docdir)/include/fdl.texi\n \t$(TEXI2DVI) -c -I $(abs_docdir)/include -o $@ $<\n \n-doc/gnat_ugn.pdf: doc/gnat_ugn.texi $(gcc_docdir)/include/fdl.texi\t\\\n+doc/gnat_ugn.pdf: ada/gnat_ugn.texi ada/projects.texi \\\n+\t$(gcc_docdir)/include/fdl.texi\t\\\n \t$(gcc_docdir)/include/gcc-common.texi gcc-vers.texi\n \t$(TEXI2PDF) -c -I $(abs_docdir)/include -o $@ $<\n "}, {"sha": "ff238636ff33d57a97f72c962a58a0ff684fb8b9", "filename": "gcc/ada/gcc-interface/gigi.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2Fgigi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fgigi.h?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -335,6 +335,9 @@ extern int double_float_alignment;\n    types whose size is greater or equal to 64 bits, or 0 if this alignment\n    is not specifically capped.  */\n extern int double_scalar_alignment;\n+\n+/* True if floating-point arithmetics may use wider intermediate results.  */\n+extern bool fp_arith_may_widen;\n \f\n /* Data structures used to represent attributes.  */\n "}, {"sha": "9a07de0ad09ff8ad16759935f40fe766966c404d", "filename": "gcc/ada/gcc-interface/misc.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fmisc.c?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -717,6 +717,9 @@ enumerate_modes (void (*f) (const char *, int, int, int, int, int, int, int))\n     = { \"float\", \"double\", \"long double\" };\n   int iloop;\n \n+  /* We are going to compute it below.  */\n+  fp_arith_may_widen = false;\n+\n   for (iloop = 0; iloop < NUM_MACHINE_MODES; iloop++)\n     {\n       enum machine_mode i = (enum machine_mode) iloop;\n@@ -766,6 +769,15 @@ enumerate_modes (void (*f) (const char *, int, int, int, int, int, int, int))\n \t  if (!fmt)\n \t    continue;\n \n+\t  /* Be conservative and consider that floating-point arithmetics may\n+\t     use wider intermediate results as soon as there is an extended\n+\t     Motorola or Intel mode supported by the machine.  */\n+\t  if (fmt == &ieee_extended_motorola_format\n+\t      || fmt == &ieee_extended_intel_96_format\n+\t      || fmt == &ieee_extended_intel_96_round_53_format\n+\t      || fmt == &ieee_extended_intel_128_format)\n+\t    fp_arith_may_widen = true;\n+\n \t  if (fmt->b == 2)\n \t    digs = (fmt->p - 1) * 1233 / 4096; /* scale by log (2) */\n "}, {"sha": "1c26c3590c2aecf6bb9d2b16164b310d5f962955", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 56, "deletions": 16, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -76,18 +76,6 @@ static location_t block_end_locus_sink;\n #define BLOCK_SOURCE_END_LOCATION(BLOCK) block_end_locus_sink\n #endif\n \n-/* For efficient float-to-int rounding, it is necessary to know whether\n-   floating-point arithmetic may use wider intermediate results.  When\n-   FP_ARITH_MAY_WIDEN is not defined, be conservative and only assume\n-   that arithmetic does not widen if double precision is emulated.  */\n-#ifndef FP_ARITH_MAY_WIDEN\n-#if defined(HAVE_extendsfdf2)\n-#define FP_ARITH_MAY_WIDEN HAVE_extendsfdf2\n-#else\n-#define FP_ARITH_MAY_WIDEN 0\n-#endif\n-#endif\n-\n /* Pointers to front-end tables accessed through macros.  */\n struct Node *Nodes_Ptr;\n struct Flags *Flags_Ptr;\n@@ -804,12 +792,15 @@ lvalue_required_for_attribute_p (Node_Id gnat_node)\n     case Attr_Object_Size:\n     case Attr_Value_Size:\n     case Attr_Component_Size:\n+    case Attr_Descriptor_Size:\n     case Attr_Max_Size_In_Storage_Elements:\n     case Attr_Min:\n     case Attr_Max:\n     case Attr_Null_Parameter:\n     case Attr_Passed_By_Reference:\n     case Attr_Mechanism_Code:\n+    case Attr_Machine:\n+    case Attr_Model:\n       return 0;\n \n     case Attr_Address:\n@@ -2334,6 +2325,54 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n       }\n       break;\n \n+    case Attr_Model:\n+      /* We treat Model as identical to Machine.  This is true for at least\n+\t IEEE and some other nice floating-point systems.  */\n+\n+      /* ... fall through ... */\n+\n+    case Attr_Machine:\n+      /* The trick is to force the compiler to store the result in memory so\n+\t that we do not have extra precision used.  But do this only when this\n+\t is necessary, i.e. for a type that is not the longest floating-point\n+\t type and if FP_ARITH_MAY_WIDEN is true.  */\n+      prefix_unused = true;\n+      gnu_expr = gnat_to_gnu (First (Expressions (gnat_node)));\n+      gnu_result_type = get_unpadded_type (Etype (gnat_node));\n+      gnu_result = convert (gnu_result_type, gnu_expr);\n+\n+      if (gnu_result_type != longest_float_type_node && fp_arith_may_widen)\n+\t{\n+\t  tree rec_type = make_node (RECORD_TYPE);\n+\t  tree field\n+\t    = create_field_decl (get_identifier (\"OBJ\"), gnu_result_type,\n+\t\t\t\t rec_type, NULL_TREE, NULL_TREE, 0, 0);\n+\t  tree rec_val, asm_expr;\n+\n+\t  finish_record_type (rec_type, field, 0, false);\n+\n+\t  rec_val = build_constructor_single (rec_type, field, gnu_result);\n+\t  rec_val = save_expr (rec_val);\n+\n+\t  asm_expr\n+\t    = build5 (ASM_EXPR, void_type_node,\n+\t\t      build_string (0, \"\"),\n+\t\t      tree_cons (build_tree_list (NULL_TREE,\n+\t\t\t\t\t\t  build_string (2, \"=m\")),\n+\t\t\t\t rec_val, NULL_TREE),\n+\t\t      tree_cons (build_tree_list (NULL_TREE,\n+\t\t\t\t\t\t  build_string (1, \"m\")),\n+\t\t\t\t rec_val, NULL_TREE),\n+\t\t      NULL_TREE, NULL_TREE);\n+\t  ASM_VOLATILE_P (asm_expr) = 1;\n+\n+\t  gnu_result\n+\t    = build_compound_expr (gnu_result_type, asm_expr,\n+\t\t\t\t   build_component_ref (rec_val, NULL_TREE,\n+\t\t\t\t\t\t\tfield, false));\n+\t}\n+      break;\n+\n     default:\n       /* This abort means that we have an unimplemented attribute.  */\n       gcc_unreachable ();\n@@ -2347,7 +2386,7 @@ Attribute_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p, int attribute)\n       && TREE_SIDE_EFFECTS (gnu_prefix)\n       && !Is_Entity_Name (gnat_prefix))\n     gnu_result\n-      = build_compound_expr  (TREE_TYPE (gnu_result), gnu_prefix, gnu_result);\n+      = build_compound_expr (TREE_TYPE (gnu_result), gnu_prefix, gnu_result);\n \n   *gnu_result_type_p = gnu_result_type;\n   return gnu_result;\n@@ -8675,7 +8714,8 @@ convert_with_check (Entity_Id gnat_type, tree gnu_expr, bool overflowp,\n \n   /* Now convert to the result base type.  If this is a non-truncating\n      float-to-integer conversion, round.  */\n-  if (INTEGRAL_TYPE_P (gnu_base_type) && FLOAT_TYPE_P (gnu_in_basetype)\n+  if (INTEGRAL_TYPE_P (gnu_base_type)\n+      && FLOAT_TYPE_P (gnu_in_basetype)\n       && !truncatep)\n     {\n       REAL_VALUE_TYPE half_minus_pred_half, pred_half;\n@@ -8684,11 +8724,11 @@ convert_with_check (Entity_Id gnat_type, tree gnu_expr, bool overflowp,\n       const struct real_format *fmt;\n \n       /* The following calculations depend on proper rounding to even\n-\t of each arithmetic operation. In order to prevent excess\n+\t of each arithmetic operation.  In order to prevent excess\n \t precision from spoiling this property, use the widest hardware\n \t floating-point type if FP_ARITH_MAY_WIDEN is true.  */\n       calc_type\n-\t= FP_ARITH_MAY_WIDEN ? longest_float_type_node : gnu_in_basetype;\n+\t= fp_arith_may_widen ? longest_float_type_node : gnu_in_basetype;\n \n       /* FIXME: Should not have padding in the first place.  */\n       if (TYPE_IS_PADDING_P (calc_type))"}, {"sha": "b26d217f553cace43e4708f4f7474692e7a10e39", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -76,6 +76,9 @@ int double_float_alignment;\n    is not specifically capped.  */\n int double_scalar_alignment;\n \n+/* True if floating-point arithmetics may use wider intermediate results.  */\n+bool fp_arith_may_widen = true;\n+\n /* Tree nodes for the various types and decls we create.  */\n tree gnat_std_decls[(int) ADT_LAST];\n "}, {"sha": "d7097e2ddcecbe3d9bd3056a6c0f44df665a164e", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 23, "deletions": 16, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2422831252036d2821984173a7a22aac5518ef5c/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=2422831252036d2821984173a7a22aac5518ef5c", "patch": "@@ -259,7 +259,7 @@ package body Sem_Res is\n    procedure Simplify_Type_Conversion (N : Node_Id);\n    --  Called after N has been resolved and evaluated, but before range checks\n    --  have been applied. Currently simplifies a combination of floating-point\n-   --  to integer conversion and Truncation attribute.\n+   --  to integer conversion and Rounding or Truncation attribute.\n \n    function Unique_Fixed_Point_Type (N : Node_Id) return Entity_Id;\n    --  A universal_fixed expression in an universal context is unambiguous if\n@@ -11082,29 +11082,36 @@ package body Sem_Res is\n             Opnd_Typ   : constant Entity_Id := Etype (Operand);\n \n          begin\n-            if Is_Floating_Point_Type (Opnd_Typ)\n-              and then\n-                (Is_Integer_Type (Target_Typ)\n-                   or else (Is_Fixed_Point_Type (Target_Typ)\n-                              and then Conversion_OK (N)))\n-              and then Nkind (Operand) = N_Attribute_Reference\n-              and then Attribute_Name (Operand) = Name_Truncation\n+            --  Special processing if the conversion is the expression of a\n+            --  Rounding or Truncation attribute reference. In this case we\n+            --  replace:\n \n-            --  Special processing required if the conversion is the expression\n-            --  of a Truncation attribute reference. In this case we replace:\n-\n-            --     ityp (ftyp'Truncation (x))\n+            --     ityp (ftyp'Rounding (x)) or ityp (ftyp'Truncation (x))\n \n             --  by\n \n             --     ityp (x)\n \n-            --  with the Float_Truncate flag set, which is more efficient.\n+            --  with the Float_Truncate flag set to False or True respectively,\n+            --  which is more efficient.\n \n+            if Is_Floating_Point_Type (Opnd_Typ)\n+              and then\n+                (Is_Integer_Type (Target_Typ)\n+                   or else (Is_Fixed_Point_Type (Target_Typ)\n+                              and then Conversion_OK (N)))\n+              and then Nkind (Operand) = N_Attribute_Reference\n+              and then (Attribute_Name (Operand) = Name_Rounding\n+                          or else Attribute_Name (Operand) = Name_Truncation)\n             then\n-               Rewrite (Operand,\n-                 Relocate_Node (First (Expressions (Operand))));\n-               Set_Float_Truncate (N, True);\n+               declare\n+                  Truncate : constant Boolean :=\n+                    Attribute_Name (Operand) = Name_Truncation;\n+               begin\n+                  Rewrite (Operand,\n+                    Relocate_Node (First (Expressions (Operand))));\n+                  Set_Float_Truncate (N, Truncate);\n+               end;\n             end if;\n          end;\n       end if;"}, {"sha": "48a36b791c55c74ef1e38ef24b51d6a66b4dfc03", "filename": "gcc/ada/ug_words", "status": "removed", "additions": 0, "deletions": 271, "changes": 271, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d77cfab2813d0921344f74c219ec3e4a173aa3f1/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d77cfab2813d0921344f74c219ec3e4a173aa3f1/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=d77cfab2813d0921344f74c219ec3e4a173aa3f1", "patch": "@@ -1,271 +0,0 @@\n-b_              ^ B_\n-b~              ^ B__\n-cc1             ^ CC1\n-Cc1             ^ CC1\n-emacs           ^ EMACS\n-Emacs           ^ EMACS\n-gdb             ^ GDB\n-Gdb             ^ GDB\n-gnat1           ^ GNAT1\n-Gnat1           ^ GNAT1\n-gnatbind        ^ GNAT BIND\n-Gnatbind        ^ GNAT BIND\n-gnatcheck       ^ GNAT CHECK\n-Gnatcheck       ^ GNAT CHECK\n-gnatchop        ^ GNAT CHOP\n-Gnatchop        ^ GNAT CHOP\n-gnatclean       ^ GNAT CLEAN\n-Gnatclean       ^ GNAT CLEAN\n-gnatelim        ^ GNAT ELIM\n-Gnatelim        ^ GNAT ELIM\n-gnatf           ^ GNAT XREF\n-Gnatf           ^ GNAT XREF\n-gnatfind        ^ GNAT FIND\n-Gnatfind        ^ GNAT FIND\n-gnatkr          ^ GNAT KRUNCH\n-Gnatkr          ^ GNAT KRUNCH\n-gnatlink        ^ GNAT LINK\n-Gnatlink        ^ GNAT LINK\n-gnatls          ^ GNAT LIST\n-Gnatls          ^ GNAT LIST\n-gnatmake        ^ GNAT MAKE\n-Gnatmake        ^ GNAT MAKE\n-gnatmetric      ^ GNAT METRIC\n-Gnatmetric      ^ GNAT METRIC\n-gnatname        ^ GNAT NAME\n-Gnatname        ^ GNAT NAME\n-gnatpp          ^ GNAT PRETTY\n-Gnatpp          ^ GNAT PRETTY\n-gnatprep        ^ GNAT PREPROCESS\n-Gnatprep        ^ GNAT PREPROCESS\n-gnatstub        ^ GNAT STUB\n-Gnatstub        ^ GNAT STUB\n-gnatxref        ^ GNAT XREF\n-Gnatxref        ^ GNAT XREF\n-gcc             ^ GNAT COMPILE\n-gcc -c          ^ GNAT COMPILE\n--fno-inline     ^ /INLINE=SUPPRESS\n--fstack-check   ^ /CHECKS=STACK\n--fno-strict-aliasing ^ /OPTIMIZE=NO_STRICT_ALIASING\n--gnata          ^ /CHECKS=ASSERTIONS\n--gnatA          ^ /NO_GNAT_ADC\n--gnatb          ^ /REPORT_ERRORS=BRIEF\n--gnatB          ^ /ASSUME_VALID\n--gnatc          ^ /NOLOAD\n--gnatct         ^ /NOLOAD /TREE_OUTPUT\n--gnatdc         ^ /TRACE_UNITS\n--gnatdO         ^ /REPORT_ERRORS=IMMEDIATE\n--gnatC          ^ /COMPRESS_NAMES\n--gnatDG         ^ /XDEBUG /EXPAND_SOURCEA\n--gnatD          ^ /XDEBUG\n--gnateA         ^ /ALIASING_CHECK\n--gnatec         ^ /CONFIGURATION_PRAGMAS_FILE\n--gnated         ^ /DISABLE_ATOMIC_SYNCHRONIZATION\n--gnateD         ^ /SYMBOL_PREPROCESSING\n--gnateE         ^ /EXTRA_EXCEPTION_INFORMATION\n--gnatef         ^ /FULL_PATH_IN_BRIEF_MESSAGES\n--gnateF         ^ /FLOAT_OVERFLOW_CHECK\n--gnateG         ^ /GENERATE_PROCESSED_SOURCE\n--gnatei         ^ /MAX_INSTANTIATIONS=\n--gnateI         ^ /MULTI_UNIT_INDEX=\n--gnatel         ^ /ELABORATION_INFO_MESSAGES\n--gnateL         ^ /NOELABORATION_INFO_MESSAGES\n--gnatem         ^ /MAPPING_FILE\n--gnatep         ^ /DATA_PREPROCESSING\n--gnateP         ^ /CATEGORIZATION_WARNINGS\n--gnateS         ^ /SCO_OUTPUT\n--gnatet         ^ /WRITE_TARGET_DEPENDENT_INFO\n--gnateT         ^ /READ_TARGET_DEPENDENT_INFO\n--gnateu         ^ /IGNORE_UNRECOGNIZED\n--gnateV         ^ /PARAMETER_VALIDITY_CHECK\n--gnateY         ^ /IGNORE_STYLE_CHECKS_PRAGMAS\n--gnatE          ^ /CHECKS=ELABORATION\n--gnatf          ^ /REPORT_ERRORS=FULL\n--gnatF          ^ /UPPERCASE_EXTERNALS\n--gnatg          ^ /STYLE_CHECKS=GNAT\n--gnatG          ^ /EXPAND_SOURCE\n--gnatk          ^ /FILE_NAME_MAX_LENGTH\n--gnatl          ^ /LIST\n--gnatL          ^ /LONGJMP_SETJMP\n--gnatj          ^ /JUSTIFY_MESSAGES\n--gnatj0         ^ /NO_JUSTIFY_MESSAGES\n--gnatjnn        ^ /JUSTIFY_MESSAGES=nn\n--gnatL          ^ /INTERSPERSE_SOURCE\n--gnatm          ^ /ERROR_LIMIT\n--gnatm2         ^ /ERROR_LIMIT=2\n--gnatn          ^ /INLINE=PRAGMA\n--gnatn1         ^ /INLINE=PRAGMA_LEVEL_1\n--gnatn2         ^ /INLINE=PRAGMA_LEVEL_2\n--gnatN          ^ /INLINE=FULL\n--gnato          ^ /CHECKS=OVERFLOW\n--gnato?         ^ /OVERFLOW_CHECKS=?\n--gnato??        ^ /OVERFLOW_CHECKS=??\n--gnatp          ^ /CHECKS=SUPPRESS_ALL\n--gnat-p         ^ /CHECKS=UNSUPPRESS_ALL\n--gnatP          ^ /POLLING\n--gnatR          ^ /REPRESENTATION_INFO\n--gnatR0         ^ /REPRESENTATION_INFO=NONE\n--gnatR1         ^ /REPRESENTATION_INFO=ARRAYS\n--gnatR2         ^ /REPRESENTATION_INFO=OBJECTS\n--gnatR3         ^ /REPRESENTATION_INFO=SYMBOLIC\n--gnatq          ^ /TRY_SEMANTICS\n--gnatQ          ^ /FORCE_ALI\n--gnatr          ^ /TREAT_RESTRICTIONS_AS_WARNINGS\n--gnats          ^ /SYNTAX_ONLY\n--gnatS          ^ /PRINT_STANDARD\n--gnatt          ^ /TREE_OUTPUT\n--gnatu          ^ /UNITS_LIST\n--gnatU          ^ /UNIQUE_ERROR_TAG\n--gnatv          ^ /REPORT_ERRORS=VERBOSE\n--gnatV          ^ /VALIDITY_CHECKING\n--gnatVa         ^ /VALIDITY_CHECKING=ALL\n--gnatVc         ^ /VALIDITY_CHECKING=COPIES\n--gnatVd         ^ /VALIDITY_CHECKING=DEFAULT\n--gnatVE         ^ /VALIDITY_CHECKING=NOCOMPONENTS\n--gnatVe         ^ /VALIDITY_CHECKING=COMPONENTS\n--gnatVD         ^ /VALIDITY_CHECKING=NODEFAULT\n--gnatVf         ^ /VALIDITY_CHECKING=FLOATS\n--gnatVi         ^ /VALIDITY_CHECKING=IN_PARAMS\n--gnatVm         ^ /VALIDITY_CHECKING=MOD_PARAMS\n--gnatVn         ^ /VALIDITY_CHECKING=NONE\n--gnatVo         ^ /VALIDITY_CHECKING=OPERANDS\n--gnatVp         ^ /VALIDITY_CHECKING=PARAMETERS\n--gnatVr         ^ /VALIDITY_CHECKING=RETURNS\n--gnatVs         ^ /VALIDITY_CHECKING=SUBSCRIPTS\n--gnatVt         ^ /VALIDITY_CHECKING=TESTS\n--gnatw          ^ /WARNINGS\n--gnatwa         ^ /WARNINGS=OPTIONAL\n--gnatwA         ^ /WARNINGS=NOOPTIONAL\n--gnatw.a        ^ /WARNINGS=FAILING_ASSERTIONS\n--gnatw.A        ^ /WARNINGS=NO_FAILING_ASSERTIONS\n--gnatwb         ^ /WARNINGS=BAD_FIXED_VALUES\n--gnatwB         ^ /WARNINGS=NO_BAD_FIXED_VALUES\n--gnatw.b        ^ /WARNINGS=BIASED_REPRESENTATION\n--gnatw.B        ^ /WARNINGS=NO_BIASED_REPRESENTATION\n--gnatwc         ^ /WARNINGS=CONDITIONALS\n--gnatwC         ^ /WARNINGS=NOCONDITIONALS\n--gnatw.c        ^ /WARNINGS=MISSING_COMPONENT_CLAUSES\n--gnatw.C        ^ /WARNINGS=NOMISSING_COMPONENT_CLAUSES\n--gnatw.d        ^ /WARNINGS=TAG_WARNINGS\n--gnatw.D        ^ /WARNINGS=NOTAG_WARNINGS\n--gnatwd         ^ /WARNINGS=IMPLICIT_DEREFERENCE\n--gnatwD         ^ /WARNINGS=NOIMPLICIT_DEREFERENCE\n--gnatwe         ^ /WARNINGS=ERRORS\n--gnatw.e        ^ /WARNINGS=EVERY\n--gnatwf         ^ /WARNINGS=UNREFERENCED_FORMALS\n--gnatwF         ^ /WARNINGS=NOUNREFERENCED_FORMALS\n--gnatwg         ^ /WARNINGS=UNRECOGNIZED_PRAGMAS\n--gnatwG         ^ /WARNINGS=NOUNRECOGNIZED_PRAGMAS\n--gnatwh         ^ /WARNINGS=HIDING\n--gnatwH         ^ /WARNINGS=NOHIDING\n--gnatw.h        ^ /WARNINGS=AVOIDGAPS\n--gnatw.H        ^ /WARNINGS=NOAVOIDGAPS\n--gnatwi         ^ /WARNINGS=IMPLEMENTATION\n--gnatwI         ^ /WARNINGS=NOIMPLEMENTATION\n--gnatw.i        ^ /WARNINGS=OVERLAPPING_ACTUALS\n--gnatw.I        ^ /WARNINGS=NOOVERLAPPING_ACTUALS\n--gnatwj         ^ /WARNINGS=OBSOLESCENT\n--gnatwJ         ^ /WARNINGS=NOOBSOLESCENT\n--gnatwk         ^ /WARNINGS=CONSTANT_VARIABLES\n--gnatwK         ^ /WARNINGS=NOCONSTANT_VARIABLES\n--gnatw.k        ^ /WARNINGS=STANDARD_REDEFINITION\n--gnatw.K        ^ /WARNINGS=NOSTANDARD_REDEFINITION\n--gnatwl         ^ /WARNINGS=ELABORATION\n--gnatwL         ^ /WARNINGS=NOELABORATION\n--gnatwl         ^ /WARNINGS=INHERITED_ASPECTS\n--gnatwL         ^ /WARNINGS=NOINHERITED_ASPECTS\n--gnatwm         ^ /WARNINGS=MODIFIED_UNREF\n--gnatwM         ^ /WARNINGS=NOMODIFIED_UNREF\n--gnatw.m        ^ /WARNINGS=SUSPICIOUS_MODULUES\n--gnatw.M        ^ /WARNINGS=NOSUSPICIOUS_MODULUES\n--gnatwn         ^ /WARNINGS=NORMAL\n--gnatw.n        ^ /WARNINGS=ATOMIC_SYNCHRONIZATION\n--gnatw.N        ^ /WARNINGS=NOATOMIC_SYNCHRONIZATION\n--gnatwo         ^ /WARNINGS=OVERLAYS\n--gnatwO         ^ /WARNINGS=NOOVERLAYS\n--gnatw.o        ^ /WARNINGS=OUT_PARAM_UNREF\n--gnatw.O        ^ /WARNINGS=NOOUT_PARAM_UNREF\n--gnatwp         ^ /WARNINGS=INEFFECTIVE_INLINE\n--gnatwP         ^ /WARNINGS=NOINEFFECTIVE_INLINE\n--gnatw.p        ^ /WARNINGS=PARAMETER_ORDER\n--gnatw.P        ^ /WARNINGS=NO_PARAMETER_ORDER\n--gnatw.h        ^ /WARNINGS=OVERRIDING_SIZE\n--gnatw.H        ^ /WARNINGS=NOOVERRIDING_SIZE\n--gnatw.k        ^ /WARNINGS=STANDARD_REDEFINITION\n--gnatw.K        ^ /WARNINGS=NOSTANDARD_REDEFINITION\n--gnatwq         ^ /WARNINGS=MISSING_PARENS\n--gnatwQ         ^ /WARNINGS=NOMISSING_PARENS\n--gnatwr         ^ /WARNINGS=REDUNDANT\n--gnatwR         ^ /WARNINGS=NOREDUNDANT\n--gnatws         ^ /WARNINGS=SUPPRESS\n--gnatw.s        ^ /WARNINGS=OVERRIDING_SIZE\n--gnatw.S        ^ /WARNINGS=NOOVERRIDING_SIZE\n--gnatwt         ^ /WARNINGS=DELETED_CODE\n--gnatwT         ^ /WARNINGS=NODELETED_CODE\n--gnatw.t        ^ /WARNINGS=SUSPICIOUS_CONTRACT\n--gnatw.T        ^ /WARNINGS=NOSUSPICIOUS_CONTRACT\n--gnatwu         ^ /WARNINGS=UNUSED\n--gnatwU         ^ /WARNINGS=NOUNUSED\n--gnatw.u        ^ /WARNINGS=UNORDERED_ENUMERATIONS\n--gnatw.U        ^ /WARNINGS=NOUNORDERED_ENUMERATIONS\n--gnatwv         ^ /WARNINGS=VARIABLES_UNINITIALIZED\n--gnatwV         ^ /WARNINGS=NOVARIABLES_UNINITIALIZED\n--gnatw.v        ^ /WARNINGS=REVERSE_BIT_ORDER\n--gnatw.V        ^ /WARNINGS=NOREVERSE_BIT_ORDER\n--gnatww         ^ /WARNINGS=LOWBOUND_ASSUMED\n--gnatwW         ^ /WARNINGS=NOLOWBOUND_ASSUMED\n--gnatw.w        ^ /WARNINGS=WARNINGS_OFF_PRAGMAS\n--gnatw.W        ^ /WARNINGS=NOWARNINGS_OFF_PRAGMAS\n--gnatwx         ^ /WARNINGS=IMPORT_EXPORT_PRAGMAS\n--gnatwX         ^ /WARNINGS=NOIMPORT_EXPORT_PRAGMAS\n--gnatw.x        ^ /WARNINGS=LOCAL_RAISE_HANDLING\n--gnatw.X        ^ /WARNINGS=NOLOCAL_RAISE_HANDLING\n--gnatwy         ^ /WARNINGS=ADA_COMPATIBILITY\n--gnatwY         ^ /WARNINGS=NOADA_COMPATIBILITY\n--gnatw.y        ^ /WARNINGS=WHY_SPEC_NEEDS_BODY\n--gnatw.Y        ^ /WARNINGS=NOWHY_SPEC_NEEDS_BODY\n--gnatwz         ^ /WARNINGS=UNCHECKED_CONVERSIONS\n--gnatwZ         ^ /WARNINGS=NOUNCHECKED_CONVERSIONS\n--gnatw.z        ^ /WARNINGS=SIZE_ALIGNMENT\n--gnatw.Z        ^ /WARNINGS=NOSIZE_ALIGNMENT\n--gnatW8         ^ /WIDE_CHARACTER_ENCODING=UTF8\n--gnatW?         ^ /WIDE_CHARACTER_ENCODING=?\n--gnaty          ^ /STYLE_CHECKS\n--gnatyO         ^ /STYLE_CHECKS=OVERRIDING_INDICATORS\n--gnatyy         ^ /STYLE_CHECKS=ALL_BUILTIN\n--gnatZ          ^ /ZERO_COST_EXCEPTIONS\n--gnatzc         ^ /DISTRIBUTION_STUBS=CALLER\n--gnatzr         ^ /DISTRIBUTION_STUBS=RECEIVER\n--gnat83         ^ /83\n--gnat95         ^ /95\n--gnat05         ^ /05\n--gnat2005       ^ /2005\n--gnat12         ^ /12\n--gnat2012       ^ /2012\n--gnatx          ^ /XREF=SUPPRESS\n--gnatX          ^ /EXTENSIONS_ALLOWED\n---RTS           ^ /RUNTIME_SYSTEM\n-switch          ^ qualifier\n-switches        ^ qualifiers\n-Switch          ^ Qualifier\n-Switches        ^ Qualifiers\n-stdout          ^ SYS$OUTPUT\n-stderr          ^ SYS$ERROR\n--bargs          ^ /BINDER_QUALIFIERS\n--cargs          ^ /COMPILER_QUALIFIERS\n--largs          ^ /LINKER_QUALIFIERS\n--margs          ^ /MAKE_QUALIFIERS\n--aIDIR          ^ /SOURCE_SEARCH=direc\n--aODIR          ^ /OBJECT_SEARCH=direc\n--IDIR           ^ /SEARCH=direc\n--nostdinc       ^ /NOSTD_INCLUDES\n--nostdlib       ^ /NOSTD_LIBRARIES\n--pFILE          ^ /PROJECT=file\n--O0             ^ /OPTIMIZE=NONE\n--O1             ^ /OPTIMIZE=SOME\n--O2             ^ /OPTIMIZE=ALL\n--O3             ^ /OPTIMIZE=INLINING\n--H32            ^ /32_MALLOC\n--H64            ^ /64_MALLOC\n--Wall           ^ /WARNINGS=ALL_GCC\n--Wuninitialized ^ /WARNINGS=UNINITIALIZED"}, {"sha": "496ebb3c289b61d4527e2e30ae84665ffdfa0515", "filename": "gcc/ada/xgnatugn.adb", "status": "removed", "additions": 0, "deletions": 55, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d77cfab2813d0921344f74c219ec3e4a173aa3f1/gcc%2Fada%2Fxgnatugn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d77cfab2813d0921344f74c219ec3e4a173aa3f1/gcc%2Fada%2Fxgnatugn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxgnatugn.adb?ref=d77cfab2813d0921344f74c219ec3e4a173aa3f1", "patch": "@@ -1,55 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                          GNAT SYSTEM UTILITIES                           --\n---                                                                          --\n---                             X G N A T U G N                              --\n---                                                                          --\n---                                 B o d y                                  --\n---                                                                          --\n---          Copyright (C) 2003-2014, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT; see file COPYING3.  If not, go to --\n--- http://www.gnu.org/licenses for a complete copy of the license.          --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a temporary version whose only purpose is to work with\n---  Makefile.gnat6\n---  Its main previous purpose (to handle VMS-specific wording in\n---  gnat_ugn.texi and projects.texi) is not applicable, since there is\n---  no longer a VMS-specific version of the User's Guide.\n-\n---  The program is invoked as follows:\n-\n---  xgnatugn <target> <in-file> <word-list> <out-file>\n-\n---  In this temporary version, the program simply copies <in-file>\n---  to <out-file> and ignores the <target> and <word-list> arguments\n-\n-with Ada.Command_Line;           use Ada.Command_Line;\n-with Ada.Text_IO;                use Ada.Text_IO;\n-\n-procedure Xgnatugn is\n-\n-   Max_Line_Length : constant := 5000;\n-   Line            : String (1 .. Max_Line_Length);\n-   Last            : Natural;\n-   File1, File2    : File_Type;\n-\n-begin\n-\n-   Open (File1, Mode => In_File, Name => Argument (2));\n-   Create (File2, Mode => Out_File, Name => Argument (4));\n-\n-   while not End_Of_File (File1) loop\n-      Get_Line (File1, Line, Last);\n-      Put_Line (File2, Line (1 .. Last));\n-   end loop;\n-end Xgnatugn;"}]}