{"sha": "08f594eb399dab0637b57b0ca4b0a5ce912b8171", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhmNTk0ZWIzOTlkYWIwNjM3YjU3YjBjYTRiMGE1Y2U5MTJiODE3MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-08T20:31:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2020-01-08T20:31:25Z"}, "message": "Add TARGET_EXPR_DIRECT_INIT_P sanity check.\n\n\t* cp-gimplify.c (cp_gimplify_expr) [TARGET_EXPR]: Check\n\tTARGET_EXPR_DIRECT_INIT_P.\n\t* constexpr.c (cxx_eval_constant_expression): Likewise.\n\nFrom-SVN: r280019", "tree": {"sha": "54c68deda2c7f193404da8f65afd15c6607cf186", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54c68deda2c7f193404da8f65afd15c6607cf186"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08f594eb399dab0637b57b0ca4b0a5ce912b8171", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f594eb399dab0637b57b0ca4b0a5ce912b8171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08f594eb399dab0637b57b0ca4b0a5ce912b8171", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f594eb399dab0637b57b0ca4b0a5ce912b8171/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "10d2f801f472931137deae1714d5b690c1862037", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d2f801f472931137deae1714d5b690c1862037", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d2f801f472931137deae1714d5b690c1862037"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "210ab4e619f5a544962a02e84d0180dbdd05d346", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f594eb399dab0637b57b0ca4b0a5ce912b8171/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f594eb399dab0637b57b0ca4b0a5ce912b8171/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08f594eb399dab0637b57b0ca4b0a5ce912b8171", "patch": "@@ -1,3 +1,9 @@\n+2020-01-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-gimplify.c (cp_gimplify_expr) [TARGET_EXPR]: Check\n+\tTARGET_EXPR_DIRECT_INIT_P.\n+\t* constexpr.c (cxx_eval_constant_expression): Likewise.\n+\n 2020-01-08  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/91369 - constexpr destructor and member initializer."}, {"sha": "9306a7dce4a1fd6642d283108e3594f55e643c5f", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f594eb399dab0637b57b0ca4b0a5ce912b8171/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f594eb399dab0637b57b0ca4b0a5ce912b8171/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=08f594eb399dab0637b57b0ca4b0a5ce912b8171", "patch": "@@ -5312,6 +5312,7 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t  *non_constant_p = true;\n \t  break;\n \t}\n+      gcc_checking_assert (!TARGET_EXPR_DIRECT_INIT_P (t));\n       /* Avoid evaluating a TARGET_EXPR more than once.  */\n       if (tree *p = ctx->global->values.get (TARGET_EXPR_SLOT (t)))\n \t{"}, {"sha": "827d240d11ad87fbebd11313a9e3bbb358a784ae", "filename": "gcc/cp/cp-gimplify.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08f594eb399dab0637b57b0ca4b0a5ce912b8171/gcc%2Fcp%2Fcp-gimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08f594eb399dab0637b57b0ca4b0a5ce912b8171/gcc%2Fcp%2Fcp-gimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-gimplify.c?ref=08f594eb399dab0637b57b0ca4b0a5ce912b8171", "patch": "@@ -925,6 +925,13 @@ cp_gimplify_expr (tree *expr_p, gimple_seq *pre_p, gimple_seq *post_p)\n \t}\n       break;\n \n+    case TARGET_EXPR:\n+      /* A TARGET_EXPR that expresses direct-initialization should have been\n+\t elided by cp_gimplify_init_expr.  */\n+      gcc_checking_assert (!TARGET_EXPR_DIRECT_INIT_P (*expr_p));\n+      ret = GS_UNHANDLED;\n+      break;\n+\n     case RETURN_EXPR:\n       if (TREE_OPERAND (*expr_p, 0)\n \t  && (TREE_CODE (TREE_OPERAND (*expr_p, 0)) == INIT_EXPR"}]}