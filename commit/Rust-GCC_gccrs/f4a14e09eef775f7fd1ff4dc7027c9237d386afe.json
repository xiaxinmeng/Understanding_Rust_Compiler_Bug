{"sha": "f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRhMTRlMDllZWY3NzVmN2ZkMWZmNGRjNzAyN2M5MjM3ZDM4NmFmZQ==", "commit": {"author": {"name": "Jozef Lawrynowicz", "email": "jozef.l@mittosystems.com", "date": "2018-11-26T21:14:47Z"}, "committer": {"name": "Jozef Lawrynowicz", "email": "jozefl@gcc.gnu.org", "date": "2018-11-26T21:14:47Z"}, "message": "sourcebuild.texi: Document check_effective_target_size20plus.\n\n2018-11-26  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n\n\tgcc/ChangeLog:\n\n\t* doc/sourcebuild.texi: Document check_effective_target_size20plus.\n\tClarify documentation for check_effective_target_size32plus.\n\n\tgcc/testsuite/ChangeLog:\n\n\t* gcc.c-torture/compile/20151204.c: Add dg-require-effective-target\n\tsize20plus.\n\t* gcc.dg/pr34225.c: Likewise.\n\t* gcc.dg/pr40971.c: Likewise.\n\t* gcc.dg/pr69071.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-10.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-2.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-3.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-5.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-6.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-7.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-8.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-9.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-11.c: Add dg-require-effective-target\n\tsize32plus.\n\t* gcc.dg/Walloc-size-larger-than-4.c: Likewise.\n\t* gcc.dg/Walloc-size-larger-than-5.c: Likewise.\n\t* gcc.dg/Walloc-size-larger-than-6.c: Likewise.\n\t* gcc.dg/Walloc-size-larger-than-7.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-1.c: Likewise.\n\t* gcc.dg/tree-ssa/loop-interchange-1b.c: Likewise.\n\t* lib/target-supports.exp (check_effective_target_size20plus): New.\n\t(check_effective_target_size32plus): Update comment.\n\nFrom-SVN: r266483", "tree": {"sha": "c3e498efc6a6bfedf7928fb0e7a0423886c4c1d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3e498efc6a6bfedf7928fb0e7a0423886c4c1d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/comments", "author": {"login": "jozefl-mitto", "id": 36524004, "node_id": "MDQ6VXNlcjM2NTI0MDA0", "avatar_url": "https://avatars.githubusercontent.com/u/36524004?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jozefl-mitto", "html_url": "https://github.com/jozefl-mitto", "followers_url": "https://api.github.com/users/jozefl-mitto/followers", "following_url": "https://api.github.com/users/jozefl-mitto/following{/other_user}", "gists_url": "https://api.github.com/users/jozefl-mitto/gists{/gist_id}", "starred_url": "https://api.github.com/users/jozefl-mitto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jozefl-mitto/subscriptions", "organizations_url": "https://api.github.com/users/jozefl-mitto/orgs", "repos_url": "https://api.github.com/users/jozefl-mitto/repos", "events_url": "https://api.github.com/users/jozefl-mitto/events{/privacy}", "received_events_url": "https://api.github.com/users/jozefl-mitto/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ffcf3b79c2a22fef39c81f57f5e9100a900b2818", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffcf3b79c2a22fef39c81f57f5e9100a900b2818", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffcf3b79c2a22fef39c81f57f5e9100a900b2818"}], "stats": {"total": 103, "additions": 82, "deletions": 21}, "files": [{"sha": "c2f1c4e0dc0a0d364fddf4432dfa99be0c6195fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,3 +1,8 @@\n+2018-11-26  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* doc/sourcebuild.texi: Document check_effective_target_size20plus.\n+\tClarify documentation for check_effective_target_size32plus.\n+\n 2018-11-26  Aaron Sawdey  <acsawdey@linux.ibm.com>\n \n \t* config/rs6000/rs6000-string.c (expand_cmp_vec_sequence): Rename"}, {"sha": "b8ab0ee629f6486852b0ffbe74f8b1bb8e837a39", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1369,8 +1369,13 @@ Target supports @code{long double} that is longer than @code{double}.\n @item ptr32plus\n Target has pointers that are 32 bits or longer.\n \n+@item size20plus\n+Target has a 20-bit or larger address space, so at least supports\n+16-bit array and structure sizes.\n+\n @item size32plus\n-Target supports array and structure sizes that are 32 bits or longer.\n+Target has a 32-bit or larger address space, so at least supports\n+24-bit array and structure sizes.\n \n @item 4byte_wchar_t\n Target has @code{wchar_t} that is at least 4 bytes."}, {"sha": "ef9ad1db55116c04c5542920e6326373f6ab0157", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,3 +1,29 @@\n+2018-11-26  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.c-torture/compile/20151204.c: Add dg-require-effective-target\n+\tsize20plus.\n+\t* gcc.dg/pr34225.c: Likewise.\n+\t* gcc.dg/pr40971.c: Likewise.\n+\t* gcc.dg/pr69071.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-10.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-3.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-5.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-6.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-7.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-8.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-9.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-11.c: Add dg-require-effective-target\n+\tsize32plus.\n+\t* gcc.dg/Walloc-size-larger-than-4.c: Likewise.\n+\t* gcc.dg/Walloc-size-larger-than-5.c: Likewise.\n+\t* gcc.dg/Walloc-size-larger-than-6.c: Likewise.\n+\t* gcc.dg/Walloc-size-larger-than-7.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/loop-interchange-1b.c: Likewise.\n+\t* lib/target-supports.exp (check_effective_target_size20plus): New.\n+\t(check_effective_target_size32plus): Update comment. \n+\n 2018-11-26  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/88178"}, {"sha": "e41f6c1dca9eed59a13e8a50d0efc9a529254659", "filename": "gcc/testsuite/gcc.c-torture/compile/20151204.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20151204.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20151204.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20151204.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-skip-if \"Array too big\" { \"avr-*-*\" \"pdp11-*-*\" } } */\n+/* { dg-require-effective-target size20plus } */\n \n typedef __SIZE_TYPE__ size_t;\n "}, {"sha": "54e43cd9e6dc636f7567544586788f0f9d446ea7", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-4.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/82063 - issues with arguments enabled by -Wall\n    { dg-do compile }\n-   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n+   { dg-require-effective-target size32plus }\n    { dg-options \"-O -Walloc-size-larger-than=1MiB -ftrack-macro-expansion=0\" } */\n \n void sink (void*);"}, {"sha": "774c4cf271b90f600fa92a7543e48124c369eb43", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-5.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/82063 - issues with arguments enabled by -Wall\n    { dg-do compile }\n-   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n+   { dg-require-effective-target size32plus }\n    { dg-options \"-O -Walloc-size-larger-than=1MB -ftrack-macro-expansion=0\" } */\n \n void sink (void*);"}, {"sha": "2dfc6632b9e4427abbf03784c57cf0070caa1c7b", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-6.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/82063 - issues with arguments enabled by -Wall\n    { dg-do compile }\n-   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n+   { dg-require-effective-target size32plus }\n    { dg-options \"-O -Walloc-size-larger-than=1GiB -ftrack-macro-expansion=0\" } */\n \n void sink (void*);"}, {"sha": "2cc517fab59c11aeb369df3c9a0382a069dfd2a7", "filename": "gcc/testsuite/gcc.dg/Walloc-size-larger-than-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWalloc-size-larger-than-7.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,6 @@\n /* PR middle-end/82063 - issues with arguments enabled by -Wall\n    { dg-do compile }\n-   { dg-skip-if \"small address space\" { \"pdp11-*-*\" } }\n+   { dg-require-effective-target size32plus }\n    { dg-options \"-O -Walloc-size-larger-than=1GB -ftrack-macro-expansion=0\" } */\n \n void sink (void*);"}, {"sha": "e3373403a9cd985ee7bc3bb2e5e9f5fbaa8a9f11", "filename": "gcc/testsuite/gcc.dg/pr34225.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34225.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34225.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr34225.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fno-strict-aliasing -fstack-protector\" } */\n /* { dg-require-effective-target fstack_protector } */\n+/* { dg-require-effective-target size20plus } */\n \n typedef __SIZE_TYPE__ size_t;\n extern int sscanf (const char *, const char *, ...);"}, {"sha": "4317638e7bdd0fb321834cd61b762491a743bfa4", "filename": "gcc/testsuite/gcc.dg/pr40971.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40971.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40971.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr40971.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fstack-protector -fno-strict-aliasing\" } */\n /* { dg-require-effective-target fstack_protector } */\n+/* { dg-require-effective-target size20plus } */\n \n extern void bar (char *);\n "}, {"sha": "3ae38112fa2b86ea91b73ec30a815b992b8f9473", "filename": "gcc/testsuite/gcc.dg/pr69071.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69071.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69071.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr69071.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,7 +1,7 @@\n /* PR target/69071 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -g\" } */\n-/* { dg-skip-if \"Array too big\" { \"avr-*-*\" } } */\n+/* { dg-require-effective-target size20plus } */\n \n void *bar (void *);\n "}, {"sha": "c7ebaefeab8afe204c505fb06e6b6f44138ed6bf", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-1.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fassociative-math -fno-signed-zeros -fno-trapping-math -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size32plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n /* Copied from graphite/interchange-4.c */\n "}, {"sha": "8f5a9a03970e7bb3d4142c800cd729a8fe59efac", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-10.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-10.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n #define M 256\n int a[M][M], b[M][M];"}, {"sha": "413b81e0f21ef7b2051d044048a795e48a9f55c0", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-11.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-11.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n #define M 256\n int a[M][M], b[M][M];"}, {"sha": "a3063bbef45824bbfb95a5711cf6ed5bf8fc2d9e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-1b.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-1b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-1b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-1b.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size32plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n /* Copied from graphite/interchange-4.c */\n "}, {"sha": "fbd46a2af8b69631c2c9708a573e6249b8ceeea8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-2.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n /* Copied from graphite/interchange-5.c */\n "}, {"sha": "8028e36e2f17411f5130faf4f909e74dd223417c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-3.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big stack\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big stack\" { visium-*-* } } */\n \n /* Copied from graphite/interchange-6.c */\n "}, {"sha": "81050a8de3301b54b9a4d01099befa0a21aade3e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-5.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-5.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n #define M 256\n int a[M][M], b[M][M], c[M][M], d[M][M];"}, {"sha": "8a2692ecc047f237d24e294e27f39c8a45dd8c73", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-6.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-6.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n #define M 256\n int a[M][M], b[M][M], c[M][M], d[M][M];"}, {"sha": "d55c1e2f41d02e1725b9b06602111f9526d7d77a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-7.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-7.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n #define M 256\n int a[M][M], b[M][M], c[M][M], d[M][M];"}, {"sha": "391b8a437f8bd79d311b0de5fc0e61ee7574add8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-8.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-8.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n #define M 256\n int a[M][M], b[M][M], c[M][M], d[M][M];"}, {"sha": "b5fda2d5097f7f4624bee03bf1c86ada9e915318", "filename": "gcc/testsuite/gcc.dg/tree-ssa/loop-interchange-9.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Floop-interchange-9.c?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -floop-interchange -fdump-tree-linterchange-details\" } */\n-/* { dg-skip-if \"too big data segment\" { avr-*-* visium-*-* } } */\n+/* { dg-require-effective-target size20plus } */\n+/* { dg-skip-if \"too big data segment\" { visium-*-* } } */\n \n #define M 256\n int a[M][M], b[M][M], c[M], d[M];"}, {"sha": "fe7169158e48c477b7f6c87bf488c8929e5822bb", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4a14e09eef775f7fd1ff4dc7027c9237d386afe/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=f4a14e09eef775f7fd1ff4dc7027c9237d386afe", "patch": "@@ -2608,9 +2608,21 @@ proc check_effective_target_ptr32plus { } {\n     }]\n }\n \n-# Return 1 if we support 32-bit or larger array and structure sizes\n-# using default options, 0 otherwise.  Avoid false positive on\n-# targets with 20 or 24 bit address spaces.\n+# Return 1 if we support 16-bit or larger array and structure sizes\n+# using default options, 0 otherwise.\n+# This implies at least a 20-bit address space, as no targets have an address\n+# space between 16 and 20 bits.\n+\n+proc check_effective_target_size20plus { } {\n+    return [check_no_compiler_messages size20plus object {\n+\tchar dummy[65537L];\n+    }]\n+}\n+\n+# Return 1 if we support 24-bit or larger array and structure sizes\n+# using default options, 0 otherwise.\n+# This implies at least a 32-bit address space, as no targets have an address\n+# space between 24 and 32 bits.\n \n proc check_effective_target_size32plus { } {\n     return [check_no_compiler_messages size32plus object {"}]}