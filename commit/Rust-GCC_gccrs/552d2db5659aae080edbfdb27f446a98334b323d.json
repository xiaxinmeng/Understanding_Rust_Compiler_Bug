{"sha": "552d2db5659aae080edbfdb27f446a98334b323d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTUyZDJkYjU2NTlhYWUwODBlZGJmZGIyN2Y0NDZhOTgzMzRiMzIzZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-14T09:50:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-14T09:50:38Z"}, "message": "tree-cfg.c (replace_uses_by): Only mark blocks altered that will make a difference.\n\n2011-12-14  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-cfg.c (replace_uses_by): Only mark blocks altered\n\tthat will make a difference.  Only recompute ADDR_EXPR\n\tinvariantness if it could possibly have changed.  Do so\n\tbefore folding the statement.\n\nFrom-SVN: r182327", "tree": {"sha": "0fe3c6bb0adea1b37f66e4eb87136caedcb29f4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fe3c6bb0adea1b37f66e4eb87136caedcb29f4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/552d2db5659aae080edbfdb27f446a98334b323d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/552d2db5659aae080edbfdb27f446a98334b323d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/552d2db5659aae080edbfdb27f446a98334b323d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/552d2db5659aae080edbfdb27f446a98334b323d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4f9c574a92e4d1f43c7e9c038a54384cdc07b264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f9c574a92e4d1f43c7e9c038a54384cdc07b264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f9c574a92e4d1f43c7e9c038a54384cdc07b264"}], "stats": {"total": 44, "additions": 30, "deletions": 14}, "files": [{"sha": "d792244ccce264051171d34d314dda9a2b9259db", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/552d2db5659aae080edbfdb27f446a98334b323d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/552d2db5659aae080edbfdb27f446a98334b323d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=552d2db5659aae080edbfdb27f446a98334b323d", "patch": "@@ -1,3 +1,10 @@\n+2011-12-14  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-cfg.c (replace_uses_by): Only mark blocks altered\n+\tthat will make a difference.  Only recompute ADDR_EXPR\n+\tinvariantness if it could possibly have changed.  Do so\n+\tbefore folding the statement.\n+\n 2011-12-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* lto-streamer-out.c (write_symbol): Use proper 64-bit host type."}, {"sha": "3d1b775c72e4c764f0ef457bbc0d5e6ee01a2d73", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/552d2db5659aae080edbfdb27f446a98334b323d/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/552d2db5659aae080edbfdb27f446a98334b323d/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=552d2db5659aae080edbfdb27f446a98334b323d", "patch": "@@ -1592,7 +1592,7 @@ replace_uses_by (tree name, tree val)\n \t\t  /* This can only occur for virtual operands, since\n \t\t     for the real ones SSA_NAME_OCCURS_IN_ABNORMAL_PHI (name))\n \t\t     would prevent replacement.  */\n-\t\t  gcc_assert (!is_gimple_reg (name));\n+\t\t  gcc_checking_assert (!is_gimple_reg (name));\n \t\t  SSA_NAME_OCCURS_IN_ABNORMAL_PHI (val) = 1;\n \t\t}\n \t    }\n@@ -1604,28 +1604,37 @@ replace_uses_by (tree name, tree val)\n \t  gimple orig_stmt = stmt;\n \t  size_t i;\n \n-\t  fold_stmt (&gsi);\n-\t  stmt = gsi_stmt (gsi);\n-\t  if (cfgcleanup_altered_bbs && !is_gimple_debug (stmt))\n+\t  /* Mark the block if we changed the last stmt in it.  */\n+\t  if (cfgcleanup_altered_bbs\n+\t      && stmt_ends_bb_p (stmt))\n \t    bitmap_set_bit (cfgcleanup_altered_bbs, gimple_bb (stmt)->index);\n \n-\t  /* FIXME.  This should go in update_stmt.  */\n-\t  for (i = 0; i < gimple_num_ops (stmt); i++)\n+\t  /* FIXME.  It shouldn't be required to keep TREE_CONSTANT\n+\t     on ADDR_EXPRs up-to-date on GIMPLE.  Propagation will\n+\t     only change sth from non-invariant to invariant, and only\n+\t     when propagating integer constants.  */\n+\t  if (TREE_CODE (val) == INTEGER_CST)\n+\t    for (i = 0; i < gimple_num_ops (stmt); i++)\n+\t      {\n+\t\ttree op = gimple_op (stmt, i);\n+\t\t/* Operands may be empty here.  For example, the labels\n+\t\t   of a GIMPLE_COND are nulled out following the creation\n+\t\t   of the corresponding CFG edges.  */\n+\t\tif (op && TREE_CODE (op) == ADDR_EXPR)\n+\t\t  recompute_tree_invariant_for_addr_expr (op);\n+\t      }\n+\n+\t  if (fold_stmt (&gsi))\n \t    {\n-\t      tree op = gimple_op (stmt, i);\n-              /* Operands may be empty here.  For example, the labels\n-                 of a GIMPLE_COND are nulled out following the creation\n-                 of the corresponding CFG edges.  */\n-\t      if (op && TREE_CODE (op) == ADDR_EXPR)\n-\t\trecompute_tree_invariant_for_addr_expr (op);\n+\t      stmt = gsi_stmt (gsi);\n+\t      maybe_clean_or_replace_eh_stmt (orig_stmt, stmt);\n \t    }\n \n-\t  maybe_clean_or_replace_eh_stmt (orig_stmt, stmt);\n \t  update_stmt (stmt);\n \t}\n     }\n \n-  gcc_assert (has_zero_uses (name));\n+  gcc_checking_assert (has_zero_uses (name));\n \n   /* Also update the trees stored in loop structures.  */\n   if (current_loops)"}]}