{"sha": "4cc035143dba51e38b35ffa27dbafdb07fe82e71", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNjMDM1MTQzZGJhNTFlMzhiMzVmZmEyN2RiYWZkYjA3ZmU4MmU3MQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2018-07-30T12:26:37Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2018-07-30T12:26:37Z"}, "message": "doc: discourage const/volatile on register variables (PR 86673)\n\n\tPR target/86673\n\t* doc/extend.texi (Global Register Variables): Discourage use of type\n\tqualifiers.\n\t(Local Register Variables): Likewise.\n\nFrom-SVN: r263065", "tree": {"sha": "8431c42ce190bdfc39e1c627738c4f81b3cacdaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8431c42ce190bdfc39e1c627738c4f81b3cacdaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cc035143dba51e38b35ffa27dbafdb07fe82e71", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc035143dba51e38b35ffa27dbafdb07fe82e71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cc035143dba51e38b35ffa27dbafdb07fe82e71", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cc035143dba51e38b35ffa27dbafdb07fe82e71/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1dcadcf01d48dda372630478140e3fb4f6bc73ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dcadcf01d48dda372630478140e3fb4f6bc73ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dcadcf01d48dda372630478140e3fb4f6bc73ee"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "18376aeeec13d09f4781b99a93666e113e7166bc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc035143dba51e38b35ffa27dbafdb07fe82e71/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc035143dba51e38b35ffa27dbafdb07fe82e71/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4cc035143dba51e38b35ffa27dbafdb07fe82e71", "patch": "@@ -1,3 +1,10 @@\n+2018-07-30  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR target/86673\n+\t* doc/extend.texi (Global Register Variables): Discourage use of type\n+\tqualifiers.\n+\t(Local Register Variables): Likewise.\n+\n 2018-07-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR tree-optimization/86506"}, {"sha": "63ef39a16fe0d0370a90ad150bd667ed3247c5f4", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cc035143dba51e38b35ffa27dbafdb07fe82e71/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cc035143dba51e38b35ffa27dbafdb07fe82e71/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=4cc035143dba51e38b35ffa27dbafdb07fe82e71", "patch": "@@ -9591,6 +9591,11 @@ a global variable the declaration appears outside a function. The\n @code{static}. The register name must be a valid register name for the\n target platform.\n \n+Do not use type qualifiers such as @code{const} and @code{volatile}, as\n+the outcome may be contrary to expectations.  In  particular, using the\n+@code{volatile} qualifier does not fully prevent the compiler from\n+optimizing accesses to the register.\n+\n Registers are a scarce resource on most systems and allowing the \n compiler to manage their usage usually results in the best code. However, \n under special circumstances it can make sense to reserve some globally.\n@@ -9698,6 +9703,12 @@ but for a local variable the declaration appears within a function.  The\n @code{static}.  The register name must be a valid register name for the\n target platform.\n \n+Do not use type qualifiers such as @code{const} and @code{volatile}, as\n+the outcome may be contrary to expectations. In particular, when the\n+@code{const} qualifier is used, the compiler may substitute the\n+variable with its initializer in @code{asm} statements, which may cause\n+the corresponding operand to appear in a different register.\n+\n As with global register variables, it is recommended that you choose \n a register that is normally saved and restored by function calls on your \n machine, so that calls to library routines will not clobber it."}]}