{"sha": "a1d1988f99277ab1208a6d66f8aa27323b583b4c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFkMTk4OGY5OTI3N2FiMTIwOGE2ZDY2ZjhhYTI3MzIzYjU4M2I0Yw==", "commit": {"author": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-05-18T18:44:36Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2006-05-18T18:44:36Z"}, "message": "Canonicalize a little\n\nFrom-SVN: r113889", "tree": {"sha": "e01b859cde26454952f08ee88c6e71df585a1d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e01b859cde26454952f08ee88c6e71df585a1d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1d1988f99277ab1208a6d66f8aa27323b583b4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d1988f99277ab1208a6d66f8aa27323b583b4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d1988f99277ab1208a6d66f8aa27323b583b4c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d1988f99277ab1208a6d66f8aa27323b583b4c/comments", "author": null, "committer": null, "parents": [{"sha": "52ffd86eb62d0320ccf64138e5d7d37ab7a6f7c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ffd86eb62d0320ccf64138e5d7d37ab7a6f7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ffd86eb62d0320ccf64138e5d7d37ab7a6f7c5"}], "stats": {"total": 346, "additions": 174, "deletions": 172}, "files": [{"sha": "217ee8a78abad3b6000dde5d2e8ec0772304086f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 104, "deletions": 104, "changes": 208, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d1988f99277ab1208a6d66f8aa27323b583b4c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d1988f99277ab1208a6d66f8aa27323b583b4c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1d1988f99277ab1208a6d66f8aa27323b583b4c", "patch": "@@ -33,17 +33,17 @@\n \n 2006-05-12  Stuart Hastings  <stuart@apple.com>\n \n-\t* gcc/config/i386/i386.opt (-mstackrealign): New flag.  *\n-\tgcc/config/i386/i386.c (force_align_arg_pointer): New attribute.\n+\t* config/i386/i386.opt (-mstackrealign): New flag.\n+\t* config/i386/i386.c (force_align_arg_pointer): New attribute.\n \t(ix86_handle_cconv_attribute): Emit error when\n \tforce_align_arg_pointer attribute collides with too many regparms.\n \t(ix86_function_regparm): Limit regparms when used with\n \tforce_align_arg_pointer attribute.  (ix86_internal_arg_pointer):\n \tSupport stack-realigning prologue in non-main functions.  Emit\n \twarning for nested functions under -mstackrealign, emit error for\n \tnested functions with force_align_arg_pointer attribute.\n-\t* gcc/doc/extend.texi (force_align_arg_pointer): Document it.\n-\t* gcc/doc/invoke.texi (-mstackrealign): Document it.\n+\t* doc/extend.texi (force_align_arg_pointer): Document it.\n+\t* doc/invoke.texi (-mstackrealign): Document it.\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n 2006-05-17  Kazu Hirata  <kazu@codesourcery.com>\n \n@@ -730,7 +730,7 @@\n \t    Joshua Kinard  <kumba@gentoo.org>\n \n \tPR target/25871\n-\t* gcc/config/mips/mips.h (TRAMPOLINE_TEMPLATE): Avoid 32-bit moves\n+\t* config/mips/mips.h (TRAMPOLINE_TEMPLATE): Avoid 32-bit moves\n \twith 64-bit pointers.\n \n 2006-05-02  Paul Brook  <paul@codesourcery.com>\n@@ -1866,7 +1866,7 @@\n \n 2006-04-10  Mike Frysinger  <vapier@gentoo.org>\n \n-\t* gcc/Makefile.in (gcc-cross): Add $(exeext) to target name.\n+\t* Makefile.in (gcc-cross): Add $(exeext) to target name.\n \n 2006-04-10  Aldy Hernandez  <aldyh@redhat.com>\n \n@@ -2078,11 +2078,11 @@\n \n 2006-04-05  Robert Millan  <robertmh@gnu.org>\n \n-\t* gcc/config/i386/linux.h:  Add a comment to mark macros that are\n+\t* config/i386/linux.h:  Add a comment to mark macros that are\n \tbeing overriden in config/k*bsd-gnu.h.\n-\t* gcc/config/kfreebsd-gnu.h:  Redefine GLIBC_DYNAMIC_LINKER instead of\n+\t* config/kfreebsd-gnu.h:  Redefine GLIBC_DYNAMIC_LINKER instead of\n \tDYNAMIC_LINKER.\n-\t* gcc/config/knetbsd-gnu.h:  Ditto.\n+\t* config/knetbsd-gnu.h:  Ditto.\n \n 2006-04-06  Jan Hubicka  <jh@suse.cz>\n \n@@ -4840,71 +4840,71 @@\n \n 2006-03-02  Daniel Berlin <dberlin@dberlin.org>\n \n-\t* gcc/tree-vrp.c (execute_vrp): Return value.\n-\t* gcc/regrename.c (rest_of_handle_regrename): Ditto.\n-\t* gcc/tree-into-ssa.c (rewrite_into_ssa): Ditto.\n-\t* gcc/tree-complex.c (tree_lower_complex): Ditto.\n+\t* tree-vrp.c (execute_vrp): Return value.\n+\t* regrename.c (rest_of_handle_regrename): Ditto.\n+\t* tree-into-ssa.c (rewrite_into_ssa): Ditto.\n+\t* tree-complex.c (tree_lower_complex): Ditto.\n \t(tree_lower_complex_O0): Ditto.\n-\t* gcc/tracer.c (rest_of_handle_tracer): Ditto.\n-\t* gcc/postreload-gcse.c (rest_of_handle_gcse2): Ditto.\n-\t* gcc/postreload.c (rest_of_handle_postreload): Ditto.\n-\t* gcc/tree-tailcall.c (execute_tail_recursion): Ditto.\n+\t* tracer.c (rest_of_handle_tracer): Ditto.\n+\t* postreload-gcse.c (rest_of_handle_gcse2): Ditto.\n+\t* postreload.c (rest_of_handle_postreload): Ditto.\n+\t* tree-tailcall.c (execute_tail_recursion): Ditto.\n \t(execute_tail_calls): Ditto.\n-\t* gcc/tree-ssa-loop-ch.c (copy_loop_headers): Ditto.\n-\t* gcc/tree.h (init_function_for_compilation): Ditto.\n-\t* gcc/ipa-cp.c (ipcp_driver): Ditto.\n-\t* gcc/tree-scalar-evolution.c (scev_const_prop): Ditto.\n-\t* gcc/tree-scalar-evolution.h (scev_const_prop): Ditto.\n-\t* gcc/final.c (compute_alignments): Ditto.\n+\t* tree-ssa-loop-ch.c (copy_loop_headers): Ditto.\n+\t* tree.h (init_function_for_compilation): Ditto.\n+\t* ipa-cp.c (ipcp_driver): Ditto.\n+\t* tree-scalar-evolution.c (scev_const_prop): Ditto.\n+\t* tree-scalar-evolution.h (scev_const_prop): Ditto.\n+\t* final.c (compute_alignments): Ditto.\n \t(rest_of_handle_final): Ditto.\n \t(rest_of_handle_shorten_branches): Ditto.\n \t(rest_of_clean_state): Ditto.\n-\t* gcc/omp-low.c (execute_expand_omp): Ditto.\n+\t* omp-low.c (execute_expand_omp): Ditto.\n \t(execute_lower_omp): Ditto.\n-\t* gcc/tree-ssa-dse.c (tree_ssa_dse): Ditto.\n-\t* gcc/ipa-reference.c (static_execute): Ditto.\n-\t* gcc/tree-ssa-uncprop.c (tree_ssa_uncprop): Ditto.\n-\t* gcc/reorg.c (rest_of_handle_delay_slots): Ditto.\n+\t* tree-ssa-dse.c (tree_ssa_dse): Ditto.\n+\t* ipa-reference.c (static_execute): Ditto.\n+\t* tree-ssa-uncprop.c (tree_ssa_uncprop): Ditto.\n+\t* reorg.c (rest_of_handle_delay_slots): Ditto.\n \t(rest_of_handle_machine_reorg): Ditto.\n-\t* gcc/cgraphunit.c (rebuild_cgraph_edges): Ditto.\n-\t* gcc/flow.c (recompute_reg_usage): Ditto.\n+\t* cgraphunit.c (rebuild_cgraph_edges): Ditto.\n+\t* flow.c (recompute_reg_usage): Ditto.\n \t(rest_of_handle_remove_death_notes): Ditto.\n \t(rest_of_handle_life): Ditto.\n \t(rest_of_handle_flow2): Ditto.\n-\t* gcc/tree-ssa-copyrename.c (rename_ssa_copies): Ditto.\n-\t* gcc/tree-ssa-ccp.c (do_ssa_ccp): Ditto.\n+\t* tree-ssa-copyrename.c (rename_ssa_copies): Ditto.\n+\t* tree-ssa-ccp.c (do_ssa_ccp): Ditto.\n \t(do_ssa_store_ccp): Ditto.\n \t(execute_fold_all_builtins): Ditto.\n-\t* gcc/mode-switching.c (rest_of_handle_mode_switching): Ditto.\n-\t* gcc/modulo-sched.c (rest_of_handle_sms): Ditto.\n-\t* gcc/ipa-pure-const.c (static_execute): Ditto.\n-\t* gcc/cse.c (rest_of_handle_cse): Ditto.\n+\t* mode-switching.c (rest_of_handle_mode_switching): Ditto.\n+\t* modulo-sched.c (rest_of_handle_sms): Ditto.\n+\t* ipa-pure-const.c (static_execute): Ditto.\n+\t* cse.c (rest_of_handle_cse): Ditto.\n \t(rest_of_handle_cse2): Ditto.\n-\t* gcc/web.c (rest_of_handle_web): Ditto.\n-\t* gcc/tree-stdarg.c (execute_optimize_stdarg): Ditto.\n-\t* gcc/tree-ssa-math-opts.c (execute_cse_reciprocals): Ditto.\n-\t* gcc/tree-ssa-dom.c (tree_ssa_dominator_optimize): Ditto.\n-\t* gcc/tree-nrv.c (tree_nrv): Ditto.\n+\t* web.c (rest_of_handle_web): Ditto.\n+\t* tree-stdarg.c (execute_optimize_stdarg): Ditto.\n+\t* tree-ssa-math-opts.c (execute_cse_reciprocals): Ditto.\n+\t* tree-ssa-dom.c (tree_ssa_dominator_optimize): Ditto.\n+\t* tree-nrv.c (tree_nrv): Ditto.\n \t(execute_return_slot_opt): Ditto.\n-\t* gcc/tree-ssa-alias.c (compute_may_aliases): Ditto.\n+\t* tree-ssa-alias.c (compute_may_aliases): Ditto.\n \t(create_structure_vars): Ditto.\n-\t* gcc/loop-init.c (rtl_loop_init): Ditto.\n+\t* loop-init.c (rtl_loop_init): Ditto.\n \t(rtl_loop_done): Ditto.\n \t(rtl_move_loop_invariants): Ditto.\n \t(rtl_unswitch): Ditto.\n \t(rtl_unroll_and_peel_loops): Ditto.\n \t(rtl_doloop): Ditto.\n-\t* gcc/gimple-low.c (lower_function_body): Ditto.\n+\t* gimple-low.c (lower_function_body): Ditto.\n \t(mark_used_blocks): Ditto.\n-\t* gcc/tree-ssa-sink.c (execute_sink_code): Ditto.\n-\t* gcc/ipa-inline.c (cgraph_decide_inlining): Ditto.\n+\t* tree-ssa-sink.c (execute_sink_code): Ditto.\n+\t* ipa-inline.c (cgraph_decide_inlining): Ditto.\n \t(cgraph_early_inlining): Ditto.\n-\t* gcc/global.c (rest_of_handle_global_alloc): Ditto.\n-\t* gcc/jump.c (cleanup_barriers): Ditto.\n+\t* global.c (rest_of_handle_global_alloc): Ditto.\n+\t* jump.c (cleanup_barriers): Ditto.\n \t(purge_line_number_notes): Ditto.\n-\t* gcc/ifcvt.c (rest_of_handle_if_conversion): Ditto.\n+\t* ifcvt.c (rest_of_handle_if_conversion): Ditto.\n \t(rest_of_handle_if_after_reload): Ditto.\n-\t* gcc/tree-ssa-loop.c (tree_ssa_loop_init): Ditto.\n+\t* tree-ssa-loop.c (tree_ssa_loop_init): Ditto.\n \t(tree_ssa_loop_im): Ditto.\n \t(tree_ssa_loop_unswitch): Ditto.\n \t(tree_vectorize): Ditto.\n@@ -4916,92 +4916,92 @@\n \t(tree_ssa_loop_prefetch): Ditto.\n \t(tree_ssa_loop_ivopts): Ditto.\n \t(tree_ssa_loop_done): Ditto.\n-\t* gcc/predict.c (tree_estimate_probability): Ditto.\n-\t* gcc/recog.c (split_all_insns_noflow): Ditto.\n+\t* predict.c (tree_estimate_probability): Ditto.\n+\t* recog.c (split_all_insns_noflow): Ditto.\n \t(rest_of_handle_peephole2): Ditto.\n \t(rest_of_handle_split_all_insns): Ditto.\n-\t* gcc/tree-eh.c (lower_eh_constructs): Ditto.\n-\t* gcc/regmove.c (rest_of_handle_regmove): Ditto.\n+\t* tree-eh.c (lower_eh_constructs): Ditto.\n+\t* regmove.c (rest_of_handle_regmove): Ditto.\n \t(rest_of_handle_stack_adjustments): Ditto.\n-\t* gcc/local-alloc.c (rest_of_handle_local_alloc): Ditto.\n-\t* gcc/function.c (instantiate_virtual_regs): Ditto.\n+\t* local-alloc.c (rest_of_handle_local_alloc): Ditto.\n+\t* function.c (instantiate_virtual_regs): Ditto.\n \t(init_function_for_compilation): Ditto.\n \t(rest_of_handle_check_leaf_regs): Ditto.\n-\t* gcc/gcse.c (rest_of_handle_jump_bypass): Ditto.\n+\t* gcse.c (rest_of_handle_jump_bypass): Ditto.\n \t(rest_of_handle_gcse): Ditto.\n-\t* gcc/ipa-type-escape.c (type_escape_execute): Ditto.\n-\t* gcc/alias.c (rest_of_handle_cfg): Ditto.\n-\t* gcc/tree-if-conv.c (main_tree_if_conversion): Ditto.\n-\t* gcc/profile.c (rest_of_handle_branch_prob): Ditto.\n-\t* gcc/tree-ssa-phiopt.c (tree_ssa_phiopt): Ditto.\n-\t* gcc/rtl-factoring.c (rest_of_rtl_seqabstr): Ditto.\n-\t* gcc/bt-load.c (rest_of_handle_branch_target_load_optimize): Ditto\n-\t* gcc/tree-dfa.c (find_referenced_vars): Ditto.\n-\t* gcc/except.c (set_nothrow_function_flags): Ditto.\n+\t* ipa-type-escape.c (type_escape_execute): Ditto.\n+\t* alias.c (rest_of_handle_cfg): Ditto.\n+\t* tree-if-conv.c (main_tree_if_conversion): Ditto.\n+\t* profile.c (rest_of_handle_branch_prob): Ditto.\n+\t* tree-ssa-phiopt.c (tree_ssa_phiopt): Ditto.\n+\t* rtl-factoring.c (rest_of_rtl_seqabstr): Ditto.\n+\t* bt-load.c (rest_of_handle_branch_target_load_optimize): Ditto\n+\t* tree-dfa.c (find_referenced_vars): Ditto.\n+\t* except.c (set_nothrow_function_flags): Ditto.\n \t(convert_to_eh_region_ranges): Ditto.\n \t(rest_of_handle_eh): Ditto.\n-\t* gcc/emit-rtl.c (unshare_all_rtl): Ditto.\n+\t* emit-rtl.c (unshare_all_rtl): Ditto.\n \t(remove_unnecessary_notes): Ditto.\n-\t* gcc/except.h (set_nothrow_function_flags): Ditto.\n+\t* except.h (set_nothrow_function_flags): Ditto.\n \t(convert_to_eh_region_ranges): Ditto.\n-\t* gcc/cfgexpand.c (tree_expand_cfg): Ditto.\n-\t* gcc/tree-cfgcleanup.c (merge_phi_nodes): Ditto.\n-\t* gcc/tree-ssa-pre.c (do_pre): Ditto.\n+\t* cfgexpand.c (tree_expand_cfg): Ditto.\n+\t* tree-cfgcleanup.c (merge_phi_nodes): Ditto.\n+\t* tree-ssa-pre.c (do_pre): Ditto.\n \t(execute_fre): Ditto.\n-\t* gcc/cfgcleanup.c (rest_of_handle_jump): Ditto.\n+\t* cfgcleanup.c (rest_of_handle_jump): Ditto.\n \t(rest_of_handle_jump2): Ditto.\n-\t* gcc/tree-sra.c (tree_sra): Ditto.\n-\t* gcc/tree-mudflap.c (execute_mudflap_function_ops): Ditto.\n+\t* tree-sra.c (tree_sra): Ditto.\n+\t* tree-mudflap.c (execute_mudflap_function_ops): Ditto.\n \t(execute_mudflap_function_decls): Ditto.\n-\t* gcc/tree-ssa-copy.c (do_copy_prop): Ditto.\n+\t* tree-ssa-copy.c (do_copy_prop): Ditto.\n \t(do_store_copy_prop): Ditto.\n-\t* gcc/ipa-prop.h (ipcp_driver): Ditto.\n-\t* gcc/cfglayout.c (insn_locators_initialize): Ditto.\n-\t* gcc/tree-ssa-forwprop.c\n+\t* ipa-prop.h (ipcp_driver): Ditto.\n+\t* cfglayout.c (insn_locators_initialize): Ditto.\n+\t* tree-ssa-forwprop.c\n \t(tree_ssa_forward_propagate_single_use_vars): Ditto.\n-\t* gcc/cfglayout.h (insn_locators_initialize): Ditto.\n-\t* gcc/tree-ssa-dce.c (tree_ssa_dce): Ditto.\n-\t* gcc/tree-ssa.c (execute_early_warn_uninitialized): Ditto.\n+\t* cfglayout.h (insn_locators_initialize): Ditto.\n+\t* tree-ssa-dce.c (tree_ssa_dce): Ditto.\n+\t* tree-ssa.c (execute_early_warn_uninitialized): Ditto.\n \t(execute_late_warn_uninitialized): Ditto.\n-\t* gcc/rtl.h (cleanup_barriers): Ditto.\n+\t* rtl.h (cleanup_barriers): Ditto.\n \t(split_all_insns_noflow): Ditto.\n \t(purge_line_number_notes): Ditto.\n \t(unshare_all_rtl): Ditto.\n \t(remove_unnecessary_notes): Ditto.\n \t(recompute_reg_usage): Ditto.\n \t(variable_tracking_main): Ditto.\n-\t* gcc/integrate.c (emit_initial_value_sets): Ditto.\n-\t* gcc/integrate.h (emit_initial_value_sets): Ditto.\n-\t* gcc/tree-optimize.c (execute_free_datastructures): Ditto\n+\t* integrate.c (emit_initial_value_sets): Ditto.\n+\t* integrate.h (emit_initial_value_sets): Ditto.\n+\t* tree-optimize.c (execute_free_datastructures): Ditto\n \t(execute_free_cfg_annotations): Ditto.\n \t(execute_fixup_cfg): Ditto.\n \t(execute_cleanup_cfg_pre_ipa): Ditto.\n \t(execute_cleanup_cfg_post_optimizing): Ditto.\n \t(execute_init_datastructures): Ditto.\n-\t* gcc/tree-object-size.c (compute_object_sizes): Ditto.\n-\t* gcc/combine.c (rest_of_handle_combine): Ditto.\n-\t* gcc/tree-outof-ssa.c (rewrite_out_of_ssa): Ditto.\n-\t* gcc/bb-reorder.c (duplicate_computed_gotos): Ditto.\n+\t* tree-object-size.c (compute_object_sizes): Ditto.\n+\t* combine.c (rest_of_handle_combine): Ditto.\n+\t* tree-outof-ssa.c (rewrite_out_of_ssa): Ditto.\n+\t* bb-reorder.c (duplicate_computed_gotos): Ditto.\n \t(rest_of_handle_reorder_blocks): Ditto.\n \t(rest_of_handle_partition_blocks): Ditto.\n-\t* gcc/var-tracking.c (variable_tracking_main): Ditto.\n-\t* gcc/tree-profile.c (tree_profiling): Ditto.\n-\t* gcc/tree-vect-generic.c (expand_vector_operations): Ditto.\n-\t* gcc/reg-stack.c (rest_of_handle_stack_regs): Ditto.\n-\t* gcc/sched-rgn.c (rest_of_handle_sched): Ditto.\n+\t* var-tracking.c (variable_tracking_main): Ditto.\n+\t* tree-profile.c (tree_profiling): Ditto.\n+\t* tree-vect-generic.c (expand_vector_operations): Ditto.\n+\t* reg-stack.c (rest_of_handle_stack_regs): Ditto.\n+\t* sched-rgn.c (rest_of_handle_sched): Ditto.\n \t(rest_of_handle_sched2): Ditto.\n-\t* gcc/basic-block.h (free_bb_insn): Ditto.\n-\t* gcc/tree-ssa-structalias.c (ipa_pta_execute): Ditto.\n-\t* gcc/tree-cfg.c (execute_build_cfg): Ditto.\n+\t* basic-block.h (free_bb_insn): Ditto.\n+\t* tree-ssa-structalias.c (ipa_pta_execute): Ditto.\n+\t* tree-cfg.c (execute_build_cfg): Ditto.\n \t(remove_useless_stmts): Ditto.\n \t(split_critical_edges): Ditto.\n \t(execute_warn_function_return): Ditto.\n \t(execute_warn_function_noreturn): Ditto.\n-\t* gcc/tree-ssa-reassoc.c (execute_reassoc): Ditto.\n-\t* gcc/cfgrtl.c (free_bb_for_insn): Ditto.\n-\t* gcc/passes.c (execute_one_pass): Run additional\n+\t* tree-ssa-reassoc.c (execute_reassoc): Ditto.\n+\t* cfgrtl.c (free_bb_for_insn): Ditto.\n+\t* passes.c (execute_one_pass): Run additional\n \ttodos returned by execute function.\n-\t* gcc/tree-pass.h (struct tree_opt_pass): Make execute\n+\t* tree-pass.h (struct tree_opt_pass): Make execute\n \treturn a value.\n \n 2006-03-02  Richard Guenther  <rguenther@suse.de>\n@@ -6789,7 +6789,7 @@\n \n 2006-02-08  Nathan Sidwell  <nathan@codesourcery.com>\n \n-\t* gcc/config/m68k/lb1sf68.asm (__divsf3, __divdf3, __mulsf3,\n+\t* config/m68k/lb1sf68.asm (__divsf3, __divdf3, __mulsf3,\n \t__muldf3): Return a correctly signed zero.\n \n 2006-02-08  Paolo Bonzini  <bonzini@gnu.org>\n@@ -7629,7 +7629,7 @@\n \n 2006-01-31  Nathan Sidwell  <nathan@codesourcery.com>\n \n-\t* gcc/config/m68k/lb1sf68.asm: Use moveq to load small constants.\n+\t* config/m68k/lb1sf68.asm: Use moveq to load small constants.\n \n 2006-01-31  Richard Guenther  <rguenther@suse.de>\n \n@@ -8864,7 +8864,7 @@\n \n 2006-01-19  Paul Brook  <paul@codesourcery.com>\n \n-\t* gcc/config/arm/arm.c (arm_compute_func_type): Treat all functions\n+\t* config/arm/arm.c (arm_compute_func_type): Treat all functions\n \tas nothrow when unwinding tables are disabled.\n \n 2006-01-19  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>"}, {"sha": "bc3b40c10370ce69953e92dc4686a4cc0e82b1d5", "filename": "gcc/ChangeLog-2004", "status": "modified", "additions": 56, "deletions": 54, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d1988f99277ab1208a6d66f8aa27323b583b4c/gcc%2FChangeLog-2004", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d1988f99277ab1208a6d66f8aa27323b583b4c/gcc%2FChangeLog-2004", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2004?ref=a1d1988f99277ab1208a6d66f8aa27323b583b4c", "patch": "@@ -4937,7 +4937,7 @@\n \n 2004-11-16  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* gcc/cse.c (struct change_cc_mode_args): New structure.\n+\t* cse.c (struct change_cc_mode_args): New structure.\n \t(cse_change_cc_mode_insn): New function.\n \t(cse_change_cc_mode): Use validate_change to perfom changes.\n \t(cse_change_cc_mode_insns, cse_condition_code_reg):\n@@ -7681,10 +7681,10 @@\n \t(initelt): Only permit array_designator without '=', not \".foo\".\n \n 2004-10-25  Kenneth Zadeck <zadeck@naturalbridge.com>\n-\t* gcc/Makefile.in: removed ggc for cgraphunit.\n-\t* gcc/cgraph.c.dump_cgraph_node: removed static var analysis.\n-\t* gcc/cgraph.h: removed static var analysis data structures and calls.\n-\t* gcc/cgraphunit.c:\n+\t* Makefile.in: removed ggc for cgraphunit.\n+\t* cgraph.c.dump_cgraph_node: removed static var analysis.\n+\t* cgraph.h: removed static var analysis data structures and calls.\n+\t* cgraphunit.c:\n \tcgraph_mark_local_and_external_functions:changed name to\n \t\tcgraph_mark_local_functions\n \t(print_order,convert_UIDs_in_bitmap,new_static_vars_info,\n@@ -7696,10 +7696,10 @@\n \tclear_static_vars_maps,cgraph_propagate_bits,cgraph_characterize_statics):\n \tremoved.\n \t(cgraph_optimize,init_cgraph): removed calls to static vars analysis\n-\t* gcc/tree-dfa.c find_referenced_vars: removed call to static vars\n+\t* tree-dfa.c find_referenced_vars: removed call to static vars\n \tanalysis\n-\t* gcc/tree-flow.h static_vars_info: removed\n-\t* gcc/tree-ssa-operands.c (add_call_clobber_ops,add_call_read_ops):\n+\t* tree-flow.h static_vars_info: removed\n+\t* tree-ssa-operands.c (add_call_clobber_ops,add_call_read_ops):\n \tremoved calls to static vars analysis.\n \tget_call_expr_operands: removed callee variable.\n \n@@ -13030,8 +13030,9 @@\n \tadd_call_clobber_ops and add_call_read_ops.\n \t(add_call_clobber_ops, add_call_read_ops): Added code to reduce\n \tthe number of vdefs and vuses inserted based on analysis of global\n-\tvariables across calls.  * tree-dfa.c (find_referenced_vars):\n-\tNeeded to reset static var maps before each function is compiled.\n+\tvariables across calls.\n+\t* tree-dfa.c (find_referenced_vars): Needed to reset static\n+\tvar maps before each function is compiled.\n \t* cgraphunit.c:\n \t(static_vars_to_consider_by_tree,static_vars_to_consider_by_uid,\n \tstatic_vars_info,functions_to_static_vars_info,module_statics_escape,\n@@ -13052,12 +13053,13 @@\n \t(cgraph_expand_all_functions): Remove call to\n \tcgraph_mark_local_and_external_functions.\n \t(cgraph_optimize): Added driver to analyze static variables whose\n-\tscope is within the compilation unit.  * cgraph.h (struct\n-\tcgraph_local_info, GTY): Added statics_read, statics_written,\n-\tlocal, calls_read_all, calls_write_all, for_functions_valid.\n-\t(struct cgraph_node): Added next_cycle.  * cgraph.c\n-\t(dump_cgraph_node): Added print routines for new fields.  *\n-\tmakefile.in: macroized cgraph.h, added cgraphunit.c to the ggc\n+\tscope is within the compilation unit.\n+\t* cgraph.h (struct cgraph_local_info, GTY): Added\n+\tstatics_read, statics_written, local, calls_read_all,\n+\tcalls_write_all, for_functions_valid.  (struct cgraph_node):\n+\tAdded next_cycle.\n+\t* cgraph.c (dump_cgraph_node): Added print routines for new fields.\n+\t* makefile.in: macroized cgraph.h, added cgraphunit.c to the ggc\n \tlist.\n \n 2004-09-13  Joseph S. Myers  <jsm@polyomino.org.uk>\n@@ -13446,7 +13448,7 @@\n \tDo call strip_name_encoding before looking up entry in ID hash table.\n \t* config/t-darwin (darwin.o): Add target.h to dependencies.\n \n-\t* gcc/config/rs6000/rs6000.c (print_operand): Use fputs instead\n+\t* config/rs6000/rs6000.c (print_operand): Use fputs instead\n \tof fprintf for register names.\n \n \t* output.h (unlikely_section_label): Delete declaration.\n@@ -15545,11 +15547,11 @@\n \n 2004-09-02  Daniel Berlin  <dberlin@dberlin.org>\n \n-\t* gcc/common.opt: Rename ivcanon to tree-loop-ivcanon, tree-lim to\n+\t* common.opt: Rename ivcanon to tree-loop-ivcanon, tree-lim to\n \ttree-loop-im.\n-\t* gcc/tree-ssa-loop.c: Ditto\n-\t* gcc/tree-ssa-loop-ivcanon.c: Ditto\n-\t* gcc/doc/invoke.texi: Ditto.\n+\t* tree-ssa-loop.c: Ditto\n+\t* tree-ssa-loop-ivcanon.c: Ditto\n+\t* doc/invoke.texi: Ditto.\n \n 2004-09-02  Ziemowit Laski  <zlaski@apple.com>\n \n@@ -20621,7 +20623,7 @@\n \n 2004-08-03  Paul Brook  <paul@codesourcery.com>\n \n-\t* gcc/doc/install.texi: Document MPFR requirement.\n+\t* doc/install.texi: Document MPFR requirement.\n \n 2004-08-03  Maciej W. Rozycki  <macro@linux-mips.org>\n \n@@ -34461,7 +34463,7 @@\n \n 2004-05-06  Stuart Hastings  <stuart@apple.com>\n \n-\t* gcc/doc/invoke.texi: Restore -fgcse-after-reload doc from 1.421,\n+\t* doc/invoke.texi: Restore -fgcse-after-reload doc from 1.421,\n \tmistakenly clobbered by 1.423.\n \n 2004-05-06  Richard Sandiford  <rsandifo@redhat.com>\n@@ -34570,7 +34572,7 @@\n \t(arm_hard_regno_mode_ok): Only allow even reg pairs for ldrd.\n \t* config/arm/arm.h (TARGET_LDRD): Define.\n \t(EXTRA_CONSTRAINT_STR_ARM): Add 'Uy'.\n-\t* config/gcc/arm/arm.md (arm_movdi): Allow all valid memory operands.\n+\t* config/arm/arm.md (arm_movdi): Allow all valid memory operands.\n \tNew splitter for invalid doubleword loads.\n \t* config/arm/iwmmxt.md (iwmmxt_arm_movdi): Use Uy constraint.\n \t* config/arm/vfp.md (arm_movdi_vfp): Allow all valid memory operands.\n@@ -34648,7 +34650,7 @@\n \n 2004-05-04  Bernard Giroud  <bgiroud2@free.fr>\n \n-\t* gcc/gcc/vmsdbgout.c (vms_func_node, vms_func_ref): New.\n+\t* vmsdbgout.c (vms_func_node, vms_func_ref): New.\n \t(func_table): Change type from char ** to vms_func_ref.\n \t(write_rtnbeg):  Update to reflect func_table change.  Use\n \tfde->funcdef_number instead of rtnnum in output.\n@@ -35474,13 +35476,13 @@\n \tPR bootstrap/14992\n \t* gcc.c (init_gcc_specs): Test USE_LD_AS_NEEDED, not HAVE_LD_AS_NEEDED.\n \t* config/linux.h (USE_LD_AS_NEEDED): Define.\n-\t* gcc/config/alpha/linux.h (USE_LD_AS_NEEDED): Define.\n-\t* gcc/config/arm/linux-elf.h (USE_LD_AS_NEEDED): Define.\n-\t* gcc/config/rs6000/linux.h (USE_LD_AS_NEEDED): Define.\n-\t* gcc/config/rs6000/linux64.h (USE_LD_AS_NEEDED): Define.\n-\t* gcc/config/sh/linux.h (USE_LD_AS_NEEDED): Define.\n-\t* gcc/config/sparc/linux.h (USE_LD_AS_NEEDED): Define.\n-\t* gcc/config/sparc/linux64.h (USE_LD_AS_NEEDED): Define.\n+\t* config/alpha/linux.h (USE_LD_AS_NEEDED): Define.\n+\t* config/arm/linux-elf.h (USE_LD_AS_NEEDED): Define.\n+\t* config/rs6000/linux.h (USE_LD_AS_NEEDED): Define.\n+\t* config/rs6000/linux64.h (USE_LD_AS_NEEDED): Define.\n+\t* config/sh/linux.h (USE_LD_AS_NEEDED): Define.\n+\t* config/sparc/linux.h (USE_LD_AS_NEEDED): Define.\n+\t* config/sparc/linux64.h (USE_LD_AS_NEEDED): Define.\n \n 2004-04-22  Per Bothner  <per@bothner.com>\n \n@@ -35495,8 +35497,8 @@\n 2004-04-22  Jan Hubicka  <jh@suse.cz>\n \t    Mostafa Hagog <mustafa@il.ibm.com>\n \n-      * cfgloopmanip.c (scale_bbs_frequencies): Use RDIV macro\n-      * cfgloopanal.c (expected_loop_iterations): Change the return value\n+\t* cfgloopmanip.c (scale_bbs_frequencies): Use RDIV macro\n+\t* cfgloopanal.c (expected_loop_iterations): Change the return value\n \n 2004-04-22  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -36689,8 +36691,8 @@\n \n 2004-04-02  Gabor Loki <loki@inf.u-szeged.hu>\n \n-       * opts.c (decode_options): Do function inlining with very small\n-       max-inline-insns-* parameters when optimizing for size.\n+\t* opts.c (decode_options): Do function inlining with very small\n+\tmax-inline-insns-* parameters when optimizing for size.\n \n 2004-04-02  Vladimir Makarov  <vmakarov@redhat.com>\n \n@@ -39321,11 +39323,11 @@\n \n 2004-03-04  Stuart Hastings  <stuart@apple.com>\n \n-\t* gcc/doc/invoke.texi: Document -mlongcall for Darwin/PPC.\n+\t* doc/invoke.texi: Document -mlongcall for Darwin/PPC.\n \n 2004-03-04  Stuart Hastings  <stuart@apple.com>\n \n-\t* gcc/config/i386/darwin.h: Darwin/x86 doesn't support CPUs before\n+\t* config/i386/darwin.h: Darwin/x86 doesn't support CPUs before\n \t686, tell Darwin assembler to allow prefetch insns, non-empty def\n \tof SUBTARGET_OPTION_TRANSLATE_TABLE.\n \n@@ -39499,7 +39501,7 @@\n \n 2004-03-03  Stuart Hastings  <stuart@apple.com>\n \n-\t* gcc/config.gcc: Arrange for Darwin/x86 to build libgcc_eh.a.\n+\t* config.gcc: Arrange for Darwin/x86 to build libgcc_eh.a.\n \n 2004-03-03  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n@@ -39935,7 +39937,7 @@\n \n 2004-03-02  Loren James Rittle  <ljrittle@acm.org>\n \n-\t* gcc/doc/install.texi (*-*-freebsd*): Update target information.\n+\t* doc/install.texi (*-*-freebsd*): Update target information.\n \n 2004-03-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -40537,7 +40539,7 @@\n \tfunctions used to throttle the insn movement in first\n \tscheduling pass for SH.\n \n-\t* gcc/doc/tm.texi: Document TARGET_SCHED_INIT_GLOBAL and\n+\t* doc/tm.texi: Document TARGET_SCHED_INIT_GLOBAL and\n \tTARGET_SCHED_FINISH_GLOBAL.\n \n 2004-02-24  Alexandre Oliva  <aoliva@redhat.com>\n@@ -40618,7 +40620,7 @@\n \t2003-11-30  Alexandre Oliva  <aoliva@redhat.com>\n \t* config/frv/frv.c (int_2word_operand): Reject LABELs, SYMBOL_REFs\n \tand CONSTs in FDPIC mode.\n-\t* gcc/config.gcc (with_cpu): Default to fr400 on frv-*-*linux*.\n+\t* config.gcc (with_cpu): Default to fr400 on frv-*-*linux*.\n \t2003-11-29  Richard Sandiford  <rsandifo@redhat.com>\n \t* config/frv/frv.c (move_source_operand): Don't accept symbolic\n \tconstants.\n@@ -42321,7 +42323,7 @@\n \n 2004-02-11  Hartmut Penner  <hpenner@de.ibm.com>\n \n-\t* gcc/config/rs6000/rs6000.c (rs6000_override_options)\n+\t* config/rs6000/rs6000.c (rs6000_override_options)\n \tSet AltiVec ABI and vrsave as default for ppc64 linux.\n \t(init_cumulative_args): Post error, if try to return\n \tvalue in AltiVec register without enable AltiVec.\n@@ -45103,7 +45105,7 @@\n \n 2004-01-26  Fariborz Jahanian  <fjahanian@apple.com>\n \n-\t* gcc/config/rs6000/rs6000.md (save_stack_nonlocal):\n+\t* config/rs6000/rs6000.md (save_stack_nonlocal):\n \tUse adjust_address_nv directly with appropriate mode.\n \t(restore_stack_nonlocal): Ditto.\n \n@@ -46054,7 +46056,7 @@\n \n 2004-01-20  Hartmut Penner  <hpenner@de.ibm.com>\n \n-\t* gcc/config/rs6000/rs6000.c (function_arg) Handle\n+\t* config/rs6000/rs6000.c (function_arg) Handle\n \tvector register special in function without prototype.\n \t(function_arg_advance): Vector parameters get always\n \tGPRs allocated for the linux64 target.\n@@ -46502,8 +46504,8 @@\n \n \t* fixincl/inclhack.def (bad_lval): Sort file list.\n \tAdd many missing files up to Tru64 UNIX V5.1B.\n-\t* gcc/fixinc/tests/base/libgen.h: Renamed to ...\n-\t* gcc/fixinc/tests/base/dirent.h: ... this to match new file list\n+\t* fixinc/tests/base/libgen.h: Renamed to ...\n+\t* fixinc/tests/base/dirent.h: ... this to match new file list\n \torder.\n \n \t* fixinc/fixincl.x: Regenerate.\n@@ -46875,7 +46877,7 @@\n \n 2004-01-14  Hartmut Penner  <hpenner@de.ibm.com>\n \n-\t* gcc/config/rs6000/rs6000.c (rs6000_stack_info)\n+\t* config/rs6000/rs6000.c (rs6000_stack_info)\n \tCalculate always vrsave_mask if TARGET_ALTIVEC.\n \t(rs6000_emit_prologue): Emit code for vrsave\n \tonly if TARGET_ALTIVEC_VRSAVE.\n@@ -47151,21 +47153,21 @@\n 2004-01-12  Hartmut Penner  <hpenner@de.ibm.com>\n \n \tPR target/13534\n-\t* gcc/config/rs6000/rs6000.c (word_offset_memref_operand): New\n+\t* config/rs6000/rs6000.c (word_offset_memref_operand): New\n \tpredicate to handle 'ld' conform addresses.\n-\t* gcc/config/rs6000/rs6000.h (EXTRA_CONSTRAINT): New 'Y'\n+\t* config/rs6000/rs6000.h (EXTRA_CONSTRAINT): New 'Y'\n \tcontraint.\n \t(EXTRA_MEMORY_CONSTRAINT): Tell reload which constraint\n \tare memory contraints.\n-\t* gcc/config/rs6000/rs6000-protos.h (word_offset_memref_operand):\n+\t* config/rs6000/rs6000-protos.h (word_offset_memref_operand):\n \tNew prototype.\n-\t* gcc/config/rs6000/rs6000.md (*movdf_hardfloat64):\n+\t* config/rs6000/rs6000.md (*movdf_hardfloat64):\n \tChange 'o' to 'Y' constraint.\n \t(*movdf_softfloat64): Ditto.\n \n 2004-01-12  Bernardo Innocenti  <bernie@develer.com>\n \n-\t* gcc/config/m68k/m68k.md: Switch from the \"*...\" syntax to the\n+\t* config/m68k/m68k.md: Switch from the \"*...\" syntax to the\n \tbrace-enclosed syntax in all C output statements.\n \n 2004-01-12  David Edelsohn  <edelsohn@gnu.org>\n@@ -47485,7 +47487,7 @@\n \n 2004-01-08  Hartmut Penner  <hpenner@de.ibm.com>\n \n-\t* gcc/config/rs6000/rs6000.c (easy_vector_constant): Accept\n+\t* config/rs6000/rs6000.c (easy_vector_constant): Accept\n \tall vector constant loadable by vsplt*.\n \t(output_vec_const_move): Likewise.\n "}, {"sha": "243a99e3193fbd252096b941dbc8664fd89ca455", "filename": "gcc/ChangeLog-2005", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1d1988f99277ab1208a6d66f8aa27323b583b4c/gcc%2FChangeLog-2005", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1d1988f99277ab1208a6d66f8aa27323b583b4c/gcc%2FChangeLog-2005", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2005?ref=a1d1988f99277ab1208a6d66f8aa27323b583b4c", "patch": "@@ -1417,7 +1417,7 @@\n \n 2005-12-14  Richard Sandiford  <richard@codesourcery.com>\n \n-\t* gcc/config/arm/arm.md: Provide a big-endian version of the\n+\t* config/arm/arm.md: Provide a big-endian version of the\n \t(zero_extend:SI (subreg:QI ...)) splitter.\n \n 2005-12-14  J\"orn Rennecke <joern.rennecke@st.com>\n@@ -2038,7 +2038,7 @@\n \n 2005-12-07  Richard Sandiford  <richard@codesourcery.com>\n \n-\t* gcc/reload.c (push_secondary_reload): Fix typo:\n+\t* reload.c (push_secondary_reload): Fix typo:\n \ts/insn_constraint/scratch_constraint/.\n \n 2005-12-07  Richard Sandiford  <richard@codesourcery.com>\n@@ -4153,7 +4153,7 @@\n \t(_Unwind_Stop_Fn): New typedef.\n \t(_Unwind_ForcedUnwind): Declare.\n \t(_Unwind_Resume_or_Rethrow): Declare.\n-\t* gcc/config/arm/libunwind.S (UNWIND_WRAPER): Add nargs\n+\t* config/arm/libunwind.S (UNWIND_WRAPER): Add nargs\n \targument.  Adjust.\n \t(_Unwind_Resume_or_Rethrow, _Unwind_ForcedUnwind): New.\n \t* config/arm/unwind-arm.c (UCB_FORCED_STOP_FN)\n@@ -5021,8 +5021,8 @@\n 2005-11-04  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR fortran/18452\n-\t* gcc/c.opt: Add a -lang-fortran option.\n-\t* gcc/c-opts.c: Add a lang_fortran flag.\n+\t* c.opt: Add a -lang-fortran option.\n+\t* c-opts.c: Add a lang_fortran flag.\n \t(c_common_init_options): Handling the -lang-fortran option.\n \t(c_common_handle_option): Add a case for Fortran options in\n \tpreprocessing. Remove cases for -ffixed-form and\n@@ -13571,10 +13571,10 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-06-29  Stuart Hastings  <stuart@apple.com>\n \n-\t* gcc/config/i386/mmintrin.h: Mark vector intrinsics always_inline.\n-\t* gcc/config/i386/emmintrin.h: Likewise.\n-\t* gcc/config/i386/pmmintrin.h: Likewise.\n-\t* gcc/config/i386/xmmintrin.h: Likewise.\n+\t* config/i386/mmintrin.h: Mark vector intrinsics always_inline.\n+\t* config/i386/emmintrin.h: Likewise.\n+\t* config/i386/pmmintrin.h: Likewise.\n+\t* config/i386/xmmintrin.h: Likewise.\n \t\t\t\t\t\n 2005-06-29  Steve Ellcey  <sje@cup.hp.com>\n \n@@ -13686,7 +13686,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \t* hooks.c (hook_constcharptr_tree_tree_null,\n \thook_constcharptr_int_tree_null,\n \thook_constcharptr_int_tree_tree_null): Likewise.\n-\t* gcc/doc/tm.texi (TARGET_INVALID_CONVERSION,\n+\t* doc/tm.texi (TARGET_INVALID_CONVERSION,\n \tTARGET_INVALID_UNARY_OP, TARGET_INVALID_BINARY_OP): Document.\n \t* c-convert.c (convert): Use invalid_conversion hook.\n \t* c-typeck.c (build_unary_op): Use invalid_unary_op hook.\n@@ -26399,7 +26399,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-04-01  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n \n-\t* gcc/config/vax/vax.md: Spellcheck, fix whitespace.\n+\t* config/vax/vax.md: Spellcheck, fix whitespace.\n \n 2005-04-01  Ian Lance Taylor  <ian@airs.com>\n \n@@ -26989,8 +26989,8 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-03-31  Paolo Bonzini  <bonzini@gnu.org>\n \n-\t* gcc/configure.ac (TL_AC_GNU_MAKE_GCC_LIB_PATH): Remove.\n-\t* gcc/configure: Regenerate.\n+\t* configure.ac (TL_AC_GNU_MAKE_GCC_LIB_PATH): Remove.\n+\t* configure: Regenerate.\n \n 2005-03-30  Alan Modra  <amodra@bigpond.net.au>\n \n@@ -32186,7 +32186,7 @@ Older entries for 2005 can be found in ChangeLog-2005.\n \n 2005-02-09  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n-\t* gcc/haifa-sched.c (schedule_block): Make queued sched group\n+\t* haifa-sched.c (schedule_block): Make queued sched group\n \tinsns return to ready list in the next turn.\n \n 2005-02-09  Richard Guenther  <rguenth@gcc.gnu.org>"}]}