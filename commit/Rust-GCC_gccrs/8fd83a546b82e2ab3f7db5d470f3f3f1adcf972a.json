{"sha": "8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZkODNhNTQ2YjgyZTJhYjNmN2RiNWQ0NzBmM2YzZjFhZGNmOTcyYQ==", "commit": {"author": {"name": "Alexander Ivchenko", "email": "alexander.ivchenko@intel.com", "date": "2014-09-23T07:17:19Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-09-23T07:17:19Z"}, "message": "AVX-512. Add masked vunpck[lh]pd.\n\ngcc/\n\t* config/i386/sse.md\n\t(define_insn \"avx_unpckhpd256<mask_name>\"): Add masking.\n\t(define_insn \"avx512vl_unpckhpd128_mask\"): New.\n\t(define_expand \"avx_movddup256<mask_name>\"): Add masking.\n\t(define_expand \"avx_unpcklpd256<mask_name>\"): Ditto.\n\t(define_insn \"*avx_unpcklpd256<mask_name>\"): Ditto.\n\t(define_insn \"avx512vl_unpcklpd128_mask\"): New.\n\n\nCo-Authored-By: Andrey Turetskiy <andrey.turetskiy@intel.com>\nCo-Authored-By: Anna Tikhonova <anna.tikhonova@intel.com>\nCo-Authored-By: Ilya Tocar <ilya.tocar@intel.com>\nCo-Authored-By: Ilya Verbin <ilya.verbin@intel.com>\nCo-Authored-By: Kirill Yukhin <kirill.yukhin@intel.com>\nCo-Authored-By: Maxim Kuznetsov <maxim.kuznetsov@intel.com>\nCo-Authored-By: Michael Zolotukhin <michael.v.zolotukhin@intel.com>\n\nFrom-SVN: r215493", "tree": {"sha": "fd0ca679a0c20b12dc8a8df1b03c1c874d0c0621", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd0ca679a0c20b12dc8a8df1b03c1c874d0c0621"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a/comments", "author": null, "committer": null, "parents": [{"sha": "9a79452d4cad6c34e9ff7c4370157bb1d6ad8869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a79452d4cad6c34e9ff7c4370157bb1d6ad8869", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a79452d4cad6c34e9ff7c4370157bb1d6ad8869"}], "stats": {"total": 83, "additions": 66, "deletions": 17}, "files": [{"sha": "059284827757b5752af04b58cec3739864cf2d37", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a", "patch": "@@ -1,3 +1,20 @@\n+2014-09-23  Alexander Ivchenko  <alexander.ivchenko@intel.com>\n+\t    Maxim Kuznetsov  <maxim.kuznetsov@intel.com>\n+\t    Anna Tikhonova  <anna.tikhonova@intel.com>\n+\t    Ilya Tocar  <ilya.tocar@intel.com>\n+\t    Andrey Turetskiy  <andrey.turetskiy@intel.com>\n+\t    Ilya Verbin  <ilya.verbin@intel.com>\n+\t    Kirill Yukhin  <kirill.yukhin@intel.com>\n+\t    Michael Zolotukhin  <michael.v.zolotukhin@intel.com>\n+\n+\t* config/i386/sse.md\n+\t(define_insn \"avx_unpckhpd256<mask_name>\"): Add masking.\n+\t(define_insn \"avx512vl_unpckhpd128_mask\"): New.\n+\t(define_expand \"avx_movddup256<mask_name>\"): Add masking.\n+\t(define_expand \"avx_unpcklpd256<mask_name>\"): Ditto.\n+\t(define_insn \"*avx_unpcklpd256<mask_name>\"): Ditto.\n+\t(define_insn \"avx512vl_unpcklpd128_mask\"): New.\n+\n 2014-09-22  Joseph Myers  <joseph@codesourcery.com>\n \n \t* doc/tm.texi.in (LIBGCC2_LONG_DOUBLE_TYPE_SIZE): Remove."}, {"sha": "ab2d3b18409a353c3a6d79b5a1ff416384fa3285", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 49, "deletions": 17, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=8fd83a546b82e2ab3f7db5d470f3f3f1adcf972a", "patch": "@@ -7081,16 +7081,16 @@\n    (set_attr \"mode\" \"V8DF\")])\n \n ;; Recall that the 256-bit unpck insns only shuffle within their lanes.\n-(define_insn \"avx_unpckhpd256\"\n-  [(set (match_operand:V4DF 0 \"register_operand\" \"=x\")\n+(define_insn \"avx_unpckhpd256<mask_name>\"\n+  [(set (match_operand:V4DF 0 \"register_operand\" \"=v\")\n \t(vec_select:V4DF\n \t  (vec_concat:V8DF\n-\t    (match_operand:V4DF 1 \"register_operand\" \"x\")\n-\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \"xm\"))\n+\t    (match_operand:V4DF 1 \"register_operand\" \"v\")\n+\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \"vm\"))\n \t  (parallel [(const_int 1) (const_int 5)\n \t\t     (const_int 3) (const_int 7)])))]\n-  \"TARGET_AVX\"\n-  \"vunpckhpd\\t{%2, %1, %0|%0, %1, %2}\"\n+  \"TARGET_AVX && <mask_avx512vl_condition>\"\n+  \"vunpckhpd\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"V4DF\")])\n@@ -7124,6 +7124,22 @@\n })\n \n \n+(define_insn \"avx512vl_unpckhpd128_mask\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=v\")\n+\t(vec_merge:V2DF\n+\t  (vec_select:V2DF\n+\t    (vec_concat:V4DF\n+\t      (match_operand:V2DF 1 \"register_operand\" \"v\")\n+\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"vm\"))\n+\t    (parallel [(const_int 1) (const_int 3)]))\n+\t  (match_operand:V2DF 3 \"vector_move_operand\" \"0C\")\n+\t  (match_operand:QI 4 \"register_operand\" \"Yk\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vunpckhpd\\t{%2, %1, %0%{%4%}%N3|%0%{%4%}%N3, %1, %2}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"V2DF\")])\n+\n (define_expand \"vec_interleave_highv2df\"\n   [(set (match_operand:V2DF 0 \"register_operand\")\n \t(vec_select:V2DF\n@@ -7204,38 +7220,38 @@\n    (set_attr \"mode\" \"V8DF\")])\n \n ;; Recall that the 256-bit unpck insns only shuffle within their lanes.\n-(define_expand \"avx_movddup256\"\n+(define_expand \"avx_movddup256<mask_name>\"\n   [(set (match_operand:V4DF 0 \"register_operand\")\n \t(vec_select:V4DF\n \t  (vec_concat:V8DF\n \t    (match_operand:V4DF 1 \"nonimmediate_operand\")\n \t    (match_dup 1))\n \t  (parallel [(const_int 0) (const_int 4)\n \t\t     (const_int 2) (const_int 6)])))]\n-  \"TARGET_AVX\")\n+  \"TARGET_AVX && <mask_avx512vl_condition>\")\n \n-(define_expand \"avx_unpcklpd256\"\n+(define_expand \"avx_unpcklpd256<mask_name>\"\n   [(set (match_operand:V4DF 0 \"register_operand\")\n \t(vec_select:V4DF\n \t  (vec_concat:V8DF\n \t    (match_operand:V4DF 1 \"register_operand\")\n \t    (match_operand:V4DF 2 \"nonimmediate_operand\"))\n \t  (parallel [(const_int 0) (const_int 4)\n \t\t     (const_int 2) (const_int 6)])))]\n-  \"TARGET_AVX\")\n+  \"TARGET_AVX && <mask_avx512vl_condition>\")\n \n-(define_insn \"*avx_unpcklpd256\"\n-  [(set (match_operand:V4DF 0 \"register_operand\"         \"=x,x\")\n+(define_insn \"*avx_unpcklpd256<mask_name>\"\n+  [(set (match_operand:V4DF 0 \"register_operand\"         \"=v,v\")\n \t(vec_select:V4DF\n \t  (vec_concat:V8DF\n-\t    (match_operand:V4DF 1 \"nonimmediate_operand\" \" x,m\")\n-\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \"xm,1\"))\n+\t    (match_operand:V4DF 1 \"nonimmediate_operand\" \" v,m\")\n+\t    (match_operand:V4DF 2 \"nonimmediate_operand\" \"vm,1\"))\n \t  (parallel [(const_int 0) (const_int 4)\n \t\t     (const_int 2) (const_int 6)])))]\n-  \"TARGET_AVX\"\n+  \"TARGET_AVX && <mask_avx512vl_condition>\"\n   \"@\n-   vunpcklpd\\t{%2, %1, %0|%0, %1, %2}\n-   vmovddup\\t{%1, %0|%0, %1}\"\n+   vunpcklpd\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\n+   vmovddup\\t{%1, %0<mask_operand3>|%0<mask_operand3>, %1}\"\n   [(set_attr \"type\" \"sselog\")\n    (set_attr \"prefix\" \"vex\")\n    (set_attr \"mode\" \"V4DF\")])\n@@ -7268,6 +7284,22 @@\n   operands[4] = gen_reg_rtx (V4DFmode);\n })\n \n+(define_insn \"avx512vl_unpcklpd128_mask\"\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=v\")\n+\t(vec_merge:V2DF\n+\t  (vec_select:V2DF\n+\t    (vec_concat:V4DF\n+\t      (match_operand:V2DF 1 \"register_operand\" \"v\")\n+\t      (match_operand:V2DF 2 \"nonimmediate_operand\" \"vm\"))\n+\t    (parallel [(const_int 0) (const_int 2)]))\n+\t  (match_operand:V2DF 3 \"vector_move_operand\" \"0C\")\n+\t  (match_operand:QI 4 \"register_operand\" \"Yk\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vunpcklpd\\t{%2, %1, %0%{%4%}%N3|%0%{%4%}%N3, %1, %2}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix\" \"evex\")\n+   (set_attr \"mode\" \"V2DF\")])\n+\n (define_expand \"vec_interleave_lowv2df\"\n   [(set (match_operand:V2DF 0 \"register_operand\")\n \t(vec_select:V2DF"}]}