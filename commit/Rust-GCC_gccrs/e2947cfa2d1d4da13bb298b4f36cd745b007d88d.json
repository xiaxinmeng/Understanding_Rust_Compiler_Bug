{"sha": "e2947cfa2d1d4da13bb298b4f36cd745b007d88d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTI5NDdjZmEyZDFkNGRhMTNiYjI5OGI0ZjM2Y2Q3NDViMDA3ZDg4ZA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2020-01-18T03:36:03Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2020-01-18T03:36:03Z"}, "message": "PR93234 INQUIRE on pre-assigned files of ROUND and SIGN properties\n\n\tPR libfortran/93234\n\t* io/unit.c (set_internal_unit): Set round and sign flags\n\tcorrectly.\n\n\t* gfortran.dg/inquire_pre.f90: New test.", "tree": {"sha": "27af90f4da481d5ceeb85f4142de83fec5139759", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27af90f4da481d5ceeb85f4142de83fec5139759"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2947cfa2d1d4da13bb298b4f36cd745b007d88d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2947cfa2d1d4da13bb298b4f36cd745b007d88d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2947cfa2d1d4da13bb298b4f36cd745b007d88d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/comments", "author": null, "committer": null, "parents": [{"sha": "92030203c1d284ccaed0037864262ff9181cf965", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92030203c1d284ccaed0037864262ff9181cf965", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92030203c1d284ccaed0037864262ff9181cf965"}], "stats": {"total": 95, "additions": 87, "deletions": 8}, "files": [{"sha": "9eacb7f568f2a82f775c549041ab6abe009c57c0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e2947cfa2d1d4da13bb298b4f36cd745b007d88d", "patch": "@@ -1,3 +1,8 @@\n+2020-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/93234\n+\t* gfortran.dg/inquire_pre.f90: New test.\n+\n 2020-01-17  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/93290"}, {"sha": "c75248b4db7f8810f903bf3e357ad0c329bf2eba", "filename": "gcc/testsuite/gfortran.dg/inquire_pre.f90", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_pre.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_pre.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Finquire_pre.f90?ref=e2947cfa2d1d4da13bb298b4f36cd745b007d88d", "patch": "@@ -0,0 +1,68 @@\n+! { dg-do run }\n+! PR93234 Inquire by UNIT on preopened unit failed on ROUND= and SIGN=\n+program inquire_browse\n+implicit none\n+integer                              :: ios\n+character(len=256)                   :: message\n+   !==============================================================================================\n+      character(len=20)              :: name           ; namelist/inquire/name\n+      integer                        :: unit           ; namelist/inquire/unit\n+      integer                        :: id             ; namelist/inquire/id\n+   !==============================================================================================\n+      integer                        :: recl           ; namelist/inquire/recl\n+      integer                        :: nextrec        ; namelist/inquire/nextrec\n+      integer                        :: pos            ; namelist/inquire/pos\n+      integer                        :: size           ; namelist/inquire/size\n+   !==============================================================================================\n+   !  ACCESS    =  SEQUENTIAL  |  DIRECT       |  STREAM\n+      character(len=20)              :: access         ; namelist/inquire/access\n+      character(len=20)              :: sequential     ; namelist/inquire/sequential\n+      character(len=20)              :: stream         ; namelist/inquire/stream\n+      character(len=20)              :: direct         ; namelist/inquire/direct\n+   !  ACTION    =  READ        | WRITE         |  READWRITE\n+      character(len=20)              :: action         ; namelist/inquire/action\n+      character(len=20)              :: read           ; namelist/inquire/read\n+      character(len=20)              :: write          ; namelist/inquire/write\n+      character(len=20)              :: readwrite      ; namelist/inquire/readwrite\n+   !  FORM      =  FORMATTED   |  UNFORMATTED\n+      cHaracter(len=20)              :: form           ; namelist/inquire/form\n+      character(len=20)              :: formatted      ; namelist/inquire/formatted\n+      character(len=20)              :: unformatted    ; namelist/inquire/unformatted\n+   !  POSITION  =  ASIS        |  REWIND       |  APPEND\n+      character(len=20)              :: position       ; namelist/inquire/position\n+   !==============================================================================================\n+      character(len=20)              :: blank          ; namelist/inquire/blank\n+      character(len=20)              :: decimal        ; namelist/inquire/decimal\n+      character(len=20)              :: sign           ; namelist/inquire/sign\n+      character(len=20)              :: round          ; namelist/inquire/round\n+      character(len=20)              :: delim          ; namelist/inquire/delim\n+      character(len=20)              :: encoding       ; namelist/inquire/encoding\n+      character(len=20)              :: pad            ; namelist/inquire/pad\n+   !==============================================================================================\n+      logical                        :: named          ; namelist/inquire/named\n+      logical                        :: opened         ; namelist/inquire/opened\n+      logical                        :: exist          ; namelist/inquire/exist\n+      integer                        :: number         ; namelist/inquire/number\n+      logical                        :: pending        ; namelist/inquire/pending\n+      character(len=20)              :: asynchronous   ; namelist/inquire/asynchronous\n+   !==============================================================================================\n+   unit=5\n+   !!include \"setunit_and_open.inc\"\n+   inquire(unit=unit,sign=sign)\n+   inquire(unit=unit,round=round)\n+         inquire(unit=unit,                                                                              &\n+     &   recl=recl,nextrec=nextrec,pos=pos,size=size,                                                    &\n+     &   name=name,position=position,                                                                    &\n+     &   form=form,formatted=formatted,unformatted=unformatted,                                          &\n+     &   access=access,sequential=sequential,direct=direct,stream=stream,                                &\n+     &   action=action,read=read,write=write,readwrite=readwrite,                                        &\n+     &   blank=blank,decimal=decimal,delim=delim,encoding=encoding,pad=pad,                              &\n+     &   named=named,opened=opened,exist=exist,number=number,pending=pending,asynchronous=asynchronous,  &\n+     &   iostat=ios,err=999,iomsg=message)\n+999  continue\n+     if(ios.eq.0)then\n+        !write(*,nml=inquire,delim='none')\n+     else\n+        stop 1\n+     endif\n+end program inquire_browse"}, {"sha": "f546ef872eaf5f91646d7d07432ef5e1aa605851", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e2947cfa2d1d4da13bb298b4f36cd745b007d88d", "patch": "@@ -1,3 +1,9 @@\n+2020-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/93234\n+\t* io/unit.c (set_internal_unit): Set round and sign flags\n+\tcorrectly.\n+\n 2020-01-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/90374"}, {"sha": "0030d7e8701856630ad89194f6b02a749d3179fe", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2947cfa2d1d4da13bb298b4f36cd745b007d88d/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=e2947cfa2d1d4da13bb298b4f36cd745b007d88d", "patch": "@@ -514,12 +514,12 @@ set_internal_unit (st_parameter_dt *dtp, gfc_unit *iunit, int kind)\n   iunit->flags.form = FORM_FORMATTED;\n   iunit->flags.pad = PAD_YES;\n   iunit->flags.status = STATUS_UNSPECIFIED;\n-  iunit->flags.sign = SIGN_UNSPECIFIED;\n+  iunit->flags.sign = SIGN_PROCDEFINED;\n   iunit->flags.decimal = DECIMAL_POINT;\n   iunit->flags.delim = DELIM_UNSPECIFIED;\n   iunit->flags.encoding = ENCODING_DEFAULT;\n   iunit->flags.async = ASYNC_NO;\n-  iunit->flags.round = ROUND_UNSPECIFIED;\n+  iunit->flags.round = ROUND_PROCDEFINED;\n \n   /* Initialize the data transfer parameters.  */\n \n@@ -627,12 +627,12 @@ init_units (void)\n       u->flags.blank = BLANK_NULL;\n       u->flags.pad = PAD_YES;\n       u->flags.position = POSITION_ASIS;\n-      u->flags.sign = SIGN_UNSPECIFIED;\n+      u->flags.sign = SIGN_PROCDEFINED;\n       u->flags.decimal = DECIMAL_POINT;\n       u->flags.delim = DELIM_UNSPECIFIED;\n       u->flags.encoding = ENCODING_DEFAULT;\n       u->flags.async = ASYNC_NO;\n-      u->flags.round = ROUND_UNSPECIFIED;\n+      u->flags.round = ROUND_PROCDEFINED;\n       u->flags.share = SHARE_UNSPECIFIED;\n       u->flags.cc = CC_LIST;\n \n@@ -658,12 +658,12 @@ init_units (void)\n       u->flags.status = STATUS_OLD;\n       u->flags.blank = BLANK_NULL;\n       u->flags.position = POSITION_ASIS;\n-      u->flags.sign = SIGN_UNSPECIFIED;\n+      u->flags.sign = SIGN_PROCDEFINED;\n       u->flags.decimal = DECIMAL_POINT;\n       u->flags.delim = DELIM_UNSPECIFIED;\n       u->flags.encoding = ENCODING_DEFAULT;\n       u->flags.async = ASYNC_NO;\n-      u->flags.round = ROUND_UNSPECIFIED;\n+      u->flags.round = ROUND_PROCDEFINED;\n       u->flags.share = SHARE_UNSPECIFIED;\n       u->flags.cc = CC_LIST;\n \n@@ -689,11 +689,11 @@ init_units (void)\n       u->flags.status = STATUS_OLD;\n       u->flags.blank = BLANK_NULL;\n       u->flags.position = POSITION_ASIS;\n-      u->flags.sign = SIGN_UNSPECIFIED;\n+      u->flags.sign = SIGN_PROCDEFINED;\n       u->flags.decimal = DECIMAL_POINT;\n       u->flags.encoding = ENCODING_DEFAULT;\n       u->flags.async = ASYNC_NO;\n-      u->flags.round = ROUND_UNSPECIFIED;\n+      u->flags.round = ROUND_PROCDEFINED;\n       u->flags.share = SHARE_UNSPECIFIED;\n       u->flags.cc = CC_LIST;\n "}]}