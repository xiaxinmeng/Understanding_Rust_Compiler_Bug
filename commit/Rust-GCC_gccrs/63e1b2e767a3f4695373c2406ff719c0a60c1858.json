{"sha": "63e1b2e767a3f4695373c2406ff719c0a60c1858", "node_id": "C_kwDOANBUbNoAKDYzZTFiMmU3NjdhM2Y0Njk1MzczYzI0MDZmZjcxOWMwYTYwYzE4NTg", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-11-16T02:26:07Z"}, "committer": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2022-11-16T02:26:07Z"}, "message": "rtl: Try to remove EH edges after {pro,epi}logue generation [PR90259]\n\nAfter prologue and epilogue generation, the judgement on whether\none memory access onto stack frame may trap or not could change,\nsince we get more exact stack information by now.\n\nAs PR90259 shows, some memory access becomes impossible to trap\nany more after prologue and epilogue generation, it can make\nsubsequent optimization be able to remove it if safe, but it\nresults in unexpected control flow status due to REG_EH_REGION\nnote missing.\n\nThis patch proposes to try to remove EH edges with function\npurge_all_dead_edges after prologue and epilogue generation,\nit simplifies CFG as early as we can and don't need any fixup\nin downstream passes.\n\nCFG simplification result with PR90259's case as example:\n\n*before*\n\n   18: %1:TF=call [`__gcc_qdiv'] argc:0\n      REG_EH_REGION 0x2\n   77: NOTE_INSN_BASIC_BLOCK 3\n   19: NOTE_INSN_DELETED\n   20: NOTE_INSN_DELETED\n  110: [%31:SI+0x20]=%1:DF\n      REG_EH_REGION 0x2\n  116: NOTE_INSN_BASIC_BLOCK 4\n  111: [%31:SI+0x28]=%2:DF\n      REG_EH_REGION 0x2\n   22: NOTE_INSN_BASIC_BLOCK 5\n  108: %0:DF=[%31:SI+0x20]\n      REG_EH_REGION 0x2\n  117: NOTE_INSN_BASIC_BLOCK 6\n  109: %1:DF=[%31:SI+0x28]\n      REG_EH_REGION 0x2\n   79: NOTE_INSN_BASIC_BLOCK 7\n   26: [%31:SI+0x18]=%0:DF\n  104: pc=L69\n  105: barrier\n\n*after*\n\n   18: %1:TF=call [`__gcc_qdiv'] argc:0\n      REG_EH_REGION 0x2\n   77: NOTE_INSN_BASIC_BLOCK 3\n   19: NOTE_INSN_DELETED\n   20: NOTE_INSN_DELETED\n  110: [%31:SI+0x20]=%1:DF\n  111: [%31:SI+0x28]=%2:DF\n  108: %0:DF=[%31:SI+0x20]\n  109: %1:DF=[%31:SI+0x28]\n   26: [%31:SI+0x18]=%0:DF\n  104: pc=L69\n  105: barrier\n\n\tPR rtl-optimization/90259\n\ngcc/ChangeLog:\n\n\t* function.cc (rest_of_handle_thread_prologue_and_epilogue): Add\n\tparameter fun, and call function purge_all_dead_edges.\n\t(pass_thread_prologue_and_epilogue::execute): Name unamed parameter\n\tas fun, and use it for rest_of_handle_thread_prologue_and_epilogue.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.target/powerpc/pr90259.C: New.", "tree": {"sha": "90a3632d3bf10d138033381340bda2381f0d2db8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90a3632d3bf10d138033381340bda2381f0d2db8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63e1b2e767a3f4695373c2406ff719c0a60c1858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e1b2e767a3f4695373c2406ff719c0a60c1858", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63e1b2e767a3f4695373c2406ff719c0a60c1858", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63e1b2e767a3f4695373c2406ff719c0a60c1858/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdc34229c11ff955aa1a08fb3919327f3c1a4e8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdc34229c11ff955aa1a08fb3919327f3c1a4e8a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdc34229c11ff955aa1a08fb3919327f3c1a4e8a"}], "stats": {"total": 116, "additions": 113, "deletions": 3}, "files": [{"sha": "361aa5f7ed19a877b3080eb00f7cf7efac3b27c5", "filename": "gcc/function.cc", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b2e767a3f4695373c2406ff719c0a60c1858/gcc%2Ffunction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b2e767a3f4695373c2406ff719c0a60c1858/gcc%2Ffunction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.cc?ref=63e1b2e767a3f4695373c2406ff719c0a60c1858", "patch": "@@ -6546,7 +6546,7 @@ make_pass_leaf_regs (gcc::context *ctxt)\n }\n \n static unsigned int\n-rest_of_handle_thread_prologue_and_epilogue (void)\n+rest_of_handle_thread_prologue_and_epilogue (function *fun)\n {\n   /* prepare_shrink_wrap is sensitive to the block structure of the control\n      flow graph, so clean it up first.  */\n@@ -6563,6 +6563,13 @@ rest_of_handle_thread_prologue_and_epilogue (void)\n      Fix that up.  */\n   fixup_partitions ();\n \n+  /* After prologue and epilogue generation, the judgement on whether\n+     one memory access onto stack frame may trap or not could change,\n+     since we get more exact stack information by now.  So try to\n+     remove any EH edges here, see PR90259.  */\n+  if (fun->can_throw_non_call_exceptions)\n+    purge_all_dead_edges ();\n+\n   /* Shrink-wrapping can result in unreachable edges in the epilogue,\n      see PR57320.  */\n   cleanup_cfg (optimize ? CLEANUP_EXPENSIVE : 0);\n@@ -6631,9 +6638,9 @@ class pass_thread_prologue_and_epilogue : public rtl_opt_pass\n   {}\n \n   /* opt_pass methods: */\n-  unsigned int execute (function *) final override\n+  unsigned int execute (function * fun) final override\n     {\n-      return rest_of_handle_thread_prologue_and_epilogue ();\n+      return rest_of_handle_thread_prologue_and_epilogue (fun);\n     }\n \n }; // class pass_thread_prologue_and_epilogue"}, {"sha": "db75ac7fe02d550b7ab8274c067ccd26e93efa2d", "filename": "gcc/testsuite/g++.target/powerpc/pr90259.C", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63e1b2e767a3f4695373c2406ff719c0a60c1858/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpr90259.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63e1b2e767a3f4695373c2406ff719c0a60c1858/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpr90259.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Fpowerpc%2Fpr90259.C?ref=63e1b2e767a3f4695373c2406ff719c0a60c1858", "patch": "@@ -0,0 +1,103 @@\n+/* { dg-require-effective-target long_double_ibm128 } */\n+/* { dg-options \"-O2 -ffloat-store -fgcse -fnon-call-exceptions -fno-forward-propagate -fno-omit-frame-pointer -fstack-protector-all\" } */\n+/* { dg-add-options long_double_ibm128 } */\n+\n+/* Verify there is no ICE.  */\n+\n+template <int a> struct b\n+{\n+  static constexpr int c = a;\n+};\n+template <bool a> using d = b<a>;\n+struct e\n+{\n+  int f;\n+  int\n+  g ()\n+  {\n+    return __builtin_ceil (f / (long double) h);\n+  }\n+  float h;\n+};\n+template <typename, typename> using k = d<!bool ()>;\n+template <typename> class n\n+{\n+public:\n+  e ae;\n+  void af ();\n+};\n+template <typename l>\n+void\n+n<l>::af ()\n+{\n+  ae.g ();\n+}\n+template <bool> using m = int;\n+template <typename ag, typename ah, typename ai = m<k<ag, ah>::c>>\n+using aj = n<ai>;\n+struct o\n+{\n+  void\n+  af ()\n+  {\n+    al.af ();\n+  }\n+  aj<int, int> al;\n+};\n+template <typename> class am;\n+template <typename i> class ao\n+{\n+protected:\n+  static i *ap (int);\n+};\n+template <typename, typename> class p;\n+template <typename ar, typename i, typename... j> class p<ar (j...), i> : ao<i>\n+{\n+public:\n+  static ar\n+  as (const int &p1, j...)\n+  {\n+    (*ao<i>::ap (p1)) (j ()...);\n+  }\n+};\n+template <typename ar, typename... j> class am<ar (j...)>\n+{\n+  template <typename, typename> using av = int;\n+\n+public:\n+  template <typename i, typename = av<d<!bool ()>, void>,\n+\t    typename = av<i, void>>\n+  am (i);\n+  using aw = ar (*) (const int &, j...);\n+  aw ax;\n+};\n+template <typename ar, typename... j>\n+template <typename i, typename, typename>\n+am<ar (j...)>::am (i)\n+{\n+  ax = p<ar (j...), i>::as;\n+}\n+struct G\n+{\n+  void ba (am<void (o)>);\n+};\n+struct q\n+{\n+  q ()\n+  {\n+    G a;\n+    a.ba (r ());\n+  }\n+  struct r\n+  {\n+    void\n+    operator() (o p1)\n+    try\n+      {\n+\tp1.af ();\n+      }\n+    catch (int)\n+      {\n+      }\n+  };\n+} s;"}]}