{"sha": "d0ca0bcb2cc8291e2b4d8135fc623c40768b9642", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBjYTBiY2IyY2M4MjkxZTJiNGQ4MTM1ZmM2MjNjNDA3NjhiOTY0Mg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-12-19T11:24:49Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-12-19T11:24:49Z"}, "message": "re PR tree-optimization/42108 (50% performance regression)\n\n2009-12-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42108\n\t* tree-ssa-sccvn.c (last_vuse_ptr): New variable.\n\t(vn_reference_lookup_2): Update last seen VUSE.\n\t(vn_reference_lookup_3): Avoid updating last seen VUSE after\n\ttranslating.\n\t(visit_reference_op_load): Use last seen VUSE from the first\n\tlookup when entering into the table.\n\n\t* gfortran.dg/pr42108.f90: New testcase.\n\nFrom-SVN: r155360", "tree": {"sha": "b2745fd77ee90ccd6501acc10afa4c7477cba226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2745fd77ee90ccd6501acc10afa4c7477cba226"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a8572b62e71dc5b453f3390e4e9111b466201fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8572b62e71dc5b453f3390e4e9111b466201fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8572b62e71dc5b453f3390e4e9111b466201fc8"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "136083c4f5697e1e9d9dc44d37194f47aa648a32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0ca0bcb2cc8291e2b4d8135fc623c40768b9642", "patch": "@@ -1,3 +1,13 @@\n+2009-12-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42108\n+\t* tree-ssa-sccvn.c (last_vuse_ptr): New variable.\n+\t(vn_reference_lookup_2): Update last seen VUSE.\n+\t(vn_reference_lookup_3): Avoid updating last seen VUSE after\n+\ttranslating.\n+\t(visit_reference_op_load): Use last seen VUSE from the first\n+\tlookup when entering into the table.\n+\n 2009-12-19  Joern Rennecke  <amylaar@spamcop.net>\n \n \t* Makefile.in (PLUGIN_HEADERS): Add more headers."}, {"sha": "b97694b7d25f3b5e7d9105f089cacbe39693cad1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0ca0bcb2cc8291e2b4d8135fc623c40768b9642", "patch": "@@ -1,3 +1,8 @@\n+2009-12-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42108\n+\t* gfortran.dg/pr42108.f90: New testcase.\n+\n 2009-12-18  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/28300"}, {"sha": "e97dc3756f8c503892b00ee46a43d6295fb3ea1b", "filename": "gcc/testsuite/gfortran.dg/pr42108.f90", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr42108.f90?ref=d0ca0bcb2cc8291e2b4d8135fc623c40768b9642", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -fdump-tree-fre\" }\n+\n+subroutine  eval(foo1,foo2,foo3,foo4,x,n,nnd)\n+  implicit real*8 (a-h,o-z)\n+  dimension foo3(n),foo4(n),x(nnd)\n+  nw=0\n+  foo3(1)=foo2*foo4(1)\n+  do i=2,n\n+    foo3(i)=foo2*foo4(i)\n+    do  j=1,i-1\n+      temp=0.0d0\n+      jmini=j-i\n+      do  k=i,nnd,n\n+        temp=temp+(x(k)-x(k+jmini))**2\n+      end do\n+      temp = sqrt(temp+foo1)\n+      foo3(i)=foo3(i)+temp*foo4(j)\n+      foo3(j)=foo3(j)+temp*foo4(i)\n+    end do\n+  end do\n+end subroutine eval\n+\n+! There should be only one load from n left\n+\n+! { dg-final { scan-tree-dump-times \"\\\\*n_\" 1 \"fre\" } }\n+! { dg-final { cleanup-tree-dump \"fre\" } }"}, {"sha": "e91408775bb4291f5eaf5d3b119d04e3ce773415", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0ca0bcb2cc8291e2b4d8135fc623c40768b9642/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=d0ca0bcb2cc8291e2b4d8135fc623c40768b9642", "patch": "@@ -984,6 +984,8 @@ vn_reference_lookup_1 (vn_reference_t vr, vn_reference_t *vnresult)\n   return NULL_TREE;\n }\n \n+static tree *last_vuse_ptr;\n+\n /* Callback for walk_non_aliased_vuses.  Adjusts the vn_reference_t VR_\n    with the current VUSE and performs the expression lookup.  */\n \n@@ -994,6 +996,9 @@ vn_reference_lookup_2 (ao_ref *op ATTRIBUTE_UNUSED, tree vuse, void *vr_)\n   void **slot;\n   hashval_t hash;\n \n+  if (last_vuse_ptr)\n+    *last_vuse_ptr = vuse;\n+\n   /* Fixup vuse and hash.  */\n   vr->hashcode = vr->hashcode - iterative_hash_expr (vr->vuse, 0);\n   vr->vuse = SSA_VAL (vuse);\n@@ -1161,6 +1166,9 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_)\n \treturn (void *)-1;\n       *ref = r;\n \n+      /* Do not update last seen VUSE after translating.  */\n+      last_vuse_ptr = NULL;\n+\n       /* Keep looking for the adjusted *REF / VR pair.  */\n       return NULL;\n     }\n@@ -1961,7 +1969,13 @@ static bool\n visit_reference_op_load (tree lhs, tree op, gimple stmt)\n {\n   bool changed = false;\n-  tree result = vn_reference_lookup (op, gimple_vuse (stmt), true, NULL);\n+  tree last_vuse;\n+  tree result;\n+\n+  last_vuse = gimple_vuse (stmt);\n+  last_vuse_ptr = &last_vuse;\n+  result = vn_reference_lookup (op, gimple_vuse (stmt), true, NULL);\n+  last_vuse_ptr = NULL;\n \n   /* If we have a VCE, try looking up its operand as it might be stored in\n      a different type.  */\n@@ -2045,7 +2059,7 @@ visit_reference_op_load (tree lhs, tree op, gimple stmt)\n   else\n     {\n       changed = set_ssa_val_to (lhs, lhs);\n-      vn_reference_insert (op, lhs, gimple_vuse (stmt));\n+      vn_reference_insert (op, lhs, last_vuse);\n     }\n \n   return changed;"}]}