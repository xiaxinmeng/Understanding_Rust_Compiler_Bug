{"sha": "0e256a822b855ecae6b5ef593b30a7e2e522e6d1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGUyNTZhODIyYjg1NWVjYWU2YjVlZjU5M2IzMGE3ZTJlNTIyZTZkMQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2004-12-28T15:56:51Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2004-12-28T15:56:51Z"}, "message": "fold-const.c (fold_build_cleanup_point_expr): For a RETURN_EXPR...\n\n2004-12-28  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        * fold-const.c (fold_build_cleanup_point_expr): For a RETURN_EXPR,\n        we only need a cleanup point expression when the expression on the\n        left hand side of the MODIFIY_EXPR inside the return has side\n        effects.\n\nFrom-SVN: r92672", "tree": {"sha": "e87421c97610dec778e8bfad5e457ab9d38f46cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e87421c97610dec778e8bfad5e457ab9d38f46cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e256a822b855ecae6b5ef593b30a7e2e522e6d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e256a822b855ecae6b5ef593b30a7e2e522e6d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e256a822b855ecae6b5ef593b30a7e2e522e6d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e256a822b855ecae6b5ef593b30a7e2e522e6d1/comments", "author": null, "committer": null, "parents": [{"sha": "2b0729bafa0d29686bccee7b698782bec41544e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b0729bafa0d29686bccee7b698782bec41544e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b0729bafa0d29686bccee7b698782bec41544e5"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "ba2abe3d67d05bcd7d9afacc9419ac557da305d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e256a822b855ecae6b5ef593b30a7e2e522e6d1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e256a822b855ecae6b5ef593b30a7e2e522e6d1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0e256a822b855ecae6b5ef593b30a7e2e522e6d1", "patch": "@@ -1,3 +1,10 @@\n+2004-12-28  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\t* fold-const.c (fold_build_cleanup_point_expr): For a RETURN_EXPR,\n+\twe only need a cleanup point expression when the expression on the\n+\tleft hand side of the MODIFIY_EXPR inside the return has side\n+\teffects.\n+\n 2004-12-28  Dorit Naishlos  <dorit@il.ibm.com>\n \n \t* tree-vectorizer.c (vect_mark_relevant) First argument changed from"}, {"sha": "5006998352c6a6f97b37a8a6cd833bcc76cb4609", "filename": "gcc/fold-const.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e256a822b855ecae6b5ef593b30a7e2e522e6d1/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e256a822b855ecae6b5ef593b30a7e2e522e6d1/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0e256a822b855ecae6b5ef593b30a7e2e522e6d1", "patch": "@@ -10783,6 +10783,21 @@ fold_build_cleanup_point_expr (tree type, tree expr)\n      it with a cleanup point expression.  */\n   if (!TREE_SIDE_EFFECTS (expr))\n     return expr;\n+\n+  /* If the expression is a return, check to see if the expression inside the\n+     return has no side effects or the right hand side of the modify expression\n+     inside the return. If either don't have side effects set we don't need to\n+     wrap the expression in a cleanup point expression.  Note we don't check the\n+     left hand side of the modify because it should always be a return decl.  */\n+  if (TREE_CODE (expr) == RETURN_EXPR)\n+    {\n+      tree op = TREE_OPERAND (expr, 0);\n+      if (!op || !TREE_SIDE_EFFECTS (op))\n+        return expr;\n+      op = TREE_OPERAND (op, 1);\n+      if (!TREE_SIDE_EFFECTS (op))\n+        return expr;\n+    }\n   \n   return build1 (CLEANUP_POINT_EXPR, type, expr);\n }"}]}