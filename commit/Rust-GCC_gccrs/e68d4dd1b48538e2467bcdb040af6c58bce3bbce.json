{"sha": "e68d4dd1b48538e2467bcdb040af6c58bce3bbce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY4ZDRkZDFiNDg1MzhlMjQ2N2JjZGIwNDBhZjZjNThiY2UzYmJjZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2006-10-28T09:41:41Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2006-10-28T09:41:41Z"}, "message": "re PR target/29377 (Build for h8300-elf crashes on 64bit hosts due to int/HWI mismatch)\n\n        PR target/29377\n        * config/h8300/h8300.c (h8300_emit_stack_adjustment): Change \"size\"\n        argument to HOST_WIDE_INT.  Update function prototype.\n        (round_frame_size): Change return type to HOST_WIDE_INT.  Change\n        \"size\" argument to HOST_WIDE_INT.  Update function prototype.\n\nFrom-SVN: r118102", "tree": {"sha": "70a3afc3b8565ad9276c733481ad2e0403087956", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70a3afc3b8565ad9276c733481ad2e0403087956"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e68d4dd1b48538e2467bcdb040af6c58bce3bbce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68d4dd1b48538e2467bcdb040af6c58bce3bbce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e68d4dd1b48538e2467bcdb040af6c58bce3bbce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e68d4dd1b48538e2467bcdb040af6c58bce3bbce/comments", "author": null, "committer": null, "parents": [{"sha": "87ccbc5cdd38ffd76515d6c6df48d1680ff0b380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87ccbc5cdd38ffd76515d6c6df48d1680ff0b380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87ccbc5cdd38ffd76515d6c6df48d1680ff0b380"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "a0bdc8174a94df1751e4ad9fefbfc23b4e0b6cd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68d4dd1b48538e2467bcdb040af6c58bce3bbce/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68d4dd1b48538e2467bcdb040af6c58bce3bbce/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e68d4dd1b48538e2467bcdb040af6c58bce3bbce", "patch": "@@ -1,3 +1,11 @@\n+2006-10-28 Uros Bizjak <uros@kss-loka.si>\n+\n+\tPR target/29377\n+\t* config/h8300/h8300.c (h8300_emit_stack_adjustment): Change \"size\"\n+\targument to HOST_WIDE_INT.  Update function prototype.\n+\t(round_frame_size): Change return type to HOST_WIDE_INT.  Change\n+\t\"size\" argument to HOST_WIDE_INT.  Update function prototype.\n+\n 2006-10-28 Uros Bizjak <uros@kss-loka.si>\n \n \t* config/i386/i386.c (output_387_ffreep): Create output from a"}, {"sha": "215fbe3b7f47b313d2b333f7b9b9d41a65dc96f8", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e68d4dd1b48538e2467bcdb040af6c58bce3bbce/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e68d4dd1b48538e2467bcdb040af6c58bce3bbce/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=e68d4dd1b48538e2467bcdb040af6c58bce3bbce", "patch": "@@ -83,8 +83,8 @@ static int h8300_interrupt_function_p (tree);\n static int h8300_saveall_function_p (tree);\n static int h8300_monitor_function_p (tree);\n static int h8300_os_task_function_p (tree);\n-static void h8300_emit_stack_adjustment (int, unsigned int);\n-static int round_frame_size (int);\n+static void h8300_emit_stack_adjustment (int, HOST_WIDE_INT);\n+static HOST_WIDE_INT round_frame_size (HOST_WIDE_INT);\n static unsigned int compute_saved_regs (void);\n static void push (int);\n static void pop (int);\n@@ -510,7 +510,7 @@ byte_reg (rtx x, int b)\n    SIZE to adjust the stack pointer.  */\n \n static void\n-h8300_emit_stack_adjustment (int sign, unsigned int size)\n+h8300_emit_stack_adjustment (int sign, HOST_WIDE_INT size)\n {\n   /* If the frame size is 0, we don't have anything to do.  */\n   if (size == 0)\n@@ -546,8 +546,8 @@ h8300_emit_stack_adjustment (int sign, unsigned int size)\n \n /* Round up frame size SIZE.  */\n \n-static int\n-round_frame_size (int size)\n+static HOST_WIDE_INT\n+round_frame_size (HOST_WIDE_INT size)\n {\n   return ((size + STACK_BOUNDARY / BITS_PER_UNIT - 1)\n \t  & -STACK_BOUNDARY / BITS_PER_UNIT);"}]}