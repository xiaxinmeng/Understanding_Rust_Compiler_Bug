{"sha": "662ef0f5c62f781c4d20406ee11333c63bac8eef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyZWYwZjVjNjJmNzgxYzRkMjA0MDZlZTExMzMzYzYzYmFjOGVlZg==", "commit": {"author": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-06-12T14:06:19Z"}, "committer": {"name": "Tobias Schl\u00fcter", "email": "tobi@gcc.gnu.org", "date": "2004-06-12T14:06:19Z"}, "message": "re PR fortran/12841 (passing null to a subroutine)\n\nfortran/\nPR fortran/12841\n* interface.c (compare_parameter, compare_actual_formal): Don't\ncheck types and array shapes for NULL()\n* trans-expr.c (conv_function_call): No double indirection for\nNULL()\n( I had accidentally committed the interface.c part before)\n\ntestuite/\nPR fortran/12841\n* gfortran.fortran-torture/execute/null_arg.f90: New test.\n\nFrom-SVN: r83028", "tree": {"sha": "3f6f1f97c22b8ddc8b4db0231e42b95da118a586", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f6f1f97c22b8ddc8b4db0231e42b95da118a586"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/662ef0f5c62f781c4d20406ee11333c63bac8eef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662ef0f5c62f781c4d20406ee11333c63bac8eef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662ef0f5c62f781c4d20406ee11333c63bac8eef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662ef0f5c62f781c4d20406ee11333c63bac8eef/comments", "author": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TobiSchluter", "id": 11887541, "node_id": "MDQ6VXNlcjExODg3NTQx", "avatar_url": "https://avatars.githubusercontent.com/u/11887541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TobiSchluter", "html_url": "https://github.com/TobiSchluter", "followers_url": "https://api.github.com/users/TobiSchluter/followers", "following_url": "https://api.github.com/users/TobiSchluter/following{/other_user}", "gists_url": "https://api.github.com/users/TobiSchluter/gists{/gist_id}", "starred_url": "https://api.github.com/users/TobiSchluter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TobiSchluter/subscriptions", "organizations_url": "https://api.github.com/users/TobiSchluter/orgs", "repos_url": "https://api.github.com/users/TobiSchluter/repos", "events_url": "https://api.github.com/users/TobiSchluter/events{/privacy}", "received_events_url": "https://api.github.com/users/TobiSchluter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aef80f8e0b9f3a18e2afb6d10dcdcc26683d34d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aef80f8e0b9f3a18e2afb6d10dcdcc26683d34d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aef80f8e0b9f3a18e2afb6d10dcdcc26683d34d"}], "stats": {"total": 12544, "additions": 3358, "deletions": 9186}, "files": [{"sha": "e7b63f7e2a9405d77c98de20dd1b720ba2f6abc0", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=662ef0f5c62f781c4d20406ee11333c63bac8eef", "patch": "@@ -1,3 +1,11 @@\n+2004-06-12  Tobias Schlueter  <tobias.schlueter@physik.uni-muenchen.de>\n+\n+\tPR fortran/12841\n+\t* interface.c (compare_parameter, compare_actual_formal): Don't\n+\tcheck types and array shapes for NULL()\n+\t* trans-expr.c (conv_function_call): No double indirection for\n+\tNULL() \n+\n 2004-06-09  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* trans-expr.c (gfc_conv_cst_int_power): Compute"}, {"sha": "9b11dd86a919fef71cb86ce0906c9adbd5a20cba", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=662ef0f5c62f781c4d20406ee11333c63bac8eef", "patch": "@@ -1923,7 +1923,7 @@ generate_local_decl (gfc_symbol * sym)\n       /* warn for unused variables, but not if they're inside a common\n \t block.  */\n       else if (warn_unused_variable && !sym->attr.in_common)\n-        warning (\"unused variable `%s'\", sym->name);\n+\twarning (\"unused variable `%s'\", sym->name);\n     }\n }\n "}, {"sha": "e4953f6f080548dfd5093baf25e3fb2beec90a99", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=662ef0f5c62f781c4d20406ee11333c63bac8eef", "patch": "@@ -1100,10 +1100,12 @@ gfc_conv_function_call (gfc_se * se, gfc_symbol * sym,\n \t  if (argss == gfc_ss_terminator)\n             {\n \t      gfc_conv_expr_reference (&parmse, arg->expr);\n-              if (formal && formal->sym->attr.pointer)\n+              if (formal && formal->sym->attr.pointer\n+\t\t  && arg->expr->expr_type != EXPR_NULL)\n                 {\n                   /* Scalar pointer dummy args require an extra level of\n-                     indirection.  */\n+                     indirection. The null pointer already contains\n+\t\t     this level of indirection.  */\n                   parmse.expr = gfc_build_addr_expr (NULL, parmse.expr);\n                 }\n             }"}, {"sha": "5fc949191377ba41ce2402140435f85ee9c386e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3332, "deletions": 9183, "changes": 12515, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=662ef0f5c62f781c4d20406ee11333c63bac8eef"}, {"sha": "67e65f81f6c50178652f5ee1e2d02460dbf3f800", "filename": "gcc/testsuite/gfortran.fortran-torture/execute/nullarg.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnullarg.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/662ef0f5c62f781c4d20406ee11333c63bac8eef/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnullarg.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.fortran-torture%2Fexecute%2Fnullarg.f90?ref=662ef0f5c62f781c4d20406ee11333c63bac8eef", "patch": "@@ -0,0 +1,13 @@\n+! This is the testcase from PR 12841. We used to report a type/rank mismatch\n+! when passing NULL() as an argument to a function.\n+   MODULE T\n+   PUBLIC :: A\n+   CONTAINS\n+   SUBROUTINE A(B)\n+   REAL, POINTER :: B\n+   IF (ASSOCIATED(B)) CALL ABORT()\n+   END SUBROUTINE A\n+   END MODULE T\n+   USE T\n+   CALL A(NULL())\n+   END"}]}