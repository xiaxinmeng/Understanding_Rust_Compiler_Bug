{"sha": "3c017635c9012494cd6aaf7af315653aa06261bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MwMTc2MzVjOTAxMjQ5NGNkNmFhZjdhZjMxNTY1M2FhMDYyNjFiZg==", "commit": {"author": {"name": "John Hornkvist", "email": "john@toastedmarshmallow.com", "date": "2001-10-09T05:32:16Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2001-10-09T05:32:16Z"}, "message": "Implement Darwin PowerPC ABI.\n\n2001-10-09  John Hornkvist  <john@toastedmarshmallow.com>\n\n        Implement Darwin PowerPC ABI.\n        * configure.in: Handle powerpc-*-darwin*.\n        * Makefile.am: Set source files for POWERPC_DARWIN.\n        * configure: Rebuilt.\n        * Makefile.in: Rebuilt.\n        * include/ffi.h.in: Define FFI_DARWIN and FFI_DEFAULT_ABI for\n        POWERPC_DARWIN.\n        * src/powerpc/darwin.S: New file.\n        * src/powerpc/ffi_darwin.c: New file.\n\nFrom-SVN: r46112", "tree": {"sha": "e872be1458ecdb81d65503255a3ddc0bd2303b3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e872be1458ecdb81d65503255a3ddc0bd2303b3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c017635c9012494cd6aaf7af315653aa06261bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c017635c9012494cd6aaf7af315653aa06261bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c017635c9012494cd6aaf7af315653aa06261bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c017635c9012494cd6aaf7af315653aa06261bf/comments", "author": null, "committer": null, "parents": [{"sha": "8d2134aaa807dd616cedf770763a09682fc1769c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2134aaa807dd616cedf770763a09682fc1769c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2134aaa807dd616cedf770763a09682fc1769c"}], "stats": {"total": 818, "additions": 695, "deletions": 123}, "files": [{"sha": "0a15860b8c65df2d189cb1842a9acb4ddd03433c", "filename": "libffi/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -1,3 +1,15 @@\n+2001-10-09  John Hornkvist  <john@toastedmarshmallow.com>\n+\n+\tImplement Darwin PowerPC ABI.\n+\t* configure.in: Handle powerpc-*-darwin*.\n+\t* Makefile.am: Set source files for POWERPC_DARWIN.\n+\t* configure: Rebuilt.\n+\t* Makefile.in: Rebuilt.\n+\t* include/ffi.h.in: Define FFI_DARWIN and FFI_DEFAULT_ABI for\n+\tPOWERPC_DARWIN.\n+\t* src/powerpc/darwin.S: New file.\n+\t* src/powerpc/ffi_darwin.c: New file.\n+\n 2001-10-07  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* src/x86/ffi.c: Fix spelling error of \"separate\" as \"seperate\"."}, {"sha": "0e5705157a357bc2db29f9eae9d13ede010c5622", "filename": "libffi/Makefile.am", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.am?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -97,6 +97,7 @@ TARGET_SRC_ALPHA = src/alpha/ffi.c src/alpha/osf.S\n TARGET_SRC_IA64 = src/ia64/ffi.c src/ia64/unix.S\n TARGET_SRC_M68K = src/m68k/ffi.c src/m68k/sysv.S\n TARGET_SRC_POWERPC = src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S\n+TARGET_SRC_POWERPC_DARWIN = src/powerpc/ffi_darwin.c src/powerpc/darwin.S\n TARGET_SRC_ARM =  src/arm/sysv.S src/arm/ffi.c\n \n ##libffi_la_SOURCES = src/debug.c src/prep_cif.c src/types.c $(TARGET_SRC_@TARGET@)\n@@ -139,6 +140,10 @@ if POWERPC\n libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC)\n libfficonvenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC)\n endif\n+if POWERPC_DARWIN\n+libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC_DARWIN)\n+libfficonvenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC_DARWIN)\n+endif\n if ARM\n libffi_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n libfficonvenience_la_SOURCES = $(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)"}, {"sha": "8a6f068ee7f430c0dba26c925f9c2d4019aeafb8", "filename": "libffi/Makefile.in", "status": "modified", "additions": 49, "deletions": 39, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FMakefile.in?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -168,6 +168,7 @@ TARGET_SRC_ALPHA = src/alpha/ffi.c src/alpha/osf.S\n TARGET_SRC_IA64 = src/ia64/ffi.c src/ia64/unix.S\n TARGET_SRC_M68K = src/m68k/ffi.c src/m68k/sysv.S\n TARGET_SRC_POWERPC = src/powerpc/ffi.c src/powerpc/sysv.S src/powerpc/ppc_closure.S\n+TARGET_SRC_POWERPC_DARWIN = src/powerpc/ffi_darwin.c src/powerpc/darwin.S\n TARGET_SRC_ARM = src/arm/sysv.S src/arm/ffi.c\n \n libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n@@ -182,6 +183,7 @@ libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n @IA64_TRUE@libffi_la_SOURCES = @IA64_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_IA64)\n @M68K_TRUE@libffi_la_SOURCES = @M68K_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_M68K)\n @POWERPC_TRUE@libffi_la_SOURCES = @POWERPC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC)\n+@POWERPC_DARWIN_TRUE@libffi_la_SOURCES = @POWERPC_DARWIN_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC_DARWIN)\n @ARM_TRUE@libffi_la_SOURCES = @ARM_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n @MIPS_GCC_TRUE@libfficonvenience_la_SOURCES = @MIPS_GCC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_GCC)\n @MIPS_SGI_TRUE@libfficonvenience_la_SOURCES = @MIPS_SGI_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_MIPS_SGI)\n@@ -192,6 +194,7 @@ libffi_la_common_SOURCES = src/debug.c src/prep_cif.c src/types.c \\\n @IA64_TRUE@libfficonvenience_la_SOURCES = @IA64_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_IA64)\n @M68K_TRUE@libfficonvenience_la_SOURCES = @M68K_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_M68K)\n @POWERPC_TRUE@libfficonvenience_la_SOURCES = @POWERPC_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC)\n+@POWERPC_DARWIN_TRUE@libfficonvenience_la_SOURCES = @POWERPC_DARWIN_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_POWERPC_DARWIN)\n @ARM_TRUE@libfficonvenience_la_SOURCES = @ARM_TRUE@$(libffi_la_common_SOURCES) $(TARGET_SRC_ARM)\n \n AM_CFLAGS = -fexceptions\n@@ -212,71 +215,78 @@ LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n libfficonvenience_la_LDFLAGS = \n libfficonvenience_la_LIBADD = \n-@SPARC_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@SPARC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@SPARC_TRUE@src/sparc/ffi.lo src/sparc/v8.lo src/sparc/v9.lo\n-@MIPS_SGI_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo \\\n-@MIPS_SGI_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n-@MIPS_SGI_TRUE@src/java_raw_api.lo src/mips/ffi.lo src/mips/o32.lo \\\n-@MIPS_SGI_TRUE@src/mips/n32.lo\n-@IA64_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@IA64_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@IA64_TRUE@src/ia64/ffi.lo src/ia64/unix.lo\n+@X86_WIN32_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo \\\n+@X86_WIN32_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n+@X86_WIN32_TRUE@src/java_raw_api.lo src/x86/ffi.lo src/x86/win32.lo\n+@X86_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@X86_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@X86_TRUE@src/x86/ffi.lo src/x86/sysv.lo\n @MIPS_GCC_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo \\\n @MIPS_GCC_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n @MIPS_GCC_TRUE@src/java_raw_api.lo src/mips/ffi.lo src/mips/o32.lo \\\n @MIPS_GCC_TRUE@src/mips/n32.lo\n-@M68K_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@M68K_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@M68K_TRUE@src/m68k/ffi.lo src/m68k/sysv.lo\n-@ALPHA_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@ALPHA_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@ALPHA_TRUE@src/alpha/ffi.lo src/alpha/osf.lo\n-@X86_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@X86_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@X86_TRUE@src/x86/ffi.lo src/x86/sysv.lo\n @ARM_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @ARM_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @ARM_TRUE@src/arm/sysv.lo src/arm/ffi.lo\n @POWERPC_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo \\\n @POWERPC_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n @POWERPC_TRUE@src/java_raw_api.lo src/powerpc/ffi.lo \\\n @POWERPC_TRUE@src/powerpc/sysv.lo src/powerpc/ppc_closure.lo\n-@X86_WIN32_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo \\\n-@X86_WIN32_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n-@X86_WIN32_TRUE@src/java_raw_api.lo src/x86/ffi.lo src/x86/win32.lo\n-libffi_la_LIBADD = \n-@SPARC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@SPARC_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @SPARC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @SPARC_TRUE@src/sparc/ffi.lo src/sparc/v8.lo src/sparc/v9.lo\n-@MIPS_SGI_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@MIPS_SGI_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@MIPS_SGI_TRUE@src/mips/ffi.lo src/mips/o32.lo src/mips/n32.lo\n-@IA64_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@IA64_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@IA64_TRUE@src/ia64/ffi.lo src/ia64/unix.lo\n-@MIPS_GCC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@MIPS_GCC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@MIPS_GCC_TRUE@src/mips/ffi.lo src/mips/o32.lo src/mips/n32.lo\n-@M68K_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@M68K_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @M68K_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @M68K_TRUE@src/m68k/ffi.lo src/m68k/sysv.lo\n-@ALPHA_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@ALPHA_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @ALPHA_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @ALPHA_TRUE@src/alpha/ffi.lo src/alpha/osf.lo\n+@IA64_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@IA64_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@IA64_TRUE@src/ia64/ffi.lo src/ia64/unix.lo\n+@POWERPC_DARWIN_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo \\\n+@POWERPC_DARWIN_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n+@POWERPC_DARWIN_TRUE@src/java_raw_api.lo src/powerpc/ffi_darwin.lo \\\n+@POWERPC_DARWIN_TRUE@src/powerpc/darwin.lo\n+@MIPS_SGI_TRUE@libfficonvenience_la_OBJECTS =  src/debug.lo \\\n+@MIPS_SGI_TRUE@src/prep_cif.lo src/types.lo src/raw_api.lo \\\n+@MIPS_SGI_TRUE@src/java_raw_api.lo src/mips/ffi.lo src/mips/o32.lo \\\n+@MIPS_SGI_TRUE@src/mips/n32.lo\n+libffi_la_LIBADD = \n+@X86_WIN32_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@X86_WIN32_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@X86_WIN32_TRUE@src/x86/ffi.lo src/x86/win32.lo\n @X86_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo src/types.lo \\\n @X86_TRUE@src/raw_api.lo src/java_raw_api.lo src/x86/ffi.lo \\\n @X86_TRUE@src/x86/sysv.lo\n+@MIPS_GCC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@MIPS_GCC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@MIPS_GCC_TRUE@src/mips/ffi.lo src/mips/o32.lo src/mips/n32.lo\n @ARM_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo src/types.lo \\\n @ARM_TRUE@src/raw_api.lo src/java_raw_api.lo src/arm/sysv.lo \\\n @ARM_TRUE@src/arm/ffi.lo\n @POWERPC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n @POWERPC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n @POWERPC_TRUE@src/powerpc/ffi.lo src/powerpc/sysv.lo \\\n @POWERPC_TRUE@src/powerpc/ppc_closure.lo\n-@X86_WIN32_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n-@X86_WIN32_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n-@X86_WIN32_TRUE@src/x86/ffi.lo src/x86/win32.lo\n+@SPARC_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@SPARC_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@SPARC_TRUE@src/sparc/ffi.lo src/sparc/v8.lo src/sparc/v9.lo\n+@M68K_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@M68K_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@M68K_TRUE@src/m68k/ffi.lo src/m68k/sysv.lo\n+@ALPHA_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@ALPHA_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@ALPHA_TRUE@src/alpha/ffi.lo src/alpha/osf.lo\n+@IA64_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@IA64_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@IA64_TRUE@src/ia64/ffi.lo src/ia64/unix.lo\n+@POWERPC_DARWIN_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@POWERPC_DARWIN_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@POWERPC_DARWIN_TRUE@src/powerpc/ffi_darwin.lo src/powerpc/darwin.lo\n+@MIPS_SGI_TRUE@libffi_la_OBJECTS =  src/debug.lo src/prep_cif.lo \\\n+@MIPS_SGI_TRUE@src/types.lo src/raw_api.lo src/java_raw_api.lo \\\n+@MIPS_SGI_TRUE@src/mips/ffi.lo src/mips/o32.lo src/mips/n32.lo\n noinst_PROGRAMS =  ffitest$(EXEEXT)\n PROGRAMS =  $(noinst_PROGRAMS)\n \n@@ -294,7 +304,7 @@ fficonfig.h.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = gtar\n+TAR = gnutar\n GZIP_ENV = --best\n SOURCES = $(libfficonvenience_la_SOURCES) $(libffi_la_SOURCES) $(ffitest_SOURCES)\n OBJECTS = $(libfficonvenience_la_OBJECTS) $(libffi_la_OBJECTS) $(ffitest_OBJECTS)"}, {"sha": "43d675639c7159139b9ee0a258acbce8d1e1d26b", "filename": "libffi/configure", "status": "modified", "additions": 74, "deletions": 62, "changes": 136, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -2381,6 +2381,7 @@ ia64*-*-*) TARGET=IA64; TARGETDIR=ia64;;\n m68k-*-linux*) TARGET=M68K; TARGETDIR=m68k;;\n powerpc-*-linux* | powerpc-*-sysv*) TARGET=POWERPC; TARGETDIR=powerpc;;\n powerpc-*-beos*) TARGET=POWERPC; TARGETDIR=powerpc;;\n+powerpc-*-darwin*) TARGET=POWERPC_DARWIN; TARGETDIR=powerpc;;\n arm*-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n esac\n \n@@ -2471,6 +2472,15 @@ else\n fi\n \n \n+if test x$TARGET = xPOWERPC_DARWIN; then\n+  POWERPC_DARWIN_TRUE=\n+  POWERPC_DARWIN_FALSE='#'\n+else\n+  POWERPC_DARWIN_TRUE='#'\n+  POWERPC_DARWIN_FALSE=\n+fi\n+\n+\n if test x$TARGET = xARM; then\n   ARM_TRUE=\n   ARM_FALSE='#'\n@@ -2480,7 +2490,7 @@ else\n fi\n \n echo $ac_n \"checking how to run the C preprocessor\"\"... $ac_c\" 1>&6\n-echo \"configure:2484: checking how to run the C preprocessor\" >&5\n+echo \"configure:2494: checking how to run the C preprocessor\" >&5\n # On Suns, sometimes $CPP names a directory.\n if test -n \"$CPP\" && test -d \"$CPP\"; then\n   CPP=\n@@ -2495,13 +2505,13 @@ else\n   # On the NeXT, cc -E runs the code through the compiler's parser,\n   # not just through cpp.\n   cat > conftest.$ac_ext <<EOF\n-#line 2499 \"configure\"\n+#line 2509 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2505: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2515: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2512,13 +2522,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -E -traditional-cpp\"\n   cat > conftest.$ac_ext <<EOF\n-#line 2516 \"configure\"\n+#line 2526 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2522: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2532: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2529,13 +2539,13 @@ else\n   rm -rf conftest*\n   CPP=\"${CC-cc} -nologo -E\"\n   cat > conftest.$ac_ext <<EOF\n-#line 2533 \"configure\"\n+#line 2543 \"configure\"\n #include \"confdefs.h\"\n #include <assert.h>\n Syntax Error\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2539: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2549: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   :\n@@ -2560,20 +2570,20 @@ fi\n echo \"$ac_t\"\"$CPP\" 1>&6\n \n echo $ac_n \"checking for ANSI C header files\"\"... $ac_c\" 1>&6\n-echo \"configure:2564: checking for ANSI C header files\" >&5\n+echo \"configure:2574: checking for ANSI C header files\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_stdc'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2569 \"configure\"\n+#line 2579 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n #include <stdarg.h>\n #include <string.h>\n #include <float.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:2577: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:2587: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -2590,7 +2600,7 @@ rm -f conftest*\n if test $ac_cv_header_stdc = yes; then\n   # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 2594 \"configure\"\n+#line 2604 \"configure\"\n #include \"confdefs.h\"\n #include <string.h>\n EOF\n@@ -2608,7 +2618,7 @@ fi\n if test $ac_cv_header_stdc = yes; then\n   # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n cat > conftest.$ac_ext <<EOF\n-#line 2612 \"configure\"\n+#line 2622 \"configure\"\n #include \"confdefs.h\"\n #include <stdlib.h>\n EOF\n@@ -2629,7 +2639,7 @@ if test \"$cross_compiling\" = yes; then\n   :\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2633 \"configure\"\n+#line 2643 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n #define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n@@ -2640,7 +2650,7 @@ if (XOR (islower (i), ISLOWER (i)) || toupper (i) != TOUPPER (i)) exit(2);\n exit (0); }\n \n EOF\n-if { (eval echo configure:2644: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2654: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   :\n else\n@@ -2666,12 +2676,12 @@ fi\n for ac_func in memcpy\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2670: checking for $ac_func\" >&5\n+echo \"configure:2680: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2675 \"configure\"\n+#line 2685 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2694,7 +2704,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2698: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2708: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2721,19 +2731,19 @@ done\n # The Ultrix 4.2 mips builtin alloca declared by alloca.h only works\n # for constant arguments.  Useless!\n echo $ac_n \"checking for working alloca.h\"\"... $ac_c\" 1>&6\n-echo \"configure:2725: checking for working alloca.h\" >&5\n+echo \"configure:2735: checking for working alloca.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_alloca_h'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2730 \"configure\"\n+#line 2740 \"configure\"\n #include \"confdefs.h\"\n #include <alloca.h>\n int main() {\n char *p = alloca(2 * sizeof(int));\n ; return 0; }\n EOF\n-if { (eval echo configure:2737: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2747: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_header_alloca_h=yes\n else\n@@ -2754,12 +2764,12 @@ EOF\n fi\n \n echo $ac_n \"checking for alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:2758: checking for alloca\" >&5\n+echo \"configure:2768: checking for alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_alloca_works'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2763 \"configure\"\n+#line 2773 \"configure\"\n #include \"confdefs.h\"\n \n #ifdef __GNUC__\n@@ -2787,7 +2797,7 @@ int main() {\n char *p = (char *) alloca(1);\n ; return 0; }\n EOF\n-if { (eval echo configure:2791: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2801: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_func_alloca_works=yes\n else\n@@ -2819,12 +2829,12 @@ EOF\n \n \n echo $ac_n \"checking whether alloca needs Cray hooks\"\"... $ac_c\" 1>&6\n-echo \"configure:2823: checking whether alloca needs Cray hooks\" >&5\n+echo \"configure:2833: checking whether alloca needs Cray hooks\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_os_cray'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2828 \"configure\"\n+#line 2838 \"configure\"\n #include \"confdefs.h\"\n #if defined(CRAY) && ! defined(CRAY2)\n webecray\n@@ -2849,12 +2859,12 @@ echo \"$ac_t\"\"$ac_cv_os_cray\" 1>&6\n if test $ac_cv_os_cray = yes; then\n for ac_func in _getb67 GETB67 getb67; do\n   echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:2853: checking for $ac_func\" >&5\n+echo \"configure:2863: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2858 \"configure\"\n+#line 2868 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -2877,7 +2887,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:2881: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:2891: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -2904,15 +2914,15 @@ done\n fi\n \n echo $ac_n \"checking stack direction for C alloca\"\"... $ac_c\" 1>&6\n-echo \"configure:2908: checking stack direction for C alloca\" >&5\n+echo \"configure:2918: checking stack direction for C alloca\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_stack_direction'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_c_stack_direction=0\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2916 \"configure\"\n+#line 2926 \"configure\"\n #include \"confdefs.h\"\n find_stack_direction ()\n {\n@@ -2931,7 +2941,7 @@ main ()\n   exit (find_stack_direction() < 0);\n }\n EOF\n-if { (eval echo configure:2935: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2945: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_stack_direction=1\n else\n@@ -2954,15 +2964,15 @@ fi\n \n \n echo $ac_n \"checking size of short\"\"... $ac_c\" 1>&6\n-echo \"configure:2958: checking size of short\" >&5\n+echo \"configure:2968: checking size of short\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_short'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 2966 \"configure\"\n+#line 2976 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n main()\n@@ -2973,7 +2983,7 @@ main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:2977: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:2987: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_sizeof_short=`cat conftestval`\n else\n@@ -2993,15 +3003,15 @@ EOF\n \n \n echo $ac_n \"checking size of int\"\"... $ac_c\" 1>&6\n-echo \"configure:2997: checking size of int\" >&5\n+echo \"configure:3007: checking size of int\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_int'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3005 \"configure\"\n+#line 3015 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n main()\n@@ -3012,7 +3022,7 @@ main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:3016: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3026: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_sizeof_int=`cat conftestval`\n else\n@@ -3032,15 +3042,15 @@ EOF\n \n \n echo $ac_n \"checking size of long\"\"... $ac_c\" 1>&6\n-echo \"configure:3036: checking size of long\" >&5\n+echo \"configure:3046: checking size of long\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3044 \"configure\"\n+#line 3054 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n main()\n@@ -3051,7 +3061,7 @@ main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:3055: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3065: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_sizeof_long=`cat conftestval`\n else\n@@ -3071,15 +3081,15 @@ EOF\n \n \n echo $ac_n \"checking size of long long\"\"... $ac_c\" 1>&6\n-echo \"configure:3075: checking size of long long\" >&5\n+echo \"configure:3085: checking size of long long\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long_long'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3083 \"configure\"\n+#line 3093 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n main()\n@@ -3090,7 +3100,7 @@ main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:3094: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3104: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_sizeof_long_long=`cat conftestval`\n else\n@@ -3110,15 +3120,15 @@ EOF\n \n \n echo $ac_n \"checking size of float\"\"... $ac_c\" 1>&6\n-echo \"configure:3114: checking size of float\" >&5\n+echo \"configure:3124: checking size of float\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_float'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3122 \"configure\"\n+#line 3132 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n main()\n@@ -3129,7 +3139,7 @@ main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:3133: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3143: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_sizeof_float=`cat conftestval`\n else\n@@ -3149,15 +3159,15 @@ EOF\n \n \n echo $ac_n \"checking size of double\"\"... $ac_c\" 1>&6\n-echo \"configure:3153: checking size of double\" >&5\n+echo \"configure:3163: checking size of double\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_double'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3161 \"configure\"\n+#line 3171 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n main()\n@@ -3168,7 +3178,7 @@ main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:3172: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3182: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_sizeof_double=`cat conftestval`\n else\n@@ -3188,15 +3198,15 @@ EOF\n \n \n echo $ac_n \"checking size of long double\"\"... $ac_c\" 1>&6\n-echo \"configure:3192: checking size of long double\" >&5\n+echo \"configure:3202: checking size of long double\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_long_double'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3200 \"configure\"\n+#line 3210 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n main()\n@@ -3207,7 +3217,7 @@ main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:3211: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3221: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_sizeof_long_double=`cat conftestval`\n else\n@@ -3228,15 +3238,15 @@ EOF\n \n \n echo $ac_n \"checking size of void *\"\"... $ac_c\" 1>&6\n-echo \"configure:3232: checking size of void *\" >&5\n+echo \"configure:3242: checking size of void *\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_sizeof_void_p'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3240 \"configure\"\n+#line 3250 \"configure\"\n #include \"confdefs.h\"\n #include <stdio.h>\n main()\n@@ -3247,7 +3257,7 @@ main()\n   exit(0);\n }\n EOF\n-if { (eval echo configure:3251: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3261: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_sizeof_void_p=`cat conftestval`\n else\n@@ -3267,14 +3277,14 @@ EOF\n \n \n echo $ac_n \"checking whether byte ordering is bigendian\"\"... $ac_c\" 1>&6\n-echo \"configure:3271: checking whether byte ordering is bigendian\" >&5\n+echo \"configure:3281: checking whether byte ordering is bigendian\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_c_bigendian'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   ac_cv_c_bigendian=unknown\n # See if sys/param.h defines the BYTE_ORDER macro.\n cat > conftest.$ac_ext <<EOF\n-#line 3278 \"configure\"\n+#line 3288 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/param.h>\n@@ -3285,11 +3295,11 @@ int main() {\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:3289: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3299: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   # It does; now see whether it defined to BIG_ENDIAN or not.\n cat > conftest.$ac_ext <<EOF\n-#line 3293 \"configure\"\n+#line 3303 \"configure\"\n #include \"confdefs.h\"\n #include <sys/types.h>\n #include <sys/param.h>\n@@ -3300,7 +3310,7 @@ int main() {\n #endif\n ; return 0; }\n EOF\n-if { (eval echo configure:3304: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3314: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   ac_cv_c_bigendian=yes\n else\n@@ -3320,7 +3330,7 @@ if test \"$cross_compiling\" = yes; then\n     { echo \"configure: error: can not run test program while cross compiling\" 1>&2; exit 1; }\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3324 \"configure\"\n+#line 3334 \"configure\"\n #include \"confdefs.h\"\n main () {\n   /* Are we little or big endian?  From Harbison&Steele.  */\n@@ -3333,7 +3343,7 @@ main () {\n   exit (u.c[sizeof (long) - 1] == 1);\n }\n EOF\n-if { (eval echo configure:3337: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3347: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_c_bigendian=no\n else\n@@ -3609,6 +3619,8 @@ s%@M68K_TRUE@%$M68K_TRUE%g\n s%@M68K_FALSE@%$M68K_FALSE%g\n s%@POWERPC_TRUE@%$POWERPC_TRUE%g\n s%@POWERPC_FALSE@%$POWERPC_FALSE%g\n+s%@POWERPC_DARWIN_TRUE@%$POWERPC_DARWIN_TRUE%g\n+s%@POWERPC_DARWIN_FALSE@%$POWERPC_DARWIN_FALSE%g\n s%@ARM_TRUE@%$ARM_TRUE%g\n s%@ARM_FALSE@%$ARM_FALSE%g\n s%@CPP@%$CPP%g"}, {"sha": "67113d1acf62f03b2b48c6c1dea2ca3471b73add", "filename": "libffi/configure.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.in?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -56,6 +56,7 @@ ia64*-*-*) TARGET=IA64; TARGETDIR=ia64;;\n m68k-*-linux*) TARGET=M68K; TARGETDIR=m68k;;\n powerpc-*-linux* | powerpc-*-sysv*) TARGET=POWERPC; TARGETDIR=powerpc;;\n powerpc-*-beos*) TARGET=POWERPC; TARGETDIR=powerpc;;\n+powerpc-*-darwin*) TARGET=POWERPC_DARWIN; TARGETDIR=powerpc;;\n arm*-*-linux-*) TARGET=ARM; TARGETDIR=arm;;\n esac\n \n@@ -72,6 +73,7 @@ AM_CONDITIONAL(ALPHA, test x$TARGET = xALPHA)\n AM_CONDITIONAL(IA64, test x$TARGET = xIA64)\n AM_CONDITIONAL(M68K, test x$TARGET = xM68K)\n AM_CONDITIONAL(POWERPC, test x$TARGET = xPOWERPC)\n+AM_CONDITIONAL(POWERPC_DARWIN, test x$TARGET = xPOWERPC_DARWIN)\n AM_CONDITIONAL(ARM, test x$TARGET = xARM)\n \n AC_HEADER_STDC"}, {"sha": "4f75451d5f7273fc4a91c8ee636839b0096b9b59", "filename": "libffi/include/Makefile.in", "status": "modified", "additions": 33, "deletions": 22, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2FMakefile.in?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -1,4 +1,4 @@\n-# Makefile.in generated automatically by automake 1.4a from Makefile.am\n+# Makefile.in generated automatically by automake 1.4 from Makefile.am\n \n # Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n@@ -10,6 +10,7 @@\n # even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n # PARTICULAR PURPOSE.\n \n+\n SHELL = @SHELL@\n \n srcdir = @srcdir@\n@@ -45,10 +46,9 @@ AUTOMAKE = @AUTOMAKE@\n AUTOHEADER = @AUTOHEADER@\n \n INSTALL = @INSTALL@\n-INSTALL_PROGRAM = @INSTALL_PROGRAM@\n+INSTALL_PROGRAM = @INSTALL_PROGRAM@ $(AM_INSTALL_PROGRAM_FLAGS)\n INSTALL_DATA = @INSTALL_DATA@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n-INSTALL_STRIP_FLAG =\n transform = @program_transform_name@\n \n NORMAL_INSTALL = :\n@@ -61,41 +61,45 @@ host_alias = @host_alias@\n host_triplet = @host@\n AS = @AS@\n CC = @CC@\n+CXX = @CXX@\n+CXXCPP = @CXXCPP@\n DLLTOOL = @DLLTOOL@\n EXEEXT = @EXEEXT@\n+GCJ = @GCJ@\n+GCJFLAGS = @GCJFLAGS@\n LIBTOOL = @LIBTOOL@\n LN_S = @LN_S@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n OBJDUMP = @OBJDUMP@\n+OBJEXT = @OBJEXT@\n PACKAGE = @PACKAGE@\n RANLIB = @RANLIB@\n SHELL = @SHELL@\n+STRIP = @STRIP@\n TARGET = @TARGET@\n TARGETDIR = @TARGETDIR@\n VERSION = @VERSION@\n libffi_basedir = @libffi_basedir@\n \n-\n AUTOMAKE_OPTIONS = foreign\n \n EXTRA_DIST = ffi.h.in ffi_common.h ffi_mips.h\n \n hackdir = $(includedir)\n \n hack_DATA = fficonfig.h ffi.h ffi_mips.h\n-subdir = include\n-mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs\n+mkinstalldirs = $(SHELL) $(top_srcdir)/../mkinstalldirs\n CONFIG_HEADER = ../fficonfig.h\n CONFIG_CLEAN_FILES =  ffi.h\n-DIST_SOURCES = \n DATA =  $(hack_DATA)\n \n-DIST_COMMON =  $(hack_DATA) Makefile.am Makefile.in ffi.h.in\n+DIST_COMMON =  Makefile.am Makefile.in ffi.h.in\n \n \n-DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n+DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n+TAR = gnutar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -113,30 +117,38 @@ install-hackDATA: $(hack_DATA)\n \t@$(NORMAL_INSTALL)\n \t$(mkinstalldirs) $(DESTDIR)$(hackdir)\n \t@list='$(hack_DATA)'; for p in $$list; do \\\n-\t  if test -f \"$$p\"; then d= ; else d=\"$(srcdir)/\"; fi; \\\n-\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n-\t  echo \" $(INSTALL_DATA) $$d$$p $(DESTDIR)$(hackdir)/$$f\"; \\\n-\t  $(INSTALL_DATA) $$d$$p $(DESTDIR)$(hackdir)/$$f; \\\n+\t  if test -f $(srcdir)/$$p; then \\\n+\t    echo \" $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(hackdir)/$$p\"; \\\n+\t    $(INSTALL_DATA) $(srcdir)/$$p $(DESTDIR)$(hackdir)/$$p; \\\n+\t  else if test -f $$p; then \\\n+\t    echo \" $(INSTALL_DATA) $$p $(DESTDIR)$(hackdir)/$$p\"; \\\n+\t    $(INSTALL_DATA) $$p $(DESTDIR)$(hackdir)/$$p; \\\n+\t  fi; fi; \\\n \tdone\n \n uninstall-hackDATA:\n \t@$(NORMAL_UNINSTALL)\n-\t@list='$(hack_DATA)'; for p in $$list; do \\\n-\t  f=\"`echo $$p | sed -e 's|^.*/||'`\"; \\\n-\t  echo \" rm -f $(DESTDIR)$(hackdir)/$$f\"; \\\n-\t  rm -f $(DESTDIR)$(hackdir)/$$f; \\\n+\tlist='$(hack_DATA)'; for p in $$list; do \\\n+\t  rm -f $(DESTDIR)$(hackdir)/$$p; \\\n \tdone\n tags: TAGS\n TAGS:\n \n \n distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)\n \n+subdir = include\n+\n distdir: $(DISTFILES)\n+\there=`cd $(top_builddir) && pwd`; \\\n+\ttop_distdir=`cd $(top_distdir) && pwd`; \\\n+\tdistdir=`cd $(distdir) && pwd`; \\\n+\tcd $(top_srcdir) \\\n+\t  && $(AUTOMAKE) --include-deps --build-dir=$$here --srcdir-name=$(top_srcdir) --output-dir=$$top_distdir --foreign include/Makefile\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pR $$d/$$file $(distdir); \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n@@ -165,7 +177,7 @@ uninstall: uninstall-am\n all-am: Makefile $(DATA)\n all-redirect: all-am\n install-strip:\n-\t$(MAKE) $(AM_MAKEFLAGS) INSTALL_STRIP_FLAG=-s install\n+\t$(MAKE) $(AM_MAKEFLAGS) AM_INSTALL_PROGRAM_FLAGS=-s install\n installdirs:\n \t$(mkinstalldirs)  $(DESTDIR)$(hackdir)\n \n@@ -179,7 +191,6 @@ distclean-generic:\n \t-rm -f config.cache config.log stamp-h stamp-h[0-9]*\n \n maintainer-clean-generic:\n-\t-rm -f Makefile.in\n mostlyclean-am:  mostlyclean-generic\n \n mostlyclean: mostlyclean-am\n@@ -202,8 +213,8 @@ maintainer-clean: maintainer-clean-am\n .PHONY: uninstall-hackDATA install-hackDATA tags distdir info-am info \\\n dvi-am dvi check check-am installcheck-am installcheck install-exec-am \\\n install-exec install-data-am install-data install-am install \\\n-uninstall-am uninstall all-redirect all-am all install-strip \\\n-installdirs mostlyclean-generic distclean-generic clean-generic \\\n+uninstall-am uninstall all-redirect all-am all installdirs \\\n+mostlyclean-generic distclean-generic clean-generic \\\n maintainer-clean-generic clean mostlyclean distclean maintainer-clean\n \n "}, {"sha": "275bd032ca0f60688da43bff0798ea8fba271958", "filename": "libffi/include/ffi.h.in", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -233,6 +233,11 @@ typedef enum ffi_abi {\n   FFI_DEFAULT_ABI = FFI_GCC_SYSV,\n #endif\n \n+#ifdef POWERPC_DARWIN\n+  FFI_DARWIN,\n+  FFI_DEFAULT_ABI = FFI_DARWIN,\n+#endif\n+\n   /* ---- ARM  --------------------- */\n #ifdef ARM\n   FFI_SYSV,"}, {"sha": "f478d40ca9b855cf123da805b6976b2dffaebc2b", "filename": "libffi/src/powerpc/darwin.S", "status": "added", "additions": 153, "deletions": 0, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fdarwin.S?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -0,0 +1,153 @@\n+/* -----------------------------------------------------------------------\n+   darwin.S - Copyright (c) 2000 John Hornkvist\n+   \n+   PowerPC Assembly glue.\n+\n+   $Id: darwin.S,v 1.0 2001/01/02 01:49:46 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+\n+#define LIBFFI_ASM\t\n+#include <ffi.h>\n+#define JUMPTARGET(name) name\n+#define L(x) x\n+.text\n+\t.align 2\n+.globl _ffi_prep_args\n+\n+.text\n+\t.align 2\n+.globl _ffi_call_DARWIN\n+.text\n+\t.align 2\n+_ffi_call_DARWIN:\n+\tmr      r12,r8 // We only need r12 until the call, so it doesn't have to be saved...\n+\t/* Save the old stack pointer as AP.  */\n+\tmr\tr8,r1\n+\n+\t/* Allocate the stack space we need.  */\n+\tstwux\tr1,r1,r4\t\n+\t\n+\t/* Save registers we use.  */\n+\tmflr\tr9\n+\n+\tstw\tr28,-16(r8)\n+\tstw\tr29,-12(r8)\n+\tstw\tr30, -8(r8)\n+\tstw\tr31, -4(r8)\n+\t\n+\tstw\tr9,  8(r8)\n+\tstw\tr2, 20(r1)\n+\n+\t/* Save arguments over call...  */\n+\tmr\tr31,r5\t/* flags, */\n+\tmr\tr30,r6\t/* rvalue, */\n+\tmr\tr29,r7\t/* function address, */\n+\tmr\tr28,r8\t/* our AP. */\n+\t\t\n+\t/* Call ffi_prep_args.  */\n+\tmr\tr4,r1\n+\tli\tr9,0\n+\t\n+\tmtctr\tr12 // r12 holds address of _ffi_prep_args\n+\tbctrl \n+\tlwz     r2,20(r1)\n+\n+\t/* Now do the call.  */\n+\t/* Set up cr1 with bits 4-7 of the flags.  */\n+\tmtcrf\t0x40,r31\n+\t/* Get the address to call into CTR.  */\n+\tmtctr\tr29\n+\t/* Load all those argument registers.  */\n+        // We have set up a nice stack frame, just load it into registers.\n+        lwz     r3, 20+(1*4)(r1)\n+        lwz     r4, 20+(2*4)(r1)\n+        lwz     r5, 20+(3*4)(r1)\n+        lwz     r6, 20+(4*4)(r1)\n+        nop\n+\tlwz     r7, 20+(5*4)(r1)\n+        lwz     r8, 20+(6*4)(r1)\n+        lwz     r9, 20+(7*4)(r1)\n+        lwz     r10,20+(8*4)(r1)\n+\t\t\n+L1:\n+\t/* Load all the FP registers.  */\n+\tbf\t6,L2 // 2f + 0x18\n+\tlfd\tf1,-16-(13*8)(r28)\n+\tlfd\tf2,-16-(12*8)(r28)\n+\tlfd\tf3,-16-(11*8)(r28)\n+\tlfd\tf4,-16-(10*8)(r28)\n+\tnop\n+\tlfd\tf5,-16-(9*8)(r28)\n+\tlfd\tf6,-16-(8*8)(r28)\n+\tlfd\tf7,-16-(7*8)(r28)\n+\tlfd\tf8,-16-(6*8)(r28)\n+\tnop\n+\tlfd     f9,-16-(5*8)(r28)\n+        lfd     f10,-16-(4*8)(r28)\n+\tlfd     f11,-16-(3*8)(r28)\n+\tlfd     f12,-16-(2*8)(r28)\n+\tnop\n+\tlfd     f13,-16-(1*8)(r28)\n+\n+L2:\t\n+\tmr\tr12,r29 // Put the target address in r12 as specified.\n+\tmtctr  r12\n+\tnop\n+\tnop\n+\t/* Make the call.  */\n+\tbctrl\n+        \n+\t/* Now, deal with the return value.  */\n+\tmtcrf\t0x01,r31\n+\n+\tbt\t30,L(done_return_value)\n+\tbt\t29,L(fp_return_value)\n+\tstw\tr3,0(r30)\n+\tbf\t28,L(done_return_value)\n+\tstw\tr4,4(r30)\n+\n+\t/* Fall through...  */\n+\n+L(done_return_value):\n+\t/* Restore the registers we used and return.  */\n+\tlwz\tr9,   8(r28)\n+\tlwz\tr31,  -4(r28)\n+\tmtlr\tr9\n+\tlwz\tr30, -8(r28)\n+\tlwz\tr29,-12(r28)\n+\tlwz\tr28,-16(r28)\n+\tlwz\tr1,0(r1)\n+\tblr\n+\n+L(fp_return_value):\n+\tbf\t28,L(float_return_value)\n+\tstfd\tf1,0(r30)\n+\tb\tL(done_return_value)\n+L(float_return_value):\n+\tstfs\tf1,0(r30)\n+\tb\tL(done_return_value)\n+//END(_ffi_call_DARWIN)\n+\n+\n+\n+\n+"}, {"sha": "684144be16d90377755aae2b52908c4593e099a9", "filename": "libffi/src/powerpc/ffi_darwin.c", "status": "added", "additions": 362, "deletions": 0, "changes": 362, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c017635c9012494cd6aaf7af315653aa06261bf/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi_darwin.c?ref=3c017635c9012494cd6aaf7af315653aa06261bf", "patch": "@@ -0,0 +1,362 @@\n+/* -----------------------------------------------------------------------\n+   ffi.c - Copyright (c) 1998 Geoffrey Keating\n+   \n+   PowerPC Foreign Function Interface \n+\n+   Darwin ABI support (c) 2001 John Hornkvist\n+\n+   $Id: ffi.c,v 1.1.1.1 1998/11/29 16:48:16 green Exp $\n+\n+   Permission is hereby granted, free of charge, to any person obtaining\n+   a copy of this software and associated documentation files (the\n+   ``Software''), to deal in the Software without restriction, including\n+   without limitation the rights to use, copy, modify, merge, publish,\n+   distribute, sublicense, and/or sell copies of the Software, and to\n+   permit persons to whom the Software is furnished to do so, subject to\n+   the following conditions:\n+\n+   The above copyright notice and this permission notice shall be included\n+   in all copies or substantial portions of the Software.\n+\n+   THE SOFTWARE IS PROVIDED ``AS IS'', WITHOUT WARRANTY OF ANY KIND, EXPRESS\n+   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n+   MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n+   IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR\n+   OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n+   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n+   OTHER DEALINGS IN THE SOFTWARE.\n+   ----------------------------------------------------------------------- */\n+#include <ffi.h>\n+#include <ffi_common.h>\n+\n+#include <stdlib.h>\n+\n+enum {\n+  /* The assembly depends on these exact flags.  */\n+  FLAG_RETURNS_NOTHING  = 1 << (31-30), /* These go in cr7 */\n+  FLAG_RETURNS_FP       = 1 << (31-29),\n+  FLAG_RETURNS_64BITS   = 1 << (31-28),\n+\n+  FLAG_ARG_NEEDS_COPY   = 1 << (31- 7),\n+  FLAG_FP_ARGUMENTS     = 1 << (31- 6), /* cr1.eq; specified by ABI */\n+  FLAG_4_GPR_ARGUMENTS  = 1 << (31- 5),\n+  FLAG_RETVAL_REFERENCE = 1 << (31- 4)\n+};\n+\n+/* About the DARWIN ABI.  */\n+enum {\n+  NUM_GPR_ARG_REGISTERS = 8,\n+  NUM_FPR_ARG_REGISTERS = 13\n+};\n+enum { ASM_NEEDS_REGISTERS = 4 };\n+\n+/* ffi_prep_args is called by the assembly routine once stack space\n+   has been allocated for the function's arguments.\n+\n+   The stack layout we want looks like this:\n+\n+   |   Return address from ffi_call_DARWIN      |\thigher addresses\n+   |--------------------------------------------|\n+   |   Previous backchain pointer\t4\t| \tstack pointer here\n+   |--------------------------------------------|<+ <<<\ton entry to\n+   |   Saved r28-r31\t\t\t4*4\t| |\tffi_call_DARWIN\n+   |--------------------------------------------| |\n+   |   Parameters             (at least 8*4=32) | |\n+   |--------------------------------------------| |\n+   |   Space for GPR2                   4       | |\n+   |--------------------------------------------| |\tstack\t|\n+   |   Reserved                       2*4       | |\tgrows\t|\n+   |--------------------------------------------| |\tdown\tV\n+   |   Space for callee's LR\t\t4\t| |\n+   |--------------------------------------------| |\tlower addresses\t\n+   |   Saved CR                         4       | |\n+   |--------------------------------------------| |     stack pointer here\n+   |   Current backchain pointer\t4\t|-/\tduring\n+   |--------------------------------------------|   <<<\tffi_call_DARWIN\n+\n+   */\n+\n+/*@-exportheader@*/\n+void ffi_prep_args(extended_cif *ecif, unsigned *const stack)\n+/*@=exportheader@*/\n+{\n+  const unsigned bytes = ecif->cif->bytes;\n+  const unsigned flags = ecif->cif->flags; \n+\n+  /* 'stacktop' points at the previous backchain pointer.  */\n+  unsigned *const stacktop = stack + (ecif->cif->bytes / sizeof(unsigned));\n+\n+  /* 'fpr_base' points at the space for fpr1, and grows upwards as\n+     we use FPR registers.  */\n+  double *fpr_base = (double*) (stacktop - ASM_NEEDS_REGISTERS) - NUM_FPR_ARG_REGISTERS;\n+  int fparg_count = 0;\n+\n+\n+  /* 'next_arg' grows up as we put parameters in it.  */\n+  unsigned *next_arg = stack + 6; // 6 reserved posistions. \n+\n+  int i=ecif->cif->nargs;\n+  double double_tmp;\n+  float float_tmp;\n+  void **p_argv = ecif->avalue;\n+  unsigned gprvalue;\n+  ffi_type** ptr = ecif->cif->arg_types;\n+\n+  /* Check that everything starts aligned properly.  */\n+  FFI_ASSERT(((unsigned)(char *)stack & 0xF) == 0);\n+  FFI_ASSERT(((unsigned)(char *)stacktop & 0xF) == 0);\n+  FFI_ASSERT((bytes & 0xF) == 0);\n+\n+  /* Deal with return values that are actually pass-by-reference.  */\n+  // Rule:\n+  // Return values are referenced by r3, so r4 is the first parameter.\n+  if (flags & FLAG_RETVAL_REFERENCE)\n+    *next_arg++ = (unsigned)(char *)ecif->rvalue;\n+\n+  /* Now for the arguments.  */\n+  for (;\n+       i > 0;\n+       i--, ptr++, p_argv++)\n+    {\n+      switch ((*ptr)->type)\n+\t{\n+\tcase FFI_TYPE_FLOAT:\n+\tcase FFI_TYPE_DOUBLE:\n+ \t  if ((*ptr)->type == FFI_TYPE_FLOAT)\n+\t    double_tmp = *(float *)*p_argv;\n+\t  else\n+\t    double_tmp = *(double *)*p_argv;\n+\n+\t  if (fparg_count >= NUM_FPR_ARG_REGISTERS)\n+            *(double *)next_arg = double_tmp;\n+\t  else\n+            *fpr_base++ = double_tmp;\n+          next_arg += 2;\n+\t  fparg_count++;\n+\t  FFI_ASSERT(flags & FLAG_FP_ARGUMENTS);\n+\t  break;\n+\n+\tcase FFI_TYPE_UINT64:\n+\tcase FFI_TYPE_SINT64:\n+          *(long long *)next_arg = *(long long *)*p_argv;\n+          next_arg+=2;\n+\t  break;\n+\tcase FFI_TYPE_UINT8:\n+\t  gprvalue = *(unsigned char *)*p_argv;\n+\t  goto putgpr;\n+\tcase FFI_TYPE_SINT8:\n+\t  gprvalue = *(signed char *)*p_argv;\n+\t  goto putgpr;\n+\tcase FFI_TYPE_UINT16:\n+\t  gprvalue = *(unsigned short *)*p_argv;\n+\t  goto putgpr;\n+\tcase FFI_TYPE_SINT16:\n+\t  gprvalue = *(signed short *)*p_argv;\n+\t  goto putgpr;\n+\n+        case FFI_TYPE_STRUCT:\n+\n+#if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n+        case FFI_TYPE_LONGDOUBLE:\n+#endif\n+\t  \n+\t  memcpy((char*)next_arg, (char *)*p_argv, (*ptr)->size);\n+\t  next_arg+=(((((*ptr)->size) + 3) & ~0x3)/4);\t\n+        break;\t  \n+\t  \n+\tcase FFI_TYPE_INT:\n+   \tcase FFI_TYPE_UINT32:\n+\tcase FFI_TYPE_SINT32:\n+\tcase FFI_TYPE_POINTER:\n+\t  gprvalue = *(unsigned *)*p_argv;\n+\tputgpr:\n+\t  *next_arg++ = gprvalue;\n+\t  break;\n+\tdefault:\n+\t  break;\n+\t}\n+    }\n+\n+  /* Check that we didn't overrun the stack...  */\n+  //FFI_ASSERT(copy_space >= (char *)next_arg);\n+  //FFI_ASSERT(gpr_base <= stacktop - ASM_NEEDS_REGISTERS);\n+  //FFI_ASSERT((unsigned *)fpr_base\n+  //\t     <= stacktop - ASM_NEEDS_REGISTERS - NUM_GPR_ARG_REGISTERS);\n+  //FFI_ASSERT(flags & FLAG_4_GPR_ARGUMENTS || intarg_count <= 4);\n+}\n+\n+/* Perform machine dependent cif processing */\n+ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n+{\n+  /* All this is for the DARWIN ABI.  */\n+  int i;\n+  ffi_type **ptr;\n+  unsigned bytes;\n+  int fparg_count = 0, intarg_count = 0;\n+  unsigned flags = 0;\n+  unsigned struct_copy_size = 0;\n+\n+  /* All the machine-independent calculation of cif->bytes will be wrong.\n+     Redo the calculation for DARWIN.  */\n+\n+  /* Space for the frame pointer, callee's LR, CR, etc, and for \n+     the asm's temp regs.  */\n+\n+  bytes = (6 + ASM_NEEDS_REGISTERS) * sizeof(int);\n+\n+  /* Return value handling.  The rules are as follows:\n+     - 32-bit (or less) integer values are returned in gpr3;\n+     - Structures of size <= 4 bytes also returned in gpr3;\n+     - 64-bit integer values and structures between 5 and 8 bytes are returned\n+       in gpr3 and gpr4;\n+     - Single/double FP values are returned in fpr1;\n+     - Larger structures and long double (if not equivalent to double) values\n+       are allocated space and a pointer is passed as the first argument.  */\n+  switch (cif->rtype->type)\n+    {\n+    case FFI_TYPE_DOUBLE:\n+      flags |= FLAG_RETURNS_64BITS;\n+      /* Fall through.  */\n+    case FFI_TYPE_FLOAT:\n+      flags |= FLAG_RETURNS_FP;\n+      break;\n+\n+    case FFI_TYPE_UINT64:\n+    case FFI_TYPE_SINT64:\n+      flags |= FLAG_RETURNS_64BITS;\n+      break;\n+\n+    case FFI_TYPE_STRUCT:\n+      /* Fall through.  */\n+#if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n+    case FFI_TYPE_LONGDOUBLE:\n+#endif\n+      flags |= FLAG_RETVAL_REFERENCE;\n+      flags |= FLAG_RETURNS_NOTHING;\n+      intarg_count++;\n+      break;\n+    case FFI_TYPE_VOID:\n+      flags |= FLAG_RETURNS_NOTHING;\n+      break;\n+\n+    default:\n+      /* Returns 32-bit integer, or similar.  Nothing to do here.  */\n+      break;\n+    }\n+\n+  /* The first NUM_GPR_ARG_REGISTERS words of integer arguments, and the\n+     first NUM_FPR_ARG_REGISTERS fp arguments, go in registers; the rest\n+     goes on the stack.  Structures and long doubles (if not equivalent\n+     to double) are passed as a pointer to a copy of the structure.\n+     Stuff on the stack needs to keep proper alignment.  */\n+  for (ptr = cif->arg_types, i = cif->nargs; i > 0; i--, ptr++)\n+    {\n+      switch ((*ptr)->type)\n+\t{\n+\tcase FFI_TYPE_FLOAT:\n+\tcase FFI_TYPE_DOUBLE:\n+\t  fparg_count++;\n+\t  /* If this FP arg is going on the stack, it must be\n+\t     8-byte-aligned.  */\n+\t  if (fparg_count > NUM_FPR_ARG_REGISTERS\n+\t      && intarg_count%2 != 0)\n+\t    intarg_count++;\n+\t  break;\n+\n+\tcase FFI_TYPE_UINT64:\n+\tcase FFI_TYPE_SINT64:\n+\t  /* 'long long' arguments are passed as two words, but\n+\t     either both words must fit in registers or both go\n+\t     on the stack.  If they go on the stack, they must\n+\t     be 8-byte-aligned.  */\n+\t  if (intarg_count == NUM_GPR_ARG_REGISTERS-1\n+\t      || intarg_count >= NUM_GPR_ARG_REGISTERS && intarg_count%2 != 0)\n+\t    intarg_count++;\n+\t  intarg_count += 2;\n+\t  break;\n+\n+\tcase FFI_TYPE_STRUCT:\n+#if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n+\tcase FFI_TYPE_LONGDOUBLE:\n+#endif\n+\t  intarg_count+=(((*ptr)->size + 3) & ~0x3)/4;\n+\t  break;\n+\n+\tdefault:\n+\t  /* Everything else is passed as a 4-byte word in a GPR, either\n+\t     the object itself or a pointer to it.  */\n+\t  intarg_count++;\n+\t  break;\n+\t}\n+    }\n+\n+  if (fparg_count != 0)\n+    flags |= FLAG_FP_ARGUMENTS;\n+  if (struct_copy_size != 0)\n+    flags |= FLAG_ARG_NEEDS_COPY;\n+  \n+  /* Space for the FPR registers, if needed.  */\n+  if (fparg_count != 0)\n+    bytes += NUM_FPR_ARG_REGISTERS * sizeof(double);\n+\n+  /* Stack space.  */\n+  if ((intarg_count + 2 * fparg_count) > NUM_GPR_ARG_REGISTERS)\n+    bytes += (intarg_count + 2 * fparg_count) * sizeof(int);\n+  else\n+    bytes += NUM_GPR_ARG_REGISTERS * sizeof(int);\n+\n+  /* The stack space allocated needs to be a multiple of 16 bytes.  */\n+  bytes = (bytes + 15) & ~0xF;\n+\n+  cif->flags = flags;\n+  cif->bytes = bytes;\n+  \n+  return FFI_OK;\n+}\n+\n+/*@-declundef@*/\n+/*@-exportheader@*/\n+extern void ffi_call_DARWIN(/*@out@*/ extended_cif *, \n+\t\t\t  unsigned, unsigned, \n+\t\t\t  /*@out@*/ unsigned *, \n+\t\t\t    void (*fn)(),\n+\t\t\t  void (*fn2)());\n+/*@=declundef@*/\n+/*@=exportheader@*/\n+\n+void ffi_call(/*@dependent@*/ ffi_cif *cif, \n+\t      void (*fn)(), \n+\t      /*@out@*/ void *rvalue, \n+\t      /*@dependent@*/ void **avalue)\n+{\n+  extended_cif ecif;\n+\n+  ecif.cif = cif;\n+  ecif.avalue = avalue;\n+  \n+  /* If the return value is a struct and we don't have a return\t*/\n+  /* value address then we need to make one\t\t        */\n+\n+  if ((rvalue == NULL) && \n+      (cif->rtype->type == FFI_TYPE_STRUCT))\n+    {\n+      /*@-sysunrecog@*/\n+      ecif.rvalue = alloca(cif->rtype->size);\n+      /*@=sysunrecog@*/\n+    }\n+  else\n+    ecif.rvalue = rvalue;\n+    \n+  switch (cif->abi) \n+    {\n+    case FFI_DARWIN:\n+      /*@-usedef@*/\n+      ffi_call_DARWIN(&ecif, -cif->bytes, \n+\t\t    cif->flags, ecif.rvalue, fn, ffi_prep_args);\n+      /*@=usedef@*/\n+      break;\n+    default:\n+      FFI_ASSERT(0);\n+      break;\n+    }\n+}"}]}