{"sha": "0f96fd143cd249110dcdeabea7fd8972b91b86c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5NmZkMTQzY2QyNDkxMTBkY2RlYWJlYTdmZDg5NzJiOTFiODZjNg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2017-04-25T13:37:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:37:18Z"}, "message": "err_vars.ads, [...]: Eliminate the vestigial Internal_Source_File and the Internal_Source buffer.\n\n2017-04-25  Bob Duff  <duff@adacore.com>\n\n\t* err_vars.ads, fmap.adb, fmap.ads, comperr.adb, fname-sf.adb,\n\ttypes.adb, types.ads, types.h, sinput-l.adb, targparm.adb,\n\terrout.adb, sinput.adb, sinput.ads, cstand.adb, scn.adb,\n\tscn.ads, gnatls.adb: Eliminate the vestigial Internal_Source_File and\n\tthe Internal_Source buffer. This removes the incorrect call to \"=\"\n\tthe customer noticed.\n\tWrap remaining calls to \"=\" in Null_Source_Buffer_Ptr. We\n\teventually need to eliminate them altogether. Or else get rid\n\tof zero-origin addressing.\n\nFrom-SVN: r247234", "tree": {"sha": "fa63d732e414c06875cdb37cbfc725c72890f52b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa63d732e414c06875cdb37cbfc725c72890f52b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f96fd143cd249110dcdeabea7fd8972b91b86c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f96fd143cd249110dcdeabea7fd8972b91b86c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f96fd143cd249110dcdeabea7fd8972b91b86c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f96fd143cd249110dcdeabea7fd8972b91b86c6/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d5dbb22ec8e0c1f104539d3fdf2afc5174a5b45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d5dbb22ec8e0c1f104539d3fdf2afc5174a5b45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d5dbb22ec8e0c1f104539d3fdf2afc5174a5b45"}], "stats": {"total": 179, "additions": 81, "deletions": 98}, "files": [{"sha": "64d9ded6a48a8197155ca50d53ce9ec165d9a784", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -1,3 +1,15 @@\n+2017-04-25  Bob Duff  <duff@adacore.com>\n+\n+\t* err_vars.ads, fmap.adb, fmap.ads, comperr.adb, fname-sf.adb,\n+\ttypes.adb, types.ads, types.h, sinput-l.adb, targparm.adb,\n+\terrout.adb, sinput.adb, sinput.ads, cstand.adb, scn.adb,\n+\tscn.ads, gnatls.adb: Eliminate the vestigial Internal_Source_File and\n+\tthe Internal_Source buffer. This removes the incorrect call to \"=\"\n+\tthe customer noticed.\n+\tWrap remaining calls to \"=\" in Null_Source_Buffer_Ptr. We\n+\teventually need to eliminate them altogether. Or else get rid\n+\tof zero-origin addressing.\n+\n 2017-04-25  Claire Dross  <dross@adacore.com>\n \n \t* exp_util.ads (Expression_Contains_Primitives_Calls_Of): New"}, {"sha": "0892a86592b528dd0d4c7cbcbf08ca6a53bb49aa", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -265,7 +265,7 @@ package body Comperr is\n \n             --  If we get a Src file, we use it\n \n-            if Src /= null then\n+            if not Null_Source_Buffer_Ptr (Src) then\n                Lo := 0;\n \n                Outer : while Lo < Hi loop"}, {"sha": "891fced9b193f26e490252be96f75f17ed6c399f", "filename": "gcc/ada/cstand.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fcstand.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fcstand.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcstand.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -38,7 +38,6 @@ with Set_Targ; use Set_Targ;\n with Targparm; use Targparm;\n with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n-with Scn;\n with Sem_Mech; use Sem_Mech;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n@@ -582,10 +581,6 @@ package body CStand is\n    --  Start of processing for Create_Standard\n \n    begin\n-      --  Initialize scanner for internal scans of literals\n-\n-      Scn.Initialize_Scanner (No_Unit, Internal_Source_File);\n-\n       --  First step is to create defining identifiers for each entity\n \n       for S in Standard_Entity_Type loop"}, {"sha": "0024687d895ded30658d2e9deb68c05ab42fe82a", "filename": "gcc/ada/err_vars.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ferr_vars.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ferr_vars.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferr_vars.ads?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -80,7 +80,7 @@ package Err_Vars is\n    Error_Msg_Exception : exception;\n    --  Exception raised if Raise_Exception_On_Error is true\n \n-   Current_Error_Source_File : Source_File_Index := Internal_Source_File;\n+   Current_Error_Source_File : Source_File_Index := No_Source_File;\n    --  Id of current messages. Used to post file name when unit changes. This\n    --  is initialized to Main_Source_File at the start of a compilation, which\n    --  means that no file names will be output unless there are errors in units"}, {"sha": "6003223a5ec8e4df79fd01e1d4ef973c5632fcf4", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -312,11 +312,6 @@ package body Errout is\n       --  template in instantiation case, otherwise unchanged).\n \n    begin\n-      --  It is a fatal error to issue an error message when scanning from the\n-      --  internal source buffer (see Sinput for further documentation)\n-\n-      pragma Assert (Sinput.Source /= Internal_Source_Ptr);\n-\n       --  Return if all errors are to be ignored\n \n       if Errors_Must_Be_Ignored then"}, {"sha": "738d0acab08f7b5ccbe37322162b3bc4d1ea6347", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -306,7 +306,7 @@ package body Fmap is\n       Name_Buffer (1 .. Name_Len) := File_Name;\n       Read_Source_File (Name_Enter, 0, Hi, Src, Config);\n \n-      if Src = null then\n+      if Null_Source_Buffer_Ptr (Src) then\n          Write_Str (\"warning: could not read mapping file \"\"\");\n          Write_Str (File_Name);\n          Write_Line (\"\"\"\");"}, {"sha": "9bdee4c371ca26fad985031accca6c23f1e0ce47", "filename": "gcc/ada/fmap.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ffmap.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ffmap.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.ads?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -42,7 +42,7 @@ package Fmap is\n \n    procedure Initialize (File_Name : String);\n    --  Initialize the mappings from the mapping file File_Name.\n-   --  If the mapping file is incorrect (non existent file, truncated file,\n+   --  If the mapping file is incorrect (nonexistent file, truncated file,\n    --  duplicate entries), output a warning and do not initialize the mappings.\n    --  Record the state of the mapping tables in case Update is called\n    --  later on."}, {"sha": "ea6a1a2217482cd1daea01179dc22ef130612f8c", "filename": "gcc/ada/fname-sf.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ffname-sf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ffname-sf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-sf.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -74,7 +74,7 @@ package body Fname.SF is\n       Name_Len := 8;\n       Read_Source_File (Name_Enter, 0, Hi, Src);\n \n-      if Src /= null then\n+      if not Null_Source_Buffer_Ptr (Src) then\n          BS := To_Big_String_Ptr (Src);\n          SP := BS (1 .. Natural (Hi))'Unrestricted_Access;\n          Scan_SFN_Pragmas"}, {"sha": "10cc662f692e3736b0e0ed27ad6052a94300910d", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1653,7 +1653,7 @@ begin\n \n          Read_Source_File (Name_Find, Lo => 0, Hi => Hi, Src => Text);\n \n-         if Text = null then\n+         if Null_Source_Buffer_Ptr (Text) then\n             No_Runtime := True;\n          end if;\n       end;"}, {"sha": "7dc0dc5ff0863e26e511657c0874f32aa684960d", "filename": "gcc/ada/scn.adb", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fscn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fscn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -209,21 +209,14 @@ package body Scn is\n \n    begin\n       Scanner.Initialize_Scanner (Index);\n-\n-      if Index /= Internal_Source_File then\n-         Set_Unit (Index, Unit);\n-      end if;\n+      Set_Unit (Index, Unit);\n \n       Current_Source_Unit := Unit;\n \n-      --  Set default for Comes_From_Source (except if we are going to process\n-      --  an artificial string internally created within the compiler and\n-      --  placed into internal source duffer). All nodes built now until we\n+      --  Set default for Comes_From_Source. All nodes built now until we\n       --  reenter the analyzer will have Comes_From_Source set to True\n \n-      if Index /= Internal_Source_File then\n-         Set_Comes_From_Source_Default (True);\n-      end if;\n+      Set_Comes_From_Source_Default (True);\n \n       --  Check license if GNAT type header possibly present\n \n@@ -239,19 +232,7 @@ package body Scn is\n       --  call Scan. Scan initial token (note this initializes Prev_Token,\n       --  Prev_Token_Ptr).\n \n-      --  There are two reasons not to do the Scan step in case if we\n-      --  initialize the scanner for the internal source buffer:\n-\n-      --  - The artificial string may not be created by the compiler in this\n-      --    buffer when we call Initialize_Scanner\n-\n-      --  - For these artificial strings a special way of scanning is used, so\n-      --    the standard step of the scanner may just break the algorithm of\n-      --    processing these strings.\n-\n-      if Index /= Internal_Source_File then\n-         Scan;\n-      end if;\n+      Scan;\n \n       --  Clear flags for reserved words used as identifiers\n "}, {"sha": "77ebadc49a98f7157ed2dc73cb95e71a14d422b5", "filename": "gcc/ada/scn.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fscn.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fscn.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscn.ads?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -39,9 +39,9 @@ package Scn is\n       Index : Source_File_Index);\n    --  Initialize lexical scanner for scanning a new file. The caller has\n    --  completed the construction of the Units.Table entry for the specified\n-   --  Unit and Index references the corresponding source file. A special\n-   --  case is when Unit = No_Unit_Number, and Index corresponds to the\n-   --  source index for reading the configuration pragma file.\n+   --  Unit and Index references the corresponding source file. A special case\n+   --  is when Unit = No_Unit, and Index corresponds to the source index for\n+   --  reading the configuration pragma file.\n \n    function Determine_Token_Casing return Casing_Type;\n    --  Determines the casing style of the current token, which is either a"}, {"sha": "aa747cef27b73343574130cb4f570b3060c97610", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -416,7 +416,7 @@ package body Sinput.L is\n \n       Osint.Read_Source_File (N, Lo, Hi, Src, T);\n \n-      if Src = null then\n+      if Null_Source_Buffer_Ptr (Src) then\n          Source_File.Decrement_Last;\n          return No_Source_File;\n "}, {"sha": "b3cfa49369e9d39c6500cf9b37a8531597dfb0c0", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -876,19 +876,24 @@ package body Sinput is\n             declare\n                S : Source_File_Record renames Source_File.Table (J);\n \n+               type Source_Buffer_Ptr_Var is access all Big_Source_Buffer;\n+\n                procedure Free_Ptr is new Unchecked_Deallocation\n-                 (Big_Source_Buffer, Source_Buffer_Ptr);\n+                 (Big_Source_Buffer, Source_Buffer_Ptr_Var);\n+               --  This works only because we're calling malloc, which keeps\n+               --  track of the size on its own, ignoring the size of\n+               --  Big_Source_Buffer, which is the wrong size.\n \n                pragma Warnings (Off);\n                --  This unchecked conversion is aliasing safe, since it is not\n                --  used to create improperly aliased pointer values.\n \n-               function To_Source_Buffer_Ptr is new\n-                 Unchecked_Conversion (Address, Source_Buffer_Ptr);\n+               function To_Source_Buffer_Ptr_Var is new\n+                 Unchecked_Conversion (Address, Source_Buffer_Ptr_Var);\n \n                pragma Warnings (On);\n \n-               Tmp1 : Source_Buffer_Ptr;\n+               Tmp1 : Source_Buffer_Ptr_Var;\n \n             begin\n                if S.Instance /= No_Instance_Id then\n@@ -903,7 +908,7 @@ package body Sinput is\n                   --  from the zero origin pointer stored in the source table.\n \n                   Tmp1 :=\n-                    To_Source_Buffer_Ptr\n+                    To_Source_Buffer_Ptr_Var\n                       (S.Source_Text (S.Source_First)'Address);\n                   Free_Ptr (Tmp1);\n \n@@ -1254,29 +1259,17 @@ package body Sinput is\n \n    function Source_First (S : SFI) return Source_Ptr is\n    begin\n-      if S = Internal_Source_File then\n-         return Internal_Source'First;\n-      else\n-         return Source_File.Table (S).Source_First;\n-      end if;\n+      return Source_File.Table (S).Source_First;\n    end Source_First;\n \n    function Source_Last (S : SFI) return Source_Ptr is\n    begin\n-      if S = Internal_Source_File then\n-         return Internal_Source'Last;\n-      else\n-         return Source_File.Table (S).Source_Last;\n-      end if;\n+      return Source_File.Table (S).Source_Last;\n    end Source_Last;\n \n    function Source_Text (S : SFI) return Source_Buffer_Ptr is\n    begin\n-      if S = Internal_Source_File then\n-         return Internal_Source_Ptr;\n-      else\n-         return Source_File.Table (S).Source_Text;\n-      end if;\n+      return Source_File.Table (S).Source_Text;\n    end Source_Text;\n \n    function Template (S : SFI) return SFI is"}, {"sha": "fc700d1e350208e432d41d719c562f3c7c8fca36", "filename": "gcc/ada/sinput.ads", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fsinput.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Fsinput.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.ads?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -451,18 +451,6 @@ package Sinput is\n    Source : Source_Buffer_Ptr;\n    --  Current source (copy of Source_File.Table (Current_Source_Unit).Source)\n \n-   Internal_Source : aliased Source_Buffer (1 .. 81);\n-   --  This buffer is used internally in the compiler when the lexical analyzer\n-   --  is used to scan a string from within the compiler. The procedure is to\n-   --  establish Internal_Source_Ptr as the value of Source, set the string to\n-   --  be scanned, appropriately terminated, in this buffer, and set Scan_Ptr\n-   --  to point to the start of the buffer. It is a fatal error if the scanner\n-   --  signals an error while scanning a token in this internal buffer.\n-\n-   Internal_Source_Ptr : constant Source_Buffer_Ptr :=\n-                           Internal_Source'Unrestricted_Access;\n-   --  Pointer to internal source buffer\n-\n    -----------------------------------------\n    -- Handling of Source Line Terminators --\n    -----------------------------------------"}, {"sha": "0c5170a48625cad6b7621aa481925da4c8482f68", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -169,7 +169,7 @@ package body Targparm is\n \n       Read_Source_File (Name_Find, Lo => 0, Hi => Hi, Src => Text);\n \n-      if Text = null then\n+      if Null_Source_Buffer_Ptr (Text) then\n          Write_Line (\"fatal error, run-time library not installed correctly\");\n          Write_Line (\"cannot locate file system.ads\");\n          raise Unrecoverable_Error;"}, {"sha": "1a4e949d28ff376abe75e65f2128cdc9744851bb", "filename": "gcc/ada/types.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ftypes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ftypes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.adb?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -210,6 +210,15 @@ package body Types is\n       TS (14) := Character'Val (Z + Seconds mod 10);\n    end Make_Time_Stamp;\n \n+   ----------------------------\n+   -- Null_Source_Buffer_Ptr --\n+   ----------------------------\n+\n+   function Null_Source_Buffer_Ptr (X : Source_Buffer_Ptr) return Boolean is\n+   begin\n+      return Source_Buffer_Ptr_Equal (X, null);\n+   end Null_Source_Buffer_Ptr;\n+\n    ----------------------\n    -- Split_Time_Stamp --\n    ----------------------"}, {"sha": "6180541f183f7f8c32619c917ac5bb1c23e656c1", "filename": "gcc/ada/types.ads", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ftypes.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ftypes.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.ads?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -200,7 +200,7 @@ package Types is\n    --  This is a virtual type used as the designated type of the access type\n    --  Source_Buffer_Ptr, see Osint.Read_Source_File for details.\n \n-   type Source_Buffer_Ptr is access all Big_Source_Buffer;\n+   type Source_Buffer_Ptr is access constant Big_Source_Buffer;\n    --  Pointer to source buffer. We use virtual origin addressing for source\n    --  buffers, with thin pointers. The pointer points to a virtual instance\n    --  of type Big_Source_Buffer, where the actual type is in fact of type\n@@ -210,6 +210,21 @@ package Types is\n    --  this type, but we don't give a storage size clause of zero, since we\n    --  may end up doing deallocations of instances allocated manually.\n \n+   function Null_Source_Buffer_Ptr (X : Source_Buffer_Ptr) return Boolean;\n+   --  True if X = null. ???This usage of \"=\" is wrong, because the zero-origin\n+   --  pointer could happen to be equal to null. We need to eliminate this.\n+\n+   function Source_Buffer_Ptr_Equal (X, Y : Source_Buffer_Ptr) return Boolean\n+     renames \"=\";\n+   --  Squirrel away the predefined \"=\", for use in Null_Source_Buffer_Ptr.\n+   --  Do not call this elsewhere.\n+\n+   function \"=\" (X, Y : Source_Buffer_Ptr) return Boolean is abstract;\n+   --  Make \"=\" abstract, to make sure noone calls it. Note that this makes\n+   --  \"/=\" abstract as well. Calls to \"=\" on Source_Buffer_Ptr are always\n+   --  wrong, because two different arrays allocated at two different addresses\n+   --  can have the same virtual origin.\n+\n    subtype Source_Ptr is Text_Ptr;\n    --  Type used to represent a source location, which is a subscript of a\n    --  character in the source buffer. As noted above, different source buffers\n@@ -568,11 +583,6 @@ package Types is\n    type Source_File_Index is new Int range -1 .. Int'Last;\n    --  Type used to index the source file table (see package Sinput)\n \n-   Internal_Source_File : constant Source_File_Index :=\n-                            Source_File_Index'First;\n-   --  Value used to indicate the buffer for the source-code-like strings\n-   --  internally created withing the compiler (see package Sinput)\n-\n    No_Source_File : constant Source_File_Index := 0;\n    --  Value used to indicate no source file present\n "}, {"sha": "6c14f19e32f4c94935201b2783d86ab1771e0444", "filename": "gcc/ada/types.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f96fd143cd249110dcdeabea7fd8972b91b86c6/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=0f96fd143cd249110dcdeabea7fd8972b91b86c6", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *          Copyright (C) 1992-2016, Free Software Foundation, Inc.         *\n+ *          Copyright (C) 1992-2017, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -97,7 +97,7 @@ typedef struct { const char *Array; String_Template *Bounds; }\n    inlined stuff IN the C header changes the dependencies.  Both sinfo.h\n    and einfo.h now reference routines defined in tree.h.\n \n-   Note: these types would more naturally be defined as unsigned  char, but\n+   Note: these types would more naturally be defined as unsigned char, but\n    once again, the annoying restriction on bit fields for some compilers\n    bites us!  */\n "}]}