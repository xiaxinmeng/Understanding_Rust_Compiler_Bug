{"sha": "93895581f9c8c8591cdbd7152756a63d330736b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM4OTU1ODFmOWM4Yzg1OTFjZGJkNzE1Mjc1NmE2M2QzMzA3MzZiOQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@vnet.linux.ibm.com", "date": "2013-11-03T00:06:43Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2013-11-03T00:06:43Z"}, "message": "rs6000.c (rs6000_expand_vector_set): Adjust for little endian.\n\ngcc:\n\n2013-11-02  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_set): Adjust for\n\tlittle endian.\n\ngcc/testsuite:\n\n2013-11-02  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n\n\t* gcc.dg/vmx/vec-set.c: New.\n\nFrom-SVN: r204321", "tree": {"sha": "ff27b507885bcca6798eb4678c618877d8f6c82d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff27b507885bcca6798eb4678c618877d8f6c82d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93895581f9c8c8591cdbd7152756a63d330736b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93895581f9c8c8591cdbd7152756a63d330736b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93895581f9c8c8591cdbd7152756a63d330736b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93895581f9c8c8591cdbd7152756a63d330736b9/comments", "author": null, "committer": null, "parents": [{"sha": "65e95828e500cb1b2a5080bbdd8f787d060154ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65e95828e500cb1b2a5080bbdd8f787d060154ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65e95828e500cb1b2a5080bbdd8f787d060154ed"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "cf54bafa43f5602df9b474a0d3b304b7d9456000", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93895581f9c8c8591cdbd7152756a63d330736b9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93895581f9c8c8591cdbd7152756a63d330736b9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93895581f9c8c8591cdbd7152756a63d330736b9", "patch": "@@ -1,3 +1,8 @@\n+2013-11-02  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_vector_set): Adjust for\n+\tlittle endian.\n+\n 2013-11-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/constraints.md (Ts, Tv): New address constrains."}, {"sha": "31871b46bd8ae95e85cb0cdf9a44ecb2451e582f", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93895581f9c8c8591cdbd7152756a63d330736b9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93895581f9c8c8591cdbd7152756a63d330736b9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=93895581f9c8c8591cdbd7152756a63d330736b9", "patch": "@@ -5529,10 +5529,27 @@ rs6000_expand_vector_set (rtx target, rtx val, int elt)\n     XVECEXP (mask, 0, elt*width + i)\n       = GEN_INT (i + 0x10);\n   x = gen_rtx_CONST_VECTOR (V16QImode, XVEC (mask, 0));\n-  x = gen_rtx_UNSPEC (mode,\n-\t\t      gen_rtvec (3, target, reg,\n-\t\t\t\t force_reg (V16QImode, x)),\n-\t\t      UNSPEC_VPERM);\n+\n+  if (BYTES_BIG_ENDIAN)\n+    x = gen_rtx_UNSPEC (mode,\n+\t\t\tgen_rtvec (3, target, reg,\n+\t\t\t\t   force_reg (V16QImode, x)),\n+\t\t\tUNSPEC_VPERM);\n+  else \n+    {\n+      /* Invert selector.  */\n+      rtx splat = gen_rtx_VEC_DUPLICATE (V16QImode,\n+\t\t\t\t\t gen_rtx_CONST_INT (QImode, -1));\n+      rtx tmp = gen_reg_rtx (V16QImode);\n+      emit_move_insn (tmp, splat);\n+      x = gen_rtx_MINUS (V16QImode, tmp, force_reg (V16QImode, x));\n+      emit_move_insn (tmp, x);\n+\n+      /* Permute with operands reversed and adjusted selector.  */\n+      x = gen_rtx_UNSPEC (mode, gen_rtvec (3, reg, target, tmp),\n+\t\t\t  UNSPEC_VPERM);\n+    }\n+\n   emit_insn (gen_rtx_SET (VOIDmode, target, x));\n }\n "}, {"sha": "e0dad494f4a28cc0703e57632a5d0726cd92ff81", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93895581f9c8c8591cdbd7152756a63d330736b9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93895581f9c8c8591cdbd7152756a63d330736b9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93895581f9c8c8591cdbd7152756a63d330736b9", "patch": "@@ -1,3 +1,7 @@\n+2013-11-02  Bill Schmidt  <wschmidt@vnet.linux.ibm.com>\n+\n+\t* gcc.dg/vmx/vec-set.c: New.\n+\n 2013-11-02  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/29234"}, {"sha": "fa11c47a122b96301154c7d7f6546776b1ab6f51", "filename": "gcc/testsuite/gcc.dg/vmx/vec-set.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93895581f9c8c8591cdbd7152756a63d330736b9/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fvec-set.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93895581f9c8c8591cdbd7152756a63d330736b9/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fvec-set.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2Fvec-set.c?ref=93895581f9c8c8591cdbd7152756a63d330736b9", "patch": "@@ -0,0 +1,14 @@\n+#include \"harness.h\"\n+\n+vector short\n+vec_set (short m)\n+{\n+  return (vector short){m, 0, 0, 0, 0, 0, 0, 0};\n+}\n+\n+static void test()\n+{\n+  check (vec_all_eq (vec_set (7),\n+\t\t     ((vector short){7, 0, 0, 0, 0, 0, 0, 0})),\n+\t \"vec_set\");\n+}"}]}