{"sha": "56bedf420fd15955cfa194ead87f2beaedac9509", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZiZWRmNDIwZmQxNTk1NWNmYTE5NGVhZDg3ZjJiZWFlZGFjOTUwOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-03-08T13:11:54Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-03-08T13:11:54Z"}, "message": "[multiple changes]\n\n2007-07-08  Tobias Burnus  <burnus@net-b.de>\n\n       * module.c (gfc_match_use): Support renaming of operators\n       in USE statements.\n       * gfortran.texi (Fortran 2003 Status): Document support of\n       renaming of operators.\n\n2007-03-08  Tobias Burnus  <burnus@net-b.de>\n\n       * gfortran.dg/use_5.f90: New test.\n       * gfortran.dg/use_6.f90: Ditto.\n       * gfortran.dg/use_7.f90: Ditto.\n\nFrom-SVN: r122699", "tree": {"sha": "e00b232da514f8ce7cd1afe09475bd9cd69a6751", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e00b232da514f8ce7cd1afe09475bd9cd69a6751"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56bedf420fd15955cfa194ead87f2beaedac9509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bedf420fd15955cfa194ead87f2beaedac9509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56bedf420fd15955cfa194ead87f2beaedac9509", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56bedf420fd15955cfa194ead87f2beaedac9509/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ac497e6a6e1ea5232c801338a34a41ae30555650", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac497e6a6e1ea5232c801338a34a41ae30555650", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac497e6a6e1ea5232c801338a34a41ae30555650"}], "stats": {"total": 184, "additions": 176, "deletions": 8}, "files": [{"sha": "b7e4c4ad34c7e3856e7ef6d7b06856a6bed8b474", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=56bedf420fd15955cfa194ead87f2beaedac9509", "patch": "@@ -1,3 +1,10 @@\n+2007-07-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* module.c (gfc_match_use): Support renaming of operators\n+\tin USE statements.\n+\t* gfortran.texi (Fortran 2003 Status): Document support of\n+\trenaming of operators.\n+\n 2007-07-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/30973"}, {"sha": "52b4c2c1c8c0d8bb3f1eb2dbefef4eb99ed7cf8b", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=56bedf420fd15955cfa194ead87f2beaedac9509", "patch": "@@ -764,6 +764,9 @@ host-associated derived types.\n attribute; supported intrinsic modules: @code{ISO_FORTRAN_ENV},\n @code{OMP_LIB} and @code{OMP_LIB_KINDS}.\n \n+@item\n+Renaming of operators in the @code{USE} statement.\n+\n @end itemize\n \n "}, {"sha": "5b8bd550f9a351c6a3e5e91672817fd0175f3163", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=56bedf420fd15955cfa194ead87f2beaedac9509", "patch": "@@ -488,7 +488,7 @@ gfc_match_use (void)\n {\n   char name[GFC_MAX_SYMBOL_LEN + 1], module_nature[GFC_MAX_SYMBOL_LEN + 1];\n   gfc_use_rename *tail = NULL, *new;\n-  interface_type type;\n+  interface_type type, type2;\n   gfc_intrinsic_op operator;\n   match m;\n \n@@ -588,18 +588,26 @@ gfc_match_use (void)\n \t  gfc_error (\"Missing generic specification in USE statement at %C\");\n \t  goto cleanup;\n \n+\tcase INTERFACE_USER_OP:\n \tcase INTERFACE_GENERIC:\n \t  m = gfc_match (\" =>\");\n \n+\t  if (type == INTERFACE_USER_OP && m == MATCH_YES\n+\t      && (gfc_notify_std (GFC_STD_F2003, \"Fortran 2003: Renaming \"\n+\t\t\t\t  \"operators in USE statements at %C\")\n+\t         == FAILURE))\n+\t    goto cleanup;\n+\n \t  if (only_flag)\n \t    {\n \t      if (m != MATCH_YES)\n \t\tstrcpy (new->use_name, name);\n \t      else\n \t\t{\n \t\t  strcpy (new->local_name, name);\n-\n-\t\t  m = gfc_match_name (new->use_name);\n+\t\t  m = gfc_match_generic_spec (&type2, new->use_name, &operator);\n+\t\t  if (type != type2)\n+\t\t    goto syntax;\n \t\t  if (m == MATCH_NO)\n \t\t    goto syntax;\n \t\t  if (m == MATCH_ERROR)\n@@ -612,7 +620,9 @@ gfc_match_use (void)\n \t\tgoto syntax;\n \t      strcpy (new->local_name, name);\n \n-\t      m = gfc_match_name (new->use_name);\n+\t      m = gfc_match_generic_spec (&type2, new->use_name, &operator);\n+\t      if (type != type2)\n+\t\tgoto syntax;\n \t      if (m == MATCH_NO)\n \t\tgoto syntax;\n \t      if (m == MATCH_ERROR)\n@@ -627,11 +637,10 @@ gfc_match_use (void)\n \t      goto cleanup;\n \t    }\n \n-\t  break;\n+\t  if (type == INTERFACE_USER_OP)\n+\t    new->operator = operator;\n \n-\tcase INTERFACE_USER_OP:\n-\t  strcpy (new->use_name, name);\n-\t  /* Fall through */\n+\t  break;\n \n \tcase INTERFACE_INTRINSIC_OP:\n \t  new->operator = operator;"}, {"sha": "cef80b0e2548c7abd563dbff95ea3f644644fcac", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=56bedf420fd15955cfa194ead87f2beaedac9509", "patch": "@@ -1,3 +1,9 @@\n+2007-03-08  Tobias Burnus  <burnus@net-b.de>\n+\n+\t* gfortran.dg/use_5.f90: New test.\n+\t* gfortran.dg/use_6.f90: Ditto.\n+\t* gfortran.dg/use_7.f90: Ditto.\n+\n 2007-03-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/30973"}, {"sha": "6d2de048043c59cbadae8598845e0056ab510322", "filename": "gcc/testsuite/gfortran.dg/use_5.f90", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_5.f90?ref=56bedf420fd15955cfa194ead87f2beaedac9509", "patch": "@@ -0,0 +1,49 @@\n+! { dg-do \"run\" }\n+! Renaming of operators\n+module z\n+  interface operator(.addfive.)\n+    module procedure sub2\n+  end interface\n+contains\n+function sub2(x)\n+  integer :: sub\n+  integer,intent(in) :: x\n+  sub2 = x + 5\n+end function sub2\n+end module z\n+\n+module y\n+  interface operator(.addfive.)\n+    module procedure sub\n+  end interface\n+contains\n+function sub(x)\n+  integer :: sub\n+  integer,intent(in) :: x\n+  sub = x + 15\n+end function sub\n+end module y\n+\n+module x\n+  interface operator(.addfive.)\n+    module procedure sub\n+  end interface\n+contains\n+function sub(x)\n+  integer :: sub\n+  integer,intent(in) :: x\n+  sub = x + 25\n+end function sub\n+end module x\n+\n+use x, only : operator(.bar.) => operator(.addfive.)\n+use y, operator(.my.) => operator(.addfive.)\n+use z\n+ integer :: i\n+ i = 2\n+ if ((.bar. i) /= 2+25) call abort ()\n+ if ((.my. i) /= 2+15) call abort ()\n+ if ((.addfive. i) /= 2+5) call abort ()\n+end\n+\n+! { dg-final { cleanup-tree-dump \"x y z\" } }"}, {"sha": "f0b133e67aefefd0788a4f5cab2f40df2755dd3e", "filename": "gcc/testsuite/gfortran.dg/use_6.f90", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_6.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_6.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_6.f90?ref=56bedf420fd15955cfa194ead87f2beaedac9509", "patch": "@@ -0,0 +1,45 @@\n+! { dg-do \"compile\" }\n+! { dg-options \"-std=f95\" }\n+! Renaming of operators\n+module z\n+  interface operator(.addfive.)\n+    module procedure sub2\n+  end interface\n+contains\n+function sub2(x)\n+  integer :: sub\n+  integer,intent(in) :: x\n+  sub2 = x + 5\n+end function sub2\n+end module z\n+\n+module y\n+  interface operator(.addfive.)\n+    module procedure sub\n+  end interface\n+contains\n+function sub(x)\n+  integer :: sub\n+  integer,intent(in) :: x\n+  sub = x + 15\n+end function sub\n+end module y\n+\n+module x\n+  interface operator(.addfive.)\n+    module procedure sub\n+  end interface\n+contains\n+function sub(x)\n+  integer :: sub\n+  integer,intent(in) :: x\n+  sub = x + 25\n+end function sub\n+end module x\n+\n+use x, only : operator(.bar.) => operator(.addfive.) ! { dg-error \"Fortran 2003: Renaming operators in USE statements\" }\n+use y, operator(.my.) => operator(.addfive.) ! { dg-error \"Fortran 2003: Renaming operators in USE statements\" }\n+use z\n+end\n+\n+! { dg-final { cleanup-tree-dump \"x y z\" } }"}, {"sha": "3973176b09bcb86686530f8748b1c9b86d032daf", "filename": "gcc/testsuite/gfortran.dg/use_7.f90", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56bedf420fd15955cfa194ead87f2beaedac9509/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuse_7.f90?ref=56bedf420fd15955cfa194ead87f2beaedac9509", "patch": "@@ -0,0 +1,49 @@\n+! { dg-do \"compile\" }\n+! Renaming of operators\n+module z\n+  type myT\n+    integer :: t\n+  end type myT\n+  interface operator(+)\n+    module procedure sub2\n+  end interface\n+contains\n+function sub2(x)\n+  type(myT) :: sub2\n+  type(myT),intent(in) :: x\n+  sub2%t = x%t + 5\n+end function sub2\n+end module z\n+\n+module y\n+  interface operator(.addfive.)\n+    module procedure sub\n+  end interface\n+contains\n+function sub(x)\n+  integer :: sub\n+  integer,intent(in) :: x\n+  sub = x + 15\n+end function sub\n+end module y\n+\n+module x\n+  interface operator(.addfive.)\n+    module procedure sub\n+  end interface\n+contains\n+function sub(x)\n+  integer :: sub\n+  integer,intent(in) :: x\n+  sub = x + 25\n+end function sub\n+end module x\n+\n+use z, operator(-) => operator(+) ! { dg-error \"Syntax error in USE statement\" }\n+use z, operator(.op.) => operator(+) ! { dg-error \"Syntax error in USE statement\" }\n+use x, only : bar => operator(.addfive.) ! { dg-error \"Syntax error in USE statement\" }\n+use y, operator(.my.) => sub ! { dg-error \"Syntax error in USE statement\" }\n+use y, operator(+) => operator(.addfive.) ! { dg-error \"Syntax error in USE statement\" }\n+end\n+\n+! { dg-final { cleanup-tree-dump \"x y z\" } }"}]}