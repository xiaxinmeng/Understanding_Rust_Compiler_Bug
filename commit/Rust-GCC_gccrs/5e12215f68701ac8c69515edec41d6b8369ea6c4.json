{"sha": "5e12215f68701ac8c69515edec41d6b8369ea6c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUxMjIxNWY2ODcwMWFjOGM2OTUxNWVkZWM0MWQ2YjgzNjllYTZjNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-21T13:34:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-12-21T13:34:12Z"}, "message": "[multiple changes]\n\n2011-12-21  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gnat1drv.adb (Gnat1Drv): Always delete old scil files in\n\tCodePeer mode.\n\n2011-12-21  Robert Dewar  <dewar@adacore.com>\n\n\t* comperr.adb: Minor reformatting.\n\n2011-12-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* aspects.ads: New table Base_Aspect, to indicate that an aspect\n\tis defined on a base type.\n\t* aspects.adb (Find_Aspect): If the aspect is a Base_Aspect,\n\texamine the representation items of the base type.\n\n2011-12-21  Pascal Obry  <obry@adacore.com>\n\n\t* gnat_ugn.texi, prj.ads, prj-nmsc.adb, prj-attr.adb, projects.texi,\n\tsnames.ads-tmpl: Use Encapsulated instead of Fully Standalone library.\n\n2011-12-21  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c (__gnat_is_executable_file_attr) [_WIN32]: Add parentheses\n\tto kill warning.\n\nFrom-SVN: r182582", "tree": {"sha": "9b067a696bc14ff72b59521b21f2088104a146e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b067a696bc14ff72b59521b21f2088104a146e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e12215f68701ac8c69515edec41d6b8369ea6c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e12215f68701ac8c69515edec41d6b8369ea6c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e12215f68701ac8c69515edec41d6b8369ea6c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e12215f68701ac8c69515edec41d6b8369ea6c4/comments", "author": null, "committer": null, "parents": [{"sha": "427f99e2d6a7ce6df094a96fd4e26774d87b1b02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/427f99e2d6a7ce6df094a96fd4e26774d87b1b02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/427f99e2d6a7ce6df094a96fd4e26774d87b1b02"}], "stats": {"total": 160, "additions": 113, "deletions": 47}, "files": [{"sha": "3172ef72429eaa8d58d01956134d6cf453d53fc7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -1,3 +1,29 @@\n+2011-12-21  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gnat1drv.adb (Gnat1Drv): Always delete old scil files in\n+\tCodePeer mode.\n+\n+2011-12-21  Robert Dewar  <dewar@adacore.com>\n+\n+\t* comperr.adb: Minor reformatting.\n+\n+2011-12-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* aspects.ads: New table Base_Aspect, to indicate that an aspect\n+\tis defined on a base type.\n+\t* aspects.adb (Find_Aspect): If the aspect is a Base_Aspect,\n+\texamine the representation items of the base type.\n+\n+2011-12-21  Pascal Obry  <obry@adacore.com>\n+\n+\t* gnat_ugn.texi, prj.ads, prj-nmsc.adb, prj-attr.adb, projects.texi,\n+\tsnames.ads-tmpl: Use Encapsulated instead of Fully Standalone library.\n+\n+2011-12-21  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c (__gnat_is_executable_file_attr) [_WIN32]: Add parentheses\n+\tto kill warning.\n+\n 2011-12-21  Arnaud Charlet  <charlet@adacore.com>\n \n \t* comperr.adb (Delete_SCIL_Files): Also delete .scilx files."}, {"sha": "4c96d56b1cee6ae4b6426420c6f27aa68cb92f85", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -2189,10 +2189,10 @@ __gnat_is_executable_file_attr (char* name, struct file_attributes* attr)\n \n \t /* look for last .exe */\n \t if (last)\n-\t   while (l = _tcsstr(last+1, _T(\".exe\"))) last = l;\n+\t   while ((l = _tcsstr(last+1, _T(\".exe\")))) last = l;\n \n \t attr->executable = GetFileAttributes (wname) != INVALID_FILE_ATTRIBUTES\n-\t   && last - wname == (int) (_tcslen (wname) - 4);\n+\t   && (last - wname) == (int) (_tcslen (wname) - 4);\n        }\n #else\n      __gnat_stat_to_attr (-1, name, attr);"}, {"sha": "cd3bdc087ec62d1f490bd683eed6488a4e559e2a", "filename": "gcc/ada/aspects.adb", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Faspects.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Faspects.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.adb?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -125,17 +125,29 @@ package body Aspects is\n \n    function Find_Aspect (Ent : Entity_Id; A : Aspect_Id) return Node_Id is\n       Ritem : Node_Id;\n+      Typ   : Entity_Id;\n \n    begin\n \n       --  If the aspect is an inherited one and the entity is a class-wide\n-      --  type, use the aspect of the specific type.\n+      --  type, use the aspect of the specific type. If the type is a base\n+      --  aspect, examine the rep. items of the base type.\n+\n+      if Is_Type (Ent) then\n+         if Base_Aspect (A) then\n+            Typ := Base_Type (Ent);\n+         else\n+            Typ := Ent;\n+         end if;\n+\n+         if Is_Class_Wide_Type (Typ)\n+           and then Inherited_Aspect (A)\n+         then\n+            Ritem := First_Rep_Item (Etype (Typ));\n+         else\n+            Ritem := First_Rep_Item (Typ);\n+         end if;\n \n-      if Is_Type (Ent)\n-        and then Is_Class_Wide_Type (Ent)\n-        and then Inherited_Aspect (A)\n-      then\n-         Ritem := First_Rep_Item (Etype (Ent));\n       else\n          Ritem := First_Rep_Item (Ent);\n       end if;"}, {"sha": "3ce21c57a0f19f247694fdb9ff5ba4468a38b8c9", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -147,6 +147,24 @@ package Aspects is\n                         Aspect_Post          => True,\n                         others               => False);\n \n+   --  The following array indicates aspects that a subtype inherits from\n+   --  its base type. True means that the subtype inherits the aspect from\n+   --  its base type. False means it is not inherited.\n+\n+   Base_Aspect : constant array (Aspect_Id) of Boolean :=\n+                   (Aspect_Atomic                  => True,\n+                    Aspect_Atomic_Components       => True,\n+                    Aspect_Discard_Names           => True,\n+                    Aspect_Independent_Components  => True,\n+                    Aspect_Iterator_Element        => True,\n+                    Aspect_Constant_Indexing       => True,\n+                    Aspect_Default_Iterator        => True,\n+                    Aspect_Type_Invariant          => True,\n+                    Aspect_Unchecked_Union         => True,\n+                    Aspect_Variable_Indexing       => True,\n+                    Aspect_Volatile                => True,\n+                    others                         => False);\n+\n    --  The following array identifies all implementation defined aspects\n \n    Impl_Defined_Aspects : constant array (Aspect_Id) of Boolean :="}, {"sha": "9bf83f3879dd989b757237244be67e7da036cdaf", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -440,7 +440,8 @@ package body Comperr is\n    procedure Delete_SCIL_Files is\n       Main      : Node_Id;\n       Unit_Name : Node_Id;\n-      Success   : Boolean;\n+\n+      Success : Boolean;\n       pragma Unreferenced (Success);\n \n       procedure Decode_Name_Buffer;\n@@ -451,9 +452,12 @@ package body Comperr is\n       ------------------------\n \n       procedure Decode_Name_Buffer is\n-         J : Natural := 1;\n-         K : Natural := 0;\n+         J : Natural;\n+         K : Natural;\n+\n       begin\n+         J := 1;\n+         K := 0;\n          while J <= Name_Len loop\n             K := K + 1;\n \n@@ -473,6 +477,8 @@ package body Comperr is\n          Name_Len := K;\n       end Decode_Name_Buffer;\n \n+   --  Start of processing for Decode_Name_Buffer\n+\n    begin\n       --  If parsing was not successful, no Main_Unit is available, so return\n       --  immediately.\n@@ -493,8 +499,9 @@ package body Comperr is\n          when N_Package_Body =>\n             Unit_Name := Corresponding_Spec (Main);\n \n+         --  Should never happen, but can be ignored in production\n+\n          when others =>\n-            --  Should never happen, but can be ignored in production\n             pragma Assert (False);\n             return;\n       end case;\n@@ -507,8 +514,9 @@ package body Comperr is\n             Get_Name_String (Chars (Defining_Identifier (Unit_Name)));\n             Decode_Name_Buffer;\n \n+         --  Should never happen, but can be ignored in production\n+\n          when others =>\n-            --  Should never happen, but can be ignored in production\n             pragma Assert (False);\n             return;\n       end case;"}, {"sha": "cd992513a3cf29c5d2a056df3ce351cad1e05035", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -832,6 +832,14 @@ begin\n       Main_Kind := Nkind (Unit (Main_Unit_Node));\n       Check_Bad_Body;\n \n+      --  In CodePeer mode we always delete old SCIL files before regenerating\n+      --  new ones, in case of e.g. errors, and also to remove obsolete scilx\n+      --  files generated by CodePeer itself.\n+\n+      if CodePeer_Mode then\n+         Comperr.Delete_SCIL_Files;\n+      end if;\n+\n       --  Exit if compilation errors detected\n \n       Errout.Finalize (Last_Call => False);\n@@ -851,12 +859,6 @@ begin\n             Tree_Gen;\n          end if;\n \n-         --  In CodePeer mode we delete SCIL files if there is an error\n-\n-         if CodePeer_Mode then\n-            Comperr.Delete_SCIL_Files;\n-         end if;\n-\n          Errout.Finalize (Last_Call => True);\n          Exit_Program (E_Errors);\n       end if;"}, {"sha": "b39a0c360dee7889329ab5b02e5dcb8a6319ab07", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -16360,26 +16360,26 @@ imported from Ada units outside of the library. If other units are imported,\n the binding phase will fail.\n \n @noindent\n-It is also possible to build a fully stand-alone library where not only\n+It is also possible to build an encapsulated library where not only\n the code to elaborate and finalize the library is embedded but also\n ensuring that the library is linked only against static\n-libraries. So a fully stand-alone library only depends on system\n+libraries. So an encapsulated library only depends on system\n libraries, all other code, including the GNAT runtime, is embedded. To\n-build a fully stand-alone library the attribute\n-@code{Library_Standalone} must be set to @code{full}:\n+build an encapsulated library the attribute\n+@code{Library_Standalone} must be set to @code{encapsulated}:\n \n @smallexample @c projectfile\n @group\n    for Library_Dir use \"lib_dir\";\n    for Library_Name use \"dummy\";\n    for Library_Interface use (\"int1\", \"int1.child\");\n-   for Library_Standalone use \"full\";\n+   for Library_Standalone use \"encapsulated\";\n @end group\n @end smallexample\n \n @noindent\n The default value for this attribute is @code{standard} in which case\n-a not fully stand-alone library is built.\n+a stand-alone library is built.\n \n The attribute @code{Library_Src_Dir} may be specified for a\n Stand-Alone Library. @code{Library_Src_Dir} is a simple attribute that has a"}, {"sha": "ba569e119e64492c5ba924882e60592884e61f67", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -106,8 +106,8 @@ package body Prj.Attr is\n    \"SVlibrary_version#\" &\n    \"LVlibrary_interface#\" &\n    \"SVlibrary_standalone#\" &\n-   \"LVlibrary_fully_standalone_options#\" &\n-   \"SVlibrary_fully_standalone_supported#\" &\n+   \"LVlibrary_encapsulated_options#\" &\n+   \"SVlibrary_encapsulated_supported#\" &\n    \"SVlibrary_auto_init#\" &\n    \"LVleading_library_options#\" &\n    \"LVlibrary_options#\" &"}, {"sha": "3e86850ff0f8c10f77be7d152a34a9dd73e43aee", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -2220,20 +2220,20 @@ package body Prj.Nmsc is\n                   end;\n \n                elsif\n-                 Attribute.Name = Name_Library_Fully_Standalone_Supported\n+                 Attribute.Name = Name_Library_Encapsulated_Supported\n                then\n                   declare\n                      pragma Unsuppress (All_Checks);\n                   begin\n-                     Project.Config.Lib_Fully_Standalone_Supported :=\n+                     Project.Config.Lib_Encapsulated_Supported :=\n                        Boolean'Value (Get_Name_String (Attribute.Value.Value));\n                   exception\n                      when Constraint_Error =>\n                         Error_Msg\n                           (Data.Flags,\n                            \"invalid value \"\"\"\n                              & Get_Name_String (Attribute.Value.Value)\n-                             & \"\"\" for Library_Fully_Standalone_Supported\",\n+                             & \"\"\" for Library_Encapsulated_Supported\",\n                            Attribute.Value.Location, Project);\n                   end;\n \n@@ -2955,28 +2955,28 @@ package body Prj.Nmsc is\n \n             elsif Project.Library_Kind /= Static\n               and then not Lib_Standalone.Default\n-              and then Get_Name_String (Lib_Standalone.Value) = \"full\"\n+              and then Get_Name_String (Lib_Standalone.Value) = \"encapsulated\"\n               and then Proj.Library_Kind /= Static\n             then\n-               --  A fully standalone library must depend only on static\n-               --  libraries.\n+               --  An encapsulated library must depend only on static libraries\n \n                Error_Msg_Name_1 := Project.Name;\n                Error_Msg_Name_2 := Proj.Name;\n \n                Error_Msg\n                  (Data.Flags,\n                   Continuation.all &\n-                    \"standalone library project %% cannot import shared \" &\n+                    \"encapsulated library project %% cannot import shared \" &\n                     \"library project %%\",\n                   Project.Location, Project);\n                Continuation := Continuation_String'Access;\n \n             elsif Project.Library_Kind /= Static\n               and then Proj.Library_Kind = Static\n-              and then (Lib_Standalone.Default\n-                         or else\n-                           Get_Name_String (Lib_Standalone.Value) /= \"full\")\n+              and then\n+                (Lib_Standalone.Default\n+                  or else\n+                    Get_Name_String (Lib_Standalone.Value) /= \"encapsulated\")\n             then\n                Error_Msg_Name_1 := Project.Name;\n                Error_Msg_Name_2 := Proj.Name;\n@@ -4532,8 +4532,8 @@ package body Prj.Nmsc is\n                if Name_Buffer (1 .. Name_Len) = \"standard\" then\n                   Project.Standalone_Library := Standard;\n \n-               elsif Name_Buffer (1 .. Name_Len) = \"full\" then\n-                  Project.Standalone_Library := Full;\n+               elsif Name_Buffer (1 .. Name_Len) = \"encapsulated\" then\n+                  Project.Standalone_Library := Encapsulated;\n \n                elsif Name_Buffer (1 .. Name_Len) = \"no\" then\n                   Project.Standalone_Library := No;"}, {"sha": "877f656c0cf4f1b8e5bd7d30e5407707f727ee11", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -1033,7 +1033,7 @@ package Prj is\n       --  The level of library support. Specified in the configuration. Support\n       --  is none, static libraries only or both static and shared libraries.\n \n-      Lib_Fully_Standalone_Supported : Boolean := False;\n+      Lib_Encapsulated_Supported : Boolean := False;\n       --  True when building fully standalone libraries supported on the target\n \n       Archive_Builder : Name_List_Index := No_Name_List;\n@@ -1106,7 +1106,7 @@ package Prj is\n                                Resp_File_Format               => None,\n                                Resp_File_Options              => No_Name_List,\n                                Lib_Support                    => None,\n-                               Lib_Fully_Standalone_Supported => False,\n+                               Lib_Encapsulated_Supported     => False,\n                                Archive_Builder                => No_Name_List,\n                                Archive_Builder_Append_Option  => No_Name_List,\n                                Archive_Indexer                => No_Name_List,\n@@ -1151,7 +1151,7 @@ package Prj is\n \n    --  The following record describes a project file representation\n \n-   type Standalone is (No, Standard, Full);\n+   type Standalone is (No, Standard, Encapsulated);\n \n    type Project_Data (Qualifier : Project_Qualifier := Unspecified) is record\n "}, {"sha": "38caaf2da47672c6d05d5efe12d561454e0de2f2", "filename": "gcc/ada/projects.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fprojects.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fprojects.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprojects.texi?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -1781,8 +1781,8 @@ two attributes that make a project a Library Project (@code{Library_Name} and\n @cindex @code{Library_Standalone}\n   This attribute defines the kind of standalone library to\n   build. Values are either @code{standard} (the default), @code{no} or\n-  @code{full}. When @code{standard} is used the code to elaborate and\n-  finalize the library is embedded, when @code{full} is used the\n+  @code{encapsulated}. When @code{standard} is used the code to elaborate and\n+  finalize the library is embedded, when @code{encapsulated} is used the\n   library can furthermore only depends on static libraries (including\n   the GNAT runtime). This attribute can be set to @code{no} to make it clear\n   that the library should not be standalone in which case the\n@@ -1793,7 +1793,7 @@ two attributes that make a project a Library Project (@code{Library_Name} and\n      for Library_Dir use \"lib\";\n      for Library_Name use \"loggin\";\n      for Library_Interface use (\"lib1\", \"lib2\");  --  unit names\n-     for Library_Standalone use \"full\";\n+     for Library_Standalone use \"encapsulated\";\n @end group\n @end smallexample\n "}, {"sha": "df284addb20cfe38afe4c69d192eff9c6fca76be", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e12215f68701ac8c69515edec41d6b8369ea6c4/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=5e12215f68701ac8c69515edec41d6b8369ea6c4", "patch": "@@ -1160,8 +1160,8 @@ package Snames is\n    Name_Library_Partial_Linker             : constant Name_Id := N + $;\n    Name_Library_Reference_Symbol_File      : constant Name_Id := N + $;\n    Name_Library_Standalone                 : constant Name_Id := N + $;\n-   Name_Library_Fully_Standalone_Options   : constant Name_Id := N + $;\n-   Name_Library_Fully_Standalone_Supported : constant Name_Id := N + $; -- GB\n+   Name_Library_Encapsulated_Options       : constant Name_Id := N + $;\n+   Name_Library_Encapsulated_Supported     : constant Name_Id := N + $; -- GB\n    Name_Library_Src_Dir                    : constant Name_Id := N + $;\n    Name_Library_Support                    : constant Name_Id := N + $;\n    Name_Library_Symbol_File                : constant Name_Id := N + $;"}]}