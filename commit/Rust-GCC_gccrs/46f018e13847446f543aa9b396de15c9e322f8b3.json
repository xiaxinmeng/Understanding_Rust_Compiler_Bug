{"sha": "46f018e13847446f543aa9b396de15c9e322f8b3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZmMDE4ZTEzODQ3NDQ2ZjU0M2FhOWIzOTZkZTE1YzllMzIyZjhiMw==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-06-28T12:26:38Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2001-06-28T12:26:38Z"}, "message": "diagnostic.c (default_print_error_function): Tweak.\n\n\n\t* diagnostic.c (default_print_error_function): Tweak.\n\t(report_error_function): Likewise.\n\t* toplev.h (default_print_error_function): Move to...\n\t* diagnostic.h: ...here. Add a `diagnostic_context *' parameter.\n\t* tree.h (print_error_function): Move to...\n\t* diagnostic.h: ...here. Add a `diagnostic_context *' parameter.\n\nch/\n\n\t* lang.c: #include diagnostic.h\n\t(chill_print_error_function): Add a dummy `diagnostic_context *'.\n\t* Makefile.in (lang.o): Depend on diagnostic.h\n\ncp/\n\n\t* error.c (lang_print_error_function): Add a `diagnostic_context *'\n\tparameter. Tweak.\n\nf/\n\n\t* Make-lang.in (f/com.o): Depend on diagnostic.h\n\t* com.c: #include diagnostic.h\n\t(lang_print_error_function): Take a 'diagnostic_context *'.\n\njava/\n\n\t* lang.c: #include diagnostic.h\n\t(lang_print_error): Add a `diagnostic_context *' parameter.\n\t(java_dummy_print): Likewise.\n\t* Make-lang.in (JAVA_LEX_C): Depend on diagnostic.h\n\nFrom-SVN: r43638", "tree": {"sha": "729c52b32f832217f832454115fb06e918991ec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/729c52b32f832217f832454115fb06e918991ec2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46f018e13847446f543aa9b396de15c9e322f8b3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f018e13847446f543aa9b396de15c9e322f8b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46f018e13847446f543aa9b396de15c9e322f8b3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46f018e13847446f543aa9b396de15c9e322f8b3/comments", "author": null, "committer": null, "parents": [{"sha": "eeb35b4552717ded7a8e006854be6766bb6237c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb35b4552717ded7a8e006854be6766bb6237c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb35b4552717ded7a8e006854be6766bb6237c4"}], "stats": {"total": 119, "additions": 83, "deletions": 36}, "files": [{"sha": "e7ed3de7d7ada02f3051ac75577dd8ae9e78b123", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -1,3 +1,12 @@\n+2001-06-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* diagnostic.c (default_print_error_function): Tweak.\n+\t(report_error_function): Likewise.\n+\t* toplev.h (default_print_error_function): Move to...\n+\t* diagnostic.h: ...here. Add a `diagnostic_context *' parameter.\n+\t* tree.h (print_error_function): Move to...\n+\t* diagnostic.h: ...here. Add a `diagnostic_context *' parameter.\n+\n Thu Jun 28 06:16:45 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* expr.c (expand_assignment): When have varying-length object,"}, {"sha": "88fbd14129781772bd08e81c4681972dbd754114", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -1,3 +1,9 @@\n+2001-06-28  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n+\n+\t* lang.c: #include diagnostic.h\n+\t(chill_print_error_function): Add a dummy `diagnostic_context *'.\n+\t* Makefile.in (lang.o): Depend on diagnostic.h\n+\n 2001-06-10  Gabriel Dos Reis  <gdr@codesourcery.com>\n \n \t* decl.c: #include diagnostic.h"}, {"sha": "cfaf634141b2cfde3deab434fcd9f542e8b7312e", "filename": "gcc/ch/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fch%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fch%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FMakefile.in?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -286,7 +286,8 @@ grant.o: grant.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n inout.o : inout.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../flags.h \\\n \t$(srcdir)/../input.h $(srcdir)/../system.h $(srcdir)/../toplev.h\n lang.o : lang.c $(CONFIG_H) $(CHILL_TREE_H) $(srcdir)/../input.h lex.h \\\n-\t$(srcdir)/../system.h $(srcdir)/../toplev.h $(EXPR_H) $(RTL_H)\n+\t$(srcdir)/../system.h $(srcdir)/../toplev.h $(EXPR_H) $(RTL_H) \\\n+\t$(srcdir)/../diagnostic.h\n lex.o : lex.c $(CONFIG_H) $(CHILL_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n \t$(srcdir)/../input.h $(srcdir)/parse.h $(srcdir)/../system.h\t\\\n \t$(srcdir)/../toplev.h lex.h $(srcdir)/../dwarfout.h hash.h"}, {"sha": "b698b29aa1b82e0a09940075b46947fb83c9ae84", "filename": "gcc/ch/lang.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fch%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fch%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Flang.c?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -29,6 +29,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"toplev.h\"\n #include \"rtl.h\"\n #include \"expr.h\"\n+#include \"diagnostic.h\"\n \n /* Type node for boolean types.  */\n \n@@ -54,7 +55,8 @@ const char* chill_real_input_filename;\n extern FILE* finput;\n \n static int deep_const_expr\t\t\tPARAMS ((tree));\n-static void chill_print_error_function\t\tPARAMS ((const char *));\n+static void chill_print_error_function          PARAMS ((diagnostic_context *,\n+                                                         const char *));\n \f\n /* Return 1 if the expression tree given has all\n    constant nodes as its leaves,otherwise. */\n@@ -229,7 +231,8 @@ lang_decode_option (argc, argv)\n }\n \n static void\n-chill_print_error_function (file)\n+chill_print_error_function (context, file)\n+     diagnostic_context *buffer __attribute__((__unused__));\n      const char *file;\n {\n   static tree last_error_function = NULL_TREE;"}, {"sha": "b0a186fa8d0f3f19bf2f83ead7c25639f29b76a5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -1,3 +1,8 @@\n+2001-06-28  Gabriel Dos Reis  <gdr@merlin.codesourcery.com>\n+\n+\t* error.c (lang_print_error_function): Add a `diagnostic_context *'\n+\tparameter. Tweak.\n+\n 2001-06-27  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \t* decl2.c (import_export_class): Update."}, {"sha": "3bb043dd02ec36173e84b51538490026860eb0f6", "filename": "gcc/cp/error.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -116,7 +116,8 @@ static void dump_scope PARAMS ((tree, int));\n static void dump_template_parms PARAMS ((tree, int, int));\n \n static const char *function_category PARAMS ((tree));\n-static void lang_print_error_function PARAMS ((const char *));\n+static void lang_print_error_function PARAMS ((diagnostic_context *,\n+                                               const char *));\n static void maybe_print_instantiation_context PARAMS ((output_buffer *));\n static void print_instantiation_full_context PARAMS ((output_buffer *));\n static void print_instantiation_partial_context PARAMS ((output_buffer *, tree,\n@@ -2470,16 +2471,17 @@ cv_to_string (p, v)\n }\n \n static void\n-lang_print_error_function (file)\n+lang_print_error_function (context, file)\n+     diagnostic_context *context;\n      const char *file;\n {\n   output_state os;\n \n-  default_print_error_function (file);\n-  os = output_buffer_state (diagnostic_buffer);\n-  output_set_prefix (diagnostic_buffer, file);\n-  maybe_print_instantiation_context (diagnostic_buffer);\n-  output_buffer_state (diagnostic_buffer) = os;\n+  default_print_error_function (context, file);\n+  os = output_buffer_state (context);\n+  output_set_prefix ((output_buffer *)context, file);\n+  maybe_print_instantiation_context ((output_buffer *)context);\n+  output_buffer_state (context) = os;\n }\n \n static void"}, {"sha": "8f400908ac6969afe9145aa999ca64ce693d0dc3", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -121,8 +121,8 @@ static int last_error_tick;\n /* Called by report_error_function to print out function name.\n    Default may be overridden by language front-ends.  */\n \n-void (*print_error_function) PARAMS ((const char *)) =\n-  default_print_error_function;\n+void (*print_error_function) PARAMS ((diagnostic_context *, const char *))\n+     = default_print_error_function;\n \n /* Prevent recursion into the error handler.  */\n static int diagnostic_lock;\n@@ -1204,35 +1204,36 @@ announce_function (decl)\n    an error.  */\n \n void\n-default_print_error_function (file)\n-  const char *file;\n+default_print_error_function (context, file)\n+     diagnostic_context *context;\n+     const char *file;\n {\n   if (error_function_changed ())\n     {\n       char *prefix = file ? build_message_string (\"%s: \", file) : NULL;\n       output_state os;\n \n-      os = output_buffer_state (diagnostic_buffer);\n-      output_set_prefix (diagnostic_buffer, prefix);\n+      os = output_buffer_state (context);\n+      output_set_prefix ((output_buffer *)context, prefix);\n       \n       if (current_function_decl == NULL)\n-          output_add_string (diagnostic_buffer, _(\"At top level:\"));\n+          output_add_string ((output_buffer *)context, _(\"At top level:\"));\n       else\n \t{\n \t  if (TREE_CODE (TREE_TYPE (current_function_decl)) == METHOD_TYPE)\n             output_printf\n-              (diagnostic_buffer, \"In method `%s':\",\n+              ((output_buffer *)context, \"In member function `%s':\",\n                (*decl_printable_name) (current_function_decl, 2));\n \t  else\n             output_printf\n-              (diagnostic_buffer, \"In function `%s':\",\n+              ((output_buffer *)context, \"In function `%s':\",\n                (*decl_printable_name) (current_function_decl, 2));\n \t}\n-      output_add_newline (diagnostic_buffer);\n+      output_add_newline ((output_buffer *)context);\n \n       record_last_error_function ();\n-      output_buffer_to_stream (diagnostic_buffer);\n-      output_buffer_state (diagnostic_buffer) = os;\n+      output_buffer_to_stream ((output_buffer *)context);\n+      output_buffer_state (context) = os;\n       free ((char*) prefix);\n     }\n }\n@@ -1245,8 +1246,8 @@ void\n report_error_function (file)\n   const char *file ATTRIBUTE_UNUSED;\n {\n-  report_problematic_module (diagnostic_buffer);\n-  (*print_error_function) (input_filename);\n+  report_problematic_module ((output_buffer *)global_dc);\n+  (*print_error_function) (global_dc, input_filename);\n }\n \n void"}, {"sha": "8722ab7da9bb9411667b5b88a34693abdcaa095a", "filename": "gcc/diagnostic.h", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fdiagnostic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fdiagnostic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.h?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -310,4 +310,12 @@ extern int error_function_changed\tPARAMS ((void));\n extern void record_last_error_function\tPARAMS ((void));\n extern void report_problematic_module\tPARAMS ((output_buffer *));     \n \n+/* Called by report_error_function to print out function name.\n+ * Default may be overridden by language front-ends.  */\n+extern void (*print_error_function) PARAMS ((diagnostic_context *,\n+                                             const char *));\n+\n+extern void default_print_error_function PARAMS ((diagnostic_context *,\n+                                                  const char *));\n+\n #endif /* ! GCC_DIAGNOSTIC_H */"}, {"sha": "c2464d9f2562cc3ff4df5dda73812059903a7011", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -1,3 +1,9 @@\n+2001-06-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* Make-lang.in (f/com.o): Depend on diagnostic.h\n+\t* com.c: #include diagnostic.h\n+\t(lang_print_error_function): Take a 'diagnostic_context *'.\n+\n Wed Jun 13 11:22:39 2001  Mark Mitchell  <mark@codesourcery.com>\n \n \t* BUGS: Remove."}, {"sha": "a35bd18f336f58d173a219ef5df5621905e1dcc1", "filename": "gcc/f/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ff%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ff%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FMake-lang.in?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -417,7 +417,7 @@ f/com.o: f/com.c f/proj.h $(CONFIG_H) $(SYSTEM_H) flags.h $(RTL_H) $(TREE_H) \\\n  f/malloc.h f/info.h f/info-b.def f/info-k.def f/info-w.def f/target.h f/bad.h \\\n  f/bad.def f/where.h glimits.h f/top.h f/lex.h f/type.h f/intrin.h \\\n  f/intrin.def f/lab.h f/symbol.h f/symbol.def f/equiv.h f/storag.h f/global.h \\\n- f/name.h f/expr.h f/implic.h f/src.h f/st.h $(GGC_H) toplev.h\n+ f/name.h f/expr.h f/implic.h f/src.h f/st.h $(GGC_H) toplev.h diagnostic.h\n f/data.o: f/data.c f/proj.h $(CONFIG_H) $(SYSTEM_H) f/data.h f/bld.h f/bld-op.def \\\n  f/bit.h f/malloc.h f/com.h f/com-rt.def $(TREE_H) f/info.h f/info-b.def \\\n  f/info-k.def f/info-w.def f/target.h f/bad.h f/bad.def f/where.h glimits.h \\"}, {"sha": "c5a50193e99bfb1afe999408a0b9f66e661e7b9f", "filename": "gcc/f/com.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -89,6 +89,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"output.h\"  /* Must follow tree.h so TREE_CODE is defined! */\n #include \"convert.h\"\n #include \"ggc.h\"\n+#include \"diagnostic.h\"\n #endif\t/* FFECOM_targetCURRENT == FFECOM_targetGCC */\n \n #define FFECOM_GCC_INCLUDE 1\t/* Enable -I. */\n@@ -13989,7 +13990,7 @@ lang_printable_name (tree decl, int v)\n \n #if BUILT_FOR_270\n static void\n-lang_print_error_function (const char *file)\n+lang_print_error_function (diagnostic_context *context, const char *file)\n {\n   static ffeglobal last_g = NULL;\n   static ffesymbol last_s = NULL;"}, {"sha": "2c5cdd27a1ecb8ccd5e28ee83bca6536048fd23c", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -1,3 +1,10 @@\n+2001-06-28  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* lang.c: #include diagnostic.h\n+\t(lang_print_error): Add a `diagnostic_context *' parameter.\n+\t(java_dummy_print): Likewise.\n+\t* Make-lang.in (JAVA_LEX_C): Depend on diagnostic.h\n+\n 2001-06-27  Alexandre Petit-Bianco  <apbianco@redhat.com>\n \n \t* class.c (set_super_info): Call `set_class_decl_access_flags.'"}, {"sha": "87a66387361348f397e83ca5e2f0eb32ad84908a", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -266,7 +266,7 @@ java/jcf-write.o: java/jcf-write.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n java/jv-scan.o: java/jv-scan.c $(CONFIG_H) $(SYSTEM_H) version.h\n java/jvgenmain.o: java/jvgenmain.c $(CONFIG_H) $(JAVA_TREE_H) $(SYSTEM_H)\n java/lang.o: java/lang.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h input.h \\\n-  toplev.h $(SYSTEM_H) $(RTL_H) $(EXPR_H)\n+  toplev.h $(SYSTEM_H) $(RTL_H) $(EXPR_H) diagnostic.h\n java/mangle.o: java/mangle.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) $(SYSTEM_H) \\\n   toplev.h $(GGC_H)\n java/mangle_name.o: java/mangle_name.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) \\"}, {"sha": "e3567f50e0186e7e7e1e11d8a0d41d22dff2d10a", "filename": "gcc/java/lang.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -37,6 +37,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"flags.h\"\n #include \"xref.h\"\n #include \"ggc.h\"\n+#include \"diagnostic.h\"\n \n struct string_option\n {\n@@ -50,8 +51,8 @@ static void java_init_options PARAMS ((void));\n static int java_decode_option PARAMS ((int, char **));\n static void put_decl_string PARAMS ((const char *, int));\n static void put_decl_node PARAMS ((tree));\n-static void java_dummy_print PARAMS ((const char *));\n-static void lang_print_error PARAMS ((const char *));\n+static void java_dummy_print PARAMS ((diagnostic_context *, const char *));\n+static void lang_print_error PARAMS ((diagnostic_context *, const char *));\n static int process_option_with_no PARAMS ((char *,\n \t\t\t\t\t   struct string_option *,\n \t\t\t\t\t   int));\n@@ -592,7 +593,8 @@ lang_printable_name_wls (decl, v)\n    is the value of the hook print_error_function, called from toplev.c. */\n \n static void\n-lang_print_error (file)\n+lang_print_error (context, file)\n+     diagnostic_context *context __attribute__((__unused__));\n      const char *file;\n {\n   static tree last_error_function_context = NULL_TREE;\n@@ -673,7 +675,8 @@ java_init ()\n    function prototypes.  */\n \n static void\n-java_dummy_print (s)\n+java_dummy_print (c, s)\n+     diagnostic_context *c __attribute__ ((__unused__));\n      const char *s __attribute__ ((__unused__));\n {\n }"}, {"sha": "2a6dad13dd73927832bce5388a2b4dbdd05907b3", "filename": "gcc/toplev.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ftoplev.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ftoplev.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.h?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -84,7 +84,6 @@ extern void error_with_file_and_line\tPARAMS ((const char *, int,\n \t\t\t\t\t       ATTRIBUTE_PRINTF_3;\n extern void sorry\t\t\tPARAMS ((const char *, ...))\n \t\t\t\t\t       ATTRIBUTE_PRINTF_1;\n-extern void default_print_error_function PARAMS ((const char *));\n extern void report_error_function\tPARAMS ((const char *));\n \n extern void rest_of_decl_compilation\tPARAMS ((union tree_node *,"}, {"sha": "4f8dbef44eb953504ae73b85e74e45b5ab35cde1", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46f018e13847446f543aa9b396de15c9e322f8b3/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=46f018e13847446f543aa9b396de15c9e322f8b3", "patch": "@@ -2651,10 +2651,6 @@ extern void init_decl_processing\t\tPARAMS ((void));\n /* Function to identify which front-end produced the output file. */\n extern const char *lang_identify\t\t\tPARAMS ((void));\n \n-/* Called by report_error_function to print out function name.\n- * Default may be overridden by language front-ends.  */\n-extern void (*print_error_function) PARAMS ((const char *));\n-\n /* Function to replace the DECL_LANG_SPECIFIC field of a DECL with a copy.  */\n extern void copy_lang_decl\t\t\tPARAMS ((tree));\n "}]}