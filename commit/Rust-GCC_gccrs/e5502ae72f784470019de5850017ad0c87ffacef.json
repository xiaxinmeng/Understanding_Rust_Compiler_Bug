{"sha": "e5502ae72f784470019de5850017ad0c87ffacef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU1MDJhZTcyZjc4NDQ3MDAxOWRlNTg1MDAxN2FkMGM4N2ZmYWNlZg==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2020-11-06T12:50:35Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2020-11-06T22:14:15Z"}, "message": "rs6000: Fix TARGET_POWERPC64 vs. TARGET_64BIT confusion\n\nI gave Ke Wen bad advice, luckily David corrected me: it is true that we\ncannot use TARGET_POWERPC64 on many 32-bit OSes, since either the kernel\nor userland does not save the top half of the 64-bit integer registers,\nbut we do not have to care about that in separate patterns or related\ncode.  The flag is automatically not enabled by default on targets that\ndo not handle this correctly.\n\nThis patch fixes it.\n\nSegher\n\n2020-11-06  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\tPR target/96933\n\t* config/rs6000/rs6000.c (rs6000_expand_vector_init): Use\n\tTARGET_POWERPC64 instead of TARGET_64BIT.", "tree": {"sha": "d254623f3f895e9c2d8f1a0238e95db106405f54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d254623f3f895e9c2d8f1a0238e95db106405f54"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5502ae72f784470019de5850017ad0c87ffacef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5502ae72f784470019de5850017ad0c87ffacef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5502ae72f784470019de5850017ad0c87ffacef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5502ae72f784470019de5850017ad0c87ffacef/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c8e4f4d79e1c6fb239616e4e07cb46a8c3eb81a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c8e4f4d79e1c6fb239616e4e07cb46a8c3eb81a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c8e4f4d79e1c6fb239616e4e07cb46a8c3eb81a"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "63f1c06c01b09008cb8ecc22bddce2ef54c27642", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5502ae72f784470019de5850017ad0c87ffacef/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5502ae72f784470019de5850017ad0c87ffacef/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=e5502ae72f784470019de5850017ad0c87ffacef", "patch": "@@ -6799,7 +6799,7 @@ rs6000_expand_vector_init (rtx target, rtx vals)\n       for (i = 0; i < n_elts; i++)\n \t{\n \t  rtx tmp = force_reg (GET_MODE_INNER (mode), XVECEXP (vals, 0, i));\n-\t  if (TARGET_64BIT)\n+\t  if (TARGET_POWERPC64)\n \t    {\n \t      op[i] = gen_reg_rtx (DImode);\n \t      emit_insn (gen_zero_extendqidi2 (op[i], tmp));\n@@ -6909,7 +6909,7 @@ rs6000_expand_vector_init (rtx target, rtx vals)\n \t  for (i = 0; i < n_elts; i++)\n \t    {\n \t      vr_qi[i] = gen_reg_rtx (V16QImode);\n-\t      if (TARGET_64BIT)\n+\t      if (TARGET_POWERPC64)\n \t\temit_insn (gen_p8_mtvsrd_v16qidi2 (vr_qi[i], op[i]));\n \t      else\n \t\temit_insn (gen_p8_mtvsrwz_v16qisi2 (vr_qi[i], op[i]));"}]}