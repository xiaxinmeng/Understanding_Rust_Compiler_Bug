{"sha": "c05ddfa745d68f6d9db1a7d0992650a41986d376", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1ZGRmYTc0NWQ2OGY2ZDlkYjFhN2QwOTkyNjUwYTQxOTg2ZDM3Ng==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-11-01T22:42:01Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-11-01T22:42:01Z"}, "message": "* combine.c (combine_instructions): Use xmalloc instead of alloca.\n\nFrom-SVN: r30331", "tree": {"sha": "ea66080ea9530bba1ac5dd0e725e572293518210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea66080ea9530bba1ac5dd0e725e572293518210"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c05ddfa745d68f6d9db1a7d0992650a41986d376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05ddfa745d68f6d9db1a7d0992650a41986d376", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c05ddfa745d68f6d9db1a7d0992650a41986d376", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c05ddfa745d68f6d9db1a7d0992650a41986d376/comments", "author": null, "committer": null, "parents": [{"sha": "9fd4e3280e7795e47dcff290b9efcd734217c900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fd4e3280e7795e47dcff290b9efcd734217c900", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fd4e3280e7795e47dcff290b9efcd734217c900"}], "stats": {"total": 49, "additions": 32, "deletions": 17}, "files": [{"sha": "eb02521ee087b6b65d04ca0c10928b66a59ff058", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05ddfa745d68f6d9db1a7d0992650a41986d376/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05ddfa745d68f6d9db1a7d0992650a41986d376/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c05ddfa745d68f6d9db1a7d0992650a41986d376", "patch": "@@ -1,3 +1,7 @@\n+Mon Nov  1 15:41:01 1999  Mark P. Mitchell  <mark@codesourcery.com>\n+\n+\t* combine.c (combine_instructions): Use xmalloc instead of alloca.\n+\n Mon Nov  1 13:22:30 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* toplev.c (rest_of_compilation): Don't optimize the CFG"}, {"sha": "951930d048a27bd3c544a8a18d31799ddf4e23fb", "filename": "gcc/combine.c", "status": "modified", "additions": 28, "deletions": 17, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c05ddfa745d68f6d9db1a7d0992650a41986d376/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c05ddfa745d68f6d9db1a7d0992650a41986d376/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=c05ddfa745d68f6d9db1a7d0992650a41986d376", "patch": "@@ -499,25 +499,22 @@ combine_instructions (f, nregs)\n \n   combine_max_regno = nregs;\n \n-  reg_nonzero_bits\n-    = (unsigned HOST_WIDE_INT *) alloca (nregs * sizeof (HOST_WIDE_INT));\n-  reg_sign_bit_copies = (char *) alloca (nregs * sizeof (char));\n-\n-  bzero ((char *) reg_nonzero_bits, nregs * sizeof (HOST_WIDE_INT));\n-  bzero (reg_sign_bit_copies, nregs * sizeof (char));\n-\n-  reg_last_death = (rtx *) alloca (nregs * sizeof (rtx));\n-  reg_last_set = (rtx *) alloca (nregs * sizeof (rtx));\n-  reg_last_set_value = (rtx *) alloca (nregs * sizeof (rtx));\n-  reg_last_set_table_tick = (int *) alloca (nregs * sizeof (int));\n-  reg_last_set_label = (int *) alloca (nregs * sizeof (int));\n-  reg_last_set_invalid = (char *) alloca (nregs * sizeof (char));\n+  reg_nonzero_bits = ((unsigned HOST_WIDE_INT *) \n+\t\t      xcalloc (nregs, sizeof (unsigned HOST_WIDE_INT)));\n+  reg_sign_bit_copies = (char *) xcalloc (nregs, sizeof (char));\n+\n+  reg_last_death = (rtx *) xmalloc (nregs * sizeof (rtx));\n+  reg_last_set = (rtx *) xmalloc (nregs * sizeof (rtx));\n+  reg_last_set_value = (rtx *) xmalloc (nregs * sizeof (rtx));\n+  reg_last_set_table_tick = (int *) xmalloc (nregs * sizeof (int));\n+  reg_last_set_label = (int *) xmalloc (nregs * sizeof (int));\n+  reg_last_set_invalid = (char *) xmalloc (nregs * sizeof (char));\n   reg_last_set_mode\n-    = (enum machine_mode *) alloca (nregs * sizeof (enum machine_mode));\n+    = (enum machine_mode *) xmalloc (nregs * sizeof (enum machine_mode));\n   reg_last_set_nonzero_bits\n-    = (unsigned HOST_WIDE_INT *) alloca (nregs * sizeof (HOST_WIDE_INT));\n+    = (unsigned HOST_WIDE_INT *) xmalloc (nregs * sizeof (HOST_WIDE_INT));\n   reg_last_set_sign_bit_copies\n-    = (char *) alloca (nregs * sizeof (char));\n+    = (char *) xmalloc (nregs * sizeof (char));\n \n   init_reg_last_arrays ();\n \n@@ -529,7 +526,7 @@ combine_instructions (f, nregs)\n     if (INSN_UID (insn) > i)\n       i = INSN_UID (insn);\n \n-  uid_cuid = (int *) alloca ((i + 1) * sizeof (int));\n+  uid_cuid = (int *) xmalloc ((i + 1) * sizeof (int));\n   max_uid_cuid = i;\n \n   nonzero_bits_mode = mode_for_size (HOST_BITS_PER_WIDE_INT, MODE_INT, 0);\n@@ -704,7 +701,21 @@ combine_instructions (f, nregs)\n       update_life_info (refresh_blocks, UPDATE_LIFE_GLOBAL_RM_NOTES,\n \t\t        PROP_DEATH_NOTES);\n     }\n+\n+  /* Clean up.  */\n   sbitmap_free (refresh_blocks);\n+  free (reg_nonzero_bits);\n+  free (reg_sign_bit_copies);\n+  free (reg_last_death);\n+  free (reg_last_set);\n+  free (reg_last_set_value);\n+  free (reg_last_set_table_tick);\n+  free (reg_last_set_label);\n+  free (reg_last_set_invalid);\n+  free (reg_last_set_mode);\n+  free (reg_last_set_nonzero_bits);\n+  free (reg_last_set_sign_bit_copies);\n+  free (uid_cuid);\n \n   total_attempts += combine_attempts;\n   total_merges += combine_merges;"}]}