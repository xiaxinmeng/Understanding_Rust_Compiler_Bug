{"sha": "4f912f91a095e78dc69ff875de4aeb41188c0655", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY5MTJmOTFhMDk1ZTc4ZGM2OWZmODc1ZGU0YWViNDExODhjMDY1NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-09-15T14:10:10Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-09-15T14:10:10Z"}, "message": "re PR tree-optimization/67470 (ICE at -O3 on x86_64-linux-gnu in compute_live_loop_exits, at tree-ssa-loop-manip.c:235)\n\n2015-09-15  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/67470\n\t* tree-ssa-loop-im.c (execute_sm_if_changed): Preserve PHI\n\tstructure for PHI hoisting by inserting a forwarder block\n\tif appropriate.\n\n\t* gcc.dg/torture/pr67470.c: New testcase.\n\nFrom-SVN: r227797", "tree": {"sha": "9289336911f82646a605073e7d3d0ba579f084ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9289336911f82646a605073e7d3d0ba579f084ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f912f91a095e78dc69ff875de4aeb41188c0655", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f912f91a095e78dc69ff875de4aeb41188c0655", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f912f91a095e78dc69ff875de4aeb41188c0655", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f912f91a095e78dc69ff875de4aeb41188c0655/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20adfc6c1cdc9ab49f9c930e52c1bb1ca4e2f433"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "bc00735e07f35b40f675ba4fbb5f272f68bc31f0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f912f91a095e78dc69ff875de4aeb41188c0655/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f912f91a095e78dc69ff875de4aeb41188c0655/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f912f91a095e78dc69ff875de4aeb41188c0655", "patch": "@@ -1,3 +1,10 @@\n+2015-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67470\n+\t* tree-ssa-loop-im.c (execute_sm_if_changed): Preserve PHI\n+\tstructure for PHI hoisting by inserting a forwarder block\n+\tif appropriate.\n+\n 2015-09-15  Christian Bruel  <christian.bruel@st.com>\n \n \t* config/arm/arm.c (TARGET_OPTION_PRINT): Define."}, {"sha": "c8aa20a73a1f5efe12bd7a8c0a57e7045763ee78", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f912f91a095e78dc69ff875de4aeb41188c0655/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f912f91a095e78dc69ff875de4aeb41188c0655/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f912f91a095e78dc69ff875de4aeb41188c0655", "patch": "@@ -1,3 +1,8 @@\n+2015-09-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/67470\n+\t* gcc.dg/torture/pr67470.c: New testcase.\n+\n 2015-09-15  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* gcc.target/aarch64/vect_int32x2x4_1.c: New."}, {"sha": "29a23c2ee9bca3e4fdb242aba5d5367bf9bfb1f7", "filename": "gcc/testsuite/gcc.dg/torture/pr67470.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f912f91a095e78dc69ff875de4aeb41188c0655/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67470.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f912f91a095e78dc69ff875de4aeb41188c0655/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67470.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr67470.c?ref=4f912f91a095e78dc69ff875de4aeb41188c0655", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+\n+int a, b, *c, d, e;\n+\n+void abort (void);\n+\n+int\n+main ()\n+{\n+  int f, *g, **h = &g;\n+  for (; b;)\n+    {\n+      c = &a;\n+      for (e = 0; e < 1; e++)\n+\t*h = 0;\n+      for (; d; d++)\n+\tif (f)\n+\t  *c = 0;\n+\telse\n+\t  {\n+\t    *c = e = 0;\n+\t    *h = &a;\n+\t  }\n+\n+      if (a && !g)\n+\tabort ();\n+\n+    }\n+  return 0;\n+}"}, {"sha": "f67b57d7f27e9d5b620350049a906c166e04a2f3", "filename": "gcc/tree-ssa-loop-im.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f912f91a095e78dc69ff875de4aeb41188c0655/gcc%2Ftree-ssa-loop-im.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f912f91a095e78dc69ff875de4aeb41188c0655/gcc%2Ftree-ssa-loop-im.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-im.c?ref=4f912f91a095e78dc69ff875de4aeb41188c0655", "patch": "@@ -1839,6 +1839,23 @@ execute_sm_if_changed (edge ex, tree mem, tree tmp_var, tree flag)\n \n   if (loop_has_only_one_exit)\n     ex = split_block_after_labels (ex->dest);\n+  else\n+    {\n+      for (gphi_iterator gpi = gsi_start_phis (ex->dest);\n+\t   !gsi_end_p (gpi); gsi_next (&gpi))\n+\t{\n+\t  gphi *phi = gpi.phi ();\n+\t  if (virtual_operand_p (gimple_phi_result (phi)))\n+\t    continue;\n+\n+\t  /* When the destination has a non-virtual PHI node with multiple\n+\t     predecessors make sure we preserve the PHI structure by\n+\t     forcing a forwarder block so that hoisting of that PHI will\n+\t     still work.  */\n+\t  split_edge (ex);\n+\t  break;\n+\t}\n+    }\n \n   old_dest = ex->dest;\n   new_bb = split_edge (ex);"}]}