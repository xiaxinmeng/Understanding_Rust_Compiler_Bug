{"sha": "9708ca2be40399d6266bc85c99e085e3fe27a809", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcwOGNhMmJlNDAzOTlkNjI2NmJjODVjOTllMDg1ZTNmZTI3YTgwOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-26T08:15:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-26T08:15:39Z"}, "message": "var-tracking: Mark as sp based more VALUEs [PR92264]\n\nWith this simple patch, on i686-linux and x86_64-linux with -m32 (no change\nfor -m64), the find_base_term visited_vals.length () > 100 find_base_term\nstatistics changed (fbt is before this patch, fbt2 with this patch):\nfor k in '' '1$'; do for i in 32 64; do for j in fbt fbt2; do \\\necho -n \"$j $i $k \"; LC_ALL=C grep ^$i.*\"$k\" $j | wc -l; done; done; done\nfbt 32  5313355\nfbt2 32  4229854\nfbt 64  217523\nfbt2 64  217523\nfbt 32 1$ 1296\nfbt2 32 1$ 407\nfbt 64 1$ 0\nfbt2 64 1$ 0\nFor frame_pointer_needed functions, we need to wait until we see the\nfp_setter insn in the prologue at which point we disassociate the fp based\nVALUEs from sp based VALUEs, but for !frame_pointer_needed functions,\nwe IMHO don't need to wait anything.  For ACCUMULATE_OUTGOING_ARGS it isn't\nIMHO worth doing anything, as there is a single sp adjustment and so there\nis no risk of many thousands deep VALUE chains, but for\n!ACCUMULATE_OUTGOING_ARGS the sp keeps changing constantly.\n\n2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/92264\n\t* var-tracking.c (add_stores): Call cselib_set_value_sp_based even\n\tfor sp based values in !frame_pointer_needed\n\t&& !ACCUMULATE_OUTGOING_ARGS functions.", "tree": {"sha": "1183632b5af7c65a8d9a9fd6a206dce2367f82e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1183632b5af7c65a8d9a9fd6a206dce2367f82e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9708ca2be40399d6266bc85c99e085e3fe27a809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9708ca2be40399d6266bc85c99e085e3fe27a809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9708ca2be40399d6266bc85c99e085e3fe27a809", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9708ca2be40399d6266bc85c99e085e3fe27a809/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d21dff5b4fee51ae432143065bededfc763dc344", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d21dff5b4fee51ae432143065bededfc763dc344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d21dff5b4fee51ae432143065bededfc763dc344"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "180c92f76f719c25e19008c94e62ea9757fbd7c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9708ca2be40399d6266bc85c99e085e3fe27a809/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9708ca2be40399d6266bc85c99e085e3fe27a809/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9708ca2be40399d6266bc85c99e085e3fe27a809", "patch": "@@ -1,3 +1,10 @@\n+2020-03-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/92264\n+\t* var-tracking.c (add_stores): Call cselib_set_value_sp_based even\n+\tfor sp based values in !frame_pointer_needed\n+\t&& !ACCUMULATE_OUTGOING_ARGS functions.\n+\n 2020-03-26  Felix Yang  <felix.yang@huawei.com>\n \n \tPR tree-optimization/94269"}, {"sha": "a9ca16b0f04d4330f74d65dbbe0b46f363b8887f", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9708ca2be40399d6266bc85c99e085e3fe27a809/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9708ca2be40399d6266bc85c99e085e3fe27a809/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=9708ca2be40399d6266bc85c99e085e3fe27a809", "patch": "@@ -6112,7 +6112,8 @@ add_stores (rtx loc, const_rtx expr, void *cuip)\n     }\n \n   if (loc == stack_pointer_rtx\n-      && maybe_ne (hard_frame_pointer_adjustment, -1)\n+      && (maybe_ne (hard_frame_pointer_adjustment, -1)\n+\t  || (!frame_pointer_needed && !ACCUMULATE_OUTGOING_ARGS))\n       && preserve)\n     cselib_set_value_sp_based (v);\n "}]}