{"sha": "d79318594936bb80dc5a0b82c70346249c49e5b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc5MzE4NTk0OTM2YmI4MGRjNWEwYjgyYzcwMzQ2MjQ5YzQ5ZTViMA==", "commit": {"author": {"name": "Dominik Vogt", "email": "vogt@linux.vnet.ibm.com", "date": "2016-11-18T14:44:54Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2016-11-18T14:44:54Z"}, "message": "Re-apply: Drop excess size used for run time allocated stack variables.\n\nThe patch got reverted after hitting PR77359 which turned out to be a\nrs6000 backend problem.  Reapplying after the PR got fixed.\n\ngcc/ChangeLog:\n\n2016-11-18  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n\tRe-apply after PR bootstrap/77359 is fixed:\n\t2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n\n        * explow.c (get_dynamic_stack_size): Take known alignment of stack\n        pointer + STACK_DYNAMIC_OFFSET into account when calculating the\n        size needed.\n\n--This line, and those below, will be\nignored--\n\nM    gcc/ChangeLog\nM    gcc/explow.c\n\nFrom-SVN: r242590", "tree": {"sha": "bd8a56796bce7c461774d60a3022c45d1aeb7b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd8a56796bce7c461774d60a3022c45d1aeb7b69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d79318594936bb80dc5a0b82c70346249c49e5b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79318594936bb80dc5a0b82c70346249c49e5b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d79318594936bb80dc5a0b82c70346249c49e5b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d79318594936bb80dc5a0b82c70346249c49e5b0/comments", "author": {"login": "vogtd", "id": 9690100, "node_id": "MDQ6VXNlcjk2OTAxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/9690100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vogtd", "html_url": "https://github.com/vogtd", "followers_url": "https://api.github.com/users/vogtd/followers", "following_url": "https://api.github.com/users/vogtd/following{/other_user}", "gists_url": "https://api.github.com/users/vogtd/gists{/gist_id}", "starred_url": "https://api.github.com/users/vogtd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vogtd/subscriptions", "organizations_url": "https://api.github.com/users/vogtd/orgs", "repos_url": "https://api.github.com/users/vogtd/repos", "events_url": "https://api.github.com/users/vogtd/events{/privacy}", "received_events_url": "https://api.github.com/users/vogtd/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a7790c7174a016fcea0af852a493479f0dadfdf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7790c7174a016fcea0af852a493479f0dadfdf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7790c7174a016fcea0af852a493479f0dadfdf3"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "b3f2b7327f7f76882ab30349abdb545aa06b083d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79318594936bb80dc5a0b82c70346249c49e5b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79318594936bb80dc5a0b82c70346249c49e5b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d79318594936bb80dc5a0b82c70346249c49e5b0", "patch": "@@ -1,3 +1,12 @@\n+2016-11-18  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+\tRe-apply after PR bootstrap/77359 is fixed:\n+\t2016-08-23  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n+\n+        * explow.c (get_dynamic_stack_size): Take known alignment of stack\n+        pointer + STACK_DYNAMIC_OFFSET into account when calculating the\n+        size needed.\n+\n 2016-11-18  Dominik Vogt  <vogt@linux.vnet.ibm.com>\n \n \tPR bootstrap/77359"}, {"sha": "6758cca87e78d9ce4b12505a85230341442205d0", "filename": "gcc/explow.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d79318594936bb80dc5a0b82c70346249c49e5b0/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d79318594936bb80dc5a0b82c70346249c49e5b0/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=d79318594936bb80dc5a0b82c70346249c49e5b0", "patch": "@@ -1233,9 +1233,15 @@ get_dynamic_stack_size (rtx *psize, unsigned size_align,\n      example), so we must preventively align the value.  We leave space\n      in SIZE for the hole that might result from the alignment operation.  */\n \n-  extra = (required_align - BITS_PER_UNIT) / BITS_PER_UNIT;\n-  size = plus_constant (Pmode, size, extra);\n-  size = force_operand (size, NULL_RTX);\n+  unsigned known_align = REGNO_POINTER_ALIGN (VIRTUAL_STACK_DYNAMIC_REGNUM);\n+  if (known_align == 0)\n+    known_align = BITS_PER_UNIT;\n+  if (required_align > known_align)\n+    {\n+      extra = (required_align - known_align) / BITS_PER_UNIT;\n+      size = plus_constant (Pmode, size, extra);\n+      size = force_operand (size, NULL_RTX);\n+    }\n \n   if (flag_stack_usage_info && pstack_usage_size)\n     *pstack_usage_size += extra;"}]}