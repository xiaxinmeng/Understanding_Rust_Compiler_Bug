{"sha": "ffdeb7023fb9bff52a925e785715b9d24a2484dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZkZWI3MDIzZmI5YmZmNTJhOTI1ZTc4NTcxNWI5ZDI0YTI0ODRkZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T14:42:55Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T14:42:55Z"}, "message": "[multiple changes]\n\n2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_prag.adb (Check_Arg_Is_Local_Name): For an aspect that\n\tapplies to a subprogram body, the name is the current scope,\n\trather than being declared in the current scope.\n\t(Analyze_Pragma, case No_Return): Handle properly a No_Return\n\taspect applied to a subprogram body.\n\n2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Resolve_Iterable_Operation): Improve resolution\n\tof overloaded subprograms, and fix bug in handling of primitive\n\toperation Element.\n\n2014-02-19  Pascal Obry  <obry@adacore.com>\n\n\t* s-os_lib.adb: Minor reformatting.\n\n2014-02-19  Yannick Moy  <moy@adacore.com>\n\n\t* expander.adb (Expand): Do nothing inside generics.\n\t* sem_aggr.adb (Aggregate_Constraint_Checks): Do nothing inside\n\tgenerics.\n\n2014-02-19  Yannick Moy  <moy@adacore.com>\n\n\t* exp_ch2.adb: Remove useless 'with' of unit Uintp.\n\nFrom-SVN: r207901", "tree": {"sha": "db05e0d932e454a1ab80237bc41440687641aed3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db05e0d932e454a1ab80237bc41440687641aed3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffdeb7023fb9bff52a925e785715b9d24a2484dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffdeb7023fb9bff52a925e785715b9d24a2484dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffdeb7023fb9bff52a925e785715b9d24a2484dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffdeb7023fb9bff52a925e785715b9d24a2484dd/comments", "author": null, "committer": null, "parents": [{"sha": "edbd98c4cbdef1063e6cc12a8568d2d1e3dbeebb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/edbd98c4cbdef1063e6cc12a8568d2d1e3dbeebb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/edbd98c4cbdef1063e6cc12a8568d2d1e3dbeebb"}], "stats": {"total": 80, "additions": 71, "deletions": 9}, "files": [{"sha": "583e37e6075f45b78b50182f95e3badf32b37fd4", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ffdeb7023fb9bff52a925e785715b9d24a2484dd", "patch": "@@ -1,3 +1,31 @@\n+2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Check_Arg_Is_Local_Name): For an aspect that\n+\tapplies to a subprogram body, the name is the current scope,\n+\trather than being declared in the current scope.\n+\t(Analyze_Pragma, case No_Return): Handle properly a No_Return\n+\taspect applied to a subprogram body.\n+\n+2014-02-19  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Resolve_Iterable_Operation): Improve resolution\n+\tof overloaded subprograms, and fix bug in handling of primitive\n+\toperation Element.\n+\n+2014-02-19  Pascal Obry  <obry@adacore.com>\n+\n+\t* s-os_lib.adb: Minor reformatting.\n+\n+2014-02-19  Yannick Moy  <moy@adacore.com>\n+\n+\t* expander.adb (Expand): Do nothing inside generics.\n+\t* sem_aggr.adb (Aggregate_Constraint_Checks): Do nothing inside\n+\tgenerics.\n+\n+2014-02-19  Yannick Moy  <moy@adacore.com>\n+\n+\t* exp_ch2.adb: Remove useless 'with' of unit Uintp.\n+\n 2014-02-19  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch3.adb, style.adb, sem_prag.adb, sem_ch13.adb: Minor reformatting"}, {"sha": "2abbd25c506605f645b827a64ada70009af3c9fc", "filename": "gcc/ada/exp_ch2.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fexp_ch2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fexp_ch2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch2.adb?ref=ffdeb7023fb9bff52a925e785715b9d24a2484dd", "patch": "@@ -44,7 +44,6 @@ with Sinfo;    use Sinfo;\n with Sinput;   use Sinput;\n with Snames;   use Snames;\n with Tbuild;   use Tbuild;\n-with Uintp;    use Uintp;\n \n package body Exp_Ch2 is\n "}, {"sha": "65e8a675b36c1c042da8fb08e9efe85b7f918f88", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=ffdeb7023fb9bff52a925e785715b9d24a2484dd", "patch": "@@ -90,7 +90,8 @@ package body Expander is\n       --  analysis, in which case Full_Analysis = True or a pre-analysis in\n       --  which case Full_Analysis = False. See the spec of Sem for more info\n       --  on this. Additionally, the GNATprove_Mode flag indicates that a light\n-      --  expansion for formal verification should be used.\n+      --  expansion for formal verification should be used. This expansion is\n+      --  never done inside generics.\n \n       --  The second reason for the Expander_Active flag to be False is that\n       --  we are performing a pre-analysis. During pre-analysis all expansion\n@@ -108,7 +109,9 @@ package body Expander is\n       --  given that the expansion actions that would normally process it will\n       --  not take place. This prevents cascaded errors due to stack mismatch.\n \n-      if not (Expander_Active or (Full_Analysis and GNATprove_Mode)) then\n+      if not Expander_Active\n+        and (Inside_A_Generic or not Full_Analysis or not GNATprove_Mode)\n+      then\n          Set_Analyzed (N, Full_Analysis);\n \n          if Serious_Errors_Detected > 0 and then Scope_Is_Transient then"}, {"sha": "fa44b528833b169058eb0a5f1a83b7ec3e1142cc", "filename": "gcc/ada/s-os_lib.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fs-os_lib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fs-os_lib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-os_lib.adb?ref=ffdeb7023fb9bff52a925e785715b9d24a2484dd", "patch": "@@ -2643,11 +2643,11 @@ package body System.OS_Lib is\n          end loop;\n \n          if Blocking then\n-            Pid     := Invalid_Pid;\n-            Result  := Portable_Spawn (Arg_List'Address);\n+            Pid    := Invalid_Pid;\n+            Result := Portable_Spawn (Arg_List'Address);\n          else\n-            Pid     := Portable_No_Block_Spawn (Arg_List'Address);\n-            Result  := Boolean'Pos (Pid /= Invalid_Pid);\n+            Pid    := Portable_No_Block_Spawn (Arg_List'Address);\n+            Result := Boolean'Pos (Pid /= Invalid_Pid);\n          end if;\n       end Spawn;\n "}, {"sha": "81beb717893c44eb62bb93fd2e6be22df86c1c7e", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=ffdeb7023fb9bff52a925e785715b9d24a2484dd", "patch": "@@ -459,7 +459,9 @@ package body Sem_Aggr is\n       --  added in the tree, so that the formal verification can rely on those\n       --  to be present.\n \n-      if not (Expander_Active or GNATprove_Mode) or In_Spec_Expression then\n+      if not Expander_Active\n+        and (Inside_A_Generic or not Full_Analysis or not GNATprove_Mode)\n+      then\n          return;\n       end if;\n "}, {"sha": "a55899cef91478edddc4f0b4dad9be657451ac19", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ffdeb7023fb9bff52a925e785715b9d24a2484dd", "patch": "@@ -10975,6 +10975,14 @@ package body Sem_Ch13 is\n             end if;\n \n          elsif Nam = Name_Element then\n+            F2 := Next_Formal (F1);\n+\n+            if No (F2)\n+              or else Etype (F2) /= Cursor\n+              or else Present (Next_Formal (F2))\n+            then\n+               Error_Msg_N (\"no match for Element iterable primitive\", N);\n+            end if;\n             null;\n \n          else\n@@ -10993,6 +11001,7 @@ package body Sem_Ch13 is\n             Get_First_Interp (N, I, It);\n             while Present (It.Typ) loop\n                if Ekind (It.Nam) = E_Function\n+                  and then Scope (It.Nam) = Scope (Typ)\n                   and then Etype (First_Formal (It.Nam)) = Typ\n                then\n                   F1 := First_Formal (It.Nam);\n@@ -11031,6 +11040,8 @@ package body Sem_Ch13 is\n                      end if;\n \n                   elsif Nam = Name_Element then\n+                     F2 := Next_Formal (F1);\n+\n                      if Present (F2)\n                        and then No (Next_Formal (F2))\n                        and then Etype (F2) = Cursor"}, {"sha": "ed8df6e332b64bb6db59b1fba00a0a6a52838699", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffdeb7023fb9bff52a925e785715b9d24a2484dd/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ffdeb7023fb9bff52a925e785715b9d24a2484dd", "patch": "@@ -3888,6 +3888,16 @@ package body Sem_Prag is\n                           Generic_Formal_Declarations\n                             (Unit_Declaration_Node (Scop));\n \n+               --  If this is an aspect applied to a subprogram body, the\n+               --  pragma is inserted in its declarative part.\n+\n+               elsif From_Aspect_Specification (N)\n+                 and then\n+                   Nkind (Unit_Declaration_Node (Ent)) = N_Subprogram_Body\n+                 and then  Ent = Current_Scope\n+               then\n+                  OK := True;\n+\n                --  Default case, just check that the pragma occurs in the scope\n                --  of the entity denoted by the name.\n \n@@ -16671,8 +16681,17 @@ package body Sem_Prag is\n                   E := Homonym (E);\n                end loop;\n \n+               --  If entity in not in current scope it may be the enclosing\n+               --  suprogram body to which the aspect applies.\n+\n                if not Found then\n-                  Error_Pragma_Arg (\"no procedure & found for pragma%\", Arg);\n+                  if Entity (Id) = Current_Scope\n+                    and then From_Aspect_Specification (N)\n+                  then\n+                     Set_No_Return (Entity (Id));\n+                  else\n+                     Error_Pragma_Arg (\"no procedure& found for pragma%\", Arg);\n+                  end if;\n                end if;\n \n                Next (Arg);"}]}