{"sha": "71e10e87886fcf952f9d3a41da68155eb2926133", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFlMTBlODc4ODZmY2Y5NTJmOWQzYTQxZGE2ODE1NWViMjkyNjEzMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-04T23:10:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1997-09-04T23:10:35Z"}, "message": "tweak\n\nFrom-SVN: r15086", "tree": {"sha": "fca1f96c85a3553e28adec84208ee4c4cc1f662b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fca1f96c85a3553e28adec84208ee4c4cc1f662b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71e10e87886fcf952f9d3a41da68155eb2926133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e10e87886fcf952f9d3a41da68155eb2926133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71e10e87886fcf952f9d3a41da68155eb2926133", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71e10e87886fcf952f9d3a41da68155eb2926133/comments", "author": null, "committer": null, "parents": [{"sha": "fe181f78b3e2b0637011c9df1bb724182d0e33ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe181f78b3e2b0637011c9df1bb724182d0e33ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe181f78b3e2b0637011c9df1bb724182d0e33ff"}], "stats": {"total": 85, "additions": 42, "deletions": 43}, "files": [{"sha": "8186a763d22e39af84f8e8add8f523ced2745f42", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash19.C", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e10e87886fcf952f9d3a41da68155eb2926133/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e10e87886fcf952f9d3a41da68155eb2926133/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash19.C?ref=71e10e87886fcf952f9d3a41da68155eb2926133", "patch": "@@ -206,8 +206,8 @@ struct streambuf : private __streambuf {\n     char *eBptr() { return in_backup() ? _egptr : _other_egptr; }\n     char *Nbase() { return _other_gbase; }\n     char *eNptr() { return _other_egptr; }\n-    int have_backup() { return _other_gbase != ((void*)0) ; }\n-    int have_markers() { return _markers != ((void*)0) ; }\n+    int have_backup() { return _other_gbase != __null ; }\n+    int have_markers() { return _markers != __null ; }\n     int _least_marker();\n     void switch_to_main_get_area();\n     void switch_to_backup_area();\n@@ -237,7 +237,7 @@ struct streambuf : private __streambuf {\n     int allocate() {  \n \tif (base() || unbuffered()) return 0;\n \telse return doallocate(); }\n-    void allocbuf() { if (base() == ((void*)0) ) doallocbuf(); }\n+    void allocbuf() { if (base() == __null ) doallocbuf(); }\n     void doallocbuf();\n     virtual int sync();\n     virtual int pbackfail(int c);\n@@ -266,7 +266,7 @@ struct streambuf : private __streambuf {\n \tif (_pptr >= _epptr) return __overflow(this, (unsigned char)c);\n \telse return *_pptr++ = c, (unsigned char)c; }\n     void stossc() { if (_gptr < _egptr) _gptr++; }\n-    int vscan(char const *fmt0, _G_va_list ap, ios* stream = ((void*)0) );\n+    int vscan(char const *fmt0, _G_va_list ap, ios* stream = __null );\n     int scan(char const *fmt0 ...);\n     int vform(char const *fmt0, _G_va_list ap);\n     int form(char const *fmt0 ...);\n@@ -340,7 +340,7 @@ class ostream : virtual public ios\n     void do_osfx();\n   public:\n     ostream() { }\n-    ostream(streambuf* sb, ostream* tied=((void*)0) );\n+    ostream(streambuf* sb, ostream* tied=__null );\n     int opfx() {\n \tif (!good()) return 0; else { if (_tie) _tie->flush(); return 1;} }\n     void osfx() { if (flags() & (ios::unitbuf|ios::stdio))\n@@ -388,7 +388,7 @@ class istream : virtual public ios\n     int _skip_ws();\n   public:\n     istream() { _gcount = 0; }\n-    istream(streambuf* sb, ostream*tied=((void*)0) );\n+    istream(streambuf* sb, ostream*tied=__null );\n     streambuf* istreambuf() const { return _strbuf; }\n     istream& get(char* ptr, int len, char delim = '\\n');\n     istream& get(unsigned char* ptr, int len, char delim = '\\n')\n@@ -474,7 +474,7 @@ class iostream : public istream, public ostream\n     _G_ssize_t _gcount;\n   public:\n     iostream() { _gcount = 0; }\n-    iostream(streambuf* sb, ostream*tied=((void*)0) );\n+    iostream(streambuf* sb, ostream*tied=__null );\n };\n extern istream cin;\n extern ostream cout, cerr, clog;  \n@@ -1168,16 +1168,16 @@ class dict : public object {\n \t\t\t DISPLAYER displayer, STRINGER str_f)\n \t\t{// ERROR - candidate for bad call\n \t\t\tif (799  >=  800 ) cout <<  \"Creating new dictionary...\"  << '\\n'; ;\n-\t\t\tif (cmp == ((void*)0) )       cmp = &default_compare;\n-\t\t\tif (displayer == ((void*)0) ) displayer = &default_displayer;\n-\t\t\tif (str_f == ((void*)0) )     str_f = &default_stringer;\n+\t\t\tif (cmp == __null )       cmp = &default_compare;\n+\t\t\tif (displayer == __null ) displayer = &default_displayer;\n+\t\t\tif (str_f == __null )     str_f = &default_stringer;\n \t\t\tcompare_f = cmp;\n \t\t\tdisplay_f = displayer;\n \t\t\tdestroy_f = destroyer;\n \t\t\tstring_f  = str_f;\n \t\t\tdi = make_dictionary(compare_f);\n-\t\t\tappend_error(di == ((void*)0) , \"dict internal\");\n-\t\t\tif (di == ((void*)0) ) {\n+\t\t\tappend_error(di == __null , \"dict internal\");\n+\t\t\tif (di == __null ) {\n \t\t\t\tdict_perror(\"build dictionary\");\n \t\t\t\texit(errno);\n \t\t\t}\n@@ -1218,7 +1218,7 @@ public:\n \t\t\t\t    &default_displayer, &default_stringer);// ERROR - no matching fn call\n \t}\n \tdict(COMPARE cmp,\n-\t     DESTROYER destroyer = ((void*)0) ,\n+\t     DESTROYER destroyer = __null ,\n \t     DISPLAYER displayer = &default_displayer,\n \t     STRINGER str_f = &default_stringer)\n \t{// ERROR - invalid type for default argument -- not expecting const\n@@ -1262,55 +1262,55 @@ public:\n \tPOINTER access(POINTER item)\n \t{\n \t\tp = dict_access(item, rep->di);\n-\t\tobj_error(p == ((void*)0) , \"access\", item);\n+\t\tobj_error(p == __null , \"access\", item);\n \t\treturn(p);\n \t}\n \tPOINTER low()\n \t{\n \t\tp = dict_low(rep->di);\n-\t\tappend_error(p == ((void*)0) , \"low\");\n+\t\tappend_error(p == __null , \"low\");\n \t\treturn(p);\n \t}\n \tPOINTER nlow()\n \t{\n \t\tp = dict_nlow(rep->di);\n-\t\tappend_error(p == ((void*)0) , \"nlow\");\n+\t\tappend_error(p == __null , \"nlow\");\n \t\treturn(p);\n \t}\n \tPOINTER big()\n \t{\n \t\tp = dict_big(rep->di);\n-\t\tappend_error(p == ((void*)0) , \"big\");\n+\t\tappend_error(p == __null , \"big\");\n \t\treturn(p);\n \t}\n \tPOINTER nbig()\n \t{\n \t\tp = dict_nbig(rep->di);\n-\t\tappend_error(p == ((void*)0) , \"nbig\");\n+\t\tappend_error(p == __null , \"nbig\");\n \t\treturn(p);\n \t}\n \tPOINTER first()\n \t{\n \t\tp = dict_first(rep->di);\n-\t\tappend_error(p == ((void*)0) , \"first\");\n+\t\tappend_error(p == __null , \"first\");\n \t\treturn(p);\n \t}\n \tPOINTER last()\n \t{\n \t\tp = dict_last(rep->di);\n-\t\tappend_error(p == ((void*)0) , \"last\");\n+\t\tappend_error(p == __null , \"last\");\n \t\treturn(p);\n \t}\n \tPOINTER next()\n \t{\n \t\tp = dict_next(rep->di);\n-\t\tappend_error(p == ((void*)0) , \"next\");\n+\t\tappend_error(p == __null , \"next\");\n \t\treturn(p);\n \t}\n \tPOINTER prev()\n \t{\n \t\tp = dict_prev(rep->di);\n-\t\tappend_error(p == ((void*)0) , \"prev\");\n+\t\tappend_error(p == __null , \"prev\");\n \t\treturn(p);\n \t}\n \tint clear(DESTROYER destroy, FILE *fp = (&__iob[2]) )\n@@ -1334,7 +1334,7 @@ public:\n \tPOINTER elem(int index)\n \t{\n \t\tp = dict_elem(index, rep->di);\n-\t\tappend_error(p == ((void*)0) , \"elem\");\n+\t\tappend_error(p == __null , \"elem\");\n \t\treturn(p);\n \t}\n \tint compare(dict &di2)\n@@ -1417,21 +1417,21 @@ class queue : public object {\n \t\t         DISPLAYER displayer, STRINGER str_f)\n \t\t{// ERROR - candidate for bad call\n \t\t\tif (799  >=  800 ) cout <<  \"Creating new queue...\"  << '\\n'; ;\n-\t\t\tif (displayer == ((void*)0) ) displayer = &default_displayer;\n-\t\t\tif (str_f == ((void*)0) )     str_f = &default_stringer;\n+\t\t\tif (displayer == __null ) displayer = &default_displayer;\n+\t\t\tif (str_f == __null )     str_f = &default_stringer;\n \t\t\tdisplay_f = displayer;\n \t\t\tdestroy_f = destroyer;\n \t\t\tstring_f  = str_f;\n \t\t\tQ = make_queue();\n-\t\t\tappend_error(Q == ((void*)0) , \"queue internal\");\n+\t\t\tappend_error(Q == __null , \"queue internal\");\n \t\t\terrno = queue_errno;\n-\t\t\tif (Q == ((void*)0) ) {\n+\t\t\tif (Q == __null ) {\n \t\t\t\tqueue_perror(\"build queue\");\n \t\t\t\texit(errno);\n \t\t\t}\n \t\t\tQ2 = make_queue();\n-\t\t\tappend_error(Q2 == ((void*)0) , \"queue internal\");\n-\t\t\tif (Q2 == ((void*)0) ) {\n+\t\t\tappend_error(Q2 == __null , \"queue internal\");\n+\t\t\tif (Q2 == __null ) {\n \t\t\t\tqueue_perror(\"build second queue\");\n \t\t\t\texit(errno);\n \t\t\t}\n@@ -1440,8 +1440,8 @@ class queue : public object {\n \t\t~internal()\n \t\t{\n \t\t\tif (799  >=  800 ) cout <<  \"queue ~internal executing\"  << '\\n'; ;\n-\t\t\twhile ((p = queue_remove(Q)) != ((void*)0) ) {\n-\t\t\t\tif (destroy_f != ((void*)0) ) {\n+\t\t\twhile ((p = queue_remove(Q)) != __null ) {\n+\t\t\t\tif (destroy_f != __null ) {\n \t\t\t\t\t(*destroy_f)((POINTER)&p, (&__iob[2]) );\n \t\t\t\t}\n \t\t\t}\n@@ -1485,7 +1485,7 @@ public:\n \t\trep = new internal( &null_destroy,\n \t\t\t\t    &default_displayer, &default_stringer);// ERROR - no matching fn for call\n \t}\n-\tqueue(DESTROYER destroyer = ((void*)0) ,\n+\tqueue(DESTROYER destroyer = __null ,\n \t      DISPLAYER displayer = &default_displayer,\n \t      STRINGER str_f = &default_stringer)\n \t{// ERROR - invalid type for default argument -- not expecting const \n@@ -1537,19 +1537,19 @@ public:\n \tPOINTER remove()\n \t{\n \t\tp = queue_remove(rep->Q);\n-\t\tappend_error(p == ((void*)0) , \"remove\");\n+\t\tappend_error(p == __null , \"remove\");\n \t\treturn(p);\n \t}\n \tPOINTER look(POINTER item)\n \t{\n \t\tp = queue_look(rep->Q);\n-\t\tappend_error(p == ((void*)0) , \"look\");\n+\t\tappend_error(p == __null , \"look\");\n \t\treturn(p);\n \t}\n \tPOINTER last(POINTER item)\n \t{\n \t\tp = queue_last(rep->Q);\n-\t\tappend_error(p == ((void*)0) , \"last\");\n+\t\tappend_error(p == __null , \"last\");\n \t\treturn(p);\n \t}\n \tint size()\n@@ -1647,15 +1647,15 @@ void object_destroy(void *p, FILE *errorFile)\n {\n \tobject **pObj = (object **)p;\n \tobject *obj = *pObj;\n-\tif (obj == ((void*)0) ) {\n+\tif (obj == __null ) {\n \t\tif (799  >=  10 ) cout <<   \"+ object_destroy: NIL object passed in\"  << '\\n'; ;\n \t\treturn;\n \t}\n \tif (799  >=  998 ) cout <<   \"+ object_destroy: delete obj:\"  << '\\n'; ;\n \tif (799  >=  998 ) cout <<   *obj  << '\\n'; ;\n \tif (799  >=  998 ) cout <<   \"====================================================\"  << '\\n'; ;\n \tdelete obj;\n-\t*pObj = ((void*)0) ;\n+\t*pObj = __null ;\n }\n int default_compare(const void *p1, const void *p2)\n {"}, {"sha": "715837de0be0c1295ee1ec6fdb332e37b31fd6f0", "filename": "gcc/testsuite/g++.old-deja/g++.ext/pretty.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e10e87886fcf952f9d3a41da68155eb2926133/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e10e87886fcf952f9d3a41da68155eb2926133/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Fpretty.C?ref=71e10e87886fcf952f9d3a41da68155eb2926133", "patch": "@@ -30,14 +30,13 @@ SVTable::SVTable (int size, const char *d)\n {\n   if (size < 0)\n   {\n-    fatal_error (__PRETTY_FUNCTION__ \": Invalid size: %d\\n\", size);\n+    fatal_error (\"%s: Invalid size: %d\\n\", __PRETTY_FUNCTION__, size);\n   }\n \n   array = (SV **) new SV * [size];\n \n   if (array == 0)\n   {\n-    fatal_error (__PRETTY_FUNCTION__\n-\t\": Failed to allocate array\\n\");\n+    fatal_error (\"%s: Failed to allocate array\\n\", __PRETTY_FUNCTION__);\n   }\n }"}, {"sha": "07ab9408055ceb22fcace87f341bd5f1a50e6208", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p811.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71e10e87886fcf952f9d3a41da68155eb2926133/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71e10e87886fcf952f9d3a41da68155eb2926133/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp811.C?ref=71e10e87886fcf952f9d3a41da68155eb2926133", "patch": "@@ -290,7 +290,7 @@ class ostream : public ios\n     void do_osfx();\n   public:\n     ostream();\n-    ostream(streambuf* sb, ostream* tied=((void*)0) );\n+    ostream(streambuf* sb, ostream* tied=__null );\n     ~ostream();\n \n     int opfx() { if (!good()) return 0; if (_tie) _tie->flush(); return 1; }\n@@ -336,7 +336,7 @@ class istream : public ios\n     int  _gcount;\n   public:\n     istream();\n-    istream(streambuf* sb, ostream*tied=((void*)0) );\n+    istream(streambuf* sb, ostream*tied=__null );\n     ~istream();\n     streambuf* istreambuf() const { return _strbuf; }\n     istream& get(char& c);\n@@ -413,7 +413,7 @@ class iostream : public ios {\n     int  _gcount;\n   public:\n     iostream();\n-    iostream(streambuf* sb, ostream*tied=((void*)0) );\n+    iostream(streambuf* sb, ostream*tied=__null );\n     operator istream&() { return *(istream*)this; }\n     operator ostream&() { return *(ostream*)this; }\n     ~iostream();"}]}