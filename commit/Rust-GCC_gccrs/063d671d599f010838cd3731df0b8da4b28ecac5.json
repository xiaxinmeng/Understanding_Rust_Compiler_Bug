{"sha": "063d671d599f010838cd3731df0b8da4b28ecac5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYzZDY3MWQ1OTlmMDEwODM4Y2QzNzMxZGYwYjhkYTRiMjhlY2FjNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-11-20T13:11:08Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-11-20T13:11:08Z"}, "message": "opts.c (finish_options): Imply -ffat-lto-objects with -fno-use-linker-plugin.\n\n\t* opts.c (finish_options): Imply -ffat-lto-objects with -fno-use-linker-plugin.\n\t* common.opt (fuse-linker-plugin): Add var.\n\nFrom-SVN: r205110", "tree": {"sha": "84784655be63d94f4da46ab9886bf3a85924b27d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84784655be63d94f4da46ab9886bf3a85924b27d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/063d671d599f010838cd3731df0b8da4b28ecac5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/063d671d599f010838cd3731df0b8da4b28ecac5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/063d671d599f010838cd3731df0b8da4b28ecac5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/063d671d599f010838cd3731df0b8da4b28ecac5/comments", "author": null, "committer": null, "parents": [{"sha": "0c509e888c5f91f307b5c28725c2825136ae978c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c509e888c5f91f307b5c28725c2825136ae978c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c509e888c5f91f307b5c28725c2825136ae978c"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "d824dd811d15db59552111fbf09907f947afb6fc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063d671d599f010838cd3731df0b8da4b28ecac5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063d671d599f010838cd3731df0b8da4b28ecac5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=063d671d599f010838cd3731df0b8da4b28ecac5", "patch": "@@ -1,3 +1,8 @@\n+2013-11-20  Jan Hubicka  <jh@suse.cz>\n+\n+\t* opts.c (finish_options): Imply -ffat-lto-objects with -fno-use-linker-plugin.\n+\t* common.opt (fuse-linker-plugin): Add var.\n+\n 2013-11-20  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* dbxout.c (dbxout_type): Ignore POINTER_BOUNDS_TYPE."}, {"sha": "2216d6e0392e9054570a7a38ff52cc6b9e6a6156", "filename": "gcc/common.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063d671d599f010838cd3731df0b8da4b28ecac5/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063d671d599f010838cd3731df0b8da4b28ecac5/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=063d671d599f010838cd3731df0b8da4b28ecac5", "patch": "@@ -2247,7 +2247,7 @@ Common Negative(fuse-ld=bfd)\n Use the gold linker instead of the default linker\n \n fuse-linker-plugin\n-Common Undocumented\n+Common Undocumented Var(flag_use_linker_plugin)\n \n ; Positive if we should track variables, negative if we should run\n ; the var-tracking pass only to discard debug annotations, zero if"}, {"sha": "d282d6df507f0a664808f71cf5c466b526b04955", "filename": "gcc/opts.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063d671d599f010838cd3731df0b8da4b28ecac5/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063d671d599f010838cd3731df0b8da4b28ecac5/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=063d671d599f010838cd3731df0b8da4b28ecac5", "patch": "@@ -809,10 +809,13 @@ finish_options (struct gcc_options *opts, struct gcc_options *opts_set,\n #else\n       error_at (loc, \"LTO support has not been enabled in this configuration\");\n #endif\n-      if (!opts->x_flag_fat_lto_objects && !HAVE_LTO_PLUGIN)\n+      if (!opts->x_flag_fat_lto_objects\n+\t  && (!HAVE_LTO_PLUGIN\n+\t      || (opts_set->x_flag_use_linker_plugin\n+\t\t  && !opts->x_flag_use_linker_plugin)))\n \t{\n \t  if (opts_set->x_flag_fat_lto_objects)\n-            error_at (loc, \"-fno-fat-lto-objects are supported only with linker plugin.\");\n+            error_at (loc, \"-fno-fat-lto-objects are supported only with linker plugin\");\n \t  opts->x_flag_fat_lto_objects = 1;\n \t}\n     }"}]}