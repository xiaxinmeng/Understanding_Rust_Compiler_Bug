{"sha": "d950f05197f4a02eb6e1347b068bbeaee3b4f768", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk1MGYwNTE5N2Y0YTAyZWI2ZTEzNDdiMDY4YmJlYWVlM2I0Zjc2OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-31T15:51:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-01-31T15:51:51Z"}, "message": "[multiple changes]\n\n2014-01-31  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_res.adb (Resolve_Entity_Name): Comment\n\treformatting. Allow volatile objects in various generated checks.\n\n2014-01-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute, case 'Update): For a record\n\tcomponent association, set the etype of the identifier, for\n\tSPARK use.\n\n2014-01-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch6.adb (Has_Visibility_Of_Subprogram): If type is not\n\tdeclared in a package, not checks can apply to the subprogram.\n\nFrom-SVN: r207353", "tree": {"sha": "b0e662532ff1b1a2d622983d0182c45dc526a4e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0e662532ff1b1a2d622983d0182c45dc526a4e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d950f05197f4a02eb6e1347b068bbeaee3b4f768", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d950f05197f4a02eb6e1347b068bbeaee3b4f768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d950f05197f4a02eb6e1347b068bbeaee3b4f768", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d950f05197f4a02eb6e1347b068bbeaee3b4f768/comments", "author": null, "committer": null, "parents": [{"sha": "74c101097fb411445f543989120d83f53de5e4b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74c101097fb411445f543989120d83f53de5e4b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74c101097fb411445f543989120d83f53de5e4b0"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "23cfa54c86ad660e6ffc7fa233177890fb927ad6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d950f05197f4a02eb6e1347b068bbeaee3b4f768/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d950f05197f4a02eb6e1347b068bbeaee3b4f768/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d950f05197f4a02eb6e1347b068bbeaee3b4f768", "patch": "@@ -1,3 +1,19 @@\n+2014-01-31  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Entity_Name): Comment\n+\treformatting. Allow volatile objects in various generated checks.\n+\n+2014-01-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, case 'Update): For a record\n+\tcomponent association, set the etype of the identifier, for\n+\tSPARK use.\n+\n+2014-01-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch6.adb (Has_Visibility_Of_Subprogram): If type is not\n+\tdeclared in a package, not checks can apply to the subprogram.\n+\n 2014-01-31  Robert Dewar  <dewar@adacore.com>\n \n \t* erroutc.adb (Validate_Specific_Warnings): Warnings are"}, {"sha": "d4b0cc0a4e8c4525399b277e5af1ae7c2d07bc1f", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d950f05197f4a02eb6e1347b068bbeaee3b4f768/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d950f05197f4a02eb6e1347b068bbeaee3b4f768/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=d950f05197f4a02eb6e1347b068bbeaee3b4f768", "patch": "@@ -8697,16 +8697,17 @@ package body Exp_Ch6 is\n \n             function Has_Public_Visibility_Of_Subprogram return Boolean is\n                Subp_Decl : constant Node_Id := Unit_Declaration_Node (Subp_Id);\n-               Vis_Decls : constant List_Id :=\n-                             Visible_Declarations (Specification\n-                               (Unit_Declaration_Node (Scope (Typ))));\n+\n             begin\n                --  An Initialization procedure must be considered visible even\n                --  though it is internally generated.\n \n                if Is_Init_Proc (Defining_Entity (Subp_Decl)) then\n                   return True;\n \n+               elsif Ekind (Scope (Typ)) /= E_Package then\n+                  return False;\n+\n                --  Internally generated code is never publicly visible except\n                --  for a subprogram that is the implementation of an expression\n                --  function. In that case the visibility is determined by the\n@@ -8724,7 +8725,9 @@ package body Exp_Ch6 is\n                --  declarations of the package containing the type.\n \n                else\n-                  return List_Containing (Subp_Decl) = Vis_Decls;\n+                  return List_Containing (Subp_Decl) =\n+                    Visible_Declarations\n+                      (Specification (Unit_Declaration_Node (Scope (Typ))));\n                end if;\n             end Has_Public_Visibility_Of_Subprogram;\n "}, {"sha": "5770144f2a252a861ccbce55e5c4c679f0623add", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d950f05197f4a02eb6e1347b068bbeaee3b4f768/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d950f05197f4a02eb6e1347b068bbeaee3b4f768/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=d950f05197f4a02eb6e1347b068bbeaee3b4f768", "patch": "@@ -6014,10 +6014,11 @@ package body Sem_Attr is\n             while Present (Comp_Or_Discr) loop\n                if Chars (Comp_Or_Discr) = Comp_Name then\n \n-                  --  Record component entity in the given aggregate choice,\n-                  --  for subsequent resolution.\n+                  --  Record component entity and type in the given aggregate\n+                  --  choice, for subsequent resolution.\n \n                   Set_Entity (Comp, Comp_Or_Discr);\n+                  Set_Etype  (Comp, Etype (Comp_Or_Discr));\n                   exit;\n                end if;\n "}, {"sha": "7cb47f23de40d8e4abdcb3aa567cbed22dd6b890", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d950f05197f4a02eb6e1347b068bbeaee3b4f768/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d950f05197f4a02eb6e1347b068bbeaee3b4f768/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d950f05197f4a02eb6e1347b068bbeaee3b4f768", "patch": "@@ -6523,15 +6523,15 @@ package body Sem_Res is\n          Prev := N;\n          while Present (Par) loop\n \n-            --  The variable can appear on either side of an assignment\n+            --  The volatile object can appear on either side of an assignment\n \n             if Nkind (Par) = N_Assignment_Statement then\n                Usage_OK := True;\n                exit;\n \n-            --  The variable is part of the initialization expression of an\n-            --  object. Ensure that the climb of the parent chain came from the\n-            --  expression side and not from the name side.\n+            --  The volatile object is part of the initialization expression of\n+            --  another object. Ensure that the climb of the parent chain came\n+            --  from the expression side and not from the name side.\n \n             elsif Nkind (Par) = N_Object_Declaration\n               and then Present (Expression (Par))\n@@ -6540,8 +6540,8 @@ package body Sem_Res is\n                Usage_OK := True;\n                exit;\n \n-            --  The variable appears as an actual parameter in a call to an\n-            --  instance of Unchecked_Conversion whose result is renamed.\n+            --  The volatile object appears as an actual parameter in a call to\n+            --  an instance of Unchecked_Conversion whose result is renamed.\n \n             elsif Nkind (Par) = N_Function_Call\n               and then Is_Unchecked_Conversion_Instance (Entity (Name (Par)))\n@@ -6558,6 +6558,12 @@ package body Sem_Res is\n                Usage_OK := True;\n                exit;\n \n+            --  Allow references to volatile objects in various checks\n+\n+            elsif Nkind (Par) in N_Raise_xxx_Error then\n+               Usage_OK := True;\n+               exit;\n+\n             --  Prevent the search from going too far\n \n             elsif Is_Body_Or_Package_Declaration (Par) then"}]}