{"sha": "ca29916b48a25dcc7a422032b63be032a1f9b6ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EyOTkxNmI0OGEyNWRjYzdhNDIyMDMyYjYzYmUwMzJhMWY5YjZhYw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-08-19T21:41:32Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-08-19T21:41:32Z"}, "message": "unwind-dw2-fde.c (get_cie_encoding): Cast argument to strlen to eliminate warning.\n\n\t* unwind-dw2-fde.c (get_cie_encoding): Cast argument to strlen\n\tto eliminate warning.\n\t(linear_search_fdes): Declare p as unsigned.\n\t(binary_search_mixed_encoding_fdes): Likewise.\n\t* unwind-dw2.c (get_cie_encoding): Cast argument to strlen\n\tto eliminate warning.\n\t* config/s390/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Add missing\n\ttype cast.\n\nFrom-SVN: r86280", "tree": {"sha": "2f25613bb466df10fd03705104e573e447f5a305", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f25613bb466df10fd03705104e573e447f5a305"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca29916b48a25dcc7a422032b63be032a1f9b6ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca29916b48a25dcc7a422032b63be032a1f9b6ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca29916b48a25dcc7a422032b63be032a1f9b6ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca29916b48a25dcc7a422032b63be032a1f9b6ac/comments", "author": null, "committer": null, "parents": [{"sha": "bbef13dc2b76a371788b20ba1f0697738e21d9c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbef13dc2b76a371788b20ba1f0697738e21d9c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbef13dc2b76a371788b20ba1f0697738e21d9c0"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "4f832d42ac06882b055d2a8be71063874979a108", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca29916b48a25dcc7a422032b63be032a1f9b6ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca29916b48a25dcc7a422032b63be032a1f9b6ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca29916b48a25dcc7a422032b63be032a1f9b6ac", "patch": "@@ -1,3 +1,14 @@\n+2004-08-19  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* unwind-dw2-fde.c (get_cie_encoding): Cast argument to strlen\n+\tto eliminate warning.\n+\t(linear_search_fdes): Declare p as unsigned.\n+\t(binary_search_mixed_encoding_fdes): Likewise.\n+\t* unwind-dw2.c (get_cie_encoding): Cast argument to strlen\n+\tto eliminate warning.\n+\t* config/s390/linux.h (MD_FALLBACK_FRAME_STATE_FOR): Add missing\n+\ttype cast.\n+\n 2004-08-19  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390-protos.h (preferred_la_operand_p): Adapt prototype."}, {"sha": "9dd07c71ef3a57f635e2cee1c291d62b637cfbaf", "filename": "gcc/config/s390/linux.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca29916b48a25dcc7a422032b63be032a1f9b6ac/gcc%2Fconfig%2Fs390%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca29916b48a25dcc7a422032b63be032a1f9b6ac/gcc%2Fconfig%2Fs390%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Flinux.h?ref=ca29916b48a25dcc7a422032b63be032a1f9b6ac", "patch": "@@ -191,7 +191,8 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \t\t\t\t\t\t\t\t\t\\\n     if (signo_ && (*signo_ == 11 || *signo_ == 7))\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n-\t(FS)->regs.reg[33].loc.exp = regs_->psw_addr + 1;\t\t\\\n+\t(FS)->regs.reg[33].loc.exp = \t\t\t\t\t\\\n+\t\t(unsigned char *)regs_->psw_addr + 1;\t\t\t\\\n \t(FS)->regs.reg[32].loc.offset = \t\t\t\t\\\n \t\t(long)&(FS)->regs.reg[33].loc.exp - new_cfa_;\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\"}, {"sha": "ea467e4a33a42a02d19c5dee684477ac739b8a85", "filename": "gcc/unwind-dw2-fde.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca29916b48a25dcc7a422032b63be032a1f9b6ac/gcc%2Funwind-dw2-fde.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca29916b48a25dcc7a422032b63be032a1f9b6ac/gcc%2Funwind-dw2-fde.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde.c?ref=ca29916b48a25dcc7a422032b63be032a1f9b6ac", "patch": "@@ -273,7 +273,7 @@ get_cie_encoding (const struct dwarf_cie *cie)\n   if (aug[0] != 'z')\n     return DW_EH_PE_absptr;\n \n-  p = aug + strlen (aug) + 1;\t\t/* Skip the augmentation string.  */\n+  p = aug + strlen ((const char *)aug) + 1; /* Skip the augmentation string.  */\n   p = read_uleb128 (p, &utmp);\t\t/* Skip code alignment.  */\n   p = read_sleb128 (p, &stmp);\t\t/* Skip data alignment.  */\n   if (cie->version == 1)\t\t/* Skip return address column.  */\n@@ -808,7 +808,7 @@ linear_search_fdes (struct object *ob, const fde *this_fde, void *pc)\n       else\n \t{\n \t  _Unwind_Ptr mask;\n-\t  const char *p;\n+\t  const unsigned char *p;\n \n \t  p = read_encoded_value_with_base (encoding, base,\n \t\t\t\t\t    this_fde->pc_begin, &pc_begin);\n@@ -878,7 +878,7 @@ binary_search_single_encoding_fdes (struct object *ob, void *pc)\n       size_t i = (lo + hi) / 2;\n       const fde *f = vec->array[i];\n       _Unwind_Ptr pc_begin, pc_range;\n-      const char *p;\n+      const unsigned char *p;\n \n       p = read_encoded_value_with_base (encoding, base, f->pc_begin,\n \t\t\t\t\t&pc_begin);\n@@ -906,7 +906,7 @@ binary_search_mixed_encoding_fdes (struct object *ob, void *pc)\n       size_t i = (lo + hi) / 2;\n       const fde *f = vec->array[i];\n       _Unwind_Ptr pc_begin, pc_range;\n-      const char *p;\n+      const unsigned char *p;\n       int encoding;\n \n       encoding = get_fde_encoding (f);"}, {"sha": "3815d9f3f956b261d300b2ec34a504991ab158f6", "filename": "gcc/unwind-dw2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca29916b48a25dcc7a422032b63be032a1f9b6ac/gcc%2Funwind-dw2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca29916b48a25dcc7a422032b63be032a1f9b6ac/gcc%2Funwind-dw2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2.c?ref=ca29916b48a25dcc7a422032b63be032a1f9b6ac", "patch": "@@ -262,7 +262,7 @@ extract_cie_info (const struct dwarf_cie *cie, struct _Unwind_Context *context,\n \t\t  _Unwind_FrameState *fs)\n {\n   const unsigned char *aug = cie->augmentation;\n-  const unsigned char *p = aug + strlen (aug) + 1;\n+  const unsigned char *p = aug + strlen ((const char *)aug) + 1;\n   const unsigned char *ret = NULL;\n   _Unwind_Word utmp;\n "}]}