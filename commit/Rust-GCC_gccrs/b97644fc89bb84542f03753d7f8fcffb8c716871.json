{"sha": "b97644fc89bb84542f03753d7f8fcffb8c716871", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk3NjQ0ZmM4OWJiODQ1NDJmMDM3NTNkN2Y4ZmNmZmI4YzcxNjg3MQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "2000-08-23T20:55:01Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2000-08-23T20:55:01Z"}, "message": "Minor cleanup of ia64 unwind handler code.\n\n\t* frame.h (IA64_UNW_EHANDLER, IA64_UNW_UHANDLER): New.\n\t* config/ia64/frame-ia64.c (__get_personality): Return zero if neither\n\tEHANDLER nor UHANDLER bit is set.\n\t(__get_except_table): Likewise.\n\nFrom-SVN: r35922", "tree": {"sha": "30e5acffc53f84be5fe764d223b781d7a701f781", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30e5acffc53f84be5fe764d223b781d7a701f781"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b97644fc89bb84542f03753d7f8fcffb8c716871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97644fc89bb84542f03753d7f8fcffb8c716871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b97644fc89bb84542f03753d7f8fcffb8c716871", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b97644fc89bb84542f03753d7f8fcffb8c716871/comments", "author": null, "committer": null, "parents": [{"sha": "215e4ee73e98f68b4a0b6eabcfee10baac02f388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/215e4ee73e98f68b4a0b6eabcfee10baac02f388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/215e4ee73e98f68b4a0b6eabcfee10baac02f388"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "7c28f4bbd08e851c5368e3bf16d440e9264cefd2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97644fc89bb84542f03753d7f8fcffb8c716871/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97644fc89bb84542f03753d7f8fcffb8c716871/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b97644fc89bb84542f03753d7f8fcffb8c716871", "patch": "@@ -1,3 +1,10 @@\n+2000-08-23  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* frame.h (IA64_UNW_EHANDLER, IA64_UNW_UHANDLER): New.\n+\t* config/ia64/frame-ia64.c (__get_personality): Return zero if neither\n+\tEHANDLER nor UHANDLER bit is set.\n+\t(__get_except_table): Likewise.\n+\n 2000-08-23  Nick Clifton  <nickc@redhat.com>\n \n \t* config/arm/lib1funcs.asm: Replace upper case condition codes"}, {"sha": "5d5e3a308ffe853866c9f50a0f1409b56bddb668", "filename": "gcc/config/ia64/frame-ia64.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97644fc89bb84542f03753d7f8fcffb8c716871/gcc%2Fconfig%2Fia64%2Fframe-ia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97644fc89bb84542f03753d7f8fcffb8c716871/gcc%2Fconfig%2Fia64%2Fframe-ia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fframe-ia64.c?ref=b97644fc89bb84542f03753d7f8fcffb8c716871", "patch": "@@ -1376,27 +1376,38 @@ __build_ia64_frame_state (pc, frame, bsp, sp, pc_base_ptr)\n   return unw_info_ptr;\n }\n \n-/* Given an unwind info pointer, return the personailty routine.  */\n+/* Given an unwind info pointer, return the personality routine.  */\n void *\n __get_personality (ptr)\n      unwind_info_ptr *ptr;\n {\n   void **p;\n+\n+  /* There is a personality routine only if one of the EHANDLER or UHANDLER\n+     bits is set.  */\n+  if (! (IA64_UNW_HDR_FLAGS (ptr->header)\n+\t & (IA64_UNW_EHANDLER|IA64_UNW_UHANDLER)))\n+    return 0;\n+\n   p = (void **) (ptr->unwind_descriptors\n \t\t + IA64_UNW_HDR_LENGTH (ptr->header) * 8);\n   return *p;\n }\n \n+/* Given an unwind info pointer, return the exception table.  */\n void *\n __get_except_table (ptr)\n      unwind_info_ptr *ptr;\n {\n-  void **p, *table;\n-  p = (void **) (ptr->unwind_descriptors\n-\t\t + IA64_UNW_HDR_LENGTH (ptr->header) * 8);\n-  /* If there is no personality, there is no handler data.  */\n-  if (*p == 0)\n+  void *table;\n+\n+  /* If there is no personality, there is no handler data.\n+     There is a personality routine only if one of the EHANDLER or UHANDLER\n+     bits is set.  */\n+  if (! (IA64_UNW_HDR_FLAGS (ptr->header)\n+\t & (IA64_UNW_EHANDLER|IA64_UNW_UHANDLER)))\n     return 0;\n+\n   table = (void *) (ptr->unwind_descriptors\n \t\t    + IA64_UNW_HDR_LENGTH (ptr->header) * 8 + 8);\n   return table;"}, {"sha": "d8ebb6e9b7e080ea59ad528c17c72b4e5258a66f", "filename": "gcc/frame.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b97644fc89bb84542f03753d7f8fcffb8c716871/gcc%2Fframe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b97644fc89bb84542f03753d7f8fcffb8c716871/gcc%2Fframe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.h?ref=b97644fc89bb84542f03753d7f8fcffb8c716871", "patch": "@@ -267,6 +267,10 @@ typedef struct unwind_info_ptr\n #define IA64_UNW_HDR_FLAGS(x)\t(((x) >> 32) & 0xffffUL)\n #define IA64_UNW_HDR_VERSION(x)\t(((x) >> 48) & 0xffffUL)\n \n+/* Header flag bits, after extraction by IA64_UNW_HDR_FLAGS.  */\n+#define IA64_UNW_EHANDLER\t0x1\n+#define IA64_UNW_UHANDLER\t0x2\n+\n extern unwind_info_ptr *__build_ia64_frame_state (unsigned char *, \n \t\t\t\t\t\t  ia64_frame_state *,\n \t\t\t\t\t\t  void *, void *,"}]}