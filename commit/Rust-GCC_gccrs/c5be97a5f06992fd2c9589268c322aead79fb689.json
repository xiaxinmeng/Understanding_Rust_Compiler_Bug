{"sha": "c5be97a5f06992fd2c9589268c322aead79fb689", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzViZTk3YTVmMDY5OTJmZDJjOTU4OTI2OGMzMjJhZWFkNzlmYjY4OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2008-01-01T16:42:34Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-01-01T16:42:34Z"}, "message": "re PR libstdc++/34636 (Parallel sort fails)\n\n2008-01-01  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/34636\n\t* include/parallel/algobase.h (lexicographical_compare_switch(...,\n\trandom_access_iterator_tag, random_access_iterator_tag)): Careful\n\twith undereferenceable iterators.\n\t* testsuite/25_algorithms/sort/34636.cc: New.\n\nFrom-SVN: r131245", "tree": {"sha": "f2559339ee4ad7da6026049e37f11fa9446831b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2559339ee4ad7da6026049e37f11fa9446831b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5be97a5f06992fd2c9589268c322aead79fb689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5be97a5f06992fd2c9589268c322aead79fb689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5be97a5f06992fd2c9589268c322aead79fb689", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5be97a5f06992fd2c9589268c322aead79fb689/comments", "author": null, "committer": null, "parents": [{"sha": "f02ffa1207632424685aad0b81087f3b0959179d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f02ffa1207632424685aad0b81087f3b0959179d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f02ffa1207632424685aad0b81087f3b0959179d"}], "stats": {"total": 57, "additions": 43, "deletions": 14}, "files": [{"sha": "ce044da2873a279b897da05e370d79171f155ee5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5be97a5f06992fd2c9589268c322aead79fb689/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5be97a5f06992fd2c9589268c322aead79fb689/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c5be97a5f06992fd2c9589268c322aead79fb689", "patch": "@@ -1,3 +1,11 @@\n+2008-01-01  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/34636\n+\t* include/parallel/algobase.h (lexicographical_compare_switch(...,\n+\trandom_access_iterator_tag, random_access_iterator_tag)): Careful\n+\twith undereferenceable iterators.\n+\t* testsuite/25_algorithms/sort/34636.cc: New.\n+\n 2007-12-30  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/tuple (_Tuple_impl<>::_Tuple_impl(typename"}, {"sha": "39e9062faae3c0e8130efd07cd2fe72a1dc26edd", "filename": "libstdc++-v3/include/parallel/algobase.h", "status": "modified", "additions": 2, "deletions": 14, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5be97a5f06992fd2c9589268c322aead79fb689/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5be97a5f06992fd2c9589268c322aead79fb689/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgobase.h?ref=c5be97a5f06992fd2c9589268c322aead79fb689", "patch": "@@ -215,13 +215,7 @@ namespace __parallel\n \t\t\t\t\t   random_access_iterator_tag(), \n \t\t\t\t\t   random_access_iterator_tag());\n \n-\t    // Less because shorter.\n-\t    const bool lbs = mm.first == end1;\n-\n-\t    // Less because differing elements less.\n-\t    const bool lbdel = pred(*mm.first, *mm.second);\n-\n-\t    return lbs || lbdel;\n+\t    return (mm.first == end1) || bool(pred(*mm.first, *mm.second));\n \t  }\n \telse\n \t  {\n@@ -231,13 +225,7 @@ namespace __parallel\n \t\t\t\t\t   random_access_iterator_tag(), \n \t\t\t\t\t   random_access_iterator_tag());\n \n-\t    // Less because shorter.\n-\t    const bool lbs = mm.first != end2;\n-\n-\t    // Less because differing element less.\n-\t    const bool lbdel = pred(*mm.second, *mm.first);\n-\n-\t    return lbs && lbdel;\n+\t    return (mm.first != end2) && bool(pred(*mm.second, *mm.first));\n \t  }\n       }\n     else"}, {"sha": "61fa4d522479c1ad7eeff3d1ca72ea8d8ecad10e", "filename": "libstdc++-v3/testsuite/25_algorithms/sort/34636.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5be97a5f06992fd2c9589268c322aead79fb689/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2F34636.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5be97a5f06992fd2c9589268c322aead79fb689/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2F34636.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2F34636.cc?ref=c5be97a5f06992fd2c9589268c322aead79fb689", "patch": "@@ -0,0 +1,33 @@\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <vector>\n+#include <algorithm>\n+\n+// libstdc++/34636\n+void test01()\n+{\n+  std::vector<std::vector<int> > v(2);\n+  std::sort(v.begin(), v.end()); \n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}