{"sha": "243e0a5b1942879bc005bf150a744e69a4fcdc87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzZTBhNWIxOTQyODc5YmMwMDViZjE1MGE3NDRlNjlhNGZjZGM4Nw==", "commit": {"author": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-13T02:27:51Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-15T08:38:14Z"}, "message": "Output vextract{i,f}{32x4,64x2} for (vec_select:(reg:Vmode) idx) when byte_offset of idx % 16 == 0.\n\n2020-09-13  Hongtao Liu  <hongtao.liu@intel.com>\n\t    Peter Cordes  <peter@cordes.ca>\ngcc/ChangeLog:\n\n\tPR target/91103\n\t* config/i386/sse.md (extract_suf): Add V8SF/V8SI/V4DF/V4DI.\n\t(*vec_extract<mode><ssescalarmodelower>_valign): Output\n\tvextract{i,f}{32x4,64x2} instruction when byte_offset % 16 ==\n\t0.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/91103\n\t* gcc.target/i386/pr91103-1.c: Add extract tests.\n\t* gcc.target/i386/pr91103-2.c: Ditto.", "tree": {"sha": "f3db1a05a53f0d5fb8564a2490812ea8fa84735f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3db1a05a53f0d5fb8564a2490812ea8fa84735f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/243e0a5b1942879bc005bf150a744e69a4fcdc87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243e0a5b1942879bc005bf150a744e69a4fcdc87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243e0a5b1942879bc005bf150a744e69a4fcdc87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243e0a5b1942879bc005bf150a744e69a4fcdc87/comments", "author": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b69c481fc86e04c6c83f3a49eef2760c175a8f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b69c481fc86e04c6c83f3a49eef2760c175a8f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b69c481fc86e04c6c83f3a49eef2760c175a8f2"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "15645395d83b997b0d12e379f7df405e3ed2c9af", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243e0a5b1942879bc005bf150a744e69a4fcdc87/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243e0a5b1942879bc005bf150a744e69a4fcdc87/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=243e0a5b1942879bc005bf150a744e69a4fcdc87", "patch": "@@ -9089,7 +9089,8 @@\n   [(V16SF \"avx512f\") (V16SI \"avx512f\") (V8DF \"avx512dq\") (V8DI \"avx512dq\")])\n \n (define_mode_attr extract_suf\n-  [(V16SF \"32x4\") (V16SI \"32x4\") (V8DF \"64x2\") (V8DI \"64x2\")])\n+  [(V16SF \"32x4\") (V16SI \"32x4\") (V8DF \"64x2\") (V8DI \"64x2\")\n+   (V8SF \"32x4\") (V8SI \"32x4\") (V4DF \"64x2\") (V4DI \"64x2\")])\n \n (define_mode_iterator AVX512_VEC\n   [(V8DF \"TARGET_AVX512DQ\") (V8DI \"TARGET_AVX512DQ\") V16SF V16SI])\n@@ -10661,9 +10662,21 @@\n \t  (match_operand:V48_256_512_AVX512VL 1 \"register_operand\" \"v\")\n \t  (parallel [(match_operand 2 \"<vec_extract_imm_predicate>\")])))]\n   \"TARGET_AVX512F\n-   && INTVAL(operands[2]) >= 16 / GET_MODE_SIZE (<ssescalarmode>mode)\"\n-  \"valign<ternlogsuffix>\\t{%2, %1, %1, %<xtg_mode>0|%<xtg_mode>0, %1, %1, %2}\";\n-  [(set_attr \"prefix\" \"evex\")\n+   && INTVAL(operands[2]) * GET_MODE_SIZE (<ssescalarmode>mode) >= 16\"\n+{\n+  int byte_offset = INTVAL (operands[2]) * GET_MODE_SIZE (<ssescalarmode>mode);\n+  if (byte_offset % 16 == 0)\n+    {\n+      operands[2] = GEN_INT (byte_offset / 16);\n+      if (byte_offset / 16 == 1)\n+\treturn \"vextract<shuffletype><extract_suf>\\t{%2, %t1, %x0|%x0, %t1, %2}\";\n+      else\n+\treturn \"vextract<shuffletype><extract_suf>\\t{%2, %1, %x0|%x0, %1, %2}\";\n+    }\n+  else\n+    return \"valign<ternlogsuffix>\\t{%2, %1, %1, %<xtg_mode>0|%<xtg_mode>0, %1, %1, %2}\";\n+}\n+  [(set_attr \"prefix\" \"maybe_evex\")\n    (set_attr \"mode\" \"<sseintvecinsnmode>\")])\n \n (define_expand \"avx512f_shufps512_mask\""}, {"sha": "2d78a6da0f33138b6463bf17319880e3ab7233af", "filename": "gcc/testsuite/gcc.target/i386/pr91103-1.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243e0a5b1942879bc005bf150a744e69a4fcdc87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91103-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243e0a5b1942879bc005bf150a744e69a4fcdc87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91103-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91103-1.c?ref=243e0a5b1942879bc005bf150a744e69a4fcdc87", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512vl -O2\" } */\n-/* { dg-final { scan-assembler-times \"valign\\[dq\\]\" 16 } } */\n+/* { dg-final { scan-assembler-times \"valign\\[dq\\]\" 8 } } */\n+/* { dg-final { scan-assembler-times \"vextract\" 12 } } */\n \n typedef float v8sf __attribute__((vector_size(32)));\n typedef float v16sf __attribute__((vector_size(64)));\n@@ -23,9 +24,13 @@ EXTRACT (v8sf, float, 4);\n EXTRACT (v8sf, float, 7);\n EXTRACT (v8si, int, 4);\n EXTRACT (v8si, int, 7);\n+EXTRACT (v16sf, float, 4);\n EXTRACT (v16sf, float, 8);\n+EXTRACT (v16sf, float, 12);\n EXTRACT (v16sf, float, 15);\n+EXTRACT (v16si, int, 4);\n EXTRACT (v16si, int, 8);\n+EXTRACT (v16si, int, 12);\n EXTRACT (v16si, int, 15);\n EXTRACT (v4df, double, 2);\n EXTRACT (v4df, double, 3);"}, {"sha": "a928d87f99a0e41c718cb42869bc3908214a0d3f", "filename": "gcc/testsuite/gcc.target/i386/pr91103-2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/243e0a5b1942879bc005bf150a744e69a4fcdc87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91103-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/243e0a5b1942879bc005bf150a744e69a4fcdc87/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91103-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr91103-2.c?ref=243e0a5b1942879bc005bf150a744e69a4fcdc87", "patch": "@@ -61,9 +61,13 @@ RUNCHECK (f2, v8sf, float, 4);\n RUNCHECK (f2, v8sf, float, 7);\n RUNCHECK (di2, v8si, int, 4);\n RUNCHECK (di2, v8si, int, 7);\n+RUNCHECK (f1, v16sf, float, 4);\n RUNCHECK (f1, v16sf, float, 8);\n+RUNCHECK (f1, v16sf, float, 12);\n RUNCHECK (f1, v16sf, float, 15);\n+RUNCHECK (di1, v16si, int, 4);\n RUNCHECK (di1, v16si, int, 8);\n+RUNCHECK (di1, v16si, int, 12);\n RUNCHECK (di1, v16si, int, 15);\n RUNCHECK (d2, v4df, double, 2);\n RUNCHECK (d2, v4df, double, 3);"}]}