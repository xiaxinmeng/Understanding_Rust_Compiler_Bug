{"sha": "e179df8301f1b520082b486b43b24c464865ce26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE3OWRmODMwMWYxYjUyMDA4MmI0ODZiNDNiMjRjNDY0ODY1Y2UyNg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2013-10-09T07:24:35Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2013-10-09T07:24:35Z"}, "message": "s390.c (s390_register_info_stdarg_fpr): Remove packed stack special handling.\n\n2013-10-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.c (s390_register_info_stdarg_fpr): Remove\n\tpacked stack special handling.\n\t(s390_frame_info, s390_emit_prologue, s390_emit_epilogue): Switch\n\tback to fixed stack slots for FPRs saved due to stdarg.\n\nFrom-SVN: r203305", "tree": {"sha": "1e9d1a76a5fab9343445813471e406051b493cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e9d1a76a5fab9343445813471e406051b493cc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e179df8301f1b520082b486b43b24c464865ce26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e179df8301f1b520082b486b43b24c464865ce26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e179df8301f1b520082b486b43b24c464865ce26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e179df8301f1b520082b486b43b24c464865ce26/comments", "author": null, "committer": null, "parents": [{"sha": "74129172c65297ba6d2023670e31de1f422db9ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74129172c65297ba6d2023670e31de1f422db9ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74129172c65297ba6d2023670e31de1f422db9ee"}], "stats": {"total": 44, "additions": 24, "deletions": 20}, "files": [{"sha": "d4560bcd5a500075a23718f9109af2226f0a4747", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e179df8301f1b520082b486b43b24c464865ce26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e179df8301f1b520082b486b43b24c464865ce26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e179df8301f1b520082b486b43b24c464865ce26", "patch": "@@ -1,3 +1,10 @@\n+2013-10-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_register_info_stdarg_fpr): Remove\n+\tpacked stack special handling.\n+\t(s390_frame_info, s390_emit_prologue, s390_emit_epilogue): Switch\n+\tback to fixed stack slots for FPRs saved due to stdarg.\n+\n 2013-10-09  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/s390.c (s390_frame_info): Restructure function."}, {"sha": "f0d6a59e97805557388954e71bd8feeaa86dbb5b", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e179df8301f1b520082b486b43b24c464865ce26/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e179df8301f1b520082b486b43b24c464865ce26/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=e179df8301f1b520082b486b43b24c464865ce26", "patch": "@@ -7589,13 +7589,6 @@ s390_register_info_stdarg_fpr ()\n   if (max_fpr > FP_ARG_NUM_REG)\n     max_fpr = FP_ARG_NUM_REG;\n \n-  /* The va_arg algorithm accesses the FPRs in the reg save area using\n-     a constant offset from r0.  With the packed stack layout omitting\n-     FPRs from the beginning would change the offset for the\n-     subsequent FPRs.  */\n-  if (TARGET_PACKED_STACK)\n-    min_fpr = 0;\n-\n   for (i = min_fpr; i < max_fpr; i++)\n     cfun_set_fpr_save (i + FPR0_REGNUM);\n }\n@@ -7836,16 +7829,20 @@ s390_frame_info (void)\n     }\n   else\n     {\n+      int num_fprs;\n+\n       /* Packed stack layout without backchain.  */\n-      cfun_frame_layout.f4_offset\n-\t= (STACK_POINTER_OFFSET\n-\t   - 8 * (cfun_fpr_save_p (FPR4_REGNUM)\n-\t\t  + cfun_fpr_save_p (FPR6_REGNUM)));\n \n-      cfun_frame_layout.f0_offset\n-\t= (cfun_frame_layout.f4_offset\n-\t   - 8 * (cfun_fpr_save_p (FPR0_REGNUM)\n-\t\t  + cfun_fpr_save_p (FPR2_REGNUM)));\n+      /* With stdarg FPRs need their dedicated slots.  */\n+      num_fprs = (TARGET_64BIT && cfun->stdarg ? 2\n+\t\t  : (cfun_fpr_save_p (FPR4_REGNUM) +\n+\t\t     cfun_fpr_save_p (FPR6_REGNUM)));\n+      cfun_frame_layout.f4_offset = STACK_POINTER_OFFSET - 8 * num_fprs;\n+\n+      num_fprs = (cfun->stdarg ? 2\n+\t\t  : (cfun_fpr_save_p (FPR0_REGNUM)\n+\t\t     + cfun_fpr_save_p (FPR2_REGNUM)));\n+      cfun_frame_layout.f0_offset = cfun_frame_layout.f4_offset - 8 * num_fprs;\n \n       cfun_frame_layout.gprs_offset\n \t= cfun_frame_layout.f0_offset - cfun_gprs_save_area_size;\n@@ -8680,8 +8677,8 @@ s390_emit_prologue (void)\n \t  save_fpr (stack_pointer_rtx, offset, i);\n \t  offset += 8;\n \t}\n-      else if (!TARGET_PACKED_STACK)\n-\t  offset += 8;\n+      else if (!TARGET_PACKED_STACK || cfun->stdarg)\n+\toffset += 8;\n     }\n \n   /* Save f4 and f6.  */\n@@ -8693,12 +8690,12 @@ s390_emit_prologue (void)\n \t  insn = save_fpr (stack_pointer_rtx, offset, i);\n \t  offset += 8;\n \n-\t  /* If f4 and f6 are call clobbered they are saved due to stdargs and\n-\t     therefore are not frame related.  */\n+\t  /* If f4 and f6 are call clobbered they are saved due to\n+\t     stdargs and therefore are not frame related.  */\n \t  if (!call_really_used_regs[i])\n \t    RTX_FRAME_RELATED_P (insn) = 1;\n \t}\n-      else if (!TARGET_PACKED_STACK)\n+      else if (!TARGET_PACKED_STACK || call_really_used_regs[i])\n \toffset += 8;\n     }\n "}]}