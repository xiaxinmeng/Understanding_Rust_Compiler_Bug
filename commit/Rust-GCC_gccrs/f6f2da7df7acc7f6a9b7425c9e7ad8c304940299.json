{"sha": "f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZmMmRhN2RmN2FjYzdmNmE5Yjc0MjVjOWU3YWQ4YzMwNDk0MDI5OQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-11-29T21:57:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-29T21:57:38Z"}, "message": "re PR tree-optimization/33434 (inlining miscompilation)\n\n\tPR tree-optimization/33434\n\t* tree-inline.c (setup_one_parameter): If the value passed to\n\ta parameter is never used, don't set it up.\n\n\t* gcc.dg/pr33434-1.c: New test.\n\t* gcc.dg/pr33434-2.c: New test.\n\t* gcc.dg/pr33434-3.c: New test.\n\t* gcc.dg/pr33434-4.c: New test.\n\nFrom-SVN: r130521", "tree": {"sha": "333a102d3377440a02a26d058160b3f6993e09eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/333a102d3377440a02a26d058160b3f6993e09eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/comments", "author": null, "committer": null, "parents": [{"sha": "42924ed71f51fd6c33483ca202fc5a1ccff9b770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42924ed71f51fd6c33483ca202fc5a1ccff9b770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42924ed71f51fd6c33483ca202fc5a1ccff9b770"}], "stats": {"total": 121, "additions": 121, "deletions": 0}, "files": [{"sha": "438d303ada7b8adfeae34b18fe32e1ad2b14a8ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "patch": "@@ -1,3 +1,10 @@\n+2007-11-29  Jan Hubicka  <jh@suse.cz>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/33434\n+\t* tree-inline.c (setup_one_parameter): If the value passed to\n+\ta parameter is never used, don't set it up.\n+\n 2007-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/32130"}, {"sha": "93e772d194826889d38ef7af09da3da4eaea5a50", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "patch": "@@ -1,5 +1,11 @@\n 2007-11-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR tree-optimization/33434\n+\t* gcc.dg/pr33434-1.c: New test.\n+\t* gcc.dg/pr33434-2.c: New test.\n+\t* gcc.dg/pr33434-3.c: New test.\n+\t* gcc.dg/pr33434-4.c: New test.\n+\n \tPR c++/34270\n \t* g++.dg/template/cond7.C: New test.\n "}, {"sha": "d646ff74d227fd853aaf5488a9f17a0e72b7331d", "filename": "gcc/testsuite/gcc.dg/pr33434-1.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-1.c?ref=f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "patch": "@@ -0,0 +1,25 @@\n+/* PR tree-optimization/33434 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+int k;\n+\n+void f1 (int a, int b)\n+{\n+  a = 1;\n+  b = 1;\n+  if (a)\n+    while (b --)\n+      k = 1;\n+  else\n+    if (b != 1)\n+      __builtin_abort ();\n+}\n+\n+int main (void)\n+{\n+  f1 (1, 1);\n+  if (k != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "7dd614c0af6beb68c399d43c3cbbd46d555ba470", "filename": "gcc/testsuite/gcc.dg/pr33434-2.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-2.c?ref=f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "patch": "@@ -0,0 +1,26 @@\n+/* PR tree-optimization/33434 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+int k;\n+\n+void f1 (int a)\n+{\n+  int b;\n+  a = 1;\n+  b = 1;\n+  if (a)\n+    while (b --)\n+      k = 1;\n+  else\n+    if (b != 1)\n+      __builtin_abort ();\n+}\n+\n+int main (void)\n+{\n+  f1 (1);\n+  if (k != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "3e99451fb29c582c04becb57c9090da30cbd1d41", "filename": "gcc/testsuite/gcc.dg/pr33434-3.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-3.c?ref=f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "patch": "@@ -0,0 +1,31 @@\n+/* PR tree-optimization/33434 */\n+/* { dg-do run } */\n+/* { dg-options \"-O3\" } */\n+\n+int k;\n+\n+void __attribute__((noinline)) f2 (int b)\n+{\n+  k = b - 1;\n+}\n+\n+void f1 (int a, int b)\n+{\n+  f2 (b);\n+  a = 1;\n+  b = 1;\n+  if (a)\n+    while (b --)\n+      k = 1;\n+  else\n+    if (b != 1)\n+      __builtin_abort ();\n+}\n+\n+int main (void)\n+{\n+  f1 (1, 1);\n+  if (k != 1)\n+    __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "d34675fe4e221dab5f15e2329ba2e72804594a90", "filename": "gcc/testsuite/gcc.dg/pr33434-4.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33434-4.c?ref=f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "patch": "@@ -0,0 +1,18 @@\n+/* PR tree-optimization/33434 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void *baz (void);\n+\n+static void *\n+bar (void *x)\n+{\n+  x = baz ();\n+  return x;\n+}\n+\n+void *\n+foo (void *x)\n+{\n+  return bar (x);\n+}"}, {"sha": "1efc0edc2ed14ad4ed34f0105ad88d1d4be22a56", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6f2da7df7acc7f6a9b7425c9e7ad8c304940299/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=f6f2da7df7acc7f6a9b7425c9e7ad8c304940299", "patch": "@@ -1508,6 +1508,14 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n       return;\n     }\n \n+  /* If the value of argument is never used, don't care about initializing\n+     it.  */\n+  if (gimple_in_ssa_p (cfun) && !def && is_gimple_reg (p))\n+    {\n+      gcc_assert (!value || !TREE_SIDE_EFFECTS (value));\n+      return;\n+    }\n+\n   /* Initialize this VAR_DECL from the equivalent argument.  Convert\n      the argument to the proper type in case it was promoted.  */\n   if (value)"}]}