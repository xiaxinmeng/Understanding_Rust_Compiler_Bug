{"sha": "38f9cd4cacb55b6e05d2a7506b8f2796376f24dd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzhmOWNkNGNhY2I1NWI2ZTA1ZDJhNzUwNmI4ZjI3OTYzNzZmMjRkZA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@suse.de", "date": "2003-10-26T10:17:38Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2003-10-26T10:17:38Z"}, "message": "dwarf2out.c (output_cfi): Use HOST_WIDE_INT_PRINT.\n\n2003-10-26  Andreas Jaeger  <aj@suse.de>\n\t    Zack Weinberg  <zack@codesourcery.com>\n\t    Andreas Tobler <toa@pop.agri.ch>\n\n\t* dwarf2out.c (output_cfi): Use HOST_WIDE_INT_PRINT.\n\t(output_die): Likewise.\n\t(print_die): Likewise.\n\nCo-Authored-By: Andreas Tobler <toa@pop.agri.ch>\nCo-Authored-By: Zack Weinberg <zack@codesourcery.com>\n\nFrom-SVN: r72948", "tree": {"sha": "9fd6fe23c0bfbc696701263d614c7804581ae740", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9fd6fe23c0bfbc696701263d614c7804581ae740"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd/comments", "author": {"login": "ajaeger", "id": 16867, "node_id": "MDQ6VXNlcjE2ODY3", "avatar_url": "https://avatars.githubusercontent.com/u/16867?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ajaeger", "html_url": "https://github.com/ajaeger", "followers_url": "https://api.github.com/users/ajaeger/followers", "following_url": "https://api.github.com/users/ajaeger/following{/other_user}", "gists_url": "https://api.github.com/users/ajaeger/gists{/gist_id}", "starred_url": "https://api.github.com/users/ajaeger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ajaeger/subscriptions", "organizations_url": "https://api.github.com/users/ajaeger/orgs", "repos_url": "https://api.github.com/users/ajaeger/repos", "events_url": "https://api.github.com/users/ajaeger/events{/privacy}", "received_events_url": "https://api.github.com/users/ajaeger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ab5b679d92f6bbd0905f42f7ec9542c23c46950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ab5b679d92f6bbd0905f42f7ec9542c23c46950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ab5b679d92f6bbd0905f42f7ec9542c23c46950"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "8a90bc693b605a8c964eb6f37445f8e0d0039177", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38f9cd4cacb55b6e05d2a7506b8f2796376f24dd", "patch": "@@ -1,3 +1,11 @@\n+2003-10-26  Andreas Jaeger  <aj@suse.de>\n+\t    Zack Weinberg  <zack@codesourcery.com>\n+\t    Andreas Tobler <toa@pop.agri.ch>\n+\n+\t* dwarf2out.c (output_cfi): Use HOST_WIDE_INT_PRINT.\n+\t(output_die): Likewise.\n+\t(print_die): Likewise.\n+\n 2003-10-26  Andreas Jaeger  <aj@suse.de>\n \n \t* tree.h (dwarf2out_def_cfa, dwarf2out_args_size,"}, {"sha": "a99b2f650c4f2f935357661075c2583e18c4f626", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38f9cd4cacb55b6e05d2a7506b8f2796376f24dd/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=38f9cd4cacb55b6e05d2a7506b8f2796376f24dd", "patch": "@@ -1791,7 +1791,7 @@ output_cfi (dw_cfi_ref cfi, dw_fde_ref fde, int for_eh)\n   if (cfi->dw_cfi_opc == DW_CFA_advance_loc)\n     dw2_asm_output_data (1, (cfi->dw_cfi_opc\n \t\t\t     | (cfi->dw_cfi_oprnd1.dw_cfi_offset & 0x3f)),\n-\t\t\t \"DW_CFA_advance_loc 0x%lx\",\n+\t\t\t \"DW_CFA_advance_loc \" HOST_WIDE_INT_PRINT_HEX,\n \t\t\t cfi->dw_cfi_oprnd1.dw_cfi_offset);\n   else if (cfi->dw_cfi_opc == DW_CFA_offset)\n     {\n@@ -5234,10 +5234,10 @@ print_die (dw_die_ref die, FILE *outfile)\n \t  fprintf (outfile, \"range list\");\n \t  break;\n \tcase dw_val_class_const:\n-\t  fprintf (outfile, \"%ld\", AT_int (a));\n+\t  fprintf (outfile, HOST_WIDE_INT_PRINT_DEC, AT_int (a));\n \t  break;\n \tcase dw_val_class_unsigned_const:\n-\t  fprintf (outfile, \"%lu\", AT_unsigned (a));\n+\t  fprintf (outfile, HOST_WIDE_INT_PRINT_UNSIGNED, AT_unsigned (a));\n \t  break;\n \tcase dw_val_class_long_long:\n \t  fprintf (outfile, \"constant (%lu,%lu)\",\n@@ -6556,7 +6556,8 @@ output_die (dw_die_ref die)\n \t  {\n \t    char *p = strchr (ranges_section_label, '\\0');\n \n-\t    sprintf (p, \"+0x%lx\", a->dw_attr_val.v.val_offset);\n+\t    sprintf (p, \"+\" HOST_WIDE_INT_PRINT_HEX,\n+\t\t     a->dw_attr_val.v.val_offset);\n \t    dw2_asm_output_offset (DWARF_OFFSET_SIZE, ranges_section_label,\n \t\t\t\t   \"%s\", name);\n \t    *p = '\\0';"}]}