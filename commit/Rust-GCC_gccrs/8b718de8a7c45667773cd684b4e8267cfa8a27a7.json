{"sha": "8b718de8a7c45667773cd684b4e8267cfa8a27a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGI3MThkZThhN2M0NTY2Nzc3M2NkNjg0YjRlODI2N2NmYThhMjdhNw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2017-07-12T13:58:34Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2017-07-12T13:58:34Z"}, "message": "re PR target/81407 ([avr] Diagnose if a variable in progmem needs constructing.)\n\n\tPR target/81407\n\t* config/avr/avr.c (avr_encode_section_info)\n\t[progmem && !TREE_READONLY]: Error if progmem object needs\n\tconstructing.\n\nFrom-SVN: r250151", "tree": {"sha": "9bb1053b374d65ac261d775edf1f9021244ba4b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bb1053b374d65ac261d775edf1f9021244ba4b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b718de8a7c45667773cd684b4e8267cfa8a27a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b718de8a7c45667773cd684b4e8267cfa8a27a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b718de8a7c45667773cd684b4e8267cfa8a27a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b718de8a7c45667773cd684b4e8267cfa8a27a7/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ea93a64ff1e9204d0366e359876a30682ff7c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea93a64ff1e9204d0366e359876a30682ff7c0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ea93a64ff1e9204d0366e359876a30682ff7c0c"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "46ca90b590573dbe7c9b45a175e5b254dd5068a4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b718de8a7c45667773cd684b4e8267cfa8a27a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b718de8a7c45667773cd684b4e8267cfa8a27a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8b718de8a7c45667773cd684b4e8267cfa8a27a7", "patch": "@@ -1,3 +1,10 @@\n+2017-07-12  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/81407\n+\t* config/avr/avr.c (avr_encode_section_info)\n+\t[progmem && !TREE_READONLY]: Error if progmem object needs\n+\tconstructing.\n+\n 2017-07-11  Michael Collison  <michael.collison@arm.com>\n \n \t* config/aarch64/aarch64-simd.md (aarch64_sub<mode>_compare0):"}, {"sha": "a8978ec84ffed71c050131ded12326ed63096fb0", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b718de8a7c45667773cd684b4e8267cfa8a27a7/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b718de8a7c45667773cd684b4e8267cfa8a27a7/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=8b718de8a7c45667773cd684b4e8267cfa8a27a7", "patch": "@@ -10376,18 +10376,26 @@ avr_encode_section_info (tree decl, rtx rtl, int new_decl_p)\n \n   if (new_decl_p\n       && decl && DECL_P (decl)\n-      && NULL_TREE == DECL_INITIAL (decl)\n       && !DECL_EXTERNAL (decl)\n       && avr_progmem_p (decl, DECL_ATTRIBUTES (decl)))\n     {\n-      // Don't warn for (implicit) aliases like in PR80462.\n-      tree asmname = DECL_ASSEMBLER_NAME (decl);\n-      varpool_node *node = varpool_node::get_for_asmname (asmname);\n-      bool alias_p = node && node->alias;\n+      if (!TREE_READONLY (decl))\n+        {\n+          // This might happen with C++ if stuff needs constructing.\n+          error (\"variable %q+D with dynamic initialization put \"\n+                 \"into program memory area\", decl);\n+        }\n+      else if (NULL_TREE == DECL_INITIAL (decl))\n+        {\n+          // Don't warn for (implicit) aliases like in PR80462.\n+          tree asmname = DECL_ASSEMBLER_NAME (decl);\n+          varpool_node *node = varpool_node::get_for_asmname (asmname);\n+          bool alias_p = node && node->alias;\n \n-      if (!alias_p)\n-        warning (OPT_Wuninitialized, \"uninitialized variable %q+D put into \"\n-                 \"program memory area\", decl);\n+          if (!alias_p)\n+            warning (OPT_Wuninitialized, \"uninitialized variable %q+D put \"\n+                     \"into program memory area\", decl);\n+        }\n     }\n \n   default_encode_section_info (decl, rtl, new_decl_p);"}]}