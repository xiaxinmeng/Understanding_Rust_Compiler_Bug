{"sha": "3a6298d639333eb729a2cea441aeaffcff619227", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E2Mjk4ZDYzOTMzM2ViNzI5YTJjZWE0NDFhZWFmZmNmZjYxOTIyNw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2020-11-25T21:02:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-15T11:41:56Z"}, "message": "[Ada] Refactor repeated complains about missing -gnat2005 switch\n\ngcc/ada/\n\n\t* errout.ads (Error_Msg_Ada_2005_Extension): New routine (spec).\n\t* errout.adb (Error_Msg_Ada_2005_Extension): New routine (body).\n\t* par-ch10.adb: Reuse new routine; correct casing for \"LIMITED\n\tWITH\".\n\t* par-ch11.adb: Likewise.\n\t* par-ch12.adb: Likewise.\n\t* par-ch3.adb: Likewise.\n\t* par-ch4.adb: Likewise; replace \"box\" with \"<>\".\n\t* par-ch6.adb: Likewise.\n\t* par-ch9.adb: Likewise; correct casing for \"THEN ABORT\".", "tree": {"sha": "6d45c402d9401d48866ba77704a95f06f341e14f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d45c402d9401d48866ba77704a95f06f341e14f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a6298d639333eb729a2cea441aeaffcff619227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6298d639333eb729a2cea441aeaffcff619227", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a6298d639333eb729a2cea441aeaffcff619227", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a6298d639333eb729a2cea441aeaffcff619227/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04974721aeee72da4dc497d371bad42a779ad89e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04974721aeee72da4dc497d371bad42a779ad89e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04974721aeee72da4dc497d371bad42a779ad89e"}], "stats": {"total": 220, "additions": 64, "deletions": 156}, "files": [{"sha": "cc291c6434f724e4e038b1e5e89a23d022afff27", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -612,6 +612,25 @@ package body Errout is\n       end;\n    end Error_Msg;\n \n+   ----------------------------------\n+   -- Error_Msg_Ada_2005_Extension --\n+   ----------------------------------\n+\n+   procedure Error_Msg_Ada_2005_Extension (Extension : String) is\n+      Loc : constant Source_Ptr := Token_Ptr;\n+   begin\n+      if Ada_Version < Ada_2005 then\n+         Error_Msg (Extension & \" is an Ada 2005 extension\", Loc);\n+\n+         if No (Ada_Version_Pragma) then\n+            Error_Msg (\"\\unit must be compiled with -gnat05 switch\", Loc);\n+         else\n+            Error_Msg_Sloc := Sloc (Ada_Version_Pragma);\n+            Error_Msg (\"\\incompatible with Ada version set#\", Loc);\n+         end if;\n+      end if;\n+   end Error_Msg_Ada_2005_Extension;\n+\n    --------------------------------\n    -- Error_Msg_Ada_2012_Feature --\n    --------------------------------"}, {"sha": "02cfdee2c321ee36146120b560f5c142f1eeebd1", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -902,6 +902,11 @@ package Errout is\n    --  overridden interface primitive Iface_Prim) indicating wrong mode of the\n    --  first formal (RM 9.4(11.9/3)).\n \n+   procedure Error_Msg_Ada_2005_Extension (Extension : String);\n+   --  Analogous to Error_Msg_Ada_2012_Feature, but phrase the message using\n+   --  \"extension\" and not \"feature\". This routine is only used in the parser,\n+   --  so the error is always placed at the Token_Ptr.\n+\n    procedure Error_Msg_Ada_2012_Feature (Feature : String; Loc : Source_Ptr);\n    --  If not operating in Ada 2012 mode or higher, posts errors complaining\n    --  that Feature is only supported in Ada 2012, with appropriate suggestions"}, {"sha": "70984b140d30b3ef9bb8ab73ee6e608693ec3ee3", "filename": "gcc/ada/par-ch10.adb", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch10.adb?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -861,11 +861,7 @@ package body Ch10 is\n                  (\"unexpected LIMITED ignored\");\n             end if;\n \n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SP (\"LIMITED WITH is an Ada 2005 extension\");\n-               Error_Msg_SP\n-                 (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"`LIMITED WITH`\");\n \n          elsif Token = Tok_Private then\n             Has_Limited := False;\n@@ -879,13 +875,10 @@ package body Ch10 is\n \n                Restore_Scan_State (Scan_State); -- to PRIVATE\n                return Item_List;\n-\n-            elsif Ada_Version < Ada_2005 then\n-               Error_Msg_SP (\"`PRIVATE WITH` is an Ada 2005 extension\");\n-               Error_Msg_SP\n-                 (\"\\unit must be compiled with -gnat05 switch\");\n             end if;\n \n+            Error_Msg_Ada_2005_Extension (\"`PRIVATE WITH`\");\n+\n          else\n             Has_Limited := False;\n             Has_Private := False;"}, {"sha": "63f0c6ecb0db516a1d40e885fcf1b0ded52a03b3", "filename": "gcc/ada/par-ch11.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch11.adb?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -227,10 +227,7 @@ package body Ch11 is\n       end if;\n \n       if Token = Tok_With then\n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SC (\"string expression in raise is Ada 2005 extension\");\n-            Error_Msg_SC (\"\\unit must be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension (\"string expression in raise\");\n \n          Scan; -- past WITH\n          Set_Expression (Raise_Node, P_Expression);"}, {"sha": "7743670455e7532430b0927244007aed1024c677", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 9, "deletions": 40, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -349,13 +349,8 @@ package body Ch12 is\n       --  Ada 2005: an association can be given by: others => <>\n \n       if Token = Tok_Others then\n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SP\n-              (\"partial parameterization of formal packages\"\n-               & \" is an Ada 2005 extension\");\n-            Error_Msg_SP\n-              (\"\\unit must be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension\n+           (\"partial parameterization of formal package\");\n \n          Scan;  --  past OTHERS\n \n@@ -478,12 +473,8 @@ package body Ch12 is\n             Set_Access_Definition (Decl_Node,\n               P_Access_Definition (Not_Null_Present));\n \n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SP\n-                 (\"access definition not allowed in formal object \" &\n-                  \"declaration\");\n-               Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension\n+              (\"access definition in formal object declaration\");\n \n          --  Formal object with a subtype mark\n \n@@ -923,23 +914,13 @@ package body Ch12 is\n          Set_Limited_Present (Def_Node);\n          Scan;  --  past LIMITED\n \n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SP\n-              (\"LIMITED in derived type is an Ada 2005 extension\");\n-            Error_Msg_SP\n-              (\"\\unit must be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension (\"LIMITED in derived type\");\n \n       elsif Token = Tok_Synchronized then\n          Set_Synchronized_Present (Def_Node);\n          Scan;  --  past SYNCHRONIZED\n \n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SP\n-              (\"SYNCHRONIZED in derived type is an Ada 2005 extension\");\n-            Error_Msg_SP\n-              (\"\\unit must be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension (\"SYNCHRONIZED in derived type\");\n       end if;\n \n       if Token = Tok_Abstract then\n@@ -955,11 +936,7 @@ package body Ch12 is\n       if Token = Tok_And then\n          Scan; -- past AND\n \n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SP\n-              (\"abstract interface is an Ada 2005 extension\");\n-            Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension (\"abstract interface\");\n \n          Set_Interface_List (Def_Node, New_List);\n \n@@ -1190,11 +1167,7 @@ package body Ch12 is\n               New_Node (N_Formal_Abstract_Subprogram_Declaration, Prev_Sloc);\n             Scan; -- past ABSTRACT\n \n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SP\n-                 (\"formal abstract subprograms are an Ada 2005 extension\");\n-               Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"formal abstract subprogram\");\n \n          else\n             Def_Node :=\n@@ -1214,11 +1187,7 @@ package body Ch12 is\n             Scan; -- past <>\n \n          elsif Token = Tok_Null then\n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SP\n-                 (\"null default subprograms are an Ada 2005 extension\");\n-               Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"null default subprogram\");\n \n             if Nkind (Spec_Node) = N_Procedure_Specification then\n                Set_Null_Present (Spec_Node);"}, {"sha": "a2ff668a98bd5d1bab29a8fe56e30079e27bf9c2", "filename": "gcc/ada/par-ch3.adb", "status": "modified", "additions": 18, "deletions": 66, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch3.adb?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -690,12 +690,7 @@ package body Ch3 is\n                   --  Ada 2005 (AI-419): LIMITED NEW\n \n                elsif Token = Tok_New then\n-                  if Ada_Version < Ada_2005 then\n-                     Error_Msg_SP\n-                       (\"LIMITED in derived type is an Ada 2005 extension\");\n-                     Error_Msg_SP\n-                       (\"\\unit must be compiled with -gnat05 switch\");\n-                  end if;\n+                  Error_Msg_Ada_2005_Extension (\"LIMITED in derived type\");\n \n                   Typedef_Node := P_Derived_Type_Def_Or_Private_Ext_Decl;\n                   Set_Limited_Present (Typedef_Node);\n@@ -1671,13 +1666,8 @@ package body Ch3 is\n                   Set_Null_Exclusion_Present (Decl_Node, Not_Null_Present);\n \n                   if Token = Tok_Access then\n-                     if Ada_Version < Ada_2005 then\n-                        Error_Msg_SP\n-                          (\"generalized use of anonymous access types \" &\n-                           \"is an Ada 2005 extension\");\n-                        Error_Msg_SP\n-                          (\"\\unit must be compiled with -gnat05 switch\");\n-                     end if;\n+                     Error_Msg_Ada_2005_Extension\n+                       (\"generalized use of anonymous access types\");\n \n                      Set_Object_Definition\n                        (Decl_Node, P_Access_Definition (Not_Null_Present));\n@@ -1734,13 +1724,8 @@ package body Ch3 is\n                --  Access definition (AI-406) or subtype indication\n \n                if Token = Tok_Access then\n-                  if Ada_Version < Ada_2005 then\n-                     Error_Msg_SP\n-                       (\"generalized use of anonymous access types \" &\n-                        \"is an Ada 2005 extension\");\n-                     Error_Msg_SP\n-                       (\"\\unit must be compiled with -gnat05 switch\");\n-                  end if;\n+                  Error_Msg_Ada_2005_Extension\n+                    (\"generalized use of anonymous access types\");\n \n                   Set_Object_Definition\n                     (Decl_Node, P_Access_Definition (Not_Null_Present));\n@@ -1779,12 +1764,8 @@ package body Ch3 is\n             Not_Null_Present := P_Null_Exclusion;  --  Ada 2005 (AI-231/423)\n \n             if Token = Tok_Access then\n-               if Ada_Version < Ada_2005 then\n-                  Error_Msg_SP\n-                    (\"generalized use of anonymous access types \" &\n-                     \"is an Ada 2005 extension\");\n-                  Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-               end if;\n+               Error_Msg_Ada_2005_Extension\n+                 (\"generalized use of anonymous access types\");\n \n                Acc_Node := P_Access_Definition (Not_Null_Present);\n \n@@ -1850,12 +1831,8 @@ package body Ch3 is\n          --  Ada 2005 (AI-230): Access Definition case\n \n          elsif Token = Tok_Access then\n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SP\n-                 (\"generalized use of anonymous access types \" &\n-                  \"is an Ada 2005 extension\");\n-               Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension\n+              (\"generalized use of anonymous access types\");\n \n             Acc_Node := P_Access_Definition (Null_Exclusion_Present => False);\n \n@@ -2063,11 +2040,7 @@ package body Ch3 is\n       if Token = Tok_And then\n          Scan; -- past AND\n \n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SP\n-              (\"abstract interface is an Ada 2005 extension\");\n-            Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension (\"abstract interface\");\n \n          Set_Interface_List (Typedef_Node, New_List);\n \n@@ -2795,12 +2768,8 @@ package body Ch3 is\n       --  Ada 2005 (AI-230): Access Definition case\n \n       if Token = Tok_Access then\n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SP\n-              (\"generalized use of anonymous access types \" &\n-               \"is an Ada 2005 extension\");\n-            Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension\n+           (\"generalized use of anonymous access types\");\n \n          --  AI95-406 makes \"aliased\" legal (and useless) in this context so\n          --  followintg code which used to be needed is commented out.\n@@ -3608,12 +3577,8 @@ package body Ch3 is\n             --  Ada 2005 (AI-230): Access Definition case\n \n             if Token = Tok_Access then\n-               if Ada_Version < Ada_2005 then\n-                  Error_Msg_SP\n-                    (\"generalized use of anonymous access types \" &\n-                     \"is an Ada 2005 extension\");\n-                  Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-               end if;\n+               Error_Msg_Ada_2005_Extension\n+                 (\"generalized use of anonymous access types\");\n \n                --  AI95-406 makes \"aliased\" legal (and useless) here, so the\n                --  following code which used to be required is commented out.\n@@ -3953,10 +3918,7 @@ package body Ch3 is\n       Typedef_Node : Node_Id;\n \n    begin\n-      if Ada_Version < Ada_2005 then\n-         Error_Msg_SP (\"abstract interface is an Ada 2005 extension\");\n-         Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-      end if;\n+      Error_Msg_Ada_2005_Extension (\"abstract interface\");\n \n       if Abstract_Present then\n          Error_Msg_SP\n@@ -4143,11 +4105,7 @@ package body Ch3 is\n          --  Ada 2005 (AI-318-02)\n \n          if Token = Tok_Access then\n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SC\n-                 (\"anonymous access result type is an Ada 2005 extension\");\n-               Error_Msg_SC (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"anonymous access result type\");\n \n             Result_Node := P_Access_Definition (Result_Not_Null);\n \n@@ -4245,10 +4203,7 @@ package body Ch3 is\n         or else Token = Tok_Procedure\n         or else Token = Tok_Function\n       then\n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SP (\"access-to-subprogram is an Ada 2005 extension\");\n-            Error_Msg_SP (\"\\unit should be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension (\"access-to-subprogram\");\n \n          Subp_Node := P_Access_Type_Definition (Header_Already_Parsed => True);\n          Set_Null_Exclusion_Present (Subp_Node, Null_Exclusion_Present);\n@@ -4270,10 +4225,7 @@ package body Ch3 is\n             Set_All_Present (Def_Node);\n \n          elsif Token = Tok_Constant then\n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SP (\"access-to-constant is an Ada 2005 extension\");\n-               Error_Msg_SP (\"\\unit should be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"access-to-constant\");\n \n             Scan; -- past CONSTANT\n             Set_Constant_Present (Def_Node);"}, {"sha": "c1e781cce71a3c7bf21aa9a17b5c3fbc880fab4c", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -1360,9 +1360,7 @@ package body Ch4 is\n \n       procedure Box_Error is\n       begin\n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SC (\"box in aggregate is an Ada 2005 extension\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension (\"'<'> in aggregate\");\n \n          --  Ada 2005 (AI-287): The box notation is allowed only with named\n          --  notation because positional notation might be error prone. For\n@@ -1755,11 +1753,7 @@ package body Ch4 is\n          --  Ada 2005(AI-287): The box notation is used to indicate the\n          --  default initialization of aggregate components\n \n-         if Ada_Version < Ada_2005 then\n-            Error_Msg_SP\n-              (\"component association with '<'> is an Ada 2005 extension\");\n-            Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-         end if;\n+         Error_Msg_Ada_2005_Extension (\"component association with '<'>\");\n \n          Set_Box_Present (Assoc_Node);\n          Scan; -- Past box"}, {"sha": "004ca12ab87d40ff4ef484e78367e9e700d24023", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 4, "deletions": 19, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -426,11 +426,7 @@ package body Ch6 is\n          --  Ada 2005 (AI-318-02)\n \n          if Token = Tok_Access then\n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SC\n-                 (\"anonymous access result type is an Ada 2005 extension\");\n-               Error_Msg_SC (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"anonymous access result type\");\n \n             Result_Node := P_Access_Definition (Result_Not_Null);\n \n@@ -598,10 +594,7 @@ package body Ch6 is\n             --  Ada 2005 (AI-248): Parse a null procedure declaration\n \n             elsif Token = Tok_Null then\n-               if Ada_Version < Ada_2005 then\n-                  Error_Msg_SP (\"null procedures are an Ada 2005 extension\");\n-                  Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-               end if;\n+               Error_Msg_Ada_2005_Extension (\"null procedure\");\n \n                Scan; -- past NULL\n \n@@ -1064,11 +1057,7 @@ package body Ch6 is\n          --  Ada 2005 (AI-318-02)\n \n          if Token = Tok_Access then\n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SC\n-                 (\"anonymous access result type is an Ada 2005 extension\");\n-               Error_Msg_SC (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"anonymous access result type\");\n \n             Result_Node := P_Access_Definition (Result_Not_Null);\n \n@@ -1950,11 +1939,7 @@ package body Ch6 is\n          --  Extended_return_statement (Ada 2005 only -- AI-318):\n \n          else\n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SP\n-                 (\" extended_return_statement is an Ada 2005 extension\");\n-               Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"extended return statement\");\n \n             Ret_Node := New_Node (N_Extended_Return_Statement, Ret_Sloc);\n             Decl := P_Return_Object_Declaration;"}, {"sha": "f542d727a5ac913e4bcde9a7aaee65bbe15aef09", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a6298d639333eb729a2cea441aeaffcff619227/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=3a6298d639333eb729a2cea441aeaffcff619227", "patch": "@@ -220,10 +220,7 @@ package body Ch9 is\n             if Token = Tok_New then\n                Scan; --  past NEW\n \n-               if Ada_Version < Ada_2005 then\n-                  Error_Msg_SP (\"task interface is an Ada 2005 extension\");\n-                  Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-               end if;\n+               Error_Msg_Ada_2005_Extension (\"task interface\");\n \n                Set_Interface_List (Task_Node, New_List);\n \n@@ -565,10 +562,7 @@ package body Ch9 is\n          if Token = Tok_New then\n             Scan; --  past NEW\n \n-            if Ada_Version < Ada_2005 then\n-               Error_Msg_SP (\"protected interface is an Ada 2005 extension\");\n-               Error_Msg_SP (\"\\unit must be compiled with -gnat05 switch\");\n-            end if;\n+            Error_Msg_Ada_2005_Extension (\"protected interface\");\n \n             Set_Interface_List (Protected_Node, New_List);\n \n@@ -1660,7 +1654,7 @@ package body Ch9 is\n             if Ada_Version = Ada_83 then\n                Error_Msg_BC (\"OR or ELSE expected\");\n             else\n-               Error_Msg_BC (\"OR or ELSE or THEN ABORT expected\");\n+               Error_Msg_BC (\"OR or ELSE or `THEN ABORT` expected\");\n             end if;\n \n             Select_Node := Error;"}]}