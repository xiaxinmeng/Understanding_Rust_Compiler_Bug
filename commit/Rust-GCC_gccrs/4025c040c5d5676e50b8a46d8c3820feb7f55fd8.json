{"sha": "4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAyNWMwNDBjNWQ1Njc2ZTUwYjhhNDZkOGMzODIwZmViN2Y1NWZkOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-07-01T01:12:19Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-07-01T01:12:19Z"}, "message": "function.h (struct function): Remove x_whole_function_mode_p.\n\n        * function.h (struct function): Remove x_whole_function_mode_p.\n        * c-decl.c (store_parm_decls): Don't set it.\n        * tree-optimize.c (tree_rest_of_compilation): Likewise.\n        * passes.c (rest_of_compilation): Don't check it.\n        * stmt.c (expand_fixup): Likewise.\n        * function.c (fixup_var_refs_insn): Remove unused variable.\nfortran/\n        * trans-decl.c (gfc_generate_function_code): Don't set\n        x_whole_function_mode_p.\n        (gfc_generate_constructors): Likewise.\n\nFrom-SVN: r83947", "tree": {"sha": "0acb30dc1fe30a10aa0f49858ffea3a987341bb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0acb30dc1fe30a10aa0f49858ffea3a987341bb4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/comments", "author": null, "committer": null, "parents": [{"sha": "6a0bec2ce1817d8cb78a4a9c1729855382d412cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a0bec2ce1817d8cb78a4a9c1729855382d412cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a0bec2ce1817d8cb78a4a9c1729855382d412cd"}], "stats": {"total": 60, "additions": 22, "deletions": 38}, "files": [{"sha": "8d63cd7a2a992684919bf3ceabddc1d1f0ba3a92", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -1,3 +1,12 @@\n+2004-06-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* function.h (struct function): Remove x_whole_function_mode_p.\n+\t* c-decl.c (store_parm_decls): Don't set it.\n+\t* tree-optimize.c (tree_rest_of_compilation): Likewise.\n+\t* passes.c (rest_of_compilation): Don't check it.\n+\t* stmt.c (expand_fixup): Likewise.\n+\t* function.c (fixup_var_refs_insn): Remove unused variable.\n+\n 2004-06-30  Richard Henderson  <rth@redhat.com>\n \n \t* tree.h (immediate_size_expand): Delete."}, {"sha": "00bb5872da0d04d21271483f31bcbbc6ee6f73d8", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -6151,9 +6151,6 @@ store_parm_decls (void)\n \t}\n     }\n \n-  /* This function is being processed in whole-function mode.  */\n-  cfun->x_whole_function_mode_p = 1;\n-\n   /* Even though we're inside a function body, we still don't want to\n      call expand_expr to calculate the size of a variable-sized array.\n      We haven't necessarily assigned RTL to all variables yet, so it's"}, {"sha": "a314248cbde13318372a208b7fd94c45449b75d2", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -1,3 +1,9 @@\n+2004-06-30  Richard Henderson  <rth@redhat.com>\n+\n+\t* trans-decl.c (gfc_generate_function_code): Don't set\n+\tx_whole_function_mode_p.\n+\t(gfc_generate_constructors): Likewise.\n+\n 2004-06-30  Richard Henderson  <rth@redhat.com>\n \n \t* trans-decl.c (gfc_generate_function_code): Don't set"}, {"sha": "480a8be563dce8bad63dcc8bd9fb2e737d28522a", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -2028,9 +2028,6 @@ gfc_generate_function_code (gfc_namespace * ns)\n   /* line and file should not be 0 */\n   init_function_start (fndecl);\n \n-  /* We're in function-at-a-time mode. */\n-  cfun->x_whole_function_mode_p = 1;\n-\n   /* Even though we're inside a function body, we still don't want to\n      call expand_expr to calculate the size of a variable-sized array.\n      We haven't necessarily assigned RTL to all variables yet, so it's\n@@ -2188,8 +2185,6 @@ gfc_generate_constructors (void)\n \n   init_function_start (fndecl, input_filename, input_line);\n \n-  cfun->x_whole_function_mode_p = 1;\n-\n   pushlevel (0);\n \n   for (; gfc_static_ctors; gfc_static_ctors = TREE_CHAIN (gfc_static_ctors))"}, {"sha": "3a9fc902860c0c4e0229b99210257ea6778de31a", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -1768,7 +1768,6 @@ fixup_var_refs_insn (rtx insn, rtx var, enum machine_mode promoted_mode,\n   else\n     {\n       struct fixup_replacement *replacements = 0;\n-      rtx next_insn = NEXT_INSN (insn);\n \n       if (SMALL_REGISTER_CLASSES)\n \t{"}, {"sha": "39dde5335e8f0f2617eced402c272ff8a466dbc7", "filename": "gcc/function.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -461,12 +461,6 @@ struct function GTY(())\n   /* Nonzero if current function uses stdarg.h or equivalent.  */\n   unsigned int stdarg : 1;\n \n-  /* Nonzero if this function is being processed in function-at-a-time\n-     mode.  In other words, if all tree structure for this function,\n-     including the BLOCK tree, is created before RTL generation\n-     commences.  */\n-  unsigned int x_whole_function_mode_p : 1;\n-\n   /* Nonzero if the back-end should not keep track of expressions that\n      determine the size of variable-sized objects.  Normally, such\n      expressions are saved away, and then expanded when the next"}, {"sha": "8ed0f305449fdc0267b9e0aab36e1f29cd8c61f3", "filename": "gcc/passes.c", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Fpasses.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Fpasses.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.c?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -1376,15 +1376,9 @@ rest_of_compilation (void)\n \n   if (!cfun->dont_emit_block_notes)\n     {\n-      /* First, make sure that NOTE_BLOCK is set correctly for each\n-\t NOTE_INSN_BLOCK_BEG/NOTE_INSN_BLOCK_END note.  */\n-      if (!cfun->x_whole_function_mode_p)\n-\tidentify_blocks ();\n-\n       /* In function-at-a-time mode, we do not attempt to keep the BLOCK\n \t tree in sensible shape.  So, we just recalculate it here.  */\n-      if (cfun->x_whole_function_mode_p)\n-\treorder_blocks ();\n+      reorder_blocks ();\n     }\n   else\n     finalize_block_changes ();"}, {"sha": "a1520e49585821b8140a79b16641ffc562b4d3cb", "filename": "gcc/stmt.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -745,24 +745,17 @@ expand_fixup (tree tree_label, rtx rtl_label, rtx last_insn)\n \tblock = make_node (BLOCK);\n \tTREE_USED (block) = 1;\n \n-\tif (!cfun->x_whole_function_mode_p)\n-\t  lang_hooks.decls.insert_block (block);\n-\telse\n-\t  {\n-\t    BLOCK_CHAIN (block)\n-\t      = BLOCK_CHAIN (DECL_INITIAL (current_function_decl));\n-\t    BLOCK_CHAIN (DECL_INITIAL (current_function_decl))\n-\t      = block;\n-\t  }\n+\tBLOCK_CHAIN (block)\n+\t  = BLOCK_CHAIN (DECL_INITIAL (current_function_decl));\n+\tBLOCK_CHAIN (DECL_INITIAL (current_function_decl))\n+\t  = block;\n \n \tstart_sequence ();\n \tstart = emit_note (NOTE_INSN_BLOCK_BEG);\n-\tif (cfun->x_whole_function_mode_p)\n-\t  NOTE_BLOCK (start) = block;\n+\tNOTE_BLOCK (start) = block;\n \tfixup->before_jump = emit_note (NOTE_INSN_DELETED);\n \tend = emit_note (NOTE_INSN_BLOCK_END);\n-\tif (cfun->x_whole_function_mode_p)\n-\t  NOTE_BLOCK (end) = block;\n+\tNOTE_BLOCK (end) = block;\n \tfixup->context = block;\n \tend_sequence ();\n \temit_insn_after (start, original_before_jump);"}, {"sha": "cfac6f7adba05f217af4a118e1cb002d8b8568bb", "filename": "gcc/tree-optimize.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ftree-optimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4025c040c5d5676e50b8a46d8c3820feb7f55fd8/gcc%2Ftree-optimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-optimize.c?ref=4025c040c5d5676e50b8a46d8c3820feb7f55fd8", "patch": "@@ -467,9 +467,6 @@ tree_rest_of_compilation (tree fndecl, bool nested_p)\n   input_location = DECL_SOURCE_LOCATION (fndecl);\n   init_function_start (fndecl);\n \n-  /* This function is being processed in whole-function mode.  */\n-  cfun->x_whole_function_mode_p = 1;\n-\n   /* Even though we're inside a function body, we still don't want to\n      call expand_expr to calculate the size of a variable-sized array.\n      We haven't necessarily assigned RTL to all variables yet, so it's"}]}