{"sha": "77216f03f283f1f2e36319a68f6cf248e6d4acb3", "node_id": "C_kwDOANBUbNoAKDc3MjE2ZjAzZjI4M2YxZjJlMzYzMTlhNjhmNmNmMjQ4ZTZkNGFjYjM", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-21T11:27:41Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:32Z"}, "message": "libproc_macro: Custom Clone on TokenStream\n\nChange for a custom implementation of the Clone trait since the\nTokenStream structure owns a foreign array which needs to be deeply\ncloned to prevent use after free in case the original TokenStream is\ndropped early.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/bridge/token_stream.rs: Implement\n\tcustom Clone.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "7858d54ee58300e6a33861c5d678c57386c62677", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7858d54ee58300e6a33861c5d678c57386c62677"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77216f03f283f1f2e36319a68f6cf248e6d4acb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77216f03f283f1f2e36319a68f6cf248e6d4acb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77216f03f283f1f2e36319a68f6cf248e6d4acb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77216f03f283f1f2e36319a68f6cf248e6d4acb3/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da81fa1f087b70ab291c87170863eab8a8e1e8d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da81fa1f087b70ab291c87170863eab8a8e1e8d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da81fa1f087b70ab291c87170863eab8a8e1e8d3"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "1c9825f4af615dab1eca44c12df13e1a7c542ba4", "filename": "librust/proc_macro/rust/bridge/token_stream.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77216f03f283f1f2e36319a68f6cf248e6d4acb3/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77216f03f283f1f2e36319a68f6cf248e6d4acb3/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Fbridge%2Ftoken_stream.rs?ref=77216f03f283f1f2e36319a68f6cf248e6d4acb3", "patch": "@@ -14,6 +14,7 @@ extern \"C\" {\n     fn TokenStream__with_capacity(capacity: u64) -> TokenStream;\n     fn TokenStream__push(stream: *mut TokenStream, tree: TokenTree);\n     fn TokenStream__from_string(str: *const c_uchar, len: u64, ts: *mut TokenStream) -> bool;\n+    fn TokenStream__clone(ts: *const TokenStream) -> TokenStream;\n }\n \n // TODO: There surely is a better way to achieve this. I don't like this\n@@ -52,7 +53,7 @@ impl From<ExternalTokenTree> for TokenTree {\n }\n \n #[repr(C)]\n-#[derive(Debug, Clone)]\n+#[derive(Debug)]\n pub struct TokenStream {\n     pub(crate) data: *const TokenTree,\n     pub(crate) size: u64,\n@@ -151,3 +152,9 @@ impl FromStr for TokenStream {\n         }\n     }\n }\n+\n+impl Clone for TokenStream {\n+    fn clone(&self) -> Self {\n+        unsafe { TokenStream__clone(self as *const TokenStream) }\n+    }\n+}"}]}