{"sha": "5713d448534698c8ac23aa52f015b2c88185cb40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcxM2Q0NDg1MzQ2OThjOGFjMjNhYTUyZjAxNWIyYzg4MTg1Y2I0MA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2017-02-24T18:54:13Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2017-02-24T18:54:13Z"}, "message": "re PR translation/79705 (cp/decl.c message not marked for translation)\n\n\tPR translation/79705\n\t* decl.c (check_redeclaration_exception_specification): Mark a string\n\tfor translation.  Make the pointer const.\n\nFrom-SVN: r245717", "tree": {"sha": "5c4d67e7c804ac3f0d0adb628ef65f241fd9ecab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c4d67e7c804ac3f0d0adb628ef65f241fd9ecab"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5713d448534698c8ac23aa52f015b2c88185cb40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5713d448534698c8ac23aa52f015b2c88185cb40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5713d448534698c8ac23aa52f015b2c88185cb40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5713d448534698c8ac23aa52f015b2c88185cb40/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd527ec190c87da0eedf45b719bc98977fb28857", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd527ec190c87da0eedf45b719bc98977fb28857", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd527ec190c87da0eedf45b719bc98977fb28857"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "7bf24cd41a97ced39ca433b9605a40838eaeba16", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5713d448534698c8ac23aa52f015b2c88185cb40/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5713d448534698c8ac23aa52f015b2c88185cb40/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5713d448534698c8ac23aa52f015b2c88185cb40", "patch": "@@ -1,3 +1,9 @@\n+2017-02-24  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR translation/79705\n+\t* decl.c (check_redeclaration_exception_specification): Mark a string\n+\tfor translation.  Make the pointer const.\n+\n 2017-02-23  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/79361"}, {"sha": "3dd1f5c7892fe3bd411fe9eed5c63f21bd953520", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5713d448534698c8ac23aa52f015b2c88185cb40/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5713d448534698c8ac23aa52f015b2c88185cb40/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5713d448534698c8ac23aa52f015b2c88185cb40", "patch": "@@ -1273,8 +1273,8 @@ check_redeclaration_exception_specification (tree new_decl,\n   if (! DECL_IS_BUILTIN (old_decl)\n       && !comp_except_specs (new_exceptions, old_exceptions, ce_normal))\n     {\n-      const char *msg\n-\t= \"declaration of %qF has a different exception specifier\";\n+      const char *const msg\n+\t= G_(\"declaration of %qF has a different exception specifier\");\n       bool complained = true;\n       location_t new_loc = DECL_SOURCE_LOCATION (new_decl);\n       if (DECL_IN_SYSTEM_HEADER (old_decl))"}]}