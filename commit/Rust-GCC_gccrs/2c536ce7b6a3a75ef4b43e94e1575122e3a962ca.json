{"sha": "2c536ce7b6a3a75ef4b43e94e1575122e3a962ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmM1MzZjZTdiNmEzYTc1ZWY0YjQzZTk0ZTE1NzUxMjJlM2E5NjJjYQ==", "commit": {"author": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-03T14:06:44Z"}, "committer": {"name": "Paul Thomas", "email": "pault@gcc.gnu.org", "date": "2018-02-03T14:06:44Z"}, "message": "re PR fortran/84141 (Internal error: type_name(): Bad type)\n\n2018-02-03  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/84141\n\tPR fortran/84155\n\t* trans-array.c (gfc_array_init_size): Instead of gfc_get_dtype\n\tuse gfc_get_dtype_rank_type.\n\n2018-02-03  Paul Thomas  <pault@gcc.gnu.org>\n\n\tPR fortran/84141\n\tPR fortran/84155\n\t* gfortran.dg/pr84155.f90 : New test.\n\nFrom-SVN: r257356", "tree": {"sha": "e186f448e47b52bfebd5c24a395b7ddecade22b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e186f448e47b52bfebd5c24a395b7ddecade22b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/comments", "author": null, "committer": null, "parents": [{"sha": "d97aee74162a861e8930f353323d615d092076a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97aee74162a861e8930f353323d615d092076a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d97aee74162a861e8930f353323d615d092076a3"}], "stats": {"total": 73, "additions": 71, "deletions": 2}, "files": [{"sha": "da86c839859cc5b8b0bf5cdf9761bb47c796f7ed", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2c536ce7b6a3a75ef4b43e94e1575122e3a962ca", "patch": "@@ -1,3 +1,10 @@\n+2018-02-03  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/84141\n+\tPR fortran/84155\n+\t* trans-array.c (gfc_array_init_size): Instead of gfc_get_dtype\n+\tuse gfc_get_dtype_rank_type.\n+\n 2018-02-01  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR 83975"}, {"sha": "c845befb5d01b91e8086d93b4b2dab7939551c59", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=2c536ce7b6a3a75ef4b43e94e1575122e3a962ca", "patch": "@@ -5354,8 +5354,8 @@ gfc_array_init_size (tree descriptor, int rank, int corank, tree * poffset,\n     }\n   else\n     {\n-      tmp = gfc_conv_descriptor_dtype (descriptor);\n-      gfc_add_modify (pblock, tmp, gfc_get_dtype (type));\n+      tmp = gfc_get_dtype_rank_type (rank, gfc_get_element_type (type));\n+      gfc_add_modify (pblock, gfc_conv_descriptor_dtype (descriptor), tmp);\n     }\n \n   or_expr = logical_false_node;"}, {"sha": "1c34494b9829ecf536881d348810e1176662c881", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2c536ce7b6a3a75ef4b43e94e1575122e3a962ca", "patch": "@@ -1,3 +1,9 @@\n+2018-02-03  Paul Thomas  <pault@gcc.gnu.org>\n+\n+\tPR fortran/84141\n+\tPR fortran/84155\n+\t* gfortran.dg/pr84155.f90 : New test.\n+\n 2017-02-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gfortran.dg/dec_parameter_1.f (sub1): Remove statement with no effect."}, {"sha": "fe87b6c2ca78dc329221a72e0d097357c00e12c3", "filename": "gcc/testsuite/gfortran.dg/pr84155.f90", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr84155.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c536ce7b6a3a75ef4b43e94e1575122e3a962ca/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr84155.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr84155.f90?ref=2c536ce7b6a3a75ef4b43e94e1575122e3a962ca", "patch": "@@ -0,0 +1,56 @@\n+! { dg-do run }\n+!\n+! Test the fix for PR84155 and PR84141.\n+!\n+! Contributed by Juergen Reuter  <juergen.reuter@desy.de>\n+!\n+module test_case\n+\n+  implicit none\n+\n+  type :: array_t\n+     integer, dimension(:), allocatable :: child\n+   contains\n+     procedure :: write_raw => particle_write_raw\n+  end type array_t\n+\n+  type :: container_t\n+     type(array_t), dimension(:), allocatable :: array\n+  end type container_t\n+\n+contains\n+\n+  subroutine proc ()\n+    type(container_t) :: container\n+    integer :: unit, check\n+    integer, parameter :: ival = 42\n+\n+    allocate (container%array(1))\n+    allocate (container%array(1)%child (1), source = [ival])\n+\n+    unit = 33\n+    open (unit, action=\"readwrite\", form=\"unformatted\", status=\"scratch\")\n+    call container%array(1)%write_raw (unit)\n+    rewind (unit)\n+    read (unit) check\n+    close (unit)\n+    if (ival .ne. check) call abort\n+  end subroutine proc\n+\n+  subroutine particle_write_raw (array, u)\n+    class(array_t), intent(in) :: array\n+    integer, intent(in) :: u\n+    write (u) array%child\n+  end subroutine particle_write_raw\n+\n+  subroutine particle_read_raw (array)\n+    class(array_t), intent(out) :: array\n+    allocate (array%child (1))    ! comment this out\n+  end subroutine particle_read_raw\n+\n+end module test_case\n+\n+program main\n+  use test_case\n+  call proc ()\n+  end program main"}]}