{"sha": "0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGU1MzNlNTA3ODk1MzRlOTNiMWFiMGE5ZGZjYjQ0YWZhOWM5NGNlYw==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2013-08-12T05:50:03Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2013-08-12T05:50:03Z"}, "message": "re PR fortran/56666 (Suppression flag for \" DO loop at (1) will be executed zero times\")\n\n2013-08-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/56666\n\t* gfortran.h (gfc_option_t):  Add warn_zerotrip.\n\t* invoke.texi (-Wzerotrip):  Document option.\n\t* lang.opt (Wzerotrip):  Add.\n\t* options.c (gfc_init_options):  Initialize warn_zerotrip.\n\t(set_Wall): Add handling of warn_zerotrip.\n\t(gfc_handle_option):  Handle OPT_Wzerotrip.\n\t* resolve.c (gfc_resolve_iterator): Honor\n\tgfc_option.warn_zerotrip; update error message to show\n\thow to suppress the warning.\n\n2013-08-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/56666\n\t* gfortran.dg/do_check_10.f90:  New test.\n\t* gfortran.dg/array_constructor_11.f90:  Add -Wzerotrip to dg-options.\n\t* gfortran.dg/array_constructor_18.f90:  Likewise.\n\t* gfortran.dg/array_constructor_22.f90:  Likewise.\n\t* gfortran.dg/coarray_15.f90:  Likewise.\n\t* gfortran.dg/do_1.f90:  Add -Wall to dg-options.\n\t* gfortran.dg/do_3.F90:  Add -Wzerotrip to dg-options.\n\t* gfortran.dg/do_check_5.f90:  Add -Wall to gd-options.\n\nFrom-SVN: r201658", "tree": {"sha": "c0b67820530848b80905158737ebf6f035db92ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0b67820530848b80905158737ebf6f035db92ad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/comments", "author": null, "committer": null, "parents": [{"sha": "4fade8c2c3a1e45834a8c9ec81a91c72a75a8e5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fade8c2c3a1e45834a8c9ec81a91c72a75a8e5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fade8c2c3a1e45834a8c9ec81a91c72a75a8e5a"}], "stats": {"total": 64, "additions": 59, "deletions": 5}, "files": [{"sha": "ba34ac1c5ab6d964c5337e0f8e654b4782e862fc", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,3 +1,16 @@\n+2013-08-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/56666\n+\t* gfortran.h (gfc_option_t):  Add warn_zerotrip.\n+\t* invoke.texi (-Wzerotrip):  Document option.\n+\t* lang.opt (Wzerotrip):  Add.\n+\t* options.c (gfc_init_options):  Initialize warn_zerotrip.\n+\t(set_Wall): Add handling of warn_zerotrip.\n+\t(gfc_handle_option):  Handle OPT_Wzerotrip.\n+\t* resolve.c (gfc_resolve_iterator): Honor\n+\tgfc_option.warn_zerotrip; update error message to show\n+\thow to suppress the warning.\n+\n 2013-08-09  Janus Weil  <janus@gcc.gnu.org>\n \n \t* gfortran.h (gfc_get_code): Modified prototype."}, {"sha": "691aa8ca74c73d03cc8c8863c9cc9a16720d4672", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -2252,6 +2252,7 @@ typedef struct\n   int warn_align_commons;\n   int warn_real_q_constant;\n   int warn_unused_dummy_argument;\n+  int warn_zerotrip;\n   int warn_realloc_lhs;\n   int warn_realloc_lhs_all;\n   int warn_compare_reals;"}, {"sha": "69bec275de97b0d30bdfd4c224960b099cb00d31", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -954,6 +954,11 @@ This option is implied by @option{-Wextra}.\n Warn if the pointer in a pointer assignment might be longer than the its\n target. This option is implied by @option{-Wall}.\n \n+@item -Wzerotrip\n+@opindex @code{Wzerotrip}\n+Warn if a @code{DO} loop is known to execute zero times at compile\n+time.  This option is implied by @option{-Wall}.\n+\n @item -Werror\n @opindex @code{Werror}\n @cindex warnings, to errors"}, {"sha": "4f7993433d49e5b712b4f168bab288def97389b3", "filename": "gcc/fortran/lang.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flang.opt?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -293,6 +293,10 @@ Wunused-dummy-argument\n Fortran Warning\n Warn about unused dummy arguments.\n \n+Wzerotrip\n+Fortran Warning\n+Warn about zero-trip DO loops\n+\n cpp\n Fortran Negative(nocpp)\n Enable preprocessing"}, {"sha": "3a9c508dc27e2c9be5b01c99662a65bea4a46792", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -109,6 +109,7 @@ gfc_init_options (unsigned int decoded_options_count,\n   gfc_option.warn_align_commons = 1;\n   gfc_option.warn_real_q_constant = 0;\n   gfc_option.warn_unused_dummy_argument = 0;\n+  gfc_option.warn_zerotrip = 0;\n   gfc_option.warn_realloc_lhs = 0;\n   gfc_option.warn_realloc_lhs_all = 0;\n   gfc_option.warn_compare_reals = 0;\n@@ -466,6 +467,7 @@ set_Wall (int setting)\n   gfc_option.warn_real_q_constant = setting;\n   gfc_option.warn_unused_dummy_argument = setting;\n   gfc_option.warn_target_lifetime = setting;\n+  gfc_option.warn_zerotrip = setting;\n \n   warn_return_type = setting;\n   warn_uninitialized = setting;\n@@ -747,6 +749,10 @@ gfc_handle_option (size_t scode, const char *arg, int value,\n       gfc_option.warn_unused_dummy_argument = value;\n       break;\n \n+    case OPT_Wzerotrip:\n+      gfc_option.warn_zerotrip = value;\n+      break;\n+\n     case OPT_fall_intrinsics:\n       gfc_option.flag_all_intrinsics = 1;\n       break;"}, {"sha": "067288dd6dbbf00e8cd376e5d752be5d2d6edbb7", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -6281,8 +6281,10 @@ gfc_resolve_iterator (gfc_iterator *iter, bool real_ok, bool own_scope)\n \t  sgn = mpfr_sgn (iter->step->value.real);\n \t  cmp = mpfr_cmp (iter->end->value.real, iter->start->value.real);\n \t}\n-      if ((sgn > 0 && cmp < 0) || (sgn < 0 && cmp > 0))\n-\tgfc_warning (\"DO loop at %L will be executed zero times\",\n+      if (gfc_option.warn_zerotrip &&\n+\t  ((sgn > 0 && cmp < 0) || (sgn < 0 && cmp > 0)))\n+\tgfc_warning (\"DO loop at %L will be executed zero times\"\n+\t\t     \" (use -Wno-zerotrip to suppress)\",\n \t\t     &iter->step->where);\n     }\n "}, {"sha": "3ff0e588d6f8a00fb4bc95db2483acfd97c3ca8f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,3 +1,15 @@\n+2013-08-12  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/56666\n+\t* gfortran.dg/do_check_10.f90:  New test.\n+\t* gfortran.dg/array_constructor_11.f90:  Add -Wzerotrip to dg-options.\n+\t* gfortran.dg/array_constructor_18.f90:  Likewise.\n+\t* gfortran.dg/array_constructor_22.f90:  Likewise.\n+\t* gfortran.dg/coarray_15.f90:  Likewise.\n+\t* gfortran.dg/do_1.f90:  Add -Wall to dg-options.\n+\t* gfortran.dg/do_3.F90:  Add -Wzerotrip to dg-options.\n+\t* gfortran.dg/do_check_5.f90:  Add -Wall to gd-options.\n+\n 2013-08-11  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/53349"}, {"sha": "410fbcb7ddf28e068c98750e68a79a7da16595ff", "filename": "gcc/testsuite/gfortran.dg/array_constructor_11.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_11.f90?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,6 +1,7 @@\n ! Like array_constructor_6.f90, but check iterators with non-default stride,\n ! including combinations which lead to zero-length vectors.\n ! { dg-do run }\n+! { dg-options \"-Wzerotrip\" }\n program main\n   implicit none\n   call build (77)"}, {"sha": "6853c069633b0e2da59f4d5f9ba48d919c36b2ae", "filename": "gcc/testsuite/gfortran.dg/array_constructor_18.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_18.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_18.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_18.f90?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-Wzerotrip\" }\n ! Tests the fix for PR32875, in which the character length for the\n ! array constructor would get lost in simplification and would lead\n ! the error 'Not Implemented: complex character array constructor'."}, {"sha": "f7cdb27423ce0996bbaff75c39266fff5233c8e1", "filename": "gcc/testsuite/gfortran.dg/array_constructor_22.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Farray_constructor_22.f90?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do compile }\n+! { dg-options \"-Wzerotrip\" }\n ! PR34990 ICE in gfc_typenode_for_spec, at fortran/trans-types.c:842\n ! Test case that of the reporters.\n module test "}, {"sha": "ee01e61ccc1ebddc10ea4b36869e6e27d8d23737", "filename": "gcc/testsuite/gfortran.dg/coarray_15.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_15.f90?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do run }\n-! { dg-options \"-fcoarray=single\" }\n+! { dg-options \"-fcoarray=single -Wzerotrip\" }\n !\n ! PR fortran/18918\n !"}, {"sha": "b041279f6d942374bbf90ad7b21138ecab86b710", "filename": "gcc/testsuite/gfortran.dg/do_1.f90", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_1.f90?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,4 +1,5 @@\n ! { dg-do run }\n+! { dg-options \"-Wall\" }\n ! Program to check corner cases for DO statements.\n program do_1\n   implicit none"}, {"sha": "eb4751d6b060dc369431f9ebd8e6a7721ffc2ea9", "filename": "gcc/testsuite/gfortran.dg/do_3.F90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_3.F90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_3.F90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_3.F90?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do run }\n-! { dg-options \"-std=legacy -ffree-line-length-none -fno-range-check -fwrapv\" }\n+! { dg-options \"-std=legacy -ffree-line-length-none -fno-range-check -fwrapv -Wzerotrip\" }\n program test\n   integer :: count\n   integer :: i"}, {"sha": "016dab7ade9ce3abf7354fba941b770de001f76f", "filename": "gcc/testsuite/gfortran.dg/do_check_10.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_10.f90?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+! { dg-options \"-Wall -Wno-zerotrip\" }\n+program main\n+  do i=1,0\n+    print *,i\n+  end do\n+end program main"}, {"sha": "57930fd61ad7200d86eeb1b43dd2f176d0020eb1", "filename": "gcc/testsuite/gfortran.dg/do_check_5.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0e533e50789534e93b1ab0a9dfcb44afa9c94cec/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdo_check_5.f90?ref=0e533e50789534e93b1ab0a9dfcb44afa9c94cec", "patch": "@@ -1,5 +1,5 @@\n ! { dg-do compile }\n-! \n+! { dg-options \"-Wall\" }\n ! PR/fortran 38432\n ! DO-loop compile-time checks\n !"}]}