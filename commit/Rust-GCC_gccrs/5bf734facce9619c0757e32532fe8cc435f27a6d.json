{"sha": "5bf734facce9619c0757e32532fe8cc435f27a6d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJmNzM0ZmFjY2U5NjE5YzA3NTdlMzI1MzJmZThjYzQzNWYyN2E2ZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-04T12:04:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-04T12:04:42Z"}, "message": "re PR tree-optimization/87211 (gcc ICE at O2: in set_ssa_val_to, at tree-ssa-sccvn.c:3628)\n\n2018-09-04  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87211\n\t* tree-ssa-sccvn.c (visit_phi): When value-numbering to a\n\tbackedge value we're supposed to treat as VARYING also number\n\tthe PHI to VARYING in case it got a different value-number already.\n\n\t* gcc.dg/torture/pr87211.c: New testcase.\n\nFrom-SVN: r264079", "tree": {"sha": "002b5373060972cc867619c36989735499ce33a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/002b5373060972cc867619c36989735499ce33a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bf734facce9619c0757e32532fe8cc435f27a6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf734facce9619c0757e32532fe8cc435f27a6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bf734facce9619c0757e32532fe8cc435f27a6d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bf734facce9619c0757e32532fe8cc435f27a6d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e20d979b7ada10b4665b0c97494ebeb1542ca047", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20d979b7ada10b4665b0c97494ebeb1542ca047", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20d979b7ada10b4665b0c97494ebeb1542ca047"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "5b60b32f243da715463918346244018b2dde44f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf734facce9619c0757e32532fe8cc435f27a6d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf734facce9619c0757e32532fe8cc435f27a6d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bf734facce9619c0757e32532fe8cc435f27a6d", "patch": "@@ -1,3 +1,10 @@\n+2018-09-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87211\n+\t* tree-ssa-sccvn.c (visit_phi): When value-numbering to a\n+\tbackedge value we're supposed to treat as VARYING also number\n+\tthe PHI to VARYING in case it got a different value-number already.\n+\n 2018-09-04  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* tree-vrp.c (vrp_can_optimize_bit_op): Remove."}, {"sha": "47bb26591d23745d2720e058c545368904a3e523", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf734facce9619c0757e32532fe8cc435f27a6d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf734facce9619c0757e32532fe8cc435f27a6d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5bf734facce9619c0757e32532fe8cc435f27a6d", "patch": "@@ -1,3 +1,8 @@\n+2018-09-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87211\n+\t* gcc.dg/torture/pr87211.c: New testcase.\n+\n 2018-09-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87176"}, {"sha": "386d2a481c3e14dd261c7b41438a8b5082aa2996", "filename": "gcc/testsuite/gcc.dg/torture/pr87211.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf734facce9619c0757e32532fe8cc435f27a6d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87211.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf734facce9619c0757e32532fe8cc435f27a6d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87211.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87211.c?ref=5bf734facce9619c0757e32532fe8cc435f27a6d", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+\n+int a, b;\n+int i(int *);\n+int *c(int *d, int *e)\n+{\n+  for (; b;)\n+    d = e;\n+  return d;\n+}\n+void f()\n+{\n+  for (;;)\n+    {\n+      int *g[1];\n+      int h = 0;\n+      for (; h < 3; h++)\n+\tg[0] = &a;\n+      &a == g[0] || i(c((int *)g, g[0]));\n+    }\n+}"}, {"sha": "1e4bfe5f7ba9712a6ce943bd79edb0d9f2be5d5d", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bf734facce9619c0757e32532fe8cc435f27a6d/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bf734facce9619c0757e32532fe8cc435f27a6d/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=5bf734facce9619c0757e32532fe8cc435f27a6d", "patch": "@@ -4180,7 +4180,8 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n       }\n \n   /* If the value we want to use is the backedge and that wasn't visited\n-     yet drop to VARYING.  This only happens when not iterating.\n+     yet or if we should take it as VARYING but it has a non-VARYING\n+     value drop to VARYING.  This only happens when not iterating.\n      If we value-number a virtual operand never value-number to the\n      value from the backedge as that confuses the alias-walking code.\n      See gcc.dg/torture/pr87176.c.  If the value is the same on a\n@@ -4190,7 +4191,8 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n       && TREE_CODE (backedge_val) == SSA_NAME\n       && sameval == backedge_val\n       && (SSA_NAME_IS_VIRTUAL_OPERAND (backedge_val)\n-\t  || !SSA_VISITED (backedge_val)))\n+\t  || !SSA_VISITED (backedge_val)\n+\t  || SSA_VAL (backedge_val) != backedge_val))\n     /* Note this just drops to VARYING without inserting the PHI into\n        the hashes.  */\n     result = PHI_RESULT (phi);"}]}