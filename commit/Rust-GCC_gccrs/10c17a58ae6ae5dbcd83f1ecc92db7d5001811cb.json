{"sha": "10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBjMTdhNThhZTZhZTVkYmNkODNmMWVjYzkyZGI3ZDUwMDE4MTFjYg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-06T12:29:30Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2012-04-06T12:29:30Z"}, "message": "sh-protos.h (sh_expand_t_scc): Change return type from int to bool.\n\n\t* config/sh/sh-protos.h (sh_expand_t_scc): Change return type from int\n\tto bool.\n\t* config/sh/sh.c (sh_expand_t_scc): Likewise.\n\t* config/sh/sh.md (cstoresi4, cstoredi4): Remove GET_CODE checks before\n\tcalling sh_expand_t_scc.\n\nFrom-SVN: r186184", "tree": {"sha": "ae9e253dc8102d3f741d0ad9a3840abb172719e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae9e253dc8102d3f741d0ad9a3840abb172719e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/comments", "author": null, "committer": null, "parents": [{"sha": "aaf701c5e19cc94f0f6362058fac7bd80a8ab58b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaf701c5e19cc94f0f6362058fac7bd80a8ab58b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaf701c5e19cc94f0f6362058fac7bd80a8ab58b"}], "stats": {"total": 26, "additions": 16, "deletions": 10}, "files": [{"sha": "ea39b2fa386051da2467f1a9ca167acce1c5f66a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "patch": "@@ -1,3 +1,11 @@\n+2012-04-06  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh-protos.h (sh_expand_t_scc): Change return type from int\n+\tto bool.\n+\t* config/sh/sh.c (sh_expand_t_scc): Likewise.\n+\t* config/sh/sh.md (cstoresi4, cstoredi4): Remove GET_CODE checks before\n+\tcalling sh_expand_t_scc.\n+\n 2012-04-06  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \t* config/sh/sh-protos.h (fp_zero_operand, fp_one_operand,"}, {"sha": "97442c43327842fd94d48bba67b33cf285062e96", "filename": "gcc/config/sh/sh-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/gcc%2Fconfig%2Fsh%2Fsh-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh-protos.h?ref=10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "patch": "@@ -117,7 +117,7 @@ extern int sh_insn_length_adjustment (rtx);\n extern bool sh_can_redirect_branch (rtx, rtx);\n extern void sh_expand_unop_v2sf (enum rtx_code, rtx, rtx);\n extern void sh_expand_binop_v2sf (enum rtx_code, rtx, rtx, rtx);\n-extern int sh_expand_t_scc (rtx *);\n+extern bool sh_expand_t_scc (rtx *);\n extern rtx sh_gen_truncate (enum machine_mode, rtx, int);\n extern bool sh_vector_mode_supported_p (enum machine_mode);\n #endif /* RTX_CODE */"}, {"sha": "0a6f71d260a280bf3c3376d91e90765e49594463", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "patch": "@@ -11998,7 +11998,7 @@ sh_get_pr_initial_val (void)\n   return val;\n }\n \n-int\n+bool\n sh_expand_t_scc (rtx operands[])\n {\n   enum rtx_code code = GET_CODE (operands[1]);\n@@ -12010,21 +12010,21 @@ sh_expand_t_scc (rtx operands[])\n \n   if (!REG_P (op0) || REGNO (op0) != T_REG\n       || !CONST_INT_P (op1))\n-    return 0;\n+    return false;\n   if (!REG_P (result))\n     result = gen_reg_rtx (SImode);\n   val = INTVAL (op1);\n   if ((code == EQ && val == 1) || (code == NE && val == 0))\n     emit_insn (gen_movt (result));\n   else if ((code == EQ && val == 0) || (code == NE && val == 1))\n-   emit_insn (gen_movnegt (result));\n+    emit_insn (gen_movnegt (result));\n   else if (code == EQ || code == NE)\n     emit_insn (gen_move_insn (result, GEN_INT (code == NE)));\n   else\n-    return 0;\n+    return false;\n   if (result != target)\n     emit_move_insn (target, result);\n-  return 1;\n+  return true;\n }\n \n /* INSN is an sfunc; return the rtx that describes the address used.  */"}, {"sha": "dd7ff668e4aa0b29642280bc1f422243560b343a", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=10c17a58ae6ae5dbcd83f1ecc92db7d5001811cb", "patch": "@@ -9575,8 +9575,7 @@ label:\n       DONE;\n     }\n \n-   if ((GET_CODE (operands[1]) == EQ || GET_CODE (operands[1]) == NE)\n-       && sh_expand_t_scc (operands))\n+   if (sh_expand_t_scc (operands))\n      DONE;\n \n    if (! currently_expanding_to_rtl)\n@@ -9600,8 +9599,7 @@ label:\n       DONE;\n     }\n \n-   if ((GET_CODE (operands[1]) == EQ || GET_CODE (operands[1]) == NE)\n-       && sh_expand_t_scc (operands))\n+   if (sh_expand_t_scc (operands))\n      DONE;\n \n    if (! currently_expanding_to_rtl)"}]}