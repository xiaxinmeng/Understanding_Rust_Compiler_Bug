{"sha": "e7df01809dbc84b6eebe815e87d51eb8e470b6b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdkZjAxODA5ZGJjODRiNmVlYmU4MTVlODdkNTFlYjhlNDcwYjZiOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-10-29T21:41:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-10-29T21:41:29Z"}, "message": "re PR c++/33841 (ICE with non-integral bit-field)\n\n\tPR c++/33841\n\t* class.c (check_bitfield_decl): Don't set field's type to error_mark_node\n\tfor non-integral type bitfields.  Return true if bitfield is correct, false\n\terror has been diagnosed.\n\t(check_field_decls): If check_bitfield_decl returned false, call also\n\tcheck_field_decl.\n\n\t* g++.dg/other/bitfield3.C: New test.\n\nFrom-SVN: r129736", "tree": {"sha": "15a3218c6d929010c60756849df159d3e24042b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15a3218c6d929010c60756849df159d3e24042b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7df01809dbc84b6eebe815e87d51eb8e470b6b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7df01809dbc84b6eebe815e87d51eb8e470b6b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7df01809dbc84b6eebe815e87d51eb8e470b6b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "324d22176d781176c004d9ff77d7f9513b013cd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/324d22176d781176c004d9ff77d7f9513b013cd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/324d22176d781176c004d9ff77d7f9513b013cd7"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "c9b232563197bc0af90eddf3aa442126e916b512", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e7df01809dbc84b6eebe815e87d51eb8e470b6b9", "patch": "@@ -1,3 +1,12 @@\n+2007-10-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/33841\n+\t* class.c (check_bitfield_decl): Don't set field's type to error_mark_node\n+\tfor non-integral type bitfields.  Return true if bitfield is correct, false\n+\terror has been diagnosed.\n+\t(check_field_decls): If check_bitfield_decl returned false, call also\n+\tcheck_field_decl.\n+\n 2007-10-28  Paolo Carlini  <pcarlini@suse.de>\n \t    Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "4453b346a69a7467ebfaa11ec13a85014d5c2832", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=e7df01809dbc84b6eebe815e87d51eb8e470b6b9", "patch": "@@ -139,7 +139,7 @@ static tree build_vtbl_ref_1 (tree, tree);\n static tree build_vtbl_initializer (tree, tree, tree, tree, int *);\n static int count_fields (tree);\n static int add_fields_to_record_type (tree, struct sorted_fields_type*, int);\n-static void check_bitfield_decl (tree);\n+static bool check_bitfield_decl (tree);\n static void check_field_decl (tree, tree, int *, int *, int *);\n static void check_field_decls (tree, tree *, int *, int *);\n static tree *build_base_field (record_layout_info, tree, splay_tree, tree *);\n@@ -2655,9 +2655,9 @@ add_fields_to_record_type (tree fields, struct sorted_fields_type *field_vec, in\n \n /* FIELD is a bit-field.  We are finishing the processing for its\n    enclosing type.  Issue any appropriate messages and set appropriate\n-   flags.  */\n+   flags.  Returns false if an error has been diagnosed.  */\n \n-static void\n+static bool\n check_bitfield_decl (tree field)\n {\n   tree type = TREE_TYPE (field);\n@@ -2675,7 +2675,6 @@ check_bitfield_decl (tree field)\n   if (!INTEGRAL_TYPE_P (type))\n     {\n       error (\"bit-field %q+#D with non-integral type\", field);\n-      TREE_TYPE (field) = error_mark_node;\n       w = error_mark_node;\n     }\n   else\n@@ -2720,12 +2719,14 @@ check_bitfield_decl (tree field)\n     {\n       DECL_SIZE (field) = convert (bitsizetype, w);\n       DECL_BIT_FIELD (field) = 1;\n+      return true;\n     }\n   else\n     {\n       /* Non-bit-fields are aligned for their type.  */\n       DECL_BIT_FIELD (field) = 0;\n       CLEAR_DECL_C_BIT_FIELD (field);\n+      return false;\n     }\n }\n \n@@ -3037,9 +3038,7 @@ check_field_decls (tree t, tree *access_decls,\n \n       /* We set DECL_C_BIT_FIELD in grokbitfield.\n \t If the type and width are valid, we'll also set DECL_BIT_FIELD.  */\n-      if (DECL_C_BIT_FIELD (x))\n-\tcheck_bitfield_decl (x);\n-      else\n+      if (! DECL_C_BIT_FIELD (x) || ! check_bitfield_decl (x))\n \tcheck_field_decl (x, t,\n \t\t\t  cant_have_const_ctor_p,\n \t\t\t  no_const_asn_ref_p,"}, {"sha": "ce4076d035dd60df775a75cbb54a8cbab2352228", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e7df01809dbc84b6eebe815e87d51eb8e470b6b9", "patch": "@@ -1,3 +1,8 @@\n+2007-10-29  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/33841\n+\t* g++.dg/other/bitfield3.C: New test.\n+\n 2007-10-29  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/tree-ssa/ssa-copyprop-1.c: Scan optimized dump."}, {"sha": "b9726c26a51f759d2cbcec495bd374da89b7aafc", "filename": "gcc/testsuite/g++.dg/other/bitfield3.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbitfield3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7df01809dbc84b6eebe815e87d51eb8e470b6b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbitfield3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fbitfield3.C?ref=e7df01809dbc84b6eebe815e87d51eb8e470b6b9", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/33841\n+// { dg-do compile }\n+\n+template<int> struct A\n+{\n+  struct {} : 2;\t// { dg-error \"with non-integral type\" }\n+};\n+\n+template<int> struct B\n+{\n+  int a;\n+  struct {} : 2;\t// { dg-error \"with non-integral type\" }\n+  int b;\n+};\n+\n+struct C : A<0> {};\n+struct D : B<0> {};"}]}