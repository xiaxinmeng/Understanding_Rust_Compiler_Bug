{"sha": "d0b50387bcfac86cf270194aacc4a7677e621708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBiNTAzODdiY2ZhYzg2Y2YyNzAxOTRhYWNjNGE3Njc3ZTYyMTcwOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-18T07:19:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-18T07:19:46Z"}, "message": "re PR driver/60233 (AVX instructions emitted with -march=native on host without AVX support)\n\n\tPR driver/60233\n\t* config/i386/driver-i386.c (host_detect_local_cpu): If\n\tYMM state is not saved by the OS, also clear has_f16c.  Move\n\tCPUID 0x80000001 handling before YMM state saving checking.\n\nCo-Authored-By: Uros Bizjak <ubizjak@gmail.com>\n\nFrom-SVN: r207833", "tree": {"sha": "1a39797d8737e7cdb9c01cc095ebe9c6446464fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a39797d8737e7cdb9c01cc095ebe9c6446464fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0b50387bcfac86cf270194aacc4a7677e621708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b50387bcfac86cf270194aacc4a7677e621708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0b50387bcfac86cf270194aacc4a7677e621708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0b50387bcfac86cf270194aacc4a7677e621708/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c4cd7435e4ace8e90561b659b810dd5a5841f77a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4cd7435e4ace8e90561b659b810dd5a5841f77a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4cd7435e4ace8e90561b659b810dd5a5841f77a"}], "stats": {"total": 53, "additions": 31, "deletions": 22}, "files": [{"sha": "b1287f83fa8e4afed1372c47411a4bd96aea1960", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b50387bcfac86cf270194aacc4a7677e621708/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b50387bcfac86cf270194aacc4a7677e621708/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0b50387bcfac86cf270194aacc4a7677e621708", "patch": "@@ -1,3 +1,11 @@\n+2014-02-18  Jakub Jelinek  <jakub@redhat.com>\n+\t    Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR driver/60233\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): If\n+\tYMM state is not saved by the OS, also clear has_f16c.  Move\n+\tCPUID 0x80000001 handling before YMM state saving checking.\n+\n 2014-02-18  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/58960"}, {"sha": "940ae20b665c0928199421ca0762432a25e4861a", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 23, "deletions": 22, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0b50387bcfac86cf270194aacc4a7677e621708/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0b50387bcfac86cf270194aacc4a7677e621708/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=d0b50387bcfac86cf270194aacc4a7677e621708", "patch": "@@ -495,6 +495,28 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_xsaveopt = eax & bit_XSAVEOPT;\n     }\n \n+  /* Check cpuid level of extended features.  */\n+  __cpuid (0x80000000, ext_level, ebx, ecx, edx);\n+\n+  if (ext_level > 0x80000000)\n+    {\n+      __cpuid (0x80000001, eax, ebx, ecx, edx);\n+\n+      has_lahf_lm = ecx & bit_LAHF_LM;\n+      has_sse4a = ecx & bit_SSE4a;\n+      has_abm = ecx & bit_ABM;\n+      has_lwp = ecx & bit_LWP;\n+      has_fma4 = ecx & bit_FMA4;\n+      has_xop = ecx & bit_XOP;\n+      has_tbm = ecx & bit_TBM;\n+      has_lzcnt = ecx & bit_LZCNT;\n+      has_prfchw = ecx & bit_PRFCHW;\n+\n+      has_longmode = edx & bit_LM;\n+      has_3dnowp = edx & bit_3DNOWP;\n+      has_3dnow = edx & bit_3DNOW;\n+    }\n+\n   /* Get XCR_XFEATURE_ENABLED_MASK register with xgetbv.  */\n #define XCR_XFEATURE_ENABLED_MASK\t0x0\n #define XSTATE_FP\t\t\t0x1\n@@ -513,33 +535,12 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_avx2 = 0;\n       has_fma = 0;\n       has_fma4 = 0;\n+      has_f16c = 0;\n       has_xop = 0;\n       has_xsave = 0;\n       has_xsaveopt = 0;\n     }\n \n-  /* Check cpuid level of extended features.  */\n-  __cpuid (0x80000000, ext_level, ebx, ecx, edx);\n-\n-  if (ext_level > 0x80000000)\n-    {\n-      __cpuid (0x80000001, eax, ebx, ecx, edx);\n-\n-      has_lahf_lm = ecx & bit_LAHF_LM;\n-      has_sse4a = ecx & bit_SSE4a;\n-      has_abm = ecx & bit_ABM;\n-      has_lwp = ecx & bit_LWP;\n-      has_fma4 = ecx & bit_FMA4;\n-      has_xop = ecx & bit_XOP;\n-      has_tbm = ecx & bit_TBM;\n-      has_lzcnt = ecx & bit_LZCNT;\n-      has_prfchw = ecx & bit_PRFCHW;\n-\n-      has_longmode = edx & bit_LM;\n-      has_3dnowp = edx & bit_3DNOWP;\n-      has_3dnow = edx & bit_3DNOW;\n-    }\n-\n   if (!arch)\n     {\n       if (vendor == signature_AMD_ebx"}]}