{"sha": "bae7876b4d3c0e1c5532b00f744a86d1f31d403e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFlNzg3NmI0ZDNjMGUxYzU1MzJiMDBmNzQ0YTg2ZDFmMzFkNDAzZQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2006-10-31T17:58:30Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T17:58:30Z"}, "message": "g-alleve.adb (lvx, stvx): Ceil-Round the Effective Address to the closest multiple of VECTOR_ALIGNMENT...\n\n2006-10-31  Olivier Hainque  <hainque@adacore.com>\n\n\t* g-alleve.adb (lvx, stvx): Ceil-Round the Effective Address to the\n\tclosest multiple of VECTOR_ALIGNMENT and not the closest multiple of 16.\n\nFrom-SVN: r118272", "tree": {"sha": "c7717f2cdc96f51106ff1ce02d2cd57e31863522", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7717f2cdc96f51106ff1ce02d2cd57e31863522"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bae7876b4d3c0e1c5532b00f744a86d1f31d403e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae7876b4d3c0e1c5532b00f744a86d1f31d403e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae7876b4d3c0e1c5532b00f744a86d1f31d403e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae7876b4d3c0e1c5532b00f744a86d1f31d403e/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f1ede06fc28db443347a22c579551d926e626d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1ede06fc28db443347a22c579551d926e626d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1ede06fc28db443347a22c579551d926e626d6"}], "stats": {"total": 53, "additions": 34, "deletions": 19}, "files": [{"sha": "3f760e4793c8b2550d3e59be842360af9b3fdb07", "filename": "gcc/ada/g-alleve.adb", "status": "modified", "additions": 34, "deletions": 19, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae7876b4d3c0e1c5532b00f744a86d1f31d403e/gcc%2Fada%2Fg-alleve.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae7876b4d3c0e1c5532b00f744a86d1f31d403e/gcc%2Fada%2Fg-alleve.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-alleve.adb?ref=bae7876b4d3c0e1c5532b00f744a86d1f31d403e", "patch": "@@ -7,7 +7,7 @@\n --                                 B o d y                                  --\n --                         (Soft Binding Version)                           --\n --                                                                          --\n---          Copyright (C) 2004-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -2818,17 +2818,28 @@ package body GNAT.Altivec.Low_Level_Vectors is\n    ---------\n \n    function lvx (A : c_long; B : c_ptr) return LL_VSI is\n-      EA : Integer_Address;\n \n-   begin\n-      EA := Bound_Align (Integer_Address (A) + To_Integer (B), 16);\n+      --  Simulate the altivec unit behavior regarding what Effective Address\n+      --  is accessed, stripping off the input address least significant bits\n+      --  wrt to vector alignment.\n \n-      declare\n-         D : LL_VSI;\n-         for D'Address use To_Address (EA);\n-      begin\n-         return D;\n-      end;\n+      --  On targets where VECTOR_ALIGNMENT is less than the vector size (16),\n+      --  an address within a vector is not necessarily rounded back at the\n+      --  vector start address. Besides, rounding on 16 makes no sense on such\n+      --  targets because the address of a properly aligned vector (that is,\n+      --  a proper multiple of VECTOR_ALIGNMENT) could be affected, which we\n+      --  want never to happen.\n+\n+      EA : constant System.Address :=\n+             To_Address\n+               (Bound_Align\n+                  (Integer_Address (A) + To_Integer (B), VECTOR_ALIGNMENT));\n+\n+      D : LL_VSI;\n+      for D'Address use EA;\n+\n+   begin\n+      return D;\n    end lvx;\n \n    -----------\n@@ -4407,17 +4418,21 @@ package body GNAT.Altivec.Low_Level_Vectors is\n    ----------\n \n    procedure stvx   (A : LL_VSI; B : c_int; C : c_ptr) is\n-      EA : Integer_Address;\n \n-   begin\n-      EA := Bound_Align (Integer_Address (B) + To_Integer (C), 16);\n+      --  Simulate the altivec unit behavior regarding what Effective Address\n+      --  is accessed, stripping off the input address least significant bits\n+      --  wrt to vector alignment (see comment in lvx for further details).\n \n-      declare\n-         D : LL_VSI;\n-         for D'Address use To_Address (EA);\n-      begin\n-         D := A;\n-      end;\n+      EA : constant System.Address :=\n+             To_Address\n+               (Bound_Align\n+                  (Integer_Address (B) + To_Integer (C), VECTOR_ALIGNMENT));\n+\n+      D  : LL_VSI;\n+      for D'Address use EA;\n+\n+   begin\n+      D := A;\n    end stvx;\n \n    ------------"}]}