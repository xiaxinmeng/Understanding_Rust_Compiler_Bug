{"sha": "c41884a09206be0e21cad7eea71b9754daa969d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQxODg0YTA5MjA2YmUwZTIxY2FkN2VlYTcxYjk3NTRkYWE5NjlkNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-17T08:33:27Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-04-17T08:33:27Z"}, "message": "Fix -fcompare-debug issue in delete_insn_and_edges [PR94618]\n\ndelete_insn_and_edges calls purge_dead_edges whenever deleting the last insn\nin a bb, whatever it is.  If it called it only for mandatory last insns\nin the basic block (that may not be followed by DEBUG_INSNs, dunno if that\nis control_flow_insn_p or something more complex), that wouldn't be a\nproblem, but as it calls it on any last insn and can actually do something\nin the bb, if such an insn is followed by one more more DEBUG_INSNs and\nnothing else in the same bb, we don't call purge_dead_edges with -g and do\ncall it with -g0.\n\nOn the testcase, there are two reg-to-reg moves with REG_EH_REGION notes\n(previously memory accesses but simplified and yet not optimized), and the\nsecond is followed by DEBUG_INSNs; the second move is delete_insn_and_edges\nand after removing it, for -g0 purge_dead_edges removes the REG_EH_REGION\nfrom the now last insn in the bb (the first reg-to-reg move), while\nfor -g it isn't called and things diverge from that quickly on.\n\nFixed by calling purdge_dead_edges even if we remove the last real insn\nfollowed only by DEBUG_INSNs in the same bb.\n\n2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR rtl-optimization/94618\n\t* cfgrtl.c (delete_insn_and_edges): Set purge not just when\n\tinsn is the BB_END of its block, but also when it is only followed\n\tby DEBUG_INSNs in its block.\n\n\t* g++.dg/opt/pr94618.C: New test.", "tree": {"sha": "9a197fc01c6e4fa97c82c78963dc71548fbe50e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a197fc01c6e4fa97c82c78963dc71548fbe50e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c41884a09206be0e21cad7eea71b9754daa969d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c41884a09206be0e21cad7eea71b9754daa969d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c41884a09206be0e21cad7eea71b9754daa969d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c41884a09206be0e21cad7eea71b9754daa969d4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c58cb6ac6891886b7aa01c440ac71a5e7cbcba97"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "8bce0ea61469f517d486cf7b9f456075f70de9eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c41884a09206be0e21cad7eea71b9754daa969d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c41884a09206be0e21cad7eea71b9754daa969d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c41884a09206be0e21cad7eea71b9754daa969d4", "patch": "@@ -1,5 +1,10 @@\n 2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/94618\n+\t* cfgrtl.c (delete_insn_and_edges): Set purge not just when\n+\tinsn is the BB_END of its block, but also when it is only followed\n+\tby DEBUG_INSNs in its block.\n+\n \tPR tree-optimization/94621\n \t* tree-inline.c (remap_type_1): Don't dereference NULL TYPE_DOMAIN.\n \tMove id->adjust_array_error_bounds check first in the condition."}, {"sha": "e6ea687ef31729774e4b3fe3b9fbcb89a934300f", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c41884a09206be0e21cad7eea71b9754daa969d4/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c41884a09206be0e21cad7eea71b9754daa969d4/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=c41884a09206be0e21cad7eea71b9754daa969d4", "patch": "@@ -230,10 +230,20 @@ delete_insn_and_edges (rtx_insn *insn)\n {\n   bool purge = false;\n \n-  if (INSN_P (insn)\n-      && BLOCK_FOR_INSN (insn)\n-      && BB_END (BLOCK_FOR_INSN (insn)) == insn)\n-    purge = true;\n+  if (INSN_P (insn) && BLOCK_FOR_INSN (insn))\n+    {\n+      basic_block bb = BLOCK_FOR_INSN (insn);\n+      if (BB_END (bb) == insn)\n+\tpurge = true;\n+      else if (DEBUG_INSN_P (BB_END (bb)))\n+\tfor (rtx_insn *dinsn = NEXT_INSN (insn);\n+\t     DEBUG_INSN_P (dinsn); dinsn = NEXT_INSN (dinsn))\n+\t  if (BB_END (bb) == dinsn)\n+\t    {\n+\t      purge = true;\n+\t      break;\n+\t    }\n+    }\n   delete_insn (insn);\n   if (purge)\n     return purge_dead_edges (BLOCK_FOR_INSN (insn));"}, {"sha": "dd2cb04916f95d4177397feccf862f52cfdee6b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c41884a09206be0e21cad7eea71b9754daa969d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c41884a09206be0e21cad7eea71b9754daa969d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c41884a09206be0e21cad7eea71b9754daa969d4", "patch": "@@ -1,5 +1,8 @@\n 2020-04-17  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/94618\n+\t* g++.dg/opt/pr94618.C: New test.\n+\n \tPR tree-optimization/94621\n \t* gcc.c-torture/compile/pr94621.c: New test.\n "}, {"sha": "e6a81d2c5ab21a5a9a2bff9eadd936e8d8ff529e", "filename": "gcc/testsuite/g++.dg/opt/pr94618.C", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c41884a09206be0e21cad7eea71b9754daa969d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr94618.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c41884a09206be0e21cad7eea71b9754daa969d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr94618.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr94618.C?ref=c41884a09206be0e21cad7eea71b9754daa969d4", "patch": "@@ -0,0 +1,25 @@\n+// PR rtl-optimization/94618\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-O2 -fnon-call-exceptions -fcompare-debug\" }\n+\n+struct S\n+{\n+  int a, b, c;\n+  int foo () noexcept { return a; }\n+  int bar () noexcept { return b; }\n+  void baz (int);\n+  void qux () { if (c) for (int x = foo (); x != bar (); ) baz (x); }\n+};\n+\n+struct T\n+{\n+  S s;\n+  void foo ();\n+};\n+\n+void\n+T::foo ()\n+{\n+  s.qux ();\n+  s.qux ();\n+}"}]}