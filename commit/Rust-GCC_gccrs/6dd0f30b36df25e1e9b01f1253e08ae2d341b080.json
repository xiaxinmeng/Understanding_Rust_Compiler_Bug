{"sha": "6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRkMGYzMGIzNmRmMjVlMWU5YjAxZjEyNTNlMDhhZTJkMzQxYjA4MA==", "commit": {"author": {"name": "Bud Davis", "email": "bdavis9659@comcast.net", "date": "2003-03-22T13:01:08Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2003-03-22T13:01:08Z"}, "message": "com.c (ffecom_constantunion_with_type): New function.\n\n2003-03-22  Bud Davis  <bdavis9659@comcast.net>\n\n\t* com.c (ffecom_constantunion_with_type): New function.\n\t* com.h (ffecom_constantunion_with_type): Declare.\n\t* stc.c (ffestc_R810): Check for kind type.\n\t* ste.c (ffeste_R810): Use ffecom_constantunion_with_type\n\tto discern SELECT CASE variables.\n\nFrom-SVN: r64709", "tree": {"sha": "8a407bae36a52fb2123c2e1a020e6fee6d41df06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a407bae36a52fb2123c2e1a020e6fee6d41df06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/comments", "author": null, "committer": null, "parents": [{"sha": "dcde977582f92d6e8e6b0df8862504be064dd3ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcde977582f92d6e8e6b0df8862504be064dd3ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcde977582f92d6e8e6b0df8862504be064dd3ec"}], "stats": {"total": 293, "additions": 284, "deletions": 9}, "files": [{"sha": "848f64987853e462fcd118cf545633dbe9ff0c6e", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "patch": "@@ -1,3 +1,11 @@\n+2003-03-22  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* com.c (ffecom_constantunion_with_type): New function.\n+\t* com.h (ffecom_constantunion_with_type): Declare.\n+\t* stc.c (ffestc_R810): Check for kind type.\n+\t* ste.c (ffeste_R810): Use ffecom_constantunion_with_type\n+\tto discern SELECT CASE variables.\n+\n 2003-03-15  Roger Sayle  <roger@eyesopen.com>\n \n \t* stb.c (ffestb_R100110_): Allow the number before the X format"}, {"sha": "b850774be78dddb1fc9cbce2517f053579a65676", "filename": "gcc/f/com.c", "status": "modified", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "patch": "@@ -10591,6 +10591,78 @@ ffecom_constantunion (ffebldConstantUnion *cu, ffeinfoBasictype bt,\n   return item;\n }\n \n+/* Transform constant-union to tree, with the type known.  */\n+\n+tree\n+ffecom_constantunion_with_type (ffebldConstantUnion *cu,\n+\t\t      tree tree_type, ffebldConst ct)\n+{\n+  tree item;\n+\n+  int val;\n+\n+  switch (ct)\n+  {\n+#if FFETARGET_okINTEGER1\n+\t  case  FFEBLD_constINTEGER1:\n+         \t  val = ffebld_cu_val_integer1 (*cu);\n+\t\t  item = build_int_2 (val, (val < 0) ? -1 : 0);\n+\t\t  break;\n+#endif\n+#if FFETARGET_okINTEGER2\n+\t  case  FFEBLD_constINTEGER2:\n+\t\t  val = ffebld_cu_val_integer2 (*cu);\n+\t\t  item = build_int_2 (val, (val < 0) ? -1 : 0);\n+\t\t  break;\n+#endif\n+#if FFETARGET_okINTEGER3\n+\t  case  FFEBLD_constINTEGER3:\n+\t\t  val = ffebld_cu_val_integer3 (*cu);\n+\t\t  item = build_int_2 (val, (val < 0) ? -1 : 0);\n+\t\t  break;\n+#endif\n+#if FFETARGET_okINTEGER4\n+\t  case  FFEBLD_constINTEGER4:\n+\t\t  val = ffebld_cu_val_integer4 (*cu);\n+\t\t  item = build_int_2 (val, (val < 0) ? -1 : 0);\n+\t\t  break;\n+#endif\n+#if FFETARGET_okLOGICAL1\n+\t  case  FFEBLD_constLOGICAL1:\n+\t\t  val = ffebld_cu_val_logical1 (*cu);\n+\t\t  item = build_int_2 (val, (val < 0) ? -1 : 0);\n+\t\t  break;\n+#endif\n+#if FFETARGET_okLOGICAL2\n+          case  FFEBLD_constLOGICAL2:\n+\t\t  val = ffebld_cu_val_logical2 (*cu);\n+\t\t  item = build_int_2 (val, (val < 0) ? -1 : 0);\n+\t\t  break;\n+#endif\n+#if FFETARGET_okLOGICAL3\n+\t  case  FFEBLD_constLOGICAL3:\n+\t\t  val = ffebld_cu_val_logical3 (*cu);\n+\t\t  item = build_int_2 (val, (val < 0) ? -1 : 0);\n+\t\t  break;\n+#endif\n+#if FFETARGET_okLOGICAL4\n+\t  case  FFEBLD_constLOGICAL4:\n+\t\t  val = ffebld_cu_val_logical4 (*cu);\n+\t\t  item = build_int_2 (val, (val < 0) ? -1 : 0);\n+\t\t  break;\n+#endif\n+\t  default:\n+\t\t  assert (\"constant type not supported\"==NULL);\n+\t\t  return error_mark_node;\n+\t\t  break;\n+  }\n+\n+  TREE_TYPE (item) = tree_type;\n+\n+  TREE_CONSTANT (item) = 1;\n+\n+  return item;\n+}\n /* Transform expression into constant tree.\n \n    If the expression can be transformed into a tree that is constant,"}, {"sha": "b58e5ba1205f0b392a5a6c49118b3b6a460c765a", "filename": "gcc/f/com.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2Fcom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2Fcom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.h?ref=6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "patch": "@@ -210,6 +210,8 @@ tree ffecom_arg_expr (ffebld expr, tree *length);\n tree ffecom_arg_ptr_to_const_expr (ffebld expr, tree *length);\n tree ffecom_arg_ptr_to_expr (ffebld expr, tree *length);\n tree ffecom_call_gfrt (ffecomGfrt ix, tree args, tree hook);\n+tree ffecom_constantunion_with_type (ffebldConstantUnion *cu, \n+\t\t            tree tree_type,ffebldConst ct);\n tree ffecom_constantunion (ffebldConstantUnion *cu, ffeinfoBasictype bt,\n \t\t\t   ffeinfoKindtype kt, tree tree_type);\n tree ffecom_const_expr (ffebld expr);"}, {"sha": "b9602c20a469cdadd4c88ce1c647cab7a05db6c5", "filename": "gcc/f/stc.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2Fstc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2Fstc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fstc.c?ref=6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "patch": "@@ -9197,11 +9197,17 @@ ffestc_R810 (ffesttCaseList cases, ffelexToken name)\n \t    }\n \t  if (((caseobj->expr1 != NULL)\n \t       && ((ffeinfo_basictype (ffebld_info (caseobj->expr1))\n-\t\t    != s->type)))\n+\t\t    != s->type)\n+\t\t   || ((ffeinfo_kindtype (ffebld_info (caseobj->expr1))\n+\t\t       != s->kindtype) \n+\t\t       && (ffeinfo_kindtype (ffebld_info (caseobj->expr1)) != FFEINFO_kindtypeINTEGER1 ))\n \t      || ((caseobj->range)\n \t\t  && (caseobj->expr2 != NULL)\n \t\t  && ((ffeinfo_basictype (ffebld_info (caseobj->expr2))\n-\t\t       != s->type))))\n+\t\t       != s->type)\n+\t\t      || ((ffeinfo_kindtype (ffebld_info (caseobj->expr2))\n+\t\t\t  != s->kindtype)\n+\t\t      && (ffeinfo_kindtype (ffebld_info (caseobj->expr2)) != FFEINFO_kindtypeINTEGER1)))))))\n \t    {\n \t      ffebad_start (FFEBAD_CASE_TYPE_DISAGREE);\n \t      ffebad_here (0, ffelex_token_where_line (caseobj->t),\n@@ -9212,6 +9218,8 @@ ffestc_R810 (ffesttCaseList cases, ffelexToken name)\n \t      continue;\n \t    }\n \n+\n+\n \t  if ((s->type == FFEINFO_basictypeLOGICAL) && (caseobj->range))\n \t    {\n \t      ffebad_start (FFEBAD_CASE_LOGICAL_RANGE);"}, {"sha": "7d625cb6159881d91c23c5bccdf39fddde934e52", "filename": "gcc/f/ste.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2Fste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ff%2Fste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fste.c?ref=6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "patch": "@@ -2711,21 +2711,18 @@ ffeste_R810 (ffestw block, unsigned long casenum)\n     do\n       {\n \ttexprlow = (c->low == NULL) ? NULL_TREE\n-\t  : ffecom_constantunion (&ffebld_constant_union (c->low), s->type,\n-\t\t\t\t  s->kindtype,\n-\t\t\t\t  ffecom_tree_type[s->type][s->kindtype]);\n+\t  : ffecom_constantunion_with_type (&ffebld_constant_union (c->low),\n+\t\t\t\t  ffecom_tree_type[s->type][s->kindtype],c->low->consttype);\n \tif (c->low != c->high)\n \t  {\n \t    texprhigh = (c->high == NULL) ? NULL_TREE\n-\t      : ffecom_constantunion (&ffebld_constant_union (c->high),\n-\t\t\t\t      s->type, s->kindtype,\n-\t\t\t\t      ffecom_tree_type[s->type][s->kindtype]);\n+\t      : ffecom_constantunion_with_type (&ffebld_constant_union (c->high),\n+\t\t\t\t      ffecom_tree_type[s->type][s->kindtype],c->high->consttype);\n \t    pushok = pushcase_range (texprlow, texprhigh, convert,\n \t\t\t\t     tlabel, &duplicate);\n \t  }\n \telse\n \t  pushok = pushcase (texprlow, convert, tlabel, &duplicate);\n-\tassert((pushok != 2) || (pushok != 0));\n \tif (pushok == 2)\n \t  {\n \t    ffebad_start_msg (\"SELECT (at %0) has duplicate cases -- check integer overflow of CASE(s)\","}, {"sha": "25baba31661ee5f30d34b13b9c94e1baa5480a43", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "patch": "@@ -1,3 +1,8 @@\n+2003-03-22  Bud Davis  <bdavis9659@comcast.net>\n+\n+\t* g77.f-torture/execute/select.f: New test.\n+\t* g77.f-torture/noncompile/select_no_compile.f: New test.\n+\n 2003-03-21  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/9898"}, {"sha": "f1024330a71278aebca915378ab526c240c2f4dc", "filename": "gcc/testsuite/g77.f-torture/execute/select.f", "status": "added", "additions": 173, "deletions": 0, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fselect.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fselect.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2Fselect.f?ref=6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "patch": "@@ -0,0 +1,173 @@\n+C   integer byte case with integer byte parameters as case(s)\n+        subroutine ib\n+        integer *1 a /1/\n+        integer *1  one,two,three\n+        parameter (one=1,two=2,three=3)\n+        select case (a)\n+        case (one)\n+        case (two)\n+           call abort\n+        case (three)\n+           call abort\n+        case default\n+           call abort\n+        end select\n+        print*,'normal ib'\n+        end\n+C   integer halfword case with integer halfword parameters\n+        subroutine ih\n+        integer *2 a /1/\n+        integer *2  one,two,three\n+        parameter (one=1,two=2,three=3)\n+        select case (a)\n+        case (one)\n+        case (two)\n+           call abort\n+        case (three)\n+           call abort\n+        case default\n+           call abort\n+        end select\n+        print*,'normal ih'\n+        end\n+C   integer case with integer parameters\n+        subroutine iw\n+        integer *4 a /1/\n+        integer *4  one,two,three\n+        parameter (one=1,two=2,three=3)\n+        select case (a)\n+        case (one)\n+        case (two)\n+           call abort\n+        case (three)\n+           call abort\n+        case default\n+           call abort\n+        end select\n+        print*,'normal iw'\n+        end\n+C   integer double case with integer double parameters\n+        subroutine id\n+        integer *8 a /1/\n+        integer *8  one,two,three\n+        parameter (one=1,two=2,three=3)\n+        select case (a)\n+        case (one)\n+        case (two)\n+           call abort\n+        case (three)\n+           call abort\n+        case default\n+           call abort\n+        end select\n+        print*,'normal id'\n+        end\n+C   integer byte select with integer case\n+       subroutine ib_mixed\n+       integer*1 s /1/\n+       select case (s)\n+       case (1)\n+       case (2)\n+         call abort\n+       end select\n+       print*,'ib ok'\n+       end\n+C   integer halfword with integer case\n+       subroutine ih_mixed\n+       integer*2 s /1/\n+       select case (s)\n+       case (1)\n+       case default\n+         call abort\n+       end select\n+       print*,'ih ok'\n+       end\n+C   integer word with integer case\n+       subroutine iw_mixed\n+       integer s /5/\n+       select case (s)\n+       case (1)\n+          call abort\n+       case (2)\n+          call abort\n+       case (3)\n+          call abort\n+       case (4)\n+          call abort\n+       case (5)\n+C                   \n+       case (6)\n+           call abort\n+       case default\n+           call abort\n+       end select\n+       print*,'iw ok'\n+       end\n+C   integer doubleword with integer case\n+       subroutine id_mixed\n+       integer *8 s /1024/\n+       select case (s)\n+       case (1)\n+           call abort\n+       case (1023)\n+           call abort\n+       case (1025)\n+           call abort\n+       case (1024)\n+C\n+       end select\n+       print*,'i8 ok'\n+       end\n+       subroutine l1_mixed\n+       logical*1 s /.TRUE./\n+       select case (s)\n+       case (.TRUE.)\n+       case (.FALSE.)\n+          call abort\n+       end select\n+       print*,'l1 ok'\n+       end\n+       subroutine l2_mixed\n+       logical*2 s /.FALSE./\n+       select case (s)\n+       case (.TRUE.)\n+           call abort\n+       case (.FALSE.)\n+       end select\n+       print*,'lh ok'\n+       end\n+       subroutine l4_mixed\n+       logical*4 s /.TRUE./\n+       select case (s)\n+       case (.FALSE.)\n+         call abort\n+       case (.TRUE.)\n+       end select\n+       print*,'lw ok'\n+       end\n+       subroutine l8_mixed\n+       logical*8 s /.TRUE./\n+       select case (s)\n+       case (.TRUE.)\n+       case (.FALSE.)\n+          call abort\n+       end select\n+       print*,'ld ok'\n+       end\n+C   main\n+C -- regression cases\n+        call ib\n+        call ih\n+        call iw\n+        call id\n+C -- new functionality\n+        call ib_mixed\n+        call ih_mixed\n+        call iw_mixed\n+        call id_mixed\n+        end\n+        \n+\n+\n+\n+"}, {"sha": "f7dad339a8158bd92917785b44af49a9df56d04e", "filename": "gcc/testsuite/g77.f-torture/noncompile/select_no_compile.f", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fselect_no_compile.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dd0f30b36df25e1e9b01f1253e08ae2d341b080/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fselect_no_compile.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fnoncompile%2Fselect_no_compile.f?ref=6dd0f30b36df25e1e9b01f1253e08ae2d341b080", "patch": "@@ -0,0 +1,10 @@\n+       integer*1 one\n+       integer*2 two\n+       parameter (one=1)\n+       parameter (two=2)\n+       select case (I)\n+       case (one)\n+       case (two)\n+       end select\n+       end\n+    "}]}