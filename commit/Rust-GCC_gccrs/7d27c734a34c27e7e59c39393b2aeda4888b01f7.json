{"sha": "7d27c734a34c27e7e59c39393b2aeda4888b01f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2QyN2M3MzRhMzRjMjdlN2U1OWMzOTM5M2IyYWVkYTQ4ODhiMDFmNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-04-04T03:13:51Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-04-04T03:13:51Z"}, "message": "cp-tree.h (FUNCTION_OR_METHOD_TYPE_CHECK): Remove.\n\n\t* cp-tree.h (FUNCTION_OR_METHOD_TYPE_CHECK): Remove.\n\t(TYPE_RAISES_EXCEPTIONS): Use FUNC_OR_METHOD_CHECK instead.\n\t(FUNCTION_REF_QUALIFIED, FUNCTION_RVALUE_QUALIFIED): Likewise.\n\nFrom-SVN: r197466", "tree": {"sha": "ccb7ed854f5ffb181ea2495af4d4d012e974b937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccb7ed854f5ffb181ea2495af4d4d012e974b937"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d27c734a34c27e7e59c39393b2aeda4888b01f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d27c734a34c27e7e59c39393b2aeda4888b01f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d27c734a34c27e7e59c39393b2aeda4888b01f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d27c734a34c27e7e59c39393b2aeda4888b01f7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0baa873fa349fafa18e42341cfd280e906f94ee7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0baa873fa349fafa18e42341cfd280e906f94ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0baa873fa349fafa18e42341cfd280e906f94ee7"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "d039f8bdaf33db660c772b0cb8f07362220e65fd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d27c734a34c27e7e59c39393b2aeda4888b01f7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d27c734a34c27e7e59c39393b2aeda4888b01f7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7d27c734a34c27e7e59c39393b2aeda4888b01f7", "patch": "@@ -1,5 +1,9 @@\n 2013-04-03  Jason Merrill  <jason@redhat.com>\n \n+\t* cp-tree.h (FUNCTION_OR_METHOD_TYPE_CHECK): Remove.\n+\t(TYPE_RAISES_EXCEPTIONS): Use FUNC_OR_METHOD_CHECK instead.\n+\t(FUNCTION_REF_QUALIFIED, FUNCTION_RVALUE_QUALIFIED): Likewise.\n+\n \t* mangle.c (write_type): When writing a function type with\n \tfunction-cv-quals, don't add the unqualified type as a\n \tsubstitution candidate."}, {"sha": "e1d12381d77c8a46750a5111515feb5b63681443", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d27c734a34c27e7e59c39393b2aeda4888b01f7/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d27c734a34c27e7e59c39393b2aeda4888b01f7/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=7d27c734a34c27e7e59c39393b2aeda4888b01f7", "patch": "@@ -223,9 +223,6 @@ c-common.h, not after.\n #define BOUND_TEMPLATE_TEMPLATE_PARM_TYPE_CHECK(NODE) \\\n   TREE_CHECK(NODE,BOUND_TEMPLATE_TEMPLATE_PARM)\n \n-#define FUNCTION_OR_METHOD_TYPE_CHECK(NODE) \\\n-  TREE_CHECK2(NODE,FUNCTION_TYPE,METHOD_TYPE)\n-\n #if defined ENABLE_TREE_CHECKING && (GCC_VERSION >= 2007)\n #define THUNK_FUNCTION_CHECK(NODE) __extension__\t\t\t\\\n ({  __typeof (NODE) const __t = (NODE);\t\t\t\t\t\\\n@@ -1888,7 +1885,7 @@ struct GTY((variable_size)) lang_type {\n    (for templates) or an OVERLOAD list of functions (for implicitly\n    declared functions).  */\n #define TYPE_RAISES_EXCEPTIONS(NODE) \\\n-  TYPE_LANG_SLOT_1 (FUNCTION_OR_METHOD_TYPE_CHECK (NODE))\n+  TYPE_LANG_SLOT_1 (FUNC_OR_METHOD_CHECK (NODE))\n \n /* For FUNCTION_TYPE or METHOD_TYPE, return 1 iff it is declared `throw()'\n    or noexcept(true).  */\n@@ -2536,11 +2533,11 @@ struct GTY((variable_size)) lang_decl {\n \n /* 1 iff FUNCTION_TYPE or METHOD_TYPE has a ref-qualifier (either & or &&). */\n #define FUNCTION_REF_QUALIFIED(NODE) \\\n-  TREE_LANG_FLAG_4 (FUNCTION_OR_METHOD_TYPE_CHECK (NODE))\n+  TREE_LANG_FLAG_4 (FUNC_OR_METHOD_CHECK (NODE))\n \n /* 1 iff FUNCTION_TYPE or METHOD_TYPE has &&-ref-qualifier.  */\n #define FUNCTION_RVALUE_QUALIFIED(NODE) \\\n-  TREE_LANG_FLAG_5 (FUNCTION_OR_METHOD_TYPE_CHECK (NODE))\n+  TREE_LANG_FLAG_5 (FUNC_OR_METHOD_CHECK (NODE))\n \n /* Returns 1 iff VAR_DECL is a construction virtual table.\n    DECL_VTABLE_OR_VTT_P will be true in this case and must be checked"}]}