{"sha": "fb49f596ba1d71463d82929c8d542aa598343c75", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI0OWY1OTZiYTFkNzE0NjNkODI5MjljOGQ1NDJhYTU5ODM0M2M3NQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-07-11T03:17:44Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-07-11T03:17:44Z"}, "message": "t-slibgcc-darwin: Rewrite.\n\n2006-07-10  Eric Christopher  <echristo@apple.com>\n\n\t* config/t-slibgcc-darwin: Rewrite.\n\nFrom-SVN: r115325", "tree": {"sha": "e4db4b998f63376cfecfa05fb3add6e6993b520c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4db4b998f63376cfecfa05fb3add6e6993b520c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb49f596ba1d71463d82929c8d542aa598343c75", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb49f596ba1d71463d82929c8d542aa598343c75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb49f596ba1d71463d82929c8d542aa598343c75", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb49f596ba1d71463d82929c8d542aa598343c75/comments", "author": null, "committer": null, "parents": [{"sha": "79908c99d46ae18278e61fa5e8238aa93dce625f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79908c99d46ae18278e61fa5e8238aa93dce625f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79908c99d46ae18278e61fa5e8238aa93dce625f"}], "stats": {"total": 70, "additions": 49, "deletions": 21}, "files": [{"sha": "3568f427e85fd28aeff21cea5d8d98930af2ab73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb49f596ba1d71463d82929c8d542aa598343c75/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb49f596ba1d71463d82929c8d542aa598343c75/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fb49f596ba1d71463d82929c8d542aa598343c75", "patch": "@@ -1,3 +1,7 @@\n+2006-07-10  Eric Christopher  <echristo@apple.com>\n+\n+\t* config/t-slibgcc-darwin: Rewrite.\n+\n 2006-07-10  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n \tPR bootstrap/20437\n@@ -60,7 +64,7 @@\n \t* gcc-common.c (ggc_free_overhead, dump_gcc_loc_statistics): Likewise.\n \t* tree-ssa-dce.c (clear_control_dependence_bitmap): Likewise.\n \t* rtl.c (dump_rtx_statistics): Likewise.\n-\t* tree-ssa-structalias.c (sort_fieldstack, init_alias_heapvars): \n+\t* tree-ssa-structalias.c (sort_fieldstack, init_alias_heapvars):\n \tLikewise.\n \t* varray.c (dump_varray_statistics): Likewise.\n \t* dfp.c (encode_decimal32, decode_decimal32, encode_decimal64,\n@@ -83,7 +87,7 @@\n 2006-07-06  Roger Sayle  <roger@eyesopen.com>\n \n \tPR target/27968\n-\t* configure.ac (HAVE_AS_IX86_FFREEP): On x86 targets check whether \n+\t* configure.ac (HAVE_AS_IX86_FFREEP): On x86 targets check whether\n \tthe configured assembler supports the x87's ffreep mnemonic.\n \t* configure: Regenerate.\n \t* config.in: Regenerate.\n@@ -162,7 +166,7 @@\n \n \t* tree-ssa-math-opts.c (execute_cse_reciprocals): Fix calls\n \tto calculate and free the dominator information.\n-\t    \n+\n 2006-07-04  Peter O'Gorman  <peter@pogma.com>\n \n \t* mklibgcc.in: chmod 644 before ranlib during install.\n@@ -260,7 +264,7 @@\n \tPR c++/19134\n \t* tree.c (build_decl_stat): Don't hande #pragma visibility here.\n \t* c-common.c (c_determine_visibility): Handle it here.\n-\t* c-decl.c (finish_decl): Call c_determine_visibility for \n+\t* c-decl.c (finish_decl): Call c_determine_visibility for\n \tfunctions, too.\n \t* flags.h (enum symbol_visibility): Sort from most to least visibility.\n \t* tree.h: Likewise.\n@@ -286,7 +290,7 @@\n \tPR target/25765\n \t* config/i386/i386.c (ix86_output_function_epilogue): Don't\n \tinsert a label at the end of an function under Mach-O.\n-\t\n+\n 2006-06-29  Eric Christopher  <echristo@apple.com>\n \t    Evan Cheng  <evan.cheng@apple.com>\n "}, {"sha": "7510c136b7b8c4f5edce0d688e0a8162bb5016d4", "filename": "gcc/config/t-slibgcc-darwin", "status": "modified", "additions": 40, "deletions": 16, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb49f596ba1d71463d82929c8d542aa598343c75/gcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb49f596ba1d71463d82929c8d542aa598343c75/gcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-slibgcc-darwin?ref=fb49f596ba1d71463d82929c8d542aa598343c75", "patch": "@@ -2,26 +2,28 @@\n SHLIB_SOVERSION = 1\n SHLIB_VERSTRING = -compatibility_version $(SHLIB_SOVERSION) -current_version $(SHLIB_SOVERSION).0\n SHLIB_EXT = .dylib\n-SHLIB_SUFFIX = `if test @multilib_dir@ != . ; then echo _@multilib_dir@ ; fi`\n-SHLIB_SONAME = @shlib_base_name@$(SHLIB_SUFFIX).$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+SHLIB_SUFFIX = `if test @multilib_dir@ = ppc64 ; then echo _@multilib_dir@ ; fi`\n+SHLIB_INSTALL_NAME = @shlib_base_name@$(SHLIB_SUFFIX).$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+SHLIB_SONAME = @shlib_base_name@.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+SHLIB_SOLINK = @shlib_base_name@.so\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n SHLIB_DIR = @multilib_dir@\n+SHLIB_LC = -lc\n \n # Darwin only searches in /usr/lib for shared libraries, not in subdirectories,\n # so the libgcc variants have different names not different locations.\n # Note that this version is used for the loader, not the linker; the linker\n # uses the stub versions named by $(LIBGCC).\n SHLIB_LINK = $(GCC_FOR_TARGET) $(LIBGCC2_CFLAGS) -dynamiclib -nodefaultlibs \\\n-\t-Wl,-install_name,$(slibdir)/$(SHLIB_SONAME) \\\n-\t-single_module -o $(SHLIB_SONAME).tmp \\\n+\t-Wl,-install_name,$(slibdir)/$(SHLIB_INSTALL_NAME) \\\n+\t-single_module -o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp \\\n \t-Wl,-exported_symbols_list,$(SHLIB_MAP) \\\n \t$(SHLIB_VERSTRING) \\\n-\t@multilib_flags@ $(SHLIB_OBJS) -lc && \\\n-\tif [ -f $(SHLIB_SONAME) ]; then \\\n-\t  mv -f $(SHLIB_SONAME) $(SHLIB_SONAME).backup; \\\n-\telse true; fi && \\\n-\tmv $(SHLIB_SONAME).tmp $(SHLIB_SONAME)\n+\t@multilib_flags@ $(SHLIB_OBJS) $(SHLIB_LC) && \\\n+\tif [ -f stmp-lipo ]; then \\\n+\t  rm -f stmp-lipo; \\\n+\telse true; fi\n \n # $(slibdir) double quoted to protect it from expansion while building\n # libgcc.mk.  We want this delayed until actual install time.\n@@ -42,10 +44,10 @@ ASM_HIDDEN_OP = .private_extern\n # each system version supported.  They are 'stub' libraries that\n # contain no code, just a list of exported symbols.\n # The actual use of the libraries is controlled by REAL_LIBGCC_SPEC.\n-# \n+#\n # This assumes each multilib corresponds to a different architecture.\n libgcc_s.%.dylib : $(SHLIB_VERPFX).%.ver libgcc.a\n-\t# When builting multilibbed target libraries, all the required\n+\t# When building multilibbed target libraries, all the required\n \t# libraries are expected to exist in the multilib directory.\n \tMLIBS=`$(GCC_FOR_TARGET) --print-multi-lib \\\n \t\t| sed -e 's/;.*$$//' -e '/^\\.$$/d'` ; \\\n@@ -54,22 +56,44 @@ libgcc_s.%.dylib : $(SHLIB_VERPFX).%.ver libgcc.a\n \t  $(LN_S) ../$@ $${mlib}/$@ || exit 1 ; \\\n \tdone\n \tMLIBS=`$(GCC_FOR_TARGET) --print-multi-lib \\\n-\t\t| sed -e 's/;.*$$//' -e '/^\\.$$/d' -e 's/^/_/'` ; \\\n+\t\t| sed -e 's/;.*$$//' -e '/^\\.$$/d'` ; \\\n \tfor mlib in '' $$MLIBS ; do \\\n \t  $(STRIP_FOR_TARGET) -o $(@)_T$${mlib} \\\n \t    -s $(SHLIB_VERPFX).$(*).ver -c -u \\\n-\t    libgcc_s$${mlib}.$(SHLIB_SOVERSION)$(SHLIB_EXT) || exit 1 ; \\\n+\t    ./$${mlib}/libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT).tmp || exit 1 ; \\\n \tdone\n \t$(LIPO_FOR_TARGET) -output $@ -create $(@)_T*\n \trm $(@)_T*\n \n+stmp-lipo: libgcc_s.10.4.dylib libgcc_s.10.5.dylib\n+\t# When building multilibbed target libraries, all the required\n+\t# libraries are expected to exist in the multilib directory.\n+\tMLIBS=`$(GCC_FOR_TARGET) --print-multi-lib \\\n+\t\t| sed -e 's/;.*$$//' -e '/^\\.$$/d'` ; \\\n+\tfor mlib in '' $$MLIBS ; do \\\n+\t  cp ./$${mlib}/libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT).tmp \\\n+\t    ./libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T_$${mlib} || exit 1 ; \\\n+\tdone\n+\t$(LIPO_FOR_TARGET) -output libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT) \\\n+\t  -create libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T*\n+\trm libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T*\n+\t$(STAMP) stmp-lipo\n+\n # From the point-of-view of the Makefiles, libgcc is built by the 'strip'\n # and 'lipo' commands above.\n-LIBGCC=libgcc_s.10.4.dylib libgcc_s.10.5.dylib\n+LIBGCC=stmp-lipo\n+\n+INSTALL_FILES=libgcc_s.10.4.dylib libgcc_s.10.5.dylib libgcc_s.1.dylib\n \n-install-darwin-libgcc-stubs : $(LIBGCC) installdirs\n-\tfor d in $(LIBGCC) ; do \\\n+install-darwin-libgcc-stubs : $(INSTALL_FILES) installdirs install-multilib \\\n+\t\t\t \tstmp-lipo\n+\tfor d in $(INSTALL_FILES) ; do \\\n \t  $(INSTALL_DATA) $$d $(DESTDIR)$(slibdir)/$$d || exit 1 ; \\\n \tdone\n+\tif [ -f $(DESTDIR)$(slibdir)/libgcc_s_ppc64.1.dylib ]; then \\\n+\t  rm -f $(DESTDIR)$(slibdir)/libgcc_s_ppc64.1.dylib; \\\n+\telse true; fi\n+\t$(LN_S) ./libgcc_s.1.dylib \\\n+\t\t$(DESTDIR)$(slibdir)/libgcc_s_ppc64.1.dylib\n \n INSTALL_LIBGCC += install-darwin-libgcc-stubs"}]}