{"sha": "8cd0faaf3206d06e32552108f6e66674730d2e7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNkMGZhYWYzMjA2ZDA2ZTMyNTUyMTA4ZjZlNjY2NzQ3MzBkMmU3ZA==", "commit": {"author": {"name": "Catherine Moore", "email": "clm@cygnus.com", "date": "1999-11-03T21:55:51Z"}, "committer": {"name": "Catherine Moore", "email": "clm@gcc.gnu.org", "date": "1999-11-03T21:55:51Z"}, "message": "defaults.h (ASM_OUTPUT_ALTERNATE_LABEL_NAME): Provide default.\n\n        * defaults.h (ASM_OUTPUT_ALTERNATE_LABEL_NAME): Provide default.\n        * emit-rtl.c (gen_label_rtx): Support LABEL_ALTERNATE_NAME.\n        * final.c (final_scan_insn): Emit LABEL_ALTERNATE_NAME.\n        * ggc-common.c (ggc_mark_rtx_children): Mark LABEL_ALTERNATE_NAME.\n        * jump.c (delete_unreferenced_labels): Don't delete if\n        LABEL_ALTERNATE_NAME is set.\n        * print-rtl.c (print_rtx): Dump alternate name.\n        * rtl.def (CODE_LABEL): Change format to \"iuuis00s\".\n        * rtl.h (LABEL_ALTERNATE_NAME): Define.\n        * rtl.texi (LABEL_ALTERNATE_NAME): Document.\n        * tm.texi (ASM_OUTPUT_ALTERNATE_LABEL_NAME): Document.\n\nFrom-SVN: r30382", "tree": {"sha": "32aab0337e74b85506bcda9eeeb36643fbe27d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32aab0337e74b85506bcda9eeeb36643fbe27d83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cd0faaf3206d06e32552108f6e66674730d2e7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cd0faaf3206d06e32552108f6e66674730d2e7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cd0faaf3206d06e32552108f6e66674730d2e7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cd0faaf3206d06e32552108f6e66674730d2e7d/comments", "author": null, "committer": null, "parents": [{"sha": "1e30f9b4da5c6f2503d459b41e08db56fd7c6174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e30f9b4da5c6f2503d459b41e08db56fd7c6174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e30f9b4da5c6f2503d459b41e08db56fd7c6174"}], "stats": {"total": 69, "additions": 61, "deletions": 8}, "files": [{"sha": "f66c452b76c92ff5d8d844728641c779526b6e10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -1,3 +1,17 @@\n+Wed Nov  3 15:40:23 1999  Catherine Moore  <clm@cygnus.com>\n+\n+        * defaults.h (ASM_OUTPUT_ALTERNATE_LABEL_NAME): Provide default.\n+        * emit-rtl.c (gen_label_rtx): Support LABEL_ALTERNATE_NAME.\n+        * final.c (final_scan_insn): Emit LABEL_ALTERNATE_NAME.\n+        * ggc-common.c (ggc_mark_rtx_children): Mark LABEL_ALTERNATE_NAME.\n+        * jump.c (delete_unreferenced_labels): Don't delete if\n+        LABEL_ALTERNATE_NAME is set.\n+        * print-rtl.c (print_rtx): Dump alternate name.\n+        * rtl.def (CODE_LABEL): Change format to \"iuuis00s\".\n+        * rtl.h (LABEL_ALTERNATE_NAME): Define.\n+        * rtl.texi (LABEL_ALTERNATE_NAME): Document.\n+        * tm.texi (ASM_OUTPUT_ALTERNATE_LABEL_NAME): Document.\n+\n Wed Nov  3 15:39:19 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fix-header.c (recognized_extern, recognized_function): Constify"}, {"sha": "807119f422831eb8c65687fd210f5e5cac760f97", "filename": "gcc/defaults.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -54,6 +54,12 @@ do { fprintf (FILE, \"\\t%s\\t\", ASM_LONG);\t\t\t\t\\\n    } while (0)\n #endif\n \n+/* Provide default for ASM_OUTPUT_ALTERNATE_LABEL_NAME.  */\n+#ifndef ASM_OUTPUT_ALTERNATE_LABEL_NAME\n+#define ASM_OUTPUT_ALTERNATE_LABEL_NAME(FILE,INSN) \\\n+  fprintf (FILE, \"%s:\\n\", LABEL_ALTERNATE_NAME (INSN))\n+#endif\n+\n /* choose a reasonable default for ASM_OUTPUT_ASCII.  */\n \n #ifndef ASM_OUTPUT_ASCII"}, {"sha": "cb49d7fb4ec8beb5b11b2a47a5f74c32262dbb87", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -1523,9 +1523,10 @@ gen_label_rtx ()\n   register rtx label;\n \n   label = gen_rtx_CODE_LABEL (VOIDmode, 0, NULL_RTX,\n-\t\t\t      NULL_RTX, label_num++, NULL_PTR);\n+\t\t\t      NULL_RTX, label_num++, NULL_PTR, NULL_PTR);\n \n   LABEL_NUSES (label) = 0;\n+  LABEL_ALTERNATE_NAME (label) = NULL;\n   return label;\n }\n \f"}, {"sha": "20670b94974d0989c0096873d8ba210cd3ea5efe", "filename": "gcc/final.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -2418,14 +2418,19 @@ final_scan_insn (insn, file, optimize, prescan, nopeepholes)\n \t      ASM_OUTPUT_CASE_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn),\n \t\t\t\t     NEXT_INSN (insn));\n #else\n-\t      ASM_OUTPUT_INTERNAL_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn));\n+              if (LABEL_ALTERNATE_NAME (insn))\n+                ASM_OUTPUT_ALTERNATE_LABEL_NAME (file, insn);\n+              else\n+\t        ASM_OUTPUT_INTERNAL_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn));\n #endif\n #endif\n \t      break;\n \t    }\n \t}\n-\n-      ASM_OUTPUT_INTERNAL_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn));\n+      if (LABEL_ALTERNATE_NAME (insn))\n+        ASM_OUTPUT_ALTERNATE_LABEL_NAME (file, insn);\n+      else\n+        ASM_OUTPUT_INTERNAL_LABEL (file, \"L\", CODE_LABEL_NUMBER (insn));\n       break;\n \n     default:"}, {"sha": "1a8aef538f921a710ae290cf474fb64b3f5e57ff", "filename": "gcc/ggc-common.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Fggc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Fggc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc-common.c?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -252,6 +252,7 @@ ggc_mark_rtx_children (r)\n       break;\n     case CODE_LABEL:\n       ggc_mark_rtx (LABEL_REFS (r));\n+      ggc_mark_string (LABEL_ALTERNATE_NAME (r));\n       break;\n     case LABEL_REF:\n       ggc_mark_rtx (LABEL_NEXTREF (r));"}, {"sha": "4c8e977592757e8549b3ec55b4e02c7115266b70", "filename": "gcc/jump.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Fjump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Fjump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjump.c?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -2433,7 +2433,9 @@ delete_unreferenced_labels (f)\n \n   for (insn = f; insn; )\n     {\n-      if (GET_CODE (insn) == CODE_LABEL && LABEL_NUSES (insn) == 0)\n+      if (GET_CODE (insn) == CODE_LABEL\n+          && LABEL_NUSES (insn) == 0\n+          && LABEL_ALTERNATE_NAME (insn) == NULL)\n \tinsn = delete_insn (insn);\n       else\n \t{"}, {"sha": "ef8a40204ae2eb388f20438356ee982e223407d8", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -354,7 +354,11 @@ print_rtx (in_rtx)\n #endif\n \n   if (GET_CODE (in_rtx) == CODE_LABEL)\n-    fprintf (outfile, \" [num uses: %d]\", LABEL_NUSES (in_rtx));\n+    {\n+      fprintf (outfile, \" [num uses: %d]\", LABEL_NUSES (in_rtx));\n+      if (LABEL_ALTERNATE_NAME (in_rtx))\n+        fprintf (outfile, \" [alternate name: %s]\", LABEL_ALTERNATE_NAME (in_rtx));\n+    }\n   \n   if (dump_for_graph\n       && (is_insn || GET_CODE (in_rtx) == NOTE"}, {"sha": "2c323fc823950262cfadf78bf25694524c32bb0a", "filename": "gcc/rtl.def", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -376,8 +376,9 @@ DEF_RTL_EXPR(BARRIER, \"barrier\", \"iuu\", 'x')\n    3: is a number that is unique in the entire compilation.\n    4: is the user-given name of the label, if any.\n    5: is used in jump.c for the use-count of the label.\n-   6: is used in flow.c to point to the chain of label_ref's to this label.  */\n-DEF_RTL_EXPR(CODE_LABEL, \"code_label\", \"iuuis00\", 'x')\n+   6: is used in flow.c to point to the chain of label_ref's to this label.\n+   7: is the alternate label name.  */\n+DEF_RTL_EXPR(CODE_LABEL, \"code_label\", \"iuuis00s\", 'x')\n      \n /* Say where in the code a source line starts, for symbol table's sake.\n    Contains a filename and a line number.  Line numbers <= 0 are special:"}, {"sha": "a723c7fbe8aa3efb435e846f75d614664c4f8e46", "filename": "gcc/rtl.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -597,6 +597,9 @@ extern const char * const note_insn_name[];\n    of LABEL_REFs that point at it, so unused labels can be deleted.  */\n #define LABEL_NUSES(RTX) XCINT(RTX, 5, CODE_LABEL)\n \n+/* Associate a name with a CODE_LABEL.  */\n+#define LABEL_ALTERNATE_NAME(RTX) XCSTR(RTX, 7, CODE_LABEL)\n+\n /* The original regno this ADDRESSOF was built for.  */\n #define ADDRESSOF_REGNO(RTX) XCINT(RTX, 1, ADDRESSOF)\n "}, {"sha": "6ad3b8a33c12297f23838140542ceb11ac033429", "filename": "gcc/rtl.texi", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.texi?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -2384,6 +2384,11 @@ The field @code{LABEL_NUSES} is only defined once the jump optimization\n phase is completed and contains the number of times this label is\n referenced in the current function.\n \n+@findex LABEL_ALTERNATE_NAME\n+The field @code{LABEL_ALTERNATE_NAME} is used to associate a name with\n+a @code{code_label}.  If this field is defined, the alternate name will\n+be emitted instead of an internally generated label name.\n+\n @findex barrier\n @item barrier\n Barriers are placed in the instruction stream when control cannot flow"}, {"sha": "283eb686e1a0c998055951145f867eb294e0505d", "filename": "gcc/tm.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cd0faaf3206d06e32552108f6e66674730d2e7d/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=8cd0faaf3206d06e32552108f6e66674730d2e7d", "patch": "@@ -5736,6 +5736,17 @@ The usual definition of this macro is as follows:\n fprintf (@var{stream}, \"L%s%d:\\n\", @var{prefix}, @var{num})\n @end example\n \n+@findex ASM_OUTPUT_ALTERNATE_LABEL_NAME\n+@item ASM_OUTPUT_ALTERNATE_LABEL_NAME (@var{stream}, @var{string})\n+A C statement to output to the stdio stream @var{stream} the string\n+@var{string}.\n+\n+The default definition of this macro is as follows:\n+\n+@example\n+fprintf (@var{stream}, \"%s:\\n\", LABEL_ALTERNATE_NAME (INSN))\n+@end example\n+\n @findex ASM_GENERATE_INTERNAL_LABEL\n @item ASM_GENERATE_INTERNAL_LABEL (@var{string}, @var{prefix}, @var{num})\n A C statement to store into the string @var{string} a label whose name"}]}