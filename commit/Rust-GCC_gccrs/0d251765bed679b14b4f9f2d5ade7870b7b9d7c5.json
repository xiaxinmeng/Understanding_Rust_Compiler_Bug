{"sha": "0d251765bed679b14b4f9f2d5ade7870b7b9d7c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQyNTE3NjViZWQ2NzliMTRiNGY5ZjJkNWFkZTc4NzBiN2I5ZDdjNQ==", "commit": {"author": {"name": "Bud Davis", "email": "jmdavis@link.com", "date": "2015-08-08T10:40:06Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2015-08-08T10:40:06Z"}, "message": "When undoing symbols, also restore common block lists\n\ngcc/fortran/\n2015-08-08  Bud Davis  <jmdavis@link.com>\n\t    Mikael Morin  <mikael@gcc.gnu.org>\n\n\tPR fortran/59746\n\t* symbol.c (gfc_restore_last_undo_checkpoint): Delete a common block\n\tsymbol if it was put in the list.\n\ngcc/testsuite/\n2015-08-08  Bud Davis  <jmdavis@link.com>\n\n\tPR fortran/59746\n\t* gfortran.dg/common_22.f90: New.\n\n\nCo-Authored-By: Mikael Morin <mikael@gcc.gnu.org>\n\nFrom-SVN: r226732", "tree": {"sha": "c8bd13a546047aec236cde7a6d75dd3216d8a6a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8bd13a546047aec236cde7a6d75dd3216d8a6a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/comments", "author": null, "committer": null, "parents": [{"sha": "1aeec6dc1f26657cc32ed107b3de255566fcca41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1aeec6dc1f26657cc32ed107b3de255566fcca41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1aeec6dc1f26657cc32ed107b3de255566fcca41"}], "stats": {"total": 104, "additions": 70, "deletions": 34}, "files": [{"sha": "bc2a28b030abf687b6553b51b29e7dd3b4a83c58", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=0d251765bed679b14b4f9f2d5ade7870b7b9d7c5", "patch": "@@ -1,3 +1,10 @@\n+2015-08-08  Bud Davis  <jmdavis@link.com>\n+\t    Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/59746\n+\t* symbol.c (gfc_restore_last_undo_checkpoint): Delete a common block\n+\tsymbol if it was put in the list.\n+\n 2015-08-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/64104"}, {"sha": "0f33608aa612d85e8943362b270c454b19ea2661", "filename": "gcc/fortran/symbol.c", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/gcc%2Ffortran%2Fsymbol.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/gcc%2Ffortran%2Fsymbol.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsymbol.c?ref=0d251765bed679b14b4f9f2d5ade7870b7b9d7c5", "patch": "@@ -3168,49 +3168,49 @@ gfc_restore_last_undo_checkpoint (void)\n \n   FOR_EACH_VEC_ELT (latest_undo_chgset->syms, i, p)\n     {\n-      if (p->gfc_new)\n+      /* Symbol was new. Or was old and just put in common */\n+      if ((p->gfc_new\n+\t   || (p->attr.in_common && !p->old_symbol->attr.in_common ))\n+\t  && p->attr.in_common && p->common_block && p->common_block->head)\n \t{\n-\t  /* Symbol was new.  */\n-\t  if (p->attr.in_common && p->common_block && p->common_block->head)\n-\t    {\n-\t      /* If the symbol was added to any common block, it\n-\t\t needs to be removed to stop the resolver looking\n-\t\t for a (possibly) dead symbol.  */\n+\t  /* If the symbol was added to any common block, it\n+\t     needs to be removed to stop the resolver looking\n+\t     for a (possibly) dead symbol.  */\n \n-\t      if (p->common_block->head == p && !p->common_next)\n+\t  if (p->common_block->head == p && !p->common_next)\n+\t    {\n+\t      gfc_symtree st, *st0;\n+\t      st0 = find_common_symtree (p->ns->common_root,\n+\t\t\t\t\t p->common_block);\n+\t      if (st0)\n \t\t{\n-\t\t  gfc_symtree st, *st0;\n-\t\t  st0 = find_common_symtree (p->ns->common_root,\n-\t\t\t\t\t     p->common_block);\n-\t\t  if (st0)\n-\t\t    {\n-\t\t      st.name = st0->name;\n-\t\t      gfc_delete_bbt (&p->ns->common_root, &st, compare_symtree);\n-\t\t      free (st0);\n-\t\t    }\n+\t\t  st.name = st0->name;\n+\t\t  gfc_delete_bbt (&p->ns->common_root, &st, compare_symtree);\n+\t\t  free (st0);\n \t\t}\n+\t    }\n \n-\t      if (p->common_block->head == p)\n-\t        p->common_block->head = p->common_next;\n-\t      else\n-\t\t{\n-\t\t  gfc_symbol *cparent, *csym;\n-\n-\t\t  cparent = p->common_block->head;\n-\t\t  csym = cparent->common_next;\n-\n-\t\t  while (csym != p)\n-\t\t    {\n-\t\t      cparent = csym;\n-\t\t      csym = csym->common_next;\n-\t\t    }\n+\t  if (p->common_block->head == p)\n+\t    p->common_block->head = p->common_next;\n+\t  else\n+\t    {\n+\t      gfc_symbol *cparent, *csym;\n \n-\t\t  gcc_assert(cparent->common_next == p);\n+\t      cparent = p->common_block->head;\n+\t      csym = cparent->common_next;\n \n-\t\t  cparent->common_next = csym->common_next;\n+\t      while (csym != p)\n+\t\t{\n+\t\t  cparent = csym;\n+\t\t  csym = csym->common_next;\n \t\t}\n-\t    }\n \n+\t      gcc_assert(cparent->common_next == p);\n+\t      cparent->common_next = csym->common_next;\n+\t    }\n+\t}\n+      if (p->gfc_new)\n+\t{\n \t  /* The derived type is saved in the symtree with the first\n \t     letter capitalized; the all lower-case version to the\n \t     derived type contains its associated generic function.  */"}, {"sha": "24dd966e7198ba447e5c3df1a857c56305990e8b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d251765bed679b14b4f9f2d5ade7870b7b9d7c5", "patch": "@@ -1,3 +1,8 @@\n+2015-08-08  Bud Davis  <jmdavis@link.com>\n+\n+\tPR fortran/59746\n+\t* gfortran.dg/common_22.f90: New.\n+\n 2015-08-08  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR rtl-optimization/67028"}, {"sha": "e2254099d72f581f463cf928ff8c957218c199df", "filename": "gcc/testsuite/gfortran.dg/common_22.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_22.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d251765bed679b14b4f9f2d5ade7870b7b9d7c5/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_22.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcommon_22.f90?ref=0d251765bed679b14b4f9f2d5ade7870b7b9d7c5", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+!\n+! PR fortran/59746\n+! Check that symbols present in common block are properly cleaned up\n+! upon error.\n+!\n+! Contributed by Bud Davis  <jmdavis@link.com>\n+\n+      CALL RCCFL (NVE,IR,NU3,VE (1,1,1,I))\n+      COMMON /CCFILE/ INTG,NT1,NT2,NT3,NVM,NVE,NFRLE,NRESF,NRESL !{ dg-error \"Unexpected COMMON\" }\n+      COMMON /CCFILE/ INTG,NT1,NT2,NT3,NVM,NVE,NFRLE,NRESF,NRESL !{ dg-error \"Unexpected COMMON\" }\n+!  the PR only contained the two above.\n+!  success is no segfaults or infinite loops.\n+!  let's check some combinations\n+     CALL ABC (INTG)\n+     COMMON /CCFILE/ INTG,NT1,NT2,NT3,NVM,NVE,NFRLE,NRESF,NRESL !{ dg-error \"Unexpected COMMON\" }\n+     COMMON /CCFILE/ INTG,NT1,NT2,NT3,NVM,NVE,NFRLE,NRESF,NRESL !{ dg-error \"Unexpected COMMON\" }\n+     CALL DEF (NT1)\n+     COMMON /CCFILE/ INTG,NT1,NT2,NT3,NVM,NVE,NFRLE,NRESF,NRESL !{ dg-error \"Unexpected COMMON\" }\n+     COMMON /CCFILE/ INTG,NT1,NT2,NT3,NVM,NVE,NFRLE,NRESF,NRESL !{ dg-error \"Unexpected COMMON\" }\n+     CALL GHI (NRESL)\n+     COMMON /CCFILE/ INTG,NT1,NT2,NT3,NVM,NVE,NFRLE,NRESF,NRESL !{ dg-error \"Unexpected COMMON\" }\n+     COMMON /CCFILE/ INTG,NT1,NT2,NT3,NVM,NVE,NFRLE,NRESF,NRESL !{ dg-error \"Unexpected COMMON\" }\n+     END"}]}