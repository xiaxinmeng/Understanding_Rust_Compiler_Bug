{"sha": "cedbd7647a1c6813b7da9833f14cb9671063cb72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VkYmQ3NjQ3YTFjNjgxM2I3ZGE5ODMzZjE0Y2I5NjcxMDYzY2I3Mg==", "commit": {"author": {"name": "Jan Sjodin", "email": "jan.sjodin@amd.com", "date": "2008-01-08T16:35:44Z"}, "committer": {"name": "Jan Sjodin", "email": "jsjodin@gcc.gnu.org", "date": "2008-01-08T16:35:44Z"}, "message": "2008-01-08  Jan Sjodin  <jan.sjodin@amd.com>\n\n       * config/i386/i386.c:\n        (k8_cost, amdfam10_cost): Branch costs for vectorization tuned.\n\nFrom-SVN: r131401", "tree": {"sha": "3a5d0fd45274816ce5e8102bd160646e969c58c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a5d0fd45274816ce5e8102bd160646e969c58c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cedbd7647a1c6813b7da9833f14cb9671063cb72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cedbd7647a1c6813b7da9833f14cb9671063cb72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cedbd7647a1c6813b7da9833f14cb9671063cb72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cedbd7647a1c6813b7da9833f14cb9671063cb72/comments", "author": null, "committer": null, "parents": [{"sha": "a9990582a84e6fac0f7274fae1686f209c58c457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9990582a84e6fac0f7274fae1686f209c58c457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9990582a84e6fac0f7274fae1686f209c58c457"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "d163f6ac4047dcf2ea12649312b2a541acb61f8c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cedbd7647a1c6813b7da9833f14cb9671063cb72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cedbd7647a1c6813b7da9833f14cb9671063cb72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cedbd7647a1c6813b7da9833f14cb9671063cb72", "patch": "@@ -1,3 +1,8 @@\n+2008-01-08  Jan Sjodin  <jan.sjodin@amd.com>\n+\t\n+\t* config/i386/i386.c:\n+\t(k8_cost, amdfam10_cost): Branch costs for vectorization tuned.\n+\t\n 2008-01-08  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/34683"}, {"sha": "599f8646e1bca218c522939bbd034084d0ac9940", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cedbd7647a1c6813b7da9833f14cb9671063cb72/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cedbd7647a1c6813b7da9833f14cb9671063cb72/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=cedbd7647a1c6813b7da9833f14cb9671063cb72", "patch": "@@ -701,7 +701,7 @@ struct processor_costs k8_cost = {\n      to limit number of prefetches at all, as their execution also takes some\n      time).  */\n   100,\t\t\t\t\t/* number of parallel prefetches */\n-  5,\t\t\t\t\t/* Branch cost */\n+  3,\t\t\t\t\t/* Branch cost */\n   COSTS_N_INSNS (4),\t\t\t/* cost of FADD and FSUB insns.  */\n   COSTS_N_INSNS (4),\t\t\t/* cost of FMUL instruction.  */\n   COSTS_N_INSNS (19),\t\t\t/* cost of FDIV instruction.  */\n@@ -725,8 +725,8 @@ struct processor_costs k8_cost = {\n   2,                                    /* vec_align_load_cost.  */\n   3,                                    /* vec_unalign_load_cost.  */\n   3,                                    /* vec_store_cost.  */\n-  6,                                    /* cond_taken_branch_cost.  */\n-  1,                                    /* cond_not_taken_branch_cost.  */\n+  3,                                    /* cond_taken_branch_cost.  */\n+  2,                                    /* cond_not_taken_branch_cost.  */\n };\n \n struct processor_costs amdfam10_cost = {\n@@ -787,7 +787,7 @@ struct processor_costs amdfam10_cost = {\n      to limit number of prefetches at all, as their execution also takes some\n      time).  */\n   100,\t\t\t\t\t/* number of parallel prefetches */\n-  5,\t\t\t\t\t/* Branch cost */\n+  2,\t\t\t\t\t/* Branch cost */\n   COSTS_N_INSNS (4),\t\t\t/* cost of FADD and FSUB insns.  */\n   COSTS_N_INSNS (4),\t\t\t/* cost of FMUL instruction.  */\n   COSTS_N_INSNS (19),\t\t\t/* cost of FDIV instruction.  */\n@@ -812,7 +812,7 @@ struct processor_costs amdfam10_cost = {\n   2,                                    /* vec_align_load_cost.  */\n   2,                                    /* vec_unalign_load_cost.  */\n   2,                                    /* vec_store_cost.  */\n-  6,                                    /* cond_taken_branch_cost.  */\n+  2,                                    /* cond_taken_branch_cost.  */\n   1,                                    /* cond_not_taken_branch_cost.  */\n };\n "}]}