{"sha": "aa06e8f5d2eee1cef86465b19b75339df51c2fdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEwNmU4ZjVkMmVlZTFjZWY4NjQ2NWIxOWI3NTMzOWRmNTFjMmZkZA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2002-12-06T19:43:22Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-12-06T19:43:22Z"}, "message": "sh.c (dump_table): DImode pool constants need only 32 bit alignment.\n\n\t* sh.c (dump_table): DImode pool constants need only 32 bit alignment.\n\tDFmode alignment depends on TARGET_FMOVD && TARGET_ALIGN_DOUBLE.\n\nFrom-SVN: r59891", "tree": {"sha": "47e73325ebf7db9c6aacadf4d33ee61335d89ad3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47e73325ebf7db9c6aacadf4d33ee61335d89ad3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa06e8f5d2eee1cef86465b19b75339df51c2fdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa06e8f5d2eee1cef86465b19b75339df51c2fdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa06e8f5d2eee1cef86465b19b75339df51c2fdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa06e8f5d2eee1cef86465b19b75339df51c2fdd/comments", "author": null, "committer": null, "parents": [{"sha": "0113c3c03e2c1c899ac52e0298107b3794e26317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0113c3c03e2c1c899ac52e0298107b3794e26317", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0113c3c03e2c1c899ac52e0298107b3794e26317"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "8eaad552d8eba372f35147e8df69647196b8c8f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa06e8f5d2eee1cef86465b19b75339df51c2fdd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa06e8f5d2eee1cef86465b19b75339df51c2fdd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa06e8f5d2eee1cef86465b19b75339df51c2fdd", "patch": "@@ -1,3 +1,8 @@\n+Fri Dec  6 19:36:24 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.c (dump_table): DImode pool constants need only 32 bit alignment.\n+\tDFmode alignment depends on TARGET_FMOVD && TARGET_ALIGN_DOUBLE.\n+\n Fri Dec  6 19:17:49 2002  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* sh.md (movdi_i): Name.  Remove inappropriate comment."}, {"sha": "5a31c844c3dd4f2ef577c9821f216b6bbda60737", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa06e8f5d2eee1cef86465b19b75339df51c2fdd/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa06e8f5d2eee1cef86465b19b75339df51c2fdd/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=aa06e8f5d2eee1cef86465b19b75339df51c2fdd", "patch": "@@ -2354,7 +2354,7 @@ dump_table (scan)\n   int i;\n   int need_align = 1;\n   rtx lab, ref;\n-  int have_di = 0;\n+  int have_df = 0;\n \n   /* Do two passes, first time dump out the HI sized constants.  */\n \n@@ -2379,13 +2379,13 @@ dump_table (scan)\n \t      scan = emit_insn_after (gen_consttable_window_end (lab), scan);\n \t    }\n \t}\n-      else if (p->mode == DImode || p->mode == DFmode)\n-\thave_di = 1;\n+      else if (p->mode == DFmode)\n+\thave_df = 1;\n     }\n \n   need_align = 1;\n \n-  if (TARGET_SHCOMPACT && have_di)\n+  if (TARGET_FMOVD && TARGET_ALIGN_DOUBLE && have_df)\n     {\n       rtx align_insn = NULL_RTX;\n \n@@ -2429,13 +2429,13 @@ dump_table (scan)\n \t\t}\n \t      break;\n \t    case DFmode:\n-\t    case DImode:\n \t      if (need_align)\n \t\t{\n \t\t  scan = emit_insn_after (gen_align_log (GEN_INT (3)), scan);\n \t\t  align_insn = scan;\n \t\t  need_align = 0;\n \t\t}\n+\t    case DImode:\n \t      for (lab = p->label; lab; lab = LABEL_REFS (lab))\n \t\tscan = emit_label_after (lab, scan);\n \t      scan = emit_insn_after (gen_consttable_8 (p->value, const0_rtx),"}]}