{"sha": "0d57d3e06be746b68022464c332ff0e5313fa87e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1N2QzZTA2YmU3NDZiNjgwMjI0NjRjMzMyZmYwZTUzMTNmYTg3ZQ==", "commit": {"author": {"name": "Max Ostapenko", "email": "m.ostapenko@partner.samsung.com", "date": "2015-10-21T07:44:35Z"}, "committer": {"name": "Maxim Ostapenko", "email": "chefmax@gcc.gnu.org", "date": "2015-10-21T07:44:35Z"}, "message": "re PR sanitizer/63958 (bootstrap failure in the sanitizer libs on sparc-linux-gnu)\n\nlibsanitizer/\n\n\tPR sanitizer/63958\n\tReapply:\n\t2014-10-14  David S. Miller  <davem@davemloft.net>\n\n\t* sanitizer_common/sanitizer_platform_limits_linux.cc (time_t):\n\tDefine at __kernel_time_t, as needed for sparc.\n\t(struct __old_kernel_stat): Don't check if __sparc__ is defined.\n\t* libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h\n\t(__sanitizer): Define struct___old_kernel_stat_sz,\n\tstruct_kernel_stat_sz, and struct_kernel_stat64_sz for sparc.\n\t(__sanitizer_ipc_perm): Adjust for sparc targets.\n\t(__sanitizer_shmid_ds): Likewsie.\n\t(__sanitizer_sigaction): Likewise.\n\t(IOC_SIZE): Likewsie.\n\nFrom-SVN: r229113", "tree": {"sha": "2cbc1c86ff2d7d21a8dbb944392ac4b09ad3abc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cbc1c86ff2d7d21a8dbb944392ac4b09ad3abc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d57d3e06be746b68022464c332ff0e5313fa87e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d57d3e06be746b68022464c332ff0e5313fa87e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d57d3e06be746b68022464c332ff0e5313fa87e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d57d3e06be746b68022464c332ff0e5313fa87e/comments", "author": null, "committer": null, "parents": [{"sha": "89e302b80c8b283a0e073a92fb2d52ad7ccb6eb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e302b80c8b283a0e073a92fb2d52ad7ccb6eb8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e302b80c8b283a0e073a92fb2d52ad7ccb6eb8"}], "stats": {"total": 79, "additions": 76, "deletions": 3}, "files": [{"sha": "4e463efec4665bcf578f334d3b5d16ddeffe89e5", "filename": "libsanitizer/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d57d3e06be746b68022464c332ff0e5313fa87e/libsanitizer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d57d3e06be746b68022464c332ff0e5313fa87e/libsanitizer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2FChangeLog?ref=0d57d3e06be746b68022464c332ff0e5313fa87e", "patch": "@@ -1,3 +1,20 @@\n+2015-10-21  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n+\n+\tPR sanitizer/63958\n+\tReapply:\n+\t2014-10-14  David S. Miller  <davem@davemloft.net>\n+\n+\t* sanitizer_common/sanitizer_platform_limits_linux.cc (time_t):\n+\tDefine at __kernel_time_t, as needed for sparc.\n+\t(struct __old_kernel_stat): Don't check if __sparc__ is defined.\n+\t* libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h\n+\t(__sanitizer): Define struct___old_kernel_stat_sz,\n+\tstruct_kernel_stat_sz, and struct_kernel_stat64_sz for sparc.\n+\t(__sanitizer_ipc_perm): Adjust for sparc targets.\n+\t(__sanitizer_shmid_ds): Likewsie.\n+\t(__sanitizer_sigaction): Likewise.\n+\t(IOC_SIZE): Likewsie.\n+\n 2015-10-21  Maxim Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \t* All source files: Merge from upstream r250806."}, {"sha": "a1f043250331ade7894e58fa3074b439e9361042", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d57d3e06be746b68022464c332ff0e5313fa87e/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d57d3e06be746b68022464c332ff0e5313fa87e/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_linux.cc?ref=0d57d3e06be746b68022464c332ff0e5313fa87e", "patch": "@@ -36,6 +36,7 @@\n #define uid_t __kernel_uid_t\n #define gid_t __kernel_gid_t\n #define off_t __kernel_off_t\n+#define time_t __kernel_time_t\n // This header seems to contain the definitions of _kernel_ stat* structs.\n #include <asm/stat.h>\n #undef ino_t\n@@ -60,7 +61,7 @@ namespace __sanitizer {\n }  // namespace __sanitizer\n \n #if !defined(__powerpc64__) && !defined(__x86_64__) && !defined(__aarch64__)\\\n-                            && !defined(__mips__)\n+                            && !defined(__mips__) && !defined(__sparc__)\n COMPILER_CHECK(struct___old_kernel_stat_sz == sizeof(struct __old_kernel_stat));\n #endif\n "}, {"sha": "2c6c6e2a44cb7c45ae85297cd48d46f0ff908c2c", "filename": "libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h", "status": "modified", "additions": 57, "deletions": 2, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d57d3e06be746b68022464c332ff0e5313fa87e/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d57d3e06be746b68022464c332ff0e5313fa87e/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libsanitizer%2Fsanitizer_common%2Fsanitizer_platform_limits_posix.h?ref=0d57d3e06be746b68022464c332ff0e5313fa87e", "patch": "@@ -81,6 +81,14 @@ namespace __sanitizer {\n   const unsigned struct_kernel_stat_sz = 144;\n   #endif\n   const unsigned struct_kernel_stat64_sz = 104;\n+#elif defined(__sparc__) && defined(__arch64__)\n+  const unsigned struct___old_kernel_stat_sz = 0;\n+  const unsigned struct_kernel_stat_sz = 104;\n+  const unsigned struct_kernel_stat64_sz = 144;\n+#elif defined(__sparc__) && !defined(__arch64__)\n+  const unsigned struct___old_kernel_stat_sz = 0;\n+  const unsigned struct_kernel_stat_sz = 64;\n+  const unsigned struct_kernel_stat64_sz = 104;\n #endif\n   struct __sanitizer_perf_event_attr {\n     unsigned type;\n@@ -103,7 +111,7 @@ namespace __sanitizer {\n \n #if defined(__powerpc64__)\n   const unsigned struct___old_kernel_stat_sz = 0;\n-#else\n+#elif !defined(__sparc__)\n   const unsigned struct___old_kernel_stat_sz = 32;\n #endif\n \n@@ -194,6 +202,18 @@ namespace __sanitizer {\n     unsigned short __pad1;\n     unsigned long __unused1;\n     unsigned long __unused2;\n+#elif defined(__sparc__)\n+# if defined(__arch64__)\n+    unsigned mode;\n+    unsigned short __pad1;\n+# else\n+    unsigned short __pad1;\n+    unsigned short mode;\n+    unsigned short __pad2;\n+# endif\n+    unsigned short __seq;\n+    unsigned long long __unused1;\n+    unsigned long long __unused2;\n #else\n     unsigned short mode;\n     unsigned short __pad1;\n@@ -211,6 +231,26 @@ namespace __sanitizer {\n \n   struct __sanitizer_shmid_ds {\n     __sanitizer_ipc_perm shm_perm;\n+  #if defined(__sparc__)\n+  # if !defined(__arch64__)\n+    u32 __pad1;\n+  # endif\n+    long shm_atime;\n+  # if !defined(__arch64__)\n+    u32 __pad2;\n+  # endif\n+    long shm_dtime;\n+  # if !defined(__arch64__)\n+    u32 __pad3;\n+  # endif\n+    long shm_ctime;\n+    uptr shm_segsz;\n+    int shm_cpid;\n+    int shm_lpid;\n+    unsigned long shm_nattch;\n+    unsigned long __glibc_reserved1;\n+    unsigned long __glibc_reserved2;\n+  #else    \n   #ifndef __powerpc__\n     uptr shm_segsz;\n   #elif !defined(__powerpc64__)\n@@ -248,6 +288,7 @@ namespace __sanitizer {\n     uptr __unused4;\n     uptr __unused5;\n   #endif\n+#endif\n   };\n #elif SANITIZER_FREEBSD\n   struct __sanitizer_ipc_perm {\n@@ -565,9 +606,13 @@ namespace __sanitizer {\n #else\n     __sanitizer_sigset_t sa_mask;\n #ifndef __mips__\n+#if defined(__sparc__)\n+    unsigned long sa_flags;\n+#else\n     int sa_flags;\n #endif\n #endif\n+#endif\n #if SANITIZER_LINUX\n     void (*sa_restorer)();\n #endif\n@@ -809,7 +854,7 @@ struct __sanitizer_cookie_io_functions_t {\n \n #define IOC_NRBITS 8\n #define IOC_TYPEBITS 8\n-#if defined(__powerpc__) || defined(__powerpc64__) || defined(__mips__)\n+#if defined(__powerpc__) || defined(__powerpc64__) || defined(__mips__) || defined(__sparc__)\n #define IOC_SIZEBITS 13\n #define IOC_DIRBITS 3\n #define IOC_NONE 1U\n@@ -839,7 +884,17 @@ struct __sanitizer_cookie_io_functions_t {\n #define IOC_DIR(nr) (((nr) >> IOC_DIRSHIFT) & IOC_DIRMASK)\n #define IOC_TYPE(nr) (((nr) >> IOC_TYPESHIFT) & IOC_TYPEMASK)\n #define IOC_NR(nr) (((nr) >> IOC_NRSHIFT) & IOC_NRMASK)\n+\n+#if defined(__sparc__)\n+// In sparc the 14 bits SIZE field overlaps with the\n+// least significant bit of DIR, so either IOC_READ or\n+// IOC_WRITE shall be 1 in order to get a non-zero SIZE.\n+# define IOC_SIZE(nr)                       \\\n+  ((((((nr) >> 29) & 0x7) & (4U|2U)) == 0)? \\\n+   0 : (((nr) >> 16) & 0x3fff))\n+#else\n #define IOC_SIZE(nr) (((nr) >> IOC_SIZESHIFT) & IOC_SIZEMASK)\n+#endif\n \n   extern unsigned struct_ifreq_sz;\n   extern unsigned struct_termios_sz;"}]}