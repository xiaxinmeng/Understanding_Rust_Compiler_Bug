{"sha": "dcc61724f1453581d64ded7c641dec62e4e3c318", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNjNjE3MjRmMTQ1MzU4MWQ2NGRlZDdjNjQxZGVjNjJlNGUzYzMxOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2001-11-21T22:04:53Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2001-11-21T22:04:53Z"}, "message": "re PR libstdc++/4548 (When reserving a string to become smaller, program crashes)\n\n2001-11-21  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/4548\n\t* include/bits/basic_string.tcc (basic_string::reserve):  Never shrink\n\tbelow the current size.\n\t* testsuite/21_strings/capacity.cc (test02):  Add test.\n\nFrom-SVN: r47246", "tree": {"sha": "179e44e7ecf94dbb7f432620753976d7cd7b18da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/179e44e7ecf94dbb7f432620753976d7cd7b18da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcc61724f1453581d64ded7c641dec62e4e3c318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc61724f1453581d64ded7c641dec62e4e3c318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc61724f1453581d64ded7c641dec62e4e3c318", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc61724f1453581d64ded7c641dec62e4e3c318/comments", "author": null, "committer": null, "parents": [{"sha": "ae1139f97d3a90768228333a245f5ef4ed0f8326", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae1139f97d3a90768228333a245f5ef4ed0f8326", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae1139f97d3a90768228333a245f5ef4ed0f8326"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "deb1321957ee47f2031e2a0994ea2cf97fb5b73e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc61724f1453581d64ded7c641dec62e4e3c318/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc61724f1453581d64ded7c641dec62e4e3c318/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dcc61724f1453581d64ded7c641dec62e4e3c318", "patch": "@@ -1,3 +1,10 @@\n+2001-11-21  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/4548\n+\t* include/bits/basic_string.tcc (basic_string::reserve):  Never shrink\n+\tbelow the current size.\n+\t* testsuite/21_strings/capacity.cc (test02):  Add test.\n+\n 2001-11-19  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/doxygen/Intro.3:  More notes."}, {"sha": "d1dd1cb5d995da44d0cce041e8de4f6fcfa877b8", "filename": "libstdc++-v3/include/bits/basic_string.tcc", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc61724f1453581d64ded7c641dec62e4e3c318/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc61724f1453581d64ded7c641dec62e4e3c318/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.tcc?ref=dcc61724f1453581d64ded7c641dec62e4e3c318", "patch": "@@ -315,6 +315,9 @@ namespace std\n         {\n \t  if (__res > this->max_size())\n \t    __throw_length_error(\"basic_string::reserve\");\n+\t  // Make sure we don't shrink below the current size\n+\t  if (__res < this->size())\n+\t    __res = this->size();\n \t  allocator_type __a = get_allocator();\n \t  _CharT* __tmp = _M_rep()->_M_clone(__a, __res - this->size());\n \t  _M_rep()->_M_dispose(__a);"}, {"sha": "8239f1b648827be647b42ac6de99d512debd4361", "filename": "libstdc++-v3/testsuite/21_strings/capacity.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc61724f1453581d64ded7c641dec62e4e3c318/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc61724f1453581d64ded7c641dec62e4e3c318/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcapacity.cc?ref=dcc61724f1453581d64ded7c641dec62e4e3c318", "patch": "@@ -169,9 +169,30 @@ bool test01()\n   return test;\n }\n \n+// libstdc++/4548\n+// http://gcc.gnu.org/ml/libstdc++/2001-11/msg00150.html\n+bool test02()\n+{\n+  bool test = true;\n+\n+  std::string str01 = \"twelve chars\";\n+  // str01 becomes shared\n+  std::string str02 = str01;\n+  str01.reserve(1);\n+  VERIFY( str01.capacity() == 12 );\n+\n+#ifdef DEBUG_ASSERT\n+  assert(test);\n+#endif\n+\n+  return test;\n+}\n+\n+\n int main()\n {\n   test01();\n+  test02();\n \n   return 0;\n }"}]}