{"sha": "fa980e6b68e8c75b842532fff4ab6ea786a1959a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE5ODBlNmI2OGU4Yzc1Yjg0MjUzMmZmZjRhYjZlYTc4NmExOTU5YQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2001-12-08T11:16:59Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2001-12-08T11:16:59Z"}, "message": "arm.md (VUNSPEC_PREFETCH): Delete constant definition.\n\n* arm.md (VUNSPEC_PREFETCH): Delete constant definition.\n(prefetch): Rewrite using PREFETCH RTL primitive.\n* arm.h (arm_builtins): Delete ARM_BUILTIN_PREFETCH).\n* arm.c (arm_init_builtins): Don't initialize a builtin for\n__builtin_prefetch here.\n(arm_expand_builtin): Dont expand __builtin_prefetch here.\n\nFrom-SVN: r47790", "tree": {"sha": "f7f5769d63bfb75089fc454b28744cf0be1262b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7f5769d63bfb75089fc454b28744cf0be1262b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa980e6b68e8c75b842532fff4ab6ea786a1959a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa980e6b68e8c75b842532fff4ab6ea786a1959a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa980e6b68e8c75b842532fff4ab6ea786a1959a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa980e6b68e8c75b842532fff4ab6ea786a1959a/comments", "author": null, "committer": null, "parents": [{"sha": "fd9245b7ecffdca8ee3fa8adb4db82097470aec7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd9245b7ecffdca8ee3fa8adb4db82097470aec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd9245b7ecffdca8ee3fa8adb4db82097470aec7"}], "stats": {"total": 37, "additions": 13, "deletions": 24}, "files": [{"sha": "aa484d773de1764e2451b55f90e135df558d8d48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa980e6b68e8c75b842532fff4ab6ea786a1959a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa980e6b68e8c75b842532fff4ab6ea786a1959a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa980e6b68e8c75b842532fff4ab6ea786a1959a", "patch": "@@ -1,3 +1,12 @@\n+2001-12-08  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (VUNSPEC_PREFETCH): Delete constant definition.\n+\t(prefetch): Rewrite using PREFETCH RTL primitive.\n+\t* arm.h (arm_builtins): Delete ARM_BUILTIN_PREFETCH).\n+\t* arm.c (arm_init_builtins): Don't initialize a builtin for\n+\t__builtin_prefetch here.\n+\t(arm_expand_builtin): Dont expand __builtin_prefetch here.\n+\n 2001-12-08  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* final.c (cleanup_subreg_operands):  Use recog_data.operand_loc"}, {"sha": "c9e20d39088617d178482fed374d2d2f76f472cb", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa980e6b68e8c75b842532fff4ab6ea786a1959a/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa980e6b68e8c75b842532fff4ab6ea786a1959a/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=fa980e6b68e8c75b842532fff4ab6ea786a1959a", "patch": "@@ -9151,11 +9151,6 @@ arm_init_builtins ()\n   /* Initialize arm V5 builtins.  */\n   if (arm_arch5)\n     def_builtin (\"__builtin_clz\", int_ftype_int, ARM_BUILTIN_CLZ);\n-\n-  /* Initialize arm V5E builtins.  */\n-  if (arm_arch5e)\n-    def_builtin (\"__builtin_prefetch\", void_ftype_pchar,\n-\t\t ARM_BUILTIN_PREFETCH);\n }\n \n /* Expand an expression EXP that calls a built-in function,\n@@ -9203,19 +9198,6 @@ arm_expand_builtin (exp, target, subtarget, mode, ignore)\n \treturn 0;\n       emit_insn (pat);\n       return target;\n-\n-    case ARM_BUILTIN_PREFETCH:\n-      icode = CODE_FOR_prefetch;\n-      arg0 = TREE_VALUE (arglist);\n-      op0 = expand_expr (arg0, NULL_RTX, VOIDmode, 0);\n-\n-      op0 = gen_rtx_MEM (SImode, copy_to_mode_reg (Pmode, op0));\n-\n-      pat = GEN_FCN (icode) (op0);\n-      if (! pat)\n-\treturn 0;\n-      emit_insn (pat);\n-      return target;\n     }\n   \n   /* @@@ Should really do something sensible here.  */"}, {"sha": "4cb0954db210b70e45d92d1f9934b9144a2aedc2", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa980e6b68e8c75b842532fff4ab6ea786a1959a/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa980e6b68e8c75b842532fff4ab6ea786a1959a/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=fa980e6b68e8c75b842532fff4ab6ea786a1959a", "patch": "@@ -2907,7 +2907,6 @@ extern int making_const_table;\n enum arm_builtins\n {\n   ARM_BUILTIN_CLZ,\n-  ARM_BUILTIN_PREFETCH,\n   ARM_BUILTIN_MAX\n };\n #endif /* ! GCC_ARM_H */"}, {"sha": "f7d9b64d4c0e24062f9ff94a6c25d0a2eb9a03bc", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa980e6b68e8c75b842532fff4ab6ea786a1959a/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa980e6b68e8c75b842532fff4ab6ea786a1959a/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=fa980e6b68e8c75b842532fff4ab6ea786a1959a", "patch": "@@ -88,8 +88,6 @@\n \t\t\t;   a 32-bit object.\n    (VUNSPEC_POOL_8   7) ; `pool-entry(8)'.  An entry in the constant pool for\n \t\t\t;   a 64-bit object.\n-   (VUNSPEC_PREFETCH 8) ; `pld' insn to prefetch a cache line:\n-\t\t\t;   operand 0 is the address to fetch.\n   ]\n )\n \f\n@@ -9173,10 +9171,11 @@\n ;; V5E instructions.\n \n (define_insn \"prefetch\"\n-  [(unspec_volatile\n-    [(match_operand:SI 0 \"offsettable_memory_operand\" \"o\")] VUNSPEC_PREFETCH)]\n+  [(prefetch (match_operand:SI 0 \"address_operand\" \"p\")\n+\t     (match_operand:SI 1 \"\" \"\")\n+\t     (match_operand:SI 2 \"\" \"\"))]\n   \"TARGET_ARM && arm_arch5e\"\n-  \"pld\\\\t%0\")\n+  \"pld\\\\t[%0]\")\n \n ;; General predication pattern\n "}]}