{"sha": "14a0f2ce316f0687ad09fa3b279e3c724d00151b", "node_id": "C_kwDOANBUbNoAKDE0YTBmMmNlMzE2ZjA2ODdhZDA5ZmEzYjI3OWUzYzcyNGQwMDE1MWI", "commit": {"author": {"name": "Rodrigo Valle", "email": "rdan.valle@gmail.com", "date": "2021-10-06T19:55:25Z"}, "committer": {"name": "Rodrigo Valle", "email": "rdan.valle@gmail.com", "date": "2021-10-16T02:54:57Z"}, "message": "Add array constant folding\n\nCreate a new ConstFoldArrayElems folder to visit ArrayElemsValues while holding\nonto the original ArrayExpr object that we recurse into.\n\nFixes #681\n\nSigned-off-by: Rodrigo Valle <rdan.valle@gmail.com>", "tree": {"sha": "267c4eef60bfba0e3296a6b68d3150481f533922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/267c4eef60bfba0e3296a6b68d3150481f533922"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14a0f2ce316f0687ad09fa3b279e3c724d00151b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a0f2ce316f0687ad09fa3b279e3c724d00151b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a0f2ce316f0687ad09fa3b279e3c724d00151b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a0f2ce316f0687ad09fa3b279e3c724d00151b/comments", "author": {"login": "rodrigovalle", "id": 2037734, "node_id": "MDQ6VXNlcjIwMzc3MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2037734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigovalle", "html_url": "https://github.com/rodrigovalle", "followers_url": "https://api.github.com/users/rodrigovalle/followers", "following_url": "https://api.github.com/users/rodrigovalle/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigovalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigovalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigovalle/subscriptions", "organizations_url": "https://api.github.com/users/rodrigovalle/orgs", "repos_url": "https://api.github.com/users/rodrigovalle/repos", "events_url": "https://api.github.com/users/rodrigovalle/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigovalle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rodrigovalle", "id": 2037734, "node_id": "MDQ6VXNlcjIwMzc3MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2037734?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrigovalle", "html_url": "https://github.com/rodrigovalle", "followers_url": "https://api.github.com/users/rodrigovalle/followers", "following_url": "https://api.github.com/users/rodrigovalle/following{/other_user}", "gists_url": "https://api.github.com/users/rodrigovalle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrigovalle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrigovalle/subscriptions", "organizations_url": "https://api.github.com/users/rodrigovalle/orgs", "repos_url": "https://api.github.com/users/rodrigovalle/repos", "events_url": "https://api.github.com/users/rodrigovalle/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrigovalle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5e389241dd7b6e4ce32c61f3ea11c3dbc2cb3e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e389241dd7b6e4ce32c61f3ea11c3dbc2cb3e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e389241dd7b6e4ce32c61f3ea11c3dbc2cb3e4"}], "stats": {"total": 73, "additions": 72, "deletions": 1}, "files": [{"sha": "0b46b699c843b038c2f8df8ceeba996191b0586c", "filename": "gcc/rust/typecheck/rust-hir-const-fold.cc", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a0f2ce316f0687ad09fa3b279e3c724d00151b/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a0f2ce316f0687ad09fa3b279e3c724d00151b/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.cc?ref=14a0f2ce316f0687ad09fa3b279e3c724d00151b", "patch": "@@ -70,5 +70,39 @@ ConstFoldItem::visit (HIR::ConstantItem &item)\n   folded = folded_expr;\n }\n \n+void\n+ConstFoldArrayElems::visit (HIR::ArrayElemsValues &elems)\n+{\n+  unsigned long index = 0;\n+  std::vector<unsigned long> indices;\n+  std::vector<Bexpression *> values;\n+\n+  TyTy::BaseType *tyty = nullptr;\n+  if (!tyctx->lookup_type (expr.get_mappings ().get_hirid (), &tyty))\n+    {\n+      rust_fatal_error (expr.get_locus (),\n+\t\t\t\"did not resolve type for array elems values\");\n+      return;\n+    }\n+\n+  Btype *btype = ConstFoldType::fold (tyty, ctx->get_backend ());\n+\n+  for (auto &value : elems.get_values ())\n+    {\n+      indices.push_back (index++);\n+      values.push_back (ConstFoldExpr::fold (value.get ()));\n+    }\n+\n+  folded\n+    = ctx->get_backend ()->array_constructor_expression (btype, indices, values,\n+\t\t\t\t\t\t\t expr.get_locus ());\n+}\n+\n+void\n+ConstFoldArrayElems::visit (HIR::ArrayElemsCopied &elems)\n+{\n+  // TODO\n+}\n+\n } // namespace ConstFold\n } // namespace Rust"}, {"sha": "788e5cbd3f5a07f1a15997d164a36ad040ee8e00", "filename": "gcc/rust/typecheck/rust-hir-const-fold.h", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a0f2ce316f0687ad09fa3b279e3c724d00151b/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a0f2ce316f0687ad09fa3b279e3c724d00151b/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Ftypecheck%2Frust-hir-const-fold.h?ref=14a0f2ce316f0687ad09fa3b279e3c724d00151b", "patch": "@@ -41,7 +41,11 @@ class ConstFoldType : public TyTy::TyVisitor\n \n   void visit (TyTy::ADTType &) override { gcc_unreachable (); }\n \n-  void visit (TyTy::ArrayType &) override { gcc_unreachable (); }\n+  void visit (TyTy::ArrayType &type) override\n+  {\n+    Btype *element_ty = ConstFoldType::fold (type.get_element_type (), backend);\n+    translated = backend->array_type (element_ty, type.get_capacity ());\n+  }\n \n   void visit (TyTy::ReferenceType &) override { gcc_unreachable (); }\n \n@@ -233,6 +237,32 @@ class ConstFoldItem : public ConstFoldBase\n   Bexpression *folded;\n };\n \n+class ConstFoldArrayElems : public ConstFoldBase\n+{\n+  using ConstFoldBase::visit;\n+\n+public:\n+  static Bexpression *fold (HIR::ArrayExpr &expr)\n+  {\n+    ConstFoldArrayElems folder (expr);\n+    HIR::ArrayElems *elems = expr.get_internal_elements ();\n+    elems->accept_vis (folder);\n+    return folder.folded;\n+  }\n+\n+  void visit (HIR::ArrayElemsValues &elems) override;\n+  void visit (HIR::ArrayElemsCopied &elems) override;\n+\n+private:\n+  ConstFoldArrayElems (HIR::ArrayExpr &expr)\n+    : ConstFoldBase (), folded (ctx->get_backend ()->error_expression ()),\n+      expr (expr)\n+  {}\n+\n+  Bexpression *folded;\n+  HIR::ArrayExpr &expr;\n+};\n+\n class ConstFoldExpr : public ConstFoldBase\n {\n   using ConstFoldBase::visit;\n@@ -361,6 +391,11 @@ class ConstFoldExpr : public ConstFoldBase\n     gcc_unreachable ();\n   }\n \n+  void visit (HIR::ArrayExpr &expr) override\n+  {\n+    folded = ConstFoldArrayElems::fold (expr);\n+  }\n+\n   void visit (HIR::ArithmeticOrLogicalExpr &expr) override\n   {\n     auto lhs = ConstFoldExpr::fold (expr.get_lhs ());"}, {"sha": "77d2aa14756cacc109ae27e203a7ffac86de3356", "filename": "gcc/testsuite/rust/compile/torture/.traits3.rs.swp", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a0f2ce316f0687ad09fa3b279e3c724d00151b/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2F.traits3.rs.swp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a0f2ce316f0687ad09fa3b279e3c724d00151b/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2F.traits3.rs.swp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2F.traits3.rs.swp?ref=14a0f2ce316f0687ad09fa3b279e3c724d00151b"}, {"sha": "e45c9389c9345a499e808266c156f0e7dcbcc3ed", "filename": "gcc/testsuite/rust/compile/torture/array_const_fold.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14a0f2ce316f0687ad09fa3b279e3c724d00151b/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Farray_const_fold.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14a0f2ce316f0687ad09fa3b279e3c724d00151b/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Farray_const_fold.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Farray_const_fold.rs?ref=14a0f2ce316f0687ad09fa3b279e3c724d00151b", "patch": "@@ -0,0 +1,2 @@\n+const TEST: [i32; 16] = [2, 6, 3, 10, 7, 0, 4, 13, 1, 11, 12, 5, 9, 14, 15, 8];\n+// { dg-warning \"unused name\" \"\" { target *-*-* } .-1 }\n\\ No newline at end of file"}]}