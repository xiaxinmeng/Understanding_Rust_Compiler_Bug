{"sha": "252f019e6c046e97e11b0906d78e9b7ace115c51", "node_id": "C_kwDOANBUbNoAKDI1MmYwMTllNmMwNDZlOTdlMTFiMDkwNmQ3OGU5YjdhY2UxMTVjNTE", "commit": {"author": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-02-21T08:48:16Z"}, "committer": {"name": "Pierre-Emmanuel Patry", "email": "pierre-emmanuel.patry@embecosm.com", "date": "2023-03-30T11:52:32Z"}, "message": "libproc_macro: Implement FromStr on bridge Literal\n\nImplement the trait FromStr on the internal rust Literal type.\n\nChangeLog:\n\n\t* librust/proc_macro/rust/bridge/literal.rs: Implement FromStr.\n\nSigned-off-by: Pierre-Emmanuel Patry <pierre-emmanuel.patry@embecosm.com>", "tree": {"sha": "49a96fdf4310e3fcfa1ba04b028b3e631a40969d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49a96fdf4310e3fcfa1ba04b028b3e631a40969d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/252f019e6c046e97e11b0906d78e9b7ace115c51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252f019e6c046e97e11b0906d78e9b7ace115c51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/252f019e6c046e97e11b0906d78e9b7ace115c51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/252f019e6c046e97e11b0906d78e9b7ace115c51/comments", "author": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "committer": {"login": "P-E-P", "id": 32375388, "node_id": "MDQ6VXNlcjMyMzc1Mzg4", "avatar_url": "https://avatars.githubusercontent.com/u/32375388?v=4", "gravatar_id": "", "url": "https://api.github.com/users/P-E-P", "html_url": "https://github.com/P-E-P", "followers_url": "https://api.github.com/users/P-E-P/followers", "following_url": "https://api.github.com/users/P-E-P/following{/other_user}", "gists_url": "https://api.github.com/users/P-E-P/gists{/gist_id}", "starred_url": "https://api.github.com/users/P-E-P/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/P-E-P/subscriptions", "organizations_url": "https://api.github.com/users/P-E-P/orgs", "repos_url": "https://api.github.com/users/P-E-P/repos", "events_url": "https://api.github.com/users/P-E-P/events{/privacy}", "received_events_url": "https://api.github.com/users/P-E-P/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "834f9425327768a02383109ce9aa3b1c8a67a822", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/834f9425327768a02383109ce9aa3b1c8a67a822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/834f9425327768a02383109ce9aa3b1c8a67a822"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "27aa2efe9d502d4e9c8061b24d3d5f000685d227", "filename": "librust/proc_macro/rust/bridge/literal.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/252f019e6c046e97e11b0906d78e9b7ace115c51/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/252f019e6c046e97e11b0906d78e9b7ace115c51/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/librust%2Fproc_macro%2Frust%2Fbridge%2Fliteral.rs?ref=252f019e6c046e97e11b0906d78e9b7ace115c51", "patch": "@@ -2,11 +2,14 @@ use bridge::span::Span;\n use std::convert::{TryFrom, TryInto};\n use std::ffi::c_uchar;\n use std::fmt;\n+use std::str::FromStr;\n+use LexError;\n \n extern \"C\" {\n     fn Literal__drop(literal: *const Literal);\n     fn Literal__string(str: *const c_uchar) -> Literal;\n     fn Literal__byte_string(bytes: *const u8) -> Literal;\n+    fn Literal__from_string(str: *const c_uchar, lit: *mut Literal) -> bool;\n }\n \n #[repr(C)]\n@@ -359,3 +362,18 @@ impl fmt::Display for Literal {\n         Ok(())\n     }\n }\n+\n+impl FromStr for Literal {\n+    type Err = LexError;\n+\n+    fn from_str(string: &str) -> Result<Self, LexError> {\n+        let mut lit = Literal::Char(0);\n+        // TODO: We might want to pass a LexError by reference to retrieve\n+        // error information\n+        if unsafe { Literal__from_string(string.as_ptr(), &mut lit as *mut Literal) } {\n+            Err(LexError)\n+        } else {\n+            Ok(lit)\n+        }\n+    }\n+}"}]}