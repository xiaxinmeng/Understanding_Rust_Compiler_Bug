{"sha": "4c07e6d67921bb0793890550094d464153e479eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMwN2U2ZDY3OTIxYmIwNzkzODkwNTUwMDk0ZDQ2NDE1M2U0NzllYg==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2021-04-12T21:20:33Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-29T14:23:47Z"}, "message": "[Ada] Overriding errors on renamings and instances overriding predefined operators\n\ngcc/ada/\n\n\t* sem_ch6.ads (Can_Override_Operator): Function declaration\n\tmoved from package body to package spec.\n\t* sem_ch6.adb (Check_Overriding_Indicator): Now use test of\n\twhether the subprogram's Chars is an operator name, to handle\n\tcases of function instances whose entity is\n\tN_Defining_Identifier rather than N_Defining_Operator_Symbol.\n\t(Can_Override_Operator): Function declaration moved to package\n\tspec.  Now use test of whether the subprogram's Chars is an\n\toperator name, to handle cases of function instances whose\n\tentity is N_Defining_Identifier rather than\n\tN_Defining_Operator_Symbol.\n\t* sem_ch8.adb (Analyze_Renamed_Subprogram): Check for\n\tpossibility of an overridden predefined operator, and suppress\n\tthe \"not overriding\" message in that case.", "tree": {"sha": "586196fcbe6843fecb25faed38f8ef48d7d17173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/586196fcbe6843fecb25faed38f8ef48d7d17173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c07e6d67921bb0793890550094d464153e479eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c07e6d67921bb0793890550094d464153e479eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c07e6d67921bb0793890550094d464153e479eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c07e6d67921bb0793890550094d464153e479eb/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "430d508058bfe1c88c582a2256ff4dc3854c369d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/430d508058bfe1c88c582a2256ff4dc3854c369d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/430d508058bfe1c88c582a2256ff4dc3854c369d"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "c361acc493732323365671e73c3cb42e66f84944", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c07e6d67921bb0793890550094d464153e479eb/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c07e6d67921bb0793890550094d464153e479eb/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=4c07e6d67921bb0793890550094d464153e479eb", "patch": "@@ -132,9 +132,6 @@ package body Sem_Ch6 is\n    --  Does all the real work of Analyze_Subprogram_Body. This is split out so\n    --  that we can use RETURN but not skip the debug output at the end.\n \n-   function Can_Override_Operator (Subp : Entity_Id) return Boolean;\n-   --  Returns true if Subp can override a predefined operator.\n-\n    procedure Check_Conformance\n      (New_Id                   : Entity_Id;\n       Old_Id                   : Entity_Id;\n@@ -7321,7 +7318,7 @@ package body Sem_Ch6 is\n       --  predefined signature, because we know already that there is no\n       --  explicit overridden operation.\n \n-      elsif Nkind (Subp) = N_Defining_Operator_Symbol then\n+      elsif Chars (Subp) in Any_Operator_Name then\n          if Must_Not_Override (Spec) then\n \n             --  If this is not a primitive or a protected subprogram, then\n@@ -8313,7 +8310,12 @@ package body Sem_Ch6 is\n       Typ : Entity_Id;\n \n    begin\n-      if Nkind (Subp) /= N_Defining_Operator_Symbol then\n+      --  Return False if not an operator. We test the name rather than testing\n+      --  that the Nkind is N_Defining_Operator_Symbol, because there are cases\n+      --  where an operator entity can be an N_Defining_Identifier (such as for\n+      --  function instantiations).\n+\n+      if Chars (Subp) not in Any_Operator_Name then\n          return False;\n \n       else"}, {"sha": "4afcf36c18dcb8bb2dca79a798d6629916862966", "filename": "gcc/ada/sem_ch6.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c07e6d67921bb0793890550094d464153e479eb/gcc%2Fada%2Fsem_ch6.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c07e6d67921bb0793890550094d464153e479eb/gcc%2Fada%2Fsem_ch6.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.ads?ref=4c07e6d67921bb0793890550094d464153e479eb", "patch": "@@ -51,6 +51,9 @@ package Sem_Ch6 is\n    --  and body declarations. Returns the defining entity for the\n    --  specification N.\n \n+   function Can_Override_Operator (Subp : Entity_Id) return Boolean;\n+   --  Returns true if Subp can override a predefined operator\n+\n    procedure Check_Conventions (Typ : Entity_Id);\n    --  Ada 2005 (AI-430): Check that the conventions of all inherited and\n    --  overridden dispatching operations of type Typ are consistent with their"}, {"sha": "aa33c50757543362801923869cca6a92f6ac8741", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c07e6d67921bb0793890550094d464153e479eb/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c07e6d67921bb0793890550094d464153e479eb/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=4c07e6d67921bb0793890550094d464153e479eb", "patch": "@@ -3299,7 +3299,9 @@ package body Sem_Ch8 is\n                Style.Missing_Overriding (N, Rename_Spec);\n             end if;\n \n-         elsif Must_Override (Specification (N)) then\n+         elsif Must_Override (Specification (N))\n+           and then not Can_Override_Operator (Rename_Spec)\n+         then\n             Error_Msg_NE (\"subprogram& is not overriding\", N, Rename_Spec);\n          end if;\n "}]}