{"sha": "3c0f2830ac9f8a97acbceb5af706d518a46250a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MwZjI4MzBhYzlmOGE5N2FjYmNlYjVhZjcwNmQ1MThhNDYyNTBhMQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2010-01-01T03:38:58Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2010-01-01T03:38:58Z"}, "message": "PR libstdc++/21772 part 3\n\n2009-12-31  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/21772 part 3\n\t* include/ext/throw_allocator.h: Add _GLIBCXX_IS_AGGREGATE.\n\t* testsuite/util/testsuite_container_traits.h (traits<std::map>):\n\tAdd has_insert.\n\t(traits<std::multimap>): Add has_insert.\n\t(traits<std::multiset>): Add has_size_type_constructor.\n\t* testsuite/23_containers/array/requirements/exception/\n\tgeneration_prohibited.cc: New.\n\t* testsuite/21_strings/basic_string/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/ext/vstring/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/unordered_map/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/multimap/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/set/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/unordered_multimap/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/forward_list/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/unordered_set/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/vector/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/deque/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/multiset/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/unordered_multiset/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\t* testsuite/23_containers/map/requirements/exception/\n\tbasic.cc: New.\n\tgeneration_prohibited.cc: New.\n\tpropagation_consistent.cc: New.\n\nFrom-SVN: r155545", "tree": {"sha": "e4291471e02a3091b05b1ec23e4ce54c7b345158", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e4291471e02a3091b05b1ec23e4ce54c7b345158"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c0f2830ac9f8a97acbceb5af706d518a46250a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0f2830ac9f8a97acbceb5af706d518a46250a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c0f2830ac9f8a97acbceb5af706d518a46250a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c0f2830ac9f8a97acbceb5af706d518a46250a1/comments", "author": null, "committer": null, "parents": [{"sha": "c448a85e09ecdcd100b43a9bd1a0d8d7272eb5f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c448a85e09ecdcd100b43a9bd1a0d8d7272eb5f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c448a85e09ecdcd100b43a9bd1a0d8d7272eb5f0"}], "stats": {"total": 1751, "additions": 1694, "deletions": 57}, "files": [{"sha": "e5064a33dc967e4b3d69a3901446cc7c6d8207b5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -1,3 +1,66 @@\n+2009-12-31  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/21772 part 3\n+\t* include/ext/throw_allocator.h: Add _GLIBCXX_IS_AGGREGATE.\n+\t* testsuite/util/testsuite_container_traits.h (traits<std::map>):\n+\tAdd has_insert.\n+\t(traits<std::multimap>): Add has_insert.\n+\t(traits<std::multiset>): Add has_size_type_constructor.\n+\t* testsuite/23_containers/array/requirements/exception/\n+\tgeneration_prohibited.cc: New.\n+\t* testsuite/21_strings/basic_string/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/ext/vstring/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/unordered_map/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/multimap/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/set/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/unordered_multimap/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/forward_list/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/unordered_set/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/vector/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/deque/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/multiset/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/unordered_multiset/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\t* testsuite/23_containers/map/requirements/exception/\n+\tbasic.cc: New.\n+\tgeneration_prohibited.cc: New.\n+\tpropagation_consistent.cc: New.\n+\n 2009-12-31  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* doc/xml/manual/intro.xml: Order TR's at the end of status."}, {"sha": "f2e7553099db738190e5a416434d506e32308f6f", "filename": "libstdc++-v3/include/ext/throw_allocator.h", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fthrow_allocator.h?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -457,16 +457,16 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n       std::size_t\t\t\t       \t_M_i;\n \n+#ifndef _GLIBCXX_IS_AGGREGATE\n       throw_value_base() : _M_i(0)\n       { throw_conditionally(); }\n \n-      throw_value_base(const throw_value_base& __v)\n-      : _M_i(__v._M_i)\n+      throw_value_base(const throw_value_base& __v) : _M_i(__v._M_i)\n       { throw_conditionally(); }\n \n-      explicit throw_value_base(const std::size_t __i)\n-\t: _M_i(__i)\n+      explicit throw_value_base(const std::size_t __i) : _M_i(__i)\n       { throw_conditionally(); }\n+#endif\n \n       throw_value_base&\n       operator=(const throw_value_base& __v)\n@@ -553,31 +553,36 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       return __ret;\n     }\n \n+\n   /// Type throwing via limit condition.\n   struct throw_value_limit : public throw_value_base<limit_condition>\n   {\n     typedef throw_value_base<limit_condition> base_type;\n \n+#ifndef _GLIBCXX_IS_AGGREGATE\n     throw_value_limit() { }\n \n     throw_value_limit(const throw_value_limit& __other)\n     : base_type(__other._M_i) { }\n \n     explicit throw_value_limit(const std::size_t __i) : base_type(__i) { }\n+#endif\n   };\n \n   /// Type throwing via random condition.\n   struct throw_value_random : public throw_value_base<random_condition>\n   {\n     typedef throw_value_base<random_condition> base_type;\n \n+#ifndef _GLIBCXX_IS_AGGREGATE\n     throw_value_random() { }\n \n     throw_value_random(const throw_value_random& __other)\n     : base_type(__other._M_i) { }\n \n \n     explicit throw_value_random(const std::size_t __i) : base_type(__i) { }\n+#endif\n   };\n \n "}, {"sha": "1f6b970d2bfcc44beec5a85a493bb3d1fecd72e2", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/basic.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-10  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "211d7c21d89ede630472cd990d23e0f2d6b5d8b5", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,54 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <exception/safety.h>\n+\n+void\n+char_allocator()\n+{\n+  typedef char value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+}\n+\n+void\n+wchar_allocator()\n+{\n+  typedef wchar_t value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  // throw_allocator\n+  char_allocator();\n+  wchar_allocator();\n+\n+  return 0;\n+}"}, {"sha": "8e27a919ce136d513a6e86a7df1af5bf769c8207", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <string>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef std::basic_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "5ecf8fb2e394e9948b1187976fb98b8294409556", "filename": "libstdc++-v3/testsuite/23_containers/array/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Farray%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++0x -D_GLIBCXX_IS_AGGREGATE\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <array>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef std::array<value_type, 129> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "25629c1563e2f4c441dd3ece53ea490960b86eb9", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/exception/basic.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <deque>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::deque<value_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "23cde13f4dff502b0f765a5eadda813fe23279d8", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <deque>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::deque<value_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "14892344e9fda265e0c37959840788aeb6d0b9ef", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <deque>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::deque<value_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "672daf84018e2e304e7eb294825caaa50c5284d5", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/exception/basic.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <forward_list>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::forward_list<value_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "7d1764799d1774c1b65f5a99b5d507907a9083ea", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <forward_list>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::forward_list<value_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "5c426c93c18a84a587c8bd126a04d803d8f55175", "filename": "libstdc++-v3/testsuite/23_containers/forward_list/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fforward_list%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <forward_list>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::forward_list<value_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "d51f9f27d717eef0fd8ae892b1726a4302b5c2e3", "filename": "libstdc++-v3/testsuite/23_containers/map/requirements/exception/basic.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,43 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <map>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit key_type;\n+  typedef std::pair<const key_type, key_type> value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::less<key_type> compare_type;\n+  typedef std::map<key_type, key_type, compare_type, allocator_type> test_type;\n+\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "b01bba47dc8cbdcf7c1ba614418590b619e035f3", "filename": "libstdc++-v3/testsuite/23_containers/map/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <map>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random key_type;\n+  typedef std::pair<const key_type, key_type> value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::less<key_type> compare_type;\n+  typedef std::map<key_type, key_type, compare_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "20cf5e489037b91cd83132008e191802035ce6d9", "filename": "libstdc++-v3/testsuite/23_containers/map/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <map>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit key_type;\n+  typedef std::pair<const key_type, key_type> value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::less<key_type> compare_type;\n+  typedef std::map<key_type, key_type, compare_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "62fba44e02435b72c7ea929fa1ba63a59674f995", "filename": "libstdc++-v3/testsuite/23_containers/multimap/requirements/exception/basic.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,43 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <map>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit key_type;\n+  typedef std::pair<const key_type, key_type> value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::less<key_type> compare_type;\n+  typedef std::multimap<key_type, key_type, compare_type, allocator_type> test_type;\n+\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "817c3c8feb361472f7dec1f56f45eadd9683c3ae", "filename": "libstdc++-v3/testsuite/23_containers/multimap/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <map>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random key_type;\n+  typedef std::pair<const key_type, key_type> value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::less<key_type> compare_type;\n+  typedef std::multimap<key_type, key_type, compare_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "76087165ab92507da48bb3d08036cb16e84375e2", "filename": "libstdc++-v3/testsuite/23_containers/multimap/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <map>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit key_type;\n+  typedef std::pair<const key_type, key_type> value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::less<key_type> compare_type;\n+  typedef std::multimap<key_type, key_type, compare_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "4525843e12b4e645311b7b0b4ddb94105df734d1", "filename": "libstdc++-v3/testsuite/23_containers/multiset/requirements/exception/basic.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <set>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::less<value_type> compare_type;\n+  typedef std::multiset<value_type, compare_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "889b1067be09106b72b013a6e475ccaf6decd472", "filename": "libstdc++-v3/testsuite/23_containers/multiset/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <set>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::less<value_type> compare_type;\n+  typedef std::multiset<value_type, compare_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "b1dd057eb760839ba724aba4f2ff027843ae8268", "filename": "libstdc++-v3/testsuite/23_containers/multiset/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <set>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::less<value_type> compare_type;\n+  typedef std::multiset<value_type, compare_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "d9146e30c354fdad7da0fd5bba7a68c8d3470d76", "filename": "libstdc++-v3/testsuite/23_containers/set/requirements/exception/basic.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,41 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <set>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::less<value_type> compare_type;\n+  typedef std::set<value_type, compare_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "0536b99ac60ac261dbb119d59e977146afb5bb7c", "filename": "libstdc++-v3/testsuite/23_containers/set/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <set>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::less<value_type> compare_type;\n+  typedef std::set<value_type, compare_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "dccfd3a5fc830d185a7598f34edc8dd66cc00080", "filename": "libstdc++-v3/testsuite/23_containers/set/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <set>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::less<value_type> compare_type;\n+  typedef std::set<value_type, compare_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "9da9817c0927418f2887a8736f12cc9cad10c5b9", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/requirements/exception/basic.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_map<value_type, value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "5a3c6f8020b8a278e56bfb4473753107f04bbb10", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_map<value_type, value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "6399149b8b42fbcb6a6c6332358ad3bb8b3045c6", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x -O1\" } // XXX -O1 via PR42346\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_map<value_type, value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "c695f9c1a71ed502eea8d0a5587f7ce3c0cd483a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/requirements/exception/basic.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_multimap<value_type, value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "9426e9d4444bc1055a06a2503cf950fdb01f8c86", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_multimap<value_type, value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "921c54812a93205eff6f34537c09c6438803f025", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_map>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_multimap<value_type, value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "b0344e844d7cc2688b663b1d78935cd62d97b463", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/requirements/exception/basic.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_multiset<value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "a0d8abb542c63111174fc39af377fed10764451a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_multiset<value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "b0303c14d33b89ea27e517590bd3c6a3005f6e91", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_multiset<value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "6d0e3f52be3fccaf5f8ce92056aaf50b81744b09", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/requirements/exception/basic.cc", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,42 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_set<value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "0841cf0135bd4d35a231a50a1bc6e33393421e9f", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_set<value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "ab1d74d03db3c7318ac10b1bcb0f075b3b5de0f8", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <unordered_set>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::hash<value_type> hash_type;\n+  typedef std::equal_to<value_type> pred_type;\n+  typedef std::unordered_set<value_type, hash_type, pred_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "a31a05a06db5de7392de09f6f19215b540011c74", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/exception/basic.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,40 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-30  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::vector<value_type, allocator_type> test_type;\n+  __gnu_test::basic_safety<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "133928040ddd7538570fde476b47b3ff9e4afe8d", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,35 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+// { dg-do run { xfail *-*-* } }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_random value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::vector<value_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+  return 0;\n+}"}, {"sha": "7487ac372a73cbac0f29b9cede8138753e93eeb0", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,34 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-09  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <vector>\n+#include <exception/safety.h>\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  typedef __gnu_cxx::throw_value_limit value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::vector<value_type, allocator_type> test_type;\n+  __gnu_test::propagation_consistent<test_type> test;\n+  return 0;\n+}"}, {"sha": "a0042d488265e34ce828349fb630c45231000c69", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/basic.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fbasic.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,55 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-11-10  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ext/vstring.h>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+#if 1\n+  typedef char value_type;\n+#else\n+  // XXX\n+  // __gnu_cxx::__rc_string_base<>::_Rep::_M_align\u2019 with constructor\n+  // not allowed in union\n+  // typedef __gnu_cxx::throw_value_limit value_type;\n+#endif\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n+    allocator_type, __gnu_cxx::__rc_string_base> test_type_rc;\n+\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n+    allocator_type, __gnu_cxx::__sso_string_base> test_type_sso;\n+\n+  __gnu_test::basic_safety<test_type_rc> test_rc;\n+  __gnu_test::basic_safety<test_type_sso> test_sso;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "4ffe0df3bc4a32b8809934f6a0167aa4d33f9cd7", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/generation_prohibited.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fgeneration_prohibited.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,52 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ext/vstring.h>\n+#include <exception/safety.h>\n+\n+void\n+char_instance()\n+{\n+  typedef char value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+}\n+\n+void\n+wchar_instance()\n+{\n+  typedef wchar_t value_type;\n+  typedef __gnu_cxx::throw_allocator_random<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type, allocator_type> test_type;\n+  __gnu_test::generation_prohibited<test_type> test;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  char_instance();\n+  wchar_instance();\n+  return 0;\n+}"}, {"sha": "09d8618ab80cc291baa924779cb1a3805871fad4", "filename": "libstdc++-v3/testsuite/ext/vstring/requirements/exception/propagation_consistent.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fvstring%2Frequirements%2Fexception%2Fpropagation_consistent.cc?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -0,0 +1,55 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-require-cstdint \"\" }\n+\n+// 2009-09-14  Benjamin Kosnik  <benjamin@redhat.com>\n+\n+// Copyright (C) 2009 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <ext/vstring.h>\n+#include <exception/safety.h>\n+\n+void\n+value()\n+{\n+#if 1\n+  typedef char value_type;\n+#else\n+  // XXX\n+  // __gnu_cxx::__rc_string_base<>::_Rep::_M_align\u2019 with constructor\n+  // not allowed in union\n+  // typedef __gnu_cxx::throw_value_limit value_type;\n+#endif\n+  typedef __gnu_cxx::throw_allocator_limit<value_type> allocator_type;\n+  typedef std::char_traits<value_type> traits_type;\n+\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n+    allocator_type, __gnu_cxx::__rc_string_base> test_type_rc;\n+\n+  typedef __gnu_cxx::__versa_string<value_type, traits_type,\n+    allocator_type, __gnu_cxx::__sso_string_base> test_type_sso;\n+\n+  __gnu_test::propagation_consistent<test_type_rc> test_rc;\n+  __gnu_test::propagation_consistent<test_type_sso> test_sso;\n+}\n+\n+// Container requirement testing, exceptional behavior\n+int main()\n+{\n+  value();\n+  return 0;\n+}"}, {"sha": "8e9405cac0e991833e9bb0bcfc22961e7db5bb67", "filename": "libstdc++-v3/testsuite/util/testsuite_container_traits.h", "status": "modified", "additions": 54, "deletions": 53, "changes": 107, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_container_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c0f2830ac9f8a97acbceb5af706d518a46250a1/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_container_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_container_traits.h?ref=3c0f2830ac9f8a97acbceb5af706d518a46250a1", "patch": "@@ -99,6 +99,45 @@ namespace __gnu_test\n       typedef std::true_type\thas_size_type_constructor;\n     };\n \n+  template<typename _Tp1, typename _Tp2>\n+    struct traits<std::vector<_Tp1, _Tp2>> : public traits_base\n+    {\n+      typedef std::true_type    is_container;\n+      typedef std::true_type    is_reversible;\n+      typedef std::true_type    is_allocator_aware;\n+      typedef std::true_type    is_pointer_aware;\n+\n+      typedef std::true_type\thas_erase;\n+      typedef std::true_type\thas_insert;\n+      typedef std::true_type\thas_size_type_constructor;\n+    };\n+\n+  template<typename _Tp1, typename _Tp2, typename _Tp3>\n+    struct traits<std::basic_string<_Tp1, _Tp2, _Tp3>> : public traits_base\n+    {\n+      typedef std::true_type    is_container;\n+      typedef std::true_type    is_reversible;\n+      typedef std::true_type    is_allocator_aware;\n+      typedef std::true_type    is_pointer_aware;\n+\n+      typedef std::true_type\thas_erase;\n+      typedef std::true_type\thas_insert;\n+    };\n+\n+  template<typename _Tp1, typename _Tp2, typename _Tp3,\n+\t   template <typename, typename, typename> class _Tp4>\n+    struct traits<__gnu_cxx::__versa_string<_Tp1, _Tp2, _Tp3, _Tp4>>\n+    : public traits_base\n+    {\n+      typedef std::true_type    is_container;\n+      typedef std::true_type    is_reversible;\n+      typedef std::true_type    is_allocator_aware;\n+      typedef std::true_type    is_pointer_aware;\n+\n+      typedef std::true_type\thas_erase;\n+      //typedef std::true_type\thas_insert;  XXX no vstring<rc>::insert\n+    };\n+\n   template<typename _Tp1, typename _Tp2, typename _Tp3, typename _Tp4>\n     struct traits<std::map<_Tp1, _Tp2, _Tp3, _Tp4>> : public traits_base\n     {\n@@ -121,6 +160,20 @@ namespace __gnu_test\n       typedef std::true_type\tis_pointer_aware;\n       typedef std::true_type\tis_associative;\n       typedef std::true_type\tis_mapped;\n+\n+      typedef std::true_type\thas_insert;\n+    };\n+\n+  template<typename _Tp1, typename _Tp2, typename _Tp3>\n+    struct traits<std::set<_Tp1, _Tp2, _Tp3>> : public traits_base\n+    {\n+      typedef std::true_type\tis_container;\n+      typedef std::true_type\tis_reversible;\n+      typedef std::true_type\tis_allocator_aware;\n+      typedef std::true_type\tis_pointer_aware;\n+      typedef std::true_type\tis_associative;\n+\n+      typedef std::true_type\thas_insert;\n     };\n \n   template<typename _Tp1, typename _Tp2, typename _Tp3>\n@@ -147,18 +200,6 @@ namespace __gnu_test\n       typedef std::true_type\tis_adaptor;\n     };\n \n-  template<typename _Tp1, typename _Tp2, typename _Tp3>\n-    struct traits<std::set<_Tp1, _Tp2, _Tp3>> : public traits_base\n-    {\n-      typedef std::true_type\tis_container;\n-      typedef std::true_type\tis_reversible;\n-      typedef std::true_type\tis_allocator_aware;\n-      typedef std::true_type\tis_pointer_aware;\n-      typedef std::true_type\tis_associative;\n-\n-      typedef std::true_type\thas_insert;\n-    };\n-\n   template<typename _Tp1, typename _Tp2>\n     struct traits<std::stack<_Tp1, _Tp2> > : public traits_base\n     {\n@@ -203,6 +244,7 @@ namespace __gnu_test\n       typedef std::true_type\tis_pointer_aware;\n       typedef std::true_type\tis_unordered;\n \n+      typedef std::true_type\thas_size_type_constructor;\n       typedef std::true_type\thas_insert;\n     };\n \n@@ -218,47 +260,6 @@ namespace __gnu_test\n       typedef std::true_type\thas_size_type_constructor;\n       typedef std::true_type\thas_insert;\n     };\n-\n-  template<typename _Tp1, typename _Tp2>\n-    struct traits<std::vector<_Tp1, _Tp2>> : public traits_base\n-    {\n-      typedef std::true_type    is_container;\n-      typedef std::true_type    is_reversible;\n-      typedef std::true_type    is_allocator_aware;\n-      typedef std::true_type    is_pointer_aware;\n-\n-      typedef std::true_type\thas_erase;\n-      typedef std::true_type\thas_insert;\n-      typedef std::true_type\thas_size_type_constructor;\n-    };\n-\n-  template<typename _Tp1, typename _Tp2, typename _Tp3>\n-    struct traits<std::basic_string<_Tp1, _Tp2, _Tp3>> : public traits_base\n-    {\n-      typedef std::true_type    is_container;\n-      typedef std::true_type    is_reversible;\n-      typedef std::true_type    is_allocator_aware;\n-      typedef std::true_type    is_pointer_aware;\n-\n-      typedef std::true_type\thas_erase;\n-      typedef std::true_type\thas_insert;\n-    };\n-\n-  template<typename _Tp1, typename _Tp2, typename _Tp3,\n-\t   template <typename, typename, typename> class _Tp4>\n-    struct traits<__gnu_cxx::__versa_string<_Tp1, _Tp2, _Tp3, _Tp4>>\n-    : public traits_base\n-    {\n-      typedef std::true_type    is_container;\n-      typedef std::true_type    is_reversible;\n-      typedef std::true_type    is_allocator_aware;\n-      typedef std::true_type    is_pointer_aware;\n-\n-      typedef std::true_type\thas_erase;\n-\n-      // XXX no vstring<rc>::insert\n-      //      typedef std::true_type\thas_insert;\n-    };\n } // namespace __gnu_test\n \n #endif"}]}