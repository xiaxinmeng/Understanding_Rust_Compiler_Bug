{"sha": "6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFiNjAxZWZhYTgyYjQ3ZTBlYTFkM2M0YjE0ZTA1MmIwN2M3OTI4MA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-06-26T11:09:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-06-26T11:09:51Z"}, "message": "lto-streamer.h (lto_bitmap_alloc): Remove.\n\n2019-06-26  Richard Biener  <rguenther@suse.de>\n\n\t* lto-streamer.h (lto_bitmap_alloc): Remove.\n\t(lto_bitmap_free): Likewise.\n\t* lto-streamer.c (lto_bitmap_alloc): Remove.\n\t(lto_bitmap_free): Likewise.\n\t(lto_obstack): Likewise.\n\t(lto_obstack_initialized): Likewise.\n\t* lto-streamer-out.c (lto_output): Use own obstack for local\n\tbitmap, free it consistently.\n\nFrom-SVN: r272687", "tree": {"sha": "c69a4e5e8886fff358741931c089bdb0b7336a6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c69a4e5e8886fff358741931c089bdb0b7336a6c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cfb7260526af8cc8f8d416dcde0f8f8d397eb37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cfb7260526af8cc8f8d416dcde0f8f8d397eb37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cfb7260526af8cc8f8d416dcde0f8f8d397eb37"}], "stats": {"total": 64, "additions": 23, "deletions": 41}, "files": [{"sha": "3f4576fcefbebbf56a0b8620633fdc91c63ff0ba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "patch": "@@ -1,3 +1,14 @@\n+2019-06-26  Richard Biener  <rguenther@suse.de>\n+\n+\t* lto-streamer.h (lto_bitmap_alloc): Remove.\n+\t(lto_bitmap_free): Likewise.\n+\t* lto-streamer.c (lto_bitmap_alloc): Remove.\n+\t(lto_bitmap_free): Likewise.\n+\t(lto_obstack): Likewise.\n+\t(lto_obstack_initialized): Likewise.\n+\t* lto-streamer-out.c (lto_output): Use own obstack for local\n+\tbitmap, free it consistently.\n+\n 2019-06-26  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/90991"}, {"sha": "dc68429303c85c4176b7177e2a08afeb468dc1a6", "filename": "gcc/lto-streamer-out.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/gcc%2Flto-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/gcc%2Flto-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-out.c?ref=6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "patch": "@@ -2397,13 +2397,17 @@ lto_output (void)\n {\n   struct lto_out_decl_state *decl_state;\n   bitmap output = NULL;\n+  bitmap_obstack output_obstack;\n   int i, n_nodes;\n   lto_symtab_encoder_t encoder = lto_get_out_decl_state ()->symtab_node_encoder;\n \n   prune_offload_funcs ();\n \n   if (flag_checking)\n-    output = lto_bitmap_alloc ();\n+    {\n+      bitmap_obstack_initialize (&output_obstack);\n+      output = BITMAP_ALLOC (&output_obstack);\n+    }\n \n   /* Initialize the streamer.  */\n   lto_streamer_init ();\n@@ -2419,10 +2423,7 @@ lto_output (void)\n \t      && !node->alias)\n \t    {\n \t      if (flag_checking)\n-\t\t{\n-\t\t  gcc_assert (!bitmap_bit_p (output, DECL_UID (node->decl)));\n-\t\t  bitmap_set_bit (output, DECL_UID (node->decl));\n-\t\t}\n+\t\tgcc_assert (bitmap_set_bit (output, DECL_UID (node->decl)));\n \t      decl_state = lto_new_out_decl_state ();\n \t      lto_push_out_decl_state (decl_state);\n \t      if (gimple_has_body_p (node->decl)\n@@ -2452,10 +2453,7 @@ lto_output (void)\n \t    {\n \t      timevar_push (TV_IPA_LTO_CTORS_OUT);\n \t      if (flag_checking)\n-\t\t{\n-\t\t  gcc_assert (!bitmap_bit_p (output, DECL_UID (node->decl)));\n-\t\t  bitmap_set_bit (output, DECL_UID (node->decl));\n-\t\t}\n+\t\tgcc_assert (bitmap_set_bit (output, DECL_UID (node->decl)));\n \t      decl_state = lto_new_out_decl_state ();\n \t      lto_push_out_decl_state (decl_state);\n \t      if (DECL_INITIAL (node->decl) != error_mark_node\n@@ -2480,9 +2478,11 @@ lto_output (void)\n \n   output_offload_tables ();\n \n-#if CHECKING_P\n-  lto_bitmap_free (output);\n-#endif\n+  if (flag_checking)\n+    {\n+      BITMAP_FREE (output);\n+      bitmap_obstack_release (&output_obstack);\n+    }\n }\n \n /* Write each node in encoded by ENCODER to OB, as well as those reachable"}, {"sha": "bd0126faebbd4d0d182f9c4ba9dfca6468249e1f", "filename": "gcc/lto-streamer.c", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/gcc%2Flto-streamer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/gcc%2Flto-streamer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.c?ref=6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "patch": "@@ -35,11 +35,6 @@ along with GCC; see the file COPYING3.  If not see\n /* Statistics gathered during LTO, WPA and LTRANS.  */\n struct lto_stats_d lto_stats;\n \n-/* LTO uses bitmaps with different life-times.  So use a separate\n-   obstack for all LTO bitmaps.  */\n-static bitmap_obstack lto_obstack;\n-static bool lto_obstack_initialized;\n-\n const char *section_name_prefix = LTO_SECTION_NAME_PREFIX;\n /* Set when streaming LTO for offloading compiler.  */\n bool lto_stream_offload_p;\n@@ -113,28 +108,6 @@ lto_tag_name (enum LTO_tags tag)\n }\n \n \n-/* Allocate a bitmap from heap.  Initializes the LTO obstack if necessary.  */\n-\n-bitmap\n-lto_bitmap_alloc (void)\n-{\n-  if (!lto_obstack_initialized)\n-    {\n-      bitmap_obstack_initialize (&lto_obstack);\n-      lto_obstack_initialized = true;\n-    }\n-  return BITMAP_ALLOC (&lto_obstack);\n-}\n-\n-/* Free bitmap B.  */\n-\n-void\n-lto_bitmap_free (bitmap b)\n-{\n-  BITMAP_FREE (b);\n-}\n-\n-\n /* Get a section name for a particular type or name.  The NAME field\n    is only used if SECTION_TYPE is LTO_section_function_body. For all\n    others it is ignored.  The callee of this function is responsible"}, {"sha": "3b1e07b4bfc7a92aefc9b532c005cf0d79b0bc96", "filename": "gcc/lto-streamer.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/gcc%2Flto-streamer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ab601efaa82b47e0ea1d3c4b14e052b07c79280/gcc%2Flto-streamer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer.h?ref=6ab601efaa82b47e0ea1d3c4b14e052b07c79280", "patch": "@@ -822,8 +822,6 @@ extern void lto_append_block (struct lto_output_stream *);\n extern bool lto_stream_offload_p;\n \n extern const char *lto_tag_name (enum LTO_tags);\n-extern bitmap lto_bitmap_alloc (void);\n-extern void lto_bitmap_free (bitmap);\n extern char *lto_get_section_name (int, const char *, struct lto_file_decl_data *);\n extern void print_lto_report (const char *);\n extern void lto_streamer_init (void);"}]}