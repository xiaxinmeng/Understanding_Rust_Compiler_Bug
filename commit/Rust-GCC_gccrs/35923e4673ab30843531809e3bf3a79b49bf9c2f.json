{"sha": "35923e4673ab30843531809e3bf3a79b49bf9c2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU5MjNlNDY3M2FiMzA4NDM1MzE4MDllM2JmM2E3OWI0OWJmOWMyZg==", "commit": {"author": {"name": "Zhenqiang Chen", "email": "zhenqiang.chen@linaro.org", "date": "2014-04-22T08:12:22Z"}, "committer": {"name": "Zhenqiang Chen", "email": "zqchen@gcc.gnu.org", "date": "2014-04-22T08:12:22Z"}, "message": "arm.c (arm_print_operand, thumb_exit): Make sure GET_MODE_SIZE argument is enum machine_mode.\n\n2014-04-22  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n\n\t* config/arm/arm.c (arm_print_operand, thumb_exit): Make sure\n\tGET_MODE_SIZE argument is enum machine_mode.\n\nFrom-SVN: r209556", "tree": {"sha": "6e155624fb4297a20c5f38b22ce5d989b030e906", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e155624fb4297a20c5f38b22ce5d989b030e906"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35923e4673ab30843531809e3bf3a79b49bf9c2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35923e4673ab30843531809e3bf3a79b49bf9c2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35923e4673ab30843531809e3bf3a79b49bf9c2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35923e4673ab30843531809e3bf3a79b49bf9c2f/comments", "author": null, "committer": null, "parents": [{"sha": "4552e70cf784417acd6d04809691e00aa0810831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4552e70cf784417acd6d04809691e00aa0810831", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4552e70cf784417acd6d04809691e00aa0810831"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "df12253031f70e21b2302cb5838fd87a077a8203", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35923e4673ab30843531809e3bf3a79b49bf9c2f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35923e4673ab30843531809e3bf3a79b49bf9c2f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35923e4673ab30843531809e3bf3a79b49bf9c2f", "patch": "@@ -1,3 +1,8 @@\n+2014-04-22  Zhenqiang Chen  <zhenqiang.chen@linaro.org>\n+\n+\t* config/arm/arm.c (arm_print_operand, thumb_exit): Make sure\n+\tGET_MODE_SIZE argument is enum machine_mode.\n+\n 2014-04-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/60910"}, {"sha": "822060dd2f3278191cca5e4ff7802eba675d1949", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35923e4673ab30843531809e3bf3a79b49bf9c2f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35923e4673ab30843531809e3bf3a79b49bf9c2f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=35923e4673ab30843531809e3bf3a79b49bf9c2f", "patch": "@@ -21427,7 +21427,7 @@ arm_print_operand (FILE *stream, rtx x, int code)\n        register.  */\n     case 'p':\n       {\n-        int mode = GET_MODE (x);\n+        enum machine_mode mode = GET_MODE (x);\n         int regno;\n \n         if (GET_MODE_SIZE (mode) != 8 || !REG_P (x))\n@@ -21451,7 +21451,7 @@ arm_print_operand (FILE *stream, rtx x, int code)\n     case 'P':\n     case 'q':\n       {\n-\tint mode = GET_MODE (x);\n+\tenum machine_mode mode = GET_MODE (x);\n \tint is_quad = (code == 'q');\n \tint regno;\n \n@@ -21487,7 +21487,7 @@ arm_print_operand (FILE *stream, rtx x, int code)\n     case 'e':\n     case 'f':\n       {\n-        int mode = GET_MODE (x);\n+        enum machine_mode mode = GET_MODE (x);\n         int regno;\n \n         if ((GET_MODE_SIZE (mode) != 16\n@@ -21620,7 +21620,7 @@ arm_print_operand (FILE *stream, rtx x, int code)\n     /* Translate an S register number into a D register number and element index.  */\n     case 'y':\n       {\n-        int mode = GET_MODE (x);\n+        enum machine_mode mode = GET_MODE (x);\n         int regno;\n \n         if (GET_MODE_SIZE (mode) != 4 || !REG_P (x))\n@@ -21654,7 +21654,7 @@ arm_print_operand (FILE *stream, rtx x, int code)\n        number into a D register number and element index.  */\n     case 'z':\n       {\n-        int mode = GET_MODE (x);\n+        enum machine_mode mode = GET_MODE (x);\n         int regno;\n \n         if (GET_MODE_SIZE (mode) != 2 || !REG_P (x))\n@@ -25894,7 +25894,7 @@ thumb_exit (FILE *f, int reg_containing_return_addr)\n   int pops_needed;\n   unsigned available;\n   unsigned required;\n-  int mode;\n+  enum machine_mode mode;\n   int size;\n   int restore_a4 = FALSE;\n "}]}