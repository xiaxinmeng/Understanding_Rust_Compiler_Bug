{"sha": "4f100fd7dbccf6d55fc0821038b97f54ff97524f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYxMDBmZDdkYmNjZjZkNTVmYzA4MjEwMzhiOTdmNTRmZjk3NTI0Zg==", "commit": {"author": {"name": "Andris Pavenis", "email": "andris.pavenis@iki.fi", "date": "2016-10-11T18:12:52Z"}, "committer": {"name": "Andris Pavenis", "email": "andris@gcc.gnu.org", "date": "2016-10-11T18:12:52Z"}, "message": "ctrl_c.c: Do not use macro SA_RESTART for DJGPP.\n\n2016-10-11  Andris Pavenis  <andris.pavenis@iki.fi>\n\n\t* ctrl_c.c: Do not use macro SA_RESTART for DJGPP.\n\t* gsocket.h: Do not support sockets for DJGPP.\n\t* init.c (__gnat_install_handler): Implememt for DJGPP\n\t* sysdep.c: Include <io.h> for DJGPP\n\t(_setmode): Define to setmode for DJGPP\n\t(__gnat_set_mode): Add implementation for DJGPP\n\t(__gnat_localtime_tzoff): Use localtime_r for DJGPP\n\t* terminals.c: Add DJGPP to list of unsupported platforms.\n\t* env.c (__gnat_clearenv): use _gnat_unsetenv on all entries for DJGPP\n\nFrom-SVN: r240997", "tree": {"sha": "2cb06a0014c552f6834280a5627431cb6c2877ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cb06a0014c552f6834280a5627431cb6c2877ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f100fd7dbccf6d55fc0821038b97f54ff97524f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f100fd7dbccf6d55fc0821038b97f54ff97524f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f100fd7dbccf6d55fc0821038b97f54ff97524f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f100fd7dbccf6d55fc0821038b97f54ff97524f/comments", "author": {"login": "apavenis", "id": 33935463, "node_id": "MDQ6VXNlcjMzOTM1NDYz", "avatar_url": "https://avatars.githubusercontent.com/u/33935463?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apavenis", "html_url": "https://github.com/apavenis", "followers_url": "https://api.github.com/users/apavenis/followers", "following_url": "https://api.github.com/users/apavenis/following{/other_user}", "gists_url": "https://api.github.com/users/apavenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/apavenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apavenis/subscriptions", "organizations_url": "https://api.github.com/users/apavenis/orgs", "repos_url": "https://api.github.com/users/apavenis/repos", "events_url": "https://api.github.com/users/apavenis/events{/privacy}", "received_events_url": "https://api.github.com/users/apavenis/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a32fc2165b93b4ff31fb35d17afd6701de35721e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32fc2165b93b4ff31fb35d17afd6701de35721e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32fc2165b93b4ff31fb35d17afd6701de35721e"}], "stats": {"total": 65, "additions": 58, "deletions": 7}, "files": [{"sha": "96da7bfdc4c880f183bdf649343ddb098cd124c0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4f100fd7dbccf6d55fc0821038b97f54ff97524f", "patch": "@@ -1,3 +1,15 @@\n+2016-10-11  Andris Pavenis  <andris.pavenis@iki.fi>\n+\n+\t* ctrl_c.c: Do not use macro SA_RESTART for DJGPP.\n+\t* gsocket.h: Do not support sockets for DJGPP.\n+\t* init.c (__gnat_install_handler): Implememt for DJGPP\n+\t* sysdep.c: Include <io.h> for DJGPP\n+\t(_setmode): Define to setmode for DJGPP\n+\t(__gnat_set_mode): Add implementation for DJGPP\n+\t(__gnat_localtime_tzoff): Use localtime_r for DJGPP\n+\t* terminals.c: Add DJGPP to list of unsupported platforms.\n+\t* env.c (__gnat_clearenv): use _gnat_unsetenv on all entries for DJGPP\n+\n 2016-10-11  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \t* exp_dbug.adb (Debug_Renaming_Declaration): Process underlying types."}, {"sha": "b1bd08527a78bbbeb03aa6e21a22eb76103c1365", "filename": "gcc/ada/ctrl_c.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fctrl_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fctrl_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fctrl_c.c?ref=4f100fd7dbccf6d55fc0821038b97f54ff97524f", "patch": "@@ -92,8 +92,8 @@ __gnat_install_int_handler (void (*proc) (void))\n   if (sigint_intercepted == 0)\n     {\n       act.sa_handler = __gnat_int_handler;\n-#if defined (__Lynx__) || defined (VMS)\n-      /* LynxOS and VMS do not support SA_RESTART. */\n+#if defined (__Lynx__) || defined (VMS) || defined(__DJGPP__)\n+      /* LynxOS, VMS and DJGPP do not support SA_RESTART. */\n       act.sa_flags = 0;\n #else\n       act.sa_flags = SA_RESTART;"}, {"sha": "da6b7b0ad736edcbb1291aa8c59b79d7b3308583", "filename": "gcc/ada/env.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fenv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fenv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fenv.c?ref=4f100fd7dbccf6d55fc0821038b97f54ff97524f", "patch": "@@ -302,7 +302,7 @@ void __gnat_clearenv (void)\n #elif defined (__MINGW32__) || defined (__FreeBSD__) || defined (__APPLE__) \\\n    || (defined (__vxworks) && defined (__RTP__)) || defined (__CYGWIN__) \\\n    || defined (__NetBSD__) || defined (__OpenBSD__) || defined (__rtems__) \\\n-   || defined (__DragonFly__)\n+   || defined (__DragonFly__) || defined (__DJGPP__)\n   /* On Windows, FreeBSD and MacOS there is no function to clean all the\n      environment but there is a \"clean\" way to unset a variable. So go\n      through the environ table and call __gnat_unsetenv on all entries */"}, {"sha": "a979d3a0c1de0c0d70fd2d9ab47c890159bf7f61", "filename": "gcc/ada/gsocket.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fgsocket.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fgsocket.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgsocket.h?ref=4f100fd7dbccf6d55fc0821038b97f54ff97524f", "patch": "@@ -29,7 +29,7 @@\n  *                                                                          *\n  ****************************************************************************/\n \n-#if defined(VTHREADS) || defined(__PikeOS__)\n+#if defined(VTHREADS) || defined(__PikeOS__) || defined(__DJGPP__)\n \n /* Sockets not supported on these platforms.  */\n #undef HAVE_SOCKETS"}, {"sha": "cec968b9ae7fc9faae151869d8c046055f473b36", "filename": "gcc/ada/init.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=4f100fd7dbccf6d55fc0821038b97f54ff97524f", "patch": "@@ -2516,6 +2516,14 @@ __gnat_install_handler (void)\n   __gnat_handler_installed = 1;\n }\n \n+#elif defined (__DJGPP__)\n+\n+void\n+__gnat_install_handler ()\n+{\n+  __gnat_handler_installed = 1;\n+}\n+\n #elif defined(__ANDROID__)\n \n /*******************/"}, {"sha": "5390209fd168798deb274c4df7eeaa89de4748af", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 33, "deletions": 2, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=4f100fd7dbccf6d55fc0821038b97f54ff97524f", "patch": "@@ -126,7 +126,7 @@ extern struct tm *localtime_r(const time_t *, struct tm *);\n \n */\n \n-#if defined (WINNT) || defined (__CYGWIN__)\n+#if defined (WINNT) || defined (__CYGWIN__) || defined(__DJGPP__)\n \n const char __gnat_text_translation_required = 1;\n \n@@ -137,6 +137,11 @@ const char __gnat_text_translation_required = 1;\n #define WIN_SETMODE _setmode\n #endif\n \n+#if defined(__DJGPP__)\n+#include <io.h>\n+#define _setmode setmode\n+#endif /* __DJGPP__ */\n+\n void\n __gnat_set_binary_mode (int handle)\n {\n@@ -149,6 +154,30 @@ __gnat_set_text_mode (int handle)\n   WIN_SETMODE (handle, O_TEXT);\n }\n \n+#ifdef __DJGPP__\n+void\n+__gnat_set_mode (int handle, int mode)\n+{\n+  /*  the values here must be synchronized with\n+      System.File_Control_Block.Content_Encodding:\n+\n+      None         = 0\n+      Default_Text = 1\n+      Text         = 2\n+      U8text       = 3\n+      Wtext        = 4\n+      U16text      = 5  */\n+\n+ switch (mode) {\n+    case 0 : setmode(handle, O_BINARY);          break;\n+    case 1 : setmode(handle, O_TEXT);            break;\n+    case 2 : setmode(handle, O_TEXT);            break;\n+    case 3 : setmode(handle, O_TEXT);            break;\n+    case 4 : setmode(handle, O_BINARY);          break;\n+    case 5 : setmode(handle, O_BINARY);          break;\n+ }\n+}\n+#else\n void\n __gnat_set_mode (int handle, int mode)\n {\n@@ -171,6 +200,7 @@ __gnat_set_mode (int handle, int mode)\n     case 5 : WIN_SETMODE (handle, _O_U16TEXT);         break;\n  }\n }\n+#endif\n \n #ifdef __CYGWIN__\n \n@@ -795,7 +825,8 @@ __gnat_localtime_tzoff (const time_t *timer ATTRIBUTE_UNUSED,\n    struct tm */\n \n #elif defined (__APPLE__) || defined (__FreeBSD__) || defined (__linux__) \\\n-  || defined (__GLIBC__) || defined (__DragonFly__) || defined (__OpenBSD__)\n+  || defined (__GLIBC__) || defined (__DragonFly__) || defined (__OpenBSD__) \\\n+  || defined(__DJGPP__)\n {\n   localtime_r (timer, &tp);\n   *off = tp.tm_gmtoff;"}, {"sha": "675ac35c49a76d0ed4ae5993886f229f643751e0", "filename": "gcc/ada/terminals.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fterminals.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f100fd7dbccf6d55fc0821038b97f54ff97524f/gcc%2Fada%2Fterminals.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fterminals.c?ref=4f100fd7dbccf6d55fc0821038b97f54ff97524f", "patch": "@@ -32,7 +32,7 @@\n /* First all usupported platforms. Add stubs for exported routines. */\n \n #if defined (VMS) || defined (__vxworks) || defined (__Lynx__) \\\n-  || defined (__ANDROID__) || defined (__PikeOS__)\n+  || defined (__ANDROID__) || defined (__PikeOS__) || defined(__DJGPP__)\n \n #define ATTRIBUTE_UNUSED __attribute__((unused))\n "}]}