{"sha": "d4018fbf22bea208bc772d840cc3bb4948cd0654", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQwMThmYmYyMmJlYTIwOGJjNzcyZDg0MGNjM2JiNDk0OGNkMDY1NA==", "commit": {"author": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-09-28T00:23:58Z"}, "committer": {"name": "Paul Eggert", "email": "eggert@gnu.org", "date": "1993-09-28T00:23:58Z"}, "message": "(FILE_NAME_JOINER): Default is \"/\".\n\n(dbxout_init, dbxout_source_file): Quote special characters in file names.\n\nFrom-SVN: r5495", "tree": {"sha": "9ee8767e3b2e045386451bcb2fdb7243f46fadaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ee8767e3b2e045386451bcb2fdb7243f46fadaf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d4018fbf22bea208bc772d840cc3bb4948cd0654", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4018fbf22bea208bc772d840cc3bb4948cd0654", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4018fbf22bea208bc772d840cc3bb4948cd0654", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4018fbf22bea208bc772d840cc3bb4948cd0654/comments", "author": null, "committer": null, "parents": [{"sha": "99107e86f70870bb64f3712ab697aec39aae906b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99107e86f70870bb64f3712ab697aec39aae906b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99107e86f70870bb64f3712ab697aec39aae906b"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "5c7f642f615e410e74fb76b8f4c646efab6250e9", "filename": "gcc/dbxout.c", "status": "modified", "additions": 20, "deletions": 6, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4018fbf22bea208bc772d840cc3bb4948cd0654/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4018fbf22bea208bc772d840cc3bb4948cd0654/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=d4018fbf22bea208bc772d840cc3bb4948cd0654", "patch": "@@ -116,6 +116,10 @@ extern int errno;\n #define DBX_MEMPARM_STABS_LETTER 'p'\n #endif\n \n+#ifndef FILE_NAME_JOINER\n+#define FILE_NAME_JOINER \"/\"\n+#endif\n+\n /* Nonzero means if the type has methods, only output debugging\n    information if methods are actually written to the asm file.  */\n \n@@ -403,13 +407,20 @@ dbxout_init (asm_file, input_file_name, syms)\n   if (use_gnu_debug_info_extensions)\n #endif\n     {\n-      if (cwd || (cwd = getpwd ()))\n+      if (!cwd && (cwd = getpwd ()) && (!*cwd || cwd[strlen (cwd) - 1] != '/'))\n+\t{\n+\t  char *wdslash = xmalloc (strlen (cwd) + sizeof (FILE_NAME_JOINER));\n+\t  sprintf (wdslash, \"%s%s\", cwd, FILE_NAME_JOINER);\n+\t  cwd = wdslash;\n+\t}\n+      if (cwd)\n \t{\n #ifdef DBX_OUTPUT_MAIN_SOURCE_DIRECTORY\n \t  DBX_OUTPUT_MAIN_SOURCE_DIRECTORY (asmfile, cwd);\n #else /* no DBX_OUTPUT_MAIN_SOURCE_DIRECTORY */\n-\t  fprintf (asmfile, \"%s \\\"%s/\\\",%d,0,0,%s\\n\", ASM_STABS_OP,\n-\t\t   cwd, N_SO, &ltext_label_name[1]);\n+\t  fprintf (asmfile, \"%s \", ASM_STABS_OP);\n+\t  output_quoted_string (asmfile, cwd);\n+\t  fprintf (asmfile, \",%d,0,0,%s\\n\", N_SO, &ltext_label_name[1]);\n #endif /* no DBX_OUTPUT_MAIN_SOURCE_DIRECTORY */\n \t}\n     }\n@@ -422,7 +433,9 @@ dbxout_init (asm_file, input_file_name, syms)\n   /* We include outputting `Ltext:' here,\n      because that gives you a way to override it.  */\n   /* Used to put `Ltext:' before the reference, but that loses on sun 4.  */\n-  fprintf (asmfile, \"%s \\\"%s\\\",%d,0,0,%s\\n\", ASM_STABS_OP, input_file_name,\n+  fprintf (asmfile, \"%s \", ASM_STABS_OP);\n+  output_quoted_string (asmfile, input_file_name);\n+  fprintf (asmfile, \",%d,0,0,%s\\n\", \n \t   N_SO, &ltext_label_name[1]);\n   text_section ();\n   ASM_OUTPUT_INTERNAL_LABEL (asmfile, \"Ltext\", 0);\n@@ -496,8 +509,9 @@ dbxout_source_file (file, filename)\n       DBX_OUTPUT_SOURCE_FILENAME (file, filename);\n #else\n       ASM_GENERATE_INTERNAL_LABEL (ltext_label_name, \"Ltext\", 0);\n-      fprintf (file, \"%s \\\"%s\\\",%d,0,0,%s\\n\", ASM_STABS_OP,\n-\t       filename, N_SOL, &ltext_label_name[1]);\n+      fprintf (file, \"%s \", ASM_STABS_OP);\n+      output_quoted_string (file, filename);\n+      fprintf (file, \",%d,0,0,%s\\n\", N_SOL, &ltext_label_name[1]);\n #endif\n       lastfile = filename;\n     }"}]}