{"sha": "9bcf7121b65665d72790132ff071e07a1a634151", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJjZjcxMjFiNjU2NjVkNzI3OTAxMzJmZjA3MWUwN2ExYTYzNDE1MQ==", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2012-03-04T20:46:55Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2012-03-04T20:46:55Z"}, "message": "trans.h (struct gfc_ss_info): Move can_be_null_ref component from the data::scalar subcomponent to the toplevel.\n\nfortran/\n\t* trans.h (struct gfc_ss_info): Move can_be_null_ref component from\n\tthe data::scalar subcomponent to the toplevel.\n\t* trans-expr.c (gfc_conv_expr): Update component reference.\n\t* trans-array.c (gfc_add_loop_ss_code): Ditto.\n\t(gfc_walk_elemental_function_args): Ditto.  Move the conditional setting\n\tthe field out of the scalar-only block.\n\nFrom-SVN: r184893", "tree": {"sha": "9cce6361575bbd4622cd4602cd357413f033a401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cce6361575bbd4622cd4602cd357413f033a401"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bcf7121b65665d72790132ff071e07a1a634151", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bcf7121b65665d72790132ff071e07a1a634151", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bcf7121b65665d72790132ff071e07a1a634151", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bcf7121b65665d72790132ff071e07a1a634151/comments", "author": null, "committer": null, "parents": [{"sha": "904eea2c55c331ba5a836adb5e859ebce9ac9d53", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/904eea2c55c331ba5a836adb5e859ebce9ac9d53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/904eea2c55c331ba5a836adb5e859ebce9ac9d53"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "961bd4e18f29b0183515c7b3db2e30e7f20715e3", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bcf7121b65665d72790132ff071e07a1a634151/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bcf7121b65665d72790132ff071e07a1a634151/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=9bcf7121b65665d72790132ff071e07a1a634151", "patch": "@@ -1,3 +1,12 @@\n+2012-03-04  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\t* trans.h (struct gfc_ss_info): Move can_be_null_ref component from\n+\tthe data::scalar subcomponent to the toplevel.\n+\t* trans-expr.c (gfc_conv_expr): Update component reference.\n+\t* trans-array.c (gfc_add_loop_ss_code): Ditto.\n+\t(gfc_walk_elemental_function_args): Ditto.  Move the conditional setting\n+\tthe field out of the scalar-only block.\n+\n 2012-03-04  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/36160"}, {"sha": "b54c95b4087d2e4cd682b55eefb40e1c818ee09a", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bcf7121b65665d72790132ff071e07a1a634151/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bcf7121b65665d72790132ff071e07a1a634151/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=9bcf7121b65665d72790132ff071e07a1a634151", "patch": "@@ -2448,7 +2448,7 @@ gfc_add_loop_ss_code (gfc_loopinfo * loop, gfc_ss * ss, bool subscript,\n \tcase GFC_SS_REFERENCE:\n \t  /* Scalar argument to elemental procedure.  */\n \t  gfc_init_se (&se, NULL);\n-\t  if (ss_info->data.scalar.can_be_null_ref)\n+\t  if (ss_info->can_be_null_ref)\n \t    {\n \t      /* If the actual argument can be absent (in other words, it can\n \t\t be a NULL reference), don't try to evaluate it; pass instead\n@@ -8493,17 +8493,18 @@ gfc_walk_elemental_function_args (gfc_ss * ss, gfc_actual_arglist *arg,\n \t  newss = gfc_get_scalar_ss (head, arg->expr);\n \t  newss->info->type = type;\n \n-\t  if (dummy_arg != NULL\n-\t      && dummy_arg->sym->attr.optional\n-\t      && arg->expr->expr_type == EXPR_VARIABLE\n-\t      && (gfc_expr_attr (arg->expr).optional\n-\t\t  || gfc_expr_attr (arg->expr).allocatable\n-\t\t  || gfc_expr_attr (arg->expr).pointer))\n-\t    newss->info->data.scalar.can_be_null_ref = true;\n \t}\n       else\n \tscalar = 0;\n \n+      if (dummy_arg != NULL\n+\t  && dummy_arg->sym->attr.optional\n+\t  && arg->expr->expr_type == EXPR_VARIABLE\n+\t  && (gfc_expr_attr (arg->expr).optional\n+\t      || gfc_expr_attr (arg->expr).allocatable\n+\t      || gfc_expr_attr (arg->expr).pointer))\n+\tnewss->info->can_be_null_ref = true;\n+\n       head = newss;\n       if (!tail)\n         {"}, {"sha": "5fb95b1765324c359bf115f1cb9d310c96b7eee8", "filename": "gcc/fortran/trans-expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bcf7121b65665d72790132ff071e07a1a634151/gcc%2Ffortran%2Ftrans-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bcf7121b65665d72790132ff071e07a1a634151/gcc%2Ffortran%2Ftrans-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.c?ref=9bcf7121b65665d72790132ff071e07a1a634151", "patch": "@@ -5458,7 +5458,7 @@ gfc_conv_expr (gfc_se * se, gfc_expr * expr)\n       se->expr = ss_info->data.scalar.value;\n       /* If the reference can be NULL, the value field contains the reference,\n \t not the value the reference points to (see gfc_add_loop_ss_code).  */\n-      if (ss_info->data.scalar.can_be_null_ref)\n+      if (ss_info->can_be_null_ref)\n \tse->expr = build_fold_indirect_ref_loc (input_location, se->expr);\n \n       se->string_length = ss_info->string_length;"}, {"sha": "8beefe10d278709b312c97113fd605e70515365c", "filename": "gcc/fortran/trans.h", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bcf7121b65665d72790132ff071e07a1a634151/gcc%2Ffortran%2Ftrans.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bcf7121b65665d72790132ff071e07a1a634151/gcc%2Ffortran%2Ftrans.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.h?ref=9bcf7121b65665d72790132ff071e07a1a634151", "patch": "@@ -198,9 +198,6 @@ typedef struct gfc_ss_info\n     struct\n     {\n       tree value;\n-      /* Tells whether the reference can be null in the GFC_SS_REFERENCE case.\n-\t Used to handle elemental procedures' optional arguments.  */\n-      bool can_be_null_ref;\n     }\n     scalar;\n \n@@ -223,6 +220,11 @@ typedef struct gfc_ss_info\n \n   /* Suppresses precalculation of scalars in WHERE assignments.  */\n   unsigned where:1;\n+\n+  /* Tells whether the SS is for an actual argument which can be a NULL\n+     reference.  In other words, the associated dummy argument is OPTIONAL.\n+     Used to handle elemental procedures.  */\n+  bool can_be_null_ref;\n }\n gfc_ss_info;\n "}]}