{"sha": "3533b943d1c7a7afec4f85750e2a463e277aa0d8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzUzM2I5NDNkMWM3YTdhZmVjNGY4NTc1MGUyYTQ2M2UyNzdhYTBkOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-05-02T21:59:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-05-02T21:59:57Z"}, "message": "re PR c++/40975 (ICE in copy_tree_r on array new)\n\n\tPR c++/40975\n\t* tree-inline.c (copy_tree_r): Handle STATEMENT_LIST.\n\nFrom-SVN: r173273", "tree": {"sha": "26809dd38d501276be7efd8a1ae0006e22de0d4f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26809dd38d501276be7efd8a1ae0006e22de0d4f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3533b943d1c7a7afec4f85750e2a463e277aa0d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3533b943d1c7a7afec4f85750e2a463e277aa0d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3533b943d1c7a7afec4f85750e2a463e277aa0d8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3533b943d1c7a7afec4f85750e2a463e277aa0d8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0a2cdfe6fdd3376e694a83b3229fa03d018dbfda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2cdfe6fdd3376e694a83b3229fa03d018dbfda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2cdfe6fdd3376e694a83b3229fa03d018dbfda"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "10d30a91eee57211b7dfdbc022157b969b1959e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3533b943d1c7a7afec4f85750e2a463e277aa0d8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3533b943d1c7a7afec4f85750e2a463e277aa0d8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3533b943d1c7a7afec4f85750e2a463e277aa0d8", "patch": "@@ -1,3 +1,8 @@\n+2011-05-02  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/40975\n+\t* tree-inline.c (copy_tree_r): Handle STATEMENT_LIST.\n+\n 2011-05-02  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c/35445"}, {"sha": "37776753ca3a1d8c02b84f5b8bfb27da2eef2bf9", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3533b943d1c7a7afec4f85750e2a463e277aa0d8/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3533b943d1c7a7afec4f85750e2a463e277aa0d8/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=3533b943d1c7a7afec4f85750e2a463e277aa0d8", "patch": "@@ -4271,14 +4271,26 @@ copy_tree_r (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \t\t\t\t\t CONSTRUCTOR_ELTS (*tp));\n       *tp = new_tree;\n     }\n+  else if (code == STATEMENT_LIST)\n+    {\n+      /* We used to just abort on STATEMENT_LIST, but we can run into them\n+         with statement-expressions (c++/40975).  */\n+      tree new_list = alloc_stmt_list ();\n+      tree_stmt_iterator i = tsi_start (*tp);\n+      tree_stmt_iterator j = tsi_last (new_list);\n+      for (; !tsi_end_p (i); tsi_next (&i))\n+\t{\n+\t  tree stmt = tsi_stmt (i);\n+\t  tsi_link_after (&j, stmt, TSI_CONTINUE_LINKING);\n+\t}\n+      *tp = new_list;\n+    }\n   else if (TREE_CODE_CLASS (code) == tcc_type)\n     *walk_subtrees = 0;\n   else if (TREE_CODE_CLASS (code) == tcc_declaration)\n     *walk_subtrees = 0;\n   else if (TREE_CODE_CLASS (code) == tcc_constant)\n     *walk_subtrees = 0;\n-  else\n-    gcc_assert (code != STATEMENT_LIST);\n   return NULL_TREE;\n }\n "}]}