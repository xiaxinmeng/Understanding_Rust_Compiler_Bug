{"sha": "4fec64b07b9da385b80e89f86c603cb13c90c56c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZlYzY0YjA3YjlkYTM4NWI4MGU4OWY4NmM2MDNjYjEzYzkwYzU2Yw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-07-24T00:19:45Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-07-24T00:19:45Z"}, "message": "re PR libfortran/25289 (Cannot handle record numbers large than huge(0_4))\n\n2006-07-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR fortran/25289\n\t* gfortran.h: Declare gfc_large_io_int_kind.\n\t* trans-types.c (gfc_init_kinds): Set gfc_large_io_int_kind\n\tto size 8 or 4.\n\t* trans-io.c (enum iofield_type): Add large_io_int type.\n\t(gfc_build_st_parameter): Same.\n\t(gfc_build_io_library_fndecls): Same.\n\t* ioparm_def: Use large_io_int to define rec.\n\nFrom-SVN: r115700", "tree": {"sha": "cafb4ddf881a103f1c23303872bd9960d3b3d653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cafb4ddf881a103f1c23303872bd9960d3b3d653"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fec64b07b9da385b80e89f86c603cb13c90c56c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fec64b07b9da385b80e89f86c603cb13c90c56c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fec64b07b9da385b80e89f86c603cb13c90c56c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fec64b07b9da385b80e89f86c603cb13c90c56c/comments", "author": null, "committer": null, "parents": [{"sha": "566ffce8955401e87e86899239f5bb0a6a5b6b0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/566ffce8955401e87e86899239f5bb0a6a5b6b0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/566ffce8955401e87e86899239f5bb0a6a5b6b0f"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "df09fcb3052f1d8cc56639420737343cc84d63f8", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4fec64b07b9da385b80e89f86c603cb13c90c56c", "patch": "@@ -1,6 +1,17 @@\n+2006-07-23  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR fortran/25289\n+\t* gfortran.h: Declare gfc_large_io_int_kind.\n+\t* trans-types.c (gfc_init_kinds): Set gfc_large_io_int_kind\n+\tto size 8 or 4.\n+\t* trans-io.c (enum iofield_type): Add large_io_int type.\n+\t(gfc_build_st_parameter): Same.\n+\t(gfc_build_io_library_fndecls): Same.\n+\t* ioparm_def: Use large_io_int to define rec.\n+\n 2006-07-22  Steven Bosscher  <steven@gcc.gnu.org> \n \n-\tPR fortran/28439\n+    PR fortran/28439\n \t* trans-stmt.c (gfc_trans_arithmetic_if): Evaluate the condition once.\n \n 2006-07-16  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "37d70f393aeda525c194ae37bff950e06ecece50", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=4fec64b07b9da385b80e89f86c603cb13c90c56c", "patch": "@@ -1806,6 +1806,7 @@ extern int gfc_default_character_kind;\n extern int gfc_default_logical_kind;\n extern int gfc_default_complex_kind;\n extern int gfc_c_int_kind;\n+extern int gfc_large_io_int_kind;\n \n /* symbol.c */\n void gfc_clear_new_implicit (void);"}, {"sha": "977e4f030d4999770eae6c0c470a6e22e2a9c533", "filename": "gcc/fortran/ioparm.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2Fioparm.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2Fioparm.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fioparm.def?ref=4fec64b07b9da385b80e89f86c603cb13c90c56c", "patch": "@@ -58,7 +58,7 @@ IOPARM (inquire, convert,       1 << 29, char1)\n #define IOPARM_dt_namelist_read_mode\t(1 << 8)\n #endif\n IOPARM (dt,      common,\t0,\t common)\n-IOPARM (dt,      rec,\t\t1 << 9,  int4)\n+IOPARM (dt,      rec,\t\t1 << 9,  large_io_int)\n IOPARM (dt,      size,\t\t1 << 10, pint4)\n IOPARM (dt,      iolength,\t1 << 11, pint4)\n IOPARM (dt,      internal_unit_desc, 0,  parray)"}, {"sha": "2c8e3e66bf7046da6c16d7ba2b55282f189c57c1", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=4fec64b07b9da385b80e89f86c603cb13c90c56c", "patch": "@@ -52,6 +52,7 @@ enum ioparam_type\n enum iofield_type\n {\n   IOPARM_type_int4,\n+  IOPARM_type_large_io_int,\n   IOPARM_type_pint4,\n   IOPARM_type_pchar,\n   IOPARM_type_parray,\n@@ -168,6 +169,7 @@ gfc_build_st_parameter (enum ioparam_type ptype, tree *types)\n       switch (p->type)\n \t{\n \tcase IOPARM_type_int4:\n+\tcase IOPARM_type_large_io_int:\n \tcase IOPARM_type_pint4:\n \tcase IOPARM_type_parray:\n \tcase IOPARM_type_pchar:\n@@ -214,12 +216,15 @@ void\n gfc_build_io_library_fndecls (void)\n {\n   tree types[IOPARM_type_num], pad_idx, gfc_int4_type_node;\n+  tree gfc_large_io_int_type_node;\n   tree parm_type, dt_parm_type;\n   tree gfc_c_int_type_node;\n   HOST_WIDE_INT pad_size;\n   enum ioparam_type ptype;\n \n   types[IOPARM_type_int4] = gfc_int4_type_node = gfc_get_int_type (4);\n+  types[IOPARM_type_large_io_int] = gfc_large_io_int_type_node\n+\t\t\t    = gfc_get_int_type (gfc_large_io_int_kind);\n   types[IOPARM_type_pint4] = build_pointer_type (gfc_int4_type_node);\n   types[IOPARM_type_parray] = pchar_type_node;\n   types[IOPARM_type_pchar] = pchar_type_node;"}, {"sha": "4d20b83a3654a837728f0b2dbc794951e2523cf1", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fec64b07b9da385b80e89f86c603cb13c90c56c/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=4fec64b07b9da385b80e89f86c603cb13c90c56c", "patch": "@@ -93,6 +93,10 @@ int gfc_default_logical_kind;\n int gfc_default_complex_kind;\n int gfc_c_int_kind;\n \n+/* The kind size used for record offsets. If the target system supports\n+   kind=8, this will be set to 8, otherwise it is set to 4.  */\n+int gfc_large_io_int_kind; \n+\n /* Query the target to determine which machine modes are available for\n    computation.  Choose KIND numbers for them.  */\n \n@@ -140,6 +144,17 @@ gfc_init_kinds (void)\n       i_index += 1;\n     }\n \n+  /* Set the kind used to match GFC_LARGE_IO_INT in libgfortran.  This is \n+     used for large file access.  */\n+\n+  if (saw_i8)\n+    gfc_large_io_int_kind = 8;\n+  else\n+    gfc_large_io_int_kind = 4;\n+\n+  /* If we do not at least have kind = 4, everything is pointless.  */  \n+  gcc_assert(saw_i4);  \n+\n   /* Set the maximum integer kind.  Used with at least BOZ constants.  */\n   gfc_max_integer_kind = gfc_integer_kinds[i_index - 1].kind;\n "}]}