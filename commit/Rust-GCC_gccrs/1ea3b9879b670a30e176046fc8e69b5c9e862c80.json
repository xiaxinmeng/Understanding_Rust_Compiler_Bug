{"sha": "1ea3b9879b670a30e176046fc8e69b5c9e862c80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVhM2I5ODc5YjY3MGEzMGUxNzYwNDZmYzhlNjliNWM5ZTg2MmM4MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-07-14T05:25:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-07-14T05:25:31Z"}, "message": "re PR c++/58611 ([c++11] ICE with invalid constexpr constructor used in array initialization)\n\n\tPR c++/58611\n\t* decl.c (check_initializer): Don't finish_compound_literal\n\ton erroneous constexpr init.\n\nFrom-SVN: r212506", "tree": {"sha": "69433d8f1e26db0c0b334321be08512bc44a4c77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69433d8f1e26db0c0b334321be08512bc44a4c77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ea3b9879b670a30e176046fc8e69b5c9e862c80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea3b9879b670a30e176046fc8e69b5c9e862c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ea3b9879b670a30e176046fc8e69b5c9e862c80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ea3b9879b670a30e176046fc8e69b5c9e862c80/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22c6ea004237e0dd3aebdfec3cbaad138bec06df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c6ea004237e0dd3aebdfec3cbaad138bec06df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c6ea004237e0dd3aebdfec3cbaad138bec06df"}], "stats": {"total": 26, "additions": 21, "deletions": 5}, "files": [{"sha": "2918318506c18c327283e2a8cd7aa97b8c180ccc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea3b9879b670a30e176046fc8e69b5c9e862c80/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea3b9879b670a30e176046fc8e69b5c9e862c80/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1ea3b9879b670a30e176046fc8e69b5c9e862c80", "patch": "@@ -1,5 +1,9 @@\n 2014-07-13  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/58611\n+\t* decl.c (check_initializer): Don't finish_compound_literal\n+\ton erroneous constexpr init.\n+\n \tPR c++/58612\n \t* tree.c (bot_replace): Only replace a dummy 'this' parm.\n "}, {"sha": "9d3fbb275f6d06e5c3af8c31e29e80a5b2cdc2bb", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea3b9879b670a30e176046fc8e69b5c9e862c80/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea3b9879b670a30e176046fc8e69b5c9e862c80/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=1ea3b9879b670a30e176046fc8e69b5c9e862c80", "patch": "@@ -5812,11 +5812,8 @@ check_initializer (tree decl, tree init, int flags, vec<tree, va_gc> **cleanups)\n \t      /* Declared constexpr, but no suitable initializer; massage\n \t\t init appropriately so we can pass it into store_init_value\n \t\t for the error.  */\n-\t      if (init && BRACE_ENCLOSED_INITIALIZER_P (init))\n-\t\tinit = finish_compound_literal (type, init,\n-\t\t\t\t\t\ttf_warning_or_error);\n-\t      else if (CLASS_TYPE_P (type)\n-\t\t       && (!init || TREE_CODE (init) == TREE_LIST))\n+\t      if (CLASS_TYPE_P (type)\n+\t\t  && (!init || TREE_CODE (init) == TREE_LIST))\n \t\t{\n \t\t  init = build_functional_cast (type, init, tf_none);\n \t\t  if (TREE_CODE (init) == TARGET_EXPR)"}, {"sha": "16eacdde440f03aae0f869b66fa6ea076a15e958", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array6.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ea3b9879b670a30e176046fc8e69b5c9e862c80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ea3b9879b670a30e176046fc8e69b5c9e862c80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array6.C?ref=1ea3b9879b670a30e176046fc8e69b5c9e862c80", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/58611\n+// { dg-do compile { target c++11 } }\n+\n+struct A\n+{\n+  int i;\n+  constexpr A() {}\t\t// { dg-error \"A::i\" }\n+};\n+\n+struct B\n+{\n+  A a;\n+};\n+\n+constexpr B b[] = { {} };\t// { dg-error \"A::A\" }"}]}