{"sha": "9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWZjNWZhN2I4YmYxOTRlN2Q3MjRmMGIwMmJiODc4NzAxMDllZTJlMw==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-08-30T07:32:39Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-08-30T07:32:39Z"}, "message": "[multiple changes]\n\n2005-08-29  Geoffrey Keating  <geoffk@apple.com>\n\n\t* config/i386/i386.c (ix86_expand_vector_init_one_var): Don't modify\n\tparts of 'vals'.\n\nIndex: testsuite/ChangeLog\n2005-08-30  Geoffrey Keating  <geoffk@apple.com>\n\n\t* g++.dg/other/i386-1.C: New.\n\nFrom-SVN: r103632", "tree": {"sha": "b14be0d8e28ba451b4d0193a8cf76137ec417532", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b14be0d8e28ba451b4d0193a8cf76137ec417532"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5eab47e103f6453d4b3f1390c0b855c43aa0210", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5eab47e103f6453d4b3f1390c0b855c43aa0210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5eab47e103f6453d4b3f1390c0b855c43aa0210"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "10d3d1134aa867ad9e4a6073f800fa16dd116546", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3", "patch": "@@ -1,3 +1,8 @@\n+2005-08-29  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* config/i386/i386.c (ix86_expand_vector_init_one_var): Don't modify\n+\tparts of 'vals'.\n+\n 2005-08-18  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR middle-end/23408"}, {"sha": "1c4fc139b516916287b275253eb9090a459f66d0", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3", "patch": "@@ -17201,8 +17201,8 @@ ix86_expand_vector_init_one_var (bool mmx_ok, enum machine_mode mode,\n   enum machine_mode wmode;\n   rtx const_vec, x;\n \n-  XVECEXP (vals, 0, one_var) = CONST0_RTX (GET_MODE_INNER (mode));\n-  const_vec = gen_rtx_CONST_VECTOR (mode, XVEC (vals, 0)); \n+  const_vec = copy_rtx (vals);\n+  XVECEXP (const_vec, 0, one_var) = CONST0_RTX (GET_MODE_INNER (mode));\n \n   switch (mode)\n     {"}, {"sha": "b6a2aae1b3abe5d89d45ab154f0687a7b967d3d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3", "patch": "@@ -1,3 +1,7 @@\n+2005-08-30  Geoffrey Keating  <geoffk@apple.com>\n+\n+\t* g++.dg/other/i386-1.C: New.\n+\n 2005-08-30  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR preprocessor/20348"}, {"sha": "48371978a9884376398c400a2b56d6718847c699", "filename": "gcc/testsuite/g++.dg/other/i386-1.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-1.C?ref=9fc5fa7b8bf194e7d724f0b02bb87870109ee2e3", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do run { target i?86-*-* } } */\n+/* { dg-options \"-march=pentium4\" } */\n+\n+#include <xmmintrin.h>\n+#include <stdio.h>\n+\n+int main(int argc, char** argv) {\n+  float a = 1.0f;\n+  float b = 2.0f;\n+  float c = 3.0f;\n+  float r;\n+  \n+  __m128 v = _mm_set_ps(a, b, c, 0);\n+  \n+  v = (__m128)_mm_srli_si128((__m128i)v, 4);\n+  _mm_store_ss(&r, v);\n+  if (r != 3.0f)\n+    abort ();\n+  exit (0);\n+}"}]}