{"sha": "c4ea29786f9b6e63c47daddfb6bff5b690e5f555", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzRlYTI5Nzg2ZjliNmU2M2M0N2RhZGRmYjZiZmY1YjY5MGU1ZjU1NQ==", "commit": {"author": {"name": "Yannick Moy", "email": "moy@adacore.com", "date": "2018-07-16T14:10:22Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-16T14:10:22Z"}, "message": "[Ada] Inline: rewrap comment\n\n2018-07-16  Yannick Moy  <moy@adacore.com>\n\ngcc/ada/\n\n\t* inline.adb (Has_Single_Return): Rewrap comment.\n\nFrom-SVN: r262706", "tree": {"sha": "d354be408550417bf1d9e2aaaacce10ea0e24704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d354be408550417bf1d9e2aaaacce10ea0e24704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c4ea29786f9b6e63c47daddfb6bff5b690e5f555", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ea29786f9b6e63c47daddfb6bff5b690e5f555", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4ea29786f9b6e63c47daddfb6bff5b690e5f555", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4ea29786f9b6e63c47daddfb6bff5b690e5f555/comments", "author": {"login": "yannickmoy", "id": 859440, "node_id": "MDQ6VXNlcjg1OTQ0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/859440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yannickmoy", "html_url": "https://github.com/yannickmoy", "followers_url": "https://api.github.com/users/yannickmoy/followers", "following_url": "https://api.github.com/users/yannickmoy/following{/other_user}", "gists_url": "https://api.github.com/users/yannickmoy/gists{/gist_id}", "starred_url": "https://api.github.com/users/yannickmoy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yannickmoy/subscriptions", "organizations_url": "https://api.github.com/users/yannickmoy/orgs", "repos_url": "https://api.github.com/users/yannickmoy/repos", "events_url": "https://api.github.com/users/yannickmoy/events{/privacy}", "received_events_url": "https://api.github.com/users/yannickmoy/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e752e1fc77a786fd144dac1dc4833af87c3efe7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e752e1fc77a786fd144dac1dc4833af87c3efe7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e752e1fc77a786fd144dac1dc4833af87c3efe7"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "d041f5620431c337d84af557fd7dbf8aa4f252a9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ea29786f9b6e63c47daddfb6bff5b690e5f555/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ea29786f9b6e63c47daddfb6bff5b690e5f555/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c4ea29786f9b6e63c47daddfb6bff5b690e5f555", "patch": "@@ -1,3 +1,7 @@\n+2018-07-16  Yannick Moy  <moy@adacore.com>\n+\n+\t* inline.adb (Has_Single_Return): Rewrap comment.\n+\n 2018-07-16  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* einfo.ads: Minor tweak in comment."}, {"sha": "bc01ffc58ceaecbfbeec3cc868c0f33b42021afe", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c4ea29786f9b6e63c47daddfb6bff5b690e5f555/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c4ea29786f9b6e63c47daddfb6bff5b690e5f555/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=c4ea29786f9b6e63c47daddfb6bff5b690e5f555", "patch": "@@ -197,10 +197,10 @@ package body Inline is\n \n    function Has_Single_Return (N : Node_Id) return Boolean;\n    --  In general we cannot inline functions that return unconstrained type.\n-   --  However, we can handle such functions if all return statements return a\n-   --  local variable that is the only declaration in the body of the function.\n-   --  In that case the call can be replaced by that local variable as is done\n-   --  for other inlined calls.\n+   --  However, we can handle such functions if all return statements return\n+   --  a local variable that is the first declaration in the body of the\n+   --  function. In that case the call can be replaced by that local\n+   --  variable as is done for other inlined calls.\n \n    function In_Main_Unit_Or_Subunit (E : Entity_Id) return Boolean;\n    --  Return True if E is in the main unit or its spec or in a subunit"}]}