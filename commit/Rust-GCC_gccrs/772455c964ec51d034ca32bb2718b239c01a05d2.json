{"sha": "772455c964ec51d034ca32bb2718b239c01a05d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzcyNDU1Yzk2NGVjNTFkMDM0Y2EzMmJiMjcxOGIyMzljMDFhMDVkMg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-05-04T14:29:05Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-05-04T14:29:05Z"}, "message": "libgo: fix for unaligned read in go-unwind.c's read_encoded_value()\n    \n    Change code to work properly reading unaligned data on architectures\n    that don't support unaliged reads. This fixes a regression (broke\n    Solaris/sparc) introduced in https://golang.org/cl/90235.\n    \n    Reviewed-on: https://go-review.googlesource.com/111296\n\nFrom-SVN: r259935", "tree": {"sha": "db26776fea6b771c846220928c74b08f5e9380b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db26776fea6b771c846220928c74b08f5e9380b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/772455c964ec51d034ca32bb2718b239c01a05d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/772455c964ec51d034ca32bb2718b239c01a05d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/772455c964ec51d034ca32bb2718b239c01a05d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/772455c964ec51d034ca32bb2718b239c01a05d2/comments", "author": null, "committer": null, "parents": [{"sha": "71d372eba9d83660d02d03e9f3d6f2872b8bd972", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d372eba9d83660d02d03e9f3d6f2872b8bd972", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d372eba9d83660d02d03e9f3d6f2872b8bd972"}], "stats": {"total": 56, "additions": 44, "deletions": 12}, "files": [{"sha": "02bf62520cbc2bcd6b6dfce835a306b18a336102", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772455c964ec51d034ca32bb2718b239c01a05d2/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772455c964ec51d034ca32bb2718b239c01a05d2/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=772455c964ec51d034ca32bb2718b239c01a05d2", "patch": "@@ -1,4 +1,4 @@\n-30e2033a91fc08be9351d26737599a1fa6486017\n+0c9b7a1ca4c6308345ea2a276cf820ff52513592\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "a059acbc22aa01c1b35637b4b71fa6a3b090e798", "filename": "libgo/runtime/go-unwind.c", "status": "modified", "additions": 43, "deletions": 11, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/772455c964ec51d034ca32bb2718b239c01a05d2/libgo%2Fruntime%2Fgo-unwind.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/772455c964ec51d034ca32bb2718b239c01a05d2/libgo%2Fruntime%2Fgo-unwind.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-unwind.c?ref=772455c964ec51d034ca32bb2718b239c01a05d2", "patch": "@@ -197,10 +197,6 @@ read_sleb128 (const uint8_t *p, _sleb128_t *val)\n \n #define ROUND_UP_TO_PVB(x) (x + sizeof(void *) - 1) &- sizeof(void *)\n \n-#define COPY_AND_ADVANCE(dst, ptr, typ) \\\n-  (dst = *((const typ*)ptr),            \\\n-   ptr += sizeof(typ))\n-\n static inline const uint8_t *\n read_encoded_value (struct _Unwind_Context *context, uint8_t encoding,\n                     const uint8_t *p, _Unwind_Ptr *val)\n@@ -221,17 +217,53 @@ read_encoded_value (struct _Unwind_Context *context, uint8_t encoding,\n       switch (encoding & 0x0f)\n         {\n           case DW_EH_PE_sdata2:\n+            {\n+              int16_t result;\n+              __builtin_memcpy (&result, p, sizeof(int16_t));\n+              decoded = result;\n+              p += sizeof(int16_t);\n+              break;\n+            }\n           case DW_EH_PE_udata2:\n-            COPY_AND_ADVANCE (decoded, p, uint16_t);\n-            break;\n+            {\n+              uint16_t result;\n+              __builtin_memcpy (&result, p, sizeof(uint16_t));\n+              decoded = result;\n+              p += sizeof(uint16_t);\n+              break;\n+            }\n           case DW_EH_PE_sdata4:\n+            {\n+              int32_t result;\n+              __builtin_memcpy (&result, p, sizeof(int32_t));\n+              decoded = result;\n+              p += sizeof(int32_t);\n+              break;\n+            }\n           case DW_EH_PE_udata4:\n-            COPY_AND_ADVANCE (decoded, p, uint32_t);\n-            break;\n+            {\n+              uint32_t result;\n+              __builtin_memcpy (&result, p, sizeof(uint32_t));\n+              decoded = result;\n+              p += sizeof(uint32_t);\n+              break;\n+            }\n           case DW_EH_PE_sdata8:\n+            {\n+              int64_t result;\n+              __builtin_memcpy (&result, p, sizeof(int64_t));\n+              decoded = result;\n+              p += sizeof(int64_t);\n+              break;\n+            }\n           case DW_EH_PE_udata8:\n-            COPY_AND_ADVANCE (decoded, p, uint64_t);\n-            break;\n+            {\n+              uint64_t result;\n+              __builtin_memcpy (&result, p, sizeof(uint64_t));\n+              decoded = result;\n+              p += sizeof(uint64_t);\n+              break;\n+            }\n           case DW_EH_PE_uleb128:\n             {\n               _uleb128_t value;\n@@ -247,7 +279,7 @@ read_encoded_value (struct _Unwind_Context *context, uint8_t encoding,\n               break;\n             }\n           case DW_EH_PE_absptr:\n-            decoded = (_Unwind_Internal_Ptr)(*(const void *const *)p);\n+            __builtin_memcpy (&decoded, (const void *)p, sizeof(const void*));\n             p += sizeof(void *);\n             break;\n           default:"}]}