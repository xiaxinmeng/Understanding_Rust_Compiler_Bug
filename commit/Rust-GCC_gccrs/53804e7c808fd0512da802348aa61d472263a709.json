{"sha": "53804e7c808fd0512da802348aa61d472263a709", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM4MDRlN2M4MDhmZDA1MTJkYTgwMjM0OGFhNjFkNDcyMjYzYTcwOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2002-02-04T19:51:32Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2002-02-04T19:51:32Z"}, "message": "locale_facets.tcc (money_get::do_get(string)): Deal correctly with !(__io.flags() & ios_base::showbase) for case...\n\n2002-02-04  Paolo Carlini  <pcarlini@unitus.it>\n\n        libstdc++/5579\n        * include/bits/locale_facets.tcc (money_get::do_get(string)):\n        Deal correctly with !(__io.flags() & ios_base::showbase)\n        for case money_base::symbol.\n        * testsuite/22_locale/money_get_members_char.cc: Add test05.\n        * testsuite/22_locale/money_get_members_wchar_t.cc: Add test05.\n\nFrom-SVN: r49489", "tree": {"sha": "d998abb5f16adb648bf040b0709b73aadab1468d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d998abb5f16adb648bf040b0709b73aadab1468d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53804e7c808fd0512da802348aa61d472263a709", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53804e7c808fd0512da802348aa61d472263a709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53804e7c808fd0512da802348aa61d472263a709", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53804e7c808fd0512da802348aa61d472263a709/comments", "author": null, "committer": null, "parents": [{"sha": "24c545ff924c8a6a24f5b85f6352cac27bd18247", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24c545ff924c8a6a24f5b85f6352cac27bd18247", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24c545ff924c8a6a24f5b85f6352cac27bd18247"}], "stats": {"total": 177, "additions": 170, "deletions": 7}, "files": [{"sha": "6ca364e75f38b6b6f14eb4fb811709a835440306", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53804e7c808fd0512da802348aa61d472263a709/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53804e7c808fd0512da802348aa61d472263a709/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=53804e7c808fd0512da802348aa61d472263a709", "patch": "@@ -1,3 +1,12 @@\n+2002-02-04  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tlibstdc++/5579\n+\t* include/bits/locale_facets.tcc (money_get::do_get(string)):\n+\tDeal correctly with !(__io.flags() & ios_base::showbase)\n+\tfor case money_base::symbol.\n+\t* testsuite/22_locale/money_get_members_char.cc: Add test05.\n+\t* testsuite/22_locale/money_get_members_wchar_t.cc: Add test05.\n+\n 2002-02-02  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* testsuite/22_locale/operators.cc"}, {"sha": "e459582846133b8e312b6b7e4289103f809d053c", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53804e7c808fd0512da802348aa61d472263a709/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53804e7c808fd0512da802348aa61d472263a709/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=53804e7c808fd0512da802348aa61d472263a709", "patch": "@@ -938,20 +938,25 @@ namespace std\n \t  switch (__which)\n \t\t{\n \t\tcase money_base::symbol:\n-\t\t  if (__io.flags() & ios_base::showbase)\n+\t\t  if (__io.flags() & ios_base::showbase || __i < 2 ||\n+\t\t      __i == 2 && static_cast<part>(__p.field[3]) != money_base::none)\n \t\t    {\n-\t\t      // Symbol is required.\n+\t\t      // According to 22.2.6.1.2.2, symbol is required if\n+\t\t      // (__io.flags() & ios_base::showbase), otherwise is optional\n+\t\t      // and consumed only if other characters are needed to complete\n+\t\t      // the format.\n \t\t      const string_type __symbol = __intl ? __mpt.curr_symbol()\n \t\t\t\t\t\t    \t : __mpf.curr_symbol();\n \t\t      size_type __len = __symbol.size();\n-\t\t      size_type __i = 0;\n+\t\t      size_type __j = 0;\n \t\t      while (__beg != __end \n-\t\t\t     && __i < __len && __symbol[__i] == __c)\n+\t\t\t     && __j < __len && __symbol[__j] == __c)\n \t\t\t{\n \t\t\t  __c = *(++__beg);\n-\t\t\t  ++__i;\n+\t\t\t  ++__j;\n \t\t\t}\n-\t\t      if (__i != __len)\n+\t\t      // When (__io.flags() & ios_base::showbase) symbol is required.\n+\t\t      if (__j != __len && (__io.flags() & ios_base::showbase))\n \t\t\t__testvalid = false;\n \t\t    }\n \t\t  break;"}, {"sha": "84fb93d3f10e5e8f085a22571118ffcdb3494fb5", "filename": "libstdc++-v3/testsuite/22_locale/money_get_members_char.cc", "status": "modified", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53804e7c808fd0512da802348aa61d472263a709/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53804e7c808fd0512da802348aa61d472263a709/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_char.cc?ref=53804e7c808fd0512da802348aa61d472263a709", "patch": "@@ -309,11 +309,86 @@ void test04()\n #endif\n }\n \n+class My_money_io : public std::moneypunct<char,false>\n+{\n+public:\n+  explicit My_money_io(size_t r = 0): std::moneypunct<char,false>(r) { }\n+  char_type do_decimal_point() const { return '.'; }\n+  char_type do_thousands_sep() const { return ','; }\n+  std::string do_grouping() const { return \"\\004\"; }\n+  \n+  std::string do_curr_symbol() const { return \"$\"; }\n+  std::string do_positive_sign() const { return \"\"; }\n+  std::string do_negative_sign() const { return \"-\"; }\n+  \n+  int do_frac_digits() const { return 2; }\n+\n+  pattern do_pos_format() const\n+  {\n+    static pattern pat = { { symbol, none, sign, value } };\n+    return pat;\n+  }\n+\n+  pattern do_neg_format() const\n+  {\n+    static pattern pat = { { symbol, none, sign, value } };\n+    return pat;\n+  }\n+};\n+\n+// libstdc++/5579\n+void test05()\n+{\n+  using namespace std;\n+  typedef istreambuf_iterator<char> InIt;\n+\n+  locale loc(locale::classic(), new My_money_io);\n+\n+  string bufferp(\"$1234.56\");\n+  string buffern(\"$-1234.56\");\n+  string bufferp_ns(\"1234.56\");\n+  string buffern_ns(\"-1234.56\");\n+\n+  bool intl = false;\n+\n+  InIt iendp, iendn, iendp_ns, iendn_ns;\n+  ios_base::iostate err;\n+  string valp, valn, valp_ns, valn_ns;\n+\n+  const money_get<char,InIt>& mg  =\n+    use_facet<money_get<char, InIt> >(loc);\n+\n+  istringstream fmtp(bufferp);\n+  fmtp.imbue(loc);\n+  InIt ibegp(fmtp);\n+  mg.get(ibegp,iendp,intl,fmtp,err,valp);\n+  VERIFY( valp == \"123456\" );\n+\n+  istringstream fmtn(buffern);\n+  fmtn.imbue(loc);\n+  InIt ibegn(fmtn);\n+  mg.get(ibegn,iendn,intl,fmtn,err,valn);\n+  VERIFY( valn == \"-123456\" );\n+\n+  istringstream fmtp_ns(bufferp_ns);\n+  fmtp_ns.imbue(loc);\n+  InIt ibegp_ns(fmtp_ns);\n+  mg.get(ibegp_ns,iendp_ns,intl,fmtp_ns,err,valp_ns);\n+  VERIFY( valp_ns == \"123456\" );\n+\n+  istringstream fmtn_ns(buffern_ns);\n+  fmtn_ns.imbue(loc);\n+  InIt ibegn_ns(fmtn_ns);\n+  mg.get(ibegn_ns,iendn_ns,intl,fmtn_ns,err,valn_ns);\n+  VERIFY( valn_ns == \"-123456\" );\n+}\n+\n int main()\n {\n   test01();\n   test02();\n   test03();\n   test04();\n+  test05();\n   return 0;\n }"}, {"sha": "fcca3452b343a4242f4a078f491dfe17f8433cbf", "filename": "libstdc++-v3/testsuite/22_locale/money_get_members_wchar_t.cc", "status": "modified", "additions": 75, "deletions": 1, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53804e7c808fd0512da802348aa61d472263a709/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53804e7c808fd0512da802348aa61d472263a709/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Fmoney_get_members_wchar_t.cc?ref=53804e7c808fd0512da802348aa61d472263a709", "patch": "@@ -310,8 +310,81 @@ void test04()\n     }\n #endif\n }\n-#endif\n \n+class My_money_io : public std::moneypunct<wchar_t,false>\n+{\n+public:\n+  explicit My_money_io(size_t r = 0): std::moneypunct<wchar_t,false>(r) { }\n+  char_type do_decimal_point() const { return L'.'; }\n+  char_type do_thousands_sep() const { return L','; }\n+  std::string do_grouping() const { return \"\\004\"; }\n+  \n+  std::wstring do_curr_symbol() const { return L\"$\"; }\n+  std::wstring do_positive_sign() const { return L\"\"; }\n+  std::wstring do_negative_sign() const { return L\"-\"; }\n+  \n+  int do_frac_digits() const { return 2; }\n+\n+  pattern do_pos_format() const\n+  {\n+    static pattern pat = { { symbol, none, sign, value } };\n+    return pat;\n+  }\n+\n+  pattern do_neg_format() const\n+  {\n+    static pattern pat = { { symbol, none, sign, value } };\n+    return pat;\n+  }\n+};\n+\n+// libstdc++/5579\n+void test05()\n+{\n+  using namespace std;\n+  typedef istreambuf_iterator<wchar_t> InIt;\n+\n+  locale loc(locale::classic(), new My_money_io);\n+\n+  wstring bufferp(L\"$1234.56\");\n+  wstring buffern(L\"$-1234.56\");\n+  wstring bufferp_ns(L\"1234.56\");\n+  wstring buffern_ns(L\"-1234.56\");\n+\n+  bool intl = false;\n+\n+  InIt iendp, iendn, iendp_ns, iendn_ns;\n+  ios_base::iostate err;\n+  wstring valp, valn, valp_ns, valn_ns;\n+\n+  const money_get<wchar_t,InIt>& mg  =\n+    use_facet<money_get<wchar_t, InIt> >(loc);\n+\n+  wistringstream fmtp(bufferp);\n+  fmtp.imbue(loc);\n+  InIt ibegp(fmtp);\n+  mg.get(ibegp,iendp,intl,fmtp,err,valp);\n+  VERIFY( valp == L\"123456\" );\n+\n+  wistringstream fmtn(buffern);\n+  fmtn.imbue(loc);\n+  InIt ibegn(fmtn);\n+  mg.get(ibegn,iendn,intl,fmtn,err,valn);\n+  VERIFY( valn == L\"-123456\" );\n+\n+  wistringstream fmtp_ns(bufferp_ns);\n+  fmtp_ns.imbue(loc);\n+  InIt ibegp_ns(fmtp_ns);\n+  mg.get(ibegp_ns,iendp_ns,intl,fmtp_ns,err,valp_ns);\n+  VERIFY( valp_ns == L\"123456\" );\n+\n+  wistringstream fmtn_ns(buffern_ns);\n+  fmtn_ns.imbue(loc);\n+  InIt ibegn_ns(fmtn_ns);\n+  mg.get(ibegn_ns,iendn_ns,intl,fmtn_ns,err,valn_ns);\n+  VERIFY( valn_ns == L\"-123456\" );\n+}\n+#endif\n \n int main()\n {\n@@ -320,6 +393,7 @@ int main()\n   test02();\n   test03();\n   test04();\n+  test05();\n #endif\n   return 0;\n }"}]}