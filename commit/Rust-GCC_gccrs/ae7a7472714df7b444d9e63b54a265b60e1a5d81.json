{"sha": "ae7a7472714df7b444d9e63b54a265b60e1a5d81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU3YTc0NzI3MTRkZjdiNDQ0ZDllNjNiNTRhMjY1YjYwZTFhNWQ4MQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-06-01T15:26:46Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-06-01T15:26:46Z"}, "message": "loop-dolop.c (doloop_optimize): Us likely max iteration bound.\n\n\n\t* loop-dolop.c (doloop_optimize): Us likely max iteration bound.\n\t* tree-parloops.c (parallelize_loops): likewise.\n\t* tree-ssa-loop-unswitch.c (tree_unswitch_single_loop,\n\ttree_unswitch_outer_loop): likewise.\n\nFrom-SVN: r236998", "tree": {"sha": "cdd86a66b261ea4a1fbf488364b2c8612a47419d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cdd86a66b261ea4a1fbf488364b2c8612a47419d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae7a7472714df7b444d9e63b54a265b60e1a5d81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae7a7472714df7b444d9e63b54a265b60e1a5d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae7a7472714df7b444d9e63b54a265b60e1a5d81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae7a7472714df7b444d9e63b54a265b60e1a5d81/comments", "author": null, "committer": null, "parents": [{"sha": "6442a6f43b4525a08526f9e55419f567a1af776c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6442a6f43b4525a08526f9e55419f567a1af776c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6442a6f43b4525a08526f9e55419f567a1af776c"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "c7486b2afcc3d98fb7bb53cc37dba10ac2b41e77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7a7472714df7b444d9e63b54a265b60e1a5d81/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7a7472714df7b444d9e63b54a265b60e1a5d81/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae7a7472714df7b444d9e63b54a265b60e1a5d81", "patch": "@@ -1,3 +1,10 @@\n+2016-06-01  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* loop-dolop.c (doloop_optimize): Us likely max iteration bound.\n+\t* tree-parloops.c (parallelize_loops): likewise.\n+\t* tree-ssa-loop-unswitch.c (tree_unswitch_single_loop,\n+\ttree_unswitch_outer_loop): likewise.\n+\n 2016-06-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/71371"}, {"sha": "3eb9b11d5e1f8448f36c2d93f266dd205a032a97", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7a7472714df7b444d9e63b54a265b60e1a5d81/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7a7472714df7b444d9e63b54a265b60e1a5d81/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=ae7a7472714df7b444d9e63b54a265b60e1a5d81", "patch": "@@ -638,7 +638,7 @@ doloop_optimize (struct loop *loop)\n \n   est_niter = get_estimated_loop_iterations_int (loop);\n   if (est_niter == -1)\n-    est_niter = get_max_loop_iterations_int (loop);\n+    est_niter = get_likely_max_loop_iterations_int (loop);\n \n   if (est_niter >= 0 && est_niter < 3)\n     {"}, {"sha": "1303ffc7d084c16287986d0567de788a5e537ff5", "filename": "gcc/tree-parloops.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7a7472714df7b444d9e63b54a265b60e1a5d81/gcc%2Ftree-parloops.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7a7472714df7b444d9e63b54a265b60e1a5d81/gcc%2Ftree-parloops.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-parloops.c?ref=ae7a7472714df7b444d9e63b54a265b60e1a5d81", "patch": "@@ -3288,7 +3288,7 @@ parallelize_loops (bool oacc_kernels_p)\n \n       estimated = estimated_stmt_executions_int (loop);\n       if (estimated == -1)\n-\testimated = max_stmt_executions_int (loop);\n+\testimated = likely_max_stmt_executions_int (loop);\n       /* FIXME: Bypass this check as graphite doesn't update the\n \t count and frequency correctly now.  */\n       if (!flag_loop_parallelize_all"}, {"sha": "73bdc6eab7d24c7d2fa9f7174663699557687510", "filename": "gcc/tree-ssa-loop-unswitch.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae7a7472714df7b444d9e63b54a265b60e1a5d81/gcc%2Ftree-ssa-loop-unswitch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae7a7472714df7b444d9e63b54a265b60e1a5d81/gcc%2Ftree-ssa-loop-unswitch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-unswitch.c?ref=ae7a7472714df7b444d9e63b54a265b60e1a5d81", "patch": "@@ -224,7 +224,7 @@ tree_unswitch_single_loop (struct loop *loop, int num)\n \t for unswitching.  */\n       iterations = estimated_loop_iterations_int (loop);\n       if (iterations < 0)\n-        iterations = max_loop_iterations_int (loop);\n+        iterations = likely_max_loop_iterations_int (loop);\n       if (iterations >= 0 && iterations <= 1)\n \t{\n \t  if (dump_file && (dump_flags & TDF_DETAILS))\n@@ -442,7 +442,7 @@ tree_unswitch_outer_loop (struct loop *loop)\n       for unswitching.  */\n   iterations = estimated_loop_iterations_int (loop);\n   if (iterations < 0)\n-    iterations = max_loop_iterations_int (loop);\n+    iterations = likely_max_loop_iterations_int (loop);\n   if (iterations >= 0 && iterations <= 1)\n     {\n       if (dump_file && (dump_flags & TDF_DETAILS))"}]}