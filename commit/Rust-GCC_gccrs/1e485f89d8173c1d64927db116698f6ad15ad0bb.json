{"sha": "1e485f89d8173c1d64927db116698f6ad15ad0bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU0ODVmODlkODE3M2MxZDY0OTI3ZGIxMTY2OThmNmFkMTVhZDBiYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-08-17T19:56:46Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-08-17T19:56:46Z"}, "message": "Fix build of --enable-gather-detailed-mem-stats (PR bootstrap/81864).\n\n2017-08-17  Martin Liska  <mliska@suse.cz>\n\n\tPR bootstrap/81864\n\t* tree-loop-distribution.c (ddrs_table): Change type to pointer\n\ttype.\n\t(get_data_dependence): Use it as pointer type.\n\t(distribute_loop): Likewise.\n\nFrom-SVN: r251165", "tree": {"sha": "b95cb3852bc5b1061c6e5ba125bb8c2590f0c78a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b95cb3852bc5b1061c6e5ba125bb8c2590f0c78a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e485f89d8173c1d64927db116698f6ad15ad0bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e485f89d8173c1d64927db116698f6ad15ad0bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e485f89d8173c1d64927db116698f6ad15ad0bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e485f89d8173c1d64927db116698f6ad15ad0bb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ccd2ece2f5232e6fa2d6ebb4227ca03af77b87b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ccd2ece2f5232e6fa2d6ebb4227ca03af77b87b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ccd2ece2f5232e6fa2d6ebb4227ca03af77b87b"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "4544c8500c636b1f993058f5fa27c7ed01fd24b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e485f89d8173c1d64927db116698f6ad15ad0bb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e485f89d8173c1d64927db116698f6ad15ad0bb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e485f89d8173c1d64927db116698f6ad15ad0bb", "patch": "@@ -1,3 +1,11 @@\n+2017-08-17  Martin Liska  <mliska@suse.cz>\n+\n+\tPR bootstrap/81864\n+\t* tree-loop-distribution.c (ddrs_table): Change type to pointer\n+\ttype.\n+\t(get_data_dependence): Use it as pointer type.\n+\t(distribute_loop): Likewise.\n+\n 2017-08-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/altivec.md (UNSPEC_VMRGOW_DIRECT): New constant."}, {"sha": "26b8b9a3751ae843b802fa90923d1b02e1c91cfd", "filename": "gcc/tree-loop-distribution.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e485f89d8173c1d64927db116698f6ad15ad0bb/gcc%2Ftree-loop-distribution.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e485f89d8173c1d64927db116698f6ad15ad0bb/gcc%2Ftree-loop-distribution.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-loop-distribution.c?ref=1e485f89d8173c1d64927db116698f6ad15ad0bb", "patch": "@@ -157,8 +157,7 @@ static vec<data_reference_p> datarefs_vec;\n #define DR_INDEX(dr)      ((uintptr_t) (dr)->aux)\n \n /* Hash table for data dependence relation in the loop to be distributed.  */\n-static hash_table<ddr_hasher> ddrs_table (389);\n-\n+static hash_table<ddr_hasher> *ddrs_table;\n \n /* A Reduced Dependence Graph (RDG) vertex representing a statement.  */\n struct rdg_vertex\n@@ -1183,7 +1182,7 @@ get_data_dependence (struct graph *rdg, data_reference_p a, data_reference_p b)\n \t      <= rdg_vertex_for_stmt (rdg, DR_STMT (b)));\n   ent.a = a;\n   ent.b = b;\n-  slot = ddrs_table.find_slot (&ent, INSERT);\n+  slot = ddrs_table->find_slot (&ent, INSERT);\n   if (*slot == NULL)\n     {\n       ddr = initialize_data_dependence_relation (a, b, loop_nest);\n@@ -2366,6 +2365,7 @@ static int\n distribute_loop (struct loop *loop, vec<gimple *> stmts,\n \t\t control_dependences *cd, int *nb_calls, bool *destroy_p)\n {\n+  ddrs_table = new hash_table<ddr_hasher> (389);\n   struct graph *rdg;\n   partition *partition;\n   bool any_builtin;\n@@ -2377,6 +2377,7 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n   if (!find_loop_nest (loop, &loop_nest))\n     {\n       loop_nest.release ();\n+      delete ddrs_table;\n       return 0;\n     }\n \n@@ -2391,6 +2392,7 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n \n       loop_nest.release ();\n       free_data_refs (datarefs_vec);\n+      delete ddrs_table;\n       return 0;\n     }\n \n@@ -2404,6 +2406,7 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n       free_rdg (rdg);\n       loop_nest.release ();\n       free_data_refs (datarefs_vec);\n+      delete ddrs_table;\n       return 0;\n     }\n \n@@ -2542,13 +2545,13 @@ distribute_loop (struct loop *loop, vec<gimple *> stmts,\n  ldist_done:\n   loop_nest.release ();\n   free_data_refs (datarefs_vec);\n-  for (hash_table<ddr_hasher>::iterator iter = ddrs_table.begin ();\n-       iter != ddrs_table.end (); ++iter)\n+  for (hash_table<ddr_hasher>::iterator iter = ddrs_table->begin ();\n+       iter != ddrs_table->end (); ++iter)\n     {\n       free_dependence_relation (*iter);\n       *iter = NULL;\n     }\n-  ddrs_table.empty ();\n+  delete ddrs_table;\n \n   FOR_EACH_VEC_ELT (partitions, i, partition)\n     partition_free (partition);"}]}