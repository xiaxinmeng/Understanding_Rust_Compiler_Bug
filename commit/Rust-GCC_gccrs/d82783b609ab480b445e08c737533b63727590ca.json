{"sha": "d82783b609ab480b445e08c737533b63727590ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgyNzgzYjYwOWFiNDgwYjQ0NWUwOGM3Mzc1MzNiNjM3Mjc1OTBjYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-07-14T20:15:47Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-07-14T20:15:47Z"}, "message": "mips.c (inside_function): Delete.\n\n\t* config/mips/mips.c (inside_function): Delete.\n\t(file_in_function_warning, ignore_line_number): Delete.\n\t(mips_output_filename): Don't warn about changing filenames within\n\ta function.\n\t(mips_output_lineno): Update accordingly.\n\t(mips_output_function_prologue): Don't reset the deleted variables.\n\t* config/mips/mips.h (inside_function): Delete.\n\t(file_in_function_warning, ignore_line_number): Delete.\n\nFrom-SVN: r69348", "tree": {"sha": "3eb8d2f7233dd6fc52bbca8bf83ab6c7b902fc80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eb8d2f7233dd6fc52bbca8bf83ab6c7b902fc80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d82783b609ab480b445e08c737533b63727590ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82783b609ab480b445e08c737533b63727590ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d82783b609ab480b445e08c737533b63727590ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d82783b609ab480b445e08c737533b63727590ca/comments", "author": null, "committer": null, "parents": [{"sha": "f088510d96142e9afaac98016660b46c3f1d50c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f088510d96142e9afaac98016660b46c3f1d50c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f088510d96142e9afaac98016660b46c3f1d50c9"}], "stats": {"total": 65, "additions": 16, "deletions": 49}, "files": [{"sha": "af7d3e96a2ba615fc199270647a8eb674fc33a10", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82783b609ab480b445e08c737533b63727590ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82783b609ab480b445e08c737533b63727590ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d82783b609ab480b445e08c737533b63727590ca", "patch": "@@ -1,5 +1,14 @@\n 2003-07-14  Richard Sandiford  <rsandifo@redhat.com>\n \n+\t* config/mips/mips.c (inside_function): Delete.\n+\t(file_in_function_warning, ignore_line_number): Delete.\n+\t(mips_output_filename): Don't warn about changing filenames within\n+\ta function.\n+\t(mips_output_lineno): Update accordingly.\n+\t(mips_output_function_prologue): Don't reset the deleted variables.\n+\t* config/mips/mips.h (inside_function): Delete.\n+\t(file_in_function_warning, ignore_line_number): Delete.\n+\n \t* config/mips/elf.h (OBJECT_FORMAT_COFF, EXTENDED_COFF): Remove undefs.\n \t* config/mips/elf64.h: Likewise.\n \t* config/mips/openbsd.h: Likewise."}, {"sha": "a6ddf2b17775e241f85703b3b40aee24801385f2", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 6, "deletions": 40, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82783b609ab480b445e08c737533b63727590ca/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82783b609ab480b445e08c737533b63727590ca/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=d82783b609ab480b445e08c737533b63727590ca", "patch": "@@ -465,10 +465,6 @@ int sdb_label_count = 0;\n /* Next label # for each statement for Silicon Graphics IRIS systems.  */\n int sym_lineno = 0;\n \n-/* Nonzero if inside of a function, because the stupid MIPS asm can't\n-   handle .files inside of functions.  */\n-int inside_function = 0;\n-\n /* Linked list of all externals that are to be emitted when optimizing\n    for the global pointer if they haven't been declared by the end of\n    the program with an appropriate .comm or initialization.  */\n@@ -485,14 +481,6 @@ static GTY (()) struct extern_list *extern_head = 0;\n /* Name of the file containing the current function.  */\n const char *current_function_file = \"\";\n \n-/* Warning given that Mips ECOFF can't support changing files\n-   within a function.  */\n-int file_in_function_warning = FALSE;\n-\n-/* Whether to suppress issuing .loc's because the user attempted\n-   to change the filename within a function.  */\n-int ignore_line_number = FALSE;\n-\n /* Number of nested .set noreorder, noat, nomacro, and volatile requests.  */\n int set_noreorder;\n int set_noat;\n@@ -5972,8 +5960,7 @@ mips_output_external_libcall (file, name)\n }\n #endif\n \f\n-/* Emit a new filename to a stream.  If this is MIPS ECOFF, watch out\n-   for .file's that start within a function.  If we are smuggling stabs, try to\n+/* Emit a new filename to a stream.  If we are smuggling stabs, try to\n    put out a MIPS ECOFF file and a stab.  */\n \n void\n@@ -6007,23 +5994,11 @@ mips_output_filename (stream, name)\n     }\n \n   else if (name != current_function_file\n-      && strcmp (name, current_function_file) != 0)\n+\t   && strcmp (name, current_function_file) != 0)\n     {\n-      if (inside_function && !TARGET_GAS)\n-\t{\n-\t  if (!file_in_function_warning)\n-\t    {\n-\t      file_in_function_warning = 1;\n-\t      ignore_line_number = 1;\n-\t      warning (\"MIPS ECOFF format does not allow changing filenames within functions with #line\");\n-\t    }\n-\t}\n-      else\n-\t{\n-\t  SET_FILE_NUMBER ();\n-\t  current_function_file = name;\n-\t  ASM_OUTPUT_FILENAME (stream, num_source_filenames, name);\n-\t}\n+      SET_FILE_NUMBER ();\n+      current_function_file = name;\n+      ASM_OUTPUT_FILENAME (stream, num_source_filenames, name);\n     }\n }\n \f\n@@ -6046,10 +6021,7 @@ mips_output_lineno (stream, line)\n     }\n   else\n     {\n-      fprintf (stream, \"\\n\\t%s.loc\\t%d %d\\n\",\n-\t       (ignore_line_number) ? \"#\" : \"\",\n-\t       num_source_filenames, line);\n-\n+      fprintf (stream, \"\\n\\t.loc\\t%d %d\\n\", num_source_filenames, line);\n       LABEL_AFTER_LOC (stream);\n     }\n }\n@@ -6935,8 +6907,6 @@ mips_output_function_prologue (file, size)\n       && current_function_args_info.fp_code != 0)\n     build_mips16_function_stub (file);\n \n-  inside_function = 1;\n-\n #ifndef FUNCTION_NAME_ALREADY_DECLARED\n   /* Get the function name the same way that toplev.c does before calling\n      assemble_start_function.  This is needed so that the name used here\n@@ -7542,10 +7512,6 @@ mips_output_function_epilogue (file, size)\n     }\n #endif\n \n-  /* Reset state info for each function.  */\n-  inside_function = 0;\n-  ignore_line_number = 0;\n-\n   while (string_constants != NULL)\n     {\n       struct string_constant *next;"}, {"sha": "bb75d118ab74b1714f16e444f91fcbef7cbdaa03", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d82783b609ab480b445e08c737533b63727590ca/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d82783b609ab480b445e08c737533b63727590ca/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=d82783b609ab480b445e08c737533b63727590ca", "patch": "@@ -114,9 +114,6 @@ extern char mips_reg_names[][8];\t/* register names (a0 vs. $4).  */\n extern char mips_print_operand_punct[256]; /* print_operand punctuation chars */\n extern const char *current_function_file; /* filename current function is in */\n extern int num_source_filenames;\t/* current .file # */\n-extern int inside_function;\t\t/* != 0 if inside of a function */\n-extern int ignore_line_number;\t\t/* != 0 if we are to ignore next .loc */\n-extern int file_in_function_warning;\t/* warning given about .file in func */\n extern int mips_section_threshold;\t/* # bytes of data/sdata cutoff */\n extern int sym_lineno;\t\t\t/* sgi next label # for each stmt */\n extern int set_noreorder;\t\t/* # of nested .set noreorder's  */\n@@ -3570,12 +3567,7 @@ do\t\t\t\t\t\t\t\t\t\\\n while (0)\n \n \n-/* How to tell the debugger about changes of source files.  Note, the\n-   mips ECOFF format cannot deal with changes of files inside of\n-   functions, which means the output of parser generators like bison\n-   is generally not debuggable without using the -l switch.  Lose,\n-   lose, lose.  Silicon graphics seems to want all .file's hardwired\n-   to 1.  */\n+/* How to tell the debugger about changes of source files.  */\n \n #ifndef SET_FILE_NUMBER\n #define SET_FILE_NUMBER() ++num_source_filenames"}]}