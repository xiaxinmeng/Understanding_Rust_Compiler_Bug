{"sha": "a07987797e2c65810e5cde19b964cca1897e3288", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA3OTg3Nzk3ZTJjNjU4MTBlNWNkZTE5Yjk2NGNjYTE4OTdlMzI4OA==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "amylaar@cygnus.co.uk", "date": "1998-04-20T10:59:18Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "1998-04-20T10:59:18Z"}, "message": "Fix some problems that resulted in assmebler messages 'Error: pcrel too far'\n\nFix some problems that resulted in assmebler messages 'Error: pcrel too far'\n\t* sh.c (find_barrier): Fix bug in ADDR_DIFF_VEC handling.\n\t(split_branches): Call init_insn_lengths.\n\nFrom-SVN: r19339", "tree": {"sha": "b5f1d20c1d6e150a06c48f2802cdff989730be3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5f1d20c1d6e150a06c48f2802cdff989730be3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a07987797e2c65810e5cde19b964cca1897e3288", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07987797e2c65810e5cde19b964cca1897e3288", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a07987797e2c65810e5cde19b964cca1897e3288", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a07987797e2c65810e5cde19b964cca1897e3288/comments", "author": null, "committer": null, "parents": [{"sha": "ced8dd8ccde9e294e7975e1d7c79e946d26f9b1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ced8dd8ccde9e294e7975e1d7c79e946d26f9b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ced8dd8ccde9e294e7975e1d7c79e946d26f9b1d"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "bb392977ca32b5d09b9a5c1249c10f8a703aa7a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a07987797e2c65810e5cde19b964cca1897e3288/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a07987797e2c65810e5cde19b964cca1897e3288/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a07987797e2c65810e5cde19b964cca1897e3288", "patch": "@@ -1,3 +1,8 @@\n+Mon Apr 20 18:19:40 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n+\n+\t* sh.c (find_barrier): Fix bug in ADDR_DIFF_VEC handling.\n+\t(split_branches): Call init_insn_lengths.\n+\n Mon Apr 20 07:37:49 1998  Michael Meissner  <meissner@cygnus.com>\n \n \t* i386.c: Include expr.h to get the change_address prototype"}, {"sha": "0c4231345c5fc67621005ac59b3f256662a1eecd", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a07987797e2c65810e5cde19b964cca1897e3288/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a07987797e2c65810e5cde19b964cca1897e3288/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=a07987797e2c65810e5cde19b964cca1897e3288", "patch": "@@ -1983,17 +1983,24 @@ find_barrier (num_mova, mova, from)\n \t{\n \t  if (num_mova)\n \t    num_mova--;\n-\t  if (found_barrier == good_barrier)\n+\t  if (barrier_align (next_real_insn (from)) == CACHE_LOG)\n \t    {\n \t      /* We have just passed the barrier in front front of the\n-\t\t ADDR_DIFF_VEC.  Since the ADDR_DIFF_VEC is accessed\n-\t\t as data, just like our pool constants, this is a good\n-\t\t opportunity to accommodate what we have gathered so far.\n+\t\t ADDR_DIFF_VEC, which is stored in found_barrier.  Since\n+\t\t the ADDR_DIFF_VEC is accessed as data, just like our pool\n+\t\t constants, this is a good opportunity to accommodate what\n+\t\t we have gathered so far.\n \t\t If we waited any longer, we could end up at a barrier in\n \t\t front of code, which gives worse cache usage for separated\n \t\t instruction / data caches.  */\n+\t      good_barrier = found_barrier;\n \t      break;\n \t    }\n+\t  else\n+\t    {\n+\t      rtx body = PATTERN (from);\n+\t      inc = XVECLEN (body, 1) * GET_MODE_SIZE (GET_MODE (body));\n+\t    }\n \t}\n \n       if (found_si)\n@@ -3196,6 +3203,10 @@ split_branches (first)\n \tdelete_insn (far_branch_list->far_label);\n       far_branch_list = far_branch_list->prev;\n     }\n+\n+  /* Instruction length information is no longer valid due to the new\n+     instructions that have been generated.  */\n+  init_insn_lengths ();\n }\n \n /* Dump out instruction addresses, which is useful for debugging the"}]}