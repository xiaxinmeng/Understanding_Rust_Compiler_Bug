{"sha": "d05fe940b70e2d4153f1105d9e811951a99a1716", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1ZmU5NDBiNzBlMmQ0MTUzZjExMDVkOWU4MTE5NTFhOTlhMTcxNg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2010-01-07T10:38:25Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2010-01-07T10:38:25Z"}, "message": "re PR tree-optimization/42157 (ICE building stage 1 libgcc: SEGV in compare_access_positions)\n\n2010-01-07  Martin Jambor  <mjambor@suse.cz>\n\n\tPR tree-optimization/42157\n\t* tree-sra.c (compare_access_positions): Stabilize sort if both\n\taccesses have integer types, return zero immediately if they are the\n\tsame.\n\nFrom-SVN: r155689", "tree": {"sha": "eae6b6af50dba96cc149e50451dd37e4de0e45fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eae6b6af50dba96cc149e50451dd37e4de0e45fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d05fe940b70e2d4153f1105d9e811951a99a1716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05fe940b70e2d4153f1105d9e811951a99a1716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d05fe940b70e2d4153f1105d9e811951a99a1716", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d05fe940b70e2d4153f1105d9e811951a99a1716/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a3c437d064e6d014ebf82453ba57a02a701ede9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a3c437d064e6d014ebf82453ba57a02a701ede9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a3c437d064e6d014ebf82453ba57a02a701ede9"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "62fb30180d74b0d50360cb49ec152f46f626c6e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05fe940b70e2d4153f1105d9e811951a99a1716/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05fe940b70e2d4153f1105d9e811951a99a1716/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d05fe940b70e2d4153f1105d9e811951a99a1716", "patch": "@@ -1,3 +1,10 @@\n+2010-01-07  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/42157\n+\t* tree-sra.c (compare_access_positions): Stabilize sort if both\n+\taccesses have integer types, return zero immediately if they are the\n+\tsame.\n+\n 2010-01-06  Richard Henderson  <rth@redhat.com>\n \n \tPR middle-end/41883"}, {"sha": "ebb40c4aa1ad95938a5a71e7f4f0f2d6b3bcf0b9", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d05fe940b70e2d4153f1105d9e811951a99a1716/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d05fe940b70e2d4153f1105d9e811951a99a1716/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=d05fe940b70e2d4153f1105d9e811951a99a1716", "patch": "@@ -1110,8 +1110,10 @@ compare_access_positions (const void *a, const void *b)\n \n   if (f1->size == f2->size)\n     {\n+      if (f1->type == f2->type)\n+\treturn 0;\n       /* Put any non-aggregate type before any aggregate type.  */\n-      if (!is_gimple_reg_type (f1->type)\n+      else if (!is_gimple_reg_type (f1->type)\n \t  && is_gimple_reg_type (f2->type))\n \treturn 1;\n       else if (is_gimple_reg_type (f1->type)\n@@ -1131,7 +1133,7 @@ compare_access_positions (const void *a, const void *b)\n       /* Put the integral type with the bigger precision first.  */\n       else if (INTEGRAL_TYPE_P (f1->type)\n \t       && INTEGRAL_TYPE_P (f2->type))\n-\treturn TYPE_PRECISION (f1->type) > TYPE_PRECISION (f2->type) ? -1 : 1;\n+\treturn TYPE_PRECISION (f2->type) - TYPE_PRECISION (f1->type);\n       /* Put any integral type with non-full precision last.  */\n       else if (INTEGRAL_TYPE_P (f1->type)\n \t       && (TREE_INT_CST_LOW (TYPE_SIZE (f1->type))"}]}