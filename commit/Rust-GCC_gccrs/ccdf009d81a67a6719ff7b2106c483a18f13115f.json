{"sha": "ccdf009d81a67a6719ff7b2106c483a18f13115f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2NkZjAwOWQ4MWE2N2E2NzE5ZmY3YjIxMDZjNDgzYTE4ZjEzMTE1Zg==", "commit": {"author": {"name": "Igor Tsimbalist", "email": "igor.v.tsimbalist@intel.com", "date": "2017-10-21T21:16:32Z"}, "committer": {"name": "Igor Tsimbalist", "email": "itsimbal@gcc.gnu.org", "date": "2017-10-21T21:16:32Z"}, "message": "Add x86 CET documentation.\n\ngcc/doc/\n\t* extend.texi: Add x86 specific to 'nocf_check' attribute.\n\tList CET intrinsics.\n\t* invoke.texi: Add -mcet, -mibt, -mshstk options.  Add x86\n\tspecific to -fcf-protection option.\n\nFrom-SVN: r253978", "tree": {"sha": "cbb6af002d0c076b874a60867539cb00085d34e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbb6af002d0c076b874a60867539cb00085d34e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ccdf009d81a67a6719ff7b2106c483a18f13115f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccdf009d81a67a6719ff7b2106c483a18f13115f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccdf009d81a67a6719ff7b2106c483a18f13115f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccdf009d81a67a6719ff7b2106c483a18f13115f/comments", "author": {"login": "itsimbal", "id": 29258612, "node_id": "MDQ6VXNlcjI5MjU4NjEy", "avatar_url": "https://avatars.githubusercontent.com/u/29258612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/itsimbal", "html_url": "https://github.com/itsimbal", "followers_url": "https://api.github.com/users/itsimbal/followers", "following_url": "https://api.github.com/users/itsimbal/following{/other_user}", "gists_url": "https://api.github.com/users/itsimbal/gists{/gist_id}", "starred_url": "https://api.github.com/users/itsimbal/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/itsimbal/subscriptions", "organizations_url": "https://api.github.com/users/itsimbal/orgs", "repos_url": "https://api.github.com/users/itsimbal/repos", "events_url": "https://api.github.com/users/itsimbal/events{/privacy}", "received_events_url": "https://api.github.com/users/itsimbal/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2a25448c490b16eea276521d818640bcaca75e35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a25448c490b16eea276521d818640bcaca75e35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a25448c490b16eea276521d818640bcaca75e35"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "3ada30edc3d0bd0f377e76e07c1060beac7cad4f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccdf009d81a67a6719ff7b2106c483a18f13115f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccdf009d81a67a6719ff7b2106c483a18f13115f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ccdf009d81a67a6719ff7b2106c483a18f13115f", "patch": "@@ -1,3 +1,10 @@\n+2017-10-21  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n+\n+\t* extend.texi: Add x86 specific to 'nocf_check' attribute.\n+\tList CET intrinsics.\n+\t* invoke.texi: Add -mcet, -mibt, -mshstk options.  Add x86\n+\tspecific to -fcf-protection option.\n+\n 2017-10-21  Igor Tsimbalist  <igor.v.tsimbalist@intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_IBT_SET): New."}, {"sha": "b1b9c29d18542ad0e5ff99333aa79a819cf83659", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccdf009d81a67a6719ff7b2106c483a18f13115f/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccdf009d81a67a6719ff7b2106c483a18f13115f/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=ccdf009d81a67a6719ff7b2106c483a18f13115f", "patch": "@@ -21519,6 +21519,25 @@ void __builtin_ia32_wrpkru (unsigned int)\n unsigned int __builtin_ia32_rdpkru ()\n @end smallexample\n \n+The following built-in functions are available when @option{-mcet} is used.\n+They are used to support Intel Control-flow Enforcment Technology (CET).\n+Each built-in function generates the  machine instruction that is part of the\n+function's name.\n+@smallexample\n+unsigned int __builtin_ia32_rdsspd (unsigned int)\n+unsigned long long __builtin_ia32_rdsspq (unsigned long long)\n+void __builtin_ia32_incsspd (unsigned int)\n+void __builtin_ia32_incsspq (unsigned long long)\n+void __builtin_ia32_saveprevssp(void);\n+void __builtin_ia32_rstorssp(void *);\n+void __builtin_ia32_wrssd(unsigned int, void *);\n+void __builtin_ia32_wrssq(unsigned long long, void *);\n+void __builtin_ia32_wrussd(unsigned int, void *);\n+void __builtin_ia32_wrussq(unsigned long long, void *);\n+void __builtin_ia32_setssbsy(void);\n+void __builtin_ia32_clrssbsy(void *);\n+@end smallexample\n+\n @node x86 transactional memory intrinsics\n @subsection x86 Transactional Memory Intrinsics\n "}, {"sha": "c3128649f4caac86b2ea0c88ce8d6a8132948ded", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 38, "deletions": 3, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ccdf009d81a67a6719ff7b2106c483a18f13115f/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ccdf009d81a67a6719ff7b2106c483a18f13115f/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ccdf009d81a67a6719ff7b2106c483a18f13115f", "patch": "@@ -1204,6 +1204,7 @@ See RS/6000 and PowerPC Options.\n -msse4a  -m3dnow  -m3dnowa  -mpopcnt  -mabm  -mbmi  -mtbm  -mfma4  -mxop @gol\n -mlzcnt  -mbmi2  -mfxsr  -mxsave  -mxsaveopt  -mrtm  -mlwp  -mmpx  @gol\n -mmwaitx  -mclzero  -mpku  -mthreads @gol\n+-mcet -mibt -mshstk @gol\n -mms-bitfields  -mno-align-stringops  -minline-all-stringops @gol\n -minline-stringops-dynamically  -mstringop-strategy=@var{alg} @gol\n -mmemcpy-strategy=@var{strategy}  -mmemset-strategy=@var{strategy} @gol\n@@ -11441,6 +11442,11 @@ You can also use the @code{nocf_check} attribute to identify\n which functions and calls should be skipped from instrumentation\n (@pxref{Function Attributes}).\n \n+Currently the x86 GNU/Linux target provides an implementation based\n+on Intel Control-flow Enforcement Technology (CET).  Instrumentation\n+for x86 is controlled by target-specific options @option{-mcet},\n+@option{-mibt} and @option{-mshstk} (@pxref{x86 Options}).\n+\n @item -fstack-protector\n @opindex fstack-protector\n Emit extra code to check for buffer overflows, such as stack smashing\n@@ -25852,15 +25858,19 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @need 200\n @itemx -mclzero\n @opindex mclzero\n+@need 200\n @itemx -mpku\n @opindex mpku\n+@need 200\n+@itemx -mcet\n+@opindex mcet\n These switches enable the use of instructions in the MMX, SSE,\n SSE2, SSE3, SSSE3, SSE4.1, AVX, AVX2, AVX512F, AVX512PF, AVX512ER, AVX512CD,\n SHA, AES, PCLMUL, FSGSBASE, RDRND, F16C, FMA, SSE4A, FMA4, XOP, LWP, ABM,\n AVX512VL, AVX512BW, AVX512DQ, AVX512IFMA AVX512VBMI, BMI, BMI2, FXSR,\n-XSAVE, XSAVEOPT, LZCNT, RTM, MPX, MWAITX, PKU, 3DNow!@: or enhanced 3DNow!@:\n-extended instruction sets.  Each has a corresponding @option{-mno-} option\n-to disable use of these instructions.\n+XSAVE, XSAVEOPT, LZCNT, RTM, MPX, MWAITX, PKU, IBT, SHSTK,\n+3DNow!@: or enhanced 3DNow!@: extended instruction sets.  Each has a\n+corresponding @option{-mno-} option to disable use of these instructions.\n \n These extensions are also available as built-in functions: see\n @ref{x86 Built-in Functions}, for details of the functions enabled and\n@@ -25880,6 +25890,13 @@ supported architecture, using the appropriate flags.  In particular,\n the file containing the CPU detection code should be compiled without\n these options.\n \n+The @option{-mcet} option turns on the @option{-mibt} and @option{-mshstk}\n+options.  The @option{-mibt} option enables indirect branch tracking support\n+and the @option{-mshstk} option enables shadow stack support from\n+Intel Control-flow Enforcement Technology (CET).  The compiler also provides\n+a number of built-in functions for fine-grained control in a CET-based\n+application.  See @xref{x86 Built-in Functions}, for more information.\n+\n @item -mdump-tune-features\n @opindex mdump-tune-features\n This option instructs GCC to dump the names of the x86 performance \n@@ -25958,6 +25975,24 @@ see @ref{Other Builtins} for details.\n This option enables use of the @code{movbe} instruction to implement\n @code{__builtin_bswap32} and @code{__builtin_bswap64}.\n \n+@item -mibt\n+@opindex mibt\n+This option tells the compiler to use indirect branch tracking support\n+(for indirect calls and jumps) from x86 Control-flow Enforcement\n+Technology (CET).  The option has effect only if the\n+@option{-fcf-protection=full} or @option{-fcf-protection=branch} option\n+is specified. The option @option{-mibt} is on by default when the\n+@code{-mcet} option is specified.\n+\n+@item -mshstk\n+@opindex mshstk\n+This option tells the compiler to use shadow stack support (return\n+address tracking) from x86 Control-flow Enforcement Technology (CET).\n+The option has effect only if the @option{-fcf-protection=full} or\n+@option{-fcf-protection=return} option is specified.  The option\n+@option{-mshstk} is on by default when the @option{-mcet} option is\n+specified.\n+\n @item -mcrc32\n @opindex mcrc32\n This option enables built-in functions @code{__builtin_ia32_crc32qi},"}]}