{"sha": "fbe7e2f5049874ae13b1366b69f79a1a6766b9b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJlN2UyZjUwNDk4NzRhZTEzYjEzNjZiNjlmNzlhMWE2NzY2YjliMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2005-06-17T00:56:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-17T00:56:07Z"}, "message": "re PR tree-optimization/22022 (ACATS ICE cxg1002 tree_split_edge, at tree-cfg.c:3025)\n\n        PR tree-opt/22022\n        * tree-complex.c (update_phi_components): Avoid no-op moves.\n\nFrom-SVN: r101121", "tree": {"sha": "90d35f461b3e1c2cf5dbcd8e239a2a2aeb507817", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90d35f461b3e1c2cf5dbcd8e239a2a2aeb507817"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/comments", "author": null, "committer": null, "parents": [{"sha": "73194ef6602284f15e4befb91a06242282ba68cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73194ef6602284f15e4befb91a06242282ba68cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73194ef6602284f15e4befb91a06242282ba68cd"}], "stats": {"total": 59, "additions": 59, "deletions": 0}, "files": [{"sha": "44ed9d2d3a3d94a8279da4da2dbe5a65b1be6755", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbe7e2f5049874ae13b1366b69f79a1a6766b9b2", "patch": "@@ -1,3 +1,8 @@\n+2005-06-16  Richard Henderson  <rth@redhat.com>\n+\n+\tPR tree-opt/22022\n+\t* tree-complex.c (update_phi_components): Avoid no-op moves.\n+\n 2005-06-16  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* Makefile.in (cc1-checksum.c): Use"}, {"sha": "53fc7e98e3b56c61b7dfa6ec7372b9a407940c09", "filename": "gcc/testsuite/g++.dg/opt/complex2.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex2.C?ref=fbe7e2f5049874ae13b1366b69f79a1a6766b9b2", "patch": "@@ -0,0 +1,24 @@\n+// PR 22022\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+_Complex float f();\n+_Complex float g();\n+_Complex float h()throw();\n+void i(_Complex float)throw();\n+\n+void j(void)\n+{\n+  _Complex float x = h();\n+  try\n+  {\n+    try\n+    {\n+      x = f();\n+    }catch (...)\n+    {\n+      x = g();\n+    }\n+  }catch(...){}\n+  i(x);\n+}"}, {"sha": "9a3fdf3f0d2359e8dca80fba9c8552c0803d077e", "filename": "gcc/testsuite/g++.dg/opt/complex3.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fcomplex3.C?ref=fbe7e2f5049874ae13b1366b69f79a1a6766b9b2", "patch": "@@ -0,0 +1,24 @@\n+// PR 22022\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+_Complex float f();\n+_Complex float g();\n+_Complex float h()throw();\n+void i(float)throw();\n+\n+float j(void)\n+{\n+  _Complex float x = h();\n+  try\n+  {\n+    try\n+    {\n+      x = f();\n+    }catch (...)\n+    {\n+      x += g();\n+    }\n+  }catch(...){}\n+  i(__builtin_crealf(x)+__builtin_cimagf(x));\n+}"}, {"sha": "a3470b1b7b6977c0d562db35406353b113203978", "filename": "gcc/tree-complex.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/gcc%2Ftree-complex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbe7e2f5049874ae13b1366b69f79a1a6766b9b2/gcc%2Ftree-complex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-complex.c?ref=fbe7e2f5049874ae13b1366b69f79a1a6766b9b2", "patch": "@@ -577,6 +577,12 @@ update_phi_components (basic_block bb)\n \t    tree arg = PHI_ARG_DEF (phi, i);\n \t    tree r, i;\n \n+\t    /* Avoid no-op assignments.  This also prevents insertting stmts\n+\t       onto abnormal edges, assuming the PHI isn't already broken.  */\n+\t    if (TREE_CODE (arg) == SSA_NAME\n+\t\t&& SSA_NAME_VAR (arg) == SSA_NAME_VAR (lhs))\n+\t      continue;\n+\n \t    r = extract_component (NULL, arg, 0, false);\n \t    i = extract_component (NULL, arg, 1, false);\n \t    update_complex_components_on_edge (e, NULL, lhs, r, i);"}]}