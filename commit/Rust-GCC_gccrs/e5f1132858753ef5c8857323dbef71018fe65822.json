{"sha": "e5f1132858753ef5c8857323dbef71018fe65822", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVmMTEzMjg1ODc1M2VmNWM4ODU3MzIzZGJlZjcxMDE4ZmU2NTgyMg==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-09-23T20:16:59Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2003-09-23T20:16:59Z"}, "message": "config.gcc: Set use_fixproto=no in each specific *-gnu* configuration...\n\n\t* config.gcc: Set use_fixproto=no in each specific *-gnu*\n\tconfiguration, rather than the generic one.\n\nFrom-SVN: r71695", "tree": {"sha": "5e4b8865a64dfee87b4f367fddcba7ad1c63c446", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e4b8865a64dfee87b4f367fddcba7ad1c63c446"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5f1132858753ef5c8857323dbef71018fe65822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f1132858753ef5c8857323dbef71018fe65822", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5f1132858753ef5c8857323dbef71018fe65822", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5f1132858753ef5c8857323dbef71018fe65822/comments", "author": null, "committer": null, "parents": [{"sha": "11f10e6b1f34001a5abd7b0046c28610b058b1ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f10e6b1f34001a5abd7b0046c28610b058b1ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11f10e6b1f34001a5abd7b0046c28610b058b1ff"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "2a175b8505938e22f0dec7059af77cb3d668f064", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f1132858753ef5c8857323dbef71018fe65822/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f1132858753ef5c8857323dbef71018fe65822/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e5f1132858753ef5c8857323dbef71018fe65822", "patch": "@@ -1,3 +1,8 @@\n+2003-09-23  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* config.gcc: Set use_fixproto=no in each specific *-gnu*\n+\tconfiguration, rather than the generic one.\n+\n 2003-09-23  Richard Henderson  <rth@redhat.com>\n \n \t* tree-inline.c (remap_save_expr): Map new save_expr to identity\n@@ -44,6 +49,18 @@\n \n 2003-09-22  Nathnael Nerode  <neroden@gcc.gnu.org>\n \n+\t* config.gcc: Do per-target disabling of fixproto here in clauses,\n+\tnot in t- fragments.\n+\t* configure.in: Adjust to set STMP_FIXPROTO correctly.\n+\t* configure: Regenerate.\n+\t* config/arm/t-semi, config/cris/t-cris, config/i386/t-beos,\n+\tconfig/i386/t-cygming, config/i386/t-nto, config/ia64/t-hpux,\n+\tt-freebsd, t-linux, t-netbsd, t-openbsd, t-rtems, t-vxworks,\n+\txtensa/t-xtensa: Remove setting of STMP_FIXPROTO.\n+\t* config/i370/t-oe, config/i386/t-netware, config/pa/t-bsd,\n+\tt-interix, t-linux-aout:  Delete files consisting only of\n+\tsetting of STMP_FIXPROTO.\t\n+\n \t* config.host: Allow unknown hosts (not targets).  Allow\n \tns32k-*-netbsdelf* as a host (not a target).  Remove redundant\n \tempty clauses.  Remove useless obsolete-configuration clause."}, {"sha": "b5d4d62b7daa6078a0a9db0f0029df454c7811ed", "filename": "gcc/config.gcc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5f1132858753ef5c8857323dbef71018fe65822/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5f1132858753ef5c8857323dbef71018fe65822/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=e5f1132858753ef5c8857323dbef71018fe65822", "patch": "@@ -359,7 +359,6 @@ case $machine in\n \t\ttm_file=\"${cpu_type}/${cpu_type}.h i386/unix.h i386/att.h dbxelf.h elfos.h svr4.h linux.h i386/linux.h gnu.h ${tm_file}\"\n \t\t;;\n \tesac\n-\tuse_fixproto=no\n \t;;\n *-*-openbsd*)\n \ttmake_file=\"t-libc-ok t-openbsd t-libgcc-pic\"\n@@ -514,6 +513,7 @@ alpha*-*-linux*)\n alpha*-*-gnu*)\n \ttarget_cpu_default=\"MASK_GAS\"\n \ttmake_file=\"${tmake_file} alpha/t-crtfm alpha/t-alpha alpha/t-ieee\"\n+\tuse_fixproto=no\n \t;;\n alpha*-*-freebsd*)\n \ttm_file=\"${tm_file} ${fbsd_tm_file} alpha/elf.h alpha/freebsd.h\"\n@@ -967,6 +967,7 @@ x86_64-*-linux*)\n \tuse_fixproto=no\n \t;;\n i[34567]86-*-gnu*)\n+\tuse_fixproto=no\n \t;;\n i[34567]86-pc-msdosdjgpp*)\n \txm_file=i386/xm-djgpp.h\n@@ -1587,6 +1588,7 @@ powerpc64-*-linux*)\n powerpc64-*-gnu*)\n \ttm_file=\"${cpu_type}/${cpu_type}.h elfos.h svr4.h freebsd-spec.h gnu.h rs6000/sysv4.h rs6000/linux64.h rs6000/gnu.h\"\n \ttmake_file=\"rs6000/t-fprules t-slibgcc-elf-ver t-gnu rs6000/t-linux64\"\n+\tuse_fixproto=no\n \t;;\n powerpc-*-beos*)\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/beos.h rs6000/xcoff.h\"\n@@ -1677,6 +1679,7 @@ powerpc-*-gnu*)\n \tif test x$enable_threads = xyes; then\n \t\tthread_file='posix'\n \tfi\n+\tuse_fixproto=no\n \t;;\n powerpc-wrs-vxworks*)\n \t# We want vxworks.h after rs6000/sysv4.h, which unfortunately"}]}