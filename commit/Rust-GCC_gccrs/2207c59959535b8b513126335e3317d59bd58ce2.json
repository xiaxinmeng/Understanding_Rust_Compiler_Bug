{"sha": "2207c59959535b8b513126335e3317d59bd58ce2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIwN2M1OTk1OTUzNWI4YjUxMzEyNjMzNWUzMzE3ZDU5YmQ1OGNlMg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-02-20T04:31:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-02-20T04:31:16Z"}, "message": "re PR c++/69743 (function overload with variadic arguments - template instantiation depth exceeds maximum (gcc4, clang - no problem))\n\n\tPR c++/69743\n\t* call.c (remaining_arguments): No longer static.\n\t* cp-tree.h: Declare it.\n\t* pt.c (more_specialized_fn): Use it.\n\nFrom-SVN: r233579", "tree": {"sha": "d038b95ebbc4f644bae8790434bf2f844546c414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d038b95ebbc4f644bae8790434bf2f844546c414"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2207c59959535b8b513126335e3317d59bd58ce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2207c59959535b8b513126335e3317d59bd58ce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2207c59959535b8b513126335e3317d59bd58ce2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2207c59959535b8b513126335e3317d59bd58ce2/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "313efd9efb15ebaac341319515dc227f0229f073", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/313efd9efb15ebaac341319515dc227f0229f073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/313efd9efb15ebaac341319515dc227f0229f073"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "ca3b14bff1fce49c569ba827e4ccf990e3882c60", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2207c59959535b8b513126335e3317d59bd58ce2", "patch": "@@ -1,3 +1,10 @@\n+2016-02-19  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/69743\n+\t* call.c (remaining_arguments): No longer static.\n+\t* cp-tree.h: Declare it.\n+\t* pt.c (more_specialized_fn): Use it.\n+\n 2016-02-19  Jakub Jelinek  <jakub@redhat.com>\n \t    Bernd Edlinger  <bernd.edlinger@hotmail.de>\n "}, {"sha": "4226094969a1addee3081a7b14c7aa987ea6d8c0", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=2207c59959535b8b513126335e3317d59bd58ce2", "patch": "@@ -1905,7 +1905,7 @@ add_candidate (struct z_candidate **candidates,\n /* Return the number of remaining arguments in the parameter list\n    beginning with ARG.  */\n \n-static int\n+int\n remaining_arguments (tree arg)\n {\n   int n;"}, {"sha": "3c23a83a824b5f5ebca4e93e01c0e48977af7db8", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2207c59959535b8b513126335e3317d59bd58ce2", "patch": "@@ -5612,6 +5612,7 @@ extern tree make_temporary_var_for_ref_to_temp\t(tree, tree);\n extern bool type_has_extended_temps\t\t(tree);\n extern tree strip_top_quals\t\t\t(tree);\n extern bool reference_related_p\t\t\t(tree, tree);\n+extern int remaining_arguments\t\t\t(tree);\n extern tree perform_implicit_conversion\t\t(tree, tree, tsubst_flags_t);\n extern tree perform_implicit_conversion_flags\t(tree, tree, tsubst_flags_t, int);\n extern tree build_integral_nontype_arg_conv\t(tree, tree, tsubst_flags_t);"}, {"sha": "65edfa79d3ab027a493147996606e69bd7aad103", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=2207c59959535b8b513126335e3317d59bd58ce2", "patch": "@@ -20288,7 +20288,7 @@ more_specialized_fn (tree pat1, tree pat2, int len)\n \n       if (TREE_CODE (arg1) == TYPE_PACK_EXPANSION)\n         {\n-          int i, len2 = list_length (args2);\n+          int i, len2 = remaining_arguments (args2);\n           tree parmvec = make_tree_vec (1);\n           tree argvec = make_tree_vec (len2);\n           tree ta = args2;\n@@ -20312,7 +20312,7 @@ more_specialized_fn (tree pat1, tree pat2, int len)\n         }\n       else if (TREE_CODE (arg2) == TYPE_PACK_EXPANSION)\n         {\n-          int i, len1 = list_length (args1);\n+          int i, len1 = remaining_arguments (args1);\n           tree parmvec = make_tree_vec (1);\n           tree argvec = make_tree_vec (len1);\n           tree ta = args1;"}, {"sha": "cada9725090ad309926fa94a0382ada49da69d52", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic167.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic167.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2207c59959535b8b513126335e3317d59bd58ce2/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic167.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic167.C?ref=2207c59959535b8b513126335e3317d59bd58ce2", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/69743\n+// { dg-do compile { target c++11 } }\n+\n+template <typename D, typename... T>\n+void f(int, T... d)\n+{\n+}\n+\n+template <typename D, typename... T>\n+void f(T... d)\n+{\n+  f<D>(1, d...);\n+}\n+\n+void g(void)\n+{\n+  f<long>(1.0);\n+}"}]}