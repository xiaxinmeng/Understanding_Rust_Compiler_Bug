{"sha": "f232183759f43faadb2a392c6e03aaacd2172371", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIzMjE4Mzc1OWY0M2ZhYWRiMmEzOTJjNmUwM2FhYWNkMjE3MjM3MQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-02-01T22:30:35Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-02-01T22:30:35Z"}, "message": "Makefile.in (specs.ready): New target.\n\n        * Makefile.in (specs.ready): New target.\n        (fixinc.sh): Depend on `specs.ready' instead of `specs'.\n\nFrom-SVN: r31743", "tree": {"sha": "0685386b132b90bfb7285072f64cd5b9275b0cb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0685386b132b90bfb7285072f64cd5b9275b0cb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f232183759f43faadb2a392c6e03aaacd2172371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f232183759f43faadb2a392c6e03aaacd2172371", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f232183759f43faadb2a392c6e03aaacd2172371", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f232183759f43faadb2a392c6e03aaacd2172371/comments", "author": null, "committer": null, "parents": [{"sha": "dafb9c663743c5c2fb309c65fe6e579d9af74256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dafb9c663743c5c2fb309c65fe6e579d9af74256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dafb9c663743c5c2fb309c65fe6e579d9af74256"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "5027333ef7d672e01d9578f66b9d753db8a8ee6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f232183759f43faadb2a392c6e03aaacd2172371/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f232183759f43faadb2a392c6e03aaacd2172371/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f232183759f43faadb2a392c6e03aaacd2172371", "patch": "@@ -1,3 +1,8 @@\n+2000-02-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* Makefile.in (specs.ready): New target.\n+\t(fixinc.sh): Depend on `specs.ready' instead of `specs'.\n+\n 2000-02-01  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* fixinc.irix: Use unique filenames for writing into /tmp,"}, {"sha": "beafcd524ccc348b54d0d1a8bfc1421e892a1a1b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f232183759f43faadb2a392c6e03aaacd2172371/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f232183759f43faadb2a392c6e03aaacd2172371/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f232183759f43faadb2a392c6e03aaacd2172371", "patch": "@@ -2160,11 +2160,21 @@ stmp-int-hdrs: stmp-fixinc $(USER_H) xlimits.h\n stmp-headers:\n \ttouch $@\n \n+# fixinc.sh depends on this, not on specs directly.\n+# The idea is to make sure specs gets built, but not rerun fixinc.sh\n+# after each stage just because specs' mtime has changed.\n+specs.ready: specs\n+\t-if [ -f specs.ready ] ; then \\\n+\t\ttrue; \\\n+\telse \\\n+\t\ttouch specs.ready; \\\n+\tfi\n+\n FIXINCSRCDIR=$(srcdir)/fixinc\n fixinc.sh: $(FIXINCSRCDIR)/mkfixinc.sh $(FIXINCSRCDIR)/fixincl.c \\\n \t$(FIXINCSRCDIR)/procopen.c $(FIXINCSRCDIR)/gnu-regex.c \\\n \t$(FIXINCSRCDIR)/server.c $(FIXINCSRCDIR)/gnu-regex.h \\\n-\t$(FIXINCSRCDIR)/server.h $(FIXINCSRCDIR)/inclhack.def specs\n+\t$(FIXINCSRCDIR)/server.h $(FIXINCSRCDIR)/inclhack.def specs.ready\n \tMAKE=\"$(MAKE)\"; srcdir=`cd $(srcdir)/fixinc; pwd` ; \\\n \texport MAKE srcdir ; \\\n \tcd ./fixinc; $(SHELL) $${srcdir}/mkfixinc.sh $(target)"}]}