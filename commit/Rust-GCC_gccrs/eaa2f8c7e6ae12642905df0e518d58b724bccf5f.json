{"sha": "eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFhMmY4YzdlNmFlMTI2NDI5MDVkZjBlNTE4ZDU4YjcyNGJjY2Y1Zg==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@rfc1149.net", "date": "2008-05-14T07:07:24Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-05-14T07:07:24Z"}, "message": "sem_attr.adb (Analyze_Attribute, [...]): Add restrictions to the prefix of 'Old.\n\n    gcc/ada/\n\t* sem_attr.adb (Analyze_Attribute, Attribute_Old case): Add\n\trestrictions to the prefix of 'Old.\n\t* sem_util.ads, sem_util.adb (In_Parameter_Specification): New.\n\t* gnat_rm.texi ('Old): Note that 'Old cannot be applied to local\n\tvariables.\n\n    gcc/testsuite/\n\t* gnat.dg/old_errors.ads, gnat.dg/old_errors.adb: New.\n\nCo-Authored-By: Robert Dewar <dewar@adacore.com>\n\nFrom-SVN: r135282", "tree": {"sha": "1939edff40cd3e3eb25681a742a9b0853753fd55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1939edff40cd3e3eb25681a742a9b0853753fd55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/comments", "author": {"login": "samueltardieu", "id": 44656, "node_id": "MDQ6VXNlcjQ0NjU2", "avatar_url": "https://avatars.githubusercontent.com/u/44656?v=4", "gravatar_id": "", "url": "https://api.github.com/users/samueltardieu", "html_url": "https://github.com/samueltardieu", "followers_url": "https://api.github.com/users/samueltardieu/followers", "following_url": "https://api.github.com/users/samueltardieu/following{/other_user}", "gists_url": "https://api.github.com/users/samueltardieu/gists{/gist_id}", "starred_url": "https://api.github.com/users/samueltardieu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/samueltardieu/subscriptions", "organizations_url": "https://api.github.com/users/samueltardieu/orgs", "repos_url": "https://api.github.com/users/samueltardieu/repos", "events_url": "https://api.github.com/users/samueltardieu/events{/privacy}", "received_events_url": "https://api.github.com/users/samueltardieu/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0beb3d66eabd1090b50ac68e1741756db72f595a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0beb3d66eabd1090b50ac68e1741756db72f595a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0beb3d66eabd1090b50ac68e1741756db72f595a"}], "stats": {"total": 153, "additions": 152, "deletions": 1}, "files": [{"sha": "b473b8e6fc21800c9c861ca106003a7e56e744ea", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "patch": "@@ -1,3 +1,12 @@\n+2008-05-14  Samuel Tardieu  <sam@rfc1149.net>\n+            Robert Dewar <dewar@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute, Attribute_Old case): Add\n+\trestrictions to the prefix of 'Old.\n+\t* sem_util.ads, sem_util.adb (In_Parameter_Specification): New.\n+\t* gnat_rm.texi ('Old): Note that 'Old cannot be applied to local\n+\tvariables.\n+\n 2008-05-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/24880"}, {"sha": "c048581d662d2e801fd35d7dfeb0c3c807a1c42b", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "patch": "@@ -5774,7 +5774,8 @@ you can refer to Arg1.Field'Old which yields the value of\n Arg1.Field on entry. The implementation simply involves generating\n an object declaration which captures the value on entry. Any\n prefix is allowed except one of a limited type (since limited\n-types cannot be copied to capture their values).\n+types cannot be copied to capture their values) or a local variable\n+(since it does not exist at subprogram entry time).\n \n The following example shows the use of 'Old to implement\n a test of a postcondition:"}, {"sha": "6a7846eacba6befd861e407b741dd03282738c51", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "patch": "@@ -3480,6 +3480,68 @@ package body Sem_Attr is\n             Error_Attr (\"attribute % cannot apply to limited objects\", P);\n          end if;\n \n+         --  Check that the expression does not refer to local entities\n+\n+         Check_Local : declare\n+            Subp : Entity_Id := Current_Subprogram;\n+\n+            function Process (N : Node_Id) return Traverse_Result;\n+            --  Check that N does not contain references to local variables\n+            --  or other local entities of Subp.\n+\n+            -------------\n+            -- Process --\n+            -------------\n+\n+            function Process (N : Node_Id) return Traverse_Result is\n+            begin\n+               if Is_Entity_Name (N)\n+                 and then not Is_Formal (Entity (N))\n+                 and then Enclosing_Subprogram (Entity (N)) = Subp\n+               then\n+                  Error_Msg_Node_1 := Entity (N);\n+                  Error_Attr\n+                    (\"attribute % cannot refer to local variable&\", N);\n+               end if;\n+\n+               return OK;\n+            end Process;\n+\n+            procedure Check_No_Local is new Traverse_Proc;\n+\n+         --  Start of processing for Check_Local\n+\n+         begin\n+            Check_No_Local (P);\n+\n+            if In_Parameter_Specification (P) then\n+\n+               --  We have additional restrictions on using 'Old in parameter\n+               --  specifications.\n+\n+               if Present (Enclosing_Subprogram (Current_Subprogram)) then\n+\n+                  --  Check that there is no reference to the enclosing\n+                  --  subprogram local variables. Otherwise, we might end\n+                  --  up being called from the enclosing subprogram and thus\n+                  --  using 'Old on a local variable which is not defined\n+                  --  at entry time.\n+\n+                  Subp := Enclosing_Subprogram (Current_Subprogram);\n+                  Check_No_Local (P);\n+\n+               else\n+                  --  We must prevent default expression of library-level\n+                  --  subprogram from using 'Old, as the subprogram may be\n+                  --  used in elaboration code for which there is no enclosing\n+                  --  subprogram.\n+\n+                  Error_Attr\n+                    (\"attribute % can only appear within subprogram\", N);\n+               end if;\n+            end if;\n+         end Check_Local;\n+\n       ------------\n       -- Output --\n       ------------"}, {"sha": "c335417d1b705e7a234b198936c294c14a290a93", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "patch": "@@ -5374,6 +5374,26 @@ package body Sem_Util is\n       return False;\n    end In_Package_Body;\n \n+   --------------------------------\n+   -- In_Parameter_Specification --\n+   --------------------------------\n+\n+   function In_Parameter_Specification (N : Node_Id) return Boolean is\n+      PN : Node_Id;\n+\n+   begin\n+      PN := Parent (N);\n+      while Present (PN) loop\n+         if Nkind (PN) = N_Parameter_Specification then\n+            return True;\n+         end if;\n+\n+         PN := Parent (PN);\n+      end loop;\n+\n+      return False;\n+   end In_Parameter_Specification;\n+\n    --------------------------------------\n    -- In_Subprogram_Or_Concurrent_Unit --\n    --------------------------------------"}, {"sha": "866bd7f98a569ec0585f38806d599a501aa270b8", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "patch": "@@ -590,6 +590,9 @@ package Sem_Util is\n    function In_Package_Body return Boolean;\n    --  Returns True if current scope is within a package body\n \n+   function In_Parameter_Specification (N : Node_Id) return Boolean;\n+   --  Returns True if node N belongs to a parameter specification\n+\n    function In_Subprogram_Or_Concurrent_Unit return Boolean;\n    --  Determines if the current scope is within a subprogram compilation\n    --  unit (inside a subprogram declaration, subprogram body, or generic"}, {"sha": "05a2d2569a00e27d1fbce628fb3c0002df205871", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "patch": "@@ -1,3 +1,7 @@\n+2008-05-14  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\t* gnat.dg/old_errors.ads, gnat.dg/old_errors.adb: New.\n+\n 2008-05-14  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \t* g++.dg/eh/080513-1.C: New testcase."}, {"sha": "846c6c61f259e81c8a29b7bb60271df3b4c32ec6", "filename": "gcc/testsuite/gnat.dg/old_errors.adb", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Ftestsuite%2Fgnat.dg%2Fold_errors.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Ftestsuite%2Fgnat.dg%2Fold_errors.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fold_errors.adb?ref=eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "patch": "@@ -0,0 +1,47 @@\n+-- { dg-do compile }\n+package body Old_Errors is\n+\n+   A : Integer;\n+\n+   function F\n+     (X : Integer := A'Old) -- { dg-error \"can only appear within subprogram\" }\n+     return Integer is\n+   begin\n+      return X;\n+   end F;\n+\n+   procedure P (I : in Integer; O : out Integer; IO : in out Integer) is\n+      Y : Integer := 0;\n+      function G\n+        (X : Integer := Y'Old) -- { dg-error \"cannot refer to local variable\" }\n+        return Integer is\n+      begin\n+         return X;\n+      end G;\n+\n+      function H (X : Integer := A'Old) return Integer is  -- OK\n+      begin\n+         return X;\n+      end H;\n+\n+   begin\n+      Y := Y'Old; -- { dg-error \"cannot refer to local variable\" }\n+      declare\n+         Z : Integer := 0;\n+         procedure Inner is\n+            IL : Integer := 0;\n+         begin\n+            IL := IL'Old; -- { dg-error \"cannot refer to local variable\" }\n+            Z  := Z'Old;  -- OK\n+         end Inner;\n+      begin\n+         Y := Z'Old; -- { dg-error \"cannot refer to local variable\" }\n+      end;\n+      Y := I'Old;   -- OK\n+      Y := O'Old;   -- OK\n+      Y := IO'Old;  -- OK\n+      Y := G;       -- OK, error has been signalled at G declaration\n+      pragma Assert (G (3)'Old = Y); -- { dg-error \"cannot refer to local variable\" }\n+   end P;\n+\n+end Old_Errors;"}, {"sha": "84717ff06394766bf50aa0a2332e1873c719e749", "filename": "gcc/testsuite/gnat.dg/old_errors.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Ftestsuite%2Fgnat.dg%2Fold_errors.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaa2f8c7e6ae12642905df0e518d58b724bccf5f/gcc%2Ftestsuite%2Fgnat.dg%2Fold_errors.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fold_errors.ads?ref=eaa2f8c7e6ae12642905df0e518d58b724bccf5f", "patch": "@@ -0,0 +1,5 @@\n+package Old_Errors is\n+\n+   pragma Elaborate_Body;\n+\n+end Old_Errors;"}]}