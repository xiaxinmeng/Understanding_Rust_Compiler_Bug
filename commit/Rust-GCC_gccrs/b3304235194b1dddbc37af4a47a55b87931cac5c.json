{"sha": "b3304235194b1dddbc37af4a47a55b87931cac5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjMzMDQyMzUxOTRiMWRkZGJjMzdhZjRhNDdhNTViODc5MzFjYWM1Yw==", "commit": {"author": {"name": "David S. Miller", "email": "davem@davemloft.net", "date": "2011-09-29T03:52:00Z"}, "committer": {"name": "David S. Miller", "email": "davem@gcc.gnu.org", "date": "2011-09-29T03:52:00Z"}, "message": "Respin sparc pixel-compare patterns using iterators.\n\n\t* config/sparc/sparc.md (UNSPEC_FCMPLE, UNSPEC_FCMPNE,\n\tUNSPEC_FCMPGT, UNSPEC_FCMPEQ): Delete and reduce to...\n\t(UNSPEC_FCMP): New unspec.\n\t(gcond): New code iterator.\n\t(gcond_name): New code attr.\n\t(GCM): New mode iterator.\n\t(gcm_name): New mode attr.\n\t(fcmp{le,ne,gt,eq}{16,32}_vis): Reimplement using iterators.\n\nFrom-SVN: r179329", "tree": {"sha": "fa92a882c5837a3e572f41b8374a10389532d0e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa92a882c5837a3e572f41b8374a10389532d0e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3304235194b1dddbc37af4a47a55b87931cac5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3304235194b1dddbc37af4a47a55b87931cac5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3304235194b1dddbc37af4a47a55b87931cac5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3304235194b1dddbc37af4a47a55b87931cac5c/comments", "author": {"login": "davem330", "id": 1053866, "node_id": "MDQ6VXNlcjEwNTM4NjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1053866?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davem330", "html_url": "https://github.com/davem330", "followers_url": "https://api.github.com/users/davem330/followers", "following_url": "https://api.github.com/users/davem330/following{/other_user}", "gists_url": "https://api.github.com/users/davem330/gists{/gist_id}", "starred_url": "https://api.github.com/users/davem330/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davem330/subscriptions", "organizations_url": "https://api.github.com/users/davem330/orgs", "repos_url": "https://api.github.com/users/davem330/repos", "events_url": "https://api.github.com/users/davem330/events{/privacy}", "received_events_url": "https://api.github.com/users/davem330/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bdcf918b31b4134d73701bbfc6aace2a24766574", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdcf918b31b4134d73701bbfc6aace2a24766574", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdcf918b31b4134d73701bbfc6aace2a24766574"}], "stats": {"total": 101, "additions": 21, "deletions": 80}, "files": [{"sha": "e853b15faf335cbc9b166e273a04f13c5f42d9f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3304235194b1dddbc37af4a47a55b87931cac5c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3304235194b1dddbc37af4a47a55b87931cac5c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b3304235194b1dddbc37af4a47a55b87931cac5c", "patch": "@@ -1,3 +1,14 @@\n+2011-09-28  David S. Miller  <davem@davemloft.net>\n+\n+\t* config/sparc/sparc.md (UNSPEC_FCMPLE, UNSPEC_FCMPNE,\n+\tUNSPEC_FCMPGT, UNSPEC_FCMPEQ): Delete and reduce to...\n+\t(UNSPEC_FCMP): New unspec.\n+\t(gcond): New code iterator.\n+\t(gcond_name): New code attr.\n+\t(GCM): New mode iterator.\n+\t(gcm_name): New mode attr.\n+\t(fcmp{le,ne,gt,eq}{16,32}_vis): Reimplement using iterators.\n+\n 2011-09-28  Oleg Endo  <oleg.endo@t-online.de>\n \n \tPR target/49486"}, {"sha": "dfc5559754423a4a61e49b031f7ae644121e523c", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 10, "deletions": 80, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3304235194b1dddbc37af4a47a55b87931cac5c/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3304235194b1dddbc37af4a47a55b87931cac5c/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=b3304235194b1dddbc37af4a47a55b87931cac5c", "patch": "@@ -58,7 +58,7 @@\n    (UNSPEC_MUL8UL\t\t46)\n    (UNSPEC_MULDUL\t\t47)\n    (UNSPEC_ALIGNDATA\t\t48)\n-\n+   (UNSPEC_FCMP\t\t\t49)\n    (UNSPEC_PDIST\t\t50)\n    (UNSPEC_EDGE8\t\t51)\n    (UNSPEC_EDGE8L\t\t52)\n@@ -69,11 +69,6 @@\n \n    (UNSPEC_SP_SET\t\t60)\n    (UNSPEC_SP_TEST\t\t61)\n-\n-   (UNSPEC_FCMPLE\t\t70)\n-   (UNSPEC_FCMPNE\t\t71)\n-   (UNSPEC_FCMPGT\t\t72)\n-   (UNSPEC_FCMPEQ\t\t73)\n   ])\n \n (define_constants\n@@ -8149,83 +8144,18 @@\n   \"edge32l\\t%r1, %r2, %0\"\n   [(set_attr \"type\" \"edge\")])\n \n-(define_insn \"fcmple16<P:mode>_vis\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-  \t(unspec:P [(match_operand:V4HI 1 \"register_operand\" \"e\")\n-\t\t   (match_operand:V4HI 2 \"register_operand\" \"e\")]\n-\t UNSPEC_FCMPLE))]\n-  \"TARGET_VIS\"\n-  \"fcmple16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n-   (set_attr \"fptype\" \"double\")])\n-\n-(define_insn \"fcmple32<P:mode>_vis\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-  \t(unspec:P [(match_operand:V2SI 1 \"register_operand\" \"e\")\n-\t\t   (match_operand:V2SI 2 \"register_operand\" \"e\")]\n-\t UNSPEC_FCMPLE))]\n-  \"TARGET_VIS\"\n-  \"fcmple32\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n-   (set_attr \"fptype\" \"double\")])\n-\n-(define_insn \"fcmpne16<P:mode>_vis\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-  \t(unspec:P [(match_operand:V4HI 1 \"register_operand\" \"e\")\n-\t\t   (match_operand:V4HI 2 \"register_operand\" \"e\")]\n-\t UNSPEC_FCMPNE))]\n-  \"TARGET_VIS\"\n-  \"fcmpne16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n-   (set_attr \"fptype\" \"double\")])\n-\n-(define_insn \"fcmpne32<P:mode>_vis\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-  \t(unspec:P [(match_operand:V2SI 1 \"register_operand\" \"e\")\n-\t\t   (match_operand:V2SI 2 \"register_operand\" \"e\")]\n-\t UNSPEC_FCMPNE))]\n-  \"TARGET_VIS\"\n-  \"fcmpne32\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n-   (set_attr \"fptype\" \"double\")])\n-\n-(define_insn \"fcmpgt16<P:mode>_vis\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-  \t(unspec:P [(match_operand:V4HI 1 \"register_operand\" \"e\")\n-\t\t   (match_operand:V4HI 2 \"register_operand\" \"e\")]\n-\t UNSPEC_FCMPGT))]\n-  \"TARGET_VIS\"\n-  \"fcmpgt16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n-   (set_attr \"fptype\" \"double\")])\n-\n-(define_insn \"fcmpgt32<P:mode>_vis\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-  \t(unspec:P [(match_operand:V2SI 1 \"register_operand\" \"e\")\n-\t\t   (match_operand:V2SI 2 \"register_operand\" \"e\")]\n-\t UNSPEC_FCMPGT))]\n-  \"TARGET_VIS\"\n-  \"fcmpgt32\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n-   (set_attr \"fptype\" \"double\")])\n-\n-(define_insn \"fcmpeq16<P:mode>_vis\"\n-  [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-  \t(unspec:P [(match_operand:V4HI 1 \"register_operand\" \"e\")\n-\t\t   (match_operand:V4HI 2 \"register_operand\" \"e\")]\n-\t UNSPEC_FCMPEQ))]\n-  \"TARGET_VIS\"\n-  \"fcmpeq16\\t%1, %2, %0\"\n-  [(set_attr \"type\" \"fpmul\")\n-   (set_attr \"fptype\" \"double\")])\n+(define_code_iterator gcond [le ne gt eq])\n+(define_code_attr gcond_name [(le \"le\") (ne \"ne\") (gt \"gt\") (eq \"eq\")])\n+(define_mode_iterator GCM [V4HI V2SI])\n+(define_mode_attr gcm_name [(V4HI \"16\") (V2SI \"32\")])\n \n-(define_insn \"fcmpeq32<P:mode>_vis\"\n+(define_insn \"fcmp<gcond_name><gcm_name><P:mode>_vis\"\n   [(set (match_operand:P 0 \"register_operand\" \"=r\")\n-  \t(unspec:P [(match_operand:V2SI 1 \"register_operand\" \"e\")\n-\t\t    (match_operand:V2SI 2 \"register_operand\" \"e\")]\n-\t UNSPEC_FCMPEQ))]\n+  \t(unspec:P [(gcond:GCM (match_operand:GCM 1 \"register_operand\" \"e\")\n+\t\t              (match_operand:GCM 2 \"register_operand\" \"e\"))]\n+\t UNSPEC_FCMP))]\n   \"TARGET_VIS\"\n-  \"fcmpeq32\\t%1, %2, %0\"\n+  \"fcmp<gcond_name><gcm_name>\\t%1, %2, %0\"\n   [(set_attr \"type\" \"fpmul\")\n    (set_attr \"fptype\" \"double\")])\n "}]}