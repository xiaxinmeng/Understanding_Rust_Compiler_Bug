{"sha": "198bc7873d1ec1ead4e8db307e0e4cc1fca81370", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4YmM3ODczZDFlYzFlYWQ0ZThkYjMwN2UwZTRjYzFmY2E4MTM3MA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-11-16T13:36:23Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-11-16T13:36:23Z"}, "message": "spe.md (frob_di_df_2): Handle non-offsettable memory operand.\n\n\t* config/rs6000/spe.md (frob_di_df_2): Handle non-offsettable\n\tmemory operand.\n\nFrom-SVN: r118889", "tree": {"sha": "0c487dcd573cfe3cbfc5f3f3e61c7a2acd327cf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0c487dcd573cfe3cbfc5f3f3e61c7a2acd327cf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/198bc7873d1ec1ead4e8db307e0e4cc1fca81370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198bc7873d1ec1ead4e8db307e0e4cc1fca81370", "html_url": "https://github.com/Rust-GCC/gccrs/commit/198bc7873d1ec1ead4e8db307e0e4cc1fca81370", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/198bc7873d1ec1ead4e8db307e0e4cc1fca81370/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f1dce5609ca54d2caa87d0ecfece64a7bb58c81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f1dce5609ca54d2caa87d0ecfece64a7bb58c81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f1dce5609ca54d2caa87d0ecfece64a7bb58c81"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "fed1fb5e85a0111c41fbf3f570e51756844c03a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198bc7873d1ec1ead4e8db307e0e4cc1fca81370/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198bc7873d1ec1ead4e8db307e0e4cc1fca81370/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=198bc7873d1ec1ead4e8db307e0e4cc1fca81370", "patch": "@@ -1,3 +1,8 @@\n+2006-11-16  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* config/rs6000/spe.md (frob_di_df_2): Handle non-offsettable\n+\tmemory operand.\n+\n 2006-11-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.md (abssi2): Allow Thumb as well.\t Use an SImode scratch for"}, {"sha": "f2410dd291639c2f47989e679c7c2efa68b3b9ce", "filename": "gcc/config/rs6000/spe.md", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/198bc7873d1ec1ead4e8db307e0e4cc1fca81370/gcc%2Fconfig%2Frs6000%2Fspe.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/198bc7873d1ec1ead4e8db307e0e4cc1fca81370/gcc%2Fconfig%2Frs6000%2Fspe.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fspe.md?ref=198bc7873d1ec1ead4e8db307e0e4cc1fca81370", "patch": "@@ -2223,6 +2223,11 @@\n     case 0:\n       return \\\"evmergehi %0,%1,%1\\;mr %L0,%1\\\";\n     case 1:\n+      /* If the address is not offsettable we need to load the whole\n+\t doubleword into a 64-bit register and then copy the high word\n+\t to form the correct output layout.  */\n+      if (!offsettable_nonstrict_memref_p (operands[1]))\n+\treturn \\\"evldd%X1 %L0,%y1\\;evmergehi %0,%L0,%L0\\\";\n       /* If the low-address word is used in the address, we must load\n \tit last.  Otherwise, load it first.  Note that we cannot have\n \tauto-increment in that case since the address register is"}]}