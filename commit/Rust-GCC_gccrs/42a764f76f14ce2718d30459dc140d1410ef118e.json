{"sha": "42a764f76f14ce2718d30459dc140d1410ef118e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJhNzY0Zjc2ZjE0Y2UyNzE4ZDMwNDU5ZGMxNDBkMTQxMGVmMTE4ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-10-20T07:30:33Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-10-20T07:30:33Z"}, "message": "re PR target/82370 (AVX512 can use a memory operand for immediate-count vpsrlw, but gcc doesn't.)\n\n\tPR target/82370\n\t* config/i386/sse.md (VI248_AVX2, VI248_AVX512BW, VI248_AVX512BW_2):\n\tNew mode iterators.\n\t(<shift_insn><mode>3<mask_name>): Change the last of the 3\n\tdefine_insns for logical vector shifts to use VI248_AVX512BW\n\titerator instead of VI48_AVX512, remove <mask_mode512bit_condition>\n\tcondition, useless isa and prefix attributes.  Change the first\n\t2 of these define_insns to ...\n\t(<mask_codefor><shift_insn><mode>3<mask_name>): ... this, new\n\tdefine_insn for avx512vl.\n\t(<shift_insn><mode>3): ... and this, new define_insn without\n\tmasking for non-avx512vl.\n\n\t* gcc.target/i386/avx-pr82370.c: New test.\n\t* gcc.target/i386/avx2-pr82370.c: New test.\n\t* gcc.target/i386/avx512f-pr82370.c: New test.\n\t* gcc.target/i386/avx512bw-pr82370.c: New test.\n\t* gcc.target/i386/avx512vl-pr82370.c: New test.\n\t* gcc.target/i386/avx512vlbw-pr82370.c: New test.\n\nFrom-SVN: r253924", "tree": {"sha": "77ac7144af0f06908195243d98d43b3cdf67721a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/77ac7144af0f06908195243d98d43b3cdf67721a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42a764f76f14ce2718d30459dc140d1410ef118e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a764f76f14ce2718d30459dc140d1410ef118e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42a764f76f14ce2718d30459dc140d1410ef118e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42a764f76f14ce2718d30459dc140d1410ef118e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c274eebe4ebaea9ee9e3dd7e1c0a8a4fb3108472", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c274eebe4ebaea9ee9e3dd7e1c0a8a4fb3108472", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c274eebe4ebaea9ee9e3dd7e1c0a8a4fb3108472"}], "stats": {"total": 308, "additions": 277, "deletions": 31}, "files": [{"sha": "feb665f68cf7c185fc37f85eb8a532659c1378e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -1,5 +1,18 @@\n 2017-10-20  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/82370\n+\t* config/i386/sse.md (VI248_AVX2, VI248_AVX512BW, VI248_AVX512BW_2):\n+\tNew mode iterators.\n+\t(<shift_insn><mode>3<mask_name>): Change the last of the 3\n+\tdefine_insns for logical vector shifts to use VI248_AVX512BW\n+\titerator instead of VI48_AVX512, remove <mask_mode512bit_condition>\n+\tcondition, useless isa and prefix attributes.  Change the first\n+\t2 of these define_insns to ...\n+\t(<mask_codefor><shift_insn><mode>3<mask_name>): ... this, new\n+\tdefine_insn for avx512vl.\n+\t(<shift_insn><mode>3): ... and this, new define_insn without\n+\tmasking for non-avx512vl.\n+\n \tPR target/82370\n \t* config/i386/sse.md (*andnot<mode>3,\n \t<mask_codefor><code><mode>3<mask_name>, *<code><mode>3): Split"}, {"sha": "2ddd2970eebe437989e658b9847275a63abcbc6d", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 36, "deletions": 31, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -403,11 +403,19 @@\n   [(V8SI \"TARGET_AVX2\") V4SI\n    (V4DI \"TARGET_AVX2\") V2DI])\n \n+(define_mode_iterator VI248_AVX2\n+  [(V16HI \"TARGET_AVX2\") V8HI\n+   (V8SI \"TARGET_AVX2\") V4SI\n+   (V4DI \"TARGET_AVX2\") V2DI])\n+\n (define_mode_iterator VI248_AVX2_8_AVX512F_24_AVX512BW\n   [(V32HI \"TARGET_AVX512BW\") (V16HI \"TARGET_AVX2\") V8HI\n    (V16SI \"TARGET_AVX512BW\") (V8SI \"TARGET_AVX2\") V4SI\n    (V8DI \"TARGET_AVX512F\") (V4DI \"TARGET_AVX2\") V2DI])\n \n+(define_mode_iterator VI248_AVX512BW\n+  [(V32HI \"TARGET_AVX512BW\") V16SI V8DI])\n+\n (define_mode_iterator VI248_AVX512BW_AVX512VL\n   [(V32HI \"TARGET_AVX512BW\") \n    (V4DI \"TARGET_AVX512VL\") V16SI V8DI])\n@@ -418,6 +426,11 @@\n   V8SI V4SI\n   V2DI])\n    \n+(define_mode_iterator VI248_AVX512BW_2\n+ [(V16HI \"TARGET_AVX512BW\") (V8HI \"TARGET_AVX512BW\")\n+  V8SI V4SI\n+  V4DI V2DI])\n+   \n (define_mode_iterator VI48_AVX512F\n   [(V16SI \"TARGET_AVX512F\") V8SI V4SI\n    (V8DI \"TARGET_AVX512F\") V4DI V2DI])\n@@ -10731,59 +10744,51 @@\n        (const_string \"0\")))\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"<shift_insn><mode>3<mask_name>\"\n-  [(set (match_operand:VI2_AVX2_AVX512BW 0 \"register_operand\" \"=x,v\")\n-\t(any_lshift:VI2_AVX2_AVX512BW\n-\t  (match_operand:VI2_AVX2_AVX512BW 1 \"register_operand\" \"0,v\")\n-\t  (match_operand:DI 2 \"nonmemory_operand\" \"xN,vN\")))]\n-  \"TARGET_SSE2 && <mask_mode512bit_condition> && <mask_avx512bw_condition>\"\n-  \"@\n-   p<vshift><ssemodesuffix>\\t{%2, %0|%0, %2}\n-   vp<vshift><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx\")\n-   (set_attr \"type\" \"sseishft\")\n+(define_insn \"<mask_codefor><shift_insn><mode>3<mask_name>\"\n+  [(set (match_operand:VI248_AVX512BW_2 0 \"register_operand\" \"=v,v\")\n+\t(any_lshift:VI248_AVX512BW_2\n+\t  (match_operand:VI248_AVX512BW_2 1 \"nonimmediate_operand\" \"v,vm\")\n+\t  (match_operand:DI 2 \"nonmemory_operand\" \"v,N\")))]\n+  \"TARGET_AVX512VL\"\n+  \"vp<vshift><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n+  [(set_attr \"type\" \"sseishft\")\n    (set (attr \"length_immediate\")\n      (if_then_else (match_operand 2 \"const_int_operand\")\n        (const_string \"1\")\n        (const_string \"0\")))\n-   (set_attr \"prefix_data16\" \"1,*\")\n-   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n-(define_insn \"<shift_insn><mode>3<mask_name>\"\n-  [(set (match_operand:VI48_AVX2 0 \"register_operand\" \"=x,x,v\")\n-\t(any_lshift:VI48_AVX2\n-\t  (match_operand:VI48_AVX2 1 \"register_operand\" \"0,x,v\")\n-\t  (match_operand:DI 2 \"nonmemory_operand\" \"xN,xN,vN\")))]\n-  \"TARGET_SSE2 && <mask_mode512bit_condition>\"\n+(define_insn \"<shift_insn><mode>3\"\n+  [(set (match_operand:VI248_AVX2 0 \"register_operand\" \"=x,x\")\n+\t(any_lshift:VI248_AVX2\n+\t  (match_operand:VI248_AVX2 1 \"register_operand\" \"0,x\")\n+\t  (match_operand:DI 2 \"nonmemory_operand\" \"xN,xN\")))]\n+  \"TARGET_SSE2\"\n   \"@\n    p<vshift><ssemodesuffix>\\t{%2, %0|%0, %2}\n-   vp<vshift><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\n-   vp<vshift><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"  \n-  [(set_attr \"isa\" \"noavx,avx,avx512bw\")\n+   vp<vshift><ssemodesuffix>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"isa\" \"noavx,avx\")\n    (set_attr \"type\" \"sseishft\")\n    (set (attr \"length_immediate\")\n      (if_then_else (match_operand 2 \"const_int_operand\")\n        (const_string \"1\")\n        (const_string \"0\")))\n-   (set_attr \"prefix_data16\" \"1,*,*\")\n-   (set_attr \"prefix\" \"orig,vex,evex\")\n+   (set_attr \"prefix_data16\" \"1,*\")\n+   (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n (define_insn \"<shift_insn><mode>3<mask_name>\"\n-  [(set (match_operand:VI48_512 0 \"register_operand\" \"=v,v\")\n-\t(any_lshift:VI48_512\n-\t  (match_operand:VI48_512 1 \"nonimmediate_operand\" \"v,m\")\n+  [(set (match_operand:VI248_AVX512BW 0 \"register_operand\" \"=v,v\")\n+\t(any_lshift:VI248_AVX512BW\n+\t  (match_operand:VI248_AVX512BW 1 \"nonimmediate_operand\" \"v,m\")\n \t  (match_operand:DI 2 \"nonmemory_operand\" \"vN,N\")))]\n-  \"TARGET_AVX512F && <mask_mode512bit_condition>\"\n+  \"TARGET_AVX512F\"\n   \"vp<vshift><ssemodesuffix>\\t{%2, %1, %0<mask_operand3>|%0<mask_operand3>, %1, %2}\"\n-  [(set_attr \"isa\" \"avx512f\")\n-   (set_attr \"type\" \"sseishft\")\n+  [(set_attr \"type\" \"sseishft\")\n    (set (attr \"length_immediate\")\n      (if_then_else (match_operand 2 \"const_int_operand\")\n        (const_string \"1\")\n        (const_string \"0\")))\n-   (set_attr \"prefix\" \"evex\")\n    (set_attr \"mode\" \"<sseinsnmode>\")])\n \n "}, {"sha": "d3b3be3699d3ba855931ead97f92a0155c83051b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -1,3 +1,13 @@\n+2017-10-20  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/82370\n+\t* gcc.target/i386/avx-pr82370.c: New test.\n+\t* gcc.target/i386/avx2-pr82370.c: New test.\n+\t* gcc.target/i386/avx512f-pr82370.c: New test.\n+\t* gcc.target/i386/avx512bw-pr82370.c: New test.\n+\t* gcc.target/i386/avx512vl-pr82370.c: New test.\n+\t* gcc.target/i386/avx512vlbw-pr82370.c: New test.\n+\n 2017-10-20  Orlando Arias  <oarias@knights.ucf.edu>\n \n \t* lib/target-supports.exp (check_effective_target_keeps_null_pointer_checks):"}, {"sha": "4dc8a5bdaafdebf3afd88a8227c2ae70e36aadba", "filename": "gcc/testsuite/gcc.target/i386/avx-pr82370.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr82370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr82370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-pr82370.c?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -0,0 +1,65 @@\n+/* PR target/82370 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx -mno-avx2 -masm=att\" } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 3 } } */\n+\n+typedef short int v32hi __attribute__((vector_size (64)));\n+typedef short int v16hi __attribute__((vector_size (32)));\n+typedef short int v8hi __attribute__((vector_size (16)));\n+typedef int v16si __attribute__((vector_size (64)));\n+typedef int v8si __attribute__((vector_size (32)));\n+typedef int v4si __attribute__((vector_size (16)));\n+typedef long long int v8di __attribute__((vector_size (64)));\n+typedef long long int v4di __attribute__((vector_size (32)));\n+typedef long long int v2di __attribute__((vector_size (16)));\n+typedef unsigned short int v32uhi __attribute__((vector_size (64)));\n+typedef unsigned short int v16uhi __attribute__((vector_size (32)));\n+typedef unsigned short int v8uhi __attribute__((vector_size (16)));\n+typedef unsigned int v16usi __attribute__((vector_size (64)));\n+typedef unsigned int v8usi __attribute__((vector_size (32)));\n+typedef unsigned int v4usi __attribute__((vector_size (16)));\n+typedef unsigned long long int v8udi __attribute__((vector_size (64)));\n+typedef unsigned long long int v4udi __attribute__((vector_size (32)));\n+typedef unsigned long long int v2udi __attribute__((vector_size (16)));\n+\n+#ifdef __AVX512F__\n+v32hi f1 (v32hi *x) { return *x >> 3; }\n+v32uhi f2 (v32uhi *x) { return *x >> 5; }\n+v32uhi f3 (v32uhi *x) { return *x << 7; }\n+#endif\n+v16hi f4 (v16hi *x) { return *x >> 3; }\n+v16uhi f5 (v16uhi *x) { return *x >> 5; }\n+v16uhi f6 (v16uhi *x) { return *x << 7; }\n+v8hi f7 (v8hi *x) { return *x >> 3; }\n+v8uhi f8 (v8uhi *x) { return *x >> 5; }\n+v8uhi f9 (v8uhi *x) { return *x << 7; }\n+#ifdef __AVX512F__\n+v16si f10 (v16si *x) { return *x >> 3; }\n+v16usi f11 (v16usi *x) { return *x >> 5; }\n+v16usi f12 (v16usi *x) { return *x << 7; }\n+#endif\n+v8si f13 (v8si *x) { return *x >> 3; }\n+v8usi f14 (v8usi *x) { return *x >> 5; }\n+v8usi f15 (v8usi *x) { return *x << 7; }\n+v4si f16 (v4si *x) { return *x >> 3; }\n+v4usi f17 (v4usi *x) { return *x >> 5; }\n+v4usi f18 (v4usi *x) { return *x << 7; }\n+#ifdef __AVX512F__\n+v8di f19 (v8di *x) { return *x >> 3; }\n+v8udi f20 (v8udi *x) { return *x >> 5; }\n+v8udi f21 (v8udi *x) { return *x << 7; }\n+#endif\n+v4di f22 (v4di *x) { return *x >> 3; }\n+v4udi f23 (v4udi *x) { return *x >> 5; }\n+v4udi f24 (v4udi *x) { return *x << 7; }\n+v2di f25 (v2di *x) { return *x >> 3; }\n+v2udi f26 (v2udi *x) { return *x >> 5; }\n+v2udi f27 (v2udi *x) { return *x << 7; }"}, {"sha": "6609ebb504a3c176f6c92bd8d8edfdbc2624c7d0", "filename": "gcc/testsuite/gcc.target/i386/avx2-pr82370.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr82370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr82370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-pr82370.c?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -0,0 +1,23 @@\n+/* PR target/82370 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx2 -mno-avx512f -masm=att\" } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+\n+#include \"avx-pr82370.c\""}, {"sha": "174f499a8855795453268b4cc896b1ccf87a5c98", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-pr82370.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr82370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr82370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-pr82370.c?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -0,0 +1,33 @@\n+/* PR target/82370 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512bw -mno-avx512vl -masm=att\" } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vps\\[lr]\\[la]\\[dwq]\\[ \\t]\\+\\\\\\$\\[357], %zmm\\[0-9]\\+, %zmm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+\n+#include \"avx-pr82370.c\""}, {"sha": "20ad8dccd29a6bb6b77bf0898d9f631e031bca27", "filename": "gcc/testsuite/gcc.target/i386/avx512f-pr82370.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr82370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr82370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-pr82370.c?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -0,0 +1,33 @@\n+/* PR target/82370 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512f -mno-avx512bw -mno-avx512vl -masm=att\" } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vps\\[lr]\\[la]\\[dwq]\\[ \\t]\\+\\\\\\$\\[357], %zmm\\[0-9]\\+, %zmm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 0 } } */\n+\n+#include \"avx-pr82370.c\""}, {"sha": "486ece5c2efa9e8361c5ac5cc16e01a18c1fd660", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-pr82370.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr82370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr82370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-pr82370.c?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -0,0 +1,31 @@\n+/* PR target/82370 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vl -mno-avx512bw -masm=att\" } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %xmm\\[0-9]\\+, %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, %ymm\\[0-9]\\+, %ymm\\[0-9]\\+\" 3 } } */\n+/* { dg-final { scan-assembler-times \"vps\\[lr]\\[la]\\[dq]\\[ \\t]\\+\\\\\\$\\[357], %\\[xyz]mm\\[0-9]\\+, %\\[xyz]mm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vps\\[lr]\\[la]w\\[ \\t]\\+\\\\\\$\\[357], \\\\(%\\[a-z0-9,]*\\\\), %\\[xyz]mm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+\n+#include \"avx-pr82370.c\""}, {"sha": "6809b4dda60dc100a2401dfaf8c247718e76684c", "filename": "gcc/testsuite/gcc.target/i386/avx512vlbw-pr82370.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr82370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42a764f76f14ce2718d30459dc140d1410ef118e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr82370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vlbw-pr82370.c?ref=42a764f76f14ce2718d30459dc140d1410ef118e", "patch": "@@ -0,0 +1,33 @@\n+/* PR target/82370 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx512vl -mavx512bw -masm=att\" } */\n+/* { dg-final { scan-assembler-times \"vps\\[lr]\\[la]\\[dwq]\\[ \\t]\\+\\\\\\$\\[357], %\\[xyz]mm\\[0-9]\\+, %\\[xyz]mm\\[0-9]\\+\" 0 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %xmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %ymm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpslld\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllq\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsllw\\[ \\t]\\+\\\\\\$7, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrad\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraq\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsraw\\[ \\t]\\+\\\\\\$3, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrld\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlq\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrlw\\[ \\t]\\+\\\\\\$5, \\\\(%\\[a-z0-9,]*\\\\), %zmm\\[0-9]\\+\" 1 } } */\n+\n+#include \"avx-pr82370.c\""}]}