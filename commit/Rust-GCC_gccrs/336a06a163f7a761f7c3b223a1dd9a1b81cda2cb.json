{"sha": "336a06a163f7a761f7c3b223a1dd9a1b81cda2cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM2YTA2YTE2M2Y3YTc2MWY3YzNiMjIzYTFkZDlhMWI4MWNkYTJjYg==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-08-08T13:15:44Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-08-08T13:15:44Z"}, "message": "re PR middle-end/19706 (Recognize common Fortran usages of copysign.)\n\n2017-08-08  Tamar Christina  <tamar.christina@arm.com>\n\t    Andrew Pinski <pinskia@gmail.com>\n\n\tPR middle-end/19706\n\t* internal-fn.def (XORSIGN): New.\n\t* optabs.def (xorsign_optab): New.\n\t* tree-ssa-math-opts.c (is_copysign_call_with_1): New.\n\t(convert_expand_mult_copysign): New.\n\t(pass_optimize_widening_mul::execute): Call convert_expand_mult_copysign.\n\n\nCo-Authored-By: Andrew Pinski <pinskia@gmail.com>\n\nFrom-SVN: r250956", "tree": {"sha": "27330a1034c99eb6062da9796c581d294554ee1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27330a1034c99eb6062da9796c581d294554ee1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b115e80367277d58bc5476c3c748cf7ec2432a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b115e80367277d58bc5476c3c748cf7ec2432a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b115e80367277d58bc5476c3c748cf7ec2432a10"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "5eef8e083be4a90a90ec6e2ed375e411fc79599c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=336a06a163f7a761f7c3b223a1dd9a1b81cda2cb", "patch": "@@ -1,3 +1,13 @@\n+2017-08-08  Tamar Christina  <tamar.christina@arm.com>\n+\t    Andrew Pinski <pinskia@gmail.com>\n+\n+\tPR middle-end/19706\n+\t* internal-fn.def (XORSIGN): New.\n+\t* optabs.def (xorsign_optab): New.\n+\t* tree-ssa-math-opts.c (is_copysign_call_with_1): New.\n+\t(convert_expand_mult_copysign): New.\n+\t(pass_optimize_widening_mul::execute): Call convert_expand_mult_copysign.\n+\n 2017-08-08  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/81354"}, {"sha": "b1211159845f07faa60c3daf527bffcf485af768", "filename": "gcc/internal-fn.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/gcc%2Finternal-fn.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/gcc%2Finternal-fn.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.def?ref=336a06a163f7a761f7c3b223a1dd9a1b81cda2cb", "patch": "@@ -129,6 +129,7 @@ DEF_INTERNAL_FLT_FN (REMAINDER, ECF_CONST, remainder, binary)\n DEF_INTERNAL_FLT_FN (SCALB, ECF_CONST, scalb, binary)\n DEF_INTERNAL_FLT_FN (FMIN, ECF_CONST, fmin, binary)\n DEF_INTERNAL_FLT_FN (FMAX, ECF_CONST, fmax, binary)\n+DEF_INTERNAL_OPTAB_FN (XORSIGN, ECF_CONST, xorsign, binary)\n \n /* FP scales.  */\n DEF_INTERNAL_FLT_FN (LDEXP, ECF_CONST, ldexp, binary)"}, {"sha": "54afe2d796ee9af3bd7b25d93eb0789a70e47c7b", "filename": "gcc/optabs.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/gcc%2Foptabs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/gcc%2Foptabs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.def?ref=336a06a163f7a761f7c3b223a1dd9a1b81cda2cb", "patch": "@@ -255,6 +255,7 @@ OPTAB_D (asin_optab, \"asin$a2\")\n OPTAB_D (atan2_optab, \"atan2$a3\")\n OPTAB_D (atan_optab, \"atan$a2\")\n OPTAB_D (copysign_optab, \"copysign$F$a3\")\n+OPTAB_D (xorsign_optab, \"xorsign$F$a3\")\n OPTAB_D (cos_optab, \"cos$a2\")\n OPTAB_D (exp10_optab, \"exp10$a2\")\n OPTAB_D (exp2_optab, \"exp2$a2\")"}, {"sha": "87940b6e00db0d34a472504cf70923d1d334eccb", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/336a06a163f7a761f7c3b223a1dd9a1b81cda2cb/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=336a06a163f7a761f7c3b223a1dd9a1b81cda2cb", "patch": "@@ -3145,6 +3145,93 @@ is_widening_mult_p (gimple *stmt,\n   return true;\n }\n \n+/* Check to see if the CALL statement is an invocation of copysign\n+   with 1. being the first argument.  */\n+static bool\n+is_copysign_call_with_1 (gimple *call)\n+{\n+  gcall *c = dyn_cast <gcall *> (call);\n+  if (! c)\n+    return false;\n+\n+  enum combined_fn code = gimple_call_combined_fn (c);\n+\n+  if (code == CFN_LAST)\n+    return false;\n+\n+  if (builtin_fn_p (code))\n+    {\n+      switch (as_builtin_fn (code))\n+\t{\n+\tCASE_FLT_FN (BUILT_IN_COPYSIGN):\n+\tCASE_FLT_FN_FLOATN_NX (BUILT_IN_COPYSIGN):\n+\t  return real_onep (gimple_call_arg (c, 0));\n+\tdefault:\n+\t  return false;\n+\t}\n+    }\n+\n+  if (internal_fn_p (code))\n+    {\n+      switch (as_internal_fn (code))\n+\t{\n+\tcase IFN_COPYSIGN:\n+\t  return real_onep (gimple_call_arg (c, 0));\n+\tdefault:\n+\t  return false;\n+\t}\n+    }\n+\n+   return false;\n+}\n+\n+/* Try to expand the pattern x * copysign (1, y) into xorsign (x, y).\n+   This only happens when the the xorsign optab is defined, if the\n+   pattern is not a xorsign pattern or if expansion fails FALSE is\n+   returned, otherwise TRUE is returned.  */\n+static bool\n+convert_expand_mult_copysign (gimple *stmt, gimple_stmt_iterator *gsi)\n+{\n+  tree treeop0, treeop1, lhs, type;\n+  location_t loc = gimple_location (stmt);\n+  lhs = gimple_assign_lhs (stmt);\n+  treeop0 = gimple_assign_rhs1 (stmt);\n+  treeop1 = gimple_assign_rhs2 (stmt);\n+  type = TREE_TYPE (lhs);\n+  machine_mode mode = TYPE_MODE (type);\n+\n+  if (HONOR_SNANS (type) || !has_single_use (lhs))\n+    return false;\n+\n+  if (TREE_CODE (treeop0) == SSA_NAME && TREE_CODE (treeop1) == SSA_NAME)\n+    {\n+      gimple *call0 = SSA_NAME_DEF_STMT (treeop0);\n+      if (!is_copysign_call_with_1 (call0))\n+\t{\n+\t  call0 = SSA_NAME_DEF_STMT (treeop1);\n+\t  if (!is_copysign_call_with_1 (call0))\n+\t    return false;\n+\n+\t  treeop1 = treeop0;\n+\t}\n+\n+\tif (optab_handler (xorsign_optab, mode) == CODE_FOR_nothing)\n+\t  return false;\n+\n+\tgcall *c = as_a<gcall*> (call0);\n+\ttreeop0 = gimple_call_arg (c, 1);\n+\n+\tgcall *call_stmt\n+\t  = gimple_build_call_internal (IFN_XORSIGN, 2, treeop1, treeop0);\n+\tgimple_set_lhs (call_stmt, lhs);\n+\tgimple_set_location (call_stmt, loc);\n+\tgsi_replace (gsi, call_stmt, true);\n+\treturn true;\n+    }\n+\n+  return false;\n+}\n+\n /* Process a single gimple statement STMT, which has a MULT_EXPR as\n    its rhs, and try to convert it into a WIDEN_MULT_EXPR.  The return\n    value is true iff we converted the statement.  */\n@@ -4114,6 +4201,7 @@ pass_optimize_widening_mul::execute (function *fun)\n \t\t{\n \t\tcase MULT_EXPR:\n \t\t  if (!convert_mult_to_widen (stmt, &gsi)\n+\t\t      && !convert_expand_mult_copysign (stmt, &gsi)\n \t\t      && convert_mult_to_fma (stmt,\n \t\t\t\t\t      gimple_assign_rhs1 (stmt),\n \t\t\t\t\t      gimple_assign_rhs2 (stmt)))"}]}