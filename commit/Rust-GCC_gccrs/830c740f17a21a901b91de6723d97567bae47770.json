{"sha": "830c740f17a21a901b91de6723d97567bae47770", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMwYzc0MGYxN2EyMWE5MDFiOTFkZTY3MjNkOTc1NjdiYWU0Nzc3MA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-09-05T09:03:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-09-05T09:03:08Z"}, "message": "stor-layout.c (layout_type): Use size_binop for array size calculations.\n\n2011-09-05  Richard Guenther  <rguenther@suse.de>\n\n\t* stor-layout.c (layout_type): Use size_binop for array size\n\tcalculations.\n\n\tc-family/\n\t* c-common.c (complete_array_type): Use ssize_int (-1) instead\n\tof integer_minus_one_node for empty array upper bounds.\n\nFrom-SVN: r178526", "tree": {"sha": "ea45e4b0b22441a465d4935a39d510d54d5b860a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea45e4b0b22441a465d4935a39d510d54d5b860a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/830c740f17a21a901b91de6723d97567bae47770", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830c740f17a21a901b91de6723d97567bae47770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/830c740f17a21a901b91de6723d97567bae47770", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/830c740f17a21a901b91de6723d97567bae47770/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c149e48765862535842cf968dc10667038988606", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c149e48765862535842cf968dc10667038988606", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c149e48765862535842cf968dc10667038988606"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "ab05faa1d03e887bb091233c98ae31e53e338668", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830c740f17a21a901b91de6723d97567bae47770/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830c740f17a21a901b91de6723d97567bae47770/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=830c740f17a21a901b91de6723d97567bae47770", "patch": "@@ -1,3 +1,8 @@\n+2011-09-05  Richard Guenther  <rguenther@suse.de>\n+\n+\t* stor-layout.c (layout_type): Use size_binop for array size\n+\tcalculations.\n+\n 2011-09-05  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \t* config/avr/avr.h (progmem_section): Remove Declaration."}, {"sha": "95abde6b7fc35133faee19fb810312ecd0671db1", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830c740f17a21a901b91de6723d97567bae47770/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830c740f17a21a901b91de6723d97567bae47770/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=830c740f17a21a901b91de6723d97567bae47770", "patch": "@@ -1,3 +1,8 @@\n+2011-09-05  Richard Guenther  <rguenther@suse.de>\n+\n+\t* c-common.c (complete_array_type): Use ssize_int (-1) instead\n+\tof integer_minus_one_node for empty array upper bounds.\n+\n 2011-08-28  Dodji Seketeli  <dodji@redhat.com>\n \n \t* c-pch.c (c_common_read_pch): Call linemap_add with LC_ENTER as"}, {"sha": "9c42d5944da862ef6d8aa044cd8466910ee5b96f", "filename": "gcc/c-family/c-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830c740f17a21a901b91de6723d97567bae47770/gcc%2Fc-family%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830c740f17a21a901b91de6723d97567bae47770/gcc%2Fc-family%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-common.c?ref=830c740f17a21a901b91de6723d97567bae47770", "patch": "@@ -8844,7 +8844,7 @@ complete_array_type (tree *ptype, tree initial_value, bool do_default)\n \t    {\n \t      if (pedantic)\n \t\tfailure = 3;\n-\t      maxindex = integer_minus_one_node;\n+\t      maxindex = ssize_int (-1);\n \t    }\n \t  else\n \t    {"}, {"sha": "359541e02df98a52c2d85c4558bc4374a4bfd8e0", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/830c740f17a21a901b91de6723d97567bae47770/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/830c740f17a21a901b91de6723d97567bae47770/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=830c740f17a21a901b91de6723d97567bae47770", "patch": "@@ -1959,16 +1959,15 @@ layout_type (tree type)\n \t    if (integer_zerop (element_size))\n \t      length = size_zero_node;\n \n-\t    /* The computation should happen in the original type so\n-\t       that (possible) negative values are handled appropriately.  */\n+\t    /* The computation should happen in the original signedness so\n+\t       that (possible) negative values are handled appropriately\n+\t       when determining overflow.  */\n \t    else\n \t      length\n \t\t= fold_convert (sizetype,\n-\t\t\t\tfold_build2 (PLUS_EXPR, TREE_TYPE (lb),\n-\t\t\t\t\t     build_int_cst (TREE_TYPE (lb), 1),\n-\t\t\t\t\t     fold_build2 (MINUS_EXPR,\n-\t\t\t\t\t\t\t  TREE_TYPE (lb),\n-\t\t\t\t\t\t\t  ub, lb)));\n+\t\t\t\tsize_binop (PLUS_EXPR,\n+\t\t\t\t\t    build_int_cst (TREE_TYPE (lb), 1),\n+\t\t\t\t\t    size_binop (MINUS_EXPR, ub, lb)));\n \n \t    TYPE_SIZE (type) = size_binop (MULT_EXPR, element_size,\n \t\t\t\t\t   fold_convert (bitsizetype,"}]}