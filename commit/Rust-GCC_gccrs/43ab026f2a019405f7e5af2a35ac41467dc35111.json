{"sha": "43ab026f2a019405f7e5af2a35ac41467dc35111", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNhYjAyNmYyYTAxOTQwNWY3ZTVhZjJhMzVhYzQxNDY3ZGMzNTExMQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2003-09-26T16:41:58Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-09-26T16:41:58Z"}, "message": "s390.md (\"builtin_setjmp_setup\"): Insn deleted.\n\n2003-09-26  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.md (\"builtin_setjmp_setup\"): Insn deleted.\n\t(\"builtin_longjmp\"): Insn deleted.\n\t(\"save_stack_nonlocal\"): Save literal pool base pointer behind\n\tbackchain and stack pointer.\n\t(\"restore_stack_nonlocal\"): Restore literal pool base pointer.\n\t* config/s390/s390.h (STACK_SAVEAREA_MODE): Double size of\n\tthe stack save area for the nonlocal goto case.\n\nFrom-SVN: r71826", "tree": {"sha": "58dee49186ddcd5d4654bb638df7a1ff7afce183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58dee49186ddcd5d4654bb638df7a1ff7afce183"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43ab026f2a019405f7e5af2a35ac41467dc35111", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ab026f2a019405f7e5af2a35ac41467dc35111", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43ab026f2a019405f7e5af2a35ac41467dc35111", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43ab026f2a019405f7e5af2a35ac41467dc35111/comments", "author": null, "committer": null, "parents": [{"sha": "853ca657f0659b0ad6a387a2089cebc631b4bb36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853ca657f0659b0ad6a387a2089cebc631b4bb36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/853ca657f0659b0ad6a387a2089cebc631b4bb36"}], "stats": {"total": 73, "additions": 29, "deletions": 44}, "files": [{"sha": "7cafd7098c27ba7d6cd819d5b21349c8b549d657", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ab026f2a019405f7e5af2a35ac41467dc35111/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ab026f2a019405f7e5af2a35ac41467dc35111/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=43ab026f2a019405f7e5af2a35ac41467dc35111", "patch": "@@ -1,3 +1,13 @@\n+2003-09-26  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.md (\"builtin_setjmp_setup\"): Insn deleted.\n+\t(\"builtin_longjmp\"): Insn deleted.\n+\t(\"save_stack_nonlocal\"): Save literal pool base pointer behind \n+\tbackchain and stack pointer.\n+\t(\"restore_stack_nonlocal\"): Restore literal pool base pointer.\n+\t* config/s390/s390.h (STACK_SAVEAREA_MODE): Double size of\n+\tthe stack save area for the nonlocal goto case.\n+\n 2003-09-26  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n \n \tPR bootstrap/12358"}, {"sha": "b39537032236f9bfc0729f12997ff9319716ca65", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ab026f2a019405f7e5af2a35ac41467dc35111/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ab026f2a019405f7e5af2a35ac41467dc35111/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=43ab026f2a019405f7e5af2a35ac41467dc35111", "patch": "@@ -240,7 +240,7 @@ if (INTEGRAL_MODE_P (MODE) &&\t        \t    \t\\\n    NONLOCAL needs twice Pmode to maintain both backchain and SP.  */\n #define STACK_SAVEAREA_MODE(LEVEL)      \\\n   (LEVEL == SAVE_FUNCTION ? VOIDmode    \\\n-  : LEVEL == SAVE_NONLOCAL ? (TARGET_64BIT ? TImode : DImode) : Pmode)\n+  : LEVEL == SAVE_NONLOCAL ? (TARGET_64BIT ? OImode : TImode) : Pmode)\n \n /* Define target floating point format.  */\n #define TARGET_FLOAT_FORMAT \\"}, {"sha": "973217fba7520b49ce30e2e1cbc32cf32e1725df", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 18, "deletions": 43, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43ab026f2a019405f7e5af2a35ac41467dc35111/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43ab026f2a019405f7e5af2a35ac41467dc35111/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=43ab026f2a019405f7e5af2a35ac41467dc35111", "patch": "@@ -7057,20 +7057,9 @@\n \n \n ;\n-; setjmp/longjmp instruction pattern(s).\n+; setjmp instruction pattern.\n ;\n \n-(define_expand \"builtin_setjmp_setup\"\n-  [(match_operand 0 \"register_operand\" \"\")]\n-  \"\"\n-{\n-  rtx base = gen_rtx_MEM (Pmode, plus_constant (operands[0], 4 * GET_MODE_SIZE (Pmode)));\n-  rtx basereg = gen_rtx_REG (Pmode, BASE_REGISTER);\n-\n-  emit_move_insn (base, basereg);\n-  DONE;\n-})\n-\n (define_expand \"builtin_setjmp_receiver\"\n   [(match_operand 0 \"\" \"\")]\n   \"flag_pic\"\n@@ -7080,31 +7069,6 @@\n   DONE;\n })\n \n-(define_expand \"builtin_longjmp\"\n-  [(match_operand 0 \"register_operand\" \"\")]\n-  \"\"\n-{\n-  /* The elements of the buffer are, in order:  */\n-  rtx fp = gen_rtx_MEM (Pmode, operands[0]);\n-  rtx lab = gen_rtx_MEM (Pmode, plus_constant (operands[0], GET_MODE_SIZE (Pmode)));\n-  rtx stack = gen_rtx_MEM (Pmode, plus_constant (operands[0], 2 * GET_MODE_SIZE (Pmode)));\n-  rtx base = gen_rtx_MEM (Pmode, plus_constant (operands[0], 4 * GET_MODE_SIZE (Pmode)));\n-  rtx basereg = gen_rtx_REG (Pmode, BASE_REGISTER);\n-  rtx jmp = gen_reg_rtx (Pmode);\n-\n-  emit_move_insn (jmp, lab);\n-  emit_move_insn (basereg, base);\n-  emit_stack_restore (SAVE_NONLOCAL, stack, NULL_RTX);\n-  emit_move_insn (hard_frame_pointer_rtx, fp);\n-\n-  emit_insn (gen_rtx_USE (VOIDmode, hard_frame_pointer_rtx));\n-  emit_insn (gen_rtx_USE (VOIDmode, stack_pointer_rtx));\n-  emit_insn (gen_rtx_USE (VOIDmode, basereg));\n-  emit_indirect_jump (jmp);\n-  DONE;\n-})\n-\n-\n ;; These patterns say how to save and restore the stack pointer.  We need not\n ;; save the stack pointer at function level since we are careful to\n ;; preserve the backchain.  At block level, we have to restore the backchain\n@@ -7144,13 +7108,17 @@\n {\n   rtx temp = gen_reg_rtx (Pmode);\n \n-  /* Copy the backchain to the first word, sp to the second.  */\n+  /* Copy the backchain to the first word, sp to the second and the literal pool\n+     base to the third. */\n+  emit_move_insn (operand_subword (operands[0], 2, 0,\n+                  TARGET_64BIT ? OImode : TImode),\n+                  gen_rtx_REG (Pmode, BASE_REGISTER));\n   emit_move_insn (temp, gen_rtx_MEM (Pmode, operands[1]));\n   emit_move_insn (operand_subword (operands[0], 0, 0,\n-                 TARGET_64BIT ? TImode : DImode),\n+                 TARGET_64BIT ? OImode : TImode),\n                  temp);\n   emit_move_insn (operand_subword (operands[0], 1, 0,\n-                 TARGET_64BIT ? TImode : DImode),\n+                 TARGET_64BIT ? OImode : TImode),\n                  operands[1]);\n   DONE;\n })\n@@ -7161,15 +7129,22 @@\n   \"\"\n {\n   rtx temp = gen_reg_rtx (Pmode);\n+  rtx base = gen_rtx_REG (Pmode, BASE_REGISTER);\n \n-  /* Restore the backchain from the first word, sp from the second.  */\n+  /* Restore the backchain from the first word, sp from the second and the\n+     literal pool base from the third. */\n   emit_move_insn (temp,\n                  operand_subword (operands[1], 0, 0,\n-                 TARGET_64BIT ? TImode : DImode));\n+                 TARGET_64BIT ? OImode : TImode));\n   emit_move_insn (operands[0],\n                  operand_subword (operands[1], 1, 0,\n-                 TARGET_64BIT ? TImode : DImode));\n+                 TARGET_64BIT ? OImode : TImode));\n   emit_move_insn (gen_rtx_MEM (Pmode, operands[0]), temp);\n+  emit_move_insn (base,\n+                  operand_subword (operands[1], 2, 0,\n+                  TARGET_64BIT ? OImode : TImode));\n+  emit_insn (gen_rtx_USE (VOIDmode, base));\n+\n   DONE;\n })\n "}]}