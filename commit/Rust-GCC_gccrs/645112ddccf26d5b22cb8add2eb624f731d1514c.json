{"sha": "645112ddccf26d5b22cb8add2eb624f731d1514c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ1MTEyZGRjY2YyNmQ1YjIyY2I4YWRkMmViNjI0ZjczMWQxNTE0Yw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-12-11T01:08:14Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-12-11T01:08:14Z"}, "message": "re PR libstdc++/6243 (testsuite fails almost all tests due to no libintl in LD_LIBRARY_PATH during test.)\n\n\n2003-12-10  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/6243\n\t* testsuite/lib/libstdc++.exp (v3-init): Add\n\toriginal_ld_library_path, calculate ld_library path, set\n\tLD_LIBRARY_PATH to both. Based on libjava.exp.\n\nFrom-SVN: r74521", "tree": {"sha": "b34d407c81ab0793f7c8545dd41780d66030ebdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b34d407c81ab0793f7c8545dd41780d66030ebdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/645112ddccf26d5b22cb8add2eb624f731d1514c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645112ddccf26d5b22cb8add2eb624f731d1514c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/645112ddccf26d5b22cb8add2eb624f731d1514c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/645112ddccf26d5b22cb8add2eb624f731d1514c/comments", "author": null, "committer": null, "parents": [{"sha": "a813c111200f19a0512441f5394395ee3f6770ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a813c111200f19a0512441f5394395ee3f6770ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a813c111200f19a0512441f5394395ee3f6770ae"}], "stats": {"total": 47, "additions": 36, "deletions": 11}, "files": [{"sha": "39fcdb90191c26898d8ab720dd92a98d1d4b9b2e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645112ddccf26d5b22cb8add2eb624f731d1514c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645112ddccf26d5b22cb8add2eb624f731d1514c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=645112ddccf26d5b22cb8add2eb624f731d1514c", "patch": "@@ -1,3 +1,10 @@\n+2003-12-10  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/6243\n+\t* testsuite/lib/libstdc++.exp (v3-init): Add\n+\toriginal_ld_library_path, calculate ld_library path, set\n+\tLD_LIBRARY_PATH to both. Based on libjava.exp.\n+\t\n 2003-12-10  Benjamin Kosnik  <bkoz@redhat.com>\n             Alexandre Oliva  <aoliva@redhat.com>\n \t"}, {"sha": "9aacdb28b838f6a6edde3ae4d4670211019f61ad", "filename": "libstdc++-v3/testsuite/lib/libstdc++.exp", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/645112ddccf26d5b22cb8add2eb624f731d1514c/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/645112ddccf26d5b22cb8add2eb624f731d1514c/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Flib%2Flibstdc%2B%2B.exp?ref=645112ddccf26d5b22cb8add2eb624f731d1514c", "patch": "@@ -46,7 +46,9 @@ proc v3-init { args } {\n     global cxxflags\n     global objdir\n     global gluefile wrap_flags\n+    global env\n     global ld_library_path\n+    global original_ld_library_path\n     global tool_root_dir\n \n     set blddir [lookfor_file [get_multilibs] libstdc++-v3]\n@@ -59,15 +61,31 @@ proc v3-init { args } {\n     v3-copy-files [glob -nocomplain \"$srcdir/data/*.tst\"] $outdir\n     v3-copy-files [glob -nocomplain \"$srcdir/data/*.txt\"] $outdir\n \n-    # set LD_LIBRARY_PATH so that libgcc_s, libstdc++ binaries can be found.\n-    # locate libgcc.a so we don't need to account for different values of\n+    # Setup LD_LIBRARY_PATH so that libgcc_s, libstdc++ binaries can be found.\n+    # Find the existing LD_LIBRARY_PATH.\n+    if [info exists env(LD_LIBRARY_PATH)] {\n+\tset original_ld_library_path $env(LD_LIBRARY_PATH)\n+    } else {\n+\tif [info exists env(SHLIB_PATH)] {\n+\t    set original_ld_library_path $env(SHLIB_PATH)\n+\t} else {\n+\t    if [info exists env(DYLD_LIBRARY_PATH)] {\n+\t\tset original_ld_library_path $env(DYLD_LIBRARY_PATH)\n+\t    } else {\n+\t\tset original_ld_library_path \"\"\n+\t    }\n+\t}\n+    }\n+\n+    # Locate libgcc.a so we don't need to account for different values of\n     # SHLIB_EXT on different platforms\n     set gccdir [lookfor_file $tool_root_dir gcc/libgcc.a]\n     if {$gccdir != \"\"} {\n         set gccdir [file dirname $gccdir]\n     }\n \n-    set ld_library_path \".\"\n+    # Compute what needs to be added to the existing LD_LIBRARY_PATH.\n+    set ld_library_path \"\"\n     append ld_library_path \":${gccdir}\"\n     set compiler ${gccdir}/g++\n     if { [is_remote host] == 0 && [which $compiler] != 0 } {\n@@ -91,14 +109,14 @@ proc v3-init { args } {\n     # unix.exp -- but that's not an option since it's part of DejaGNU\n     # proper, so we do it here.  We really only need to do \n     # this on IRIX, but it shouldn't hurt to do it anywhere else.\n-    setenv  LD_LIBRARY_PATH     $ld_library_path\n-    setenv  SHLIB_PATH          $ld_library_path\n-    setenv  LD_LIBRARYN32_PATH  $ld_library_path\n-    setenv  LD_LIBRARY64_PATH   $ld_library_path\n-    setenv  LD_RUN_PATH         $ld_library_path\n-    setenv  LD_LIBRARY_PATH_64  $ld_library_path\n-    setenv  DYLD_LIBRARY_PATH   $ld_library_path\n-    verbose -log \"Set LD_*_PATHs to ${ld_library_path}\"\n+    setenv  LD_LIBRARY_PATH     \"$ld_library_path:$original_ld_library_path\"\n+    setenv  SHLIB_PATH          \"$ld_library_path:$original_ld_library_path\"\n+    setenv  LD_LIBRARYN32_PATH  \"$ld_library_path:$original_ld_library_path\"\n+    setenv  LD_LIBRARY64_PATH   \"$ld_library_path:$original_ld_library_path\"\n+    setenv  LD_RUN_PATH         \"$ld_library_path:$original_ld_library_path\"\n+    setenv  LD_LIBRARY_PATH_64  \"$ld_library_path:$original_ld_library_path\"\n+    setenv  DYLD_LIBRARY_PATH   \"$ld_library_path:$original_ld_library_path\"\n+    verbose -log \"LD_LIBRARY_PATH = $env(LD_LIBRARY_PATH)\"\n \n     # Do a bunch of handstands and backflips for cross compiling and\n     # finding simulators..."}]}