{"sha": "20f7cbac8f4a12c71fca2b06fa94b565a8811cdd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBmN2NiYWM4ZjRhMTJjNzFmY2EyYjA2ZmE5NGI1NjVhODgxMWNkZA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-17T18:04:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-01-17T18:04:07Z"}, "message": "reg-stack.c (subst_stack_regs_pat): Abort if the destination of a FP conditional move is not on the FP register stack.\n\n        * reg-stack.c (subst_stack_regs_pat): Abort if the destination\n        of a FP conditional move is not on the FP register stack.\nForgot to check it in last night/this morning.  One should not hack at 4am.\n\nFrom-SVN: r24716", "tree": {"sha": "5321a20ffda2368f914471ad24be590bdab804a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5321a20ffda2368f914471ad24be590bdab804a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20f7cbac8f4a12c71fca2b06fa94b565a8811cdd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f7cbac8f4a12c71fca2b06fa94b565a8811cdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f7cbac8f4a12c71fca2b06fa94b565a8811cdd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f7cbac8f4a12c71fca2b06fa94b565a8811cdd/comments", "author": null, "committer": null, "parents": [{"sha": "16e829b30def15b0bb3bae40556323917e814482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e829b30def15b0bb3bae40556323917e814482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e829b30def15b0bb3bae40556323917e814482"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "a0f48fa1e56234699ce6c3e314b6cdde31277c33", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f7cbac8f4a12c71fca2b06fa94b565a8811cdd/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f7cbac8f4a12c71fca2b06fa94b565a8811cdd/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=20f7cbac8f4a12c71fca2b06fa94b565a8811cdd", "patch": "@@ -1,5 +1,5 @@\n /* Register to Stack convert for GNU compiler.\n-   Copyright (C) 1992, 93, 94, 95, 96, 97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 93-98, 1999 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -2046,6 +2046,10 @@ subst_stack_regs_pat (insn, regstack, pat)\n \tbreak;\n \n       case IF_THEN_ELSE:\n+\t/* dest has to be on stack. */\n+\tif (get_hard_regnum (regstack, *dest) < FIRST_STACK_REG)\n+\t  abort ();\n+\n \t/* This insn requires the top of stack to be the destination. */\n \n \t/* If the comparison operator is an FP comparison operator,\n@@ -2099,9 +2103,7 @@ subst_stack_regs_pat (insn, regstack, pat)\n \t      }\n \t}\n \n-\t/* Make dest the top of stack.  Add dest to regstack if not present. */\n-\tif (get_hard_regnum (regstack, *dest) < FIRST_STACK_REG)\n-\t  regstack->reg[++regstack->top] = REGNO (*dest);\t\n+\t/* Make dest the top of stack. */\n \tSET_HARD_REG_BIT (regstack->reg_set, REGNO (*dest));\n \treplace_reg (dest, FIRST_STACK_REG);\n "}]}