{"sha": "be02fa1a4e61f3c3f177c0457e712d054b5b4f99", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUwMmZhMWE0ZTYxZjNjM2YxNzdjMDQ1N2U3MTJkMDU0YjViNGY5OQ==", "commit": {"author": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-04-12T07:12:21Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "1999-04-12T07:12:21Z"}, "message": "regenerated\n\nFrom-SVN: r26364", "tree": {"sha": "ff511e9d3ee01aca699cbeaa28fe769a2b5f64f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff511e9d3ee01aca699cbeaa28fe769a2b5f64f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be02fa1a4e61f3c3f177c0457e712d054b5b4f99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be02fa1a4e61f3c3f177c0457e712d054b5b4f99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be02fa1a4e61f3c3f177c0457e712d054b5b4f99", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be02fa1a4e61f3c3f177c0457e712d054b5b4f99/comments", "author": null, "committer": null, "parents": [{"sha": "7db774d2f125228cca469f45e3c485fb93dde9f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7db774d2f125228cca469f45e3c485fb93dde9f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7db774d2f125228cca469f45e3c485fb93dde9f2"}], "stats": {"total": 915, "additions": 507, "deletions": 408}, "files": [{"sha": "85beec90e860561cba8e6c1a92af8e602ee98c39", "filename": "gcc/fixinc/fixincl.sh", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be02fa1a4e61f3c3f177c0457e712d054b5b4f99/gcc%2Ffixinc%2Ffixincl.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be02fa1a4e61f3c3f177c0457e712d054b5b4f99/gcc%2Ffixinc%2Ffixincl.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.sh?ref=be02fa1a4e61f3c3f177c0457e712d054b5b4f99", "patch": "@@ -1,10 +1,6 @@\n #!/bin/sh\n #\n-# DO NOT EDIT THIS FILE   (fixincl.sh)\n-# \n-# It has been autogen-ed  Sunday April  4, 1999 at 12:12:26 AM MST\n-# From the definitions    /puke/law//egcs/egcs/gcc/fixinc/inclhack.def\n-# and the template file   /puke/law//egcs/egcs/gcc/fixinc/inclhack.tpl\n+#  DO NOT EDIT THIS FILE - it has been generated\n #\n # Install modified versions of certain ANSI-incompatible system header\n # files which are fixed to work correctly with ANSI C and placed in a\n@@ -14,6 +10,8 @@\n #\n # See README-fixinc for more information.\n #\n+#  fixincludes copyright (c) 1999 The Free Software Foundation, Inc.\n+#\n # fixincludes is free software.\n # \n # You may redistribute it and/or modify it under the terms of the\n@@ -345,9 +343,9 @@ while [ $# != 0 ]; do\n   #\n   cd ${INPUT}\n   required=\"$required `if $LINKS; then\n-    find ${FIND_BASE}/. \\( -type f -o -type l \\) -print\n+    find ${FIND_BASE}/. -name '*.h' \\( -type f -o -type l \\) -print\n   else\n-    find ${FIND_BASE}/. -type f -print\n+    find ${FIND_BASE}/. -name '*.h' -type f -print\n   fi | \\\n     sed -e 's;/\\./;/;g' -e 's;//*;/;g' | \\\n     ${FIXINCL}`\""}, {"sha": "251457e179856de4aca08aba51d26ff6a6f23ea8", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 494, "deletions": 391, "changes": 885, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be02fa1a4e61f3c3f177c0457e712d054b5b4f99/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be02fa1a4e61f3c3f177c0457e712d054b5b4f99/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=be02fa1a4e61f3c3f177c0457e712d054b5b4f99", "patch": "@@ -1,18 +1,16 @@\n /*\n- * DO NOT EDIT THIS FILE   (fixincl.x)\n- * \n- * It has been autogen-ed  Sunday April  4, 1999 at 12:11:03 AM MST\n- * From the definitions    /puke/law//egcs/egcs/gcc/fixinc/inclhack.def\n- * and the template file   /puke/law//egcs/egcs/gcc/fixinc/fixincl.tpl\n+ *  DO NOT EDIT THIS FILE - it has been generated\n  *\n  * Install modified versions of certain ANSI-incompatible system header\n  * files which are fixed to work correctly with ANSI C and placed in a\n  * directory that GNU C will search.\n  *\n- * This script contains 103 fixup scripts.\n+ * This file contains 103 fixup descriptions.\n  *\n  * See README-fixinc for more information.\n  *\n+ *  inclhack copyright (c) 1999 The Free Software Foundation, Inc.\n+ *\n  *  inclhack is free software.\n  *  \n  *  You may redistribute it and/or modify it under the terms of the\n@@ -46,20 +44,21 @@ tSCC zAix_SyswaitList[] =\n #define apzAix_SyswaitMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zAix_SyswaitSelect0[] =\n        \"bos325,\";\n \n #define    AIX_SYSWAIT_TEST_CT  1\n+#define    AIX_SYSWAIT_RE_CT    1\n tTestDesc aAix_SyswaitTests[] = {\n-    { TT_EGREP,  zAix_SyswaitSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zAix_SyswaitSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aix_Syswait\n  */\n const char* apzAix_SyswaitPatch[] = { \"sed\",\n-    \"-e\" \"/^extern pid_t wait3();$/i\\\\\\n\"\n+    \"-e\", \"/^extern pid_t wait3();$/i\\\\\\n\"\n        \"struct rusage;\\n\",\n     (char*)NULL };\n \n@@ -80,20 +79,21 @@ tSCC zAix_VolatileList[] =\n #define apzAix_VolatileMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zAix_VolatileSelect0[] =\n        \"typedef volatile int sig_atomic_t\";\n \n #define    AIX_VOLATILE_TEST_CT  1\n+#define    AIX_VOLATILE_RE_CT    1\n tTestDesc aAix_VolatileTests[] = {\n-    { TT_EGREP,  zAix_VolatileSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zAix_VolatileSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aix_Volatile\n  */\n const char* apzAix_VolatilePatch[] = { \"sed\",\n-    \"-e\" \"s/typedef volatile int sig_atomic_t/typedef int sig_atomic_t/\",\n+    \"-e\", \"s/typedef volatile int sig_atomic_t/typedef int sig_atomic_t/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -114,20 +114,21 @@ tSCC zAlpha_GetoptList[] =\n #define apzAlpha_GetoptMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zAlpha_GetoptSelect0[] =\n        \"getopt\\\\(int, char \\\\*\\\\[\";\n \n #define    ALPHA_GETOPT_TEST_CT  1\n+#define    ALPHA_GETOPT_RE_CT    1\n tTestDesc aAlpha_GetoptTests[] = {\n-    { TT_EGREP,  zAlpha_GetoptSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zAlpha_GetoptSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Alpha_Getopt\n  */\n const char* apzAlpha_GetoptPatch[] = { \"sed\",\n-    \"-e\" \"s/getopt(int, char \\\\*\\\\[\\\\],[ ]*char \\\\*)/getopt(int, char *const[], const char *)/\",\n+    \"-e\", \"s/getopt(int, char \\\\*\\\\[\\\\],[ ]*char \\\\*)/getopt(int, char *const[], const char *)/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -147,20 +148,21 @@ tSCC zAlpha_ParensList[] =\n #define apzAlpha_ParensMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zAlpha_ParensSelect0[] =\n        \"#ifndef\\\\(__mips64\\\\)\";\n \n #define    ALPHA_PARENS_TEST_CT  1\n+#define    ALPHA_PARENS_RE_CT    1\n tTestDesc aAlpha_ParensTests[] = {\n-    { TT_EGREP,  zAlpha_ParensSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zAlpha_ParensSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Alpha_Parens\n  */\n const char* apzAlpha_ParensPatch[] = { \"sed\",\n-    \"-e\" \"s/#ifndef(__mips64)/#ifndef __mips64/\",\n+    \"-e\", \"s/#ifndef(__mips64)/#ifndef __mips64/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -180,20 +182,21 @@ tSCC zAlpha_SbrkList[] =\n #define apzAlpha_SbrkMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zAlpha_SbrkSelect0[] =\n        \"char[ \\t]*\\\\*[\\t ]*sbrk[ \\t]*\\\\(\";\n \n #define    ALPHA_SBRK_TEST_CT  1\n+#define    ALPHA_SBRK_RE_CT    1\n tTestDesc aAlpha_SbrkTests[] = {\n-    { TT_EGREP,  zAlpha_SbrkSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zAlpha_SbrkSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Alpha_Sbrk\n  */\n const char* apzAlpha_SbrkPatch[] = { \"sed\",\n-    \"-e\" \"s/char\\\\([ \\t]*\\\\*[\\t ]*sbrk[ \\t]*(\\\\)/void\\\\1/\",\n+    \"-e\", \"s/char\\\\([ \\t]*\\\\*[\\t ]*sbrk[ \\t]*(\\\\)/void\\\\1/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -212,13 +215,14 @@ tSCC zArm_Norcroft_HintList[] =\n  */\n #define apzArm_Norcroft_HintMachs (const char**)NULL\n #define ARM_NORCROFT_HINT_TEST_CT  0\n+#define ARM_NORCROFT_HINT_RE_CT    0\n #define aArm_Norcroft_HintTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Arm_Norcroft_Hint\n  */\n const char* apzArm_Norcroft_HintPatch[] = { \"sed\",\n-    \"-e\" \"s/___type p_type/p_type/\",\n+    \"-e\", \"s/___type p_type/p_type/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -238,21 +242,22 @@ tSCC zArm_WcharList[] =\n #define apzArm_WcharMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zArm_WcharSelect0[] =\n        \"#[ \\t]*define[ \\t]*__wchar_t\";\n \n #define    ARM_WCHAR_TEST_CT  1\n+#define    ARM_WCHAR_RE_CT    1\n tTestDesc aArm_WcharTests[] = {\n-    { TT_EGREP,  zArm_WcharSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zArm_WcharSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Arm_Wchar\n  */\n const char* apzArm_WcharPatch[] = { \"sed\",\n-    \"-e\" \"s/\\\\(#[ \\t]*ifndef[ \\t]*\\\\)__wchar_t/\\\\1_GCC_WCHAR_T/\",\n-    \"-e\" \"s/\\\\(#[ \\t]*define[ \\t]*\\\\)__wchar_t/\\\\1_GCC_WCHAR_T/\",\n+    \"-e\", \"s/\\\\(#[ \\t]*ifndef[ \\t]*\\\\)__wchar_t/\\\\1_GCC_WCHAR_T/\",\n+    \"-e\", \"s/\\\\(#[ \\t]*define[ \\t]*\\\\)__wchar_t/\\\\1_GCC_WCHAR_T/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -272,20 +277,21 @@ tSCC zAux_AsmList[] =\n #define apzAux_AsmMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zAux_AsmSelect0[] =\n        \"#ifndef NOINLINE\";\n \n #define    AUX_ASM_TEST_CT  1\n+#define    AUX_ASM_RE_CT    1\n tTestDesc aAux_AsmTests[] = {\n-    { TT_EGREP,  zAux_AsmSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zAux_AsmSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Aux_Asm\n  */\n const char* apzAux_AsmPatch[] = { \"sed\",\n-    \"-e\" \"s|#ifndef NOINLINE|#if !defined(NOINLINE) \\\\&\\\\& !defined(__GNUC__)|\",\n+    \"-e\", \"s|#ifndef NOINLINE|#if !defined(NOINLINE) \\\\&\\\\& !defined(__GNUC__)|\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -307,19 +313,20 @@ tSCC zAvoid_BoolList[] =\n  */\n #define apzAvoid_BoolMachs (const char**)NULL\n #define AVOID_BOOL_TEST_CT  0\n+#define AVOID_BOOL_RE_CT    0\n #define aAvoid_BoolTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Avoid_Bool\n  */\n const char* apzAvoid_BoolPatch[] = { \"sed\",\n-    \"-e\" \"/^#[ \\t]*define[ \\t][ \\t]*bool[ \\t][ \\t]*char[ \\t]*$/i\\\\\\n\"\n+    \"-e\", \"/^#[ \\t]*define[ \\t][ \\t]*bool[ \\t][ \\t]*char[ \\t]*$/i\\\\\\n\"\n        \"#ifndef __cplusplus\\n\",\n-    \"-e\" \"/^#[ \\t]*define[ \\t][ \\t]*bool[ \\t][ \\t]*char[ \\t]*$/a\\\\\\n\"\n+    \"-e\", \"/^#[ \\t]*define[ \\t][ \\t]*bool[ \\t][ \\t]*char[ \\t]*$/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/^typedef[ \\t][ \\t]*char[ \\t][ \\t]*bool[ \\t]*;/i\\\\\\n\"\n+    \"-e\", \"/^typedef[ \\t][ \\t]*char[ \\t][ \\t]*bool[ \\t]*;/i\\\\\\n\"\n        \"#ifndef __cplusplus\\n\",\n-    \"-e\" \"/^typedef[ \\t][ \\t]*char[ \\t][ \\t]*bool[ \\t]*;/a\\\\\\n\"\n+    \"-e\", \"/^typedef[ \\t][ \\t]*char[ \\t][ \\t]*bool[ \\t]*;/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -340,20 +347,21 @@ tSCC zBad_Struct_TermList[] =\n #define apzBad_Struct_TermMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zBad_Struct_TermSelect0[] =\n        \"^[ \\t]*typedef[ \\t]+struct[ \\t]+term[ \\t]*;\";\n \n #define    BAD_STRUCT_TERM_TEST_CT  1\n+#define    BAD_STRUCT_TERM_RE_CT    1\n tTestDesc aBad_Struct_TermTests[] = {\n-    { TT_EGREP,  zBad_Struct_TermSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zBad_Struct_TermSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Bad_Struct_Term\n  */\n const char* apzBad_Struct_TermPatch[] = { \"sed\",\n-    \"-e\" \"s/^[ \\t]*typedef[ \\t][ \\t]*\\\\(struct[ \\t][ \\t]*term[ \\t]*;[ \\t]*\\\\)$/\\\\1/\",\n+    \"-e\", \"s/^[ \\t]*typedef[ \\t][ \\t]*\\\\(struct[ \\t][ \\t]*term[ \\t]*;[ \\t]*\\\\)$/\\\\1/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -372,13 +380,14 @@ tSCC zBadquoteList[] =\n  */\n #define apzBadquoteMachs (const char**)NULL\n #define BADQUOTE_TEST_CT  0\n+#define BADQUOTE_RE_CT    0\n #define aBadquoteTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Badquote\n  */\n const char* apzBadquotePatch[] = { \"sed\",\n-    \"-e\" \"s/doesn't/does not/\",\n+    \"-e\", \"s/doesn't/does not/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -411,20 +420,21 @@ tSCC zBad_LvalList[] =\n #define apzBad_LvalMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zBad_LvalSelect0[] =\n        \"^[ \\t]*#[ \\t]*pragma[ \\t]extern_prefix\";\n \n #define    BAD_LVAL_TEST_CT  1\n+#define    BAD_LVAL_RE_CT    1\n tTestDesc aBad_LvalTests[] = {\n-    { TT_EGREP,  zBad_LvalSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zBad_LvalSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Bad_Lval\n  */\n const char* apzBad_LvalPatch[] = { \"sed\",\n-    \"-e\" \"s/^[ \\t]*#[ \\t]*define[ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\\\\(_.\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\",\n+    \"-e\", \"s/^[ \\t]*#[ \\t]*define[ \\t]*\\\\([^(]*\\\\)\\\\(([^)]*)\\\\)[ \\t]*\\\\(_.\\\\)\\\\1\\\\2[ \\t]*$/#define \\\\1 \\\\3\\\\1/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -444,27 +454,28 @@ tSCC zBroken_Assert_StdioList[] =\n #define apzBroken_Assert_StdioMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zBroken_Assert_StdioSelect0[] =\n        \"stderr\";\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zBroken_Assert_StdioBypass0[] =\n        \"include.*stdio.h\";\n \n #define    BROKEN_ASSERT_STDIO_TEST_CT  2\n+#define    BROKEN_ASSERT_STDIO_RE_CT    2\n tTestDesc aBroken_Assert_StdioTests[] = {\n-    { TT_NEGREP, zBroken_Assert_StdioBypass0, (regex_t*)NULL },\n-    { TT_EGREP,  zBroken_Assert_StdioSelect0, (regex_t*)NULL } };\n+  { TT_NEGREP, zBroken_Assert_StdioBypass0,   (regex_t*)NULL },\n+  { TT_EGREP,  zBroken_Assert_StdioSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Broken_Assert_Stdio\n  */\n const char* apzBroken_Assert_StdioPatch[] = { \"sed\",\n-    \"-e\" \"1i\\\\\\n\"\n+    \"-e\", \"1i\\\\\\n\"\n        \"#include <stdio.h>\\n\",\n     (char*)NULL };\n \n@@ -485,27 +496,28 @@ tSCC zBroken_Assert_StdlibList[] =\n #define apzBroken_Assert_StdlibMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zBroken_Assert_StdlibSelect0[] =\n        \"exit *\\\\(|abort *\\\\(\";\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zBroken_Assert_StdlibBypass0[] =\n        \"include.*stdlib.h\";\n \n #define    BROKEN_ASSERT_STDLIB_TEST_CT  2\n+#define    BROKEN_ASSERT_STDLIB_RE_CT    2\n tTestDesc aBroken_Assert_StdlibTests[] = {\n-    { TT_NEGREP, zBroken_Assert_StdlibBypass0, (regex_t*)NULL },\n-    { TT_EGREP,  zBroken_Assert_StdlibSelect0, (regex_t*)NULL } };\n+  { TT_NEGREP, zBroken_Assert_StdlibBypass0,   (regex_t*)NULL },\n+  { TT_EGREP,  zBroken_Assert_StdlibSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Broken_Assert_Stdlib\n  */\n const char* apzBroken_Assert_StdlibPatch[] = { \"sed\",\n-    \"-e\" \"1i\\\\\\n\"\n+    \"-e\", \"1i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#include <stdlib.h>\\\\\\n\"\n        \"#endif\\n\",\n@@ -527,21 +539,22 @@ tSCC zBsd43_Io_MacrosName[] =\n #define apzBsd43_Io_MacrosMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zBsd43_Io_MacrosSelect0[] =\n        \"BSD43__IO\";\n \n #define    BSD43_IO_MACROS_TEST_CT  1\n+#define    BSD43_IO_MACROS_RE_CT    1\n tTestDesc aBsd43_Io_MacrosTests[] = {\n-    { TT_EGREP,  zBsd43_Io_MacrosSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zBsd43_Io_MacrosSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Bsd43_Io_Macros\n  */\n const char* apzBsd43_Io_MacrosPatch[] = { \"sed\",\n-    \"-e\" \"/[ \\t]BSD43__IO[A-Z]*[ \\t]*(/s/(\\\\(.\\\\),/('\\\\1',/\",\n-    \"-e\" \"/#[ \\t]*define[ \\t]*[ \\t]BSD43__IO/s/'\\\\([cgx]\\\\)'/\\\\1/g\",\n+    \"-e\", \"/[ \\t]BSD43__IO[A-Z]*[ \\t]*(/s/(\\\\(.\\\\),/('\\\\1',/\",\n+    \"-e\", \"/#[ \\t]*define[ \\t]*[ \\t]BSD43__IO/s/'\\\\([cgx]\\\\)'/\\\\1/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -560,15 +573,16 @@ tSCC zDec_Intern_AsmList[] =\n  */\n #define apzDec_Intern_AsmMachs (const char**)NULL\n #define DEC_INTERN_ASM_TEST_CT  0\n+#define DEC_INTERN_ASM_RE_CT    0\n #define aDec_Intern_AsmTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Dec_Intern_Asm\n  */\n const char* apzDec_Intern_AsmPatch[] = { \"sed\",\n-    \"-e\" \"/^[ \\t]*float[ \\t]*fasm/i\\\\\\n\"\n+    \"-e\", \"/^[ \\t]*float[ \\t]*fasm/i\\\\\\n\"\n        \"#ifdef __DECC\\n\",\n-    \"-e\" \"/^[ \\t]*#[ \\t]*pragma[ \\t]*intrinsic([ \\t]*dasm/a\\\\\\n\"\n+    \"-e\", \"/^[ \\t]*#[ \\t]*pragma[ \\t]*intrinsic([ \\t]*dasm/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -588,27 +602,28 @@ tSCC zNo_Double_SlashName[] =\n #define apzNo_Double_SlashMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zNo_Double_SlashSelect0[] =\n-       \"//[^\\\"*]\";\n+       \"(^|[^:])//[^\\\"*]\";\n \n /*\n- *  content test pattern.  A shell will deal with it later.\n+ *  perform the 'test' shell command - do fix on success\n  */\n tSCC zNo_Double_SlashTest0[] =\n-       \"-z \\\"`echo ${file}|egrep '(cxx/|\\\\+\\\\+$|\\\\.hh$|\\\\.H$|\\\\.hxx$)'`\\\"\";\n+       \"-z `echo ${file} | egrep '(cxx|\\\\+\\\\+)/' `\";\n \n #define    NO_DOUBLE_SLASH_TEST_CT  2\n+#define    NO_DOUBLE_SLASH_RE_CT    1\n tTestDesc aNo_Double_SlashTests[] = {\n-    { TT_TEST,   zNo_Double_SlashTest0, 0 /* unused */ },\n-    { TT_EGREP,  zNo_Double_SlashSelect0, (regex_t*)NULL } };\n+  { TT_TEST,   zNo_Double_SlashTest0,     0 /* unused */ },\n+  { TT_EGREP,  zNo_Double_SlashSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for No_Double_Slash\n  */\n const char* apzNo_Double_SlashPatch[] = { \"sed\",\n-    \"-e\" \"/\\\\/\\\\/[^\\\"*]/s|//.*$||g\",\n+    \"-e\", \"/\\\\(^|[^:]\\\\)\\\\/\\\\/[^\\\"*]/s|//.*$||g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -628,13 +643,14 @@ tSCC zEcd_CursorList[] =\n  */\n #define apzEcd_CursorMachs (const char**)NULL\n #define ECD_CURSOR_TEST_CT  0\n+#define ECD_CURSOR_RE_CT    0\n #define aEcd_CursorTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Ecd_Cursor\n  */\n const char* apzEcd_CursorPatch[] = { \"sed\",\n-    \"-e\" \"s/ecd.cursor/ecd_cursor/\",\n+    \"-e\", \"s/ecd.cursor/ecd_cursor/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -653,20 +669,21 @@ tSCC zElse_LabelName[] =\n #define apzElse_LabelMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zElse_LabelSelect0[] =\n        \"^[ \\t]*#[ \\t]*else[ \\t]+[!-.0-~]\";\n \n #define    ELSE_LABEL_TEST_CT  1\n+#define    ELSE_LABEL_RE_CT    1\n tTestDesc aElse_LabelTests[] = {\n-    { TT_EGREP,  zElse_LabelSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zElse_LabelSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Else_Label\n  */\n const char* apzElse_LabelPatch[] = { \"sed\",\n-    \"-e\" \":loop\\n\"\n+    \"-e\", \":loop\\n\"\n        \"/\\\\\\\\$/N\\n\"\n        \"s/\\\\\\\\$/\\\\\\\\+++fixinc_eol+++/\\n\"\n        \"/\\\\\\\\$/b loop\\n\"\n@@ -691,20 +708,21 @@ tSCC zEndif_LabelName[] =\n #define apzEndif_LabelMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zEndif_LabelSelect0[] =\n        \"^[ \\t]*#[ \\t]*endif[ \\t]+[!-.0-z{|}~]\";\n \n #define    ENDIF_LABEL_TEST_CT  1\n+#define    ENDIF_LABEL_RE_CT    1\n tTestDesc aEndif_LabelTests[] = {\n-    { TT_EGREP,  zEndif_LabelSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zEndif_LabelSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Endif_Label\n  */\n const char* apzEndif_LabelPatch[] = { \"sed\",\n-    \"-e\" \":loop\\n\"\n+    \"-e\", \":loop\\n\"\n        \"/\\\\\\\\$/N\\n\"\n        \"s/\\\\\\\\$/\\\\\\\\+++fixinc_eol+++/\\n\"\n        \"/\\\\\\\\$/b loop\\n\"\n@@ -731,21 +749,22 @@ tSCC zHp_InlineList[] =\n #define apzHp_InlineMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zHp_InlineSelect0[] =\n        \"include.*\\\"\\\\.\\\\./machine/\";\n \n #define    HP_INLINE_TEST_CT  1\n+#define    HP_INLINE_RE_CT    1\n tTestDesc aHp_InlineTests[] = {\n-    { TT_EGREP,  zHp_InlineSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zHp_InlineSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hp_Inline\n  */\n const char* apzHp_InlinePatch[] = { \"sed\",\n-    \"-e\" \"s,\\\"../machine/inline.h\\\",<machine/inline.h>,\",\n-    \"-e\" \"s,\\\"../machine/psl.h\\\",<machine/psl.h>,\",\n+    \"-e\", \"s,\\\"../machine/inline.h\\\",<machine/inline.h>,\",\n+    \"-e\", \"s,\\\"../machine/psl.h\\\",<machine/psl.h>,\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -765,20 +784,21 @@ tSCC zHp_SysfileList[] =\n #define apzHp_SysfileMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zHp_SysfileSelect0[] =\n        \"HPUX_SOURCE\";\n \n #define    HP_SYSFILE_TEST_CT  1\n+#define    HP_SYSFILE_RE_CT    1\n tTestDesc aHp_SysfileTests[] = {\n-    { TT_EGREP,  zHp_SysfileSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zHp_SysfileSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hp_Sysfile\n  */\n const char* apzHp_SysfilePatch[] = { \"sed\",\n-    \"-e\" \"s/(\\\\.\\\\.\\\\.)/(struct file * ...)/\",\n+    \"-e\", \"s/(\\\\.\\\\.\\\\.)/(struct file * ...)/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -799,25 +819,26 @@ tSCC zCxx_UnreadyList[] =\n #define apzCxx_UnreadyMachs (const char**)NULL\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zCxx_UnreadyBypass0[] =\n        \"\\\"C\\\"|__BEGIN_DECLS\";\n \n #define    CXX_UNREADY_TEST_CT  1\n+#define    CXX_UNREADY_RE_CT    1\n tTestDesc aCxx_UnreadyTests[] = {\n-    { TT_NEGREP, zCxx_UnreadyBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP, zCxx_UnreadyBypass0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Cxx_Unready\n  */\n const char* apzCxx_UnreadyPatch[] = { \"sed\",\n-    \"-e\" \"1i\\\\\\n\"\n+    \"-e\", \"1i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"extern \\\"C\\\" {\\\\\\n\"\n        \"#endif\\\\\\n\"\n        \"\\n\",\n-    \"-e\" \"$a\\\\\\n\"\n+    \"-e\", \"$a\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"}\\\\\\n\"\n        \"#endif\\n\",\n@@ -839,15 +860,16 @@ tSCC zHpux_MaxintList[] =\n  */\n #define apzHpux_MaxintMachs (const char**)NULL\n #define HPUX_MAXINT_TEST_CT  0\n+#define HPUX_MAXINT_RE_CT    0\n #define aHpux_MaxintTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Hpux_Maxint\n  */\n const char* apzHpux_MaxintPatch[] = { \"sed\",\n-    \"-e\" \"/^#[ \\t]*define[ \\t]*MAXINT[ \\t]/i\\\\\\n\"\n+    \"-e\", \"/^#[ \\t]*define[ \\t]*MAXINT[ \\t]/i\\\\\\n\"\n        \"#ifndef MAXINT\\n\",\n-    \"-e\" \"/^#[ \\t]*define[ \\t]*MAXINT[ \\t]/a\\\\\\n\"\n+    \"-e\", \"/^#[ \\t]*define[ \\t]*MAXINT[ \\t]/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -868,20 +890,21 @@ tSCC zHpux_SystimeList[] =\n #define apzHpux_SystimeMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zHpux_SystimeSelect0[] =\n        \"^extern struct sigevent;\";\n \n #define    HPUX_SYSTIME_TEST_CT  1\n+#define    HPUX_SYSTIME_RE_CT    1\n tTestDesc aHpux_SystimeTests[] = {\n-    { TT_EGREP,  zHpux_SystimeSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zHpux_SystimeSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Hpux_Systime\n  */\n const char* apzHpux_SystimePatch[] = { \"sed\",\n-    \"-e\" \"s/^extern struct sigevent;/struct sigevent;/\",\n+    \"-e\", \"s/^extern struct sigevent;/struct sigevent;/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -906,23 +929,24 @@ tSCC zInteractv_Add1List[] =\n #define apzInteractv_Add1Machs (const char**)NULL\n \n /*\n- *  content test pattern.  A shell will deal with it later.\n+ *  perform the 'test' shell command - do fix on success\n  */\n tSCC zInteractv_Add1Test0[] =\n        \" -d /etc/conf/kconfig.d\";\n tSCC zInteractv_Add1Test1[] =\n        \" -n \\\"`grep _POSIX_VERSION /usr/include/sys/unistd.h`\\\"\";\n \n #define    INTERACTV_ADD1_TEST_CT  2\n+#define    INTERACTV_ADD1_RE_CT    0\n tTestDesc aInteractv_Add1Tests[] = {\n-    { TT_TEST,   zInteractv_Add1Test0, 0 /* unused */ },\n-    { TT_TEST,   zInteractv_Add1Test1, 0 /* unused */ }, };\n+  { TT_TEST,   zInteractv_Add1Test0,     0 /* unused */ },\n+  { TT_TEST,   zInteractv_Add1Test1,     0 /* unused */ }, };\n \n /*\n  *  Fix Command Arguments for Interactv_Add1\n  */\n const char* apzInteractv_Add1Patch[] = { \"sed\",\n-    \"-e\" \"s/!defined(__STDC__) && !defined(_POSIX_SOURCE)/!defined(_POSIX_SOURCE)/\",\n+    \"-e\", \"s/!defined(__STDC__) && !defined(_POSIX_SOURCE)/!defined(_POSIX_SOURCE)/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -942,23 +966,24 @@ tSCC zInteractv_Add2List[] =\n #define apzInteractv_Add2Machs (const char**)NULL\n \n /*\n- *  content test pattern.  A shell will deal with it later.\n+ *  perform the 'test' shell command - do fix on success\n  */\n tSCC zInteractv_Add2Test0[] =\n        \" -d /etc/conf/kconfig.d\";\n tSCC zInteractv_Add2Test1[] =\n        \" -n \\\"`grep _POSIX_VERSION /usr/include/sys/unistd.h`\\\"\";\n \n #define    INTERACTV_ADD2_TEST_CT  2\n+#define    INTERACTV_ADD2_RE_CT    0\n tTestDesc aInteractv_Add2Tests[] = {\n-    { TT_TEST,   zInteractv_Add2Test0, 0 /* unused */ },\n-    { TT_TEST,   zInteractv_Add2Test1, 0 /* unused */ }, };\n+  { TT_TEST,   zInteractv_Add2Test0,     0 /* unused */ },\n+  { TT_TEST,   zInteractv_Add2Test1,     0 /* unused */ }, };\n \n /*\n  *  Fix Command Arguments for Interactv_Add2\n  */\n const char* apzInteractv_Add2Patch[] = { \"sed\",\n-    \"-e\" \"s/fmod(double)/fmod(double, double)/\",\n+    \"-e\", \"s/fmod(double)/fmod(double, double)/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -978,24 +1003,25 @@ tSCC zInteractv_Add3List[] =\n #define apzInteractv_Add3Machs (const char**)NULL\n \n /*\n- *  content test pattern.  A shell will deal with it later.\n+ *  perform the 'test' shell command - do fix on success\n  */\n tSCC zInteractv_Add3Test0[] =\n        \" -d /etc/conf/kconfig.d\";\n tSCC zInteractv_Add3Test1[] =\n        \" -n \\\"`grep _POSIX_VERSION /usr/include/sys/unistd.h`\\\"\";\n \n #define    INTERACTV_ADD3_TEST_CT  2\n+#define    INTERACTV_ADD3_RE_CT    0\n tTestDesc aInteractv_Add3Tests[] = {\n-    { TT_TEST,   zInteractv_Add3Test0, 0 /* unused */ },\n-    { TT_TEST,   zInteractv_Add3Test1, 0 /* unused */ }, };\n+  { TT_TEST,   zInteractv_Add3Test0,     0 /* unused */ },\n+  { TT_TEST,   zInteractv_Add3Test1,     0 /* unused */ }, };\n \n /*\n  *  Fix Command Arguments for Interactv_Add3\n  */\n const char* apzInteractv_Add3Patch[] = { \"sed\",\n-    \"-e\" \"/CHILD_MAX/s,/\\\\* Max, Max,\",\n-    \"-e\" \"/OPEN_MAX/s,/\\\\* Max, Max,\",\n+    \"-e\", \"/CHILD_MAX/s,/\\\\* Max, Max,\",\n+    \"-e\", \"/OPEN_MAX/s,/\\\\* Max, Max,\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1014,22 +1040,23 @@ tSCC zIo_Def_QuotesName[] =\n #define apzIo_Def_QuotesMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zIo_Def_QuotesSelect0[] =\n        \"[ \\t](_|DES)IO[A-Z]*[ \\t]*\\\\( *[^,']\";\n \n #define    IO_DEF_QUOTES_TEST_CT  1\n+#define    IO_DEF_QUOTES_RE_CT    1\n tTestDesc aIo_Def_QuotesTests[] = {\n-    { TT_EGREP,  zIo_Def_QuotesSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zIo_Def_QuotesSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Io_Def_Quotes\n  */\n const char* apzIo_Def_QuotesPatch[] = { \"sed\",\n-    \"-e\" \"s/\\\\([ \\t](_|DES)IO[A-Z]*[ \\t]*(\\\\)\\\\([^,']\\\\),/\\\\1'\\\\2',/\",\n-    \"-e\" \"/#[ \\t]*define[ \\t]*[ \\t]_IO/s/'\\\\([cgxtf]\\\\)'/\\\\1/g\",\n-    \"-e\" \"/#[ \\t]*define[ \\t]*[ \\t]DESIOC/s/'\\\\([cdgx]\\\\)'/\\\\1/g\",\n+    \"-e\", \"s/\\\\([ \\t](_|DES)IO[A-Z]*[ \\t]*(\\\\)\\\\([^,']\\\\),/\\\\1'\\\\2',/\",\n+    \"-e\", \"/#[ \\t]*define[ \\t]*[ \\t]_IO/s/'\\\\([cgxtf]\\\\)'/\\\\1/g\",\n+    \"-e\", \"/#[ \\t]*define[ \\t]*[ \\t]DESIOC/s/'\\\\([cdgx]\\\\)'/\\\\1/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1048,24 +1075,25 @@ tSCC zIoctl_Fix_CtrlName[] =\n #define apzIoctl_Fix_CtrlMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zIoctl_Fix_CtrlSelect0[] =\n        \"CTRL[ \\t]\";\n \n #define    IOCTL_FIX_CTRL_TEST_CT  1\n+#define    IOCTL_FIX_CTRL_RE_CT    1\n tTestDesc aIoctl_Fix_CtrlTests[] = {\n-    { TT_EGREP,  zIoctl_Fix_CtrlSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zIoctl_Fix_CtrlSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ioctl_Fix_Ctrl\n  */\n const char* apzIoctl_Fix_CtrlPatch[] = { \"sed\",\n-    \"-e\" \"/[^A-Z0-9_]CTRL[ \\t]*(/s/\\\\([^']\\\\))/'\\\\1')/\",\n-    \"-e\" \"/[^A-Z0-9]_CTRL[ \\t]*(/s/\\\\([^']\\\\))/'\\\\1')/\",\n-    \"-e\" \"/#[ \\t]*define[ \\t]*[ \\t]CTRL/s/'\\\\([cgx]\\\\)'/\\\\1/g\",\n-    \"-e\" \"/#[ \\t]*define[ \\t]*[ \\t]_CTRL/s/'\\\\([cgx]\\\\)'/\\\\1/g\",\n-    \"-e\" \"/#[ \\t]*define[ \\t]*[ \\t]BSD43_CTRL/s/'\\\\([cgx]\\\\)'/\\\\1/g\",\n+    \"-e\", \"/[^A-Z0-9_]CTRL[ \\t]*(/s/\\\\([^']\\\\))/'\\\\1')/\",\n+    \"-e\", \"/[^A-Z0-9]_CTRL[ \\t]*(/s/\\\\([^']\\\\))/'\\\\1')/\",\n+    \"-e\", \"/#[ \\t]*define[ \\t]*[ \\t]CTRL/s/'\\\\([cgx]\\\\)'/\\\\1/g\",\n+    \"-e\", \"/#[ \\t]*define[ \\t]*[ \\t]_CTRL/s/'\\\\([cgx]\\\\)'/\\\\1/g\",\n+    \"-e\", \"/#[ \\t]*define[ \\t]*[ \\t]BSD43_CTRL/s/'\\\\([cgx]\\\\)'/\\\\1/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1084,13 +1112,14 @@ tSCC zIp_Missing_SemiList[] =\n  */\n #define apzIp_Missing_SemiMachs (const char**)NULL\n #define IP_MISSING_SEMI_TEST_CT  0\n+#define IP_MISSING_SEMI_RE_CT    0\n #define aIp_Missing_SemiTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Ip_Missing_Semi\n  */\n const char* apzIp_Missing_SemiPatch[] = { \"sed\",\n-    \"-e\" \"/^struct/,/^};/s/}$/};/\",\n+    \"-e\", \"/^struct/,/^};/s/}$/};/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1109,14 +1138,15 @@ tSCC zIrix_Multiline_CmntList[] =\n  */\n #define apzIrix_Multiline_CmntMachs (const char**)NULL\n #define IRIX_MULTILINE_CMNT_TEST_CT  0\n+#define IRIX_MULTILINE_CMNT_RE_CT    0\n #define aIrix_Multiline_CmntTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Irix_Multiline_Cmnt\n  */\n const char* apzIrix_Multiline_CmntPatch[] = { \"sed\",\n-    \"-e\" \"s@type of the result@type of the result */@\",\n-    \"-e\" \"s@of the sizeof@/* of the sizeof@\",\n+    \"-e\", \"s@type of the result@type of the result */@\",\n+    \"-e\", \"s@of the sizeof@/* of the sizeof@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1136,20 +1166,21 @@ tSCC zIrix_SockaddrList[] =\n #define apzIrix_SockaddrMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zIrix_SockaddrSelect0[] =\n        \"authdes_create.*struct sockaddr\";\n \n #define    IRIX_SOCKADDR_TEST_CT  1\n+#define    IRIX_SOCKADDR_RE_CT    1\n tTestDesc aIrix_SockaddrTests[] = {\n-    { TT_EGREP,  zIrix_SockaddrSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zIrix_SockaddrSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Irix_Sockaddr\n  */\n const char* apzIrix_SockaddrPatch[] = { \"sed\",\n-    \"-e\" \"/authdes_create.*struct sockaddr/i\\\\\\n\"\n+    \"-e\", \"/authdes_create.*struct sockaddr/i\\\\\\n\"\n        \"struct sockaddr;\\n\",\n     (char*)NULL };\n \n@@ -1169,13 +1200,14 @@ tSCC zIrix_Struct__FileList[] =\n  */\n #define apzIrix_Struct__FileMachs (const char**)NULL\n #define IRIX_STRUCT__FILE_TEST_CT  0\n+#define IRIX_STRUCT__FILE_RE_CT    0\n #define aIrix_Struct__FileTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Irix_Struct__File\n  */\n const char* apzIrix_Struct__FilePatch[] = { \"sed\",\n-    \"-e\" \"/xdrstdio_create.*struct __file_s/i\\\\\\n\"\n+    \"-e\", \"/xdrstdio_create.*struct __file_s/i\\\\\\n\"\n        \"struct __file_s;\\n\",\n     (char*)NULL };\n \n@@ -1196,20 +1228,21 @@ tSCC zIsc_FmodList[] =\n #define apzIsc_FmodMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zIsc_FmodSelect0[] =\n        \"fmod\\\\(double\\\\)\";\n \n #define    ISC_FMOD_TEST_CT  1\n+#define    ISC_FMOD_RE_CT    1\n tTestDesc aIsc_FmodTests[] = {\n-    { TT_EGREP,  zIsc_FmodSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zIsc_FmodSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Isc_Fmod\n  */\n const char* apzIsc_FmodPatch[] = { \"sed\",\n-    \"-e\" \"s/fmod(double)/fmod(double, double)/\",\n+    \"-e\", \"s/fmod(double)/fmod(double, double)/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1231,14 +1264,15 @@ tSCC* apzMotorola_NestedMachs[] = {\n         \"m68k-motorola-sysv*\",\n         (const char*)NULL };\n #define MOTOROLA_NESTED_TEST_CT  0\n+#define MOTOROLA_NESTED_RE_CT    0\n #define aMotorola_NestedTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Motorola_Nested\n  */\n const char* apzMotorola_NestedPatch[] = { \"sed\",\n-    \"-e\" \"s@^\\\\(#undef[ \\t][ \\t]*PIPE_BUF[ \\t]*/\\\\* max # bytes atomic in write to a\\\\)$@\\\\1 */@\",\n-    \"-e\" \"s@\\\\(/\\\\*#define\\tHUGE_VAL\\t3.40282346638528860e+38 \\\\)\\\\(/\\\\*error value returned by Math lib\\\\*/\\\\)$@\\\\1*/ \\\\2@\",\n+    \"-e\", \"s@^\\\\(#undef[ \\t][ \\t]*PIPE_BUF[ \\t]*/\\\\* max # bytes atomic in write to a\\\\)$@\\\\1 */@\",\n+    \"-e\", \"s@\\\\(/\\\\*#define\\tHUGE_VAL\\t3.40282346638528860e+38 \\\\)\\\\(/\\\\*error value returned by Math lib\\\\*/\\\\)$@\\\\1*/ \\\\2@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1258,21 +1292,22 @@ tSCC zIsc_Sys_LimitsList[] =\n #define apzIsc_Sys_LimitsMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zIsc_Sys_LimitsSelect0[] =\n        \"CHILD_MAX\";\n \n #define    ISC_SYS_LIMITS_TEST_CT  1\n+#define    ISC_SYS_LIMITS_RE_CT    1\n tTestDesc aIsc_Sys_LimitsTests[] = {\n-    { TT_EGREP,  zIsc_Sys_LimitsSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zIsc_Sys_LimitsSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Isc_Sys_Limits\n  */\n const char* apzIsc_Sys_LimitsPatch[] = { \"sed\",\n-    \"-e\" \"/CHILD_MAX/s,/\\\\* Max, Max,\",\n-    \"-e\" \"/OPEN_MAX/s,/\\\\* Max, Max,\",\n+    \"-e\", \"/CHILD_MAX/s,/\\\\* Max, Max,\",\n+    \"-e\", \"/OPEN_MAX/s,/\\\\* Max, Max,\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1309,20 +1344,21 @@ tSCC zKandr_ConcatList[] =\n #define apzKandr_ConcatMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zKandr_ConcatSelect0[] =\n        \"/\\\\*\\\\*/\";\n \n #define    KANDR_CONCAT_TEST_CT  1\n+#define    KANDR_CONCAT_RE_CT    1\n tTestDesc aKandr_ConcatTests[] = {\n-    { TT_EGREP,  zKandr_ConcatSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zKandr_ConcatSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Kandr_Concat\n  */\n const char* apzKandr_ConcatPatch[] = { \"sed\",\n-    \"-e\" \"s|/\\\\*\\\\*/|##|g\",\n+    \"-e\", \"s|/\\\\*\\\\*/|##|g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1342,44 +1378,45 @@ tSCC zLimits_IfndefsList[] =\n #define apzLimits_IfndefsMachs (const char**)NULL\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zLimits_IfndefsBypass0[] =\n        \"ifndef[ \\t]+FLT_MIN\";\n \n #define    LIMITS_IFNDEFS_TEST_CT  1\n+#define    LIMITS_IFNDEFS_RE_CT    1\n tTestDesc aLimits_IfndefsTests[] = {\n-    { TT_NEGREP, zLimits_IfndefsBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP, zLimits_IfndefsBypass0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Limits_Ifndefs\n  */\n const char* apzLimits_IfndefsPatch[] = { \"sed\",\n-    \"-e\" \"/[ \\t]FLT_MIN[ \\t]/i\\\\\\n\"\n+    \"-e\", \"/[ \\t]FLT_MIN[ \\t]/i\\\\\\n\"\n        \"#ifndef FLT_MIN\\n\",\n-    \"-e\" \"/[ \\t]FLT_MIN[ \\t]/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]FLT_MIN[ \\t]/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[ \\t]FLT_MAX[ \\t]/i\\\\\\n\"\n+    \"-e\", \"/[ \\t]FLT_MAX[ \\t]/i\\\\\\n\"\n        \"#ifndef FLT_MAX\\n\",\n-    \"-e\" \"/[ \\t]FLT_MAX[ \\t]/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]FLT_MAX[ \\t]/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[ \\t]FLT_DIG[ \\t]/i\\\\\\n\"\n+    \"-e\", \"/[ \\t]FLT_DIG[ \\t]/i\\\\\\n\"\n        \"#ifndef FLT_DIG\\n\",\n-    \"-e\" \"/[ \\t]FLT_DIG[ \\t]/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]FLT_DIG[ \\t]/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[ \\t]DBL_MIN[ \\t]/i\\\\\\n\"\n+    \"-e\", \"/[ \\t]DBL_MIN[ \\t]/i\\\\\\n\"\n        \"#ifndef DBL_MIN\\n\",\n-    \"-e\" \"/[ \\t]DBL_MIN[ \\t]/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]DBL_MIN[ \\t]/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[ \\t]DBL_MAX[ \\t]/i\\\\\\n\"\n+    \"-e\", \"/[ \\t]DBL_MAX[ \\t]/i\\\\\\n\"\n        \"#ifndef DBL_MAX\\n\",\n-    \"-e\" \"/[ \\t]DBL_MAX[ \\t]/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]DBL_MAX[ \\t]/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[ \\t]DBL_DIG[ \\t]/i\\\\\\n\"\n+    \"-e\", \"/[ \\t]DBL_DIG[ \\t]/i\\\\\\n\"\n        \"#ifndef DBL_DIG\\n\",\n-    \"-e\" \"/[ \\t]DBL_DIG[ \\t]/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]DBL_DIG[ \\t]/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/^\\\\(\\\\/\\\\*#define\\tHUGE_VAL\\t3\\\\.[0-9e+]* *\\\\)\\\\/\\\\*/s//\\\\1/\",\n+    \"-e\", \"/^\\\\(\\\\/\\\\*#define\\tHUGE_VAL\\t3\\\\.[0-9e+]* *\\\\)\\\\/\\\\*/s//\\\\1/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1399,20 +1436,21 @@ tSCC zLynx_Void_IntList[] =\n #define apzLynx_Void_IntMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zLynx_Void_IntSelect0[] =\n        \"#[ \\t]*define[ \\t]+void[ \\t]+int\";\n \n #define    LYNX_VOID_INT_TEST_CT  1\n+#define    LYNX_VOID_INT_RE_CT    1\n tTestDesc aLynx_Void_IntTests[] = {\n-    { TT_EGREP,  zLynx_Void_IntSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zLynx_Void_IntSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Lynx_Void_Int\n  */\n const char* apzLynx_Void_IntPatch[] = { \"sed\",\n-    \"-e\" \"/#[ \\t]*define[ \\t][ \\t]*void[ \\t]int/d\",\n+    \"-e\", \"/#[ \\t]*define[ \\t][ \\t]*void[ \\t]int/d\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1432,20 +1470,21 @@ tSCC zLynxos_Fcntl_ProtoList[] =\n #define apzLynxos_Fcntl_ProtoMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zLynxos_Fcntl_ProtoSelect0[] =\n        \"fcntl.*\\\\(int, int, int\\\\)\";\n \n #define    LYNXOS_FCNTL_PROTO_TEST_CT  1\n+#define    LYNXOS_FCNTL_PROTO_RE_CT    1\n tTestDesc aLynxos_Fcntl_ProtoTests[] = {\n-    { TT_EGREP,  zLynxos_Fcntl_ProtoSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zLynxos_Fcntl_ProtoSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Lynxos_Fcntl_Proto\n  */\n const char* apzLynxos_Fcntl_ProtoPatch[] = { \"sed\",\n-    \"-e\" \"s/\\\\(fcntl.*(int, int, \\\\)int)/\\\\1...)/\",\n+    \"-e\", \"s/\\\\(fcntl.*(int, int, \\\\)int)/\\\\1...)/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1466,14 +1505,15 @@ tSCC* apzM88k_Bad_Hypot_OptMachs[] = {\n         \"m88k-motorola-sysv3*\",\n         (const char*)NULL };\n #define M88K_BAD_HYPOT_OPT_TEST_CT  0\n+#define M88K_BAD_HYPOT_OPT_RE_CT    0\n #define aM88k_Bad_Hypot_OptTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for M88k_Bad_Hypot_Opt\n  */\n const char* apzM88k_Bad_Hypot_OptPatch[] = { \"sed\",\n-    \"-e\" \"s/extern double floor(), ceil(), fmod(), fabs();/extern double floor(), ceil(), fmod(), fabs _PARAMS((double));/\",\n-    \"-e\" \"/^extern double hypot();$/a\\\\\\n\"\n+    \"-e\", \"s/extern double floor(), ceil(), fmod(), fabs();/extern double floor(), ceil(), fmod(), fabs _PARAMS((double));/\",\n+    \"-e\", \"/^extern double hypot();$/a\\\\\\n\"\n        \"\\\\/* Workaround a stupid Motorola optimization if one\\\\\\n\"\n        \"   of x or y is 0.0 and the other is negative!  *\\\\/\\\\\\n\"\n        \"#ifdef __STDC__\\\\\\n\"\n@@ -1507,21 +1547,22 @@ tSCC* apzM88k_Bad_S_IfMachs[] = {\n         (const char*)NULL };\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zM88k_Bad_S_IfSelect0[] =\n        \"#define[ \\t]+S_IS[A-Z]*(m)[ \\t]\";\n \n #define    M88K_BAD_S_IF_TEST_CT  1\n+#define    M88K_BAD_S_IF_RE_CT    1\n tTestDesc aM88k_Bad_S_IfTests[] = {\n-    { TT_EGREP,  zM88k_Bad_S_IfSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zM88k_Bad_S_IfSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for M88k_Bad_S_If\n  */\n const char* apzM88k_Bad_S_IfPatch[] = { \"sed\",\n-    \"-e\" \"s/^\\\\(#define[ \\t]*S_IS[A-Z]*(m)\\\\)[ \\t]*(m[ \\t]*&[ \\t]*\\\\(S_IF[A-Z][A-Z][A-Z][A-Z]*\\\\)[ \\t]*)/\\\\1 (((m)\\\\&S_IFMT)==\\\\2)/\",\n-    \"-e\" \"s/^\\\\(#define[ \\t]*S_IS[A-Z]*(m)\\\\)[ \\t]*(m[ \\t]*&[ \\t]*\\\\(0[0-9]*\\\\)[ \\t]*)/\\\\1 (((m)\\\\&S_IFMT)==\\\\2)/\",\n+    \"-e\", \"s/^\\\\(#define[ \\t]*S_IS[A-Z]*(m)\\\\)[ \\t]*(m[ \\t]*&[ \\t]*\\\\(S_IF[A-Z][A-Z][A-Z][A-Z]*\\\\)[ \\t]*)/\\\\1 (((m)\\\\&S_IFMT)==\\\\2)/\",\n+    \"-e\", \"s/^\\\\(#define[ \\t]*S_IS[A-Z]*(m)\\\\)[ \\t]*(m[ \\t]*&[ \\t]*\\\\(0[0-9]*\\\\)[ \\t]*)/\\\\1 (((m)\\\\&S_IFMT)==\\\\2)/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1543,14 +1584,15 @@ tSCC* apzM88k_Multi_InclMachs[] = {\n         (const char*)NULL };\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zM88k_Multi_InclBypass0[] =\n        \"#ifndef\";\n \n #define    M88K_MULTI_INCL_TEST_CT  1\n+#define    M88K_MULTI_INCL_RE_CT    1\n tTestDesc aM88k_Multi_InclTests[] = {\n-    { TT_NEGREP, zM88k_Multi_InclBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP, zM88k_Multi_InclBypass0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for M88k_Multi_Incl\n@@ -1580,20 +1622,23 @@ tSCC zMachine_NameName[] =\n #define apzMachine_NameMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n+ *  This is a special pattern that not all egrep commands\n+ *  are capable of coping with.  We use the GNU library, tho :)\n  */\n tSCC zMachine_NameSelect0[] =\n-       \"^#[ \\t]*(if|elif).*[^a-zA-Z0-9_](M32|_*(MIPSE[LB]|SYSTYPE_[A-Z0-9]|[Rr][34]000|host_mips|i386|mips)($|[^a-zA-Z0-9_])|bsd4|is68k|m[68]8k|mc680|news|ns32000|pdp11|pyr|sel|sony_news|sparc|sun|tahoe|tower|u370|u3b|unix|vax)\";\n+       \"^#[ \\t]*(if|elif).*[^a-zA-Z0-9_](M32|_*MIPSE[LB]|_*SYSTYPE_[A-Z0-9]|_*[Rr][34]000|_*host_mips|_*i386|_*mips|bsd4|is68k|m[68]8k|mc680|news|ns32000|pdp11|pyr|sel|sony_news|sparc|sun|tahoe|tower|u370|u3b|unix|vax)\";\n \n #define    MACHINE_NAME_TEST_CT  1\n+#define    MACHINE_NAME_RE_CT    1\n tTestDesc aMachine_NameTests[] = {\n-    { TT_EGREP,  zMachine_NameSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zMachine_NameSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Machine_Name\n  */\n const char* apzMachine_NamePatch[] = { \"sed\",\n-    \"-e\" \":loop\\n\"\n+    \"-e\", \":loop\\n\"\n        \"/\\\\\\\\$/N\\n\"\n        \"s/\\\\\\\\$/\\\\\\\\+++fixinc_eol+++/\\n\"\n        \"/\\\\\\\\$/b loop\\n\"\n@@ -1647,32 +1692,33 @@ tSCC zMath_ExceptionList[] =\n #define apzMath_ExceptionMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zMath_ExceptionSelect0[] =\n        \"struct exception\";\n \n #define    MATH_EXCEPTION_TEST_CT  1\n+#define    MATH_EXCEPTION_RE_CT    1\n tTestDesc aMath_ExceptionTests[] = {\n-    { TT_EGREP,  zMath_ExceptionSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zMath_ExceptionSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Math_Exception\n  */\n const char* apzMath_ExceptionPatch[] = { \"sed\",\n-    \"-e\" \"/struct exception/i\\\\\\n\"\n+    \"-e\", \"/struct exception/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#define exception __math_exception\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/struct exception/a\\\\\\n\"\n+    \"-e\", \"/struct exception/a\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#undef exception\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/matherr/i\\\\\\n\"\n+    \"-e\", \"/matherr/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#define exception __math_exception\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/matherr/a\\\\\\n\"\n+    \"-e\", \"/matherr/a\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"#undef exception\\\\\\n\"\n        \"#endif\\n\",\n@@ -1694,6 +1740,7 @@ tSCC zMath_Gcc_IfndefsList[] =\n  */\n #define apzMath_Gcc_IfndefsMachs (const char**)NULL\n #define MATH_GCC_IFNDEFS_TEST_CT  0\n+#define MATH_GCC_IFNDEFS_RE_CT    0\n #define aMath_Gcc_IfndefsTests   (tTestDesc*)NULL\n \n /*\n@@ -1731,13 +1778,14 @@ tSCC zNested_CommentList[] =\n  */\n #define apzNested_CommentMachs (const char**)NULL\n #define NESTED_COMMENT_TEST_CT  0\n+#define NESTED_COMMENT_RE_CT    0\n #define aNested_CommentTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Nested_Comment\n  */\n const char* apzNested_CommentPatch[] = { \"sed\",\n-    \"-e\" \"s@^\\\\(/\\\\*.*rpc/auth_des.h>.*\\\\)/\\\\*@\\\\1*/ /*@\",\n+    \"-e\", \"s@^\\\\(/\\\\*.*rpc/auth_des.h>.*\\\\)/\\\\*@\\\\1*/ /*@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1757,22 +1805,23 @@ tSCC zNews_Os_RecursionList[] =\n #define apzNews_Os_RecursionMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zNews_Os_RecursionSelect0[] =\n        \"#include <stdlib.h>\";\n \n #define    NEWS_OS_RECURSION_TEST_CT  1\n+#define    NEWS_OS_RECURSION_RE_CT    1\n tTestDesc aNews_Os_RecursionTests[] = {\n-    { TT_EGREP,  zNews_Os_RecursionSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zNews_Os_RecursionSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for News_Os_Recursion\n  */\n const char* apzNews_Os_RecursionPatch[] = { \"sed\",\n-    \"-e\" \"/^#include <stdlib.h>/i\\\\\\n\"\n+    \"-e\", \"/^#include <stdlib.h>/i\\\\\\n\"\n        \"#ifdef BOGUS_RECURSION\\n\",\n-    \"-e\" \"/^#include <stdlib.h>/a\\\\\\n\"\n+    \"-e\", \"/^#include <stdlib.h>/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -1793,24 +1842,25 @@ tSCC zNext_Math_PrefixList[] =\n #define apzNext_Math_PrefixMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zNext_Math_PrefixSelect0[] =\n        \"^extern.*double.*__const__.*\";\n \n #define    NEXT_MATH_PREFIX_TEST_CT  1\n+#define    NEXT_MATH_PREFIX_RE_CT    1\n tTestDesc aNext_Math_PrefixTests[] = {\n-    { TT_EGREP,  zNext_Math_PrefixSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zNext_Math_PrefixSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Next_Math_Prefix\n  */\n const char* apzNext_Math_PrefixPatch[] = { \"sed\",\n-    \"-e\" \"/^extern.*double.*__const__.*sqrt(/s/__const__//\",\n-    \"-e\" \"/^extern.*double.*__const__.*fabs(/s/__const__//\",\n-    \"-e\" \"/^extern.*double.*__const__.*cos(/s/__const__//\",\n-    \"-e\" \"/^extern.*double.*__const__.*hypot(/s/__const__//\",\n-    \"-e\" \"/^extern.*double.*__const__.*sin(/s/__const__//\",\n+    \"-e\", \"/^extern.*double.*__const__.*sqrt(/s/__const__//\",\n+    \"-e\", \"/^extern.*double.*__const__.*fabs(/s/__const__//\",\n+    \"-e\", \"/^extern.*double.*__const__.*cos(/s/__const__//\",\n+    \"-e\", \"/^extern.*double.*__const__.*hypot(/s/__const__//\",\n+    \"-e\", \"/^extern.*double.*__const__.*sin(/s/__const__//\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1830,21 +1880,22 @@ tSCC zNext_TemplateList[] =\n #define apzNext_TemplateMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zNext_TemplateSelect0[] =\n        \"template\";\n \n #define    NEXT_TEMPLATE_TEST_CT  1\n+#define    NEXT_TEMPLATE_RE_CT    1\n tTestDesc aNext_TemplateTests[] = {\n-    { TT_EGREP,  zNext_TemplateSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zNext_TemplateSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Next_Template\n  */\n const char* apzNext_TemplatePatch[] = { \"sed\",\n-    \"-e\" \"/\\\\(.*template\\\\)/s/template//\",\n-    \"-e\" \"/extern.*volatile.*void.*abort/s/volatile//\",\n+    \"-e\", \"/\\\\(.*template\\\\)/s/template//\",\n+    \"-e\", \"/extern.*volatile.*void.*abort/s/volatile//\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1864,21 +1915,22 @@ tSCC zNext_VolitileList[] =\n #define apzNext_VolitileMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zNext_VolitileSelect0[] =\n        \"volatile\";\n \n #define    NEXT_VOLITILE_TEST_CT  1\n+#define    NEXT_VOLITILE_RE_CT    1\n tTestDesc aNext_VolitileTests[] = {\n-    { TT_EGREP,  zNext_VolitileSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zNext_VolitileSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Next_Volitile\n  */\n const char* apzNext_VolitilePatch[] = { \"sed\",\n-    \"-e\" \"/extern.*volatile.*void.*exit/s/volatile//\",\n-    \"-e\" \"/extern.*volatile.*void.*abort/s/volatile//\",\n+    \"-e\", \"/extern.*volatile.*void.*exit/s/volatile//\",\n+    \"-e\", \"/extern.*volatile.*void.*abort/s/volatile//\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1898,20 +1950,21 @@ tSCC zNext_Wait_UnionList[] =\n #define apzNext_Wait_UnionMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zNext_Wait_UnionSelect0[] =\n        \"wait\\\\(union wait\";\n \n #define    NEXT_WAIT_UNION_TEST_CT  1\n+#define    NEXT_WAIT_UNION_RE_CT    1\n tTestDesc aNext_Wait_UnionTests[] = {\n-    { TT_EGREP,  zNext_Wait_UnionSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zNext_Wait_UnionSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Next_Wait_Union\n  */\n const char* apzNext_Wait_UnionPatch[] = { \"sed\",\n-    \"-e\" \"s@wait(union wait@wait(void@\",\n+    \"-e\", \"s@wait(union wait@wait(void@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1930,13 +1983,14 @@ tSCC zNodeent_SyntaxList[] =\n  */\n #define apzNodeent_SyntaxMachs (const char**)NULL\n #define NODEENT_SYNTAX_TEST_CT  0\n+#define NODEENT_SYNTAX_RE_CT    0\n #define aNodeent_SyntaxTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Nodeent_Syntax\n  */\n const char* apzNodeent_SyntaxPatch[] = { \"sed\",\n-    \"-e\" \"s/char.*na_addr *$/char *na_addr;/\",\n+    \"-e\", \"s/char.*na_addr *$/char *na_addr;/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -1957,7 +2011,7 @@ tSCC zOsf_Namespace_AList[] =\n #define apzOsf_Namespace_AMachs (const char**)NULL\n \n /*\n- *  content test pattern.  A shell will deal with it later.\n+ *  perform the 'test' shell command - do fix on success\n  */\n tSCC zOsf_Namespace_ATest0[] =\n        \" -r reg_types.h\";\n@@ -1969,19 +2023,20 @@ tSCC zOsf_Namespace_ATest3[] =\n        \" -z \\\"`grep __regex_t regex.h`\\\"\";\n \n #define    OSF_NAMESPACE_A_TEST_CT  4\n+#define    OSF_NAMESPACE_A_RE_CT    0\n tTestDesc aOsf_Namespace_ATests[] = {\n-    { TT_TEST,   zOsf_Namespace_ATest0, 0 /* unused */ },\n-    { TT_TEST,   zOsf_Namespace_ATest1, 0 /* unused */ },\n-    { TT_TEST,   zOsf_Namespace_ATest2, 0 /* unused */ },\n-    { TT_TEST,   zOsf_Namespace_ATest3, 0 /* unused */ }, };\n+  { TT_TEST,   zOsf_Namespace_ATest0,     0 /* unused */ },\n+  { TT_TEST,   zOsf_Namespace_ATest1,     0 /* unused */ },\n+  { TT_TEST,   zOsf_Namespace_ATest2,     0 /* unused */ },\n+  { TT_TEST,   zOsf_Namespace_ATest3,     0 /* unused */ }, };\n \n /*\n  *  Fix Command Arguments for Osf_Namespace_A\n  */\n const char* apzOsf_Namespace_APatch[] = { \"sed\",\n-    \"-e\" \"s/regex_t/__regex_t/g\",\n-    \"-e\" \"s/regoff_t/__regoff_t/g\",\n-    \"-e\" \"s/regmatch_t/__regmatch_t/g\",\n+    \"-e\", \"s/regex_t/__regex_t/g\",\n+    \"-e\", \"s/regoff_t/__regoff_t/g\",\n+    \"-e\", \"s/regmatch_t/__regmatch_t/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2001,7 +2056,7 @@ tSCC zOsf_Namespace_BList[] =\n #define apzOsf_Namespace_BMachs (const char**)NULL\n \n /*\n- *  content test pattern.  A shell will deal with it later.\n+ *  perform the 'test' shell command - do fix on success\n  */\n tSCC zOsf_Namespace_BTest0[] =\n        \" -r reg_types.h\";\n@@ -2013,17 +2068,18 @@ tSCC zOsf_Namespace_BTest3[] =\n        \" -z \\\"`grep __regex_t regex.h`\\\"\";\n \n #define    OSF_NAMESPACE_B_TEST_CT  4\n+#define    OSF_NAMESPACE_B_RE_CT    0\n tTestDesc aOsf_Namespace_BTests[] = {\n-    { TT_TEST,   zOsf_Namespace_BTest0, 0 /* unused */ },\n-    { TT_TEST,   zOsf_Namespace_BTest1, 0 /* unused */ },\n-    { TT_TEST,   zOsf_Namespace_BTest2, 0 /* unused */ },\n-    { TT_TEST,   zOsf_Namespace_BTest3, 0 /* unused */ }, };\n+  { TT_TEST,   zOsf_Namespace_BTest0,     0 /* unused */ },\n+  { TT_TEST,   zOsf_Namespace_BTest1,     0 /* unused */ },\n+  { TT_TEST,   zOsf_Namespace_BTest2,     0 /* unused */ },\n+  { TT_TEST,   zOsf_Namespace_BTest3,     0 /* unused */ }, };\n \n /*\n  *  Fix Command Arguments for Osf_Namespace_B\n  */\n const char* apzOsf_Namespace_BPatch[] = { \"sed\",\n-    \"-e\" \"/#include <reg_types.h>/a\\\\\\n\"\n+    \"-e\", \"/#include <reg_types.h>/a\\\\\\n\"\n        \"typedef __regex_t\\tregex_t;\\\\\\n\"\n        \"typedef __regoff_t\\tregoff_t;\\\\\\n\"\n        \"typedef __regmatch_t\\tregmatch_t;\\n\",\n@@ -2046,20 +2102,21 @@ tSCC zPthread_Page_SizeList[] =\n #define apzPthread_Page_SizeMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zPthread_Page_SizeSelect0[] =\n        \"^int __page_size\";\n \n #define    PTHREAD_PAGE_SIZE_TEST_CT  1\n+#define    PTHREAD_PAGE_SIZE_RE_CT    1\n tTestDesc aPthread_Page_SizeTests[] = {\n-    { TT_EGREP,  zPthread_Page_SizeSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zPthread_Page_SizeSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Pthread_Page_Size\n  */\n const char* apzPthread_Page_SizePatch[] = { \"sed\",\n-    \"-e\" \"s/^int __page_size/extern int __page_size/\",\n+    \"-e\", \"s/^int __page_size/extern int __page_size/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2079,22 +2136,23 @@ tSCC zRs6000_DoubleList[] =\n #define apzRs6000_DoubleMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zRs6000_DoubleSelect0[] =\n        \"[^a-zA-Z_]class\\\\(\";\n \n #define    RS6000_DOUBLE_TEST_CT  1\n+#define    RS6000_DOUBLE_RE_CT    1\n tTestDesc aRs6000_DoubleTests[] = {\n-    { TT_EGREP,  zRs6000_DoubleSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zRs6000_DoubleSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Rs6000_Double\n  */\n const char* apzRs6000_DoublePatch[] = { \"sed\",\n-    \"-e\" \"/class[(]/i\\\\\\n\"\n+    \"-e\", \"/class[(]/i\\\\\\n\"\n        \"#ifndef __cplusplus\\n\",\n-    \"-e\" \"/class[(]/a\\\\\\n\"\n+    \"-e\", \"/class[(]/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -2115,20 +2173,21 @@ tSCC zRs6000_FchmodList[] =\n #define apzRs6000_FchmodMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zRs6000_FchmodSelect0[] =\n        \"fchmod\\\\(char\";\n \n #define    RS6000_FCHMOD_TEST_CT  1\n+#define    RS6000_FCHMOD_RE_CT    1\n tTestDesc aRs6000_FchmodTests[] = {\n-    { TT_EGREP,  zRs6000_FchmodSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zRs6000_FchmodSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Rs6000_Fchmod\n  */\n const char* apzRs6000_FchmodPatch[] = { \"sed\",\n-    \"-e\" \"s/fchmod(char \\\\*/fchmod(int/\",\n+    \"-e\", \"s/fchmod(char \\\\*/fchmod(int/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2148,13 +2207,14 @@ tSCC zRs6000_ParamList[] =\n  */\n #define apzRs6000_ParamMachs (const char**)NULL\n #define RS6000_PARAM_TEST_CT  0\n+#define RS6000_PARAM_RE_CT    0\n #define aRs6000_ParamTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Rs6000_Param\n  */\n const char* apzRs6000_ParamPatch[] = { \"sed\",\n-    \"-e\" \"s@rename(const char \\\\*old, const char \\\\*new)@rename(const char *_old, const char *_new)@\",\n+    \"-e\", \"s@rename(const char \\\\*old, const char \\\\*new)@rename(const char *_old, const char *_new)@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2174,20 +2234,21 @@ tSCC zSony_IncludeList[] =\n #define apzSony_IncludeMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSony_IncludeSelect0[] =\n        \"\\\"\\\\.\\\\./machine/endian.h\\\"\";\n \n #define    SONY_INCLUDE_TEST_CT  1\n+#define    SONY_INCLUDE_RE_CT    1\n tTestDesc aSony_IncludeTests[] = {\n-    { TT_EGREP,  zSony_IncludeSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zSony_IncludeSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sony_Include\n  */\n const char* apzSony_IncludePatch[] = { \"sed\",\n-    \"-e\" \"s@\\\"../machine/endian.h\\\"@<machine/endian.h>@\",\n+    \"-e\", \"s@\\\"../machine/endian.h\\\"@<machine/endian.h>@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2207,20 +2268,21 @@ tSCC zStatsswtchList[] =\n #define apzStatsswtchMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zStatsswtchSelect0[] =\n        \"boottime$\";\n \n #define    STATSSWTCH_TEST_CT  1\n+#define    STATSSWTCH_RE_CT    1\n tTestDesc aStatsswtchTests[] = {\n-    { TT_EGREP,  zStatsswtchSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zStatsswtchSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Statsswtch\n  */\n const char* apzStatsswtchPatch[] = { \"sed\",\n-    \"-e\" \"s/boottime$/boottime;/\",\n+    \"-e\", \"s/boottime$/boottime;/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2239,6 +2301,7 @@ tSCC zStdio_Va_ListList[] =\n  */\n #define apzStdio_Va_ListMachs (const char**)NULL\n #define STDIO_VA_LIST_TEST_CT  0\n+#define STDIO_VA_LIST_RE_CT    0\n #define aStdio_Va_ListTests   (tTestDesc*)NULL\n \n /*\n@@ -2283,20 +2346,21 @@ tSCC zSun_Bogus_IfdefList[] =\n #define apzSun_Bogus_IfdefMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSun_Bogus_IfdefSelect0[] =\n        \"#ifdef __i386__ || __vax__\";\n \n #define    SUN_BOGUS_IFDEF_TEST_CT  1\n+#define    SUN_BOGUS_IFDEF_RE_CT    1\n tTestDesc aSun_Bogus_IfdefTests[] = {\n-    { TT_EGREP,  zSun_Bogus_IfdefSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zSun_Bogus_IfdefSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Bogus_Ifdef\n  */\n const char* apzSun_Bogus_IfdefPatch[] = { \"sed\",\n-    \"-e\" \"s/\\\\#ifdef __i386__ || __vax__/\\\\#if __i386__ || __vax__/g\",\n+    \"-e\", \"s/\\\\#ifdef __i386__ || __vax__/\\\\#if __i386__ || __vax__/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2316,20 +2380,21 @@ tSCC zSun_Bogus_Ifdef_Sun4cList[] =\n #define apzSun_Bogus_Ifdef_Sun4cMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSun_Bogus_Ifdef_Sun4cSelect0[] =\n        \"#ifdef __i386__ || __sun4c__\";\n \n #define    SUN_BOGUS_IFDEF_SUN4C_TEST_CT  1\n+#define    SUN_BOGUS_IFDEF_SUN4C_RE_CT    1\n tTestDesc aSun_Bogus_Ifdef_Sun4cTests[] = {\n-    { TT_EGREP,  zSun_Bogus_Ifdef_Sun4cSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zSun_Bogus_Ifdef_Sun4cSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Bogus_Ifdef_Sun4c\n  */\n const char* apzSun_Bogus_Ifdef_Sun4cPatch[] = { \"sed\",\n-    \"-e\" \"s/\\\\#ifdef __i386__ || __sun4c__/\\\\#if __i386__ || __sun4c__/g\",\n+    \"-e\", \"s/\\\\#ifdef __i386__ || __sun4c__/\\\\#if __i386__ || __sun4c__/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2349,24 +2414,25 @@ tSCC zSun_CatmacroList[] =\n #define apzSun_CatmacroMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSun_CatmacroSelect0[] =\n        \"^#define[ \\t]+CAT(a,b)\";\n \n #define    SUN_CATMACRO_TEST_CT  1\n+#define    SUN_CATMACRO_RE_CT    1\n tTestDesc aSun_CatmacroTests[] = {\n-    { TT_EGREP,  zSun_CatmacroSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zSun_CatmacroSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Catmacro\n  */\n const char* apzSun_CatmacroPatch[] = { \"sed\",\n-    \"-e\" \"/^#define[ \\t]CAT(a,b)/ i\\\\\\n\"\n+    \"-e\", \"/^#define[ \\t]CAT(a,b)/ i\\\\\\n\"\n        \"#ifdef __STDC__ \\\\\\n\"\n        \"#define CAT(a,b) a##b\\\\\\n\"\n        \"#else\\n\",\n-    \"-e\" \"/^#define[ \\t]CAT(a,b)/ a\\\\\\n\"\n+    \"-e\", \"/^#define[ \\t]CAT(a,b)/ a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -2386,16 +2452,17 @@ tSCC zSun_MallocList[] =\n  */\n #define apzSun_MallocMachs (const char**)NULL\n #define SUN_MALLOC_TEST_CT  0\n+#define SUN_MALLOC_RE_CT    0\n #define aSun_MallocTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Sun_Malloc\n  */\n const char* apzSun_MallocPatch[] = { \"sed\",\n-    \"-e\" \"s/typedef[ \\t]char \\\\*\\tmalloc_t/typedef void \\\\*\\tmalloc_t/g\",\n-    \"-e\" \"s/int[ \\t][ \\t]*free/void\\tfree/g\",\n-    \"-e\" \"s/char\\\\([ \\t]*\\\\*[ \\t]*malloc\\\\)/void\\\\1/g\",\n-    \"-e\" \"s/char\\\\([ \\t]*\\\\*[ \\t]*realloc\\\\)/void\\\\1/g\",\n+    \"-e\", \"s/typedef[ \\t]char \\\\*\\tmalloc_t/typedef void \\\\*\\tmalloc_t/g\",\n+    \"-e\", \"s/int[ \\t][ \\t]*free/void\\tfree/g\",\n+    \"-e\", \"s/char\\\\([ \\t]*\\\\*[ \\t]*malloc\\\\)/void\\\\1/g\",\n+    \"-e\", \"s/char\\\\([ \\t]*\\\\*[ \\t]*realloc\\\\)/void\\\\1/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2415,20 +2482,21 @@ tSCC zSun_MemcpyList[] =\n #define apzSun_MemcpyMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSun_MemcpySelect0[] =\n        \"/\\\\*\\t@\\\\(#\\\\)(head/memory.h\\t50.1\\t |memory\\\\.h 1\\\\.[2-4] 8./../.. SMI; from S5R2 1\\\\.2\\t)\\\\*/\";\n \n #define    SUN_MEMCPY_TEST_CT  1\n+#define    SUN_MEMCPY_RE_CT    1\n tTestDesc aSun_MemcpyTests[] = {\n-    { TT_EGREP,  zSun_MemcpySelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zSun_MemcpySelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Memcpy\n  */\n const char* apzSun_MemcpyPatch[] = { \"sed\",\n-    \"-e\" \"1i\\\\\\n\"\n+    \"-e\", \"1i\\\\\\n\"\n        \"/* This file was generated by fixincludes */\\\\\\n\"\n        \"#ifndef __memory_h__\\\\\\n\"\n        \"#define __memory_h__\\\\\\n\"\n@@ -2448,7 +2516,7 @@ const char* apzSun_MemcpyPatch[] = { \"sed\",\n        \"extern int memcmp();\\\\\\n\"\n        \"\\\\\\n\"\n        \"#endif /* __memory_h__ */\\n\",\n-    \"-e\" \"1,$d\",\n+    \"-e\", \"1,$d\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2468,20 +2536,21 @@ tSCC zSun_Rusers_SemiList[] =\n #define apzSun_Rusers_SemiMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSun_Rusers_SemiSelect0[] =\n        \"_cnt$\";\n \n #define    SUN_RUSERS_SEMI_TEST_CT  1\n+#define    SUN_RUSERS_SEMI_RE_CT    1\n tTestDesc aSun_Rusers_SemiTests[] = {\n-    { TT_EGREP,  zSun_Rusers_SemiSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zSun_Rusers_SemiSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Rusers_Semi\n  */\n const char* apzSun_Rusers_SemiPatch[] = { \"sed\",\n-    \"-e\" \"/^struct/,/^};/s/_cnt$/_cnt;/\",\n+    \"-e\", \"/^struct/,/^};/s/_cnt$/_cnt;/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2502,24 +2571,25 @@ tSCC zSun_SignalList[] =\n #define apzSun_SignalMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSun_SignalSelect0[] =\n        \"^void\\t\\\\(\\\\*signal\\\\(\\\\)\\\\)\\\\(\\\\);\";\n \n #define    SUN_SIGNAL_TEST_CT  1\n+#define    SUN_SIGNAL_RE_CT    1\n tTestDesc aSun_SignalTests[] = {\n-    { TT_EGREP,  zSun_SignalSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zSun_SignalSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Signal\n  */\n const char* apzSun_SignalPatch[] = { \"sed\",\n-    \"-e\" \"/^void\\t(\\\\*signal())();$/i\\\\\\n\"\n+    \"-e\", \"/^void\\t(\\\\*signal())();$/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"void\\t(*signal(...))(...);\\\\\\n\"\n        \"#else\\n\",\n-    \"-e\" \"/^void\\t(\\\\*signal())();$/a\\\\\\n\"\n+    \"-e\", \"/^void\\t(\\\\*signal())();$/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -2545,27 +2615,28 @@ tSCC* apzSun_Auth_ProtoMachs[] = {\n         (const char*)NULL };\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSun_Auth_ProtoSelect0[] =\n        \"\\\\(\\\\*[a-z][a-z_]*\\\\)\\\\(\\\\)\";\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zSun_Auth_ProtoBypass0[] =\n        \"\\\\(\\\\*[a-z][a-z_]*\\\\)\\\\([ \\t]*[a-zA-Z.].*\\\\)\";\n \n #define    SUN_AUTH_PROTO_TEST_CT  2\n+#define    SUN_AUTH_PROTO_RE_CT    2\n tTestDesc aSun_Auth_ProtoTests[] = {\n-    { TT_NEGREP, zSun_Auth_ProtoBypass0, (regex_t*)NULL },\n-    { TT_EGREP,  zSun_Auth_ProtoSelect0, (regex_t*)NULL } };\n+  { TT_NEGREP, zSun_Auth_ProtoBypass0,   (regex_t*)NULL },\n+  { TT_EGREP,  zSun_Auth_ProtoSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Sun_Auth_Proto\n  */\n const char* apzSun_Auth_ProtoPatch[] = { \"sed\",\n-    \"-e\" \"s/^\\\\(.*(\\\\*[a-z][a-z_]*)(\\\\)\\\\();.*\\\\)/\\\\\\n\"\n+    \"-e\", \"s/^\\\\(.*(\\\\*[a-z][a-z_]*)(\\\\)\\\\();.*\\\\)/\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"\\\\1...\\\\2\\\\\\n\"\n        \"#else\\\\\\n\"\n@@ -2589,14 +2660,15 @@ tSCC zSunos_Matherr_DeclList[] =\n  */\n #define apzSunos_Matherr_DeclMachs (const char**)NULL\n #define SUNOS_MATHERR_DECL_TEST_CT  0\n+#define SUNOS_MATHERR_DECL_RE_CT    0\n #define aSunos_Matherr_DeclTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Sunos_Matherr_Decl\n  */\n const char* apzSunos_Matherr_DeclPatch[] = { \"sed\",\n-    \"-e\" \"/^struct exception/,$b\",\n-    \"-e\" \"/matherr/i\\\\\\n\"\n+    \"-e\", \"/^struct exception/,$b\",\n+    \"-e\", \"/matherr/i\\\\\\n\"\n        \"struct exception;\\n\",\n     (char*)NULL };\n \n@@ -2616,13 +2688,14 @@ tSCC zSunos_StrlenList[] =\n  */\n #define apzSunos_StrlenMachs (const char**)NULL\n #define SUNOS_STRLEN_TEST_CT  0\n+#define SUNOS_STRLEN_RE_CT    0\n #define aSunos_StrlenTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Sunos_Strlen\n  */\n const char* apzSunos_StrlenPatch[] = { \"sed\",\n-    \"-e\" \"s/int[ \\t]*strlen();/__SIZE_TYPE__ strlen();/\",\n+    \"-e\", \"s/int[ \\t]*strlen();/__SIZE_TYPE__ strlen();/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2647,44 +2720,45 @@ tSCC zSystypesList[] =\n #define apzSystypesMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSystypesSelect0[] =\n        \"typedef[ \\t]+[a-z_][ \\ta-z_]*[ \\t](size|ptrdiff|wchar)_t\";\n \n #define    SYSTYPES_TEST_CT  1\n+#define    SYSTYPES_RE_CT    1\n tTestDesc aSystypesTests[] = {\n-    { TT_EGREP,  zSystypesSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zSystypesSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Systypes\n  */\n const char* apzSystypesPatch[] = { \"sed\",\n-    \"-e\" \"/^[ \\t]*\\\\*[ \\t]*typedef unsigned int size_t;/N\",\n-    \"-e\" \"s/^\\\\([ \\t]*\\\\*[ \\t]*typedef unsigned int size_t;\\\\n[ \\t]*\\\\*\\\\/\\\\)/\\\\1\\\\\\n\"\n+    \"-e\", \"/^[ \\t]*\\\\*[ \\t]*typedef unsigned int size_t;/N\",\n+    \"-e\", \"s/^\\\\([ \\t]*\\\\*[ \\t]*typedef unsigned int size_t;\\\\n[ \\t]*\\\\*\\\\/\\\\)/\\\\1\\\\\\n\"\n        \"#ifndef __SIZE_TYPE__\\\\\\n\"\n        \"#define __SIZE_TYPE__ long unsigned int\\\\\\n\"\n        \"#endif\\\\\\n\"\n        \"typedef __SIZE_TYPE__ size_t;\\\\\\n\"\n        \"/\",\n-    \"-e\" \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]size_t/i\\\\\\n\"\n+    \"-e\", \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]size_t/i\\\\\\n\"\n        \"#ifndef __SIZE_TYPE__\\\\\\n\"\n        \"#define __SIZE_TYPE__ long unsigned int\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]size_t/typedef __SIZE_TYPE__ size_t/\",\n-    \"-e\" \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]ptrdiff_t/i\\\\\\n\"\n+    \"-e\", \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]size_t/typedef __SIZE_TYPE__ size_t/\",\n+    \"-e\", \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]ptrdiff_t/i\\\\\\n\"\n        \"#ifndef __PTRDIFF_TYPE__\\\\\\n\"\n        \"#define __PTRDIFF_TYPE__ long int\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]ptrdiff_t/typedef __PTRDIFF_TYPE__ ptrdiff_t/\",\n-    \"-e\" \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/i\\\\\\n\"\n+    \"-e\", \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]ptrdiff_t/typedef __PTRDIFF_TYPE__ ptrdiff_t/\",\n+    \"-e\", \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/i\\\\\\n\"\n        \"#ifndef __WCHAR_TYPE__\\\\\\n\"\n        \"#define __WCHAR_TYPE__ int\\\\\\n\"\n        \"#endif\\\\\\n\"\n        \"#ifndef __cplusplus\\n\",\n-    \"-e\" \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/a\\\\\\n\"\n+    \"-e\", \"/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/typedef __WCHAR_TYPE__ wchar_t/\",\n+    \"-e\", \"s/typedef[ \\t][ \\t]*[a-z_][ \\ta-z_]*[ \\t]wchar_t/typedef __WCHAR_TYPE__ wchar_t/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2704,30 +2778,31 @@ tSCC zSystypes_For_AixList[] =\n #define apzSystypes_For_AixMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zSystypes_For_AixSelect0[] =\n        \"typedef[ \\t][ \\t]*[A-Za-z_][ \\tA-Za-z_]*[ \\t]size_t\";\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zSystypes_For_AixBypass0[] =\n        \"_GCC_SIZE_T\";\n \n #define    SYSTYPES_FOR_AIX_TEST_CT  2\n+#define    SYSTYPES_FOR_AIX_RE_CT    2\n tTestDesc aSystypes_For_AixTests[] = {\n-    { TT_NEGREP, zSystypes_For_AixBypass0, (regex_t*)NULL },\n-    { TT_EGREP,  zSystypes_For_AixSelect0, (regex_t*)NULL } };\n+  { TT_NEGREP, zSystypes_For_AixBypass0,   (regex_t*)NULL },\n+  { TT_EGREP,  zSystypes_For_AixSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Systypes_For_Aix\n  */\n const char* apzSystypes_For_AixPatch[] = { \"sed\",\n-    \"-e\" \"/typedef[ \\t][ \\t]*[A-Za-z_][ \\tA-Za-z_]*[ \\t]size_t/i\\\\\\n\"\n+    \"-e\", \"/typedef[ \\t][ \\t]*[A-Za-z_][ \\tA-Za-z_]*[ \\t]size_t/i\\\\\\n\"\n        \"#ifndef _GCC_SIZE_T\\\\\\n\"\n        \"#define _GCC_SIZE_T\\n\",\n-    \"-e\" \"/typedef[ \\t][ \\t]*[A-Za-z_][ \\tA-Za-z_]*[ \\t]size_t/a\\\\\\n\"\n+    \"-e\", \"/typedef[ \\t][ \\t]*[A-Za-z_][ \\tA-Za-z_]*[ \\t]size_t/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -2747,23 +2822,24 @@ tSCC zSysv68_StringList[] =\n  */\n #define apzSysv68_StringMachs (const char**)NULL\n #define SYSV68_STRING_TEST_CT  0\n+#define SYSV68_STRING_RE_CT    0\n #define aSysv68_StringTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Sysv68_String\n  */\n const char* apzSysv68_StringPatch[] = { \"sed\",\n-    \"-e\" \"s/extern[ \\t]*int[ \\t]*strlen();/extern unsigned int strlen();/\",\n-    \"-e\" \"s/extern[ \\t]*int[ \\t]*ffs[ \\t]*(long);/extern int ffs(int);/\",\n-    \"-e\" \"s/strdup(char \\\\*s1);/strdup(const char *s1);/\",\n-    \"-e\" \"/^extern char$/N\",\n-    \"-e\" \"s/^extern char\\\\(\\\\n\\t\\\\*memccpy(),\\\\)$/extern void\\\\1/\",\n-    \"-e\" \"/^\\tstrncmp(),$/N\",\n-    \"-e\" \"s/^\\\\(\\tstrncmp()\\\\),\\\\n\\\\(\\tstrlen(),\\\\)$/\\\\1;\\\\\\n\"\n+    \"-e\", \"s/extern[ \\t]*int[ \\t]*strlen();/extern unsigned int strlen();/\",\n+    \"-e\", \"s/extern[ \\t]*int[ \\t]*ffs[ \\t]*(long);/extern int ffs(int);/\",\n+    \"-e\", \"s/strdup(char \\\\*s1);/strdup(const char *s1);/\",\n+    \"-e\", \"/^extern char$/N\",\n+    \"-e\", \"s/^extern char\\\\(\\\\n\\t\\\\*memccpy(),\\\\)$/extern void\\\\1/\",\n+    \"-e\", \"/^\\tstrncmp(),$/N\",\n+    \"-e\", \"s/^\\\\(\\tstrncmp()\\\\),\\\\n\\\\(\\tstrlen(),\\\\)$/\\\\1;\\\\\\n\"\n        \"extern unsigned int\\\\\\n\"\n        \"\\\\2/\",\n-    \"-e\" \"/^extern int$/N\",\n-    \"-e\" \"s/^extern int\\\\(\\\\n\\tstrlen(),\\\\)/extern size_t\\\\1/\",\n+    \"-e\", \"/^extern int$/N\",\n+    \"-e\", \"s/^extern int\\\\(\\\\n\\tstrlen(),\\\\)/extern size_t\\\\1/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2785,22 +2861,23 @@ tSCC* apzSysz_Stdlib_For_SunMachs[] = {\n         \"m88k-*sysv3*\",\n         (const char*)NULL };\n #define SYSZ_STDLIB_FOR_SUN_TEST_CT  0\n+#define SYSZ_STDLIB_FOR_SUN_RE_CT    0\n #define aSysz_Stdlib_For_SunTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Sysz_Stdlib_For_Sun\n  */\n const char* apzSysz_Stdlib_For_SunPatch[] = { \"sed\",\n-    \"-e\" \"s/int\\tabort/void\\tabort/g\",\n-    \"-e\" \"s/int\\tfree/void\\tfree/g\",\n-    \"-e\" \"s/char[ \\t]*\\\\*[ \\t]*calloc/void \\\\*\\tcalloc/g\",\n-    \"-e\" \"s/char[ \\t]*\\\\*[ \\t]*malloc/void \\\\*\\tmalloc/g\",\n-    \"-e\" \"s/char[ \\t]*\\\\*[ \\t]*realloc/void \\\\*\\trealloc/g\",\n-    \"-e\" \"s/int[ \\t][ \\t]*exit/void\\texit/g\",\n-    \"-e\" \"/typedef[ \\ta-zA-Z_]*[ \\t]size_t[ \\t]*;/i\\\\\\n\"\n+    \"-e\", \"s/int\\tabort/void\\tabort/g\",\n+    \"-e\", \"s/int\\tfree/void\\tfree/g\",\n+    \"-e\", \"s/char[ \\t]*\\\\*[ \\t]*calloc/void \\\\*\\tcalloc/g\",\n+    \"-e\", \"s/char[ \\t]*\\\\*[ \\t]*malloc/void \\\\*\\tmalloc/g\",\n+    \"-e\", \"s/char[ \\t]*\\\\*[ \\t]*realloc/void \\\\*\\trealloc/g\",\n+    \"-e\", \"s/int[ \\t][ \\t]*exit/void\\texit/g\",\n+    \"-e\", \"/typedef[ \\ta-zA-Z_]*[ \\t]size_t[ \\t]*;/i\\\\\\n\"\n        \"#ifndef _GCC_SIZE_T\\\\\\n\"\n        \"#define _GCC_SIZE_T\\n\",\n-    \"-e\" \"/typedef[ \\ta-zA-Z_]*[ \\t]size_t[ \\t]*;/a\\\\\\n\"\n+    \"-e\", \"/typedef[ \\ta-zA-Z_]*[ \\t]size_t[ \\t]*;/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -2820,26 +2897,27 @@ tSCC zSysz_Stdtypes_For_SunList[] =\n  */\n #define apzSysz_Stdtypes_For_SunMachs (const char**)NULL\n #define SYSZ_STDTYPES_FOR_SUN_TEST_CT  0\n+#define SYSZ_STDTYPES_FOR_SUN_RE_CT    0\n #define aSysz_Stdtypes_For_SunTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Sysz_Stdtypes_For_Sun\n  */\n const char* apzSysz_Stdtypes_For_SunPatch[] = { \"sed\",\n-    \"-e\" \"/[\\t ]size_t.*;/i\\\\\\n\"\n+    \"-e\", \"/[\\t ]size_t.*;/i\\\\\\n\"\n        \"#ifndef _GCC_SIZE_T\\\\\\n\"\n        \"#define _GCC_SIZE_T\\n\",\n-    \"-e\" \"/[\\t ]size_t.*;/a\\\\\\n\"\n+    \"-e\", \"/[\\t ]size_t.*;/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[\\t ]ptrdiff_t.*;/i\\\\\\n\"\n+    \"-e\", \"/[\\t ]ptrdiff_t.*;/i\\\\\\n\"\n        \"#ifndef _GCC_PTRDIFF_T\\\\\\n\"\n        \"#define _GCC_PTRDIFF_T\\n\",\n-    \"-e\" \"/[\\t ]ptrdiff_t.*;/a\\\\\\n\"\n+    \"-e\", \"/[\\t ]ptrdiff_t.*;/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[\\t ]wchar_t.*;/i\\\\\\n\"\n+    \"-e\", \"/[\\t ]wchar_t.*;/i\\\\\\n\"\n        \"#ifndef _GCC_WCHAR_T\\\\\\n\"\n        \"#define _GCC_WCHAR_T\\n\",\n-    \"-e\" \"/[\\t ]wchar_t.*;/a\\\\\\n\"\n+    \"-e\", \"/[\\t ]wchar_t.*;/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -2859,13 +2937,14 @@ tSCC zTinfo_CplusplusList[] =\n  */\n #define apzTinfo_CplusplusMachs (const char**)NULL\n #define TINFO_CPLUSPLUS_TEST_CT  0\n+#define TINFO_CPLUSPLUS_RE_CT    0\n #define aTinfo_CplusplusTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Tinfo_Cplusplus\n  */\n const char* apzTinfo_CplusplusPatch[] = { \"sed\",\n-    \"-e\" \"s/[ \\t]_cplusplus/ __cplusplus/\",\n+    \"-e\", \"s/[ \\t]_cplusplus/ __cplusplus/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2885,22 +2964,23 @@ tSCC zUltrix_Ansi_CompatList[] =\n #define apzUltrix_Ansi_CompatMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zUltrix_Ansi_CompatSelect0[] =\n        \"ULTRIX\";\n \n #define    ULTRIX_ANSI_COMPAT_TEST_CT  1\n+#define    ULTRIX_ANSI_COMPAT_RE_CT    1\n tTestDesc aUltrix_Ansi_CompatTests[] = {\n-    { TT_EGREP,  zUltrix_Ansi_CompatSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zUltrix_Ansi_CompatSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Ansi_Compat\n  */\n const char* apzUltrix_Ansi_CompatPatch[] = { \"sed\",\n-    \"-e\" \"1i\\\\\\n\"\n+    \"-e\", \"1i\\\\\\n\"\n        \"/* This file intentionally left blank. */\\n\",\n-    \"-e\" \"1,$d\",\n+    \"-e\", \"1,$d\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2920,20 +3000,21 @@ tSCC zUltrix_Fix_FixprotoList[] =\n #define apzUltrix_Fix_FixprotoMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zUltrix_Fix_FixprotoSelect0[] =\n        \"ULTRIX\";\n \n #define    ULTRIX_FIX_FIXPROTO_TEST_CT  1\n+#define    ULTRIX_FIX_FIXPROTO_RE_CT    1\n tTestDesc aUltrix_Fix_FixprotoTests[] = {\n-    { TT_EGREP,  zUltrix_Fix_FixprotoSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zUltrix_Fix_FixprotoSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Fix_Fixproto\n  */\n const char* apzUltrix_Fix_FixprotoPatch[] = { \"sed\",\n-    \"-e\" \"/^[ \\t]*extern[ \\t]*int[ \\t]*uname();$/i\\\\\\n\"\n+    \"-e\", \"/^[ \\t]*extern[ \\t]*int[ \\t]*uname();$/i\\\\\\n\"\n        \"struct utsname;\\n\",\n     (char*)NULL };\n \n@@ -2953,17 +3034,18 @@ tSCC zUltrix_Atof_ParamList[] =\n  */\n #define apzUltrix_Atof_ParamMachs (const char**)NULL\n #define ULTRIX_ATOF_PARAM_TEST_CT  0\n+#define ULTRIX_ATOF_PARAM_RE_CT    0\n #define aUltrix_Atof_ParamTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Ultrix_Atof_Param\n  */\n const char* apzUltrix_Atof_ParamPatch[] = { \"sed\",\n-    \"-e\" \"s@atof(\\\\([ \\t]*char[ \\t]*\\\\*[^)]*\\\\))@atof(const \\\\1)@\",\n-    \"-e\" \"s@inline int abs(int [a-z][a-z]*) {.*}@extern \\\"C\\\" int abs(int);@\",\n-    \"-e\" \"s@inline double abs(double [a-z][a-z]*) {.*}@@\",\n-    \"-e\" \"s@inline int sqr(int [a-z][a-z]*) {.*}@@\",\n-    \"-e\" \"s@inline double sqr(double [a-z][a-z]*) {.*}@@\",\n+    \"-e\", \"s@atof(\\\\([ \\t]*char[ \\t]*\\\\*[^)]*\\\\))@atof(const \\\\1)@\",\n+    \"-e\", \"s@inline int abs(int [a-z][a-z]*) {.*}@extern \\\"C\\\" int abs(int);@\",\n+    \"-e\", \"s@inline double abs(double [a-z][a-z]*) {.*}@@\",\n+    \"-e\", \"s@inline int sqr(int [a-z][a-z]*) {.*}@@\",\n+    \"-e\", \"s@inline double sqr(double [a-z][a-z]*) {.*}@@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -2982,21 +3064,22 @@ tSCC zUltrix_ConstList[] =\n  */\n #define apzUltrix_ConstMachs (const char**)NULL\n #define ULTRIX_CONST_TEST_CT  0\n+#define ULTRIX_CONST_RE_CT    0\n #define aUltrix_ConstTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Ultrix_Const\n  */\n const char* apzUltrix_ConstPatch[] = { \"sed\",\n-    \"-e\" \"s@perror( char \\\\*__s );@perror( const char *__s );@\",\n-    \"-e\" \"s@fputs( char \\\\*__s,@fputs( const char *__s,@\",\n-    \"-e\" \"s@fopen( char \\\\*__filename, char \\\\*__type );@fopen( const char *__filename, const char *__type );@\",\n-    \"-e\" \"s@fwrite( void \\\\*__ptr,@fwrite( const void *__ptr,@\",\n-    \"-e\" \"s@fscanf( FILE \\\\*__stream, char \\\\*__format,@fscanf( FILE *__stream, const char *__format,@\",\n-    \"-e\" \"s@scanf( char \\\\*__format,@scanf( const char *__format,@\",\n-    \"-e\" \"s@sscanf( char \\\\*__s, char \\\\*__format,@sscanf( const char *__s, const char *__format,@\",\n-    \"-e\" \"s@popen(char \\\\*, char \\\\*);@popen(const char *, const char *);@\",\n-    \"-e\" \"s@tempnam(char\\\\*,char\\\\*);@tempnam(const char*,const char*);@\",\n+    \"-e\", \"s@perror( char \\\\*__s );@perror( const char *__s );@\",\n+    \"-e\", \"s@fputs( char \\\\*__s,@fputs( const char *__s,@\",\n+    \"-e\", \"s@fopen( char \\\\*__filename, char \\\\*__type );@fopen( const char *__filename, const char *__type );@\",\n+    \"-e\", \"s@fwrite( void \\\\*__ptr,@fwrite( const void *__ptr,@\",\n+    \"-e\", \"s@fscanf( FILE \\\\*__stream, char \\\\*__format,@fscanf( FILE *__stream, const char *__format,@\",\n+    \"-e\", \"s@scanf( char \\\\*__format,@scanf( const char *__format,@\",\n+    \"-e\", \"s@sscanf( char \\\\*__s, char \\\\*__format,@sscanf( const char *__s, const char *__format,@\",\n+    \"-e\", \"s@popen(char \\\\*, char \\\\*);@popen(const char *, const char *);@\",\n+    \"-e\", \"s@tempnam(char\\\\*,char\\\\*);@tempnam(const char*,const char*);@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3016,20 +3099,21 @@ tSCC zUltrix_IfdefList[] =\n #define apzUltrix_IfdefMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zUltrix_IfdefSelect0[] =\n        \"#ifdef KERNEL\";\n \n #define    ULTRIX_IFDEF_TEST_CT  1\n+#define    ULTRIX_IFDEF_RE_CT    1\n tTestDesc aUltrix_IfdefTests[] = {\n-    { TT_EGREP,  zUltrix_IfdefSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zUltrix_IfdefSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Ifdef\n  */\n const char* apzUltrix_IfdefPatch[] = { \"sed\",\n-    \"-e\" \"s/#ifdef KERNEL/#if defined(KERNEL)/\",\n+    \"-e\", \"s/#ifdef KERNEL/#if defined(KERNEL)/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3048,13 +3132,14 @@ tSCC zUltrix_Nested_CmntList[] =\n  */\n #define apzUltrix_Nested_CmntMachs (const char**)NULL\n #define ULTRIX_NESTED_CMNT_TEST_CT  0\n+#define ULTRIX_NESTED_CMNT_RE_CT    0\n #define aUltrix_Nested_CmntTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for Ultrix_Nested_Cmnt\n  */\n const char* apzUltrix_Nested_CmntPatch[] = { \"sed\",\n-    \"-e\" \"s@^\\\\( \\\\*\\tint protocol;  \\\\)/\\\\*@\\\\1*/ /*@\",\n+    \"-e\", \"s@^\\\\( \\\\*\\tint protocol;  \\\\)/\\\\*@\\\\1*/ /*@\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3074,22 +3159,23 @@ tSCC zUltrix_StaticList[] =\n #define apzUltrix_StaticMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zUltrix_StaticSelect0[] =\n        \"#include \\\"r[34]_cpu\";\n \n #define    ULTRIX_STATIC_TEST_CT  1\n+#define    ULTRIX_STATIC_RE_CT    1\n tTestDesc aUltrix_StaticTests[] = {\n-    { TT_EGREP,  zUltrix_StaticSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zUltrix_StaticSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Ultrix_Static\n  */\n const char* apzUltrix_StaticPatch[] = { \"sed\",\n-    \"-e\" \"s/^static struct tlb_pid_state/struct tlb_pid_state/\",\n-    \"-e\" \"s/^#include \\\"r3_cpu\\\\.h\\\"$/#include <machine\\\\/r3_cpu\\\\.h>/\",\n-    \"-e\" \"s/^#include \\\"r4_cpu\\\\.h\\\"$/#include <machine\\\\/r4_cpu\\\\.h>/\",\n+    \"-e\", \"s/^static struct tlb_pid_state/struct tlb_pid_state/\",\n+    \"-e\", \"s/^#include \\\"r3_cpu\\\\.h\\\"$/#include <machine\\\\/r3_cpu\\\\.h>/\",\n+    \"-e\", \"s/^#include \\\"r4_cpu\\\\.h\\\"$/#include <machine\\\\/r4_cpu\\\\.h>/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3108,27 +3194,28 @@ tSCC zUndefine_NullName[] =\n #define apzUndefine_NullMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zUndefine_NullSelect0[] =\n        \"^#[ \\t]*define[ \\t]*[ \\t]NULL[ \\t]\";\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zUndefine_NullBypass0[] =\n        \"#[ \\t]*(ifn|un)def[ \\t]*[ \\t]NULL($|[ \\t])\";\n \n #define    UNDEFINE_NULL_TEST_CT  2\n+#define    UNDEFINE_NULL_RE_CT    2\n tTestDesc aUndefine_NullTests[] = {\n-    { TT_NEGREP, zUndefine_NullBypass0, (regex_t*)NULL },\n-    { TT_EGREP,  zUndefine_NullSelect0, (regex_t*)NULL } };\n+  { TT_NEGREP, zUndefine_NullBypass0,   (regex_t*)NULL },\n+  { TT_EGREP,  zUndefine_NullSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Undefine_Null\n  */\n const char* apzUndefine_NullPatch[] = { \"sed\",\n-    \"-e\" \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t]/i\\\\\\n\"\n+    \"-e\", \"/^#[ \\t]*define[ \\t][ \\t]*NULL[ \\t]/i\\\\\\n\"\n        \"#undef NULL\\n\",\n     (char*)NULL };\n \n@@ -3149,23 +3236,24 @@ tSCC zVa_I960_MacroList[] =\n #define apzVa_I960_MacroMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zVa_I960_MacroSelect0[] =\n        \"__(vsiz|vali|vpad|alignof__)\";\n \n #define    VA_I960_MACRO_TEST_CT  1\n+#define    VA_I960_MACRO_RE_CT    1\n tTestDesc aVa_I960_MacroTests[] = {\n-    { TT_EGREP,  zVa_I960_MacroSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zVa_I960_MacroSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Va_I960_Macro\n  */\n const char* apzVa_I960_MacroPatch[] = { \"sed\",\n-    \"-e\" \"s/__vsiz/__vxvsiz/\",\n-    \"-e\" \"s/__vali/__vxvali/\",\n-    \"-e\" \"s/__vpad/__vxvpad/\",\n-    \"-e\" \"s/__alignof__/__vxalignof__/\",\n+    \"-e\", \"s/__vsiz/__vxvsiz/\",\n+    \"-e\", \"s/__vali/__vxvali/\",\n+    \"-e\", \"s/__vpad/__vxvpad/\",\n+    \"-e\", \"s/__alignof__/__vxalignof__/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3195,20 +3283,21 @@ tSCC zVoid_NullList[] =\n #define apzVoid_NullMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zVoid_NullSelect0[] =\n        \"#[ \\t]*define[ \\t][ \\t]*NULL[ \\t].*void\";\n \n #define    VOID_NULL_TEST_CT  1\n+#define    VOID_NULL_RE_CT    1\n tTestDesc aVoid_NullTests[] = {\n-    { TT_EGREP,  zVoid_NullSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zVoid_NullSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Void_Null\n  */\n const char* apzVoid_NullPatch[] = { \"sed\",\n-    \"-e\" \"s/^#[ \\t]*define[ \\t]*NULL[ \\t]*((void[ \\t]*\\\\*)0)/#define NULL 0/\",\n+    \"-e\", \"s/^#[ \\t]*define[ \\t]*NULL[ \\t]*((void[ \\t]*\\\\*)0)/#define NULL 0/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3228,34 +3317,35 @@ tSCC zVxworks_Gcc_ProblemList[] =\n #define apzVxworks_Gcc_ProblemMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zVxworks_Gcc_ProblemSelect0[] =\n        \"__GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__\";\n \n #define    VXWORKS_GCC_PROBLEM_TEST_CT  1\n+#define    VXWORKS_GCC_PROBLEM_RE_CT    1\n tTestDesc aVxworks_Gcc_ProblemTests[] = {\n-    { TT_EGREP,  zVxworks_Gcc_ProblemSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zVxworks_Gcc_ProblemSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Vxworks_Gcc_Problem\n  */\n const char* apzVxworks_Gcc_ProblemPatch[] = { \"sed\",\n-    \"-e\" \"s/#ifdef __GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__/#if 1/\",\n-    \"-e\" \"/[ \\t]size_t/i\\\\\\n\"\n+    \"-e\", \"s/#ifdef __GNUC_TYPEOF_FEATURE_BROKEN_USE_DEFAULT_UNTIL_FIXED__/#if 1/\",\n+    \"-e\", \"/[ \\t]size_t/i\\\\\\n\"\n        \"#ifndef _GCC_SIZE_T\\\\\\n\"\n        \"#define _GCC_SIZE_T\\n\",\n-    \"-e\" \"/[ \\t]size_t/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]size_t/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[ \\t]ptrdiff_t/i\\\\\\n\"\n+    \"-e\", \"/[ \\t]ptrdiff_t/i\\\\\\n\"\n        \"#ifndef _GCC_PTRDIFF_T\\\\\\n\"\n        \"#define _GCC_PTRDIFF_T\\n\",\n-    \"-e\" \"/[ \\t]ptrdiff_t/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]ptrdiff_t/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"/[ \\t]wchar_t/i\\\\\\n\"\n+    \"-e\", \"/[ \\t]wchar_t/i\\\\\\n\"\n        \"#ifndef _GCC_WCHAR_T\\\\\\n\"\n        \"#define _GCC_WCHAR_T\\n\",\n-    \"-e\" \"/[ \\t]wchar_t/a\\\\\\n\"\n+    \"-e\", \"/[ \\t]wchar_t/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -3276,20 +3366,21 @@ tSCC zVxworks_Needs_VxtypesList[] =\n #define apzVxworks_Needs_VxtypesMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zVxworks_Needs_VxtypesSelect0[] =\n        \"uint_t[ \\t][ \\t]*_clocks_per_sec\";\n \n #define    VXWORKS_NEEDS_VXTYPES_TEST_CT  1\n+#define    VXWORKS_NEEDS_VXTYPES_RE_CT    1\n tTestDesc aVxworks_Needs_VxtypesTests[] = {\n-    { TT_EGREP,  zVxworks_Needs_VxtypesSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zVxworks_Needs_VxtypesSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Vxworks_Needs_Vxtypes\n  */\n const char* apzVxworks_Needs_VxtypesPatch[] = { \"sed\",\n-    \"-e\" \"s/uint_t/unsigned int/\",\n+    \"-e\", \"s/uint_t/unsigned int/\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3309,13 +3400,13 @@ tSCC zVxworks_Needs_VxworksList[] =\n #define apzVxworks_Needs_VxworksMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zVxworks_Needs_VxworksSelect0[] =\n        \"#[ \\t]define[ \\t][ \\t]*__INCstath\";\n \n /*\n- *  content test pattern.  A shell will deal with it later.\n+ *  perform the 'test' shell command - do fix on success\n  */\n tSCC zVxworks_Needs_VxworksTest0[] =\n        \" -r types/vxTypesOld.h\";\n@@ -3325,17 +3416,18 @@ tSCC zVxworks_Needs_VxworksTest2[] =\n        \" -n \\\"`egrep ULONG $file`\\\"\";\n \n #define    VXWORKS_NEEDS_VXWORKS_TEST_CT  4\n+#define    VXWORKS_NEEDS_VXWORKS_RE_CT    1\n tTestDesc aVxworks_Needs_VxworksTests[] = {\n-    { TT_TEST,   zVxworks_Needs_VxworksTest0, 0 /* unused */ },\n-    { TT_TEST,   zVxworks_Needs_VxworksTest1, 0 /* unused */ },\n-    { TT_TEST,   zVxworks_Needs_VxworksTest2, 0 /* unused */ },\n-    { TT_EGREP,  zVxworks_Needs_VxworksSelect0, (regex_t*)NULL } };\n+  { TT_TEST,   zVxworks_Needs_VxworksTest0,     0 /* unused */ },\n+  { TT_TEST,   zVxworks_Needs_VxworksTest1,     0 /* unused */ },\n+  { TT_TEST,   zVxworks_Needs_VxworksTest2,     0 /* unused */ },\n+  { TT_EGREP,  zVxworks_Needs_VxworksSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Vxworks_Needs_Vxworks\n  */\n const char* apzVxworks_Needs_VxworksPatch[] = { \"sed\",\n-    \"-e\" \"/#[ \\t]define[ \\t][ \\t]*__INCstath/a\\\\\\n\"\n+    \"-e\", \"/#[ \\t]define[ \\t][ \\t]*__INCstath/a\\\\\\n\"\n        \"#include <types/vxTypesOld.h>\\n\",\n     (char*)NULL };\n \n@@ -3356,27 +3448,28 @@ tSCC zVxworks_TimeList[] =\n #define apzVxworks_TimeMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zVxworks_TimeSelect0[] =\n        \"VOIDFUNCPTR\";\n \n /*\n- *  content test pattern.  A shell will deal with it later.\n+ *  perform the 'test' shell command - do fix on success\n  */\n tSCC zVxworks_TimeTest0[] =\n        \" -r vxWorks.h\";\n \n #define    VXWORKS_TIME_TEST_CT  2\n+#define    VXWORKS_TIME_RE_CT    1\n tTestDesc aVxworks_TimeTests[] = {\n-    { TT_TEST,   zVxworks_TimeTest0, 0 /* unused */ },\n-    { TT_EGREP,  zVxworks_TimeSelect0, (regex_t*)NULL } };\n+  { TT_TEST,   zVxworks_TimeTest0,     0 /* unused */ },\n+  { TT_EGREP,  zVxworks_TimeSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Vxworks_Time\n  */\n const char* apzVxworks_TimePatch[] = { \"sed\",\n-    \"-e\" \"/VOIDFUNCPTR/i\\\\\\n\"\n+    \"-e\", \"/VOIDFUNCPTR/i\\\\\\n\"\n        \"#ifndef __gcc_VOIDFUNCPTR_defined\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"typedef void (*__gcc_VOIDFUNCPTR) (...);\\\\\\n\"\n@@ -3385,7 +3478,7 @@ const char* apzVxworks_TimePatch[] = { \"sed\",\n        \"#endif\\\\\\n\"\n        \"#define __gcc_VOIDFUNCPTR_defined\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"s/VOIDFUNCPTR/__gcc_VOIDFUNCPTR/g\",\n+    \"-e\", \"s/VOIDFUNCPTR/__gcc_VOIDFUNCPTR/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3405,24 +3498,25 @@ tSCC zX11_ClassList[] =\n #define apzX11_ClassMachs (const char**)NULL\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zX11_ClassBypass0[] =\n        \"__cplusplus\";\n \n #define    X11_CLASS_TEST_CT  1\n+#define    X11_CLASS_RE_CT    1\n tTestDesc aX11_ClassTests[] = {\n-    { TT_NEGREP, zX11_ClassBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP, zX11_ClassBypass0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_Class\n  */\n const char* apzX11_ClassPatch[] = { \"sed\",\n-    \"-e\" \"/char \\\\*class;/i\\\\\\n\"\n+    \"-e\", \"/char \\\\*class;/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"\\tchar *c_class;\\\\\\n\"\n        \"#else\\n\",\n-    \"-e\" \"/char \\\\*class;/a\\\\\\n\"\n+    \"-e\", \"/char \\\\*class;/a\\\\\\n\"\n        \"#endif\\n\",\n     (char*)NULL };\n \n@@ -3443,20 +3537,21 @@ tSCC zX11_Class_UsageList[] =\n #define apzX11_Class_UsageMachs (const char**)NULL\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zX11_Class_UsageBypass0[] =\n        \"__cplusplus\";\n \n #define    X11_CLASS_USAGE_TEST_CT  1\n+#define    X11_CLASS_USAGE_RE_CT    1\n tTestDesc aX11_Class_UsageTests[] = {\n-    { TT_NEGREP, zX11_Class_UsageBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP, zX11_Class_UsageBypass0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_Class_Usage\n  */\n const char* apzX11_Class_UsagePatch[] = { \"sed\",\n-    \"-e\" \"s/ class[)]/ c_class)/g\",\n+    \"-e\", \"s/ class[)]/ c_class)/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3476,26 +3571,27 @@ tSCC zX11_NewList[] =\n #define apzX11_NewMachs (const char**)NULL\n \n /*\n- *  content bypass pattern\n+ *  content bypass pattern - skip fix if pattern found\n  */\n tSCC zX11_NewBypass0[] =\n        \"__cplusplus\";\n \n #define    X11_NEW_TEST_CT  1\n+#define    X11_NEW_RE_CT    1\n tTestDesc aX11_NewTests[] = {\n-    { TT_NEGREP, zX11_NewBypass0, (regex_t*)NULL }, };\n+  { TT_NEGREP, zX11_NewBypass0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for X11_New\n  */\n const char* apzX11_NewPatch[] = { \"sed\",\n-    \"-e\" \"/Widget\\told, new;/i\\\\\\n\"\n+    \"-e\", \"/Widget\\told, new;/i\\\\\\n\"\n        \"#ifdef __cplusplus\\\\\\n\"\n        \"\\tWidget\\told, c_new;\\\\\\n\"\n        \"#else\\n\",\n-    \"-e\" \"/Widget\\told, new;/a\\\\\\n\"\n+    \"-e\", \"/Widget\\told, new;/a\\\\\\n\"\n        \"#endif\\n\",\n-    \"-e\" \"s/Widget new,/Widget c_new,/g\",\n+    \"-e\", \"s/Widget new,/Widget c_new,/g\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3514,13 +3610,14 @@ tSCC zX11_SprintfList[] =\n  */\n #define apzX11_SprintfMachs (const char**)NULL\n #define X11_SPRINTF_TEST_CT  0\n+#define X11_SPRINTF_RE_CT    0\n #define aX11_SprintfTests   (tTestDesc*)NULL\n \n /*\n  *  Fix Command Arguments for X11_Sprintf\n  */\n const char* apzX11_SprintfPatch[] = { \"sed\",\n-    \"-e\" \"s,^extern char \\\\*\\tsprintf();$,#ifndef __STDC__\\\\\\n\"\n+    \"-e\", \"s,^extern char \\\\*\\tsprintf();$,#ifndef __STDC__\\\\\\n\"\n        \"extern char *\\tsprintf();\\\\\\n\"\n        \"#endif /* !defined __STDC__ */,\",\n     (char*)NULL };\n@@ -3542,14 +3639,15 @@ tSCC zZzz_Ki_IfaceList[] =\n #define apzZzz_Ki_IfaceMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zZzz_Ki_IfaceSelect0[] =\n        \"These definitions are for HP Internal developers\";\n \n #define    ZZZ_KI_IFACE_TEST_CT  1\n+#define    ZZZ_KI_IFACE_RE_CT    1\n tTestDesc aZzz_Ki_IfaceTests[] = {\n-    { TT_EGREP,  zZzz_Ki_IfaceSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zZzz_Ki_IfaceSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Zzz_Ki_Iface\n@@ -3577,14 +3675,15 @@ tSCC zZzz_KiList[] =\n #define apzZzz_KiMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zZzz_KiSelect0[] =\n        \"11.00 HP-UX LP64\";\n \n #define    ZZZ_KI_TEST_CT  1\n+#define    ZZZ_KI_RE_CT    1\n tTestDesc aZzz_KiTests[] = {\n-    { TT_EGREP,  zZzz_KiSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zZzz_KiSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Zzz_Ki\n@@ -3612,14 +3711,15 @@ tSCC zZzz_Ki_CallsList[] =\n #define apzZzz_Ki_CallsMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zZzz_Ki_CallsSelect0[] =\n        \"kthread_create_caller_t\";\n \n #define    ZZZ_KI_CALLS_TEST_CT  1\n+#define    ZZZ_KI_CALLS_RE_CT    1\n tTestDesc aZzz_Ki_CallsTests[] = {\n-    { TT_EGREP,  zZzz_Ki_CallsSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zZzz_Ki_CallsSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Zzz_Ki_Calls\n@@ -3647,14 +3747,15 @@ tSCC zZzz_Ki_DefsList[] =\n #define apzZzz_Ki_DefsMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zZzz_Ki_DefsSelect0[] =\n        \"Kernel Instrumentation Definitions\";\n \n #define    ZZZ_KI_DEFS_TEST_CT  1\n+#define    ZZZ_KI_DEFS_RE_CT    1\n tTestDesc aZzz_Ki_DefsTests[] = {\n-    { TT_EGREP,  zZzz_Ki_DefsSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zZzz_Ki_DefsSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Zzz_Ki_Defs\n@@ -3681,6 +3782,7 @@ tSCC zZzz_Bad_FixesList[] =\n  */\n #define apzZzz_Bad_FixesMachs (const char**)NULL\n #define ZZZ_BAD_FIXES_TEST_CT  0\n+#define ZZZ_BAD_FIXES_RE_CT    0\n #define aZzz_Bad_FixesTests   (tTestDesc*)NULL\n \n /*\n@@ -3709,14 +3811,15 @@ tSCC zZzz_TimeList[] =\n #define apzZzz_TimeMachs (const char**)NULL\n \n /*\n- *  content selection pattern\n+ *  content selection pattern - do fix if pattern found\n  */\n tSCC zZzz_TimeSelect0[] =\n        \"11.0 and later representation of ki time\";\n \n #define    ZZZ_TIME_TEST_CT  1\n+#define    ZZZ_TIME_RE_CT    1\n tTestDesc aZzz_TimeTests[] = {\n-    { TT_EGREP,  zZzz_TimeSelect0, (regex_t*)NULL } };\n+  { TT_EGREP,  zZzz_TimeSelect0,   (regex_t*)NULL }, };\n \n /*\n  *  Fix Command Arguments for Zzz_Time\n@@ -3733,7 +3836,7 @@ const char* apzZzz_TimePatch[] = { \"sh\", \"-c\",\n  */\n #define  REGEX_COUNT  75\n #define  FIX_COUNT    103\n-tFixDesc fixDescList[ 103 ] = {\n+tFixDesc fixDescList[ FIX_COUNT ] = {\n   {  zAix_SyswaitName,    zAix_SyswaitList,\n      apzAix_SyswaitMachs, (regex_t*)NULL,\n      AIX_SYSWAIT_TEST_CT, FD_MACH_ONLY,"}, {"sha": "52ba263db53753d6e98a8c448c71e89b2c5df373", "filename": "gcc/fixinc/inclhack.sh", "status": "modified", "additions": 8, "deletions": 10, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be02fa1a4e61f3c3f177c0457e712d054b5b4f99/gcc%2Ffixinc%2Finclhack.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be02fa1a4e61f3c3f177c0457e712d054b5b4f99/gcc%2Ffixinc%2Finclhack.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.sh?ref=be02fa1a4e61f3c3f177c0457e712d054b5b4f99", "patch": "@@ -1,10 +1,6 @@\n #!/bin/sh\n #\n-# DO NOT EDIT THIS FILE   (inclhack.sh)\n-# \n-# It has been autogen-ed  Sunday April  4, 1999 at 12:12:26 AM MST\n-# From the definitions    /puke/law//egcs/egcs/gcc/fixinc/inclhack.def\n-# and the template file   /puke/law//egcs/egcs/gcc/fixinc/inclhack.tpl\n+#  DO NOT EDIT THIS FILE - it has been generated\n #\n # Install modified versions of certain ANSI-incompatible system header\n # files which are fixed to work correctly with ANSI C and placed in a\n@@ -14,6 +10,8 @@\n #\n # See README-fixinc for more information.\n #\n+#  fixincludes copyright (c) 1999 The Free Software Foundation, Inc.\n+#\n # fixincludes is free software.\n # \n # You may redistribute it and/or modify it under the terms of the\n@@ -343,9 +341,9 @@ while [ $# != 0 ]; do\n   #\n   cd ${INPUT}\n   files=`if $LINKS; then\n-    find ${FIND_BASE}/. \\( -type f -o \\( -type l -exec test ! -d {} \\; \\) \\) -print\n+    find ${FIND_BASE}/. -name '*.h' \\( -type f -o -type l \\) -print\n   else\n-    find ${FIND_BASE}/. -type f -print\n+    find ${FIND_BASE}/. -name '*.h' -type f -print\n   fi | \\\n     sed -e 's;/\\./;/;g' -e 's;//*;/;g' `\n \n@@ -731,16 +729,16 @@ struct rusage;\n     #\n     # Fix  17:  No_Double_Slash\n     #\n-    if ( test -n \"`egrep '//[^\\\"*]' ${file}`\" -a \\\n-              '(' -z \"`echo ${file}|egrep '(cxx/|\\+\\+$|\\.hh$|\\.H$|\\.hxx$)'`\" ')'\n+    if ( test -n \"`egrep '(^|[^:])//[^\\\"*]' ${file}`\" -a \\\n+              '(' -z `echo ${file} | egrep '(cxx|\\+\\+)/' ` ')'\n        ) > /dev/null 2>&1 ; then\n     fixlist=\"${fixlist}\n       no_double_slash\"\n     if [ ! -r ${DESTFILE} ]\n     then infile=${file}\n     else infile=${DESTFILE} ; fi \n \n-    sed -e '/\\/\\/[^\"*]/s|//.*$||g' \\\n+    sed -e '/\\(^|[^:]\\)\\/\\/[^\"*]/s|//.*$||g' \\\n           < $infile > ${DESTDIR}/fixinc.tmp\n     rm -f ${DESTFILE}\n     mv -f ${DESTDIR}/fixinc.tmp ${DESTFILE}"}]}