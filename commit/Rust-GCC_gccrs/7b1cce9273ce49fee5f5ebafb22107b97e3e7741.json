{"sha": "7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "node_id": "C_kwDOANBUbNoAKDdiMWNjZTkyNzNjZTQ5ZmVlNWY1ZWJhZmIyMjEwN2I5N2UzZTc3NDE", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2021-10-13T09:15:49Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@foss.st.com", "date": "2022-02-22T15:55:05Z"}, "message": "arm: Add new tests for comparison vectorization with Neon and MVE\n\nThis patch mainly adds Neon tests similar to existing MVE ones,\nto make sure we do not break Neon when fixing MVE.\n\nmve-vcmp-f32-2.c is similar to mve-vcmp-f32.c but uses a conditional\nwith 2.0f and 3.0f constants to help scan-assembler-times.\n\nMost of the work of this patch series was carried out while I was\nworking at STMicroelectronics as a Linaro assignee.\n\n2022-02-22  Christophe Lyon <christophe.lyon@arm.com>\n\n\tgcc/testsuite/\n\t* gcc.target/arm/simd/mve-vcmp-f32-2.c: New.\n\t* gcc.target/arm/simd/neon-compare-1.c: New.\n\t* gcc.target/arm/simd/neon-compare-2.c: New.\n\t* gcc.target/arm/simd/neon-compare-3.c: New.\n\t* gcc.target/arm/simd/neon-compare-scalar-1.c: New.\n\t* gcc.target/arm/simd/neon-vcmp-f16.c: New.\n\t* gcc.target/arm/simd/neon-vcmp-f32-2.c: New.\n\t* gcc.target/arm/simd/neon-vcmp-f32-3.c: New.\n\t* gcc.target/arm/simd/neon-vcmp-f32.c: New.\n\t* gcc.target/arm/simd/neon-vcmp.c: New.", "tree": {"sha": "33d8c340dc10d1cad54933931fb79369dc1fa17c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33d8c340dc10d1cad54933931fb79369dc1fa17c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/comments", "author": null, "committer": null, "parents": [{"sha": "39c0b8f1ac4be2fdaa309733bbae11fedc6b8b3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39c0b8f1ac4be2fdaa309733bbae11fedc6b8b3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39c0b8f1ac4be2fdaa309733bbae11fedc6b8b3d"}], "stats": {"total": 267, "additions": 267, "deletions": 0}, "files": [{"sha": "917a95bf141a9b1c39e0eec66c2f35f158193bbc", "filename": "gcc/testsuite/gcc.target/arm/simd/mve-vcmp-f32-2.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vcmp-f32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vcmp-f32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fmve-vcmp-f32-2.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do assemble } */\n+/* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n+/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-O3 -funsafe-math-optimizations\" } */\n+\n+#include <stdint.h>\n+\n+#define NB 4\n+\n+#define FUNC(OP, NAME)\t\t\t\t\t\t\t\\\n+  void test_ ## NAME ##_f (float * __restrict__ dest, float *a, float *b) { \\\n+    int i;\t\t\t\t\t\t\t\t\\\n+    for (i=0; i<NB; i++) {\t\t\t\t\t\t\\\n+      dest[i] = (a[i] OP b[i]) ? 2.0f : 3.0f;\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  }\n+\n+FUNC(==, vcmpeq)\n+FUNC(!=, vcmpne)\n+FUNC(<, vcmplt)\n+FUNC(<=, vcmple)\n+FUNC(>, vcmpgt)\n+FUNC(>=, vcmpge)\n+\n+/* { dg-final { scan-assembler-times {\\tvcmp.f32\\teq, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.f32\\tne, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.f32\\tlt, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.f32\\tle, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.f32\\tgt, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcmp.f32\\tge, q[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\t.word\\t1073741824\\n} 24 } } */ /* Constant 2.0f.  */\n+/* { dg-final { scan-assembler-times {\\t.word\\t1077936128\\n} 24 } } */ /* Constant 3.0f.  */"}, {"sha": "2e0222a71f2c045fe242faf32e785a514ebd0e4f", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-compare-1.c", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-1.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,78 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-add-options arm_neon } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include \"mve-compare-1.c\"\n+\n+/* 64-bit vectors.  */\n+/* vmvn is used by 'ne' comparisons: 3 sizes * 2 (signed/unsigned) * 2\n+   (register/zero) = 12.  */\n+/* { dg-final { scan-assembler-times {\\tvmvn\\td[0-9]+, d[0-9]+\\n} 12 } } */\n+\n+/* { 8 bits } x { eq, ne, lt, le, gt, ge }. */\n+/* ne uses eq, lt/le only apply to comparison with zero, they use gt/ge\n+   otherwise.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i8\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvceq.i8\\td[0-9]+, d[0-9]+, #0\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvclt.s8\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcle.s8\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s8\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s8\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s8\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s8\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+\n+/* { 16 bits } x { eq, ne, lt, le, gt, ge }. */\n+/* { dg-final { scan-assembler-times {\\tvceq.i16\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvceq.i16\\td[0-9]+, d[0-9]+, #0\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvclt.s16\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcle.s16\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s16\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s16\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s16\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s16\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+\n+/* { 32 bits } x { eq, ne, lt, le, gt, ge }. */\n+/* { dg-final { scan-assembler-times {\\tvceq.i32\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvceq.i32\\td[0-9]+, d[0-9]+, #0\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvclt.s32\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcle.s32\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s32\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s32\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s32\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s32\\td[0-9]+, d[0-9]+, #0\\n} 1 } } */\n+\n+/* 128-bit vectors.  */\n+\n+/* vmvn is used by 'ne' comparisons.  */\n+/* { dg-final { scan-assembler-times {\\tvmvn\\tq[0-9]+, q[0-9]+\\n} 12 } } */\n+\n+/* { 8 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i8\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvceq.i8\\tq[0-9]+, q[0-9]+, #0\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvclt.s8\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcle.s8\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s8\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s8\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s8\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s8\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+\n+/* { 16 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvceq.i16\\tq[0-9]+, q[0-9]+, #0\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvclt.s16\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcle.s16\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s16\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s16\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+\n+/* { 32 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvceq.i32\\tq[0-9]+, q[0-9]+, #0\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvclt.s32\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcle.s32\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s32\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s32\\tq[0-9]+, q[0-9]+, #0\\n} 1 } } */"}, {"sha": "06f3c14c91ef82ff82fa1a11cb58fb1ea90d5191", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-compare-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-2.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-add-options arm_neon } */\n+/* { dg-additional-options \"-O3 -funsafe-math-optimizations\" } */\n+\n+#include \"mve-compare-2.c\"\n+\n+/* eq, ne, lt, le, gt, ge.  */\n+/* ne uses eq+vmvn, lt/le use gt/ge with swapped operands.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvmvn\\tq[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */"}, {"sha": "9c9f108843be6e1c7806c8c02cea31f57302d4df", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-compare-3.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-3.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_2a_fp16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_fp16_neon } */\n+/* { dg-additional-options \"-O3 -funsafe-math-optimizations\" } */\n+\n+#include \"mve-compare-3.c\"\n+\n+\n+/* eq, ne, lt, le, gt, ge.  */\n+/* ne uses eq+vmvn, lt/le use gt/ge with swapped operands.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.f16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvmvn\\tq[0-9]+, q[0-9]+\\n} 1 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.f16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.f16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */"}, {"sha": "0783624a3f2b9f16888d6c651dbcb2fde0eeb0b2", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-compare-scalar-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-scalar-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-scalar-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-compare-scalar-1.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-add-options arm_neon } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include \"mve-compare-scalar-1.c\"\n+\n+/* 64-bit vectors.  */\n+/* vmvn is used by 'ne' comparisons.  */\n+/* { dg-final { scan-assembler-times {\\tvmvn\\td[0-9]+, d[0-9]+\\n} 6 } } */\n+\n+/* { 8 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i8\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s8\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.u8\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s8\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.u8\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+\n+/* { 16 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i16\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s16\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.u16\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s16\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.u16\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+\n+/* { 32 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i32\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s32\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.u32\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s32\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.u32\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 2 } } */\n+\n+/* 128-bit vectors.  */\n+\n+/* vmvn is used by 'ne' comparisons.  */\n+/* { dg-final { scan-assembler-times {\\tvmvn\\tq[0-9]+, q[0-9]+\\n} 6 } } */\n+\n+/* { 8 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i8\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s8\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.u8\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s8\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.u8\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+\n+/* { 16 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.u16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.u16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+\n+/* { 32 bits } x { eq, ne, lt, le, gt, ge }.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 4 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.u32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.u32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */"}, {"sha": "688fd9a235f02df7fee028c85047a7e5e3bebffc", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-vcmp-f16.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f16.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_v8_2a_fp16_neon_ok } */\n+/* { dg-add-options arm_v8_2a_fp16_neon } */\n+/* { dg-additional-options \"-O3 -funsafe-math-optimizations\" } */\n+\n+#include \"mve-vcmp-f16.c\"\n+\n+/* 'ne' uses vceq.  */\n+/* le and lt use ge and gt with inverted operands.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.f16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.f16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.f16\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */"}, {"sha": "a22923eb2421be377edc61a0b1b291930bd6674e", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-vcmp-f32-2.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32-2.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-add-options arm_neon } */\n+/* { dg-additional-options \"-O3 -funsafe-math-optimizations\" } */\n+\n+#include \"mve-vcmp-f32-2.c\"\n+\n+/* 'ne' uses vceq.  */\n+/* le and lt use ge and gt with inverted operands.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+\n+/* { dg-final { scan-assembler-times {\\tvmov.f32\\tq[0-9]+, #2.0e\\+0} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvmov.f32\\tq[0-9]+, #3.0e\\+0} 6 } } */"}, {"sha": "4f12f043d3a5d70833fc95a998112419c0549884", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-vcmp-f32-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32-3.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-add-options arm_neon } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include \"mve-vcmp-f32.c\"\n+\n+/* Should not be vectorized, since we do not use -funsafe-math-optimizations.  */\n+\n+/* { dg-final { scan-assembler-not {\\tvceq.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} } } */\n+/* { dg-final { scan-assembler-not {\\tvcge.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} } } */\n+/* { dg-final { scan-assembler-not {\\tvcgt.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} } } */"}, {"sha": "06e5c4fd1d155f5b448984bff30286b2f3889535", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-vcmp-f32.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp-f32.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-add-options arm_neon } */\n+/* { dg-additional-options \"-O3 -funsafe-math-optimizations\" } */\n+\n+#include \"mve-vcmp-f32.c\"\n+\n+/* 'ne' uses vceq.  */\n+/* le and lt use ge and gt with inverted operands.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.f32\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 2 } } */"}, {"sha": "f2b92b1be7fe779bf8595b9945be2410c15b232b", "filename": "gcc/testsuite/gcc.target/arm/simd/neon-vcmp.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b1cce9273ce49fee5f5ebafb22107b97e3e7741/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fsimd%2Fneon-vcmp.c?ref=7b1cce9273ce49fee5f5ebafb22107b97e3e7741", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target arm_neon_ok } */\n+/* { dg-add-options arm_neon } */\n+/* { dg-additional-options \"-O3\" } */\n+\n+#include \"mve-vcmp.c\"\n+\n+/* vceq is also used for 'ne' comparisons.  */\n+/* { dg-final { scan-assembler-times {\\tvceq.i[0-9]+\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 12 } } */\n+/* { dg-final { scan-assembler-times {\\tvceq.i[0-9]+\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 12 } } */\n+\n+/* lt and le are replaced with the opposite condition, hence the double number\n+   of matches for gt and ge.  */\n+/* { dg-final { scan-assembler-times {\\tvcge.s[0-9]+\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.s[0-9]+\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.u[0-9]+\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcge.u[0-9]+\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 6 } } */\n+\n+/* { dg-final { scan-assembler-times {\\tvcgt.s[0-9]+\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.s[0-9]+\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.u[0-9]+\\td[0-9]+, d[0-9]+, d[0-9]+\\n} 6 } } */\n+/* { dg-final { scan-assembler-times {\\tvcgt.u[0-9]+\\tq[0-9]+, q[0-9]+, q[0-9]+\\n} 6 } } */"}]}