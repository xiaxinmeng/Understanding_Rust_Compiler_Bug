{"sha": "94cd932caeac5f720dd5a5f78583a5eaea456c6c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTRjZDkzMmNhZWFjNWY3MjBkZDVhNWY3ODU4M2E1ZWFlYTQ1NmM2Yw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-01-10T13:24:27Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-01-10T13:24:27Z"}, "message": "Check e->call_stmt before calling gimple_call_set_cannot_inline.\n\n2011-01-10  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR lto/46760\n\t* tree-inline.c (tree_can_inline_p): Check e->call_stmt before\n\tcalling gimple_call_set_cannot_inline.\n\nFrom-SVN: r168631", "tree": {"sha": "c8e1bb5162500d3e7ff842010e045a84a72f504d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8e1bb5162500d3e7ff842010e045a84a72f504d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/94cd932caeac5f720dd5a5f78583a5eaea456c6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94cd932caeac5f720dd5a5f78583a5eaea456c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94cd932caeac5f720dd5a5f78583a5eaea456c6c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94cd932caeac5f720dd5a5f78583a5eaea456c6c/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18c9fa1720c28af3ddcf3d367ef640e332fe8a64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c9fa1720c28af3ddcf3d367ef640e332fe8a64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c9fa1720c28af3ddcf3d367ef640e332fe8a64"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "a07601f8dd829c0858449a2fcdfd5e30e4cb810d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94cd932caeac5f720dd5a5f78583a5eaea456c6c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94cd932caeac5f720dd5a5f78583a5eaea456c6c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=94cd932caeac5f720dd5a5f78583a5eaea456c6c", "patch": "@@ -1,3 +1,9 @@\n+2011-01-10  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR lto/46760\n+\t* tree-inline.c (tree_can_inline_p): Check e->call_stmt before\n+\tcalling gimple_call_set_cannot_inline.\n+\n 2011-01-10  Iain Sandoe  <iains@gcc.gnu.org>\n \n \t* config/darwin-sections.def: Remove unused section."}, {"sha": "6c76fe3b9947e991bfa5b0550de79d5a08818985", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/94cd932caeac5f720dd5a5f78583a5eaea456c6c/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/94cd932caeac5f720dd5a5f78583a5eaea456c6c/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=94cd932caeac5f720dd5a5f78583a5eaea456c6c", "patch": "@@ -5380,15 +5380,17 @@ tree_can_inline_p (struct cgraph_edge *e)\n   if (inline_forbidden_into_p (caller, callee))\n     {\n       e->inline_failed = CIF_UNSPECIFIED;\n-      gimple_call_set_cannot_inline (e->call_stmt, true);\n+      if (e->call_stmt)\n+\tgimple_call_set_cannot_inline (e->call_stmt, true);\n       return false;\n     }\n \n   /* Allow the backend to decide if inlining is ok.  */\n   if (!targetm.target_option.can_inline_p (caller, callee))\n     {\n       e->inline_failed = CIF_TARGET_OPTION_MISMATCH;\n-      gimple_call_set_cannot_inline (e->call_stmt, true);\n+      if (e->call_stmt)\n+\tgimple_call_set_cannot_inline (e->call_stmt, true);\n       e->call_stmt_cannot_inline_p = true;\n       return false;\n     }\n@@ -5405,7 +5407,8 @@ tree_can_inline_p (struct cgraph_edge *e)\n \t  || !gimple_check_call_args (e->call_stmt)))\n     {\n       e->inline_failed = CIF_MISMATCHED_ARGUMENTS;\n-      gimple_call_set_cannot_inline (e->call_stmt, true);\n+      if (e->call_stmt)\n+\tgimple_call_set_cannot_inline (e->call_stmt, true);\n       e->call_stmt_cannot_inline_p = true;\n       return false;\n     }"}]}