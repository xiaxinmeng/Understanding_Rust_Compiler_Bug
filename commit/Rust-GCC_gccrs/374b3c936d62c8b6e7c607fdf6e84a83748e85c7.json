{"sha": "374b3c936d62c8b6e7c607fdf6e84a83748e85c7", "node_id": "C_kwDOANBUbNoAKDM3NGIzYzkzNmQ2MmM4YjZlN2M2MDdmZGY2ZTg0YTgzNzQ4ZTg1Yzc", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-05-03T22:48:23Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2022-05-06T18:15:31Z"}, "message": "compiler: error for duplicate bool map keys\n\nFor golang/go#35945\nFixes golang/go#28104\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/403954", "tree": {"sha": "21202087f9734d2e493a5c9f19a7ff5086f7bc14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21202087f9734d2e493a5c9f19a7ff5086f7bc14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/374b3c936d62c8b6e7c607fdf6e84a83748e85c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374b3c936d62c8b6e7c607fdf6e84a83748e85c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/374b3c936d62c8b6e7c607fdf6e84a83748e85c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374b3c936d62c8b6e7c607fdf6e84a83748e85c7/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fb654f77d5292864ef57040f7bc01d7a975f6d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fb654f77d5292864ef57040f7bc01d7a975f6d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fb654f77d5292864ef57040f7bc01d7a975f6d9"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "4559551ab7be4fc15e0d6b847830ae8cbc076bfe", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374b3c936d62c8b6e7c607fdf6e84a83748e85c7/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374b3c936d62c8b6e7c607fdf6e84a83748e85c7/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=374b3c936d62c8b6e7c607fdf6e84a83748e85c7", "patch": "@@ -1,4 +1,4 @@\n-70ca85f08edf63f46c87d540fa99c45e2903edc2\n+fbadca004b1e09db177c8e071706841038d1dd64\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "dce48e03bf46e1e24ab95361e4e0289f0d28beb0", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374b3c936d62c8b6e7c607fdf6e84a83748e85c7/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374b3c936d62c8b6e7c607fdf6e84a83748e85c7/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=374b3c936d62c8b6e7c607fdf6e84a83748e85c7", "patch": "@@ -17266,6 +17266,8 @@ Composite_literal_expression::lower_map(Gogo* gogo, Named_object* function,\n   Location location = this->location();\n   Unordered_map(unsigned int, std::vector<Expression*>) st;\n   Unordered_map(unsigned int, std::vector<Expression*>) nt;\n+  bool saw_false = false;\n+  bool saw_true = false;\n   if (this->vals_ != NULL)\n     {\n       if (!this->has_keys_)\n@@ -17300,6 +17302,7 @@ Composite_literal_expression::lower_map(Gogo* gogo, Named_object* function,\n \t    continue;\n \t  std::string sval;\n \t  Numeric_constant nval;\n+\t  bool bval;\n \t  if ((*p)->string_constant_value(&sval)) // Check string keys.\n \t    {\n \t      unsigned int h = Gogo::hash_string(sval, 0);\n@@ -17373,6 +17376,19 @@ Composite_literal_expression::lower_map(Gogo* gogo, Named_object* function,\n \t\t  mit->second.push_back(*p);\n \t\t}\n \t    }\n+\t  else if ((*p)->boolean_constant_value(&bval))\n+\t    {\n+\t      if ((bval && saw_true) || (!bval && saw_false))\n+\t\t{\n+\t\t  go_error_at((*p)->location(),\n+\t\t\t      \"duplicate key in map literal\");\n+\t\t  return Expression::make_error(location);\n+\t\t}\n+\t      if (bval)\n+\t\tsaw_true = true;\n+\t      else\n+\t\tsaw_false = true;\n+\t    }\n \t}\n     }\n "}]}