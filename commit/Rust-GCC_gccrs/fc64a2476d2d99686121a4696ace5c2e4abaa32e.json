{"sha": "fc64a2476d2d99686121a4696ace5c2e4abaa32e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM2NGEyNDc2ZDJkOTk2ODYxMjFhNDY5NmFjZTVjMmU0YWJhYTMyZQ==", "commit": {"author": {"name": "Stuart Menefy", "email": "stuart.menefy@st.com", "date": "2003-12-04T21:02:34Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-12-04T21:02:34Z"}, "message": "re PR rtl-optimization/13260 (Incorrect optimisation of loop termination condition)\n\n2003-12-04  Stuart Menefy <stuart.menefy@st.com>\n\t    J\"orn Rennecke <joern.rennecke@superh.com>\n\n\tPR optimization/13260\n\t* gcc.c-torture/execute/20031204-1.c: New test.\n\nCo-Authored-By: J\"orn Rennecke <joern.rennecke@superh.com>\n\nFrom-SVN: r74297", "tree": {"sha": "c796a7acfb2af172f2c7d44d2601b91b79285937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c796a7acfb2af172f2c7d44d2601b91b79285937"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc64a2476d2d99686121a4696ace5c2e4abaa32e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc64a2476d2d99686121a4696ace5c2e4abaa32e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc64a2476d2d99686121a4696ace5c2e4abaa32e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc64a2476d2d99686121a4696ace5c2e4abaa32e/comments", "author": null, "committer": null, "parents": [{"sha": "d67e96cfbb6d7c4933d009090fb5a6715b186b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d67e96cfbb6d7c4933d009090fb5a6715b186b04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d67e96cfbb6d7c4933d009090fb5a6715b186b04"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "ff1d874ce2c35d97704b90d15bb249e5cdf3fd97", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc64a2476d2d99686121a4696ace5c2e4abaa32e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc64a2476d2d99686121a4696ace5c2e4abaa32e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc64a2476d2d99686121a4696ace5c2e4abaa32e", "patch": "@@ -1,3 +1,9 @@\n+2003-12-04  Stuart Menefy <stuart.menefy@st.com>\n+\t    J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\tPR optimization/13260\n+\t* gcc.c-torture/execute/20031204-1.c: New test.\n+\n 2003-12-03  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9127"}, {"sha": "a9c2f0195bd824e26ce8400c828fd874e7bd04cb", "filename": "gcc/testsuite/gcc.c-torture/execute/20031204-1.c", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc64a2476d2d99686121a4696ace5c2e4abaa32e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031204-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc64a2476d2d99686121a4696ace5c2e4abaa32e/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031204-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031204-1.c?ref=fc64a2476d2d99686121a4696ace5c2e4abaa32e", "patch": "@@ -0,0 +1,49 @@\n+/* PR optimization/13260 */\n+\n+#include <string.h>\n+\n+typedef unsigned long u32;\n+\n+u32 in_aton(const char* x)\n+{\n+  return 0x0a0b0c0d;\n+}\n+\n+u32 root_nfs_parse_addr(char *name)\n+{\n+ u32 addr;\n+ int octets = 0;\n+ char *cp, *cq;\n+\n+ cp = cq = name;\n+ while (octets < 4) {\n+  while (*cp >= '0' && *cp <= '9')\n+   cp++;\n+  if (cp == cq || cp - cq > 3)\n+   break;\n+  if (*cp == '.' || octets == 3)\n+   octets++;\n+  if (octets < 4)\n+   cp++;\n+  cq = cp;\n+ }\n+\n+ if (octets == 4 && (*cp == ':' || *cp == '\\0')) {\n+  if (*cp == ':')\n+   *cp++ = '\\0';\n+  addr = in_aton(name);\n+  strcpy(name, cp);\n+ } else\n+  addr = (-1);\n+\n+ return addr;\n+}\n+\n+int\n+main()\n+{\n+  static char addr[] = \"10.11.12.13:/hello\";\n+  u32 result = root_nfs_parse_addr(addr);\n+  if (result != 0x0a0b0c0d) { abort(); }\n+  return 0;\n+}"}]}