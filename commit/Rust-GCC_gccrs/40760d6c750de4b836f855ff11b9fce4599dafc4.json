{"sha": "40760d6c750de4b836f855ff11b9fce4599dafc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA3NjBkNmM3NTBkZTRiODM2Zjg1NWZmMTFiOWZjZTQ1OTlkYWZjNA==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2007-08-14T08:36:22Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-14T08:36:22Z"}, "message": "g-soccon-interix.ads, [...]: Removed.\n\n2007-08-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-soccon-interix.ads, a-excpol-interix.adb, a-intnam-interix.ads, \n\ts-osinte-interix.ads, system-interix.ads: Removed.\n\nFrom-SVN: r127407", "tree": {"sha": "58e66e7faaab4615a1bb8383a9a0527077d919b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58e66e7faaab4615a1bb8383a9a0527077d919b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40760d6c750de4b836f855ff11b9fce4599dafc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40760d6c750de4b836f855ff11b9fce4599dafc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40760d6c750de4b836f855ff11b9fce4599dafc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40760d6c750de4b836f855ff11b9fce4599dafc4/comments", "author": null, "committer": null, "parents": [{"sha": "a46304171ffba1df6ead5e68b371b36440bc3131", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a46304171ffba1df6ead5e68b371b36440bc3131", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a46304171ffba1df6ead5e68b371b36440bc3131"}], "stats": {"total": 533, "additions": 0, "deletions": 533}, "files": [{"sha": "9b39a04afa8b1ea180d19a55cca6aa14a98ea2cb", "filename": "gcc/ada/a-excpol-interix.adb", "status": "removed", "additions": 0, "deletions": 73, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a46304171ffba1df6ead5e68b371b36440bc3131/gcc%2Fada%2Fa-excpol-interix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a46304171ffba1df6ead5e68b371b36440bc3131/gcc%2Fada%2Fa-excpol-interix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-excpol-interix.adb?ref=a46304171ffba1df6ead5e68b371b36440bc3131", "patch": "@@ -1,73 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                   A D A . E X C E P T I O N S . P O L L                  --\n---       (version supporting asynchronous abort test and time slicing)      --\n---                                                                          --\n---                                  B o d y                                 --\n---                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This version is for targets that do not support per-thread asynchronous\n---  signals or that do not handle async timers properly. On such targets, we\n---  require compilation with the -gnatP switch that activates periodic polling.\n---  Then in the body of the polling routine we test for asynchronous abort and\n---  yield periodically.\n-\n---  This is currently used only by Interix\n-\n-pragma Warnings (Off);\n---  Allow withing of non-Preelaborated units in Ada 2005 mode where this\n---  package will be categorized as Preelaborate. See AI-362 for details.\n---  It is safe in the context of the run-time to violate the rules!\n-\n-with System.Soft_Links;\n---  used for Check_Abort_Status\n-\n-pragma Warnings (On);\n-\n-separate (Ada.Exceptions)\n-\n-----------\n--- Poll --\n-----------\n-\n-procedure Poll is\n-begin\n-   if Counter = 10000 then\n-      Counter := 0;\n-      delay 0.0;\n-   else\n-      Counter := Counter + 1;\n-   end if;\n-\n-   --  Test for asynchronous abort on each poll\n-\n-   if System.Soft_Links.Check_Abort_Status.all /= 0 then\n-      raise Standard'Abort_Signal;\n-   end if;\n-end Poll;"}, {"sha": "a6fa5cb6860921a3e6246a32fb94e18171ea17d5", "filename": "gcc/ada/a-intnam-interix.ads", "status": "removed", "additions": 0, "deletions": 154, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a46304171ffba1df6ead5e68b371b36440bc3131/gcc%2Fada%2Fa-intnam-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a46304171ffba1df6ead5e68b371b36440bc3131/gcc%2Fada%2Fa-intnam-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-intnam-interix.ads?ref=a46304171ffba1df6ead5e68b371b36440bc3131", "patch": "@@ -1,154 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n---                                                                          --\n---                   A D A . I N T E R R U P T S . N A M E S                --\n---                                                                          --\n---                                  S p e c                                 --\n---                                                                          --\n---          Copyright (C) 1991-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNARL is free software; you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion. GNARL is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNARL; see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNARL was developed by the GNARL team at Florida State University.       --\n--- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This is a OpenNT (FSU THREAD) version of this package.\n---\n---  The following signals are reserved by the run time:\n---\n---  SIGFPE, SIGILL, SIGSEGV, SIGBUS, SIGTRAP, SIGABRT, SIGINT,\n---  SIGALRM, SIGVTALRM, SIGSTOP, SIGKILL\n---\n---  The pragma Unreserve_All_Interrupts affects the following signal(s):\n---\n---  SIGINT: made available for Ada handlers\n-\n---  This target-dependent package spec contains names of interrupts\n---  supported by the local system.\n-\n-with System.OS_Interface;\n---  used for names of interrupts\n-\n-package Ada.Interrupts.Names is\n-\n-   --  Beware that the mapping of names to signals may be\n-   --  many-to-one.  There may be aliases.  Also, for all\n-   --  signal names that are not supported on the current system\n-   --  the value of the corresponding constant will be zero.\n-\n-   SIGHUP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGHUP;      --  hangup\n-\n-   SIGINT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGINT;      --  interrupt (rubout)\n-\n-   SIGQUIT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGQUIT;     --  quit (ASCD FS)\n-\n-   SIGILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGILL;      --  illegal instruction (not reset)\n-\n-   SIGTRAP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTRAP;     --  trace trap (not reset)\n-\n-   SIGIOT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGIOT;      --  IOT instruction\n-\n-   SIGABRT : constant Interrupt_ID := --  used by abort,\n-     System.OS_Interface.SIGABRT;     --  replace SIGIOT in the  future\n-\n-   SIGFPE : constant Interrupt_ID :=\n-     System.OS_Interface.SIGFPE;      --  floating point exception\n-\n-   SIGKILL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGKILL;     --  kill (cannot be caught or ignored)\n-\n-   SIGBUS : constant Interrupt_ID :=\n-     System.OS_Interface.SIGBUS;      --  bus error\n-\n-   SIGSEGV : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSEGV;     --  segmentation violation\n-\n-   SIGSYS : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSYS;      --  bad argument to system call\n-\n-   SIGPIPE : constant Interrupt_ID := --  write on a pipe with\n-     System.OS_Interface.SIGPIPE;     --  no one to read it\n-\n-   SIGALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGALRM;     --  alarm clock\n-\n-   SIGTERM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTERM;     --  software termination signal from kill\n-\n-   SIGUSR1 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR1;     --  user defined signal 1\n-\n-   SIGUSR2 : constant Interrupt_ID :=\n-     System.OS_Interface.SIGUSR2;     --  user defined signal 2\n-\n-   SIGCLD : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCLD;      --  child status change\n-\n-   SIGCHLD : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCHLD;     --  4.3BSD's/POSIX name for SIGCLD\n-\n-   SIGWINCH : constant Interrupt_ID :=\n-     System.OS_Interface.SIGWINCH;    --  window size change\n-\n-   SIGURG : constant Interrupt_ID :=\n-     System.OS_Interface.SIGURG;      --  urgent condition on IO channel\n-\n-   SIGPOLL : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPOLL;     --  pollable event occurred\n-\n-   SIGIO : constant Interrupt_ID :=   --  input/output possible,\n-     System.OS_Interface.SIGIO;       --  SIGPOLL alias (Solaris)\n-\n-   SIGSTOP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGSTOP;     --  stop (cannot be caught or ignored)\n-\n-   SIGTSTP : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTSTP;     --  user stop requested from tty\n-\n-   SIGCONT : constant Interrupt_ID :=\n-     System.OS_Interface.SIGCONT;     --  stopped process has been continued\n-\n-   SIGTTIN : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTIN;     --  background tty read attempted\n-\n-   SIGTTOU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGTTOU;     --  background tty write attempted\n-\n-   SIGVTALRM : constant Interrupt_ID :=\n-     System.OS_Interface.SIGVTALRM;   --  virtual timer expired\n-\n-   SIGPROF : constant Interrupt_ID :=\n-     System.OS_Interface.SIGPROF;     --  profiling timer expired\n-\n-   SIGXCPU : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXCPU;     --  CPU time limit exceeded\n-\n-   SIGXFSZ : constant Interrupt_ID :=\n-     System.OS_Interface.SIGXFSZ;     --  filesize limit exceeded\n-\n-end Ada.Interrupts.Names;"}, {"sha": "31569d12da38510033bdd33eccd6a0e6b1eb552b", "filename": "gcc/ada/g-soccon-interix.ads", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a46304171ffba1df6ead5e68b371b36440bc3131/gcc%2Fada%2Fg-soccon-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a46304171ffba1df6ead5e68b371b36440bc3131/gcc%2Fada%2Fg-soccon-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-soccon-interix.ads?ref=a46304171ffba1df6ead5e68b371b36440bc3131", "patch": "@@ -1,161 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                         GNAT COMPILER COMPONENTS                         --\n---                                                                          --\n---               G N A T . S O C K E T S . C O N S T A N T S                --\n---                                                                          --\n---                                 S p e c                                  --\n---                                                                          --\n---          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n---  This package provides target dependent definitions of constant for use\n---  by the GNAT.Sockets package (g-socket.ads). This package should not be\n---  directly with'ed by an applications program.\n-\n---  This is the version for Interix\n---  Do not edit this file by hand, instead edit and re-run gen-soccon.c\n-\n-package GNAT.Sockets.Constants is\n-\n-   --------------\n-   -- Families --\n-   --------------\n-\n-   AF_INET            : constant :=            2; --  IPv4 address family\n-   AF_INET6           : constant :=           -1; --  IPv6 address family\n-\n-   -----------\n-   -- Modes --\n-   -----------\n-\n-   SOCK_STREAM        : constant :=            1; --  Stream socket\n-   SOCK_DGRAM         : constant :=            2; --  Datagram socket\n-\n-   -------------------\n-   -- Socket errors --\n-   -------------------\n-\n-   EACCES             : constant :=           13; --  Permission denied\n-   EADDRINUSE         : constant :=           48; --  Address already in use\n-   EADDRNOTAVAIL      : constant :=           49; --  Cannot assign address\n-   EAFNOSUPPORT       : constant :=           47; --  Addr family not supported\n-   EALREADY           : constant :=           37; --  Operation in progress\n-   EBADF              : constant :=            9; --  Bad file descriptor\n-   ECONNABORTED       : constant :=           53; --  Connection aborted\n-   ECONNREFUSED       : constant :=           61; --  Connection refused\n-   ECONNRESET         : constant :=           54; --  Connection reset by peer\n-   EDESTADDRREQ       : constant :=           82; --  Destination addr required\n-   EFAULT             : constant :=           14; --  Bad address\n-   EHOSTDOWN          : constant :=           64; --  Host is down\n-   EHOSTUNREACH       : constant :=           65; --  No route to host\n-   EINPROGRESS        : constant :=           80; --  Operation now in progress\n-   EINTR              : constant :=            4; --  Interrupted system call\n-   EINVAL             : constant :=           22; --  Invalid argument\n-   EIO                : constant :=            5; --  Input output error\n-   EISCONN            : constant :=           56; --  Socket already connected\n-   ELOOP              : constant :=           62; --  Too many symbolic lynks\n-   EMFILE             : constant :=           24; --  Too many open files\n-   EMSGSIZE           : constant :=           83; --  Message too long\n-   ENAMETOOLONG       : constant :=           38; --  Name too long\n-   ENETDOWN           : constant :=           50; --  Network is down\n-   ENETRESET          : constant :=           52; --  Disconn. on network reset\n-   ENETUNREACH        : constant :=           51; --  Network is unreachable\n-   ENOBUFS            : constant :=           55; --  No buffer space available\n-   ENOPROTOOPT        : constant :=           85; --  Protocol not available\n-   ENOTCONN           : constant :=           57; --  Socket not connected\n-   ENOTSOCK           : constant :=           81; --  Operation on non socket\n-   EOPNOTSUPP         : constant :=           45; --  Operation not supported\n-   EPFNOSUPPORT       : constant :=           46; --  Unknown protocol family\n-   EPROTONOSUPPORT    : constant :=           43; --  Unknown protocol\n-   EPROTOTYPE         : constant :=           84; --  Unknown protocol type\n-   ESHUTDOWN          : constant :=           58; --  Cannot send once shutdown\n-   ESOCKTNOSUPPORT    : constant :=           44; --  Socket type not supported\n-   ETIMEDOUT          : constant :=           60; --  Connection timed out\n-   ETOOMANYREFS       : constant :=           59; --  Too many references\n-   EWOULDBLOCK        : constant :=           11; --  Operation would block\n-\n-   -----------------\n-   -- Host errors --\n-   -----------------\n-\n-   HOST_NOT_FOUND     : constant :=           90; --  Unknown host\n-   TRY_AGAIN          : constant :=           91; --  Host name lookup failure\n-   NO_DATA            : constant :=           93; --  No data record for name\n-   NO_RECOVERY        : constant :=           92; --  Non recoverable errors\n-\n-   -------------------\n-   -- Control flags --\n-   -------------------\n-\n-   FIONBIO            : constant :=  -2147195390; --  Set/clear non-blocking io\n-   FIONREAD           : constant :=   1074030081; --  How many bytes to read\n-\n-   --------------------\n-   -- Shutdown modes --\n-   --------------------\n-\n-   SHUT_RD            : constant :=            0; --  No more recv\n-   SHUT_WR            : constant :=            1; --  No more send\n-   SHUT_RDWR          : constant :=            2; --  No more recv/send\n-\n-   ---------------------\n-   -- Protocol levels --\n-   ---------------------\n-\n-   SOL_SOCKET         : constant :=        65535; --  Options for socket level\n-   IPPROTO_IP         : constant :=            0; --  Dummy protocol for IP\n-   IPPROTO_UDP        : constant :=           17; --  UDP\n-   IPPROTO_TCP        : constant :=            6; --  TCP\n-\n-   -------------------\n-   -- Request flags --\n-   -------------------\n-\n-   MSG_OOB            : constant :=            1; --  Process out-of-band data\n-   MSG_PEEK           : constant :=            2; --  Peek at incoming data\n-   MSG_EOR            : constant :=            8; --  Send end of record\n-   MSG_WAITALL        : constant :=           64; --  Wait for full reception\n-   MSG_NOSIGNAL       : constant :=           -1; --  No SIGPIPE on send\n-   MSG_Forced_Flags   : constant :=            0;\n-\n-   --------------------\n-   -- Socket options --\n-   --------------------\n-\n-   TCP_NODELAY        : constant :=            1; --  Do not coalesce packets\n-   SO_SNDBUF          : constant :=         4097; --  Set/get send buffer size\n-   SO_RCVBUF          : constant :=         4098; --  Set/get recv buffer size\n-   SO_REUSEADDR       : constant :=            4; --  Bind reuse local address\n-   SO_KEEPALIVE       : constant :=            8; --  Enable keep-alive msgs\n-   SO_LINGER          : constant :=          128; --  Defer close to flush data\n-   SO_ERROR           : constant :=         4103; --  Get/clear error status\n-   SO_BROADCAST       : constant :=           32; --  Can send broadcast msgs\n-   IP_ADD_MEMBERSHIP  : constant :=            5; --  Join a multicast group\n-   IP_DROP_MEMBERSHIP : constant :=            6; --  Leave a multicast group\n-   IP_MULTICAST_TTL   : constant :=            3; --  Set/get multicast TTL\n-   IP_MULTICAST_LOOP  : constant :=            4; --  Set/get mcast loopback\n-\n-end GNAT.Sockets.Constants;"}, {"sha": "58470efea0b081af4e571b769d2cd372a9f1ce69", "filename": "gcc/ada/system-interix.ads", "status": "removed", "additions": 0, "deletions": 145, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a46304171ffba1df6ead5e68b371b36440bc3131/gcc%2Fada%2Fsystem-interix.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a46304171ffba1df6ead5e68b371b36440bc3131/gcc%2Fada%2Fsystem-interix.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem-interix.ads?ref=a46304171ffba1df6ead5e68b371b36440bc3131", "patch": "@@ -1,145 +0,0 @@\n-------------------------------------------------------------------------------\n---                                                                          --\n---                        GNAT RUN-TIME COMPONENTS                          --\n---                                                                          --\n---                               S Y S T E M                                --\n---                                                                          --\n---                                 S p e c                                  --\n---                        (OpenNT/Interix Version)                          --\n---                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n---                                                                          --\n--- This specification is derived from the Ada Reference Manual for use with --\n--- GNAT. The copyright notice above, and the license provisions that follow --\n--- apply solely to the  contents of the part following the private keyword. --\n---                                                                          --\n--- GNAT is free software;  you can  redistribute it  and/or modify it under --\n--- terms of the  GNU General Public License as published  by the Free Soft- --\n--- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n--- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n--- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n--- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n--- for  more details.  You should have  received  a copy of the GNU General --\n--- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n--- to  the  Free Software Foundation,  51  Franklin  Street,  Fifth  Floor, --\n--- Boston, MA 02110-1301, USA.                                              --\n---                                                                          --\n--- As a special exception,  if other files  instantiate  generics from this --\n--- unit, or you link  this unit with other files  to produce an executable, --\n--- this  unit  does not  by itself cause  the resulting  executable  to  be --\n--- covered  by the  GNU  General  Public  License.  This exception does not --\n--- however invalidate  any other reasons why  the executable file  might be --\n--- covered by the  GNU Public License.                                      --\n---                                                                          --\n--- GNAT was originally developed  by the GNAT team at  New York University. --\n--- Extensive contributions were provided by Ada Core Technologies Inc.      --\n---                                                                          --\n-------------------------------------------------------------------------------\n-\n-package System is\n-   pragma Pure;\n-   --  Note that we take advantage of the implementation permission to make\n-   --  this unit Pure instead of Preelaborable; see RM 13.7.1(15). In Ada\n-   --  2005, this is Pure in any case (AI-362).\n-\n-   type Name is (SYSTEM_NAME_GNAT);\n-   System_Name : constant Name := SYSTEM_NAME_GNAT;\n-\n-   --  System-Dependent Named Numbers\n-\n-   Min_Int               : constant := Long_Long_Integer'First;\n-   Max_Int               : constant := Long_Long_Integer'Last;\n-\n-   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n-   Max_Nonbinary_Modulus : constant := 2 ** Integer'Size - 1;\n-\n-   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n-   Max_Digits            : constant := Long_Long_Float'Digits;\n-\n-   Max_Mantissa          : constant := 63;\n-   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n-\n-   Tick                  : constant := 0.01;\n-\n-   --  Storage-related Declarations\n-\n-   type Address is private;\n-   pragma Preelaborable_Initialization (Address);\n-   Null_Address : constant Address;\n-\n-   Storage_Unit : constant := 8;\n-   Word_Size    : constant := 32;\n-   Memory_Size  : constant := 2 ** 32;\n-\n-   --  Address comparison\n-\n-   function \"<\"  (Left, Right : Address) return Boolean;\n-   function \"<=\" (Left, Right : Address) return Boolean;\n-   function \">\"  (Left, Right : Address) return Boolean;\n-   function \">=\" (Left, Right : Address) return Boolean;\n-   function \"=\"  (Left, Right : Address) return Boolean;\n-\n-   pragma Import (Intrinsic, \"<\");\n-   pragma Import (Intrinsic, \"<=\");\n-   pragma Import (Intrinsic, \">\");\n-   pragma Import (Intrinsic, \">=\");\n-   pragma Import (Intrinsic, \"=\");\n-\n-   --  Other System-Dependent Declarations\n-\n-   type Bit_Order is (High_Order_First, Low_Order_First);\n-   Default_Bit_Order : constant Bit_Order := Low_Order_First;\n-   pragma Warnings (Off, Default_Bit_Order); -- kill constant condition warning\n-\n-   --  Priority-related Declarations (RM D.1)\n-\n-   Max_Priority           : constant Positive := 30;\n-   Max_Interrupt_Priority : constant Positive := 31;\n-\n-   subtype Any_Priority       is Integer      range  0 .. 31;\n-   subtype Priority           is Any_Priority range  0 .. 30;\n-   subtype Interrupt_Priority is Any_Priority range 31 .. 31;\n-\n-   Default_Priority : constant Priority := 15;\n-\n-private\n-\n-   type Address is mod Memory_Size;\n-   Null_Address : constant Address := 0;\n-\n-   --------------------------------------\n-   -- System Implementation Parameters --\n-   --------------------------------------\n-\n-   --  These parameters provide information about the target that is used\n-   --  by the compiler. They are in the private part of System, where they\n-   --  can be accessed using the special circuitry in the Targparm unit\n-   --  whose source should be consulted for more detailed descriptions\n-   --  of the individual switch values.\n-\n-   Backend_Divide_Checks     : constant Boolean := False;\n-   Backend_Overflow_Checks   : constant Boolean := False;\n-   Command_Line_Args         : constant Boolean := True;\n-   Configurable_Run_Time     : constant Boolean := False;\n-   Denorm                    : constant Boolean := True;\n-   Duration_32_Bits          : constant Boolean := False;\n-   Exit_Status_Supported     : constant Boolean := True;\n-   Fractional_Fixed_Ops      : constant Boolean := False;\n-   Frontend_Layout           : constant Boolean := False;\n-   Machine_Overflows         : constant Boolean := False;\n-   Machine_Rounds            : constant Boolean := True;\n-   Preallocated_Stacks       : constant Boolean := False;\n-   Signed_Zeros              : constant Boolean := True;\n-   Stack_Check_Default       : constant Boolean := False;\n-   Stack_Check_Probes        : constant Boolean := False;\n-   Support_64_Bit_Divides    : constant Boolean := True;\n-   Support_Aggregates        : constant Boolean := True;\n-   Support_Composite_Assign  : constant Boolean := True;\n-   Support_Composite_Compare : constant Boolean := True;\n-   Support_Long_Shifts       : constant Boolean := True;\n-   Suppress_Standard_Library : constant Boolean := False;\n-   Use_Ada_Main_Program_Name : constant Boolean := False;\n-   ZCX_By_Default            : constant Boolean := False;\n-   GCC_ZCX_Support           : constant Boolean := False;\n-\n-end System;"}]}