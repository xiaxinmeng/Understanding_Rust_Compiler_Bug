{"sha": "8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGIwNmNjYjIwZWFmMmU3Y2I4NWU5ZGNhMjNmMTU5OWVlMzdkMTdhNw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2021-07-28T15:34:03Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2021-07-28T15:34:03Z"}, "message": "aarch64: Add smov alternative to sign_extend pattern\n\nIn the testcase here we were generating a umov + sxth to move\na half-word value from SIMD to GP regs with sign-extension.\nWe can use a single smov instruction for it instead but the\nsign-extend pattern was missing the right alternative.\nThe *zero_extend<SHORT:mode><GPI:mode>2_aarch64 pattern for\nzero-extension already has the right alternative for\nthe analogous umov instruction, so this mirrors that pattern.\n\nBootstrapped and tested on aarch64-none-linux-gnu.\n\nThe test gcc.target/aarch64/sve/clastb_4.c is adjusted to scan for\nthe clastb  h0, p0, h0, z0.h form\ninstead of\nthe clastb  w0, p0, w0, z0.h form.\n\nThis is an improvement as the W forms of the clast instructions are more expensive.\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64.md (*extend<SHORT:mode><GPI:mode>2_aarch64):\n\tAdd \"r,w\" alternative.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/aarch64/smov_1.c: New test.\n\t* gcc.target/aarch64/sve/clastb_4.c: Adjust clast scan-assembler.", "tree": {"sha": "c6a0524ee093d159d7d6361da6827f97c57ae4a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6a0524ee093d159d7d6361da6827f97c57ae4a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9775e465c1fbfc32656de77c618c61acf5bd905d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9775e465c1fbfc32656de77c618c61acf5bd905d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9775e465c1fbfc32656de77c618c61acf5bd905d"}], "stats": {"total": 24, "additions": 19, "deletions": 5}, "files": [{"sha": "eb8ccd4b97bbd4f0c3ff5791e48cfcfb42ec6c2e", "filename": "gcc/config/aarch64/aarch64.md", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7/gcc%2Fconfig%2Faarch64%2Faarch64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7/gcc%2Fconfig%2Faarch64%2Faarch64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.md?ref=8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7", "patch": "@@ -1874,13 +1874,15 @@\n )\n \n (define_insn \"*extend<SHORT:mode><GPI:mode>2_aarch64\"\n-  [(set (match_operand:GPI 0 \"register_operand\" \"=r,r\")\n-        (sign_extend:GPI (match_operand:SHORT 1 \"nonimmediate_operand\" \"r,m\")))]\n+  [(set (match_operand:GPI 0 \"register_operand\" \"=r,r,r\")\n+        (sign_extend:GPI (match_operand:SHORT 1 \"nonimmediate_operand\" \"r,m,w\")))]\n   \"\"\n   \"@\n    sxt<SHORT:size>\\t%<GPI:w>0, %w1\n-   ldrs<SHORT:size>\\t%<GPI:w>0, %1\"\n-  [(set_attr \"type\" \"extend,load_4\")]\n+   ldrs<SHORT:size>\\t%<GPI:w>0, %1\n+   smov\\t%w0, %1.<SHORT:size>[0]\"\n+  [(set_attr \"type\" \"extend,load_4,neon_to_gp\")\n+   (set_attr \"arch\" \"*,*,fp\")]\n )\n \n (define_insn \"*zero_extend<SHORT:mode><GPI:mode>2_aarch64\""}, {"sha": "53280ea77eefecffb81bb5c66de32de0e88f9df9", "filename": "gcc/testsuite/gcc.target/aarch64/smov_1.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsmov_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsmov_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsmov_1.c?ref=8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=armv8.2-a+sve\" } */\n+\n+/* Check that we avoid an explicit sxth in favour of smov.  */\n+\n+#include <arm_sve.h>\n+\n+int foo(svint16_t a) {\n+  return svminv_s16(svptrue_b16(), a);\n+}\n+\n+/* { dg-final { scan-assembler-not \"sxth\" } } */"}, {"sha": "7603d475a818a83388897089fa311bb98e7302d2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/clastb_4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fclastb_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fclastb_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fclastb_4.c?ref=8b06ccb20eaf2e7cb85e9dca23f1599ee37d17a7", "patch": "@@ -6,4 +6,4 @@\n #include \"clastb_2.c\"\n \n /* { dg-final { scan-tree-dump \"operating on partial vectors.\" \"vect\" } } */\n-/* { dg-final { scan-assembler {\\tclastb\\tw[0-9]+, p[0-7], w[0-9]+, z[0-9]+\\.h} } } */\n+/* { dg-final { scan-assembler {\\tclastb\\th[0-9]+, p[0-7], h[0-9]+, z[0-9]+\\.h} } } */"}]}