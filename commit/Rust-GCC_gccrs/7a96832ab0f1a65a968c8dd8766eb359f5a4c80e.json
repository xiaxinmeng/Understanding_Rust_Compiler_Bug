{"sha": "7a96832ab0f1a65a968c8dd8766eb359f5a4c80e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5NjgzMmFiMGYxYTY1YTk2OGM4ZGQ4NzY2ZWIzNTlmNWE0YzgwZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-25T11:52:06Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-02-25T11:52:06Z"}, "message": "Remove unneeded tests on HOST_BITS_PER_INT from some extra conditions.\n\nUse low_32_bit_operand for (plus:DI (zero_extend:DI ..) ..) cases.\n\nFrom-SVN: r9080", "tree": {"sha": "1f3ed81a0c1900973bc3584258967f4139f374e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f3ed81a0c1900973bc3584258967f4139f374e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a96832ab0f1a65a968c8dd8766eb359f5a4c80e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a96832ab0f1a65a968c8dd8766eb359f5a4c80e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a96832ab0f1a65a968c8dd8766eb359f5a4c80e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a96832ab0f1a65a968c8dd8766eb359f5a4c80e/comments", "author": null, "committer": null, "parents": [{"sha": "1c71b69da60e8416fb9ea7f6ac08d316090e681d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c71b69da60e8416fb9ea7f6ac08d316090e681d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c71b69da60e8416fb9ea7f6ac08d316090e681d"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "0c0b223f7da5154b2e09de8ac2b9d73b2eaa59f9", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a96832ab0f1a65a968c8dd8766eb359f5a4c80e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a96832ab0f1a65a968c8dd8766eb359f5a4c80e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=7a96832ab0f1a65a968c8dd8766eb359f5a4c80e", "patch": "@@ -3135,7 +3135,7 @@\n    (set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n \t(minus:DF (subreg:DF (match_dup 2) 0)\n \t\t  (match_dup 5)))]\n-  \"! TARGET_POWERPC64 && (HOST_BITS_PER_INT == BITS_PER_WORD) && TARGET_HARD_FLOAT\"\n+  \"! TARGET_POWERPC64\"\n   \"\n {\n   operands[2] = gen_reg_rtx (DImode);\n@@ -3152,7 +3152,7 @@\n    (set (match_operand:DF 0 \"gpc_reg_operand\" \"\")\n \t(minus:DF (subreg:DF (match_dup 2) 0)\n \t\t  (match_dup 4)))]\n-  \"! TARGET_POWERPC64 && (HOST_BITS_PER_INT == BITS_PER_WORD) && TARGET_HARD_FLOAT\"\n+  \"! TARGET_POWERPC64\"\n   \"\n {\n   operands[2] = gen_reg_rtx (DImode);\n@@ -3166,10 +3166,8 @@\n \t(plus:DI (zero_extend:DI\n \t\t  (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n \t\t\t  (match_operand:SI 2 \"logical_operand\" \"\")))\n-\t\t (match_operand:DI 3 \"immediate_operand\" \"\")))]\n-  \"reload_completed && HOST_BITS_PER_INT == BITS_PER_WORD\n-   && GET_CODE (operands[3]) == CONST_DOUBLE\n-   && CONST_DOUBLE_LOW (operands[3]) == 0\"\n+\t\t (match_operand:DI 3 \"low_32_bit_operand\" \"\")))]\n+  \"reload_completed\"\n   [(set (match_dup 6) (xor:SI (match_dup 1) (match_dup 2)))\n    (set (match_dup 4) (match_dup 5))]\n   \"\n@@ -3183,20 +3181,16 @@\n \t(plus:DI (zero_extend:DI\n \t\t  (xor:SI (match_operand:SI 1 \"gpc_reg_operand\" \"%r\")\n \t\t\t  (match_operand:SI 2 \"logical_operand\" \"rKJ\")))\n-\t\t (match_operand:DI 3 \"immediate_operand\" \"n\")))]\n-  \"HOST_BITS_PER_INT == BITS_PER_WORD\n-   && GET_CODE (operands[3]) == CONST_DOUBLE\n-   && CONST_DOUBLE_LOW (operands[3]) == 0\"\n+\t\t (match_operand:DI 3 \"low_32_bit_operand\" \"n\")))]\n+  \"\"\n   \"#\"\n   [(set_attr \"length\" \"8\")])\n   \n (define_split\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=\")\n \t(plus:DI (zero_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"\"))\n-\t\t (match_operand:DI 2 \"immediate_operand\" \"\")))]\n-  \"reload_completed && HOST_BITS_PER_INT == BITS_PER_WORD\n-   && GET_CODE (operands[2]) == CONST_DOUBLE\n-   && CONST_DOUBLE_LOW (operands[2]) == 0\"\n+\t\t (match_operand:DI 2 \"low_32_bit_operand\" \"\")))]\n+  \"reload_completed\"\n   [(set (match_dup 3) (match_dup 4))\n    (set (match_dup 5) (match_dup 1))]\n   \"\n@@ -3222,10 +3216,8 @@\n (define_insn \"\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(plus:DI (zero_extend:DI (match_operand:SI 1 \"gpc_reg_operand\" \"r\"))\n-\t\t (match_operand:DI 2 \"immediate_operand\" \"n\")))]\n-  \"HOST_BITS_PER_INT == BITS_PER_WORD\n-   && GET_CODE (operands[2]) == CONST_DOUBLE\n-   && CONST_DOUBLE_LOW (operands[2]) == 0\"\n+\t\t (match_operand:DI 2 \"low_32_bit_operand\" \"n\")))]\n+  \"\"\n   \"#\"\n   [(set_attr \"length\" \"8\")])\n "}]}