{"sha": "ef171ead7c05e42837f8d69289d57d42a7222c31", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWYxNzFlYWQ3YzA1ZTQyODM3ZjhkNjkyODlkNTdkNDJhNzIyMmMzMQ==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-07-06T13:39:46Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2002-07-06T13:39:46Z"}, "message": "toplev.c (set_fast_math_flags): Don't use ISO C style function definitions.\n\n\t* toplev.c (set_fast_math_flags): Don't use ISO C style function\n\tdefinitions.\n\t* gengtype.c (open_base_files): Likewise.\n\t(close_output_files): Likewise.\n\t* tracer.c (find_best_predecessor): Likewise.\n\t(find_best_successor): Likewise.\n\t(ignore_bb_p): Likewise.\n\nFrom-SVN: r55286", "tree": {"sha": "a66f8e0a3431cadcb145609040b3740eb8aecd35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a66f8e0a3431cadcb145609040b3740eb8aecd35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef171ead7c05e42837f8d69289d57d42a7222c31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef171ead7c05e42837f8d69289d57d42a7222c31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef171ead7c05e42837f8d69289d57d42a7222c31", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef171ead7c05e42837f8d69289d57d42a7222c31/comments", "author": null, "committer": null, "parents": [{"sha": "6ab5f795987a8c42e4e6e857a26a61a267c9f12e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ab5f795987a8c42e4e6e857a26a61a267c9f12e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ab5f795987a8c42e4e6e857a26a61a267c9f12e"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "b52d4a88d6ae9f76e74b767e73eaf6d042000ae6", "filename": "gcc/gengtype.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef171ead7c05e42837f8d69289d57d42a7222c31/gcc%2Fgengtype.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef171ead7c05e42837f8d69289d57d42a7222c31/gcc%2Fgengtype.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype.c?ref=ef171ead7c05e42837f8d69289d57d42a7222c31", "patch": "@@ -25,6 +25,10 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n /* Nonzero iff an error has occurred.  */\n static int hit_error = 0;\n \n+static void open_base_files PARAMS ((void));\n+static void close_output_files PARAMS ((void));\n+\n+\n /* Report an error at POS, printing MSG.  */\n \n void\n@@ -607,7 +611,7 @@ oprintf VPARAMS ((outf_p o, const char *format, ...))\n /* Open the global header file and the language-specific header files.  */\n \n static void\n-open_base_files (void)\n+open_base_files ()\n {\n   size_t i;\n   \n@@ -795,7 +799,7 @@ get_output_file_name (input_file)\n    but don't unnecessarily change modification times.  */\n \n static void\n-close_output_files PARAMS ((void))\n+close_output_files ()\n {\n   outf_p of;\n   "}, {"sha": "0c2fd7cff7d25cff017c9d18d6981ae56ce70755", "filename": "gcc/toplev.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef171ead7c05e42837f8d69289d57d42a7222c31/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef171ead7c05e42837f8d69289d57d42a7222c31/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=ef171ead7c05e42837f8d69289d57d42a7222c31", "patch": "@@ -1549,7 +1549,8 @@ set_Wunused (setting)\n    -ffast-math and -fno-fast-math imply.  */\n \n void\n-set_fast_math_flags (int set)\n+set_fast_math_flags (set)\n+     int set;\n {\n   flag_trapping_math = !set;\n   flag_unsafe_math_optimizations = set;"}, {"sha": "c0fbe21ad84a1cdb739cceadf26e194363b74c2e", "filename": "gcc/tracer.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef171ead7c05e42837f8d69289d57d42a7222c31/gcc%2Ftracer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef171ead7c05e42837f8d69289d57d42a7222c31/gcc%2Ftracer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftracer.c?ref=ef171ead7c05e42837f8d69289d57d42a7222c31", "patch": "@@ -1,6 +1,6 @@\n /* The tracer pass for the GNU compiler.\n    Contributed by Jan Hubicka, SuSE Labs.\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2002 Free Software Foundation, Inc.\n \n    This file is part of GCC.\n \n@@ -49,6 +49,8 @@\n static int count_insns\t\tPARAMS ((basic_block));\n static bool ignore_bb_p\t\tPARAMS ((basic_block));\n static bool better_p\t\tPARAMS ((edge, edge));\n+static edge find_best_successor PARAMS ((basic_block));\n+static edge find_best_predecessor PARAMS ((basic_block));\n static int find_trace\t\tPARAMS ((basic_block, basic_block *));\n static void tail_duplicate\tPARAMS ((void));\n static void layout_superblocks\tPARAMS ((void));\n@@ -65,7 +67,8 @@ static int branch_ratio_cutoff;\n \n /* Return true if we should ignore the basic block for purposes of tracing. */\n static bool\n-ignore_bb_p (basic_block bb)\n+ignore_bb_p (bb)\n+     basic_block bb;\n {\n   if (bb->index < 0)\n     return true;\n@@ -110,7 +113,8 @@ better_p (e1, e2)\n /* Return most frequent successor of basic block BB.  */\n \n static edge\n-find_best_successor (basic_block bb)\n+find_best_successor (bb)\n+     basic_block bb;\n {\n   edge e;\n   edge best = NULL;\n@@ -128,7 +132,8 @@ find_best_successor (basic_block bb)\n /* Return most frequent predecessor of basic block BB.  */\n \n static edge\n-find_best_predecessor (basic_block bb)\n+find_best_predecessor (bb)\n+     basic_block bb;\n {\n   edge e;\n   edge best = NULL;"}]}