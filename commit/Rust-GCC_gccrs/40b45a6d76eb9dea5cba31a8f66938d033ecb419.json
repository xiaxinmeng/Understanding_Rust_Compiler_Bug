{"sha": "40b45a6d76eb9dea5cba31a8f66938d033ecb419", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDBiNDVhNmQ3NmViOWRlYTVjYmEzMWE4ZjY2OTM4ZDAzM2VjYjQxOQ==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2013-06-25T00:08:47Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2013-06-25T00:08:47Z"}, "message": "ffi.c (ffi_prep_args_SYSV): Move var declaration before statements.\n\n\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Move var declaration\n\tbefore statements.\n\t(ffi_prep_args64): Support little-endian.\n\t(ffi_closure_helper_SYSV, ffi_closure_helper_LINUX64): Likewise.\n\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Likewise.\n\t* src/powerpc/ppc_closure.S (ffi_closure_SYSV): Likewise.\n\nFrom-SVN: r200383", "tree": {"sha": "3443d70ab47d0f95befa62099396c38ead325603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3443d70ab47d0f95befa62099396c38ead325603"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/40b45a6d76eb9dea5cba31a8f66938d033ecb419", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b45a6d76eb9dea5cba31a8f66938d033ecb419", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40b45a6d76eb9dea5cba31a8f66938d033ecb419", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40b45a6d76eb9dea5cba31a8f66938d033ecb419/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe7144f48ef0d536710a6a30ad4efb6e7b8f73ad"}], "stats": {"total": 100, "additions": 93, "deletions": 7}, "files": [{"sha": "77a949d13e541961d5e0dc178d8e5491a86e7f32", "filename": "libffi/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b45a6d76eb9dea5cba31a8f66938d033ecb419/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b45a6d76eb9dea5cba31a8f66938d033ecb419/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=40b45a6d76eb9dea5cba31a8f66938d033ecb419", "patch": "@@ -1,3 +1,12 @@\n+2013-06-25  Alan Modra  <amodra@gmail.com>\n+\n+\t* src/powerpc/ffi.c (ffi_prep_args_SYSV): Move var declaration\n+\tbefore statements.\n+\t(ffi_prep_args64): Support little-endian.\n+\t(ffi_closure_helper_SYSV, ffi_closure_helper_LINUX64): Likewise.\n+\t* src/powerpc/linux64_closure.S (ffi_closure_LINUX64): Likewise.\n+\t* src/powerpc/ppc_closure.S (ffi_closure_SYSV): Likewise.\n+\n 2013-05-22  Dominique d'Humieres  <dominiq@lps.ens.fr>\n \t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n "}, {"sha": "26f7cf19b064b212e7f569872c56b71b70765c4f", "filename": "libffi/src/powerpc/ffi.c", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b45a6d76eb9dea5cba31a8f66938d033ecb419/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b45a6d76eb9dea5cba31a8f66938d033ecb419/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=40b45a6d76eb9dea5cba31a8f66938d033ecb419", "patch": "@@ -127,6 +127,9 @@ ffi_prep_args_SYSV (extended_cif *ecif, unsigned *const stack)\n \n   int i;\n   ffi_type **ptr;\n+#ifndef __NO_FPRS__\n+  double double_tmp;\n+#endif\n   union {\n     void **v;\n     char **c;\n@@ -146,7 +149,6 @@ ffi_prep_args_SYSV (extended_cif *ecif, unsigned *const stack)\n   gpr_base.u = stacktop.u - ASM_NEEDS_REGISTERS - NUM_GPR_ARG_REGISTERS;\n   intarg_count = 0;\n #ifndef __NO_FPRS__\n-  double double_tmp;\n   fpr_base.d = gpr_base.d - NUM_FPR_ARG_REGISTERS;\n   fparg_count = 0;\n   copy_space.c = ((flags & FLAG_FP_ARGUMENTS) ? fpr_base.c : gpr_base.c);\n@@ -542,11 +544,12 @@ ffi_prep_args64 (extended_cif *ecif, unsigned long *const stack)\n \t    {\n \t      char *where = next_arg.c;\n \n+#ifndef __LITTLE_ENDIAN__\n \t      /* Structures with size less than eight bytes are passed\n \t\t left-padded.  */\n \t      if ((*ptr)->size < 8)\n \t\twhere += 8 - (*ptr)->size;\n-\n+#endif\n \t      memcpy (where, *p_argv.c, (*ptr)->size);\n \t      next_arg.ul += words;\n \t      if (next_arg.ul == gpr_end.ul)\n@@ -1208,6 +1211,7 @@ ffi_closure_helper_SYSV (ffi_closure *closure, void *rvalue,\n \n \tcase FFI_TYPE_SINT8:\n \tcase FFI_TYPE_UINT8:\n+#ifndef __LITTLE_ENDIAN__\n \t  /* there are 8 gpr registers used to pass values */\n \t  if (ng < 8)\n \t    {\n@@ -1221,9 +1225,10 @@ ffi_closure_helper_SYSV (ffi_closure *closure, void *rvalue,\n \t      pst++;\n \t    }\n \t  break;\n-\n+#endif\n \tcase FFI_TYPE_SINT16:\n \tcase FFI_TYPE_UINT16:\n+#ifndef __LITTLE_ENDIAN__\n \t  /* there are 8 gpr registers used to pass values */\n \t  if (ng < 8)\n \t    {\n@@ -1237,7 +1242,7 @@ ffi_closure_helper_SYSV (ffi_closure *closure, void *rvalue,\n \t      pst++;\n \t    }\n \t  break;\n-\n+#endif\n \tcase FFI_TYPE_SINT32:\n \tcase FFI_TYPE_UINT32:\n \tcase FFI_TYPE_POINTER:\n@@ -1367,22 +1372,25 @@ ffi_closure_helper_LINUX64 (ffi_closure *closure, void *rvalue,\n \t{\n \tcase FFI_TYPE_SINT8:\n \tcase FFI_TYPE_UINT8:\n+#ifndef __LITTLE_ENDIAN__\n \t  avalue[i] = (char *) pst + 7;\n \t  pst++;\n \t  break;\n-\n+#endif\n \tcase FFI_TYPE_SINT16:\n \tcase FFI_TYPE_UINT16:\n+#ifndef __LITTLE_ENDIAN__\n \t  avalue[i] = (char *) pst + 6;\n \t  pst++;\n \t  break;\n-\n+#endif\n \tcase FFI_TYPE_SINT32:\n \tcase FFI_TYPE_UINT32:\n+#ifndef __LITTLE_ENDIAN__\n \t  avalue[i] = (char *) pst + 4;\n \t  pst++;\n \t  break;\n-\n+#endif\n \tcase FFI_TYPE_SINT64:\n \tcase FFI_TYPE_UINT64:\n \tcase FFI_TYPE_POINTER:\n@@ -1391,11 +1399,13 @@ ffi_closure_helper_LINUX64 (ffi_closure *closure, void *rvalue,\n \t  break;\n \n \tcase FFI_TYPE_STRUCT:\n+#ifndef __LITTLE_ENDIAN__\n \t  /* Structures with size less than eight bytes are passed\n \t     left-padded.  */\n \t  if (arg_types[i]->size < 8)\n \t    avalue[i] = (char *) pst + 8 - arg_types[i]->size;\n \t  else\n+#endif\n \t    avalue[i] = pst;\n \t  pst += (arg_types[i]->size + 7) / 8;\n \t  break;"}, {"sha": "ac4a226ac50ad5806889bb84582d085ac65a7596", "filename": "libffi/src/powerpc/linux64_closure.S", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b45a6d76eb9dea5cba31a8f66938d033ecb419/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b45a6d76eb9dea5cba31a8f66938d033ecb419/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S?ref=40b45a6d76eb9dea5cba31a8f66938d033ecb419", "patch": "@@ -132,7 +132,11 @@ ffi_closure_LINUX64:\n \tblr\n \tnop\n # case FFI_TYPE_INT\n+#ifdef __LITTLE_ENDIAN__\n+\tlwa %r3, 112+0(%r1)\n+#else\n \tlwa %r3, 112+4(%r1)\n+#endif\n \tmtlr %r0\n \taddi %r1, %r1, 240\n \tblr\n@@ -152,33 +156,57 @@ ffi_closure_LINUX64:\n \tlfd %f2, 112+8(%r1)\n \tb .Lfinish\n # case FFI_TYPE_UINT8\n+#ifdef __LITTLE_ENDIAN__\n+\tlbz %r3, 112+0(%r1)\n+#else\n \tlbz %r3, 112+7(%r1)\n+#endif\n \tmtlr %r0\n \taddi %r1, %r1, 240\n \tblr\n # case FFI_TYPE_SINT8\n+#ifdef __LITTLE_ENDIAN__\n+\tlbz %r3, 112+0(%r1)\n+#else\n \tlbz %r3, 112+7(%r1)\n+#endif\n \textsb %r3,%r3\n \tmtlr %r0\n \tb .Lfinish\n # case FFI_TYPE_UINT16\n+#ifdef __LITTLE_ENDIAN__\n+\tlhz %r3, 112+0(%r1)\n+#else\n \tlhz %r3, 112+6(%r1)\n+#endif\n \tmtlr %r0\n .Lfinish:\n \taddi %r1, %r1, 240\n \tblr\n # case FFI_TYPE_SINT16\n+#ifdef __LITTLE_ENDIAN__\n+\tlha %r3, 112+0(%r1)\n+#else\n \tlha %r3, 112+6(%r1)\n+#endif\n \tmtlr %r0\n \taddi %r1, %r1, 240\n \tblr\n # case FFI_TYPE_UINT32\n+#ifdef __LITTLE_ENDIAN__\n+\tlwz %r3, 112+0(%r1)\n+#else\n \tlwz %r3, 112+4(%r1)\n+#endif\n \tmtlr %r0\n \taddi %r1, %r1, 240\n \tblr\n # case FFI_TYPE_SINT32\n+#ifdef __LITTLE_ENDIAN__\n+\tlwa %r3, 112+0(%r1)\n+#else\n \tlwa %r3, 112+4(%r1)\n+#endif\n \tmtlr %r0\n \taddi %r1, %r1, 240\n \tblr"}, {"sha": "e160006426ebdfeff4515903dc2cfb45649f1588", "filename": "libffi/src/powerpc/ppc_closure.S", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/40b45a6d76eb9dea5cba31a8f66938d033ecb419/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/40b45a6d76eb9dea5cba31a8f66938d033ecb419/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S?ref=40b45a6d76eb9dea5cba31a8f66938d033ecb419", "patch": "@@ -159,25 +159,41 @@ ENTRY(ffi_closure_SYSV)\n #endif\n \n # case FFI_TYPE_UINT8\n+#ifdef __LITTLE_ENDIAN__\n+\tlbz %r3,112+0(%r1)\n+#else\n \tlbz %r3,112+3(%r1)\n+#endif\n \tmtlr %r0\n \taddi %r1,%r1,144\n \tblr\n \n # case FFI_TYPE_SINT8\n+#ifdef __LITTLE_ENDIAN__\n+\tlbz %r3,112+0(%r1)\n+#else\n \tlbz %r3,112+3(%r1)\n+#endif\n \textsb %r3,%r3\n \tmtlr %r0\n \tb .Lfinish\n \n # case FFI_TYPE_UINT16\n+#ifdef __LITTLE_ENDIAN__\n+\tlhz %r3,112+0(%r1)\n+#else\n \tlhz %r3,112+2(%r1)\n+#endif\n \tmtlr %r0\n \taddi %r1,%r1,144\n \tblr\n \n # case FFI_TYPE_SINT16\n+#ifdef __LITTLE_ENDIAN__\n+\tlha %r3,112+0(%r1)\n+#else\n \tlha %r3,112+2(%r1)\n+#endif\n \tmtlr %r0\n \taddi %r1,%r1,144\n \tblr\n@@ -239,9 +255,15 @@ ENTRY(ffi_closure_SYSV)\n \n # case FFI_SYSV_TYPE_SMALL_STRUCT + 3. Three byte struct.\n \tlwz %r3,112+0(%r1)\n+#ifdef __LITTLE_ENDIAN__\n+\tmtlr %r0\n+\taddi %r1,%r1,144\n+\tblr\n+#else\n \tsrwi %r3,%r3,8\n \tmtlr %r0\n \tb .Lfinish\n+#endif\n \n # case FFI_SYSV_TYPE_SMALL_STRUCT + 4. Four byte struct.\n \tlwz %r3,112+0(%r1)\n@@ -252,27 +274,43 @@ ENTRY(ffi_closure_SYSV)\n # case FFI_SYSV_TYPE_SMALL_STRUCT + 5. Five byte struct.\n \tlwz %r3,112+0(%r1)\n \tlwz %r4,112+4(%r1)\n+#ifdef __LITTLE_ENDIAN__\n+\tmtlr %r0\n+\tb .Lfinish\n+#else\n \tli %r5,24\n \tb .Lstruct567\n+#endif\n \n # case FFI_SYSV_TYPE_SMALL_STRUCT + 6. Six byte struct.\n \tlwz %r3,112+0(%r1)\n \tlwz %r4,112+4(%r1)\n+#ifdef __LITTLE_ENDIAN__\n+\tmtlr %r0\n+\tb .Lfinish\n+#else\n \tli %r5,16\n \tb .Lstruct567\n+#endif\n \n # case FFI_SYSV_TYPE_SMALL_STRUCT + 7. Seven byte struct.\n \tlwz %r3,112+0(%r1)\n \tlwz %r4,112+4(%r1)\n+#ifdef __LITTLE_ENDIAN__\n+\tmtlr %r0\n+\tb .Lfinish\n+#else\n \tli %r5,8\n \tb .Lstruct567\n+#endif\n \n # case FFI_SYSV_TYPE_SMALL_STRUCT + 8. Eight byte struct.\n \tlwz %r3,112+0(%r1)\n \tlwz %r4,112+4(%r1)\n \tmtlr %r0\n \tb .Lfinish\n \n+#ifndef __LITTLE_ENDIAN__\n .Lstruct567:\n \tsubfic %r6,%r5,32\n \tsrw %r4,%r4,%r5\n@@ -282,6 +320,7 @@ ENTRY(ffi_closure_SYSV)\n \tmtlr %r0\n \taddi %r1,%r1,144\n \tblr\n+#endif\n \n .Luint128:\n \tlwz %r6,112+12(%r1)"}]}