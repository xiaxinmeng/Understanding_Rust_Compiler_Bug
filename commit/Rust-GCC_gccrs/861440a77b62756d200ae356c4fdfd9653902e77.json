{"sha": "861440a77b62756d200ae356c4fdfd9653902e77", "node_id": "C_kwDOANBUbNoAKDg2MTQ0MGE3N2I2Mjc1NmQyMDBhZTM1NmM0ZmRmZDk2NTM5MDJlNzc", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-19T21:54:24Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2021-10-19T21:54:24Z"}, "message": "libstdc++: Implement LWG 3523 changes to ranges::iota_view\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (iota_view::_Iterator): Befriend iota_view.\n\t(iota_view::_Sentinel): Likewise.\n\t(iota_view::iota_view): Add three overloads, each taking an\n\titerator/sentinel pair as per LWG 3523.\n\t* testsuite/std/ranges/iota/iota_view.cc (test06): New test.", "tree": {"sha": "d0cbdeb09d8181a68050afbf2a9126e1e9618545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0cbdeb09d8181a68050afbf2a9126e1e9618545"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/861440a77b62756d200ae356c4fdfd9653902e77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861440a77b62756d200ae356c4fdfd9653902e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/861440a77b62756d200ae356c4fdfd9653902e77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/861440a77b62756d200ae356c4fdfd9653902e77/comments", "author": null, "committer": null, "parents": [{"sha": "53b1c382d5a6fe8dec394a7ff820d77cda02af81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53b1c382d5a6fe8dec394a7ff820d77cda02af81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53b1c382d5a6fe8dec394a7ff820d77cda02af81"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "dc1fb7117c14e19aae3f378f789987f523c8d83c", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861440a77b62756d200ae356c4fdfd9653902e77/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861440a77b62756d200ae356c4fdfd9653902e77/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=861440a77b62756d200ae356c4fdfd9653902e77", "patch": "@@ -532,6 +532,7 @@ namespace ranges\n       private:\n \t_Winc _M_value = _Winc();\n \n+\tfriend iota_view;\n         friend _Sentinel;\n       };\n \n@@ -568,6 +569,8 @@ namespace ranges\n \toperator-(const _Sentinel& __x, const _Iterator& __y)\n \t  requires sized_sentinel_for<_Bound, _Winc>\n \t{ return __x._M_distance_from(__y); }\n+\n+\tfriend iota_view;\n       };\n \n       _Winc _M_value = _Winc();\n@@ -590,6 +593,24 @@ namespace ranges\n \t  __glibcxx_assert( bool(__value <= __bound) );\n       }\n \n+      constexpr\n+      iota_view(_Iterator __first, _Iterator __last)\n+\trequires same_as<_Winc, _Bound>\n+\t: iota_view(__first._M_value, __last._M_value)\n+      { }\n+\n+      constexpr\n+      iota_view(_Iterator __first, unreachable_sentinel_t __last)\n+\trequires same_as<_Bound, unreachable_sentinel_t>\n+\t: iota_view(__first._M_value, __last)\n+      { }\n+\n+      constexpr\n+      iota_view(_Iterator __first, _Sentinel __last)\n+\trequires (!same_as<_Winc, _Bound>) && (!same_as<_Bound, unreachable_sentinel_t>)\n+\t: iota_view(__first._M_value, __last._M_bound)\n+      { }\n+\n       constexpr _Iterator\n       begin() const { return _Iterator{_M_value}; }\n "}, {"sha": "5bebe4be693ec8af1eade2c6e1469749fa439319", "filename": "libstdc++-v3/testsuite/std/ranges/iota/iota_view.cc", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/861440a77b62756d200ae356c4fdfd9653902e77/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fiota%2Fiota_view.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/861440a77b62756d200ae356c4fdfd9653902e77/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fiota%2Fiota_view.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Franges%2Fiota%2Fiota_view.cc?ref=861440a77b62756d200ae356c4fdfd9653902e77", "patch": "@@ -18,6 +18,7 @@\n // { dg-options \"-std=gnu++2a\" }\n // { dg-do run { target c++2a } }\n \n+#include <algorithm>\n #include <ranges>\n #include <testsuite_hooks.h>\n \n@@ -90,6 +91,25 @@ test05()\n   VERIFY( r.begin() - r.end() == -3 );\n }\n \n+void\n+test06()\n+{\n+  // Verify LWG 3523 changes.\n+  auto v1 = std::views::iota(0, 5);\n+  auto w1 = decltype(v1)(v1.begin(), v1.end());\n+  VERIFY( std::ranges::equal(v1, w1) );\n+\n+  auto v2 = std::views::iota(0);\n+  auto w2 = decltype(v2)(v2.begin(), v2.end());\n+  static_assert(std::same_as<decltype(w2.end()), std::unreachable_sentinel_t>);\n+  VERIFY( *w2.begin() == 0 );\n+\n+  auto v3 = std::views::iota(0, 5l);\n+  auto w3 = decltype(v3)(v3.begin(), v3.end());\n+  static_assert(!std::ranges::common_range<decltype(w3)>);\n+  VERIFY( std::ranges::equal(v3, w3) );\n+}\n+\n int\n main()\n {\n@@ -98,4 +118,5 @@ main()\n   test03();\n   test04();\n   test05();\n+  test06();\n }"}]}