{"sha": "9e0881604966a3cdc06db1b06630b0ce2fd5da2e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUwODgxNjA0OTY2YTNjZGMwNmRiMWIwNjYzMGIwY2UyZmQ1ZGEyZQ==", "commit": {"author": {"name": "David Daney", "email": "ddaney@avtrex.com", "date": "2006-11-20T19:49:08Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2006-11-20T19:49:08Z"}, "message": "mips-signal.h (sys/syscall.h): Do not include.\n\n2006-11-20  David Daney  <ddaney@avtrex.com>\n\n\t* include/mips-signal.h (sys/syscall.h): Do not include.\n\t(sig_ucontext_t): Removed.\n\t(MAKE_THROW_FRAME): Changed to be a nop.\n\t(_INIT_SIG_HANDLER): New macro.\n\t(INIT_SEGV): Rewrote to use _INIT_SIG_HANDLER.\n\t(INIT_FPE): Same.\n\n2006-11-20  David Daney  <ddaney@avtrex.com>\n\n\t* config/mips/linux-unwind.h (mips_fallback_frame_state): Adjust\n\tPC to point to following instruction.\n\nFrom-SVN: r119024", "tree": {"sha": "0b8b10e14ec8c024d773738fd4cddb0142e18a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b8b10e14ec8c024d773738fd4cddb0142e18a7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e0881604966a3cdc06db1b06630b0ce2fd5da2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e0881604966a3cdc06db1b06630b0ce2fd5da2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e0881604966a3cdc06db1b06630b0ce2fd5da2e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/comments", "author": null, "committer": null, "parents": [{"sha": "e9057fe4ee3c43a4f89d75dd104230f46103c1a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9057fe4ee3c43a4f89d75dd104230f46103c1a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9057fe4ee3c43a4f89d75dd104230f46103c1a6"}], "stats": {"total": 71, "additions": 28, "deletions": 43}, "files": [{"sha": "b9c855892265af02444351235c191339cc676825", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e0881604966a3cdc06db1b06630b0ce2fd5da2e", "patch": "@@ -1,3 +1,8 @@\n+2006-11-20  David Daney  <ddaney@avtrex.com>\n+\n+\t* config/mips/linux-unwind.h (mips_fallback_frame_state): Adjust\n+\tPC to point to following instruction.\n+\n 2006-11-20  Anatoly Sokolov <aesok@post.ru>\n \n \tPR target/18553"}, {"sha": "e10fc7698302e20a3114506d0094d8503da2dcdb", "filename": "gcc/config/mips/linux-unwind.h", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/gcc%2Fconfig%2Fmips%2Flinux-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/gcc%2Fconfig%2Fmips%2Flinux-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux-unwind.h?ref=9e0881604966a3cdc06db1b06630b0ce2fd5da2e", "patch": "@@ -1,5 +1,5 @@\n /* DWARF2 EH unwinding support for MIPS Linux.\n-   Copyright (C) 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2006 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -51,6 +51,7 @@ mips_fallback_frame_state (struct _Unwind_Context *context,\n \t\t\t   _Unwind_FrameState *fs)\n {\n   u_int32_t *pc = (u_int32_t *) context->ra;\n+  u_int32_t t;\n   struct sigcontext *sc;\n   _Unwind_Ptr new_cfa;\n   int i;\n@@ -102,9 +103,13 @@ mips_fallback_frame_state (struct _Unwind_Context *context,\n     fs->regs.reg[i].loc.offset\n       = (_Unwind_Ptr)&(sc->sc_regs[i]) - new_cfa;\n   }\n-  fs->regs.reg[SIGNAL_UNWIND_RETURN_COLUMN].how = REG_SAVED_OFFSET;\n+  /* The PC points to the faulting instruction, but the unwind tables\n+     expect it point to the following instruction.  We compensate by\n+     reporting a return address at the next instruction. */\n+  fs->regs.reg[SIGNAL_UNWIND_RETURN_COLUMN].how = REG_SAVED_VAL_OFFSET;\n+  t = (*(u_int32_t *)(void *)&sc->sc_pc) + 4;\n   fs->regs.reg[SIGNAL_UNWIND_RETURN_COLUMN].loc.offset\n-    = (_Unwind_Ptr)&(sc->sc_pc) - new_cfa;\n+    = (_Unwind_Ptr)t - new_cfa;\n   fs->retaddr_column = SIGNAL_UNWIND_RETURN_COLUMN;\n \n   return _URC_NO_REASON;"}, {"sha": "b768bf9e1f918fa5050b1740450a36a9391c9957", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9e0881604966a3cdc06db1b06630b0ce2fd5da2e", "patch": "@@ -1,3 +1,12 @@\n+2006-11-20  David Daney  <ddaney@avtrex.com>\n+\n+\t* include/mips-signal.h (sys/syscall.h): Do not include.\n+\t(sig_ucontext_t): Removed.\n+\t(MAKE_THROW_FRAME): Changed to be a nop.\n+\t(_INIT_SIG_HANDLER): New macro.\n+\t(INIT_SEGV): Rewrote to use _INIT_SIG_HANDLER.\n+\t(INIT_FPE): Same.\n+\n 2006-11-20  David Daney  <ddaney@avtrex.com>\n \n \t* testsuite/libjava.lang/Throw_3.java: New Test."}, {"sha": "478e3a4e23c8ce4df942ec04e8d038792d161912", "filename": "libjava/include/mips-signal.h", "status": "modified", "additions": 6, "deletions": 40, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/libjava%2Finclude%2Fmips-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e0881604966a3cdc06db1b06630b0ce2fd5da2e/libjava%2Finclude%2Fmips-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fmips-signal.h?ref=9e0881604966a3cdc06db1b06630b0ce2fd5da2e", "patch": "@@ -18,65 +18,31 @@ details.  */\n \n #include <signal.h>\n #include <unistd.h>\n-#include <sys/syscall.h>\n-/* #include <asm/ucontext.h> structures we use are here but clash with\n-   sys/ucontext.h included by java-signal.h from prims.cc */\n \n #define HANDLE_SEGV 1\n #define HANDLE_FPE 1\n \n-/* The third parameter to the signal handler points to something with\n- * this structure defined in asm/ucontext.h, but the name clashes with\n- * struct ucontext from sys/ucontext.h so this private copy is used. */\n-typedef struct _sig_ucontext {\n-    unsigned long\t  uc_flags;\n-    struct _sig_ucontext  *uc_link;\n-    stack_t\t\t  uc_stack;\n-    struct sigcontext uc_mcontext;\n-    sigset_t\t  uc_sigmask;\n-} sig_ucontext_t;\n-\n #define SIGNAL_HANDLER(_name) \\\n static void _name (int _dummy __attribute__ ((__unused__)), \\\n \t\t   siginfo_t *_info __attribute__ ((__unused__)), \\\n \t\t   void *_arg __attribute__ ((__unused__)))\n \n-/*\n- *  MIPS leaves pc pointing at the faulting instruction, but the\n- *  unwinder expects it to point to the following instruction\n- */\n-\n-#define MAKE_THROW_FRAME(_exception) \\\n-do                                   \\\n-{                                    \\\n-  ((sig_ucontext_t *)_arg)->uc_mcontext.sc_pc += 4;      \\\n-  (void)_dummy;                      \\\n-  (void)_info;                       \\\n-}                                    \\\n-while (0)\n+#define MAKE_THROW_FRAME(_exception)\n \n-#define INIT_SEGV                            \\\n+#define _INIT_SIG_HANDLER(_SIG, _ACTION)     \\\n do                                           \\\n   {                                          \\\n     struct sigaction act;                    \\\n-    act.sa_sigaction = catch_segv;           \\\n+    act.sa_sigaction = _ACTION;              \\\n     act.sa_flags = SA_SIGINFO | SA_NODEFER;  \\\n     sigemptyset (&act.sa_mask);              \\\n-    sigaction(SIGSEGV, &act, NULL);          \\\n+    sigaction(_SIG, &act, NULL);             \\\n   }                                          \\\n while (0)\n \n-#define INIT_FPE                             \\\n-do                                           \\\n-  {                                          \\\n-    struct sigaction act;                    \\\n-    act.sa_sigaction = catch_fpe;            \\\n-    act.sa_flags = SA_SIGINFO | SA_NODEFER;  \\\n-    sigemptyset (&act.sa_mask);              \\\n-    sigaction(SIGFPE, &act, NULL);           \\\n-  }                                          \\\n-while (0)\n+#define INIT_SEGV _INIT_SIG_HANDLER (SIGSEGV, catch_segv)\n \n+#define INIT_FPE _INIT_SIG_HANDLER (SIGFPE, catch_fpe)\n #undef HANDLE_DIVIDE_OVERFLOW\n \n #endif /* JAVA_SIGNAL_H */"}]}