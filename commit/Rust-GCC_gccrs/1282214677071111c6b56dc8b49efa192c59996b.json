{"sha": "1282214677071111c6b56dc8b49efa192c59996b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTI4MjIxNDY3NzA3MTExMWM2YjU2ZGM4YjQ5ZWZhMTkyYzU5OTk2Yg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-03-16T01:58:14Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-03-16T01:58:14Z"}, "message": "acconfig.h (HAVE_GAS_WEAK): New define.\n\n        * acconfig.h (HAVE_GAS_WEAK): New define.\n        * configure.in (assembler weak support): Check for .weak support.\n        * config.in, configure: Rebuilt.\n        * pa/som.h (MAKE_DECL_ONE_ONLY, ASM_WEAKEN_LABEL): Only define if\n        HAVE_GAS_WEAK is defined.\n\nFrom-SVN: r32573", "tree": {"sha": "5d7685a5345a40ddf4783bb2eebb76ec6cb1555e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d7685a5345a40ddf4783bb2eebb76ec6cb1555e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1282214677071111c6b56dc8b49efa192c59996b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1282214677071111c6b56dc8b49efa192c59996b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1282214677071111c6b56dc8b49efa192c59996b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1282214677071111c6b56dc8b49efa192c59996b/comments", "author": null, "committer": null, "parents": [{"sha": "2c6c322a97713bff059648c8d2bbe87c16cd6b77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c6c322a97713bff059648c8d2bbe87c16cd6b77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c6c322a97713bff059648c8d2bbe87c16cd6b77"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "c16f4b6ceb36efc591bd48237836d9a2fc059fad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -1,3 +1,11 @@\n+Wed Mar 15 15:43:38 2000  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* acconfig.h (HAVE_GAS_WEAK): New define.\n+\t* configure.in (assembler weak support): Check for .weak support.\n+\t* config.in, configure: Rebuilt.\n+\t* pa/som.h (MAKE_DECL_ONE_ONLY, ASM_WEAKEN_LABEL): Only define if\n+\tHAVE_GAS_WEAK is defined.\n+\n 2000-03-15  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/arm/arm.c (arm_output_epilogue): Do not pass %c to"}, {"sha": "b0a44d00acacf25beeb2705beb56cf0d7b6f025e", "filename": "gcc/acconfig.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Facconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Facconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facconfig.h?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -69,6 +69,9 @@\n    emitting at the beginning of your section */\n #undef HAVE_GAS_SUBSECTION_ORDERING\n \n+/* Define if your assembler supports .weak.  */\n+#undef HAVE_GAS_WEAK\n+\n /* Define if your assembler uses the old HImode fild and fist notation.  */\n #undef HAVE_GAS_FILDS_FISTS\n "}, {"sha": "879360b882f1ad810161a352ce2ce2f8b3cbf4a8", "filename": "gcc/config.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -70,6 +70,9 @@\n    emitting at the beginning of your section */\n #undef HAVE_GAS_SUBSECTION_ORDERING\n \n+/* Define if your assembler supports .weak.  */\n+#undef HAVE_GAS_WEAK\n+\n /* Define if your assembler uses the old HImode fild and fist notation.  */\n #undef HAVE_GAS_FILDS_FISTS\n "}, {"sha": "8219ca7d9fc53f0e256edf3ff0c60cb9be79c025", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -378,10 +378,12 @@ do {\t\t\t\t\t\t\\\n /* The .align directive in the HP assembler allows up to a 32 alignment.  */\n #define MAX_OFILE_ALIGNMENT 32768\n \n+#ifdef HAVE_GAS_WEAK\n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n \n /* This is how we tell the assembler that a symbol is weak.  */\n \n #define ASM_WEAKEN_LABEL(FILE,NAME) \\\n   do { fputs (\"\\t.weak\\t\", FILE); assemble_name (FILE, NAME); \\\n        fputc ('\\n', FILE); } while (0)\n+#endif"}, {"sha": "4fdd12f15af0288d5e712293b5b6da40c535c206", "filename": "gcc/configure", "status": "modified", "additions": 21, "deletions": 4, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -8891,10 +8891,27 @@ EOF\n fi\n echo \"$ac_t\"\"$gcc_cv_as_subsections\" 1>&6\n \n+echo $ac_n \"checking assembler weak support\"\"... $ac_c\" 1>&6\n+echo \"configure:8896: checking assembler weak support\" >&5\n+gcc_cv_as_weak=\n+if test x$gcc_cv_as != x; then\n+\t# Check if we have .weak\n+\techo \"\t.weak foobar\" > conftest.s\n+\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t\tcat >> confdefs.h <<\\EOF\n+#define HAVE_GAS_WEAK 1\n+EOF\n+\n+\t\tgcc_cv_as_weak=\"yes\"\n+\tfi\n+\trm -f conftest.s conftest.o conftest.nm1 conftest.nm2\n+fi\n+echo \"$ac_t\"\"$gcc_cv_as_weak\" 1>&6\n+\n case \"$target\" in \n   sparc*-*-*)\n     echo $ac_n \"checking assembler .register pseudo-op support\"\"... $ac_c\" 1>&6\n-echo \"configure:8898: checking assembler .register pseudo-op support\" >&5\n+echo \"configure:8915: checking assembler .register pseudo-op support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_register_pseudo_op'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8924,7 +8941,7 @@ EOF\n     case \"$tm_file\" in\n     *64*)\n \techo $ac_n \"checking for 64 bit support in assembler ($gcc_cv_as)\"\"... $ac_c\" 1>&6\n-echo \"configure:8928: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n+echo \"configure:8945: checking for 64 bit support in assembler ($gcc_cv_as)\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_flags64'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -8969,7 +8986,7 @@ EOF\n \n     if test \"x$gcc_cv_as_flags64\" != xno; then\n \techo $ac_n \"checking for assembler offsetable %lo() support\"\"... $ac_c\" 1>&6\n-echo \"configure:8973: checking for assembler offsetable %lo() support\" >&5\n+echo \"configure:8990: checking for assembler offsetable %lo() support\" >&5\n if eval \"test \\\"`echo '$''{'gcc_cv_as_offsetable_lo10'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n@@ -9008,7 +9025,7 @@ EOF\n \n   i[34567]86-*-*)\n     echo $ac_n \"checking assembler instructions\"\"... $ac_c\" 1>&6\n-echo \"configure:9012: checking assembler instructions\" >&5\n+echo \"configure:9029: checking assembler instructions\" >&5\n     gcc_cv_as_instructions=\n     if test x$gcc_cv_as != x; then\n \tset \"filds fists\" \"filds mem; fists mem\""}, {"sha": "75fa2e2965139cd2e65cd82377f93bd7a6d5bb49", "filename": "gcc/configure.in", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1282214677071111c6b56dc8b49efa192c59996b/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=1282214677071111c6b56dc8b49efa192c59996b", "patch": "@@ -4427,6 +4427,19 @@ EOF\n fi\n AC_MSG_RESULT($gcc_cv_as_subsections)\n \n+AC_MSG_CHECKING(assembler weak support)\n+gcc_cv_as_weak=\n+if test x$gcc_cv_as != x; then\n+\t# Check if we have .weak\n+\techo \"\t.weak foobar\" > conftest.s\n+\tif $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1; then\n+\t\tAC_DEFINE(HAVE_GAS_WEAK)\n+\t\tgcc_cv_as_weak=\"yes\"\n+\tfi\n+\trm -f conftest.s conftest.o conftest.nm1 conftest.nm2\n+fi\n+AC_MSG_RESULT($gcc_cv_as_weak)\n+\n case \"$target\" in \n   sparc*-*-*)\n     AC_CACHE_CHECK([assembler .register pseudo-op support],"}]}