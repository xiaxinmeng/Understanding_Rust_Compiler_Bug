{"sha": "c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzViNWExN2E5MjNiNjdmM2UzZTRiYmNlZjY3MGIwYjNkODYxOThhYg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-11-24T00:11:38Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-11-24T00:11:38Z"}, "message": "re PR fortran/34187 (BIND(C): Public generic with private bind(c) specific does not use bind(C) name)\n\n2007-11-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34187\n        * module.c (load_needed): Ensure binding_label is not lost.\n\n        * decl.c (set_binding_label,gfc_match_bind_c): Replace\n        strncpy by strcpy.\n\n2007-11-23  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/34187\n        * gfortran.dg/bind_c_usage_15.f90: New.\n\nFrom-SVN: r130386", "tree": {"sha": "93be568b96cbaa37715a85069eaaaf735c5843a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93be568b96cbaa37715a85069eaaaf735c5843a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88df9da15894541d19330b2f2d6cd301ce4f4cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88df9da15894541d19330b2f2d6cd301ce4f4cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88df9da15894541d19330b2f2d6cd301ce4f4cbf"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "b0fa324f984581b5af8c60b62277d69b301edce7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "patch": "@@ -1,3 +1,11 @@\n+2007-11-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34187\n+\t* module.c (load_needed): Ensure binding_label is not lost.\n+\n+\t* decl.c (set_binding_label,gfc_match_bind_c): Replace\n+\tstrncpy by strcpy.\n+\n 2007-11-23  Tobias Burnus  <burnus@net-b.de>\n \t    Steven G. Kargl  <kargl@gcc.gnu.org>\n "}, {"sha": "d66ea533ca7cf3e655d75a7bbdb52a775da53553", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "patch": "@@ -3126,15 +3126,14 @@ set_binding_label (char *dest_label, const char *sym_name, int num_idents)\n   if (curr_binding_label[0] != '\\0')\n     {\n       /* Binding label given; store in temp holder til have sym.  */\n-      strncpy (dest_label, curr_binding_label,\n-               strlen (curr_binding_label) + 1);\n+      strcpy (dest_label, curr_binding_label);\n     }\n   else\n     {\n       /* No binding label given, and the NAME= specifier did not exist,\n          which means there was no NAME=\"\".  */\n       if (sym_name != NULL && has_name_equals == 0)\n-        strncpy (dest_label, sym_name, strlen (sym_name) + 1);\n+        strcpy (dest_label, sym_name);\n     }\n    \n   return SUCCESS;\n@@ -4736,12 +4735,10 @@ gfc_match_bind_c (gfc_symbol *sym)\n     {\n       if (sym != NULL)\n       {\n-\tstrncpy (sym->binding_label, binding_label,\n-\t\t strlen (binding_label)+1);\n+\tstrcpy (sym->binding_label, binding_label);\n       }\n       else\n-\tstrncpy (curr_binding_label, binding_label,\n-\t\t strlen (binding_label) + 1);\n+\tstrcpy (curr_binding_label, binding_label);\n     }\n   else\n     {"}, {"sha": "00b9e25954673eaa0416eb2cecabe315d7f4a216", "filename": "gcc/fortran/module.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ffortran%2Fmodule.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ffortran%2Fmodule.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmodule.c?ref=c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "patch": "@@ -3419,6 +3419,7 @@ load_needed (pointer_info *p)\n \n       sym = gfc_new_symbol (p->u.rsym.true_name, ns);\n       sym->module = gfc_get_string (p->u.rsym.module);\n+      strcpy (sym->binding_label, p->u.rsym.binding_label);\n \n       associate_integer_pointer (p, sym);\n     }"}, {"sha": "ee015a29f0065cb2be4771c0be5d7e9653806741", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "patch": "@@ -1,3 +1,8 @@\n+2007-11-23  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/34187\n+\t* gfortran.dg/bind_c_usage_15.f90: New.\n+\n 2007-11-23  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/34192"}, {"sha": "c5201a634db649633033c2771de61457362e8b00", "filename": "gcc/testsuite/gfortran.dg/bind_c_usage_15.f90", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_15.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_15.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fbind_c_usage_15.f90?ref=c5b5a17a923b67f3e3e4bbcef670b0b3d86198ab", "patch": "@@ -0,0 +1,29 @@\n+! { dg-do run }\n+!\n+! PR fortran/34187\n+! The binding label was not exported for private procedures\n+! with public generic interfaces.\n+!\n+module mod\n+  use iso_c_binding, only: c_int\n+  implicit none\n+  private\n+  public :: gen, c_int\n+  interface gen\n+    module procedure  test\n+  end interface gen\n+contains\n+  subroutine test(a) bind(c, name=\"myFunc\")\n+    integer(c_int), intent(out) :: a \n+    a = 17\n+  end subroutine test\n+end module mod\n+\n+program main\n+  use mod\n+  implicit none\n+  integer(c_int) :: x\n+  x = -44\n+  call gen(x)\n+  if(x /= 17) call abort()\n+end program main"}]}