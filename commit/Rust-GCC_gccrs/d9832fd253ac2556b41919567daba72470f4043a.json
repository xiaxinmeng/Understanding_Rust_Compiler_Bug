{"sha": "d9832fd253ac2556b41919567daba72470f4043a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDk4MzJmZDI1M2FjMjU1NmI0MTkxOTU2N2RhYmE3MjQ3MGY0MDQzYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-28T18:04:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-28T18:04:29Z"}, "message": "(output_scc_di): Swap operands when needed.\n\nFrom-SVN: r10408", "tree": {"sha": "3f990f3fae57a568ec73ef9039211170a67a8ee5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f990f3fae57a568ec73ef9039211170a67a8ee5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9832fd253ac2556b41919567daba72470f4043a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9832fd253ac2556b41919567daba72470f4043a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9832fd253ac2556b41919567daba72470f4043a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9832fd253ac2556b41919567daba72470f4043a/comments", "author": null, "committer": null, "parents": [{"sha": "241fa1a22111e9cc42ef734119d1ff727b905253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/241fa1a22111e9cc42ef734119d1ff727b905253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/241fa1a22111e9cc42ef734119d1ff727b905253"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "2b5b392bb86b8fc3a68349b2d3a7f2b69aeece58", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9832fd253ac2556b41919567daba72470f4043a/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9832fd253ac2556b41919567daba72470f4043a/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=d9832fd253ac2556b41919567daba72470f4043a", "patch": "@@ -706,7 +706,19 @@ output_scc_di(op, operand1, operand2, dest)\n      rtx dest;\n {\n   rtx loperands[7];\n+  enum rtx_code op_code = GET_CODE (op);\n \n+  /* The m68k cmp.l instruction requires operand1 to be a reg as used\n+     below.  Swap the operands and change the op if these requirements\n+     are not fulfilled.  */\n+  if (GET_CODE (operand2) == REG && GET_CODE (operand1) != REG)\n+    {\n+      rtx tmp = operand1;\n+\n+      operand1 = operand2;\n+      operand2 = tmp;\n+      op_code = swap_condition (op_code);\n+    }\n   loperands[0] = operand1;\n   if (GET_CODE (operand1) == REG)\n     loperands[1] = gen_rtx (REG, SImode, REGNO (operand1) + 1);\n@@ -743,7 +755,7 @@ output_scc_di(op, operand1, operand2, dest)\n #endif\n   loperands[5] = dest;\n   \n-  switch (GET_CODE (op))\n+  switch (op_code)\n     {\n       case EQ:\n         ASM_OUTPUT_INTERNAL_LABEL (asm_out_file, \"L\","}]}