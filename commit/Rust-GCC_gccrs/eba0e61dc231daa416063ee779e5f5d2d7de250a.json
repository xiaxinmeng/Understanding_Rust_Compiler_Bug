{"sha": "eba0e61dc231daa416063ee779e5f5d2d7de250a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJhMGU2MWRjMjMxZGFhNDE2MDYzZWU3NzllNWY1ZDJkN2RlMjUwYQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@cygnus.com", "date": "1999-04-13T14:28:15Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "1999-04-13T14:28:15Z"}, "message": "Makefile.in: Rebuilt.\n\n\t* Makefile.in: Rebuilt.\n\t* Makefile.am (libgcjgc_a_SOURCES): Added solaris-threads.c and\n\tsolaris-threads.h.\n\nFrom-SVN: r26407", "tree": {"sha": "358f3d8f47de42104d88feebcd08f84f2967b09a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/358f3d8f47de42104d88feebcd08f84f2967b09a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eba0e61dc231daa416063ee779e5f5d2d7de250a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eba0e61dc231daa416063ee779e5f5d2d7de250a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eba0e61dc231daa416063ee779e5f5d2d7de250a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eba0e61dc231daa416063ee779e5f5d2d7de250a/comments", "author": null, "committer": null, "parents": [{"sha": "0ffc4dca8ed0e0305a3499164dd8b1913d6aa48e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ffc4dca8ed0e0305a3499164dd8b1913d6aa48e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ffc4dca8ed0e0305a3499164dd8b1913d6aa48e"}], "stats": {"total": 72, "additions": 66, "deletions": 6}, "files": [{"sha": "0b066bc1c51c12dae71edca5ebe844eeb84ae5cf", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=eba0e61dc231daa416063ee779e5f5d2d7de250a", "patch": "@@ -1,3 +1,14 @@\n+1999-04-13  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (libgcjgc_a_SOURCES): Added solaris-threads.c and\n+\tsolaris-threads.h.\n+\n+1999-04-09  Tom Tromey  <tromey@cygnus.com>\n+\n+\t* configure: Rebuilt.\n+\t* configure.in: Use sparc_mach_dep.s when building on Solaris.\n+\n 1999-02-23  Tom Tromey  <tromey@cygnus.com>\n \n \t* configure: Rebuilt."}, {"sha": "5b0742d5001b1bf3220b1bbf11c561bfee27b07c", "filename": "boehm-gc/Makefile.am", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.am?ref=eba0e61dc231daa416063ee779e5f5d2d7de250a", "patch": "@@ -25,8 +25,9 @@ config.h dbg_mlc.c dyn_load.c finalize.c gc.h gc_alloc.h gc_cpp.h \\\n gc_hdrs.h gc_mark.h gc_priv.h gc_private.h gc_typed.h headers.c\t\\\n irix_threads.c linux_threads.c malloc.c mallocx.c mark.c mark_rts.c \\\n misc.c new_hblk.c obj_map.c os_dep.c pcr_interface.c ptr_chck.c\t\\\n-quick_threads.c real_malloc.c reclaim.c solaris_pthreads.c stubborn.c \\\n-typd_mlc.c version.h weakpointer.h\n+quick_threads.c real_malloc.c reclaim.c solaris_pthreads.c \\\n+solaris_threads.c solaris_threads.h stubborn.c typd_mlc.c version.h \\\n+weakpointer.h\n libgcjgc_a_LIBADD = @addobjs@\n libgcjgc_a_DEPENDENCIES = @addobjs@\n "}, {"sha": "693906ca2cd7c9f38b9db0fed64a5415622c130e", "filename": "boehm-gc/Makefile.in", "status": "modified", "additions": 50, "deletions": 4, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.in?ref=eba0e61dc231daa416063ee779e5f5d2d7de250a", "patch": "@@ -98,12 +98,21 @@ toollibdir = $(tooldir)/lib$(MULTISUBDIR)\n \n toollib_LIBRARIES = $(target_all)\n EXTRA_LIBRARIES = libgcjgc.a\n-libgcjgc_a_SOURCES = allchblk.c alloc.c blacklst.c checksums.c config.h dbg_mlc.c dyn_load.c finalize.c gc.h gc_alloc.h gc_cpp.h gc_hdrs.h gc_mark.h gc_priv.h gc_private.h gc_typed.h headers.c\tirix_threads.c linux_threads.c malloc.c mallocx.c mark.c mark_rts.c misc.c new_hblk.c obj_map.c os_dep.c pcr_interface.c ptr_chck.c\tquick_threads.c real_malloc.c reclaim.c solaris_pthreads.c stubborn.c typd_mlc.c version.h weakpointer.h\n+libgcjgc_a_SOURCES = allchblk.c alloc.c blacklst.c checksums.c \\\n+config.h dbg_mlc.c dyn_load.c finalize.c gc.h gc_alloc.h gc_cpp.h \\\n+gc_hdrs.h gc_mark.h gc_priv.h gc_private.h gc_typed.h headers.c\t\\\n+irix_threads.c linux_threads.c malloc.c mallocx.c mark.c mark_rts.c \\\n+misc.c new_hblk.c obj_map.c os_dep.c pcr_interface.c ptr_chck.c\t\\\n+quick_threads.c real_malloc.c reclaim.c solaris_pthreads.c \\\n+solaris_threads.c solaris_threads.h stubborn.c typd_mlc.c version.h \\\n+weakpointer.h\n \n libgcjgc_a_LIBADD = @addobjs@\n libgcjgc_a_DEPENDENCIES = @addobjs@\n \n-EXTRA_libgcjgc_a_SOURCES = alpha_mach_dep.s mips_sgi_mach_dep.s\tmips_ultrix_mach_dep.s rs6000_mach_dep.s sparc_mach_dep.s sparc_sunos4_mach_dep.s mach_dep.c ecos.cc\n+EXTRA_libgcjgc_a_SOURCES = alpha_mach_dep.s mips_sgi_mach_dep.s\t\\\n+mips_ultrix_mach_dep.s rs6000_mach_dep.s sparc_mach_dep.s \\\n+sparc_sunos4_mach_dep.s mach_dep.c ecos.cc\n \n \n AM_CXXFLAGS = @BOEHM_GC_CFLAGS@\n@@ -122,7 +131,43 @@ LINK = $(CC) $(AM_CFLAGS) $(MY_CFLAGS) $(LDFLAGS) -o $@\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"EXPECT=$(EXPECT)\" \t\"RUNTEST=$(RUNTEST)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"CC=$(CC)\" \t\"CXX=$(CXX)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"NM=$(NM)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"DESTDIR=$(DESTDIR)\"\n+AM_MAKEFLAGS = \\\n+\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n+\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n+\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+\t\"INSTALL=$(INSTALL)\" \\\n+\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n+\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n+\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+\t\"LDFLAGS=$(LDFLAGS)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\"MAKE=$(MAKE)\" \\\n+\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n+\t\"SHELL=$(SHELL)\" \\\n+\t\"EXPECT=$(EXPECT)\" \\\n+\t\"RUNTEST=$(RUNTEST)\" \\\n+\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n+\t\"exec_prefix=$(exec_prefix)\" \\\n+\t\"infodir=$(infodir)\" \\\n+\t\"libdir=$(libdir)\" \\\n+\t\"prefix=$(prefix)\" \\\n+\t\"tooldir=$(tooldir)\" \\\n+\t\"AR=$(AR)\" \\\n+\t\"AS=$(AS)\" \\\n+\t\"CC=$(CC)\" \\\n+\t\"CXX=$(CXX)\" \\\n+\t\"LD=$(LD)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"NM=$(NM)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"RANLIB=$(RANLIB)\" \\\n+\t\"DESTDIR=$(DESTDIR)\"\n \n \n CONFIG_STATUS_DEPENDENCIES = $(boehm_gc_basedir)/configure.host\n@@ -142,7 +187,8 @@ libgcjgc_a_OBJECTS =  allchblk.o alloc.o blacklst.o checksums.o \\\n dbg_mlc.o dyn_load.o finalize.o headers.o irix_threads.o \\\n linux_threads.o malloc.o mallocx.o mark.o mark_rts.o misc.o new_hblk.o \\\n obj_map.o os_dep.o pcr_interface.o ptr_chck.o quick_threads.o \\\n-real_malloc.o reclaim.o solaris_pthreads.o stubborn.o typd_mlc.o\n+real_malloc.o reclaim.o solaris_pthreads.o solaris_threads.o stubborn.o \\\n+typd_mlc.o\n check_PROGRAMS =  gctest$(EXEEXT)\n gctest_OBJECTS =  test.o\n gctest_DEPENDENCIES =  ./libgcjgc.a"}, {"sha": "a5f305aa369b2185b6f1aeb9eefe9637d13ee763", "filename": "boehm-gc/configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=eba0e61dc231daa416063ee779e5f5d2d7de250a", "patch": "@@ -1756,6 +1756,7 @@ EOF\n \n     ;;\n  sparc-sun-solaris2.3*)\n+    machdep=\"sparc_mach_dep.o\"\n     cat >> confdefs.h <<\\EOF\n #define SUNOS53_SHARED_LIB 1\n EOF"}, {"sha": "6a4850f17dda9603364e1552c4b06ae8bae078ed", "filename": "boehm-gc/configure.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eba0e61dc231daa416063ee779e5f5d2d7de250a/boehm-gc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.in?ref=eba0e61dc231daa416063ee779e5f5d2d7de250a", "patch": "@@ -133,6 +133,7 @@ case \"$host\" in\n     AC_DEFINE(DATASTART_IS_ETEXT)\n     ;;\n  sparc-sun-solaris2.3*)\n+    machdep=\"sparc_mach_dep.o\"\n     AC_DEFINE(SUNOS53_SHARED_LIB)\n     ;;\n esac"}]}