{"sha": "859e203f3a8476ae430f100b3a877013a4cfd1b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODU5ZTIwM2YzYTg0NzZhZTQzMGYxMDBiM2E4NzcwMTNhNGNmZDFiMQ==", "commit": {"author": {"name": "Greg McGary", "email": "greg@mcgary.org", "date": "2000-09-17T08:55:16Z"}, "committer": {"name": "Greg McGary", "email": "gkm@gcc.gnu.org", "date": "2000-09-17T08:55:16Z"}, "message": "20000917-1.c: New test.\n\n\t* gcc.c-torture/execute/20000917-1.c: New test.\n\t* gcc.c-torture/execute/20000917-1.x: XFAIL.\n\nFrom-SVN: r36466", "tree": {"sha": "dd2b33914bdac196c9ed3333016f87d597aa3f75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd2b33914bdac196c9ed3333016f87d597aa3f75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/859e203f3a8476ae430f100b3a877013a4cfd1b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859e203f3a8476ae430f100b3a877013a4cfd1b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/859e203f3a8476ae430f100b3a877013a4cfd1b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/859e203f3a8476ae430f100b3a877013a4cfd1b1/comments", "author": null, "committer": null, "parents": [{"sha": "98c13cc0649b29b8be61b632880ba735d342507c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c13cc0649b29b8be61b632880ba735d342507c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c13cc0649b29b8be61b632880ba735d342507c"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "3e847d85565025545f065fe3c424d267069cb53c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859e203f3a8476ae430f100b3a877013a4cfd1b1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859e203f3a8476ae430f100b3a877013a4cfd1b1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=859e203f3a8476ae430f100b3a877013a4cfd1b1", "patch": "@@ -1,3 +1,8 @@\n+2000-09-17  Greg McGary  <greg@mcgary.org>\n+\n+\t* gcc.c-torture/execute/20000917-1.c: New test.\n+\t* gcc.c-torture/execute/20000917-1.x: XFAIL.\n+\n Sat 16-Sep-2000 08:14:58 BST  Neil Booth  <NeilB@earthling.net>\n \n \t* gcc.dg/cpp/macro2.c: Testcase for multi-context arguments\n@@ -90,8 +95,8 @@ Tue Sep 12 18:32:07 2000  J\"orn Rennecke <amylaar@redhat.co.uk>\n \n 2000-09-06  Greg McGary  <greg@mcgary.org>\n \n-\t* gcc.c-torture/20000906.c: New test.\n-\t* gcc.c-torture/20000906.x: Expect failure for ix86 at `-O2'.\n+\t* gcc.c-torture/execute/20000906-1.c: New test.\n+\t* gcc.c-torture/execute/20000906-1.x: Expect failure for ix86 at `-O2'.\n \n 2000-09-05  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "05b00ffe699b37066896b96b9470635b2b17dd73", "filename": "gcc/testsuite/gcc.c-torture/execute/20000917-1.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859e203f3a8476ae430f100b3a877013a4cfd1b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000917-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859e203f3a8476ae430f100b3a877013a4cfd1b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000917-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000917-1.c?ref=859e203f3a8476ae430f100b3a877013a4cfd1b1", "patch": "@@ -0,0 +1,42 @@\n+/* This bug exists in gcc-2.95, egcs-1.1.2, gcc-2.7.2 and probably\n+   every other version as well.  */\n+\n+typedef struct int3 { int a, b, c; } int3;\n+\n+int3\n+one (void)\n+{\n+  return (int3) { 1, 1, 1 };\n+}\n+\n+int3\n+zero (void)\n+{\n+  return (int3) { 0, 0, 0 };\n+}\n+\n+int\n+main (void)\n+{\n+  int3 a;\n+\n+  /* gcc allocates a temporary for the inner expression statement\n+     to store the return value of `one'.\n+\n+     gcc frees the temporaries for the inner expression statement.\n+\n+     gcc realloates the same temporary slot to store the return\n+     value of `zero'.\n+\n+     gcc expands the call to zero ahead of the expansion of the\n+     statement expressions.  The temporary gets the value of `zero'.\n+\n+     gcc expands statement expressions and the stale temporary is\n+     clobbered with the value of `one'.  The bad value is copied from\n+     the temporary into *&a.  */\n+\n+  *({ ({ one (); &a; }); }) = zero ();\n+  if (a.a && a.b && a.c)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "287382e099205ffbffcefdb390aaf9f178b326b4", "filename": "gcc/testsuite/gcc.c-torture/execute/20000917-1.x", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/859e203f3a8476ae430f100b3a877013a4cfd1b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000917-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/859e203f3a8476ae430f100b3a877013a4cfd1b1/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000917-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20000917-1.x?ref=859e203f3a8476ae430f100b3a877013a4cfd1b1", "patch": "@@ -0,0 +1,3 @@\n+# Never has worked\n+set torture_execute_xfail \"*-*-*\"\n+return 0"}]}