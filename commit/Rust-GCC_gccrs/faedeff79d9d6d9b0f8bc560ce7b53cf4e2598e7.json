{"sha": "faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFlZGVmZjc5ZDlkNmQ5YjBmOGJjNTYwY2U3YjUzY2Y0ZTI1OThlNw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-02-12T03:52:45Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-02-12T03:52:45Z"}, "message": "re PR fortran/57822 (I/O: \"(g0)\" wrongly prints \"E+0000\")\n\n2015-02-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/57822\n\t* gfortran/fmt_g0_7.f08: Revise test.\n\nFrom-SVN: r220637", "tree": {"sha": "3fbbed5b4b8b6efd288b47652bc6e46e2cc13b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fbbed5b4b8b6efd288b47652bc6e46e2cc13b04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7/comments", "author": null, "committer": null, "parents": [{"sha": "673e746c4f536805f3162f35899365114f79b82e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673e746c4f536805f3162f35899365114f79b82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/673e746c4f536805f3162f35899365114f79b82e"}], "stats": {"total": 50, "additions": 29, "deletions": 21}, "files": [{"sha": "8d5d3f3725d6df1e6d2110c7d01bf6c482b7eb84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7", "patch": "@@ -1,3 +1,8 @@\n+2015-02-11  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/57822\n+\t* gfortran/fmt_g0_7.f08: Revise test.\n+\n 2015-02-11  Jeff Law  <law@redhat.com>\n \n \tPR target/63347"}, {"sha": "3709b758c6e4d744bf880ee60f3df494368fbbc7", "filename": "gcc/testsuite/gfortran.dg/fmt_g0_7.f08", "status": "modified", "additions": 24, "deletions": 21, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_g0_7.f08", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_g0_7.f08", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ffmt_g0_7.f08?ref=faedeff79d9d6d9b0f8bc560ce7b53cf4e2598e7", "patch": "@@ -1,28 +1,31 @@\n ! { dg-do run }\n+! { dg-options \"-std=gnu\" }\n ! PR58722\n program testit\n+use ISO_FORTRAN_ENV\n+  implicit none\n+  integer, parameter :: j(size(real_kinds))=REAL_KINDS\n   character(50) :: astring\n-  \n-  write(astring, '(g0)') 0.1_4\n-  if (test(astring)) call abort\n-  write(astring, '(g0)') 0.1_8\n-  if (test(astring)) call abort\n-  write(astring, '(g0)') 0.1_10\n-  if (test(astring)) call abort\n-  write(astring, '(g0)') 0.1_16\n-  if (test(astring)) call abort\n+  integer :: i, l, n\n \n-contains\n-\n-function test (string1) result(res)\n-  character(len=*) :: string1\n-  logical :: res\n-\n-  res = .true.\n-  do i = 1, len(string1)\n-    if (string1(i:i) == 'E') return\n+  n = 0\n+  do i=1,size(real_kinds)\n+    if (i == 1) then\n+      write(astring, '(ru,g0)') 1.0/real(10.0, kind=j(1))\n+    else if (i == 2) then\n+      write(astring, '(ru,g0)') 1.0/real(10.0, kind=j(2))\n+    else if (i == 3) then\n+      write(astring, '(ru,g0)') 1.0/real(10.0, kind=j(3))\n+    else if (i == 4) then\n+      write(astring, '(ru,g0)') 1.0/real(10.0, kind=j(4))\n+    end if\n+    if (astring(2:2) /= '9') then\n+      l = index(astring, 'E')\n+      if (l /= 0) then\n+\t!print *, i, l, trim(astring)\n+\tn = n + l\n+      end if\n+    end if\n   end do\n-  res = .false.\n-end function\n-\n+  if (n /= 0) call abort\n end program"}]}