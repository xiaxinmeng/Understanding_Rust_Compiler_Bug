{"sha": "9acf28f153b65a5846fa05db300ed0442942ed2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFjZjI4ZjE1M2I2NWE1ODQ2ZmEwNWRiMzAwZWQwNDQyOTQyZWQyZg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2014-02-12T23:24:49Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2014-02-12T23:24:49Z"}, "message": "float128-mul-underflow.c, [...]: New tests.\n\ngcc/testsuite:\n\t* gcc.dg/torture/float128-mul-underflow.c,\n\tgcc.dg/torture/float128-truncdf-underflow.c,\n\tgcc.dg/torture/float128-truncsf-underflow.c: New tests.\n\nlibgcc:\n\t* soft-fp/adddf3.c: Update from glibc.\n\t* soft-fp/addsf3.c: Likewise.\n\t* soft-fp/addtf3.c: Likewise.\n\t* soft-fp/divdf3.c: Likewise.\n\t* soft-fp/divsf3.c: Likewise.\n\t* soft-fp/divtf3.c: Likewise.\n\t* soft-fp/double.h: Likewise.\n\t* soft-fp/eqdf2.c: Likewise.\n\t* soft-fp/eqsf2.c: Likewise.\n\t* soft-fp/eqtf2.c: Likewise.\n\t* soft-fp/extenddftf2.c: Likewise.\n\t* soft-fp/extended.h: Likewise.\n\t* soft-fp/extendsfdf2.c: Likewise.\n\t* soft-fp/extendsftf2.c: Likewise.\n\t* soft-fp/extendxftf2.c: Likewise.\n\t* soft-fp/fixdfdi.c: Likewise.\n\t* soft-fp/fixdfsi.c: Likewise.\n\t* soft-fp/fixdfti.c: Likewise.\n\t* soft-fp/fixsfdi.c: Likewise.\n\t* soft-fp/fixsfsi.c: Likewise.\n\t* soft-fp/fixsfti.c: Likewise.\n\t* soft-fp/fixtfdi.c: Likewise.\n\t* soft-fp/fixtfsi.c: Likewise.\n\t* soft-fp/fixtfti.c: Likewise.\n\t* soft-fp/fixunsdfdi.c: Likewise.\n\t* soft-fp/fixunsdfsi.c: Likewise.\n\t* soft-fp/fixunsdfti.c: Likewise.\n\t* soft-fp/fixunssfdi.c: Likewise.\n\t* soft-fp/fixunssfsi.c: Likewise.\n\t* soft-fp/fixunssfti.c: Likewise.\n\t* soft-fp/fixunstfdi.c: Likewise.\n\t* soft-fp/fixunstfsi.c: Likewise.\n\t* soft-fp/fixunstfti.c: Likewise.\n\t* soft-fp/floatdidf.c: Likewise.\n\t* soft-fp/floatdisf.c: Likewise.\n\t* soft-fp/floatditf.c: Likewise.\n\t* soft-fp/floatsidf.c: Likewise.\n\t* soft-fp/floatsisf.c: Likewise.\n\t* soft-fp/floatsitf.c: Likewise.\n\t* soft-fp/floattidf.c: Likewise.\n\t* soft-fp/floattisf.c: Likewise.\n\t* soft-fp/floattitf.c: Likewise.\n\t* soft-fp/floatundidf.c: Likewise.\n\t* soft-fp/floatundisf.c: Likewise.\n\t* soft-fp/floatunditf.c: Likewise.\n\t* soft-fp/floatunsidf.c: Likewise.\n\t* soft-fp/floatunsisf.c: Likewise.\n\t* soft-fp/floatunsitf.c: Likewise.\n\t* soft-fp/floatuntidf.c: Likewise.\n\t* soft-fp/floatuntisf.c: Likewise.\n\t* soft-fp/floatuntitf.c: Likewise.\n\t* soft-fp/gedf2.c: Likewise.\n\t* soft-fp/gesf2.c: Likewise.\n\t* soft-fp/getf2.c: Likewise.\n\t* soft-fp/ledf2.c: Likewise.\n\t* soft-fp/lesf2.c: Likewise.\n\t* soft-fp/letf2.c: Likewise.\n\t* soft-fp/muldf3.c: Likewise.\n\t* soft-fp/mulsf3.c: Likewise.\n\t* soft-fp/multf3.c: Likewise.\n\t* soft-fp/negdf2.c: Likewise.\n\t* soft-fp/negsf2.c: Likewise.\n\t* soft-fp/negtf2.c: Likewise.\n\t* soft-fp/op-1.h: Likewise.\n\t* soft-fp/op-2.h: Likewise.\n\t* soft-fp/op-4.h: Likewise.\n\t* soft-fp/op-8.h: Likewise.\n\t* soft-fp/op-common.h: Likewise.\n\t* soft-fp/quad.h: Likewise.\n\t* soft-fp/single.h: Likewise.\n\t* soft-fp/soft-fp.h: Likewise.\n\t* soft-fp/subdf3.c: Likewise.\n\t* soft-fp/subsf3.c: Likewise.\n\t* soft-fp/subtf3.c: Likewise.\n\t* soft-fp/truncdfsf2.c: Likewise.\n\t* soft-fp/trunctfdf2.c: Likewise.\n\t* soft-fp/trunctfsf2.c: Likewise.\n\t* soft-fp/trunctfxf2.c: Likewise.\n\t* soft-fp/unorddf2.c: Likewise.\n\t* soft-fp/unordsf2.c: Likewise.\n\t* soft-fp/unordtf2.c: Likewise.\n\t* config/aarch64/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING): New\n\tmacro.\n\t* config/arm/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/c6x/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/cris/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/i386/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/ia64/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/lm32/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/mips/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/moxie/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/nds32/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/nios2/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/rs6000/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/score/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/tilegx/sfp-machine32.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/tilegx/sfp-machine64.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\t* config/tilepro/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n\tLikewise.\n\nFrom-SVN: r207742", "tree": {"sha": "a4459861fa9875cdaf31855a407a355d3c33e063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4459861fa9875cdaf31855a407a355d3c33e063"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9acf28f153b65a5846fa05db300ed0442942ed2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9acf28f153b65a5846fa05db300ed0442942ed2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9acf28f153b65a5846fa05db300ed0442942ed2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9acf28f153b65a5846fa05db300ed0442942ed2f/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f494a60736382fadf1b11f39c754fcfd2346b946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f494a60736382fadf1b11f39c754fcfd2346b946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f494a60736382fadf1b11f39c754fcfd2346b946"}], "stats": {"total": 436, "additions": 351, "deletions": 85}, "files": [{"sha": "0f1bcd4d37fae6a815dace498cdc7d5280522686", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,3 +1,9 @@\n+2014-02-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/torture/float128-mul-underflow.c,\n+\tgcc.dg/torture/float128-truncdf-underflow.c,\n+\tgcc.dg/torture/float128-truncsf-underflow.c: New tests.\n+\n 2014-02-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/59737"}, {"sha": "e3ebfffc98f221cc0cbda51fde4edff8ba485e71", "filename": "gcc/testsuite/gcc.dg/torture/float128-mul-underflow.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-mul-underflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-mul-underflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-mul-underflow.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -0,0 +1,21 @@\n+/* Test __float128 multiplication uses after-rounding tininess\n+   detection.  */\n+\n+/* { dg-do run { target i?86-*-* x86_64-*-* ia64-*-* } } */\n+/* { dg-options \"\" } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+#include <stdlib.h>\n+\n+int\n+main (void)\n+{\n+  volatile __float128 a = 0x1.fffffffffffffffp-16382q, b = 0x1.0000000000000008p-1q, c;\n+  c = a * b;\n+  if (fetestexcept (FE_UNDERFLOW))\n+    abort ();\n+  if (c != 0x1p-16382q)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "83b05387ea002fd5ac6156206c88b8cfae3ad4ac", "filename": "gcc/testsuite/gcc.dg/torture/float128-truncdf-underflow.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-truncdf-underflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-truncdf-underflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-truncdf-underflow.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -0,0 +1,27 @@\n+/* Test truncation from __float128 to double uses after-rounding\n+   tininess detection.  */\n+\n+/* { dg-do run { target i?86-*-* x86_64-*-* ia64-*-* } } */\n+/* { dg-options \"\" } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+#include <stdlib.h>\n+\n+int\n+main (void)\n+{\n+  volatile __float128 a = 0x0.fffffffffffffffp-1022q, b = 0x0.fffffffffffff8p-1022q;\n+  volatile double r;\n+  r = (double) a;\n+  if (fetestexcept (FE_UNDERFLOW))\n+    abort ();\n+  if (r != 0x1p-1022)\n+    abort ();\n+  r = (double) b;\n+  if (!fetestexcept (FE_UNDERFLOW))\n+    abort ();\n+  if (r != 0x1p-1022)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "3f1a71366d27c50c68fc40e4f659ee31565b247b", "filename": "gcc/testsuite/gcc.dg/torture/float128-truncsf-underflow.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-truncsf-underflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-truncsf-underflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Ffloat128-truncsf-underflow.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -0,0 +1,27 @@\n+/* Test truncation from __float128 to float uses after-rounding\n+   tininess detection.  */\n+\n+/* { dg-do run { target i?86-*-* x86_64-*-* ia64-*-* } } */\n+/* { dg-options \"\" } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+#include <stdlib.h>\n+\n+int\n+main (void)\n+{\n+  volatile __float128 a = 0x0.ffffffffffp-126q, b = 0x0.ffffffp-126q;\n+  volatile float r;\n+  r = (float) a;\n+  if (fetestexcept (FE_UNDERFLOW))\n+    abort ();\n+  if (r != 0x1p-126f)\n+    abort ();\n+  r = (float) b;\n+  if (!fetestexcept (FE_UNDERFLOW))\n+    abort ();\n+  if (r != 0x1p-126f)\n+    abort ();\n+  exit (0);\n+}"}, {"sha": "c60d2fa7efd8f508a776534136b88d4767b8df64", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,3 +1,119 @@\n+2014-02-12  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* soft-fp/adddf3.c: Update from glibc.\n+\t* soft-fp/addsf3.c: Likewise.\n+\t* soft-fp/addtf3.c: Likewise.\n+\t* soft-fp/divdf3.c: Likewise.\n+\t* soft-fp/divsf3.c: Likewise.\n+\t* soft-fp/divtf3.c: Likewise.\n+\t* soft-fp/double.h: Likewise.\n+\t* soft-fp/eqdf2.c: Likewise.\n+\t* soft-fp/eqsf2.c: Likewise.\n+\t* soft-fp/eqtf2.c: Likewise.\n+\t* soft-fp/extenddftf2.c: Likewise.\n+\t* soft-fp/extended.h: Likewise.\n+\t* soft-fp/extendsfdf2.c: Likewise.\n+\t* soft-fp/extendsftf2.c: Likewise.\n+\t* soft-fp/extendxftf2.c: Likewise.\n+\t* soft-fp/fixdfdi.c: Likewise.\n+\t* soft-fp/fixdfsi.c: Likewise.\n+\t* soft-fp/fixdfti.c: Likewise.\n+\t* soft-fp/fixsfdi.c: Likewise.\n+\t* soft-fp/fixsfsi.c: Likewise.\n+\t* soft-fp/fixsfti.c: Likewise.\n+\t* soft-fp/fixtfdi.c: Likewise.\n+\t* soft-fp/fixtfsi.c: Likewise.\n+\t* soft-fp/fixtfti.c: Likewise.\n+\t* soft-fp/fixunsdfdi.c: Likewise.\n+\t* soft-fp/fixunsdfsi.c: Likewise.\n+\t* soft-fp/fixunsdfti.c: Likewise.\n+\t* soft-fp/fixunssfdi.c: Likewise.\n+\t* soft-fp/fixunssfsi.c: Likewise.\n+\t* soft-fp/fixunssfti.c: Likewise.\n+\t* soft-fp/fixunstfdi.c: Likewise.\n+\t* soft-fp/fixunstfsi.c: Likewise.\n+\t* soft-fp/fixunstfti.c: Likewise.\n+\t* soft-fp/floatdidf.c: Likewise.\n+\t* soft-fp/floatdisf.c: Likewise.\n+\t* soft-fp/floatditf.c: Likewise.\n+\t* soft-fp/floatsidf.c: Likewise.\n+\t* soft-fp/floatsisf.c: Likewise.\n+\t* soft-fp/floatsitf.c: Likewise.\n+\t* soft-fp/floattidf.c: Likewise.\n+\t* soft-fp/floattisf.c: Likewise.\n+\t* soft-fp/floattitf.c: Likewise.\n+\t* soft-fp/floatundidf.c: Likewise.\n+\t* soft-fp/floatundisf.c: Likewise.\n+\t* soft-fp/floatunditf.c: Likewise.\n+\t* soft-fp/floatunsidf.c: Likewise.\n+\t* soft-fp/floatunsisf.c: Likewise.\n+\t* soft-fp/floatunsitf.c: Likewise.\n+\t* soft-fp/floatuntidf.c: Likewise.\n+\t* soft-fp/floatuntisf.c: Likewise.\n+\t* soft-fp/floatuntitf.c: Likewise.\n+\t* soft-fp/gedf2.c: Likewise.\n+\t* soft-fp/gesf2.c: Likewise.\n+\t* soft-fp/getf2.c: Likewise.\n+\t* soft-fp/ledf2.c: Likewise.\n+\t* soft-fp/lesf2.c: Likewise.\n+\t* soft-fp/letf2.c: Likewise.\n+\t* soft-fp/muldf3.c: Likewise.\n+\t* soft-fp/mulsf3.c: Likewise.\n+\t* soft-fp/multf3.c: Likewise.\n+\t* soft-fp/negdf2.c: Likewise.\n+\t* soft-fp/negsf2.c: Likewise.\n+\t* soft-fp/negtf2.c: Likewise.\n+\t* soft-fp/op-1.h: Likewise.\n+\t* soft-fp/op-2.h: Likewise.\n+\t* soft-fp/op-4.h: Likewise.\n+\t* soft-fp/op-8.h: Likewise.\n+\t* soft-fp/op-common.h: Likewise.\n+\t* soft-fp/quad.h: Likewise.\n+\t* soft-fp/single.h: Likewise.\n+\t* soft-fp/soft-fp.h: Likewise.\n+\t* soft-fp/subdf3.c: Likewise.\n+\t* soft-fp/subsf3.c: Likewise.\n+\t* soft-fp/subtf3.c: Likewise.\n+\t* soft-fp/truncdfsf2.c: Likewise.\n+\t* soft-fp/trunctfdf2.c: Likewise.\n+\t* soft-fp/trunctfsf2.c: Likewise.\n+\t* soft-fp/trunctfxf2.c: Likewise.\n+\t* soft-fp/unorddf2.c: Likewise.\n+\t* soft-fp/unordsf2.c: Likewise.\n+\t* soft-fp/unordtf2.c: Likewise.\n+\t* config/aarch64/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING): New\n+\tmacro.\n+\t* config/arm/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/c6x/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/cris/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/i386/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/ia64/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/lm32/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/mips/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/moxie/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/nds32/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/nios2/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/rs6000/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/score/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/tilegx/sfp-machine32.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/tilegx/sfp-machine64.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\t* config/tilepro/sfp-machine.h (_FP_TININESS_AFTER_ROUNDING):\n+\tLikewise.\n+\n 2014-02-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n \n \t* config/s390/32/_fixdfdi.c: Throw invalid exception if number"}, {"sha": "203e478db48f591b75223aef672ec451881c08d8", "filename": "libgcc/config/aarch64/sfp-machine.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Faarch64%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Faarch64%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Faarch64%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -80,6 +80,8 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n \t(FP_EX_INVALID | FP_EX_DIVZERO | FP_EX_OVERFLOW | FP_EX_UNDERFLOW \\\n \t | FP_EX_INEXACT)\n \n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n void __sfp_handle_exceptions (int);\n \n #define FP_HANDLE_EXCEPTIONS\t\t\t\\"}, {"sha": "0323617336132d61f070c4dcad9fcf40c2f6b0fa", "filename": "libgcc/config/arm/sfp-machine.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Farm%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Farm%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farm%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -48,6 +48,8 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "9b7a02e9fec123ff7c16a3f4346ac77a6e8c74e4", "filename": "libgcc/config/c6x/sfp-machine.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fc6x%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fc6x%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fc6x%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -78,6 +78,9 @@\n # define __BYTE_ORDER __LITTLE_ENDIAN\n #endif\n \n+/* Not checked.  */\n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n \n /* Define ALIASNAME as a strong alias for NAME.  */\n # define strong_alias(name, aliasname) _strong_alias(name, aliasname)"}, {"sha": "abef282e0474dccbf3f57ceb1ab660bab054f9e1", "filename": "libgcc/config/cris/sfp-machine.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fcris%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fcris%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fcris%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -67,6 +67,9 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Not checked.  */\n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "148044a6920b3cf5846d1c62ae43ff9d95a46f6f", "filename": "libgcc/config/i386/sfp-machine.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -65,6 +65,8 @@ void __sfp_handle_exceptions (int);\n #define FP_ROUNDMODE\t\t(_fcw & FP_RND_MASK)\n #endif\n \n+#define _FP_TININESS_AFTER_ROUNDING 1\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "0769fc67c751cbf16b252fbd68cdfc57eb31ccae", "filename": "libgcc/config/ia64/sfp-machine.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fia64%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fia64%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fia64%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -57,6 +57,8 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define FP_EX_UNDERFLOW\t\t0x10\n #define FP_EX_INEXACT\t\t0x20\n \n+#define _FP_TININESS_AFTER_ROUNDING 1\n+\n void __sfp_handle_exceptions (int);\n \n #define FP_HANDLE_EXCEPTIONS\t\t\t\\"}, {"sha": "f3f2e9adbd51213643513da33f8b16b1184aebea", "filename": "libgcc/config/lm32/sfp-machine.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Flm32%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Flm32%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Flm32%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -41,6 +41,9 @@\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Not checked.  */\n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "e9d33b7dcb1fdeed6d0af3767a358785b81ad165", "filename": "libgcc/config/mips/sfp-machine.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fmips%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fmips%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmips%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -163,6 +163,8 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n #define FP_EX_INEXACT           (1 << 0)\n #endif\n \n+#define _FP_TININESS_AFTER_ROUNDING 1\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "6394de30b77a81f1434d8bfba9df99ed64d70289", "filename": "libgcc/config/moxie/sfp-machine.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fmoxie%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fmoxie%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fmoxie%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -46,6 +46,9 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Not checked.  */\n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "aeda774f86d8ac15ce2fcee8caf28c63dcbc29ec", "filename": "libgcc/config/nds32/sfp-machine.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fnds32%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fnds32%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnds32%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -76,6 +76,9 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Not checked.  */\n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "9e7c60b3cfc0a4ff07ec5660cd930b0abd13e734", "filename": "libgcc/config/nios2/sfp-machine.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fnios2%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fnios2%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fnios2%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -63,6 +63,9 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Not checked.  */\n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "40436337ffbb8818ae657ef80d893e95cd5ab661", "filename": "libgcc/config/rs6000/sfp-machine.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Frs6000%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Frs6000%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Frs6000%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -46,6 +46,8 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "6394de30b77a81f1434d8bfba9df99ed64d70289", "filename": "libgcc/config/score/sfp-machine.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fscore%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Fscore%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fscore%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -46,6 +46,9 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+/* Not checked.  */\n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "1fefb5a41cee67643936b4c4972c2c3a68e2994f", "filename": "libgcc/config/tilegx/sfp-machine32.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine32.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -50,6 +50,8 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "3e2bd41e6a9f96c61dd877999aca0f153c36382d", "filename": "libgcc/config/tilegx/sfp-machine64.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ftilegx%2Fsfp-machine64.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -50,6 +50,8 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "6953d8d8db7ae17a1398890641222be4cf07b108", "filename": "libgcc/config/tilepro/sfp-machine.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Ftilepro%2Fsfp-machine.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fconfig%2Ftilepro%2Fsfp-machine.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ftilepro%2Fsfp-machine.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -45,6 +45,8 @@ typedef int __gcc_CMPtype __attribute__ ((mode (__libgcc_cmp_return__)));\n     R##_c = FP_CLS_NAN;\t\t\t\t\t\t\\\n   } while (0)\n \n+#define _FP_TININESS_AFTER_ROUNDING 0\n+\n #define\t__LITTLE_ENDIAN\t1234\n #define\t__BIG_ENDIAN\t4321\n "}, {"sha": "95bc8e56b0e258e0be40dfd886a795e269015824", "filename": "libgcc/soft-fp/adddf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fadddf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fadddf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fadddf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a + b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "b332589d088c39206d69435560137f0ff06a442a", "filename": "libgcc/soft-fp/addsf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Faddsf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Faddsf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Faddsf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a + b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "ac0d9481fe61ced326cc18b941911020cf7a6ee5", "filename": "libgcc/soft-fp/addtf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Faddtf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Faddtf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Faddtf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a + b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "f59da8216b1069cb52641b85b2d4da3fa0407d81", "filename": "libgcc/soft-fp/divdf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fdivdf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fdivdf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fdivdf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a / b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "794192825bba5ad6bc636c375e6774a1b0b111bf", "filename": "libgcc/soft-fp/divsf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fdivsf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fdivsf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fdivsf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a / b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "621f70d99fc47f1db6f0617c9b7c1238f79455e8", "filename": "libgcc/soft-fp/divtf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fdivtf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fdivtf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fdivtf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a / b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "77829940445c8f26694b3c63983fb97d6bf4dd8b", "filename": "libgcc/soft-fp/double.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fdouble.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fdouble.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fdouble.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Definitions for IEEE Double Precision\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "006b1ef83a3bb23c0734c4b8e39188942d55e292", "filename": "libgcc/soft-fp/eqdf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Feqdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Feqdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Feqdf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 otherwise\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "437ef99a2f441e7e7ea3ce3bb4b321c07c87b12f", "filename": "libgcc/soft-fp/eqsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Feqsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Feqsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Feqsf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 otherwise\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "ffc558ced2cd1bef9516e6885b285a8261a7e929", "filename": "libgcc/soft-fp/eqtf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Feqtf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Feqtf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Feqtf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 otherwise\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "6984b41a800840f9ddc90d717f623b6b9e805869", "filename": "libgcc/soft-fp/extenddftf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextenddftf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextenddftf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextenddftf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a converted to IEEE quad\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "69a5a06260a939a0916fe86cd475d17ff315514c", "filename": "libgcc/soft-fp/extended.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextended.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextended.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextended.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Definitions for IEEE Extended Precision.\n-   Copyright (C) 1999-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1999-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Jakub Jelinek (jj@ultra.linux.cz).\n "}, {"sha": "a9b6bfbee787da450911f4979f88d5b5f2c288c0", "filename": "libgcc/soft-fp/extendsfdf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextendsfdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextendsfdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextendsfdf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a converted to IEEE double\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "07fc3679acaf45c5ab840cfe22c546315def3cbd", "filename": "libgcc/soft-fp/extendsftf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextendsftf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextendsftf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextendsftf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a converted to IEEE quad\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "67b909563f2b237534367cb406ffbba2f71976b3", "filename": "libgcc/soft-fp/extendxftf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextendxftf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fextendxftf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fextendxftf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a converted to IEEE quad\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "4b7659a46726ed3d161d1c2e6c0ed4c6b0d73713", "filename": "libgcc/soft-fp/fixdfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixdfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixdfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixdfdi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit signed integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "1545454a0bed684bbba1c1c3e0de91b045274143", "filename": "libgcc/soft-fp/fixdfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixdfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixdfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixdfsi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit signed integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "b47b7c22cbbfe561d69a8da122ff283d4f97fb09", "filename": "libgcc/soft-fp/fixdfti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixdfti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixdfti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixdfti.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert IEEE double to 128bit signed integer\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "5353839b93e4572bf3bd8995b292a7409d270655", "filename": "libgcc/soft-fp/fixsfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixsfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixsfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixsfdi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit signed integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8fbebaac61a1b5c94b029e34e95ca776e141e5e5", "filename": "libgcc/soft-fp/fixsfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixsfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixsfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixsfsi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit signed integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "cf7d284a07b6427a2476b49b492fab2bcf81ebbf", "filename": "libgcc/soft-fp/fixsfti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixsfti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixsfti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixsfti.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert IEEE single to 128bit signed integer\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "3697d0f07097c8c72801a8b7771d87d17bedfe18", "filename": "libgcc/soft-fp/fixtfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixtfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixtfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixtfdi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit signed integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "220a11ac66da0a38ce3834e1dcb7533f708a197e", "filename": "libgcc/soft-fp/fixtfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixtfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixtfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixtfsi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit signed integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "47b062d15cc454eef528247a48c35165706aac0c", "filename": "libgcc/soft-fp/fixtfti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixtfti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixtfti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixtfti.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert IEEE quad to 128bit signed integer\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "a0a8be94f686654e50b8b13a35351c8b3f70f7ae", "filename": "libgcc/soft-fp/fixunsdfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunsdfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunsdfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunsdfdi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit unsigned integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8905d825ef95c461a2f34d013e3fc08cf8d33488", "filename": "libgcc/soft-fp/fixunsdfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunsdfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunsdfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunsdfsi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit unsigned integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "de8189e1a122b733325bb52991defc2327cde4a4", "filename": "libgcc/soft-fp/fixunsdfti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunsdfti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunsdfti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunsdfti.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert IEEE double to 128bit unsigned integer\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "68e413d8700a3e640b2b4afc99fec8f7096ccd60", "filename": "libgcc/soft-fp/fixunssfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunssfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunssfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunssfdi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit unsigned integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "7e0bc6bbb828b8e6612ce87456a6680a08c351cf", "filename": "libgcc/soft-fp/fixunssfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunssfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunssfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunssfsi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit unsigned integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "264ba13a6d7d79cb37b1866a5866a980f919054a", "filename": "libgcc/soft-fp/fixunssfti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunssfti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunssfti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunssfti.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert IEEE single to 128bit unsigned integer\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "7e866e42185e82d94bebfcc55ddae3b38f84d283", "filename": "libgcc/soft-fp/fixunstfdi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunstfdi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunstfdi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunstfdi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 64bit unsigned integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "9665721f3b7e367e480cd057dc82b832eaf90706", "filename": "libgcc/soft-fp/fixunstfsi.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunstfsi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunstfsi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunstfsi.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a to 32bit unsigned integer\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "fcdf122d24f5b451c0567bfb404dbd1068012fbb", "filename": "libgcc/soft-fp/fixunstfti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunstfti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffixunstfti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffixunstfti.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert IEEE quad to 128bit unsigned integer\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "f290e248f889ace5cb255a679abf8bdd0a71a960", "filename": "libgcc/soft-fp/floatdidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatdidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatdidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatdidf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit signed integer to IEEE double\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "b54cef8ae092890af7769b1ca61c17d197ae5783", "filename": "libgcc/soft-fp/floatdisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatdisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatdisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatdisf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit signed integer to IEEE single\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "33c3b197db05bd978be47fea99c10d54f5c0570d", "filename": "libgcc/soft-fp/floatditf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatditf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatditf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatditf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit signed integer to IEEE quad\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "fdd9d752f04b2e50c8252336b9bd3192f619ca68", "filename": "libgcc/soft-fp/floatsidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatsidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatsidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatsidf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit signed integer to IEEE double\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "3b2f8047bd35a66efef26355b45500829aeebdaa", "filename": "libgcc/soft-fp/floatsisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatsisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatsisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatsisf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit signed integer to IEEE single\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "d92e4bdd2553b2d1b227793506a69a0f63e8a30a", "filename": "libgcc/soft-fp/floatsitf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatsitf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatsitf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatsitf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit signed integer to IEEE quad\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "74c3599f04e66ab64db465bc27109c8b476b6b06", "filename": "libgcc/soft-fp/floattidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloattidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloattidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloattidf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 128bit signed integer to IEEE double\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "1dc76438a0aefbd14158296c42b4d70790452268", "filename": "libgcc/soft-fp/floattisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloattisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloattisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloattisf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 128bit signed integer to IEEE single\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "8c439260b78cfe8e942e0c1239343ece6e6b9504", "filename": "libgcc/soft-fp/floattitf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloattitf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloattitf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloattitf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 128bit signed integer to IEEE quad\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "43d59c19b266a7dd3e93c75de9b278c58fa53360", "filename": "libgcc/soft-fp/floatundidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatundidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatundidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatundidf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit unsigned integer to IEEE double\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "bf32a214fd6df526560d92a0c389503badfdbdb7", "filename": "libgcc/soft-fp/floatundisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatundisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatundisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatundisf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit unsigned integer to IEEE single\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "4eff13671af55d7879be6bb39ba36400601da7e1", "filename": "libgcc/soft-fp/floatunditf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatunditf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatunditf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatunditf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 64bit unsigned integer to IEEE quad\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "e995bf4e6a04a8c107b6dd83b576cd51cd1e8373", "filename": "libgcc/soft-fp/floatunsidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatunsidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatunsidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatunsidf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit unsigned integer to IEEE double\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "803e0db77ff84d334edbfadf24d336c1f7b07bc5", "filename": "libgcc/soft-fp/floatunsisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatunsisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatunsisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatunsisf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit unsigned integer to IEEE single\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "956cb62ef28127c27c60914f724aceb8041c2807", "filename": "libgcc/soft-fp/floatunsitf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatunsitf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatunsitf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatunsitf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 32bit unsigned integer to IEEE quad\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "1b543d4a9604fbd2227c9eb6a83d846f1d01b27e", "filename": "libgcc/soft-fp/floatuntidf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatuntidf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatuntidf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatuntidf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 128bit unsigned integer to IEEE double\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "09a610d30900f6931cc78562971b4c0488cc6175", "filename": "libgcc/soft-fp/floatuntisf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatuntisf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatuntisf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatuntisf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 128bit unsigned integer to IEEE single\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "d6e57fdae89de7b58bb7c85dd2db68af32849c3e", "filename": "libgcc/soft-fp/floatuntitf.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatuntitf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ffloatuntitf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ffloatuntitf.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Convert a 128bit unsigned integer to IEEE quad\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "4ff97561bac70d263a954acf60ba924628de4ca8", "filename": "libgcc/soft-fp/gedf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fgedf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fgedf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fgedf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, -2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "f3c5d2d71062025bca0e61fe3606b4c91df77f5b", "filename": "libgcc/soft-fp/gesf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fgesf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fgesf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fgesf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, -2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "fb82b795ca9470435a899babd60032f23c824c1c", "filename": "libgcc/soft-fp/getf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fgetf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fgetf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fgetf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, -2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8b15d32b740a504000191148afd59ae2f9e3a701", "filename": "libgcc/soft-fp/ledf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fledf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fledf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fledf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, 2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "e86ac3f08e5f0e55a28bcb0a587302202935d2de", "filename": "libgcc/soft-fp/lesf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Flesf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Flesf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Flesf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, 2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "94b7d786d66bf92ad9d2bee0d67f23dc1ddded7a", "filename": "libgcc/soft-fp/letf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fletf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fletf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fletf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 0 iff a == b, 1 iff a > b, 2 iff a ? b, -1 iff a < b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "96bf65f554a39a6b4fbdda7e0f3d4d9bbf9f6d86", "filename": "libgcc/soft-fp/muldf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fmuldf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fmuldf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fmuldf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a * b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "d8160a1a1b2695e6dadbe764efa6522df0adab15", "filename": "libgcc/soft-fp/mulsf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fmulsf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fmulsf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fmulsf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a * b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "d67a12b7bbe8bcadad4d1b7054188ced85b8f49e", "filename": "libgcc/soft-fp/multf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fmultf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fmultf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fmultf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a * b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "5d3c6114e5f20a7c9070a8c492d4bf61b1ceccb5", "filename": "libgcc/soft-fp/negdf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fnegdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fnegdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fnegdf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return -a\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "c4a06089eeedafb202b440c740e8efed07d39eb3", "filename": "libgcc/soft-fp/negsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fnegsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fnegsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fnegsf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return -a\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "5306005b8b63aea426fcd55c991a0765b95208c7", "filename": "libgcc/soft-fp/negtf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fnegtf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fnegtf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fnegtf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return -a\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "33682cf51e11d4852b53a1d2a8f437d26a406d79", "filename": "libgcc/soft-fp/op-1.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-1.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Basic one-word fraction declaration and manipulation.\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "160990fe4e8fe1586c76e2c00c7bce2f1eec0f38", "filename": "libgcc/soft-fp/op-2.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-2.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Basic two-word fraction declaration and manipulation.\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "a80bdb2f27841487475b1867d4e61ce1cda0ef52", "filename": "libgcc/soft-fp/op-4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-4.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Basic four-word fraction declaration and manipulation.\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "a50cd7b58289fbb5a6cc8c5ae7b3c3f9a02ab16d", "filename": "libgcc/soft-fp/op-8.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-8.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-8.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-8.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Basic eight-word fraction declaration and manipulation.\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz) and"}, {"sha": "6f8c1f3cb04c1300a37be433b528c44d5d464103", "filename": "libgcc/soft-fp/op-common.h", "status": "modified", "additions": 32, "deletions": 5, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fop-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fop-common.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,5 +1,5 @@\n /* Software floating-point emulation. Common operations.\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),\n@@ -32,7 +32,7 @@\n #define _FP_DECL(wc, X)\t\t\t\t\\\n   _FP_I_TYPE X##_c __attribute__ ((unused));\t\\\n   _FP_I_TYPE X##_s __attribute__ ((unused));\t\\\n-  _FP_I_TYPE X##_e;\t\t\t\t\\\n+  _FP_I_TYPE X##_e __attribute__ ((unused));\t\\\n   _FP_FRAC_DECL_##wc (X)\n \n /* Test whether the qNaN bit denotes a signaling NaN.  */\n@@ -191,8 +191,22 @@\n #define _FP_PACK_SEMIRAW(fs, wc, X)\t\t\t\t\\\n   do\t\t\t\t\t\t\t\t\\\n     {\t\t\t\t\t\t\t\t\\\n+      int _FP_PACK_SEMIRAW_is_tiny\t\t\t\t\\\n+\t= X##_e == 0 && !_FP_FRAC_ZEROP_##wc (X);\t\t\\\n+      if (_FP_TININESS_AFTER_ROUNDING\t\t\t\t\\\n+\t  && _FP_PACK_SEMIRAW_is_tiny)\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  FP_DECL_##fs (_FP_PACK_SEMIRAW_T);\t\t\t\\\n+\t  _FP_FRAC_COPY_##wc (_FP_PACK_SEMIRAW_T, X);\t\t\\\n+\t  _FP_PACK_SEMIRAW_T##_s = X##_s;\t\t\t\\\n+\t  _FP_PACK_SEMIRAW_T##_e = X##_e;\t\t\t\\\n+\t  _FP_FRAC_SLL_##wc (_FP_PACK_SEMIRAW_T, 1);\t\t\\\n+\t  _FP_ROUND (wc, _FP_PACK_SEMIRAW_T);\t\t\t\\\n+\t  if (_FP_FRAC_OVERP_##wc (fs, _FP_PACK_SEMIRAW_T))\t\\\n+\t    _FP_PACK_SEMIRAW_is_tiny = 0;\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n       _FP_ROUND (wc, X);\t\t\t\t\t\\\n-      if (X##_e == 0 && !_FP_FRAC_ZEROP_##wc (X))\t\t\\\n+      if (_FP_PACK_SEMIRAW_is_tiny)\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  if ((FP_CUR_EXCEPTIONS & FP_EX_INEXACT)\t\t\\\n \t      || (FP_TRAPPING_EXCEPTIONS & FP_EX_UNDERFLOW))\t\\\n@@ -279,6 +293,17 @@\n \t  else\t\t\t\t\t\t\t\t\\\n \t    {\t\t\t\t\t\t\t\t\\\n \t      /* we've got a denormalized number */\t\t\t\\\n+\t      int _FP_PACK_CANONICAL_is_tiny = 1;\t\t\t\\\n+\t      if (_FP_TININESS_AFTER_ROUNDING && X##_e == 0)\t\t\\\n+\t\t{\t\t\t\t\t\t\t\\\n+\t\t  FP_DECL_##fs (_FP_PACK_CANONICAL_T);\t\t\t\\\n+\t\t  _FP_FRAC_COPY_##wc (_FP_PACK_CANONICAL_T, X);\t\t\\\n+\t\t  _FP_PACK_CANONICAL_T##_s = X##_s;\t\t\t\\\n+\t\t  _FP_PACK_CANONICAL_T##_e = X##_e;\t\t\t\\\n+\t\t  _FP_ROUND (wc, _FP_PACK_CANONICAL_T);\t\t\t\\\n+\t\t  if (_FP_FRAC_OVERP_##wc (fs, _FP_PACK_CANONICAL_T))\t\\\n+\t\t    _FP_PACK_CANONICAL_is_tiny = 0;\t\t\t\\\n+\t\t}\t\t\t\t\t\t\t\\\n \t      X##_e = -X##_e + 1;\t\t\t\t\t\\\n \t      if (X##_e <= _FP_WFRACBITS_##fs)\t\t\t\t\\\n \t\t{\t\t\t\t\t\t\t\\\n@@ -296,8 +321,10 @@\n \t\t      X##_e = 0;\t\t\t\t\t\\\n \t\t      _FP_FRAC_SRL_##wc (X, _FP_WORKBITS);\t\t\\\n \t\t    }\t\t\t\t\t\t\t\\\n-\t\t  if ((FP_CUR_EXCEPTIONS & FP_EX_INEXACT)\t\t\\\n-\t\t      || (FP_TRAPPING_EXCEPTIONS & FP_EX_UNDERFLOW))\t\\\n+\t\t  if (_FP_PACK_CANONICAL_is_tiny\t\t\t\\\n+\t\t      && ((FP_CUR_EXCEPTIONS & FP_EX_INEXACT)\t\t\\\n+\t\t\t  || (FP_TRAPPING_EXCEPTIONS\t\t\t\\\n+\t\t\t      & FP_EX_UNDERFLOW)))\t\t\t\\\n \t\t    FP_SET_EXCEPTION (FP_EX_UNDERFLOW);\t\t\t\\\n \t\t}\t\t\t\t\t\t\t\\\n \t      else\t\t\t\t\t\t\t\\"}, {"sha": "16e362f1c69c3a4b7b7182d95256b5aa40d1e0c8", "filename": "libgcc/soft-fp/quad.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fquad.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fquad.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fquad.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Definitions for IEEE Quad Precision.\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "19fd6476ee9e58e7aebeaaaf4a952ed9b5f56b35", "filename": "libgcc/soft-fp/single.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsingle.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsingle.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsingle.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Definitions for IEEE Single Precision.\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),"}, {"sha": "8d0efa58e74614d60beb8f9c267ca0c0d758973e", "filename": "libgcc/soft-fp/soft-fp.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsoft-fp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsoft-fp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsoft-fp.h?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,5 +1,5 @@\n /* Software floating-point emulation.\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com),\n \t\t  Jakub Jelinek (jj@ultra.linux.cz),\n@@ -161,6 +161,9 @@\n # undef FP_ROUNDMODE\n # define FP_ROUNDMODE FP_RND_ZERO\n \n+# undef _FP_TININESS_AFTER_ROUNDING\n+# define _FP_TININESS_AFTER_ROUNDING 0\n+\n #endif\n \n #define _FP_ROUND_NEAREST(wc, X)\t\t\t\t\\"}, {"sha": "ef82c862859317a9d16a7908373fe621e8d3dc64", "filename": "libgcc/soft-fp/subdf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsubdf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsubdf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsubdf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a - b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "8d36e284c7ba48ed5029f03156ada16faf594033", "filename": "libgcc/soft-fp/subsf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsubsf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsubsf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsubsf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a - b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "490ff9cefbdd9b22c50c7d1e41f010ffa23f8440", "filename": "libgcc/soft-fp/subtf3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsubtf3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Fsubtf3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Fsubtf3.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return a - b\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "e6ccb59079a27726eb51d34e5db838f45f9b2dd5", "filename": "libgcc/soft-fp/truncdfsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ftruncdfsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ftruncdfsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftruncdfsf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Truncate IEEE double into IEEE single\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "781b5b90b0374aaa1954a8edd71f1667c85a90e2", "filename": "libgcc/soft-fp/trunctfdf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ftrunctfdf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ftrunctfdf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftrunctfdf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Truncate IEEE quad into IEEE double\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "76437c4d347e838dfc5f671d02d44c9939c5eea9", "filename": "libgcc/soft-fp/trunctfsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ftrunctfsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ftrunctfsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftrunctfsf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Truncate IEEE quad into IEEE single\n-   Copyright (C) 1997-2013 Free Software Foundation, Inc.\n+   Copyright (C) 1997-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Richard Henderson (rth@cygnus.com) and\n \t\t  Jakub Jelinek (jj@ultra.linux.cz)."}, {"sha": "1782aaa7d88ef20ed0f80710d709816dce9272ef", "filename": "libgcc/soft-fp/trunctfxf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ftrunctfxf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Ftrunctfxf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Ftrunctfxf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Truncate IEEE quad into IEEE extended\n-   Copyright (C) 2007-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2007-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Uros Bizjak (ubizjak@gmail.com).\n "}, {"sha": "ceacb9e91d4b78862b3fe83d1be4258f49e735a6", "filename": "libgcc/soft-fp/unorddf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Funorddf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Funorddf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Funorddf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 1 iff a or b is a NaN, 0 otherwise.\n-   Copyright (C) 2006-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Joseph Myers (joseph@codesourcery.com).\n "}, {"sha": "057f2c43a7938455c43b49ce10dc715fec7243a7", "filename": "libgcc/soft-fp/unordsf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Funordsf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Funordsf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Funordsf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 1 iff a or b is a NaN, 0 otherwise.\n-   Copyright (C) 2006-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Joseph Myers (joseph@codesourcery.com).\n "}, {"sha": "433a84fd5eb2d60dde412497e0e8c8768205ba77", "filename": "libgcc/soft-fp/unordtf2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Funordtf2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9acf28f153b65a5846fa05db300ed0442942ed2f/libgcc%2Fsoft-fp%2Funordtf2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fsoft-fp%2Funordtf2.c?ref=9acf28f153b65a5846fa05db300ed0442942ed2f", "patch": "@@ -1,6 +1,6 @@\n /* Software floating-point emulation.\n    Return 1 iff a or b is a NaN, 0 otherwise.\n-   Copyright (C) 2006-2013 Free Software Foundation, Inc.\n+   Copyright (C) 2006-2014 Free Software Foundation, Inc.\n    This file is part of the GNU C Library.\n    Contributed by Joseph Myers (joseph@codesourcery.com).\n "}]}