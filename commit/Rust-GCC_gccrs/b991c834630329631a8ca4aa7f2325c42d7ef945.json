{"sha": "b991c834630329631a8ca4aa7f2325c42d7ef945", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjk5MWM4MzQ2MzAzMjk2MzFhOGNhNGFhN2YyMzI1YzQyZDdlZjk0NQ==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-04T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-07-04T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "29f3a63523f861f45763435f2c8cfb6a71ca3e63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29f3a63523f861f45763435f2c8cfb6a71ca3e63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b991c834630329631a8ca4aa7f2325c42d7ef945", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b991c834630329631a8ca4aa7f2325c42d7ef945", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b991c834630329631a8ca4aa7f2325c42d7ef945", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b991c834630329631a8ca4aa7f2325c42d7ef945/comments", "author": null, "committer": null, "parents": [{"sha": "e362a897655e3b92949b65a2b53e00fb3ab8ded0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e362a897655e3b92949b65a2b53e00fb3ab8ded0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e362a897655e3b92949b65a2b53e00fb3ab8ded0"}], "stats": {"total": 131, "additions": 130, "deletions": 1}, "files": [{"sha": "8cc2fed84c29559605dd85fcc8b6aaecd3718b22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b991c834630329631a8ca4aa7f2325c42d7ef945/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b991c834630329631a8ca4aa7f2325c42d7ef945/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b991c834630329631a8ca4aa7f2325c42d7ef945", "patch": "@@ -1,3 +1,90 @@\n+2020-07-03  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+\n+\t* gimple-fold.c (gimple_fold_builtin_memory_op): Fold calls that\n+\twere initially created for the assignment of a variable-sized\n+\tobject and whose source is now a string constant.\n+\t* gimple-ssa-store-merging.c (struct merged_store_group): Document\n+\tSTRING_CST for rhs_code field.\n+\tAdd string_concatenation boolean field.\n+\t(merged_store_group::merged_store_group): Initialize it as well as\n+\tbit_insertion here.\n+\t(merged_store_group::do_merge): Set it upon seeing a STRING_CST.\n+\tAlso set bit_insertion here upon seeing a BIT_INSERT_EXPR.\n+\t(merged_store_group::apply_stores): Clear it for small regions.\n+\tDo not create a power-of-2-sized buffer if it is still true.\n+\tAnd do not set bit_insertion here again.\n+\t(encode_tree_to_bitpos): Deal with BLKmode for the expression.\n+\t(merged_store_group::can_be_merged_into): Deal with STRING_CST.\n+\t(imm_store_chain_info::coalesce_immediate_stores): Set bit_insertion\n+\tto true after changing MEM_REF stores into BIT_INSERT_EXPR stores.\n+\t(count_multiple_uses): Return 0 for STRING_CST.\n+\t(split_group): Do not split the group for a string concatenation.\n+\t(imm_store_chain_info::output_merged_store): Constify and rename\n+\tsome local variables.  Build an array type as destination type\n+\tfor a string concatenation, as well as a zero mask, and call\n+\tbuild_string to build the source.\n+\t(lhs_valid_for_store_merging_p): Return true for VIEW_CONVERT_EXPR.\n+\t(pass_store_merging::process_store): Accept STRING_CST on the RHS.\n+\t* gimple.h (gimple_call_alloca_for_var_p): New accessor function.\n+\t* gimplify.c (gimplify_modify_expr_to_memcpy): Set alloca_for_var.\n+\t* tree.h (CALL_ALLOCA_FOR_VAR_P): Document it for BUILT_IN_MEMCPY.\n+\n+2020-07-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/96040\n+\t* ipa-sra.c (all_callee_accesses_present_p): Do not accept type\n+\tmismatched accesses.\n+\n+2020-07-03  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/nvptx/nvptx.md (popcount<mode>2): New instructions.\n+\t(mulhishi3, mulsidi3, umulhisi3, umulsidi3): New instructions.\n+\n+2020-07-03  Martin Liska  <mliska@suse.cz>\n+\t    Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR bootstrap/96046\n+\t* gcov-dump.c (tag_function): Use gcov_position_t\n+\ttype.\n+\n+2020-07-03  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/96037\n+\t* tree-vect-stmts.c (vect_is_simple_use): Initialize *slp_def.\n+\n+2020-07-03  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-slp.c (vect_bb_slp_scalar_cost): Cost the\n+\toriginal non-pattern stmts, look at the pattern stmt\n+\tvectorization status.\n+\n+2020-07-03  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\t* config/gcn/gcn-valu.md (fold_left_plus_<mode>): New.\n+\n+2020-07-03  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vectorizer.h (vec_info::insert_on_entry): New.\n+\t(vec_info::insert_seq_on_entry): Likewise.\n+\t* tree-vectorizer.c (vec_info::insert_on_entry): Implement.\n+\t(vec_info::insert_seq_on_entry): Likewise.\n+\t* tree-vect-stmts.c (vect_init_vector_1): Use\n+\tvec_info::insert_on_entry.\n+\t(vect_finish_stmt_generation): Set modified bit after\n+\tadjusting VUSE.\n+\t* tree-vect-slp.c (vect_create_constant_vectors): Simplify\n+\tby using vec_info::insert_seq_on_entry and bypassing\n+\tvec_init_vector.\n+\t(vect_schedule_slp_instance): Deal with all-constant\n+\tchildren later.\n+\n+2020-07-03  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Tom de Vries  <tdevries@suse.de>\n+\n+\tPR target/90932\n+\t* config/nvptx/nvptx.c (nvptx_vector_alignment): Use tree_to_uhwi\n+\tto access TYPE_SIZE (type).  Return at least the mode's alignment.\n+\n 2020-07-02  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/96028"}, {"sha": "a1f0455476fbbba73ef75564ccfd3cd3cf2a0f93", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b991c834630329631a8ca4aa7f2325c42d7ef945/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b991c834630329631a8ca4aa7f2325c42d7ef945/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=b991c834630329631a8ca4aa7f2325c42d7ef945", "patch": "@@ -1 +1 @@\n-20200703\n+20200704"}, {"sha": "4a33e62dbcd7cf07b1c9eec6459392594655418e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b991c834630329631a8ca4aa7f2325c42d7ef945/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b991c834630329631a8ca4aa7f2325c42d7ef945/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b991c834630329631a8ca4aa7f2325c42d7ef945", "patch": "@@ -1,3 +1,34 @@\n+2020-07-03  Eric Botcazou  <ebotcazou@gcc.gnu.org>\n+\n+\t* gnat.dg/opt87.adb: New test.\n+\t* gnat.dg/opt87_pkg.ads: New helper.\n+\t* gnat.dg/opt87_pkg.adb: Likewise.\n+\n+2020-07-03  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/96040\n+\t* gcc.dg/ipa/pr96040.c: New test.\n+\n+2020-07-03  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* gcc.target/nvptx/popc-1.c: New test.\n+\t* gcc.target/nvptx/popc-2.c: New test.\n+\t* gcc.target/nvptx/popc-3.c: New test.\n+\t* gcc.target/nvptx/mul-wide.c: New test.\n+\t* gcc.target/nvptx/umul-wide.c: New test.\n+\n+2020-07-03  Richard Biener  <rguenther@suse.de>\n+\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-vect-slp-2.c: New\n+\ttestcase.\n+\n+2020-07-03  David Edelsohn  <dje.gcc@gmail.com>\n+\n+\t* gcc.dg/fixits-pr84852-1.c: Enclose negative line number in braces.\n+\t* gcc.dg/fixits-pr84852-2.c: Same.\n+\t* gcc.dg/pr89410-1.c: Same.\n+\t* gcc.dg/pr89410-2.c: Same.\n+\n 2020-07-02  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* gfortran.dg/pr95690.f90: Solaris error appears on line 5."}, {"sha": "923aeb8bd812c6ee1518b2c3c1d4c8d59fae5caf", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b991c834630329631a8ca4aa7f2325c42d7ef945/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b991c834630329631a8ca4aa7f2325c42d7ef945/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=b991c834630329631a8ca4aa7f2325c42d7ef945", "patch": "@@ -1,3 +1,14 @@\n+2020-07-03  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* oacc-mem.c (goacc_exit_data_internal): Revert always-copyfrom\n+\tbehavior for 'GOMP_MAP_FORCE_FROM'.\n+\t* testsuite/libgomp.oacc-c-c++-common/pr92843-1.c: Adjust XFAIL.\n+\n+2020-07-03  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* oacc-mem.c (goacc_exit_data_internal): Remove\n+\t'GOMP_MAP_ALWAYS_FROM' handling.\n+\n 2020-06-30  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* testsuite/libgomp.oacc-c-c++-common/pr85381-2.c: Replace fragile"}]}