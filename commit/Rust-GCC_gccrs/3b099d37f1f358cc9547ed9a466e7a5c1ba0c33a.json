{"sha": "3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2IwOTlkMzdmMWYzNThjYzk1NDdlZDlhNDY2ZTdhNWMxYmEwYzMzYQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-12-06T05:40:14Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-12-06T05:40:14Z"}, "message": "* config/ia64/ia64.h (MUST_PASS_IN_STACK): Define.\n\nFrom-SVN: r74360", "tree": {"sha": "8f881978f7da82fd2ff1d7c415d78ff52ed5e60e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f881978f7da82fd2ff1d7c415d78ff52ed5e60e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a/comments", "author": null, "committer": null, "parents": [{"sha": "eeb23c11c0f58d2927f94cae3dac10848507420c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eeb23c11c0f58d2927f94cae3dac10848507420c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eeb23c11c0f58d2927f94cae3dac10848507420c"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "6ce8f999b230f6f8303a6fc799c4047f07cae26f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a", "patch": "@@ -1,5 +1,7 @@\n 2003-12-05  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* config/ia64/ia64.h (MUST_PASS_IN_STACK): Define.\n+\n \tPR c++/13314\n \t* emit-rtl.c (set_mem_attributes_minus_bitpos): Robustify.\n "}, {"sha": "84e864908c1ca1ccb4297a0fede1c7e318372944", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=3b099d37f1f358cc9547ed9a466e7a5c1ba0c33a", "patch": "@@ -1328,6 +1328,13 @@ enum reg_class\n #define FUNCTION_ARG_PASS_BY_REFERENCE(CUM, MODE, TYPE, NAMED) \\\n   ia64_function_arg_pass_by_reference (&CUM, MODE, TYPE, NAMED)\n \n+/* Nonzero if we do not know how to pass TYPE solely in registers.  */\n+\n+#define MUST_PASS_IN_STACK(MODE, TYPE) \\\n+  ((TYPE) != 0\t\t\t\t\t\t\t\\\n+   && (TREE_CODE (TYPE_SIZE (TYPE)) != INTEGER_CST\t\t\\\n+       || TREE_ADDRESSABLE (TYPE)))\n+\n /* A C type for declaring a variable that is used as the first argument of\n    `FUNCTION_ARG' and other related values.  For some target machines, the type\n    `int' suffices and can hold the number of bytes of argument so far.  */"}]}