{"sha": "e060847174c062531afd9061761b516cb6229960", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA2MDg0NzE3NGMwNjI1MzFhZmQ5MDYxNzYxYjUxNmNiNjIyOTk2MA==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-09-04T17:47:02Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-09-04T17:47:02Z"}, "message": "re PR fortran/45530 (gfortran internal compiler error)\n\n2010-09-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/45530\n        * resolve.c (resolve_fl_namelist): Change constraint checking\n        order to prevent endless loop.\n\n2010-09-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/45530\n        * gfortran.dg/namelist_63.f90: New.\n\nFrom-SVN: r163862", "tree": {"sha": "85293d8ba5a38313067f3f4722a13e72d0dd28ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85293d8ba5a38313067f3f4722a13e72d0dd28ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e060847174c062531afd9061761b516cb6229960", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e060847174c062531afd9061761b516cb6229960", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e060847174c062531afd9061761b516cb6229960", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e060847174c062531afd9061761b516cb6229960/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "17f39a395648213a0c6014e84ff34f3ff565a10b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17f39a395648213a0c6014e84ff34f3ff565a10b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17f39a395648213a0c6014e84ff34f3ff565a10b"}], "stats": {"total": 119, "additions": 79, "deletions": 40}, "files": [{"sha": "d9dbb737369d10c31bf0b12264e822c129e7adff", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e060847174c062531afd9061761b516cb6229960/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e060847174c062531afd9061761b516cb6229960/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e060847174c062531afd9061761b516cb6229960", "patch": "@@ -1,3 +1,9 @@\n+2010-09-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/45530\n+\t* resolve.c (resolve_fl_namelist): Change constraint checking\n+\torder to prevent endless loop.\n+\n 2010-09-04  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/45507"}, {"sha": "b35898add0537efd8b7c5fbdef08d4e7f287a217", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e060847174c062531afd9061761b516cb6229960/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e060847174c062531afd9061761b516cb6229960/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=e060847174c062531afd9061761b516cb6229960", "patch": "@@ -11566,6 +11566,46 @@ resolve_fl_namelist (gfc_symbol *sym)\n   gfc_namelist *nl;\n   gfc_symbol *nlsym;\n \n+  for (nl = sym->namelist; nl; nl = nl->next)\n+    {\n+      /* Reject namelist arrays of assumed shape.  */\n+      if (nl->sym->as && nl->sym->as->type == AS_ASSUMED_SHAPE\n+\t  && gfc_notify_std (GFC_STD_F2003, \"NAMELIST array object '%s' \"\n+\t\t\t     \"must not have assumed shape in namelist \"\n+\t\t\t     \"'%s' at %L\", nl->sym->name, sym->name,\n+\t\t\t     &sym->declared_at) == FAILURE)\n+\t    return FAILURE;\n+\n+      /* Reject namelist arrays that are not constant shape.  */\n+      if (is_non_constant_shape_array (nl->sym))\n+\t{\n+\t  gfc_error (\"NAMELIST array object '%s' must have constant \"\n+\t\t     \"shape in namelist '%s' at %L\", nl->sym->name,\n+\t\t     sym->name, &sym->declared_at);\n+\t  return FAILURE;\n+\t}\n+\n+      /* Namelist objects cannot have allocatable or pointer components.  */\n+      if (nl->sym->ts.type != BT_DERIVED)\n+\tcontinue;\n+\n+      if (nl->sym->ts.u.derived->attr.alloc_comp)\n+\t{\n+\t  gfc_error (\"NAMELIST object '%s' in namelist '%s' at %L cannot \"\n+\t\t     \"have ALLOCATABLE components\",\n+\t\t     nl->sym->name, sym->name, &sym->declared_at);\n+\t  return FAILURE;\n+\t}\n+\n+      if (nl->sym->ts.u.derived->attr.pointer_comp)\n+\t{\n+\t  gfc_error (\"NAMELIST object '%s' in namelist '%s' at %L cannot \"\n+\t\t     \"have POINTER components\", \n+\t\t     nl->sym->name, sym->name, &sym->declared_at);\n+\t  return FAILURE;\n+\t}\n+    }\n+\n   /* Reject PRIVATE objects in a PUBLIC namelist.  */\n   if (gfc_check_access(sym->attr.access, sym->ns->default_access))\n     {\n@@ -11607,46 +11647,6 @@ resolve_fl_namelist (gfc_symbol *sym)\n \t}\n     }\n \n-  for (nl = sym->namelist; nl; nl = nl->next)\n-    {\n-      /* Reject namelist arrays of assumed shape.  */\n-      if (nl->sym->as && nl->sym->as->type == AS_ASSUMED_SHAPE\n-\t  && gfc_notify_std (GFC_STD_F2003, \"NAMELIST array object '%s' \"\n-\t\t\t     \"must not have assumed shape in namelist \"\n-\t\t\t     \"'%s' at %L\", nl->sym->name, sym->name,\n-\t\t\t     &sym->declared_at) == FAILURE)\n-\t    return FAILURE;\n-\n-      /* Reject namelist arrays that are not constant shape.  */\n-      if (is_non_constant_shape_array (nl->sym))\n-\t{\n-\t  gfc_error (\"NAMELIST array object '%s' must have constant \"\n-\t\t     \"shape in namelist '%s' at %L\", nl->sym->name,\n-\t\t     sym->name, &sym->declared_at);\n-\t  return FAILURE;\n-\t}\n-\n-      /* Namelist objects cannot have allocatable or pointer components.  */\n-      if (nl->sym->ts.type != BT_DERIVED)\n-\tcontinue;\n-\n-      if (nl->sym->ts.u.derived->attr.alloc_comp)\n-\t{\n-\t  gfc_error (\"NAMELIST object '%s' in namelist '%s' at %L cannot \"\n-\t\t     \"have ALLOCATABLE components\",\n-\t\t     nl->sym->name, sym->name, &sym->declared_at);\n-\t  return FAILURE;\n-\t}\n-\n-      if (nl->sym->ts.u.derived->attr.pointer_comp)\n-\t{\n-\t  gfc_error (\"NAMELIST object '%s' in namelist '%s' at %L cannot \"\n-\t\t     \"have POINTER components\", \n-\t\t     nl->sym->name, sym->name, &sym->declared_at);\n-\t  return FAILURE;\n-\t}\n-    }\n-\n \n   /* 14.1.2 A module or internal procedure represent local entities\n      of the same type as a namelist member and so are not allowed.  */"}, {"sha": "f55b40e2d310175ece8adc2bd9fe5014e3e304c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e060847174c062531afd9061761b516cb6229960/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e060847174c062531afd9061761b516cb6229960/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e060847174c062531afd9061761b516cb6229960", "patch": "@@ -1,3 +1,8 @@\n+2010-09-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/45530\n+\t* gfortran.dg/namelist_63.f90: New.\n+\n 2010-09-04  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/tree-ssa/foldconst-2.c: New testcase."}, {"sha": "1d02789fa5479fd463e23c6f2df7b7b60378e804", "filename": "gcc/testsuite/gfortran.dg/namelist_63.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e060847174c062531afd9061761b516cb6229960/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_63.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e060847174c062531afd9061761b516cb6229960/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_63.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_63.f90?ref=e060847174c062531afd9061761b516cb6229960", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do compile }\n+!\n+! PR fortran/45530\n+!\n+! Contributed by david.sagan@gmail.com\n+!\n+program test\n+implicit none\n+\n+type c_struct\n+  type (g_struct), pointer :: g\n+end type\n+\n+type g_struct\n+  type (p_struct), pointer :: p\n+end type\n+\n+type p_struct\n+  type (region_struct), pointer :: r\n+end type\n+\n+type region_struct\n+  type (p_struct) plot\n+end type\n+\n+type (c_struct) curve(10)\n+namelist / params / curve ! { dg-error \"NAMELIST object .curve. in namelist .params. at .1. cannot have POINTER components\" }\n+end program"}]}