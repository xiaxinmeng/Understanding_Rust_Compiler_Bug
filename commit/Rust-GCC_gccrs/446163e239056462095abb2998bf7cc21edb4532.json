{"sha": "446163e239056462095abb2998bf7cc21edb4532", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ2MTYzZTIzOTA1NjQ2MjA5NWFiYjI5OThiZjdjYzIxZWRiNDUzMg==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2017-05-04T11:02:08Z"}, "committer": {"name": "Jonathan Yong", "email": "jyong@gcc.gnu.org", "date": "2017-05-04T11:02:08Z"}, "message": "configure.ac (--enable-mingw-wildcard): Add new configurable feature.\n\n2017-05-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n\t* configure.ac (--enable-mingw-wildcard): Add new configurable feature.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* config/i386/driver-mingw32.c: new file.\n\t* config/i386/x-mingw32: Add rule to build driver-mingw32.o.\n\t* config.host: Link driver-mingw32.o on MinGW host.\n\t* doc/install.texi: Document new --enable-mingw-wildcard configure\n\toption.\n\nFrom-SVN: r247588", "tree": {"sha": "c4fb09ef56330fb70ff9c15439168b8c11cb89d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4fb09ef56330fb70ff9c15439168b8c11cb89d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/446163e239056462095abb2998bf7cc21edb4532", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/446163e239056462095abb2998bf7cc21edb4532", "html_url": "https://github.com/Rust-GCC/gccrs/commit/446163e239056462095abb2998bf7cc21edb4532", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/446163e239056462095abb2998bf7cc21edb4532/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e1fd916302dd72a2a4a054cf9f61db2721045011", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1fd916302dd72a2a4a054cf9f61db2721045011", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1fd916302dd72a2a4a054cf9f61db2721045011"}], "stats": {"total": 80, "additions": 78, "deletions": 2}, "files": [{"sha": "9791c007345b48e9f141afe256bd3f420ccc7987", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446163e239056462095abb2998bf7cc21edb4532/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446163e239056462095abb2998bf7cc21edb4532/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=446163e239056462095abb2998bf7cc21edb4532", "patch": "@@ -1,3 +1,14 @@\n+2017-05-04  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* configure.ac (--enable-mingw-wildcard): Add new configurable feature.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* config/i386/driver-mingw32.c: new file.\n+\t* config/i386/x-mingw32: Add rule to build driver-mingw32.o.\n+\t* config.host: Link driver-mingw32.o on MinGW host.\n+\t* doc/install.texi: Document new --enable-mingw-wildcard configure\n+\toption.\n+\n 2017-05-04  Marek Polacek  <polacek@redhat.com>\n \n \tPR tree-optimization/80612"}, {"sha": "5e2db5327e3094a19cd29c81ceb1a9e2b11797c9", "filename": "gcc/config.host", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=446163e239056462095abb2998bf7cc21edb4532", "patch": "@@ -239,6 +239,7 @@ case ${host} in\n     host_xmake_file=\"${host_xmake_file} i386/x-mingw32\"\n     host_exeext=.exe\n     out_host_hook_obj=host-mingw32.o\n+    host_extra_gcc_objs=\"${host_extra_gcc_objs} driver-mingw32.o\"\n     host_lto_plugin_soname=liblto_plugin-0.dll\n     ;;\n   x86_64-*-mingw*)\n@@ -247,6 +248,7 @@ case ${host} in\n     host_xmake_file=\"${host_xmake_file} i386/x-mingw32\"\n     host_exeext=.exe\n     out_host_hook_obj=host-mingw32.o\n+    host_extra_gcc_objs=\"${host_extra_gcc_objs} driver-mingw32.o\"\n     host_lto_plugin_soname=liblto_plugin-0.dll\n     ;;\n   i[34567]86-*-darwin* | x86_64-*-darwin*)"}, {"sha": "bf2aa7b2e7d81a593b72a8d0359864773754ef5d", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=446163e239056462095abb2998bf7cc21edb4532", "patch": "@@ -2009,6 +2009,12 @@\n #endif\n \n \n+/* Value to set mingw's _dowildcard to. */\n+#ifndef USED_FOR_TARGET\n+#undef MINGW_DOWILDCARD\n+#endif\n+\n+\n /* Define if host mkdir takes a single argument. */\n #ifndef USED_FOR_TARGET\n #undef MKDIR_TAKES_ONE_ARG"}, {"sha": "b70363ad26a7dc8ffccbb273e46d4dd6de1a6f8c", "filename": "gcc/config/i386/driver-mingw32.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfig%2Fi386%2Fdriver-mingw32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfig%2Fi386%2Fdriver-mingw32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-mingw32.c?ref=446163e239056462095abb2998bf7cc21edb4532", "patch": "@@ -0,0 +1,26 @@\n+/* Host OS specific configuration for the gcc driver.\n+   Copyright (C) 2017 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+\n+/* When defined, force the use (if non null) or not (otherwise) of CLI\n+   globbing.  */\n+#ifdef MINGW_DOWILDCARD\n+int _dowildcard = MINGW_DOWILDCARD;\n+#endif"}, {"sha": "85f2793e5e934b6bf5629667578940cf3f172be3", "filename": "gcc/config/i386/x-mingw32", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfig%2Fi386%2Fx-mingw32", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfig%2Fi386%2Fx-mingw32", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fx-mingw32?ref=446163e239056462095abb2998bf7cc21edb4532", "patch": "@@ -29,3 +29,6 @@ host-mingw32.o : $(srcdir)/config/i386/host-mingw32.c $(CONFIG_H) $(SYSTEM_H) \\\n   coretypes.h hosthooks.h hosthooks-def.h toplev.h $(DIAGNOSTIC_H) $(HOOKS_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/i386/host-mingw32.c\n+\n+driver-mingw32.o : $(srcdir)/config/i386/driver-mingw32.c $(CONFIG_H)\n+\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $<"}, {"sha": "c823ffe6290435c41bd8e0e44dfef3934af80983", "filename": "gcc/configure", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=446163e239056462095abb2998bf7cc21edb4532", "patch": "@@ -922,6 +922,7 @@ with_libiconv_prefix\n enable_sjlj_exceptions\n with_gcc_major_version_only\n enable_secureplt\n+enable_mingw_wildcard\n enable_leading_mingw64_underscores\n enable_cld\n enable_frame_pointer\n@@ -1634,6 +1635,8 @@ Optional Features:\n   --enable-sjlj-exceptions\n                           arrange to use setjmp/longjmp exception handling\n   --enable-secureplt      enable -msecure-plt by default for PowerPC\n+  --enable-mingw-wildcard Set whether to expand wildcard on command-line.\n+                          Default to platform configuration\n   --enable-leading-mingw64-underscores\n                           enable leading underscores on 64 bit mingw targets\n   --enable-cld            enable -mcld by default for 32bit x86\n@@ -11964,6 +11967,21 @@ if test \"${enable_secureplt+set}\" = set; then :\n fi\n \n \n+# Check whether --enable-mingw-wildcard was given.\n+if test \"${enable_mingw_wildcard+set}\" = set; then :\n+  enableval=$enable_mingw_wildcard;\n+else\n+  enable_mingw_wildcard=platform\n+fi\n+\n+if test x\"$enable_mingw_wildcard\" != xplatform ; then :\n+\n+cat >>confdefs.h <<_ACEOF\n+#define MINGW_DOWILDCARD $(test x\"$enable_mingw_wildcard\" = xno; echo $?)\n+_ACEOF\n+\n+fi\n+\n # Check whether --enable-leading-mingw64-underscores was given.\n if test \"${enable_leading_mingw64_underscores+set}\" = set; then :\n   enableval=$enable_leading_mingw64_underscores;\n@@ -18422,7 +18440,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18425 \"configure\"\n+#line 18443 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18528,7 +18546,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18531 \"configure\"\n+#line 18549 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "acfe9797389643e81cb63ca9a6bf791555dc0acd", "filename": "gcc/configure.ac", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/446163e239056462095abb2998bf7cc21edb4532/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=446163e239056462095abb2998bf7cc21edb4532", "patch": "@@ -1811,6 +1811,16 @@ AC_ARG_ENABLE(secureplt,\n \t\t[enable -msecure-plt by default for PowerPC])],\n [], [])\n \n+AC_ARG_ENABLE(mingw-wildcard,\n+[AS_HELP_STRING([--enable-mingw-wildcard],\n+\t\t[Set whether to expand wildcard on command-line.\n+\t\t Default to platform configuration])],\n+[],[enable_mingw_wildcard=platform])\n+AS_IF([test x\"$enable_mingw_wildcard\" != xplatform ],\n+      [AC_DEFINE_UNQUOTED(MINGW_DOWILDCARD,\n+\t\t $(test x\"$enable_mingw_wildcard\" = xno; echo $?),\n+\t\t [Value to set mingw's _dowildcard to.])])\n+\n AC_ARG_ENABLE(leading-mingw64-underscores,\n   AS_HELP_STRING([--enable-leading-mingw64-underscores],\n                  [enable leading underscores on 64 bit mingw targets]),"}]}