{"sha": "968c8001a2f049c533f1b00fc0f7c31a0b11015e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY4YzgwMDFhMmYwNDljNTMzZjFiMDBmYzBmN2MzMWEwYjExMDE1ZQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2008-06-07T07:12:05Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2008-06-07T07:12:05Z"}, "message": "Move Ada specific log to the Ada ChangeLog file.\n\nFrom-SVN: r136517", "tree": {"sha": "d98e0e6d09b4471a0d89e5ca7215e4f8a30cfec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d98e0e6d09b4471a0d89e5ca7215e4f8a30cfec0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/968c8001a2f049c533f1b00fc0f7c31a0b11015e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/968c8001a2f049c533f1b00fc0f7c31a0b11015e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/968c8001a2f049c533f1b00fc0f7c31a0b11015e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/968c8001a2f049c533f1b00fc0f7c31a0b11015e/comments", "author": null, "committer": null, "parents": [{"sha": "bbb9e7b98e40b2c7b0b87b4d54c9063660df5f82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb9e7b98e40b2c7b0b87b4d54c9063660df5f82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb9e7b98e40b2c7b0b87b4d54c9063660df5f82"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "076cfe347c29e2c9f0a24b18c2c2eb366b7669a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/968c8001a2f049c533f1b00fc0f7c31a0b11015e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/968c8001a2f049c533f1b00fc0f7c31a0b11015e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=968c8001a2f049c533f1b00fc0f7c31a0b11015e", "patch": "@@ -1,29 +1,3 @@\n-2008-06-06  Nicolas Setton  <setton@adacore.com>\n-\t    Olivier Hainque  <hainque@adacore.com>\n-\n-\t* ada-tree.h (DECL_PARALLEL_TYPE): New language specific\n-\tattribute, parallel descriptive type attached to another\n-\ttype for debug info generation purposes.\n-\t* utils.c (add_parallel_type): New function, register\n-\tparallel type to be attached to a type.\n-\t(get_parallel_type): New function, fetch a registered\n-\tparallel type, if any.\n-\t(rest_of_record_type_compilation): Register the parallel\n-\ttype we\tmake for variable size records.\n-\t* gigi.h (add_parallel_type, get_parallel_type): Declare.\n-\t* decl.c (gnat_to_gnu_entity, maybe_pad_type): Register\tthe\n-\tparallel debug types we make.\n-\t* trans.c (extract_encoding, decode_name): New functions.\n-\t(gigi): If the DWARF attribute extensions are available, setup\n-\tto use them.\n-\t* lang.opt: Register language specific processing request\n-\tfor -gdwarf+.\n-\t* misc.c (gnat_dwarf_extensions): New global variable. How much\n-\tdo we want of our DWARF extensions. 0 by default.\n-\t(gnat_handle_option) <OPT_gdwarf_>: Increment gnat_dwarf_extensions.\n-\t(gnat_post_options): Map gnat_dwarf_extensions to the\n-\tcommonuse_gnu_debug_info_extensions for later processing.\n-\t\n 2008-06-06 Uros Bizjak <ubizjak@gmail.com>\n \n \tPR rtl-optimization/36438"}, {"sha": "4a5a5358585a68ec4cd5f69bc189a739db52c793", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/968c8001a2f049c533f1b00fc0f7c31a0b11015e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/968c8001a2f049c533f1b00fc0f7c31a0b11015e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=968c8001a2f049c533f1b00fc0f7c31a0b11015e", "patch": "@@ -1,3 +1,29 @@\n+2008-06-06  Nicolas Setton  <setton@adacore.com>\n+\t    Olivier Hainque  <hainque@adacore.com>\n+\n+\t* ada-tree.h (DECL_PARALLEL_TYPE): New language specific\n+\tattribute, parallel descriptive type attached to another\n+\ttype for debug info generation purposes.\n+\t* utils.c (add_parallel_type): New function, register\n+\tparallel type to be attached to a type.\n+\t(get_parallel_type): New function, fetch a registered\n+\tparallel type, if any.\n+\t(rest_of_record_type_compilation): Register the parallel\n+\ttype we\tmake for variable size records.\n+\t* gigi.h (add_parallel_type, get_parallel_type): Declare.\n+\t* decl.c (gnat_to_gnu_entity, maybe_pad_type): Register\tthe\n+\tparallel debug types we make.\n+\t* trans.c (extract_encoding, decode_name): New functions.\n+\t(gigi): If the DWARF attribute extensions are available, setup\n+\tto use them.\n+\t* lang.opt: Register language specific processing request\n+\tfor -gdwarf+.\n+\t* misc.c (gnat_dwarf_extensions): New global variable. How much\n+\tdo we want of our DWARF extensions. 0 by default.\n+\t(gnat_handle_option) <OPT_gdwarf_>: Increment gnat_dwarf_extensions.\n+\t(gnat_post_options): Map gnat_dwarf_extensions to the\n+\tcommonuse_gnu_debug_info_extensions for later processing.\n+\t\n 2008-06-04  Samuel Tardieu  <sam@rfc1149.net>\n \n \t* einfo.ads, einfo.adb: Remove unused flag Function_Returns_With_DSP."}]}