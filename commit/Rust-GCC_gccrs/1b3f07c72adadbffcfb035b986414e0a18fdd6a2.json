{"sha": "1b3f07c72adadbffcfb035b986414e0a18fdd6a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWIzZjA3YzcyYWRhZGJmZmNmYjAzNWI5ODY0MTRlMGExOGZkZDZhMg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-02-02T21:01:34Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-02-02T21:01:34Z"}, "message": "re PR fortran/52093 (Extra parenthesis with Size and Shape functions argument cause internal compiler error: Segmentation fault)\n\n2012-02-02  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52093\n        * simplify.c (gfc_simplify_size): Handle INTRINSIC_PARENTHESES.\n\n2012-02-02  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/52093\n        * gfortran.dg/shape_7.f90: New.\n\nFrom-SVN: r183848", "tree": {"sha": "e204ee1983ef45d40bb5d4653e5a8bc0cf6e3f0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e204ee1983ef45d40bb5d4653e5a8bc0cf6e3f0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b3f07c72adadbffcfb035b986414e0a18fdd6a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b3f07c72adadbffcfb035b986414e0a18fdd6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b3f07c72adadbffcfb035b986414e0a18fdd6a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1f01c3ecd197dc12ac7ebf05d2567d655496677a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f01c3ecd197dc12ac7ebf05d2567d655496677a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f01c3ecd197dc12ac7ebf05d2567d655496677a"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "7f8cc0606842b95042b2ca2c286012e160be7170", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1b3f07c72adadbffcfb035b986414e0a18fdd6a2", "patch": "@@ -1,3 +1,8 @@\n+2012-02-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52093\n+\t* simplify.c (gfc_simplify_size): Handle INTRINSIC_PARENTHESES.\n+\n 2012-02-01  Thomas K\u00f6nig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/51958"}, {"sha": "706dab440ce870569071e7ffa578d64b6b7862f4", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=1b3f07c72adadbffcfb035b986414e0a18fdd6a2", "patch": "@@ -5541,6 +5541,7 @@ gfc_simplify_size (gfc_expr *array, gfc_expr *dim, gfc_expr *kind)\n \t  case INTRINSIC_NOT:\n \t  case INTRINSIC_UPLUS:\n \t  case INTRINSIC_UMINUS:\n+\t  case INTRINSIC_PARENTHESES:\n \t    replacement = array->value.op.op1;\n \t    break;\n "}, {"sha": "9c0b3b8ced83ab5a95f2454b2e9fac1bee1243e3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b3f07c72adadbffcfb035b986414e0a18fdd6a2", "patch": "@@ -1,3 +1,8 @@\n+2012-02-02  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/52093\n+\t* gfortran.dg/shape_7.f90: New.\n+\n 2012-02-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/mips-prepend-1.c: New test."}, {"sha": "3c471f4d4a0908dbf1bd8db79d714f7fa9213568", "filename": "gcc/testsuite/gfortran.dg/shape_7.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_7.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b3f07c72adadbffcfb035b986414e0a18fdd6a2/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_7.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fshape_7.f90?ref=1b3f07c72adadbffcfb035b986414e0a18fdd6a2", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/52093\n+!\n+! Contributed by Mohammad Rahmani\n+!\n+\n+Program Main\n+ Implicit None\n+ Integer:: X(2,2)\n+ Integer:: X2(7:11,8:9)\n+\n+ if (size((X)) /= 4) call abort ()\n+ if (any (Shape((X))  /= [2,2])) call abort ()\n+ if (any (lbound((X)) /= [1,1])) call abort ()\n+ if (any (ubound((X)) /= [2,2])) call abort ()\n+\n+ if (size(X2) /= 10) call abort ()\n+ if (any (Shape(X2)  /= [5,2])) call abort ()\n+ if (any (lbound(X2) /= [7,8]))  call abort ()\n+ if (any (ubound(X2) /= [11,9])) call abort ()\n+\n+ if (size((X2)) /= 10) call abort ()\n+ if (any (Shape((X2))  /= [5,2])) call abort ()\n+ if (any (lbound((X2)) /= [1,1])) call abort ()\n+ if (any (ubound((X2)) /= [5,2])) call abort ()\n+End Program Main\n+\n+! { dg-final { scan-tree-dump-times \"abort\" 0 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }\n+"}]}