{"sha": "d5fe39d47c336e55acb80aa08e24e307e9262a83", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVmZTM5ZDQ3YzMzNmU1NWFjYjgwYWEwOGUyNGUzMDdlOTI2MmE4Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-02-19T08:43:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-02-19T08:43:23Z"}, "message": "re PR c++/89387 (ICE in maybe_generic_this_capture at gcc/cp/lambda.c:945 since r268851)\n\n\tPR c++/89387\n\t* lambda.c (maybe_generic_this_capture): Don't check\n\tDECL_NONSTATIC_MEMBER_FUNCTION_P on USING_DECLs.\n\n\t* g++.dg/cpp0x/lambda/lambda-89387.C: New test.\n\nFrom-SVN: r269009", "tree": {"sha": "57dc50171b731116b5bbf9cd70fa03c53115fd3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/57dc50171b731116b5bbf9cd70fa03c53115fd3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5fe39d47c336e55acb80aa08e24e307e9262a83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5fe39d47c336e55acb80aa08e24e307e9262a83", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5fe39d47c336e55acb80aa08e24e307e9262a83", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5fe39d47c336e55acb80aa08e24e307e9262a83/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50aaebab9410ae7afd6875fb396bdc23f6e4c32f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50aaebab9410ae7afd6875fb396bdc23f6e4c32f"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "2373c98b618083264d7d3fa8167697b9592f0ce7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5fe39d47c336e55acb80aa08e24e307e9262a83/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5fe39d47c336e55acb80aa08e24e307e9262a83/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d5fe39d47c336e55acb80aa08e24e307e9262a83", "patch": "@@ -1,5 +1,9 @@\n 2019-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/89387\n+\t* lambda.c (maybe_generic_this_capture): Don't check\n+\tDECL_NONSTATIC_MEMBER_FUNCTION_P on USING_DECLs.\n+\n \tPR c++/89391\n \t* typeck.c (build_reinterpret_cast_1): Don't handle void to\n \t&& conversion go through build_target_expr_with_type."}, {"sha": "791c8de6738075681ff0566e6e01531eaf768544", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5fe39d47c336e55acb80aa08e24e307e9262a83/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5fe39d47c336e55acb80aa08e24e307e9262a83/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=d5fe39d47c336e55acb80aa08e24e307e9262a83", "patch": "@@ -941,7 +941,8 @@ maybe_generic_this_capture (tree object, tree fns)\n \t  fns = TREE_OPERAND (fns, 0);\n \n \tfor (lkp_iterator iter (fns); iter; ++iter)\n-\t  if ((!id_expr || TREE_CODE (*iter) == TEMPLATE_DECL)\n+\t  if (((!id_expr && TREE_CODE (*iter) != USING_DECL)\n+\t       || TREE_CODE (*iter) == TEMPLATE_DECL)\n \t      && DECL_NONSTATIC_MEMBER_FUNCTION_P (*iter))\n \t    {\n \t      /* Found a non-static member.  Capture this.  */"}, {"sha": "c6387503b401ab58c6a4e5036355eb66b72dbc45", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5fe39d47c336e55acb80aa08e24e307e9262a83/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5fe39d47c336e55acb80aa08e24e307e9262a83/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5fe39d47c336e55acb80aa08e24e307e9262a83", "patch": "@@ -1,5 +1,8 @@\n 2019-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR c++/89387\n+\t* g++.dg/cpp0x/lambda/lambda-89387.C: New test.\n+\n \tPR c++/89391\n \t* g++.dg/cpp0x/reinterpret_cast2.C: New test.\n "}, {"sha": "943ebc943737251780be08871e9bf35193028d65", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-89387.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5fe39d47c336e55acb80aa08e24e307e9262a83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-89387.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5fe39d47c336e55acb80aa08e24e307e9262a83/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-89387.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-89387.C?ref=d5fe39d47c336e55acb80aa08e24e307e9262a83", "patch": "@@ -0,0 +1,11 @@\n+// PR c++/89387\n+// { dg-do compile { target c++11 } }\n+\n+template <template <typename, typename> class T>\n+struct S {\n+  using A = int;\n+  using B = T<unsigned, A>;\n+  using B::foo;\n+  void bar () { [&] { foo (); }; }\n+  void foo ();\n+};"}]}