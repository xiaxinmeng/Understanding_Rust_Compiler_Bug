{"sha": "01264f72d9c90212dc62681f4fd6cbd16f78263d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEyNjRmNzJkOWM5MDIxMmRjNjI2ODFmNGZkNmNiZDE2Zjc4MjYzZA==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2020-04-20T19:17:05Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-18T09:08:13Z"}, "message": "[Ada] Crash in tagged type constructor with task components\n\n2020-06-18  Javier Miranda  <miranda@adacore.com>\n\ngcc/ada/\n\n\t* exp_disp.adb (Expand_Dispatching_Call): Add missing decoration\n\tof attribute Extra_Accessibility_Of_Result.\n\t* freeze.adb (Check_Extra_Formals): No check required if\n\texpansion is disabled; Adding check on\n\tExtra_Accessibilty_Of_Result.\n\t(Freeze_Subprogram): Fix decoration of\n\tExtra_Accessibility_Of_Result.\n\t* sem_ch3.adb (Derive_Subprogram): Fix decoration of\n\tExtra_Accessibility_Of_Result", "tree": {"sha": "3751193b4d038b70cc3fb89daf038384fbf4965c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3751193b4d038b70cc3fb89daf038384fbf4965c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01264f72d9c90212dc62681f4fd6cbd16f78263d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01264f72d9c90212dc62681f4fd6cbd16f78263d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01264f72d9c90212dc62681f4fd6cbd16f78263d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01264f72d9c90212dc62681f4fd6cbd16f78263d/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52531a6203ca7a9d82b8e002a73b0b9d21b932c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52531a6203ca7a9d82b8e002a73b0b9d21b932c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52531a6203ca7a9d82b8e002a73b0b9d21b932c0"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "65d5b2a37aa6208cc59420767bd1d25f7f954dbc", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01264f72d9c90212dc62681f4fd6cbd16f78263d/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01264f72d9c90212dc62681f4fd6cbd16f78263d/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=01264f72d9c90212dc62681f4fd6cbd16f78263d", "patch": "@@ -1085,12 +1085,26 @@ package body Exp_Disp is\n             Set_Extra_Formal (Last_Formal, New_Formal);\n             Set_Extra_Formals (Subp_Typ, New_Formal);\n \n+            if Ekind (Subp) = E_Function\n+              and then Present (Extra_Accessibility_Of_Result (Subp))\n+              and then Extra_Accessibility_Of_Result (Subp) = Old_Formal\n+            then\n+               Set_Extra_Accessibility_Of_Result (Subp_Typ, New_Formal);\n+            end if;\n+\n             Old_Formal := Extra_Formal (Old_Formal);\n             while Present (Old_Formal) loop\n                Set_Extra_Formal (New_Formal, New_Copy (Old_Formal));\n                New_Formal := Extra_Formal (New_Formal);\n                Set_Scope (New_Formal, Subp_Typ);\n \n+               if Ekind (Subp) = E_Function\n+                 and then Present (Extra_Accessibility_Of_Result (Subp))\n+                 and then Extra_Accessibility_Of_Result (Subp) = Old_Formal\n+               then\n+                  Set_Extra_Accessibility_Of_Result (Subp_Typ, New_Formal);\n+               end if;\n+\n                Old_Formal := Extra_Formal (Old_Formal);\n             end loop;\n          end if;"}, {"sha": "57b48941c37cad0c073e5c00adf522522528a6dd", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01264f72d9c90212dc62681f4fd6cbd16f78263d/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01264f72d9c90212dc62681f4fd6cbd16f78263d/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=01264f72d9c90212dc62681f4fd6cbd16f78263d", "patch": "@@ -8718,6 +8718,14 @@ package body Freeze is\n          Has_Extra_Formals : Boolean := False;\n \n       begin\n+         --  No check required if expansion is disabled because extra\n+         --  formals are only generated when we are generating code.\n+         --  See Create_Extra_Formals.\n+\n+         if not Expander_Active then\n+            return True;\n+         end if;\n+\n          --  Check attribute Extra_Formal: if available it must be set only\n          --  in the last formal of E\n \n@@ -8735,6 +8743,15 @@ package body Freeze is\n             Next_Formal (Formal);\n          end loop;\n \n+         --  Check attribute Extra_Accessibility_Of_Result\n+\n+         if Ekind_In (E, E_Function, E_Subprogram_Type)\n+           and then Needs_Result_Accessibility_Level (E)\n+           and then No (Extra_Accessibility_Of_Result (E))\n+         then\n+            return False;\n+         end if;\n+\n          --  Check attribute Extra_Formals: if E has extra formals then this\n          --  attribute must must point to the first extra formal of E.\n \n@@ -8897,14 +8914,16 @@ package body Freeze is\n             --  still unset (and must be set now).\n \n             if Present (Alias (E))\n+              and then Is_Frozen (Ultimate_Alias (E))\n               and then Present (Extra_Formals (Ultimate_Alias (E)))\n               and then Last_Formal (Ultimate_Alias (E)) = Last_Formal (E)\n             then\n-               pragma Assert (Is_Frozen (Ultimate_Alias (E)));\n-               pragma Assert (No (First_Formal (Ultimate_Alias (E)))\n-                 or else\n-                   Present (Extra_Formal (Last_Formal (Ultimate_Alias (E)))));\n                Set_Extra_Formals (E, Extra_Formals (Ultimate_Alias (E)));\n+\n+               if Ekind (E) = E_Function then\n+                  Set_Extra_Accessibility_Of_Result (E,\n+                    Extra_Accessibility_Of_Result (Ultimate_Alias (E)));\n+               end if;\n             else\n                Create_Extra_Formals (E);\n             end if;"}, {"sha": "78de3885a158b1bc0e922d5d28be3ad33a08d057", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01264f72d9c90212dc62681f4fd6cbd16f78263d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01264f72d9c90212dc62681f4fd6cbd16f78263d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=01264f72d9c90212dc62681f4fd6cbd16f78263d", "patch": "@@ -15563,6 +15563,11 @@ package body Sem_Ch3 is\n \n       Set_Extra_Formals (New_Subp, Extra_Formals (Parent_Subp));\n \n+      if Ekind (New_Subp) = E_Function then\n+         Set_Extra_Accessibility_Of_Result (New_Subp,\n+           Extra_Accessibility_Of_Result (Parent_Subp));\n+      end if;\n+\n       --  If this derivation corresponds to a tagged generic actual, then\n       --  primitive operations rename those of the actual. Otherwise the\n       --  primitive operations rename those of the parent type, If the parent"}]}