{"sha": "2514987fa9a984b5f68ea5897d556deca3625139", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxNDk4N2ZhOWE5ODRiNWY2OGVhNTg5N2Q1NTZkZWNhMzYyNTEzOQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-05-27T18:51:31Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-05-27T18:51:31Z"}, "message": "re PR fortran/48820 (TR 29113: Implement parts needed for MPI 3)\n\n2011-05-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/48820\n        * gfortran.h (gfc_isym_id): Add GFC_ISYM_RANK.\n        * intrinsic.c (add_functions): Add rank intrinsic.\n        (gfc_check_intrinsic_standard): Handle GFC_STD_F2008_TR.\n        * intrinsic.h (gfc_simplify_rank, gfc_check_rank): Add\n        * prototypes.\n        * simplify.c (gfc_simplify_rank): New function.\n        * intrinsic.texi (RANK): Add description for rank intrinsic.\n        * check.c (gfc_check_rank): New function.\n\n2011-05-27  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/48820\n        * gfortran.dg/rank_3.f90: New.\n        * gfortran.dg/rank_4.f90: New.\n\nFrom-SVN: r174348", "tree": {"sha": "341533aad243abe6b029ec89d06762f65a06ebd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/341533aad243abe6b029ec89d06762f65a06ebd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2514987fa9a984b5f68ea5897d556deca3625139", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2514987fa9a984b5f68ea5897d556deca3625139", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2514987fa9a984b5f68ea5897d556deca3625139", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2514987fa9a984b5f68ea5897d556deca3625139/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f97b516f9a546f294a8b091d4b7fc684d0acb282", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f97b516f9a546f294a8b091d4b7fc684d0acb282", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f97b516f9a546f294a8b091d4b7fc684d0acb282"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "63ff7dbf0b185d24478202a3b88e04e25fe23b88", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -1,3 +1,14 @@\n+2011-05-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48820\n+\t* gfortran.h (gfc_isym_id): Add GFC_ISYM_RANK.\n+\t* intrinsic.c (add_functions): Add rank intrinsic.\n+\t(gfc_check_intrinsic_standard): Handle GFC_STD_F2008_TR.\n+\t* intrinsic.h (gfc_simplify_rank, gfc_check_rank): Add prototypes.\n+\t* simplify.c (gfc_simplify_rank): New function.\n+\t* intrinsic.texi (RANK): Add description for rank intrinsic.\n+\t* check.c (gfc_check_rank): New function.\n+\n 2011-05-26  Paul Thomas  <pault@gcc.gnu.org>\n \t    Thomas Koenig  <tkoenig@gcc.gnu.org>\n "}, {"sha": "01651cb5a23baa42f3c782c87241d34cbde33858", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -2830,6 +2830,33 @@ gfc_check_range (gfc_expr *x)\n }\n \n \n+gfc_try\n+gfc_check_rank (gfc_expr *a ATTRIBUTE_UNUSED)\n+{\n+  /* Any data object is allowed; a \"data object\" is a \"constant (4.1.3),\n+     variable (6), or subobject of a constant (2.4.3.2.3)\" (F2008, 1.3.45).  */\n+\n+  bool is_variable = true;\n+\n+  /* Functions returning pointers are regarded as variable, cf. F2008, R602. */\n+  if (a->expr_type == EXPR_FUNCTION) \n+    is_variable = a->value.function.esym\n+\t\t  ? a->value.function.esym->result->attr.pointer\n+\t\t  : a->symtree->n.sym->result->attr.pointer;\n+\n+  if (a->expr_type == EXPR_OP || a->expr_type == EXPR_NULL\n+      || a->expr_type == EXPR_COMPCALL|| a->expr_type == EXPR_PPC\n+      || !is_variable)\n+    {\n+      gfc_error (\"The argument of the RANK intrinsic at %L must be a data \"\n+\t\t \"object\", &a->where);\n+      return FAILURE;\n+    }\n+\n+  return SUCCESS;\n+}\n+\n+\n /* real, float, sngl.  */\n gfc_try\n gfc_check_real (gfc_expr *a, gfc_expr *kind)"}, {"sha": "752a07139cad183e5baa260f8ad9cc82dca850e3", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -472,6 +472,7 @@ enum gfc_isym_id\n   GFC_ISYM_RANDOM_NUMBER,\n   GFC_ISYM_RANDOM_SEED,\n   GFC_ISYM_RANGE,\n+  GFC_ISYM_RANK,\n   GFC_ISYM_REAL,\n   GFC_ISYM_RENAME,\n   GFC_ISYM_REPEAT,"}, {"sha": "6151db77edadf87bb3316b3525724623e713284f", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -2433,6 +2433,11 @@ add_functions (void)\n \n   make_generic (\"range\", GFC_ISYM_RANGE, GFC_STD_F95);\n \n+  add_sym_1 (\"rank\", GFC_ISYM_RANK, CLASS_INQUIRY, ACTUAL_NO, BT_INTEGER, di,\n+\t     GFC_STD_F2008_TR, gfc_check_rank, gfc_simplify_rank, NULL,\n+\t     a, BT_REAL, dr, REQUIRED);\n+  make_generic (\"rank\", GFC_ISYM_RANK, GFC_STD_F2008_TR);\n+\n   add_sym_2 (\"real\", GFC_ISYM_REAL, CLASS_ELEMENTAL, ACTUAL_NO, BT_REAL, dr, GFC_STD_F77,\n \t     gfc_check_real, gfc_simplify_real, gfc_resolve_real,\n \t     a, BT_UNKNOWN, dr, REQUIRED, kind, BT_INTEGER, di, OPTIONAL);\n@@ -3972,6 +3977,10 @@ gfc_check_intrinsic_standard (const gfc_intrinsic_sym* isym,\n       symstd_msg = \"new in Fortran 2008\";\n       break;\n \n+    case GFC_STD_F2008_TR:\n+      symstd_msg = \"new in TR 29113\";\n+      break;\n+\n     case GFC_STD_GNU:\n       symstd_msg = \"a GNU Fortran extension\";\n       break;"}, {"sha": "88ce008485638c77c3cb774f717d9c61d2241220", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -122,6 +122,7 @@ gfc_try gfc_check_product_sum (gfc_actual_arglist *);\n gfc_try gfc_check_radix (gfc_expr *);\n gfc_try gfc_check_rand (gfc_expr *);\n gfc_try gfc_check_range (gfc_expr *);\n+gfc_try gfc_check_rank (gfc_expr *);\n gfc_try gfc_check_real (gfc_expr *, gfc_expr *);\n gfc_try gfc_check_rename (gfc_expr *, gfc_expr *);\n gfc_try gfc_check_repeat (gfc_expr *, gfc_expr *);\n@@ -345,6 +346,7 @@ gfc_expr *gfc_simplify_precision (gfc_expr *);\n gfc_expr *gfc_simplify_product (gfc_expr *, gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_radix (gfc_expr *);\n gfc_expr *gfc_simplify_range (gfc_expr *);\n+gfc_expr *gfc_simplify_rank (gfc_expr *);\n gfc_expr *gfc_simplify_real (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_realpart (gfc_expr *);\n gfc_expr *gfc_simplify_repeat (gfc_expr *, gfc_expr *);"}, {"sha": "2ea4fc5271d990c01dc10286aa99f23e0aa41e1a", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -236,6 +236,7 @@ Some basic guidelines for editing this document:\n * @code{RANDOM_SEED}:   RANDOM_SEED, Initialize a pseudo-random number sequence\n * @code{RAND}:          RAND,      Real pseudo-random number\n * @code{RANGE}:         RANGE,     Decimal exponent range\n+* @code{RANK} :         RANK,      Rank of a data object\n * @code{RAN}:           RAN,       Real pseudo-random number\n * @code{REAL}:          REAL,      Convert to real type \n * @code{RENAME}:        RENAME,    Rename a file\n@@ -10115,6 +10116,47 @@ See @code{PRECISION} for an example.\n \n \n \n+@node RANK\n+@section @code{RANK} --- Rank of a data object\n+@fnindex RANK\n+@cindex rank\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{RANK(A)} returns the rank of a scalar or array data object.\n+\n+@item @emph{Standard}:\n+Technical Report (TR) 29113\n+\n+@item @emph{Class}:\n+Inquiry function\n+\n+@item @emph{Syntax}:\n+@code{RESULT = RANGE(A)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{A} @tab can be of any type\n+@end multitable\n+\n+@item @emph{Return value}:\n+The return value is of type @code{INTEGER} and of the default integer\n+kind. For arrays, their rank is returned; for scalars zero is returned.\n+\n+@item @emph{Example}:\n+@smallexample\n+program test_rank\n+  integer :: a\n+  real, allocatable :: b(:,:)\n+\n+  print *, rank(a), rank(b) ! Prints:  0  3\n+end program test_rank\n+@end smallexample\n+\n+@end table\n+\n+\n+\n @node REAL\n @section @code{REAL} --- Convert to real type \n @fnindex REAL"}, {"sha": "79b383a46db905bcb8db7a10c0b6b09f06d24d27", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -4821,6 +4821,13 @@ gfc_simplify_range (gfc_expr *e)\n }\n \n \n+gfc_expr *\n+gfc_simplify_rank (gfc_expr *e)\n+{\n+  return gfc_get_int_expr (gfc_default_integer_kind, &e->where, e->rank);\n+}\n+\n+\n gfc_expr *\n gfc_simplify_real (gfc_expr *e, gfc_expr *k)\n {"}, {"sha": "bb23b71195f60a4a0dc066c5b3afd33755ee2934", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -1,3 +1,9 @@\n+2011-05-27  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/48820\n+\t* gfortran.dg/rank_3.f90: New.\n+\t* gfortran.dg/rank_4.f90: New.\n+\n 2011-05-27  Janis Johnson  <janisjo@codesourcery.com>\n \n \t* g++.dg/tree-ssa-pr43411.C: Rename function to be inlined and"}, {"sha": "fac2185a9fe9ab566da88115facb43ec3a34cf9c", "filename": "gcc/testsuite/gfortran.dg/rank_3.f90", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_3.f90?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2008\" }\n+!\n+! PR fortran/48820\n+!\n+intrinsic :: rank  ! { dg-error \"new in TR 29113\" }\n+end"}, {"sha": "40b0209da953d0604e93fc4fce2a78f94b610248", "filename": "gcc/testsuite/gfortran.dg/rank_4.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2514987fa9a984b5f68ea5897d556deca3625139/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Frank_4.f90?ref=2514987fa9a984b5f68ea5897d556deca3625139", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do compile }\n+! { dg-options \"-std=f2008tr -fdump-tree-original\" }\n+!\n+! PR fortran/48820\n+!\n+\n+program test_rank\n+  implicit none\n+  intrinsic :: rank\n+\n+  integer :: a\n+  real, allocatable :: b(:,:)\n+\n+  if (rank(a) /= 0) call not_existing()\n+  if (rank (b) /= 2) call not_existing()\n+end program test_rank\n+\n+! { dg-final { scan-tree-dump-times \"not_existing\" 0 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}