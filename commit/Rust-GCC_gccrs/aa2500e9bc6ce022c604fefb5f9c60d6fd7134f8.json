{"sha": "aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEyNTAwZTliYzZjZTAyMmM2MDRmZWZiNWY5YzYwZDZmZDcxMzRmOA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-01-16T02:27:36Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@gcc.gnu.org", "date": "2016-01-16T02:27:36Z"}, "message": "re PR c++/68936 (ICE: tree check: expected call_expr, have target_expr in build_min_non_dep_call_vec, at cp/tree.c:2744)\n\nFix PR c++/68936\n\ngcc/cp/ChangeLog:\n\n\tPR c++/68936\n\t* tree.c (build_min_non_dep_call_vec): Don't retain the\n\tKOENIG_LOOKUP_P flag of the non-dependent expression that's\n\tbeen built.\n\t(build_min_non_dep_op_overload): Instead, do it here.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/68936\n\t* g++.dg/template/pr68936.C: New test.\n\nFrom-SVN: r232461", "tree": {"sha": "945a72ee17fb7ace0b1b95f89bde543d3b2979f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/945a72ee17fb7ace0b1b95f89bde543d3b2979f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/comments", "author": null, "committer": null, "parents": [{"sha": "22c8388fc6f28e5ed3d9bbf20574c704763f6c1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22c8388fc6f28e5ed3d9bbf20574c704763f6c1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22c8388fc6f28e5ed3d9bbf20574c704763f6c1f"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "fbf8064fc9ac440e57788238b3a1d4b1e6e0f3ea", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8", "patch": "@@ -1,3 +1,11 @@\n+2016-01-16  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/68936\n+\t* tree.c (build_min_non_dep_call_vec): Don't retain the\n+\tKOENIG_LOOKUP_P flag of the non-dependent expression that's\n+\tbeen built.\n+\t(build_min_non_dep_op_overload): Instead, do it here.\n+\n 2016-01-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/68271"}, {"sha": "d4cf3102a03171b9d101ab26d34aa47fbb933ada", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8", "patch": "@@ -2747,7 +2747,6 @@ build_min_non_dep_call_vec (tree non_dep, tree fn, vec<tree, va_gc> *argvec)\n     non_dep = TREE_OPERAND (non_dep, 0);\n   TREE_TYPE (t) = TREE_TYPE (non_dep);\n   TREE_SIDE_EFFECTS (t) = TREE_SIDE_EFFECTS (non_dep);\n-  KOENIG_LOOKUP_P (t) = KOENIG_LOOKUP_P (non_dep);\n   return convert_from_reference (t);\n }\n \n@@ -2810,6 +2809,11 @@ build_min_non_dep_op_overload (enum tree_code op,\n   call = build_min_non_dep_call_vec (non_dep, fn, args);\n   release_tree_vector (args);\n \n+  tree call_expr = call;\n+  if (REFERENCE_REF_P (call_expr))\n+    call_expr = TREE_OPERAND (call_expr, 0);\n+  KOENIG_LOOKUP_P (call_expr) = KOENIG_LOOKUP_P (non_dep);\n+\n   return call;\n }\n "}, {"sha": "600329af803235cc791deab1b000925f48e79c48", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8", "patch": "@@ -1,3 +1,8 @@\n+2016-01-16  Patrick Palka  <ppalka@gcc.gnu.org>\n+\n+\tPR c++/68936\n+\t* g++.dg/template/pr68936.C: New test.\n+\n 2016-01-15  David Edelsohn  <dje.gcc@gmail.com>\n \n \tPR target/68609"}, {"sha": "ecfc09ed73ef3508dd8d8603ae93dac4518653f9", "filename": "gcc/testsuite/g++.dg/template/pr68936.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr68936.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr68936.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr68936.C?ref=aa2500e9bc6ce022c604fefb5f9c60d6fd7134f8", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/68936\n+\n+class A {};\n+\n+struct predefined_macros {\n+  struct B {\n+    A (predefined_macros::*generator)();\n+  };\n+};\n+\n+template <typename> class C {\n+  void m_fn1();\n+  predefined_macros predef;\n+};\n+\n+predefined_macros::B m;\n+\n+template <typename ContextT> void C<ContextT>::m_fn1() {\n+  (predef.*m.generator)();\n+}"}]}