{"sha": "6594b49de906c6d295903936d612047890a7c584", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjU5NGI0OWRlOTA2YzZkMjk1OTAzOTM2ZDYxMjA0Nzg5MGE3YzU4NA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2010-06-01T19:34:57Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2010-06-01T19:34:57Z"}, "message": "tree.h (build_nt_call_list): Delete.\n\n\t* tree.h (build_nt_call_list): Delete.\n\t* tree.c (build_nt_call_list): Delete.\n\nFrom-SVN: r160120", "tree": {"sha": "2c12c732091a2e46ba81c250184e0741ffd78f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c12c732091a2e46ba81c250184e0741ffd78f49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6594b49de906c6d295903936d612047890a7c584", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6594b49de906c6d295903936d612047890a7c584", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6594b49de906c6d295903936d612047890a7c584", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6594b49de906c6d295903936d612047890a7c584/comments", "author": null, "committer": null, "parents": [{"sha": "f038ec69ccffc38e5038c121cff9e5bbc701b6cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f038ec69ccffc38e5038c121cff9e5bbc701b6cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f038ec69ccffc38e5038c121cff9e5bbc701b6cd"}], "stats": {"total": 23, "additions": 5, "deletions": 18}, "files": [{"sha": "bf17b3a0937977aaeba40af1f2859e1bc656e97d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6594b49de906c6d295903936d612047890a7c584/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6594b49de906c6d295903936d612047890a7c584/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6594b49de906c6d295903936d612047890a7c584", "patch": "@@ -1,3 +1,8 @@\n+2010-06-01  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree.h (build_nt_call_list): Delete.\n+\t* tree.c (build_nt_call_list): Delete.\n+\n 2010-06-01  Jan Hubicka  <jh@suse.cz>\n \n \t* fwprop.c: Make emit-rtl.h include last."}, {"sha": "81ea666d8aa88120ef2ffc34ef1f7ba75ac6dacd", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6594b49de906c6d295903936d612047890a7c584/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6594b49de906c6d295903936d612047890a7c584/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=6594b49de906c6d295903936d612047890a7c584", "patch": "@@ -3852,23 +3852,6 @@ build_nt (enum tree_code code, ...)\n   return t;\n }\n \n-/* Similar to build_nt, but for creating a CALL_EXPR object with\n-   ARGLIST passed as a list.  */\n-\n-tree\n-build_nt_call_list (tree fn, tree arglist)\n-{\n-  tree t;\n-  int i;\n-\n-  t = build_vl_exp (CALL_EXPR, list_length (arglist) + 3);\n-  CALL_EXPR_FN (t) = fn;\n-  CALL_EXPR_STATIC_CHAIN (t) = NULL_TREE;\n-  for (i = 0; arglist; arglist = TREE_CHAIN (arglist), i++)\n-    CALL_EXPR_ARG (t, i) = TREE_VALUE (arglist);\n-  return t;\n-}\n-\n /* Similar to build_nt, but for creating a CALL_EXPR object with a\n    tree VEC.  */\n "}, {"sha": "e94bdc84f47e49b6dd2df37539ccccea48e09a89", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6594b49de906c6d295903936d612047890a7c584/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6594b49de906c6d295903936d612047890a7c584/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=6594b49de906c6d295903936d612047890a7c584", "patch": "@@ -3971,7 +3971,6 @@ extern tree maybe_get_identifier (const char *);\n /* Construct various types of nodes.  */\n \n extern tree build_nt (enum tree_code, ...);\n-extern tree build_nt_call_list (tree, tree);\n extern tree build_nt_call_vec (tree, VEC(tree,gc) *);\n \n extern tree build0_stat (enum tree_code, tree MEM_STAT_DECL);"}]}