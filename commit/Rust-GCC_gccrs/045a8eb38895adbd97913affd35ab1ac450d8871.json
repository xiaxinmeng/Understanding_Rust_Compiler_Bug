{"sha": "045a8eb38895adbd97913affd35ab1ac450d8871", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ1YThlYjM4ODk1YWRiZDk3OTEzYWZmZDM1YWIxYWM0NTBkODg3MQ==", "commit": {"author": {"name": "Geoffrey Keating", "email": "geoffk@apple.com", "date": "2005-05-18T20:36:02Z"}, "committer": {"name": "Geoffrey Keating", "email": "geoffk@gcc.gnu.org", "date": "2005-05-18T20:36:02Z"}, "message": "predicates.md (fix_trunc_dest_operand): New.\n\n\t* rs6000/predicates.md (fix_trunc_dest_operand): New.\n\t* rs6000/rs6000.md (fix_truncdfsi2): Use fix_trunc_dest_operand.\n\tCheck that a memory operand is valid before trying to use it.\n\nFrom-SVN: r99927", "tree": {"sha": "e5936d85783b1d4a0283e2f0c5db8f7fcc95bb87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5936d85783b1d4a0283e2f0c5db8f7fcc95bb87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/045a8eb38895adbd97913affd35ab1ac450d8871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/045a8eb38895adbd97913affd35ab1ac450d8871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/045a8eb38895adbd97913affd35ab1ac450d8871", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/045a8eb38895adbd97913affd35ab1ac450d8871/comments", "author": {"login": "geoffk01", "id": 31905243, "node_id": "MDQ6VXNlcjMxOTA1MjQz", "avatar_url": "https://avatars.githubusercontent.com/u/31905243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geoffk01", "html_url": "https://github.com/geoffk01", "followers_url": "https://api.github.com/users/geoffk01/followers", "following_url": "https://api.github.com/users/geoffk01/following{/other_user}", "gists_url": "https://api.github.com/users/geoffk01/gists{/gist_id}", "starred_url": "https://api.github.com/users/geoffk01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geoffk01/subscriptions", "organizations_url": "https://api.github.com/users/geoffk01/orgs", "repos_url": "https://api.github.com/users/geoffk01/repos", "events_url": "https://api.github.com/users/geoffk01/events{/privacy}", "received_events_url": "https://api.github.com/users/geoffk01/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5ac7af02eacac7a2e00d9fd2fa4e35459f9ca3f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ac7af02eacac7a2e00d9fd2fa4e35459f9ca3f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ac7af02eacac7a2e00d9fd2fa4e35459f9ca3f4"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "625fa6ac20ba8f13dd8e5f96e57683a7b2ec10e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045a8eb38895adbd97913affd35ab1ac450d8871/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045a8eb38895adbd97913affd35ab1ac450d8871/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=045a8eb38895adbd97913affd35ab1ac450d8871", "patch": "@@ -1,5 +1,9 @@\n 2005-05-18  Geoffrey Keating  <geoffk@apple.com>\n \n+\t* rs6000/predicates.md (fix_trunc_dest_operand): New.\n+\t* rs6000/rs6000.md (fix_truncdfsi2): Use fix_trunc_dest_operand.\n+\tCheck that a memory operand is valid before trying to use it.\n+\t\n \t* tree-cfg.c (pass_remove_useless): This pass works on trees.\n \n 2005-05-18  Richard Guenther  <rguenth@gcc.gnu.org>"}, {"sha": "570f59d3f0ce7e27511a29453b4e1d1345acfb58", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045a8eb38895adbd97913affd35ab1ac450d8871/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045a8eb38895adbd97913affd35ab1ac450d8871/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=045a8eb38895adbd97913affd35ab1ac450d8871", "patch": "@@ -364,6 +364,15 @@\n \t\t    || GET_CODE (XEXP (XEXP (op, 0), 1)) != CONST_INT\n \t\t    || INTVAL (XEXP (XEXP (op, 0), 1)) % 4 == 0\")))\n \n+;; Used for the destination of the fix_truncdfsi2 expander.\n+;; If stfiwx will be used, the result goes to memory; otherwise,\n+;; we're going to emit a store and a load of a subreg, so the dest is a\n+;; register.\n+(define_predicate \"fix_trunc_dest_operand\"\n+  (if_then_else (match_test \"! TARGET_E500_DOUBLE && TARGET_PPC_GFXOPT\")\n+   (match_operand 0 \"memory_operand\")\n+   (match_operand 0 \"gpc_reg_operand\")))\n+\n ;; Return 1 if the operand is either a non-special register or can be used\n ;; as the operand of a `mode' add insn.\n (define_predicate \"add_operand\""}, {"sha": "b53792c32ae2fc1efc3ec9137f3171c12e8da52f", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/045a8eb38895adbd97913affd35ab1ac450d8871/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/045a8eb38895adbd97913affd35ab1ac450d8871/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=045a8eb38895adbd97913affd35ab1ac450d8871", "patch": "@@ -5329,10 +5329,8 @@\n }\"\n   [(set_attr \"length\" \"20\")])\n \n-; In the TARGET_PPC_GFXOPT case, this could and probably should\n-; take a memory destination; but actually making this work is hard.\n (define_expand \"fix_truncdfsi2\"\n-  [(parallel [(set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n+  [(parallel [(set (match_operand:SI 0 \"fix_trunc_dest_operand\" \"\")\n \t\t   (fix:SI (match_operand:DF 1 \"gpc_reg_operand\" \"\")))\n \t      (clobber (match_dup 2))\n \t      (clobber (match_dup 3))])]\n@@ -5349,7 +5347,7 @@\n   if (TARGET_PPC_GFXOPT)\n     {\n       rtx orig_dest = operands[0];\n-      if (GET_CODE (orig_dest) != MEM)\n+      if (! memory_operand (orig_dest, GET_MODE (orig_dest)))\n \toperands[0] = assign_stack_temp (SImode, GET_MODE_SIZE (SImode), 0);\n       emit_insn (gen_fix_truncdfsi2_internal_gfxopt (operands[0], operands[1],\n \t\t\t\t\t\t     operands[2]));"}]}