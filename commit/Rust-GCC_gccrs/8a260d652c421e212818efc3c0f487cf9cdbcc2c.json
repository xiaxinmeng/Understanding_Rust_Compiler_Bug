{"sha": "8a260d652c421e212818efc3c0f487cf9cdbcc2c", "node_id": "C_kwDOANBUbNoAKDhhMjYwZDY1MmM0MjFlMjEyODE4ZWZjM2MwZjQ4N2NmOWNkYmNjMmM", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-11-01T13:42:51Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2021-11-01T13:42:51Z"}, "message": "testsuite: fix failing complex add testcases PR103000\n\nSome targets have overriden the default unroll factor and so do not have enough\ndata to succeed for SLP vectorization if loop vect is turned off.\n\nTo fix this just always unroll in these testcases.\n\ngcc/testsuite/ChangeLog:\n\n\tPR testsuite/103000\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-double.c:\n\tForce unroll.\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-float.c: likewise\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-float.c:\n\tLikewise\n\t* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-half-float.c:\n\tLikewise.", "tree": {"sha": "e74cee5e54713b1abe4eda78815ae162d95c49f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e74cee5e54713b1abe4eda78815ae162d95c49f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8a260d652c421e212818efc3c0f487cf9cdbcc2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a260d652c421e212818efc3c0f487cf9cdbcc2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a260d652c421e212818efc3c0f487cf9cdbcc2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a260d652c421e212818efc3c0f487cf9cdbcc2c/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd5e882cf6e0def3dd1bc106075d59a303fe0d1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd5e882cf6e0def3dd1bc106075d59a303fe0d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd5e882cf6e0def3dd1bc106075d59a303fe0d1e"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "23f179a55dcf77c7cfa8f55f748c9973b5e9c646", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-double.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a260d652c421e212818efc3c0f487cf9cdbcc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-double.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a260d652c421e212818efc3c0f487cf9cdbcc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-double.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-double.c?ref=8a260d652c421e212818efc3c0f487cf9cdbcc2c", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_double } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n+/* { dg-additional-options \"-fno-tree-loop-vectorize -funroll-loops\" } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE double"}, {"sha": "cc7715160981274605b4ab21e7db33fdb373e04d", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-float.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a260d652c421e212818efc3c0f487cf9cdbcc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a260d652c421e212818efc3c0f487cf9cdbcc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-float.c?ref=8a260d652c421e212818efc3c0f487cf9cdbcc2c", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n+/* { dg-additional-options \"-fno-tree-loop-vectorize -funroll-loops\" } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float"}, {"sha": "fb6a1676fb4b7a766088dcec42a3a2465c3e11f9", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-float.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a260d652c421e212818efc3c0f487cf9cdbcc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a260d652c421e212818efc3c0f487cf9cdbcc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-float.c?ref=8a260d652c421e212818efc3c0f487cf9cdbcc2c", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_float } */\n /* { dg-add-options arm_v8_3a_complex_neon } */\n-/* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n+/* { dg-additional-options \"-fno-tree-loop-vectorize -funroll-loops\" } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE float"}, {"sha": "4bb106a3d520c6ab2a322cc463f6a7f5c5238f95", "filename": "gcc/testsuite/gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-half-float.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8a260d652c421e212818efc3c0f487cf9cdbcc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-half-float.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8a260d652c421e212818efc3c0f487cf9cdbcc2c/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-half-float.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcomplex%2Ffast-math-bb-slp-complex-add-pattern-half-float.c?ref=8a260d652c421e212818efc3c0f487cf9cdbcc2c", "patch": "@@ -1,13 +1,14 @@\n /* { dg-do compile } */\n+/* { dg-require-effective-target vect_complex_add_half } */\n /* { dg-add-options arm_v8_3a_fp16_complex_neon } */\n-/* { dg-additional-options \"-fno-tree-loop-vectorize\" } */\n+/* { dg-additional-options \"-fno-tree-loop-vectorize -funroll-loops\" } */\n /* { dg-add-options arm_v8_1m_mve_fp } */\n \n #define TYPE _Float16\n #define N 16\n #include \"complex-add-pattern-template.c\"\n \n /* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT90\" 1 \"slp1\" { target { vect_complex_add_half } } } } */\n-/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_byte } && ! target { arm*-*-* } } } } */\n+/* { dg-final { scan-tree-dump-times \"stmt.*COMPLEX_ADD_ROT270\" 1 \"slp1\" { target { vect_complex_add_half } && ! target { arm*-*-* } } } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT270\" \"slp1\" { xfail *-*-* } } } */\n /* { dg-final { scan-tree-dump \"Found COMPLEX_ADD_ROT90\" \"slp1\" } } */"}]}