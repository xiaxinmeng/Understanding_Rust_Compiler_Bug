{"sha": "bebecd51b6d2bb0f29423a582b0294183392e0d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViZWNkNTFiNmQyYmIwZjI5NDIzYTU4MmIwMjk0MTgzMzkyZTBkNA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-12-15T03:41:41Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2014-12-15T03:41:41Z"}, "message": "re PR lto/64043 (ICE (segfault) with LTO: in tree_check/tree.h:2758 get_binfo_at_offset/tree.c:11914)\n\n\n\tPR lto/64043\n\t* tree.c (virtual_method_call_p): Return false when OTR type has\n\tno BINFO.\n\t* g++.dg/lto/pr64043_0.C: New testcase.\n\nFrom-SVN: r218727", "tree": {"sha": "5c599da445c4658615bd7d6ae1567f48487ceaa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c599da445c4658615bd7d6ae1567f48487ceaa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bebecd51b6d2bb0f29423a582b0294183392e0d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebecd51b6d2bb0f29423a582b0294183392e0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bebecd51b6d2bb0f29423a582b0294183392e0d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bebecd51b6d2bb0f29423a582b0294183392e0d4/comments", "author": null, "committer": null, "parents": [{"sha": "1bf7c3241444b26d2b89b7731de198a9139b7d4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bf7c3241444b26d2b89b7731de198a9139b7d4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bf7c3241444b26d2b89b7731de198a9139b7d4e"}], "stats": {"total": 46, "additions": 40, "deletions": 6}, "files": [{"sha": "1c637f6a4152b17cecfa84233106442878c5464d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebecd51b6d2bb0f29423a582b0294183392e0d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebecd51b6d2bb0f29423a582b0294183392e0d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bebecd51b6d2bb0f29423a582b0294183392e0d4", "patch": "@@ -1,4 +1,14 @@\n-2014-12-14  Jan HUbicka  <hubicka@ucw.cz>\n+2014-12-14  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* cgraphunit.c (analyze_functions): Always analyze targets of aliases.\n+\n+2014-12-14  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR lto/64043\n+\t* tree.c (virtual_method_call_p): Return false when OTR type has\n+\tno BINFO.\n+\n+2014-12-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* cgraphunit.c (analyze_functions): Do not analyze extern inline\n \tfuntions when not optimizing; skip comdat locals."}, {"sha": "bc4e0da32ec609bc86a51a6efe47094f70c9716c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebecd51b6d2bb0f29423a582b0294183392e0d4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebecd51b6d2bb0f29423a582b0294183392e0d4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bebecd51b6d2bb0f29423a582b0294183392e0d4", "patch": "@@ -1,3 +1,8 @@\n+2014-12-14  Jan HUbicka  <hubicka@ucw.cz>\n+\n+\tPR lto/64043\n+\t* g++.dg/lto/pr64043_0.C: New testcase.\n+\n 2014-12-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/64037"}, {"sha": "9cc5596c358bc02caa8bcc98343d9d0cba05b0ca", "filename": "gcc/testsuite/g++.dg/lto/pr64043_0.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebecd51b6d2bb0f29423a582b0294183392e0d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr64043_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebecd51b6d2bb0f29423a582b0294183392e0d4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr64043_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr64043_0.C?ref=bebecd51b6d2bb0f29423a582b0294183392e0d4", "patch": "@@ -0,0 +1,14 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -flto -std=c++11 } } }\n+// { dg-extra-ld-options \"-r -nostdlib -O2\" }\n+class Validator\n+{\n+public:\n+  virtual ~Validator ();\n+};\n+class FooWriter\n+{\n+  Validator *validator;\n+  ~FooWriter ();\n+};\n+FooWriter::~FooWriter () { delete validator; }"}, {"sha": "4fc3db00269e47c7a512d9967743de86849f8ad7", "filename": "gcc/tree.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bebecd51b6d2bb0f29423a582b0294183392e0d4/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bebecd51b6d2bb0f29423a582b0294183392e0d4/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=bebecd51b6d2bb0f29423a582b0294183392e0d4", "patch": "@@ -11864,12 +11864,17 @@ virtual_method_call_p (tree target)\n {\n   if (TREE_CODE (target) != OBJ_TYPE_REF)\n     return false;\n-  target = TREE_TYPE (target);\n-  gcc_checking_assert (TREE_CODE (target) == POINTER_TYPE);\n-  target = TREE_TYPE (target);\n-  if (TREE_CODE (target) == FUNCTION_TYPE)\n+  tree t = TREE_TYPE (target);\n+  gcc_checking_assert (TREE_CODE (t) == POINTER_TYPE);\n+  t = TREE_TYPE (t);\n+  if (TREE_CODE (t) == FUNCTION_TYPE)\n+    return false;\n+  gcc_checking_assert (TREE_CODE (t) == METHOD_TYPE);\n+  /* If we do not have BINFO associated, it means that type was built\n+     without devirtualization enabled.  Do not consider this a virtual\n+     call.  */\n+  if (!TYPE_BINFO (obj_type_ref_class (target)))\n     return false;\n-  gcc_checking_assert (TREE_CODE (target) == METHOD_TYPE);\n   return true;\n }\n "}]}