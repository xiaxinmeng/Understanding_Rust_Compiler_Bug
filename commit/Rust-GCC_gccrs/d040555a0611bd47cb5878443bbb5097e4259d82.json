{"sha": "d040555a0611bd47cb5878443bbb5097e4259d82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA0MDU1NWEwNjExYmQ0N2NiNTg3ODQ0M2JiYjUwOTdlNDI1OWQ4Mg==", "commit": {"author": {"name": "Cl\u00e9ment Chigot", "email": "clement.chigot@atos.net", "date": "2020-08-07T12:45:34Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-08-12T18:33:54Z"}, "message": "libgo: correctly handle AIX FAT library creation\n\nThe previous patch wasn't working everytime. Especially when AR had\n\"-X32_64\", the new .so would replace the default one and not just being\nadded.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/247377", "tree": {"sha": "7cbe287c97f3a5240c787d4fa311f0843e93ac56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7cbe287c97f3a5240c787d4fa311f0843e93ac56"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d040555a0611bd47cb5878443bbb5097e4259d82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d040555a0611bd47cb5878443bbb5097e4259d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d040555a0611bd47cb5878443bbb5097e4259d82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d040555a0611bd47cb5878443bbb5097e4259d82/comments", "author": null, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d58f078ce2d53e5dab6b3d0d5f960504268e1894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58f078ce2d53e5dab6b3d0d5f960504268e1894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58f078ce2d53e5dab6b3d0d5f960504268e1894"}], "stats": {"total": 44, "additions": 29, "deletions": 15}, "files": [{"sha": "e443282d0e842562a85a0e920bf8285233181df9", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d040555a0611bd47cb5878443bbb5097e4259d82/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d040555a0611bd47cb5878443bbb5097e4259d82/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=d040555a0611bd47cb5878443bbb5097e4259d82", "patch": "@@ -1,4 +1,4 @@\n-e08f1d7d1bc14c0a29eb9ee17980f14fa2397239\n+fe5d94c5792f7f990004c3dee0ea501835512200\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "1112ee27df60a7824cd609bf0d3e8ca93a6fbe23", "filename": "libgo/Makefile.am", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=d040555a0611bd47cb5878443bbb5097e4259d82", "patch": "@@ -1244,8 +1244,15 @@ endif\n all-local: $(ALL_LOCAL_DEPS)\n \n MAJOR=$(firstword $(subst :, ,$(libtool_VERSION)))\n+\n+# If we want to use \"AR -r\" when creating AIX FAT archives,\n+# AR must be stripped of all its -X flags.\n+# Otherwize, if AR was defined with -X32_64, the replace option would\n+# erase the default .so when adding the extra one. There is no\n+# order priority within -X flags.\n add-aix-fat-library: all-multi\n \t@if test \"$(MULTIBUILDTOP)\" = \"\"; then \\\n-\t  ${AR} -X$(AIX_DEFAULT_ARCH) rc .libs/$(PACKAGE).a ../ppc$(AIX_DEFAULT_ARCH)/$(PACKAGE)/.libs/$(PACKAGE).so.$(MAJOR); \\\n-\t  ${AR} -X$(AIX_DEFAULT_ARCH) rc ../pthread/$(PACKAGE)/.libs/$(PACKAGE).a ../pthread/ppc$(AIX_DEFAULT_ARCH)/$(PACKAGE)/.libs/$(PACKAGE).so.$(MAJOR); \\\n+\t  arx=`echo $(AR) | sed -e 's/-X[^ ]*//g'`; \\\n+\t  $${arx} -X$(AIX_EXTRA_ARCH) rc .libs/$(PACKAGE).a ../ppc$(AIX_EXTRA_ARCH)/$(PACKAGE)/.libs/$(PACKAGE).so.$(MAJOR); \\\n+\t  $${arx} -X$(AIX_EXTRA_ARCH) rc ../pthread/$(PACKAGE)/.libs/$(PACKAGE).a ../pthread/ppc$(AIX_EXTRA_ARCH)/$(PACKAGE)/.libs/$(PACKAGE).so.$(MAJOR); \\\n \tfi"}, {"sha": "1fb8da6f552b8ff3cb1e0b4ddb850eb6092fcda6", "filename": "libgo/Makefile.in", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=d040555a0611bd47cb5878443bbb5097e4259d82", "patch": "@@ -380,7 +380,7 @@ CTAGS = ctags\n CSCOPE = cscope\n DIST_SUBDIRS = testsuite\n ACLOCAL = @ACLOCAL@\n-AIX_DEFAULT_ARCH = @AIX_DEFAULT_ARCH@\n+AIX_EXTRA_ARCH = @AIX_EXTRA_ARCH@\n ALLGOARCH = @ALLGOARCH@\n ALLGOARCHFAMILY = @ALLGOARCHFAMILY@\n ALLGOOS = @ALLGOOS@\n@@ -3118,10 +3118,17 @@ clean-local: clean-multi\n distclean-local: distclean-multi\n maintainer-clean-local: maintainer-clean-multi\n all-local: $(ALL_LOCAL_DEPS)\n+\n+# If we want to use \"AR -r\" when creating AIX FAT archives,\n+# AR must be stripped of all its -X flags.\n+# Otherwize, if AR was defined with -X32_64, the replace option would\n+# erase the default .so when adding the extra one. There is no\n+# order priority within -X flags.\n add-aix-fat-library: all-multi\n \t@if test \"$(MULTIBUILDTOP)\" = \"\"; then \\\n-\t  ${AR} -X$(AIX_DEFAULT_ARCH) rc .libs/$(PACKAGE).a ../ppc$(AIX_DEFAULT_ARCH)/$(PACKAGE)/.libs/$(PACKAGE).so.$(MAJOR); \\\n-\t  ${AR} -X$(AIX_DEFAULT_ARCH) rc ../pthread/$(PACKAGE)/.libs/$(PACKAGE).a ../pthread/ppc$(AIX_DEFAULT_ARCH)/$(PACKAGE)/.libs/$(PACKAGE).so.$(MAJOR); \\\n+\t  arx=`echo $(AR) | sed -e 's/-X[^ ]*//g'`; \\\n+\t  $${arx} -X$(AIX_EXTRA_ARCH) rc .libs/$(PACKAGE).a ../ppc$(AIX_EXTRA_ARCH)/$(PACKAGE)/.libs/$(PACKAGE).so.$(MAJOR); \\\n+\t  $${arx} -X$(AIX_EXTRA_ARCH) rc ../pthread/$(PACKAGE)/.libs/$(PACKAGE).a ../pthread/ppc$(AIX_EXTRA_ARCH)/$(PACKAGE)/.libs/$(PACKAGE).so.$(MAJOR); \\\n \tfi\n \n # Tell versions [3.59,3.63) of GNU make to not export all variables."}, {"sha": "7be95718962488986f6b951717b2bab2da5fdfca", "filename": "libgo/configure", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=d040555a0611bd47cb5878443bbb5097e4259d82", "patch": "@@ -733,7 +733,7 @@ SED\n MAINT\n MAINTAINER_MODE_FALSE\n MAINTAINER_MODE_TRUE\n-AIX_DEFAULT_ARCH\n+AIX_EXTRA_ARCH\n am__fastdepCCAS_FALSE\n am__fastdepCCAS_TRUE\n CCASDEPMODE\n@@ -4716,10 +4716,10 @@ case ${host} in\n     GOCFLAGS=\"$GOCFLAGS -fno-section-anchors\"\n \n     # Check default architecture for FAT library creation\n-    if test -z \"`$(CC) -x c -E /dev/null -g3 -o - | grep 64BIT`\" ; then\n-        AIX_DEFAULT_ARCH='64'\n+    if test -z \"`$CC -x c -E /dev/null -g3 -o - | grep 64BIT`\" ; then\n+        AIX_EXTRA_ARCH='64'\n     else\n-        AIX_DEFAULT_ARCH='32'\n+        AIX_EXTRA_ARCH='32'\n     fi\n \n     ;;"}, {"sha": "abc58b87b532f25442375457ca3b850b75a7fbd4", "filename": "libgo/configure.ac", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=d040555a0611bd47cb5878443bbb5097e4259d82", "patch": "@@ -38,12 +38,12 @@ case ${host} in\n     GOCFLAGS=\"$GOCFLAGS -fno-section-anchors\"\n \n     # Check default architecture for FAT library creation\n-    if test -z \"`$(CC) -x c -E /dev/null -g3 -o - | grep 64BIT`\" ; then\n-        AIX_DEFAULT_ARCH='64'\n+    if test -z \"`$CC -x c -E /dev/null -g3 -o - | grep 64BIT`\" ; then\n+        AIX_EXTRA_ARCH='64'\n     else\n-        AIX_DEFAULT_ARCH='32'\n+        AIX_EXTRA_ARCH='32'\n     fi\n-    AC_SUBST(AIX_DEFAULT_ARCH)\n+    AC_SUBST(AIX_EXTRA_ARCH)\n     ;;\n esac\n "}, {"sha": "7869265851cb5f1b41f218f5811b7c6d584e9473", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d040555a0611bd47cb5878443bbb5097e4259d82/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=d040555a0611bd47cb5878443bbb5097e4259d82", "patch": "@@ -131,7 +131,7 @@ am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n DEJATOOL = $(PACKAGE)\n RUNTESTDEFAULTFLAGS = --tool $$tool --srcdir $$srcdir\n ACLOCAL = @ACLOCAL@\n-AIX_DEFAULT_ARCH = @AIX_DEFAULT_ARCH@\n+AIX_EXTRA_ARCH = @AIX_EXTRA_ARCH@\n ALLGOARCH = @ALLGOARCH@\n ALLGOARCHFAMILY = @ALLGOARCHFAMILY@\n ALLGOOS = @ALLGOOS@"}]}