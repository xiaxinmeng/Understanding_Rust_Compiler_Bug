{"sha": "a66078ee0069ee44bf13f8b169080e4ded51e56a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY2MDc4ZWUwMDY5ZWU0NGJmMTNmOGIxNjkwODBlNGRlZDUxZTU2YQ==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-28T00:20:40Z"}, "committer": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "1996-02-28T00:20:40Z"}, "message": "Use new 'H' for DImode shifts and use 'h' consistently for SImode\n\nFrom-SVN: r11358", "tree": {"sha": "7c63e79e88a8545d9239516721a7d9eaaa9b8a49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c63e79e88a8545d9239516721a7d9eaaa9b8a49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a66078ee0069ee44bf13f8b169080e4ded51e56a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66078ee0069ee44bf13f8b169080e4ded51e56a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a66078ee0069ee44bf13f8b169080e4ded51e56a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a66078ee0069ee44bf13f8b169080e4ded51e56a/comments", "author": null, "committer": null, "parents": [{"sha": "64305719ea0df5314788e0abbd987fdfa26f2ca3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64305719ea0df5314788e0abbd987fdfa26f2ca3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64305719ea0df5314788e0abbd987fdfa26f2ca3"}], "stats": {"total": 39, "additions": 19, "deletions": 20}, "files": [{"sha": "db265fe67b7925a2da084bf3879ac47ac781749d", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 19, "deletions": 20, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a66078ee0069ee44bf13f8b169080e4ded51e56a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a66078ee0069ee44bf13f8b169080e4ded51e56a/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=a66078ee0069ee44bf13f8b169080e4ded51e56a", "patch": "@@ -2068,7 +2068,7 @@\n \n   operands[4] = gen_rtx (CONST_INT, VOIDmode, 32 - start - size);\n   operands[1] = gen_rtx (CONST_INT, VOIDmode, start + size - 1);\n-  return \\\"{rlimi|rlwimi} %0,%3,%4,%h2,%h1\\\";\n+  return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\")\n \n (define_insn \"\"\n@@ -2084,9 +2084,9 @@\n   int start = INTVAL (operands[2]) & 31;\n   int size = INTVAL (operands[1]) & 31;\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, (shift - start - size) & 31);\n+  operands[4] = gen_rtx (CONST_INT, VOIDmode, shift - start - size);\n   operands[1] = gen_rtx (CONST_INT, VOIDmode, start + size - 1);\n-  return \\\"{rlimi|rlwimi} %0,%3,%4,%h2,%h1\\\";\n+  return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\")\n \n (define_insn \"\"\n@@ -2102,9 +2102,9 @@\n   int start = INTVAL (operands[2]) & 31;\n   int size = INTVAL (operands[1]) & 31;\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, (32 - shift - start - size) & 31);\n+  operands[4] = gen_rtx (CONST_INT, VOIDmode, 32 - shift - start - size);\n   operands[1] = gen_rtx (CONST_INT, VOIDmode, start + size - 1);\n-  return \\\"{rlimi|rlwimi} %0,%3,%4,%h2,%h1\\\";\n+  return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\")\n \n (define_insn \"\"\n@@ -2120,9 +2120,9 @@\n   int start = INTVAL (operands[2]) & 31;\n   int size = INTVAL (operands[1]) & 31;\n \n-  operands[4] = gen_rtx (CONST_INT, VOIDmode, (32 - shift - start - size) & 31);\n+  operands[4] = gen_rtx (CONST_INT, VOIDmode, 32 - shift - start - size);\n   operands[1] = gen_rtx (CONST_INT, VOIDmode, start + size - 1);\n-  return \\\"{rlimi|rlwimi} %0,%3,%4,%h2,%h1\\\";\n+  return \\\"{rlimi|rlwimi} %0,%3,%h4,%h2,%h1\\\";\n }\")\n \n (define_insn \"\"\n@@ -2142,9 +2142,9 @@\n \n /* Align extract field with insert field */\n   operands[5] = gen_rtx (CONST_INT, VOIDmode,\n-\t\t\t (extract_start + extract_size - insert_start - insert_size) & 31);\n+\t\t\t extract_start + extract_size - insert_start - insert_size);\n   operands[1] = gen_rtx (CONST_INT, VOIDmode, insert_start + insert_size - 1);\n-  return \\\"{rlimi|rlwimi} %0,%3,%5,%h2,%h1\\\";\n+  return \\\"{rlimi|rlwimi} %0,%3,%h5,%h2,%h1\\\";\n }\")\n \n (define_insn \"\"\n@@ -2159,8 +2159,7 @@\n   int size = INTVAL (operands[1]) & 63;\n \n   operands[2] = gen_rtx (CONST_INT, VOIDmode, 64 - start - size);\n-  operands[1] = gen_rtx (CONST_INT, VOIDmode, start);\n-  return \\\"rldimi %0,%3,%2,%1\\\";\n+  return \\\"rldimi %0,%3,%H2,%H1\\\";\n }\")\n \n (define_expand \"extzv\"\n@@ -4296,7 +4295,7 @@\n \t(rotate:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t   (match_operand:DI 2 \"reg_or_cint_operand\" \"ri\")))]\n   \"TARGET_POWERPC64\"\n-  \"rld%I2cl %0,%1,%h2,0\")\n+  \"rld%I2cl %0,%1,%H2,0\")\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -4305,7 +4304,7 @@\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"=r\"))]\n   \"TARGET_POWERPC64\"\n-  \"rld%I2cl. %3,%1,%h2,0\"\n+  \"rld%I2cl. %3,%1,%H2,0\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n (define_insn \"\"\n@@ -4316,7 +4315,7 @@\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(rotate:DI (match_dup 1) (match_dup 2)))]\n   \"TARGET_POWERPC64\"\n-  \"rld%I2cl. %0,%1,%h2,0\"\n+  \"rld%I2cl. %0,%1,%H2,0\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n (define_expand \"ashldi3\"\n@@ -4342,7 +4341,7 @@\n \t(ashift:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t   (match_operand:SI 2 \"reg_or_cint_operand\" \"ri\")))]\n   \"TARGET_POWERPC64\"\n-  \"sld%I2 %0,%1,%2\"\n+  \"sld%I2 %0,%1,%H2\"\n   [(set_attr \"length\" \"8\")])\n   \n (define_insn \"\"\n@@ -4352,7 +4351,7 @@\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"=r\"))]\n   \"TARGET_POWERPC64\"\n-  \"sld%I2. %3,%1,%2\"\n+  \"sld%I2. %3,%1,%H2\"\n   [(set_attr \"type\" \"delayed_compare\")])\n   \n (define_insn \"\"\n@@ -4363,7 +4362,7 @@\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(ashift:DI (match_dup 1) (match_dup 2)))]\n   \"TARGET_POWERPC64\"\n-  \"sld%I2. %0,%1,%2\"\n+  \"sld%I2. %0,%1,%H2\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n (define_expand \"lshrdi3\"\n@@ -4389,7 +4388,7 @@\n \t(lshiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r\")\n \t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"ri\")))]\n   \"TARGET_POWERPC64\"\n-  \"srd%I2 %0,%1,%2\")\n+  \"srd%I2 %0,%1,%H2\")\n \n (define_insn \"\"\n   [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x\")\n@@ -4398,7 +4397,7 @@\n \t\t    (const_int 0)))\n    (clobber (match_scratch:DI 3 \"=r\"))]\n   \"TARGET_POWERPC64\"\n-  \"srd%I2. %3,%1,%2\"\n+  \"srd%I2. %3,%1,%H2\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n (define_insn \"\"\n@@ -4409,7 +4408,7 @@\n    (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r\")\n \t(lshiftrt:DI (match_dup 1) (match_dup 2)))]\n   \"TARGET_POWERPC64\"\n-  \"srd%I2. %0,%1,%2\"\n+  \"srd%I2. %0,%1,%H2\"\n   [(set_attr \"type\" \"delayed_compare\")])\n \n (define_expand \"ashrdi3\""}]}