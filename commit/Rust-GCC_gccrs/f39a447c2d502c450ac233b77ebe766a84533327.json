{"sha": "f39a447c2d502c450ac233b77ebe766a84533327", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM5YTQ0N2MyZDUwMmM0NTBhYzIzM2I3N2ViZTc2NmE4NDUzMzMyNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2014-06-22T17:11:55Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2014-06-22T17:11:55Z"}, "message": "rs6000: Merge lshrsi3 and lshrdi3\n\nFor this create a new mode_attr \"hH\".\n\nAlso change \"i\" constraints on the shift amount to \"n\", which better\ndescribes what it really is (GCC takes the integer value of these\noperands and does arithmetic on them; symbolic constants will not work\nhere).\n\nAlso merge the \"dot\" insns with the corresponding splitters.  To do\nthis, don't allow the dot insns for CBE non-microcode mode at all\n(it previously would just split it back always).\n\nFrom-SVN: r211876", "tree": {"sha": "586d96989680223f0819efff688c2d7196ffcc2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/586d96989680223f0819efff688c2d7196ffcc2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f39a447c2d502c450ac233b77ebe766a84533327", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f39a447c2d502c450ac233b77ebe766a84533327", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f39a447c2d502c450ac233b77ebe766a84533327", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f39a447c2d502c450ac233b77ebe766a84533327/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1a2443af3afebfd3833df841dcf2a073d124fe48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a2443af3afebfd3833df841dcf2a073d124fe48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a2443af3afebfd3833df841dcf2a073d124fe48"}], "stats": {"total": 192, "additions": 56, "deletions": 136}, "files": [{"sha": "e9717175e80c37afc9d07869763de6fd5a324aef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f39a447c2d502c450ac233b77ebe766a84533327/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f39a447c2d502c450ac233b77ebe766a84533327/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f39a447c2d502c450ac233b77ebe766a84533327", "patch": "@@ -1,3 +1,12 @@\n+2014-06-22  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (\"hH\"): New define_mode_attr.\n+\t(lshrsi3, two anonymous define_insns and define_splits,\n+\tlshrdi3, *lshrdi3_internal1, *lshrdi3_internal2 and split,\n+\t*lshrdi3_internal3 and split): Delete, merge into...\n+\t(lshr<mode>3, lshr<mode>3_dot, lshr<mode>3_dot2): New.\n+\t(*lshrsi3_64): Fix formatting.  Replace \"i\" by \"n\".\n+\n 2014-06-22  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.md (lshrsi3, and its two dot patterns):"}, {"sha": "af3586d2c137acb9d3481caa4adfbe46a54a232b", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 47, "deletions": 136, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f39a447c2d502c450ac233b77ebe766a84533327/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f39a447c2d502c450ac233b77ebe766a84533327/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f39a447c2d502c450ac233b77ebe766a84533327", "patch": "@@ -438,6 +438,9 @@\n ;; ISEL/ISEL64 target selection\n (define_mode_attr sel [(SI \"\") (DI \"64\")])\n \n+;; Bitmask for shift instructions\n+(define_mode_attr hH [(SI \"h\") (DI \"H\")])\n+\n ;; Suffix for reload patterns\n (define_mode_attr ptrsize [(SI \"32bit\")\n \t\t\t   (DI \"64bit\")])\n@@ -4542,92 +4545,82 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_insn \"lshrsi3\"\n-  [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i\")))]\n+\n+(define_insn \"lshr<mode>3\"\n+  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n+\t(lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r\")\n+\t\t      (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n\")))]\n   \"\"\n   \"@\n-  srw %0,%1,%2\n-  srwi %0,%1,%h2\"\n+   sr<wd> %0,%1,%2\n+   sr<wd>i %0,%1,%<hH>2\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n (define_insn \"*lshrsi3_64\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-  \t(zero_extend:DI\n+\t(zero_extend:DI\n \t    (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i\"))))]\n+\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,n\"))))]\n   \"TARGET_POWERPC64\"\n   \"@\n-  srw %0,%1,%2\n-  srwi %0,%1,%h2\"\n+   srw %0,%1,%2\n+   srwi %0,%1,%h2\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no\")])\n \n-(define_insn \"\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\"))\n+(define_insn_and_split \"*lshr<mode>3_dot\"\n+  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n+\t(compare:CC (lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n \t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"=r,r,r,r\"))]\n-  \"TARGET_32BIT\"\n+   (clobber (match_scratch:GPR 0 \"=r,r,r,r\"))]\n+  \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   srw. %3,%1,%2\n-   srwi. %3,%1,%h2\n+   sr<wd>. %0,%1,%2\n+   sr<wd>i. %0,%1,%<hH>2\n    #\n    #\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0)\n+\t(lshiftrt:GPR (match_dup 1)\n+\t\t      (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no,yes,no\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,4,8,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:SI 3 \"\"))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 3)\n-\t(lshiftrt:SI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"\"\n+(define_insn_and_split \"*lshr<mode>3_dot2\"\n   [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\"))\n+\t(compare:CC (lshiftrt:GPR (match_operand:GPR 1 \"gpc_reg_operand\" \"r,r,r,r\")\n+\t\t\t\t  (match_operand:GPR 2 \"reg_or_cint_operand\" \"r,n,r,n\"))\n \t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(lshiftrt:SI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_32BIT\"\n+   (set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n+\t(lshiftrt:GPR (match_dup 1)\n+\t\t      (match_dup 2)))]\n+  \"<MODE>mode == Pmode && rs6000_gen_cell_microcode\"\n   \"@\n-   srw. %0,%1,%2\n-   srwi. %0,%1,%h2\n+   sr<wd>. %0,%1,%2\n+   sr<wd>i. %0,%1,%<hH>2\n    #\n    #\"\n+  \"&& reload_completed\"\n+  [(set (match_dup 0)\n+\t(lshiftrt:GPR (match_dup 1)\n+\t\t      (match_dup 2)))\n+   (set (match_dup 3)\n+\t(compare:CC (match_dup 0)\n+\t\t    (const_int 0)))]\n+  \"\"\n   [(set_attr \"type\" \"shift\")\n    (set_attr \"var_shift\" \"yes,no,yes,no\")\n    (set_attr \"dot\" \"yes\")\n    (set_attr \"length\" \"4,4,8,8\")])\n \n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_cr0_operand\" \"\")\n-\t(compare:CC (lshiftrt:SI (match_operand:SI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:SI 0 \"gpc_reg_operand\" \"\")\n-\t(lshiftrt:SI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_32BIT && reload_completed\"\n-  [(set (match_dup 0)\n-\t(lshiftrt:SI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 3)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"gpc_reg_operand\" \"=r\")\n@@ -7901,88 +7894,6 @@\n \t\t    (const_int 0)))]\n   \"\")\n \n-(define_expand \"lshrdi3\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(lshiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n-\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"\")))]\n-  \"TARGET_POWERPC64\"\n-  \"\")\n-\n-(define_insn \"*lshrdi3_internal1\"\n-  [(set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(lshiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r\")\n-\t\t     (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i\")))]\n-  \"TARGET_POWERPC64\"\n-  \"@\n-   srd %0,%1,%2\n-   srdi %0,%1,%H2\"\n-  [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no\")])\n-\n-(define_insn \"*lshrdi3_internal2\"\n-  [(set (match_operand:CC 0 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (lshiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"=r,r,r,r\"))]\n-  \"TARGET_64BIT \"\n-  \"@\n-   srd. %3,%1,%2\n-   srdi. %3,%1,%H2\n-   #\n-   #\"\n-  [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 0 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (lshiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (clobber (match_scratch:DI 3 \"\"))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 3)\n-\t(lshiftrt:DI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 0)\n-\t(compare:CC (match_dup 3)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n-(define_insn \"*lshrdi3_internal3\"\n-  [(set (match_operand:CC 3 \"cc_reg_operand\" \"=x,x,?y,?y\")\n-\t(compare:CC (lshiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"r,r,r,r\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"r,i,r,i\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"=r,r,r,r\")\n-\t(lshiftrt:DI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_64BIT\"\n-  \"@\n-   srd. %0,%1,%2\n-   srdi. %0,%1,%H2\n-   #\n-   #\"\n-  [(set_attr \"type\" \"shift\")\n-   (set_attr \"var_shift\" \"yes,no,yes,no\")\n-   (set_attr \"dot\" \"yes\")\n-   (set_attr \"length\" \"4,4,8,8\")])\n-\n-(define_split\n-  [(set (match_operand:CC 3 \"cc_reg_not_micro_cr0_operand\" \"\")\n-\t(compare:CC (lshiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")\n-\t\t\t\t (match_operand:SI 2 \"reg_or_cint_operand\" \"\"))\n-\t\t    (const_int 0)))\n-   (set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n-\t(lshiftrt:DI (match_dup 1) (match_dup 2)))]\n-  \"TARGET_POWERPC64 && reload_completed\"\n-  [(set (match_dup 0)\n-\t(lshiftrt:DI (match_dup 1) (match_dup 2)))\n-   (set (match_dup 3)\n-\t(compare:CC (match_dup 0)\n-\t\t    (const_int 0)))]\n-  \"\")\n-\n (define_expand \"ashrdi3\"\n   [(set (match_operand:DI 0 \"gpc_reg_operand\" \"\")\n \t(ashiftrt:DI (match_operand:DI 1 \"gpc_reg_operand\" \"\")"}]}