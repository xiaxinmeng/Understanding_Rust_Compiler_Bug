{"sha": "89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODllOTkyMGJkNmM2YzkzOGFiNGQ2ZGZlM2JlZDcyOWYyOTQwN2FlOQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2003-04-25T17:23:21Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2003-04-25T17:23:21Z"}, "message": "2003-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/locale_classes.h\n\t(locale::_S_extra_categories_size): Remove.\n\t* src/locale.cc: Remove _S_extra_categories_size.\n\t* src/localename.cc: Same.\n\t* config/locale/gnu/c_locale.cc: Same.\n\t* config/locale/generic/c_locale.cc: Same.\n\nFrom-SVN: r66068", "tree": {"sha": "34d788265bc6985369b37146588ba9a679e33d33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34d788265bc6985369b37146588ba9a679e33d33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/comments", "author": null, "committer": null, "parents": [{"sha": "c4519773ca573ca457b32014bd40c2cb9a1e7257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4519773ca573ca457b32014bd40c2cb9a1e7257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4519773ca573ca457b32014bd40c2cb9a1e7257"}], "stats": {"total": 66, "additions": 27, "deletions": 39}, "files": [{"sha": "f27bbe2a4a005d133d03268dfb19e93cb32b1faf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "patch": "@@ -1,3 +1,12 @@\n+2003-04-25  Benjamin Kosnik  <bkoz@redhat.com>\n+\t\n+\t* include/bits/locale_classes.h\n+\t(locale::_S_extra_categories_size): Remove.\n+\t* src/locale.cc: Remove _S_extra_categories_size.\n+\t* src/localename.cc: Same.\n+\t* config/locale/gnu/c_locale.cc: Same.\n+\t* config/locale/generic/c_locale.cc: Same.\n+\t\n 2003-04-24  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* src/localename.cc (__gnu_cxx::facet_vec): Correct types."}, {"sha": "7501741c2338fe9bcedc2fcc9e0aa293baa63e98", "filename": "libstdc++-v3/config/locale/generic/c_locale.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fc_locale.cc?ref=89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "patch": "@@ -228,8 +228,7 @@ namespace std\n   locale::facet::_S_clone_c_locale(__c_locale&)\n   { return __c_locale(); }\n \n-  const char* locale::_S_categories[_S_categories_size \n-\t\t\t\t    + _S_extra_categories_size] =\n+  const char* locale::_S_categories[_S_categories_size] = \n     {\n       \"LC_CTYPE\", \n       \"LC_NUMERIC\","}, {"sha": "49a3acce7d6564b9de27d0920c369e356348fc18", "filename": "libstdc++-v3/config/locale/gnu/c_locale.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgnu%2Fc_locale.cc?ref=89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "patch": "@@ -187,8 +187,7 @@ namespace std\n   locale::facet::_S_clone_c_locale(__c_locale& __cloc)\n   { return __duplocale(__cloc); }\n \n-  const char* locale::_S_categories[_S_categories_size \n-\t\t\t\t    + _S_extra_categories_size] =\n+  const char* locale::_S_categories[_S_categories_size] =\n     {\n       \"LC_CTYPE\", \n       \"LC_NUMERIC\","}, {"sha": "8cff528538c2c7dbca82e48995df304373742d4a", "filename": "libstdc++-v3/include/bits/locale_classes.h", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_classes.h?ref=89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "patch": "@@ -146,21 +146,18 @@ namespace std\n     // directly correspond to ISO C99 macros LC_COLLATE, LC_CTYPE,\n     // LC_MONETARY, LC_NUMERIC, and LC_TIME. In addition, POSIX (IEEE\n     // 1003.1-2001) specifies LC_MESSAGES.\n-    static const size_t\t_S_categories_size = 6;\n-\n     // In addition to the standard categories, the underlying\n     // operating system is allowed to define extra LC_*\n     // macros. For GNU systems, the following are also valid:\n     // LC_PAPER, LC_NAME, LC_ADDRESS, LC_TELEPHONE, LC_MEASUREMENT,\n     // and LC_IDENTIFICATION.\n-    static const size_t\t_S_extra_categories_size = _GLIBCPP_NUM_CATEGORIES;\n+    static const size_t _S_categories_size = 6 + _GLIBCPP_NUM_CATEGORIES;\n \n     // Names of underlying locale categories.  \n     // NB: locale::global() has to know how to modify all the\n     // underlying categories, not just the ones required by the C++\n     // standard.\n-    static const char* \t_S_categories[_S_categories_size \n-\t\t\t\t      + _S_extra_categories_size];\n+    static const char* \t_S_categories[_S_categories_size]; \n \n     explicit \n     locale(_Impl*) throw();\n@@ -201,9 +198,7 @@ namespace std\n     _Atomic_word\t\t\t_M_references;\n     const facet**\t\t\t_M_facets;\n     size_t \t\t\t\t_M_facets_size;\n-\n-    char* \t\t\t\t_M_names[_S_categories_size\n-\t\t\t\t\t\t + _S_extra_categories_size];\n+    char* \t\t\t\t_M_names[_S_categories_size];\n     static const locale::id* const \t_S_id_ctype[];\n     static const locale::id* const \t_S_id_numeric[];\n     static const locale::id* const \t_S_id_collate[];\n@@ -243,9 +238,7 @@ namespace std\n     _M_check_same_name()\n     {\n       bool __ret = true;\n-      for (size_t __i = 0; \n-\t   __ret && __i < _S_categories_size + _S_extra_categories_size - 1; \n-\t   ++__i)\n+      for (size_t __i = 0; __ret && __i < _S_categories_size - 1; ++__i)\n \t__ret &= (strcmp(_M_names[__i], _M_names[__i + 1]) == 0);\n       return __ret;\n     }\n@@ -273,8 +266,7 @@ namespace std\n     {\n       _M_impl = new _Impl(*__other._M_impl, 1);\n       _M_impl->_M_install_facet(&_Facet::id, __f);\n-      for (size_t __i = 0; \n-\t   __i < _S_categories_size + _S_extra_categories_size; ++__i)\n+      for (size_t __i = 0; __i < _S_categories_size ; ++__i)\n \t{\n \t  delete [] _M_impl->_M_names[__i];\n \t  char* __new = new char[2];"}, {"sha": "951c4ee1857130213bb5f65a75b35db567daa6e5", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "patch": "@@ -62,7 +62,6 @@ namespace std\n   locale::_Impl* \t\tlocale::_S_classic;\n   locale::_Impl* \t\tlocale::_S_global; \n   const size_t \t\t\tlocale::_S_categories_size;\n-  const size_t \t\t\tlocale::_S_extra_categories_size;\n \n   // Definitions for static const data members of locale::id\n   _Atomic_word locale::id::_S_highwater;  // init'd to 0 by linker\n@@ -208,8 +207,7 @@ namespace std\n \t\t// different from LANG.\n \t\tsize_t __i = 0;\n \t\tif (strcmp(__res, \"C\") == 0)\n-\t\t  for (; __i < _S_categories_size\n-\t\t\t + _S_extra_categories_size; ++__i)\n+\t\t  for (; __i < _S_categories_size ; ++__i)\n \t\t    {\n \t\t      __env = getenv(_S_categories[__i]);\n \t\t      if (__env && strcmp(__env, \"\") != 0 \n@@ -218,8 +216,7 @@ namespace std\n \t\t\tbreak;\n \t\t    }\n \t\telse\n-\t\t  for (; __i < _S_categories_size\n-\t\t\t + _S_extra_categories_size; ++__i)\n+\t\t  for (; __i < _S_categories_size ; ++__i)\n \t\t    {\n \t\t      __env = getenv(_S_categories[__i]);\n \t\t      if (__env && strcmp(__env, \"\") != 0 \n@@ -229,7 +226,7 @@ namespace std\n \t\n \t\t// If one is found, build the complete string of\n \t\t// the form LC_CTYPE=xxx;LC_NUMERIC=yyy; and so on...\n-\t\tif (__i < _S_categories_size + _S_extra_categories_size)\n+\t\tif (__i < _S_categories_size)\n \t\t  {\n \t\t    string __str;\n \t\t    for (size_t __j = 0; __j < __i; ++__j)\n@@ -244,8 +241,7 @@ namespace std\n \t\t    __str += __env;\n \t\t    __str += ';';\n \t\t    __i++;\n-\t\t    for (; __i < _S_categories_size\n-\t\t\t   + _S_extra_categories_size; ++__i)\n+\t\t    for (; __i < _S_categories_size ; ++__i)\n \t\t      {\n \t\t\t__env = getenv(_S_categories[__i]);\n \t\t\tif (!__env || strcmp(__env, \"\") == 0)\n@@ -349,9 +345,7 @@ namespace std\n \t__ret += _S_categories[0];\n \t__ret += '=';\n \t__ret += _M_impl->_M_names[0]; \n-\tfor (size_t __i = 1; \n-\t     __i < _S_categories_size + _S_extra_categories_size; \n-\t     ++__i)\n+\tfor (size_t __i = 1; __i < _S_categories_size ; ++__i)\n \t  {\n \t    __ret += ';';\n \t    __ret += _S_categories[__i];"}, {"sha": "f0a5a8b371d4a72f8728c1db7ff0afd1849a1390", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e9920bd6c6c938ab4d6dfe3bed729f29407ae9/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=89e9920bd6c6c938ab4d6dfe3bed729f29407ae9", "patch": "@@ -82,8 +82,7 @@ namespace std\n \t_M_facets[__i]->_M_remove_reference();\n     delete [] _M_facets;\n \n-    for (size_t __i = 0; \n-\t __i < _S_categories_size + _S_extra_categories_size; ++__i)\n+    for (size_t __i = 0; __i < _S_categories_size ; ++__i)\n       delete [] _M_names[__i];  \n   }\n \n@@ -109,8 +108,7 @@ namespace std\n \tif (_M_facets[__i])\n \t  _M_facets[__i]->_M_add_reference();\n       }\n-    for (size_t __i = 0; \n-\t __i < _S_categories_size + _S_extra_categories_size; ++__i)\n+    for (size_t __i = 0; __i < _S_categories_size ; ++__i)\n       {\n \tchar* __new = new char[strlen(__imp._M_names[__i]) + 1];\n \tstrcpy(__new, __imp._M_names[__i]);\n@@ -144,8 +142,7 @@ namespace std\n     size_t __len = strlen(__s);\n     if (!strchr(__s, ';'))\n       {\n-\tfor (size_t __i = 0; \n-\t     __i < _S_categories_size + _S_extra_categories_size; ++__i)\n+\tfor (size_t __i = 0; __i < _S_categories_size ; ++__i)\n \t  {\n \t    _M_names[__i] = new char[__len + 1];\n \t    strcpy(_M_names[__i], __s);\n@@ -154,8 +151,7 @@ namespace std\n     else\n       {\n \tconst char* __beg = __s;\n-\tfor (size_t __i = 0; \n-\t     __i < _S_categories_size + _S_extra_categories_size; ++__i)\n+\tfor (size_t __i = 0; __i < _S_categories_size ; ++__i)\n \t  {\n \t    __beg = strchr(__beg, '=') + 1;\n \t    const char* __end = strchr(__beg, ';');\n@@ -219,10 +215,9 @@ namespace std\n       _M_facets[__i] = 0;\n \n     // Name all the categories.\n-    for (size_t __i = 0; \n-\t __i < _S_categories_size + _S_extra_categories_size; ++__i)\n+    for (size_t __i = 0; __i < _S_categories_size ; ++__i)\n       {\n-\t_M_names[__i]  = new (&facet_name[__i]) char[2];\n+\t_M_names[__i] = new (&facet_name[__i]) char[2];\n \tstrcpy(_M_names[__i], locale::facet::_S_c_name);\n       }\n "}]}