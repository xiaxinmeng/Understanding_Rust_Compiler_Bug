{"sha": "01ea1ea8269ff36065e625b0b5e348568519bfa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFlYTFlYTgyNjlmZjM2MDY1ZTYyNWIwYjVlMzQ4NTY4NTE5YmZhMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-06-07T11:56:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-06-07T11:56:11Z"}, "message": "cp-tree.def (DEFAULT_ARG): Adjust documentation.\n\n\t* cp-tree.def (DEFAULT_ARG): Adjust documentation.\n\t* cp-tree.h (DEFARG_INSTANTIATIONS): New.\n\t(struct tree_default_arg): Add instantiations member.\n\t* parser.c (cp_parser_late_parsing_default_args): Adjust to use a\n\tVEC.\n\t* pt.c (tsubst_arg_types): Likewise.\n\nFrom-SVN: r100707", "tree": {"sha": "9ba436b1b1c7d37ecfccbe0bd6d3fbbc96b13e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ba436b1b1c7d37ecfccbe0bd6d3fbbc96b13e04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01ea1ea8269ff36065e625b0b5e348568519bfa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ea1ea8269ff36065e625b0b5e348568519bfa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01ea1ea8269ff36065e625b0b5e348568519bfa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01ea1ea8269ff36065e625b0b5e348568519bfa3/comments", "author": null, "committer": null, "parents": [{"sha": "c938250d71aa69cb46490ac49058fc1a499962e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c938250d71aa69cb46490ac49058fc1a499962e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c938250d71aa69cb46490ac49058fc1a499962e4"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "aa0ea83b3230d60c27d306c3c3c1d96d2a69db6e", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ea1ea8269ff36065e625b0b5e348568519bfa3/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ea1ea8269ff36065e625b0b5e348568519bfa3/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=01ea1ea8269ff36065e625b0b5e348568519bfa3", "patch": "@@ -206,9 +206,9 @@ DEFTREECODE (USING_DECL, \"using_decl\", tcc_declaration, 0)\n /* A using directive. The operand is USING_STMT_NAMESPACE.  */     \n DEFTREECODE (USING_STMT, \"using_directive\", tcc_statement, 1)\n \n-/* An un-parsed default argument.  Looks like an IDENTIFIER_NODE.\n-   TREE_CHAIN is used to hold instantiations of functions that had to\n-   be instantiated before the argument was parsed.  */\n+/* An un-parsed default argument.  Holds a vector of input tokens and\n+   a vector of places where the argument was instantiated before\n+   parsing had occurred.  */\n DEFTREECODE (DEFAULT_ARG, \"default_arg\", tcc_exceptional, 0)\n \n /* A template-id, like foo<int>.  The first operand is the template."}, {"sha": "90de20c1e63230bdc7f0b9cbad3416e320169793", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ea1ea8269ff36065e625b0b5e348568519bfa3/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ea1ea8269ff36065e625b0b5e348568519bfa3/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=01ea1ea8269ff36065e625b0b5e348568519bfa3", "patch": "@@ -424,11 +424,14 @@ typedef enum cp_id_kind\n \n #define DEFARG_TOKENS(NODE) \\\n   (((struct tree_default_arg *)DEFAULT_ARG_CHECK (NODE))->tokens)\n+#define DEFARG_INSTANTIATIONS(NODE) \\\n+  (((struct tree_default_arg *)DEFAULT_ARG_CHECK (NODE))->instantiations)\n \n struct tree_default_arg GTY (())\n {\n   struct tree_common common;\n   struct cp_token_cache *tokens;\n+  VEC(tree,gc) *instantiations;\n };\n \n enum cp_tree_node_structure_enum {"}, {"sha": "24cb027d32713e838c74627e9b19efe83ca73ca0", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ea1ea8269ff36065e625b0b5e348568519bfa3/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ea1ea8269ff36065e625b0b5e348568519bfa3/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=01ea1ea8269ff36065e625b0b5e348568519bfa3", "patch": "@@ -12145,7 +12145,8 @@ cp_parser_parameter_declaration (cp_parser *parser,\n              argument.  */\n \t  default_argument = make_node (DEFAULT_ARG);\n \t  DEFARG_TOKENS (default_argument)\n-\t    = cp_token_cache_new (first_token, token);\t\n+\t    = cp_token_cache_new (first_token, token);\n+\t  DEFARG_INSTANTIATIONS (default_argument) = NULL;\n \t}\n       /* Outside of a class definition, we can just parse the\n          assignment-expression.  */\n@@ -15595,6 +15596,9 @@ cp_parser_late_parsing_default_args (cp_parser *parser, tree fn)\n       cp_token_cache *tokens;\n       tree default_arg = TREE_PURPOSE (parm);\n       tree parsed_arg;\n+      VEC(tree,gc) *insts;\n+      tree copy;\n+      unsigned ix;\n       \n       if (!default_arg)\n \tcontinue;\n@@ -15615,10 +15619,9 @@ cp_parser_late_parsing_default_args (cp_parser *parser, tree fn)\n       TREE_PURPOSE (parm) = parsed_arg;\n \n       /* Update any instantiations we've already created.  */\n-      for (default_arg = TREE_CHAIN (default_arg);\n-\t   default_arg;\n-\t   default_arg = TREE_CHAIN (default_arg))\n-\tTREE_PURPOSE (TREE_PURPOSE (default_arg)) = parsed_arg;\n+      for (insts = DEFARG_INSTANTIATIONS (default_arg), ix = 0;\n+\t   VEC_iterate (tree, insts, ix, copy); ix++)\n+\tTREE_PURPOSE (copy) = parsed_arg;\n \n       /* If the token stream has not been completely used up, then\n \t there was extra junk after the end of the default"}, {"sha": "f7eb93576ec1b00d2ce1e0f3945587cadde63d05", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01ea1ea8269ff36065e625b0b5e348568519bfa3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01ea1ea8269ff36065e625b0b5e348568519bfa3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=01ea1ea8269ff36065e625b0b5e348568519bfa3", "patch": "@@ -6745,8 +6745,7 @@ tsubst_arg_types (tree arg_types,\n  \t class, and is not an error unless we require the default\n  \t argument in a call of this function.  */\n       result = tree_cons (default_arg, type, remaining_arg_types);\n-      TREE_CHAIN (default_arg) = tree_cons (result, NULL_TREE,\n-\t\t\t\t\t    TREE_CHAIN (default_arg));\n+      VEC_safe_push (tree, gc, DEFARG_INSTANTIATIONS (default_arg), result);\n     }\n   else\n     result = hash_tree_cons (default_arg, type, remaining_arg_types);"}]}