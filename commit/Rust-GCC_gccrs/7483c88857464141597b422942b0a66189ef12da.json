{"sha": "7483c88857464141597b422942b0a66189ef12da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ4M2M4ODg1NzQ2NDE0MTU5N2I0MjI5NDJiMGE2NjE4OWVmMTJkYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T15:27:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-04T15:27:59Z"}, "message": "[multiple changes]\n\n2011-08-04  Robert Dewar  <dewar@adacore.com>\n\n\t* bindgen.ads, gnatlink.adb, sem_ch4.adb, gnatbind.adb, put_alfa.adb,\n\tgnatls.adb, exp_ch3.adb: Minor reformatting.\n\n2011-08-04  Marc Sango  <sango@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute): Replace the message\n\t\"invisible attribute of}\" of the spark restriction violation in\n\tattribute reference by the simple message \"invisible attribute of type\".\n\tIndeed, the node value Error_Msg_Node_1 used is in conflit with the\n\ttwo insertion characters: '&' and '}'.\n\n2011-08-04  Vadim Godunko  <godunko@adacore.com>\n\n\t* impunit.adb (Non_Imp_File_Names_12): Add \"a-coinho\".\n\t* a-coinho.ads, a-coinho.adb: New file.\n\t* Makefile.rtl: Add Ada.Containers.Indefinite_Holders.\n\nFrom-SVN: r177400", "tree": {"sha": "f037eb87fae433a9ff47271af50cea2af76902a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f037eb87fae433a9ff47271af50cea2af76902a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7483c88857464141597b422942b0a66189ef12da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7483c88857464141597b422942b0a66189ef12da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7483c88857464141597b422942b0a66189ef12da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7483c88857464141597b422942b0a66189ef12da/comments", "author": null, "committer": null, "parents": [{"sha": "5207696c34c49d2a6f888eb29a5e0bbc6d5df779", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5207696c34c49d2a6f888eb29a5e0bbc6d5df779", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5207696c34c49d2a6f888eb29a5e0bbc6d5df779"}], "stats": {"total": 425, "additions": 412, "deletions": 13}, "files": [{"sha": "9f3bcb56e170489b18de48b2db67a5691eb5ae8c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -1,3 +1,22 @@\n+2011-08-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* bindgen.ads, gnatlink.adb, sem_ch4.adb, gnatbind.adb, put_alfa.adb,\n+\tgnatls.adb, exp_ch3.adb: Minor reformatting.\n+\n+2011-08-04  Marc Sango  <sango@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute): Replace the message\n+\t\"invisible attribute of}\" of the spark restriction violation in\n+\tattribute reference by the simple message \"invisible attribute of type\".\n+\tIndeed, the node value Error_Msg_Node_1 used is in conflit with the\n+\ttwo insertion characters: '&' and '}'.\n+\n+2011-08-04  Vadim Godunko  <godunko@adacore.com>\n+\n+\t* impunit.adb (Non_Imp_File_Names_12): Add \"a-coinho\".\n+\t* a-coinho.ads, a-coinho.adb: New file.\n+\t* Makefile.rtl: Add Ada.Containers.Indefinite_Holders.\n+\n 2011-08-04  Nicolas Roche  <roche@adacore.com>\n \n \t* alfa_test.adb: Not all ali files are containing alfa information even"}, {"sha": "a03aeaf48a49e60440d31cda934e8681749ce91c", "filename": "gcc/ada/Makefile.rtl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2FMakefile.rtl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2FMakefile.rtl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FMakefile.rtl?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -121,6 +121,7 @@ GNATRTL_NONTASKING_OBJS= \\\n   a-cohama$(objext) \\\n   a-cohase$(objext) \\\n   a-cohata$(objext) \\\n+  a-coinho$(objext) \\\n   a-coinve$(objext) \\\n   a-colien$(objext) \\\n   a-colire$(objext) \\"}, {"sha": "539c3b1b7927fc63886f754cb703f98c4730c997", "filename": "gcc/ada/a-coinho.adb", "status": "added", "additions": 282, "deletions": 0, "changes": 282, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fa-coinho.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fa-coinho.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -0,0 +1,282 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT LIBRARY COMPONENTS                          --\n+--                                                                          --\n+--       A D A . C O N T A I N E R S . B O U N D E D _ V E C T O R S        --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--             Copyright (C) 2011, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+------------------------------------------------------------------------------\n+\n+with Ada.Unchecked_Deallocation;\n+\n+package body Ada.Containers.Indefinite_Holders is\n+\n+   procedure Free is\n+     new Ada.Unchecked_Deallocation (Element_Type, Element_Access);\n+\n+   ---------\n+   -- \"=\" --\n+   ---------\n+\n+   function \"=\" (Left, Right : Holder) return Boolean is\n+   begin\n+      if Left.Element = null and Right.Element = null then\n+         return True;\n+\n+      elsif Left.Element /= null and Right.Element /= null then\n+         return Left.Element.all = Right.Element.all;\n+\n+      else\n+         return False;\n+      end if;\n+   end \"=\";\n+\n+   ------------\n+   -- Adjust --\n+   ------------\n+\n+   overriding procedure Adjust (Container : in out Holder) is\n+   begin\n+      if Container.Element /= null then\n+         Container.Element := new Element_Type'(Container.Element.all);\n+      end if;\n+\n+      Container.Busy := 0;\n+   end Adjust;\n+\n+   ------------\n+   -- Assign --\n+   ------------\n+\n+   procedure Assign (Target : in out Holder; Source : Holder) is\n+   begin\n+      if Target.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      if Target.Element /= Source.Element then\n+         Free (Target.Element);\n+\n+         if Source.Element /= null then\n+            Target.Element := new Element_Type'(Source.Element.all);\n+         end if;\n+      end if;\n+   end Assign;\n+\n+   -----------\n+   -- Clear --\n+   -----------\n+\n+   procedure Clear (Container : in out Holder) is\n+   begin\n+      if Container.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      Free (Container.Element);\n+   end Clear;\n+\n+   ----------\n+   -- Copy --\n+   ----------\n+\n+   function Copy (Source : Holder) return Holder is\n+   begin\n+      if Source.Element = null then\n+         return (AF.Controlled with null, 0);\n+\n+      else\n+         return (AF.Controlled with new Element_Type'(Source.Element.all), 0);\n+      end if;\n+   end Copy;\n+\n+   -------------\n+   -- Element --\n+   -------------\n+\n+   function Element (Container : Holder) return Element_Type is\n+   begin\n+      if Container.Element = null then\n+         raise Constraint_Error with \"container is empty\";\n+\n+      else\n+         return Container.Element.all;\n+      end if;\n+   end Element;\n+\n+   --------------\n+   -- Finalize --\n+   --------------\n+\n+   overriding procedure Finalize (Container : in out Holder) is\n+   begin\n+      if Container.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      Free (Container.Element);\n+   end Finalize;\n+\n+   --------------\n+   -- Is_Empty --\n+   --------------\n+\n+   function Is_Empty (Container : Holder) return Boolean is\n+   begin\n+      return Container.Element = null;\n+   end Is_Empty;\n+\n+   ----------\n+   -- Move --\n+   ----------\n+\n+   procedure Move (Target : in out Holder; Source : in out Holder) is\n+   begin\n+      if Target.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      if Source.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      if Target.Element /= Source.Element then\n+         Free (Target.Element);\n+         Target.Element := Source.Element;\n+         Source.Element := null;\n+      end if;\n+   end Move;\n+\n+   -------------------\n+   -- Query_Element --\n+   -------------------\n+\n+   procedure Query_Element\n+     (Container : Holder;\n+      Process   : not null access procedure (Element : Element_Type))\n+   is\n+      B : Natural renames Container'Unrestricted_Access.Busy;\n+\n+   begin\n+      if Container.Element = null then\n+         raise Constraint_Error with \"container is empty\";\n+      end if;\n+\n+      B := B + 1;\n+\n+      begin\n+         Process (Container.Element.all);\n+\n+      exception\n+         when others =>\n+            B := B - 1;\n+\n+            raise;\n+      end;\n+\n+      B := B - 1;\n+   end Query_Element;\n+\n+   ----------\n+   -- Read --\n+   ----------\n+\n+   procedure Read\n+     (Stream    : not null access Ada.Streams.Root_Stream_Type'Class;\n+      Container : out Holder) is\n+   begin\n+      Clear (Container);\n+\n+      if not Boolean'Input (Stream) then\n+         Container.Element := new Element_Type'(Element_Type'Input (Stream));\n+      end if;\n+   end Read;\n+\n+   ---------------------\n+   -- Replace_Element --\n+   ---------------------\n+\n+   procedure Replace_Element\n+     (Container : in out Holder; New_Item : Element_Type) is\n+   begin\n+      if Container.Busy /= 0 then\n+         raise Program_Error with \"attempt to tamper with elements\";\n+      end if;\n+\n+      Free (Container.Element);\n+      Container.Element := new Element_Type'(New_Item);\n+   end Replace_Element;\n+\n+   ---------------\n+   -- To_Holder --\n+   ---------------\n+\n+   function To_Holder (New_Item : Element_Type) return Holder is\n+   begin\n+      return (AF.Controlled with new Element_Type'(New_Item), 0);\n+   end To_Holder;\n+\n+   --------------------\n+   -- Update_Element --\n+   --------------------\n+\n+   procedure Update_Element\n+     (Container : Holder;\n+      Process   : not null access procedure (Element : in out Element_Type))\n+   is\n+      B : Natural renames Container'Unrestricted_Access.Busy;\n+\n+   begin\n+      if Container.Element = null then\n+         raise Constraint_Error with \"container is empty\";\n+      end if;\n+\n+      B := B + 1;\n+\n+      begin\n+         Process (Container.Element.all);\n+\n+      exception\n+         when others =>\n+            B := B - 1;\n+\n+            raise;\n+      end;\n+\n+      B := B - 1;\n+   end Update_Element;\n+\n+   -----------\n+   -- Write --\n+   -----------\n+\n+   procedure Write\n+     (Stream    : not null access Ada.Streams.Root_Stream_Type'Class;\n+      Container : Holder) is\n+   begin\n+      Boolean'Output (Stream, Container.Element = null);\n+\n+      if Container.Element /= null then\n+         Element_Type'Output (Stream, Container.Element.all);\n+      end if;\n+   end Write;\n+\n+end Ada.Containers.Indefinite_Holders;"}, {"sha": "63bcb34c03151ae91499d56da5c9e6754cd20a1f", "filename": "gcc/ada/a-coinho.ads", "status": "added", "additions": 100, "deletions": 0, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fa-coinho.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fa-coinho.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-coinho.ads?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -0,0 +1,100 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT LIBRARY COMPONENTS                          --\n+--                                                                          --\n+--       A D A . C O N T A I N E R S . B O U N D E D _ V E C T O R S        --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--             Copyright (C) 2011, Free Software Foundation, Inc.           --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+------------------------------------------------------------------------------\n+\n+private with Ada.Finalization;\n+private with Ada.Streams;\n+\n+generic\n+   type Element_Type (<>) is private;\n+   with function \"=\" (Left, Right : Element_Type) return Boolean is <>;\n+\n+package Ada.Containers.Indefinite_Holders is\n+   pragma Preelaborate (Indefinite_Holders);\n+   pragma Remote_Types (Indefinite_Holders);\n+\n+   type Holder is tagged private;\n+   pragma Preelaborable_Initialization (Holder);\n+\n+   Empty_Holder : constant Holder;\n+\n+   function \"=\" (Left, Right : Holder) return Boolean;\n+\n+   function To_Holder (New_Item : Element_Type) return Holder;\n+\n+   function Is_Empty (Container : Holder) return Boolean;\n+\n+   procedure Clear (Container : in out Holder);\n+\n+   function Element (Container : Holder) return Element_Type;\n+\n+   procedure Replace_Element\n+     (Container : in out Holder; New_Item : Element_Type);\n+\n+   procedure Query_Element\n+     (Container : Holder;\n+      Process   : not null access procedure (Element : Element_Type));\n+   procedure Update_Element\n+     (Container : Holder;\n+      Process   : not null access procedure (Element : in out Element_Type));\n+\n+   procedure Assign (Target : in out Holder; Source : Holder);\n+\n+   function Copy (Source : Holder) return Holder;\n+\n+   procedure Move (Target : in out Holder; Source : in out Holder);\n+\n+private\n+\n+   package AF renames Ada.Finalization;\n+\n+   type Element_Access is access all Element_Type;\n+\n+   procedure Read\n+     (Stream    : not null access Ada.Streams.Root_Stream_Type'Class;\n+      Container : out Holder);\n+\n+   procedure Write\n+     (Stream    : not null access Ada.Streams.Root_Stream_Type'Class;\n+      Container : Holder);\n+\n+   type Holder is new Ada.Finalization.Controlled with record\n+      Element : Element_Access;\n+      Busy    : Natural := 0;\n+   end record;\n+   for Holder'Read use Read;\n+   for Holder'Write use Write;\n+\n+   overriding procedure Adjust (Container : in out Holder);\n+   overriding procedure Finalize (Container : in out Holder);\n+\n+   Empty_Holder : constant Holder := (AF.Controlled with null, 0);\n+\n+end Ada.Containers.Indefinite_Holders;"}, {"sha": "71596284963e1742ee4e0243426b1b230ab432b0", "filename": "gcc/ada/bindgen.ads", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fbindgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fbindgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.ads?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -24,11 +24,11 @@\n ------------------------------------------------------------------------------\n \n --  This package contains the routines to output the binder file. This is\n---  an Ada or C program which contains the following:\n+--  an Ada program which contains the following:\n \n---     initialization for main program case\n---     sequence of calls to elaboration routines in appropriate order\n---     call to main program for main program case\n+--     Initialization for main program case\n+--     Sequence of calls to elaboration routines in appropriate order\n+--     Call to main program for main program case\n \n --  See the body for exact details of the file that is generated\n "}, {"sha": "6d73822c3568dd9994ac0ef6dbda8dd3abb1213b", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -9017,7 +9017,6 @@ package body Exp_Ch3 is\n    --  Start processing for Stream_Operation_OK\n \n    begin\n-\n       --  Special case of a limited type extension: a default implementation\n       --  of the stream attributes Read or Write exists if that attribute\n       --  has been specified or is available for an ancestor type; a default"}, {"sha": "0382371b6888192d26a31b8862336cfb7b12ac84", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -566,14 +566,12 @@ begin\n       Check_Extensions : declare\n          Length : constant Natural := Output_File_Name'Length;\n          Last   : constant Natural := Output_File_Name'Last;\n-\n       begin\n          if Length <= 4\n            or else Output_File_Name (Last - 3 .. Last) /= \".adb\"\n          then\n             Fail (\"output file name should have .adb extension\");\n          end if;\n-\n       end Check_Extensions;\n    end if;\n "}, {"sha": "9c340fbfd42f16fd93fc8946d861716390f682d9", "filename": "gcc/ada/gnatlink.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fgnatlink.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fgnatlink.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatlink.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -1591,8 +1591,7 @@ begin\n                   then\n                      Binder_Options_From_ALI.Increment_Last;\n                      Binder_Options_From_ALI.Table\n-                       (Binder_Options_From_ALI.Last)\n-                          := String_Access (Arg);\n+                       (Binder_Options_From_ALI.Last) := String_Access (Arg);\n \n                      --  Set the RTS_*_Path_Name variables, so that\n                      --  the correct directories will be set when"}, {"sha": "a2612861c082846089f7f8e7f46ceacaf037c270", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -1733,7 +1733,6 @@ begin\n                Write_Str (\"   \");\n                Write_Line\n                  (To_Host_Dir_Spec (Name_Buffer (1 .. Name_Len), True).all);\n-\n             end if;\n          end if;\n       end;"}, {"sha": "153c15913aeb5e1d4052f6ca706d7c2dbdaa5b4b", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -514,6 +514,7 @@ package body Impunit is\n      \"a-cborma\",    -- Ada.Containers.Bounded_Ordered_Maps\n      \"a-cbhase\",    -- Ada.Containers.Bounded_Hashed_Sets\n      \"a-cbhama\",    -- Ada.Containers.Bounded_Hashed_Maps\n+     \"a-coinho\",    -- Ada.Containers.Indefinite_Holders\n      \"a-extiin\",    -- Ada.Execution_Time.Interrupts\n \n    -----------------------------------------"}, {"sha": "59be7c2824cdabf349075344ee3424615f8fad4f", "filename": "gcc/ada/put_alfa.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fput_alfa.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fput_alfa.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fput_alfa.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -75,6 +75,7 @@ begin\n                Write_Info_Char (' ');\n \n                pragma Assert (S.Scope_Name.all /= \"\");\n+\n                for N in S.Scope_Name'Range loop\n                   Write_Info_Char (S.Scope_Name (N));\n                end loop;"}, {"sha": "caf036cda707b2ab2e9af51f9be9de74d6081c59", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -2068,8 +2068,7 @@ package body Sem_Attr is\n         and then not In_Open_Scopes (Scope (P_Type))\n         and then not In_Spec_Expression\n       then\n-         Error_Msg_Node_1 := First_Subtype (P_Type);\n-         Check_SPARK_Restriction (\"invisible attribute of}\", N);\n+         Check_SPARK_Restriction (\"invisible attribute of type\", N);\n       end if;\n \n       --  Remaining processing depends on attribute"}, {"sha": "d62f2628058c4ffe0ceda6b41c04f9d2974208b9", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7483c88857464141597b422942b0a66189ef12da/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=7483c88857464141597b422942b0a66189ef12da", "patch": "@@ -2492,6 +2492,7 @@ package body Sem_Ch4 is\n \n       else\n          Analyze (R);\n+\n          if Is_Entity_Name (R)\n            and then Is_Type (Entity (R))\n          then"}]}