{"sha": "6d9efc7bd691b2cec9c35fd80bf9a03c62dd8044", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ5ZWZjN2JkNjkxYjJjZWM5YzM1ZmQ4MGJmOWEwM2M2MmRkODA0NA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-08T22:42:43Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-08T22:42:43Z"}, "message": "(mark_set_1): Clear reg_next_use at the proper place.\n\nFrom-SVN: r4044", "tree": {"sha": "3ebfd02c77a7c1dda6098be7a9d8e59f56ff5aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ebfd02c77a7c1dda6098be7a9d8e59f56ff5aa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d9efc7bd691b2cec9c35fd80bf9a03c62dd8044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9efc7bd691b2cec9c35fd80bf9a03c62dd8044", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d9efc7bd691b2cec9c35fd80bf9a03c62dd8044", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9efc7bd691b2cec9c35fd80bf9a03c62dd8044/comments", "author": null, "committer": null, "parents": [{"sha": "56f9206d8bcba4a2f2acc4ecd74f08429515908e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56f9206d8bcba4a2f2acc4ecd74f08429515908e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56f9206d8bcba4a2f2acc4ecd74f08429515908e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "d79734388dfb09ccf274dcdf30c4cd6071d41ad8", "filename": "gcc/flow.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d9efc7bd691b2cec9c35fd80bf9a03c62dd8044/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d9efc7bd691b2cec9c35fd80bf9a03c62dd8044/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=6d9efc7bd691b2cec9c35fd80bf9a03c62dd8044", "patch": "@@ -1795,9 +1795,6 @@ mark_set_1 (needed, dead, x, insn, significant)\n       /* Mark it as as dead before this insn.  */\n       dead[offset] |= bit;\n \n-      /* The next use is no longer \"next\", since a store intervenes.  */\n-      reg_next_use[regno] = 0;\n-\n       /* A hard reg in a wide mode may really be multiple registers.\n \t If so, mark all of them just like the first.  */\n       if (regno < FIRST_PSEUDO_REGISTER)\n@@ -1831,6 +1828,9 @@ mark_set_1 (needed, dead, x, insn, significant)\n \t  register rtx y = reg_next_use[regno];\n \t  register int blocknum = BLOCK_NUM (insn);\n \n+\t  /* The next use is no longer \"next\", since a store intervenes.  */\n+\t  reg_next_use[regno] = 0;\n+\n \t  /* If this is a hard reg, record this function uses the reg.  */\n \n \t  if (regno < FIRST_PSEUDO_REGISTER)"}]}