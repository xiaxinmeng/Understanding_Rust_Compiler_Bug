{"sha": "29e8b716ec7b005ec5bb63cc56e13e716f677f50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllOGI3MTZlYzdiMDA1ZWM1YmI2M2NjNTZlMTNlNzE2ZjY3N2Y1MA==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-03-18T02:43:10Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-03-18T02:43:10Z"}, "message": "re PR fortran/43265 (No EOF condition if reading with '(x)' from an empty file)\n\n2010-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/43265\n\t*gfortran.dg/read_empty_file.f: New test.\n\t*gfortran.dg/read_eof_all.f90: New test.\n\t*gfortran.dg/namelist_27.f90: Eliminate infinite loop posibility.\n\t*gfortran.dg/namelist_28.f90: Eliminate infinite loop posibility.\n\nFrom-SVN: r157528", "tree": {"sha": "f7df763461ba0432a0f53bcb0827ff033a18a1b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7df763461ba0432a0f53bcb0827ff033a18a1b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29e8b716ec7b005ec5bb63cc56e13e716f677f50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e8b716ec7b005ec5bb63cc56e13e716f677f50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e8b716ec7b005ec5bb63cc56e13e716f677f50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e8b716ec7b005ec5bb63cc56e13e716f677f50/comments", "author": null, "committer": null, "parents": [{"sha": "59011a60c01403fec67e08bc6b94bb44da920482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59011a60c01403fec67e08bc6b94bb44da920482", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59011a60c01403fec67e08bc6b94bb44da920482"}], "stats": {"total": 104, "additions": 96, "deletions": 8}, "files": [{"sha": "da5166f9f2d0568d3795f5d9223edf23b886a6cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=29e8b716ec7b005ec5bb63cc56e13e716f677f50", "patch": "@@ -1,3 +1,11 @@\n+2010-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/43265\n+\t*gfortran.dg/read_empty_file.f: New test.\n+\t*gfortran.dg/read_eof_all.f90: New test.\n+\t*gfortran.dg/namelist_27.f90: Eliminate infinite loop posibility.\n+\t*gfortran.dg/namelist_28.f90: Eliminate infinite loop posibility.\n+\n 2010-03-17  Michael Matz  <matz@suse.de>\n \n \t* gcc.dg/pr43300.c: Add -w."}, {"sha": "06381b116344c8a51db9a64c48194a3be53b3548", "filename": "gcc/testsuite/gfortran.dg/namelist_27.f90", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_27.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_27.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_27.f90?ref=29e8b716ec7b005ec5bb63cc56e13e716f677f50", "patch": "@@ -41,14 +41,14 @@ subroutine position_nml (unit, name, status)\n     character(len=*), intent(in) :: name\n \n     character(len=255) :: line\n-    integer            :: ios, idx\n+    integer            :: ios, idx, k\n     logical            :: first\n \n     first = .true.\n     status = 0\n     ios = 0\n     line = \"\"\n-    do\n+    do k=1,10\n        read (unit,'(a)',iostat=ios) line\n        if (first) then\n           first = .false.\n@@ -74,7 +74,7 @@ end subroutine position_nml\n   subroutine read_report (unit, status)\n     integer :: unit, status\n \n-    integer            :: iuse, ios\n+    integer            :: iuse, ios, k\n     !------------------\n     ! Namelist 'REPORT'\n     !------------------\n@@ -85,7 +85,7 @@ subroutine read_report (unit, status)\n     ! Loop to read namelist multiple times\n     !-------------------------------------\n     iuse = 0\n-    do\n+    do k=1,5\n        !----------------------------------------\n        ! Preset namelist variables with defaults\n        !----------------------------------------"}, {"sha": "22bddf662390bce04c03256ac73f883b0fcbd279", "filename": "gcc/testsuite/gfortran.dg/namelist_28.f90", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_28.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_28.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnamelist_28.f90?ref=29e8b716ec7b005ec5bb63cc56e13e716f677f50", "patch": "@@ -27,12 +27,12 @@ subroutine position_nml (unit, name, status)\n     character(len=*), intent(in) :: name\n \n     character(len=255) :: line\n-    integer            :: ios, idx\n+    integer            :: ios, idx, k\n     logical            :: first\n \n     first = .true.\n     status = 0\n-    do\n+    do k=1,25\n        line = \"\"\n        read (unit,'(a)',iostat=ios) line\n        if (ios < 0) then\n@@ -51,12 +51,13 @@ subroutine position_nml (unit, name, status)\n           return\n        end if\n     end do\n+    if (k.gt.10) call abort\n   end subroutine position_nml\n \n   subroutine read_report (unit, status)\n     integer :: unit, status\n \n-    integer            :: iuse, ios\n+    integer            :: iuse, ios, k\n     !------------------\n     ! Namelist 'REPORT'\n     !------------------\n@@ -66,7 +67,7 @@ subroutine read_report (unit, status)\n     ! Loop to read namelist multiple times\n     !-------------------------------------\n     iuse = 0\n-    do\n+    do k=1,25\n        !----------------------------------------\n        ! Preset namelist variables with defaults\n        !----------------------------------------\n@@ -84,6 +85,7 @@ subroutine read_report (unit, status)\n        if (ios /= 0) exit\n        iuse = iuse + 1\n     end do\n+    if (k.gt.10) call abort\n     status = ios\n   end subroutine read_report\n "}, {"sha": "d4077481bda81950fe9b413765bf87b7e1110afc", "filename": "gcc/testsuite/gfortran.dg/read_empty_file.f", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_empty_file.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_empty_file.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_empty_file.f?ref=29e8b716ec7b005ec5bb63cc56e13e716f677f50", "patch": "@@ -0,0 +1,7 @@\n+! { dg-do run }\n+! PR43320 Missing EOF on read from empty file.\n+      open(8,status='scratch',form='formatted')  ! Create empty file\n+      read(8,'(a80)', end=123)  ! Reading from an empty file should be an EOF\n+      call abort\n+123   continue\n+      end"}, {"sha": "db6def48716a76e062befa06f9686fd242c98ca7", "filename": "gcc/testsuite/gfortran.dg/read_eof_all.f90", "status": "added", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_all.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e8b716ec7b005ec5bb63cc56e13e716f677f50/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_all.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fread_eof_all.f90?ref=29e8b716ec7b005ec5bb63cc56e13e716f677f50", "patch": "@@ -0,0 +1,71 @@\n+! { dg-do run }\n+! PR43265 Followup patch for miscellaneous EOF conditions.\n+! Eaxamples from Tobius Burnus \n+  use iso_fortran_env\n+  character(len=2) :: str, str2(2)\n+  integer :: a, b, c, ios\n+  str = ''\n+  str2 = ''\n+\n+  open(99,file='test.dat',access='stream',form='unformatted', status='replace')\n+  write(99) ' '\n+  close(99)\n+ \n+  open(99,file='test.dat')\n+  read(99, '(T7,i2)') i\n+  close(99, status=\"delete\")\n+  if (i /= 0) call abort\n+\n+  read(str(1:0), '(T7,i1)') i\n+  if (i /= 0) call abort\n+\n+  read(str,'(i2,/,i2)',end=111) a, b\n+  call abort !stop 'ERROR: Expected EOF error (1)'\n+  111 continue\n+\n+  read(str2,'(i2,/,i2)',end=112) a, b\n+\n+  read(str2,'(i2,/,i2,/,i2)',end=113) a, b, c\n+  call abort !stop 'ERROR: Expected EOF error (2)'\n+\n+  112 call abort !stop 'ERROR: Unexpected EOF (3)'\n+\n+  113 continue\n+  read(str,'(i2,/,i2)',end=121,pad='no') a, b\n+  call abort !stop 'ERROR: Expected EOF error (1)'\n+  121 continue\n+\n+  read(str2(:),'(i2,/,i2)', end=122, pad='no') a, b\n+  goto 125\n+  122 call abort !stop 'ERROR: Expected no EOF error (2)'\n+  125 continue\n+\n+  read(str2(:),'(i2,/,i2,/,i2)',end=123,pad='no') a, b, c\n+  call abort !stop 'ERROR: Expected EOF error (3)'\n+  123 continue\n+\n+  read(str(2:1),'(i2,/,i2)',end=131, pad='no') a, b\n+  call abort !stop 'ERROR: Expected EOF error (1)'\n+  131 continue\n+\n+  read(str2(:)(2:1),'(i2,/,i2)',end=132, pad='no') a, b\n+  call abort !stop 'ERROR: Expected EOF error (2)'\n+  132 continue\n+\n+  read(str2(:)(2:1),'(i2,/,i2,/,i2)',end=133,pad='no') a, b, c\n+  call abort !stop 'ERROR: Expected EOF error (3)'\n+  133 continue\n+\n+  read(str(2:1),'(i2,/,i2)',iostat=ios, pad='no') a, b\n+  if (ios /= IOSTAT_END) call abort !stop 'ERROR: expected iostat /= 0  (1)'\n+\n+  read(str2(:)(2:1),'(i2,/,i2)',iostat=ios, pad='no') a, b\n+  if (ios /= IOSTAT_END) call  abort !stop 'ERROR: expected iostat /= 0  (2)'\n+\n+  read(str2(:)(2:1),'(i2,/,i2,/,i2)',iostat=ios,pad='no') a, b, c\n+  if (ios /= IOSTAT_END) call abort !stop 'ERROR: expected iostat /= 0  (2)'\n+\n+  ! print *, \"success\"\n+  end\n+\n+"}]}