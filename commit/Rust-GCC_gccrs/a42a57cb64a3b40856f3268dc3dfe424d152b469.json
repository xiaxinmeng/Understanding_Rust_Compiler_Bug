{"sha": "a42a57cb64a3b40856f3268dc3dfe424d152b469", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQyYTU3Y2I2NGEzYjQwODU2ZjMyNjhkYzNkZmU0MjRkMTUyYjQ2OQ==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-04-14T20:08:02Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-04-14T20:08:02Z"}, "message": "configure.ac: Restore toolexecdir.\n\n\t* configure.ac: Restore toolexecdir.\n\t* Makefile.in: Restore toolexecdir.\n\t* configure: Regenerate.\n\nFrom-SVN: r80690", "tree": {"sha": "f04160bfd92b08fd9a9a2aab7e8e4597a3583925", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f04160bfd92b08fd9a9a2aab7e8e4597a3583925"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a42a57cb64a3b40856f3268dc3dfe424d152b469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42a57cb64a3b40856f3268dc3dfe424d152b469", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a42a57cb64a3b40856f3268dc3dfe424d152b469", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a42a57cb64a3b40856f3268dc3dfe424d152b469/comments", "author": null, "committer": null, "parents": [{"sha": "8329559d9e2495bd980454f28edbcb7d3188691a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8329559d9e2495bd980454f28edbcb7d3188691a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8329559d9e2495bd980454f28edbcb7d3188691a"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "f9412b0911ddbead4320603f0904673b8d5e1c78", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42a57cb64a3b40856f3268dc3dfe424d152b469/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42a57cb64a3b40856f3268dc3dfe424d152b469/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=a42a57cb64a3b40856f3268dc3dfe424d152b469", "patch": "@@ -1,3 +1,9 @@\n+2004-04-14  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* configure.ac: Restore toolexecdir.\n+\t* Makefile.in: Restore toolexecdir.\n+\t* configure: Regenerate.\n+\n 2004-04-09  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* configure.ac: Remove (unused) glibcpp_prefixdir."}, {"sha": "f06fa13c54b7c295ac76fbc84b5fe1ce11df3241", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42a57cb64a3b40856f3268dc3dfe424d152b469/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42a57cb64a3b40856f3268dc3dfe424d152b469/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=a42a57cb64a3b40856f3268dc3dfe424d152b469", "patch": "@@ -36,6 +36,8 @@ target_noncanonical = @target_noncanonical@\n gcc_version = @gcc_version@\n top_srcdir = @top_srcdir@\n toplevel_srcdir = @toplevel_srcdir@\n+toolexecdir = @toolexecdir@ \n+# Toolexecdir is used only by toolexeclibdir\n toolexeclibdir = @toolexeclibdir@\n \n top_builddir = ."}, {"sha": "b7105a725616e56901f59379c9ab80d5d6891ede", "filename": "libobjc/configure", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42a57cb64a3b40856f3268dc3dfe424d152b469/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42a57cb64a3b40856f3268dc3dfe424d152b469/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=a42a57cb64a3b40856f3268dc3dfe424d152b469", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS VERSION OBJC_BOEHM_GC toplevel_srcdir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical glibcpp_srcdir gcc_version toolexeclibdir CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA LN_S STRIP ac_ct_STRIP LIBTOOL SET_MAKE CPP EGREP GTHREAD_FLAGS LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS VERSION OBJC_BOEHM_GC toplevel_srcdir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical glibcpp_srcdir gcc_version toolexecdir toolexeclibdir CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA LN_S STRIP ac_ct_STRIP LIBTOOL SET_MAKE CPP EGREP GTHREAD_FLAGS LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -1553,19 +1553,23 @@ gcc_version=`echo ${gcc_version_full} | sed -e 's/\\(^ *\\) .*/\\1/'`\n \n \n # Calculate toolexeclibdir\n+# Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n   yes)\n     # Need the gcc compiler version to know where to install libraries\n     # and header files if --enable-version-specific-runtime-libs option\n     # is selected.\n+    toolexecdir='$(libdir)/gcc/$(target_noncanonical)'\n     toolexeclibdir='$(toolexecdir)/'${gcc_version}'$(MULTISUBDIR)'\n     ;;\n   no)\n     if test -n \"$with_cross_host\" &&\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n+      toolexecdir='$(exec_prefix)/$(target_noncanonical)'\n       toolexeclibdir='$(toolexecdir)/lib'\n     else\n+      toolexecdir='$(libdir)/gcc-lib/$(target_noncanonical)'\n       toolexeclibdir='$(libdir)'\n     fi\n     multi_os_directory=`$CC -print-multi-os-directory`\n@@ -1577,6 +1581,7 @@ case ${version_specific_libs} in\n esac\n \n \n+\n # --------\n # Programs\n # --------\n@@ -3605,7 +3610,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 3608 \"configure\"' > conftest.$ac_ext\n+  echo '#line 3613 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -5597,6 +5602,7 @@ s,@target_os@,$target_os,;t t\n s,@target_noncanonical@,$target_noncanonical,;t t\n s,@glibcpp_srcdir@,$glibcpp_srcdir,;t t\n s,@gcc_version@,$gcc_version,;t t\n+s,@toolexecdir@,$toolexecdir,;t t\n s,@toolexeclibdir@,$toolexeclibdir,;t t\n s,@CC@,$CC,;t t\n s,@CFLAGS@,$CFLAGS,;t t"}, {"sha": "b0c86bd9282e10ae90204bb1338f00bf7fc420cb", "filename": "libobjc/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a42a57cb64a3b40856f3268dc3dfe424d152b469/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a42a57cb64a3b40856f3268dc3dfe424d152b469/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=a42a57cb64a3b40856f3268dc3dfe424d152b469", "patch": "@@ -125,19 +125,23 @@ gcc_version=`echo ${gcc_version_full} | sed -e 's/\\([^ ]*\\) .*/\\1/'`\n AC_SUBST(gcc_version)\n \n # Calculate toolexeclibdir\n+# Also toolexecdir, though it's only used in toolexeclibdir\n case ${version_specific_libs} in\n   yes)\n     # Need the gcc compiler version to know where to install libraries\n     # and header files if --enable-version-specific-runtime-libs option\n     # is selected.\n+    toolexecdir='$(libdir)/gcc/$(target_noncanonical)'\n     toolexeclibdir='$(toolexecdir)/'${gcc_version}'$(MULTISUBDIR)'\n     ;;\n   no)\n     if test -n \"$with_cross_host\" &&\n        test x\"$with_cross_host\" != x\"no\"; then\n       # Install a library built with a cross compiler in tooldir, not libdir.\n+      toolexecdir='$(exec_prefix)/$(target_noncanonical)'\n       toolexeclibdir='$(toolexecdir)/lib'\n     else\n+      toolexecdir='$(libdir)/gcc-lib/$(target_noncanonical)'\n       toolexeclibdir='$(libdir)'\n     fi\n     multi_os_directory=`$CC -print-multi-os-directory`\n@@ -147,6 +151,7 @@ case ${version_specific_libs} in\n     esac\n     ;;\n esac\n+AC_SUBST(toolexecdir)\n AC_SUBST(toolexeclibdir)\n \n # --------"}]}