{"sha": "e314cfc371d8b2405a1d81e51b90f9fb24b9061f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTMxNGNmYzM3MWQ4YjI0MDVhMWQ4MWU1MWI5MGY5ZmIyNGI5MDYxZg==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-07-23T19:00:10Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2021-07-23T19:00:10Z"}, "message": "Fortran: extend check for array arguments and reject CLASS array elements.\n\ngcc/fortran/ChangeLog:\n\n\tPR fortran/101536\n\t* check.c (array_check): Adjust check for the case of CLASS\n\tarrays.\n\ngcc/testsuite/ChangeLog:\n\n\tPR fortran/101536\n\t* gfortran.dg/pr101536.f90: New test.", "tree": {"sha": "ae1984984da4e2a388f75df3c1aef5efc8594c0a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae1984984da4e2a388f75df3c1aef5efc8594c0a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e314cfc371d8b2405a1d81e51b90f9fb24b9061f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e314cfc371d8b2405a1d81e51b90f9fb24b9061f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e314cfc371d8b2405a1d81e51b90f9fb24b9061f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e314cfc371d8b2405a1d81e51b90f9fb24b9061f/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8408d34570c9fe9f3d22a25a76df2a4c64f08477", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8408d34570c9fe9f3d22a25a76df2a4c64f08477", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8408d34570c9fe9f3d22a25a76df2a4c64f08477"}], "stats": {"total": 36, "additions": 34, "deletions": 2}, "files": [{"sha": "851af1b30dc18cad6f8074130ff13395a73a04a9", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e314cfc371d8b2405a1d81e51b90f9fb24b9061f/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e314cfc371d8b2405a1d81e51b90f9fb24b9061f/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=e314cfc371d8b2405a1d81e51b90f9fb24b9061f", "patch": "@@ -731,12 +731,11 @@ logical_array_check (gfc_expr *array, int n)\n static bool\n array_check (gfc_expr *e, int n)\n {\n-  if (e->ts.type == BT_CLASS && gfc_expr_attr (e).class_ok\n+  if (e->rank != 0 && e->ts.type == BT_CLASS && gfc_expr_attr (e).class_ok\n \t&& CLASS_DATA (e)->attr.dimension\n \t&& CLASS_DATA (e)->as->rank)\n     {\n       gfc_add_class_array_ref (e);\n-      return true;\n     }\n \n   if (e->rank != 0 && e->ts.type != BT_PROCEDURE)"}, {"sha": "b16af00d91946108d9e83cc41e9caf2fecf92cbc", "filename": "gcc/testsuite/gfortran.dg/pr101536.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e314cfc371d8b2405a1d81e51b90f9fb24b9061f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101536.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e314cfc371d8b2405a1d81e51b90f9fb24b9061f/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101536.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr101536.f90?ref=e314cfc371d8b2405a1d81e51b90f9fb24b9061f", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do compile }\n+! PR fortran/101536 - ICE in gfc_conv_expr_descriptor\n+\n+program p\n+  type s\n+     class(*), allocatable :: c\n+  end type\n+  type t\n+     class(*), allocatable :: c(:)\n+  end type t\n+  type u\n+     integer :: c(2)\n+  end type\n+  type(t) :: x\n+  x%c = [1,2,3,4]\n+!  print *, size (x)\n+  print *, size (x%c)\n+  print *, size (x%c(1)) ! { dg-error \"must be an array\" }\n+contains\n+  integer function f(x, y, z)\n+    class(t), allocatable :: x(:)\n+    class(u)              :: y(:)\n+    class(s)              :: z\n+    f = size (x)\n+    f = size (x(1))      ! { dg-error \"must be an array\" }\n+    f = size (y)\n+    f = size (y%c(1))\n+    f = size (y(2)%c)\n+    f = size (y(2)%c(1)) ! { dg-error \"must be an array\" }\n+    f = size (z)         ! { dg-error \"must be an array\" }\n+    f = size (z% c)      ! { dg-error \"must be an array\" }\n+  end\n+end"}]}