{"sha": "8469d2903bb744a815f647a4c210f255c412819d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ2OWQyOTAzYmI3NDRhODE1ZjY0N2E0YzIxMGYyNTVjNDEyODE5ZA==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-08-04T01:36:07Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-08-04T01:36:07Z"}, "message": "(v9 va_start): Pass an arg to __builtin_next_arg.\n\n(v9 va_arg): Advance over float's.\n\nFrom-SVN: r7856", "tree": {"sha": "40e3e4c2d2507c357c00846a31361608f13d02d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40e3e4c2d2507c357c00846a31361608f13d02d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8469d2903bb744a815f647a4c210f255c412819d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8469d2903bb744a815f647a4c210f255c412819d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8469d2903bb744a815f647a4c210f255c412819d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8469d2903bb744a815f647a4c210f255c412819d/comments", "author": null, "committer": null, "parents": [{"sha": "a7acd9111dd5b8fe5a86850a89906f862b3dd41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a7acd9111dd5b8fe5a86850a89906f862b3dd41c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a7acd9111dd5b8fe5a86850a89906f862b3dd41c"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "fe0a47e22579d71596a1509fd9ee060cc5dc32d7", "filename": "gcc/ginclude/va-sparc.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8469d2903bb744a815f647a4c210f255c412819d/gcc%2Fginclude%2Fva-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8469d2903bb744a815f647a4c210f255c412819d/gcc%2Fginclude%2Fva-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-sparc.h?ref=8469d2903bb744a815f647a4c210f255c412819d", "patch": "@@ -45,7 +45,7 @@ __extension__ \\\n      AP.__va_next_fp = (__va_freg *) AP.__va_next_o_limit; \\\n      AP.__va_next_fp_limit = (AP.__va_next_fp + \\\n \t\t\t      (__builtin_args_info (1) < 16 ? (16 - __builtin_args_info (1) + 1) / 2 : 0)); \\\n-     AP.__va_next_stack = (__va_greg *) __builtin_next_arg(); \\\n+     AP.__va_next_stack = (__va_greg *) __builtin_next_arg (LASTARG); \\\n   })\n #else\n /* Call __builtin_next_arg even though we aren't using its value, so that\n@@ -74,7 +74,7 @@ __extension__ \\\n      AP.__va_next_fp = (__va_freg *) AP.__va_next_o_limit; \\\n      AP.__va_next_fp_limit = (AP.__va_next_fp + \\\n \t\t\t      (__builtin_args_info (1) < 16 ? (16 - __builtin_args_info (1) + 1) / 2 : 0)); \\\n-     AP.__va_next_stack = (__va_greg *) __builtin_next_arg(); \\\n+     AP.__va_next_stack = (__va_greg *) __builtin_next_arg (__builtin_va_alist); \\\n   })\n #else\n #ifdef __GCC_NEW_VARARGS__\n@@ -137,17 +137,17 @@ __extension__\t\t\t\t\t\t\t\\\n   if (__type == __real_type_class)\t\t/* float? */\t\\\n     {\t\t\t\t\t\t\t\t\\\n       __va_freg *__r;\t\t\t\t\t\t\\\n-      /* see PASS_IN_REG_P in sparc.h */\t\t\t\\\n+      /* see PASS_IN_REG_P in gcc's sparc.h */\t\t\t\\\n       if (pvar.__va_next_fp < pvar.__va_next_fp_limit\t\t\\\n \t  && ((__r = (__va_freg *) (((__va_greg) pvar.__va_next_fp + sizeof (TYPE) - 1) & ~(__va_greg) (sizeof (TYPE) - 1))) \\\n \t      < pvar.__va_next_fp_limit))\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n-\t  pvar.__va_next_fp = __r + sizeof (TYPE) / 8;\t\t\\\n+\t  pvar.__va_next_fp = __r + (sizeof (TYPE) + 7) / 8;\t\\\n \t}\t\t\t\t\t\t\t\\\n       else\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\\\n \t  __r = (__va_freg *) pvar.__va_next_stack;\t\t\\\n-\t  pvar.__va_next_stack += sizeof (TYPE) / 8;\t\t\\\n+\t  pvar.__va_next_stack += (sizeof (TYPE) + 7) / 8;\t\\\n \t}\t\t\t\t\t\t\t\\\n       __result = __r;\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\"}]}