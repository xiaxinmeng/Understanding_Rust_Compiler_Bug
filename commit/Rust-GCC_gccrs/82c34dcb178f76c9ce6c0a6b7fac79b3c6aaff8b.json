{"sha": "82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJjMzRkY2IxNzhmNzZjOWNlNmMwYTZiN2ZhYzc5YjNjNmFhZmY4Yg==", "commit": {"author": {"name": "Michael Chastain", "email": "mec@shout.net", "date": "2003-03-14T19:18:21Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2003-03-14T19:18:21Z"}, "message": "* Makefile.in: Regenerate with correct Makefile.def.\n\nFrom-SVN: r64368", "tree": {"sha": "2cbd30c0a29763f41fb8e4989c79b48429992637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cbd30c0a29763f41fb8e4989c79b48429992637"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b/comments", "author": null, "committer": null, "parents": [{"sha": "35d9c4030288e9b9d99e16ec3213fb5e91ce6113", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35d9c4030288e9b9d99e16ec3213fb5e91ce6113", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35d9c4030288e9b9d99e16ec3213fb5e91ce6113"}], "stats": {"total": 74, "additions": 73, "deletions": 1}, "files": [{"sha": "a55448047c147f0e9b8fe5894a5beda38a9f61be", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b", "patch": "@@ -1,3 +1,7 @@\n+2003-03-14  Michael Chastain  <mec@shout.net>\n+\n+\t* Makefile.in: Regenerate with correct Makefile.def.\n+\n 2003-03-12  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* Makefile.tpl: Move .NOEXPORT, MAKEOVERRIDES up.  Delete unused"}, {"sha": "c40fd8155be3427471d67d0d1754b377eaab89fe", "filename": "Makefile.in", "status": "modified", "additions": 69, "deletions": 1, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b/Makefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b/Makefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Makefile.in?ref=82c34dcb178f76c9ce6c0a6b7fac79b3c6aaff8b", "patch": "@@ -641,7 +641,8 @@ CLEAN_X11_MODULES = \\\n \tclean-gdb \\\n \tclean-expect \\\n \tclean-guile \\\n-\tclean-tk \n+\tclean-tk \\\n+\tclean-tix \n \n # The target built for a native build.\n # This list only includes modules actually being configured and built.\n@@ -5404,6 +5405,73 @@ install-tk: installdirs\n \t(cd tk && $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) install)\n \n \n+.PHONY: configure-tix maybe-configure-tix\n+maybe-configure-tix:\n+configure-tix:\n+\t@test ! -f tix/Makefile || exit 0; \\\n+\t[ -d tix ] || mkdir tix; \\\n+\tr=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\tCC=\"$(CC)\"; export CC; \\\n+\tCFLAGS=\"$(CFLAGS)\"; export CFLAGS; \\\n+\tCXX=\"$(CXX)\"; export CXX; \\\n+\tCXXFLAGS=\"$(CXXFLAGS)\"; export CXXFLAGS; \\\n+\tif [ z$(build_canonical) !=  z$(host_canoncial) ] ; then \\\n+\t  AR=\"$(AR)\"; export AR; \\\n+\t  AS=\"$(AS)\"; export AS; \\\n+\t  CC_FOR_BUILD=\"$(CC_FOR_BUILD)\"; export CC_FOR_BUILD; \\\n+\t  DLLTOOL=\"$(DLLTOOL)\"; export DLLTOOL; \\\n+\t  LD=\"$(LD)\"; export LD; \\\n+\t  NM=\"$(NM)\"; export NM; \\\n+\t  RANLIB=\"$(RANLIB)\"; export RANLIB; \\\n+\t  WINDRES=\"$(WINDRES)\"; export WINDRES; \\\n+\t  OBJCOPY=\"$(OBJCOPY)\"; export OBJCOPY; \\\n+\t  OBJDUMP=\"$(OBJDUMP)\"; export OBJDUMP; \\\n+\tfi; \\\n+\techo Configuring in tix; \\\n+\tcd tix || exit 1; \\\n+\tcase $(srcdir) in \\\n+\t  \\.) \\\n+\t    srcdiroption=\"--srcdir=.\"; \\\n+\t    libsrcdir=\".\";; \\\n+\t  /* | [A-Za-z]:[\\\\/]*) \\\n+\t    srcdiroption=\"--srcdir=$(srcdir)/tix\"; \\\n+\t    libsrcdir=\"$$s/tix\";; \\\n+\t  *) \\\n+\t    srcdiroption=\"--srcdir=../$(srcdir)/tix\"; \\\n+\t    libsrcdir=\"$$s/tix\";; \\\n+\tesac; \\\n+\t$(SHELL) $${libsrcdir}/configure \\\n+\t  $(HOST_CONFIGARGS) $${srcdiroption} \\\n+\t  || exit 1\n+\n+.PHONY: all-tix maybe-all-tix\n+maybe-all-tix:\n+all-tix: configure-tix\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\t(cd tix && $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) all)\n+\n+\n+.PHONY: check-tix\n+check-tix:\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\t(cd tix && $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) check)\n+\n+\n+\n+.PHONY: install-tix maybe-install-tix\n+maybe-install-tix:\n+install-tix: installdirs\n+\t@r=`${PWD}`; export r; \\\n+\ts=`cd $(srcdir); ${PWD}`; export s; \\\n+\t$(SET_LIB_PATH) \\\n+\t(cd tix && $(MAKE) $(FLAGS_TO_PASS) $(X11_FLAGS_TO_PASS) install)\n+\n+\n .PHONY: configure-libtermcap maybe-configure-libtermcap\n maybe-configure-libtermcap:\n configure-libtermcap:"}]}