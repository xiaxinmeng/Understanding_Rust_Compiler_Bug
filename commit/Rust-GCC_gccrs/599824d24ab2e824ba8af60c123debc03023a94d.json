{"sha": "599824d24ab2e824ba8af60c123debc03023a94d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk5ODI0ZDI0YWIyZTgyNGJhOGFmNjBjMTIzZGViYzAzMDIzYTk0ZA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2008-01-17T16:18:59Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2008-01-17T16:18:59Z"}, "message": "global.c (find_reg): Mark the eh regs as used if necessary.\n\n2008-01-17  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* global.c (find_reg): Mark the eh regs as used if necessary.\n\t* ra-conflict.c (global_conflicts): Set no_eh_reg flag.\n\t* ra.h (struct allocno): no_eh_reg field added.  Changed\n\tno_stack_reg type to bitfield.\n\nFrom-SVN: r131601", "tree": {"sha": "5121992dd80b8b1bb8673bf19c1c5051d0828766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5121992dd80b8b1bb8673bf19c1c5051d0828766"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/599824d24ab2e824ba8af60c123debc03023a94d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599824d24ab2e824ba8af60c123debc03023a94d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/599824d24ab2e824ba8af60c123debc03023a94d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/599824d24ab2e824ba8af60c123debc03023a94d/comments", "author": null, "committer": null, "parents": [{"sha": "9328dd5725be9ddbca3350bf0586b30c3b920a6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9328dd5725be9ddbca3350bf0586b30c3b920a6d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9328dd5725be9ddbca3350bf0586b30c3b920a6d"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "c337e95a9c5aa610f97e14c8b06db1c4007c3e39", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599824d24ab2e824ba8af60c123debc03023a94d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599824d24ab2e824ba8af60c123debc03023a94d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=599824d24ab2e824ba8af60c123debc03023a94d", "patch": "@@ -1,3 +1,10 @@\n+2008-01-17  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* global.c (find_reg): Mark the eh regs as used if necessary.\n+\t* ra-conflict.c (global_conflicts): Set no_eh_reg flag.\n+\t* ra.h (struct allocno): no_eh_reg field added.  Changed\n+\tno_stack_reg type to bitfield.\n+\n 2008-01-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree.c (substitute_in_expr): Add missing 'break'."}, {"sha": "c805f572c7fe49d503f96517f2a9c3ef5d5f1e6f", "filename": "gcc/global.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599824d24ab2e824ba8af60c123debc03023a94d/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599824d24ab2e824ba8af60c123debc03023a94d/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=599824d24ab2e824ba8af60c123debc03023a94d", "patch": "@@ -1011,6 +1011,16 @@ find_reg (int num, HARD_REG_SET losers, int alt_regs_p, int accept_call_clobbere\n     IOR_HARD_REG_SET (used1, losers);\n \n   IOR_COMPL_HARD_REG_SET (used1, reg_class_contents[(int) class]);\n+\n+#ifdef EH_RETURN_DATA_REGNO\n+  if (allocno[num].no_eh_reg)\n+    {\n+      unsigned int j;\n+      for (j = 0; EH_RETURN_DATA_REGNO (j) != INVALID_REGNUM; j++)\n+\tSET_HARD_REG_BIT (used1, EH_RETURN_DATA_REGNO (j));\n+    }\n+#endif\n+\n   COPY_HARD_REG_SET (used2, used1);\n \n   IOR_HARD_REG_SET (used1, allocno[num].hard_reg_conflicts);"}, {"sha": "ce1dfdfcfb7782f24d394c29fc8decf8afbce97e", "filename": "gcc/ra-conflict.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599824d24ab2e824ba8af60c123debc03023a94d/gcc%2Fra-conflict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599824d24ab2e824ba8af60c123debc03023a94d/gcc%2Fra-conflict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fra-conflict.c?ref=599824d24ab2e824ba8af60c123debc03023a94d", "patch": "@@ -1184,6 +1184,11 @@ global_conflicts (void)\n \t\tbreak;\n \t      record_one_conflict (allocnos_live, &hard_regs_live, regno);\n \t    }\n+\n+\t  EXECUTE_IF_SET_IN_SPARSESET (allocnos_live, i)\n+\t    {\n+\t      allocno[i].no_eh_reg = 1;\n+\t    }\n \t}\n #endif\n "}, {"sha": "c7e12a7b0c5f0d72877c1d3272ca1e10308afcd8", "filename": "gcc/ra.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/599824d24ab2e824ba8af60c123debc03023a94d/gcc%2Fra.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/599824d24ab2e824ba8af60c123debc03023a94d/gcc%2Fra.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fra.h?ref=599824d24ab2e824ba8af60c123debc03023a94d", "patch": "@@ -75,9 +75,14 @@ struct allocno\n \n   HARD_REG_SET regs_someone_prefers;\n \n+#ifdef EH_RETURN_DATA_REGNO\n+  /* Set to true if allocno can't be allocated in an eh register.  */\n+  unsigned int no_eh_reg:1;\n+#endif\n+\n #ifdef STACK_REGS\n   /* Set to true if allocno can't be allocated in the stack register.  */\n-  bool no_stack_reg;\n+  unsigned int no_stack_reg:1;\n #endif\n };\n extern struct allocno *allocno;"}]}