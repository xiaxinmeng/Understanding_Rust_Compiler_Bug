{"sha": "e0bf6b33d8c20f0ecfa9e9e5040538170893a172", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBiZjZiMzNkOGMyMGYwZWNmYTllOWU1MDQwNTM4MTcwODkzYTE3Mg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-11-21T19:06:09Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-11-21T19:06:09Z"}, "message": "(yylex): Do warn about floating point out of range if target floating-point format is IEEE.\n\n(yylex): Do warn about floating point out of range if\ntarget floating-point format is IEEE.  Use warning instead of\npedwarn to avoid getting errors.\n\nFrom-SVN: r8538", "tree": {"sha": "14044b9c10df067297eda8e957f1ce5278e1159b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14044b9c10df067297eda8e957f1ce5278e1159b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0bf6b33d8c20f0ecfa9e9e5040538170893a172", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0bf6b33d8c20f0ecfa9e9e5040538170893a172", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0bf6b33d8c20f0ecfa9e9e5040538170893a172", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0bf6b33d8c20f0ecfa9e9e5040538170893a172/comments", "author": null, "committer": null, "parents": [{"sha": "9d99bd1b8d93f94e81bf5f259577f53bf2c268c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d99bd1b8d93f94e81bf5f259577f53bf2c268c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d99bd1b8d93f94e81bf5f259577f53bf2c268c3"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "e4d8bf913c619ec266625ef4ef6d7ace5b38b99b", "filename": "gcc/c-lex.c", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0bf6b33d8c20f0ecfa9e9e5040538170893a172/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0bf6b33d8c20f0ecfa9e9e5040538170893a172/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=e0bf6b33d8c20f0ecfa9e9e5040538170893a172", "patch": "@@ -1360,24 +1360,24 @@ yylex ()\n \n \t\t    type = float_type_node;\n \t\t    value = REAL_VALUE_ATOF (copy, TYPE_MODE (type));\n-\t\t    if (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n-\t\t\t&& REAL_VALUE_ISINF (value) && pedantic)\n-\t\t      pedwarn (\"floating point number exceeds range of `float'\");\n+\t\t    /* A diagnostic is required here by some ANSI C testsuites.\n+\t\t       This is not pedwarn, become some people don't want\n+\t\t       an error for this.  */\n+\t\t    if (REAL_VALUE_ISINF (value) && pedantic)\n+\t\t      warning (\"floating point number exceeds range of `float'\");\n \t\t  }\n \t\telse if (lflag)\n \t\t  {\n \t\t    type = long_double_type_node;\n \t\t    value = REAL_VALUE_ATOF (copy, TYPE_MODE (type));\n-\t\t    if (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n-\t\t\t&& REAL_VALUE_ISINF (value) && pedantic)\n-\t\t      pedwarn (\"floating point number exceeds range of `long double'\");\n+\t\t    if (REAL_VALUE_ISINF (value) && pedantic)\n+\t\t      warning (\"floating point number exceeds range of `long double'\");\n \t\t  }\n \t\telse\n \t\t  {\n \t\t    value = REAL_VALUE_ATOF (copy, TYPE_MODE (type));\n-\t\t    if (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n-\t\t\t&& REAL_VALUE_ISINF (value) && pedantic)\n-\t\t      pedwarn (\"floating point number exceeds range of `double'\");\n+\t\t    if (REAL_VALUE_ISINF (value) && pedantic)\n+\t\t      warning (\"floating point number exceeds range of `double'\");\n \t\t  }\n \n \t\tset_float_handler (NULL_PTR);\n@@ -1387,11 +1387,10 @@ yylex ()\n \t      {\n   \t\t/* ERANGE is also reported for underflow,\n   \t\t   so test the value to distinguish overflow from that.  */\n-\t\tif (TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n-\t\t    && (REAL_VALUES_LESS (dconst1, value)\n-\t\t\t|| REAL_VALUES_LESS (value, dconstm1)))\n+\t\tif (REAL_VALUES_LESS (dconst1, value)\n+\t\t    || REAL_VALUES_LESS (value, dconstm1))\n \t\t  {\n-\t\t    pedwarn (\"floating point number exceeds range of `double'\");\n+\t\t    warning (\"floating point number exceeds range of `double'\");\n \t\t    exceeds_double = 1;\n \t\t  }\n \t      }"}]}