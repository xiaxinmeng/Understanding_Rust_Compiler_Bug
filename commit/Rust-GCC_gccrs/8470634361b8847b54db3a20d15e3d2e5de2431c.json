{"sha": "8470634361b8847b54db3a20d15e3d2e5de2431c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQ3MDYzNDM2MWI4ODQ3YjU0ZGIzYTIwZDE1ZTNkMmU1ZGUyNDMxYw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2004-10-06T16:31:19Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2004-10-06T16:31:19Z"}, "message": "re PR libstdc++/17780 (std::allocator vs. static init)\n\n\n2004-10-06  Benjamin Kosnik  <bkoz@redhat.com>\n\t    Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/17780\n\t* src/mt_allocator.cc (__pool<true>::_M_reserve_block): Revert\n\tto old locking order.\n\nCo-Authored-By: Paolo Carlini <pcarlini@suse.de>\n\nFrom-SVN: r88611", "tree": {"sha": "c9ecff4c550fca02d9673950e0c6ef37f49058ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9ecff4c550fca02d9673950e0c6ef37f49058ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8470634361b8847b54db3a20d15e3d2e5de2431c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8470634361b8847b54db3a20d15e3d2e5de2431c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8470634361b8847b54db3a20d15e3d2e5de2431c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8470634361b8847b54db3a20d15e3d2e5de2431c/comments", "author": null, "committer": null, "parents": [{"sha": "3b0cff13e448725520ea39925b69954365644567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b0cff13e448725520ea39925b69954365644567", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b0cff13e448725520ea39925b69954365644567"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "c87cda9c385241bad0d7cbd78994cea0946c5d1d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8470634361b8847b54db3a20d15e3d2e5de2431c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8470634361b8847b54db3a20d15e3d2e5de2431c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8470634361b8847b54db3a20d15e3d2e5de2431c", "patch": "@@ -1,3 +1,10 @@\n+2004-10-06  Benjamin Kosnik  <bkoz@redhat.com>\n+\t    Paolo Carlini  <pcarlini@suse.de>\n+\n+\tPR libstdc++/17780\n+\t* src/mt_allocator.cc (__pool<true>::_M_reserve_block): Revert\n+\tto old locking order.\n+\n 2004-10-06  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/std/std_sstream.h (_M_sync): When the caller is"}, {"sha": "1e45f4cfb1b7d5237dc47b10248935ba36fd87a1", "filename": "libstdc++-v3/src/mt_allocator.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8470634361b8847b54db3a20d15e3d2e5de2431c/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8470634361b8847b54db3a20d15e3d2e5de2431c/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fmt_allocator.cc?ref=8470634361b8847b54db3a20d15e3d2e5de2431c", "patch": "@@ -298,10 +298,13 @@ namespace __gnu_cxx\n     _Block_record* __block = NULL;\n     if (__gthread_active_p())\n       {\n+\t__gthread_mutex_lock(__bin._M_mutex);\n \tif (__bin._M_first[0] == NULL)\n \t  {\n \t    // No need to hold the lock when we are adding a whole\n \t    // chunk to our own list.\n+\t    __gthread_mutex_unlock(__bin._M_mutex);\n+\n \t    void* __v = ::operator new(__options._M_chunk_size);\n \t    __bin._M_first[__thread_id] = static_cast<_Block_record*>(__v);\n \t    __bin._M_free[__thread_id] = __block_count;\n@@ -327,7 +330,6 @@ namespace __gnu_cxx\n \t    // Is the number of required blocks greater than or equal\n \t    // to the number that can be provided by the global free\n \t    // list?\n-\t    __gthread_mutex_lock(__bin._M_mutex);\n \t    __bin._M_first[__thread_id] = __bin._M_first[0];\n \t    if (__block_count >= __bin._M_free[0])\n \t      {"}]}