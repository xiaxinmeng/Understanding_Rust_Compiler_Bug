{"sha": "5d9607f0ee036ab65e84016fc770f419e4355a61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ5NjA3ZjBlZTAzNmFiNjVlODQwMTZmYzc3MGY0MTllNDM1NWE2MQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2014-08-14T17:11:26Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-08-14T17:11:26Z"}, "message": "re PR c++/62101 (deleted definitions of friend functions are rejected)\n\n\tPR c++/62101\n\t* decl.c (grokdeclarator): Move the check for friend initializers..\n\t* decl2.c (grokfield) ..here. Postpone early return for friends\n\tuntil after the initializer check.\n\nFrom-SVN: r213974", "tree": {"sha": "17e7c0c5e67697891aacab0d2bf544225acf4854", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17e7c0c5e67697891aacab0d2bf544225acf4854"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d9607f0ee036ab65e84016fc770f419e4355a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d9607f0ee036ab65e84016fc770f419e4355a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d9607f0ee036ab65e84016fc770f419e4355a61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d9607f0ee036ab65e84016fc770f419e4355a61/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a62dbaa42ff655c35be270f91fb5f6323ff53b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a62dbaa42ff655c35be270f91fb5f6323ff53b35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a62dbaa42ff655c35be270f91fb5f6323ff53b35"}], "stats": {"total": 66, "additions": 54, "deletions": 12}, "files": [{"sha": "a256953912452a51e7ae9ab16ee6c0d950d1b83d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9607f0ee036ab65e84016fc770f419e4355a61/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9607f0ee036ab65e84016fc770f419e4355a61/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5d9607f0ee036ab65e84016fc770f419e4355a61", "patch": "@@ -1,3 +1,10 @@\n+2014-08-14  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR c++/62101\n+\t* decl.c (grokdeclarator): Move the check for friend initializers..\n+\t* decl2.c (grokfield) ..here. Postpone early return for friends\n+\tuntil after the initializer check.\n+\n 2014-08-14  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/54377"}, {"sha": "92a6dbc96c7b591183ddc53d288d1987bf5b9b42", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9607f0ee036ab65e84016fc770f419e4355a61/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9607f0ee036ab65e84016fc770f419e4355a61/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=5d9607f0ee036ab65e84016fc770f419e4355a61", "patch": "@@ -9765,8 +9765,6 @@ grokdeclarator (const cp_declarator *declarator,\n \t      }\n \t    else if (friendp)\n \t      {\n-\t\tif (initialized)\n-\t\t  error (\"can%'t initialize friend function %qs\", name);\n \t\tif (virtualp)\n \t\t  {\n \t\t    /* Cannot be both friend and virtual.  */"}, {"sha": "de28cb712c3aa968b363834ee2ddec1c26b747db", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9607f0ee036ab65e84016fc770f419e4355a61/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9607f0ee036ab65e84016fc770f419e4355a61/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=5d9607f0ee036ab65e84016fc770f419e4355a61", "patch": "@@ -870,11 +870,6 @@ grokfield (const cp_declarator *declarator,\n   if (value == void_type_node)\n     return value;\n \n-  /* Pass friend decls back.  */\n-  if ((TREE_CODE (value) == FUNCTION_DECL\n-       || TREE_CODE (value) == TEMPLATE_DECL)\n-      && DECL_CONTEXT (value) != current_class_type)\n-    return value;\n \n   name = DECL_NAME (value);\n \n@@ -926,7 +921,9 @@ grokfield (const cp_declarator *declarator,\n       return value;\n     }\n \n-  if (DECL_IN_AGGR_P (value))\n+  int friendp = decl_spec_seq_has_spec_p (declspecs, ds_friend);\n+\n+  if (!friendp && DECL_IN_AGGR_P (value))\n     {\n       error (\"%qD is already defined in %qT\", value, DECL_CONTEXT (value));\n       return void_type_node;\n@@ -939,8 +936,6 @@ grokfield (const cp_declarator *declarator,\n     {\n       if (TREE_CODE (value) == FUNCTION_DECL)\n \t{\n-\t  /* Initializers for functions are rejected early in the parser.\n-\t     If we get here, it must be a pure specifier for a method.  */\n \t  if (init == ridpointers[(int)RID_DELETE])\n \t    {\n \t      DECL_DELETED_FN (value) = 1;\n@@ -971,8 +966,12 @@ grokfield (const cp_declarator *declarator,\n \t  else\n \t    {\n \t      gcc_assert (TREE_CODE (TREE_TYPE (value)) == FUNCTION_TYPE);\n-\t      error (\"initializer specified for static member function %qD\",\n-\t\t     value);\n+\t      if (friendp)\n+\t\terror (\"initializer specified for friend function %qD\",\n+\t\t       value);\n+\t      else\n+\t\terror (\"initializer specified for static member function %qD\",\n+\t\t       value);\n \t    }\n \t}\n       else if (TREE_CODE (value) == FIELD_DECL)\n@@ -981,6 +980,12 @@ grokfield (const cp_declarator *declarator,\n \tgcc_unreachable ();\n     }\n \n+  /* Pass friend decls back.  */\n+  if ((TREE_CODE (value) == FUNCTION_DECL\n+       || TREE_CODE (value) == TEMPLATE_DECL)\n+      && DECL_CONTEXT (value) != current_class_type)\n+    return value;\n+\n   if (processing_template_decl && VAR_OR_FUNCTION_DECL_P (value))\n     {\n       value = push_template_decl (value);"}, {"sha": "2c05dd5b1a808452adb4bf2dcbe78a1e2ba078ed", "filename": "gcc/testsuite/g++.dg/cpp0x/pr62101.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d9607f0ee036ab65e84016fc770f419e4355a61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr62101.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d9607f0ee036ab65e84016fc770f419e4355a61/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr62101.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr62101.C?ref=5d9607f0ee036ab65e84016fc770f419e4355a61", "patch": "@@ -0,0 +1,32 @@\n+// PR c++/62101\n+// { dg-do compile { target c++11 } }\n+\n+struct X\n+{\n+  friend void g(X, int) = 0; // { dg-error \"initializer specified for friend function\" }\n+  friend void g(X, int) = default; // { dg-error \"cannot be defaulted\" }\n+  // { dg-prune-output \"note\" }\n+  friend void f(X, int) = delete;\n+  friend void f(X, double) {}\n+};\n+\n+struct Y;\n+void g(Y, int);\n+void g(Y, double);\n+\n+struct Y\n+{\n+  // { dg-prune-output \"note\" }\n+  friend void g(Y, int) = delete;\n+  friend void g(Y, double) {}\n+};\n+\n+int main()\n+{\n+  X x;\n+  f(x, 5.0);\n+  f(x, 5); // { dg-error \"use of deleted function\" }\n+  Y y;\n+  g(y, 5.0);\n+  g(y, 5); // { dg-error \"use of deleted function\" }\n+}"}]}