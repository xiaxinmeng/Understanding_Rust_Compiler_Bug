{"sha": "cc788fcc70a93b25b78cb72f31da3a2159930824", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M3ODhmY2M3MGE5M2IyNWI3OGNiNzJmMzFkYTNhMjE1OTkzMDgyNA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-03-08T13:30:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-03-08T13:30:27Z"}, "message": "re PR tree-optimization/43269 (removing non dead store)\n\n2010-03-08  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/43269\n\t* tree-ssa-dse.c (dse_possible_dead_store_p): Fix post-dom\n\tregion detection.\n\n\t* gcc.c-torture/execute/pr43269.c: New testcase.\n\nFrom-SVN: r157276", "tree": {"sha": "745b8751179efb6d63f3bad5ec9494c67ab1997d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/745b8751179efb6d63f3bad5ec9494c67ab1997d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc788fcc70a93b25b78cb72f31da3a2159930824", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc788fcc70a93b25b78cb72f31da3a2159930824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc788fcc70a93b25b78cb72f31da3a2159930824", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc788fcc70a93b25b78cb72f31da3a2159930824/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "69c103c7139e87cc2e7a2ff7ab1ce3c4faa227bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69c103c7139e87cc2e7a2ff7ab1ce3c4faa227bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69c103c7139e87cc2e7a2ff7ab1ce3c4faa227bc"}], "stats": {"total": 69, "additions": 58, "deletions": 11}, "files": [{"sha": "b84da2f86dc83e2dfd98fb674a3010695c8058dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc788fcc70a93b25b78cb72f31da3a2159930824/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc788fcc70a93b25b78cb72f31da3a2159930824/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc788fcc70a93b25b78cb72f31da3a2159930824", "patch": "@@ -1,3 +1,9 @@\n+2010-03-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43269\n+\t* tree-ssa-dse.c (dse_possible_dead_store_p): Fix post-dom\n+\tregion detection.\n+\n 2010-03-08  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.h (struct ipa_param_descriptor): Removed the called field."}, {"sha": "197d695a84e245824dd2bdf6271157e93758b9f1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc788fcc70a93b25b78cb72f31da3a2159930824/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc788fcc70a93b25b78cb72f31da3a2159930824/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cc788fcc70a93b25b78cb72f31da3a2159930824", "patch": "@@ -1,3 +1,8 @@\n+2010-03-08  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/43269\n+\t* gcc.c-torture/execute/pr43269.c: New testcase.\n+\n 2010-03-08  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/43256"}, {"sha": "9f599a2dd5d4cc85d94f298f6d7c8a0e308478ab", "filename": "gcc/testsuite/gcc.c-torture/execute/pr43269.c", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc788fcc70a93b25b78cb72f31da3a2159930824/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43269.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc788fcc70a93b25b78cb72f31da3a2159930824/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43269.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr43269.c?ref=cc788fcc70a93b25b78cb72f31da3a2159930824", "patch": "@@ -0,0 +1,31 @@\n+int g_21;\n+int g_211;\n+int g_261;\n+\n+static void __attribute__((noinline,noclone))\n+func_32 (int b)\n+{\n+  if (b) {\n+lbl_370:\n+      g_21 = 1;\n+  }\n+\n+  for (g_261 = -1; g_261 > -2; g_261--) {\n+      if (g_211 + 1) {\n+\t  return;\n+      } else {\n+\t  g_21 = 1;\n+\t  goto lbl_370;\n+      }\n+  }\n+}\n+\n+extern void abort (void);\n+\n+int main(void)\n+{\n+  func_32(0);\n+  if (g_261 != -1)\n+    abort ();\n+  return 0;\n+}"}, {"sha": "b678a8f829f8ffc4bc9c8c6830ae5f4937e3c9da", "filename": "gcc/tree-ssa-dse.c", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc788fcc70a93b25b78cb72f31da3a2159930824/gcc%2Ftree-ssa-dse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc788fcc70a93b25b78cb72f31da3a2159930824/gcc%2Ftree-ssa-dse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dse.c?ref=cc788fcc70a93b25b78cb72f31da3a2159930824", "patch": "@@ -161,7 +161,7 @@ dse_possible_dead_store_p (gimple stmt, gimple *use_stmt)\n   temp = stmt;\n   do\n     {\n-      gimple prev, use_stmt;\n+      gimple use_stmt;\n       imm_use_iterator ui;\n       bool fail = false;\n       tree defvar;\n@@ -175,28 +175,33 @@ dse_possible_dead_store_p (gimple stmt, gimple *use_stmt)\n \tdefvar = PHI_RESULT (temp);\n       else\n \tdefvar = gimple_vdef (temp);\n-      prev = temp;\n       temp = NULL;\n       FOR_EACH_IMM_USE_STMT (use_stmt, ui, defvar)\n \t{\n \t  cnt++;\n \n+\t  /* If we ever reach our DSE candidate stmt again fail.  We\n+\t     cannot handle dead stores in loops.  */\n+\t  if (use_stmt == stmt)\n+\t    {\n+\t      fail = true;\n+\t      BREAK_FROM_IMM_USE_STMT (ui);\n+\t    }\n \t  /* In simple cases we can look through PHI nodes, but we\n \t     have to be careful with loops and with memory references\n \t     containing operands that are also operands of PHI nodes.\n \t     See gcc.c-torture/execute/20051110-*.c.  */\n-\t  if (gimple_code (use_stmt) == GIMPLE_PHI)\n+\t  else if (gimple_code (use_stmt) == GIMPLE_PHI)\n \t    {\n \t      if (temp\n-\t\t  /* We can look through PHIs to post-dominated regions\n-\t\t     without worrying if the use not also dominates prev\n-\t\t     (in which case it would be a loop PHI with the use\n-\t\t     in a latch block).  */\n-\t\t  || gimple_bb (prev) == gimple_bb (use_stmt)\n-\t\t  || !dominated_by_p (CDI_POST_DOMINATORS,\n-\t\t\t\t      gimple_bb (prev), gimple_bb (use_stmt))\n+\t\t  /* Make sure we are not in a loop latch block.  */\n+\t\t  || gimple_bb (stmt) == gimple_bb (use_stmt)\n \t\t  || dominated_by_p (CDI_DOMINATORS,\n-\t\t\t\t     gimple_bb (prev), gimple_bb (use_stmt)))\n+\t\t\t\t     gimple_bb (stmt), gimple_bb (use_stmt))\n+\t\t  /* We can look through PHIs to regions post-dominating\n+\t\t     the DSE candidate stmt.  */\n+\t\t  || !dominated_by_p (CDI_POST_DOMINATORS,\n+\t\t\t\t      gimple_bb (stmt), gimple_bb (use_stmt)))\n \t\t{\n \t\t  fail = true;\n \t\t  BREAK_FROM_IMM_USE_STMT (ui);"}]}