{"sha": "395a40e0e28129430ca707dad8475fefad3d8782", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk1YTQwZTBlMjgxMjk0MzBjYTcwN2RhZDg0NzVmZWZhZDNkODc4Mg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-04-22T15:33:32Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-04-22T15:33:32Z"}, "message": "misc.c (gnat_expand_body): Don't call target for destructors, avoid redundant check on syntax errors.\n\n\n\t* ada/misc.c (gnat_expand_body): Don't call target for destructors,\n\tavoid redundant check on syntax errors.\n\n\t* final.c (rest_of_handle_final): Call\n\ttargetm.asm_out.constructor/targetm.asm_out.destructor\n\t* cgraphunit.c (cgraph_build_static_cdtor): Don't do it here; set\n\tproper priority via decl_*_priority_insert.\n\t* c-common.c (c_expand_body): Likewise.\n\nFrom-SVN: r124044", "tree": {"sha": "7a5b02a557aae27620a13c42bc29913de6d67d9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a5b02a557aae27620a13c42bc29913de6d67d9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/395a40e0e28129430ca707dad8475fefad3d8782", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395a40e0e28129430ca707dad8475fefad3d8782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/395a40e0e28129430ca707dad8475fefad3d8782", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/395a40e0e28129430ca707dad8475fefad3d8782/comments", "author": null, "committer": null, "parents": [{"sha": "b7716a8e90c72b98b9f92f20c1fa142e6573e05d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7716a8e90c72b98b9f92f20c1fa142e6573e05d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7716a8e90c72b98b9f92f20c1fa142e6573e05d"}], "stats": {"total": 61, "additions": 25, "deletions": 36}, "files": [{"sha": "b9c27f59d03aff6080617ec02029eaac4efc7185", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=395a40e0e28129430ca707dad8475fefad3d8782", "patch": "@@ -1,3 +1,11 @@\n+2007-04-22  Jan Hubicka  <jh@suse.cz>\n+\n+\t* final.c (rest_of_handle_final): Call\n+\ttargetm.asm_out.constructor/targetm.asm_out.destructor\n+\t* cgraphunit.c (cgraph_build_static_cdtor): Don't do it here; set\n+\tproper priority via decl_*_priority_insert.\n+\t* c-common.c (c_expand_body): Likewise.\n+\n 2007-04-22  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/29789"}, {"sha": "2ba34f3c74c2e43cb095fcc9114fa2af3bee50b6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=395a40e0e28129430ca707dad8475fefad3d8782", "patch": "@@ -1,3 +1,8 @@\n+2007-04-21  Jan Hubicka  <jh@suse.cz>\n+\n+\t* misc.c (gnat_expand_body): Don't call target for destructors,\n+\tavoid redundant check on syntax errors.\n+\n 2007-04-21  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \t* ada-tree.h (lang_tree_node): Use GENERIC_NEXT"}, {"sha": "7d4ffdec509f85040f5451989f7fb18f126a54a9", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=395a40e0e28129430ca707dad8475fefad3d8782", "patch": "@@ -676,18 +676,7 @@ gnat_expand_expr (tree exp, rtx target, enum machine_mode tmode,\n static void\n gnat_expand_body (tree gnu_decl)\n {\n-  if (!DECL_INITIAL (gnu_decl) || DECL_INITIAL (gnu_decl) == error_mark_node)\n-    return;\n-\n   tree_rest_of_compilation (gnu_decl);\n-\n-  if (DECL_STATIC_CONSTRUCTOR (gnu_decl) && targetm.have_ctors_dtors)\n-    targetm.asm_out.constructor (XEXP (DECL_RTL (gnu_decl), 0),\n-                                 DEFAULT_INIT_PRIORITY);\n-\n-  if (DECL_STATIC_DESTRUCTOR (gnu_decl) && targetm.have_ctors_dtors)\n-    targetm.asm_out.destructor (XEXP (DECL_RTL (gnu_decl), 0),\n-                                DEFAULT_INIT_PRIORITY);\n }\n \n /* Adjusts the RLI used to layout a record after all the fields have been"}, {"sha": "cedaa4277646ff555a206fbacdb287d43918bdf9", "filename": "gcc/c-common.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=395a40e0e28129430ca707dad8475fefad3d8782", "patch": "@@ -4295,21 +4295,7 @@ c_expand_expr (tree exp, rtx target, enum machine_mode tmode,\n void\n c_expand_body (tree fndecl)\n {\n-\n-  if (!DECL_INITIAL (fndecl)\n-      || DECL_INITIAL (fndecl) == error_mark_node)\n-    return;\n-\n   tree_rest_of_compilation (fndecl);\n-\n-  if (DECL_STATIC_CONSTRUCTOR (fndecl)\n-      && targetm.have_ctors_dtors)\n-    targetm.asm_out.constructor (XEXP (DECL_RTL (fndecl), 0),\n-\t\t\t\t decl_init_priority_lookup (fndecl));\n-  if (DECL_STATIC_DESTRUCTOR (fndecl)\n-      && targetm.have_ctors_dtors)\n-    targetm.asm_out.destructor (XEXP (DECL_RTL (fndecl), 0),\n-\t\t\t\tdecl_fini_priority_lookup (fndecl));\n }\n \n /* Hook used by staticp to handle language-specific tree codes.  */"}, {"sha": "13079a2b80314a4d11a1c35474083296544c8a2b", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=395a40e0e28129430ca707dad8475fefad3d8782", "patch": "@@ -1366,9 +1366,11 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n     {\n     case 'I':\n       DECL_STATIC_CONSTRUCTOR (decl) = 1;\n+      decl_init_priority_insert (decl, priority);\n       break;\n     case 'D':\n       DECL_STATIC_DESTRUCTOR (decl) = 1;\n+      decl_fini_priority_insert (decl, priority);\n       break;\n     default:\n       gcc_unreachable ();\n@@ -1378,17 +1380,6 @@ cgraph_build_static_cdtor (char which, tree body, int priority)\n \n   cgraph_add_new_function (decl, false);\n   cgraph_mark_needed_node (cgraph_node (decl));\n-\n-  if (targetm.have_ctors_dtors)\n-    {\n-      void (*fn) (rtx, int);\n-\n-      if (which == 'I')\n-\tfn = targetm.asm_out.constructor;\n-      else\n-\tfn = targetm.asm_out.destructor;\n-      fn (XEXP (DECL_RTL (decl), 0), priority);\n-    }\n }\n \n void"}, {"sha": "ebc1efe45092463e35c55acacad9f58138ecf4b2", "filename": "gcc/final.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/395a40e0e28129430ca707dad8475fefad3d8782/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=395a40e0e28129430ca707dad8475fefad3d8782", "patch": "@@ -4043,6 +4043,16 @@ rest_of_handle_final (void)\n   timevar_push (TV_SYMOUT);\n   (*debug_hooks->function_decl) (current_function_decl);\n   timevar_pop (TV_SYMOUT);\n+  if (DECL_STATIC_CONSTRUCTOR (current_function_decl)\n+      && targetm.have_ctors_dtors)\n+    targetm.asm_out.constructor (XEXP (DECL_RTL (current_function_decl), 0),\n+\t\t\t\t decl_init_priority_lookup\n+\t\t\t\t   (current_function_decl));\n+  if (DECL_STATIC_DESTRUCTOR (current_function_decl)\n+      && targetm.have_ctors_dtors)\n+    targetm.asm_out.destructor (XEXP (DECL_RTL (current_function_decl), 0),\n+\t\t\t\tdecl_fini_priority_lookup\n+\t\t\t\t  (current_function_decl));\n   return 0;\n }\n "}]}