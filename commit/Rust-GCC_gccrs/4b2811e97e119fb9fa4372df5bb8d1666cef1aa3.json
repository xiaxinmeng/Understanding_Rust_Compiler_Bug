{"sha": "4b2811e97e119fb9fa4372df5bb8d1666cef1aa3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIyODExZTk3ZTExOWZiOWZhNDM3MmRmNWJiOGQxNjY2Y2VmMWFhMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-01-24T11:25:28Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-01-24T11:25:28Z"}, "message": "pt.c (tsubst_decl): Remove IN_DECL parameter.\n\ncp:\n\t* pt.c (tsubst_decl): Remove IN_DECL parameter.\n\t(tsubst_arg_types): Check parameter is not void.\n\t(tsubst): Adjust tsubst_decl call.\ntestsuite:\n\t* g++.old-deja/g++.pt/spec38.C: New test.\n\nFrom-SVN: r39234", "tree": {"sha": "5c4efe9aaab1509bfa25d2704d515023a9fa4df6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c4efe9aaab1509bfa25d2704d515023a9fa4df6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/comments", "author": null, "committer": null, "parents": [{"sha": "d8caf48e5c71fb94bcec93d0f5e7f15298e03317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8caf48e5c71fb94bcec93d0f5e7f15298e03317", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8caf48e5c71fb94bcec93d0f5e7f15298e03317"}], "stats": {"total": 48, "additions": 42, "deletions": 6}, "files": [{"sha": "69ac61d1032a214ab1cb1b2e5412cc42096f9d96", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4b2811e97e119fb9fa4372df5bb8d1666cef1aa3", "patch": "@@ -1,3 +1,9 @@\n+2001-01-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* pt.c (tsubst_decl): Remove IN_DECL parameter.\n+\t(tsubst_arg_types): Check parameter is not void.\n+\t(tsubst): Adjust tsubst_decl call.\n+\n 2001-01-24  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* call.c (add_builtin_candidate): Quote std properly, from"}, {"sha": "be5439c3c516bf7c677b368d3c45d5da669bda2c", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=4b2811e97e119fb9fa4372df5bb8d1666cef1aa3", "patch": "@@ -149,7 +149,7 @@ static tree most_specialized_class PARAMS ((tree, tree));\n static void set_mangled_name_for_template_decl PARAMS ((tree));\n static int template_class_depth_real PARAMS ((tree, int));\n static tree tsubst_aggr_type PARAMS ((tree, tree, int, tree, int));\n-static tree tsubst_decl PARAMS ((tree, tree, tree, tree));\n+static tree tsubst_decl PARAMS ((tree, tree, tree));\n static tree tsubst_arg_types PARAMS ((tree, tree, int, tree));\n static tree tsubst_function_type PARAMS ((tree, tree, int, tree));\n static void check_specialization_scope PARAMS ((void));\n@@ -5558,19 +5558,18 @@ tsubst_default_arguments (fn)\n \n /* Substitute the ARGS into the T, which is a _DECL.  TYPE is the\n    (already computed) substitution of ARGS into TREE_TYPE (T), if\n-   appropriate.  Return the result of the substitution.  IN_DECL is as\n-   for tsubst.  */\n+   appropriate.  Return the result of the substitution.  */\n \n static tree\n-tsubst_decl (t, args, type, in_decl)\n+tsubst_decl (t, args, type)\n      tree t;\n      tree args;\n      tree type;\n-     tree in_decl;\n {\n   int saved_lineno;\n   const char *saved_filename;\n   tree r = NULL_TREE;\n+  tree in_decl = t;\n \n   /* Set the filename and linenumber to improve error-reporting.  */\n   saved_lineno = lineno;\n@@ -6122,6 +6121,16 @@ tsubst_arg_types (arg_types, args, complain, in_decl)\n   type = tsubst (TREE_VALUE (arg_types), args, complain, in_decl);\n   if (type == error_mark_node)\n     return error_mark_node;\n+  if (VOID_TYPE_P (type))\n+    {\n+      if (complain)\n+        {\n+          cp_error (\"invalid parameter type `%T'\", type);\n+          if (in_decl)\n+            cp_error_at (\"in declaration `%D'\", in_decl);\n+        }\n+      return error_mark_node;\n+    }\n \n   /* Do array-to-pointer, function-to-pointer conversion, and ignore\n      top-level qualifiers as required.  */\n@@ -6293,7 +6302,7 @@ tsubst (t, args, complain, in_decl)\n     return error_mark_node;\n \n   if (DECL_P (t))\n-    return tsubst_decl (t, args, type, in_decl);\n+    return tsubst_decl (t, args, type);\n \n   switch (TREE_CODE (t))\n     {"}, {"sha": "197e6cab89d6e2ad2688f220a0804d0eada29e3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b2811e97e119fb9fa4372df5bb8d1666cef1aa3", "patch": "@@ -1,3 +1,7 @@\n+2001-01-24  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.pt/spec38.C: New test.\n+\n 2001-01-23  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n \n \t* g++.old-deja/g++.pt/spec33.C: Change from \"Build don't link\" to"}, {"sha": "a33be54dd136172b4cc4f15e2e8d6fc11185df10", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec38.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b2811e97e119fb9fa4372df5bb8d1666cef1aa3/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec38.C?ref=4b2811e97e119fb9fa4372df5bb8d1666cef1aa3", "patch": "@@ -0,0 +1,17 @@\n+// Build don't link:\n+// \n+// Copyright (C) 2000 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 19 Jan 2001 <nathan@codesourcery.com>\n+\n+// Bug 1638. We failed to check if a function instantiation produced a void\n+// parameter type.\n+\n+template <class T> struct S\n+{\n+  int f (T);    // ERROR - void type\n+};\n+\n+void foo ()\n+{\n+  S<void> s;\n+}"}]}