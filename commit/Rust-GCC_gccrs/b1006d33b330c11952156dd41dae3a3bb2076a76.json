{"sha": "b1006d33b330c11952156dd41dae3a3bb2076a76", "node_id": "C_kwDOANBUbNoAKGIxMDA2ZDMzYjMzMGMxMTk1MjE1NmRkNDFkYWUzYTNiYjIwNzZhNzY", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-09-28T17:32:00Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-10-06T09:22:48Z"}, "message": "ada: Incorrect inferences drawn from if/elsif/while conditions with -gnatVo\n\nWithin the first (respectively, second) statement list of this if statement\n  declare\n     X : constant Integer := ... ;\n  begin\n     if X > 0 then\n       ...;\n     else\n       ...;\n     end if;\n  end;\nwe can safely assume that X is greater (respectively, not greater) than 0.\n\nFix a bug that incorrectly computed the region in which such assumptions\ncan be made to include the condition of the if-statement. This bug usually\nhad no effect because semantic analysis/simplification of the condition was\nalready complete before the code containing the bug was executed.\nUnfortunately, this is not true in some cases involving -gnatVo validity\nchecking. In these cases, the bug could result in incorrect simplification\nof the condition at compile time. This, in turn, could lead to incorrect\nunconditional execution of one arm of the if-statement at run time. Similar\nerrors appear to be possible for the conditions of an elsif or a while loop;\nthe fix addresses these cases as well, although corresponding problems with\nthese constructs have not been demonstrated.\n\ngcc/ada/\n\n\t* exp_util.adb\n\t(Get_Current_Value_Condition): Treat references occurring within\n\tthe condition of an if statement, an elsif, or a while loop in the\n\tsame way as references that occur before the start of that\n\tenclosing construct.", "tree": {"sha": "41ed964681264d0807a54663fb2b5ed276f012b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/41ed964681264d0807a54663fb2b5ed276f012b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1006d33b330c11952156dd41dae3a3bb2076a76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1006d33b330c11952156dd41dae3a3bb2076a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1006d33b330c11952156dd41dae3a3bb2076a76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1006d33b330c11952156dd41dae3a3bb2076a76/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f775d362aa73353ce07a51c259ca0a3e1f41ba3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f775d362aa73353ce07a51c259ca0a3e1f41ba3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f775d362aa73353ce07a51c259ca0a3e1f41ba3b"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "f569d2ef583c17a4b22bf4da97d355efa3458349", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1006d33b330c11952156dd41dae3a3bb2076a76/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1006d33b330c11952156dd41dae3a3bb2076a76/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=b1006d33b330c11952156dd41dae3a3bb2076a76", "patch": "@@ -6923,6 +6923,11 @@ package body Exp_Util is\n             if Loc < Sloc (CV) then\n                return;\n \n+            --  In condition of IF statement\n+\n+            elsif In_Subtree (N => Var, Root => Condition (CV)) then\n+               return;\n+\n             --  After end of IF statement\n \n             elsif Loc >= Sloc (CV) + Text_Ptr (UI_To_Int (End_Span (CV))) then\n@@ -7009,7 +7014,12 @@ package body Exp_Util is\n             if Loc < Sloc (CV) then\n                return;\n \n-               --  After end of IF statement\n+            --  In condition of ELSIF part\n+\n+            elsif In_Subtree (N => Var, Root => Condition (CV)) then\n+               return;\n+\n+            --  After end of IF statement\n \n             elsif Loc >= Sloc (Stm) +\n               Text_Ptr (UI_To_Int (End_Span (Stm)))\n@@ -7066,6 +7076,11 @@ package body Exp_Util is\n                if Loc < Sloc (Loop_Stmt) then\n                   return;\n \n+               --  In condition of while loop\n+\n+               elsif In_Subtree (N => Var, Root => Condition (CV)) then\n+                  return;\n+\n                --  After end of LOOP statement\n \n                elsif Loc >= Sloc (End_Label (Loop_Stmt)) then"}]}