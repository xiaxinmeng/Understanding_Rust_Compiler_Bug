{"sha": "90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTAxMzdkOGYyYzVkZmIzY2I1ODllNGIzNDk3YzYzZDdmODEwNzY3ZQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2012-04-30T07:42:42Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2012-04-30T07:42:42Z"}, "message": "invoke.texi (Wmissing-format-attribute): Document as an alias of Wsuggest-attribute=format.\n\n2012-04-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\ngcc/\n\t* doc/invoke.texi (Wmissing-format-attribute): Document as an\n\talias of Wsuggest-attribute=format.\nc-family/\n\t* c.opt (Wsuggest-attribute=format): New. Alias of\n\tWmissing-format-attribute.\n\t* c-format.c (decode_format_type): Replace\n\tWmissing-format-attribute with Wsuggest-attribute=format.\n\t(check_function_format): Likewise.\ncp/\n\t* typeck.c (convert_for_assignment):  Replace\n\tWmissing-format-attribute with Wsuggest-attribute=format.\n\t* call.c (convert_for_arg_passing): Likewise.\ngcc/\n\t* c-typeck.c (convert_for_assignment): Replace\n\tWmissing-format-attribute with Wsuggest-attribute=format.\n\t(digest_init): Likewise.\n\nFrom-SVN: r186955", "tree": {"sha": "55d22edbede61210b504cf91cd34457c7a8e828e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55d22edbede61210b504cf91cd34457c7a8e828e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/comments", "author": null, "committer": null, "parents": [{"sha": "70c33a85a6625cf71e51323f45853694bcdc59f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70c33a85a6625cf71e51323f45853694bcdc59f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70c33a85a6625cf71e51323f45853694bcdc59f2"}], "stats": {"total": 123, "additions": 77, "deletions": 46}, "files": [{"sha": "5d5149e2786375cd2e16e1ddfce594b93d05f066", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -1,3 +1,11 @@\n+2012-04-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* doc/invoke.texi (Wmissing-format-attribute): Document as an\n+\talias of Wsuggest-attribute=format.\n+\t* c-typeck.c (convert_for_assignment): Replace\n+\tWmissing-format-attribute with Wsuggest-attribute=format.\n+\t(digest_init): Likewise.\n+\n 2012-04-29  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n \n         * opts.c (finish_options): Do not handle -Wmissing-noreturn here."}, {"sha": "0185841c795ea5820cf03a5ef86073184f22a919", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -1,3 +1,11 @@\n+2012-04-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* c.opt (Wsuggest-attribute=format): New. Alias of\n+\tWmissing-format-attribute.\n+\t* c-format.c (decode_format_type): Replace\n+\tWmissing-format-attribute with Wsuggest-attribute=format.\n+\t(check_function_format): Likewise.\n+\n 2012-04-27   Ollie Wild  <aaw@google.com>\n \n \t* c-common.c: Add CPP_W_LITERAL_SUFFIX mapping."}, {"sha": "2d1ed8176f4c9d4397b227138204970c2d92614f", "filename": "gcc/c-family/c-format.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fc-family%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fc-family%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-format.c?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -1005,7 +1005,7 @@ decode_format_type (const char *s)\n /* Check the argument list of a call to printf, scanf, etc.\n    ATTRS are the attributes on the function type.  There are NARGS argument\n    values in the array ARGARRAY.\n-   Also, if -Wmissing-format-attribute,\n+   Also, if -Wsuggest-attribute=format,\n    warn for calls to vprintf or vscanf in functions with no such format\n    attribute themselves.  */\n \n@@ -1033,7 +1033,7 @@ check_function_format (tree attrs, int nargs, tree *argarray)\n \t\tparams = tree_cons (NULL_TREE, argarray[i], params);\n \t      check_format_info (&info, params);\n \t    }\n-\t  if (warn_missing_format_attribute && info.first_arg_num == 0\n+\t  if (warn_suggest_attribute_format && info.first_arg_num == 0\n \t      && (format_types[info.format_type].flags\n \t\t  & (int) FMT_FLAG_ARG_CONVERT))\n \t    {\n@@ -1063,7 +1063,7 @@ check_function_format (tree attrs, int nargs, tree *argarray)\n \t\t\tbreak;\n \t\t    }\n \t\t  if (args != 0)\n-\t\t    warning (OPT_Wmissing_format_attribute, \"function might \"\n+\t\t    warning (OPT_Wsuggest_attribute_format, \"function might \"\n \t\t\t     \"be possible candidate for %qs format attribute\",\n \t\t\t     format_types[info.format_type].name);\n \t\t}"}, {"sha": "ff8ce94f96cf4341b2fc6746068c7e262c5c7661", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -477,10 +477,14 @@ Wmissing-field-initializers\n C ObjC C++ ObjC++ Var(warn_missing_field_initializers) Init(-1) Warning\n Warn about missing fields in struct initializers\n \n-Wmissing-format-attribute\n-C ObjC C++ ObjC++ Var(warn_missing_format_attribute) Warning\n+Wsuggest-attribute=format\n+C ObjC C++ ObjC++ Var(warn_suggest_attribute_format) Warning\n Warn about functions which might be candidates for format attributes\n \n+Wmissing-format-attribute\n+C ObjC C++ ObjC++ Alias(Wsuggest-attribute=format)\n+;\n+\n Wmissing-include-dirs\n C ObjC C++ ObjC++ Warning\n Warn about user-specified include directories that do not exist"}, {"sha": "5e18a98d942115051c6499c0a16ae227bc9c1edf", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -5594,29 +5594,29 @@ convert_for_assignment (location_t location, tree type, tree rhs,\n \n       /* Check if the right-hand side has a format attribute but the\n \t left-hand side doesn't.  */\n-      if (warn_missing_format_attribute\n+      if (warn_suggest_attribute_format\n \t  && check_missing_format_attribute (type, rhstype))\n \t{\n \t  switch (errtype)\n \t  {\n \t  case ic_argpass:\n-\t    warning_at (location, OPT_Wmissing_format_attribute,\n+\t    warning_at (location, OPT_Wsuggest_attribute_format,\n \t\t\t\"argument %d of %qE might be \"\n \t\t\t\"a candidate for a format attribute\",\n \t\t\tparmnum, rname);\n \t    break;\n \t  case ic_assign:\n-\t    warning_at (location, OPT_Wmissing_format_attribute,\n+\t    warning_at (location, OPT_Wsuggest_attribute_format,\n \t\t\t\"assignment left-hand side might be \"\n \t\t\t\"a candidate for a format attribute\");\n \t    break;\n \t  case ic_init:\n-\t    warning_at (location, OPT_Wmissing_format_attribute,\n+\t    warning_at (location, OPT_Wsuggest_attribute_format,\n \t\t\t\"initialization left-hand side might be \"\n \t\t\t\"a candidate for a format attribute\");\n \t    break;\n \t  case ic_return:\n-\t    warning_at (location, OPT_Wmissing_format_attribute,\n+\t    warning_at (location, OPT_Wsuggest_attribute_format,\n \t\t\t\"return type might be \"\n \t\t\t\"a candidate for a format attribute\");\n \t    break;\n@@ -6335,7 +6335,7 @@ digest_init (location_t init_loc, tree type, tree init, tree origtype,\n \tpedwarn_init (init_loc, 0,\n \t\t      \"initializer element is not a constant expression\");\n \n-      /* Added to enable additional -Wmissing-format-attribute warnings.  */\n+      /* Added to enable additional -Wsuggest-attribute=format warnings.  */\n       if (TREE_CODE (TREE_TYPE (inside_init)) == POINTER_TYPE)\n \tinside_init = convert_for_assignment (init_loc, type, inside_init,\n \t    \t\t\t\t      origtype,"}, {"sha": "541e725ee8e193c1a7225de7eccb8c1fa5cd16e9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -1,3 +1,9 @@\n+2012-04-30  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\t* typeck.c (convert_for_assignment):  Replace\n+\tWmissing-format-attribute with Wsuggest-attribute=format.\n+\t* call.c (convert_for_arg_passing): Likewise.\n+\n 2012-04-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/53096"}, {"sha": "2207f421c415109194898d4effc4cd9b36ed1f08", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -6321,15 +6321,15 @@ convert_for_arg_passing (tree type, tree val, tsubst_flags_t complain)\n \t\t\t\t   TYPE_SIZE (integer_type_node)))\n     val = perform_integral_promotions (val);\n   if ((complain & tf_warning)\n-      && warn_missing_format_attribute)\n+      && warn_suggest_attribute_format)\n     {\n       tree rhstype = TREE_TYPE (val);\n       const enum tree_code coder = TREE_CODE (rhstype);\n       const enum tree_code codel = TREE_CODE (type);\n       if ((codel == POINTER_TYPE || codel == REFERENCE_TYPE)\n \t  && coder == codel\n \t  && check_missing_format_attribute (type, rhstype))\n-\twarning (OPT_Wmissing_format_attribute,\n+\twarning (OPT_Wsuggest_attribute_format,\n \t\t \"argument of function call might be a candidate for a format attribute\");\n     }\n   return val;"}, {"sha": "142402a0308bca77b7dcda6392386ecfb6906cd2", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -7624,7 +7624,7 @@ convert_for_assignment (tree type, tree rhs,\n \t  return error_mark_node;\n \t}\n     }\n-  if (warn_missing_format_attribute)\n+  if (warn_suggest_attribute_format)\n     {\n       const enum tree_code codel = TREE_CODE (type);\n       if ((codel == POINTER_TYPE || codel == REFERENCE_TYPE)\n@@ -7636,31 +7636,31 @@ convert_for_assignment (tree type, tree rhs,\n \t    case ICR_ARGPASS:\n \t    case ICR_DEFAULT_ARGUMENT:\n \t      if (fndecl)\n-\t\twarning (OPT_Wmissing_format_attribute,\n+\t\twarning (OPT_Wsuggest_attribute_format,\n \t\t\t \"parameter %qP of %qD might be a candidate \"\n \t\t\t \"for a format attribute\", parmnum, fndecl);\n \t      else\n-\t\twarning (OPT_Wmissing_format_attribute,\n+\t\twarning (OPT_Wsuggest_attribute_format,\n \t\t\t \"parameter might be a candidate \"\n \t\t\t \"for a format attribute\");\n \t      break;\n \t    case ICR_CONVERTING:\n-\t      warning (OPT_Wmissing_format_attribute,\n+\t      warning (OPT_Wsuggest_attribute_format,\n \t\t       \"target of conversion might be a candidate \"\n \t\t       \"for a format attribute\");\n \t      break;\n \t    case ICR_INIT:\n-\t      warning (OPT_Wmissing_format_attribute,\n+\t      warning (OPT_Wsuggest_attribute_format,\n \t\t       \"target of initialization might be a candidate \"\n \t\t       \"for a format attribute\");\n \t      break;\n \t    case ICR_RETURN:\n-\t      warning (OPT_Wmissing_format_attribute,\n+\t      warning (OPT_Wsuggest_attribute_format,\n \t\t       \"return type might be a candidate \"\n \t\t       \"for a format attribute\");\n \t      break;\n \t    case ICR_ASSIGN:\n-\t      warning (OPT_Wmissing_format_attribute,\n+\t      warning (OPT_Wsuggest_attribute_format,\n \t\t       \"left-hand side of assignment might be a candidate \"\n \t\t       \"for a format attribute\");\n \t      break;"}, {"sha": "c6ee28fb4c213a51cdafe9b343959f730e46aa54", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 31, "deletions": 26, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90137d8f2c5dfb3cb589e4b3497c63d7f810767e/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=90137d8f2c5dfb3cb589e4b3497c63d7f810767e", "patch": "@@ -255,7 +255,7 @@ Objective-C and Objective-C++ Dialects}.\n -Winvalid-pch -Wlarger-than=@var{len}  -Wunsafe-loop-optimizations @gol\n -Wlogical-op -Wlong-long @gol\n -Wmain -Wmaybe-uninitialized -Wmissing-braces  -Wmissing-field-initializers @gol\n--Wmissing-format-attribute  -Wmissing-include-dirs @gol\n+-Wmissing-include-dirs @gol\n -Wno-mudflap @gol\n -Wno-multichar  -Wnonnull  -Wno-overflow @gol\n -Woverlength-strings  -Wpacked  -Wpacked-bitfield-compat  -Wpadded @gol\n@@ -266,7 +266,8 @@ Objective-C and Objective-C++ Dialects}.\n -Wsign-compare  -Wsign-conversion  -Wstack-protector @gol\n -Wstack-usage=@var{len} -Wstrict-aliasing -Wstrict-aliasing=n @gol\n -Wstrict-overflow -Wstrict-overflow=@var{n} @gol\n--Wsuggest-attribute=@r{[}pure@r{|}const@r{|}noreturn@r{]} @gol\n+-Wsuggest-attribute=@r{[}pure@r{|}const@r{|}noreturn@r{|}format@r{]} @gol\n+-Wmissing-format-attribute @gol\n -Wswitch  -Wswitch-default  -Wswitch-enum -Wsync-nand @gol\n -Wsystem-headers  -Wtrampolines  -Wtrigraphs  -Wtype-limits  -Wundef @gol\n -Wuninitialized  -Wunknown-pragmas  -Wno-pragmas @gol\n@@ -3860,7 +3861,7 @@ comparisons, so this warning level gives a very large number of\n false positives.\n @end table\n \n-@item -Wsuggest-attribute=@r{[}pure@r{|}const@r{|}noreturn@r{]}\n+@item -Wsuggest-attribute=@r{[}pure@r{|}const@r{|}noreturn@r{|}format@r{]}\n @opindex Wsuggest-attribute=\n @opindex Wno-suggest-attribute=\n Warn for cases where adding an attribute may be beneficial. The\n@@ -3885,6 +3886,33 @@ returns normally if it doesn't contain an infinite loop nor returns abnormally\n by throwing, calling @code{abort()} or trapping.  This analysis requires option\n @option{-fipa-pure-const}, which is enabled by default at @option{-O} and\n higher.  Higher optimization levels improve the accuracy of the analysis.\n+\n+@item -Wsuggest-attribute=format\n+@itemx -Wmissing-format-attribute\n+@opindex Wsuggest-attribute=format\n+@opindex Wmissing-format-attribute\n+@opindex Wno-suggest-attribute=format\n+@opindex Wno-missing-format-attribute\n+@opindex Wformat\n+@opindex Wno-format\n+\n+Warn about function pointers that might be candidates for @code{format}\n+attributes.  Note these are only possible candidates, not absolute ones.\n+GCC guesses that function pointers with @code{format} attributes that\n+are used in assignment, initialization, parameter passing or return\n+statements should have a corresponding @code{format} attribute in the\n+resulting type.  I.e.@: the left-hand side of the assignment or\n+initialization, the type of the parameter variable, or the return type\n+of the containing function respectively should also have a @code{format}\n+attribute to avoid the warning.\n+\n+GCC also warns about function definitions that might be\n+candidates for @code{format} attributes.  Again, these are only\n+possible candidates.  GCC guesses that @code{format} attributes\n+might be appropriate for any function that calls a function like\n+@code{vprintf} or @code{vscanf}, but this might not always be the\n+case, and some functions for which @code{format} attributes are\n+appropriate may not be detected.\n @end table\n \n @item -Warray-bounds\n@@ -4424,29 +4452,6 @@ struct s x = @{ .f = 3, .g = 4 @};\n This warning is included in @option{-Wextra}.  To get other @option{-Wextra}\n warnings without this one, use @option{-Wextra -Wno-missing-field-initializers}.\n \n-@item -Wmissing-format-attribute\n-@opindex Wmissing-format-attribute\n-@opindex Wno-missing-format-attribute\n-@opindex Wformat\n-@opindex Wno-format\n-Warn about function pointers that might be candidates for @code{format}\n-attributes.  Note these are only possible candidates, not absolute ones.\n-GCC guesses that function pointers with @code{format} attributes that\n-are used in assignment, initialization, parameter passing or return\n-statements should have a corresponding @code{format} attribute in the\n-resulting type.  I.e.@: the left-hand side of the assignment or\n-initialization, the type of the parameter variable, or the return type\n-of the containing function respectively should also have a @code{format}\n-attribute to avoid the warning.\n-\n-GCC also warns about function definitions that might be\n-candidates for @code{format} attributes.  Again, these are only\n-possible candidates.  GCC guesses that @code{format} attributes\n-might be appropriate for any function that calls a function like\n-@code{vprintf} or @code{vscanf}, but this might not always be the\n-case, and some functions for which @code{format} attributes are\n-appropriate may not be detected.\n-\n @item -Wno-multichar\n @opindex Wno-multichar\n @opindex Wmultichar"}]}