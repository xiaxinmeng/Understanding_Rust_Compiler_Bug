{"sha": "7e7065b976573cb392d435856a5f9e5a6424a57c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U3MDY1Yjk3NjU3M2NiMzkyZDQzNTg1NmE1ZjllNWE2NDI0YTU3Yw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-01-01T11:14:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2020-01-01T11:14:37Z"}, "message": "gcc.c (process_command): Update copyright notice dates.\n\n\t* gcc.c (process_command): Update copyright notice dates.\n\t* gcov-dump.c (print_version): Ditto.\n\t* gcov.c (print_version): Ditto.\n\t* gcov-tool.c (print_version): Ditto.\n\t* gengtype.c (create_file): Ditto.\n\t* doc/cpp.texi: Bump @copying's copyright year.\n\t* doc/cppinternals.texi: Ditto.\n\t* doc/gcc.texi: Ditto.\n\t* doc/gccint.texi: Ditto.\n\t* doc/gcov.texi: Ditto.\n\t* doc/install.texi: Ditto.\n\t* doc/invoke.texi: Ditto.\ngcc/fortran/ \n\t* gfortranspec.c (lang_specific_driver): Update copyright notice\n\tdates.\n\t* gfc-internals.texi: Bump @copying's copyright year.\n\t* gfortran.texi: Ditto.\n\t* intrinsic.texi: Ditto.\n\t* invoke.texi: Ditto.\ngcc/d/\n\t* gdc.texi: Bump @copyrights-d year.\ngcc/go/\n\t* gccgo.texi: Bump @copyrights-go year.\ngcc/ada/\n  \t* gnat_ugn.texi: Bump @copying's copyright year.\n  \t* gnat_rm.texi: Likewise.\nlibitm/\n\t* libitm.texi: Bump @copying's copyright year.\nlibgomp/\n\t* libgomp.texi: Bump @copying's copyright year.\nlibquadmath/\n\t* libquadmath.texi: Bump @copying's copyright year.\n\nFrom-SVN: r279811", "tree": {"sha": "1ac730d7a8a7404d56e6012b5f5b90f29c7659fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ac730d7a8a7404d56e6012b5f5b90f29c7659fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e7065b976573cb392d435856a5f9e5a6424a57c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7065b976573cb392d435856a5f9e5a6424a57c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e7065b976573cb392d435856a5f9e5a6424a57c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e7065b976573cb392d435856a5f9e5a6424a57c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65c2b6d290e1d47530b8d14d7077aa8639a8728e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65c2b6d290e1d47530b8d14d7077aa8639a8728e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65c2b6d290e1d47530b8d14d7077aa8639a8728e"}], "stats": {"total": 20424, "additions": 10244, "deletions": 10180}, "files": [{"sha": "6996ca81571465f2f6e567066bf3704e8655113d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,3 +1,18 @@\n+2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c (process_command): Update copyright notice dates.\n+\t* gcov-dump.c (print_version): Ditto.\n+\t* gcov.c (print_version): Ditto.\n+\t* gcov-tool.c (print_version): Ditto.\n+\t* gengtype.c (create_file): Ditto.\n+\t* doc/cpp.texi: Bump @copying's copyright year.\n+\t* doc/cppinternals.texi: Ditto.\n+\t* doc/gcc.texi: Ditto.\n+\t* doc/gccint.texi: Ditto.\n+\t* doc/gcov.texi: Ditto.\n+\t* doc/install.texi: Ditto.\n+\t* doc/invoke.texi: Ditto.\n+\n 2020-01-01  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa.c (walk_polymorphic_call_targets): Fix updating of overall"}, {"sha": "d13a86a02ec86d62892450e5d5fcd2f2fc028338", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 6710, "changes": 6714, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7e7065b976573cb392d435856a5f9e5a6424a57c"}, {"sha": "5e92f1ac2e0fcdaf209010cc1cd1434fe02b917e", "filename": "gcc/ada/ChangeLog-2019", "status": "added", "additions": 6716, "deletions": 0, "changes": 6716, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fada%2FChangeLog-2019", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fada%2FChangeLog-2019", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog-2019?ref=7e7065b976573cb392d435856a5f9e5a6424a57c"}, {"sha": "bd9c86e5c1808275e7efdcd5358b31fbf8af1b6c", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -25,7 +25,7 @@ GNAT Reference Manual , Dec 10, 2019\n \n AdaCore\n \n-Copyright @copyright{} 2008-2019, Free Software Foundation\n+Copyright @copyright{} 2008-2020, Free Software Foundation\n @end quotation\n \n @end copying"}, {"sha": "861a92ec2d1b5a23a5ea9f040948cfea263f8957", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -25,7 +25,7 @@ GNAT User's Guide for Native Platforms , Dec 10, 2019\n \n AdaCore\n \n-Copyright @copyright{} 2008-2019, Free Software Foundation\n+Copyright @copyright{} 2008-2020, Free Software Foundation\n @end quotation\n \n @end copying"}, {"sha": "125bbc910acf083d31b034ede5f83788ab28dd39", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 2, "deletions": 324, "changes": 326, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,330 +1,8 @@\n-2019-11-14  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-\t* d-codegen.cc (build_boolop): Use truth_type_for instead of\n-\tbuild_same_sized_truth_vector_type.\n-\n-2019-11-13  Joseph Myers  <joseph@codesourcery.com>\n-\n-\t* d-target.cc (define_float_constants): Update call to\n-\tget_max_float.\n-\n-2019-11-04  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-\t* d-builtins.cc (build_frontend_type): Cope with variable\n-\tTYPE_VECTOR_SUBPARTS.\n-\n-2019-08-23  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tPR middle-end/91283\n-\t* d-lang.cc (d_post_options): Set flag_excess_precision instead of\n-\tflag_excess_precision_cmdline.\n-\n-2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/88722\n-\t* modules.cc: Include diagnostic.h.\n-\t(register_moduleinfo): Use sorry instead of gcc_assert for targets\n-\twithout named sections.\n-\n-2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-target.cc: Include diagnostic.h.\n-\t(Target::_init): Set Tsize_t and Tptrdiff_t as D ushort and short if\n-\tthe target pointer size is 2.  Add sorry if the pointer size is not\n-\teither 2, 4, or 8.\n-\n-2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/90446\n-\t* d-lang.cc (d_type_for_mode): Check for all internal __intN types.\n-\t(d_type_for_size): Likewise.\n-\n-2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/90445\n-\t* d-builtins.cc (d_build_c_type_nodes): Test UINTMAX_TYPE for setting\n-\tuintmax_type_node.  Set signed_size_type_node as the signed_type_for\n-\tsize_type_node.\n-\n-2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/90444\n-\t* d-builtins.cc (build_frontend_type): Build anonymous RECORD_TYPE\n-\tnodes as well, push all fields to the struct members.\n-\t(d_build_builtins_module): Push anonymous va_list structs to the\n-\tbuiltins module, naming them __builtin_va_list.\n-\t(d_init_builtins): Use sorry instead of gcc_unreachable if va_list did\n-\tnot succeed in being represented as a D type.\n-\n-2019-08-13  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-\tPR middle-end/91421\n-\t* intrinsics.cc (maybe_set_intrinsic): Use set_decl_built_in_function.\n-\n-2019-08-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/90601\n-\t* d-convert.cc (convert_expr): Don't convert an expression to its\n-\toriginal front-end type before converting to its target type.\n-\n-2019-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/91238\n-\t* d-codegen.cc (build_address): If taking the address of a CALL_EXPR,\n-\twrap it in a TARGET_EXPR.\n-\n-2019-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/90893\n-\t* runtime.cc (enum libcall_type): Rename to...\n-\t(enum d_libcall_type): ...this.\n-\t(get_libcall_type): Use d_libcall_type.\n-\t(build_libcall_decl): Likewise.\n-\n-2019-06-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/90559\n-\t* d-target.cc (Target::_init): Reduce max static data size to INT_MAX.\n-\n-2019-06-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/90651\n-\t* typeinfo.cc (object_module): New variable.\n-\t(make_frontend_typeinfo): Update signature.  Set temporary on\n-\tgenerated TypeInfo classes.\n-\t(create_tinfo_types): Set object_module.  Move generation of front-end\n-\ttypeinfo into ...\n-\t(create_frontend_tinfo_types): ... New function.\n-\t(layout_typeinfo): Call create_frontend_tinfo_types.\n-\t(layout_classinfo): Likewise.\n-\t(layout_cpp_typeinfo): Likewise.\n-\t(create_typeinfo): Likewise.\n-\n-2019-06-11  Richard Biener  <rguenthe@suse.de>\n-\n-\td/90778\n-\t* toir.cc (pop_label): Only queue labels in a vector.\n-\t(cmp_labels): Label decl comparator.\n-\t(pop_binding_level): Pop labels in DECL_UID order to avoid\n-\tdebug info differences.\n-\n-2019-05-24  Nathan Sidwell  <nathan@acm.org>\n-\n-\t* types.cc (fixup_anonymous_offset): Use IDENTIFIER_ANON_P.\n-\t(layout_aggregate_members): Use make_anon_name.\n-\n-2019-05-16  Martin Sebor  <msebor@redhat.com>\n-\n-\t* d-builtins.cc (d_init_builtins): Quote keywords, operators,\n-\tand types in diagnostics.\n-\t* d-codegen.cc (get_array_length): Same.  Replace can't with cannot.\n-\t* d-convert.cc (convert_expr): Same.\n-\t* d-frontend.cc (getTypeInfoType): Quote an option name in\n-\ta diagnostic.\n-\t* d-lang.cc (d_handle_option): Same.\n-\t(d_parse_file): Same.\n-\t* decl.cc: Remove a trailing period from a diagnostic.\n-\t* expr.cc: Use a directive for an apostrophe.\n-\t* toir.cc: Quote keywords, operators, and types in diagnostics.\n-\t* typeinfo.cc (build_typeinfo): Quote an option name in a diagnostic.\n-\n-2019-04-25  Johannes Pfau  <johannespfau@gmail.com>\n-\n-\t* config-lang.in: Do not add target_libs if phobos is disabled.\n-\n-2019-04-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\t    Robin Dapp  <rdapp@linux.ibm.com>\n-\n-\t* typeinfo.cc (create_typeinfo): Write typeinfo flags as uint.\n-\n-2019-04-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-builtins.cc (d_init_versions): Add D_BetterC, D_ModuleInfo,\n-\tD_Exceptions, D_TypeInfo as predefined version conditions.\n-\t* d-codegen.cc (build_bounds_condition): Generate trap if D asserts\n-\tare turned off.\n-\t* d-frontend.cc (getTypeInfoType): Add error when -fno-rtti is set.\n-\t* d-lang.cc (d_init_options): Initialize new front-end options.\n-\t(d_handle_option): Handle -fdruntime, -fexceptions, and -frtti.\n-\t(d_post_options): Turn off D runtime features if -fno-druntime is set.\n-\t* d-spec.cc (lang_specific_driver): Handle -fdruntime.\n-\t* d-tree.h (have_typeinfo_p): Add prototype.\n-\t(build_typeinfo): Update prototype.\n-\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Create typeinfo\n-\tonly if TypeInfo exists.\n-\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n-\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n-\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n-\t* expr.cc: Update all calls to build_typeinfo.\n-\t* gdc.texi (Runtime Options): Document -fdruntime and -frtti.\n-\t* lang.opt: Add -fdruntime and -frtti.\n-\t* modules.cc (build_module_tree): Create module info only if\n-\tModuleInfo exists.\n-\t* toir.cc (IRVisitor::visit(ThrowStatement)): Update test for\n-\t-fno-exceptions.\n-\t* typeinfo.cc (create_tinfo_types): Build internal typeinfo classes\n-\tonly if Object exists.\n-\t(have_typeinfo_p): New function.\n-\t(class TypeInfoVisitor): Update all calls to build_typeinfo.\n-\t(build_typeinfo): Add error when -fno-rtti is set.\n-\n-2019-04-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* decl.cc (DeclVisitor::visit(Import)): Set semanticRun after\n-\tcompletion, guard against being called more than once.\n-\t(DeclVisitor::visit(StructDeclaration)): Likewise.\n-\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n-\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n-\t(DeclVisitor::visit(VarDeclaration)): Likewise.\n-\t(DeclVisitor::visit(TypeInfoDeclaration)): Likewise.\n-\n-2019-04-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* modules.cc (register_module_decl): Don't register unittests against\n-\tthe ModuleInfo symbol for -fbuilding-libphobos-tests.\n-\n-2019-04-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-system.h (POSIX): Define unix as POSIX.\n-\t(INT32_MAX, INT32_MIN, INT64_MIN, UINT32_MAX, UINT64_MAX): Provide\n-\tfallback definitions.\n-\n-2019-04-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* Make-lang.in (d.mostyclean): Clean idgen and impcvgen.\n-\t(d/idgen): Rename to d/idgen$(build_exeext), add BUILD_LIBDEPS.\n-\t(d/impcvgen): Rename to d/impcvgen$(build_exeext), add BUILD_LIBDEPS.\n-\t(d/id.c): Call idgen$(build_exeext).\n-\t(d/impcnvtab.c): Call impcvgen$(build_exeext).\n-\n-2019-04-14  Johannes Pfau  <johannespfau@gmail.com>\n-\tPR d/87799\n-\t* d-system.h (_mkdir): Forward _mkdir on MinGW to mkdir in system.h.\n-\n-2019-04-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-tree.h (DECL_IN_UNITTEST_CONDITION_P): Define.\n-\t* decl.cc (DeclVisitor): Add in_version_unittest_ field.\n-\t(DeclVisitor::visit(ConditionalDeclaration)): New override.\n-\t(DeclVisitor::visit(FuncDeclaration)): Set\n-\tDECL_IN_UNITTEST_CONDITION_P.\n-\t* lang.opt (-fbuilding-libphobos-tests): Add option.\n-\t* modules.cc (current_testing_module): New static variable.\n-\t(build_module_tree): Generate second moduleinfo symbol to hold\n-\treference to unittests if flag_building_libphobos_tests.\n-\t(register_module_decl): Check DECL_IN_UNITTEST_CONDITION_P to decide\n-\twhich moduleinfo the decl should be registered against.\n-\n-2019-03-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/88462\n-\t* modules.cc (layout_moduleinfo_fields): Properly align ModuleInfo,\n-\tinstead of forcing alignment to be 1.\n-\n-2019-03-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/89017\n-\t* d-codegen.cc (d_decl_context): Skip over template instances when\n-\tfinding the context.\n-\t* decl.cc (DeclVisitor::visit(TemplateDeclaration)): New override.\n-\t(build_type_decl): Include parameters in name of template types.\n-\n-2019-03-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/88957\n-\t* expr.cc (ExprVisitor::visit(VectorArrayExp)): New override.\n-\n-2019-03-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/87866\n-\t* d-system.h (realpath): Redefine as lrealpath.\n-\n-2019-03-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-lang.cc (d_init_options): Set global.params.cplusplus to C++14.\n-\t* d-target.cc (Target::cppFundamentalType): New method.\n-\n-2019-03-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/89041\n-\t* d-codegen.cc (get_frame_for_symbol): Delegate literals defined in\n-\tglobal scope don't have a frame pointer.\n-\n-2019-03-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-builtins.cc (d_init_versions): Add CppRuntime_Gcc as predefined\n-\tversion condition.\n-\n-2019-02-14  Maya Rashish  <coypu@sdf.org>\n-\n-\t* d-system.h: NetBSD is POSIX.\n-\n-2019-02-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n-\n-\tPR d/87864\n-\t* lang.opt (dstartfiles): New option.\n-\t* d-spec.cc (need_spec): New variable.\n-\t(lang_specific_driver) <OPT_dstartfiles>: Enable need_spec.\n-\t(lang_specific_pre_link): Also load libgphobos.spec if need_spec.\n-\n-2019-01-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/89042\n-\t* decl.cc (DeclVisitor::visit(VarDeclaration)): Don't assert if\n-\thandling a void initialized manifest constant.\n-\n-2019-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-frontend.cc (Compiler::paintAsType): Update for new signature.\n-\n-2019-01-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-builtins.cc (d_init_versions): Check value of\n-\tSTACK_GROWS_DOWNWARD.\n-\n-2019-01-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (identity_compare_p): Return false if seen built-in\n-\ttype with padding.\n-\t(build_float_identity): Moved here from expr.cc.\n-\t(lower_struct_comparison): Handle real and complex types.\n-\t* d-tree.h (build_float_identity): New.\n-\t* expr.cc (build_float_identity): Move to d-codegen.cc.\n-\n-2019-01-20  Johannes Pfau  <johannespfau@gmail.com>\n-\n-\t* expr.cc (build_float_identity): New function.\n-\t(ExprVisitor::visit(IdentityExp)): Add support for complex types.\n-\n-2019-01-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\tPR d/87824\n-\t* d-lang.cc (d_post_options): Disable implicit\n-\t-forder-blocks-and-partition.\n-\n-2019-01-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* d-codegen.cc (build_typeof_null_value): New function.\n-\t* d-tree.h (build_typeof_null_value): Declare.\n-\t* d-convert.cc (convert_expr): Use build_typeof_null_value.\n-\t* expr.cc (ExprVisitor::visit(NullExp)): Likewise.\n-\n-2019-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n-\n-\tPR inline-asm/52813\n-\t* lang.opt (Wdeprecated): Reference common.opt instead of c.opt.\n-\n-2019-01-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n-\n-\t* README.gcc: New file.\n-\n-2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n-\n-\tUpdate copyright years.\n+2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gdc.texi: Bump @copyrights-d year.\n \f\n-Copyright (C) 2019 Free Software Foundation, Inc.\n+Copyright (C) 2020 Free Software Foundation, Inc.\n \n Copying and distribution of this file, with or without modification,\n are permitted in any medium without royalty provided the copyright"}, {"sha": "046f28373c5245c03b04486753a75a1053a4f4b3", "filename": "gcc/d/ChangeLog-2019", "status": "added", "additions": 331, "deletions": 0, "changes": 331, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fd%2FChangeLog-2019", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fd%2FChangeLog-2019", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog-2019?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -0,0 +1,331 @@\n+2019-11-14  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* d-codegen.cc (build_boolop): Use truth_type_for instead of\n+\tbuild_same_sized_truth_vector_type.\n+\n+2019-11-13  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* d-target.cc (define_float_constants): Update call to\n+\tget_max_float.\n+\n+2019-11-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* d-builtins.cc (build_frontend_type): Cope with variable\n+\tTYPE_VECTOR_SUBPARTS.\n+\n+2019-08-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/91283\n+\t* d-lang.cc (d_post_options): Set flag_excess_precision instead of\n+\tflag_excess_precision_cmdline.\n+\n+2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/88722\n+\t* modules.cc: Include diagnostic.h.\n+\t(register_moduleinfo): Use sorry instead of gcc_assert for targets\n+\twithout named sections.\n+\n+2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-target.cc: Include diagnostic.h.\n+\t(Target::_init): Set Tsize_t and Tptrdiff_t as D ushort and short if\n+\tthe target pointer size is 2.  Add sorry if the pointer size is not\n+\teither 2, 4, or 8.\n+\n+2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90446\n+\t* d-lang.cc (d_type_for_mode): Check for all internal __intN types.\n+\t(d_type_for_size): Likewise.\n+\n+2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90445\n+\t* d-builtins.cc (d_build_c_type_nodes): Test UINTMAX_TYPE for setting\n+\tuintmax_type_node.  Set signed_size_type_node as the signed_type_for\n+\tsize_type_node.\n+\n+2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90444\n+\t* d-builtins.cc (build_frontend_type): Build anonymous RECORD_TYPE\n+\tnodes as well, push all fields to the struct members.\n+\t(d_build_builtins_module): Push anonymous va_list structs to the\n+\tbuiltins module, naming them __builtin_va_list.\n+\t(d_init_builtins): Use sorry instead of gcc_unreachable if va_list did\n+\tnot succeed in being represented as a D type.\n+\n+2019-08-13  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR middle-end/91421\n+\t* intrinsics.cc (maybe_set_intrinsic): Use set_decl_built_in_function.\n+\n+2019-08-11  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90601\n+\t* d-convert.cc (convert_expr): Don't convert an expression to its\n+\toriginal front-end type before converting to its target type.\n+\n+2019-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/91238\n+\t* d-codegen.cc (build_address): If taking the address of a CALL_EXPR,\n+\twrap it in a TARGET_EXPR.\n+\n+2019-08-10  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90893\n+\t* runtime.cc (enum libcall_type): Rename to...\n+\t(enum d_libcall_type): ...this.\n+\t(get_libcall_type): Use d_libcall_type.\n+\t(build_libcall_decl): Likewise.\n+\n+2019-06-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90559\n+\t* d-target.cc (Target::_init): Reduce max static data size to INT_MAX.\n+\n+2019-06-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/90651\n+\t* typeinfo.cc (object_module): New variable.\n+\t(make_frontend_typeinfo): Update signature.  Set temporary on\n+\tgenerated TypeInfo classes.\n+\t(create_tinfo_types): Set object_module.  Move generation of front-end\n+\ttypeinfo into ...\n+\t(create_frontend_tinfo_types): ... New function.\n+\t(layout_typeinfo): Call create_frontend_tinfo_types.\n+\t(layout_classinfo): Likewise.\n+\t(layout_cpp_typeinfo): Likewise.\n+\t(create_typeinfo): Likewise.\n+\n+2019-06-11  Richard Biener  <rguenthe@suse.de>\n+\n+\td/90778\n+\t* toir.cc (pop_label): Only queue labels in a vector.\n+\t(cmp_labels): Label decl comparator.\n+\t(pop_binding_level): Pop labels in DECL_UID order to avoid\n+\tdebug info differences.\n+\n+2019-05-24  Nathan Sidwell  <nathan@acm.org>\n+\n+\t* types.cc (fixup_anonymous_offset): Use IDENTIFIER_ANON_P.\n+\t(layout_aggregate_members): Use make_anon_name.\n+\n+2019-05-16  Martin Sebor  <msebor@redhat.com>\n+\n+\t* d-builtins.cc (d_init_builtins): Quote keywords, operators,\n+\tand types in diagnostics.\n+\t* d-codegen.cc (get_array_length): Same.  Replace can't with cannot.\n+\t* d-convert.cc (convert_expr): Same.\n+\t* d-frontend.cc (getTypeInfoType): Quote an option name in\n+\ta diagnostic.\n+\t* d-lang.cc (d_handle_option): Same.\n+\t(d_parse_file): Same.\n+\t* decl.cc: Remove a trailing period from a diagnostic.\n+\t* expr.cc: Use a directive for an apostrophe.\n+\t* toir.cc: Quote keywords, operators, and types in diagnostics.\n+\t* typeinfo.cc (build_typeinfo): Quote an option name in a diagnostic.\n+\n+2019-04-25  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* config-lang.in: Do not add target_libs if phobos is disabled.\n+\n+2019-04-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\t    Robin Dapp  <rdapp@linux.ibm.com>\n+\n+\t* typeinfo.cc (create_typeinfo): Write typeinfo flags as uint.\n+\n+2019-04-23  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_init_versions): Add D_BetterC, D_ModuleInfo,\n+\tD_Exceptions, D_TypeInfo as predefined version conditions.\n+\t* d-codegen.cc (build_bounds_condition): Generate trap if D asserts\n+\tare turned off.\n+\t* d-frontend.cc (getTypeInfoType): Add error when -fno-rtti is set.\n+\t* d-lang.cc (d_init_options): Initialize new front-end options.\n+\t(d_handle_option): Handle -fdruntime, -fexceptions, and -frtti.\n+\t(d_post_options): Turn off D runtime features if -fno-druntime is set.\n+\t* d-spec.cc (lang_specific_driver): Handle -fdruntime.\n+\t* d-tree.h (have_typeinfo_p): Add prototype.\n+\t(build_typeinfo): Update prototype.\n+\t* decl.cc (DeclVisitor::visit(StructDeclaration)): Create typeinfo\n+\tonly if TypeInfo exists.\n+\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n+\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n+\t(DeclVisitor::visit(EnumDeclaration)): Likewise.\n+\t* expr.cc: Update all calls to build_typeinfo.\n+\t* gdc.texi (Runtime Options): Document -fdruntime and -frtti.\n+\t* lang.opt: Add -fdruntime and -frtti.\n+\t* modules.cc (build_module_tree): Create module info only if\n+\tModuleInfo exists.\n+\t* toir.cc (IRVisitor::visit(ThrowStatement)): Update test for\n+\t-fno-exceptions.\n+\t* typeinfo.cc (create_tinfo_types): Build internal typeinfo classes\n+\tonly if Object exists.\n+\t(have_typeinfo_p): New function.\n+\t(class TypeInfoVisitor): Update all calls to build_typeinfo.\n+\t(build_typeinfo): Add error when -fno-rtti is set.\n+\n+2019-04-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* decl.cc (DeclVisitor::visit(Import)): Set semanticRun after\n+\tcompletion, guard against being called more than once.\n+\t(DeclVisitor::visit(StructDeclaration)): Likewise.\n+\t(DeclVisitor::visit(ClassDeclaration)): Likewise.\n+\t(DeclVisitor::visit(InterfaceDeclaration)): Likewise.\n+\t(DeclVisitor::visit(VarDeclaration)): Likewise.\n+\t(DeclVisitor::visit(TypeInfoDeclaration)): Likewise.\n+\n+2019-04-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* modules.cc (register_module_decl): Don't register unittests against\n+\tthe ModuleInfo symbol for -fbuilding-libphobos-tests.\n+\n+2019-04-17  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-system.h (POSIX): Define unix as POSIX.\n+\t(INT32_MAX, INT32_MIN, INT64_MIN, UINT32_MAX, UINT64_MAX): Provide\n+\tfallback definitions.\n+\n+2019-04-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* Make-lang.in (d.mostyclean): Clean idgen and impcvgen.\n+\t(d/idgen): Rename to d/idgen$(build_exeext), add BUILD_LIBDEPS.\n+\t(d/impcvgen): Rename to d/impcvgen$(build_exeext), add BUILD_LIBDEPS.\n+\t(d/id.c): Call idgen$(build_exeext).\n+\t(d/impcnvtab.c): Call impcvgen$(build_exeext).\n+\n+2019-04-14  Johannes Pfau  <johannespfau@gmail.com>\n+\tPR d/87799\n+\t* d-system.h (_mkdir): Forward _mkdir on MinGW to mkdir in system.h.\n+\n+2019-04-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-tree.h (DECL_IN_UNITTEST_CONDITION_P): Define.\n+\t* decl.cc (DeclVisitor): Add in_version_unittest_ field.\n+\t(DeclVisitor::visit(ConditionalDeclaration)): New override.\n+\t(DeclVisitor::visit(FuncDeclaration)): Set\n+\tDECL_IN_UNITTEST_CONDITION_P.\n+\t* lang.opt (-fbuilding-libphobos-tests): Add option.\n+\t* modules.cc (current_testing_module): New static variable.\n+\t(build_module_tree): Generate second moduleinfo symbol to hold\n+\treference to unittests if flag_building_libphobos_tests.\n+\t(register_module_decl): Check DECL_IN_UNITTEST_CONDITION_P to decide\n+\twhich moduleinfo the decl should be registered against.\n+\n+2019-03-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/88462\n+\t* modules.cc (layout_moduleinfo_fields): Properly align ModuleInfo,\n+\tinstead of forcing alignment to be 1.\n+\n+2019-03-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/89017\n+\t* d-codegen.cc (d_decl_context): Skip over template instances when\n+\tfinding the context.\n+\t* decl.cc (DeclVisitor::visit(TemplateDeclaration)): New override.\n+\t(build_type_decl): Include parameters in name of template types.\n+\n+2019-03-13  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/88957\n+\t* expr.cc (ExprVisitor::visit(VectorArrayExp)): New override.\n+\n+2019-03-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/87866\n+\t* d-system.h (realpath): Redefine as lrealpath.\n+\n+2019-03-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-lang.cc (d_init_options): Set global.params.cplusplus to C++14.\n+\t* d-target.cc (Target::cppFundamentalType): New method.\n+\n+2019-03-09  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/89041\n+\t* d-codegen.cc (get_frame_for_symbol): Delegate literals defined in\n+\tglobal scope don't have a frame pointer.\n+\n+2019-03-01  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_init_versions): Add CppRuntime_Gcc as predefined\n+\tversion condition.\n+\n+2019-02-14  Maya Rashish  <coypu@sdf.org>\n+\n+\t* d-system.h: NetBSD is POSIX.\n+\n+2019-02-14  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR d/87864\n+\t* lang.opt (dstartfiles): New option.\n+\t* d-spec.cc (need_spec): New variable.\n+\t(lang_specific_driver) <OPT_dstartfiles>: Enable need_spec.\n+\t(lang_specific_pre_link): Also load libgphobos.spec if need_spec.\n+\n+2019-01-26  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/89042\n+\t* decl.cc (DeclVisitor::visit(VarDeclaration)): Don't assert if\n+\thandling a void initialized manifest constant.\n+\n+2019-01-21  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-frontend.cc (Compiler::paintAsType): Update for new signature.\n+\n+2019-01-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-builtins.cc (d_init_versions): Check value of\n+\tSTACK_GROWS_DOWNWARD.\n+\n+2019-01-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (identity_compare_p): Return false if seen built-in\n+\ttype with padding.\n+\t(build_float_identity): Moved here from expr.cc.\n+\t(lower_struct_comparison): Handle real and complex types.\n+\t* d-tree.h (build_float_identity): New.\n+\t* expr.cc (build_float_identity): Move to d-codegen.cc.\n+\n+2019-01-20  Johannes Pfau  <johannespfau@gmail.com>\n+\n+\t* expr.cc (build_float_identity): New function.\n+\t(ExprVisitor::visit(IdentityExp)): Add support for complex types.\n+\n+2019-01-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/87824\n+\t* d-lang.cc (d_post_options): Disable implicit\n+\t-forder-blocks-and-partition.\n+\n+2019-01-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* d-codegen.cc (build_typeof_null_value): New function.\n+\t* d-tree.h (build_typeof_null_value): Declare.\n+\t* d-convert.cc (convert_expr): Use build_typeof_null_value.\n+\t* expr.cc (ExprVisitor::visit(NullExp)): Likewise.\n+\n+2019-01-15  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\tPR inline-asm/52813\n+\t* lang.opt (Wdeprecated): Reference common.opt instead of c.opt.\n+\n+2019-01-12  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* README.gcc: New file.\n+\n+2019-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tUpdate copyright years.\n+\n+\t* gdc.texi: Bump @copyrights-d year.\n+\f\n+Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "496066cb59ada2cf91b1bd0d3f64453e0183f1c1", "filename": "gcc/d/gdc.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fd%2Fgdc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fd%2Fgdc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fgdc.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -12,7 +12,7 @@\n @include gcc-common.texi\n \n @c Copyright years for this manual.\n-@set copyrights-d 2006-2019\n+@set copyrights-d 2006-2020\n \n @copying\n @c man begin COPYRIGHT"}, {"sha": "8c3dfcc708a47a979d9c0de9cd76edf8e8f51ba0", "filename": "gcc/doc/cpp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fcpp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fcpp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcpp.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -10,7 +10,7 @@\n \n @copying\n @c man begin COPYRIGHT\n-Copyright @copyright{} 1987-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 1987-2020 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "6e99d661546137663bbe2b72869451482bf5301c", "filename": "gcc/doc/cppinternals.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fcppinternals.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fcppinternals.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fcppinternals.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -18,7 +18,7 @@\n @ifinfo\n This file documents the internals of the GNU C Preprocessor.\n \n-Copyright (C) 2000-2019 Free Software Foundation, Inc.\n+Copyright (C) 2000-2020 Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice\n@@ -47,7 +47,7 @@ into another language, under the above conditions for modified versions.\n @page\n @vskip 0pt plus 1filll\n @c man begin COPYRIGHT\n-Copyright @copyright{} 2000-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 2000-2020 Free Software Foundation, Inc.\n \n Permission is granted to make and distribute verbatim copies of\n this manual provided the copyright notice and this permission notice"}, {"sha": "e4523d58bbfb52a883aa34b7aa34b0bc1010d83d", "filename": "gcc/doc/gcc.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fgcc.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fgcc.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcc.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -40,7 +40,7 @@\n @c %**end of header\n \n @copying\n-Copyright @copyright{} 1988-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 1988-2020 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "5965650e294bdeb8aa6a755b453287fbaa634c25", "filename": "gcc/doc/gccint.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fgccint.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fgccint.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgccint.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -26,7 +26,7 @@\n @c %**end of header\n \n @copying\n-Copyright @copyright{} 1988-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 1988-2020 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "03d12ced4005a6d4ac53076ae7fb6696a9411e16", "filename": "gcc/doc/gcov.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fgcov.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -4,7 +4,7 @@\n \n @ignore\n @c man begin COPYRIGHT\n-Copyright @copyright{} 1996-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 1996-2020 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "960e704fcc9eb9e37a2295f4eb4953c5901dea81", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -43,7 +43,7 @@\n @settitle Installing GCC: GNU Free Documentation License\n @end ifset\n \n-@c Copyright (C) 1988-2019 Free Software Foundation, Inc.\n+@c Copyright (C) 1988-2020 Free Software Foundation, Inc.\n @c *** Converted to texinfo by Dean Wakerley, dean@wakerley.com\n \n @c IMPORTANT: whenever you modify this file, run `install.texi2html' to\n@@ -68,7 +68,7 @@\n \n @c Part 2 Summary Description and Copyright\n @copying\n-Copyright @copyright{} 1988-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 1988-2020 Free Software Foundation, Inc.\n @sp 1\n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "f750581652ac809edc0dd4ddd4014cb716b8ec87", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -8,7 +8,7 @@\n @c man end\n \n @c man begin COPYRIGHT\n-Copyright @copyright{} 1988-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 1988-2020 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "a95e97f77c53769b339cace4a3dd938fda9e0289", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 2, "deletions": 3120, "changes": 3122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=7e7065b976573cb392d435856a5f9e5a6424a57c"}, {"sha": "1fcfd920c53de69907ca204048391ef99cf9eaca", "filename": "gcc/fortran/ChangeLog-2019", "status": "added", "additions": 3132, "deletions": 0, "changes": 3132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2FChangeLog-2019", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2FChangeLog-2019", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog-2019?ref=7e7065b976573cb392d435856a5f9e5a6424a57c"}, {"sha": "e74d5d60c1dbb6021704114eb7f25ea2c8a59416", "filename": "gcc/fortran/gfc-internals.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Fgfc-internals.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Fgfc-internals.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfc-internals.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,7 +1,7 @@\n \\input texinfo  @c -*-texinfo-*-\n @c %**start of header\n @setfilename gfc-internals.info\n-@set copyrights-gfortran 2007-2019\n+@set copyrights-gfortran 2007-2020\n \n @include gcc-common.texi\n "}, {"sha": "4cf8b3a5c24960d6aebc29257ce28cf041a4c8db", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,7 +1,7 @@\n \\input texinfo  @c -*-texinfo-*-\n @c %**start of header\n @setfilename gfortran.info\n-@set copyrights-gfortran 1999-2019\n+@set copyrights-gfortran 1999-2020\n \n @include gcc-common.texi\n "}, {"sha": "4c7685f30afbf3c5be8474ca2c7cc731d8b6c81c", "filename": "gcc/fortran/gfortranspec.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Fgfortranspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Fgfortranspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortranspec.c?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -278,7 +278,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \n \tcase OPT__version:\n \t  printf (\"GNU Fortran %s%s\\n\", pkgversion_string, version_string);\n-\t  printf (\"Copyright %s 2019 Free Software Foundation, Inc.\\n\",\n+\t  printf (\"Copyright %s 2020 Free Software Foundation, Inc.\\n\",\n \t\t  _(\"(C)\"));\n \t  fputs (_(\"This is free software; see the source for copying conditions.  There is NO\\n\\\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"),"}, {"sha": "823cb9cef30368ba490f72c2ce5b9c8d4c045568", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,5 +1,5 @@\n @ignore\n-Copyright (C) 2005-2019 Free Software Foundation, Inc.\n+Copyright (C) 2005-2020 Free Software Foundation, Inc.\n This is part of the GNU Fortran manual.   \n For copying conditions, see the file gfortran.texi.\n "}, {"sha": "622123b5ae21d87db5ff2adc7b22fd73fc50cb98", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,10 +1,10 @@\n-@c Copyright (C) 2004-2019 Free Software Foundation, Inc.\n+@c Copyright (C) 2004-2020 Free Software Foundation, Inc.\n @c This is part of the GNU Fortran manual.   \n @c For copying conditions, see the file gfortran.texi.\n \n @ignore\n @c man begin COPYRIGHT\n-Copyright @copyright{} 2004-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 2004-2020 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "a5d132da4ace6185cb1717bcbd16bc6be1b87e90", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -8008,7 +8008,7 @@ driver::maybe_print_and_exit () const\n     {\n       printf (_(\"%s %s%s\\n\"), progname, pkgversion_string,\n \t      version_string);\n-      printf (\"Copyright %s 2019 Free Software Foundation, Inc.\\n\",\n+      printf (\"Copyright %s 2020 Free Software Foundation, Inc.\\n\",\n \t      _(\"(C)\"));\n       fputs (_(\"This is free software; see the source for copying conditions.  There is NO\\n\\\n warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\"),"}, {"sha": "e252b865ee99a3a003d646146475c77d86c8c309", "filename": "gcc/gcov-dump.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgcov-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgcov-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-dump.c?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -138,7 +138,7 @@ static void\n print_version (void)\n {\n   printf (\"gcov-dump %s%s\\n\", pkgversion_string, version_string);\n-  printf (\"Copyright (C) 2019 Free Software Foundation, Inc.\\n\");\n+  printf (\"Copyright (C) 2020 Free Software Foundation, Inc.\\n\");\n   printf (\"This is free software; see the source for copying conditions.\\n\"\n   \t  \"There is NO warranty; not even for MERCHANTABILITY or \\n\"\n \t  \"FITNESS FOR A PARTICULAR PURPOSE.\\n\\n\");"}, {"sha": "88e7168aa4d2ec501010e8f5200765fda97e302c", "filename": "gcc/gcov-tool.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgcov-tool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgcov-tool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-tool.c?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -525,7 +525,7 @@ static void\n print_version (void)\n {\n   fnotice (stdout, \"%s %s%s\\n\", progname, pkgversion_string, version_string);\n-  fnotice (stdout, \"Copyright %s 2019 Free Software Foundation, Inc.\\n\",\n+  fnotice (stdout, \"Copyright %s 2020 Free Software Foundation, Inc.\\n\",\n            _(\"(C)\"));\n   fnotice (stdout,\n            _(\"This is free software; see the source for copying conditions.\\n\""}, {"sha": "3af5df2ab3eb1f7db4637751a02aa1e889620d73", "filename": "gcc/gcov.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -923,7 +923,7 @@ static void\n print_version (void)\n {\n   fnotice (stdout, \"gcov %s%s\\n\", pkgversion_string, version_string);\n-  fprintf (stdout, \"Copyright %s 2019 Free Software Foundation, Inc.\\n\",\n+  fprintf (stdout, \"Copyright %s 2020 Free Software Foundation, Inc.\\n\",\n \t   _(\"(C)\"));\n   fnotice (stdout,\n \t   _(\"This is free software; see the source for copying conditions.\\n\""}, {"sha": "f922b53b5698282a7a99acd5712fc994418c023a", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,3 +1,7 @@\n+2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gccgo.texi: Bump @copyrights-go year.\n+\n 2019-11-12  Martin Liska  <mliska@suse.cz>\n \n \t* go-lang.c (go_langhook_post_options):"}, {"sha": "d4b8279b83e077fe5ab8278498f4ec216c511f6b", "filename": "gcc/go/gccgo.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgo%2Fgccgo.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/gcc%2Fgo%2Fgccgo.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgccgo.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -12,7 +12,7 @@\n @include gcc-common.texi\n \n @c Copyright years for this manual.\n-@set copyrights-go 2010-2019\n+@set copyrights-go 2010-2020\n \n @copying\n @c man begin COPYRIGHT"}, {"sha": "495d23a857611279d1ae8a6c7cd9edd041052885", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,3 +1,7 @@\n+2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libgomp.texi: Bump @copying's copyright year.\n+\n 2019-12-31  Ayush Mittal  <ayush.m@samsung.com>\n \n \tPR libgomp/93065"}, {"sha": "d3a5b3102ff05e98dc06eee74563e716a42ff634", "filename": "libgomp/libgomp.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/libgomp%2Flibgomp.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/libgomp%2Flibgomp.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Flibgomp.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -7,7 +7,7 @@\n \n \n @copying\n-Copyright @copyright{} 2006-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 2006-2020 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.3 or"}, {"sha": "7b2bd055281be9610ee2c4ea4cfb53f23a359217", "filename": "libitm/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/libitm%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/libitm%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2FChangeLog?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,3 +1,7 @@\n+2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libitm.texi: Bump @copying's copyright year.\n+\n 2019-12-03  Szabolcs Nagy  <szabolcs.nagy@arm.com>\n \n \tPR libgomp/91938"}, {"sha": "30b166be66be6d8fc9e644041ce8ae762fdca629", "filename": "libitm/libitm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/libitm%2Flibitm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/libitm%2Flibitm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libitm%2Flibitm.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -7,7 +7,7 @@\n \n \n @copying\n-Copyright @copyright{} 2011-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 2011-2020 Free Software Foundation, Inc.\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2 or"}, {"sha": "552be9eeb521d49c49e5a724711faa626586ebe6", "filename": "libquadmath/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/libquadmath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/libquadmath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2FChangeLog?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -1,3 +1,7 @@\n+2020-01-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* libquadmath.texi: Bump @copying's copyright year.\n+\n 2019-09-27  Maciej W. Rozycki  <macro@wdc.com>\n \n \t* configure: Regenerate."}, {"sha": "253895f7ef9a68b9a94d06b1f6f48662738ca2b3", "filename": "libquadmath/libquadmath.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e7065b976573cb392d435856a5f9e5a6424a57c/libquadmath%2Flibquadmath.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e7065b976573cb392d435856a5f9e5a6424a57c/libquadmath%2Flibquadmath.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libquadmath%2Flibquadmath.texi?ref=7e7065b976573cb392d435856a5f9e5a6424a57c", "patch": "@@ -6,7 +6,7 @@\n @c %**end of header\n \n @copying\n-Copyright @copyright{} 2010-2019 Free Software Foundation, Inc.\n+Copyright @copyright{} 2010-2020 Free Software Foundation, Inc.\n \n @quotation\n Permission is granted to copy, distribute and/or modify this document"}]}