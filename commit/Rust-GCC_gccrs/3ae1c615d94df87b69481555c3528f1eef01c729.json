{"sha": "3ae1c615d94df87b69481555c3528f1eef01c729", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FlMWM2MTVkOTRkZjg3YjY5NDgxNTU1YzM1MjhmMWVlZjAxYzcyOQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-05-11T08:43:56Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-05-11T08:43:56Z"}, "message": "cpphash.c (collect_funlike_expansion): Make \"# is not followed by a macro argument name\" a pedwarn, not an error.\n\n\t* cpphash.c (collect_funlike_expansion): Make \"# is not\n\tfollowed by a macro argument name\" a pedwarn, not an error.\n\tPreserve the # in the output.  Suppress the warning if lang_asm.\n\n\t* gcc.dg/dg.exp: Scan .S files as well as .c files.\n\t* gcc.dg/20000510-1.S: New.\n\nFrom-SVN: r33841", "tree": {"sha": "b752ab06bbefdbddddf43f5724b9a97a28a6af2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b752ab06bbefdbddddf43f5724b9a97a28a6af2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ae1c615d94df87b69481555c3528f1eef01c729", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae1c615d94df87b69481555c3528f1eef01c729", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ae1c615d94df87b69481555c3528f1eef01c729", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ae1c615d94df87b69481555c3528f1eef01c729/comments", "author": null, "committer": null, "parents": [{"sha": "8fe3a87b4f1a25cc4cdb6a7e4123691a02f124b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fe3a87b4f1a25cc4cdb6a7e4123691a02f124b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fe3a87b4f1a25cc4cdb6a7e4123691a02f124b3"}], "stats": {"total": 51, "additions": 49, "deletions": 2}, "files": [{"sha": "fdf67d018aa6a493525afb354e82d868b6816513", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ae1c615d94df87b69481555c3528f1eef01c729", "patch": "@@ -1,3 +1,9 @@\n+2000-05-11  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* cpphash.c (collect_funlike_expansion): Make \"# is not\n+\tfollowed by a macro argument name\" a pedwarn, not an error.\n+\tPreserve the # in the output.  Suppress the warning if lang_asm.\n+\n Thu May 11 01:19:31 2000  Jeffrey A Law  (law@cygnus.com)\n \n \t* configure.in (hppa*64*-*-hpux11*): New target for PA64 support."}, {"sha": "1e61dafea1a8fb65370ddb9d48d6432e9e3f7ba7", "filename": "gcc/cpphash.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2Fcpphash.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2Fcpphash.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpphash.c?ref=3ae1c615d94df87b69481555c3528f1eef01c729", "patch": "@@ -639,7 +639,22 @@ collect_funlike_expansion (pfile, list, arglist, replacement)\n \tdefault:\n \tnorm:\n \t  if (last_token == STRIZE)\n-\t    cpp_error (pfile, \"# is not followed by a macro argument name\");\n+\t    {\n+\t      /* This is a mandatory diagnostic (6.10.3.2 para 1), but\n+\t\t in assembly language # may have some other\n+\t\t significance we don't know about, so suppress the\n+\t\t warning. */\n+\t      if (! CPP_OPTION (pfile, lang_asm))\n+\t\tcpp_pedwarn (pfile,\n+\t\t\t     \"# is not followed by a macro argument name\");\n+\t      if (TOK_PREV_WHITE (list, i))\n+\t\tCPP_ADJUST_WRITTEN (pfile, -1);\n+\t      if (TOK_PREV_WHITE (list, i-1))\n+\t\tCPP_PUTC (pfile, ' ');\n+\t      CPP_PUTC (pfile, '#');\n+\t      if (TOK_PREV_WHITE (list, i))\n+\t\tCPP_PUTC (pfile, ' ');\n+\t    }\n \t  CPP_PUTS (pfile, tok, len);\n \t  last_token = NORM;\n \t}"}, {"sha": "9c57a8d27322c52c098dfa01231e74139b89aa14", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3ae1c615d94df87b69481555c3528f1eef01c729", "patch": "@@ -1,3 +1,8 @@\n+2000-05-11  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* gcc.dg/dg.exp: Scan .S files as well as .c files.\n+\t* gcc.dg/20000510-1.S: New.\n+\n 2000-05-08  Catherine Moore  <clm@cygnus.com>\n \n \t* gcc.dg/unused-3.c: New."}, {"sha": "7d6508b3af5ca208696f10b7c3be1335f0725474", "filename": "gcc/testsuite/gcc.dg/20000510-1.S", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2Ftestsuite%2Fgcc.dg%2F20000510-1.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2Ftestsuite%2Fgcc.dg%2F20000510-1.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20000510-1.S?ref=3ae1c615d94df87b69481555c3528f1eef01c729", "patch": "@@ -0,0 +1,20 @@\n+/* Regression test - in assembly language, # may have some significance\n+   other than 'stringize macro argument' and therefore must be preserved\n+   in the output, and should not be warned about.  */\n+/* { dg-do preprocess } */\n+\n+#define foo() mov r0, #5  /* { dg-bogus \"not followed\" \"spurious warning\" } */\n+\n+entry:\n+\tfoo()\n+\n+/*\n+   { dg-final { if ![file exists 20000510-1.i] { return }\t} }\n+   { dg-final { set tmp [grep 20000510-1.i # line]\t\t} }\n+   { dg-final { if {[string length $tmp] > 0} \\{\t\t} }\n+   { dg-final {     pass \"20000510-1.S: # preservation\"\t\t} }\n+   { dg-final { \\} else \\{\t\t\t\t\t} }\n+   { dg-final {     fail \"20000510-1.S: # preservation\"\t\t} }\n+   { dg-final { \\}\t\t\t\t\t\t} }\n+*/\n+"}, {"sha": "e4b4a1fbf53ab071563b2b0aa25bcfbdd860f779", "filename": "gcc/testsuite/gcc.dg/dg.exp", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2Ftestsuite%2Fgcc.dg%2Fdg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ae1c615d94df87b69481555c3528f1eef01c729/gcc%2Ftestsuite%2Fgcc.dg%2Fdg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdg.exp?ref=3ae1c615d94df87b69481555c3528f1eef01c729", "patch": "@@ -63,7 +63,8 @@ if ![info exists DEFAULT_CFLAGS] then {\n dg-init\n \n # Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.c]] \"\" $DEFAULT_CFLAGS\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n \n # All done.\n dg-finish"}]}