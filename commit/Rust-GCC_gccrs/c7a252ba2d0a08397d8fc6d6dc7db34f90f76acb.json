{"sha": "c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzdhMjUyYmEyZDBhMDgzOTdkOGZjNmQ2ZGM3ZGIzNGY5MGY3NmFjYg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-03-25T16:32:43Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-03-25T16:33:12Z"}, "message": "c++: Fix invalid -Wduplicated-cond warning [PR94265]\n\nThis fixes a false-positive warning from -Wduplicate-cond in the presence of an\nif-statement with a non-empty init-statement.  Precisely determining whether a\nnon-empty init-statement has side effects seems tricky and error-prone, so this\npatch takes the route of unconditionally invalidating the condition chain when\nit encounters such an if-statement.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/94265\n\t* parser.c (cp_parser_selection_statement) <case RID_IF>: Invalidate the\n\tcurrent condition chain when the if-statement has a non-empty\n\tinit-statement.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/94265\n\t* g++.dg/warn/Wduplicated-cond1.C: New test.", "tree": {"sha": "7e34c9ee867c9b4b8a85e029608cd0bd476c87f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7e34c9ee867c9b4b8a85e029608cd0bd476c87f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/comments", "author": null, "committer": null, "parents": [{"sha": "05c13c439903eb78f109bcab62fd9a74f03a3c9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05c13c439903eb78f109bcab62fd9a74f03a3c9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05c13c439903eb78f109bcab62fd9a74f03a3c9b"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "34ccb9fa4c0445106bde23c123cd44b13cc009b5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "patch": "@@ -1,3 +1,10 @@\n+2020-03-25  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/94265\n+\t* parser.c (cp_parser_selection_statement) <case RID_IF>: Invalidate the\n+\tcurrent condition chain when the if-statement has a non-empty\n+\tinit-statement.\n+\n 2020-03-25  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/94319"}, {"sha": "0536365369162fa1da25ede940ed22dfb31092ce", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "patch": "@@ -11934,6 +11934,13 @@ cp_parser_selection_statement (cp_parser* parser, bool *if_p,\n \t      pedwarn (cp_lexer_peek_token (parser->lexer)->location, 0,\n \t\t       \"init-statement in selection statements only available \"\n \t\t       \"with %<-std=c++17%> or %<-std=gnu++17%>\");\n+\t    if (cp_lexer_next_token_is_not (parser->lexer, CPP_SEMICOLON))\n+\t      {\n+\t\t/* A non-empty init-statement can have arbitrary side\n+\t\t   effects.  */\n+\t\tdelete chain;\n+\t\tchain = NULL;\n+\t      }\n \t    cp_parser_init_statement (parser, &decl);\n \t  }\n "}, {"sha": "ddfdaa6da2f767f819c0810e8b6660671e77cdb3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "patch": "@@ -1,3 +1,8 @@\n+2020-03-25  Patrick Palka  <ppalka@redhat.com>\n+\n+\tPR c++/94265\n+\t* g++.dg/warn/Wduplicated-cond1.C: New test.\n+\n 2020-03-25  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/94131"}, {"sha": "e85920aaedf3452ea85152224751714559e42501", "filename": "gcc/testsuite/g++.dg/warn/Wduplicated-cond1.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWduplicated-cond1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWduplicated-cond1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWduplicated-cond1.C?ref=c7a252ba2d0a08397d8fc6d6dc7db34f90f76acb", "patch": "@@ -0,0 +1,16 @@\n+// PR c++/94265\n+// { dg-do compile { target c++17 } }\n+// { dg-additional-options \"-Wduplicated-cond\" }\n+\n+void\n+foo ()\n+{\n+  if (int a = 0; a)\n+  { }\n+  else if (a = 5; a) // { dg-message \"previously used here\" }\n+  { }\n+  else if (; a) // { dg-warning \"duplicated .if. condition\" }\n+  { }\n+  else if (int b = ++a; a)\n+  { }\n+}"}]}