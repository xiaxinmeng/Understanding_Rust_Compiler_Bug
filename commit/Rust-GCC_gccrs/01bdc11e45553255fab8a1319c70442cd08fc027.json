{"sha": "01bdc11e45553255fab8a1319c70442cd08fc027", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFiZGMxMWU0NTU1MzI1NWZhYjhhMTMxOWM3MDQ0MmNkMDhmYzAyNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2003-12-05T10:45:50Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2003-12-05T10:45:50Z"}, "message": "mips.c (mips_expand_call): Don't allow laziy binding for n32 & n64 abicalls.\n\n\t* config/mips/mips.c (mips_expand_call): Don't allow laziy binding\n\tfor n32 & n64 abicalls.\n\nFrom-SVN: r74324", "tree": {"sha": "65ad94bb8eb39f1b6d85b676a247c34c85e5c7dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65ad94bb8eb39f1b6d85b676a247c34c85e5c7dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01bdc11e45553255fab8a1319c70442cd08fc027", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bdc11e45553255fab8a1319c70442cd08fc027", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01bdc11e45553255fab8a1319c70442cd08fc027", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bdc11e45553255fab8a1319c70442cd08fc027/comments", "author": null, "committer": null, "parents": [{"sha": "f24e76ebc610fb66a3d905c551817650ef3ade92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f24e76ebc610fb66a3d905c551817650ef3ade92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f24e76ebc610fb66a3d905c551817650ef3ade92"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "e492f702dfde8ed53c312159378daa2715d0eaf9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bdc11e45553255fab8a1319c70442cd08fc027/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bdc11e45553255fab8a1319c70442cd08fc027/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01bdc11e45553255fab8a1319c70442cd08fc027", "patch": "@@ -1,3 +1,8 @@\n+2003-12-05  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.c (mips_expand_call): Don't allow laziy binding\n+\tfor n32 & n64 abicalls.\n+\n 2003-12-05  Richard Sandiford  <rsandifo@redhat.com>\n \n \tPR bootstrap/13145"}, {"sha": "2ed6ab167bfda907ff2d8a1b0b04b5824e918c0d", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bdc11e45553255fab8a1319c70442cd08fc027/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bdc11e45553255fab8a1319c70442cd08fc027/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=01bdc11e45553255fab8a1319c70442cd08fc027", "patch": "@@ -3187,7 +3187,13 @@ mips_expand_call (rtx result, rtx addr, rtx args_size, rtx aux, int sibcall_p)\n {\n   if (!call_insn_operand (addr, VOIDmode))\n     {\n-      if (TARGET_EXPLICIT_RELOCS && global_got_operand (addr, VOIDmode))\n+      /* If we're generating PIC, and this call is to a global function,\n+\t try to allow its address to be resolved lazily.  This isn't\n+\t possible for NewABI sibcalls since the value of $gp on entry\n+\t to the stub would be our caller's gp, not ours.  */\n+      if (TARGET_EXPLICIT_RELOCS\n+\t  && !(sibcall_p && TARGET_NEWABI)\n+\t  && global_got_operand (addr, VOIDmode))\n \t{\n \t  rtx high, lo_sum_symbol;\n "}]}