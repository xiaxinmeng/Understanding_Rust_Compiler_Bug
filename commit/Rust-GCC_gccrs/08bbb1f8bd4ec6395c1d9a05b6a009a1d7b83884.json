{"sha": "08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhiYmIxZjhiZDRlYzYzOTVjMWQ5YTA1YjZhMDA5YTFkN2I4Mzg4NA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-06-03T23:12:39Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-06-03T23:12:39Z"}, "message": "re PR tree-optimization/71316 (test case gcc.dg/tree-ssa/ssa-dom-thread-4.c fails starting with r236831)\n\n\tPR tree-optimization/71316\n\t* gcc.dg/tree-ssa/ssa-dom-thread-4.c: Update expected output.\n\nFrom-SVN: r237083", "tree": {"sha": "2b9a2d2d84cb506b17d10d3358a4cc9896c0aa2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b9a2d2d84cb506b17d10d3358a4cc9896c0aa2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884/comments", "author": null, "committer": null, "parents": [{"sha": "7c35235c321681ffc6752e8e29e3db374166108d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c35235c321681ffc6752e8e29e3db374166108d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c35235c321681ffc6752e8e29e3db374166108d"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "cd45cda0300eb9449f568bbb4084a4a40a67acc1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884", "patch": "@@ -1,3 +1,8 @@\n+2016-06-03  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/71316\n+\t* gcc.dg/tree-ssa/ssa-dom-thread-4.c: Update expected output.\n+\n 2016-06-03  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.dg/vect/vect-live-1.c: Remove dg-options.  Add"}, {"sha": "2dd91771003f5529bbd6e45d1caff1ec0df74b7b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-thread-4.c", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-4.c?ref=08bbb1f8bd4ec6395c1d9a05b6a009a1d7b83884", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */ \n-/* { dg-options \"-O2 -fdump-tree-dom2-details -std=gnu89\" } */\n+/* { dg-options \"-O2 -fdump-tree-vrp1-details -fdump-tree-dom2-details -std=gnu89\" } */\n struct bitmap_head_def;\n typedef struct bitmap_head_def *bitmap;\n typedef const struct bitmap_head_def *const_bitmap;\n@@ -76,8 +76,7 @@ bitmap_ior_and_compl (bitmap dst, const_bitmap a, const_bitmap b,\n \t skipping the known-true \"b_elt && kill_elt\" in the second\n \t condition.\n \n-   However, 3 of those 4 opportunities are ultimately eliminated by\n-   DOM optimizing away conditionals.  So there's only one jump threading\n-   opportunity left.  */\n-/* { dg-final { scan-tree-dump-times \"Threaded\" 1 \"dom2\" { target logical_op_short_circuit } } } */\n+   The !b_elt cases are picked up by VRP1 as jump threads.  The others\n+   are optimized by DOM.  */\n+/* { dg-final { scan-tree-dump-times \"Threaded\" 2 \"vrp1\" { target logical_op_short_circuit } } } */\n "}]}