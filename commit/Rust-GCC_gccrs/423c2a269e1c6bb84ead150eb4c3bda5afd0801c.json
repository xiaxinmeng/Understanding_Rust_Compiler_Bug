{"sha": "423c2a269e1c6bb84ead150eb4c3bda5afd0801c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDIzYzJhMjY5ZTFjNmJiODRlYWQxNTBlYjRjM2JkYTVhZmQwODAxYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2018-09-06T18:53:01Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2018-09-06T18:53:01Z"}, "message": "i386.md (fix_trunc<mode>_fisttp_i387_1): Remove.\n\n\t* config/i386/i386.md (fix_trunc<mode>_fisttp_i387_1): Remove.\n\tUpdate callers to gen_fix_trunc<mode>_i387_fisttp\n\t(fix_trunc<mode>_i387_fisttp): Change operand 0 predicate to\n\tnonimmediate_operand.\n\t(fix_trunc<mode>_i387_fisttp_with_temp): Remove insn pattern\n\tand corresponding splitters.\n\t(*fix_trunc<mode>_i387_1): Always expand with fix_trunc<mode>_i387.\n\t(fix_truncdi_i387): Change operand 0 predicate to nonimmediate_operand.\n\t(fix_truncdi_i387_with_temp): Remove insn pattern\n\tand corresponding splitters.\n\t(fix_trunc<mode>_i387): Change operand 0 predicate to\n\tnonimmediate_operand.\n\t(fix_trunc<mode>_i387_with_temp): Remove insn pattern\n\tand corresponding splitters.\n\t(*fistdi2_1): Remove.\n\t(fistdi2): Ditto.\n\t(fistdi2_with_temp): Remove insn pattern and corresponding splitters.\n\t(lrintxfdi2): Remove expander.  Reimplement as define_insn.\n\t(*fist<mode>2_1): Remove.\n\t(fist<mode>2): Ditto.\n\t(fist<mode>2_with_temp): Remove insn pattern and corresponding\n\tsplitters.\n\t(lrintxf<mode>2): Remove expander.  Reimplement as define_insn.\n\t(*fist<mode>2_<rounding>_1): Always expand with fist<mode>2_<rounding>.\n\t(fistdi2_<rounding>): Change operand 0 predicate to\n\tnonimmediate_operand.\n\t(fistdi2_<rounding>_with_temp): Remove insn pattern\n\tand corresponding splitters.\n\t(fist<mode>2_<rounding>): Change operand 0 predicate to\n\tnonimmediate_operand.\n\t(fist<mode>2_<rounding>_with_temp): Remove insn pattern\n\tand corresponding splitters.\n\n\t(*fixuns_trunc<mode>si2_avx512f_zext): Depend on TARGET_SSE_MATH.\n\nFrom-SVN: r264148", "tree": {"sha": "7081780d073a7e7d82ed49ec11107f5ea50656d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7081780d073a7e7d82ed49ec11107f5ea50656d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/423c2a269e1c6bb84ead150eb4c3bda5afd0801c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423c2a269e1c6bb84ead150eb4c3bda5afd0801c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/423c2a269e1c6bb84ead150eb4c3bda5afd0801c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/423c2a269e1c6bb84ead150eb4c3bda5afd0801c/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d9001072d3ed5a82b8277426e6dd41a1c605990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9001072d3ed5a82b8277426e6dd41a1c605990", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d9001072d3ed5a82b8277426e6dd41a1c605990"}], "stats": {"total": 425, "additions": 58, "deletions": 367}, "files": [{"sha": "d83d77fa31689dd4f799f78660ef567eaae871d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423c2a269e1c6bb84ead150eb4c3bda5afd0801c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423c2a269e1c6bb84ead150eb4c3bda5afd0801c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=423c2a269e1c6bb84ead150eb4c3bda5afd0801c", "patch": "@@ -1,3 +1,40 @@\n+2018-09-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (fix_trunc<mode>_fisttp_i387_1): Remove.\n+\tUpdate callers to gen_fix_trunc<mode>_i387_fisttp\n+\t(fix_trunc<mode>_i387_fisttp): Change operand 0 predicate to\n+\tnonimmediate_operand.\n+\t(fix_trunc<mode>_i387_fisttp_with_temp): Remove insn pattern\n+\tand corresponding splitters.\n+\t(*fix_trunc<mode>_i387_1): Always expand with fix_trunc<mode>_i387.\n+\t(fix_truncdi_i387): Change operand 0 predicate to nonimmediate_operand.\n+\t(fix_truncdi_i387_with_temp): Remove insn pattern\n+\tand corresponding splitters.\n+\t(fix_trunc<mode>_i387): Change operand 0 predicate to\n+\tnonimmediate_operand.\n+\t(fix_trunc<mode>_i387_with_temp): Remove insn pattern\n+\tand corresponding splitters.\n+\t(*fistdi2_1): Remove.\n+\t(fistdi2): Ditto.\n+\t(fistdi2_with_temp): Remove insn pattern and corresponding splitters.\n+\t(lrintxfdi2): Remove expander.  Reimplement as define_insn.\n+\t(*fist<mode>2_1): Remove.\n+\t(fist<mode>2): Ditto.\n+\t(fist<mode>2_with_temp): Remove insn pattern and corresponding\n+\tsplitters.\n+\t(lrintxf<mode>2): Remove expander.  Reimplement as define_insn.\n+\t(*fist<mode>2_<rounding>_1): Always expand with fist<mode>2_<rounding>.\n+\t(fistdi2_<rounding>): Change operand 0 predicate to\n+\tnonimmediate_operand.\n+\t(fistdi2_<rounding>_with_temp): Remove insn pattern\n+\tand corresponding splitters.\n+\t(fist<mode>2_<rounding>): Change operand 0 predicate to\n+\tnonimmediate_operand.\n+\t(fist<mode>2_<rounding>_with_temp): Remove insn pattern\n+\tand corresponding splitters.\n+\n+\t(*fixuns_trunc<mode>si2_avx512f_zext): Depend on TARGET_SSE_MATH.\n+\n 2018-09-06  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \t* varasm.c (output_constructor_regular_field): Check TYPE_SIZE_UNIT of"}, {"sha": "a35c8a55cc6d41f0c2a1eb1f0aa368d17ff7ea24", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 21, "deletions": 367, "changes": 388, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/423c2a269e1c6bb84ead150eb4c3bda5afd0801c/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/423c2a269e1c6bb84ead150eb4c3bda5afd0801c/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=423c2a269e1c6bb84ead150eb4c3bda5afd0801c", "patch": "@@ -4736,7 +4736,7 @@\n {\n   if (TARGET_FISTTP)\n    {\n-     emit_insn (gen_fix_truncdi_fisttp_i387_1 (operands[0], operands[1]));\n+     emit_insn (gen_fix_truncdi_i387_fisttp (operands[0], operands[1]));\n      DONE;\n    }\n })\n@@ -4750,7 +4750,7 @@\n   if (TARGET_FISTTP\n       && !(TARGET_64BIT && SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH))\n    {\n-     emit_insn (gen_fix_truncdi_fisttp_i387_1 (operands[0], operands[1]));\n+     emit_insn (gen_fix_truncdi_i387_fisttp (operands[0], operands[1]));\n      DONE;\n    }\n   if (TARGET_64BIT && SSE_FLOAT_MODE_P (<MODE>mode))\n@@ -4773,7 +4773,7 @@\n {\n   if (TARGET_FISTTP)\n    {\n-     emit_insn (gen_fix_truncsi_fisttp_i387_1 (operands[0], operands[1]));\n+     emit_insn (gen_fix_truncsi_i387_fisttp (operands[0], operands[1]));\n      DONE;\n    }\n })\n@@ -4787,7 +4787,7 @@\n   if (TARGET_FISTTP\n       && !(SSE_FLOAT_MODE_P (<MODE>mode) && TARGET_SSE_MATH))\n    {\n-     emit_insn (gen_fix_truncsi_fisttp_i387_1 (operands[0], operands[1]));\n+     emit_insn (gen_fix_truncsi_i387_fisttp (operands[0], operands[1]));\n      DONE;\n    }\n   if (SSE_FLOAT_MODE_P (<MODE>mode))\n@@ -4811,7 +4811,7 @@\n {\n   if (TARGET_FISTTP)\n    {\n-     emit_insn (gen_fix_trunchi_fisttp_i387_1 (operands[0], operands[1]));\n+     emit_insn (gen_fix_trunchi_i387_fisttp (operands[0], operands[1]));\n      DONE;\n    }\n })\n@@ -4875,7 +4875,7 @@\n \t(zero_extend:DI\n \t  (unsigned_fix:SI\n \t    (match_operand:MODEF 1 \"nonimmediate_operand\" \"vm\"))))]\n-  \"TARGET_64BIT && TARGET_AVX512F\"\n+  \"TARGET_64BIT && TARGET_AVX512F && TARGET_SSE_MATH\"\n   \"vcvtt<ssemodesuffix>2usi\\t{%1, %k0|%k0, %1}\"\n   [(set_attr \"type\" \"sseicvt\")\n    (set_attr \"prefix\" \"evex\")\n@@ -4940,35 +4940,8 @@\n   [(set (match_dup 2) (match_dup 1))\n    (set (match_dup 0) (fix:SWI48 (match_dup 2)))])\n \n-(define_insn_and_split \"fix_trunc<mode>_fisttp_i387_1\"\n-  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\")\n-\t(fix:SWI248x (match_operand 1 \"register_operand\")))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && TARGET_FISTTP\n-   && !((SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\n-\t && (TARGET_64BIT || <MODE>mode != DImode))\n-\t&& TARGET_SSE_MATH)\n-   && can_create_pseudo_p ()\"\n-  \"#\"\n-  \"&& 1\"\n-  [(const_int 0)]\n-{\n-  if (memory_operand (operands[0], VOIDmode))\n-    emit_insn (gen_fix_trunc<mode>_i387_fisttp (operands[0], operands[1]));\n-  else\n-    {\n-      operands[2] = assign_386_stack_local (<MODE>mode, SLOT_TEMP);\n-      emit_insn (gen_fix_trunc<mode>_i387_fisttp_with_temp (operands[0],\n-\t\t\t\t\t\t\t    operands[1],\n-\t\t\t\t\t\t\t    operands[2]));\n-    }\n-  DONE;\n-}\n-  [(set_attr \"type\" \"fisttp\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n (define_insn \"fix_trunc<mode>_i387_fisttp\"\n-  [(set (match_operand:SWI248x 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"=m\")\n \t(fix:SWI248x (match_operand 1 \"register_operand\" \"f\")))\n    (clobber (match_scratch:XF 2 \"=&1f\"))]\n   \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n@@ -4980,39 +4953,6 @@\n   [(set_attr \"type\" \"fisttp\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"fix_trunc<mode>_i387_fisttp_with_temp\"\n-  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(fix:SWI248x (match_operand 1 \"register_operand\" \"f,f\")))\n-   (clobber (match_operand:SWI248x 2 \"memory_operand\" \"=X,m\"))\n-   (clobber (match_scratch:XF 3 \"=&1f,&1f\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && TARGET_FISTTP\n-   && !((SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\n-\t&& (TARGET_64BIT || <MODE>mode != DImode))\n-\t&& TARGET_SSE_MATH)\"\n-  \"#\"\n-  [(set_attr \"type\" \"fisttp\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_split\n-  [(set (match_operand:SWI248x 0 \"register_operand\")\n-\t(fix:SWI248x (match_operand 1 \"register_operand\")))\n-   (clobber (match_operand:SWI248x 2 \"memory_operand\"))\n-   (clobber (match_scratch 3))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 2) (fix:SWI248x (match_dup 1)))\n-\t      (clobber (match_dup 3))])\n-   (set (match_dup 0) (match_dup 2))])\n-\n-(define_split\n-  [(set (match_operand:SWI248x 0 \"memory_operand\")\n-\t(fix:SWI248x (match_operand 1 \"register_operand\")))\n-   (clobber (match_operand:SWI248x 2 \"memory_operand\"))\n-   (clobber (match_scratch 3))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (fix:SWI248x (match_dup 1)))\n-\t      (clobber (match_dup 3))])])\n-\n ;; See the comments in i386.h near OPTIMIZE_MODE_SWITCHING for the description\n ;; of the machinery. Please note the clobber of FLAGS_REG. In i387 control\n ;; word calculation (inserted by LCM in mode switching pass) a FLAGS_REG\n@@ -5035,24 +4975,17 @@\n \n   operands[2] = assign_386_stack_local (HImode, SLOT_CW_STORED);\n   operands[3] = assign_386_stack_local (HImode, SLOT_CW_TRUNC);\n-  if (memory_operand (operands[0], VOIDmode))\n-    emit_insn (gen_fix_trunc<mode>_i387 (operands[0], operands[1],\n-\t\t\t\t\t operands[2], operands[3]));\n-  else\n-    {\n-      operands[4] = assign_386_stack_local (<MODE>mode, SLOT_TEMP);\n-      emit_insn (gen_fix_trunc<mode>_i387_with_temp (operands[0], operands[1],\n-\t\t\t\t\t\t     operands[2], operands[3],\n-\t\t\t\t\t\t     operands[4]));\n-    }\n+\n+  emit_insn (gen_fix_trunc<mode>_i387 (operands[0], operands[1],\n+\t\t\t\t       operands[2], operands[3]));\n   DONE;\n }\n   [(set_attr \"type\" \"fistp\")\n    (set_attr \"i387_cw\" \"trunc\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fix_truncdi_i387\"\n-  [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m\")\n \t(fix:DI (match_operand 1 \"register_operand\" \"f\")))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))\n@@ -5065,50 +4998,8 @@\n    (set_attr \"i387_cw\" \"trunc\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"fix_truncdi_i387_with_temp\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(fix:DI (match_operand 1 \"register_operand\" \"f,f\")))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n-   (clobber (match_scratch:XF 5 \"=&1f,&1f\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && !TARGET_FISTTP\n-   && !(TARGET_64BIT && SSE_FLOAT_MODE_P (GET_MODE (operands[1])))\"\n-  \"#\"\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"trunc\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\")\n-\t(fix:DI (match_operand 1 \"register_operand\")))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\"))\n-   (clobber (match_scratch 5))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 4) (fix:DI (match_dup 1)))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))\n-\t      (clobber (match_dup 5))])\n-   (set (match_dup 0) (match_dup 4))])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"memory_operand\")\n-\t(fix:DI (match_operand 1 \"register_operand\")))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\"))\n-   (clobber (match_scratch 5))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (fix:DI (match_dup 1)))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))\n-\t      (clobber (match_dup 5))])])\n-\n (define_insn \"fix_trunc<mode>_i387\"\n-  [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m\")\n \t(fix:SWI24 (match_operand 1 \"register_operand\" \"f\")))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n    (use (match_operand:HI 3 \"memory_operand\" \"m\"))]\n@@ -5120,43 +5011,6 @@\n    (set_attr \"i387_cw\" \"trunc\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"fix_trunc<mode>_i387_with_temp\"\n-  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(fix:SWI24 (match_operand 1 \"register_operand\" \"f,f\")))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\" \"=X,m\"))]\n-  \"X87_FLOAT_MODE_P (GET_MODE (operands[1]))\n-   && !TARGET_FISTTP\n-   && !SSE_FLOAT_MODE_P (GET_MODE (operands[1]))\"\n-  \"#\"\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"trunc\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_split\n-  [(set (match_operand:SWI24 0 \"register_operand\")\n-\t(fix:SWI24 (match_operand 1 \"register_operand\")))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\"))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 4) (fix:SWI24 (match_dup 1)))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))])\n-   (set (match_dup 0) (match_dup 4))])\n-\n-(define_split\n-  [(set (match_operand:SWI24 0 \"memory_operand\")\n-\t(fix:SWI24 (match_operand 1 \"register_operand\")))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\"))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (fix:SWI24 (match_dup 1)))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))])])\n-\n (define_insn \"x86_fnstcw_1\"\n   [(set (match_operand:HI 0 \"memory_operand\" \"=m\")\n \t(unspec:HI [(reg:HI FPCR_REG)] UNSPEC_FSTCW))]\n@@ -16554,31 +16408,8 @@\n   DONE;\n })\n \n-(define_insn_and_split \"*fistdi2_1\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FIST))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && can_create_pseudo_p ()\"\n-  \"#\"\n-  \"&& 1\"\n-  [(const_int 0)]\n-{\n-  if (memory_operand (operands[0], VOIDmode))\n-    emit_insn (gen_fistdi2 (operands[0], operands[1]));\n-  else\n-    {\n-      operands[2] = assign_386_stack_local (DImode, SLOT_TEMP);\n-      emit_insn (gen_fistdi2_with_temp (operands[0], operands[1],\n-\t\t\t\t\t operands[2]));\n-    }\n-  DONE;\n-}\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_insn \"fistdi2\"\n-  [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n+(define_insn \"lrintxfdi2\"\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n \t\t   UNSPEC_FIST))\n    (clobber (match_scratch:XF 2 \"=&1f\"))]\n@@ -16587,98 +16418,15 @@\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"fistdi2_with_temp\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t\t   UNSPEC_FIST))\n-   (clobber (match_operand:DI 2 \"memory_operand\" \"=X,m\"))\n-   (clobber (match_scratch:XF 3 \"=&1f,&1f\"))]\n-  \"TARGET_USE_FANCY_MATH_387\"\n-  \"#\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FIST))\n-   (clobber (match_operand:DI 2 \"memory_operand\"))\n-   (clobber (match_scratch 3))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 2) (unspec:DI [(match_dup 1)] UNSPEC_FIST))\n-\t      (clobber (match_dup 3))])\n-   (set (match_dup 0) (match_dup 2))])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"memory_operand\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   UNSPEC_FIST))\n-   (clobber (match_operand:DI 2 \"memory_operand\"))\n-   (clobber (match_scratch 3))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0) (unspec:DI [(match_dup 1)] UNSPEC_FIST))\n-\t      (clobber (match_dup 3))])])\n-\n-(define_insn_and_split \"*fist<mode>2_1\"\n-  [(set (match_operand:SWI24 0 \"register_operand\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      UNSPEC_FIST))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && can_create_pseudo_p ()\"\n-  \"#\"\n-  \"&& 1\"\n-  [(const_int 0)]\n-{\n-  operands[2] = assign_386_stack_local (<MODE>mode, SLOT_TEMP);\n-  emit_insn (gen_fist<mode>2_with_temp (operands[0], operands[1],\n-\t\t\t\t\toperands[2]));\n-  DONE;\n-}\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_insn \"fist<mode>2\"\n-  [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n+(define_insn \"lrintxf<mode>2\"\n+  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m\")\n \t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n \t\t      UNSPEC_FIST))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"* return output_fix_trunc (insn, operands, false);\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"fist<mode>2_with_temp\"\n-  [(set (match_operand:SWI24 0 \"register_operand\" \"=r\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n-\t\t      UNSPEC_FIST))\n-   (clobber (match_operand:SWI24 2 \"memory_operand\" \"=m\"))]\n-  \"TARGET_USE_FANCY_MATH_387\"\n-  \"#\"\n-  [(set_attr \"type\" \"fpspc\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_split\n-  [(set (match_operand:SWI24 0 \"register_operand\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      UNSPEC_FIST))\n-   (clobber (match_operand:SWI24 2 \"memory_operand\"))]\n-  \"reload_completed\"\n-  [(set (match_dup 2) (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST))\n-   (set (match_dup 0) (match_dup 2))])\n-\n-(define_split\n-  [(set (match_operand:SWI24 0 \"memory_operand\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      UNSPEC_FIST))\n-   (clobber (match_operand:SWI24 2 \"memory_operand\"))]\n-  \"reload_completed\"\n-  [(set (match_dup 0) (unspec:SWI24 [(match_dup 1)] UNSPEC_FIST))])\n-\n-(define_expand \"lrintxf<mode>2\"\n-  [(set (match_operand:SWI248x 0 \"nonimmediate_operand\")\n-     (unspec:SWI248x [(match_operand:XF 1 \"register_operand\")]\n-\t\t     UNSPEC_FIST))]\n-  \"TARGET_USE_FANCY_MATH_387\")\n-\n (define_expand \"lrint<MODEF:mode><SWI48:mode>2\"\n   [(set (match_operand:SWI48 0 \"nonimmediate_operand\")\n      (unspec:SWI48 [(match_operand:MODEF 1 \"register_operand\")]\n@@ -16918,24 +16666,17 @@\n \n   operands[2] = assign_386_stack_local (HImode, SLOT_CW_STORED);\n   operands[3] = assign_386_stack_local (HImode, SLOT_CW_<ROUNDING>);\n-  if (memory_operand (operands[0], VOIDmode))\n-    emit_insn (gen_fist<mode>2_<rounding> (operands[0], operands[1],\n-\t\t\t\t\t   operands[2], operands[3]));\n-  else\n-    {\n-      operands[4] = assign_386_stack_local (<MODE>mode, SLOT_TEMP);\n-      emit_insn (gen_fist<mode>2_<rounding>_with_temp\n-\t\t  (operands[0], operands[1], operands[2],\n-\t\t   operands[3], operands[4]));\n-    }\n+\n+  emit_insn (gen_fist<mode>2_<rounding> (operands[0], operands[1],\n+\t\t\t\t\t operands[2], operands[3]));\n   DONE;\n }\n   [(set_attr \"type\" \"fistp\")\n    (set_attr \"i387_cw\" \"<rounding>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n (define_insn \"fistdi2_<rounding>\"\n-  [(set (match_operand:DI 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m\")\n \t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f\")]\n \t\t   FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n@@ -16948,54 +16689,8 @@\n    (set_attr \"i387_cw\" \"<rounding>\")\n    (set_attr \"mode\" \"DI\")])\n \n-(define_insn \"fistdi2_<rounding>_with_temp\"\n-  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t\t   FIST_ROUNDING))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\" \"=X,m\"))\n-   (clobber (match_scratch:XF 5 \"=&1f,&1f\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-  \"#\"\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"<rounding>\")\n-   (set_attr \"mode\" \"DI\")])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   FIST_ROUNDING))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\"))\n-   (clobber (match_scratch 5))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 4)\n-\t\t   (unspec:DI [(match_dup 1)] FIST_ROUNDING))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))\n-\t      (clobber (match_dup 5))])\n-   (set (match_dup 0) (match_dup 4))])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"memory_operand\")\n-\t(unspec:DI [(match_operand:XF 1 \"register_operand\")]\n-\t\t   FIST_ROUNDING))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:DI 4 \"memory_operand\"))\n-   (clobber (match_scratch 5))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t\t   (unspec:DI [(match_dup 1)] FIST_ROUNDING))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))\n-\t      (clobber (match_dup 5))])])\n-\n (define_insn \"fist<mode>2_<rounding>\"\n-  [(set (match_operand:SWI24 0 \"memory_operand\" \"=m\")\n+  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m\")\n \t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f\")]\n \t\t      FIST_ROUNDING))\n    (use (match_operand:HI 2 \"memory_operand\" \"m\"))\n@@ -17007,47 +16702,6 @@\n    (set_attr \"i387_cw\" \"<rounding>\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"fist<mode>2_<rounding>_with_temp\"\n-  [(set (match_operand:SWI24 0 \"nonimmediate_operand\" \"=m,?r\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\" \"f,f\")]\n-\t\t      FIST_ROUNDING))\n-   (use (match_operand:HI 2 \"memory_operand\" \"m,m\"))\n-   (use (match_operand:HI 3 \"memory_operand\" \"m,m\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\" \"=X,m\"))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && flag_unsafe_math_optimizations\"\n-  \"#\"\n-  [(set_attr \"type\" \"fistp\")\n-   (set_attr \"i387_cw\" \"<rounding>\")\n-   (set_attr \"mode\" \"<MODE>\")])\n-\n-(define_split\n-  [(set (match_operand:SWI24 0 \"register_operand\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      FIST_ROUNDING))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\"))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 4)\n-\t\t   (unspec:SWI24 [(match_dup 1)] FIST_ROUNDING))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))])\n-   (set (match_dup 0) (match_dup 4))])\n-\n-(define_split\n-  [(set (match_operand:SWI24 0 \"memory_operand\")\n-\t(unspec:SWI24 [(match_operand:XF 1 \"register_operand\")]\n-\t\t      FIST_ROUNDING))\n-   (use (match_operand:HI 2 \"memory_operand\"))\n-   (use (match_operand:HI 3 \"memory_operand\"))\n-   (clobber (match_operand:SWI24 4 \"memory_operand\"))]\n-  \"reload_completed\"\n-  [(parallel [(set (match_dup 0)\n-\t\t   (unspec:SWI24 [(match_dup 1)] FIST_ROUNDING))\n-\t      (use (match_dup 2))\n-\t      (use (match_dup 3))])])\n-\n (define_expand \"l<rounding_insn>xf<mode>2\"\n   [(parallel [(set (match_operand:SWI248x 0 \"nonimmediate_operand\")\n \t\t   (unspec:SWI248x [(match_operand:XF 1 \"register_operand\")]"}]}