{"sha": "5289b66589cf2d63bf7cc780322d2d81e198970b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI4OWI2NjU4OWNmMmQ2M2JmN2NjNzgwMzIyZDJkODFlMTk4OTcwYg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-02-17T22:48:50Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1994-02-17T22:48:50Z"}, "message": "(decl_attributes): Decode section attribute.\n\nFrom-SVN: r6582", "tree": {"sha": "a6087e66778ee48340da0f8fdb1208517275e3b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6087e66778ee48340da0f8fdb1208517275e3b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5289b66589cf2d63bf7cc780322d2d81e198970b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5289b66589cf2d63bf7cc780322d2d81e198970b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5289b66589cf2d63bf7cc780322d2d81e198970b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5289b66589cf2d63bf7cc780322d2d81e198970b/comments", "author": null, "committer": null, "parents": [{"sha": "7ffa4f13f0dd735da844b9ce261cb2b320b6771b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ffa4f13f0dd735da844b9ce261cb2b320b6771b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ffa4f13f0dd735da844b9ce261cb2b320b6771b"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "492ccfc345194ebe924a484553ae07c08bcd9e7e", "filename": "gcc/c-common.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5289b66589cf2d63bf7cc780322d2d81e198970b/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5289b66589cf2d63bf7cc780322d2d81e198970b/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=5289b66589cf2d63bf7cc780322d2d81e198970b", "patch": "@@ -207,6 +207,7 @@ decl_attributes (decl, attributes)\n      tree decl, attributes;\n {\n   tree a;\n+\n   for (a = attributes; a; a = TREE_CHAIN (a))\n     if (TREE_VALUE (a) == get_identifier (\"packed\"))\n       {\n@@ -253,6 +254,32 @@ decl_attributes (decl, attributes)\n \tif (i == NUM_MACHINE_MODES)\n \t  error (\"unknown machine mode `%s'\", specified_name);\n       }\n+    else if (TREE_VALUE (a) != 0\n+\t     && TREE_CODE (TREE_VALUE (a)) == TREE_LIST\n+\t     && TREE_PURPOSE (TREE_VALUE (a)) == get_identifier (\"section\"))\n+      {\n+#ifdef ASM_OUTPUT_SECTION_NAME\n+\tif (TREE_CODE (decl) == FUNCTION_DECL || TREE_CODE (decl) == VAR_DECL)\n+\t  {\n+\t    if (TREE_CODE (decl) == VAR_DECL && current_function_decl != NULL_TREE)\n+\t      error (\"section attribute cannot be specified for local variables\");\n+\t    /* The decl may have already been given a section attribute from\n+\t       a previous declaration.  Ensure they match.  */\n+\t    else if (DECL_SECTION_NAME (decl) != NULL_TREE\n+\t\t     && strcmp (TREE_STRING_POINTER (DECL_SECTION_NAME (decl)),\n+\t\t\t\tTREE_STRING_POINTER (TREE_VALUE (TREE_VALUE (a)))) != 0)\n+\t      error_with_decl (decl,\n+\t\t\t       \"section of `%s' conflicts with previous declaration\");\n+\t    else\n+\t      DECL_SECTION_NAME (decl) = TREE_VALUE (TREE_VALUE (a));\n+\t  }\n+\telse\n+\t  error_with_decl (decl,\n+\t\t\t   \"section attribute not allowed for `%s'\");\n+#else\n+\terror_with_decl (decl, \"section attributes are not supported for this target\");\n+#endif\n+      }\n     else if (TREE_VALUE (a) != 0\n \t     && TREE_CODE (TREE_VALUE (a)) == TREE_LIST\n \t     && TREE_PURPOSE (TREE_VALUE (a)) == get_identifier (\"aligned\"))"}]}