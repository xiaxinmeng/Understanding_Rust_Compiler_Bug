{"sha": "02f08eef46dbf257e60d935123ab72f22789ddd6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJmMDhlZWY0NmRiZjI1N2U2MGQ5MzUxMjNhYjcyZjIyNzg5ZGRkNg==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-05-10T11:24:50Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2021-05-10T11:24:50Z"}, "message": "Ensure generic arguments are resolved for MethodCallExpr\n\nMethod calls also support a turbo fish such as: instance.method()::<a,b>,\nthese need to name resolved before they can be type resolved even though\nthe actual method is resolved in the type resolution phase.", "tree": {"sha": "05ac447361e6f022aafacb55242ff33df3d6963e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/05ac447361e6f022aafacb55242ff33df3d6963e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02f08eef46dbf257e60d935123ab72f22789ddd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02f08eef46dbf257e60d935123ab72f22789ddd6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02f08eef46dbf257e60d935123ab72f22789ddd6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02f08eef46dbf257e60d935123ab72f22789ddd6/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fa08ea79cd30a7d8dd9c781a6247806a0dfe581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fa08ea79cd30a7d8dd9c781a6247806a0dfe581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fa08ea79cd30a7d8dd9c781a6247806a0dfe581"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "dc16573c51fad91187a046b201f0be44c529e2c1", "filename": "gcc/rust/resolve/rust-ast-resolve-item.h", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02f08eef46dbf257e60d935123ab72f22789ddd6/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02f08eef46dbf257e60d935123ab72f22789ddd6/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-item.h?ref=02f08eef46dbf257e60d935123ab72f22789ddd6", "patch": "@@ -200,14 +200,22 @@ class ResolveItem : public ResolverBase\n \n   void visit (AST::Method &method) override\n   {\n-    if (method.has_return_type ())\n-      ResolveType::go (method.get_return_type ().get (), method.get_node_id ());\n-\n     NodeId scope_node_id = method.get_node_id ();\n     resolver->get_name_scope ().push (scope_node_id);\n     resolver->get_type_scope ().push (scope_node_id);\n+    resolver->get_label_scope ().push (scope_node_id);\n     resolver->push_new_name_rib (resolver->get_name_scope ().peek ());\n     resolver->push_new_type_rib (resolver->get_type_scope ().peek ());\n+    resolver->push_new_label_rib (resolver->get_type_scope ().peek ());\n+\n+    if (method.has_generics ())\n+      {\n+\tfor (auto &generic : method.get_generic_params ())\n+\t  ResolveGenericParam::go (generic.get (), method.get_node_id ());\n+      }\n+\n+    if (method.has_return_type ())\n+      ResolveType::go (method.get_return_type ().get (), method.get_node_id ());\n \n     // self turns into (self: Self) as a function param\n     AST::SelfParam &self_param = method.get_self_param ();\n@@ -248,6 +256,7 @@ class ResolveItem : public ResolverBase\n \n     resolver->get_name_scope ().pop ();\n     resolver->get_type_scope ().pop ();\n+    resolver->get_label_scope ().pop ();\n   }\n \n private:"}]}