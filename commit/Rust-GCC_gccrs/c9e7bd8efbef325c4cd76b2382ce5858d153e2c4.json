{"sha": "c9e7bd8efbef325c4cd76b2382ce5858d153e2c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzllN2JkOGVmYmVmMzI1YzRjZDc2YjIzODJjZTU4NThkMTUzZTJjNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-22T13:09:00Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-22T13:09:00Z"}, "message": "[multiple changes]\n\n2009-06-22  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Check_Overriding_Indicator): Clean up code, make warning\n\tunconditional rather than a style check, because a formal name out of\n\torder is suspicious.\n\n2009-06-22  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Locate_Directory): Indicate the project name when\n\tcreating a directory automatically.\n\n2009-06-22  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch3.adb (Create_Constrained_Components): For a subtype of an\n\tuntagged derived type, add a hidden component for every constrained\n\tdiscriminant of the parent type to keep record layout consistent.\n\nFrom-SVN: r148792", "tree": {"sha": "e92efea704727ffef2eba16c1664d278b20bfe2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e92efea704727ffef2eba16c1664d278b20bfe2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/comments", "author": null, "committer": null, "parents": [{"sha": "7cea01df512512ff18e5cb5fe38cc84c5048f130", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cea01df512512ff18e5cb5fe38cc84c5048f130", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cea01df512512ff18e5cb5fe38cc84c5048f130"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "343de41a157dd2758ce818e7b80508a2f18a869f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9e7bd8efbef325c4cd76b2382ce5858d153e2c4", "patch": "@@ -1,3 +1,20 @@\n+2009-06-22  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Overriding_Indicator): Clean up code, make warning\n+\tunconditional rather than a style check, because a formal name out of\n+\torder is suspicious.\n+\n+2009-06-22  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Locate_Directory): Indicate the project name when\n+\tcreating a directory automatically.\n+\n+2009-06-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch3.adb (Create_Constrained_Components): For a subtype of an\n+\tuntagged derived type, add a hidden component for every constrained\n+\tdiscriminant of the parent type to keep record layout consistent.\n+\n 2009-06-22  Thomas Quinot  <quinot@adacore.com>\n \n \t* exp_ch3.adb: Minor code reorganization (avoid an unnecessary tree"}, {"sha": "2f8b027fdac06433d8541ce6b7d5a0d3c5794bf2", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=c9e7bd8efbef325c4cd76b2382ce5858d153e2c4", "patch": "@@ -6551,7 +6551,8 @@ package body Prj.Nmsc is\n                         Write_Str (Create);\n                         Write_Str (\" directory \"\"\");\n                         Write_Str (Full_Path_Name.all);\n-                        Write_Line (\"\"\" created\");\n+                        Write_Str (\"\"\" created for project \");\n+                        Write_Line (Get_Name_String (Project.Name));\n                      end if;\n \n                   exception"}, {"sha": "3e334686b738905de57d9424ebbb95378c05f1a8", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=c9e7bd8efbef325c4cd76b2382ce5858d153e2c4", "patch": "@@ -11246,9 +11246,9 @@ package body Sem_Ch3 is\n            and then Is_Completely_Hidden (Old_Compon)\n          then\n             --  This is a shadow discriminant created for a discriminant of\n-            --  the parent type that is one of several renamed by the same\n-            --  new discriminant. Give the shadow discriminant an internal\n-            --  name that cannot conflict with that of visible components.\n+            --  the parent type, which needs to be present in the subtype.\n+            --  Give the shadow discriminant an internal name that cannot\n+            --  conflict with that of visible components.\n \n             Set_Chars (New_Compon, New_Internal_Name ('C'));\n          end if;\n@@ -11351,10 +11351,11 @@ package body Sem_Ch3 is\n \n          --  For an untagged derived subtype, the number of discriminants may\n          --  be smaller than the number of inherited discriminants, because\n-         --  several of them may be renamed by a single new discriminant.\n-         --  In this case, add the hidden discriminants back into the subtype,\n-         --  because otherwise the size of the subtype is computed incorrectly\n-         --  in GCC 4.1.\n+         --  several of them may be renamed by a single new discriminant or\n+         --  constrained. In this case, add the hidden discriminants back into\n+         --  the subtype, because they need to be present if the optimizer of\n+         --  the GCC 4.x back-end decides to break apart assignments between\n+         --  objects using the parent view into member-wise assignments.\n \n          Num_Gird := 0;\n \n@@ -11401,8 +11402,15 @@ package body Sem_Ch3 is\n                         --  component for the current old discriminant.\n \n                         New_C := Create_Component (Old_Discr);\n-                        Set_Original_Record_Component  (New_C, Old_Discr);\n+                        Set_Original_Record_Component (New_C, Old_Discr);\n                      end if;\n+\n+                  else\n+                     --  The constraint has eliminated the old discriminant.\n+                     --  Introduce a shadow component.\n+\n+                     New_C := Create_Component (Old_Discr);\n+                     Set_Original_Record_Component (New_C, Old_Discr);\n                   end if;\n \n                   Next_Elmt (Constr);"}, {"sha": "1b4abcb6e6fe64e2bb40d89cd726deca6bf86198", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9e7bd8efbef325c4cd76b2382ce5858d153e2c4/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=c9e7bd8efbef325c4cd76b2382ce5858d153e2c4", "patch": "@@ -4381,8 +4381,7 @@ package body Sem_Ch6 is\n       --  often carry names that reflect the type, and it is not worthwhile\n       --  requiring that their names match.\n \n-      if Style_Check\n-        and then Present (Overridden_Subp)\n+      if Present (Overridden_Subp)\n         and then Nkind (Subp) /= N_Defining_Operator_Symbol\n       then\n          declare\n@@ -4393,6 +4392,14 @@ package body Sem_Ch6 is\n             Form1 := First_Formal (Subp);\n             Form2 := First_Formal (Overridden_Subp);\n \n+            --  If the overriding operation is a synchronized operation, skip\n+            --  the first parameter of the overridden operation, which is\n+            --  implicit in the new one.\n+\n+            if Is_Concurrent_Type (Scope (Subp)) then\n+               Form2 := Next_Formal (Form2);\n+            end if;\n+\n             if Present (Form1) then\n                Form1 := Next_Formal (Form1);\n                Form2 := Next_Formal (Form2);"}]}