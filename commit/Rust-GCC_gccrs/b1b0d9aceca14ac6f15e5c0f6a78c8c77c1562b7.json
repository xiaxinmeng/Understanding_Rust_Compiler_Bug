{"sha": "b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFiMGQ5YWNlY2ExNGFjNmYxNWU1YzBmNmE3OGM4Yzc3YzE1NjJiNw==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2005-07-11T03:56:12Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2005-07-11T03:56:12Z"}, "message": "re PR rtl-optimization/22239 (i-cobol.adb:482: error: unrecognizable insn)\n\n\tPR middle-end/22239\n\tPR target/20126\n\t* loop.c (loop_givs_rescan): Use expand_simple_binop instead of\n\tgen_rtx_MINUS to handle non-replaceable (plus ((x) (const)).\n\nFrom-SVN: r101863", "tree": {"sha": "87e06cff69f236ef94677bc1068511fb079a53b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87e06cff69f236ef94677bc1068511fb079a53b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7/comments", "author": null, "committer": null, "parents": [{"sha": "b5efa47076d28866e3be9770ea8a5788190f2d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5efa47076d28866e3be9770ea8a5788190f2d20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5efa47076d28866e3be9770ea8a5788190f2d20"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "073b6c4efb48d3535a0d03a47a99eef92fa1963f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7", "patch": "@@ -1,3 +1,10 @@\n+2005-07-10  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR middle-end/22239\n+\tPR target/20126\n+\t* loop.c (loop_givs_rescan): Use expand_simple_binop instead of\n+\tgen_rtx_MINUS to handle non-replaceable (plus ((x) (const)).\n+\n 2005-07-07  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-structalias.c (struct variable_info): Heapify complex."}, {"sha": "ae06307bca9c8becbe4be107893ec14acef759aa", "filename": "gcc/loop.c", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=b1b0d9aceca14ac6f15e5c0f6a78c8c77c1562b7", "patch": "@@ -5496,14 +5496,18 @@ loop_givs_rescan (struct loop *loop, struct iv_class *bl, rtx *reg_map)\n \t\t\t\t\t\t  v->new_reg));\n \t  else if (GET_CODE (*v->location) == PLUS\n \t\t   && REG_P (XEXP (*v->location, 0))\n-\t\t   && REG_P (v->new_reg)\n \t\t   && CONSTANT_P (XEXP (*v->location, 1)))\n-\t    loop_insn_emit_before (loop, 0, v->insn,\n-\t\t\t\t   gen_move_insn (XEXP (*v->location, 0),\n-\t\t\t\t\t\t  gen_rtx_MINUS\n-\t\t\t\t\t\t  (GET_MODE (*v->location),\n-\t\t\t\t\t\t   v->new_reg,\n-\t\t\t\t\t\t   XEXP (*v->location, 1))));\n+\t    {\n+\t      rtx tem;\n+\t      start_sequence ();\n+\t      tem = expand_simple_binop (GET_MODE (*v->location), MINUS,\n+\t\t\t\t\t v->new_reg, XEXP (*v->location, 1),\n+\t\t\t\t\t NULL_RTX, 0, OPTAB_LIB_WIDEN);\n+\t      emit_move_insn (XEXP (*v->location, 0), tem);\n+\t      tem = get_insns ();\n+\t      end_sequence ();\n+\t      loop_insn_emit_before (loop, 0, v->insn, tem);\n+\t    }\n \t  else\n \t    {\n \t      /* If it wasn't a reg, create a pseudo and use that.  */"}]}