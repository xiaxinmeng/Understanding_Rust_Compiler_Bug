{"sha": "7918cb93f6f752cec468f107eb944dc0da61ec6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzkxOGNiOTNmNmY3NTJjZWM0NjhmMTA3ZWI5NDRkYzBkYTYxZWM2Yg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-10T15:27:39Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2020-01-10T15:27:39Z"}, "message": "libstdc++: Make istreambuf_iterator base class consistent (PR92285)\n\nSince LWG 445 was implemented for GCC 4.7, the std::iterator base class\nof std::istreambuf_iterator changes type depending on the -std mode\nused. This creates an ABI incompatibility between different -std modes.\n\nThis change ensures the base class always has the same type. This makes\nlayout for C++98 compatible with the current -std=gnu++14 default, but\nno longer compatible with C++98 code from previous releases. In practice\nthis is unlikely to cause real problems, because it only affects the\nlayout of types with two std::iterator base classes, one of which comes\nfrom std::istreambuf_iterator. Such types are expected to be vanishingly\nrare.\n\n\tPR libstdc++/92285\n\t* include/bits/streambuf_iterator.h (istreambuf_iterator): Make type\n\tof base class independent of __cplusplus value.\n\t[__cplusplus < 201103L] (istreambuf_iterator::reference): Override the\n\ttype defined in the base class\n\t* testsuite/24_iterators/istreambuf_iterator/92285.cc: New test.\n\t* testsuite/24_iterators/istreambuf_iterator/requirements/\n\tbase_classes.cc: Adjust expected base class for C++98.\n\nFrom-SVN: r280116", "tree": {"sha": "c28d83e2ee9e985e1032aeb5deeeae5013195255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c28d83e2ee9e985e1032aeb5deeeae5013195255"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7918cb93f6f752cec468f107eb944dc0da61ec6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7918cb93f6f752cec468f107eb944dc0da61ec6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7918cb93f6f752cec468f107eb944dc0da61ec6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7918cb93f6f752cec468f107eb944dc0da61ec6b/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5c23c6ceacf666f218676b648801379044e326a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c23c6ceacf666f218676b648801379044e326a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5c23c6ceacf666f218676b648801379044e326a"}], "stats": {"total": 83, "additions": 69, "deletions": 14}, "files": [{"sha": "d1392c91649c8a32c511451d036231170485fdde", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7918cb93f6f752cec468f107eb944dc0da61ec6b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7918cb93f6f752cec468f107eb944dc0da61ec6b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7918cb93f6f752cec468f107eb944dc0da61ec6b", "patch": "@@ -1,3 +1,14 @@\n+2020-01-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/92285\n+\t* include/bits/streambuf_iterator.h (istreambuf_iterator): Make type\n+\tof base class independent of __cplusplus value.\n+\t[__cplusplus < 201103L] (istreambuf_iterator::reference): Override the\n+\ttype defined in the base class\n+\t* testsuite/24_iterators/istreambuf_iterator/92285.cc: New test.\n+\t* testsuite/24_iterators/istreambuf_iterator/requirements/\n+\tbase_classes.cc: Adjust expected base class for C++98.\n+\n 2020-01-09  Olivier Hainque  <hainque@adacore.com>\n \n \t* doc/xml/manual/appendix_contributing.xml: Document _C2"}, {"sha": "fe612f39fe9484d56493c5d0f99bda267ba15132", "filename": "libstdc++-v3/include/bits/streambuf_iterator.h", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7918cb93f6f752cec468f107eb944dc0da61ec6b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7918cb93f6f752cec468f107eb944dc0da61ec6b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf_iterator.h?ref=7918cb93f6f752cec468f107eb944dc0da61ec6b", "patch": "@@ -49,23 +49,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _CharT, typename _Traits>\n     class istreambuf_iterator\n     : public iterator<input_iterator_tag, _CharT, typename _Traits::off_type,\n-\t\t      _CharT*,\n-#if __cplusplus >= 201103L\n-    // LWG 445.\n-\t\t      _CharT>\n-#else\n-\t\t      _CharT&>\n-#endif\n+\t\t      _CharT*, _CharT>\n     {\n     public:\n       // Types:\n       //@{\n       /// Public typedefs\n-#if __cplusplus > 201703L\n+#if __cplusplus < 201103L\n+      typedef _CharT& reference; // Changed to _CharT by LWG 445\n+#elif __cplusplus > 201703L\n       // _GLIBCXX_RESOLVE_LIB_DEFECTS\n       // 3188. istreambuf_iterator::pointer should not be unspecified\n       using pointer = void;\n #endif\n+\n       typedef _CharT\t\t\t\t\tchar_type;\n       typedef _Traits\t\t\t\t\ttraits_type;\n       typedef typename _Traits::int_type\t\tint_type;"}, {"sha": "68b484151d59698f17813f110c2ac8682e2c3769", "filename": "libstdc++-v3/testsuite/24_iterators/istreambuf_iterator/92285.cc", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7918cb93f6f752cec468f107eb944dc0da61ec6b/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2F92285.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7918cb93f6f752cec468f107eb944dc0da61ec6b/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2F92285.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2F92285.cc?ref=7918cb93f6f752cec468f107eb944dc0da61ec6b", "patch": "@@ -0,0 +1,51 @@\n+// Copyright (C) 2020 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <iterator>\n+#include <iostream>\n+#include <testsuite_hooks.h>\n+\n+// PR libstdc++/92285\n+// See https://gcc.gnu.org/ml/libstdc++/2019-10/msg00129.html\n+\n+typedef std::input_iterator_tag category;\n+typedef std::char_traits<char>::off_type off_type;\n+typedef std::iterator<category, char, off_type, char*, char> good;\n+typedef std::iterator<category, char, off_type, char*, char&> bad;\n+\n+bool check(good&) { return true; }\n+void check(bad&) { }\n+\n+void\n+test01()\n+{\n+  typedef std::istreambuf_iterator<char> I;\n+  I it;\n+  VERIFY( check(it) );\n+#if __cplusplus < 201103L\n+  char c = 'c';\n+  I::reference r = c;\n+  VERIFY( &r == &c );\n+#else\n+  static_assert( std::is_same<I::reference, char>::value, \"LWG 445\" );\n+#endif\n+}\n+\n+int main()\n+{\n+  test01();\n+}"}, {"sha": "947b772040bbb700eb4d0201b942d878e7943712", "filename": "libstdc++-v3/testsuite/24_iterators/istreambuf_iterator/requirements/base_classes.cc", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7918cb93f6f752cec468f107eb944dc0da61ec6b/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Frequirements%2Fbase_classes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7918cb93f6f752cec468f107eb944dc0da61ec6b/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Frequirements%2Fbase_classes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F24_iterators%2Fistreambuf_iterator%2Frequirements%2Fbase_classes.cc?ref=7918cb93f6f752cec468f107eb944dc0da61ec6b", "patch": "@@ -32,12 +32,8 @@ void test01()\n   typedef istreambuf_iterator<char> test_iterator;\n   typedef char_traits<char>::off_type off_type;\n \n-  typedef iterator<input_iterator_tag, char, off_type, char*,\n-#if __cplusplus >= 201103L\n-    char>\n-#else\n-    char&>\n-#endif\n+  // This is the base class required since LWG 445, which differs from C++03:\n+  typedef iterator<input_iterator_tag, char, off_type, char*, char>\n     base_iterator;\n \n   istringstream isstream(\"this tag\");"}]}