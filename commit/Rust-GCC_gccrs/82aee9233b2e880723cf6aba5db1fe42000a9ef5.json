{"sha": "82aee9233b2e880723cf6aba5db1fe42000a9ef5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODJhZWU5MjMzYjJlODgwNzIzY2Y2YWJhNWRiMWZlNDIwMDBhOWVmNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-01-05T13:42:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-01-05T13:42:40Z"}, "message": "re PR tree-optimization/42614 (FRE optimizes away valid code after IPA inlining)\n\n2010-01-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/42614\n\t* gcc.c-torture/execute/pr42614.c: New testcase.\n\nFrom-SVN: r155647", "tree": {"sha": "de35d790f8d69233802bd7770c31626901df9ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de35d790f8d69233802bd7770c31626901df9ae4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/82aee9233b2e880723cf6aba5db1fe42000a9ef5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82aee9233b2e880723cf6aba5db1fe42000a9ef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82aee9233b2e880723cf6aba5db1fe42000a9ef5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82aee9233b2e880723cf6aba5db1fe42000a9ef5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc3c12a29c67753c473b465767b2ba6b2f7e72a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc3c12a29c67753c473b465767b2ba6b2f7e72a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc3c12a29c67753c473b465767b2ba6b2f7e72a6"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "813e00583af033e9c338e7747eb603de4807191d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82aee9233b2e880723cf6aba5db1fe42000a9ef5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82aee9233b2e880723cf6aba5db1fe42000a9ef5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=82aee9233b2e880723cf6aba5db1fe42000a9ef5", "patch": "@@ -1,3 +1,8 @@\n+2010-01-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/42614\n+\t* gcc.c-torture/execute/pr42614.c: New testcase.\n+\n 2010-01-05  Eric Fisher  <joefoxreal@gmail.com>\n \n \t* gcc.dg/pr12603.c: Remove -Wunreachable-code from dg-options."}, {"sha": "d3680539bdceb29dd5b21e726850461b975fca70", "filename": "gcc/testsuite/gcc.c-torture/execute/pr42614.c", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82aee9233b2e880723cf6aba5db1fe42000a9ef5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42614.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82aee9233b2e880723cf6aba5db1fe42000a9ef5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42614.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr42614.c?ref=82aee9233b2e880723cf6aba5db1fe42000a9ef5", "patch": "@@ -0,0 +1,68 @@\n+extern void *malloc(__SIZE_TYPE__);\n+extern void abort(void);\n+extern void free(void *);\n+\n+typedef struct SEntry\n+{\n+  unsigned char num;\n+} TEntry;\n+\n+typedef struct STable\n+{\n+  TEntry data[2];\n+} TTable;\n+\n+TTable *init ()\n+{\n+  return malloc(sizeof(TTable));\n+}\n+\n+void\n+expect_func (int a, unsigned char *b) __attribute__ ((noinline));\n+\n+static inline void\n+inlined_wrong (TEntry *entry_p, int flag);\n+\n+void\n+inlined_wrong (TEntry *entry_p, int flag)\n+{\n+  unsigned char index;\n+  entry_p->num = 0;\n+\n+  if (flag == 0)\n+    abort();\n+\n+  for (index = 0; index < 1; index++)\n+    entry_p->num++;\n+\n+  if (!entry_p->num)\n+    {\n+      abort();\n+    }\n+}\n+\n+void\n+expect_func (int a, unsigned char *b)\n+{\n+  if (abs ((a == 0)))\n+    abort ();\n+  if (abs ((b == 0)))\n+    abort ();\n+}\n+\n+int\n+main ()\n+{\n+  unsigned char index = 0;\n+  TTable *table_p = init();\n+  TEntry work;\n+\n+  inlined_wrong (&(table_p->data[1]), 1);\n+  expect_func (1, &index);\n+  inlined_wrong (&work, 1);\n+\n+  free (table_p);\n+\n+  return 0;\n+}\n+"}]}