{"sha": "abe3a4f0e9c461789b689e78d6116b1efffc1b5b", "node_id": "C_kwDOANBUbNoAKGFiZTNhNGYwZTljNDYxNzg5YjY4OWU3OGQ2MTE2YjFlZmZmYzFiNWI", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-01-22T02:36:18Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2022-01-22T02:36:18Z"}, "message": "Fix fold-vec-splat-floatdouble testsuite failure on power10\n\nWhen I added support for generating XXSPLTIDP on December 15th, 2021, I\nmissed updating the fold-vec-splat-floatdouble.c test to add to the regex\nfor the instructions generated.  This patch fixes that.\n\n2022-01-20  Michael Meissner  <meissner@the-meissners.org>\n\ngcc/testsuite/\n\n\tPR testsuite/103763\n\t* gcc.target/powerpc/fold-vec-splat-floatdouble.c: Fix insn regex\n\ton power10.", "tree": {"sha": "c06b44d8a39d0b74c1acc09956ea3ccab759cbe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c06b44d8a39d0b74c1acc09956ea3ccab759cbe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/abe3a4f0e9c461789b689e78d6116b1efffc1b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe3a4f0e9c461789b689e78d6116b1efffc1b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abe3a4f0e9c461789b689e78d6116b1efffc1b5b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abe3a4f0e9c461789b689e78d6116b1efffc1b5b/comments", "author": null, "committer": null, "parents": [{"sha": "9dd443578f37b011ef4c2337740490f01be294e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9dd443578f37b011ef4c2337740490f01be294e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9dd443578f37b011ef4c2337740490f01be294e2"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "01f1b0dadf3256ee003575ceaff4bf3632821629", "filename": "gcc/testsuite/gcc.target/powerpc/fold-vec-splat-floatdouble.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/abe3a4f0e9c461789b689e78d6116b1efffc1b5b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-floatdouble.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/abe3a4f0e9c461789b689e78d6116b1efffc1b5b/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-floatdouble.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Ffold-vec-splat-floatdouble.c?ref=abe3a4f0e9c461789b689e78d6116b1efffc1b5b", "patch": "@@ -21,12 +21,11 @@ vector double test_dc ()\n { const vector double y = { 3.0, 5.0 }; return vec_splat (y, 0b00001); }\n \n /* If the source vector is a known constant, we will generate a load or possibly\n-   XXSPLTIW.  */\n-/* { dg-final { scan-assembler-times {\\mlvx\\M|\\mlxvd2x\\M|\\mlxv\\M|\\mplxv\\M|\\mxxspltiw\\M} 2 } } */\n+   XXSPLTIW/XXSPLTIDP.  */\n+/* { dg-final { scan-assembler-times {\\mlvx\\M|\\mlxvd2x\\M|\\mlxv\\M|\\mplxv\\M|\\mxxspltiw\\M|\\mxxspltidp\\M} 2 } } */\n \n /* For float types, we generate a splat.  */\n /* { dg-final { scan-assembler-times {\\mvspltw\\M|\\mxxspltw\\M} 3 } } */\n \n /* For double types, we will generate xxpermdi instructions.  */\n /* { dg-final { scan-assembler-times \"xxpermdi\" 2 } } */\n-"}]}