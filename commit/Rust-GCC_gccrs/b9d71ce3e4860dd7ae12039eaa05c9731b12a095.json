{"sha": "b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjlkNzFjZTNlNDg2MGRkN2FlMTIwMzllYWEwNWM5NzMxYjEyYTA5NQ==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2004-06-04T17:20:22Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2004-06-04T17:20:22Z"}, "message": "configure.in (LIBMUDFLAPTH): Fix thinko.\n\n\n\t* configure.in (LIBMUDFLAPTH):  Fix thinko.\n\n\t* configure.in:  Check for more headers.\n\t* mf-hooks2.c:  Conditionalize on HAVE_SYS_SOCKET_H etc.\n\n\t* mf-runtime.c:  In two places conditionalize on SIUSR1 rather than\n\tHAVE_SIGNAL as mingw has signal.h but not SIUSR1.\n\nFrom-SVN: r82627", "tree": {"sha": "5dcf7fe1d68429aacfe1225763a6f492a238d0e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dcf7fe1d68429aacfe1225763a6f492a238d0e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14bbffa1d211ad505bc165f762027596b87511f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14bbffa1d211ad505bc165f762027596b87511f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14bbffa1d211ad505bc165f762027596b87511f1"}], "stats": {"total": 62, "additions": 55, "deletions": 7}, "files": [{"sha": "57fe2ebfa4210eb4e29e5743f98babc4ef5b9eb7", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "patch": "@@ -1,3 +1,13 @@\n+2004-06-04  Per Bothner  <per@bothner.com>\n+\n+\t* configure.in (LIBMUDFLAPTH):  Fix thinko.\n+\n+\t* configure.in:  Check for more headers.\n+\t* mf-hooks2.c:  Conditionalize on HAVE_SYS_SOCKET_H etc.\n+\n+\t* mf-runtime.c:  In two places conditionalize on SIUSR1 rather than\n+\tHAVE_SIGNAL as mingw has signal.h but not SIUSR1.\n+\n 2004-06-01  Andreas Jaeger  <aj@suse.de>\n \n \t* configure.in: Handle multilibs, support"}, {"sha": "3c5484276dbf9d26f8460ba01111a65e6fa56b95", "filename": "libmudflap/config.h.in", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfig.h.in?ref=b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "patch": "@@ -36,6 +36,9 @@\n /* Define to 1 if you have the <memory.h> header file. */\n #undef HAVE_MEMORY_H\n \n+/* Define to 1 if you have the <netdb.h> header file. */\n+#undef HAVE_NETDB_H\n+\n /* define if you have <pthread.h> */\n #undef HAVE_PTHREAD_H\n \n@@ -63,12 +66,24 @@\n /* Define to 1 if you have the <string.h> header file. */\n #undef HAVE_STRING_H\n \n+/* Define to 1 if you have the <sys/ipc.h> header file. */\n+#undef HAVE_SYS_IPC_H\n+\n+/* Define to 1 if you have the <sys/sem.h> header file. */\n+#undef HAVE_SYS_SEM_H\n+\n+/* Define to 1 if you have the <sys/socket.h> header file. */\n+#undef HAVE_SYS_SOCKET_H\n+\n /* Define to 1 if you have the <sys/stat.h> header file. */\n #undef HAVE_SYS_STAT_H\n \n /* Define to 1 if you have the <sys/types.h> header file. */\n #undef HAVE_SYS_TYPES_H\n \n+/* Define to 1 if you have the <sys/wait.h> header file. */\n+#undef HAVE_SYS_WAIT_H\n+\n /* union semun defined in sys/ipc.h or sys/sem.h */\n #undef HAVE_UNION_SEMUN\n "}, {"sha": "fab36079c1316280117a0c197d2dc5a4d02f5b08", "filename": "libmudflap/configure", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "patch": "@@ -3574,7 +3574,13 @@ done\n \n \n \n-for ac_header in stdint.h execinfo.h signal.h dlfcn.h\n+\n+\n+\n+\n+\n+for ac_header in stdint.h execinfo.h signal.h dlfcn.h \\\n+  netdb.h sys/ipc.h sys/sem.h sys/wait.h sys/socket.h\n do\n as_ac_Header=`echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n@@ -4790,7 +4796,7 @@ test x\"$pic_mode\" = xno && libtool_flags=\"$libtool_flags --prefer-non-pic\"\n case $host in\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 4793 \"configure\"' > conftest.$ac_ext\n+  echo '#line 4799 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -5424,7 +5430,7 @@ fi\n \n \n \n-if test \"x$ac_have_pthread_h\" != \"\"; then\n+if test \"$ac_have_pthread_h\" != \"\"; then\n   LIBMUDFLAPTH_TRUE=\n   LIBMUDFLAPTH_FALSE='#'\n else"}, {"sha": "3bb2633c3d78f5944fb6d79b07e06629b334d111", "filename": "libmudflap/configure.in", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure.in?ref=b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "patch": "@@ -62,7 +62,8 @@ AC_TRY_COMPILE([\n [AC_MSG_RESULT(no)\n enable_shared=no])\n \n-AC_CHECK_HEADERS(stdint.h execinfo.h signal.h dlfcn.h)\n+AC_CHECK_HEADERS(stdint.h execinfo.h signal.h dlfcn.h \\\n+  netdb.h sys/ipc.h sys/sem.h sys/wait.h sys/socket.h)\n AC_CHECK_FUNCS(backtrace backtrace_symbols gettimeofday signal)\n \n dnl Check for 64-bit stdio calls related to Large File Support\n@@ -114,7 +115,7 @@ ac_have_pthread_h=yes\n ],[\n ac_have_pthread_h=\n ])\n-AM_CONDITIONAL(LIBMUDFLAPTH, [test \"x$ac_have_pthread_h\" != \"\"])\n+AM_CONDITIONAL(LIBMUDFLAPTH, [test \"$ac_have_pthread_h\" != \"\"])\n \n AC_CHECK_LIB(dl, dlsym)\n "}, {"sha": "601dc24fb1239054426897041f2517398ba8bcd6", "filename": "libmudflap/mf-hooks2.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fmf-hooks2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fmf-hooks2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-hooks2.c?ref=b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "patch": "@@ -1206,6 +1206,8 @@ WRAPPER2(struct dirent *, readdir, DIR *dir)\n }\n #endif\n \n+#ifdef HAVE_SYS_SOCKET_H\n+\n #ifdef WRAP_recv\n #include <sys/socket.h>\n WRAPPER2(int, recv, int s, void *buf, size_t len, int flags)\n@@ -1327,6 +1329,8 @@ WRAPPER2(int, connect, int sockfd, const struct sockaddr  *addr,\n }\n #endif\n \n+#endif /* HAVE_SYS_SOCKET_H */\n+\n #ifdef WRAP_gethostname\n WRAPPER2(int, gethostname, char *name, size_t len)\n {\n@@ -1345,6 +1349,8 @@ WRAPPER2(int, sethostname, const char *name, size_t len)\n }\n #endif\n \n+#ifdef HAVE_NETDB_H\n+\n #ifdef WRAP_gethostbyname\n #include <netdb.h>\n WRAPPER2(struct hostent *, gethostbyname, const char *name)\n@@ -1425,6 +1431,10 @@ WRAPPER2(struct hostent *, gethostbyname, const char *name)\n }\n #endif\n \n+#endif /* HAVE_NETDB_H */\n+\n+#ifdef SYS_WAIT_H\n+\n #ifdef WRAP_wait\n #include <sys/wait.h>\n WRAPPER2(pid_t, wait, int *status)\n@@ -1449,6 +1459,8 @@ WRAPPER2(pid_t, waitpid, pid_t pid, int *status, int options)\n }\n #endif\n \n+#endif /* HAVE_SYS_WAIT_H */\n+\n #ifdef WRAP_popen\n WRAPPER2(FILE *, popen, const char *command, const char *mode)\n {\n@@ -1651,6 +1663,8 @@ WRAPPER2(void *, dlsym, void *handle, char *symbol)\n }\n #endif\n \n+#if defined(HAVE_SYS_IPC_H) && defined(HAVE_SYS_SEM_H)\n+\n #ifdef WRAP_semop\n #include <sys/ipc.h>\n #include <sys/sem.h>\n@@ -1765,3 +1779,5 @@ WRAPPER2(int, shmdt, const void *shmaddr)\n }\n #endif\n \n+#endif /* defined(HAVE_SYS_IPC_H) && defined(HAVE_SYS_SEM_H) */\n+"}, {"sha": "71890364b72c50440339dd4c60bffc16c2a7c78c", "filename": "libmudflap/mf-runtime.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fmf-runtime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b9d71ce3e4860dd7ae12039eaa05c9731b12a095/libmudflap%2Fmf-runtime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-runtime.c?ref=b9d71ce3e4860dd7ae12039eaa05c9731b12a095", "patch": "@@ -296,7 +296,7 @@ options [] =\n     {\"collect-stats\", \n      \"collect statistics on mudflap's operation\",\n      set_option, 1, &__mf_opts.collect_stats},\n-#if HAVE_SIGNAL\n+#ifdef SIGUSR1\n     {\"sigusr1-report\",\n      \"print report upon SIGUSR1\",\n      set_option, 1, &__mf_opts.sigusr1_report},\n@@ -2354,7 +2354,7 @@ __mf_sigusr1_respond ()\n {\n   static int handler_installed;\n \n-#if HAVE_SIGNAL\n+#ifdef SIGUSR1\n   /* Manage handler */\n   if (__mf_opts.sigusr1_report && ! handler_installed)\n     {"}]}