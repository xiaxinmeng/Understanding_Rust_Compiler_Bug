{"sha": "66abe22c0716119ac01164cebd147d86a0ed8c70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZhYmUyMmMwNzE2MTE5YWMwMTE2NGNlYmQxNDdkODZhMGVkOGM3MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2008-03-08T11:10:18Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2008-03-08T11:10:18Z"}, "message": "decl.c (gnat_to_gnu_entity): Add support for scalar types with small alignment.\n\n\t* decl.c (gnat_to_gnu_entity) <E_Signed_Integer_Subtype>: Add support\n\tfor scalar types with small alignment.\n\nFrom-SVN: r133027", "tree": {"sha": "6d06a7a60f89e389c96d2d726ee38dbeb507a474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d06a7a60f89e389c96d2d726ee38dbeb507a474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66abe22c0716119ac01164cebd147d86a0ed8c70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66abe22c0716119ac01164cebd147d86a0ed8c70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66abe22c0716119ac01164cebd147d86a0ed8c70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66abe22c0716119ac01164cebd147d86a0ed8c70/comments", "author": null, "committer": null, "parents": [{"sha": "563569be5ed93378df1e43fca7d7fd6ee0fc0c65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/563569be5ed93378df1e43fca7d7fd6ee0fc0c65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/563569be5ed93378df1e43fca7d7fd6ee0fc0c65"}], "stats": {"total": 76, "additions": 76, "deletions": 0}, "files": [{"sha": "2a10f10f1b68e648880a0de873aefd81e14143b3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66abe22c0716119ac01164cebd147d86a0ed8c70/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66abe22c0716119ac01164cebd147d86a0ed8c70/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=66abe22c0716119ac01164cebd147d86a0ed8c70", "patch": "@@ -1,3 +1,8 @@\n+2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* decl.c (gnat_to_gnu_entity) <E_Signed_Integer_Subtype>: Add support\n+\tfor scalar types with small alignment.\n+\n 2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* trans.c (Loop_Statement_to_gnu): Set the SLOC of the loop label"}, {"sha": "62783202f01fc125800194d57ff3c9fd1ec7ec13", "filename": "gcc/ada/decl.c", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66abe22c0716119ac01164cebd147d86a0ed8c70/gcc%2Fada%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66abe22c0716119ac01164cebd147d86a0ed8c70/gcc%2Fada%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdecl.c?ref=66abe22c0716119ac01164cebd147d86a0ed8c70", "patch": "@@ -1520,6 +1520,45 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t  copy_alias_set (gnu_type, gnu_field_type);\n \t}\n \n+      /* If the type we are dealing with has got a smaller alignment than the\n+\t natural one, we need to wrap it up in a record type and under-align\n+\t the latter.  We reuse the padding machinery for this purpose.  */\n+      else if (Known_Alignment (gnat_entity)\n+\t       && UI_Is_In_Int_Range (Alignment (gnat_entity))\n+\t       && (align = UI_To_Int (Alignment (gnat_entity)) * BITS_PER_UNIT)\n+\t       && align < TYPE_ALIGN (gnu_type))\n+\t{\n+\t  tree gnu_field_type = gnu_type;\n+\t  tree gnu_field;\n+\n+\t  gnu_type = make_node (RECORD_TYPE);\n+\t  TYPE_NAME (gnu_type) = create_concat_name (gnat_entity, \"PAD\");\n+\n+\t  TYPE_ALIGN (gnu_type) = align;\n+\t  TYPE_PACKED (gnu_type) = 1;\n+\n+\t  /* Create a stripped-down declaration of the original type, mainly\n+\t     for debugging.  */\n+\t  create_type_decl (get_entity_name (gnat_entity), gnu_field_type,\n+\t\t\t    NULL, true, debug_info_p, gnat_entity);\n+\n+\t  /* Don't notify the field as \"addressable\", since we won't be taking\n+\t     it's address and it would prevent create_field_decl from making a\n+\t     bitfield.  */\n+\t  gnu_field = create_field_decl (get_identifier (\"OBJECT\"),\n+\t\t\t\t\t gnu_field_type, gnu_type, 1, 0, 0, 0);\n+\n+\t  finish_record_type (gnu_type, gnu_field, 0, false);\n+\t  TYPE_IS_PADDING_P (gnu_type) = 1;\n+\t  SET_TYPE_ADA_SIZE (gnu_type, bitsize_int (esize));\n+\n+\t  copy_alias_set (gnu_type, gnu_field_type);\n+\t}\n+\n+      /* Otherwise reset the alignment lest we computed it above.  */\n+      else\n+\talign = 0;\n+\n       break;\n \n     case E_Floating_Point_Type:"}, {"sha": "64896b804ef5298b5147cf4877d139c07af829cc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66abe22c0716119ac01164cebd147d86a0ed8c70/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66abe22c0716119ac01164cebd147d86a0ed8c70/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=66abe22c0716119ac01164cebd147d86a0ed8c70", "patch": "@@ -1,3 +1,7 @@\n+2008-03-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/small_alignment.adb: New test.\n+\n 2008-03-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/alignment2.ads: New test."}, {"sha": "fbe1c21457c07d71481e067d5807c526a708b33d", "filename": "gcc/testsuite/gnat.dg/small_alignment.adb", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66abe22c0716119ac01164cebd147d86a0ed8c70/gcc%2Ftestsuite%2Fgnat.dg%2Fsmall_alignment.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66abe22c0716119ac01164cebd147d86a0ed8c70/gcc%2Ftestsuite%2Fgnat.dg%2Fsmall_alignment.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsmall_alignment.adb?ref=66abe22c0716119ac01164cebd147d86a0ed8c70", "patch": "@@ -0,0 +1,28 @@\n+-- { dg-do run }\n+-- { dg-options \"-gnatws\" }\n+\n+procedure Small_Alignment is\n+\n+  type My_Integer is new Integer;\n+  for My_Integer'Alignment use 1;\n+\n+  function Set_A return My_Integer is\n+  begin\n+    return 12;\n+  end;\n+\n+  function Set_B return My_Integer is\n+  begin\n+    return 6;\n+  end;\n+\n+  C : Character;\n+  A : My_Integer := Set_A;\n+  B : My_Integer := Set_B;\n+\n+begin\n+  A := A * B / 2;\n+  if A /= 36 then\n+    raise Program_Error;\n+  end if;\n+end;"}]}