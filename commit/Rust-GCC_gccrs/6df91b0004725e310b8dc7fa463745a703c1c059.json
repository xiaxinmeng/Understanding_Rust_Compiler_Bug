{"sha": "6df91b0004725e310b8dc7fa463745a703c1c059", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRmOTFiMDAwNDcyNWUzMTBiOGRjN2ZhNDYzNzQ1YTcwM2MxYzA1OQ==", "commit": {"author": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@users.sourceforge.net", "date": "2004-07-19T15:03:58Z"}, "committer": {"name": "Kriang Lerdsuwanakij", "email": "lerdsuwa@gcc.gnu.org", "date": "2004-07-19T15:03:58Z"}, "message": "re PR c++/12170 (ICE in cp_type_quals)\n\n\tPR c++/12170\n\t* pt.c (unify) <BOUND_TEMPLATE_TEMPLATE_PARM case>: Use only\n\tinnermost set of template arguments during deduction.  Simplify.\n\n\t* g++.dg/template/ttp9.C: New test.\n\nFrom-SVN: r84921", "tree": {"sha": "5f12475ae2f27a76ecdf20b0bcd423cc0fab60c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f12475ae2f27a76ecdf20b0bcd423cc0fab60c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6df91b0004725e310b8dc7fa463745a703c1c059", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6df91b0004725e310b8dc7fa463745a703c1c059", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6df91b0004725e310b8dc7fa463745a703c1c059", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6df91b0004725e310b8dc7fa463745a703c1c059/comments", "author": null, "committer": null, "parents": [{"sha": "a2bec818635587d03fa02bd57c2bf0985510de56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2bec818635587d03fa02bd57c2bf0985510de56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2bec818635587d03fa02bd57c2bf0985510de56"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "f4db5d3f2561e63e4824dc6a1c5dfa6bd8588b0a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df91b0004725e310b8dc7fa463745a703c1c059/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df91b0004725e310b8dc7fa463745a703c1c059/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6df91b0004725e310b8dc7fa463745a703c1c059", "patch": "@@ -1,3 +1,9 @@\n+2004-07-19  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/12170\n+\t* pt.c (unify) <BOUND_TEMPLATE_TEMPLATE_PARM case>: Use only\n+\tinnermost set of template arguments during deduction.  Simplify.\n+\n 2004-07-19  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* typeck.c (build_modify_expr, build_x_modify_expr): Set"}, {"sha": "b1d9de03cc0a66ecc35104b4f643ef518d35df3f", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df91b0004725e310b8dc7fa463745a703c1c059/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df91b0004725e310b8dc7fa463745a703c1c059/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6df91b0004725e310b8dc7fa463745a703c1c059", "patch": "@@ -9650,7 +9650,7 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)\n \t  {\n \t    tree parmtmpl = TYPE_TI_TEMPLATE (parm);\n \t    tree parmvec = TYPE_TI_ARGS (parm);\n-\t    tree argvec = TYPE_TI_ARGS (arg);\n+\t    tree argvec = INNERMOST_TEMPLATE_ARGS (TYPE_TI_ARGS (arg));\n \t    tree argtmplvec\n \t      = DECL_INNERMOST_TEMPLATE_PARMS (TYPE_TI_TEMPLATE (arg));\n \t    int i;\n@@ -9673,9 +9673,8 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict)\n \n \t    for (i = 0; i < TREE_VEC_LENGTH (parmvec); ++i)\n \t      {\n-\t        tree t = TREE_VEC_ELT (parmvec, i);\n-\n-\t        if (unify (tparms, targs, t, \n+\t        if (unify (tparms, targs, \n+\t\t\t   TREE_VEC_ELT (parmvec, i), \n \t\t\t   TREE_VEC_ELT (argvec, i), \n \t\t\t   UNIFY_ALLOW_NONE))\n \t\t  return 1;"}, {"sha": "51256e5403a33ed08a1c10df5c606547aa365e3a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df91b0004725e310b8dc7fa463745a703c1c059/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df91b0004725e310b8dc7fa463745a703c1c059/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6df91b0004725e310b8dc7fa463745a703c1c059", "patch": "@@ -1,3 +1,8 @@\n+2004-07-19  Kriang Lerdsuwanakij  <lerdsuwa@users.sourceforge.net>\n+\n+\tPR c++/12170\n+\t* g++.dg/template/ttp9.C: New test.\n+\n 2004-07-19  Daniel Jacobowitz  <dan@debian.org>\n \n \t* gcc.dg/format/cmn-err-1.c: New test."}, {"sha": "060ab7788aeef25e033f548929c8f3b0fe13a354", "filename": "gcc/testsuite/g++.dg/template/ttp9.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6df91b0004725e310b8dc7fa463745a703c1c059/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6df91b0004725e310b8dc7fa463745a703c1c059/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fttp9.C?ref=6df91b0004725e310b8dc7fa463745a703c1c059", "patch": "@@ -0,0 +1,28 @@\n+// { dg-do compile }\n+\n+// Origin: David Abrahams <dave@boost-consulting.com>\n+//\t   Wolfgang Bangerth <bangerth@ticam.utexas.edu>\n+\n+// PR c++/12170: Deducing template template parameter from nested\n+// class template.\n+\n+template <typename> struct W {};\n+\n+template< template<typename> class F, typename T>\n+int foo(W< F<T> >);\n+\n+\n+template<typename T>\n+struct L  {\n+    static int const value = sizeof(foo(W<T>()));\n+    typedef T type;\n+};\n+\n+\n+template <typename>\n+struct Y {\n+    template <typename> struct X { typedef int type; };\n+    typedef typename L<X<int> >::type type;\n+};\n+\n+template struct Y<int>;"}]}