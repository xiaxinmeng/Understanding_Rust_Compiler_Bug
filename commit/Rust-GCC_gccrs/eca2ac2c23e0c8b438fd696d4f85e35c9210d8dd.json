{"sha": "eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd", "node_id": "C_kwDOANBUbNoAKGVjYTJhYzJjMjNlMGM4YjQzOGZkNjk2ZDRmODVlMzVjOTIxMGQ4ZGQ", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-08-10T11:06:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-08-10T11:06:18Z"}, "message": "Merge #1453\n\n1453: Add in -m32,-m64 configuration to make check-rust r=philberty a=philberty\n\nThis is to gate PR's which might break builds on 32bit systems.\r\n\r\nFixes #1439 #871\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>", "tree": {"sha": "2d5807c7718ccf32453f539a21990c89dd844fe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d5807c7718ccf32453f539a21990c89dd844fe9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi85EqCRBK7hj4Ov3rIwAAh3YIAHU8/qABJWxExPGugVqYOzma\n7rmw3JrVkdGKsnEZQtQqtOdGFSaxC/pxlw+/0aIaEVv3L3CfzvEiTMDBgKSo2P8P\nRJus0rns1HNRmodM3REZS6rQKynv8h5QU/56KhlDne8/fqMSCQQASm5Lpge2Rs/c\nPh8oesL5vF9oCKmbryf1mUGi5veqgzdURCbEfj3zUTwUfeRfKNfbDcg2fXeh5UqE\nQGufPmJhQJ6hxyLTvoRe+sbKDiw/yuo9YT9i7x/IwmpVwZ4k8SB4wwd9PvxkLSk2\nJDhNbOL6HeZZ4nQJcQnCjlUqcNTyCDbLIjyhJbS00cvEBeki2qyiEdpuEzhHgNc=\n=5UOd\n-----END PGP SIGNATURE-----\n", "payload": "tree 2d5807c7718ccf32453f539a21990c89dd844fe9\nparent 7027e5c21ae6b8cb1ea2222e55960f1587071d14\nparent 50bb06ce3b990c2e282b7245b5fdcea119f6385f\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1660129578 +0000\ncommitter GitHub <noreply@github.com> 1660129578 +0000\n\nMerge #1453\n\n1453: Add in -m32,-m64 configuration to make check-rust r=philberty a=philberty\n\nThis is to gate PR's which might break builds on 32bit systems.\r\n\r\nFixes #1439 #871\r\n\n\nCo-authored-by: Philip Herron <philip.herron@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7027e5c21ae6b8cb1ea2222e55960f1587071d14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7027e5c21ae6b8cb1ea2222e55960f1587071d14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7027e5c21ae6b8cb1ea2222e55960f1587071d14"}, {"sha": "50bb06ce3b990c2e282b7245b5fdcea119f6385f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bb06ce3b990c2e282b7245b5fdcea119f6385f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bb06ce3b990c2e282b7245b5fdcea119f6385f"}], "stats": {"total": 92, "additions": 84, "deletions": 8}, "files": [{"sha": "36914c2cc650968d2fb4b1e9a4b567105ea20b6f", "filename": ".github/bors.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/.github%2Fbors.toml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/.github%2Fbors.toml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fbors.toml?ref=eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd", "patch": "@@ -1,5 +1,5 @@\n status = [\n-  \"build-and-check\"\n+  \"build-and-check-ubuntu-64bit\"\n ]\n # Uncomment this to use a two hour timeout.\n # The default is one hour."}, {"sha": "c88674033e7684715137b45301812107dad2bc3f", "filename": ".github/workflows/ccpp.yml", "status": "modified", "additions": 81, "deletions": 4, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/.github%2Fworkflows%2Fccpp.yml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/.github%2Fworkflows%2Fccpp.yml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/.github%2Fworkflows%2Fccpp.yml?ref=eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd", "patch": "@@ -1,4 +1,4 @@\n-name: C/C++ CI\n+name: GCC Rust build and test\n \n on:\n   push:\n@@ -9,7 +9,7 @@ on:\n     branches: [ master ]\n \n jobs:\n-  build-and-check:\n+  build-and-check-ubuntu-64bit:\n \n     env:\n       # Force locale, in particular for reproducible results re '.github/bors_log_expected_warnings' (see below).\n@@ -67,7 +67,84 @@ jobs:\n     - name: Run Tests\n       run: |\n            cd gccrs-build; \\\n-           make check-rust\n+           make check-rust RUNTESTFLAGS=\"--target_board=unix\\{-m64}\"\n+    - name: Archive check-rust results\n+      uses: actions/upload-artifact@v2\n+      with:\n+        name: check-rust-logs\n+        path: |\n+          gccrs-build/gcc/testsuite/rust/\n+    - name: Check regressions\n+      run: |\n+           cd gccrs-build; \\\n+           if grep -e \"unexpected\" -e \"unresolved\" -e \"ERROR:\" gcc/testsuite/rust/rust.sum;\\\n+           then \\\n+              echo \"::error title=Regression test failed::some tests are not correct\"; \\\n+              perl -n ../.github/emit_test_errors.pl < gcc/testsuite/rust/rust.sum; \\\n+              exit 1; \\\n+            else \\\n+              exit 0; \\\n+            fi\n+\n+  build-and-check-ubuntu-32bit:\n+\n+    env:\n+      # Force locale, in particular for reproducible results re '.github/bors_log_expected_warnings' (see below).\n+      LC_ALL: C.UTF-8\n+\n+    runs-on: ubuntu-latest\n+\n+    steps:\n+    - uses: actions/checkout@v2\n+\n+    - name: Install Deps\n+      run: |\n+          sudo apt-get update;\n+          sudo apt-get install -y \\\n+                  automake \\\n+                  autoconf \\\n+                  libtool \\\n+                  autogen \\\n+                  bison \\\n+                  flex \\\n+                  libgmp3-dev \\\n+                  libmpfr-dev \\\n+                  libmpc-dev \\\n+                  build-essential \\\n+                  gcc-multilib \\\n+                  g++-multilib \\\n+                  dejagnu\n+\n+    - name: Configure\n+      run: |\n+           mkdir -p gccrs-build;\n+           cd gccrs-build;\n+           ../configure \\\n+               --enable-languages=rust \\\n+               --disable-bootstrap \\\n+               --enable-multilib\n+\n+    - name: Build\n+      shell: bash\n+      run: |\n+           cd gccrs-build; \\\n+           make -Otarget -j $(nproc) 2>&1 | tee log\n+\n+    - name: Check for new warnings\n+      run: |\n+           cd gccrs-build\n+           < log grep 'warning: ' | sort > log_warnings\n+           if diff -U0 ../.github/bors_log_expected_warnings log_warnings; then\n+               :\n+           else\n+               echo 'See <https://github.com/Rust-GCC/gccrs/pull/1026>.'\n+               exit 1\n+           fi >&2\n+\n+    - name: Run Tests\n+      run: |\n+           cd gccrs-build; \\\n+           make check-rust RUNTESTFLAGS=\"--target_board=unix\\{-m32}\"\n     - name: Archive check-rust results\n       uses: actions/upload-artifact@v2\n       with:\n@@ -131,7 +208,7 @@ jobs:\n     - name: Run Tests\n       run: |\n            cd gccrs-build; \\\n-           make check-rust\n+           make check-rust RUNTESTFLAGS=\"--target_board=unix\\{-m32,-m64}\"\n \n     - name: Archive check-rust results\n       uses: actions/upload-artifact@v2"}, {"sha": "083a369d16f5c9b260a774d4d38e8c6006aa42fb", "filename": "gcc/testsuite/rust/compile/torture/issue-1432.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fissue-1432.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fissue-1432.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fissue-1432.rs?ref=eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd", "patch": "@@ -73,6 +73,5 @@ impl_uint!(\n     u16 = \"u16\",\n     u32 = \"u32\",\n     u64 = \"u64\",\n-    u128 = \"u128\",\n     usize = \"usize\"\n );"}, {"sha": "b2b08cd51141b062626de107adfeba7cd13677df", "filename": "gcc/testsuite/rust/debug/win64-abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/gcc%2Ftestsuite%2Frust%2Fdebug%2Fwin64-abi.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd/gcc%2Ftestsuite%2Frust%2Fdebug%2Fwin64-abi.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Fwin64-abi.rs?ref=eca2ac2c23e0c8b438fd696d4f85e35c9210d8dd", "patch": "@@ -1,10 +1,10 @@\n+// { dg-do compile { target { x86_64-*-* } } }\n+// { dg-options \"-gdwarf-5 -dA -w -O1 -m64\" }\n pub extern \"win64\" fn square(num: i32) -> i32 {\n     num * num\n }\n \n fn main() {\n-    // { dg-do compile { target { x86_64-*-* } } }\n-    // { dg-options \"-gdwarf-5 -dA -w -O1\" }\n     // MS ABI dictates that the first argument is ecx instead of edi from the sysv world\n     // { dg-final { scan-assembler \"%ecx, %ecx\" } }\n     square(1);"}]}