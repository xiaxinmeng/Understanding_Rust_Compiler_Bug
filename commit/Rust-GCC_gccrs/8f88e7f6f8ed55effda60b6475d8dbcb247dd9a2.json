{"sha": "8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGY4OGU3ZjZmOGVkNTVlZmZkYTYwYjY0NzVkOGRiY2IyNDdkZDlhMg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-08-12T07:36:48Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-08-12T07:36:48Z"}, "message": "Move is_valid_fd to filedescriptor.c file.\n\n2019-08-12  Martin Liska  <mliska@suse.cz>\n\n\t* Makefile.in: Add filedescriptor.c.\n\t* filedescriptor.c: New file.\n\t* lrealpath.c (is_valid_fd): Remove.\n\nFrom-SVN: r274273", "tree": {"sha": "f18f3a9629c8672d0bed03509356c4ffe49ae772", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f18f3a9629c8672d0bed03509356c4ffe49ae772"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90fb7fae3c84cafe73e0bd7e5bb02581c42c4840", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90fb7fae3c84cafe73e0bd7e5bb02581c42c4840", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90fb7fae3c84cafe73e0bd7e5bb02581c42c4840"}], "stats": {"total": 83, "additions": 66, "deletions": 17}, "files": [{"sha": "c1fe2f62b44de0fddd76afc11a54bfc137aeea42", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2", "patch": "@@ -1,3 +1,9 @@\n+2019-08-12  Martin Liska  <mliska@suse.cz>\n+\n+\t* Makefile.in: Add filedescriptor.c.\n+\t* filedescriptor.c: New file.\n+\t* lrealpath.c (is_valid_fd): Remove.\n+\n 2019-08-08  Martin Liska  <mliska@suse.cz>\n \n \tPR bootstrap/91352"}, {"sha": "f1628d4ee0dbcbcb3e119058a916ef8290c1fed4", "filename": "libiberty/Makefile.in", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/libiberty%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/libiberty%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FMakefile.in?ref=8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2", "patch": "@@ -127,7 +127,7 @@ CFILES = alloca.c argv.c asprintf.c atexit.c\t\t\t\t\\\n \tcalloc.c choose-temp.c clock.c concat.c cp-demangle.c\t\t\\\n \t cp-demint.c cplus-dem.c crc32.c\t\t\t\t\\\n \td-demangle.c dwarfnames.c dyn-string.c\t\t\t\t\\\n-\tfdmatch.c ffs.c fibheap.c filename_cmp.c floatformat.c\t\t\\\n+\tfdmatch.c ffs.c fibheap.c filedescriptor.c filename_cmp.c floatformat.c\t\t\\\n \tfnmatch.c fopen_unlocked.c\t\t\t\t\t\\\n \tgetcwd.c getopt.c getopt1.c getpagesize.c getpwd.c getruntime.c\t\\\n          gettimeofday.c                                                 \\\n@@ -171,6 +171,7 @@ REQUIRED_OFILES =\t\t\t\t\t\t\t\\\n \t./cp-demint.$(objext) ./crc32.$(objext) ./d-demangle.$(objext)\t\\\n \t./dwarfnames.$(objext) ./dyn-string.$(objext)\t\t\t\\\n \t./fdmatch.$(objext) ./fibheap.$(objext)\t\t\t\t\\\n+\t./filedescriptor.$(objext)\t\\\n \t./filename_cmp.$(objext) ./floatformat.$(objext)\t\t\\\n \t./fnmatch.$(objext) ./fopen_unlocked.$(objext)\t\t\t\\\n \t./getopt.$(objext) ./getopt1.$(objext) ./getpwd.$(objext)\t\\\n@@ -756,6 +757,17 @@ $(CONFIGURED_OFILES): stamp-picdir stamp-noasandir\n \telse true; fi\n \t$(COMPILE.c) $(srcdir)/fibheap.c $(OUTPUT_OPTION)\n \n+./filedescriptor.$(objext): $(srcdir)/filedescriptor.c config.h $(INCDIR)/ansidecl.h \\\n+\t$(INCDIR)/libiberty.h\n+\tif [ x\"$(PICFLAG)\" != x ]; then \\\n+\t  $(COMPILE.c) $(PICFLAG) $(srcdir)/filedescriptor.c -o pic/$@; \\\n+\telse true; fi\n+\tif [ x\"$(NOASANFLAG)\" != x ]; then \\\n+\t  $(COMPILE.c) $(PICFLAG) $(NOASANFLAG) $(srcdir)/filedescriptor.c -o noasan/$@; \\\n+\telse true; fi\n+\t$(COMPILE.c) $(srcdir)/filedescriptor.c $(OUTPUT_OPTION)\n+\n+\n ./filename_cmp.$(objext): $(srcdir)/filename_cmp.c config.h $(INCDIR)/ansidecl.h \\\n \t$(INCDIR)/filenames.h $(INCDIR)/hashtab.h \\\n \t$(INCDIR)/safe-ctype.h"}, {"sha": "3a1a68d1eefcad8562d05ea76f7437ffea7c5172", "filename": "libiberty/filedescriptor.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/libiberty%2Ffiledescriptor.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/libiberty%2Ffiledescriptor.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ffiledescriptor.c?ref=8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2", "patch": "@@ -0,0 +1,47 @@\n+/* File descriptor related functions.\n+\n+   Copyright (C) 2019 Free Software Foundation, Inc.\n+\n+   This file is part of the libiberty library.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2 of the License, or\n+   (at your option) any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software\n+   Foundation, Inc., 51 Franklin Street - Fifth Floor,\n+   Boston, MA 02110-1301, USA.  */\n+\n+#include \"config.h\"\n+#include \"ansidecl.h\"\n+#include \"libiberty.h\"\n+\n+#ifdef HAVE_FCNTL_H\n+#include <fcntl.h>\n+#endif\n+\n+#if defined (_WIN32)\n+#define WIN32_LEAN_AND_MEAN\n+#include <windows.h> /* for GetFullPathName */\n+#endif\n+/* Return true when FD file descriptor exists.  */\n+\n+int\n+is_valid_fd (int fd)\n+{\n+#if defined(_WIN32)\n+  HANDLE h = (HANDLE) _get_osfhandle (fd);\n+  return h != (HANDLE) -1;\n+#elif defined(F_GETFD)\n+  return fcntl (fd, F_GETFD) >= 0;\n+#else\n+  return dup2 (fd, fd) < 0;\n+#endif\n+}"}, {"sha": "7f66dc2b1bd26c41821d409a95f93e216677923d", "filename": "libiberty/lrealpath.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/libiberty%2Flrealpath.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2/libiberty%2Flrealpath.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Flrealpath.c?ref=8f88e7f6f8ed55effda60b6475d8dbcb247dd9a2", "patch": "@@ -49,9 +49,6 @@ components will be simplified.  The returned value will be allocated using\n #ifdef HAVE_STRING_H\n #include <string.h>\n #endif\n-#ifdef HAVE_FCNTL_H\n-#include <fcntl.h>\n-#endif\n \n /* On GNU libc systems the declaration is only visible with _GNU_SOURCE.  */\n #if defined(HAVE_CANONICALIZE_FILE_NAME) \\\n@@ -158,16 +155,3 @@ lrealpath (const char *filename)\n   /* This system is a lost cause, just duplicate the filename.  */\n   return strdup (filename);\n }\n-\n-/* Return true when FD file descriptor exists.  */\n-\n-int\n-is_valid_fd (int fd)\n-{\n-#if defined(_WIN32)\n-  HANDLE h = (HANDLE) _get_osfhandle (fd);\n-  return h != (HANDLE) -1;\n-#else\n-  return fcntl (fd, F_GETFD) >= 0;\n-#endif\n-}"}]}