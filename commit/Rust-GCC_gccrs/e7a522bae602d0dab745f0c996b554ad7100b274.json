{"sha": "e7a522bae602d0dab745f0c996b554ad7100b274", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdhNTIyYmFlNjAyZDBkYWI3NDVmMGM5OTZiNTU0YWQ3MTAwYjI3NA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-11T22:23:31Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-11T22:23:31Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1560", "tree": {"sha": "a139ae750dc624b330ca6827cebdfe4e9026a98d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a139ae750dc624b330ca6827cebdfe4e9026a98d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7a522bae602d0dab745f0c996b554ad7100b274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7a522bae602d0dab745f0c996b554ad7100b274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7a522bae602d0dab745f0c996b554ad7100b274", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7a522bae602d0dab745f0c996b554ad7100b274/comments", "author": null, "committer": null, "parents": [{"sha": "db7e5239390f0e259b64858ae1333ddb708e4486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db7e5239390f0e259b64858ae1333ddb708e4486", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db7e5239390f0e259b64858ae1333ddb708e4486"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "5b98cb82a4c21c0c0d4cd344b22754df9da0a5a0", "filename": "gcc/cse.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7a522bae602d0dab745f0c996b554ad7100b274/gcc%2Fcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7a522bae602d0dab745f0c996b554ad7100b274/gcc%2Fcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcse.c?ref=e7a522bae602d0dab745f0c996b554ad7100b274", "patch": "@@ -3736,9 +3736,14 @@ simplify_binary_operation (code, mode, op0, op1)\n \tcase DIV:\n \t  if (op1 == CONST1_RTX (mode))\n \t    return op0;\n-\t  else if (op0 == CONST0_RTX (mode)\n-\t\t   && ! side_effects_p (op1))\n+\n+\t  /* In IEEE floating point, 0/x is not always 0.  */\n+\t  if ((TARGET_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\n+\t       || GET_MODE_CLASS (mode) == MODE_INT)\n+\t      && op0 == CONST0_RTX (mode)\n+\t      && ! side_effects_p (op1))\n \t    return op0;\n+\n #if 0 /* Turned off till an expert says this is a safe thing to do.  */\n #if ! defined (REAL_IS_NOT_DOUBLE) || defined (REAL_ARITHMETIC)\n \t  /* Change division by a constant into multiplication.  */"}]}