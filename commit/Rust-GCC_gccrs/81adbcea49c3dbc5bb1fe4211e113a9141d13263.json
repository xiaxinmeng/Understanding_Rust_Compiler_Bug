{"sha": "81adbcea49c3dbc5bb1fe4211e113a9141d13263", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODFhZGJjZWE0OWMzZGJjNWJiMWZlNDIxMWUxMTNhOTE0MWQxMzI2Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2015-02-13T14:54:48Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2015-02-13T14:54:48Z"}, "message": "re PR c++/64970 (Hard error instead of SFINAE for expression in nested template alias)\n\n/cp\n2015-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/64970\n\t* decl.c (make_typename_type): Pass tsubst_flags_t argument\n\tto lookup_template_class.\n\n/testsuite\n2015-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/64970\n\t* g++.dg/cpp0x/sfinae55.C: New.\n\nFrom-SVN: r220684", "tree": {"sha": "4c1ad077c7b21025e1bc44dee91749b2d1617b6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c1ad077c7b21025e1bc44dee91749b2d1617b6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81adbcea49c3dbc5bb1fe4211e113a9141d13263", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81adbcea49c3dbc5bb1fe4211e113a9141d13263", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81adbcea49c3dbc5bb1fe4211e113a9141d13263", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81adbcea49c3dbc5bb1fe4211e113a9141d13263/comments", "author": null, "committer": null, "parents": [{"sha": "730f474bf90d59582144b23c9176276ab680ef56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/730f474bf90d59582144b23c9176276ab680ef56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/730f474bf90d59582144b23c9176276ab680ef56"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "a39acaab7593755fb97ff49dfd44a9fe5a63a250", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81adbcea49c3dbc5bb1fe4211e113a9141d13263/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81adbcea49c3dbc5bb1fe4211e113a9141d13263/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=81adbcea49c3dbc5bb1fe4211e113a9141d13263", "patch": "@@ -1,3 +1,9 @@\n+2015-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/64970\n+\t* decl.c (make_typename_type): Pass tsubst_flags_t argument\n+\tto lookup_template_class.\n+\n 2015-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/65034"}, {"sha": "bc481bfe2f5091aae1315b45a9bc9350ec7e7976", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81adbcea49c3dbc5bb1fe4211e113a9141d13263/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81adbcea49c3dbc5bb1fe4211e113a9141d13263/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=81adbcea49c3dbc5bb1fe4211e113a9141d13263", "patch": "@@ -3569,7 +3569,7 @@ make_typename_type (tree context, tree name, enum tag_types tag_type,\n     return lookup_template_class (t, TREE_OPERAND (fullname, 1),\n \t\t\t\t  NULL_TREE, context,\n \t\t\t\t  /*entering_scope=*/0,\n-\t\t\t\t  tf_warning_or_error | tf_user);\n+\t\t\t\t  complain | tf_user);\n   \n   if (DECL_ARTIFICIAL (t) || !(complain & tf_keep_type_decl))\n     t = TREE_TYPE (t);"}, {"sha": "efdc9dce3178d315562558d4843dcccd281dfd70", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81adbcea49c3dbc5bb1fe4211e113a9141d13263/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81adbcea49c3dbc5bb1fe4211e113a9141d13263/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=81adbcea49c3dbc5bb1fe4211e113a9141d13263", "patch": "@@ -1,3 +1,8 @@\n+2015-02-13  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/64970\n+\t* g++.dg/cpp0x/sfinae55.C: New.\n+\n 2015-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR ipa/65034"}, {"sha": "7b6557ee7d4a0c4bfd761d0355e412445432e20a", "filename": "gcc/testsuite/g++.dg/cpp0x/sfinae55.C", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81adbcea49c3dbc5bb1fe4211e113a9141d13263/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae55.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81adbcea49c3dbc5bb1fe4211e113a9141d13263/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae55.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fsfinae55.C?ref=81adbcea49c3dbc5bb1fe4211e113a9141d13263", "patch": "@@ -0,0 +1,33 @@\n+// PR c++/64970\n+// { dg-do compile { target c++11 } }\n+\n+template<typename T>\n+T && declval();\n+\n+template<typename T>\n+struct void_ { using type = void; };\n+\n+template<typename T>\n+using void_t = typename void_<T>::type;\n+\n+template<class A, class B>\n+struct Outer\n+{\n+    template<class C, class D>\n+    using Inner = decltype(true ? declval<C>() : declval<D>());\n+};\n+\n+template<class A, class B, typename Enable = void>\n+struct S\n+{};\n+\n+template<class A, class B>\n+struct S<A, B, void_t<typename Outer<A, B>::template Inner<A, B>>>\n+{};\n+\n+struct A{};\n+struct B{};\n+int main()\n+{\n+    S<A, B> s;\n+}"}]}