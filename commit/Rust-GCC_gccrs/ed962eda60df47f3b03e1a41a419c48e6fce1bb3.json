{"sha": "ed962eda60df47f3b03e1a41a419c48e6fce1bb3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ5NjJlZGE2MGRmNDdmM2IwM2UxYTQxYTQxOWM0OGU2ZmNlMWJiMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T11:07:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-10-26T11:07:51Z"}, "message": "[multiple changes]\n\n2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_util.adb (Is_Suspension_Object): Ensure that the scope of \"Ada\"\n\tis Standard_Standard.\n\n2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_res.adb (Is_OK_Volatile_Context): A subprogram call is an OK\n\tcontext for a reference to an effectively volatile object.\n\t(Resolve_Actuals): Add references to SPARK RM.\n\t(Within_Procedure_Call): Removed.\n\t(Within_Subprogram_Call): New routine.\n\n2015-10-26  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Check_Aggregate_Accessibility): A reference to a\n\tformal parameter in an aggregate does not need an accesibility\n\tcheck only if the formal is aliased.\n\nFrom-SVN: r229329", "tree": {"sha": "8258fa998c94458c1f520bad301cbb0847bf0a5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8258fa998c94458c1f520bad301cbb0847bf0a5f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed962eda60df47f3b03e1a41a419c48e6fce1bb3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed962eda60df47f3b03e1a41a419c48e6fce1bb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed962eda60df47f3b03e1a41a419c48e6fce1bb3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/comments", "author": null, "committer": null, "parents": [{"sha": "877a5a124a918f82f808c27b8cd64b5bd07f844f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/877a5a124a918f82f808c27b8cd64b5bd07f844f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/877a5a124a918f82f808c27b8cd64b5bd07f844f"}], "stats": {"total": 61, "additions": 44, "deletions": 17}, "files": [{"sha": "0a88e17c9e0ae47f4e8d5237ac7fd2e99d53624d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ed962eda60df47f3b03e1a41a419c48e6fce1bb3", "patch": "@@ -1,3 +1,22 @@\n+2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_util.adb (Is_Suspension_Object): Ensure that the scope of \"Ada\"\n+\tis Standard_Standard.\n+\n+2015-10-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_res.adb (Is_OK_Volatile_Context): A subprogram call is an OK\n+\tcontext for a reference to an effectively volatile object.\n+\t(Resolve_Actuals): Add references to SPARK RM.\n+\t(Within_Procedure_Call): Removed.\n+\t(Within_Subprogram_Call): New routine.\n+\n+2015-10-26  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Check_Aggregate_Accessibility): A reference to a\n+\tformal parameter in an aggregate does not need an accesibility\n+\tcheck only if the formal is aliased.\n+\n 2015-10-26  Claire Dross  <dross@adacore.com>\n \n \t* sem_aux.ads (Number_Components): Can return 0 when called on"}, {"sha": "86363ca683ee271f5907042965ffbeb18b3d9bca", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=ed962eda60df47f3b03e1a41a419c48e6fce1bb3", "patch": "@@ -661,10 +661,13 @@ package body Sem_Ch6 is\n                         Obj := Prefix (Obj);\n                      end loop;\n \n+                     --  No check needed for an aliased formal.\n+                     --  A run-time check may still be needed ???\n+\n                      if Is_Entity_Name (Obj)\n                        and then Is_Formal (Entity (Obj))\n+                       and then Is_Aliased (Entity (Obj))\n                      then\n-                        --  A run-time check may be needed ???\n                         null;\n \n                      elsif Object_Access_Level (Obj) >"}, {"sha": "7e73617ef0800d24f97b9f03e7df4e6d0c2418af", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ed962eda60df47f3b03e1a41a419c48e6fce1bb3", "patch": "@@ -4464,17 +4464,18 @@ package body Sem_Res is\n               and then Comes_From_Source (A)\n               and then Is_Effectively_Volatile_Object (A)\n             then\n-               --  An effectively volatile object may act as an actual\n-               --  parameter when the corresponding formal is of a non-scalar\n-               --  volatile type.\n+               --  An effectively volatile object may act as an actual when the\n+               --  corresponding formal is of a non-scalar volatile type\n+               --  (SPARK RM 7.1.3(12)).\n \n                if Is_Volatile (Etype (F))\n                  and then not Is_Scalar_Type (Etype (F))\n                then\n                   null;\n \n-               --  An effectively volatile object may act as an actual\n-               --  parameter in a call to an instance of Unchecked_Conversion.\n+               --  An effectively volatile object may act as an actual in a\n+               --  call to an instance of Unchecked_Conversion.\n+               --  (SPARK RM 7.1.3(12)).\n \n                elsif Is_Unchecked_Conversion_Instance (Nam) then\n                   null;\n@@ -6843,7 +6844,7 @@ package body Sem_Res is\n          function Within_Check (Nod : Node_Id) return Boolean;\n          --  Determine whether an arbitrary node appears in a check node\n \n-         function Within_Procedure_Call (Nod : Node_Id) return Boolean;\n+         function Within_Subprogram_Call (Nod : Node_Id) return Boolean;\n          --  Determine whether an arbitrary node appears in a procedure call\n \n          function Within_Volatile_Function (Id : Entity_Id) return Boolean;\n@@ -6907,19 +6908,21 @@ package body Sem_Res is\n             return False;\n          end Within_Check;\n \n-         ---------------------------\n-         -- Within_Procedure_Call --\n-         ---------------------------\n+         ----------------------------\n+         -- Within_Subprogram_Call --\n+         ----------------------------\n \n-         function Within_Procedure_Call (Nod : Node_Id) return Boolean is\n+         function Within_Subprogram_Call (Nod : Node_Id) return Boolean is\n             Par : Node_Id;\n \n          begin\n-            --  Climb the parent chain looking for a procedure call\n+            --  Climb the parent chain looking for a function or procedure call\n \n             Par := Nod;\n             while Present (Par) loop\n-               if Nkind (Par) = N_Procedure_Call_Statement then\n+               if Nkind_In (Par, N_Function_Call,\n+                                 N_Procedure_Call_Statement)\n+               then\n                   return True;\n \n                --  Prevent the search from going too far\n@@ -6932,7 +6935,7 @@ package body Sem_Res is\n             end loop;\n \n             return False;\n-         end Within_Procedure_Call;\n+         end Within_Subprogram_Call;\n \n          ------------------------------\n          -- Within_Volatile_Function --\n@@ -7049,10 +7052,10 @@ package body Sem_Res is\n             return True;\n \n          --  Assume that references to effectively volatile objects that appear\n-         --  as actual parameters in a procedure call are always legal. A full\n+         --  as actual parameters in a subprogram call are always legal. A full\n          --  legality check is done when the actuals are resolved.\n \n-         elsif Within_Procedure_Call (Context) then\n+         elsif Within_Subprogram_Call (Context) then\n             return True;\n \n          --  Otherwise the context is not suitable for an effectively volatile"}, {"sha": "313591add7a31a28fe89b70f8f3aa0e81e973ebf", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed962eda60df47f3b03e1a41a419c48e6fce1bb3/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ed962eda60df47f3b03e1a41a419c48e6fce1bb3", "patch": "@@ -11331,7 +11331,9 @@ package body Sem_Util is\n                 and then Present (Scope (Id))\n                 and then Chars (Scope (Id)) = Name_Synchronous_Task_Control\n                 and then Present (Scope (Scope (Id)))\n-                and then Chars (Scope (Scope (Id))) = Name_Ada;\n+                and then Chars (Scope (Scope (Id))) = Name_Ada\n+                and then Present (Scope (Scope (Scope (Id))))\n+                and then Scope (Scope (Scope (Id))) = Standard_Standard;\n          end Is_Suspension_Object;\n \n          --  Local variables"}]}