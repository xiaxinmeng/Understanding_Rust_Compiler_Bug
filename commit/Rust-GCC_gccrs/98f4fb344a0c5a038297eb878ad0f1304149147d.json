{"sha": "98f4fb344a0c5a038297eb878ad0f1304149147d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThmNGZiMzQ0YTBjNWEwMzgyOTdlYjg3OGFkMGYxMzA0MTQ5MTQ3ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-11-02T10:20:32Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-11-02T10:20:32Z"}, "message": "re PR tree-optimization/50902 (intVar/dinternal.cc ICEs at -O2 -ftree-vectorize)\n\n2011-11-02  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/50902\n\t* tree-vect-stmts.c (vectorizable_load): Properly convert\n\tan invariant initializer element.\n\n\t* gcc.dg/torture/pr50902.c: New testcase.\n\nFrom-SVN: r180765", "tree": {"sha": "3dd424bf2a666e889d0ec9bf48f2cdab9161e84f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dd424bf2a666e889d0ec9bf48f2cdab9161e84f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98f4fb344a0c5a038297eb878ad0f1304149147d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f4fb344a0c5a038297eb878ad0f1304149147d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98f4fb344a0c5a038297eb878ad0f1304149147d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98f4fb344a0c5a038297eb878ad0f1304149147d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3164517929a2f21feb2c7668a4941a36288f57d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3164517929a2f21feb2c7668a4941a36288f57d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3164517929a2f21feb2c7668a4941a36288f57d3"}], "stats": {"total": 33, "additions": 31, "deletions": 2}, "files": [{"sha": "87498634afa43f20e56966cf058684f4cdb76e82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,3 +1,9 @@\n+2011-11-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50902\n+\t* tree-vect-stmts.c (vectorizable_load): Properly convert\n+\tan invariant initializer element.\n+\n 2010-11-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/50890"}, {"sha": "389dfd4f56039b4b0e22eaa17c937b3fc39b074b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -1,3 +1,8 @@\n+2011-11-02  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50902\n+\t* gcc.dg/torture/pr50902.c: New testcase.\n+\n 2010-11-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/50890"}, {"sha": "5b7275b839d6e7000a526dafaec35b1d0d1a3d6c", "filename": "gcc/testsuite/gcc.dg/torture/pr50902.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr50902.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr50902.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr50902.c?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+\n+_Bool data[128];\n+void foo (_Bool *init)\n+{\n+  int i;\n+  for (i = 0; i < 128; i++)\n+    data[i] = *init;\n+}"}, {"sha": "e91efc96ade9846e6d244ab2c19a7adc2f754f69", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98f4fb344a0c5a038297eb878ad0f1304149147d/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=98f4fb344a0c5a038297eb878ad0f1304149147d", "patch": "@@ -4726,11 +4726,20 @@ vectorizable_load (gimple stmt, gimple_stmt_iterator *gsi, gimple *vec_stmt,\n \t      /* 4. Handle invariant-load.  */\n \t      if (inv_p && !bb_vinfo)\n \t\t{\n-\t\t  tree vec_inv;\n+\t\t  tree tem, vec_inv;\n \t\t  gimple_stmt_iterator gsi2 = *gsi;\n \t\t  gcc_assert (!strided_load);\n \t\t  gsi_next (&gsi2);\n-\t\t  vec_inv = build_vector_from_val (vectype, scalar_dest);\n+\t\t  tem = scalar_dest;\n+\t\t  if (!useless_type_conversion_p (TREE_TYPE (vectype),\n+\t\t\t\t\t\t  TREE_TYPE (tem)))\n+\t\t    {\n+\t\t      tem = fold_convert (TREE_TYPE (vectype), tem);\n+\t\t      tem = force_gimple_operand_gsi (&gsi2, tem, true,\n+\t\t\t\t\t\t      NULL_TREE, true,\n+\t\t\t\t\t\t      GSI_SAME_STMT);\n+\t\t    }\n+\t\t  vec_inv = build_vector_from_val (vectype, tem);\n \t\t  new_temp = vect_init_vector (stmt, vec_inv,\n \t\t\t\t\t       vectype, &gsi2);\n \t\t  new_stmt = SSA_NAME_DEF_STMT (new_temp);"}]}