{"sha": "97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTdiM2QwZjAxNmQ0Y2U0Yjk3M2NkYTIxM2IwY2Q2ODM1ZWNhNmIxNQ==", "commit": {"author": {"name": "J\"orn Rennecke", "email": "joern.rennecke@superh.com", "date": "2003-08-07T19:35:52Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2003-08-07T19:35:52Z"}, "message": "sh.h (CALL_USED_REGISTERS): Include PR_REG and PR_MEDIA_REG.\n\n\t* sh.h (CALL_USED_REGISTERS): Include PR_REG and PR_MEDIA_REG.\n\t* sh.c (calc_live_regs): Use sh_pr_n_sets to determine if pr\n\tneeds saving on SHmedia.\n\nFrom-SVN: r70227", "tree": {"sha": "0602721444e6f5481721d31159c40410647ac20a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0602721444e6f5481721d31159c40410647ac20a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97b3d0f016d4ce4b973cda213b0cd6835eca6b15/comments", "author": null, "committer": null, "parents": [{"sha": "3adee96c46c8f70fb52de86775c1524654f10f22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3adee96c46c8f70fb52de86775c1524654f10f22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3adee96c46c8f70fb52de86775c1524654f10f22"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "9568cca24d59612f4938884701fd4c3994fce493", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b3d0f016d4ce4b973cda213b0cd6835eca6b15/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b3d0f016d4ce4b973cda213b0cd6835eca6b15/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "patch": "@@ -1,3 +1,9 @@\n+2003-08-07  J\"orn Rennecke <joern.rennecke@superh.com>\n+\n+\t* sh.h (CALL_USED_REGISTERS): Include PR_REG and PR_MEDIA_REG.\n+\t* sh.c (calc_live_regs): Use sh_pr_n_sets to determine if pr\n+\tneeds saving on SHmedia.\n+\n 2003-08-07  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* config/s390/s390.md: Replace all occurrences of \\\\t with \\t."}, {"sha": "d64d919fbbc5bf527cfb852840e467b89711cf8c", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b3d0f016d4ce4b973cda213b0cd6835eca6b15/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b3d0f016d4ce4b973cda213b0cd6835eca6b15/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "patch": "@@ -4848,7 +4848,7 @@ calc_live_regs (live_regs_mask)\n      the initial value can become the PR_MEDIA_REG hard register, as seen for\n      execute/20010122-1.c:test9.  */\n   if (TARGET_SHMEDIA)\n-    pr_live = regs_ever_live[PR_MEDIA_REG];\n+    pr_live = sh_pr_n_sets ();\n   else\n     {\n       rtx pr_initial = has_hard_reg_initial_val (Pmode, PR_REG);\n@@ -4867,7 +4867,7 @@ calc_live_regs (live_regs_mask)\n   has_call = TARGET_SHMEDIA ? ! leaf_function_p () : pr_live;\n   for (count = 0, reg = FIRST_PSEUDO_REGISTER - 1; reg >= 0; reg--)\n     {\n-      if ((! TARGET_SHMEDIA && reg == PR_REG)\n+      if (reg == (TARGET_SHMEDIA ? PR_MEDIA_REG : PR_REG)\n \t  ? pr_live\n \t  : (interrupt_handler && ! pragma_trapa)\n \t  ? (/* Need to save all the regs ever live.  */"}, {"sha": "3ab2120e9a51a7da56f664716e70ed1e2bca429b", "filename": "gcc/config/sh/sh.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/97b3d0f016d4ce4b973cda213b0cd6835eca6b15/gcc%2Fconfig%2Fsh%2Fsh.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/97b3d0f016d4ce4b973cda213b0cd6835eca6b15/gcc%2Fconfig%2Fsh%2Fsh.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.h?ref=97b3d0f016d4ce4b973cda213b0cd6835eca6b15", "patch": "@@ -926,7 +926,7 @@ extern char sh_additional_register_names[ADDREGNAMES_SIZE] \\\n      Only the lower 32bits of R10-R14 are guaranteed to be preserved\t\\\n      across SH5 function calls.  */\t\t\t\t\t\\\n   0,      0,      0,      0,      0,      0,      0,      1,\t\t\\\n-  1,      1,      0,      1,      1,      1,      1,      1,\t\t\\\n+  1,      1,      1,      1,      1,      1,      1,      1,\t\t\\\n   1,      1,      1,      1,      0,      0,      0,      0,\t\t\\\n   0,      0,      0,      0,      1,      1,      1,      1,\t\t\\\n   1,      1,      1,      1,      0,      0,      0,      0,\t\t\\\n@@ -946,7 +946,7 @@ extern char sh_additional_register_names[ADDREGNAMES_SIZE] \\\n /* XD registers.  */\t\t\t\t\t\t\t\\\n   1,      1,      1,      1,      1,      1,      0,      0,\t\t\\\n /*\"gbr\",  \"ap\",\t  \"pr\",   \"t\",    \"mach\", \"macl\", \"fpul\", \"fpscr\", */\t\\\n-  1,      1,      0,      1,      1,      1,      1,      1,\t\t\\\n+  1,      1,      1,      1,      1,      1,      1,      1,\t\t\\\n /*\"rap\" */\t\t\t\t\t\t\t\t\\\n   1,\t\t\t\t\t\t\t\t\t\\\n }"}]}