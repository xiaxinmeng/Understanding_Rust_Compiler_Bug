{"sha": "404a671b597c5d1090c3cc18a91959c646ff0246", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDA0YTY3MWI1OTdjNWQxMDkwYzNjYzE4YTkxOTU5YzY0NmZmMDI0Ng==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2019-12-12T17:00:46Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2019-12-12T17:00:46Z"}, "message": "Add support for some more AVR devices from avrxmega3 family.\n\n\t* config/avr/avr-mcus.def (attiny1604, attiny1606, attiny1607)\n\t(attiny402, attiny404, attiny406)\n\t(attiny804, attiny806, attiny807)\n\t(attiny202, attiny204): Add AVR_MCU lines to support them.\n\t* doc/avr-mmcu.texi: Regenerate.\n\nFrom-SVN: r279309", "tree": {"sha": "9e9ab9d36767690059c4865af90a98d4fc4ca3b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e9ab9d36767690059c4865af90a98d4fc4ca3b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/404a671b597c5d1090c3cc18a91959c646ff0246", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/404a671b597c5d1090c3cc18a91959c646ff0246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/404a671b597c5d1090c3cc18a91959c646ff0246", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/404a671b597c5d1090c3cc18a91959c646ff0246/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1505d01462a5c99ecee7847d913836f898f8b65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1505d01462a5c99ecee7847d913836f898f8b65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1505d01462a5c99ecee7847d913836f898f8b65"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "35639c3ac93e1527d867ac0924d7c299af1307e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/404a671b597c5d1090c3cc18a91959c646ff0246/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/404a671b597c5d1090c3cc18a91959c646ff0246/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=404a671b597c5d1090c3cc18a91959c646ff0246", "patch": "@@ -1,3 +1,13 @@\n+2019-12-12  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tAdd support for some more AVR devices from avrxmega3 family.\n+\n+\t* config/avr/avr-mcus.def (attiny1604, attiny1606, attiny1607)\n+\t(attiny402, attiny404, attiny406)\n+\t(attiny804, attiny806, attiny807)\n+\t(attiny202, attiny204): Add AVR_MCU lines to support them.\n+\t* doc/avr-mmcu.texi: Regenerate.\n+\n 2019-12-12  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-prop.c (read_ipcp_transformation_info): Fix undefined ordering"}, {"sha": "95ac21d7b5f3ec19dd7185eb698208a8aef011e7", "filename": "gcc/config/avr/avr-mcus.def", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/404a671b597c5d1090c3cc18a91959c646ff0246/gcc%2Fconfig%2Favr%2Favr-mcus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/404a671b597c5d1090c3cc18a91959c646ff0246/gcc%2Fconfig%2Favr%2Favr-mcus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-mcus.def?ref=404a671b597c5d1090c3cc18a91959c646ff0246", "patch": "@@ -307,6 +307,17 @@ AVR_MCU (\"atxmega32c4\",      ARCH_AVRXMEGA2, AVR_ISA_RMW,  \"__AVR_ATxmega32C4__\"\n AVR_MCU (\"atxmega32e5\",      ARCH_AVRXMEGA2, AVR_ISA_NONE, \"__AVR_ATxmega32E5__\",  0x2000, 0x0, 0x9000, 0)\n /* Xmega, Flash + RAM < 64K, flash visible in RAM address space */\n AVR_MCU (\"avrxmega3\",        ARCH_AVRXMEGA3, AVR_ISA_NONE,  NULL,                  0x3f00, 0x0, 0x8000, 0)\n+AVR_MCU (\"attiny202\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny202__\",   0x3f80, 0x0, 0x800,  0x8000)\n+AVR_MCU (\"attiny204\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny204__\",   0x3f80, 0x0, 0x800,  0x8000)\n+AVR_MCU (\"attiny402\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny402__\",   0x3f00, 0x0, 0x1000, 0x8000)\n+AVR_MCU (\"attiny404\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny404__\",   0x3f00, 0x0, 0x1000, 0x8000)\n+AVR_MCU (\"attiny406\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny406__\",   0x3f00, 0x0, 0x1000, 0x8000)\n+AVR_MCU (\"attiny804\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny804__\",   0x3e00, 0x0, 0x2000, 0x8000)\n+AVR_MCU (\"attiny806\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny806__\",   0x3e00, 0x0, 0x2000, 0x8000)\n+AVR_MCU (\"attiny807\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny807__\",   0x3e00, 0x0, 0x2000, 0x8000)\n+AVR_MCU (\"attiny1604\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1604__\",  0x3c00, 0x0, 0x4000, 0x8000)\n+AVR_MCU (\"attiny1606\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1606__\",  0x3c00, 0x0, 0x4000, 0x8000)\n+AVR_MCU (\"attiny1607\",       ARCH_AVRXMEGA3, AVR_ISA_NONE,  \"__AVR_ATtiny1607__\",  0x3c00, 0x0, 0x4000, 0x8000)\n AVR_MCU (\"attiny212\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny212__\",   0x3f80, 0x0, 0x800,  0x8000)\n AVR_MCU (\"attiny214\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny214__\",   0x3f80, 0x0, 0x800,  0x8000)\n AVR_MCU (\"attiny412\",        ARCH_AVRXMEGA3, AVR_ISA_RCALL, \"__AVR_ATtiny412__\",   0x3f00, 0x0, 0x1000, 0x8000)"}, {"sha": "8c8d4dad66351f265208a7232462b4f51dfdf731", "filename": "gcc/doc/avr-mmcu.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/404a671b597c5d1090c3cc18a91959c646ff0246/gcc%2Fdoc%2Favr-mmcu.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/404a671b597c5d1090c3cc18a91959c646ff0246/gcc%2Fdoc%2Favr-mmcu.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Favr-mmcu.texi?ref=404a671b597c5d1090c3cc18a91959c646ff0246", "patch": "@@ -54,7 +54,7 @@\n \n @item avrxmega3\n ``XMEGA'' devices with up to 64@tie{}KiB of combined program memory and RAM, and with program memory visible in the RAM address space.\n-@*@var{mcu}@tie{}= @code{attiny212}, @code{attiny214}, @code{attiny412}, @code{attiny414}, @code{attiny416}, @code{attiny417}, @code{attiny814}, @code{attiny816}, @code{attiny817}, @code{attiny1614}, @code{attiny1616}, @code{attiny1617}, @code{attiny3214}, @code{attiny3216}, @code{attiny3217}, @code{atmega808}, @code{atmega809}, @code{atmega1608}, @code{atmega1609}, @code{atmega3208}, @code{atmega3209}, @code{atmega4808}, @code{atmega4809}.\n+@*@var{mcu}@tie{}= @code{attiny202}, @code{attiny204}, @code{attiny212}, @code{attiny214}, @code{attiny402}, @code{attiny404}, @code{attiny406}, @code{attiny412}, @code{attiny414}, @code{attiny416}, @code{attiny417}, @code{attiny804}, @code{attiny806}, @code{attiny807}, @code{attiny814}, @code{attiny816}, @code{attiny817}, @code{attiny1604}, @code{attiny1606}, @code{attiny1607}, @code{attiny1614}, @code{attiny1616}, @code{attiny1617}, @code{attiny3214}, @code{attiny3216}, @code{attiny3217}, @code{atmega808}, @code{atmega809}, @code{atmega1608}, @code{atmega1609}, @code{atmega3208}, @code{atmega3209}, @code{atmega4808}, @code{atmega4809}.\n \n @item avrxmega4\n ``XMEGA'' devices with more than 64@tie{}KiB and up to 128@tie{}KiB of program memory."}]}