{"sha": "57b4d355a187943b042ca3e9a86bccf74c0e0d84", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTdiNGQzNTVhMTg3OTQzYjA0MmNhM2U5YTg2YmNjZjc0YzBlMGQ4NA==", "commit": {"author": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-05-20T12:55:45Z"}, "committer": {"name": "Janne Blomqvist", "email": "jb@gcc.gnu.org", "date": "2011-05-20T12:55:45Z"}, "message": "Clarify FP exception documentation and messages\n\nFrom-SVN: r173944", "tree": {"sha": "7735a57324efcc39f0b3ab6c3034917ad7641e3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7735a57324efcc39f0b3ab6c3034917ad7641e3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57b4d355a187943b042ca3e9a86bccf74c0e0d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b4d355a187943b042ca3e9a86bccf74c0e0d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57b4d355a187943b042ca3e9a86bccf74c0e0d84", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57b4d355a187943b042ca3e9a86bccf74c0e0d84/comments", "author": null, "committer": null, "parents": [{"sha": "0ea80a160332d4676919e31a7bdff1d8d7100af0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea80a160332d4676919e31a7bdff1d8d7100af0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea80a160332d4676919e31a7bdff1d8d7100af0"}], "stats": {"total": 112, "additions": 71, "deletions": 41}, "files": [{"sha": "5677c4c48fad9c7755a44aad8341cc7210acc2bb", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -1,4 +1,12 @@\n-2011-06-19  Tobias Burnus  <burnus@net-b.de>\n+2011-05-20  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+        * gfortran.texi (set_fpe): Update documentation.\n+        * invoke.texi (-ffpe-trap): Likewise.\n+        * libgfortran.h (GFC_FPE_PRECISION): Rename to GFC_FPE_INEXACT.\n+        * options.c (gfc_handle_fpe_trap_option): Handle inexact and make\n+        precision an alias for it.\n+\n+2011-05-19  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/18918\n \t* trans-types.c (gfc_get_element_type): Handle scalar coarrays."}, {"sha": "4db506c5391192082a61108586f9b2c42d754c1b", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -2718,16 +2718,15 @@ int main (int argc, char *argv[])\n \n \n @node _gfortran_set_fpe\n-@subsection @code{_gfortran_set_fpe} --- Set when a Floating Point Exception should be raised\n+@subsection @code{_gfortran_set_fpe} --- Enable floating point exception traps\n @fnindex _gfortran_set_fpe\n @cindex libgfortran initialization, set_fpe\n \n @table @asis\n @item @emph{Description}:\n-@code{_gfortran_set_fpe} sets the IEEE exceptions for which a\n-Floating Point Exception (FPE) should be raised.  On most systems,\n-this will result in a SIGFPE signal being sent and the program\n-being interrupted.\n+@code{_gfortran_set_fpe} enables floating point exception traps for\n+the specified exceptions.  On most systems, this will result in a\n+SIGFPE signal being sent and the program being aborted.\n \n @item @emph{Syntax}:\n @code{void _gfortran_set_fpe (int val)}\n@@ -2738,7 +2737,7 @@ being interrupted.\n (bitwise or-ed) zero (0, default) no trapping,\n @code{GFC_FPE_INVALID} (1), @code{GFC_FPE_DENORMAL} (2),\n @code{GFC_FPE_ZERO} (4), @code{GFC_FPE_OVERFLOW} (8),\n-@code{GFC_FPE_UNDERFLOW} (16), and @code{GFC_FPE_PRECISION} (32).\n+@code{GFC_FPE_UNDERFLOW} (16), and @code{GFC_FPE_INEXACT} (32).\n @end multitable\n \n @item @emph{Example}:"}, {"sha": "41fee670a6c72fdb4274c50a03ce9c8a4c48e409", "filename": "gcc/fortran/invoke.texi", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finvoke.texi?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -919,21 +919,31 @@ GNU Fortran compiler itself.  This option is deprecated; use\n \n @item -ffpe-trap=@var{list}\n @opindex @code{ffpe-trap=}@var{list}\n-Specify a list of IEEE exceptions when a Floating Point Exception\n-(FPE) should be raised.  On most systems, this will result in a SIGFPE\n-signal being sent and the program being interrupted, producing a core\n-file useful for debugging.  @var{list} is a (possibly empty) comma-separated\n-list of the following IEEE exceptions: @samp{invalid} (invalid floating\n-point operation, such as @code{SQRT(-1.0)}), @samp{zero} (division by\n-zero), @samp{overflow} (overflow in a floating point operation),\n-@samp{underflow} (underflow in a floating point operation),\n-@samp{precision} (loss of precision during operation) and @samp{denormal}\n-(operation produced a denormal value).\n-\n-Some of the routines in the Fortran runtime library, like\n-@samp{CPU_TIME}, are likely to trigger floating point exceptions when\n-@code{ffpe-trap=precision} is used. For this reason, the use of \n-@code{ffpe-trap=precision} is not recommended.\n+Specify a list of floating point exception traps to enable.  On most\n+systems, if a floating point exception occurs and the trap for that\n+exception is enabled, a SIGFPE signal will be sent and the program\n+being aborted, producing a core file useful for debugging.  @var{list}\n+is a (possibly empty) comma-separated list of the following\n+exceptions: @samp{invalid} (invalid floating point operation, such as\n+@code{SQRT(-1.0)}), @samp{zero} (division by zero), @samp{overflow}\n+(overflow in a floating point operation), @samp{underflow} (underflow\n+in a floating point operation), @samp{inexact} (loss of precision\n+during operation), and @samp{denormal} (operation performed on a\n+denormal value).  The first five exceptions correspond to the five\n+IEEE 754 exceptions, whereas the last one (@samp{denormal}) is not\n+part of the IEEE 754 standard but is available on some common\n+architectures such as x86.\n+\n+The first three exceptions (@samp{invalid}, @samp{zero}, and\n+@samp{overflow}) often indicate serious errors, and unless the program\n+has provisions for dealing with these exceptions, enabling traps for\n+these three exceptions is probably a good idea.\n+\n+Many, if not most, floating point operations incur loss of precision\n+due to rounding, and hence the @code{ffpe-trap=inexact} is likely to\n+be uninteresting in practice.\n+\n+By default no exception traps are enabled.\n \n @item -fno-backtrace\n @opindex @code{fno-backtrace}"}, {"sha": "b2137bbf80fb072d44960f9885861107af1bbd89", "filename": "gcc/fortran/libgfortran.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Flibgfortran.h?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -42,7 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #define GFC_FPE_ZERO       (1<<2)\n #define GFC_FPE_OVERFLOW   (1<<3)\n #define GFC_FPE_UNDERFLOW  (1<<4)\n-#define GFC_FPE_PRECISION  (1<<5)\n+#define GFC_FPE_INEXACT    (1<<5)\n \n \n /* Bitmasks for the various runtime checks that can be enabled.  */"}, {"sha": "4c59bd59eeb7ccdde0fcfa02c314ab3023810381", "filename": "gcc/fortran/options.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2Foptions.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/gcc%2Ffortran%2Foptions.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Foptions.c?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -492,12 +492,14 @@ static void\n gfc_handle_fpe_trap_option (const char *arg)\n {\n   int result, pos = 0, n;\n+  /* precision is a backwards compatibility alias for inexact.  */\n   static const char * const exception[] = { \"invalid\", \"denormal\", \"zero\",\n \t\t\t\t\t    \"overflow\", \"underflow\",\n-\t\t\t\t\t    \"precision\", NULL };\n+\t\t\t\t\t    \"inexact\", \"precision\", NULL };\n   static const int opt_exception[] = { GFC_FPE_INVALID, GFC_FPE_DENORMAL,\n \t\t\t\t       GFC_FPE_ZERO, GFC_FPE_OVERFLOW,\n-\t\t\t\t       GFC_FPE_UNDERFLOW, GFC_FPE_PRECISION,\n+\t\t\t\t       GFC_FPE_UNDERFLOW, GFC_FPE_INEXACT,\n+\t\t\t\t       GFC_FPE_INEXACT,\n \t\t\t\t       0 };\n  \n   while (*arg)"}, {"sha": "9147014a21af7bc2a2b9f364273a80eb8c8e1955", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -1,3 +1,14 @@\n+2011-05-20  Janne Blomqvist  <jb@gcc.gnu.org>\n+\n+        * config/fpu-387.h (set_fpu): Use renamed inexact macro.\n+        * config/fpu-aix.h (set_fpu): Clarify error messages, use renamed\n+        inexact macro, set TRP_INEXACT for inexact exception instead of\n+        TRP_UNDERFLOW.\n+        * config/fpu-generic.h (set_fpu): Clarify error messages, use\n+        renamed inexact macro.\n+        * config/fpu-glibc.h (set_fpu): Likewise.\n+        * config/fpu-sysv.h (set_fpu): Likewise.\n+\n 2011-05-14  Tobias Burnus  <burnus@net-b.de>\n \n \t* runtime/stop.c (error_stop_string, error_stop_numeric):"}, {"sha": "c3e57cba39bae6d13e76e15c372b1afe2cb72a33", "filename": "libgfortran/config/fpu-387.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-387.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-387.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-387.h?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -110,7 +110,7 @@ void set_fpu (void)\n   if (options.fpe & GFC_FPE_ZERO) cw &= ~_FPU_MASK_ZM;\n   if (options.fpe & GFC_FPE_OVERFLOW) cw &= ~_FPU_MASK_OM;\n   if (options.fpe & GFC_FPE_UNDERFLOW) cw &= ~_FPU_MASK_UM;\n-  if (options.fpe & GFC_FPE_PRECISION) cw &= ~_FPU_MASK_PM;\n+  if (options.fpe & GFC_FPE_INEXACT) cw &= ~_FPU_MASK_PM;\n \n   asm volatile (\"fldcw %0\" : : \"m\" (cw));\n \n@@ -129,7 +129,7 @@ void set_fpu (void)\n       if (options.fpe & GFC_FPE_ZERO) cw_sse &= ~(_FPU_MASK_ZM << 7);\n       if (options.fpe & GFC_FPE_OVERFLOW) cw_sse &= ~(_FPU_MASK_OM << 7);\n       if (options.fpe & GFC_FPE_UNDERFLOW) cw_sse &= ~(_FPU_MASK_UM << 7);\n-      if (options.fpe & GFC_FPE_PRECISION) cw_sse &= ~(_FPU_MASK_PM << 7);\n+      if (options.fpe & GFC_FPE_INEXACT) cw_sse &= ~(_FPU_MASK_PM << 7);\n \n       asm volatile (\"ldmxcsr %0\" : : \"m\" (cw_sse));\n     }"}, {"sha": "1348976c33113139fdb0ed0bb4b0d16e411d8317", "filename": "libgfortran/config/fpu-aix.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-aix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-aix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-aix.h?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -43,7 +43,7 @@ set_fpu (void)\n #endif\n \n   if (options.fpe & GFC_FPE_DENORMAL)\n-    estr_write (\"Fortran runtime warning: IEEE 'denormal number' \"\n+    estr_write (\"Fortran runtime warning: Floating point 'denormal operand' \"\n \t        \"exception not supported.\\n\");\n \n   if (options.fpe & GFC_FPE_ZERO)\n@@ -70,11 +70,11 @@ set_fpu (void)\n \t        \"exception not supported.\\n\");\n #endif\n \n-  if (options.fpe & GFC_FPE_PRECISION)\n-#ifdef TRP_UNDERFLOW\n-    mode |= TRP_UNDERFLOW;\n+  if (options.fpe & GFC_FPE_INEXACT)\n+#ifdef TRP_INEXACT\n+    mode |= TRP_INEXACT;\n #else\n-    estr_write (\"Fortran runtime warning: IEEE 'loss of precision' \"\n+    estr_write (\"Fortran runtime warning: IEEE 'inexact' \"\n \t        \"exception not supported.\\n\");\n #endif\n "}, {"sha": "b64f90cc58433c18b2317f6b7b62585e1d12a03e", "filename": "libgfortran/config/fpu-generic.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-generic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-generic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-generic.h?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -35,7 +35,7 @@ set_fpu (void)\n     estr_write (\"Fortran runtime warning: IEEE 'invalid operation' \"\n \t        \"exception not supported.\\n\");\n   if (options.fpe & GFC_FPE_DENORMAL)\n-    estr_write (\"Fortran runtime warning: IEEE 'denormal number' \"\n+    estr_write (\"Fortran runtime warning: Floating point 'denormal operand' \"\n \t        \"exception not supported.\\n\");\n   if (options.fpe & GFC_FPE_ZERO)\n     estr_write (\"Fortran runtime warning: IEEE 'division by zero' \"\n@@ -46,7 +46,7 @@ set_fpu (void)\n   if (options.fpe & GFC_FPE_UNDERFLOW)\n     estr_write (\"Fortran runtime warning: IEEE 'underflow' \"\n \t        \"exception not supported.\\n\");\n-  if (options.fpe & GFC_FPE_PRECISION)\n-    estr_write (\"Fortran runtime warning: IEEE 'loss of precision' \"\n+  if (options.fpe & GFC_FPE_INEXACT)\n+    estr_write (\"Fortran runtime warning: IEEE 'inexact' \"\n \t        \"exception not supported.\\n\");\n }"}, {"sha": "7bdb7b76af67ae587bc27e8ec41d061aae1de8cf", "filename": "libgfortran/config/fpu-glibc.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-glibc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-glibc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-glibc.h?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -49,7 +49,7 @@ void set_fpu (void)\n #ifdef FE_DENORMAL\n     feenableexcept (FE_DENORMAL);\n #else\n-    estr_write (\"Fortran runtime warning: IEEE 'denormal number' \"\n+    estr_write (\"Fortran runtime warning: Floating point 'denormal operand' \"\n \t        \"exception not supported.\\n\");\n #endif\n \n@@ -77,11 +77,11 @@ void set_fpu (void)\n \t        \"exception not supported.\\n\");\n #endif\n \n-  if (options.fpe & GFC_FPE_PRECISION)\n+  if (options.fpe & GFC_FPE_INEXACT)\n #ifdef FE_INEXACT\n     feenableexcept (FE_INEXACT);\n #else\n-    estr_write (\"Fortran runtime warning: IEEE 'loss of precision' \"\n+    estr_write (\"Fortran runtime warning: IEEE 'inexact' \"\n \t        \"exception not supported.\\n\");\n #endif\n }"}, {"sha": "8838f13016cf5ddaadb802224d6351fa3788231e", "filename": "libgfortran/config/fpu-sysv.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-sysv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57b4d355a187943b042ca3e9a86bccf74c0e0d84/libgfortran%2Fconfig%2Ffpu-sysv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig%2Ffpu-sysv.h?ref=57b4d355a187943b042ca3e9a86bccf74c0e0d84", "patch": "@@ -42,7 +42,7 @@ set_fpu (void)\n #ifdef FP_X_DNML\n     cw |= FP_X_DNML;\n #else\n-    estr_write (\"Fortran runtime warning: IEEE 'denormal number' \"\n+    estr_write (\"Fortran runtime warning: Floating point 'denormal operand' \"\n \t        \"exception not supported.\\n\");\n #endif\n \n@@ -70,11 +70,11 @@ set_fpu (void)\n \t        \"exception not supported.\\n\");\n #endif\n \n-  if (options.fpe & GFC_FPE_PRECISION)\n+  if (options.fpe & GFC_FPE_INEXACT)\n #ifdef FP_X_IMP\n     cw |= FP_X_IMP;\n #else\n-    estr_write (\"Fortran runtime warning: IEEE 'loss of precision' \"\n+    estr_write (\"Fortran runtime warning: IEEE 'inexact' \"\n \t        \"exception not supported.\\n\");\n #endif\n "}]}