{"sha": "6624075e7e996d61143bf5fc106fa2cb61c614f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyNDA3NWU3ZTk5NmQ2MTE0M2JmNWZjMTA2ZmEyY2I2MWM2MTRmNg==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-11-09T16:14:00Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-11-09T16:14:00Z"}, "message": "c-family: Avoid unnecessary work when -Wpragmas is being ignored\n\nThis speeds up handle_pragma_diagnostic by avoiding computing a spelling\nsuggestion for an unrecognized option inside a #pragma directive when\n-Wpragmas warnings are being suppressed.\n\nIn the range-v3 library, which contains many instances of\n\n  #pragma GCC diagnostic push\n  #pragma GCC diagnostic ignored \"-Wpragmas\"\n  #pragma GCC diagnostic ignored \"-Wfoo\"\n  ...\n  #pragma GCC diagnostic pop\n\n(where -Wfoo stands for a warning option we don't recognize), this\nreduces compile time by 33% for some of its tests.\n\ngcc/c-family/ChangeLog:\n\n\t* c-pragma.c (handle_pragma_diagnostic): Split the\n\tunknown-option -Wpragmas diagnostic into a warning and a\n\tsubsequent note containing a spelling suggestion.  Avoid\n\tcomputing the suggestion if -Wpragmas warnings are being\n\tsuppressed.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/pragma-diag-6.c: Adjust expected diagnostics\n\taccordingly.", "tree": {"sha": "2d4a7373402260ff0fe9b972f2d49339a09fb5e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d4a7373402260ff0fe9b972f2d49339a09fb5e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6624075e7e996d61143bf5fc106fa2cb61c614f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6624075e7e996d61143bf5fc106fa2cb61c614f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6624075e7e996d61143bf5fc106fa2cb61c614f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6624075e7e996d61143bf5fc106fa2cb61c614f6/comments", "author": null, "committer": null, "parents": [{"sha": "4394b1ce7731b04446555e034163b14b4f4a7f8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4394b1ce7731b04446555e034163b14b4f4a7f8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4394b1ce7731b04446555e034163b14b4f4a7f8d"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "d68985ca2771a7906636aa83469f103e357c61d9", "filename": "gcc/c-family/c-pragma.c", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6624075e7e996d61143bf5fc106fa2cb61c614f6/gcc%2Fc-family%2Fc-pragma.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6624075e7e996d61143bf5fc106fa2cb61c614f6/gcc%2Fc-family%2Fc-pragma.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-pragma.c?ref=6624075e7e996d61143bf5fc106fa2cb61c614f6", "patch": "@@ -809,16 +809,15 @@ handle_pragma_diagnostic(cpp_reader *ARG_UNUSED(dummy))\n   unsigned int option_index = find_opt (option_string + 1, lang_mask);\n   if (option_index == OPT_SPECIAL_unknown)\n     {\n-      option_proposer op;\n-      const char *hint = op.suggest_option (option_string + 1);\n-      if (hint)\n-\twarning_at (loc, OPT_Wpragmas,\n-\t\t    \"unknown option after %<#pragma GCC diagnostic%> kind;\"\n-\t\t    \" did you mean %<-%s%>?\", hint);\n-      else\n-\twarning_at (loc, OPT_Wpragmas,\n-\t\t    \"unknown option after %<#pragma GCC diagnostic%> kind\");\n-\n+      auto_diagnostic_group d;\n+      if (warning_at (loc, OPT_Wpragmas,\n+\t\t      \"unknown option after %<#pragma GCC diagnostic%> kind\"))\n+\t{\n+\t  option_proposer op;\n+\t  const char *hint = op.suggest_option (option_string + 1);\n+\t  if (hint)\n+\t    inform (loc, \"did you mean %<-%s%>?\", hint);\n+\t}\n       return;\n     }\n   else if (!(cl_options[option_index].flags & CL_WARNING))"}, {"sha": "f2df88d245bfb4ea03818e0eb11476017311aada", "filename": "gcc/testsuite/gcc.dg/pragma-diag-6.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6624075e7e996d61143bf5fc106fa2cb61c614f6/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6624075e7e996d61143bf5fc106fa2cb61c614f6/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-diag-6.c?ref=6624075e7e996d61143bf5fc106fa2cb61c614f6", "patch": "@@ -2,7 +2,10 @@\n #pragma GCC diagnostic error \"-Wnoexcept\" /* { dg-warning \"is valid for C../ObjC.. but not for C\" } */\n #pragma GCC diagnostic error \"-fstrict-aliasing\" /* { dg-warning \"not an option that controls warnings\" } */\n #pragma GCC diagnostic error \"-Werror\" /* { dg-warning \"not an option that controls warnings\" } */\n-#pragma GCC diagnostic error \"-Wvla2\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind; did you mean '-Wvla'\" } */\n-#pragma GCC diagnostic error \"-Walla\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind; did you mean '-Wall'\" } */\n-#pragma GCC diagnostic warning \"-Walla\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind; did you mean '-Wall'\" } */\n+#pragma GCC diagnostic error \"-Wvla2\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind\" } */\n+/* { dg-message \"did you mean '-Wvla'\" \"\" { target *-*-* } .-1 } */\n+#pragma GCC diagnostic error \"-Walla\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind\" } */\n+/* { dg-message \"did you mean '-Wall'\" \"\" { target *-*-* } .-1 } */\n+#pragma GCC diagnostic warning \"-Walla\" /* { dg-warning \"unknown option after '#pragma GCC diagnostic' kind\" } */\n+/* { dg-message \"did you mean '-Wall'\" \"\" { target *-*-* } .-1 } */\n int i;"}]}