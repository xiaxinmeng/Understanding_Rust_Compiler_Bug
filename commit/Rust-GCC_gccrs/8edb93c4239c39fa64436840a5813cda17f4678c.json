{"sha": "8edb93c4239c39fa64436840a5813cda17f4678c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVkYjkzYzQyMzljMzlmYTY0NDM2ODQwYTU4MTNjZGExN2Y0Njc4Yw==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2008-04-14T23:53:15Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2008-04-14T23:53:15Z"}, "message": "re PR libstdc++/35816 (libstdc++ build during bootstrap is optimizing away atomic builtin check)\n\n2008-04-14  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tPR libstdc++/35816\n\t* acinclude.m4 (GLIBCXX_ENABLE_ATOMIC_BUILTINS): Set CXXFLAGS to\n\t-O0 when checking for atomic builtins.\n\t* configure: Regenerate.\n\nFrom-SVN: r134297", "tree": {"sha": "a7345e10e942e97fd4bb52832ef729df6951e837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7345e10e942e97fd4bb52832ef729df6951e837"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8edb93c4239c39fa64436840a5813cda17f4678c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8edb93c4239c39fa64436840a5813cda17f4678c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8edb93c4239c39fa64436840a5813cda17f4678c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8edb93c4239c39fa64436840a5813cda17f4678c/comments", "author": null, "committer": null, "parents": [{"sha": "40f39798cea1409910ee900f17a37944eea0f7b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40f39798cea1409910ee900f17a37944eea0f7b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40f39798cea1409910ee900f17a37944eea0f7b7"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "fb3e6224579751ddd8183eae9517f18eabde6aee", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8edb93c4239c39fa64436840a5813cda17f4678c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8edb93c4239c39fa64436840a5813cda17f4678c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=8edb93c4239c39fa64436840a5813cda17f4678c", "patch": "@@ -1,3 +1,10 @@\n+2008-04-14  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tPR libstdc++/35816\n+\t* acinclude.m4 (GLIBCXX_ENABLE_ATOMIC_BUILTINS): Set CXXFLAGS to\n+\t-O0 when checking for atomic builtins.\n+\t* configure: Regenerate.\n+\n 2008-04-14  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* include/bits/c++config: Guard _LDBL_ macros with __cplusplus."}, {"sha": "b25c5add572a6959fca8df9fa4be13732489e093", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8edb93c4239c39fa64436840a5813cda17f4678c/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8edb93c4239c39fa64436840a5813cda17f4678c/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=8edb93c4239c39fa64436840a5813cda17f4678c", "patch": "@@ -2292,7 +2292,7 @@ int main()\n }\n EOF\n     old_CXXFLAGS=\"$CXXFLAGS\"\n-    CXXFLAGS=-S\n+    CXXFLAGS='-O0 -S'\n     if AC_TRY_EVAL(ac_compile); then\n       if grep __sync_fetch_and_add conftest.s >/dev/null 2>&1 ; then\n         enable_atomic_builtins=no\n@@ -2303,6 +2303,7 @@ EOF\n \tatomicity_dir=cpu/generic/atomicity_builtins\n       fi\n     fi\n+    AC_MSG_RESULT($enable_atomic_builtins)\n     CXXFLAGS=\"$old_CXXFLAGS\"\n     rm -f conftest*\n \n@@ -2311,7 +2312,6 @@ EOF\n \tatomicity_dir=cpu/generic/atomicity_mutex\n   fi\n  AC_LANG_RESTORE\n- AC_MSG_RESULT($enable_atomic_builtins)\n ])\n \n "}, {"sha": "8ce34b20a9330f01e44cbd963b64625df77c9cd4", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8edb93c4239c39fa64436840a5813cda17f4678c/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8edb93c4239c39fa64436840a5813cda17f4678c/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=8edb93c4239c39fa64436840a5813cda17f4678c", "patch": "@@ -18104,7 +18104,7 @@ int main()\n }\n EOF\n     old_CXXFLAGS=\"$CXXFLAGS\"\n-    CXXFLAGS=-S\n+    CXXFLAGS='-O0 -S'\n     if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -18122,6 +18122,8 @@ _ACEOF\n \tatomicity_dir=cpu/generic/atomicity_builtins\n       fi\n     fi\n+    echo \"$as_me:$LINENO: result: $enable_atomic_builtins\" >&5\n+echo \"${ECHO_T}$enable_atomic_builtins\" >&6\n     CXXFLAGS=\"$old_CXXFLAGS\"\n     rm -f conftest*\n \n@@ -18135,8 +18137,6 @@ ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n- echo \"$as_me:$LINENO: result: $enable_atomic_builtins\" >&5\n-echo \"${ECHO_T}$enable_atomic_builtins\" >&6\n \n if test $atomicity_dir = cpu/generic/atomicity_mutex ; then\n   { echo \"$as_me:$LINENO: WARNING: No native atomic operations are provided for this platform.\" >&5"}]}