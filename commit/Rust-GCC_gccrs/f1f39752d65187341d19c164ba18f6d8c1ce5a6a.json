{"sha": "f1f39752d65187341d19c164ba18f6d8c1ce5a6a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFmMzk3NTJkNjUxODczNDFkMTljMTY0YmExOGY2ZDhjMWNlNWE2YQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-04-28T18:22:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-04-28T18:22:33Z"}, "message": "toplev.c (rest_of_compilation): Call note_deferral_of_defined_inline_function even if the function can't be inlined.\n\n        * toplev.c (rest_of_compilation): Call\n        note_deferral_of_defined_inline_function even if the function\n        can't be inlined.\n\nFrom-SVN: r33515", "tree": {"sha": "bb15e77c9dc3b0a30e2491387753b0dcbf0d0ea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb15e77c9dc3b0a30e2491387753b0dcbf0d0ea7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1f39752d65187341d19c164ba18f6d8c1ce5a6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f39752d65187341d19c164ba18f6d8c1ce5a6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1f39752d65187341d19c164ba18f6d8c1ce5a6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f39752d65187341d19c164ba18f6d8c1ce5a6a/comments", "author": null, "committer": null, "parents": [{"sha": "bb1ec1d79f93c60072d6df7491af8a8259f21545", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb1ec1d79f93c60072d6df7491af8a8259f21545", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb1ec1d79f93c60072d6df7491af8a8259f21545"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "109f81282eaa37dda7cec5a80afc01fdf8494c51", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1f39752d65187341d19c164ba18f6d8c1ce5a6a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1f39752d65187341d19c164ba18f6d8c1ce5a6a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1f39752d65187341d19c164ba18f6d8c1ce5a6a", "patch": "@@ -1,3 +1,9 @@\n+2000-04-28  Jason Merrill  <jason@casey.cygnus.com>\n+\n+\t* toplev.c (rest_of_compilation): Call \n+\tnote_deferral_of_defined_inline_function even if the function\n+\tcan't be inlined.\n+\n 2000-04-28  Scott Bambrough  <scottb@netwinder.org>\n \n \t* cpplex.c (_cpp_scan_line): Fix buffer overwrite.\n@@ -11426,7 +11432,7 @@ Tue Jan  4 22:30:16 2000  Jeffrey A Law  (law@cygnus.com)\n \t(SLOW_UNALIGNED_ACCESS): Define.\n \t(CASE_VECTOR_MODE): Always use 32-bit offsets.\n \t(ASM_FILE_END): Generate 64-bit symbol in 64-bit mode.\n-\t(EXTRA_SECTOIN_FUNCTIONS): Indent .csect pseudo-op.\n+\t(EXTRA_SECTION_FUNCTIONS): Indent .csect pseudo-op.\n \t(toc_section): Likewise and .toc pseudo-op.\n \t(ASM_DECLARE_FUNCTION): Likewise.  Align text more strictly in\n \t64-bit mode."}, {"sha": "1f03e3fc928ca972c852e56c24a25fb65db705a3", "filename": "gcc/toplev.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1f39752d65187341d19c164ba18f6d8c1ce5a6a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1f39752d65187341d19c164ba18f6d8c1ce5a6a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=f1f39752d65187341d19c164ba18f6d8c1ce5a6a", "patch": "@@ -2670,6 +2670,14 @@ rest_of_compilation (decl)\n \t\t  || DECL_EXTERNAL (decl))))\n \tDECL_DEFER_OUTPUT (decl) = 1;\n \n+      if (DECL_INLINE (decl))\n+\t/* DWARF wants seperate debugging info for abstract and\n+\t   concrete instances of all inline functions, including those\n+\t   declared inline but not inlined, and those inlined even\n+\t   though they weren't declared inline.  Conveniently, that's\n+\t   what DECL_INLINE means at this point.  */\n+\tnote_deferral_of_defined_inline_function (decl);\n+\n       if (DECL_DEFER_OUTPUT (decl))\n \t{\n \t  /* If -Wreturn-type, we have to do a bit of compilation.\n@@ -2696,7 +2704,6 @@ rest_of_compilation (decl)\n \t       of other functions later in this translation unit.  */\n \t    TREE_NOTHROW (current_function_decl) = 1;\n \n-\t  note_deferral_of_defined_inline_function (decl);\n \t  timevar_push (TV_INTEGRATION);\n \t  save_for_inline_nocopy (decl);\n \t  timevar_pop (TV_INTEGRATION);"}]}