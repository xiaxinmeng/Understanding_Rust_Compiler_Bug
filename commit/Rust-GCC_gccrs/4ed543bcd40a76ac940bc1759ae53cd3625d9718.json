{"sha": "4ed543bcd40a76ac940bc1759ae53cd3625d9718", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVkNTQzYmNkNDBhNzZhYzk0MGJjMTc1OWFlNTNjZDM2MjVkOTcxOA==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@gmail.com", "date": "2017-01-17T16:56:30Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-01-17T16:56:30Z"}, "message": "re PR target/79079 ([6] Wrong code gen for __builtin_mul_overflow when TRULY_NOOP_TRUNCATION (32, 64) == false)\n\n\tPR target/79079\n\t* internal-fn.c (expand_mul_overflow): Use convert_modes instead of\n\tgen_lowpart.\n\nCo-Authored-By: Kuan-Lin Chen <kuanlinchentw@gmail.com>\n\nFrom-SVN: r244539", "tree": {"sha": "ab656b8fc79ae2a7a825be44780b1aa3b63741db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab656b8fc79ae2a7a825be44780b1aa3b63741db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ed543bcd40a76ac940bc1759ae53cd3625d9718", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed543bcd40a76ac940bc1759ae53cd3625d9718", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ed543bcd40a76ac940bc1759ae53cd3625d9718", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ed543bcd40a76ac940bc1759ae53cd3625d9718/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "893ffa2c8f842ffe11bed8c212207dc8c6a1638d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/893ffa2c8f842ffe11bed8c212207dc8c6a1638d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/893ffa2c8f842ffe11bed8c212207dc8c6a1638d"}], "stats": {"total": 27, "additions": 18, "deletions": 9}, "files": [{"sha": "6530fd1de995336c5fb2ce124748c3e5724582a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ed543bcd40a76ac940bc1759ae53cd3625d9718/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ed543bcd40a76ac940bc1759ae53cd3625d9718/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ed543bcd40a76ac940bc1759ae53cd3625d9718", "patch": "@@ -1,3 +1,10 @@\n+2017-01-17  Kito Cheng  <kito.cheng@gmail.com>\n+            Kuan-Lin Chen  <kuanlinchentw@gmail.com>\n+\n+\tPR target/79079\n+\t* internal-fn.c (expand_mul_overflow): Use convert_modes instead of\n+\tgen_lowpart.\n+\n 2017-01-17  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/79058"}, {"sha": "5d71cb2e08dedce82b4f27efff0b66f774e3a793", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ed543bcd40a76ac940bc1759ae53cd3625d9718/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ed543bcd40a76ac940bc1759ae53cd3625d9718/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=4ed543bcd40a76ac940bc1759ae53cd3625d9718", "patch": "@@ -1483,8 +1483,8 @@ expand_mul_overflow (location_t loc, tree lhs, tree arg0, tree arg1,\n \t  res = expand_expr_real_2 (&ops, NULL_RTX, wmode, EXPAND_NORMAL);\n \t  rtx hipart = expand_shift (RSHIFT_EXPR, wmode, res, prec,\n \t\t\t\t     NULL_RTX, uns);\n-\t  hipart = gen_lowpart (mode, hipart);\n-\t  res = gen_lowpart (mode, res);\n+\t  hipart = convert_modes (mode, wmode, hipart, uns);\n+\t  res = convert_modes (mode, wmode, res, uns);\n \t  if (uns)\n \t    /* For the unsigned multiplication, there was overflow if\n \t       HIPART is non-zero.  */\n@@ -1517,16 +1517,16 @@ expand_mul_overflow (location_t loc, tree lhs, tree arg0, tree arg1,\n \t  unsigned int hprec = GET_MODE_PRECISION (hmode);\n \t  rtx hipart0 = expand_shift (RSHIFT_EXPR, mode, op0, hprec,\n \t\t\t\t      NULL_RTX, uns);\n-\t  hipart0 = gen_lowpart (hmode, hipart0);\n-\t  rtx lopart0 = gen_lowpart (hmode, op0);\n+\t  hipart0 = convert_modes (hmode, mode, hipart0, uns);\n+\t  rtx lopart0 = convert_modes (hmode, mode, op0, uns);\n \t  rtx signbit0 = const0_rtx;\n \t  if (!uns)\n \t    signbit0 = expand_shift (RSHIFT_EXPR, hmode, lopart0, hprec - 1,\n \t\t\t\t     NULL_RTX, 0);\n \t  rtx hipart1 = expand_shift (RSHIFT_EXPR, mode, op1, hprec,\n \t\t\t\t      NULL_RTX, uns);\n-\t  hipart1 = gen_lowpart (hmode, hipart1);\n-\t  rtx lopart1 = gen_lowpart (hmode, op1);\n+\t  hipart1 = convert_modes (hmode, mode, hipart1, uns);\n+\t  rtx lopart1 = convert_modes (hmode, mode, op1, uns);\n \t  rtx signbit1 = const0_rtx;\n \t  if (!uns)\n \t    signbit1 = expand_shift (RSHIFT_EXPR, hmode, lopart1, hprec - 1,\n@@ -1717,11 +1717,12 @@ expand_mul_overflow (location_t loc, tree lhs, tree arg0, tree arg1,\n \t     if (loxhi >> (bitsize / 2) == 0\t\t (if uns).  */\n \t  rtx hipartloxhi = expand_shift (RSHIFT_EXPR, mode, loxhi, hprec,\n \t\t\t\t\t  NULL_RTX, 0);\n-\t  hipartloxhi = gen_lowpart (hmode, hipartloxhi);\n+\t  hipartloxhi = convert_modes (hmode, mode, hipartloxhi, 0);\n \t  rtx signbitloxhi = const0_rtx;\n \t  if (!uns)\n \t    signbitloxhi = expand_shift (RSHIFT_EXPR, hmode,\n-\t\t\t\t\t gen_lowpart (hmode, loxhi),\n+\t\t\t\t\t convert_modes (hmode, mode,\n+\t\t\t\t\t\t\tloxhi, 0),\n \t\t\t\t\t hprec - 1, NULL_RTX, 0);\n \n \t  do_compare_rtx_and_jump (signbitloxhi, hipartloxhi, NE, true, hmode,\n@@ -1731,7 +1732,8 @@ expand_mul_overflow (location_t loc, tree lhs, tree arg0, tree arg1,\n \t  /* res = (loxhi << (bitsize / 2)) | (hmode) lo0xlo1;  */\n \t  rtx loxhishifted = expand_shift (LSHIFT_EXPR, mode, loxhi, hprec,\n \t\t\t\t\t   NULL_RTX, 1);\n-\t  tem = convert_modes (mode, hmode, gen_lowpart (hmode, lo0xlo1), 1);\n+\t  tem = convert_modes (mode, hmode,\n+\t\t\t       convert_modes (hmode, mode, lo0xlo1, 1), 1);\n \n \t  tem = expand_simple_binop (mode, IOR, loxhishifted, tem, res,\n \t\t\t\t     1, OPTAB_DIRECT);"}]}