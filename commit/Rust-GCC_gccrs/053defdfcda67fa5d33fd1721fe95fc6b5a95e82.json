{"sha": "053defdfcda67fa5d33fd1721fe95fc6b5a95e82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzZGVmZGZjZGE2N2ZhNWQzM2ZkMTcyMWZlOTVmYzZiNWE5NWU4Mg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@gnat.com", "date": "2001-12-05T02:45:14Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-05T02:45:14Z"}, "message": "errout.adb (Error_Msg): Ignore attempt to put error msg at junk location if we already have errors.\n\n\t* errout.adb (Error_Msg): Ignore attempt to put error msg at junk\n\tlocation if we already have errors. Stops some cases of cascaded\n\terrors.\n\n\t* errout.adb: Improve comment.\n\nFrom-SVN: r47653", "tree": {"sha": "f32e657c862cf3a3e3828ea7af82e7463fdaa54e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f32e657c862cf3a3e3828ea7af82e7463fdaa54e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/053defdfcda67fa5d33fd1721fe95fc6b5a95e82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053defdfcda67fa5d33fd1721fe95fc6b5a95e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/053defdfcda67fa5d33fd1721fe95fc6b5a95e82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/053defdfcda67fa5d33fd1721fe95fc6b5a95e82/comments", "author": null, "committer": null, "parents": [{"sha": "f311e16612262241a694f1c260cea65405e30efe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f311e16612262241a694f1c260cea65405e30efe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f311e16612262241a694f1c260cea65405e30efe"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "6e607f24409f571db4e1ff5f33c3d65e7f7c22d7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053defdfcda67fa5d33fd1721fe95fc6b5a95e82/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053defdfcda67fa5d33fd1721fe95fc6b5a95e82/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=053defdfcda67fa5d33fd1721fe95fc6b5a95e82", "patch": "@@ -1,3 +1,11 @@\n+2001-12-04  Robert Dewar <dewar@gnat.com>\n+\n+\t* errout.adb (Error_Msg): Ignore attempt to put error msg at junk \n+\tlocation if we already have errors. Stops some cases of cascaded \n+\terrors.\n+\t\n+\t* errout.adb: Improve comment.\n+\n 2001-12-04  Robert Dewar <dewar@gnat.com>\n \n \t* sem_ch12.adb:"}, {"sha": "d78858c42cdb852914ff3c5a0d6e1c9743832d12", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/053defdfcda67fa5d33fd1721fe95fc6b5a95e82/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/053defdfcda67fa5d33fd1721fe95fc6b5a95e82/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=053defdfcda67fa5d33fd1721fe95fc6b5a95e82", "patch": "@@ -665,15 +665,26 @@ package body Errout is\n    --  additional messages referencing the generic declaration.\n \n    procedure Error_Msg (Msg : String; Flag_Location : Source_Ptr) is\n-\n-      Sindex : constant Source_File_Index :=\n-                 Get_Source_File_Index (Flag_Location);\n+      Sindex : Source_File_Index;\n+      --  Source index for flag location\n \n       Orig_Loc : Source_Ptr;\n       --  Original location of Flag_Location (i.e. location in original\n       --  template in instantiation case, otherwise unchanged).\n \n    begin\n+      --  If we already have messages, and we are trying to place a message\n+      --  at No_Location or in package Standard, then just ignore the attempt\n+      --  since we assume that what is happening is some cascaded junk. Note\n+      --  that this is safe in the sense that proceeding will surely bomb.\n+\n+      if Flag_Location < First_Source_Ptr\n+        and then Errors_Detected > 0\n+      then\n+         return;\n+      end if;\n+\n+      Sindex := Get_Source_File_Index (Flag_Location);\n       Test_Warning_Msg (Msg);\n \n       --  It is a fatal error to issue an error message when scanning from\n@@ -3069,11 +3080,10 @@ package body Errout is\n             Ent := Etype (Ent);\n          end if;\n \n-         --  If we are stuck in a loop, get out and settle for the\n-         --  internal name after all. In this case we set to kill the\n-         --  message if it is not the first error message (we really try\n-         --  hard not to show the dirty laundry of the implementation to\n-         --  the poor user!)\n+         --  If we are stuck in a loop, get out and settle for the internal\n+         --  name after all. In this case we set to kill the message if it\n+         --  is not the first error message (we really try hard not to show\n+         --  the dirty laundry of the implementation to the poor user!)\n \n          if Ent = Old_Ent then\n             Kill_Message := True;"}]}