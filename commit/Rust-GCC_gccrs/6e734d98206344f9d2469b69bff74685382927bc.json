{"sha": "6e734d98206344f9d2469b69bff74685382927bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmU3MzRkOTgyMDYzNDRmOWQyNDY5YjY5YmZmNzQ2ODUzODI5MjdiYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-04-12T09:20:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-04-12T09:20:42Z"}, "message": "re PR tree-optimization/31169 (Bootstrap comparison error at revision 122821)\n\n2007-04-12  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/31169\n\t* gcc.c-torture/execute/pr31169.c: New testcase.\n\nFrom-SVN: r123737", "tree": {"sha": "6a12ae390d1e014bc61a7c078a730ae54d85460f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a12ae390d1e014bc61a7c078a730ae54d85460f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6e734d98206344f9d2469b69bff74685382927bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e734d98206344f9d2469b69bff74685382927bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e734d98206344f9d2469b69bff74685382927bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e734d98206344f9d2469b69bff74685382927bc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5852948c5b998dc8ddd9073ca68c097b96180838", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5852948c5b998dc8ddd9073ca68c097b96180838", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5852948c5b998dc8ddd9073ca68c097b96180838"}], "stats": {"total": 56, "additions": 56, "deletions": 0}, "files": [{"sha": "c5cf4f6a13e8fa91ca5cb79c72ba89caea11633f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e734d98206344f9d2469b69bff74685382927bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e734d98206344f9d2469b69bff74685382927bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6e734d98206344f9d2469b69bff74685382927bc", "patch": "@@ -1,3 +1,8 @@\n+2007-04-12  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/31169\n+\t* gcc.c-torture/execute/pr31169.c: New testcase.\n+\n 2007-04-12  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/24689"}, {"sha": "447dd4588907847fd706a862236c7e28b3e730dd", "filename": "gcc/testsuite/gcc.c-torture/execute/pr31169.c", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6e734d98206344f9d2469b69bff74685382927bc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31169.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6e734d98206344f9d2469b69bff74685382927bc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31169.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr31169.c?ref=6e734d98206344f9d2469b69bff74685382927bc", "patch": "@@ -0,0 +1,51 @@\n+extern void abort();\n+\n+#define HOST_WIDE_INT long\n+#define HOST_BITS_PER_WIDE_INT (sizeof(long)*8)\n+\n+struct tree_type\n+{\n+  unsigned int precision : 9;\n+};\n+\n+int\n+sign_bit_p (struct tree_type *t, HOST_WIDE_INT val_hi, unsigned HOST_WIDE_INT val_lo)\n+{\n+  unsigned HOST_WIDE_INT mask_lo, lo;\n+  HOST_WIDE_INT mask_hi, hi;\n+  int width = t->precision;\n+\n+  if (width > HOST_BITS_PER_WIDE_INT)\n+    {\n+      hi = (unsigned HOST_WIDE_INT) 1 << (width - HOST_BITS_PER_WIDE_INT - 1);\n+      lo = 0;\n+\n+      mask_hi = ((unsigned HOST_WIDE_INT) -1\n+                 >> (2 * HOST_BITS_PER_WIDE_INT - width));\n+      mask_lo = -1;\n+    }\n+  else\n+    {\n+      hi = 0;\n+      lo = (unsigned HOST_WIDE_INT) 1 << (width - 1);\n+    \n+      mask_hi = 0;\n+      mask_lo = ((unsigned HOST_WIDE_INT) -1\n+                 >> (HOST_BITS_PER_WIDE_INT - width));\n+    }\n+\n+  if ((val_hi & mask_hi) == hi\n+      && (val_lo & mask_lo) == lo)\n+    return 1;\n+\n+  return 0;\n+}\n+\n+int main()\n+{\n+  struct tree_type t;\n+  t.precision = 1;\n+  if (!sign_bit_p (&t, 0, -1))\n+    abort ();\n+  return 0;\n+}"}]}