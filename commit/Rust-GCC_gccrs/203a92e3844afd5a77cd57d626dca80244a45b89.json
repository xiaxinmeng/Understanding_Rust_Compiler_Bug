{"sha": "203a92e3844afd5a77cd57d626dca80244a45b89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAzYTkyZTM4NDRhZmQ1YTc3Y2Q1N2Q2MjZkY2E4MDI0NGE0NWI4OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-05-16T18:46:16Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-05-16T18:46:16Z"}, "message": "opts.c (handle_option): Call into LTO streamer only if ENABLE_LTO.\n\n\t* opts.c (handle_option): Call into LTO streamer only if ENABLE_LTO.\n\t(decode_options): Likewise.\n\t* Makefile.in (opts.o): Add dependency on LTO_STREAMER_H.\n\nFrom-SVN: r159463", "tree": {"sha": "eb2dcfa6dc12ef6d1819ecba260320551c6fdee8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb2dcfa6dc12ef6d1819ecba260320551c6fdee8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/203a92e3844afd5a77cd57d626dca80244a45b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203a92e3844afd5a77cd57d626dca80244a45b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/203a92e3844afd5a77cd57d626dca80244a45b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203a92e3844afd5a77cd57d626dca80244a45b89/comments", "author": null, "committer": null, "parents": [{"sha": "afdda4b4457a0dfe621b58e6e582cbc4d5511349", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afdda4b4457a0dfe621b58e6e582cbc4d5511349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afdda4b4457a0dfe621b58e6e582cbc4d5511349"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "244695e4bf461b48c4ecccea540612f25723e871", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203a92e3844afd5a77cd57d626dca80244a45b89/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203a92e3844afd5a77cd57d626dca80244a45b89/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=203a92e3844afd5a77cd57d626dca80244a45b89", "patch": "@@ -1,3 +1,9 @@\n+2010-05-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* opts.c (handle_option): Call into LTO streamer only if ENABLE_LTO.\n+\t(decode_options): Likewise.\n+\t* Makefile.in (opts.o): Add dependency on LTO_STREAMER_H.\n+\n 2010-05-16  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa.c (function_and_variable_visibility): Also bring local all"}, {"sha": "3d6cf2c1e4460094f004fc96965af829b7984fd0", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203a92e3844afd5a77cd57d626dca80244a45b89/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203a92e3844afd5a77cd57d626dca80244a45b89/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=203a92e3844afd5a77cd57d626dca80244a45b89", "patch": "@@ -2704,7 +2704,7 @@ opts.o : opts.c opts.h options.h $(TOPLEV_H) $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h $(TREE_H) $(TM_H) langhooks.h $(GGC_H) $(EXPR_H) $(RTL_H) \\\n    output.h $(DIAGNOSTIC_H) $(TM_P_H) $(INSN_ATTR_H) intl.h $(TARGET_H) \\\n    $(FLAGS_H) $(PARAMS_H) $(TREE_PASS_H) $(DBGCNT_H) debug.h \\\n-   $(PLUGIN_H) $(EXCEPT_H)\n+   $(PLUGIN_H) $(EXCEPT_H) $(LTO_STREAMER_H)\n opts-common.o : opts-common.c opts.h $(CONFIG_H) $(SYSTEM_H) \\\n    coretypes.h intl.h\n targhooks.o : targhooks.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TREE_H) \\"}, {"sha": "5aa7c419f50b6e33d678553423a4548f4d17ebfa", "filename": "gcc/opts.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203a92e3844afd5a77cd57d626dca80244a45b89/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203a92e3844afd5a77cd57d626dca80244a45b89/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=203a92e3844afd5a77cd57d626dca80244a45b89", "patch": "@@ -502,24 +502,30 @@ handle_option (int opt_index, int value, const char *arg,\n     {\n       if (lang_hooks.handle_option (opt_index, arg, value, kind) == 0)\n \treturn false;\n+#ifdef ENABLE_LTO\n       else\n \tlto_register_user_option (opt_index, arg, value, lang_mask);\n+ #endif\n     }\n \n   if (option->flags & CL_COMMON)\n     {\n       if (common_handle_option (opt_index, arg, value, lang_mask, kind) == 0)\n \treturn false;\n+#ifdef ENABLE_LTO\n       else\n \tlto_register_user_option (opt_index, arg, value, CL_COMMON);\n+#endif\n     }\n \n   if (option->flags & CL_TARGET)\n     {\n       if (!targetm.handle_option (opt_index, arg, value))\n \treturn false;\n+#ifdef ENABLE_LTO\n       else\n \tlto_register_user_option (opt_index, arg, value, CL_TARGET);\n+#endif\n     }\n   return true;\n }\n@@ -980,8 +986,10 @@ decode_options (unsigned int argc, const char **argv)\n       flag_unwind_tables = targetm.unwind_tables_default;\n     }\n \n+#ifdef ENABLE_LTO\n   /* Clear any options currently held for LTO.  */\n   lto_clear_user_options ();\n+#endif\n \n #ifdef OPTIMIZATION_OPTIONS\n   /* Allow default optimizations to be specified on a per-machine basis.  */"}]}