{"sha": "b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVkMWNiZDJmYWVhMzg2MjY4MDI4ZDJmMmZiN2MyZTk2NmZjMDIwMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-14T23:51:27Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-14T23:51:27Z"}, "message": "class.c, cp-tree.h (build_vfn_ref): Remove.\n\n        * class.c, cp-tree.h (build_vfn_ref): Remove.\n        * call.c, rtti.c: Replace all refernces with build_vtbl_ref.\n\nFrom-SVN: r44913", "tree": {"sha": "4193737aca409abec38db977a68ae2969614671a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4193737aca409abec38db977a68ae2969614671a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/comments", "author": null, "committer": null, "parents": [{"sha": "1489e3241e8a46967b17c6a4d22ab1a354eee91f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1489e3241e8a46967b17c6a4d22ab1a354eee91f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1489e3241e8a46967b17c6a4d22ab1a354eee91f"}], "stats": {"total": 23, "additions": 7, "deletions": 16}, "files": [{"sha": "e50446cb0e0731510278cc771d65db046ea2bd8c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "patch": "@@ -1,3 +1,8 @@\n+2001-08-14  Richard Henderson  <rth@redhat.com>\n+\n+\t* class.c, cp-tree.h (build_vfn_ref): Remove.\n+\t* call.c, rtti.c: Replace all refernces with build_vtbl_ref.\n+\n 2001-08-13  Mark Mitchell  <mark@codesourcery.com>\n \n \t* call.c (build_over_call): Mark COMPOUND_EXPRs generated for"}, {"sha": "74caa383618ac2dce0cd581408ea5f5a6246745a", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "patch": "@@ -4321,7 +4321,7 @@ build_over_call (cand, args, flags)\n       if (DECL_CONTEXT (fn) && TYPE_JAVA_INTERFACE (DECL_CONTEXT (fn)))\n \tfn = build_java_interface_fn_ref (fn, *p);\n       else\n-\tfn = build_vfn_ref (build_indirect_ref (*p, 0), DECL_VINDEX (fn));\n+\tfn = build_vtbl_ref (build_indirect_ref (*p, 0), DECL_VINDEX (fn));\n       TREE_TYPE (fn) = t;\n     }\n   else if (DECL_INLINE (fn))"}, {"sha": "8f60f23a7c0ca845ffce396ac8960961317e77f2", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "patch": "@@ -540,19 +540,6 @@ build_vtbl_ref (instance, idx)\n   return aref;\n }\n \n-/* Given an object INSTANCE, return an expression which yields the\n-   virtual function corresponding to IDX. */\n-\n-tree\n-build_vfn_ref (instance, idx)\n-     tree instance;\n-     tree idx;\n-{\n-  tree aref = build_vtbl_ref (instance, idx);\n-\n-  return aref;\n-}\n-\n /* Return the name of the virtual function table (as an IDENTIFIER_NODE)\n    for the given TYPE.  */\n "}, {"sha": "24027cf90b4e306ce5a6cf75e8f53e649e05dbdc", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "patch": "@@ -3531,7 +3531,6 @@ extern tree perform_implicit_conversion         PARAMS ((tree, tree));\n /* in class.c */\n extern tree build_vbase_path\t\t\tPARAMS ((enum tree_code, tree, tree, tree, int));\n extern tree build_vtbl_ref\t\t\tPARAMS ((tree, tree));\n-extern tree build_vfn_ref\t\t\tPARAMS ((tree, tree));\n extern tree get_vtable_decl                     PARAMS ((tree, int));\n extern void add_method\t\t\t\tPARAMS ((tree, tree, int));\n extern int currently_open_class\t\t\tPARAMS ((tree));"}, {"sha": "35da7374de8041d2869a6f503d253d68c8e5ade0", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5d1cbd2faea386268028d2f2fb7c2e966fc0203/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=b5d1cbd2faea386268028d2f2fb7c2e966fc0203", "patch": "@@ -182,7 +182,7 @@ get_tinfo_decl_dynamic (exp)\n \n       /* The RTTI information is at index -1.  */\n       index = integer_minus_one_node;\n-      t = build_vfn_ref (exp, index);\n+      t = build_vtbl_ref (exp, index);\n       TREE_TYPE (t) = build_pointer_type (tinfo_decl_type);\n       return t;\n     }"}]}