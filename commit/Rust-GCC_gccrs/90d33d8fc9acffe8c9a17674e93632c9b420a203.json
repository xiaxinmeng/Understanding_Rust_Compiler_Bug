{"sha": "90d33d8fc9acffe8c9a17674e93632c9b420a203", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBkMzNkOGZjOWFjZmZlOGM5YTE3Njc0ZTkzNjMyYzliNDIwYTIwMw==", "commit": {"author": {"name": "Ilya Enkovich", "email": "ilya.enkovich@intel.com", "date": "2015-03-12T08:58:08Z"}, "committer": {"name": "Ilya Enkovich", "email": "ienkovich@gcc.gnu.org", "date": "2015-03-12T08:58:08Z"}, "message": "re PR other/65384 (Intel MPX does not support x32)\n\nlibmpx/\n\n       PR other/65384\n       * configure.ac: Fix x32 test.\n       * configure: Regenerate.\n\nFrom-SVN: r221378", "tree": {"sha": "7c0e5fae6da04035973175f888bf94d100258880", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c0e5fae6da04035973175f888bf94d100258880"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90d33d8fc9acffe8c9a17674e93632c9b420a203", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d33d8fc9acffe8c9a17674e93632c9b420a203", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d33d8fc9acffe8c9a17674e93632c9b420a203", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d33d8fc9acffe8c9a17674e93632c9b420a203/comments", "author": {"login": "ienkovich", "id": 18308708, "node_id": "MDQ6VXNlcjE4MzA4NzA4", "avatar_url": "https://avatars.githubusercontent.com/u/18308708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ienkovich", "html_url": "https://github.com/ienkovich", "followers_url": "https://api.github.com/users/ienkovich/followers", "following_url": "https://api.github.com/users/ienkovich/following{/other_user}", "gists_url": "https://api.github.com/users/ienkovich/gists{/gist_id}", "starred_url": "https://api.github.com/users/ienkovich/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ienkovich/subscriptions", "organizations_url": "https://api.github.com/users/ienkovich/orgs", "repos_url": "https://api.github.com/users/ienkovich/repos", "events_url": "https://api.github.com/users/ienkovich/events{/privacy}", "received_events_url": "https://api.github.com/users/ienkovich/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b13c907ab30853cd117ee0fbcad4dd2629633baa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b13c907ab30853cd117ee0fbcad4dd2629633baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b13c907ab30853cd117ee0fbcad4dd2629633baa"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "35bdeab35ee372a55a2cb1d3662415a2565b308b", "filename": "libmpx/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d33d8fc9acffe8c9a17674e93632c9b420a203/libmpx%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d33d8fc9acffe8c9a17674e93632c9b420a203/libmpx%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2FChangeLog?ref=90d33d8fc9acffe8c9a17674e93632c9b420a203", "patch": "@@ -1,3 +1,9 @@\n+2015-03-12  Ilya Enkovich  <ilya.enkovich@intel.com>\n+\n+\tPR other/65384\n+\t* configure.ac: Fix x32 test.\n+\t* configure: Regenerate.\n+\n 2015-03-10  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \t* Makefile.am (SUBDIRS): Add mpxwrap when used"}, {"sha": "3bbb54c29874cff0a782dbdcffdc41004d5b008e", "filename": "libmpx/configure", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d33d8fc9acffe8c9a17674e93632c9b420a203/libmpx%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d33d8fc9acffe8c9a17674e93632c9b420a203/libmpx%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure?ref=90d33d8fc9acffe8c9a17674e93632c9b420a203", "patch": "@@ -2498,7 +2498,7 @@ esac\n unset LIBMPX_SUPPORTED\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for target support for Intel MPX runtime library\" >&5\n $as_echo_n \"checking for target support for Intel MPX runtime library... \" >&6; }\n-echo \"int isizeof (void *) == 4 ? 1 : -1 = { __x86_64__ };\" > conftest.c\n+echo \"int i[sizeof (void *) == 4 ? 1 : -1] = { __x86_64__ };\" > conftest.c\n if { ac_try='${CC} ${CFLAGS} -c -o conftest.o conftest.c 1>&5'\n   { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n   (eval $ac_try) 2>&5\n@@ -9438,7 +9438,7 @@ _LT_EOF\n       if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n \t && test \"$tmp_diet\" = no\n       then\n-\ttmp_addflag=\n+\ttmp_addflag=' $pic_flag'\n \ttmp_sharedflag='-shared'\n \tcase $cc_basename,$host_cpu in\n         pgcc*)\t\t\t\t# Portland Group C compiler\n@@ -12349,8 +12349,8 @@ with_gnu_ld=$lt_cv_prog_gnu_ld\n       # Check if GNU C++ uses GNU ld as the underlying linker, since the\n       # archiving commands below assume that GNU ld is being used.\n       if test \"$with_gnu_ld\" = yes; then\n-        archive_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n-        archive_expsym_cmds_CXX='$CC -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n+        archive_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname -o $lib'\n+        archive_expsym_cmds_CXX='$CC $pic_flag -shared -nostdlib $predep_objects $libobjs $deplibs $postdep_objects $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'\n \n         hardcode_libdir_flag_spec_CXX='${wl}-rpath ${wl}$libdir'\n         export_dynamic_flag_spec_CXX='${wl}--export-dynamic'"}, {"sha": "fe0d3f2266ea159b946ce6659799c2212d63ef92", "filename": "libmpx/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d33d8fc9acffe8c9a17674e93632c9b420a203/libmpx%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d33d8fc9acffe8c9a17674e93632c9b420a203/libmpx%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmpx%2Fconfigure.ac?ref=90d33d8fc9acffe8c9a17674e93632c9b420a203", "patch": "@@ -28,7 +28,7 @@ GCC_LIBSTDCXX_RAW_CXX_FLAGS\n # See if supported.\n unset LIBMPX_SUPPORTED\n AC_MSG_CHECKING([for target support for Intel MPX runtime library])\n-echo \"int i[sizeof (void *) == 4 ? 1 : -1] = { __x86_64__ };\" > conftest.c\n+echo \"int i[[sizeof (void *) == 4 ? 1 : -1]] = { __x86_64__ };\" > conftest.c\n if AC_TRY_COMMAND([${CC} ${CFLAGS} -c -o conftest.o conftest.c 1>&AS_MESSAGE_LOG_FD])\n then\n     LIBMPX_SUPPORTED=no"}]}