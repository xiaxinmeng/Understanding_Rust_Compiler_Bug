{"sha": "8882ac3a647747b3cd1a7010196b282419568932", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg4MmFjM2E2NDc3NDdiM2NkMWE3MDEwMTk2YjI4MjQxOTU2ODkzMg==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2003-05-03T22:48:59Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2003-05-03T22:48:59Z"}, "message": "force merge conflicts in fixincl.x + placement fix\n\nFrom-SVN: r66439", "tree": {"sha": "464b1366ac622433f00e5ab0e9fc4f84effeabbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/464b1366ac622433f00e5ab0e9fc4f84effeabbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8882ac3a647747b3cd1a7010196b282419568932", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8882ac3a647747b3cd1a7010196b282419568932", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8882ac3a647747b3cd1a7010196b282419568932", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8882ac3a647747b3cd1a7010196b282419568932/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bd879e9a0064cd7d1363a60cc655613bfb5a8547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd879e9a0064cd7d1363a60cc655613bfb5a8547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd879e9a0064cd7d1363a60cc655613bfb5a8547"}], "stats": {"total": 172, "additions": 96, "deletions": 76}, "files": [{"sha": "0401c869494d722e9f96723e7f8ac47bf84c7b5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8882ac3a647747b3cd1a7010196b282419568932/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8882ac3a647747b3cd1a7010196b282419568932/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8882ac3a647747b3cd1a7010196b282419568932", "patch": "@@ -1,3 +1,9 @@\n+2003-05-03  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* gcc/fixinc/fixincl.tpl(dne): restore this to force merge conflicts\n+\tin fixincl.x\n+\t* gcc/fixinc/inclhack.def(bsd_stdio_attrs_conflict): fix placement\n+\n 2003-05-03  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/rs6000/spe.h: Remove unecessary casts.  Misc cleanups."}, {"sha": "420b11d8783cfdd77a96858432c1378c0b51d936", "filename": "gcc/fixinc/fixincl.tpl", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8882ac3a647747b3cd1a7010196b282419568932/gcc%2Ffixinc%2Ffixincl.tpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8882ac3a647747b3cd1a7010196b282419568932/gcc%2Ffixinc%2Ffixincl.tpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.tpl?ref=8882ac3a647747b3cd1a7010196b282419568932", "patch": "@@ -1,11 +1,15 @@\n [= AutoGen5 Template -*- Mode: C -*-\n x=fixincl.x =]\n-/*\n- *  DO NOT EDIT THIS FILE - it has been generated\n+[= (dne \" * \" \"/* \")=]\n+ */\n+/* DO NOT CVS-MERGE THIS FILE, EITHER [=`date`=]\n+ *\n+ * You must regenerate it.  Use the ./genfixes script.\n+ *\n  *\n- * Install modified versions of certain ANSI-incompatible system header\n- * files which are fixed to work correctly with ANSI C and placed in a\n- * directory that GNU C will search.\n+ * This is part of the fixincl program used to install modified versions of\n+ * certain ANSI-incompatible system header files which are fixed to work\n+ * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n  * This file contains [=(count \"fix\")=] fixup descriptions.\n  *"}, {"sha": "c3155940b08648c57e21aa7b436423d4672fa5cc", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 61, "deletions": 51, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8882ac3a647747b3cd1a7010196b282419568932/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8882ac3a647747b3cd1a7010196b282419568932/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=8882ac3a647747b3cd1a7010196b282419568932", "patch": "@@ -1,9 +1,19 @@\n-/*\n- *  DO NOT EDIT THIS FILE - it has been generated\n+/*  -*- buffer-read-only: t -*- vi: set ro:\n+ * \n+ * DO NOT EDIT THIS FILE   (fixincl.x)\n+ * \n+ * It has been AutoGen-ed  Saturday May  3, 2003 at 03:55:13 PM PDT\n+ * From the definitions    inclhack.def\n+ * and the template file   fixincl\n+ */\n+/* DO NOT CVS-MERGE THIS FILE, EITHER Sat May  3 15:55:13 PDT 2003\n+ *\n+ * You must regenerate it.  Use the ./genfixes script.\n  *\n- * Install modified versions of certain ANSI-incompatible system header\n- * files which are fixed to work correctly with ANSI C and placed in a\n- * directory that GNU C will search.\n+ *\n+ * This is part of the fixincl program used to install modified versions of\n+ * certain ANSI-incompatible system header files which are fixed to work\n+ * correctly with ANSI C and placed in a directory that GNU C will search.\n  *\n  * This file contains 152 fixup descriptions.\n  *\n@@ -1113,46 +1123,6 @@ static const char* apzBadquotePatch[] = {\n     \"does not\",\n     (char*)NULL };\n \n-/* * * * * * * * * * * * * * * * * * * * * * * * * *\n- *\n- *  Description of Bsd_Stdio_Attrs_Conflict fix\n- */\n-tSCC zBsd_Stdio_Attrs_ConflictName[] =\n-     \"bsd_stdio_attrs_conflict\";\n-\n-/*\n- *  File name selection pattern\n- */\n-tSCC zBsd_Stdio_Attrs_ConflictList[] =\n-  \"|stdio.h|\";\n-/*\n- *  Machine/OS name selection pattern\n- */\n-tSCC* apzBsd_Stdio_Attrs_ConflictMachs[] = {\n-        \"*-*-*bsd*\",\n-        \"*-*-*darwin*\",\n-        (const char*)NULL };\n-\n-/*\n- *  content selection pattern - do fix if pattern found\n- */\n-tSCC zBsd_Stdio_Attrs_ConflictSelect0[] =\n-       \"^#define[ \\t]*vfscanf[ \\t]*__svfscanf[ \\t]*$\";\n-\n-#define    BSD_STDIO_ATTRS_CONFLICT_TEST_CT  1\n-static tTestDesc aBsd_Stdio_Attrs_ConflictTests[] = {\n-  { TT_EGREP,    zBsd_Stdio_Attrs_ConflictSelect0, (regex_t*)NULL }, };\n-\n-/*\n- *  Fix Command Arguments for Bsd_Stdio_Attrs_Conflict\n- */\n-static const char* apzBsd_Stdio_Attrs_ConflictPatch[] = {\n-    \"format\",\n-    \"#define _BSD_STRING(_BSD_X) _BSD_STRINGX(_BSD_X)\\n\\\n-#define _BSD_STRINGX(_BSD_X) #_BSD_X\\n\\\n-int vfscanf(FILE *, const char *, __builtin_va_list) __asm__ (_BSD_STRING(__USER_LABEL_PREFIX__) \\\"__svfscanf\\\");\",\n-    (char*)NULL };\n-\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Broken_Assert_Stdio fix\n@@ -1275,6 +1245,46 @@ static const char* apzBroken_CabsPatch[] = {\n     \"^extern[ \\t]+double[ \\t]+cabs\\\\((struct dbl_hypot|)\\\\);\",\n     (char*)NULL };\n \n+/* * * * * * * * * * * * * * * * * * * * * * * * * *\n+ *\n+ *  Description of Bsd_Stdio_Attrs_Conflict fix\n+ */\n+tSCC zBsd_Stdio_Attrs_ConflictName[] =\n+     \"bsd_stdio_attrs_conflict\";\n+\n+/*\n+ *  File name selection pattern\n+ */\n+tSCC zBsd_Stdio_Attrs_ConflictList[] =\n+  \"|stdio.h|\";\n+/*\n+ *  Machine/OS name selection pattern\n+ */\n+tSCC* apzBsd_Stdio_Attrs_ConflictMachs[] = {\n+        \"*-*-*bsd*\",\n+        \"*-*-*darwin*\",\n+        (const char*)NULL };\n+\n+/*\n+ *  content selection pattern - do fix if pattern found\n+ */\n+tSCC zBsd_Stdio_Attrs_ConflictSelect0[] =\n+       \"^#define[ \\t]*vfscanf[ \\t]*__svfscanf[ \\t]*$\";\n+\n+#define    BSD_STDIO_ATTRS_CONFLICT_TEST_CT  1\n+static tTestDesc aBsd_Stdio_Attrs_ConflictTests[] = {\n+  { TT_EGREP,    zBsd_Stdio_Attrs_ConflictSelect0, (regex_t*)NULL }, };\n+\n+/*\n+ *  Fix Command Arguments for Bsd_Stdio_Attrs_Conflict\n+ */\n+static const char* apzBsd_Stdio_Attrs_ConflictPatch[] = {\n+    \"format\",\n+    \"#define _BSD_STRING(_BSD_X) _BSD_STRINGX(_BSD_X)\\n\\\n+#define _BSD_STRINGX(_BSD_X) #_BSD_X\\n\\\n+int vfscanf(FILE *, const char *, __builtin_va_list) __asm__ (_BSD_STRING(__USER_LABEL_PREFIX__) \\\"__svfscanf\\\");\",\n+    (char*)NULL };\n+\n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n  *\n  *  Description of Ctrl_Quotes_Def fix\n@@ -6027,10 +6037,10 @@ typedef enum {\n     BAD_LVAL_FIXIDX,\n     BAD_STRUCT_TERM_FIXIDX,\n     BADQUOTE_FIXIDX,\n-    BSD_STDIO_ATTRS_CONFLICT_FIXIDX,\n     BROKEN_ASSERT_STDIO_FIXIDX,\n     BROKEN_ASSERT_STDLIB_FIXIDX,\n     BROKEN_CABS_FIXIDX,\n+    BSD_STDIO_ATTRS_CONFLICT_FIXIDX,\n     CTRL_QUOTES_DEF_FIXIDX,\n     CTRL_QUOTES_USE_FIXIDX,\n     CXX_UNREADY_FIXIDX,\n@@ -6282,11 +6292,6 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      BADQUOTE_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aBadquoteTests,   apzBadquotePatch, 0 },\n \n-  {  zBsd_Stdio_Attrs_ConflictName,    zBsd_Stdio_Attrs_ConflictList,\n-     apzBsd_Stdio_Attrs_ConflictMachs,\n-     BSD_STDIO_ATTRS_CONFLICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n-     aBsd_Stdio_Attrs_ConflictTests,   apzBsd_Stdio_Attrs_ConflictPatch, 0 },\n-\n   {  zBroken_Assert_StdioName,    zBroken_Assert_StdioList,\n      apzBroken_Assert_StdioMachs,\n      BROKEN_ASSERT_STDIO_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n@@ -6302,6 +6307,11 @@ tFixDesc fixDescList[ FIX_COUNT ] = {\n      BROKEN_CABS_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n      aBroken_CabsTests,   apzBroken_CabsPatch, 0 },\n \n+  {  zBsd_Stdio_Attrs_ConflictName,    zBsd_Stdio_Attrs_ConflictList,\n+     apzBsd_Stdio_Attrs_ConflictMachs,\n+     BSD_STDIO_ATTRS_CONFLICT_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,\n+     aBsd_Stdio_Attrs_ConflictTests,   apzBsd_Stdio_Attrs_ConflictPatch, 0 },\n+\n   {  zCtrl_Quotes_DefName,    zCtrl_Quotes_DefList,\n      apzCtrl_Quotes_DefMachs,\n      CTRL_QUOTES_DEF_TEST_CT, FD_MACH_ONLY | FD_SUBROUTINE,"}, {"sha": "39b33cb6d9a6bf0651d675893000d989e9c52339", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8882ac3a647747b3cd1a7010196b282419568932/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8882ac3a647747b3cd1a7010196b282419568932/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=8882ac3a647747b3cd1a7010196b282419568932", "patch": "@@ -720,26 +720,6 @@ fix = {\n };\n \n \n-/*\n- *  Various systems derived from BSD4.4 contain a macro definition\n- *  for vfscanf that interacts badly with requirements of builtin-attrs.def.\n- *  Known to be fixed in FreeBSD 5 system headers.\n- */\n-fix = {\n-    hackname  = bsd_stdio_attrs_conflict;\n-    mach      = *-*-*bsd*;\n-    mach      = *-*-*darwin*;\n-    files     = stdio.h;\n-    select    = \"^#define[ \\t]*vfscanf[ \\t]*__svfscanf[ \\t]*$\";\n-    c_fix     = format;\n-    c_fix_arg = '#define _BSD_STRING(_BSD_X) _BSD_STRINGX(_BSD_X)' \"\\n\"\n-\t\t'#define _BSD_STRINGX(_BSD_X) #_BSD_X' \"\\n\"\n-\t\t'int vfscanf(FILE *, const char *, __builtin_va_list) '\n-\t\t'__asm__ (_BSD_STRING(__USER_LABEL_PREFIX__) \"__svfscanf\");';\n-    test_text = '#define  vfscanf\t__svfscanf';\n-};\n-\n-\n /*\n  *  check for broken assert.h that needs stdio.h\n  */\n@@ -795,6 +775,26 @@ fix = {\n };\n \n \n+/*\n+ *  Various systems derived from BSD4.4 contain a macro definition\n+ *  for vfscanf that interacts badly with requirements of builtin-attrs.def.\n+ *  Known to be fixed in FreeBSD 5 system headers.\n+ */\n+fix = {\n+    hackname  = bsd_stdio_attrs_conflict;\n+    mach      = *-*-*bsd*;\n+    mach      = *-*-*darwin*;\n+    files     = stdio.h;\n+    select    = \"^#define[ \\t]*vfscanf[ \\t]*__svfscanf[ \\t]*$\";\n+    c_fix     = format;\n+    c_fix_arg = '#define _BSD_STRING(_BSD_X) _BSD_STRINGX(_BSD_X)' \"\\n\"\n+\t\t'#define _BSD_STRINGX(_BSD_X) #_BSD_X' \"\\n\"\n+\t\t'int vfscanf(FILE *, const char *, __builtin_va_list) '\n+\t\t'__asm__ (_BSD_STRING(__USER_LABEL_PREFIX__) \"__svfscanf\");';\n+    test_text = '#define  vfscanf\t__svfscanf';\n+};\n+\n+\n /*\n  *  Fix various macros used to define ioctl numbers.\n  *  The traditional syntax was:"}]}