{"sha": "e53d562a36ead2279b98bc7cde3abe9606b44ee2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUzZDU2MmEzNmVhZDIyNzliOThiYzdjZGUzYWJlOTYwNmI0NGVlMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-02-24T12:03:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-02-24T12:03:27Z"}, "message": "re PR tree-optimization/68963 (O3 vs. O2 discards part of loop and terminates early)\n\n2016-02-24  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/68963\n\t* tree-ssa-loop-niter.c (derive_constant_upper_bound_ops): Fix\n\tbogus check.\n\t(record_nonwrapping_iv): Do not fall back to the low/high bound\n\tfor non-constant IV bases if the stmt is not always executed.\n\n\t* gcc.dg/torture/pr68963.c: New testcase.\n\nFrom-SVN: r233660", "tree": {"sha": "5cd461c7bd1554cfa9a6aa0662f753d76e4bb68a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5cd461c7bd1554cfa9a6aa0662f753d76e4bb68a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e53d562a36ead2279b98bc7cde3abe9606b44ee2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e53d562a36ead2279b98bc7cde3abe9606b44ee2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e53d562a36ead2279b98bc7cde3abe9606b44ee2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e53d562a36ead2279b98bc7cde3abe9606b44ee2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "debc68edb4df2357589427fe90ea894467c7b2e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/debc68edb4df2357589427fe90ea894467c7b2e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/debc68edb4df2357589427fe90ea894467c7b2e2"}], "stats": {"total": 68, "additions": 63, "deletions": 5}, "files": [{"sha": "9dab27af9aa8c7a8ed8762f02109ddf11d686d0d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e53d562a36ead2279b98bc7cde3abe9606b44ee2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e53d562a36ead2279b98bc7cde3abe9606b44ee2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e53d562a36ead2279b98bc7cde3abe9606b44ee2", "patch": "@@ -1,3 +1,11 @@\n+2016-02-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/68963\n+\t* tree-ssa-loop-niter.c (derive_constant_upper_bound_ops): Fix\n+\tbogus check.\n+\t(record_nonwrapping_iv): Do not fall back to the low/high bound\n+\tfor non-constant IV bases if the stmt is not always executed.\n+\n 2016-02-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/arm/arm-cores.def (cortex-a32): New entry."}, {"sha": "ad48962d72317e20abc5abc428ad9d8f488590e9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e53d562a36ead2279b98bc7cde3abe9606b44ee2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e53d562a36ead2279b98bc7cde3abe9606b44ee2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e53d562a36ead2279b98bc7cde3abe9606b44ee2", "patch": "@@ -1,3 +1,8 @@\n+2016-02-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/68963\n+\t* gcc.dg/torture/pr68963.c: New testcase.\n+\n 2016-02-24  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/69875"}, {"sha": "c83b543fa0356e7714a14788f02e84445ab801c5", "filename": "gcc/testsuite/gcc.dg/torture/pr68963.c", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e53d562a36ead2279b98bc7cde3abe9606b44ee2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68963.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e53d562a36ead2279b98bc7cde3abe9606b44ee2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68963.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr68963.c?ref=e53d562a36ead2279b98bc7cde3abe9606b44ee2", "patch": "@@ -0,0 +1,41 @@\n+/* { dg-do run } */\n+\n+static const float a[3] = { 1, 2, 3 };\n+int b = 3;\n+\n+__attribute__((noinline, noclone)) void\n+bar (int x)\n+{\n+  if (x != b++)\n+    __builtin_abort ();\n+}\n+\n+void\n+foo (float *x, int y)\n+{\n+  int i;\n+  for (i = 0; i < 2 * y; ++i)\n+    {\n+      if (i < y)\n+\tx[i] = a[i];\n+      else\n+\t{\n+\t  bar (i);\n+\t  x[i] = a[i - y];\n+\t}\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  float x[10];\n+  unsigned int i;\n+  for (i = 0; i < 10; ++i)\n+    x[i] = 1337;\n+  foo (x, 3);\n+  for (i = 0; i < 10; ++i)\n+    if (x[i] != (i < 6 ? (i % 3) + 1 : 1337))\n+      __builtin_abort ();\n+  return 0;\n+}"}, {"sha": "43632edfe5d7ab20b77e344d208165096b1e109c", "filename": "gcc/tree-ssa-loop-niter.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e53d562a36ead2279b98bc7cde3abe9606b44ee2/gcc%2Ftree-ssa-loop-niter.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e53d562a36ead2279b98bc7cde3abe9606b44ee2/gcc%2Ftree-ssa-loop-niter.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.c?ref=e53d562a36ead2279b98bc7cde3abe9606b44ee2", "patch": "@@ -2757,7 +2757,7 @@ derive_constant_upper_bound_ops (tree type, tree op0,\n \t\t\t\t enum tree_code code, tree op1)\n {\n   tree subtype, maxt;\n-  widest_int bnd, max, mmax, cst;\n+  widest_int bnd, max, cst;\n   gimple *stmt;\n \n   if (INTEGRAL_TYPE_P (type))\n@@ -2823,8 +2823,8 @@ derive_constant_upper_bound_ops (tree type, tree op0,\n \t  /* OP0 + CST.  We need to check that\n \t     BND <= MAX (type) - CST.  */\n \n-\t  mmax -= cst;\n-\t  if (wi::ltu_p (bnd, max))\n+\t  widest_int mmax = max - cst;\n+\t  if (wi::leu_p (bnd, mmax))\n \t    return max;\n \n \t  return bnd + cst;\n@@ -3065,7 +3065,9 @@ record_nonwrapping_iv (struct loop *loop, tree base, tree step, gimple *stmt,\n \t  && get_range_info (orig_base, &min, &max) == VR_RANGE\n \t  && wi::gts_p (high, max))\n \tbase = wide_int_to_tree (unsigned_type, max);\n-      else if (TREE_CODE (base) != INTEGER_CST)\n+      else if (TREE_CODE (base) != INTEGER_CST\n+\t       && dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t  loop->latch, gimple_bb (stmt)))\n \tbase = fold_convert (unsigned_type, high);\n       delta = fold_build2 (MINUS_EXPR, unsigned_type, base, extreme);\n       step = fold_build1 (NEGATE_EXPR, unsigned_type, step);\n@@ -3080,7 +3082,9 @@ record_nonwrapping_iv (struct loop *loop, tree base, tree step, gimple *stmt,\n \t  && get_range_info (orig_base, &min, &max) == VR_RANGE\n \t  && wi::gts_p (min, low))\n \tbase = wide_int_to_tree (unsigned_type, min);\n-      else if (TREE_CODE (base) != INTEGER_CST)\n+      else if (TREE_CODE (base) != INTEGER_CST\n+\t       && dominated_by_p (CDI_DOMINATORS,\n+\t\t\t\t  loop->latch, gimple_bb (stmt)))\n \tbase = fold_convert (unsigned_type, low);\n       delta = fold_build2 (MINUS_EXPR, unsigned_type, extreme, base);\n     }"}]}