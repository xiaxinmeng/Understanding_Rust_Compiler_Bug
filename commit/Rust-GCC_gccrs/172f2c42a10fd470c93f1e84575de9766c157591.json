{"sha": "172f2c42a10fd470c93f1e84575de9766c157591", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTcyZjJjNDJhMTBmZDQ3MGM5M2YxZTg0NTc1ZGU5NzY2YzE1NzU5MQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-06-01T20:20:38Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-06-01T20:52:47Z"}, "message": "c++: vptr ubsan and object of known type [PR95466]\n\nAnother case where we can't find the OBJ_TYPE_REF_OBJECT in the\nOBJ_TYPE_REF_EXPR.  So let's just evaluate the sanitize call first.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/95466\n\tPR c++/95311\n\tPR c++/95221\n\t* class.c (build_vfn_ref): Revert 95311 change.\n\t* cp-ubsan.c (cp_ubsan_maybe_instrument_member_call): Build a\n\tCOMPOUND_EXPR.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/95466\n\t* g++.dg/ubsan/vptr-17.C: New test.", "tree": {"sha": "e169f2fb75548db8a27b015516eb95f0f97ce9b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e169f2fb75548db8a27b015516eb95f0f97ce9b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/172f2c42a10fd470c93f1e84575de9766c157591", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/172f2c42a10fd470c93f1e84575de9766c157591", "html_url": "https://github.com/Rust-GCC/gccrs/commit/172f2c42a10fd470c93f1e84575de9766c157591", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/172f2c42a10fd470c93f1e84575de9766c157591/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "832c1192eba6dd100e2f757e30ea6373f782ff55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/832c1192eba6dd100e2f757e30ea6373f782ff55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/832c1192eba6dd100e2f757e30ea6373f782ff55"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "757e010b6b7e4aa36f64fbc429d962860b434ec9", "filename": "gcc/cp/class.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172f2c42a10fd470c93f1e84575de9766c157591/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172f2c42a10fd470c93f1e84575de9766c157591/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=172f2c42a10fd470c93f1e84575de9766c157591", "patch": "@@ -729,13 +729,9 @@ build_vtbl_ref (tree instance, tree idx)\n tree\n build_vfn_ref (tree instance_ptr, tree idx)\n {\n-  tree obtype = TREE_TYPE (TREE_TYPE (instance_ptr));\n-\n-  /* Leave the INDIRECT_REF unfolded so cp_ubsan_maybe_instrument_member_call\n-     can find instance_ptr.  */\n-  tree ind = build1 (INDIRECT_REF, obtype, instance_ptr);\n+  tree aref;\n \n-  tree aref = build_vtbl_ref (ind, idx);\n+  aref = build_vtbl_ref (cp_build_fold_indirect_ref (instance_ptr), idx);\n \n   /* When using function descriptors, the address of the\n      vtable entry is treated as a function pointer.  */"}, {"sha": "183bd238affc4abd6b3b8af1f2d6015adc8d7c26", "filename": "gcc/cp/cp-ubsan.c", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172f2c42a10fd470c93f1e84575de9766c157591/gcc%2Fcp%2Fcp-ubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172f2c42a10fd470c93f1e84575de9766c157591/gcc%2Fcp%2Fcp-ubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-ubsan.c?ref=172f2c42a10fd470c93f1e84575de9766c157591", "patch": "@@ -125,16 +125,11 @@ cp_ubsan_maybe_instrument_member_call (tree stmt)\n     {\n       /* Virtual function call: Sanitize the use of the object pointer in the\n \t OBJ_TYPE_REF, since the vtable reference will SEGV otherwise (95221).\n-\t OBJ_TYPE_REF_EXPR is ptr->vptr[N] and OBJ_TYPE_REF_OBJECT is ptr.  */\n+\t OBJ_TYPE_REF_EXPR is ptr->vptr[N] and OBJ_TYPE_REF_OBJECT is ptr.  But\n+\t we can't be sure of finding OBJ_TYPE_REF_OBJECT in OBJ_TYPE_REF_EXPR\n+\t if the latter has been optimized, so we use a COMPOUND_EXPR below.  */\n       opp = &OBJ_TYPE_REF_EXPR (fn);\n       op = OBJ_TYPE_REF_OBJECT (fn);\n-      while (*opp != op)\n-\t{\n-\t  if (TREE_CODE (*opp) == COMPOUND_EXPR)\n-\t    opp = &TREE_OPERAND (*opp, 1);\n-\t  else\n-\t    opp = &TREE_OPERAND (*opp, 0);\n-\t}\n     }\n   else\n     {\n@@ -150,7 +145,11 @@ cp_ubsan_maybe_instrument_member_call (tree stmt)\n   op = cp_ubsan_maybe_instrument_vptr (EXPR_LOCATION (stmt), op,\n \t\t\t\t       TREE_TYPE (TREE_TYPE (op)),\n \t\t\t\t       true, UBSAN_MEMBER_CALL);\n-  if (op)\n+  if (!op)\n+    /* No change.  */;\n+  else if (fn && TREE_CODE (fn) == OBJ_TYPE_REF)\n+    *opp = cp_build_compound_expr (op, *opp, tf_none);\n+  else\n     *opp = op;\n }\n "}, {"sha": "b7f6a4cb4dff82fb5997f8a5981578caf0d65c44", "filename": "gcc/testsuite/g++.dg/ubsan/vptr-17.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/172f2c42a10fd470c93f1e84575de9766c157591/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/172f2c42a10fd470c93f1e84575de9766c157591/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fvptr-17.C?ref=172f2c42a10fd470c93f1e84575de9766c157591", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/95466\n+// { dg-additional-options -fsanitize=vptr }\n+\n+class A {\n+  virtual void m_fn1();\n+};\n+class C {\n+public:\n+  virtual void m_fn2();\n+};\n+class B : A, public C {};\n+int main() {\n+  B b;\n+  static_cast<C *>(&b)->m_fn2();\n+}"}]}