{"sha": "37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc2MDliZjA4NjQ1ZmFkOWM1ZWExY2Q4ZTA2MTk1YzZkMGZkMmM3ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-08-09T13:18:08Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-08-09T13:18:08Z"}, "message": "re PR tree-optimization/44632 (wrong code for complex division)\n\n2010-08-09  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/44632\n\t* function.c (gimplify_parameters): Do not clear addressable\n\tbit of the original parameter.\n\n\t* g++.dg/opt/nrv17.C: New testcase.\n\nFrom-SVN: r163031", "tree": {"sha": "984aa1c2d7e2924a37b0e1cf8fc8668425da6919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/984aa1c2d7e2924a37b0e1cf8fc8668425da6919"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "87d072e09a5d49a55384bdc7f38d4210c65bd343", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87d072e09a5d49a55384bdc7f38d4210c65bd343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87d072e09a5d49a55384bdc7f38d4210c65bd343"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "eea2550d4a77e93a92be05b45878bb8f21784a96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d", "patch": "@@ -1,3 +1,9 @@\n+2010-08-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44632\n+\t* function.c (gimplify_parameters): Do not clear addressable\n+\tbit of the original parameter.\n+\n 2010-08-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45212"}, {"sha": "a540d059a86df44890f95eba0354bdafd4046b86", "filename": "gcc/function.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d", "patch": "@@ -3570,12 +3570,10 @@ gimplify_parameters (void)\n \t\t  DECL_IGNORED_P (local) = 0;\n \t\t  /* If PARM was addressable, move that flag over\n \t\t     to the local copy, as its address will be taken,\n-\t\t     not the PARMs.  */\n+\t\t     not the PARMs.  Keep the parms address taken\n+\t\t     as we'll query that flag during gimplification.  */\n \t\t  if (TREE_ADDRESSABLE (parm))\n-\t\t    {\n-\t\t      TREE_ADDRESSABLE (parm) = 0;\n-\t\t      TREE_ADDRESSABLE (local) = 1;\n-\t\t    }\n+\t\t    TREE_ADDRESSABLE (local) = 1;\n \t\t}\n \t      else\n \t\t{"}, {"sha": "93ed62f12c0e2947da087b48caae63d61517ac2d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d", "patch": "@@ -1,3 +1,8 @@\n+2010-08-09  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44632\n+\t* g++.dg/opt/nrv17.C: New testcase.\n+\n 2010-08-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/45212"}, {"sha": "6248bca037af454f3eda98ce5e56a3e7cf67b060", "filename": "gcc/testsuite/g++.dg/opt/nrv17.C", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fnrv17.C?ref=37609bf08645fad9c5ea1cd8e06195c6d0fd2c7d", "patch": "@@ -0,0 +1,32 @@\n+// { dg-do run }\n+\n+#include <cstdlib>\n+#include <complex>\n+\n+void __attribute__((noinline))\n+h(std::complex<double> x)\n+{\n+  if (x.real() != 2.0)\n+    std::abort ();\n+}\n+\n+void __attribute__((noinline))\n+g(std::complex<double> x)\n+{\n+  if (x.real() != 0.5)\n+    std::abort ();\n+}\n+\n+void __attribute__((noinline))\n+f(std::complex<double> x)\n+{\n+  h (x);\n+  x = 1.0 / x;\n+  g (x);\n+}\n+\n+int main()\n+{\n+  f(2.0);\n+  return 0;\n+}"}]}