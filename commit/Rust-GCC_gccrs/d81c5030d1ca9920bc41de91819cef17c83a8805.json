{"sha": "d81c5030d1ca9920bc41de91819cef17c83a8805", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDgxYzUwMzBkMWNhOTkyMGJjNDFkZTkxODE5Y2VmMTdjODNhODgwNQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2015-03-27T14:47:24Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2015-03-27T14:47:24Z"}, "message": "re PR target/65407 (Extra mask register move in gcc.target/i386/avx512f-kandnw-1.c)\n\n2015-03-27  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/65407\n\t* ira-costs.c (record_reg_classes): Process all constraint string\n\tcontaining 0-9.\n\n2015-03-27  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/65407\n\t* gcc.target/i386/avx512f-kandnw-1.c: Add scanning kmovw.\n\nFrom-SVN: r221734", "tree": {"sha": "ab5f9fa3b84fcb355439b45a9188b52276e8a009", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab5f9fa3b84fcb355439b45a9188b52276e8a009"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d81c5030d1ca9920bc41de91819cef17c83a8805", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d81c5030d1ca9920bc41de91819cef17c83a8805", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d81c5030d1ca9920bc41de91819cef17c83a8805", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d81c5030d1ca9920bc41de91819cef17c83a8805/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2166d2a1a010c5172a14e30bb17c3bd4ca9a9ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2166d2a1a010c5172a14e30bb17c3bd4ca9a9ff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2166d2a1a010c5172a14e30bb17c3bd4ca9a9ff3"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "05b193bad28848cf8092f79177acb336f9d8823b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d81c5030d1ca9920bc41de91819cef17c83a8805/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d81c5030d1ca9920bc41de91819cef17c83a8805/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d81c5030d1ca9920bc41de91819cef17c83a8805", "patch": "@@ -1,3 +1,9 @@\n+2015-03-27  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/65407\n+\t* ira-costs.c (record_reg_classes): Process all constraint string\n+\tcontaining 0-9.\n+\n 2015-03-27  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* config/c6x/c6x.md (movmisalign<mode>): Use MEM_P, not"}, {"sha": "354ba6ba06342d4739d53af80e6ecc3e7f39b0b8", "filename": "gcc/ira-costs.c", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d81c5030d1ca9920bc41de91819cef17c83a8805/gcc%2Fira-costs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d81c5030d1ca9920bc41de91819cef17c83a8805/gcc%2Fira-costs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-costs.c?ref=d81c5030d1ca9920bc41de91819cef17c83a8805", "patch": "@@ -589,7 +589,7 @@ record_reg_classes (int n_alts, int n_ops, rtx *ops,\n \t  while (*p == '%' || *p == '=' || *p == '+' || *p == '&')\n \t    p++;\n \n-\t  if (p[0] >= '0' && p[0] <= '0' + i && (p[1] == ',' || p[1] == 0))\n+\t  if (p[0] >= '0' && p[0] <= '0' + i)\n \t    {\n \t      /* Copy class and whether memory is allowed from the\n \t\t matching alternative.  Then perform any needed cost\n@@ -754,14 +754,7 @@ record_reg_classes (int n_alts, int n_ops, rtx *ops,\n \t\t      && ! find_reg_note (insn, REG_DEAD, op))\n \t\t    alt_cost += 2;\n \n-\t\t  /* This is in place of ordinary cost computation for\n-\t\t     this operand, so skip to the end of the\n-\t\t     alternative (should be just one character).  */\n-\t\t  while (*p && *p++ != ',')\n-\t\t    ;\n-\n-\t\t  constraints[i] = p;\n-\t\t  continue;\n+\t\t  p++;\n \t\t}\n \t    }\n "}, {"sha": "69a1cdadc4883907bc836894102d248a4a159fe1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d81c5030d1ca9920bc41de91819cef17c83a8805/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d81c5030d1ca9920bc41de91819cef17c83a8805/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d81c5030d1ca9920bc41de91819cef17c83a8805", "patch": "@@ -1,3 +1,8 @@\n+2015-03-27  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/65407\n+\t* gcc.target/i386/avx512f-kandnw-1.c: Add scanning kmovw.\n+\n 2015-03-27  Andre Vehreschild  <vehre@gmx.de>\n \n \t* gfortran.dg/unlimited_polymorphic_24.f03: Added copyright"}, {"sha": "727a5890783d4632b362a4185da3fb247cb3f058", "filename": "gcc/testsuite/gcc.target/i386/avx512f-kandnw-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d81c5030d1ca9920bc41de91819cef17c83a8805/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandnw-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d81c5030d1ca9920bc41de91819cef17c83a8805/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandnw-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-kandnw-1.c?ref=d81c5030d1ca9920bc41de91819cef17c83a8805", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-mavx512f -O2\" } */\n /* { dg-final { scan-assembler-times \"kandnw\\[ \\\\t\\]+\\[^\\{\\n\\]*%k\\[0-7\\](?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"kmovw\" 2 } } */\n \n #include <immintrin.h>\n "}]}