{"sha": "84de780d46097681bffa1e9a166e1bdcb955ae37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODRkZTc4MGQ0NjA5NzY4MWJmZmExZTlhMTY2ZTFiZGNiOTU1YWUzNw==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2019-12-20T15:30:41Z"}, "committer": {"name": "Jerome Lambourg", "email": "lambourg@gcc.gnu.org", "date": "2019-12-20T15:30:41Z"}, "message": "libstdc++: Test setrlimit with c++ in configure\n\n\t* acinclude.m4 (GLIBCXX_CHECK_SETRLIMIT): Test with AC_LANG_CPLUSPLUS.\n\t* configure: Regenerate.\n\nFrom-SVN: r279644", "tree": {"sha": "c0cea977971377f5719fd56ff1b1c997f751fcd1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0cea977971377f5719fd56ff1b1c997f751fcd1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/84de780d46097681bffa1e9a166e1bdcb955ae37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84de780d46097681bffa1e9a166e1bdcb955ae37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84de780d46097681bffa1e9a166e1bdcb955ae37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84de780d46097681bffa1e9a166e1bdcb955ae37/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "33bd8e5e22182ed84a685fa27c8fc04585da5355", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33bd8e5e22182ed84a685fa27c8fc04585da5355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33bd8e5e22182ed84a685fa27c8fc04585da5355"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "81f7bb9b853dfe2fea292ada22760be522ac8cc4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84de780d46097681bffa1e9a166e1bdcb955ae37/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84de780d46097681bffa1e9a166e1bdcb955ae37/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=84de780d46097681bffa1e9a166e1bdcb955ae37", "patch": "@@ -1,3 +1,8 @@\n+2019-12-20  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* acinclude.m4 (GLIBCXX_CHECK_SETRLIMIT): Test with AC_LANG_CPLUSPLUS.\n+\t* configure: Regenerate.\n+\n 2019-12-20  Fran\u00e7ois Dumont  <fdumont@gcc.gnu.org>\n \n \t* testsuite/23_containers/map/48101_neg.cc: Add versioned namespace"}, {"sha": "c0d1059c6ed69a7dd0c19fab378b9d4d0d8dd350", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84de780d46097681bffa1e9a166e1bdcb955ae37/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84de780d46097681bffa1e9a166e1bdcb955ae37/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=84de780d46097681bffa1e9a166e1bdcb955ae37", "patch": "@@ -316,6 +316,8 @@ AC_DEFUN([GLIBCXX_CHECK_SETRLIMIT_ancilliary], [\n ])\n \n AC_DEFUN([GLIBCXX_CHECK_SETRLIMIT], [\n+  AC_LANG_SAVE\n+  AC_LANG_CPLUSPLUS\n   setrlimit_have_headers=yes\n   AC_CHECK_HEADERS(unistd.h sys/time.h sys/resource.h,\n \t\t   [],\n@@ -352,6 +354,7 @@ AC_DEFUN([GLIBCXX_CHECK_SETRLIMIT], [\n   else\n     ac_res_limits=no\n   fi\n+  AC_LANG_RESTORE\n   AC_MSG_RESULT($ac_res_limits)\n ])\n "}, {"sha": "f2d52fd05f36d881057495f9207c6f15b0b15f18", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/84de780d46097681bffa1e9a166e1bdcb955ae37/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/84de780d46097681bffa1e9a166e1bdcb955ae37/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=84de780d46097681bffa1e9a166e1bdcb955ae37", "patch": "@@ -74233,11 +74233,18 @@ $as_echo \"$ac_cv_x86_rdseed\" >&6; }\n \n   # Do checks for resource limit functions.\n \n+\n+  ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n   setrlimit_have_headers=yes\n   for ac_header in unistd.h sys/time.h sys/resource.h\n do :\n   as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n-ac_fn_c_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n+ac_fn_cxx_check_header_mongrel \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\"\n if eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n   cat >>confdefs.h <<_ACEOF\n #define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n@@ -74270,7 +74277,7 @@ main ()\n   return 0;\n }\n _ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n   glibcxx_mresult=1\n else\n   glibcxx_mresult=0\n@@ -74302,7 +74309,7 @@ main ()\n   return 0;\n }\n _ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n   glibcxx_mresult=1\n else\n   glibcxx_mresult=0\n@@ -74334,7 +74341,7 @@ main ()\n   return 0;\n }\n _ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n   glibcxx_mresult=1\n else\n   glibcxx_mresult=0\n@@ -74366,7 +74373,7 @@ main ()\n   return 0;\n }\n _ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n   glibcxx_mresult=1\n else\n   glibcxx_mresult=0\n@@ -74398,7 +74405,7 @@ main ()\n   return 0;\n }\n _ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n   glibcxx_mresult=1\n else\n   glibcxx_mresult=0\n@@ -74434,7 +74441,7 @@ struct rlimit r;\n   return 0;\n }\n _ACEOF\n-if ac_fn_c_try_compile \"$LINENO\"; then :\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n   glibcxx_cv_setrlimit=yes\n else\n   glibcxx_cv_setrlimit=no\n@@ -74455,6 +74462,12 @@ $as_echo \"#define _GLIBCXX_RES_LIMITS 1\" >>confdefs.h\n   else\n     ac_res_limits=no\n   fi\n+  ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res_limits\" >&5\n $as_echo \"$ac_res_limits\" >&6; }\n "}]}