{"sha": "91bc61122f0f6781805aab89e21f674b218c72c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFiYzYxMTIyZjBmNjc4MTgwNWFhYjg5ZTIxZjY3NGIyMThjNzJjOQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-07-21T11:33:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-07-21T11:33:16Z"}, "message": "tree-ssa-forwprop.c (combine_conversions): Return whether we have to run cfg-cleanup.\n\n2011-07-21  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-forwprop.c (combine_conversions): Return whether\n\twe have to run cfg-cleanup.  Properly remove dead stmts.\n\t(ssa_forward_propagate_and_combine): Adjust.\n\nFrom-SVN: r176561", "tree": {"sha": "961bf49ac6c1af1bae8a1c4cc08f7deb40d9ace4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/961bf49ac6c1af1bae8a1c4cc08f7deb40d9ace4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91bc61122f0f6781805aab89e21f674b218c72c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91bc61122f0f6781805aab89e21f674b218c72c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91bc61122f0f6781805aab89e21f674b218c72c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91bc61122f0f6781805aab89e21f674b218c72c9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2224b91ac5ae5afe47365fecc5ecc52083085f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2224b91ac5ae5afe47365fecc5ecc52083085f6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2224b91ac5ae5afe47365fecc5ecc52083085f6f"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "9f26c891f6b777862c4bc6304d6ceaa52cf636c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91bc61122f0f6781805aab89e21f674b218c72c9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91bc61122f0f6781805aab89e21f674b218c72c9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91bc61122f0f6781805aab89e21f674b218c72c9", "patch": "@@ -1,3 +1,9 @@\n+2011-07-21  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-forwprop.c (combine_conversions): Return whether\n+\twe have to run cfg-cleanup.  Properly remove dead stmts.\n+\t(ssa_forward_propagate_and_combine): Adjust.\n+\n 2011-07-21  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \t* regcprop.c (maybe_mode_change): Check HARD_REGNO_MODE_OK."}, {"sha": "d51773a2a3f9b3034934716b54340f4245a3489c", "filename": "gcc/tree-ssa-forwprop.c", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91bc61122f0f6781805aab89e21f674b218c72c9/gcc%2Ftree-ssa-forwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91bc61122f0f6781805aab89e21f674b218c72c9/gcc%2Ftree-ssa-forwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-forwprop.c?ref=91bc61122f0f6781805aab89e21f674b218c72c9", "patch": "@@ -2144,9 +2144,10 @@ associate_plusminus (gimple stmt)\n }\n \n /* Combine two conversions in a row for the second conversion at *GSI.\n-   Returns true if there were any changes made.  */\n+   Returns 1 if there were any changes made, 2 if cfg-cleanup needs to\n+   run.  Else it returns 0.  */\n  \n-static bool\n+static int\n combine_conversions (gimple_stmt_iterator *gsi)\n {\n   gimple stmt = gsi_stmt (*gsi);\n@@ -2163,15 +2164,15 @@ combine_conversions (gimple_stmt_iterator *gsi)\n   if (useless_type_conversion_p (TREE_TYPE (lhs), TREE_TYPE (op0)))\n     {\n       gimple_assign_set_rhs_code (stmt, TREE_CODE (op0));\n-      return true;\n+      return 1;\n     }\n \n   if (TREE_CODE (op0) != SSA_NAME)\n-    return false;\n+    return 0;\n \n   def_stmt = SSA_NAME_DEF_STMT (op0);\n   if (!is_gimple_assign (def_stmt))\n-    return false;\n+    return 0;\n \n   if (CONVERT_EXPR_CODE_P (gimple_assign_rhs_code (def_stmt)))\n     {\n@@ -2210,7 +2211,7 @@ combine_conversions (gimple_stmt_iterator *gsi)\n \t  gimple_assign_set_rhs1 (stmt, unshare_expr (defop0));\n \t  gimple_assign_set_rhs_code (stmt, TREE_CODE (defop0));\n \t  update_stmt (stmt);\n-\t  return true;\n+\t  return remove_prop_source_from_use (op0) ? 2 : 1;\n \t}\n \n       /* Likewise, if the intermediate and initial types are either both\n@@ -2232,7 +2233,7 @@ combine_conversions (gimple_stmt_iterator *gsi)\n \t{\n \t  gimple_assign_set_rhs1 (stmt, defop0);\n \t  update_stmt (stmt);\n-\t  return true;\n+\t  return remove_prop_source_from_use (op0) ? 2 : 1;\n \t}\n \n       /* If we have a sign-extension of a zero-extended value, we can\n@@ -2243,7 +2244,7 @@ combine_conversions (gimple_stmt_iterator *gsi)\n \t{\n \t  gimple_assign_set_rhs1 (stmt, defop0);\n \t  update_stmt (stmt);\n-\t  return true;\n+\t  return remove_prop_source_from_use (op0) ? 2 : 1;\n \t}\n \n       /* Two conversions in a row are not needed unless:\n@@ -2272,7 +2273,7 @@ combine_conversions (gimple_stmt_iterator *gsi)\n \t{\n \t  gimple_assign_set_rhs1 (stmt, defop0);\n \t  update_stmt (stmt);\n-\t  return true;\n+\t  return remove_prop_source_from_use (op0) ? 2 : 1;\n \t}\n \n       /* A truncation to an unsigned type should be canonicalized as\n@@ -2296,11 +2297,11 @@ combine_conversions (gimple_stmt_iterator *gsi)\n \t  else\n \t    gimple_assign_set_rhs_from_tree (gsi, tem);\n \t  update_stmt (gsi_stmt (*gsi));\n-\t  return true;\n+\t  return 1;\n \t}\n     }\n \n-  return false;\n+  return 0;\n }\n \n /* Main entry point for the forward propagation and statement combine\n@@ -2462,7 +2463,12 @@ ssa_forward_propagate_and_combine (void)\n \t\telse if (CONVERT_EXPR_CODE_P (code)\n \t\t\t || code == FLOAT_EXPR\n \t\t\t || code == FIX_TRUNC_EXPR)\n-\t\t  changed = combine_conversions (&gsi);\n+\t\t  {\n+\t\t    int did_something = combine_conversions (&gsi);\n+\t\t    if (did_something == 2)\n+\t\t      cfg_changed = true;\n+\t\t    changed = did_something != 0;\n+\t\t  }\n \t\tbreak;\n \t      }\n "}]}