{"sha": "d9cb427712544eac737ace9cce2a1b607d9b4f9b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDljYjQyNzcxMjU0NGVhYzczN2FjZTljY2UyYTFiNjA3ZDliNGY5Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2019-05-21T17:57:11Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-05-21T17:57:11Z"}, "message": "re PR target/90547 (ICE in gen_lowpart_general, at rtlhooks.c:63)\n\n\tPR target/90547\n\t* config/i386/i386.md (anddi_1 to andsi_1_zext splitter):\n\tAvoid calling gen_lowpart with CONST operand.\n\ntestsuite/ChangeLog:\n\n\tPR target/90547\n\t* gcc.target/i386/pr90547.c: New test.\n\nFrom-SVN: r271479", "tree": {"sha": "6ea706e8a0bd2df3572c3499a2a26e5f2440f885", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6ea706e8a0bd2df3572c3499a2a26e5f2440f885"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9cb427712544eac737ace9cce2a1b607d9b4f9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9cb427712544eac737ace9cce2a1b607d9b4f9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9cb427712544eac737ace9cce2a1b607d9b4f9b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9cb427712544eac737ace9cce2a1b607d9b4f9b/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40dada26a785875a9ed698e87f952acc26237895", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40dada26a785875a9ed698e87f952acc26237895", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40dada26a785875a9ed698e87f952acc26237895"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "8a89dc8b943058267e26d12ee2ee20a7074e9e6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9cb427712544eac737ace9cce2a1b607d9b4f9b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9cb427712544eac737ace9cce2a1b607d9b4f9b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d9cb427712544eac737ace9cce2a1b607d9b4f9b", "patch": "@@ -1,3 +1,9 @@\n+2019-05-21  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/90547\n+\t* config/i386/i386.md (anddi_1 to andsi_1_zext splitter):\n+\tAvoid calling gen_lowpart with CONST operand.\n+\n 2019-05-21  Alexandre Oliva <aoliva@redhat.com>\n \n \t* tree-ssa-threadupdate.c (struct ssa_local_info_t): Add"}, {"sha": "da5163de80e68e6ef728ede3364d7be520faaa21", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9cb427712544eac737ace9cce2a1b607d9b4f9b/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9cb427712544eac737ace9cce2a1b607d9b4f9b/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d9cb427712544eac737ace9cce2a1b607d9b4f9b", "patch": "@@ -8525,6 +8525,14 @@\n       operands[2] = shallow_copy_rtx (operands[2]);\n       PUT_MODE (operands[2], SImode);\n     }\n+  else if (GET_CODE (operands[2]) == CONST)\n+    {\n+      /* (const:DI (plus:DI (symbol_ref:DI (\"...\")) (const_int N))) */\n+      operands[2] = copy_rtx (operands[2]);\n+      PUT_MODE (operands[2], SImode);\n+      PUT_MODE (XEXP (operands[2], 0), SImode);\n+      PUT_MODE (XEXP (XEXP (operands[2], 0), 0), SImode);\n+    }    \n   else\n     operands[2] = gen_lowpart (SImode, operands[2]);\n })"}, {"sha": "b2781fa0f0bf55e62f1cb7ec1c0fc3806d4bd943", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9cb427712544eac737ace9cce2a1b607d9b4f9b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9cb427712544eac737ace9cce2a1b607d9b4f9b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d9cb427712544eac737ace9cce2a1b607d9b4f9b", "patch": "@@ -1,3 +1,8 @@\n+2019-05-21  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/90547\n+\t* gcc.target/i386/pr90547.c: New test.\n+\n 2019-05-21  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* gcc.dg/Wattribute-alias.c: Pass emtpy arg to dg-require-ifunc."}, {"sha": "fcfe66953b02113d782599029d8e0a8008f1236a", "filename": "gcc/testsuite/gcc.target/i386/pr90547.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9cb427712544eac737ace9cce2a1b607d9b4f9b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90547.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9cb427712544eac737ace9cce2a1b607d9b4f9b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90547.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90547.c?ref=d9cb427712544eac737ace9cce2a1b607d9b4f9b", "patch": "@@ -0,0 +1,21 @@\n+/* PR target/90547 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+void\n+foo ()\n+{\n+  void *g[] = {&&a, &&b};\n+\n+  for (unsigned c = 0x1F;; c >>= 1)\n+    {\n+      unsigned d = (long)(\"a\"+1);\n+      long e = 8;\n+\n+      while (e)\n+        {\n+          a: goto *g[c&d];\n+          b: e--;\n+        }\n+    }\n+}"}]}