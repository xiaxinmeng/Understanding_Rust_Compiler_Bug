{"sha": "37f74dcf9524c4b9bfeead32c66f541a16b19121", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdmNzRkY2Y5NTI0YzRiOWJmZWVhZDMyYzY2ZjU0MWExNmIxOTEyMQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2003-03-07T10:07:14Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2003-03-07T10:07:14Z"}, "message": "* arm.md (addsf3, adddf3, subsf3, subdf3, mulsf3, muldf3, negsf2)\n(negdf2, abssi2, abssf2, absdf2, floatsisf2, floatsidf2)\n(fix_truncsfsi2, fix_truncdfsi2, truncdfsf2): Moved back into main\nmachine description file from ...\n* cirrus.md: ... here.\n\nFrom-SVN: r63940", "tree": {"sha": "2cc87febbff35eb29385e8a3407643144906d1a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2cc87febbff35eb29385e8a3407643144906d1a0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37f74dcf9524c4b9bfeead32c66f541a16b19121", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f74dcf9524c4b9bfeead32c66f541a16b19121", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37f74dcf9524c4b9bfeead32c66f541a16b19121", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37f74dcf9524c4b9bfeead32c66f541a16b19121/comments", "author": null, "committer": null, "parents": [{"sha": "3bf74da29f1f1d4b97218994720d3fcebf1d1eea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bf74da29f1f1d4b97218994720d3fcebf1d1eea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bf74da29f1f1d4b97218994720d3fcebf1d1eea"}], "stats": {"total": 348, "additions": 177, "deletions": 171}, "files": [{"sha": "4d90245bf0d3d29dfd498d7908687590c882076a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f74dcf9524c4b9bfeead32c66f541a16b19121/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f74dcf9524c4b9bfeead32c66f541a16b19121/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37f74dcf9524c4b9bfeead32c66f541a16b19121", "patch": "@@ -1,3 +1,11 @@\n+2003-03-07  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* arm.md (addsf3, adddf3, subsf3, subdf3, mulsf3, muldf3, negsf2)\n+\t(negdf2, abssi2, abssf2, absdf2, floatsisf2, floatsidf2)\n+\t(fix_truncsfsi2, fix_truncdfsi2, truncdfsf2): Moved back into main\n+\tmachine description file from ...\n+\t* cirrus.md: ... here.\n+\n 2003-03-06  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.md (a peephole2): Don't use"}, {"sha": "297206242aa449b13b6f4c328d03df48b50e77f7", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f74dcf9524c4b9bfeead32c66f541a16b19121/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f74dcf9524c4b9bfeead32c66f541a16b19121/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=37f74dcf9524c4b9bfeead32c66f541a16b19121", "patch": "@@ -806,6 +806,17 @@\n    (set_attr \"length\" \"4,8\")]\n )\n \n+(define_expand \"addsf3\"\n+  [(set (match_operand:SF          0 \"s_register_operand\" \"\")\n+\t(plus:SF (match_operand:SF 1 \"s_register_operand\" \"\")\n+\t\t (match_operand:SF 2 \"fpu_add_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS\n+      && !cirrus_fp_register (operands[2], SFmode))\n+    operands[2] = force_reg (SFmode, operands[2]);\n+\")\n+\n (define_insn \"*arm_addsf3\"\n   [(set (match_operand:SF          0 \"s_register_operand\" \"=f,f\")\n \t(plus:SF (match_operand:SF 1 \"s_register_operand\" \"%f,f\")\n@@ -818,6 +829,17 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n+(define_expand \"adddf3\"\n+  [(set (match_operand:DF          0 \"s_register_operand\" \"\")\n+\t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n+\t\t (match_operand:DF 2 \"fpu_add_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS\n+      && !cirrus_fp_register (operands[2], DFmode))\n+    operands[2] = force_reg (DFmode, operands[2]);\n+\")\n+\n (define_insn \"*arm_adddf3\"\n   [(set (match_operand:DF          0 \"s_register_operand\" \"=f,f\")\n \t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"%f,f\")\n@@ -1068,6 +1090,21 @@\n    (set_attr \"length\" \"*,8\")]\n )\n \n+(define_expand \"subsf3\"\n+  [(set (match_operand:SF           0 \"s_register_operand\" \"\")\n+\t(minus:SF (match_operand:SF 1 \"fpu_rhs_operand\" \"\")\n+\t\t  (match_operand:SF 2 \"fpu_rhs_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      if (!cirrus_fp_register (operands[1], SFmode))\n+        operands[1] = force_reg (SFmode, operands[1]);\n+      if (!cirrus_fp_register (operands[2], SFmode))\n+        operands[2] = force_reg (SFmode, operands[2]);\n+    }\n+\")\n+\n (define_insn \"*arm_subsf3\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f,f\")\n \t(minus:SF (match_operand:SF 1 \"fpu_rhs_operand\" \"f,G\")\n@@ -1079,6 +1116,21 @@\n   [(set_attr \"type\" \"farith\")]\n )\n \n+(define_expand \"subdf3\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"\")\n+\t(minus:DF (match_operand:DF 1 \"fpu_rhs_operand\"     \"\")\n+\t\t  (match_operand:DF 2 \"fpu_rhs_operand\"    \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+       if (!cirrus_fp_register (operands[1], DFmode))\n+         operands[1] = force_reg (DFmode, operands[1]);\n+       if (!cirrus_fp_register (operands[2], DFmode))\n+         operands[2] = force_reg (DFmode, operands[2]);\n+    }\n+\")\n+\n (define_insn \"*arm_subdf3\"\n   [(set (match_operand:DF           0 \"s_register_operand\" \"=f,f\")\n \t(minus:DF (match_operand:DF 1 \"fpu_rhs_operand\"     \"f,G\")\n@@ -1401,6 +1453,17 @@\n   [(set_attr \"type\" \"mult\")\n    (set_attr \"predicable\" \"yes\")])\n \n+(define_expand \"mulsf3\"\n+  [(set (match_operand:SF          0 \"s_register_operand\" \"\")\n+\t(mult:SF (match_operand:SF 1 \"s_register_operand\" \"\")\n+\t\t (match_operand:SF 2 \"fpu_rhs_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS\n+      && !cirrus_fp_register (operands[2], SFmode))\n+    operands[2] = force_reg (SFmode, operands[2]);\n+\")\n+\n (define_insn \"*arm_mulsf3\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"s_register_operand\" \"f\")\n@@ -1411,6 +1474,17 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n+(define_expand \"muldf3\"\n+  [(set (match_operand:DF          0 \"s_register_operand\" \"\")\n+\t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n+\t\t (match_operand:DF 2 \"fpu_rhs_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS\n+      && !cirrus_fp_register (operands[2], DFmode))\n+    operands[2] = force_reg (DFmode, operands[2]);\n+\")\n+\n (define_insn \"*arm_muldf3\"\n   [(set (match_operand:DF 0 \"s_register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"f\")\n@@ -2784,6 +2858,19 @@\n   [(set_attr \"length\" \"2\")]\n )\n \n+(define_expand \"negsf2\"\n+  [(set (match_operand:SF         0 \"s_register_operand\" \"\")\n+\t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\"\n+)\n+\n+(define_expand \"negdf2\"\n+  [(set (match_operand:DF         0 \"s_register_operand\" \"\")\n+\t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\")\n+\n (define_insn \"*arm_negsf2\"\n   [(set (match_operand:SF         0 \"s_register_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n@@ -2817,6 +2904,14 @@\n ;; it does, but tell the final scan operator the truth.  Similarly for\n ;; (neg (abs...))\n \n+(define_expand \"abssi2\"\n+  [(parallel\n+    [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n+\t  (abs:SI (match_operand:SI 1 \"s_register_operand\" \"\")))\n+     (clobber (reg:CC CC_REGNUM))])]\n+  \"TARGET_ARM\"\n+  \"\")\n+\n (define_insn \"*arm_abssi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"=r,&r\")\n \t(abs:SI (match_operand:SI 1 \"s_register_operand\" \"0,r\")))\n@@ -2845,6 +2940,12 @@\n    (set_attr \"length\" \"8\")]\n )\n \n+(define_expand \"abssf2\"\n+  [(set (match_operand:SF         0 \"s_register_operand\" \"\")\n+\t(abs:SF (match_operand:SF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\")\n+\n (define_insn \"*arm_abssf2\"\n   [(set (match_operand:SF          0 \"s_register_operand\" \"=f\")\n \t (abs:SF (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n@@ -2854,6 +2955,12 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n+(define_expand \"absdf2\"\n+  [(set (match_operand:DF         0 \"s_register_operand\" \"\")\n+\t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\")\n+\n (define_insn \"*arm_absdf2\"\n   [(set (match_operand:DF         0 \"s_register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n@@ -2966,6 +3073,18 @@\n \f\n ;; Fixed <--> Floating conversion insns\n \n+(define_expand \"floatsisf2\"\n+  [(set (match_operand:SF           0 \"s_register_operand\" \"\")\n+\t(float:SF (match_operand:SI 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      emit_insn (gen_cirrus_floatsisf2 (operands[0], operands[1]));\n+      DONE;\n+    }\n+\")\n+\n (define_insn \"*arm_floatsisf2\"\n   [(set (match_operand:SF           0 \"s_register_operand\" \"=f\")\n \t(float:SF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n@@ -2975,6 +3094,18 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n+(define_expand \"floatsidf2\"\n+  [(set (match_operand:DF           0 \"s_register_operand\" \"\")\n+\t(float:DF (match_operand:SI 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      emit_insn (gen_cirrus_floatsidf2 (operands[0], operands[1]));\n+      DONE;\n+    }\n+\")\n+\n (define_insn \"*arm_floatsidf2\"\n   [(set (match_operand:DF           0 \"s_register_operand\" \"=f\")\n \t(float:DF (match_operand:SI 1 \"s_register_operand\" \"r\")))]\n@@ -2984,6 +3115,22 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n+(define_expand \"fix_truncsfsi2\"\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n+\t(fix:SI (match_operand:SF 1 \"s_register_operand\"  \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      if (!cirrus_fp_register (operands[0], SImode))\n+        operands[0] = force_reg (SImode, operands[0]);\n+      if (!cirrus_fp_register (operands[1], SFmode))\n+        operands[1] = force_reg (SFmode, operands[0]);\n+      emit_insn (gen_cirrus_truncsfsi2 (operands[0], operands[1]));\n+      DONE;\n+    }\n+\")\n+\n (define_insn \"*arm_fix_truncsfsi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:SF 1 \"s_register_operand\" \"f\")))]\n@@ -2993,6 +3140,20 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n+(define_expand \"fix_truncdfsi2\"\n+  [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n+\t(fix:SI (match_operand:DF 1 \"s_register_operand\"  \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\n+  if (TARGET_CIRRUS)\n+    {\n+      if (!cirrus_fp_register (operands[1], DFmode))\n+        operands[1] = force_reg (DFmode, operands[0]);\n+      emit_insn (gen_cirrus_truncdfsi2 (operands[0], operands[1]));\n+      DONE;\n+    }\n+\")\n+\n (define_insn \"*arm_fix_truncdfsi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:DF 1 \"s_register_operand\" \"f\")))]\n@@ -3004,6 +3165,14 @@\n \n ;; Truncation insns\n \n+(define_expand \"truncdfsf2\"\n+  [(set (match_operand:SF  0 \"s_register_operand\" \"\")\n+\t(float_truncate:SF\n+ \t (match_operand:DF 1 \"s_register_operand\" \"\")))]\n+  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n+  \"\"\n+)\n+\n (define_insn \"*arm_truncdfsf2\"\n   [(set (match_operand:SF 0 \"s_register_operand\" \"=f\")\n \t(float_truncate:SF"}, {"sha": "328a0ebe5d4e4ec711ddc859f060967b79914df0", "filename": "gcc/config/arm/cirrus.md", "status": "modified", "additions": 0, "deletions": 171, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37f74dcf9524c4b9bfeead32c66f541a16b19121/gcc%2Fconfig%2Farm%2Fcirrus.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37f74dcf9524c4b9bfeead32c66f541a16b19121/gcc%2Fconfig%2Farm%2Fcirrus.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fcirrus.md?ref=37f74dcf9524c4b9bfeead32c66f541a16b19121", "patch": "@@ -50,18 +50,6 @@\n    (set_attr \"cirrus\" \"normal\")]\n )\n \n-;; define_insn replaced by define_expand and define_insn\n-(define_expand \"addsf3\"\n-  [(set (match_operand:SF          0 \"s_register_operand\" \"\")\n-\t(plus:SF (match_operand:SF 1 \"s_register_operand\" \"\")\n-\t\t (match_operand:SF 2 \"fpu_add_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS\n-      && !cirrus_fp_register (operands[2], SFmode))\n-    operands[2] = force_reg (SFmode, operands[2]);\n-\")\n-\n (define_insn \"*cirrus_addsf3\"\n   [(set (match_operand:SF          0 \"cirrus_fp_register\" \"=v\")\n \t(plus:SF (match_operand:SF 1 \"cirrus_fp_register\" \"v\")\n@@ -72,18 +60,6 @@\n    (set_attr \"cirrus\" \"normal\")]\n )\n \n-;; define_insn replaced by define_expand and define_insn\n-(define_expand \"adddf3\"\n-  [(set (match_operand:DF          0 \"s_register_operand\" \"\")\n-\t(plus:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n-\t\t (match_operand:DF 2 \"fpu_add_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS\n-      && !cirrus_fp_register (operands[2], DFmode))\n-    operands[2] = force_reg (DFmode, operands[2]);\n-\")\n-\n (define_insn \"*cirrus_adddf3\"\n   [(set (match_operand:DF          0 \"cirrus_fp_register\" \"=v\")\n \t(plus:DF (match_operand:DF 1 \"cirrus_fp_register\" \"v\")\n@@ -114,21 +90,6 @@\n    (set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"subsf3\"\n-  [(set (match_operand:SF           0 \"s_register_operand\" \"\")\n-\t(minus:SF (match_operand:SF 1 \"fpu_rhs_operand\" \"\")\n-\t\t  (match_operand:SF 2 \"fpu_rhs_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS)\n-    {\n-      if (!cirrus_fp_register (operands[1], SFmode))\n-        operands[1] = force_reg (SFmode, operands[1]);\n-      if (!cirrus_fp_register (operands[2], SFmode))\n-        operands[2] = force_reg (SFmode, operands[2]);\n-    }\n-\")\n-\n (define_insn \"*cirrus_subsf3\"\n   [(set (match_operand:SF           0 \"cirrus_fp_register\" \"=v\")\n \t(minus:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")\n@@ -139,21 +100,6 @@\n    (set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"subdf3\"\n-  [(set (match_operand:DF           0 \"s_register_operand\" \"\")\n-\t(minus:DF (match_operand:DF 1 \"fpu_rhs_operand\"     \"\")\n-\t\t  (match_operand:DF 2 \"fpu_rhs_operand\"    \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS)\n-    {\n-       if (!cirrus_fp_register (operands[1], DFmode))\n-         operands[1] = force_reg (DFmode, operands[1]);\n-       if (!cirrus_fp_register (operands[2], DFmode))\n-         operands[2] = force_reg (DFmode, operands[2]);\n-    }\n-\")\n-\n (define_insn \"*cirrus_subdf3\"\n   [(set (match_operand:DF           0 \"cirrus_fp_register\" \"=v\")\n \t(minus:DF (match_operand:DF 1 \"cirrus_fp_register\" \"v\")\n@@ -209,17 +155,6 @@\n    (set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"mulsf3\"\n-  [(set (match_operand:SF          0 \"s_register_operand\" \"\")\n-\t(mult:SF (match_operand:SF 1 \"s_register_operand\" \"\")\n-\t\t (match_operand:SF 2 \"fpu_rhs_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS\n-      && !cirrus_fp_register (operands[2], SFmode))\n-    operands[2] = force_reg (SFmode, operands[2]);\n-\")\n-\n (define_insn \"*cirrus_mulsf3\"\n   [(set (match_operand:SF          0 \"cirrus_fp_register\" \"=v\")\n \t(mult:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")\n@@ -230,17 +165,6 @@\n    (set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"muldf3\"\n-  [(set (match_operand:DF          0 \"s_register_operand\" \"\")\n-\t(mult:DF (match_operand:DF 1 \"s_register_operand\" \"\")\n-\t\t (match_operand:DF 2 \"fpu_rhs_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS\n-      && !cirrus_fp_register (operands[2], DFmode))\n-    operands[2] = force_reg (DFmode, operands[2]);\n-\")\n-\n (define_insn \"*cirrus_muldf3\"\n   [(set (match_operand:DF          0 \"cirrus_fp_register\" \"=v\")\n \t(mult:DF (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")\n@@ -331,13 +255,6 @@\n   [(set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"negsf2\"\n-  [(set (match_operand:SF         0 \"s_register_operand\" \"\")\n-\t(neg:SF (match_operand:SF 1 \"s_register_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\"\n-)\n-\n (define_insn \"*cirrus_negsf2\"\n   [(set (match_operand:SF         0 \"cirrus_fp_register\" \"=v\")\n \t(neg:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))]\n@@ -346,12 +263,6 @@\n   [(set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"negdf2\"\n-  [(set (match_operand:DF         0 \"s_register_operand\" \"\")\n-\t(neg:DF (match_operand:DF 1 \"s_register_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\")\n-\n (define_insn \"*cirrus_negdf2\"\n   [(set (match_operand:DF         0 \"cirrus_fp_register\" \"=v\")\n \t(neg:DF (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")))]\n@@ -360,14 +271,6 @@\n   [(set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"abssi2\"\n-  [(parallel\n-    [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n-\t  (abs:SI (match_operand:SI 1 \"s_register_operand\" \"\")))\n-     (clobber (reg:CC CC_REGNUM))])]\n-  \"TARGET_ARM\"\n-  \"\")\n-\n ;; This doesn't really clobber the condition codes either.  \n (define_insn \"*cirrus_abssi2\"\n   [(set (match_operand:SI         0 \"cirrus_fp_register\" \"=v\")\n@@ -378,12 +281,6 @@\n   [(set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"abssf2\"\n-  [(set (match_operand:SF         0 \"s_register_operand\" \"\")\n-\t(abs:SF (match_operand:SF 1 \"s_register_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\")\n-\n (define_insn \"*cirrus_abssf2\"\n   [(set (match_operand:SF         0 \"cirrus_fp_register\" \"=v\")\n         (abs:SF (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))]\n@@ -392,12 +289,6 @@\n   [(set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"absdf2\"\n-  [(set (match_operand:DF         0 \"s_register_operand\" \"\")\n-\t(abs:DF (match_operand:DF 1 \"s_register_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\")\n-\n (define_insn \"*cirrus_absdf2\"\n   [(set (match_operand:DF         0 \"cirrus_fp_register\" \"=v\")\n         (abs:DF (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")))]\n@@ -406,18 +297,6 @@\n   [(set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"floatsisf2\"\n-  [(set (match_operand:SF           0 \"s_register_operand\" \"\")\n-\t(float:SF (match_operand:SI 1 \"s_register_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS)\n-    {\n-      emit_insn (gen_cirrus_floatsisf2 (operands[0], operands[1]));\n-      DONE;\n-    }\n-\")\n-\n ;; Convert Cirrus-SI to Cirrus-SF\n (define_insn \"cirrus_floatsisf2\"\n   [(set (match_operand:SF           0 \"cirrus_fp_register\" \"=v\")\n@@ -429,18 +308,6 @@\n    (set_attr \"cirrus\" \"move\")]\n )\n \n-(define_expand \"floatsidf2\"\n-  [(set (match_operand:DF           0 \"s_register_operand\" \"\")\n-\t(float:DF (match_operand:SI 1 \"s_register_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS)\n-    {\n-      emit_insn (gen_cirrus_floatsidf2 (operands[0], operands[1]));\n-      DONE;\n-    }\n-\")\n-\n (define_insn \"cirrus_floatsidf2\"\n   [(set (match_operand:DF           0 \"cirrus_fp_register\" \"=v\")\n \t(float:DF (match_operand:SI 1 \"s_register_operand\" \"r\")))\n@@ -465,22 +332,6 @@\n   \"cfcvt64d%?\\\\t%V0, %V1\"\n   [(set_attr \"cirrus\" \"normal\")])\n \n-(define_expand \"fix_truncsfsi2\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n-\t(fix:SI (match_operand:SF 1 \"s_register_operand\"  \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS)\n-    {\n-      if (!cirrus_fp_register (operands[0], SImode))\n-        operands[0] = force_reg (SImode, operands[0]);\n-      if (!cirrus_fp_register (operands[1], SFmode))\n-        operands[1] = force_reg (SFmode, operands[0]);\n-      emit_insn (gen_cirrus_truncsfsi2 (operands[0], operands[1]));\n-      DONE;\n-    }\n-\")\n-\n (define_insn \"cirrus_truncsfsi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:SF 1 \"cirrus_fp_register\"  \"v\")))\n@@ -491,20 +342,6 @@\n    (set_attr \"cirrus\" \"normal\")]\n )\n \n-(define_expand \"fix_truncdfsi2\"\n-  [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n-\t(fix:SI (match_operand:DF 1 \"s_register_operand\"  \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\n-  if (TARGET_CIRRUS)\n-    {\n-      if (!cirrus_fp_register (operands[1], DFmode))\n-        operands[1] = force_reg (DFmode, operands[0]);\n-      emit_insn (gen_cirrus_truncdfsi2 (operands[0], operands[1]));\n-      DONE;\n-    }\n-\")\n-\n (define_insn \"cirrus_truncdfsi2\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"=r\")\n \t(fix:SI (match_operand:DF 1 \"cirrus_fp_register\"  \"v\")))\n@@ -514,14 +351,6 @@\n   [(set_attr \"length\" \"8\")]\n )\n \n-(define_expand \"truncdfsf2\"\n-  [(set (match_operand:SF  0 \"s_register_operand\" \"\")\n-\t(float_truncate:SF\n- \t (match_operand:DF 1 \"s_register_operand\" \"\")))]\n-  \"TARGET_ARM && TARGET_ANY_HARD_FLOAT\"\n-  \"\"\n-)\n-\n (define_insn \"*cirrus_truncdfsf2\"\n   [(set (match_operand:SF  0 \"cirrus_fp_register\" \"=v\")\n         (float_truncate:SF"}]}