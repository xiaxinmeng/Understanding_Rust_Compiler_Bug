{"sha": "819108404b08eb20500da886faa6a39e63616a9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5MTA4NDA0YjA4ZWIyMDUwMGRhODg2ZmFhNmEzOWU2MzYxNmE5ZA==", "commit": {"author": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-01-16T20:23:43Z"}, "committer": {"name": "Tom Wood", "email": "wood@gnu.org", "date": "1992-01-16T20:23:43Z"}, "message": "Initial revision\n\nFrom-SVN: r197", "tree": {"sha": "ed8c0fd36928c6ea3b76e35721983c1533beac28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed8c0fd36928c6ea3b76e35721983c1533beac28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/819108404b08eb20500da886faa6a39e63616a9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819108404b08eb20500da886faa6a39e63616a9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819108404b08eb20500da886faa6a39e63616a9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819108404b08eb20500da886faa6a39e63616a9d/comments", "author": null, "committer": null, "parents": [{"sha": "17fd0700509e4263ae27080a2edd80a9e256514e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fd0700509e4263ae27080a2edd80a9e256514e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17fd0700509e4263ae27080a2edd80a9e256514e"}], "stats": {"total": 169, "additions": 169, "deletions": 0}, "files": [{"sha": "9374382ff7d703358be57d2e8a4f4ef09dcdfb52", "filename": "gcc/config/m88k/dgux.h", "status": "added", "additions": 169, "deletions": 0, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819108404b08eb20500da886faa6a39e63616a9d/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819108404b08eb20500da886faa6a39e63616a9d/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=819108404b08eb20500da886faa6a39e63616a9d", "patch": "@@ -0,0 +1,169 @@\n+/* Definitions of target machine for GNU compiler.\n+   Motorola m88100 running DG/UX.\n+   Copyright (C) 1988, 1989, 1990, 1991 Free Software Foundation, Inc.\n+   Contributed by Michael Tiemann (tiemann@mcc.com)\n+   Enhanced by Michael Meissner (meissner@osf.org)\n+   Currently supported by Tom Wood (wood@dg-rtp.dg.com)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+/* You're not seeing double!  To transition to dwarf debugging, both are\n+   supported.  The option -msvr4 and -mversion-03.00 specify (for DG/UX)\n+   `real' elf.  With these combinations, -g means dwarf.  */\n+/* DWARF_DEBUGGING_INFO defined in svr4.h.  */\n+#define SDB_DEBUGGING_INFO\n+#define PREFERRED_DEBUGGING_TYPE \\\n+  (VERSION_0300_SYNTAX ? DWARF_DEBUG : SDB_DEBUG)\n+\n+#ifndef NO_BUGS\n+#define AS_BUG_IMMEDIATE_LABEL\n+#endif\n+\n+#include \"svr4.h\"\n+#include \"m88k.h\"\n+\n+/* Augment TARGET_SWITCHES with the MXDB options.  */\n+#define MASK_STANDARD\t\t0x40000000 /* Retain standard information */\n+#define MASK_LEGEND\t\t0x20000000 /* Retain legend information */\n+#define MASK_EXTERNAL_LEGEND\t0x10000000 /* Make external legends */\n+\n+#define TARGET_STANDARD\t\t  (target_flags & MASK_STANDARD)\n+#define TARGET_LEGEND\t\t  (target_flags & MASK_LEGEND)\n+#define TARGET_EXTERNAL_LEGEND\t  (target_flags & MASK_EXTERNAL_LEGEND)\n+\n+#undef  SUBTARGET_SWITCHES\n+#define SUBTARGET_SWITCHES \\\n+    { \"standard\",\t\t\t MASK_STANDARD }, \\\n+    { \"legend\",\t\t\t\t MASK_LEGEND }, \\\n+    { \"external-legend\",\t\t MASK_EXTERNAL_LEGEND }, \\\n+    /* the following is used only in the *_SPEC's */ \\\n+    { \"keep-coff\",\t\t\t 0 },\n+\n+/* Default switches */\n+#undef\tTARGET_DEFAULT\n+#define TARGET_DEFAULT\t(MASK_CHECK_ZERO_DIV\t | \\\n+\t\t\t MASK_OCS_DEBUG_INFO\t | \\\n+\t\t\t MASK_OCS_FRAME_POSITION)\n+\n+/* Macros to be automatically defined.  __svr4__ is our extension.\n+   __CLASSIFY_TYPE__ is used in the <varargs.h> and <stdarg.h> header\n+   files with DG/UX revision 5.40 and later.  This allows GNU CC to\n+   operate without installing the header files.  */\n+\n+#undef\tCPP_PREDEFINES\n+#define CPP_PREDEFINES \"-Dm88000 -Dm88k -Dunix -DDGUX -D__CLASSIFY_TYPE__=2\\\n+   -D__svr4__ -Asystem(unix) -Acpu(m88k) -Amachine(m88k)\"\n+\n+/* If not -ansi, -traditional, or restricting include files to one\n+   specific source target, specify full DG/UX features.  */\n+#undef\tCPP_SPEC\n+#define\tCPP_SPEC \"%{!ansi:%{!traditional:-D__OPEN_NAMESPACE__}}\"\n+\n+/* Assembler support (-V, silicon filter, legends for mxdb).  */\n+#undef\tASM_SPEC\n+#define ASM_SPEC \"\\\n+%{V} %{v:%{!V:-V}} %{pipe: - %{msvr4:%{mversion-03.00:-KV3}}}\\\n+%{!mlegend:%{mstandard:-Wc,off}}\\\n+%{mlegend:-Wc,-fix-bb,-h\\\"gcc-1.96.3\\\",-s\\\"%i\\\"\\\n+%{traditional:,-lc}%{!traditional:,-lansi-c}\\\n+%{mstandard:,-keep-std}\\\n+%{mkeep-coff:,-keep-coff}\\\n+%{mexternal-legend:,-external}\\\n+%{mocs-frame-position:,-ocs}}\"\n+\n+/* Override svr4.h.  */\n+#undef\tASM_FINAL_SPEC\n+#undef\tSTARTFILE_SPEC\n+\n+/* Linker and library spec's.\n+   -static, -shared, -symbolic, -h* and -z* access AT&T V.4 link options.\n+   -svr4 instructs gcc to place /usr/lib/values-X[cat].o on link the line.\n+   When the -G link option is used (-shared and -symbolic) a final link is\n+   not being done.  */\n+#undef\tLIB_SPEC\n+#define LIB_SPEC \"%{!shared:%{!symbolic:-lc}}\"\n+#undef\tLINK_SPEC\n+#define LINK_SPEC \"%{z*} %{h*} %{V} %{v:%{!V:-V}} \\\n+\t\t   %{static:-dn -Bstatic} \\\n+\t\t   %{shared:-G -dy} \\\n+\t\t   %{symbolic:-Bsymbolic -G -dy} \\\n+\t\t   %{pg:-L/usr/lib/libp}%{p:-L/usr/lib/libp}\"\n+#undef\tSTARTFILE_SPEC\n+#define STARTFILE_SPEC \"%{!shared:%{!symbolic:%{pg:gcrt0.o%s} \\\n+\t\t\t %{!pg:%{p:/lib/mcrt0.o}%{!p:/lib/crt0.o}} \\\n+\t\t\t %{svr4:%{ansi:/lib/values-Xc.o} \\\n+\t\t\t  %{!ansi:%{traditional:/lib/values-Xt.o} \\\n+\t\t\t   %{!traditional:/usr/lib/values-Xa.o}}}}}\"\n+\n+#undef\tGPLUSPLUS_INCLUDE_DIR\n+#define GPLUSPLUS_INCLUDE_DIR \"/usr/opt/g++/lib/g++-include\"\n+\n+/* Fast DG/UX version of profiler that does not require lots of\n+   registers to be stored.  */\n+#undef\tFUNCTION_PROFILER\n+#define FUNCTION_PROFILER(FILE, LABELNO) \\\n+  output_function_profiler (FILE, LABELNO, \"gcc.mcount\", 0)\n+\n+/* DGUX V.4 isn't quite ELF--yet.  */\n+#undef  VERSION_0300_SYNTAX\n+#define VERSION_0300_SYNTAX (TARGET_SVR4 && TARGET_VERSION_0300)\n+\n+/* Output the legend info for mxdb when debugging except if standard\n+   debugging information only is explicitly requested.  */\n+#undef  ASM_FIRST_LINE\n+#define ASM_FIRST_LINE(FILE)\t\t\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+    if (VERSION_0300_SYNTAX)\t\t\t\t\t\t\\\n+      fprintf (FILE, \"%s\\t \\\"03.00\\\"\\n\", VERSION_ASM_OP);\t\t\\\n+    if (write_symbols != NO_DEBUG\t\t\t\t\t\\\n+\t&& ! (TARGET_STANDARD && ! TARGET_LEGEND))\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\\\n+\tfprintf (FILE, \";legend_info -fix-bb -h\\\"gcc-%s\\\" -s\\\"%s\\\"\",\t\\\n+\t\t VERSION_STRING, main_input_filename);\t\t\t\\\n+\tfputs (flag_traditional ? \" -lc\" : \" -lansi-c\", FILE);\t\t\\\n+\tif (TARGET_STANDARD)\t\t\t\t\t\t\\\n+\t  fputs (\" -keep-std\", FILE);\t\t\t\t\t\\\n+\tif (TARGET_EXTERNAL_LEGEND)\t\t\t\t\t\\\n+\t  fputs (\" -external\", FILE);\t\t\t\t\t\\\n+\tif (TARGET_OCS_FRAME_POSITION)\t\t\t\t\t\\\n+\t  fputs (\" -ocs\", FILE);\t\t\t\t\t\\\n+\tfputc ('\\n', FILE);\t\t\t\t\t\t\\\n+      }\t\t\t\t\t\t\t\t\t\\\n+  } while (0)\n+\n+/* Override svr4.h.  */\n+#undef PTRDIFF_TYPE\n+#undef WCHAR_TYPE\n+#undef WCHAR_TYPE_SIZE\n+\n+/* Override svr4.h and m88k.h except when compling crtstuff.c.  */\n+#if !defined (CRT_BEGIN) && !defined (CRT_END)\n+#if 0 /* The SVR4 init method doesn't yet work.  */\n+#undef\tINIT_SECTION_ASM_OP\n+#define INIT_SECTION_ASM_OP (VERSION_0300_SYNTAX\t\t\\\n+\t\t\t     ? \"\\tsection\\t .init,\\\"xa\\\"\\n\"\t\\\n+\t\t\t     : \"\\tsection\\t .init,\\\"x\\\"\\n\")\n+#endif\n+#undef\tCTORS_SECTION_ASM_OP\n+#define CTORS_SECTION_ASM_OP (VERSION_0300_SYNTAX\t\t\\\n+\t\t\t      ? \"\\tsection\\t .ctors,\\\"aw\\\"\\n\"\t\\\n+\t\t\t      : \"\\tsection\\t .ctors,\\\"d\\\"\\n\")\n+#undef\tDTORS_SECTION_ASM_OP\n+#define DTORS_SECTION_ASM_OP (VERSION_0300_SYNTAX\t\t\\\n+\t\t\t      ? \"\\tsection\\t .dtors,\\\"aw\\\"\\n\"\t\\\n+\t\t\t      : \"\\tsection\\t .dtors,\\\"d\\\"\\n\")\n+#endif /* crtstuff.c */"}]}