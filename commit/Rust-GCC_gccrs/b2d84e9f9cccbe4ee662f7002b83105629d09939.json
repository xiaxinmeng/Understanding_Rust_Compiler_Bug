{"sha": "b2d84e9f9cccbe4ee662f7002b83105629d09939", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJkODRlOWY5Y2NjYmU0ZWU2NjJmNzAwMmI4MzEwNTYyOWQwOTkzOQ==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-02-04T18:13:22Z"}, "committer": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2021-02-04T23:06:56Z"}, "message": "openacc: Tests for character types in derived-type mappings\n\nThis patch adds some tests for character types that are components of\nderived types used in OpenACC data-movement clauses.\n\ngcc/testsuite/\n\t* gfortran.dg/goacc/derived-chartypes-1.f90: New test.\n\t* gfortran.dg/goacc/derived-chartypes-2.f90: Likewise.\n\t* gfortran.dg/goacc/derived-chartypes-3.f90: Likewise.\n\t* gfortran.dg/goacc/derived-chartypes-4.f90: Likewise.", "tree": {"sha": "4f10e25bff220061beeb2866c616839cf6066607", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f10e25bff220061beeb2866c616839cf6066607"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2d84e9f9cccbe4ee662f7002b83105629d09939", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2d84e9f9cccbe4ee662f7002b83105629d09939", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2d84e9f9cccbe4ee662f7002b83105629d09939", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2d84e9f9cccbe4ee662f7002b83105629d09939/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a4d32f85ccebc0ee4b24e6d9d7a4f11c04d7146"}], "stats": {"total": 334, "additions": 334, "deletions": 0}, "files": [{"sha": "e4d360e1262b3988d18247d435f46b79762d5d66", "filename": "gcc/testsuite/gfortran.dg/goacc/derived-chartypes-1.f90", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2d84e9f9cccbe4ee662f7002b83105629d09939/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2d84e9f9cccbe4ee662f7002b83105629d09939/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-1.f90?ref=b2d84e9f9cccbe4ee662f7002b83105629d09939", "patch": "@@ -0,0 +1,129 @@\n+type :: type1\n+  character(len=35) :: a\n+end type type1\n+\n+type :: type2\n+  character(len=35), pointer :: b\n+end type type2\n+\n+type :: aux1\n+  character(len=22) :: y\n+end type aux1\n+\n+type, extends(aux1) :: aux\n+  character(len=33) :: x\n+end type aux\n+\n+type :: type3\n+  class(aux), pointer :: c(:)\n+end type type3\n+\n+type :: type4\n+  integer, pointer :: d(:)\n+end type type4\n+\n+type :: type5\n+  type(aux1) :: e\n+end type type5\n+\n+type :: type6\n+  type(aux1), pointer :: f\n+end type type6\n+\n+type :: type7\n+  class(aux), pointer :: g\n+end type type7\n+\n+type(type1) :: foo\n+type(type2) :: bar\n+type(type3) :: qux\n+type(type4) :: quux\n+type(type5) :: fred\n+type(type6) :: jim\n+type(type7) :: shiela\n+\n+type(type1), pointer :: pfoo\n+type(type2), pointer :: pbar\n+type(type3), pointer :: pqux\n+type(type4), pointer :: pquux\n+type(type5), pointer :: pfred\n+type(type6), pointer :: pjim\n+type(type7), pointer :: pshiela\n+\n+class(type1), pointer :: cfoo\n+class(type2), pointer :: cbar\n+class(type3), pointer :: cqux\n+class(type4), pointer :: cquux\n+class(type5), pointer :: cfred\n+class(type6), pointer :: cjim\n+class(type7), pointer :: cshiela\n+\n+class(type1), allocatable :: acfoo\n+class(type2), allocatable :: acbar\n+class(type3), allocatable :: acqux\n+class(type4), allocatable :: acquux\n+class(type5), allocatable :: acfred\n+class(type6), allocatable :: acjim\n+class(type7), allocatable :: acshiela\n+\n+!$acc enter data copyin(foo)\n+!$acc enter data copyin(foo%a)\n+!$acc enter data copyin(bar)\n+!$acc enter data copyin(bar%b)\n+!$acc enter data copyin(qux)\n+!$acc enter data copyin(qux%c)\n+!$acc enter data copyin(quux)\n+!$acc enter data copyin(quux%d)\n+!$acc enter data copyin(fred)\n+!$acc enter data copyin(fred%e)\n+!$acc enter data copyin(jim)\n+!$acc enter data copyin(jim%f)\n+!$acc enter data copyin(shiela)\n+!$acc enter data copyin(shiela%g)\n+\n+!$acc enter data copyin(pfoo)\n+!$acc enter data copyin(pfoo%a)\n+!$acc enter data copyin(pbar)\n+!$acc enter data copyin(pbar%b)\n+!$acc enter data copyin(pqux)\n+!$acc enter data copyin(pqux%c)\n+!$acc enter data copyin(pquux)\n+!$acc enter data copyin(pquux%d)\n+!$acc enter data copyin(pfred)\n+!$acc enter data copyin(pfred%e)\n+!$acc enter data copyin(pjim)\n+!$acc enter data copyin(pjim%f)\n+!$acc enter data copyin(pshiela)\n+!$acc enter data copyin(pshiela%g)\n+\n+!$acc enter data copyin(cfoo)\n+!$acc enter data copyin(cfoo%a)\n+!$acc enter data copyin(cbar)\n+!$acc enter data copyin(cbar%b)\n+!$acc enter data copyin(cqux)\n+!$acc enter data copyin(cqux%c)\n+!$acc enter data copyin(cquux)\n+!$acc enter data copyin(cquux%d)\n+!$acc enter data copyin(cfred)\n+!$acc enter data copyin(cfred%e)\n+!$acc enter data copyin(cjim)\n+!$acc enter data copyin(cjim%f)\n+!$acc enter data copyin(cshiela)\n+!$acc enter data copyin(cshiela%g)\n+\n+!$acc enter data copyin(acfoo)\n+!$acc enter data copyin(acfoo%a)\n+!$acc enter data copyin(acbar)\n+!$acc enter data copyin(acbar%b)\n+!$acc enter data copyin(acqux)\n+!$acc enter data copyin(acqux%c)\n+!$acc enter data copyin(acquux)\n+!$acc enter data copyin(acquux%d)\n+!$acc enter data copyin(acfred)\n+!$acc enter data copyin(acfred%e)\n+!$acc enter data copyin(acjim)\n+!$acc enter data copyin(acjim%f)\n+!$acc enter data copyin(acshiela)\n+!$acc enter data copyin(acshiela%g)\n+\n+end"}, {"sha": "cca6443e7fcf5bf0ba957c3fb97a18ca2956839e", "filename": "gcc/testsuite/gfortran.dg/goacc/derived-chartypes-2.f90", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2d84e9f9cccbe4ee662f7002b83105629d09939/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2d84e9f9cccbe4ee662f7002b83105629d09939/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-2.f90?ref=b2d84e9f9cccbe4ee662f7002b83105629d09939", "patch": "@@ -0,0 +1,129 @@\n+type :: type1\n+  character(len=35,kind=4) :: a\n+end type type1\n+\n+type :: type2\n+  character(len=35,kind=4), pointer :: b\n+end type type2\n+\n+type :: aux1\n+  character(len=22,kind=4) :: y\n+end type aux1\n+\n+type, extends(aux1) :: aux\n+  character(len=33,kind=4) :: x\n+end type aux\n+\n+type :: type3\n+  class(aux), pointer :: c(:)\n+end type type3\n+\n+type :: type4\n+  integer, pointer :: d(:)\n+end type type4\n+\n+type :: type5\n+  type(aux1) :: e\n+end type type5\n+\n+type :: type6\n+  type(aux1), pointer :: f\n+end type type6\n+\n+type :: type7\n+  class(aux), pointer :: g\n+end type type7\n+\n+type(type1) :: foo\n+type(type2) :: bar\n+type(type3) :: qux\n+type(type4) :: quux\n+type(type5) :: fred\n+type(type6) :: jim\n+type(type7) :: shiela\n+\n+type(type1), pointer :: pfoo\n+type(type2), pointer :: pbar\n+type(type3), pointer :: pqux\n+type(type4), pointer :: pquux\n+type(type5), pointer :: pfred\n+type(type6), pointer :: pjim\n+type(type7), pointer :: pshiela\n+\n+class(type1), pointer :: cfoo\n+class(type2), pointer :: cbar\n+class(type3), pointer :: cqux\n+class(type4), pointer :: cquux\n+class(type5), pointer :: cfred\n+class(type6), pointer :: cjim\n+class(type7), pointer :: cshiela\n+\n+class(type1), allocatable :: acfoo\n+class(type2), allocatable :: acbar\n+class(type3), allocatable :: acqux\n+class(type4), allocatable :: acquux\n+class(type5), allocatable :: acfred\n+class(type6), allocatable :: acjim\n+class(type7), allocatable :: acshiela\n+\n+!$acc enter data copyin(foo)\n+!$acc enter data copyin(foo%a)\n+!$acc enter data copyin(bar)\n+!$acc enter data copyin(bar%b)\n+!$acc enter data copyin(qux)\n+!$acc enter data copyin(qux%c)\n+!$acc enter data copyin(quux)\n+!$acc enter data copyin(quux%d)\n+!$acc enter data copyin(fred)\n+!$acc enter data copyin(fred%e)\n+!$acc enter data copyin(jim)\n+!$acc enter data copyin(jim%f)\n+!$acc enter data copyin(shiela)\n+!$acc enter data copyin(shiela%g)\n+\n+!$acc enter data copyin(pfoo)\n+!$acc enter data copyin(pfoo%a)\n+!$acc enter data copyin(pbar)\n+!$acc enter data copyin(pbar%b)\n+!$acc enter data copyin(pqux)\n+!$acc enter data copyin(pqux%c)\n+!$acc enter data copyin(pquux)\n+!$acc enter data copyin(pquux%d)\n+!$acc enter data copyin(pfred)\n+!$acc enter data copyin(pfred%e)\n+!$acc enter data copyin(pjim)\n+!$acc enter data copyin(pjim%f)\n+!$acc enter data copyin(pshiela)\n+!$acc enter data copyin(pshiela%g)\n+\n+!$acc enter data copyin(cfoo)\n+!$acc enter data copyin(cfoo%a)\n+!$acc enter data copyin(cbar)\n+!$acc enter data copyin(cbar%b)\n+!$acc enter data copyin(cqux)\n+!$acc enter data copyin(cqux%c)\n+!$acc enter data copyin(cquux)\n+!$acc enter data copyin(cquux%d)\n+!$acc enter data copyin(cfred)\n+!$acc enter data copyin(cfred%e)\n+!$acc enter data copyin(cjim)\n+!$acc enter data copyin(cjim%f)\n+!$acc enter data copyin(cshiela)\n+!$acc enter data copyin(cshiela%g)\n+\n+!$acc enter data copyin(acfoo)\n+!$acc enter data copyin(acfoo%a)\n+!$acc enter data copyin(acbar)\n+!$acc enter data copyin(acbar%b)\n+!$acc enter data copyin(acqux)\n+!$acc enter data copyin(acqux%c)\n+!$acc enter data copyin(acquux)\n+!$acc enter data copyin(acquux%d)\n+!$acc enter data copyin(acfred)\n+!$acc enter data copyin(acfred%e)\n+!$acc enter data copyin(acjim)\n+!$acc enter data copyin(acjim%f)\n+!$acc enter data copyin(acshiela)\n+!$acc enter data copyin(acshiela%g)\n+\n+end"}, {"sha": "2bab497cef5d99ab77b611c1bd007e347f5bd503", "filename": "gcc/testsuite/gfortran.dg/goacc/derived-chartypes-3.f90", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2d84e9f9cccbe4ee662f7002b83105629d09939/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2d84e9f9cccbe4ee662f7002b83105629d09939/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-3.f90?ref=b2d84e9f9cccbe4ee662f7002b83105629d09939", "patch": "@@ -0,0 +1,38 @@\n+! { dg-additional-options \"-fdump-tree-gimple\" }\n+\n+type :: type1\n+  character(len=35) :: a\n+end type type1\n+\n+type :: type2\n+  character(len=46), pointer :: b\n+end type type2\n+\n+type(type1) :: foo\n+type(type2) :: bar\n+\n+type(type1), pointer :: pfoo\n+type(type2), pointer :: pbar\n+\n+class(type1), pointer :: cfoo\n+class(type2), pointer :: cbar\n+\n+class(type1), allocatable :: acfoo\n+class(type2), allocatable :: acbar\n+\n+!$acc enter data copyin(foo%a)\n+!$acc enter data copyin(bar%b)\n+\n+!$acc enter data copyin(pfoo%a)\n+!$acc enter data copyin(pbar%b)\n+\n+!$acc enter data copyin(cfoo%a)\n+!$acc enter data copyin(cbar%b)\n+\n+!$acc enter data copyin(acfoo%a)\n+!$acc enter data copyin(acbar%b)\n+\n+! { dg-final { scan-tree-dump-times \"to:\\[^\\\\\\[\\]*\\\\\\[len: 35\\\\\\]\" 4 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"to:\\[^\\\\\\[\\]*\\\\\\[len: 46\\\\\\]\" 4 \"gimple\" } }\n+\n+end"}, {"sha": "cfe40066a5953ba338863b742d0b0f5544038e18", "filename": "gcc/testsuite/gfortran.dg/goacc/derived-chartypes-4.f90", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2d84e9f9cccbe4ee662f7002b83105629d09939/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2d84e9f9cccbe4ee662f7002b83105629d09939/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fderived-chartypes-4.f90?ref=b2d84e9f9cccbe4ee662f7002b83105629d09939", "patch": "@@ -0,0 +1,38 @@\n+! { dg-additional-options \"-fdump-tree-gimple\" }\n+\n+type :: type1\n+  character(len=35,kind=4) :: a\n+end type type1\n+\n+type :: type2\n+  character(len=46,kind=4), pointer :: b\n+end type type2\n+\n+type(type1) :: foo\n+type(type2) :: bar\n+\n+type(type1), pointer :: pfoo\n+type(type2), pointer :: pbar\n+\n+class(type1), pointer :: cfoo\n+class(type2), pointer :: cbar\n+\n+class(type1), allocatable :: acfoo\n+class(type2), allocatable :: acbar\n+\n+!$acc enter data copyin(foo%a)\n+!$acc enter data copyin(bar%b)\n+\n+!$acc enter data copyin(pfoo%a)\n+!$acc enter data copyin(pbar%b)\n+\n+!$acc enter data copyin(cfoo%a)\n+!$acc enter data copyin(cbar%b)\n+\n+!$acc enter data copyin(acfoo%a)\n+!$acc enter data copyin(acbar%b)\n+\n+! { dg-final { scan-tree-dump-times \"to:\\[^\\\\\\[\\]*\\\\\\[len: 140\\\\\\]\" 4 \"gimple\" } }\n+! { dg-final { scan-tree-dump-times \"to:\\[^\\\\\\[\\]*\\\\\\[len: 184\\\\\\]\" 4 \"gimple\" } }\n+\n+end"}]}