{"sha": "54fa7daefe35cacf4a933947d1802318da193c01", "node_id": "C_kwDOANBUbNoAKDU0ZmE3ZGFlZmUzNWNhY2Y0YTkzMzk0N2QxODAyMzE4ZGExOTNjMDE", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-10T19:49:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-10T19:49:11Z"}, "message": "c++: Ensure some more that immediate functions aren't gimplified [PR103912]\n\nImmediate functions should never be emitted into assembly, the FE doesn't\ngenericize them and does various things to ensure they aren't gimplified.\nBut the following testcase ICEs anyway due to that, because the consteval\nfunction returns a lambda, and operator() of the lambda has\ndecl_function_context of the consteval function.  cgraphunit.c then\ndoes:\n              /* Preserve a functions function context node.  It will\n                 later be needed to output debug info.  */\n              if (tree fn = decl_function_context (decl))\n                {\n                  cgraph_node *origin_node = cgraph_node::get_create (fn);\n                  enqueue_node (origin_node);\n                }\nwhich enqueues the immediate function and then tries to gimplify it,\nwhich results in ICE because it hasn't been genericized.\n\nWhen I try similar testcase with constexpr instead of consteval and\nstatic constinit auto instead of auto in main, what happens is that\nthe functions are gimplified, later ipa.c discovers they aren't reachable\nand sets body_removed to true for them (and clears other flags) and we end\nup with a debug info which has the foo and bar functions without\nDW_AT_low_pc and other code specific attributes, just stuff from its BLOCK\nstructure and in there the lambda with DW_AT_low_pc etc.\n\nThe following patch attempts to emulate that behavior early, so that cgraph\ndoesn't try to gimplify those and pretends they were already gimplified\nand found unused and optimized away.\n\n2022-01-10  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c++/103912\n\t* semantics.c (expand_or_defer_fn): For immediate functions, set\n\tnode->body_removed to true and clear analyzed, definition and\n\tforce_output.\n\t* decl2.c (c_parse_final_cleanups): Ignore immediate functions for\n\texpand_or_defer_fn.\n\n\t* g++.dg/cpp2a/consteval26.C: New test.", "tree": {"sha": "51a20cec6d8de5caeb09edcb5b8a2d7e8bf5c946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51a20cec6d8de5caeb09edcb5b8a2d7e8bf5c946"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54fa7daefe35cacf4a933947d1802318da193c01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54fa7daefe35cacf4a933947d1802318da193c01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54fa7daefe35cacf4a933947d1802318da193c01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54fa7daefe35cacf4a933947d1802318da193c01/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de0faa56a10406b50fba159957e3a3fd2f95c64b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de0faa56a10406b50fba159957e3a3fd2f95c64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de0faa56a10406b50fba159957e3a3fd2f95c64b"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "899a80029f57cba82cfe9695dc8c093a3bd984c6", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54fa7daefe35cacf4a933947d1802318da193c01/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54fa7daefe35cacf4a933947d1802318da193c01/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=54fa7daefe35cacf4a933947d1802318da193c01", "patch": "@@ -5272,6 +5272,7 @@ c_parse_final_cleanups (void)\n \t  if (!DECL_EXTERNAL (decl)\n \t      && decl_needed_p (decl)\n \t      && !TREE_ASM_WRITTEN (decl)\n+\t      && !DECL_IMMEDIATE_FUNCTION_P (decl)\n \t      && !node->definition)\n \t    {\n \t      /* We will output the function; no longer consider it in this"}, {"sha": "00100b0c080a7c08a2f4b40f40288e61caa5cc3e", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54fa7daefe35cacf4a933947d1802318da193c01/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54fa7daefe35cacf4a933947d1802318da193c01/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=54fa7daefe35cacf4a933947d1802318da193c01", "patch": "@@ -4787,6 +4787,17 @@ expand_or_defer_fn (tree fn)\n       emit_associated_thunks (fn);\n \n       function_depth--;\n+\n+      if (DECL_IMMEDIATE_FUNCTION_P (fn))\n+\t{\n+\t  if (cgraph_node *node = cgraph_node::get (fn))\n+\t    {\n+\t      node->body_removed = true;\n+\t      node->analyzed = false;\n+\t      node->definition = false;\n+\t      node->force_output = false;\n+\t    }\n+\t}\n     }\n }\n "}, {"sha": "01acb80ff9e38ec54f39ee1871ad9c9c0d1d3158", "filename": "gcc/testsuite/g++.dg/cpp2a/consteval26.C", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54fa7daefe35cacf4a933947d1802318da193c01/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54fa7daefe35cacf4a933947d1802318da193c01/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fconsteval26.C?ref=54fa7daefe35cacf4a933947d1802318da193c01", "patch": "@@ -0,0 +1,39 @@\n+// PR c++/103912\n+// { dg-do run { target c++20 } }\n+// { dg-additional-options \"-O2 -g -fkeep-inline-functions\" }\n+\n+extern \"C\" void abort ();\n+\n+struct A { A () {} };\n+\n+consteval auto\n+foo ()\n+{\n+  if (1)\n+    ;\n+  return [] (A x) { return 1; };\n+}\n+\n+consteval auto\n+bar (int a)\n+{\n+  int b = a + 4;\n+  if (1)\n+    ;\n+  return [=] (A x) { return a + b; };\n+}\n+\n+int\n+main ()\n+{\n+  A x;\n+  auto h = foo ();\n+  if (h (x) != 1)\n+    abort ();\n+  auto i = bar (5);\n+  if (i (x) != 14)\n+    abort ();\n+  auto j = bar (42);\n+  if (j (x) != 88)\n+    abort ();\n+}"}]}