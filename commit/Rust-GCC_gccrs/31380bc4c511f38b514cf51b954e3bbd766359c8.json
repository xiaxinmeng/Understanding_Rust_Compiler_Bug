{"sha": "31380bc4c511f38b514cf51b954e3bbd766359c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEzODBiYzRjNTExZjM4YjUxNGNmNTFiOTU0ZTNiYmQ3NjYzNTljOA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-01-12T00:51:50Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-01-12T00:51:50Z"}, "message": "base.h (decode2): Rename to __decode2.\n\n2010-01-11  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/parallel/base.h (decode2): Rename to __decode2.\n\t(binder2nd): Likewise to __binder2nd.\n\t* include/parallel/quicksort.h: Adjust callers.\n\t* include/parallel/balanced_quicksort.h: Likewise.\n\t* include/parallel/partition.h: Likewise.\n\t* include/parallel/queue.h: Likewise.\n\n\t* include/parallel/algo.h: Qualify with std:: binder2nd use.\n\nFrom-SVN: r155825", "tree": {"sha": "a808c86655cd3f428d02e31535c1474dab3c6be9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a808c86655cd3f428d02e31535c1474dab3c6be9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31380bc4c511f38b514cf51b954e3bbd766359c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31380bc4c511f38b514cf51b954e3bbd766359c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31380bc4c511f38b514cf51b954e3bbd766359c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31380bc4c511f38b514cf51b954e3bbd766359c8/comments", "author": null, "committer": null, "parents": [{"sha": "3383f24d53f69f0b2eedfa9d79ff01e283dd4234", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3383f24d53f69f0b2eedfa9d79ff01e283dd4234", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3383f24d53f69f0b2eedfa9d79ff01e283dd4234"}], "stats": {"total": 51, "additions": 31, "deletions": 20}, "files": [{"sha": "6c3a3c59a304cb57b5905ac668b15c7a8b2a7f31", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=31380bc4c511f38b514cf51b954e3bbd766359c8", "patch": "@@ -1,3 +1,14 @@\n+2010-01-11  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/parallel/base.h (decode2): Rename to __decode2.\n+\t(binder2nd): Likewise to __binder2nd.\n+\t* include/parallel/quicksort.h: Adjust callers.\n+\t* include/parallel/balanced_quicksort.h: Likewise.\n+\t* include/parallel/partition.h: Likewise.\n+\t* include/parallel/queue.h: Likewise.\n+\n+\t* include/parallel/algo.h: Qualify with std:: binder2nd use.\n+\n 2010-01-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* include/debug/string (basic_string<>::basic_string(basic_string&&),"}, {"sha": "04953e8132cc49c3a44f6be709881af780e41fb2", "filename": "libstdc++-v3/include/parallel/algo.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Falgo.h?ref=31380bc4c511f38b514cf51b954e3bbd766359c8", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -150,7 +150,7 @@ namespace __parallel\n \n       if (_GLIBCXX_PARALLEL_CONDITION(true))\n         {\n-          binder2nd<__gnu_parallel::_EqualTo<_ValueType, const _Tp&> >\n+\t  std::binder2nd<__gnu_parallel::_EqualTo<_ValueType, const _Tp&> >\n             __comp(__gnu_parallel::_EqualTo<_ValueType, const _Tp&>(), __val);\n           return __gnu_parallel::__find_template(\n                    __begin, __end, __begin, __comp,"}, {"sha": "0a2813654b286317e89c3b44b1975c9653ba3325", "filename": "libstdc++-v3/include/parallel/balanced_quicksort.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbalanced_quicksort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbalanced_quicksort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbalanced_quicksort.h?ref=31380bc4c511f38b514cf51b954e3bbd766359c8", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -135,7 +135,7 @@ namespace __gnu_parallel\n \tstd::swap(*__pivot_pos, *(__end - 1));\n       __pivot_pos = __end - 1;\n \n-      __gnu_parallel::binder2nd<_Compare, _ValueType, _ValueType, bool>\n+      __gnu_parallel::__binder2nd<_Compare, _ValueType, _ValueType, bool>\n \t__pred(__comp, *__pivot_pos);\n \n       // Divide, returning __end - __begin - 1 in the worst case.\n@@ -287,7 +287,7 @@ namespace __gnu_parallel\n         \tstd::swap(*__pivot_pos, *(__end - 1));\n               __pivot_pos = __end - 1;\n \n-              __gnu_parallel::binder2nd\n+              __gnu_parallel::__binder2nd\n \t\t<_Compare, _ValueType, _ValueType, bool>\n \t\t__pred(__comp, *__pivot_pos);\n "}, {"sha": "a219f7c475580e8366be74461801a364ae83eb61", "filename": "libstdc++-v3/include/parallel/base.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fbase.h?ref=31380bc4c511f38b514cf51b954e3bbd766359c8", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -113,7 +113,7 @@ namespace __gnu_parallel\n    *  @param __b Second integer, to be encoded in the least-significant\n    *  @c _CASable_bits/2 bits.\n    *  @return value encoding @c __a and @c __b.\n-   *  @see decode2\n+   *  @see __decode2\n    */\n   inline _CASable\n   __encode2(int __a, int __b)     //must all be non-negative, actually\n@@ -130,7 +130,7 @@ namespace __gnu_parallel\n    *  @see __encode2\n    */\n   inline void\n-  decode2(_CASable __x, int& __a, int& __b)\n+  __decode2(_CASable __x, int& __a, int& __b)\n   {\n     __a = (int)((__x >> (_CASable_bits / 2)) & _CASable_mask);\n     __b = (int)((__x >>               0 ) & _CASable_mask);\n@@ -217,15 +217,15 @@ namespace __gnu_parallel\n    */\n   template<typename _Operation, typename _FirstArgumentType,\n \t   typename _SecondArgumentType, typename _ResultType>\n-    class binder2nd\n+    class __binder2nd\n     : public std::unary_function<_FirstArgumentType, _ResultType>\n     {\n     protected:\n       _Operation _M_op;\n       _SecondArgumentType _M_value;\n \n     public:\n-      binder2nd(const _Operation& __x, const _SecondArgumentType& __y)\n+      __binder2nd(const _Operation& __x, const _SecondArgumentType& __y)\n       : _M_op(__x), _M_value(__y) { }\n \n       _ResultType"}, {"sha": "6a9c4aceaa632833b6cdd94d4b9cfcb83af6f652", "filename": "libstdc++-v3/include/parallel/partition.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fpartition.h?ref=31380bc4c511f38b514cf51b954e3bbd766359c8", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -367,7 +367,7 @@ namespace __gnu_parallel\n           // __gnu_parallel::_Lexicographic<S, int,\n \t  //                                __gnu_parallel::_Less<S, S> >\n           // __pivot_pos == std::pair<S, int>*\n-          __gnu_parallel::binder2nd<_Compare, _ValueType, _ValueType, bool>\n+          __gnu_parallel::__binder2nd<_Compare, _ValueType, _ValueType, bool>\n             __pred(__comp, *__pivot_pos);\n \n           // Divide, leave pivot unchanged in last place."}, {"sha": "03c1c78bb2cdb1b4822411e9341de321e90dcdb4", "filename": "libstdc++-v3/include/parallel/queue.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fqueue.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fqueue.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fqueue.h?ref=31380bc4c511f38b514cf51b954e3bbd766359c8", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -84,7 +84,7 @@ namespace __gnu_parallel\n       {\n         _CASable __former_borders = _M_borders;\n         int __former_front, __former_back;\n-        decode2(__former_borders, __former_front, __former_back);\n+        __decode2(__former_borders, __former_front, __former_back);\n         *(_M_base + __former_front % _M_max_size) = __t;\n #if _GLIBCXX_ASSERTIONS\n         // Otherwise: front - back > _M_max_size eventually.\n@@ -101,7 +101,7 @@ namespace __gnu_parallel\n       {\n         int __former_front, __former_back;\n #pragma omp flush\n-        decode2(_M_borders, __former_front, __former_back);\n+        __decode2(_M_borders, __former_front, __former_back);\n         while (__former_front > __former_back)\n           {\n             // Chance.\n@@ -116,7 +116,7 @@ namespace __gnu_parallel\n                 return true;\n               }\n #pragma omp flush\n-            decode2(_M_borders, __former_front, __former_back);\n+            __decode2(_M_borders, __former_front, __former_back);\n           }\n         return false;\n       }\n@@ -128,7 +128,7 @@ namespace __gnu_parallel\n       {\n         int __former_front, __former_back;\n #pragma omp flush\n-        decode2(_M_borders, __former_front, __former_back);\n+        __decode2(_M_borders, __former_front, __former_back);\n         while (__former_front > __former_back)\n           {\n             // Chance.\n@@ -143,7 +143,7 @@ namespace __gnu_parallel\n                 return true;\n               }\n #pragma omp flush\n-            decode2(_M_borders, __former_front, __former_back);\n+            __decode2(_M_borders, __former_front, __former_back);\n           }\n         return false;\n       }"}, {"sha": "1884eb867fada377915235ce1b883fefedc99eb1", "filename": "libstdc++-v3/include/parallel/quicksort.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fquicksort.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31380bc4c511f38b514cf51b954e3bbd766359c8/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fquicksort.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fparallel%2Fquicksort.h?ref=31380bc4c511f38b514cf51b954e3bbd766359c8", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*-\n \n-// Copyright (C) 2007, 2008, 2009 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the terms\n@@ -77,7 +77,7 @@ namespace __gnu_parallel\n \n       _ValueType& __pivot = __samples[__pivot_rank * __num_samples / __n];\n \n-      __gnu_parallel::binder2nd<_Compare, _ValueType, _ValueType, bool>\n+      __gnu_parallel::__binder2nd<_Compare, _ValueType, _ValueType, bool>\n         __pred(__comp, __pivot);\n       _DifferenceType __split = __parallel_partition(__begin, __end,\n \t\t\t\t\t\t     __pred, __num_threads);"}]}