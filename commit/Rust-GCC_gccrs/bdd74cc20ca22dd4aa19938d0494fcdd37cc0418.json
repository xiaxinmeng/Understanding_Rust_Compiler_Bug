{"sha": "bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRkNzRjYzIwY2EyMmRkNGFhMTk5MzhkMDQ5NGZjZGQzN2NjMDQxOA==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-10-14T00:16:24Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-10-14T00:16:24Z"}, "message": "Daily bump.", "tree": {"sha": "63d46bf8bb9a669385a823c73fa4a623cfbf4150", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63d46bf8bb9a669385a823c73fa4a623cfbf4150"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/comments", "author": null, "committer": null, "parents": [{"sha": "8949b985dbaf07d433bd57d2883e1e5414f20e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8949b985dbaf07d433bd57d2883e1e5414f20e75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8949b985dbaf07d433bd57d2883e1e5414f20e75"}], "stats": {"total": 225, "additions": 224, "deletions": 1}, "files": [{"sha": "2a639e707e1500370eedc5844abd0f0150a95360", "filename": "gcc/ChangeLog", "status": "modified", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "patch": "@@ -1,3 +1,109 @@\n+2020-10-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/97386\n+\t* combine.c (simplify_shift_const_1): Don't optimize nested ROTATEs if\n+\tthey have different modes.\n+\n+2020-10-13  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\tPR tree-optimization/97379\n+\t* gimple-range-edge.cc (outgoing_range::calc_switch_ranges): Do\n+\tnot save hash slot across calls to hash_table<>::get_or_insert.\n+\n+2020-10-13  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* lto-wrapper.c (find_crtoffloadtable): Fix last commit\n+\tby adding NULL as last argument to concat.\n+\n+2020-10-13  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.c (neoversen2_tunings): Define.\n+\t* config/aarch64/aarch64-cores.def (neoverse-n2): Use it.\n+\n+2020-10-13  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* lto-wrapper.c (find_crtoffloadtable): With -save-temps,\n+\tuse non-temp file name utilizing the dump prefix.\n+\t(run_gcc): Update call.\n+\n+2020-10-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97382\n+\t* tree-vectorizer.h (_stmt_vec_info::same_align_refs): Remove.\n+\t(STMT_VINFO_SAME_ALIGN_REFS): Likewise.\n+\t* tree-vectorizer.c (vec_info::new_stmt_vec_info): Do not\n+\tallocate STMT_VINFO_SAME_ALIGN_REFS.\n+\t(vec_info::free_stmt_vec_info): Do not release\n+\tSTMT_VINFO_SAME_ALIGN_REFS.\n+\t* tree-vect-data-refs.c (vect_analyze_data_ref_dependences):\n+\tDo not compute self and read-read dependences.\n+\t(vect_dr_aligned_if_related_peeled_dr_is): New helper.\n+\t(vect_dr_aligned_if_peeled_dr_is): Likewise.\n+\t(vect_update_misalignment_for_peel): Use it instead of\n+\titerating over STMT_VINFO_SAME_ALIGN_REFS.\n+\t(dr_align_group_sort_cmp): New function.\n+\t(vect_enhance_data_refs_alignment): Count the number of\n+\tsame aligned refs here and elide uses of STMT_VINFO_SAME_ALIGN_REFS.\n+\t(vect_find_same_alignment_drs): Remove.\n+\t(vect_analyze_data_refs_alignment): Do not call it.\n+\t* vec.h (auto_vec<T, 0>::auto_vec): Adjust CTOR to take\n+\ta vec<>&&, assert it isn't using auto storage.\n+\t(auto_vec& operator=): Apply a similar change.\n+\n+2020-10-13  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* config/nvptx/mkoffload.c (main): Add missing fclose (in).\n+\n+2020-10-13  Zhiheng Xie  <xiezhiheng@huawei.com>\n+\t    Nannan Zheng  <zhengnannan@huawei.com>\n+\n+\t* config/aarch64/aarch64-simd-builtins.def: Add proper FLAG\n+\tfor mul/mla/mls intrinsics.\n+\n+2020-10-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* omp-low.c (add_taskreg_looptemp_clauses): For triangular loops\n+\twith non-constant number of iterations add another 4 _looptemp_\n+\tclauses before the (optional) one for lastprivate.\n+\t(lower_omp_for_lastprivate): Skip those clauses when looking for\n+\tthe lastprivate clause.\n+\t(lower_omp_for): For triangular loops with non-constant number of\n+\titerations add another 4 _looptemp_ clauses.\n+\t* omp-expand.c (expand_omp_for_init_counts): For triangular loops\n+\twith non-constant number of iterations set counts[0],\n+\tfd->first_inner_iterations, fd->factor and fd->adjn1 from the newly\n+\tadded _looptemp_ clauses.\n+\t(expand_omp_for_init_vars): Initialize the newly added _looptemp_\n+\tclauses.\n+\t(find_lastprivate_looptemp): New function.\n+\t(expand_omp_for_static_nochunk, expand_omp_for_static_chunk,\n+\texpand_omp_taskloop_for_outer): Use it instead of manually skipping\n+\t_looptemp_ clauses.\n+\n+2020-10-13  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR ipa/97389\n+\t* ipa-modref.c (dump_lto_records): Fix formating of dump file.\n+\t(modref_summary::dump): Do not check loads to be non-null.\n+\t(modref_summary_lto::dump): Do not check loads to be non-null.\n+\t(merge_call_side_effects): Improve debug output.\n+\t(analyze_call): Crash when cur_summary->loads is NULL.\n+\t(analyze_function): Update.\n+\t(modref_summaries::insert): Insert only into summaries, not\n+\toptimization_summaries.\n+\t(modref_summaries::duplicate): Likewise; crash when load or sotres\n+\tare NULL.\n+\t(modref_summaries_lto::duplicate): Crash when loads or stores are NULL.\n+\t(write_modref_records): param_index is signed.\n+\t(read_modref_records): param_index is signed.\n+\t(modref_write): Crash when loads or stores are NULL.\n+\t(read_section): Compensate previous change.\n+\t(pass_modref::execute): Do not check optimization_summaries t be\n+\tnon-NULL.\n+\t(ignore_edge): Fix.\n+\t(compute_parm_map): Fix formating.\n+\t(modref_propagate_in_scc): Do not expect loads/stores to be NULL.\n+\n 2020-10-12  Alexandre Oliva  <oliva@adacore.com>\n \n \t* builtins.c (mathfn_built_in_type): Use CFN_ enumerators."}, {"sha": "7516298d9d2a498db9d5687a9c600e5cbf4f2c20", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "patch": "@@ -1 +1 @@\n-20201013\n+20201014"}, {"sha": "a482ef254153ec90365e6267648bfa9abc796582", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "patch": "@@ -1,3 +1,29 @@\n+2020-10-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/97386\n+\t* gcc.c-torture/execute/pr97386-1.c: New test.\n+\t* gcc.c-torture/execute/pr97386-2.c: New test.\n+\n+2020-10-13  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/arm/stack-protector-5.c: Use -Os rather than -O2.\n+\t* gcc.target/arm/stack-protector-6.c: Likewise.\n+\n+2020-10-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/97382\n+\t* gcc.dg/vect/no-vfa-vect-dv-2.c: Remove same align dump\n+\tscanning.\n+\t* gcc.dg/vect/vect-103.c: Likewise.\n+\t* gcc.dg/vect/vect-91.c: Likewise.\n+\t* gfortran.dg/vect/vect-4.f90: Likewise.\n+\n+2020-10-13  Martin Liska  <mliska@suse.cz>\n+\n+\tPR middle-end/97392\n+\t* g++.dg/asan/asan_test.C: Disable -Wstringop-overflow.\n+\t* gcc.dg/asan/pr80166.c: Likewise.\n+\n 2020-10-12  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/97258"}, {"sha": "b363103d1fe9208c056d990a231ae33313376d75", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "patch": "@@ -1,3 +1,27 @@\n+2020-10-13  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* env.c (gomp_max_active_levels_var): Initialize to\n+\tgomp_supported_active_levels.\n+\t(initialize_env): Limit gomp_max_active_levels_var to be at most\n+\tequal to gomp_supported_active_levels.\n+\t* fortran.c (omp_get_supported_active_levels): Add ialias_redirect.\n+\t(omp_get_supported_active_levels_): New.\n+\t* icv.c (omp_set_max_active_levels): Limit gomp_max_active_levels_var\n+\tto at most equal to gomp_supported_active_levels.\n+\t(omp_get_supported_active_levels): New.\n+\t* libgomp.h (gomp_supported_active_levels): New.\n+\t* libgomp.map (OMP_5.0.1): Add omp_get_supported_active_levels and\n+\tomp_get_supported_active_levels_.\n+\t* libgomp.texi (omp_get_supported_active_levels): New.\n+\t(omp_set_max_active_levels): Update.  Add reference to\n+\tomp_get_supported_active_levels.\n+\t* omp.h.in (omp_get_supported_active_levels): New.\n+\t* omp_lib.f90.in (omp_get_supported_active_levels): New.\n+\t* omp_lib.h.in (omp_get_supported_active_levels): New.\n+\t* testsuite/libgomp.c/lib-2.c (main): Check omp_get_max_active_levels\n+\tagainst omp_get_supported_active_levels.\n+\t* testsuite/libgomp.fortran/lib4.f90 (lib4): Likewise.\n+\n 2020-10-11  Clement Chigot  <clement.chigot@atos.net>\n \n \t* config/t-aix: Delete and recreate libgomp before creating"}, {"sha": "2f084e09f5e31c8f758823458b32bd350a6eca28", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdd74cc20ca22dd4aa19938d0494fcdd37cc0418/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bdd74cc20ca22dd4aa19938d0494fcdd37cc0418", "patch": "@@ -1,3 +1,70 @@\n+2020-10-13  Nuno Lopes  <nuno.lopes@ist.utl.pt>\n+\n+\t* include/bits/stl_algo.h (any_of): Fix incorrect description\n+\tin comment.\n+\n+2020-10-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/evolution.xml: Document some API changes\n+\tand deprecations.\n+\t* doc/xml/manual/intro.xml: Document LWG 2499.\n+\t* doc/xml/manual/status_cxx2020.xml: Update status.\n+\t* doc/html/*: Regenerate.\n+\n+2020-10-13  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/book.txml: Remove trailing whitespace.\n+\t* doc/xml/chapter.txml: Likewise.\n+\t* doc/xml/class.txml: Likewise.\n+\t* doc/xml/gnu/fdl-1.3.xml: Likewise.\n+\t* doc/xml/gnu/gpl-3.0.xml: Likewise.\n+\t* doc/xml/manual/abi.xml: Likewise.\n+\t* doc/xml/manual/algorithms.xml: Likewise.\n+\t* doc/xml/manual/allocator.xml: Likewise.\n+\t* doc/xml/manual/appendix_contributing.xml: Likewise.\n+\t* doc/xml/manual/appendix_free.xml: Likewise.\n+\t* doc/xml/manual/appendix_porting.xml: Likewise.\n+\t* doc/xml/manual/atomics.xml: Likewise.\n+\t* doc/xml/manual/auto_ptr.xml: Likewise.\n+\t* doc/xml/manual/backwards_compatibility.xml: Likewise.\n+\t* doc/xml/manual/bitmap_allocator.xml: Likewise.\n+\t* doc/xml/manual/build_hacking.xml: Likewise.\n+\t* doc/xml/manual/codecvt.xml: Likewise.\n+\t* doc/xml/manual/concurrency.xml: Likewise.\n+\t* doc/xml/manual/concurrency_extensions.xml: Likewise.\n+\t* doc/xml/manual/configure.xml: Likewise.\n+\t* doc/xml/manual/containers.xml: Likewise.\n+\t* doc/xml/manual/ctype.xml: Likewise.\n+\t* doc/xml/manual/debug.xml: Likewise.\n+\t* doc/xml/manual/debug_mode.xml: Likewise.\n+\t* doc/xml/manual/diagnostics.xml: Likewise.\n+\t* doc/xml/manual/documentation_hacking.xml: Likewise.\n+\t* doc/xml/manual/evolution.xml: Likewise.\n+\t* doc/xml/manual/internals.xml: Likewise.\n+\t* doc/xml/manual/intro.xml: Likewise.\n+\t* doc/xml/manual/io.xml: Likewise.\n+\t* doc/xml/manual/iterators.xml: Likewise.\n+\t* doc/xml/manual/locale.xml: Likewise.\n+\t* doc/xml/manual/localization.xml: Likewise.\n+\t* doc/xml/manual/messages.xml: Likewise.\n+\t* doc/xml/manual/mt_allocator.xml: Likewise.\n+\t* doc/xml/manual/numerics.xml: Likewise.\n+\t* doc/xml/manual/parallel_mode.xml: Likewise.\n+\t* doc/xml/manual/policy_data_structures.xml: Likewise.\n+\t* doc/xml/manual/prerequisites.xml: Likewise.\n+\t* doc/xml/manual/shared_ptr.xml: Likewise.\n+\t* doc/xml/manual/spine.xml: Likewise.\n+\t* doc/xml/manual/status_cxxtr1.xml: Likewise.\n+\t* doc/xml/manual/status_cxxtr24733.xml: Likewise.\n+\t* doc/xml/manual/strings.xml: Likewise.\n+\t* doc/xml/manual/support.xml: Likewise.\n+\t* doc/xml/manual/test.xml: Likewise.\n+\t* doc/xml/manual/test_policy_data_structures.xml: Likewise.\n+\t* doc/xml/manual/using.xml: Likewise.\n+\t* doc/xml/manual/using_exceptions.xml: Likewise.\n+\t* doc/xml/manual/utilities.xml: Likewise.\n+\t* doc/html/*: Regenerate.\n+\n 2020-10-12  Patrick Palka  <ppalka@redhat.com>\n \n \t* include/std/ranges (take_while_view::begin): Constrain the"}]}