{"sha": "e19eea7164c3c6b613628e5ca90c8742a34c2d68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTE5ZWVhNzE2NGMzYzZiNjEzNjI4ZTVjYTkwYzg3NDJhMzRjMmQ2OA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2013-11-15T21:16:32Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2013-11-15T21:16:32Z"}, "message": "altivec.md (UNSPEC_VPERM_X, [...]): Remove.\n\ngcc:\n\n2013-11-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* config/rs6000/altivec.md (UNSPEC_VPERM_X, UNSPEC_VPERM_UNS_X):\n\tRemove.\n\t(altivec_vperm_<mode>): Revert earlier little endian change.\n\t(*altivec_vperm_<mode>_internal): Remove.\n\t(altivec_vperm_<mode>_uns): Revert earlier little endian change.\n\t(*altivec_vperm_<mode>_uns_internal): Remove.\n\t* config/rs6000/vector.md (vec_realign_load_<mode>): Revise\n\tcommentary.\n\ngcc/testsuite:\n\n2013-11-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\n\t* gcc.dg/vmx/3b-15.c: Revise for little endian.\n\nFrom-SVN: r204862", "tree": {"sha": "66a2e522c933d7712374a312e18d96330c2edec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/66a2e522c933d7712374a312e18d96330c2edec2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e19eea7164c3c6b613628e5ca90c8742a34c2d68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19eea7164c3c6b613628e5ca90c8742a34c2d68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19eea7164c3c6b613628e5ca90c8742a34c2d68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19eea7164c3c6b613628e5ca90c8742a34c2d68/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6efe83b22e076ba8a2601ce0c31b8d4130d72704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6efe83b22e076ba8a2601ce0c31b8d4130d72704", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6efe83b22e076ba8a2601ce0c31b8d4130d72704"}], "stats": {"total": 104, "additions": 28, "deletions": 76}, "files": [{"sha": "6a3e7cc78f04f2f97513190b6fdb0ad770ccb3bf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e19eea7164c3c6b613628e5ca90c8742a34c2d68", "patch": "@@ -1,3 +1,14 @@\n+2013-11-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* config/rs6000/altivec.md (UNSPEC_VPERM_X, UNSPEC_VPERM_UNS_X):\n+\tRemove.\n+\t(altivec_vperm_<mode>): Revert earlier little endian change.\n+\t(*altivec_vperm_<mode>_internal): Remove.\n+\t(altivec_vperm_<mode>_uns): Revert earlier little endian change.\n+\t(*altivec_vperm_<mode>_uns_internal): Remove.\n+\t* config/rs6000/vector.md (vec_realign_load_<mode>): Revise\n+\tcommentary.\n+\n 2013-11-15  Jeff Law  <law@redhat.com>\n \n \t* basic-block.h (has_abnormal_or_eh_outgoing_edge): Renamed from"}, {"sha": "23a425e30cbd33188af0206971d97b91d58ae1f2", "filename": "gcc/config/rs6000/altivec.md", "status": "modified", "additions": 2, "deletions": 74, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2Fconfig%2Frs6000%2Faltivec.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2Fconfig%2Frs6000%2Faltivec.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.md?ref=e19eea7164c3c6b613628e5ca90c8742a34c2d68", "patch": "@@ -59,8 +59,6 @@\n    UNSPEC_VSUMSWS\n    UNSPEC_VPERM\n    UNSPEC_VPERM_UNS\n-   UNSPEC_VPERM_X\n-   UNSPEC_VPERM_UNS_X\n    UNSPEC_VRFIN\n    UNSPEC_VCFUX\n    UNSPEC_VCFSX\n@@ -1393,91 +1391,21 @@\n   \"vrfiz %0,%1\"\n   [(set_attr \"type\" \"vecfloat\")])\n \n-(define_insn_and_split \"altivec_vperm_<mode>\"\n+(define_insn \"altivec_vperm_<mode>\"\n   [(set (match_operand:VM 0 \"register_operand\" \"=v\")\n \t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"v\")\n \t\t    (match_operand:VM 2 \"register_operand\" \"v\")\n \t\t    (match_operand:V16QI 3 \"register_operand\" \"v\")]\n-\t\t   UNSPEC_VPERM_X))]\n-  \"TARGET_ALTIVEC\"\n-  \"#\"\n-  \"!reload_in_progress && !reload_completed\"\n-  [(set (match_dup 0) (match_dup 4))]\n-{\n-  if (BYTES_BIG_ENDIAN)\n-    operands[4] = gen_rtx_UNSPEC (<MODE>mode,\n-                                  gen_rtvec (3, operands[1],\n- \t\t                             operands[2], operands[3]),\n-                                  UNSPEC_VPERM);\n-  else\n-    {\n-      /* We want to subtract from 31, but we can't vspltisb 31 since\n-         it's out of range.  -1 works as well because only the low-order\n-         five bits of the permute control vector elements are used.  */\n-      rtx splat = gen_rtx_VEC_DUPLICATE (V16QImode,\n-                                         gen_rtx_CONST_INT (QImode, -1));\n-      rtx tmp = gen_reg_rtx (V16QImode);\n-      emit_move_insn (tmp, splat);\n-      rtx sel = gen_rtx_MINUS (V16QImode, tmp, operands[3]);\n-      emit_move_insn (tmp, sel);\n-      operands[4] = gen_rtx_UNSPEC (<MODE>mode,\n-                                    gen_rtvec (3, operands[2],\n-\t\t \t\t               operands[1], tmp),\n-\t\t                    UNSPEC_VPERM);\n-    }\n-}\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"*altivec_vperm_<mode>_internal\"\n-  [(set (match_operand:VM 0 \"register_operand\" \"=v\")\n-\t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"v\")\n-\t\t    (match_operand:VM 2 \"register_operand\" \"v\")\n-\t\t    (match_operand:V16QI 3 \"register_operand\" \"+v\")]\n \t\t   UNSPEC_VPERM))]\n   \"TARGET_ALTIVEC\"\n   \"vperm %0,%1,%2,%3\"\n   [(set_attr \"type\" \"vecperm\")])\n \n-(define_insn_and_split \"altivec_vperm_<mode>_uns\"\n+(define_insn \"altivec_vperm_<mode>_uns\"\n   [(set (match_operand:VM 0 \"register_operand\" \"=v\")\n \t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"v\")\n \t\t    (match_operand:VM 2 \"register_operand\" \"v\")\n \t\t    (match_operand:V16QI 3 \"register_operand\" \"v\")]\n-\t\t   UNSPEC_VPERM_UNS_X))]\n-  \"TARGET_ALTIVEC\"\n-  \"#\"\n-  \"!reload_in_progress && !reload_completed\"\n-  [(set (match_dup 0) (match_dup 4))]\n-{\n-  if (BYTES_BIG_ENDIAN)\n-    operands[4] = gen_rtx_UNSPEC (<MODE>mode,\n-                                  gen_rtvec (3, operands[1],\n-\t\t\t\t             operands[2], operands[3]),\n-                                  UNSPEC_VPERM_UNS);\n-  else\n-    {\n-      /* We want to subtract from 31, but we can't vspltisb 31 since\n-         it's out of range.  -1 works as well because only the low-order\n-         five bits of the permute control vector elements are used.  */\n-      rtx splat = gen_rtx_VEC_DUPLICATE (V16QImode,\n-                                         gen_rtx_CONST_INT (QImode, -1));\n-      rtx tmp = gen_reg_rtx (V16QImode);\n-      emit_move_insn (tmp, splat);\n-      rtx sel = gen_rtx_MINUS (V16QImode, tmp, operands[3]);\n-      emit_move_insn (tmp, sel);\n-      operands[4] = gen_rtx_UNSPEC (<MODE>mode,\n-                                    gen_rtvec (3, operands[2],\n-\t\t\t\t               operands[1], tmp),\n-\t\t                    UNSPEC_VPERM_UNS);\n-    }\n-}\n-  [(set_attr \"type\" \"vecperm\")])\n-\n-(define_insn \"*altivec_vperm_<mode>_uns_internal\"\n-  [(set (match_operand:VM 0 \"register_operand\" \"=v\")\n-\t(unspec:VM [(match_operand:VM 1 \"register_operand\" \"v\")\n-\t\t    (match_operand:VM 2 \"register_operand\" \"v\")\n-\t\t    (match_operand:V16QI 3 \"register_operand\" \"+v\")]\n \t\t   UNSPEC_VPERM_UNS))]\n   \"TARGET_ALTIVEC\"\n   \"vperm %0,%1,%2,%3\""}, {"sha": "10a401813d19b3fba27dcf638bffb8cdf2a2aefd", "filename": "gcc/config/rs6000/vector.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2Fconfig%2Frs6000%2Fvector.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2Fconfig%2Frs6000%2Fvector.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvector.md?ref=e19eea7164c3c6b613628e5ca90c8742a34c2d68", "patch": "@@ -966,8 +966,8 @@\n     \t      \t\t\t\t operands[2], operands[3]));\n   else\n     {\n-      /* Avoid the \"subtract from splat31\" workaround for vperm since\n-         we have changed lvsr to lvsl instead.  */\n+      /* We have changed lvsr to lvsl, so to complete the transformation\n+         of vperm for LE, we must swap the inputs.  */\n       rtx unspec = gen_rtx_UNSPEC (<MODE>mode,\n                                    gen_rtvec (3, operands[2],\n                                               operands[1], operands[3]),"}, {"sha": "21334a4d294ff79d46d399d81a45329de078c66d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e19eea7164c3c6b613628e5ca90c8742a34c2d68", "patch": "@@ -1,3 +1,7 @@\n+2013-11-15  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\n+\t* gcc.dg/vmx/3b-15.c: Revise for little endian.\n+\n 2013-11-15  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/50262"}, {"sha": "356e248b7614d95e3af9c5d00a965940028736d0", "filename": "gcc/testsuite/gcc.dg/vmx/3b-15.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F3b-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e19eea7164c3c6b613628e5ca90c8742a34c2d68/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F3b-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvmx%2F3b-15.c?ref=e19eea7164c3c6b613628e5ca90c8742a34c2d68", "patch": "@@ -3,7 +3,11 @@\n vector unsigned char\n f (vector unsigned char a, vector unsigned char b, vector unsigned char c)\n {\n+#ifdef __BIG_ENDIAN__\n   return vec_perm(a,b,c); \n+#else\n+  return vec_perm(b,a,c);\n+#endif\n }\n \n static void test()\n@@ -12,8 +16,13 @@ static void test()\n \t\t\t\t\t    8,9,10,11,12,13,14,15}),\n \t\t     ((vector unsigned char){70,71,72,73,74,75,76,77,\n \t\t\t\t\t    78,79,80,81,82,83,84,85}),\n+#ifdef __BIG_ENDIAN__\n \t\t     ((vector unsigned char){0x1,0x14,0x18,0x10,0x16,0x15,0x19,0x1a,\n \t\t\t\t\t    0x1c,0x1c,0x1c,0x12,0x8,0x1d,0x1b,0xe})),\n+#else\n+                     ((vector unsigned char){0x1e,0xb,0x7,0xf,0x9,0xa,0x6,0x5,\n+                                            0x3,0x3,0x3,0xd,0x17,0x2,0x4,0x11})),\n+#endif\n \t\t   ((vector unsigned char){1,74,78,70,76,75,79,80,82,82,82,72,8,83,81,14})),\n \t\"f\");\n }"}]}