{"sha": "ba7d31f68a4afe75450273f8e941259b1c676982", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE3ZDMxZjY4YTRhZmU3NTQ1MDI3M2Y4ZTk0MTI1OWIxYzY3Njk4Mg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-12T06:48:57Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-12T06:48:57Z"}, "message": "re PR c++/47125 (ICE occurs in combination with partial specialization and invalid template function.)\n\n\tPR c++/47125\n\t* pt.c (tsubst) [TYPENAME_TYPE]: Only give errors if tf_error.\n\nFrom-SVN: r170896", "tree": {"sha": "3bf566e1c078c4a15e9b4854b1893db27624da3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3bf566e1c078c4a15e9b4854b1893db27624da3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba7d31f68a4afe75450273f8e941259b1c676982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7d31f68a4afe75450273f8e941259b1c676982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba7d31f68a4afe75450273f8e941259b1c676982", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba7d31f68a4afe75450273f8e941259b1c676982/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e71a20690913cec7c3c5c3e9d8c25a61086a0a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e71a20690913cec7c3c5c3e9d8c25a61086a0a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e71a20690913cec7c3c5c3e9d8c25a61086a0a5"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "7c1e739ad70ce5a3bb844ec24025d9ac8ba646ae", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7d31f68a4afe75450273f8e941259b1c676982/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7d31f68a4afe75450273f8e941259b1c676982/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ba7d31f68a4afe75450273f8e941259b1c676982", "patch": "@@ -1,5 +1,8 @@\n 2011-03-11  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/47125\n+\t* pt.c (tsubst) [TYPENAME_TYPE]: Only give errors if tf_error.\n+\n \tPR c++/47144\n \t* parser.c (cp_parser_template_type_arg): Set\n \ttype_definition_forbidden_message."}, {"sha": "95b82ee579dd2916b59ee1eb4b3f03f3c8d6e8ee", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7d31f68a4afe75450273f8e941259b1c676982/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7d31f68a4afe75450273f8e941259b1c676982/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=ba7d31f68a4afe75450273f8e941259b1c676982", "patch": "@@ -10948,11 +10948,21 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \tif (TREE_CODE (f) != TYPENAME_TYPE)\n \t  {\n \t    if (TYPENAME_IS_ENUM_P (t) && TREE_CODE (f) != ENUMERAL_TYPE)\n-\t      error (\"%qT resolves to %qT, which is not an enumeration type\",\n-\t\t     t, f);\n+\t      {\n+\t\tif (complain & tf_error)\n+\t\t  error (\"%qT resolves to %qT, which is not an enumeration type\",\n+\t\t\t t, f);\n+\t\telse\n+\t\t  return error_mark_node;\n+\t      }\n \t    else if (TYPENAME_IS_CLASS_P (t) && !CLASS_TYPE_P (f))\n-\t      error (\"%qT resolves to %qT, which is is not a class type\",\n-\t\t     t, f);\n+\t      {\n+\t\tif (complain & tf_error)\n+\t\t  error (\"%qT resolves to %qT, which is is not a class type\",\n+\t\t\t t, f);\n+\t\telse\n+\t\t  return error_mark_node;\n+\t      }\n \t  }\n \n \treturn cp_build_qualified_type_real"}, {"sha": "9652b4aae30b78920f424bcd5cb4774ef5365133", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7d31f68a4afe75450273f8e941259b1c676982/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7d31f68a4afe75450273f8e941259b1c676982/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ba7d31f68a4afe75450273f8e941259b1c676982", "patch": "@@ -1,5 +1,7 @@\n 2011-03-11  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/template/error45.C: New.\n+\n \t* g++.dg/parse/no-type-defn1.C: New.\n \n \t* g++.dg/ext/attrib40.C: New."}, {"sha": "454acc63149caf9b5be0c9b0199a72331f0e1dfb", "filename": "gcc/testsuite/g++.dg/template/error45.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba7d31f68a4afe75450273f8e941259b1c676982/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror45.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba7d31f68a4afe75450273f8e941259b1c676982/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror45.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror45.C?ref=ba7d31f68a4afe75450273f8e941259b1c676982", "patch": "@@ -0,0 +1,22 @@\n+// PR c++/47125\n+\n+template < bool, typename >\n+struct enable_if {};\n+\n+template < typename T >\n+struct enable_if< true, T >\n+{\n+    typedef T type;\n+};\n+\n+template < typename T >\n+struct enable_if< true, T >::type\n+f( T x );\n+\n+void\n+g( void )\n+{\n+  f< int >( 0 );\t\t// { dg-error \"no match\" }\n+}\n+\n+// { dg-prune-output \"note\" }"}]}