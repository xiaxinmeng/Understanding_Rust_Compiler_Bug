{"sha": "36cf4bcf8646fb1413e6ed61f9f76b23274df643", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzZjZjRiY2Y4NjQ2ZmIxNDEzZTZlZDYxZjlmNzZiMjMyNzRkZjY0Mw==", "commit": {"author": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1997-01-31T21:09:33Z"}, "committer": {"name": "Stan Cox", "email": "coxs@gnu.org", "date": "1997-01-31T21:09:33Z"}, "message": "(idiv,imul,fpmul): Added new functional units for pentiumpro.\n\nFrom-SVN: r13570", "tree": {"sha": "1816e49ca278988cddc15ccc2ad3ea1cac640c74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1816e49ca278988cddc15ccc2ad3ea1cac640c74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/36cf4bcf8646fb1413e6ed61f9f76b23274df643", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36cf4bcf8646fb1413e6ed61f9f76b23274df643", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36cf4bcf8646fb1413e6ed61f9f76b23274df643", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36cf4bcf8646fb1413e6ed61f9f76b23274df643/comments", "author": null, "committer": null, "parents": [{"sha": "b454fefef9814496d449663b2877e5c56efce257", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b454fefef9814496d449663b2877e5c56efce257", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b454fefef9814496d449663b2877e5c56efce257"}], "stats": {"total": 105, "additions": 74, "deletions": 31}, "files": [{"sha": "244d43a6a0b4f7908ada9ccb79913893820ccdba", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 74, "deletions": 31, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/36cf4bcf8646fb1413e6ed61f9f76b23274df643/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/36cf4bcf8646fb1413e6ed61f9f76b23274df643/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=36cf4bcf8646fb1413e6ed61f9f76b23274df643", "patch": "@@ -64,21 +64,50 @@\n ;; This shadows the processor_type enumeration, so changes must be made\n ;; to i386.h at the same time.\n \n-(define_attr \"type\" \"integer,fld,fpop,fpdiv\"\n+(define_attr \"type\" \"integer,idiv,imul,fld,fpop,fpdiv,fpmul\"\n   (const_string \"integer\"))\n \n ;; Functional units\n \n+; (define_function_unit NAME MULTIPLICITY SIMULTANEITY\n+;                       TEST READY-DELAY ISSUE-DELAY [CONFLICT-LIST])\n+\n+; pentiumpro has a reservation station with 5 ports\n+; port  0 has integer, float add, integer divide, float divide, float \n+;        multiply, and shifter units.\n+; port  1 has integer, and jump units.\n+; port  2 has the load address generation unit\n+; ports 3 and 4 have the store address generation units\n+\n+; pentium has two integer pipelines, the main u pipe and the secondary v pipe.\n+; and a float pipeline\n+\n ;; Floating point\n \n (define_function_unit \"fp\" 1 0\n- (and (eq_attr \"type\" \"fpop\") (eq_attr \"cpu\" \"!pentium\"))\n+ (and (eq_attr \"type\" \"fpop\") (eq_attr \"cpu\" \"i386,i486\"))\n  5 5)\n \n (define_function_unit \"fp\" 1 0\n- (and (eq_attr \"type\" \"fpop\") (eq_attr \"cpu\" \"pentium\")) \n+ (and (eq_attr \"type\" \"fpop\") (eq_attr \"cpu\" \"pentium,pentiumpro\")) \n  3 0)\n \n+(define_function_unit \"fp\" 1 0\n+ (and (eq_attr \"type\" \"fpmul\") (eq_attr \"cpu\" \"pentium\")) \n+ 7 0)\n+\n+(define_function_unit \"fp\" 1 0\n+ (and (eq_attr \"type\" \"fpmul\") (eq_attr \"cpu\" \"pentiumpro\")) \n+ 5 0)\n+\n+(define_function_unit \"fp\" 1 0\n+ (and (eq_attr \"type\" \"idiv\") (eq_attr \"cpu\" \"pentiumpro\")) \n+ 10 10)\n+\n+(define_function_unit \"fp\" 1 0\n+ (and (eq_attr \"type\" \"imul\") (eq_attr \"cpu\" \"pentiumpro\")) \n+ 6 0)\n+\n (define_function_unit \"fp\" 1 0\n  (eq_attr \"type\" \"fpdiv\") \n  10 10)\n@@ -1499,7 +1528,7 @@\n \n   return output_move_double (operands);\n }\"\n-[(set_attr \"type\" \"fld\")])\n+  [(set_attr \"type\" \"fld\")])\n \n \n \n@@ -3374,7 +3403,8 @@\n     /* Assembler has weird restrictions.  */\n     return AS2 (imul%W0,%2,%0);\n   return AS3 (imul%W0,%2,%1,%0);\n-}\")\n+}\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_insn \"mulsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n@@ -3389,35 +3419,40 @@\n     /* Assembler has weird restrictions.  */\n     return AS2 (imul%L0,%2,%0);\n   return AS3 (imul%L0,%2,%1,%0);\n-}\")\n+}\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_insn \"umulqihi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(mult:HI (zero_extend:HI (match_operand:QI 1 \"register_operand\" \"%0\"))\n \t\t (zero_extend:HI (match_operand:QI 2 \"nonimmediate_operand\" \"qm\"))))]\n   \"\"\n-  \"mul%B0 %2\")\n+  \"mul%B0 %2\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_insn \"mulqihi3\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(mult:HI (sign_extend:HI (match_operand:QI 1 \"register_operand\" \"%0\"))\n \t\t (sign_extend:HI (match_operand:QI 2 \"nonimmediate_operand\" \"qm\"))))]\n   \"\"\n-  \"imul%B0 %2\")\n+  \"imul%B0 %2\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_insn \"umulsidi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=A\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"%0\"))\n \t\t (zero_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"rm\"))))]\n   \"TARGET_WIDE_MULTIPLY\"\n-  \"mul%L0 %2\")\n+  \"mul%L0 %2\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_insn \"mulsidi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=A\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\" \"%0\"))\n \t\t (sign_extend:DI (match_operand:SI 2 \"nonimmediate_operand\" \"rm\"))))]\n   \"TARGET_WIDE_MULTIPLY\"\n-  \"imul%L0 %2\")\n+  \"imul%L0 %2\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_insn \"umulsi3_highpart\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -3426,7 +3461,8 @@\n \t\t\t\t  (const_int 32))))\n    (clobber (match_scratch:SI 3 \"=a\"))]\n   \"TARGET_WIDE_MULTIPLY\"\n-  \"mul%L0 %2\")\n+  \"mul%L0 %2\"\n+  [(set_attr \"type\" \"imul\")])\n \n (define_insn \"smulsi3_highpart\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n@@ -3435,7 +3471,8 @@\n \t\t\t\t  (const_int 32))))\n    (clobber (match_scratch:SI 3 \"=a\"))]\n   \"TARGET_WIDE_MULTIPLY\"\n-  \"imul%L0 %2\")\n+  \"imul%L0 %2\"\n+  [(set_attr \"type\" \"imul\")])\n \n ;; The patterns that match these are at the end of this file.\n \n@@ -3474,7 +3511,8 @@\n \t(udiv:QI (match_operand:HI 1 \"register_operand\" \"0\")\n \t\t (match_operand:QI 2 \"nonimmediate_operand\" \"qm\")))]\n   \"\"\n-  \"div%B0 %2\")\n+  \"div%B0 %2\"\n+  [(set_attr \"type\" \"idiv\")])\n \n ;; The patterns that match these are at the end of this file.\n \n@@ -3516,7 +3554,8 @@\n   output_asm_insn (\\\"cltd\\\", operands);\n #endif\n   return AS1 (idiv%L0,%2);\n-}\")\n+}\"\n+  [(set_attr \"type\" \"idiv\")])\n \n (define_insn \"divmodhi4\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n@@ -3525,7 +3564,8 @@\n    (set (match_operand:HI 3 \"register_operand\" \"=&d\")\n \t(mod:HI (match_dup 1) (match_dup 2)))]\n   \"\"\n-  \"cwtd\\;idiv%W0 %2\")\n+  \"cwtd\\;idiv%W0 %2\"\n+  [(set_attr \"type\" \"idiv\")])\n \n ;; ??? Can we make gcc zero extend operand[0]?\n (define_insn \"udivmodsi4\"\n@@ -3539,7 +3579,8 @@\n {\n   output_asm_insn (AS2 (xor%L3,%3,%3), operands);\n   return AS1 (div%L0,%2);\n-}\")\n+}\"\n+  [(set_attr \"type\" \"idiv\")])\n \n ;; ??? Can we make gcc zero extend operand[0]?\n (define_insn \"udivmodhi4\"\n@@ -3553,7 +3594,8 @@\n {\n   output_asm_insn (AS2 (xor%W0,%3,%3), operands);\n   return AS1 (div%W0,%2);\n-}\")\n+}\"\n+  [(set_attr \"type\" \"idiv\")])\n \n /*\n ;;this should be a valid double division which we may want to add\n@@ -3565,7 +3607,8 @@\n    (set (match_operand:SI 3 \"register_operand\" \"=d\")\n \t(umod:SI (match_dup 1) (match_dup 2)))]\n   \"\"\n-  \"div%L0 %2,%0\")\n+  \"div%L0 %2,%0\"\n+  [(set_attr \"type\" \"idiv\")])\n */\n \f\n ;;- and instructions\n@@ -6870,7 +6913,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -6887,7 +6930,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -6904,7 +6947,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -6921,7 +6964,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -6938,7 +6981,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -6955,7 +6998,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -6973,7 +7016,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -6990,7 +7033,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -7007,7 +7050,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -7025,7 +7068,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -7042,7 +7085,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -7059,7 +7102,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]\n@@ -7076,7 +7119,7 @@ byte_xor_operation:\n   \"* return output_387_binary_op (insn, operands);\"\n   [(set (attr \"type\") \n         (cond [(match_operand:DF 3 \"is_mul\" \"\") \n-                 (const_string \"fpop\")\n+                 (const_string \"fpmul\")\n                (match_operand:DF 3 \"is_div\" \"\") \n                  (const_string \"fpdiv\")\n               ]"}]}