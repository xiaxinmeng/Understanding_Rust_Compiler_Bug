{"sha": "5c0bf7476e6547500e2492ef67be94589078cb67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWMwYmY3NDc2ZTY1NDc1MDBlMjQ5MmVmNjdiZTk0NTg5MDc4Y2I2Nw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-08-12T03:12:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-08-12T03:12:40Z"}, "message": "(expand_abs): When OP0 and TARGET are the same pseudo register, it is\nsafe to use TARGET.\n\nFrom-SVN: r12619", "tree": {"sha": "085f67761cefcad68c3c4420adbadf029836fbca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/085f67761cefcad68c3c4420adbadf029836fbca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c0bf7476e6547500e2492ef67be94589078cb67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0bf7476e6547500e2492ef67be94589078cb67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c0bf7476e6547500e2492ef67be94589078cb67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c0bf7476e6547500e2492ef67be94589078cb67/comments", "author": null, "committer": null, "parents": [{"sha": "68342d36e0e10ace40fc1927ca2645e4b2b137fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68342d36e0e10ace40fc1927ca2645e4b2b137fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68342d36e0e10ace40fc1927ca2645e4b2b137fc"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "8f4a640d996ce4a3863d005371e9ac2865c127db", "filename": "gcc/optabs.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c0bf7476e6547500e2492ef67be94589078cb67/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c0bf7476e6547500e2492ef67be94589078cb67/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=5c0bf7476e6547500e2492ef67be94589078cb67", "patch": "@@ -2118,6 +2118,13 @@ expand_abs (mode, op0, target, unsignedp, safe)\n     }\n \n   /* If that does not win, use conditional jump and negate.  */\n+\n+  /* It is safe to use the target if it is the same\n+     as the source if this is also a pseudo register */\n+  if (op0 == target && GET_CODE (op0) == REG\n+      && REGNO (op0) >= FIRST_PSEUDO_REGISTER)\n+    safe = 1;\n+\n   op1 = gen_label_rtx ();\n   if (target == 0 || ! safe\n       || GET_MODE (target) != mode"}]}