{"sha": "a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTJhN2VhNDgzNGEyMjlkYTU3MjQyYzhiYzBlMTRhM2ZhOWZhNWE1OA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-16T01:21:42Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-01-16T01:21:42Z"}, "message": "runtime: rename siginfo to _siginfo_t\n    \n    Since the name siginfo winds up in runtime.inc, this avoids a name\n    collision on systems that define \"struct siginfo\" in the system header\n    files.\n    \n    Reviewed-on: https://go-review.googlesource.com/35239\n\nFrom-SVN: r244484", "tree": {"sha": "3ba4895137efbc8704a1663193b17465fcc62655", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ba4895137efbc8704a1663193b17465fcc62655"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/comments", "author": null, "committer": null, "parents": [{"sha": "58a3a26bbdc5f5158b004c761fb054168cd044df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/58a3a26bbdc5f5158b004c761fb054168cd044df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/58a3a26bbdc5f5158b004c761fb054168cd044df"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "375ce176764a6360bea28129f222f314a4abfbc8", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "patch": "@@ -1,4 +1,4 @@\n-a28b04adaeff8de61c336374db66b24ed96c30f0\n+223cba75b947afc1ee5a13a60c15c66f6ff355c1\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "570a076684497c858938c06f56ba40a65cea19c5", "filename": "libgo/go/runtime/signal_gccgo.go", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/libgo%2Fgo%2Fruntime%2Fsignal_gccgo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/libgo%2Fgo%2Fruntime%2Fsignal_gccgo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fsignal_gccgo.go?ref=a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "patch": "@@ -46,15 +46,13 @@ func kill(pid _pid_t, sig uint32) int32\n //extern setitimer\n func setitimer(which int32, new *_itimerval, old *_itimerval) int32\n \n-type siginfo _siginfo_t\n-\n type sigTabT struct {\n \tflags int32\n \tname  string\n }\n \n type sigctxt struct {\n-\tinfo *siginfo\n+\tinfo *_siginfo_t\n \tctxt unsafe.Pointer\n }\n \n@@ -128,9 +126,9 @@ func raiseproc(sig uint32) {\n \n //go:nosplit\n //go:nowritebarrierrec\n-func sigfwd(fn uintptr, sig uint32, info *siginfo, ctx unsafe.Pointer) {\n+func sigfwd(fn uintptr, sig uint32, info *_siginfo_t, ctx unsafe.Pointer) {\n \tf1 := &[1]uintptr{fn}\n-\tf2 := *(*func(uint32, *siginfo, unsafe.Pointer))(unsafe.Pointer(&f1))\n+\tf2 := *(*func(uint32, *_siginfo_t, unsafe.Pointer))(unsafe.Pointer(&f1))\n \tf2(sig, info, ctx)\n }\n "}, {"sha": "279001b15461041cc54befcadcd6ca4cf05b60bf", "filename": "libgo/go/runtime/signal_sighandler.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/libgo%2Fgo%2Fruntime%2Fsignal_sighandler.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/libgo%2Fgo%2Fruntime%2Fsignal_sighandler.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fsignal_sighandler.go?ref=a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "patch": "@@ -25,7 +25,7 @@ var crashing int32\n // are not allowed.\n //\n //go:nowritebarrierrec\n-func sighandler(sig uint32, info *siginfo, ctxt unsafe.Pointer, gp *g) {\n+func sighandler(sig uint32, info *_siginfo_t, ctxt unsafe.Pointer, gp *g) {\n \t_g_ := getg()\n \tc := sigctxt{info, ctxt}\n "}, {"sha": "cd6f3fb9ba1e11195c1cc5aa3dd456325ef0c59f", "filename": "libgo/go/runtime/signal_unix.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/libgo%2Fgo%2Fruntime%2Fsignal_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/libgo%2Fgo%2Fruntime%2Fsignal_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fsignal_unix.go?ref=a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "patch": "@@ -202,7 +202,7 @@ func sigpipe() {\n // This is called by the signal handler, and the world may be stopped.\n //go:nosplit\n //go:nowritebarrierrec\n-func sigtrampgo(sig uint32, info *siginfo, ctx unsafe.Pointer) {\n+func sigtrampgo(sig uint32, info *_siginfo_t, ctx unsafe.Pointer) {\n \tif sigfwdgo(sig, info, ctx) {\n \t\treturn\n \t}\n@@ -446,7 +446,7 @@ func badsignal(sig uintptr, c *sigctxt) {\n // This is called by the signal handler, and the world may be stopped.\n //go:nosplit\n //go:nowritebarrierrec\n-func sigfwdgo(sig uint32, info *siginfo, ctx unsafe.Pointer) bool {\n+func sigfwdgo(sig uint32, info *_siginfo_t, ctx unsafe.Pointer) bool {\n \tif sig >= uint32(len(sigtable)) {\n \t\treturn false\n \t}"}, {"sha": "bf9f62eab22efd262932124d8cb29ed1789b239d", "filename": "libgo/go/runtime/stubs.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/libgo%2Fgo%2Fruntime%2Fstubs.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58/libgo%2Fgo%2Fruntime%2Fstubs.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fstubs.go?ref=a2a7ea4834a229da57242c8bc0e14a3fa9fa5a58", "patch": "@@ -485,10 +485,10 @@ func setSigactionHandler(*_sigaction, uintptr)\n // Retrieve fields from the siginfo_t and ucontext_t pointers passed\n // to a signal handler using C, as they are often hidden in a union.\n // Returns  and, if available, PC where signal occurred.\n-func getSiginfo(*siginfo, unsafe.Pointer) (sigaddr uintptr, sigpc uintptr)\n+func getSiginfo(*_siginfo_t, unsafe.Pointer) (sigaddr uintptr, sigpc uintptr)\n \n // Implemented in C for gccgo.\n-func dumpregs(*siginfo, unsafe.Pointer)\n+func dumpregs(*_siginfo_t, unsafe.Pointer)\n \n // Temporary for gccgo until we port proc.go.\n //go:linkname getsched runtime.getsched"}]}