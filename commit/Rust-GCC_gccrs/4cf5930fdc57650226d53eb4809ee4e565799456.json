{"sha": "4cf5930fdc57650226d53eb4809ee4e565799456", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNmNTkzMGZkYzU3NjUwMjI2ZDUzZWI0ODA5ZWU0ZTU2NTc5OTQ1Ng==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-09-20T17:59:50Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-09-20T17:59:50Z"}, "message": "PR libstdc++/79162 Fix std::string regression due to LWG 2946\n\n\tPR libstdc++/79162\n\t* include/bits/basic_string.h (basic_string::_If_sv): Remove from the\n\toverload set when the argument is derived from basic_string.\n\t* testsuite/21_strings/basic_string/cons/char/moveable2_c++17.cc: New\n\ttest.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/moveable2_c++17.cc:\n\tNew test.\n\nFrom-SVN: r253024", "tree": {"sha": "f021adf2d63264032fe3631076a5e3242400bc6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f021adf2d63264032fe3631076a5e3242400bc6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cf5930fdc57650226d53eb4809ee4e565799456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf5930fdc57650226d53eb4809ee4e565799456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cf5930fdc57650226d53eb4809ee4e565799456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cf5930fdc57650226d53eb4809ee4e565799456/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "836cccc71d0aef7308b8f4c02214ac2ed2f3643d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/836cccc71d0aef7308b8f4c02214ac2ed2f3643d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/836cccc71d0aef7308b8f4c02214ac2ed2f3643d"}], "stats": {"total": 115, "additions": 115, "deletions": 0}, "files": [{"sha": "ceb883eab124fef699757e4543cd5c754bdda5b1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf5930fdc57650226d53eb4809ee4e565799456/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf5930fdc57650226d53eb4809ee4e565799456/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4cf5930fdc57650226d53eb4809ee4e565799456", "patch": "@@ -1,5 +1,13 @@\n 2017-09-20  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/79162\n+\t* include/bits/basic_string.h (basic_string::_If_sv): Remove from the\n+\toverload set when the argument is derived from basic_string.\n+\t* testsuite/21_strings/basic_string/cons/char/moveable2_c++17.cc: New\n+\ttest.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/moveable2_c++17.cc:\n+\tNew test.\n+\n \t* testsuite/24_iterators/range_access_cpp17.cc: Fix order of dg-do\n \tand dg-options directives. Fix invalid test.\n "}, {"sha": "8a382d5640c7afdd1c93dfb7c97e566b583ff03d", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf5930fdc57650226d53eb4809ee4e565799456/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf5930fdc57650226d53eb4809ee4e565799456/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=4cf5930fdc57650226d53eb4809ee4e565799456", "patch": "@@ -115,6 +115,7 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n       template<typename _Tp, typename _Res>\n \tusing _If_sv = enable_if_t<\n \t  __and_<is_convertible<const _Tp&, __sv_type>,\n+\t\t __not_<is_convertible<const _Tp*, const basic_string*>>,\n \t\t __not_<is_convertible<const _Tp&, const _CharT*>>>::value,\n \t  _Res>;\n "}, {"sha": "88be60d05ab6405d6ec6c8cd9a60d8e04a8731c9", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/moveable2_c++17.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf5930fdc57650226d53eb4809ee4e565799456/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf5930fdc57650226d53eb4809ee4e565799456/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2Fmoveable2_c%2B%2B17.cc?ref=4cf5930fdc57650226d53eb4809ee4e565799456", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+// Copyright (C) 2011-2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NOTE: This makes use of the fact that we know how moveable\n+// is implemented on string (via swap). If the implementation changed\n+// this test may begin to fail.\n+\n+#include <string>\n+#include <utility>\n+#include <testsuite_hooks.h>\n+\n+class tstring : public std::basic_string<char>\n+{\n+public:\n+  tstring() : std::basic_string<char>() {}\n+  tstring(tstring&& s) : std::basic_string<char>(std::move(s)) {}\n+  tstring& operator=(tstring&& s) = default;\n+};\n+\n+void test01()\n+{\n+  tstring a, b;\n+  a.push_back('1');\n+  b = std::move(a);\n+  VERIFY( b.size() == 1 && b[0] == '1' && a.size() == 0 );\n+\n+  tstring c(std::move(b));\n+  VERIFY( c.size() == 1 && c[0] == '1' );\n+  VERIFY( b.size() == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "63684de68a69b775e420b7f9fc085294958a683b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/moveable2_c++17.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cf5930fdc57650226d53eb4809ee4e565799456/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2_c%2B%2B17.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cf5930fdc57650226d53eb4809ee4e565799456/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2_c%2B%2B17.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2Fmoveable2_c%2B%2B17.cc?ref=4cf5930fdc57650226d53eb4809ee4e565799456", "patch": "@@ -0,0 +1,53 @@\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do run { target c++17 } }\n+\n+// Copyright (C) 2011-2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NOTE: This makes use of the fact that we know how moveable\n+// is implemented on string (via swap). If the implementation changed\n+// this test may begin to fail.\n+\n+#include <string>\n+#include <utility>\n+#include <testsuite_hooks.h>\n+\n+class tstring : public std::basic_string<wchar_t>\n+{\n+public:\n+  tstring() : std::basic_string<wchar_t>() {}\n+  tstring(tstring&& s) : std::basic_string<wchar_t>(std::move(s)) {}\n+  tstring& operator=(tstring&& s) = default;\n+};\n+\n+void test01()\n+{\n+  tstring a, b;\n+  a.push_back(L'1');\n+  b = std::move(a);\n+  VERIFY( b.size() == 1 && b[0] == L'1' && a.size() == 0 );\n+\n+  tstring c(std::move(b));\n+  VERIFY( c.size() == 1 && c[0] == L'1' );\n+  VERIFY( b.size() == 0 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}