{"sha": "ba8a73e9fb98db2eb3abd060227f56cba46c22e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE4YTczZTlmYjk4ZGIyZWIzYWJkMDYwMjI3ZjU2Y2JhNDZjMjJlMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2007-11-01T20:48:21Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-11-01T20:48:21Z"}, "message": "optabs.c (prepare_cmp_insn): Merge a couple of conditional blocks.\n\n\t* optabs.c (prepare_cmp_insn): Merge a couple of conditional blocks.\n\t* sched-rgn.c (compute_trg_info): Zero 'el' local variable.\n\t* tree-if-conv.c (process_phi_nodes): Zero 'cond' local variable.\n\nFrom-SVN: r129830", "tree": {"sha": "c521a2325484fc07839b4f36549ebd5b631375cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c521a2325484fc07839b4f36549ebd5b631375cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba8a73e9fb98db2eb3abd060227f56cba46c22e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba8a73e9fb98db2eb3abd060227f56cba46c22e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba8a73e9fb98db2eb3abd060227f56cba46c22e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cff75efa571c7f06ee556bf99a9ce8d3a3d7a67a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cff75efa571c7f06ee556bf99a9ce8d3a3d7a67a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cff75efa571c7f06ee556bf99a9ce8d3a3d7a67a"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "a39ef31701a19462fae19d1d592e1dbfea30947a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba8a73e9fb98db2eb3abd060227f56cba46c22e1", "patch": "@@ -1,3 +1,9 @@\n+2007-11-01  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* optabs.c (prepare_cmp_insn): Merge a couple of conditional blocks.\n+\t* sched-rgn.c (compute_trg_info): Zero 'el' local variable.\n+\t* tree-if-conv.c (process_phi_nodes): Zero 'cond' local variable.\n+\n 2007-11-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* gcc.c (getenv_spec_function): Escape the environment variable's"}, {"sha": "69177962b53cc551b0fa1f654775f74ac83d0e4c", "filename": "gcc/optabs.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=ba8a73e9fb98db2eb3abd060227f56cba46c22e1", "patch": "@@ -4275,16 +4275,15 @@ prepare_cmp_insn (rtx *px, rtx *py, enum rtx_code *pcomparison, rtx size,\n   if (libfunc && !SCALAR_FLOAT_MODE_P (mode))\n     {\n       rtx result;\n-      rtx ulibfunc;\n \n       /* If we want unsigned, and this mode has a distinct unsigned\n \t comparison routine, use that.  */\n       if (unsignedp)\n \t{\n-\t  ulibfunc = optab_libfunc (ucmp_optab, mode);\n+\t  rtx ulibfunc = optab_libfunc (ucmp_optab, mode);\n+\t  if (ulibfunc)\n+\t    libfunc = ulibfunc;\n \t}\n-      if (unsignedp && ulibfunc)\n-\tlibfunc = ulibfunc;\n \n       result = emit_library_call_value (libfunc, NULL_RTX, LCT_CONST_MAKE_BLOCK,\n \t\t\t\t\ttargetm.libgcc_cmp_return_mode (),"}, {"sha": "12f2e66832bb1283bb8281732c22f28ac30893b7", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=ba8a73e9fb98db2eb3abd060227f56cba46c22e1", "patch": "@@ -1341,7 +1341,7 @@ static void\n compute_trg_info (int trg)\n {\n   candidate *sp;\n-  edgelst el;\n+  edgelst el = { NULL, 0 };\n   int i, j, k, update_idx;\n   basic_block block;\n   sbitmap visited;"}, {"sha": "324fc93e1891a97a00692b935ff7109b81469279", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba8a73e9fb98db2eb3abd060227f56cba46c22e1/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=ba8a73e9fb98db2eb3abd060227f56cba46c22e1", "patch": "@@ -873,7 +873,7 @@ process_phi_nodes (struct loop *loop)\n   /* Replace phi nodes with cond. modify expr.  */\n   for (i = 1; i < orig_loop_num_nodes; i++)\n     {\n-      tree phi, cond;\n+      tree phi, cond = NULL_TREE;\n       block_stmt_iterator bsi;\n       basic_block true_bb = NULL;\n       bb = ifc_bbs[i];"}]}