{"sha": "e6ce69cae5059dfd715edd4e26653c23baf4cb0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZjZTY5Y2FlNTA1OWRmZDcxNWVkZDRlMjY2NTNjMjNiYWY0Y2IwZg==", "commit": {"author": {"name": "Andrew Pinski", "email": "apinski@marvell.com", "date": "2020-03-06T15:34:01Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-03-06T15:35:18Z"}, "message": "Avoid putting a REG_NOTE on anything other than an INSN in haifa-sched.c\n\n\tPR rtl-optimization/93996\n\t* haifa-sched.c (remove_notes): Be more careful when adding\n\tREG_SAVE_NOTE.", "tree": {"sha": "ec76a8da855de110091e86a81e40108ac182b173", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec76a8da855de110091e86a81e40108ac182b173"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6ce69cae5059dfd715edd4e26653c23baf4cb0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ce69cae5059dfd715edd4e26653c23baf4cb0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6ce69cae5059dfd715edd4e26653c23baf4cb0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6ce69cae5059dfd715edd4e26653c23baf4cb0f/comments", "author": {"login": "apinski-cavium", "id": 6335315, "node_id": "MDQ6VXNlcjYzMzUzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/6335315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apinski-cavium", "html_url": "https://github.com/apinski-cavium", "followers_url": "https://api.github.com/users/apinski-cavium/followers", "following_url": "https://api.github.com/users/apinski-cavium/following{/other_user}", "gists_url": "https://api.github.com/users/apinski-cavium/gists{/gist_id}", "starred_url": "https://api.github.com/users/apinski-cavium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apinski-cavium/subscriptions", "organizations_url": "https://api.github.com/users/apinski-cavium/orgs", "repos_url": "https://api.github.com/users/apinski-cavium/repos", "events_url": "https://api.github.com/users/apinski-cavium/events{/privacy}", "received_events_url": "https://api.github.com/users/apinski-cavium/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b62b3960ec405c6ed226a7763e0905c434cb2bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b62b3960ec405c6ed226a7763e0905c434cb2bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b62b3960ec405c6ed226a7763e0905c434cb2bb"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "e38af8ed62069d4f142b6585ac3371bf3f637961", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ce69cae5059dfd715edd4e26653c23baf4cb0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ce69cae5059dfd715edd4e26653c23baf4cb0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6ce69cae5059dfd715edd4e26653c23baf4cb0f", "patch": "@@ -1,3 +1,10 @@\n+2020-03-06  Andrew Pinski  <apinski@marvell.com>\n+\t    Jeff Law  <law@redhat.com>\n+\n+\tPR rtl-optimization/93996\n+\t* haifa-sched.c (remove_notes): Be more careful when adding\n+\tREG_SAVE_NOTE.\n+\n 2020-03-06  Delia Burduv  <delia.burduv@arm.com>\n \n \t* config/arm/arm_neon.h (vld2_bf16): New."}, {"sha": "80687fb5359ec4f27645c4f535c4e47e16c3414c", "filename": "gcc/haifa-sched.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6ce69cae5059dfd715edd4e26653c23baf4cb0f/gcc%2Fhaifa-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6ce69cae5059dfd715edd4e26653c23baf4cb0f/gcc%2Fhaifa-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhaifa-sched.c?ref=e6ce69cae5059dfd715edd4e26653c23baf4cb0f", "patch": "@@ -4239,6 +4239,15 @@ remove_notes (rtx_insn *head, rtx_insn *tail)\n \t  if (insn != tail)\n \t    {\n \t      remove_insn (insn);\n+\t      /* If an insn was split just before the EPILOGUE_BEG note and\n+\t\t that split created new basic blocks, we could have a\n+\t\t BASIC_BLOCK note here.  Safely advance over it in that case\n+\t\t and assert that we land on a real insn.  */\n+\t      if (NOTE_P (next)\n+\t\t  && NOTE_KIND (next) == NOTE_INSN_BASIC_BLOCK\n+\t\t  && next != next_tail)\n+\t\tnext = NEXT_INSN (next);\n+\t      gcc_assert (INSN_P (next));\n \t      add_reg_note (next, REG_SAVE_NOTE,\n \t\t\t    GEN_INT (NOTE_INSN_EPILOGUE_BEG));\n \t      break;"}]}