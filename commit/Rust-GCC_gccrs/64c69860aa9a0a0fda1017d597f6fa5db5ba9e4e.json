{"sha": "64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRjNjk4NjBhYTlhMGEwZmRhMTAxN2Q1OTdmNmZhNWRiNWJhOWU0ZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T17:59:45Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-10-31T17:59:45Z"}, "message": "gnatcmd.adb (Process_Link): Use Osint.Executable_Name instead of handling executable extension manually and...\n\n2006-10-31  Arnaud Charlet  <charlet@adacore.com>\n\t    Robert Dewar  <dewar@adacore.com>\n\n\t* gnatcmd.adb (Process_Link): Use Osint.Executable_Name instead of\n\thandling executable extension manually and duplicating code.\n\n\t* make.adb: Implement new -S switch\n\t(Gnatmake): Use new function Osint.Executable_Name instead\n\tof handling executable extension manually.\n\n\t* prj-util.adb (Executable_Of): Make sure that if an Executable_Suffix\n\tis specified, the executable name ends with this suffix.\n\tTake advantage of Osint.Executable_Name instead of duplicating code.\n\n\t* switch-m.adb: Recognize new gnatmake -S switch\n\n\t* targparm.ads, targparm.adb (Executable_Extension_On_Target): New\n\tvariable.\n\t(Get_Target_Parameters): Set Executable_Extension_On_Target if\n\tavailable.\n\n\t* makeusg.adb: Add line for gnatmake -S switch\n\nFrom-SVN: r118276", "tree": {"sha": "325aebf90d3f552916c4782ec974ee0fa609808e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/325aebf90d3f552916c4782ec974ee0fa609808e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/comments", "author": null, "committer": null, "parents": [{"sha": "5b8b9057447820207979224e4aa151b2a6d19d00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b8b9057447820207979224e4aa151b2a6d19d00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b8b9057447820207979224e4aa151b2a6d19d00"}], "stats": {"total": 358, "additions": 188, "deletions": 170}, "files": [{"sha": "8eb1563b352a5e8ea8c8969a97dd2751f6e3b762", "filename": "gcc/ada/gnatcmd.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fgnatcmd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fgnatcmd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatcmd.adb?ref=64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "patch": "@@ -871,8 +871,8 @@ procedure GNATCmd is\n                   Last_Switches.Table (Last_Switches.Last) :=\n                     new String'(Name_Buffer (1 .. Name_Len) &\n                                 Directory_Separator &\n-                                Base_Name (Arg (Arg'First .. Last)) &\n-                                Get_Executable_Suffix.all);\n+                                Executable_Name\n+                                  (Base_Name (Arg (Arg'First .. Last))));\n                   exit;\n                end if;\n             end if;"}, {"sha": "d24cc9f397ad95541b5ed1e135b1b6312ab59321", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 91, "deletions": 104, "changes": 195, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "patch": "@@ -88,35 +88,35 @@ package body Make is\n    -- Note on terminology --\n    -------------------------\n \n-   --  In this program, we use the phrase \"termination\" of a file name to\n-   --  refer to the suffix that appears after the unit name portion. Very\n-   --  often this is simply the extension, but in some cases, the sequence\n-   --  may be more complex, for example in main.1.ada, the termination in\n-   --  this name is \".1.ada\" and in main_.ada the termination is \"_.ada\".\n+   --  In this program, we use the phrase \"termination\" of a file name to refer\n+   --  to the suffix that appears after the unit name portion. Very often this\n+   --  is simply the extension, but in some cases, the sequence may be more\n+   --  complex, for example in main.1.ada, the termination in this name is\n+   --  \".1.ada\" and in main_.ada the termination is \"_.ada\".\n \n    -------------------------------------\n    -- Queue (Q) Manipulation Routines --\n    -------------------------------------\n \n-   --  The Q is used in Compile_Sources below. Its implementation uses the\n-   --  GNAT generic package Table (basically an extensible array). Q_Front\n-   --  points to the first valid element in the Q, whereas Q.First is the first\n-   --  element ever enqueued, while Q.Last - 1 is the last element in the Q.\n+   --  The Q is used in Compile_Sources below. Its implementation uses the GNAT\n+   --  generic package Table (basically an extensible array). Q_Front points to\n+   --  the first valid element in the Q, whereas Q.First is the first element\n+   --  ever enqueued, while Q.Last - 1 is the last element in the Q.\n    --\n    --        +---+--------------+---+---+---+-----------+---+--------\n    --    Q   |   |  ........    |   |   |   | .......   |   |\n    --        +---+--------------+---+---+---+-----------+---+--------\n    --          ^                  ^                       ^\n    --       Q.First             Q_Front               Q.Last - 1\n    --\n-   --  The elements comprised between Q.First and Q_Front - 1 are the\n-   --  elements that have been enqueued and then dequeued, while the\n-   --  elements between Q_Front and Q.Last - 1 are the elements currently\n-   --  in the Q. When the Q is initialized Q_Front = Q.First = Q.Last.\n-   --  After Compile_Sources has terminated its execution, Q_Front = Q.Last\n-   --  and the elements contained between Q.Front and Q.Last-1 are those that\n-   --  were explored and thus marked by Compile_Sources. Whenever the Q is\n-   --  reinitialized, the elements between Q.First and Q.Last - 1 are unmarked.\n+   --  The elements comprised between Q.First and Q_Front - 1 are the elements\n+   --  that have been enqueued and then dequeued, while the elements between\n+   --  Q_Front and Q.Last - 1 are the elements currently in the Q. When the Q\n+   --  is initialized Q_Front = Q.First = Q.Last. After Compile_Sources has\n+   --  terminated its execution, Q_Front = Q.Last and the elements contained\n+   --  between Q.Front and Q.Last-1 are those that were explored and thus\n+   --  marked by Compile_Sources. Whenever the Q is reinitialized, the elements\n+   --  between Q.First and Q.Last - 1 are unmarked.\n \n    procedure Init_Q;\n    --  Must be called to (re)initialize the Q\n@@ -305,17 +305,17 @@ package body Make is\n    procedure Add_Library_Search_Dir\n      (Path            : String;\n       On_Command_Line : Boolean);\n-   --  Call Add_Lib_Search_Dir with an absolute directory path. If Path is a\n+   --  Call Add_Lib_Search_Dir with an absolute directory path. If Path is\n    --  relative path, when On_Command_Line is True, it is relative to the\n-   --  current working directory; when On_Command_Line is False, it is relative\n+   --  current working directory. When On_Command_Line is False, it is relative\n    --  to the project directory of the main project.\n \n    procedure Add_Source_Search_Dir\n      (Path            : String;\n       On_Command_Line : Boolean);\n    --  Call Add_Src_Search_Dir with an absolute directory path. If Path is a\n    --  relative path, when On_Command_Line is True, it is relative to the\n-   --  current working directory; when On_Command_Line is False, it is relative\n+   --  current working directory. When On_Command_Line is False, it is relative\n    --  to the project directory of the main project.\n \n    procedure Add_Source_Dir (N : String);\n@@ -356,9 +356,9 @@ package body Make is\n    Do_Compile_Step : Boolean := True;\n    Do_Bind_Step    : Boolean := True;\n    Do_Link_Step    : Boolean := True;\n-   --  Flags to indicate what step should be executed.\n-   --  Can be set to False with the switches -c, -b and -l.\n-   --  These flags are reset to True for each invokation of procedure Gnatmake.\n+   --  Flags to indicate what step should be executed. Can be set to False\n+   --  with the switches -c, -b and -l. These flags are reset to True for\n+   --  each invokation of procedure Gnatmake.\n \n    Shared_String           : aliased String := \"-shared\";\n    Force_Elab_Flags_String : aliased String := \"-F\";\n@@ -628,14 +628,14 @@ package body Make is\n    GNAT_Flag         : constant String_Access := new String'(\"-gnatpg\");\n    Do_Not_Check_Flag : constant String_Access := new String'(\"-x\");\n \n-   Object_Suffix     : constant String := Get_Target_Object_Suffix.all;\n-   Executable_Suffix : constant String := Get_Target_Executable_Suffix.all;\n+   Object_Suffix : constant String := Get_Target_Object_Suffix.all;\n \n    Syntax_Only : Boolean := False;\n    --  Set to True when compiling with -gnats\n \n    Display_Executed_Programs : Boolean := True;\n-   --  Set to True if name of commands should be output on stderr\n+   --  Set to True if name of commands should be output on stderr (or on stdout\n+   --  if the Commands_To_Stdout flag was set by use of the -S switch).\n \n    Output_File_Name_Seen : Boolean := False;\n    --  Set to True after having scanned the file_name for\n@@ -1457,11 +1457,10 @@ package body Make is\n \n                --  Comparing switches is delicate because gcc reorders a number\n                --  of switches, according to lang-specs.h, but gnatmake doesn't\n-               --  have the sufficient knowledge to perform the same\n-               --  reordering. Instead, we ignore orders between different\n-               --  \"first letter\" switches, but keep orders between same\n-               --  switches, e.g -O -O2 is different than -O2 -O, but -g -O is\n-               --  equivalent to -O -g.\n+               --  have sufficient knowledge to perform the same reordering.\n+               --  Instead, we ignore orders between different \"first letter\"\n+               --  switches, but keep orders between same switches, e.g -O -O2\n+               --  is different than -O2 -O, but -g -O is equivalent to -O -g.\n \n                if Switches_To_Check.Table (J) (2) /= Prev_Switch (2) or else\n                    (Prev_Switch'Length >= 6 and then\n@@ -3482,6 +3481,10 @@ package body Make is\n       pragma Assert (Args'First = 1);\n \n       if Display_Executed_Programs then\n+         if Commands_To_Stdout then\n+            Set_Standard_Output;\n+         end if;\n+\n          Write_Str (Program);\n \n          for J in Args'Range loop\n@@ -3529,6 +3532,7 @@ package body Make is\n          end loop;\n \n          Write_Eol;\n+         Set_Standard_Error;\n       end if;\n    end Display;\n \n@@ -4326,6 +4330,17 @@ package body Make is\n \n             Osint.Add_Default_Search_Dirs;\n \n+            --  Get the target parameters, so that the correct binder generated\n+            --  files are generated if OpenVMS is the target.\n+\n+            begin\n+               Targparm.Get_Target_Parameters;\n+\n+            exception\n+               when Unrecoverable_Error =>\n+                  Make_Failed (\"*** make failed.\");\n+            end;\n+\n             --  And bind and or link the library\n \n             MLib.Prj.Build_Library\n@@ -4875,7 +4890,8 @@ package body Make is\n \n          Executable          := No_File;\n          Executable_Obsolete := False;\n-         Non_Std_Executable  := False;\n+         Non_Std_Executable  :=\n+           Targparm.Executable_Extension_On_Target /= No_Name;\n \n          --  Look inside the linker switches to see if the name\n          --  of the final executable program was specified.\n@@ -6212,8 +6228,7 @@ package body Make is\n             Project_Tree.Projects.Table (Proj).Depth := 0;\n          end loop;\n \n-         Recursive_Compute_Depth\n-           (Main_Project, Depth => 1);\n+         Recursive_Compute_Depth (Main_Project, Depth => 1);\n \n          --  For each project compute the list of the projects it imports\n          --  directly or indirectly.\n@@ -6228,10 +6243,10 @@ package body Make is\n \n          Osint.Add_Default_Search_Dirs;\n \n-         --  Source file lookups should be cached for efficiency.\n-         --  Source files are not supposed to change. However, we do that now\n-         --  only if no project file is used; if a project file is used, we\n-         --  do it just after changing the directory to the object directory.\n+         --  Source file lookups should be cached for efficiency. Source files\n+         --  are not supposed to change. However, we do that now only if no\n+         --  project file is used; if a project file is used, we do it just\n+         --  after changing the directory to the object directory.\n \n          Osint.Source_File_Data (Cache => True);\n \n@@ -6272,8 +6287,7 @@ package body Make is\n                       (The_Project).Extends /= No_Project;\n \n       function Check_Project (P : Project_Id) return Boolean;\n-      --  Returns True if P is The_Project or a project extended by\n-      --  The_Project.\n+      --  Returns True if P is The_Project or a project extended by The_Project\n \n       -------------------\n       -- Check_Project --\n@@ -6283,6 +6297,7 @@ package body Make is\n       begin\n          if All_Projects or P = The_Project then\n             return True;\n+\n          elsif Extending then\n             declare\n                Data : Project_Data :=\n@@ -6333,8 +6348,9 @@ package body Make is\n \n                      --  Here we are cheating a little bit: we don't want to\n                      --  use Sinput.L, because it depends on the GNAT tree\n-                     --  (Atree, Sinfo, ...). So, we pretend that it is\n-                     --  a project file, and we use Sinput.P.\n+                     --  (Atree, Sinfo, ...). So, we pretend that it is a\n+                     --  project file, and we use Sinput.P.\n+\n                      --  Source_File_Is_Subunit is just scanning through\n                      --  the file until it finds one of the reserved words\n                      --  separate, procedure, function, generic or package.\n@@ -6350,7 +6366,6 @@ package body Make is\n \n                      if Sinput.P.Source_File_Is_Subunit (Src_Ind) then\n                         Sfile := No_Name;\n-\n                      else\n                         Sfile := Unit.File_Names (Body_Part).Name;\n                      end if;\n@@ -6376,15 +6391,15 @@ package body Make is\n \n          if Put_In_Q then\n \n-            --  For the first source inserted into the Q, we need\n-            --  to initialize the Q, but not for the subsequent sources.\n+            --  For the first source inserted into the Q, we need to initialize\n+            --  the Q, but not for the subsequent sources.\n \n             if First_Q_Initialization then\n                Init_Q;\n             end if;\n \n-            --  And of course, we only insert in the Q if the source\n-            --  is not marked.\n+            --  And of course, we only insert in the Q if the source is not\n+            --  marked.\n \n             if Sfile /= No_Name and then not Is_Marked (Sfile) then\n                if Verbose_Mode then\n@@ -6399,11 +6414,10 @@ package body Make is\n \n          elsif Sfile /= No_Name then\n \n-            --  If Put_In_Q is False, we add the source as it it were\n-            --  specified on the command line, and we set Put_In_Q to True,\n-            --  so that the following sources will be put directly in the\n-            --  queue. This will allow parallel compilation processes if -jx\n-            --  switch is used.\n+            --  If Put_In_Q is False, we add the source as it it were specified\n+            --  on the command line, and we set Put_In_Q to True, so that the\n+            --  following sources will be put directly in the queue. This will\n+            --  allow parallel compilation processes if -jx switch is used.\n \n             if Verbose_Mode then\n                Write_Str (\"Adding \"\"\");\n@@ -6786,8 +6800,7 @@ package body Make is\n \n       Project_Tree.Projects.Table (Project).Depth := Depth;\n \n-      --  Mark the project as Seen to avoid endless loop caused by limited\n-      --  withs.\n+      --  Mark project as Seen to avoid endless loop caused by limited withs\n \n       Project_Tree.Projects.Table (Project).Seen := True;\n \n@@ -6837,9 +6850,9 @@ package body Make is\n          return;\n       end if;\n \n-      --  If the previous switch has set the Project_File_Name_Present\n-      --  flag (that is we have seen a -P alone), then the next argument is\n-      --  the name of the project file.\n+      --  If the previous switch has set the Project_File_Name_Present flag\n+      --  (that is we have seen a -P alone), then the next argument is the name\n+      --  of the project file.\n \n       if Project_File_Name_Present and then Project_File_Name = null then\n          if Argv (1) = '-' then\n@@ -6850,9 +6863,9 @@ package body Make is\n             Project_File_Name := new String'(Argv);\n          end if;\n \n-      --  If the previous switch has set the Output_File_Name_Present\n-      --  flag (that is we have seen a -o), then the next argument is\n-      --  the name of the output executable.\n+      --  If the previous switch has set the Output_File_Name_Present flag\n+      --  (that is we have seen a -o), then the next argument is the name of\n+      --  the output executable.\n \n       elsif Output_File_Name_Present\n         and then not Output_File_Name_Seen\n@@ -6864,39 +6877,12 @@ package body Make is\n \n          else\n             Add_Switch (\"-o\", Linker, And_Save => And_Save);\n-\n-            --  Automatically add the executable suffix if it has not been\n-            --  specified explicitly.\n-\n-            declare\n-               Canonical_Argv : String := Argv;\n-            begin\n-               --  Get the file name in canonical case to accept as is\n-               --  names ending with \".EXE\" on VMS and Windows.\n-\n-               Canonical_Case_File_Name (Canonical_Argv);\n-\n-               if Executable_Suffix'Length /= 0\n-                 and then (Canonical_Argv'Length <= Executable_Suffix'Length\n-                        or else Canonical_Argv\n-                                  (Canonical_Argv'Last -\n-                                   Executable_Suffix'Length + 1\n-                                   .. Canonical_Argv'Last)\n-                                /= Executable_Suffix)\n-               then\n-                  Add_Switch\n-                    (Argv & Executable_Suffix,\n-                     Linker,\n-                     And_Save => And_Save);\n-               else\n-                  Add_Switch (Argv, Linker, And_Save => And_Save);\n-               end if;\n-            end;\n+            Add_Switch (Executable_Name (Argv), Linker, And_Save => And_Save);\n          end if;\n \n       --  If the previous switch has set the Object_Directory_Present flag\n-      --  (that is we have seen a -D), then the next argument is\n-      --  the path name of the object directory..\n+      --  (that is we have seen a -D), then the next argument is the path name\n+      --  of the object directory..\n \n       elsif Object_Directory_Present\n         and then not Object_Directory_Seen\n@@ -6920,8 +6906,8 @@ package body Make is\n             --  separator.\n \n             if Argv (Argv'Last) = Directory_Separator then\n-               Object_Directory_Path := new String'(Argv);\n-\n+               Object_Directory_Path :=\n+                 new String'(Argv);\n             else\n                Object_Directory_Path :=\n                  new String'(Argv & Directory_Separator);\n@@ -7084,18 +7070,19 @@ package body Make is\n                                       (Argv (7 .. Argv'Last), Objects);\n \n                begin\n-                  if Src_Path_Name /= null and then\n-                    Lib_Path_Name /= null\n+                  if Src_Path_Name /= null\n+                    and then Lib_Path_Name /= null\n                   then\n-                     --  Set the RTS_*_Path_Name variables, so that the correct\n-                     --  directories will be set when\n-                     --  Osint.Add_Default_Search_Dirs will be called later.\n+                     --  Set RTS_*_Path_Name variables, so that correct direct-\n+                     --  ories will be set when Osint.Add_Default_Search_Dirs\n+                     --  is called later.\n \n                      RTS_Src_Path_Name := Src_Path_Name;\n                      RTS_Lib_Path_Name := Lib_Path_Name;\n \n                   elsif  Src_Path_Name = null\n-                    and Lib_Path_Name = null then\n+                    and Lib_Path_Name = null\n+                  then\n                      Make_Failed (\"RTS path not valid: missing \" &\n                                   \"adainclude and adalib directories\");\n \n@@ -7378,18 +7365,18 @@ package body Make is\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n             Add_Switch (Argv, Binder, And_Save => And_Save);\n \n-            --  By default all switches with more than one character\n-            --  or one character switches which are not in 'a' .. 'z'\n-            --  (except 'C', 'F', 'M' and 'B') are passed to the compiler,\n-            --  unless we are dealing with a debug switch (starts with 'd')\n-            --  or an extended gnatmake switch (starts with 'e').\n+            --  By default all switches with more than one character or one\n+            --  character switches are passed to the compiler with the\n+            --  exception of those tested below, which belong to make.\n \n          elsif Argv (2) /= 'd'\n            and then Argv (2) /= 'e'\n+           and then Argv (2 .. Argv'Last) /= \"B\"\n            and then Argv (2 .. Argv'Last) /= \"C\"\n            and then Argv (2 .. Argv'Last) /= \"F\"\n            and then Argv (2 .. Argv'Last) /= \"M\"\n-           and then Argv (2 .. Argv'Last) /= \"B\"\n+           and then Argv (2 .. Argv'Last) /= \"R\"\n+           and then Argv (2 .. Argv'Last) /= \"S\"\n            and then Argv (2 .. Argv'Last) /= \"vl\"\n            and then Argv (2 .. Argv'Last) /= \"vm\"\n            and then Argv (2 .. Argv'Last) /= \"vh\""}, {"sha": "5dc0604cd3b9f4dc934c3501c50d9bdd10180b40", "filename": "gcc/ada/makeusg.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fmakeusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fmakeusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeusg.adb?ref=64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -171,9 +171,13 @@ begin\n    Write_Str (\"  -s       Recompile if compiler switches have changed\");\n    Write_Eol;\n \n+   --  Line for -S\n+\n+   Write_Str (\"  -S       Echo commands to stdout instead of stderr\");\n+\n    --  Line for -u\n \n-   Write_Str (\"  -u       Unique compilation. Only compile the given files.\");\n+   Write_Str (\"  -u       Unique compilation, only compile the given files\");\n    Write_Eol;\n \n    --  Line for -U"}, {"sha": "845b546ee8baaa6301c08d5e48ab6af04bf3186f", "filename": "gcc/ada/prj-util.adb", "status": "modified", "additions": 19, "deletions": 36, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fprj-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fprj-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-util.adb?ref=64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "patch": "@@ -33,6 +33,7 @@ with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Com;\n with Snames;   use Snames;\n+with Targparm; use Targparm;\n \n package body Prj.Util is\n \n@@ -99,14 +100,7 @@ package body Prj.Util is\n                         In_Package              => Builder_Package,\n                         In_Tree                 => In_Tree);\n \n-      Executable_Suffix : constant Variable_Value :=\n-                            Prj.Util.Value_Of\n-                              (Name                    => Main,\n-                               Index                   => 0,\n-                               Attribute_Or_Array_Name =>\n-                                 Name_Executable_Suffix,\n-                               In_Package              => Builder_Package,\n-                               In_Tree                 => In_Tree);\n+      Executable_Suffix : Variable_Value := Nil_Variable_Value;\n \n       Body_Append : constant String := Get_Name_String\n                                           (In_Tree.Projects.Table\n@@ -120,6 +114,12 @@ package body Prj.Util is\n \n    begin\n       if Builder_Package /= No_Package then\n+         Executable_Suffix := Prj.Util.Value_Of\n+           (Variable_Name => Name_Executable_Suffix,\n+            In_Variables  => In_Tree.Packages.Table\n+              (Builder_Package).Decl.Attributes,\n+            In_Tree       => In_Tree);\n+\n          if Executable = Nil_Variable_Value and Ada_Main then\n             Get_Name_String (Main);\n \n@@ -179,39 +179,22 @@ package body Prj.Util is\n          if Executable /= Nil_Variable_Value\n            and then Executable.Value /= Empty_Name\n          then\n+            --  Get the executable name. If Executable_Suffix is defined,\n+            --  make sure that it will be the extension of the executable.\n+\n             declare\n-               Exec_Suffix : String_Access := Get_Executable_Suffix;\n-               Result      : Name_Id := Executable.Value;\n+               Saved_EEOT : constant Name_Id := Executable_Extension_On_Target;\n+               Result     : Name_Id;\n \n             begin\n-               if Exec_Suffix'Length /= 0 then\n-                  Get_Name_String (Executable.Value);\n-                  Canonical_Case_File_Name (Name_Buffer (1 .. Name_Len));\n-\n-                  --  If the Executable does not end with the executable\n-                  --  suffix, add it.\n-\n-                  if Name_Len <= Exec_Suffix'Length\n-                    or else\n-                      Name_Buffer\n-                        (Name_Len - Exec_Suffix'Length + 1 .. Name_Len) /=\n-                                                               Exec_Suffix.all\n-                  then\n-                     --  Get the original Executable to keep the correct\n-                     --  case for systems where file names are case\n-                     --  insensitive (Windows).\n-\n-                     Get_Name_String (Executable.Value);\n-                     Name_Buffer\n-                       (Name_Len + 1 .. Name_Len + Exec_Suffix'Length) :=\n-                       Exec_Suffix.all;\n-                     Name_Len := Name_Len + Exec_Suffix'Length;\n-                     Result := Name_Find;\n-                  end if;\n-\n-                  Free (Exec_Suffix);\n+               if Executable_Suffix /= Nil_Variable_Value\n+                 and then not Executable_Suffix.Default\n+               then\n+                  Executable_Extension_On_Target := Executable_Suffix.Value;\n                end if;\n \n+               Result := Executable_Name (Executable.Value);\n+               Executable_Extension_On_Target := Saved_EEOT;\n                return Result;\n             end;\n          end if;"}, {"sha": "dc3fe569356600c303e6b673dc3e9320deebdbde", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -471,7 +471,6 @@ package body Switch.M is\n \n       if Last = 0 then\n          return (1 .. 0 => null);\n-\n       else\n          return Global_Switches (Global_Switches'First .. Last);\n       end if;\n@@ -594,13 +593,13 @@ package body Switch.M is\n \n             case Switch_Chars (Ptr) is\n \n-               --  processing for eI switch\n+               --  Processing for eI switch\n \n                when 'I' =>\n                   Ptr := Ptr + 1;\n                   Scan_Pos (Switch_Chars, Max, Ptr, Main_Index, C);\n \n-               --  processing for eL switch\n+               --  Processing for eL switch\n \n                when 'L' =>\n                   Ptr := Ptr + 1;\n@@ -702,6 +701,12 @@ package body Switch.M is\n             Ptr := Ptr + 1;\n             Check_Switches := True;\n \n+         --  Processing for S switch\n+\n+         when 'S' =>\n+            Ptr := Ptr + 1;\n+            Commands_To_Stdout := True;\n+\n          --  Processing for v switch\n \n          when 'v' =>"}, {"sha": "3aa3cc3207e9fa54dd341f263463039cda4e0e4d", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 48, "deletions": 20, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -147,25 +147,6 @@ package body Targparm is\n    procedure Set_Profile_Restrictions (P : Profile_Name);\n    --  Set Restrictions_On_Target for the given profile\n \n-   ------------------------------\n-   -- Set_Profile_Restrictions --\n-   ------------------------------\n-\n-   procedure Set_Profile_Restrictions (P : Profile_Name) is\n-      R : Restriction_Flags  renames Profile_Info (P).Set;\n-      V : Restriction_Values renames Profile_Info (P).Value;\n-   begin\n-      for J in R'Range loop\n-         if R (J) then\n-            Restrictions_On_Target.Set (J) := True;\n-\n-            if J in All_Parameter_Restrictions then\n-               Restrictions_On_Target.Value (J) := V (J);\n-            end if;\n-         end if;\n-      end loop;\n-   end Set_Profile_Restrictions;\n-\n    ---------------------------\n    -- Get_Target_Parameters --\n    ---------------------------\n@@ -497,6 +478,34 @@ package body Targparm is\n \n             goto Line_Loop_Continue;\n \n+         --  See if we have an Executable_Extension\n+\n+         elsif System_Text (P .. P + 45) =\n+                  \"   Executable_Extension : constant String := \"\"\"\n+         then\n+            P := P + 46;\n+\n+            Name_Len := 0;\n+            while System_Text (P) /= '\"'\n+              and then System_Text (P) /= ASCII.LF\n+            loop\n+               Add_Char_To_Name_Buffer (System_Text (P));\n+               P := P + 1;\n+            end loop;\n+\n+            if System_Text (P) /= '\"' or else System_Text (P + 1) /= ';' then\n+               Set_Standard_Error;\n+               Write_Line\n+                 (\"incorrectly formatted Executable_Extension in system.ads\");\n+               Set_Standard_Output;\n+               Fatal := True;\n+\n+            else\n+               Executable_Extension_On_Target := Name_Enter;\n+            end if;\n+\n+            goto Line_Loop_Continue;\n+\n          --  Next See if we have a configuration parameter\n \n          else\n@@ -635,4 +644,23 @@ package body Targparm is\n       end if;\n    end Get_Target_Parameters;\n \n+   ------------------------------\n+   -- Set_Profile_Restrictions --\n+   ------------------------------\n+\n+   procedure Set_Profile_Restrictions (P : Profile_Name) is\n+      R : Restriction_Flags  renames Profile_Info (P).Set;\n+      V : Restriction_Values renames Profile_Info (P).Value;\n+   begin\n+      for J in R'Range loop\n+         if R (J) then\n+            Restrictions_On_Target.Set (J) := True;\n+\n+            if J in All_Parameter_Restrictions then\n+               Restrictions_On_Target.Value (J) := V (J);\n+            end if;\n+         end if;\n+      end loop;\n+   end Set_Profile_Restrictions;\n+\n end Targparm;"}, {"sha": "f7406e8c352d81937aa1c07979ed07b9b954a761", "filename": "gcc/ada/targparm.ads", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Ftargparm.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e/gcc%2Fada%2Ftargparm.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.ads?ref=64c69860aa9a0a0fda1017d597f6fa5db5ba9e4e", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -129,7 +129,7 @@ package Targparm is\n    --  then the flag Opt.Address_Is_Private is set True, otherwise this flag\n    --  is set False.\n \n-   Restrictions_On_Target : Restrictions_Info;\n+   Restrictions_On_Target : Restrictions_Info := No_Restrictions;\n    --  Records restrictions specified by system.ads. Only the Set and Value\n    --  members are modified. The Violated and Count fields are never modified.\n    --  Note that entries can be set either by a pragma Restrictions or by\n@@ -161,6 +161,17 @@ package Targparm is\n    --  The name should contain only letters A-Z, digits 1-9, spaces,\n    --  and underscores.\n \n+   --------------------------\n+   -- Executable Extension --\n+   --------------------------\n+\n+   Executable_Extension_On_Target : Name_Id := No_Name;\n+   --  Executable extension on the target.\n+   --  This name is useful for setting the executable extension in a\n+   --  dynamic way, e.g. depending on the run-time used, rather than\n+   --  using a configure-time macro as done by Get_Target_Executable_Suffix.\n+   --  If not set (No_Name), use GNAT.OS_Lib.Get_Target_Executable_Suffix.\n+\n    -----------------------\n    -- Target Parameters --\n    -----------------------"}]}