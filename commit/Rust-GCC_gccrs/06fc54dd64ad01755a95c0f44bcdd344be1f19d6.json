{"sha": "06fc54dd64ad01755a95c0f44bcdd344be1f19d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDZmYzU0ZGQ2NGFkMDE3NTVhOTVjMGY0NGJjZGQzNDRiZTFmMTlkNg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-10-07T22:17:16Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-10-07T22:17:16Z"}, "message": "builtins.def (BUILT_IN_SETJMP): Declare as library builtin instead of GCC builtin if...\n\n\t* builtins.def (BUILT_IN_SETJMP): Declare as library builtin instead\n\tof GCC builtin if DONT_USE_BUILTIN_SETJMP is defined.\n\t* except.c (sjlj_emit_function_enter): If DONT_USE_BUILTIN_SETJMP is\n\tdefined, force the creation of a new block for a dispatch label.\n\nFrom-SVN: r253515", "tree": {"sha": "d5420a2ce2b9fcdfc0cbfa310180030dd78052d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5420a2ce2b9fcdfc0cbfa310180030dd78052d0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06fc54dd64ad01755a95c0f44bcdd344be1f19d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06fc54dd64ad01755a95c0f44bcdd344be1f19d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06fc54dd64ad01755a95c0f44bcdd344be1f19d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06fc54dd64ad01755a95c0f44bcdd344be1f19d6/comments", "author": null, "committer": null, "parents": [{"sha": "2fcd5884177d490c5cdc36464bd6b0a3bc4e8d54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fcd5884177d490c5cdc36464bd6b0a3bc4e8d54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fcd5884177d490c5cdc36464bd6b0a3bc4e8d54"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "c12028bfca225d7ff01efe314d793aaa1d938d15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06fc54dd64ad01755a95c0f44bcdd344be1f19d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06fc54dd64ad01755a95c0f44bcdd344be1f19d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=06fc54dd64ad01755a95c0f44bcdd344be1f19d6", "patch": "@@ -1,3 +1,10 @@\n+2017-10-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* builtins.def (BUILT_IN_SETJMP): Declare as library builtin instead\n+\tof GCC builtin if DONT_USE_BUILTIN_SETJMP is defined.\n+\t* except.c (sjlj_emit_function_enter): If DONT_USE_BUILTIN_SETJMP is\n+\tdefined, force the creation of a new block for a dispatch label.\n+\n 2017-10-07  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* invoke.texi (Wsuggest-attribute=cold): Document."}, {"sha": "2c539645928af0985ba28a162eb6b205b69c784a", "filename": "gcc/builtins.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06fc54dd64ad01755a95c0f44bcdd344be1f19d6/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06fc54dd64ad01755a95c0f44bcdd344be1f19d6/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=06fc54dd64ad01755a95c0f44bcdd344be1f19d6", "patch": "@@ -890,7 +890,11 @@ DEF_LIB_BUILTIN        (BUILT_IN_REALLOC, \"realloc\", BT_FN_PTR_PTR_SIZE, ATTR_AL\n DEF_GCC_BUILTIN        (BUILT_IN_RETURN, \"return\", BT_FN_VOID_PTR, ATTR_NORETURN_NOTHROW_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_RETURN_ADDRESS, \"return_address\", BT_FN_PTR_UINT, ATTR_LEAF_LIST)\n DEF_GCC_BUILTIN        (BUILT_IN_SAVEREGS, \"saveregs\", BT_FN_PTR_VAR, ATTR_NULL)\n+#ifdef DONT_USE_BUILTIN_SETJMP\n+DEF_LIB_BUILTIN        (BUILT_IN_SETJMP, \"setjmp\", BT_FN_INT_PTR, ATTR_RT_NOTHROW_LEAF_LIST)\n+#else\n DEF_GCC_BUILTIN        (BUILT_IN_SETJMP, \"setjmp\", BT_FN_INT_PTR, ATTR_RT_NOTHROW_LEAF_LIST)\n+#endif\n DEF_EXT_LIB_BUILTIN    (BUILT_IN_STRFMON, \"strfmon\", BT_FN_SSIZE_STRING_SIZE_CONST_STRING_VAR, ATTR_FORMAT_STRFMON_NOTHROW_3_4)\n DEF_LIB_BUILTIN        (BUILT_IN_STRFTIME, \"strftime\", BT_FN_SIZE_STRING_SIZE_CONST_STRING_CONST_TM_PTR, ATTR_FORMAT_STRFTIME_NOTHROW_3_0)\n DEF_GCC_BUILTIN        (BUILT_IN_TRAP, \"trap\", BT_FN_VOID, ATTR_NORETURN_NOTHROW_LEAF_COLD_LIST)"}, {"sha": "4991e7bb01bd1f0b70bae6b3a1e71b60b922af19", "filename": "gcc/except.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06fc54dd64ad01755a95c0f44bcdd344be1f19d6/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06fc54dd64ad01755a95c0f44bcdd344be1f19d6/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=06fc54dd64ad01755a95c0f44bcdd344be1f19d6", "patch": "@@ -1209,6 +1209,28 @@ sjlj_emit_function_enter (rtx_code_label *dispatch_label)\n \t  fn_begin_outside_block = false;\n       }\n \n+#ifdef DONT_USE_BUILTIN_SETJMP\n+  if (dispatch_label)\n+    {\n+      /* The sequence contains a branch in the middle so we need to force\n+\t the creation of a new basic block by means of BB_SUPERBLOCK.  */\n+      if (fn_begin_outside_block)\n+\t{\n+\t  basic_block bb\n+\t    = split_edge (single_succ_edge (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n+\t  if (JUMP_P (BB_END (bb)))\n+\t    emit_insn_before (seq, BB_END (bb));\n+\t  else\n+\t    emit_insn_after (seq, BB_END (bb));\n+\t}\n+      else\n+\temit_insn_after (seq, fn_begin);\n+\n+      single_succ (ENTRY_BLOCK_PTR_FOR_FN (cfun))->flags |= BB_SUPERBLOCK;\n+      return;\n+    }\n+#endif\n+\n   if (fn_begin_outside_block)\n     insert_insn_on_edge (seq, single_succ_edge (ENTRY_BLOCK_PTR_FOR_FN (cfun)));\n   else"}]}