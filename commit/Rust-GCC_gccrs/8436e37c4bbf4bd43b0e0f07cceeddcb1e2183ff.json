{"sha": "8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODQzNmUzN2M0YmJmNGJkNDNiMGUwZjA3Y2NlZWRkY2IxZTIxODNmZg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-05-20T12:51:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-05-20T12:51:51Z"}, "message": "vms_data.ads: Add entry for -gnatr Put GNAT SYNC section in proper alpha order Add VMS...\n\n2008-05-20  Robert Dewar  <dewar@adacore.com>\n\t    Vincent Celier  <celier@adacore.com>\n\n\t* vms_data.ads: Add entry for -gnatr\n\tPut GNAT SYNC section in proper alpha order\n\tAdd VMS qualifier /DISPLAY_PROGRESS equivalent to gnatmake switch -d\n\n\t* gnat_ugn.texi: Add documentation for new gnatname switch --and\n\tUpdate the style checks section\n\tAdd documentation of -gnatr\n\tAdd to the \"Adding the Results of Compiler Checks to gnatcheck Output\"\n\tsubsection the explanation how compiler checks should be disabled for\n\tgnatcheck.\n\tUpdate the list of Ada 95 reserved words used by in the project language\n\tAdd documentation for project qualifiers.\n\tDocument that abstract projects may be extended by different projects in\n\tthe same project tree.\n\tAdd documentation for gnatmake switch -d\n\n\t* ug_words: Add -gnatyy VMS equivalence string.\n\tAdd entry for -gnatr\n\nFrom-SVN: r135647", "tree": {"sha": "13a6ba051759eb8443bb8b4907a57a049d10d74c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13a6ba051759eb8443bb8b4907a57a049d10d74c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff/comments", "author": null, "committer": null, "parents": [{"sha": "5eace9bc1954837d315fda86bb22c44a7443a27a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5eace9bc1954837d315fda86bb22c44a7443a27a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5eace9bc1954837d315fda86bb22c44a7443a27a"}], "stats": {"total": 450, "additions": 284, "deletions": 166}, "files": [{"sha": "4d9abacfa5fd6804594b1611998f74c04c076ba8", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 112, "deletions": 18, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff", "patch": "@@ -4021,6 +4021,10 @@ Don't quit; try semantics, even if parse errors.\n @cindex @option{-gnatQ} (@command{gcc})\n Don't quit; generate @file{ALI} and tree files even if illegalities.\n \n+@item -gnatr\n+@cindex @option{-gnatr} (@command{gcc})\n+Treat pragma Restrictions as Restriction_Warnings.\n+\n @item ^-gnatR[0/1/2/3[s]]^/REPRESENTATION_INFO^\n @cindex @option{-gnatR} (@command{gcc})\n Output representation information for declared types and objects.\n@@ -5723,7 +5727,7 @@ turns on all validity checking options except for\n checking of @code{@b{in out}} procedure arguments.\n \n The specification of additional validity checking generates extra code (and\n-in the case of @option{-gnatVa} the code expansion can be substantial.\n+in the case of @option{-gnatVa} the code expansion can be substantial).\n However, these additional checks can be very useful in detecting\n uninitialized variables, incorrect use of unchecked conversion, and other\n errors leading to invalid values. The use of pragma @code{Initialize_Scalars}\n@@ -6023,7 +6027,7 @@ with declarations.\n @item ^S^STATEMENTS_AFTER_THEN_ELSE^\n @emph{Check no statements after THEN/ELSE.}\n No statements are allowed\n-on the same line as a THEN OR ELSE keyword following the\n+on the same line as a THEN or ELSE keyword following the\n keyword in an IF statement. OR ELSE and AND THEN are not affected,\n and a special exception allows a pragma to appear after ELSE.\n \n@@ -6099,19 +6103,25 @@ around conditions in @code{if} statements, @code{while} statements and\n @item ^y^ALL_BUILTIN^\n @emph{Set all standard style check options}\n This is equivalent to @code{gnaty3aAbcefhiklmnprst}, that is all checking\n-options enabled with the exception of @option{-gnatyo},\n+options enabled with the exception of @option{-gnatyo}, @option{-gnatyI},\n+@option{-gnatyS}, @option{-gnatyLnnn},\n @option{-gnatyd}, @option{-gnatyu}, and @option{-gnatyx}.\n \n @ifclear vms\n @item -\n @emph{Remove style check options}\n This causes any subsequent options in the string to act as canceling the\n-corresponding style check option.\n+corresponding style check option. To cancel maximum nesting level control,\n+use @option{L} parameter witout any integer value after that, because any\n+digit following @option{-} in the parameter string of the @option{-gnaty}\n+option will be threated as canceling indentation check. The same is true\n+for @option{M} parameter. @option{y} and @option{N} parameters are not\n+alloved after @option{-}.\n \n @item +\n This causes any subsequent options in the string to enable the corresponding\n-style check option. It only has an effect if a previous ^-^REMOVE^ has been\n-encountered.\n+style check option. That is, it cancels the effect of a previous ^-^REMOVE^,\n+if any.\n @end ifclear\n \n @ifset vms\n@@ -6153,8 +6163,8 @@ built-in standard style check options are enabled.\n the exception of ORDERED_SUBPROGRAMS, UNNECESSARY_BLANK_LINES,\n XTRA_PARENS, and DOS_LINE_ENDINGS. In addition\n @end ifset\n-an indentation level of 3 is set. This is similar to the standard\n-checking option that is used for the GNAT sources.\n+\n+\n \n The switch\n @ifclear vms\n@@ -6822,6 +6832,16 @@ If the switch @option{-gnatL} is used in conjunction with\n @option{-gnatDG}, then the original source lines are interspersed\n in the expanded source (as comment lines with the original line number).\n \n+@item -gnatr\n+@cindex @option{-gnatr} (@command{gcc})\n+@cindex pragma Restrictions\n+This switch causes pragma Restrictions to be treated as Restriction_Warnings\n+so that violation of restrictions causes warnings rather than illegalities.\n+This is useful during the development process when new restrictions are added\n+or investigated. The switch also causes pragma Profile to be treated as\n+Profile_Warnings, and pragma Restricted_Run_Time and pragma Ravenscar set\n+restriction warnings rather than restrictions.\n+\n @ifclear vms\n @item -gnatR[0|1|2|3[s]]\n @cindex @option{-gnatR} (@command{gcc})\n@@ -8848,6 +8868,15 @@ This switch is not compatible with a project file\n (^-P^/PROJECT_FILE=^@var{file}) or with multiple compiling processes\n (^-j^/PROCESSES=^nnn, when nnn is greater than 1).\n \n+@item ^-d^/DISPLAY_PROGRESS^\n+@cindex @option{^-d^/DISPLAY_PROGRESS^} (@command{gnatmake})\n+Display progress for each source, up to date or not, as a single line\n+\n+   completed x out of y (zz%)\n+\n+If the file needs to be compiled this is displayed after the invocation of\n+the compiler. These lines are displayed even in quiet output mode.\n+\n @item ^-D ^/DIRECTORY_OBJECTS=^@var{dir}\n @cindex @option{^-D^/DIRECTORY_OBJECTS^} (@command{gnatmake})\n Put all object files and ALI file in directory @var{dir}.\n@@ -11036,7 +11065,8 @@ set of files.\n The usual form of the @code{gnatname} command is\n \n @smallexample\n-$ gnatname [@var{switches}] @var{naming_pattern} [@var{naming_patterns}]\n+$ gnatname [@var{switches}] @var{naming_pattern} [@var{naming_patterns}] \\\n+      [--and @var{switches}] @var{naming_pattern} [@var{naming_patterns}]]\n @end smallexample\n \n @noindent\n@@ -11056,6 +11086,14 @@ Each Naming Pattern is enclosed between double quotes.\n A Naming Pattern is a regular expression similar to the wildcard patterns\n used in file names by the Unix shells or the DOS prompt.\n \n+@noindent\n+@code{gnatname} may be called with several sections of directories/patterns.\n+Sections are separated by switch @code{--and}. In each section, there must be\n+at least one pattern. If no directory is specified in a section, the current\n+directory (or the project directory is @code{-P} is used) is implied.\n+The options other that the directory switches and the patterns apply globally\n+even if they are in different sections.\n+\n @noindent\n Examples of Naming Patterns are\n \n@@ -11071,9 +11109,10 @@ see the second kind of regular expressions described in @file{g-regexp.ads}\n (the ``Glob'' regular expressions).\n \n @noindent\n-When invoked with no switches, @code{gnatname} will create a configuration\n-pragmas file @file{gnat.adc} in the current working directory, with pragmas\n-@code{Source_File_Name} for each file that contains a valid Ada unit.\n+When invoked with no switch @code{-P}, @code{gnatname} will create a\n+configuration pragmas file @file{gnat.adc} in the current working directory,\n+with pragmas @code{Source_File_Name} for each file that contains a valid Ada\n+unit.\n \n @node Switches for gnatname\n @section Switches for @code{gnatname}\n@@ -11096,6 +11135,9 @@ Display Copyright and version, then exit disregarding all other options.\n If @option{--version} was not used, display usage, then exit disregarding\n all other options.\n \n+@item --and\n+Start another section of directories/patterns.\n+\n @item ^-c^/CONFIG_FILE=^@file{file}\n @cindex @option{^-c^/CONFIG_FILE^} (@code{gnatname})\n Create a configuration pragmas file @file{file} (instead of the default\n@@ -12033,6 +12075,7 @@ project P.\n \n @menu\n * Basic Syntax::\n+* Qualified Projects::\n * Packages::\n * Expressions::\n * String Types::\n@@ -12090,12 +12133,16 @@ word @code{end} at the end of the project file, followed by a semi-colon.\n Any name in a project file, such as the project name or a variable name,\n has the same syntax as an Ada identifier.\n \n-The reserved words of project files are the Ada reserved words plus\n+The reserved words of project files are the Ada 95 reserved words plus\n @code{extends}, @code{external}, and @code{project}.  Note that the only Ada\n reserved words currently used in project file syntax are:\n \n @itemize @bullet\n @item\n+@code{all}\n+@item\n+@code{at}\n+@item\n @code{case}\n @item\n @code{end}\n@@ -12104,6 +12151,10 @@ reserved words currently used in project file syntax are:\n @item\n @code{is}\n @item\n+@code{limited}\n+@item\n+@code{null}\n+@item\n @code{others}\n @item\n @code{package}\n@@ -12123,6 +12174,39 @@ reserved words currently used in project file syntax are:\n Comments in project files have the same syntax as in Ada, two consecutive\n hyphens through the end of the line.\n \n+@node Qualified Projects\n+@subsection Qualified Projects\n+\n+@noindent\n+Before the reserved @code{project}, there may be one or two \"qualifiers\", that\n+is identifiers or other reserved words, to qualify the project.\n+\n+The current list of qualifiers is:\n+\n+@itemize @bullet\n+@item\n+@code{abstract}: qualify a project with no sources. An abstract project must\n+have a declaration specifying that there are no sources in the project, and,\n+if it extends another project, the project it extends must also be a qualified\n+abstract project.\n+\n+@item\n+@code{standard}: a standard project is a non library project with sources.\n+\n+@item\n+@code{aggregate}: for future extension\n+\n+@item\n+@code{aggregate library}: for future extension\n+\n+@item\n+@code{library}: a library project must declare both attributes\n+@code{Library_Name} and @code{Library_Dir}.\n+\n+@item\n+@code{configuration}: a configuration project cannot be in a project tree.\n+@end itemize\n+\n @node Packages\n @subsection Packages\n \n@@ -13015,8 +13099,8 @@ The original body of @code{Util_IO} will not be considered in program builds.\n However, the package spec will still be found in the project\n @code{Utilities}.\n \n-A child project can have only one parent but it may import any number of other\n-projects.\n+A child project can have only one parent, except when it is qualified as\n+abstract. But it may import any number of other projects.\n \n A project is not allowed to import directly or indirectly at the same time a\n child project and any of its ancestors.\n@@ -20259,9 +20343,10 @@ use the rule named\n @code{Restrictions} or @code{Restriction_Warnings}.\n \n @item Style_Checks\n-To record compiler style checks, use the rule named\n+To record compiler style checks(@pxref{Style Checking}), use the rule named\n @code{Style_Checks}. A parameter of this rule can be either @code{All_Checks},\n-which enables all the style checks, or a string that has exactly the same\n+which enables all the standard style checks that corresponds to @option{-gnatyy}\n+GNAT style check option, or a string that has exactly the same\n structure and semantics as the @code{string_LITERAL} parameter of GNAT pragma\n @code{Style_Checks} (for further information about this pragma,\n @pxref{Pragma Style_Checks,,, gnat_rm, GNAT Reference Manual}).\n@@ -20271,10 +20356,19 @@ To record compiler warnings (@pxref{Warning Message Control}), use the rule\n named @code{Warnings} with a parameter that is a valid\n @i{static_string_expression} argument of GNAT pragma @code{Warnings}\n (for further information about this pragma, @pxref{Pragma Warnings,,,\n-gnat_rm, GNAT Reference Manual}).\n+gnat_rm, GNAT Reference Manual}). Note, that in case of gnatcheck\n+'s' parameter, that corresponds to the GNAT @option{-gnatws} option, disables\n+all the specific warnings, but not suppresses the warning mode,\n+and 'e' parameter, corresponding to @option{-gnatwe} that means\n+\"therat warnings as errors\", does not have any effect.\n \n @end table\n \n+To disable a specific restriction check, use @code{-RStyle_Checks} gnatcheck\n+option with the corresponding restriction name as a parameter. @code{-R} is\n+not available for @code{Style_Checks} and @code{Warnings} options, to disable\n+warnings and style checks, use the corresponding warning and style options.\n+\n @node Project-Wide Checks\n @section Project-Wide Checks\n @cindex Project-wide checks (for @command{gnatcheck})"}, {"sha": "7f8e9577e864e1455cec5e8136bf8ac52acde6d4", "filename": "gcc/ada/ug_words", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff/gcc%2Fada%2Fug_words", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff/gcc%2Fada%2Fug_words", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fug_words?ref=8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff", "patch": "@@ -89,6 +89,7 @@ gcc -c          ^ GNAT COMPILE\n -gnatR3         ^ /REPRESENTATION_INFO=SYMBOLIC\n -gnatq          ^ /TRY_SEMANTICS\n -gnatQ          ^ /FORCE_ALI\n+-gnatr          ^ /TREAT_RESTRICTIONS_AS_WARNINGS\n -gnats          ^ /SYNTAX_ONLY\n -gnatS          ^ /PRINT_STANDARD\n -gnatt          ^ /TREE_OUTPUT\n@@ -177,6 +178,7 @@ gcc -c          ^ GNAT COMPILE\n -gnatW8         ^ /WIDE_CHARACTER_ENCODING=UTF8\n -gnatW?         ^ /WIDE_CHARACTER_ENCODING=?\n -gnaty          ^ /STYLE_CHECKS\n+-gnatyy         ^ /STYLE_CHECKS=ALL_BUILTIN\n -gnatZ          ^ /ZERO_COST_EXCEPTIONS\n -gnatzc         ^ /DISTRIBUTION_STUBS=CALLER\n -gnatzr         ^ /DISTRIBUTION_STUBS=RECEIVER"}, {"sha": "545080f11f6b70afc6625ca80d96493e9372a264", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 170, "deletions": 148, "changes": 318, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=8436e37c4bbf4bd43b0e0f07cceeddcb1e2183ff", "patch": "@@ -880,154 +880,6 @@ package VMS_Data is\n                        S_Check_Subdirs  'Access,\n                        S_Check_Verb     'Access);\n \n-   ----------------------------\n-   -- Switches for GNAT SYNC --\n-   ----------------------------\n-\n-   S_Sync_Add    : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"       &\n-                                            \"-aP*\";\n-   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n-   --\n-   --   Add directories to the project search path.\n-\n-   S_Sync_All    : aliased constant S := \"/ALL \"                           &\n-                                            \"-a\";\n-   --        /NOALL (D)\n-   --        /ALL\n-   --\n-   --   Also check the components of the GNAT run time and process the needed\n-   --  components of the GNAT RTL when building and analyzing the global\n-   --  structure for checking the global rules.\n-\n-   S_Sync_Ext     : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"'     &\n-                                             \"-X\" & '\"';\n-   --       /EXTERNAL_REFERENCE=\"name=val\"\n-   --\n-   --   Specifies an external reference to the project manager. Useful only if\n-   --   /PROJECT_FILE is used.\n-   --\n-   --   Example:\n-   --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n-\n-   S_Sync_Files  : aliased constant S := \"/FILES=@\"                        &\n-                                             \"-files=@\";\n-   --      /FILES=filename\n-   --\n-   --   Take as arguments the files that are listed in the specified\n-   --   text file.\n-\n-   S_Sync_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n-                                            \"-eL\";\n-   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n-   --        /FOLLOW_LINKS_FOR_FILES\n-   --\n-   --    Follow links when parsing project files\n-\n-   S_Sync_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"        &\n-                                             \"DEFAULT \"                    &\n-                                                \"-vP0 \"                    &\n-                                             \"MEDIUM \"                     &\n-                                                \"-vP1 \"                    &\n-                                             \"HIGH \"                       &\n-                                                \"-vP2\";\n-   --        /MESSAGES_PROJECT_FILE[=messages-option]\n-   --\n-   --   Specifies the \"verbosity\" of the parsing of project files.\n-   --   messages-option may be one of the following:\n-   --\n-   --      DEFAULT (D)  No messages are output if there is no error or warning.\n-   --\n-   --      MEDIUM       A small number of messages are output.\n-   --\n-   --      HIGH         A great number of messages are output, most of them not\n-   --                   being useful for the user.\n-\n-   S_Sync_Project : aliased constant S := \"/PROJECT_FILE=<\"                &\n-                                             \"-P>\";\n-   --        /PROJECT_FILE=filename\n-   --\n-   --   Specifies the main project file to be used. The project files rooted\n-   --   at the main project file will be parsed before the invocation of the\n-   --   gnatcheck. The source directories to be searched will be communicated\n-   --   to gnatcheck through logical name ADA_PRJ_INCLUDE_FILE.\n-\n-   S_Sync_Quiet  : aliased constant S := \"/QUIET \"                         &\n-                                            \"-q\";\n-   --        /NOQUIET (D)\n-   --        /QUIET\n-   --\n-   --   Work quietly, only output warnings and errors.\n-\n-   S_Sync_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n-                                             \"--subdirs=>\";\n-   --        /SUBDIRS=dir\n-   --\n-   --   The actual directories (object, exec, library, ...) are subdirectories\n-   --   of the directory specified in the project file. If the subdirectory\n-   --   does not exist, it is created automatically.\n-\n-   S_Sync_Verb   : aliased constant S := \"/VERBOSE \"                       &\n-                                            \"-v\";\n-   --        /NOVERBOSE (D)\n-   --        /VERBOSE\n-   --\n-   --   The version number and copyright notice are output, as well as exact\n-   --   copies of the gnat1 commands spawned to obtain the chop control\n-   --   information.\n-\n-   S_Sync_Exec   : aliased constant S := \"/EXECUTION_TIME \"                &\n-                                            \"-t\";\n-   --        /NOEXECUTION_TIME (D)\n-   --        /EXECUTION_TIME\n-   --\n-   --   Output the execution time\n-\n-   S_Sync_Details : aliased constant S := \"/DETAILs=\"                      &\n-                                             \"MEDIUM \"                     &\n-                                               \"-om \"                      &\n-                                             \"SHORT \"                      &\n-                                               \"-os \"                      &\n-                                             \"FULL \"                       &\n-                                               \"-of\";\n-   --         /DETAILS[=options]\n-   --\n-   --   Specifies the details of the output.\n-   --   Options may be one of the following:\n-   --\n-   --       MEDIUM (D)\n-   --       SHORT\n-   --       FULL\n-\n-   S_Sync_Warnoff : aliased constant S := \"/WARNINGS_OFF \"                 &\n-                                             \"-wq\";\n-   --\n-   --         /WARNINGS_OFF\n-   --\n-   --   Turn warnings off\n-\n-   S_Sync_Output  : aliased constant S := \"/OUTPUT_FILE=<\"                 &\n-                                             \"-out_file=>\";\n-   --\n-   --        /OUTPUT_FILE=filename\n-   --\n-   --   Redirect output to a text file\n-\n-   Sync_Switches : aliased constant Switches :=\n-                      (S_Sync_Add      'Access,\n-                       S_Sync_All      'Access,\n-                       S_Sync_Ext      'Access,\n-                       S_Sync_Follow   'Access,\n-                       S_Sync_Files    'Access,\n-                       S_Sync_Mess     'Access,\n-                       S_Sync_Project  'Access,\n-                       S_Sync_Quiet    'Access,\n-                       S_Sync_Subdirs  'Access,\n-                       S_Sync_Verb     'Access,\n-                       S_Sync_Exec     'Access,\n-                       S_Sync_Details  'Access,\n-                       S_Sync_Warnoff  'Access,\n-                       S_Sync_Output   'Access);\n-\n    ----------------------------\n    -- Switches for GNAT CHOP --\n    ----------------------------\n@@ -2109,6 +1961,16 @@ package VMS_Data is\n    --   readable to any Ada programmer, and is useful to determine the\n    --   characteristics of target dependent types in package Standard.\n \n+   S_GCC_Reswarn : aliased constant S := \"/TREAT_RESTRICTIONS_AS_WARNINGS \" &\n+                                             \"-gnatr\";\n+\n+   --        /NO_TREAT_RESTRICTIONS_AS_WARNINGS (D)\n+   --        /TREAT_RESTRICTIONS_AS_WARNINGS\n+   --\n+   --   Causes all restrictions to be treated as warnings (pragma Restriction\n+   --   treated as Restriction_Warnings, pragma Profile as Profile_Warnings,\n+   --   and pragma Ravenscar sets restriction warnings instead of restrictions)\n+\n    S_GCC_Report  : aliased constant S := \"/REPORT_ERRORS=\"                 &\n                                             \"VERBOSE \"                     &\n                                                \"-gnatv \"                   &\n@@ -4440,6 +4302,17 @@ package VMS_Data is\n    --   Put all object files and .ALI files in <file>.\n    --   This qualifier is not compatible with /PROJECT_FILE.\n \n+   S_Make_Disprog : aliased constant S := \"/DISPLAY_PROGRESS \"             &\n+                                            \"-d\";\n+   --        /NOPLAY_PROGRESS (D)\n+   --        /DISPLAY_PROGRESS\n+   --\n+   --   Display progress for each source, up to date or not, as a single line\n+   --      completed x out of y (zz%)\n+   --   If the file needs to be compiled this is displayed after the\n+   --   invocation of the compiler. These lines are displayed even in quiet\n+   --   output mode (/QUIET).\n+\n    S_Make_Doobj   : aliased constant S := \"/DO_OBJECT_CHECK \"              &\n                                             \"-n\";\n    --        /NODO_OBJECT_CHECK (D)\n@@ -4801,6 +4674,7 @@ package VMS_Data is\n                       S_Make_Current 'Access,\n                       S_Make_Dep     'Access,\n                       S_Make_Dirobj  'Access,\n+                      S_Make_Disprog 'Access,\n                       S_Make_Doobj   'Access,\n                       S_Make_Execut  'Access,\n                       S_Make_Ext     'Access,\n@@ -6625,6 +6499,154 @@ package VMS_Data is\n                       S_Stub_Tree       'Access,\n                       S_Stub_Verbose    'Access);\n \n+   ----------------------------\n+   -- Switches for GNAT SYNC --\n+   ----------------------------\n+\n+   S_Sync_Add    : aliased constant S := \"/ADD_PROJECT_SEARCH_DIR=*\"       &\n+                                            \"-aP*\";\n+   --        /ADD_PROJECT_SEARCH_PATH=(directory[,...])\n+   --\n+   --   Add directories to the project search path.\n+\n+   S_Sync_All    : aliased constant S := \"/ALL \"                           &\n+                                            \"-a\";\n+   --        /NOALL (D)\n+   --        /ALL\n+   --\n+   --   Also check the components of the GNAT run time and process the needed\n+   --  components of the GNAT RTL when building and analyzing the global\n+   --  structure for checking the global rules.\n+\n+   S_Sync_Ext     : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"'     &\n+                                             \"-X\" & '\"';\n+   --       /EXTERNAL_REFERENCE=\"name=val\"\n+   --\n+   --   Specifies an external reference to the project manager. Useful only if\n+   --   /PROJECT_FILE is used.\n+   --\n+   --   Example:\n+   --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n+\n+   S_Sync_Files  : aliased constant S := \"/FILES=@\"                        &\n+                                             \"-files=@\";\n+   --      /FILES=filename\n+   --\n+   --   Take as arguments the files that are listed in the specified\n+   --   text file.\n+\n+   S_Sync_Follow  : aliased constant S := \"/FOLLOW_LINKS_FOR_FILES \"       &\n+                                            \"-eL\";\n+   --        /NOFOLLOW_LINKS_FOR_FILES (D)\n+   --        /FOLLOW_LINKS_FOR_FILES\n+   --\n+   --    Follow links when parsing project files\n+\n+   S_Sync_Mess    : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"        &\n+                                             \"DEFAULT \"                    &\n+                                                \"-vP0 \"                    &\n+                                             \"MEDIUM \"                     &\n+                                                \"-vP1 \"                    &\n+                                             \"HIGH \"                       &\n+                                                \"-vP2\";\n+   --        /MESSAGES_PROJECT_FILE[=messages-option]\n+   --\n+   --   Specifies the \"verbosity\" of the parsing of project files.\n+   --   messages-option may be one of the following:\n+   --\n+   --      DEFAULT (D)  No messages are output if there is no error or warning.\n+   --\n+   --      MEDIUM       A small number of messages are output.\n+   --\n+   --      HIGH         A great number of messages are output, most of them not\n+   --                   being useful for the user.\n+\n+   S_Sync_Project : aliased constant S := \"/PROJECT_FILE=<\"                &\n+                                             \"-P>\";\n+   --        /PROJECT_FILE=filename\n+   --\n+   --   Specifies the main project file to be used. The project files rooted\n+   --   at the main project file will be parsed before the invocation of the\n+   --   gnatcheck. The source directories to be searched will be communicated\n+   --   to gnatcheck through logical name ADA_PRJ_INCLUDE_FILE.\n+\n+   S_Sync_Quiet  : aliased constant S := \"/QUIET \"                         &\n+                                            \"-q\";\n+   --        /NOQUIET (D)\n+   --        /QUIET\n+   --\n+   --   Work quietly, only output warnings and errors.\n+\n+   S_Sync_Subdirs : aliased constant S := \"/SUBDIRS=<\"                     &\n+                                             \"--subdirs=>\";\n+   --        /SUBDIRS=dir\n+   --\n+   --   The actual directories (object, exec, library, ...) are subdirectories\n+   --   of the directory specified in the project file. If the subdirectory\n+   --   does not exist, it is created automatically.\n+\n+   S_Sync_Verb   : aliased constant S := \"/VERBOSE \"                       &\n+                                            \"-v\";\n+   --        /NOVERBOSE (D)\n+   --        /VERBOSE\n+   --\n+   --   The version number and copyright notice are output, as well as exact\n+   --   copies of the gnat1 commands spawned to obtain the chop control\n+   --   information.\n+\n+   S_Sync_Exec   : aliased constant S := \"/EXECUTION_TIME \"                &\n+                                            \"-t\";\n+   --        /NOEXECUTION_TIME (D)\n+   --        /EXECUTION_TIME\n+   --\n+   --   Output the execution time\n+\n+   S_Sync_Details : aliased constant S := \"/DETAILs=\"                      &\n+                                             \"MEDIUM \"                     &\n+                                               \"-om \"                      &\n+                                             \"SHORT \"                      &\n+                                               \"-os \"                      &\n+                                             \"FULL \"                       &\n+                                               \"-of\";\n+   --         /DETAILS[=options]\n+   --\n+   --   Specifies the details of the output.\n+   --   Options may be one of the following:\n+   --\n+   --       MEDIUM (D)\n+   --       SHORT\n+   --       FULL\n+\n+   S_Sync_Warnoff : aliased constant S := \"/WARNINGS_OFF \"                 &\n+                                             \"-wq\";\n+   --\n+   --         /WARNINGS_OFF\n+   --\n+   --   Turn warnings off\n+\n+   S_Sync_Output  : aliased constant S := \"/OUTPUT_FILE=<\"                 &\n+                                             \"-out_file=>\";\n+   --\n+   --        /OUTPUT_FILE=filename\n+   --\n+   --   Redirect output to a text file\n+\n+   Sync_Switches : aliased constant Switches :=\n+                      (S_Sync_Add      'Access,\n+                       S_Sync_All      'Access,\n+                       S_Sync_Ext      'Access,\n+                       S_Sync_Follow   'Access,\n+                       S_Sync_Files    'Access,\n+                       S_Sync_Mess     'Access,\n+                       S_Sync_Project  'Access,\n+                       S_Sync_Quiet    'Access,\n+                       S_Sync_Subdirs  'Access,\n+                       S_Sync_Verb     'Access,\n+                       S_Sync_Exec     'Access,\n+                       S_Sync_Details  'Access,\n+                       S_Sync_Warnoff  'Access,\n+                       S_Sync_Output   'Access);\n+\n    ----------------------------\n    -- Switches for GNAT XREF --\n    ----------------------------"}]}