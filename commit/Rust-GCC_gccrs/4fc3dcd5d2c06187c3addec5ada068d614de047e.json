{"sha": "4fc3dcd5d2c06187c3addec5ada068d614de047e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZjM2RjZDVkMmMwNjE4N2MzYWRkZWM1YWRhMDY4ZDYxNGRlMDQ3ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-02T12:22:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-12-02T12:22:47Z"}, "message": "(emit_library_call): Use Pmode, not OUTMODE, when passing in structure\naddress.\n\nFrom-SVN: r6178", "tree": {"sha": "08cd44d6fe6d6d46ae72e83331440cba8d66a0a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08cd44d6fe6d6d46ae72e83331440cba8d66a0a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4fc3dcd5d2c06187c3addec5ada068d614de047e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc3dcd5d2c06187c3addec5ada068d614de047e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fc3dcd5d2c06187c3addec5ada068d614de047e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fc3dcd5d2c06187c3addec5ada068d614de047e/comments", "author": null, "committer": null, "parents": [{"sha": "0f20ebd10c7547a5d16694f90f6351fe083d828d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f20ebd10c7547a5d16694f90f6351fe083d828d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f20ebd10c7547a5d16694f90f6351fe083d828d"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "2f13dcbda0d9b6af42d66e14035148920c9a6d3f", "filename": "gcc/calls.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4fc3dcd5d2c06187c3addec5ada068d614de047e/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4fc3dcd5d2c06187c3addec5ada068d614de047e/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=4fc3dcd5d2c06187c3addec5ada068d614de047e", "patch": "@@ -2426,16 +2426,16 @@ emit_library_call_value (va_alist)\n \taddr = force_operand (addr, NULL_RTX);\n \n       argvec[count].value = addr;\n-      argvec[count].mode = outmode;\n+      argvec[count].mode = Pmode;\n       argvec[count].partial = 0;\n \n-      argvec[count].reg = FUNCTION_ARG (args_so_far, outmode, NULL_TREE, 1);\n+      argvec[count].reg = FUNCTION_ARG (args_so_far, Pmode, NULL_TREE, 1);\n #ifdef FUNCTION_ARG_PARTIAL_NREGS\n-      if (FUNCTION_ARG_PARTIAL_NREGS (args_so_far, outmode, NULL_TREE, 1))\n+      if (FUNCTION_ARG_PARTIAL_NREGS (args_so_far, Pmode, NULL_TREE, 1))\n \tabort ();\n #endif\n \n-      locate_and_pad_parm (outmode, NULL_TREE,\n+      locate_and_pad_parm (Pmode, NULL_TREE,\n \t\t\t   argvec[count].reg && argvec[count].partial == 0,\n \t\t\t   NULL_TREE, &args_size, &argvec[count].offset,\n \t\t\t   &argvec[count].size);\n@@ -2448,7 +2448,7 @@ emit_library_call_value (va_alist)\n \t  )\n \targs_size.constant += argvec[count].size.constant;\n \n-      FUNCTION_ARG_ADVANCE (args_so_far, outmode, (tree)0, 1);\n+      FUNCTION_ARG_ADVANCE (args_so_far, Pmode, (tree)0, 1);\n \n       count++;\n     }"}]}