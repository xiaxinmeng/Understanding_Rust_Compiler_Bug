{"sha": "167143a01ed0b4e588556991ae5b8793ea2dcffa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTY3MTQzYTAxZWQwYjRlNTg4NTU2OTkxYWU1Yjg3OTNlYTJkY2ZmYQ==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@codesourcery.com", "date": "2002-06-02T17:36:29Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-06-02T17:36:29Z"}, "message": "diagnostic.c (diagnostic_finish): Rename to output_flush.\n\n\t* diagnostic.c (diagnostic_finish): Rename to output_flush.\n\t(clear_disgnostic_info): Rename to output_clear_data.  Use\n\tfalse\n\tinstead of 0 for boolean value.\n\tAdjust function call throughout.\n\nFrom-SVN: r54176", "tree": {"sha": "becbb0b6127570e6ce866180cc6ae14c082d225f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/becbb0b6127570e6ce866180cc6ae14c082d225f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/167143a01ed0b4e588556991ae5b8793ea2dcffa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167143a01ed0b4e588556991ae5b8793ea2dcffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/167143a01ed0b4e588556991ae5b8793ea2dcffa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/167143a01ed0b4e588556991ae5b8793ea2dcffa/comments", "author": null, "committer": null, "parents": [{"sha": "eae4bc56ee765027101b05a66c3c79439c34b7b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eae4bc56ee765027101b05a66c3c79439c34b7b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eae4bc56ee765027101b05a66c3c79439c34b7b9"}], "stats": {"total": 123, "additions": 65, "deletions": 58}, "files": [{"sha": "e7ee8f2e0ec65082afcaa38241b94993d0709bf7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167143a01ed0b4e588556991ae5b8793ea2dcffa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167143a01ed0b4e588556991ae5b8793ea2dcffa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=167143a01ed0b4e588556991ae5b8793ea2dcffa", "patch": "@@ -1,3 +1,10 @@\n+2002-06-02  Gabriel Dos Reis  <gdr@codesourcery.com>\n+\n+\t* diagnostic.c (diagnostic_finish): Rename to output_flush.\n+\t(clear_disgnostic_info): Rename to output_clear_data.  Use false\n+\tinstead of 0 for boolean value.\n+\tAdjust function call throughout.\n+\n Sun Jun  2 19:15:27 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* cfgrtl.c (commit_one_edge_insertion): Fix warning."}, {"sha": "027ea53016b56e7e9bb55e0aa3129bb611b81a84", "filename": "gcc/diagnostic.c", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/167143a01ed0b4e588556991ae5b8793ea2dcffa/gcc%2Fdiagnostic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/167143a01ed0b4e588556991ae5b8793ea2dcffa/gcc%2Fdiagnostic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdiagnostic.c?ref=167143a01ed0b4e588556991ae5b8793ea2dcffa", "patch": "@@ -59,7 +59,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #define diagnostic_msg output_buffer_text_cursor (diagnostic_buffer)\n \n /* Prototypes.  */\n-static void diagnostic_finish PARAMS ((output_buffer *));\n+static void output_flush PARAMS ((output_buffer *));\n static void output_do_verbatim PARAMS ((output_buffer *,\n \t\t\t\t\tconst char *, va_list *));\n static void output_buffer_to_stream PARAMS ((output_buffer *));\n@@ -89,7 +89,7 @@ static void output_append_r PARAMS ((output_buffer *, const char *, int));\n static void wrap_text PARAMS ((output_buffer *, const char *, const char *));\n static void maybe_wrap_text PARAMS ((output_buffer *, const char *,\n \t\t\t\t     const char *));\n-static void clear_diagnostic_info PARAMS ((output_buffer *));\n+static void output_clear_data PARAMS ((output_buffer *));\n \n static void default_diagnostic_starter PARAMS ((output_buffer *,\n \t\t\t\t\t\tdiagnostic_context *));\n@@ -276,15 +276,15 @@ output_clear_message_text (buffer)\n   output_text_length (buffer) = 0;\n }\n \n-/* Zero out any diagnostic data used so far by BUFFER.  */\n+/* Zero out any formatting data used so far by BUFFER.  */\n \n static void\n-clear_diagnostic_info (buffer)\n+output_clear_data (buffer)\n      output_buffer *buffer;\n {\n   output_buffer_text_cursor (buffer) = NULL;\n   output_buffer_ptr_to_format_args (buffer) = NULL;\n-  prefix_was_emitted_for (buffer) = 0;\n+  prefix_was_emitted_for (buffer) = false;\n   output_indentation (buffer) = 0;\n }\n \n@@ -304,7 +304,7 @@ init_output_buffer (buffer, prefix, maximum_length)\n   output_prefixing_rule (buffer) = diagnostic_prefixing_rule (global_dc);\n   output_set_prefix (buffer, prefix);\n   output_text_length (buffer) = 0;\n-  clear_diagnostic_info (buffer);\n+  output_clear_data (buffer);\n }\n \n /* Reinitialize BUFFER.  */\n@@ -314,7 +314,7 @@ output_clear (buffer)\n      output_buffer *buffer;\n {\n   output_clear_message_text (buffer);\n-  clear_diagnostic_info (buffer);\n+  output_clear_data (buffer);\n }\n \n /* Finishes constructing a NULL-terminated character string representing\n@@ -907,14 +907,59 @@ diagnostic_for_decl (decl, msgid, args_ptr, warn)\n       output_buffer_ptr_to_format_args (diagnostic_buffer) = args_ptr;\n       output_buffer_text_cursor (diagnostic_buffer) = _(msgid);\n       format_with_decl (diagnostic_buffer, decl);\n-      diagnostic_finish ((output_buffer *) global_dc);\n+      output_flush (&global_dc->buffer);\n       output_destroy_prefix (diagnostic_buffer);\n \n       output_buffer_state (diagnostic_buffer) = os;\n     }\n   diagnostic_lock--;\n }\n \n+/* Flush the content of BUFFER onto the attached stream.  */\n+\n+static void\n+output_flush (buffer)\n+     output_buffer *buffer;\n+{\n+  output_buffer_to_stream (buffer);\n+  output_clear_data (buffer);\n+  fputc ('\\n', output_buffer_attached_stream (buffer));\n+  fflush (output_buffer_attached_stream (buffer));\n+}\n+\n+/* Helper subroutine of output_verbatim and verbatim. Do the appropriate\n+   settings needed by BUFFER for a verbatim formatting.  */\n+\n+static void\n+output_do_verbatim (buffer, msgid, args_ptr)\n+     output_buffer *buffer;\n+     const char *msgid;\n+     va_list *args_ptr;\n+{\n+  output_state os;\n+\n+  os = output_buffer_state (buffer);\n+  output_prefix (buffer) = NULL;\n+  output_prefixing_rule (buffer) = DIAGNOSTICS_SHOW_PREFIX_NEVER;\n+  output_buffer_text_cursor (buffer) = _(msgid);\n+  output_buffer_ptr_to_format_args (buffer) = args_ptr;\n+  output_set_maximum_length (buffer, 0);\n+  output_format (buffer);\n+  output_buffer_state (buffer) = os;\n+}\n+\n+/* Output MESSAGE verbatim into BUFFER.  */\n+\n+void\n+output_verbatim VPARAMS ((output_buffer *buffer, const char *msgid, ...))\n+{\n+  VA_OPEN (ap, msgid);\n+  VA_FIXEDARG (ap, output_buffer *, buffer);\n+  VA_FIXEDARG (ap, const char *, msgid);\n+\n+  output_do_verbatim (buffer, msgid, &ap);\n+  VA_CLOSE (ap);\n+}\n \f\n /* Count an error or warning.  Return 1 if the message should be printed.  */\n \n@@ -974,7 +1019,7 @@ fatal_io_error VPARAMS ((const char *msgid, ...))\n   output_buffer_ptr_to_format_args (diagnostic_buffer) = &ap;\n   output_buffer_text_cursor (diagnostic_buffer) = _(msgid);\n   output_format (diagnostic_buffer);\n-  diagnostic_finish ((output_buffer *) global_dc);\n+  output_flush (&global_dc->buffer);\n   output_buffer_state (diagnostic_buffer) = os;\n   VA_CLOSE (ap);\n   exit (FATAL_EXIT_CODE);\n@@ -996,7 +1041,7 @@ pedwarn VPARAMS ((const char *msgid, ...))\n   VA_CLOSE (ap);\n }\n \n-/* Issue a pedantic waring about DECL.  */\n+/* Issue a pedantic warning about DECL.  */\n \n void\n pedwarn_with_decl VPARAMS ((tree decl, const char *msgid, ...))\n@@ -1053,7 +1098,7 @@ sorry VPARAMS ((const char *msgid, ...))\n   output_buffer_ptr_to_format_args (diagnostic_buffer) = &ap;\n   output_buffer_text_cursor (diagnostic_buffer) = _(msgid);\n   output_format (diagnostic_buffer);\n-  diagnostic_finish ((output_buffer *) global_dc);\n+  output_flush (&global_dc->buffer);\n   output_buffer_state (diagnostic_buffer) = os;\n   VA_CLOSE (ap);\n }\n@@ -1281,51 +1326,6 @@ warning VPARAMS ((const char *msgid, ...))\n   VA_CLOSE (ap);\n }\n \n-/* Flush diagnostic_buffer content on stderr.  */\n-\n-static void\n-diagnostic_finish (buffer)\n-     output_buffer *buffer;\n-{\n-  output_buffer_to_stream (buffer);\n-  clear_diagnostic_info (buffer);\n-  fputc ('\\n', output_buffer_attached_stream (buffer));\n-  fflush (output_buffer_attached_stream (buffer));\n-}\n-\n-/* Helper subroutine of output_verbatim and verbatim. Do the appropriate\n-   settings needed by BUFFER for a verbatim formatting.  */\n-\n-static void\n-output_do_verbatim (buffer, msgid, args_ptr)\n-     output_buffer *buffer;\n-     const char *msgid;\n-     va_list *args_ptr;\n-{\n-  output_state os;\n-\n-  os = output_buffer_state (buffer);\n-  output_prefix (buffer) = NULL;\n-  output_prefixing_rule (buffer) = DIAGNOSTICS_SHOW_PREFIX_NEVER;\n-  output_buffer_text_cursor (buffer) = _(msgid);\n-  output_buffer_ptr_to_format_args (buffer) = args_ptr;\n-  output_set_maximum_length (buffer, 0);\n-  output_format (buffer);\n-  output_buffer_state (buffer) = os;\n-}\n-\n-/* Output MESSAGE verbatim into BUFFER.  */\n-\n-void\n-output_verbatim VPARAMS ((output_buffer *buffer, const char *msgid, ...))\n-{\n-  VA_OPEN (ap, msgid);\n-  VA_FIXEDARG (ap, output_buffer *, buffer);\n-  VA_FIXEDARG (ap, const char *, msgid);\n-\n-  output_do_verbatim (buffer, msgid, &ap);\n-  VA_CLOSE (ap);\n-}\n \n /* Same as above but use diagnostic_buffer.  */\n \n@@ -1363,7 +1363,7 @@ report_diagnostic (dc)\n       (*diagnostic_starter (dc)) (diagnostic_buffer, dc);\n       output_format (diagnostic_buffer);\n       (*diagnostic_finalizer (dc)) (diagnostic_buffer, dc);\n-      diagnostic_finish ((output_buffer *) global_dc);\n+      output_flush (&global_dc->buffer);\n       output_buffer_state (diagnostic_buffer) = os;\n     }\n \n@@ -1379,7 +1379,7 @@ static void\n error_recursion ()\n {\n   if (diagnostic_lock < 3)\n-    diagnostic_finish ((output_buffer *) global_dc);\n+    output_flush (&global_dc->buffer);\n \n   fnotice (stderr,\n \t   \"Internal compiler error: Error reporting routines re-entered.\\n\");"}]}