{"sha": "92414bb6b077642eefc24080637b6bc766499391", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI0MTRiYjZiMDc3NjQyZWVmYzI0MDgwNjM3YjZiYzc2NjQ5OTM5MQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-07-06T14:58:33Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-07-06T16:12:23Z"}, "message": "c++: Allow empty-declaration in C++11 and later (PR 96068)\n\nSince C++11 a semim-colon on its own at namespace scope is not invalid,\nso do not give a pedantic diagnostic about it.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/96068\n\t* parser.c (cp_parser_toplevel_declaration): Only do pedwarn for\n\tempty-declaration in C++98.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.old-deja/g++.bugs/900404_04.C: Add c++98_only selector to\n\tdg-error for extra ';'.\n\t* g++.old-deja/g++.law/missed-error2.C: Likewise.", "tree": {"sha": "668571cf17cbe28922e9198f4441e5d69566ade1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/668571cf17cbe28922e9198f4441e5d69566ade1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/92414bb6b077642eefc24080637b6bc766499391", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92414bb6b077642eefc24080637b6bc766499391", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92414bb6b077642eefc24080637b6bc766499391", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92414bb6b077642eefc24080637b6bc766499391/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dccbf1e2a6e544f71b4a5795f0c79015db019fc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dccbf1e2a6e544f71b4a5795f0c79015db019fc3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dccbf1e2a6e544f71b4a5795f0c79015db019fc3"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "6e7637c6016fdb421666fa9a6ef26a6fb521fc37", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92414bb6b077642eefc24080637b6bc766499391/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92414bb6b077642eefc24080637b6bc766499391/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=92414bb6b077642eefc24080637b6bc766499391", "patch": "@@ -13502,10 +13502,11 @@ cp_parser_toplevel_declaration (cp_parser* parser)\n     cp_parser_pragma (parser, pragma_external, NULL);\n   else if (token->type == CPP_SEMICOLON)\n     {\n-      /* A declaration consisting of a single semicolon is\n-\t invalid.  Allow it unless we're being pedantic.  */\n       cp_lexer_consume_token (parser->lexer);\n-      pedwarn (input_location, OPT_Wpedantic, \"extra %<;%>\");\n+      /* A declaration consisting of a single semicolon is invalid\n+       * before C++11.  Allow it unless we're being pedantic.  */\n+      if (cxx_dialect < cxx11)\n+\tpedwarn (input_location, OPT_Wpedantic, \"extra %<;%>\");\n     }\n   else\n     /* Parse the declaration itself.  */"}, {"sha": "861179396377ef2a93ee00d48583222b72eef8d5", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900404_04.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92414bb6b077642eefc24080637b6bc766499391/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92414bb6b077642eefc24080637b6bc766499391/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_04.C?ref=92414bb6b077642eefc24080637b6bc766499391", "patch": "@@ -7,12 +7,14 @@\n // elaborated-type-specifier with class key, or an enum-specifier. The\n // declaration below contains neither.\n \n-// g++ fails to flag errors for such usage.\n+// Since C++11 this is allowed as an empty-declaration.\n+\n+// g++ fails to flag errors for such usage in C++98.\n \n // keywords: semicolon, vacuous, file scope, declaration\n \n int i;\n \n-;\t\t\t// { dg-error \"extra ';'\" } \n+;\t\t\t// { dg-error \"extra ';'\" \"\" { target c++98_only } 0 } \n \n int main () { return 0; }"}, {"sha": "eaf8c01b679624fd57a6fa95847c6b7b1ea9dde7", "filename": "gcc/testsuite/g++.old-deja/g++.law/missed-error2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/92414bb6b077642eefc24080637b6bc766499391/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/92414bb6b077642eefc24080637b6bc766499391/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C?ref=92414bb6b077642eefc24080637b6bc766499391", "patch": "@@ -15,9 +15,9 @@\n #endif\n \n inline int max(int a, int b) {return a > b ? a : b;}; // { dg-message \"note\" } \n- // { dg-error \"extra ';'\" \"extra ;\" { target *-*-* } .-1 }\n+ // { dg-error \"extra ';'\" \"extra ;\" { target c++98_only } .-1 }\n inline double max(double a, double b) {return a > b ? a : b;}; // { dg-message \"note\" } candidate\n- // { dg-error \"extra ';'\" \"extra ;\" { target *-*-* } .-1 }\n+ // { dg-error \"extra ';'\" \"extra ;\" { target c++98_only } .-1 }\n \n int main() {\n    static void foo(int i, int j, double x, double y) ;// { dg-error \"\" } .*"}]}