{"sha": "2a86f5154bf543a03a4939434b4b0a813c4b48ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE4NmY1MTU0YmY1NDNhMDNhNDkzOTQzNGI0YjBhODEzYzRiNDhhYw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2005-05-01T15:28:53Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2005-05-01T15:28:53Z"}, "message": "arm.h (ARM_EMIT_TRAMPOLINE_CACHE_CLEAR): Define.\n\n2005-01-05  Paul Brook  <paul@codesourcery.com>\n\n\t* config/arm/arm.h (ARM_EMIT_TRAMPOLINE_CACHE_CLEAR): Define.\n\t(INITIALIZE_TRAMPOLINE): Use it.\n\t* config/arm/linux-gas.h (INITIALIZE_TRAMPOLINE): Remove.\n\t* config/arm/netbsd.h (INITIALIZE_TRAMPOLINE): Remove.\n\t* config/arm/netbsd-elf.h (INITIALIZE_TRAMPOLINE): Remove.\n\nFrom-SVN: r99068", "tree": {"sha": "5f2da4acd08aad9e6f77eedc2d21e93f48290d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f2da4acd08aad9e6f77eedc2d21e93f48290d02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a86f5154bf543a03a4939434b4b0a813c4b48ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a86f5154bf543a03a4939434b4b0a813c4b48ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a86f5154bf543a03a4939434b4b0a813c4b48ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a86f5154bf543a03a4939434b4b0a813c4b48ac/comments", "author": null, "committer": null, "parents": [{"sha": "d8fcd0856b9f3c56dee6d9f7afd22b0a710ee923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8fcd0856b9f3c56dee6d9f7afd22b0a710ee923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8fcd0856b9f3c56dee6d9f7afd22b0a710ee923"}], "stats": {"total": 60, "additions": 19, "deletions": 41}, "files": [{"sha": "db25a0a0843e1fb1ab2a6716b668dac0b82abfc6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a86f5154bf543a03a4939434b4b0a813c4b48ac", "patch": "@@ -1,3 +1,11 @@\n+2005-01-05  Paul Brook  <paul@codesourcery.com>\n+\n+\t* config/arm/arm.h (ARM_EMIT_TRAMPOLINE_CACHE_CLEAR): Define.\n+\t(INITIALIZE_TRAMPOLINE): Use it.\n+\t* config/arm/linux-gas.h (INITIALIZE_TRAMPOLINE): Remove.\n+\t* config/arm/netbsd.h (INITIALIZE_TRAMPOLINE): Remove.\n+\t* config/arm/netbsd-elf.h (INITIALIZE_TRAMPOLINE): Remove.\n+\n 2005-05-01  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/install.texi (Specific): Omit dots in the @anchors names"}, {"sha": "2fcf63f5fd8c372bc20205da217bf97acf281935", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=2a86f5154bf543a03a4939434b4b0a813c4b48ac", "patch": "@@ -1986,6 +1986,16 @@ typedef struct\n /* Alignment required for a trampoline in bits.  */\n #define TRAMPOLINE_ALIGNMENT  32\n \n+/* Call __clear_cache after setting up the trampoline unless this is a nop.  */\n+#ifdef CLEAR_INSN_CACHE\n+#define ARM_EMIT_TRAMPOLINE_CACHE_CLEAR(TRAMP)\t\t\t\t\\\n+  emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__clear_cache\"),\t\\\n+\t\t     0, VOIDmode, 2, TRAMP, Pmode,\t\t\t\\\n+\t\t     plus_constant (TRAMP, TRAMPOLINE_SIZE), Pmode);\n+#else\n+#define ARM_EMIT_TRAMPOLINE_CACHE_CLEAR(TRAMP) do {} while (0)\n+#endif\n+\n /* Emit RTL insns to initialize the variable parts of a trampoline.\n    FNADDR is an RTX for the address of the function's pure code.\n    CXT is an RTX for the static chain value for the function.  */\n@@ -2000,6 +2010,7 @@ typedef struct\n \t\t\t       plus_constant (TRAMP,\t\t\t\\\n \t\t\t\t\t      TARGET_ARM ? 12 : 20)),\t\\\n \t\t  FNADDR);\t\t\t\t\t\t\\\n+  ARM_EMIT_TRAMPOLINE_CACHE_CLEAR (TRAMP);\t\t\t\t\\\n }\n #endif\n "}, {"sha": "45afa6e185be8a34613e7d6f024c31cf3e714b10", "filename": "gcc/config/arm/linux-gas.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2Fconfig%2Farm%2Flinux-gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2Fconfig%2Farm%2Flinux-gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-gas.h?ref=2a86f5154bf543a03a4939434b4b0a813c4b48ac", "patch": "@@ -42,19 +42,6 @@\n #undef  WCHAR_TYPE_SIZE\n #define WCHAR_TYPE_SIZE BITS_PER_WORD\n \n-/* Emit code to set up a trampoline and synchronize the caches.  */\n-#undef  INITIALIZE_TRAMPOLINE\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant ((TRAMP), 8)),\t\\\n-\t\t  (CXT));\t\t\t\t\t\t\\\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant ((TRAMP), 12)),\t\\\n-\t\t  (FNADDR));\t\t\t\t\t\t\\\n-  emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__clear_cache\"),\t\\\n-\t\t     0, VOIDmode, 2, TRAMP, Pmode,\t\t\t\\\n-\t\t     plus_constant (TRAMP, TRAMPOLINE_SIZE), Pmode);\t\\\n-}\n-\n /* Clear the instruction cache from `beg' to `end'.  This makes an\n    inline system call to SYS_cacheflush.  */\n #define CLEAR_INSN_CACHE(BEG, END)\t\t\t\t\t\\"}, {"sha": "602619f282a153898fcb3d84113ddda80d68c234", "filename": "gcc/config/arm/netbsd-elf.h", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd-elf.h?ref=2a86f5154bf543a03a4939434b4b0a813c4b48ac", "patch": "@@ -136,21 +136,6 @@\n #undef DEFAULT_STRUCTURE_SIZE_BOUNDARY\n #define DEFAULT_STRUCTURE_SIZE_BOUNDARY 8\n \n-/* Emit code to set up a trampoline and synchronize the caches.  */\n-#undef INITIALIZE_TRAMPOLINE\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)\t\t\t\\\n-do\t\t\t\t\t\t\t\t\t\\\n-  {\t\t\t\t\t\t\t\t\t\\\n-    emit_move_insn (gen_rtx_MEM (SImode, plus_constant ((TRAMP), 8)),\t\\\n-\t\t    (CXT));\t\t\t\t\t\t\\\n-    emit_move_insn (gen_rtx_MEM (SImode, plus_constant ((TRAMP), 12)),\t\\\n-\t\t    (FNADDR));\t\t\t\t\t\t\\\n-    emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__clear_cache\"),\t\\\n-\t\t       0, VOIDmode, 2, TRAMP, Pmode,\t\t\t\\\n-\t\t       plus_constant (TRAMP, TRAMPOLINE_SIZE), Pmode);\t\\\n-  }\t\t\t\t\t\t\t\t\t\\\n-while (0)\n-\n /* Clear the instruction cache from `BEG' to `END'.  This makes a\n    call to the ARM_SYNC_ICACHE architecture specific syscall.  */\n #define CLEAR_INSN_CACHE(BEG, END)\t\t\t\t\t\\"}, {"sha": "59a7b8043f8546800d82983359448e85b163b569", "filename": "gcc/config/arm/netbsd.h", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2Fconfig%2Farm%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a86f5154bf543a03a4939434b4b0a813c4b48ac/gcc%2Fconfig%2Farm%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fnetbsd.h?ref=2a86f5154bf543a03a4939434b4b0a813c4b48ac", "patch": "@@ -138,19 +138,6 @@\n #undef  DEFAULT_STRUCTURE_SIZE_BOUNDARY\n #define DEFAULT_STRUCTURE_SIZE_BOUNDARY 8\n \n-/* Emit code to set up a trampoline and synchronize the caches.  */\n-#undef  INITIALIZE_TRAMPOLINE\n-#define INITIALIZE_TRAMPOLINE(TRAMP, FNADDR, CXT)                      \\\n-{                                                                      \\\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant ((TRAMP), 8)),   \\\n-                 (CXT));                                               \\\n-  emit_move_insn (gen_rtx_MEM (SImode, plus_constant ((TRAMP), 12)),  \\\n-                 (FNADDR));                                            \\\n-  emit_library_call (gen_rtx_SYMBOL_REF (Pmode, \"__clear_cache\"),      \\\n-                    0, VOIDmode, 2, TRAMP, Pmode,                      \\\n-                    plus_constant (TRAMP, TRAMPOLINE_SIZE), Pmode);    \\\n-}\n-\n /* Clear the instruction cache from `BEG' to `END'.  This makes a\n    call to the ARM32_SYNC_ICACHE architecture specific syscall.  */\n #define CLEAR_INSN_CACHE(BEG, END)                                     \\"}]}