{"sha": "c89f93afdf10763aa157b42a97448ca30f85ad37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg5ZjkzYWZkZjEwNzYzYWExNTdiNDJhOTc0NDhjYTMwZjg1YWQzNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2018-07-16T23:05:46Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2018-07-16T23:05:46Z"}, "message": "rs6000: New testcase fp-convert.c\n\nThis tests the generated code for all conversions between floating point\npoint types, binary and decimal.\n\n\ngcc/testsuite/\n\t* gcc.target/powerpc/convert-fp-128.c: New testcase.\n\t* gcc.target/powerpc/convert-fp-64.c: New testcase.\n\nFrom-SVN: r262757", "tree": {"sha": "b3a140059d6b00e6159b69c43c4769e19b9f4b04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3a140059d6b00e6159b69c43c4769e19b9f4b04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c89f93afdf10763aa157b42a97448ca30f85ad37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c89f93afdf10763aa157b42a97448ca30f85ad37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c89f93afdf10763aa157b42a97448ca30f85ad37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c89f93afdf10763aa157b42a97448ca30f85ad37/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1495b68bc9d9c7206c60145b67545c15b185213a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1495b68bc9d9c7206c60145b67545c15b185213a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1495b68bc9d9c7206c60145b67545c15b185213a"}], "stats": {"total": 165, "additions": 165, "deletions": 0}, "files": [{"sha": "74dcd68d4cf0713d786a9e83a4fb463b4ea3be4e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c89f93afdf10763aa157b42a97448ca30f85ad37/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c89f93afdf10763aa157b42a97448ca30f85ad37/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c89f93afdf10763aa157b42a97448ca30f85ad37", "patch": "@@ -1,3 +1,8 @@\n+2018-07-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* gcc.target/powerpc/convert-fp-128.c: New testcase.\n+\t* gcc.target/powerpc/convert-fp-64.c: New testcase.\n+\n 2018-07-16  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* lib/target-supports.exp (check_effective_target_longdouble64,"}, {"sha": "67896d92c867368987d88fa0c83d68e72f30ae37", "filename": "gcc/testsuite/gcc.target/powerpc/convert-fp-128.c", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c89f93afdf10763aa157b42a97448ca30f85ad37/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconvert-fp-128.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c89f93afdf10763aa157b42a97448ca30f85ad37/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconvert-fp-128.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconvert-fp-128.c?ref=c89f93afdf10763aa157b42a97448ca30f85ad37", "patch": "@@ -0,0 +1,99 @@\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target longdouble128 } */\n+/* { dg-require-effective-target dfp } */\n+\n+#define conv(M,N) mode_##N conv##M##N(mode_##M x) { return x; }\n+\n+#define mode_sf float\n+#define mode_df double\n+typedef float __attribute__((mode(IF))) mode_if;\n+typedef float __attribute__((mode(KF))) mode_kf;\n+#define mode_sd _Decimal32\n+#define mode_dd _Decimal64\n+#define mode_td _Decimal128\n+\n+#ifdef __FLOAT128_TYPE__\n+#define conv1(M) \\\n+\tconv(M,sf) conv(M,df) conv(M,if) conv(M,kf) \\\n+\tconv(M,sd) conv(M,dd) conv(M,td)\n+#define conv2 \\\n+\tconv1(sf) conv1(df) conv1(if) conv1(kf) \\\n+\tconv1(sd) conv1(dd) conv1(td)\n+#else\n+#define conv1(M) \\\n+\tconv(M,sf) conv(M,df) conv(M,if) \\\n+\tconv(M,sd) conv(M,dd) conv(M,td)\n+#define conv2 \\\n+\tconv1(sf) conv1(df) conv1(if) \\\n+\tconv1(sd) conv1(dd) conv1(td)\n+#endif\n+\n+conv2\n+\n+\n+\n+/* { dg-final { scan-assembler-times {\\mbl\\M} 24 { target { ! hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl\\M} 19 { target { hard_dfp && { ! ppc_float128 } } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl\\M} 31 { target { hard_dfp && { ppc_float128 && { ! ppc_float128_insns } } } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl\\M} 27 { target { hard_dfp && { ppc_float128 && { ppc_float128_insns } } } } } } */\n+\n+\n+/* { dg-final { scan-assembler-times {\\mbl __extendsfkf2\\M} 1 { target { ppc_float128 && { ! ppc_float128_insns } } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsfsd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsfdd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsftd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __extenddfkf2\\M} 1 { target { ppc_float128 && { ! ppc_float128_insns } } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncdfsd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extenddfdd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extenddftd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __trunctfkf2\\M} 1 { target { ppc_float128 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctfsd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctfdd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendtftd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __trunckfsf2\\M} 1 { target { ppc_float128 && { ! ppc_float128_insns } } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __trunckfdf2\\M} 1 { target { ppc_float128 && { ! ppc_float128_insns } } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __extendkftf2\\M} 1 { target { ppc_float128 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunckfsd\\M} 1 { target { ppc_float128 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunckfdd\\M} 1 { target { ppc_float128 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendkftd\\M} 1 { target { ppc_float128 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncsdsf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsddf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsdtf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsdkf\\M} 1 { target { ppc_float128 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsddd2\\M} 1 { target { ! dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsdtd2\\M} 1 { target { ! dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncddsf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncdddf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendddtf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendddkf\\M} 1 { target { ppc_float128 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncddsd2\\M} 1 { target { ! dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendddtd2\\M} 1 { target { ! dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctdsf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctddf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctdtf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctdkf\\M} 1 { target { ppc_float128 } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctdsd2\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctddd2\\M} 1 { target { ! dfp } } } } */\n+\n+\n+/* { dg-final { scan-assembler-times {\\mfrsp|xsrsp\\M} 2 { target { ! ppc_float128_insns } } } } */\n+/* { dg-final { scan-assembler-times {\\mfrsp|xsrsp\\M} 3 { target { ppc_float128_insns } } } } */\n+\n+\n+/* { dg-final { scan-assembler-times {\\mfmr\\M} 0 { target { ! hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mfmr\\M} 1 { target { hard_dfp } } } } */\n+\n+/* { dg-final { scan-assembler-times {\\mlfd\\M} 2 { target { ! powerpc_vsx } } } } */\n+/* { dg-final { scan-assembler-times {\\mxxlxor\\M} 2 { target { powerpc_vsx } } } } */\n+/* { dg-final { scan-assembler-times {\\mxxlor|xscpsgndp\\M} 3 { target { ppc_float128_insns } } } } */\n+\n+\n+/* { dg-final { scan-assembler-times {\\mdrsp\\M} 1 { target { hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mdrdpq\\M} 1 { target { hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mdctdp\\M} 2 { target { hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mdctqpq\\M} 2 { target { hard_dfp } } } } */\n+\n+\n+/* { dg-final { scan-assembler-times {\\mxscvdpqp\\M} 2 { target { ppc_float128_insns } } } } */\n+/* { dg-final { scan-assembler-times {\\mxscvqpdpo\\M} 1 { target { ppc_float128_insns } } } } */\n+/* { dg-final { scan-assembler-times {\\mxscvqpdp\\M} 1 { target { ppc_float128_insns } } } } */"}, {"sha": "06364bb807ebe79a843f4c95de9af6e4a4896a47", "filename": "gcc/testsuite/gcc.target/powerpc/convert-fp-64.c", "status": "added", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c89f93afdf10763aa157b42a97448ca30f85ad37/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconvert-fp-64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c89f93afdf10763aa157b42a97448ca30f85ad37/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconvert-fp-64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fconvert-fp-64.c?ref=c89f93afdf10763aa157b42a97448ca30f85ad37", "patch": "@@ -0,0 +1,61 @@\n+/* { dg-do compile { target { ! longdouble128 } } } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target dfp } */\n+\n+#define conv(M,N) mode_##N conv##M##N(mode_##M x) { return x; }\n+\n+#define mode_sf float\n+#define mode_df double\n+#define mode_sd _Decimal32\n+#define mode_dd _Decimal64\n+#define mode_td _Decimal128\n+\n+#define conv1(M) \\\n+\tconv(M,sf) conv(M,df) \\\n+\tconv(M,sd) conv(M,dd) conv(M,td)\n+#define conv2 \\\n+\tconv1(sf) conv1(df) \\\n+\tconv1(sd) conv1(dd) conv1(td)\n+\n+conv2\n+\n+\n+\n+/* { dg-final { scan-assembler-times {\\mbl\\M} 18 { target { ! hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl\\M} 13 { target { hard_dfp } } } } */\n+\n+\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsfsd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsfdd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsftd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncdfsd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extenddfdd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extenddftd\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncsdsf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsddf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsddd2\\M} 1 { target { ! dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendsdtd2\\M} 1 { target { ! dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncddsf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncdddf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_truncddsd2\\M} 1 { target { ! dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_extendddtd2\\M} 1 { target { ! dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctdsf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctddf\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctdsd2\\M} 1 } } */\n+/* { dg-final { scan-assembler-times {\\mbl __dpd_trunctddd2\\M} 1 { target { ! dfp } } } } */\n+\n+\n+/* { dg-final { scan-assembler-times {\\mfrsp|xsrsp\\M} 1 } } */\n+\n+\n+/* { dg-final { scan-assembler-times {\\mfmr\\M} 0 { target { ! hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mfmr\\M} 1 { target { hard_dfp } } } } */\n+\n+\n+\n+/* { dg-final { scan-assembler-times {\\mdrsp\\M} 1 { target { hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mdrdpq\\M} 1 { target { hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mdctdp\\M} 2 { target { hard_dfp } } } } */\n+/* { dg-final { scan-assembler-times {\\mdctqpq\\M} 2 { target { hard_dfp } } } } */\n+\n+"}]}