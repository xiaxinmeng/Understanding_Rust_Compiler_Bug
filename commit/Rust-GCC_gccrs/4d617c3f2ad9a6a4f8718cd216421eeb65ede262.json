{"sha": "4d617c3f2ad9a6a4f8718cd216421eeb65ede262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2MTdjM2YyYWQ5YTZhNGY4NzE4Y2QyMTY0MjFlZWI2NWVkZTI2Mg==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2020-10-09T12:33:24Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:30Z"}, "message": "[Ada] Reinstate utime based code for vx6 in __gnat_copy_attribs\n\ngcc/ada/\n\n\t* adaint.c (__gnat_copy_attribs): Reinstate code based on utime\n\tfor timestamp processing on VxWorks 6.", "tree": {"sha": "a73ca44f24927febba4944d9536be1802c06e32e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a73ca44f24927febba4944d9536be1802c06e32e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d617c3f2ad9a6a4f8718cd216421eeb65ede262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d617c3f2ad9a6a4f8718cd216421eeb65ede262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d617c3f2ad9a6a4f8718cd216421eeb65ede262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d617c3f2ad9a6a4f8718cd216421eeb65ede262/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6fecb06710ff3bae9dbad6cf480a4934a84bb3c"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "41453d1cc6a984c88530e7172ff11e7987fd4b0e", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d617c3f2ad9a6a4f8718cd216421eeb65ede262/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d617c3f2ad9a6a4f8718cd216421eeb65ede262/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=4d617c3f2ad9a6a4f8718cd216421eeb65ede262", "patch": "@@ -3267,7 +3267,22 @@ __gnat_copy_attribs (char *from ATTRIBUTE_UNUSED, char *to ATTRIBUTE_UNUSED,\n      return -1;\n   }\n \n-#if _POSIX_C_SOURCE >= 200809L\n+#if (defined (__vxworks) && _WRS_VXWORKS_MAJOR < 7)\n+\n+  /* VxWorks prior to 7 only has utime.  */\n+\n+  /* Do we need to copy the timestamp ?  */\n+  if (mode != 2) {\n+    struct utimbuf tbuf;\n+\n+    tbuf.actime = fbuf.st_atime;\n+    tbuf.modtime = fbuf.st_mtime;\n+\n+    if (utime (to, &tbuf) == -1)\n+      return -1;\n+  }\n+\n+#elif _POSIX_C_SOURCE >= 200809L\n   struct timespec tbuf[2];\n \n   if (mode != 2) {"}]}