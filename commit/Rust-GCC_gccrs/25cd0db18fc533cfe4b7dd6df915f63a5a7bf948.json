{"sha": "25cd0db18fc533cfe4b7dd6df915f63a5a7bf948", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjVjZDBkYjE4ZmM1MzNjZmU0YjdkZDZkZjkxNWY2M2E1YTdiZjk0OA==", "commit": {"author": {"name": "Michael Hayes", "email": "m.hayes@elec.canterbury.ac.nz", "date": "2000-07-30T08:21:43Z"}, "committer": {"name": "Michael Hayes", "email": "m.hayes@gcc.gnu.org", "date": "2000-07-30T08:21:43Z"}, "message": "* config/c4x/c4x.h (IS_XXX_REGNO): Rewrite to avoid unsigned warnings.\n\nFrom-SVN: r35336", "tree": {"sha": "378a6ba0bf7ecff499dbc724a04934a4bd3bff25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/378a6ba0bf7ecff499dbc724a04934a4bd3bff25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/25cd0db18fc533cfe4b7dd6df915f63a5a7bf948", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cd0db18fc533cfe4b7dd6df915f63a5a7bf948", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25cd0db18fc533cfe4b7dd6df915f63a5a7bf948", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25cd0db18fc533cfe4b7dd6df915f63a5a7bf948/comments", "author": null, "committer": null, "parents": [{"sha": "0ea1f6b69f728ae6b87b8d0c5fc0cfbcd8b21da7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea1f6b69f728ae6b87b8d0c5fc0cfbcd8b21da7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea1f6b69f728ae6b87b8d0c5fc0cfbcd8b21da7"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "eab56e7137af803403a44e97f9b16150bc6a98cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cd0db18fc533cfe4b7dd6df915f63a5a7bf948/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cd0db18fc533cfe4b7dd6df915f63a5a7bf948/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=25cd0db18fc533cfe4b7dd6df915f63a5a7bf948", "patch": "@@ -1,6 +1,10 @@\n 2000-07-30  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n-\t* config/c4x/libgcc.S: (divqf3): Improve accuracy.\n+\t* config/c4x/c4x.h (IS_XXX_REGNO): Rewrite to avoid unsigned warnings.\n+\n+2000-07-30  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n+\n+\t* config/c4x/libgcc.S (divqf3): Improve accuracy.\n \n 2000-07-27  Mark Mitchell  <mark@codesourcery.com>\n "}, {"sha": "7f2a1092472b13a4f0076a65b55ac53755007c71", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/25cd0db18fc533cfe4b7dd6df915f63a5a7bf948/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/25cd0db18fc533cfe4b7dd6df915f63a5a7bf948/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=25cd0db18fc533cfe4b7dd6df915f63a5a7bf948", "patch": "@@ -449,17 +449,23 @@ extern const char *c4x_rpts_cycles_string, *c4x_cpu_version_string;\n \n /* Extended precision registers (low set).  */\n \n-#define IS_R0R1_REGNO(r)           ((((r) >= R0_REGNO) && ((r) <= R1_REGNO)))\n-#define IS_R2R3_REGNO(r)           ((((r) >= R2_REGNO) && ((r) <= R3_REGNO)))\n-#define IS_EXT_LOW_REGNO(r)        ((((r) >= R0_REGNO) && ((r) <= R7_REGNO)))\n+#define IS_R0R1_REGNO(r) \\\n+     ((unsigned int)((r) - R0_REGNO) <= (R1_REGNO - R0_REGNO))\n+#define IS_R2R3_REGNO(r) \\\n+     ((unsigned int)((r) - R2_REGNO) <= (R3_REGNO - R2_REGNO))   \n+#define IS_EXT_LOW_REGNO(r) \\\n+     ((unsigned int)((r) - R0_REGNO) <= (R7_REGNO - R0_REGNO))   \n \n /* Extended precision registers (high set).  */\n \n-#define IS_EXT_HIGH_REGNO(r)       (! TARGET_C3X \\\n-\t\t\t            && ((r) >= R8_REGNO) && ((r) <= R11_REGNO))\n+#define IS_EXT_HIGH_REGNO(r) \\\n+(! TARGET_C3X \\\n+ && ((unsigned int) ((r) - R8_REGNO) <= (R11_REGNO - R8_REGNO)))\n+\n /* Address registers.  */\n \n-#define IS_AUX_REGNO(r)    (((r) >= AR0_REGNO) && ((r) <= AR7_REGNO))\n+#define IS_AUX_REGNO(r) \\\n+    ((unsigned int)((r) - AR0_REGNO) <= (AR7_REGNO - AR0_REGNO))   \n #define IS_ADDR_REGNO(r)   IS_AUX_REGNO(r)\n #define IS_DP_REGNO(r)     ((r) == DP_REGNO)\n #define IS_INDEX_REGNO(r)  (((r) == IR0_REGNO) || ((r) == IR1_REGNO))"}]}