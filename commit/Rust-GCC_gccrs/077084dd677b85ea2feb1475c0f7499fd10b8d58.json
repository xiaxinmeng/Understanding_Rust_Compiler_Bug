{"sha": "077084dd677b85ea2feb1475c0f7499fd10b8d58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc3MDg0ZGQ2NzdiODVlYTJmZWIxNDc1YzBmNzQ5OWZkMTBiOGQ1OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-10-22T17:08:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-10-22T17:08:42Z"}, "message": "i386.c (builtin_description): Add IX86_BUILTIN_PUNPCKHQDQ128.\n\n\t* i386.c (builtin_description): Add IX86_BUILTIN_PUNPCKHQDQ128.\n\t(ix86_expand_builtin): Fix MASKMOVDQU expasion.\n\t* i386.h (ix86_builtins): Add IX86_BUILTIN_PUNPCKHQDQ128.\n\t* i386.md (mmx_punpck?dq): Simplify.\n\t(sse2_pubpcklqdq): Fix.\n\t(sse2_pubpckhqdq): New.\n\t* xmmintrin.h (_mm_unpackhi_epi32): New.\n\n\t* xmmintrin.h (_mm_cvt*, _mm_stream_pd): Fix prototypes.\n\t(_mm_shufflehi_epi16, _mm_shufflelo_epi16): Fix typo.\n\nFrom-SVN: r58412", "tree": {"sha": "137810727936960ce53a37fb03542fb22f146a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/137810727936960ce53a37fb03542fb22f146a76"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/077084dd677b85ea2feb1475c0f7499fd10b8d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077084dd677b85ea2feb1475c0f7499fd10b8d58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/077084dd677b85ea2feb1475c0f7499fd10b8d58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/077084dd677b85ea2feb1475c0f7499fd10b8d58/comments", "author": null, "committer": null, "parents": [{"sha": "874994a90e55fc45334465c3c217be17aa83c197", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/874994a90e55fc45334465c3c217be17aa83c197", "html_url": "https://github.com/Rust-GCC/gccrs/commit/874994a90e55fc45334465c3c217be17aa83c197"}], "stats": {"total": 91, "additions": 61, "deletions": 30}, "files": [{"sha": "c2f7fbd151de9ec1949ad88641a2327cb06df6e1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=077084dd677b85ea2feb1475c0f7499fd10b8d58", "patch": "@@ -1,3 +1,16 @@\n+Tue Oct 22 19:07:03 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.c (builtin_description): Add IX86_BUILTIN_PUNPCKHQDQ128.\n+\t(ix86_expand_builtin): Fix MASKMOVDQU expasion.\n+\t* i386.h (ix86_builtins): Add IX86_BUILTIN_PUNPCKHQDQ128.\n+\t* i386.md (mmx_punpck?dq): Simplify.\n+\t(sse2_pubpcklqdq): Fix.\n+\t(sse2_pubpckhqdq): New.\n+\t* xmmintrin.h (_mm_unpackhi_epi32): New.\n+\n+\t* xmmintrin.h (_mm_cvt*, _mm_stream_pd): Fix prototypes.\n+\t(_mm_shufflehi_epi16, _mm_shufflelo_epi16): Fix typo.\n+\n 2002-10-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/7209"}, {"sha": "537aae82d68a629d556d3ab6e6e5e550fcd724ad", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=077084dd677b85ea2feb1475c0f7499fd10b8d58", "patch": "@@ -12115,6 +12115,7 @@ static const struct builtin_description bdesc_2arg[] =\n   { MASK_SSE2, CODE_FOR_sse2_punpckhbw, \"__builtin_ia32_punpckhbw128\", IX86_BUILTIN_PUNPCKHBW128, 0, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_punpckhwd, \"__builtin_ia32_punpckhwd128\", IX86_BUILTIN_PUNPCKHWD128, 0, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_punpckhdq, \"__builtin_ia32_punpckhdq128\", IX86_BUILTIN_PUNPCKHDQ128, 0, 0 },\n+  { MASK_SSE2, CODE_FOR_sse2_punpckhqdq, \"__builtin_ia32_punpckhqdq128\", IX86_BUILTIN_PUNPCKHQDQ128, 0, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_punpcklbw, \"__builtin_ia32_punpcklbw128\", IX86_BUILTIN_PUNPCKLBW128, 0, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_punpcklwd, \"__builtin_ia32_punpcklwd128\", IX86_BUILTIN_PUNPCKLWD128, 0, 0 },\n   { MASK_SSE2, CODE_FOR_sse2_punpckldq, \"__builtin_ia32_punpckldq128\", IX86_BUILTIN_PUNPCKLDQ128, 0, 0 },\n@@ -13145,6 +13146,7 @@ ix86_expand_builtin (exp, target, subtarget, mode, ignore)\n       return target;\n \n     case IX86_BUILTIN_MASKMOVQ:\n+    case IX86_BUILTIN_MASKMOVDQU:\n       icode = (fcode == IX86_BUILTIN_MASKMOVQ\n \t       ? (TARGET_64BIT ? CODE_FOR_mmx_maskmovq_rex : CODE_FOR_mmx_maskmovq)\n \t       : CODE_FOR_sse2_maskmovdqu);"}, {"sha": "aabf3e531dfef489799972125a078dd1079bbf92", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=077084dd677b85ea2feb1475c0f7499fd10b8d58", "patch": "@@ -2427,6 +2427,7 @@ enum ix86_builtins\n   IX86_BUILTIN_PUNPCKHBW128,\n   IX86_BUILTIN_PUNPCKHWD128,\n   IX86_BUILTIN_PUNPCKHDQ128,\n+  IX86_BUILTIN_PUNPCKHQDQ128,\n   IX86_BUILTIN_PUNPCKLBW128,\n   IX86_BUILTIN_PUNPCKLWD128,\n   IX86_BUILTIN_PUNPCKLDQ128,"}, {"sha": "13a8c215428c2ef805ea0ed5a6c88d532efebbf5", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=077084dd677b85ea2feb1475c0f7499fd10b8d58", "patch": "@@ -19694,9 +19694,7 @@\n (define_insn \"mmx_punpckhdq\"\n   [(set (match_operand:V2SI 0 \"register_operand\" \"=y\")\n \t(vec_merge:V2SI\n-\t (vec_select:V2SI (match_operand:V2SI 1 \"register_operand\" \"0\")\n-\t\t\t  (parallel [(const_int 0)\n-\t\t\t\t     (const_int 1)]))\n+\t (match_operand:V2SI 1 \"register_operand\" \"0\")\n \t (vec_select:V2SI (match_operand:V2SI 2 \"register_operand\" \"y\")\n \t\t\t  (parallel [(const_int 1)\n \t\t\t\t     (const_int 0)]))\n@@ -19758,9 +19756,7 @@\n \t (vec_select:V2SI (match_operand:V2SI 1 \"register_operand\" \"0\")\n \t\t\t   (parallel [(const_int 1)\n \t\t\t\t      (const_int 0)]))\n-\t (vec_select:V2SI (match_operand:V2SI 2 \"register_operand\" \"y\")\n-\t\t\t  (parallel [(const_int 0)\n-\t\t\t\t     (const_int 1)]))\n+\t (match_operand:V2SI 2 \"register_operand\" \"y\")\n \t (const_int 1)))]\n   \"TARGET_MMX\"\n   \"punpckldq\\t{%2, %0|%0, %2}\"\n@@ -21548,16 +21544,29 @@\n (define_insn \"sse2_punpcklqdq\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n \t(vec_merge:V2DI\n-\t (match_operand:V2DI 1 \"register_operand\" \"0\")\n \t (vec_select:V2DI (match_operand:V2DI 2 \"register_operand\" \"x\")\n \t\t\t  (parallel [(const_int 1)\n \t\t\t\t     (const_int 0)]))\n+\t (match_operand:V2DI 1 \"register_operand\" \"0\")\n \t (const_int 1)))]\n   \"TARGET_SSE2\"\n   \"punpcklqdq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"TI\")])\n \n+(define_insn \"sse2_punpckhqdq\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+\t(vec_merge:V2DI\n+\t (match_operand:V2DI 1 \"register_operand\" \"0\")\n+\t (vec_select:V2DI (match_operand:V2DI 2 \"register_operand\" \"x\")\n+\t\t\t  (parallel [(const_int 1)\n+\t\t\t\t     (const_int 0)]))\n+\t (const_int 1)))]\n+  \"TARGET_SSE2\"\n+  \"punpckhqdq\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"mode\" \"TI\")])\n+\n ;; SSE2 moves\n \n (define_insn \"sse2_movapd\""}, {"sha": "14fdcd5bee84e70ba1eeec5b04b4cbf5bd014eec", "filename": "gcc/config/i386/xmmintrin.h", "status": "modified", "additions": 29, "deletions": 23, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/077084dd677b85ea2feb1475c0f7499fd10b8d58/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxmmintrin.h?ref=077084dd677b85ea2feb1475c0f7499fd10b8d58", "patch": "@@ -1827,16 +1827,16 @@ _mm_cvtepi32_pd (__m128i __A)\n   return (__m128d)__builtin_ia32_cvtdq2pd ((__v4si) __A);\n }\n \n-static __inline __m128d\n+static __inline __m128\n _mm_cvtepi32_ps (__m128i __A)\n {\n-  return (__m128d)__builtin_ia32_cvtdq2ps ((__v4si) __A);\n+  return (__m128)__builtin_ia32_cvtdq2ps ((__v4si) __A);\n }\n \n-static __inline __m128d\n+static __inline __m128i\n _mm_cvtpd_epi32 (__m128d __A)\n {\n-  return (__m128d)__builtin_ia32_cvtpd2dq ((__v2df) __A);\n+  return (__m128i)__builtin_ia32_cvtpd2dq ((__v2df) __A);\n }\n \n static __inline __m64\n@@ -1845,16 +1845,16 @@ _mm_cvtpd_pi32 (__m128d __A)\n   return (__m64)__builtin_ia32_cvtpd2pi ((__v2df) __A);\n }\n \n-static __inline __m128d\n+static __inline __m128\n _mm_cvtpd_ps (__m128d __A)\n {\n-  return (__m128d)__builtin_ia32_cvtpd2ps ((__v2df) __A);\n+  return (__m128)__builtin_ia32_cvtpd2ps ((__v2df) __A);\n }\n \n-static __inline __m128d\n+static __inline __m128i\n _mm_cvttpd_epi32 (__m128d __A)\n {\n-  return (__m128d)__builtin_ia32_cvttpd2dq ((__v2df) __A);\n+  return (__m128i)__builtin_ia32_cvttpd2dq ((__v2df) __A);\n }\n \n static __inline __m64\n@@ -1869,20 +1869,20 @@ _mm_cvtpi32_pd (__m64 __A)\n   return (__m128d)__builtin_ia32_cvtpi2pd ((__v2si) __A);\n }\n \n-static __inline __m128d\n-_mm_cvtps_epi32 (__m128d __A)\n+static __inline __m128i\n+_mm_cvtps_epi32 (__m128 __A)\n {\n-  return (__m128d)__builtin_ia32_cvtps2dq ((__v4sf) __A);\n+  return (__m128i)__builtin_ia32_cvtps2dq ((__v4sf) __A);\n }\n \n-static __inline __m128d\n-_mm_cvttps_epi32 (__m128d __A)\n+static __inline __m128i\n+_mm_cvttps_epi32 (__m128 __A)\n {\n-  return (__m128d)__builtin_ia32_cvttps2dq ((__v4sf) __A);\n+  return (__m128i)__builtin_ia32_cvttps2dq ((__v4sf) __A);\n }\n \n static __inline __m128d\n-_mm_cvtps_pd (__m128d __A)\n+_mm_cvtps_pd (__m128 __A)\n {\n   return (__m128d)__builtin_ia32_cvtps2pd ((__v4sf) __A);\n }\n@@ -1899,10 +1899,10 @@ _mm_cvttsd_si32 (__m128d __A)\n   return __builtin_ia32_cvttsd2si ((__v2df) __A);\n }\n \n-static __inline __m128d\n-_mm_cvtsd_ss (__m128d __A, __m128d __B)\n+static __inline __m128\n+_mm_cvtsd_ss (__m128 __A, __m128d __B)\n {\n-  return (__m128d)__builtin_ia32_cvtsd2ss ((__v4sf) __A, (__v2df) __B);\n+  return (__m128)__builtin_ia32_cvtsd2ss ((__v4sf) __A, (__v2df) __B);\n }\n \n static __inline __m128d\n@@ -1912,7 +1912,7 @@ _mm_cvtsi32_sd (__m128d __A, int __B)\n }\n \n static __inline __m128d\n-_mm_cvtss_sd (__m128d __A, __m128d __B)\n+_mm_cvtss_sd (__m128d __A, __m128 __B)\n {\n   return (__m128d)__builtin_ia32_cvtss2sd ((__v2df) __A, (__v4sf)__B);\n }\n@@ -1997,6 +1997,12 @@ _mm_unpackhi_epi32 (__m128i __A, __m128i __B)\n   return (__m128i)__builtin_ia32_punpckhdq128 ((__v4si)__A, (__v4si)__B);\n }\n \n+static __inline __m128i\n+_mm_unpackhi_epi64 (__m128i __A, __m128i __B)\n+{\n+  return (__m128i)__builtin_ia32_punpckhqdq128 ((__v2di)__A, (__v2di)__B);\n+}\n+\n static __inline __m128i\n _mm_unpacklo_epi8 (__m128i __A, __m128i __B)\n {\n@@ -2359,8 +2365,8 @@ _mm_mulhi_epu16 (__m128i __A, __m128i __B)\n   return (__m128i)__builtin_ia32_pmulhuw128 ((__v8hi)__A, (__v8hi)__B);\n }\n \n-#define _mm_shufflehi_epi16(__A, __B) ((__m128i)__builtin_ia32_pshufhw128 ((__v8hi)__A, __B))\n-#define _mm_shufflelo_epi16(__A, __B) ((__m128i)__builtin_ia32_pshuflw128 ((__v8hi)__A, __B))\n+#define _mm_shufflehi_epi16(__A, __B) ((__m128i)__builtin_ia32_pshufhw ((__v8hi)__A, __B))\n+#define _mm_shufflelo_epi16(__A, __B) ((__m128i)__builtin_ia32_pshuflw ((__v8hi)__A, __B))\n #define _mm_shuffle_epi32(__A, __B) ((__m128i)__builtin_ia32_pshufd ((__v4si)__A, __B))\n \n static __inline void\n@@ -2400,9 +2406,9 @@ _mm_stream_si128 (__m128i *__A, __m128i __B)\n }\n \n static __inline void\n-_mm_stream_pd (__m128d *__A, __m128d __B)\n+_mm_stream_pd (double *__A, __m128d __B)\n {\n-  __builtin_ia32_movntpd (__A, (__v2df)__B);\n+  __builtin_ia32_movntpd ((__m128d *)__A, (__v2df)__B);\n }\n \n static __inline __m128i"}]}