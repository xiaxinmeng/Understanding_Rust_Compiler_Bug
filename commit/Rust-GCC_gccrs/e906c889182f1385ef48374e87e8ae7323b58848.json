{"sha": "e906c889182f1385ef48374e87e8ae7323b58848", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTkwNmM4ODkxODJmMTM4NWVmNDgzNzRlODdlOGFlNzMyM2I1ODg0OA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2012-01-25T19:04:44Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2012-01-25T19:04:44Z"}, "message": "mips.c: Don't process ASM_OPERANDS.\n\ngcc/\n\t* config/mips/mips.c: Don't process ASM_OPERANDS.\n\nFrom-SVN: r183532", "tree": {"sha": "5414dff4ea454f9565410e70a08cf2810ea382af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5414dff4ea454f9565410e70a08cf2810ea382af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e906c889182f1385ef48374e87e8ae7323b58848", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e906c889182f1385ef48374e87e8ae7323b58848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e906c889182f1385ef48374e87e8ae7323b58848", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e906c889182f1385ef48374e87e8ae7323b58848/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a76be469fcc0d5a2669cc1aef531920dfa1d5b17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a76be469fcc0d5a2669cc1aef531920dfa1d5b17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a76be469fcc0d5a2669cc1aef531920dfa1d5b17"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "b3914bedd9aabb32c3b066ed9f6a47274ace911a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e906c889182f1385ef48374e87e8ae7323b58848/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e906c889182f1385ef48374e87e8ae7323b58848/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e906c889182f1385ef48374e87e8ae7323b58848", "patch": "@@ -1,3 +1,7 @@\n+2012-01-25  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* config/mips/mips.c: Don't process ASM_OPERANDS.\n+\n 2012-01-25  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/49868"}, {"sha": "e4231a59c49d1df301eb055ab3d8d90afcaf3123", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e906c889182f1385ef48374e87e8ae7323b58848/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e906c889182f1385ef48374e87e8ae7323b58848/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=e906c889182f1385ef48374e87e8ae7323b58848", "patch": "@@ -3101,7 +3101,10 @@ mips_small_data_pattern_1 (rtx *loc, void *data)\n {\n   enum mips_symbol_context context;\n \n-  if (GET_CODE (*loc) == LO_SUM)\n+  /* Ignore things like \"g\" constraints in asms.  We make no particular\n+     guarantee about which symbolic constants are acceptable as asm operands\n+     versus which must be forced into a GPR.  */\n+  if (GET_CODE (*loc) == LO_SUM || GET_CODE (*loc) == ASM_OPERANDS)\n     return -1;\n \n   if (MEM_P (*loc))"}]}