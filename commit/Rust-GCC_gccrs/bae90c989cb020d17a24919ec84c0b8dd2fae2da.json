{"sha": "bae90c989cb020d17a24919ec84c0b8dd2fae2da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFlOTBjOTg5Y2IwMjBkMTdhMjQ5MTllYzg0YzBiOGRkMmZhZTJkYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2014-06-04T23:15:33Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2014-06-04T23:15:33Z"}, "message": "libgo: Merge from revision 18783:00cce3a34d7e of master library.\n\nThis revision was committed January 7, 2014.  The next\nrevision deleted runtime/mfinal.c.  That will be done in a\nsubsequent merge.\n\nThis merge changes type descriptors to add a zero field,\npointing to a zero value for that type.  This is implemented\nas a common variable.\n\n\t* go-gcc.cc (Gcc_backend::implicit_variable): Add is_common and\n\talignment parameters.  Permit init parameter to be NULL.\n\nFrom-SVN: r211249", "tree": {"sha": "89766166feb4ceca2d983169c5360e3f6f521b12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89766166feb4ceca2d983169c5360e3f6f521b12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bae90c989cb020d17a24919ec84c0b8dd2fae2da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae90c989cb020d17a24919ec84c0b8dd2fae2da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae90c989cb020d17a24919ec84c0b8dd2fae2da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae90c989cb020d17a24919ec84c0b8dd2fae2da/comments", "author": null, "committer": null, "parents": [{"sha": "82b3da6a714493644a4333bfd8205e3341ed3b8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82b3da6a714493644a4333bfd8205e3341ed3b8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82b3da6a714493644a4333bfd8205e3341ed3b8e"}], "stats": {"total": 17415, "additions": 9516, "deletions": 7899}, "files": [{"sha": "7cab8567c288741bde71a76a8e0d472a5d05400c", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,8 @@\n+2014-06-04  Ian Lance Taylor  <iant@google.com>\n+\n+\t* go-gcc.cc (Gcc_backend::implicit_variable): Add is_common and\n+\talignment parameters.  Permit init parameter to be NULL.\n+\n 2014-06-02  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* go-gcc.cc: Include builtins.h."}, {"sha": "df4b6708bfa32576662b6e7ed940da4863bce51e", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 23, "deletions": 4, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -389,7 +389,8 @@ class Gcc_backend : public Backend\n \t\t     Location, Bstatement**);\n \n   Bvariable*\n-  implicit_variable(const std::string&, Btype*, Bexpression*, bool);\n+  implicit_variable(const std::string&, Btype*, Bexpression*, bool, bool,\n+\t\t    size_t);\n \n   Bvariable*\n   immutable_struct(const std::string&, bool, bool, Btype*, Location);\n@@ -2497,10 +2498,15 @@ Gcc_backend::temporary_variable(Bfunction* function, Bblock* bblock,\n \n Bvariable*\n Gcc_backend::implicit_variable(const std::string& name, Btype* type,\n-\t\t\t       Bexpression* init, bool is_constant)\n+\t\t\t       Bexpression* init, bool is_constant,\n+\t\t\t       bool is_common, size_t alignment)\n {\n   tree type_tree = type->get_tree();\n-  tree init_tree = init->get_tree();\n+  tree init_tree;\n+  if (init == NULL)\n+    init_tree = NULL_TREE;\n+  else\n+    init_tree = init->get_tree();\n   if (type_tree == error_mark_node || init_tree == error_mark_node)\n     return this->error_variable();\n \n@@ -2510,12 +2516,25 @@ Gcc_backend::implicit_variable(const std::string& name, Btype* type,\n   TREE_PUBLIC(decl) = 0;\n   TREE_STATIC(decl) = 1;\n   DECL_ARTIFICIAL(decl) = 1;\n-  if (is_constant)\n+  if (is_common)\n+    {\n+      DECL_COMMON(decl) = 1;\n+      TREE_PUBLIC(decl) = 1;\n+      gcc_assert(init_tree == NULL_TREE);\n+    }\n+  else if (is_constant)\n     {\n       TREE_READONLY(decl) = 1;\n       TREE_CONSTANT(decl) = 1;\n     }\n   DECL_INITIAL(decl) = init_tree;\n+\n+  if (alignment != 0)\n+    {\n+      DECL_ALIGN(decl) = alignment * BITS_PER_UNIT;\n+      DECL_USER_ALIGN(decl) = 1;\n+    }\n+\n   rest_of_decl_compilation(decl, 1, 0);\n \n   return new Bvariable(decl);"}, {"sha": "323ac2e75b510c4f6a3d15b5e4528f34b8513f95", "filename": "gcc/go/gofrontend/backend.h", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Fbackend.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Fbackend.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fbackend.h?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -544,16 +544,24 @@ class Backend\n \t\t     bool address_is_taken, Location location,\n \t\t     Bstatement** pstatement) = 0;\n \n-  // Create an implicit variable that is compiler-defined.  This is used when\n-  // generating GC root variables and storing the values of a slice constructor.\n-  // NAME is the name of the variable, either gc# for GC roots or C# for slice\n-  // initializers.  TYPE is the type of the implicit variable with an initial\n-  // value INIT.  IS_CONSTANT is true if the implicit variable should be treated\n-  // like it is immutable.  For slice initializers, if the values must be copied\n-  // to the heap, the variable IS_CONSTANT.\n+  // Create an implicit variable that is compiler-defined.  This is\n+  // used when generating GC root variables, when storing the values\n+  // of a slice constructor, and for the zero value of types.  NAME is\n+  // the name of the variable, either gc# for GC roots or C# for slice\n+  // initializers.  TYPE is the type of the implicit variable with an\n+  // initial value INIT.  IS_CONSTANT is true if the implicit variable\n+  // should be treated like it is immutable.  For slice initializers,\n+  // if the values must be copied to the heap, the variable\n+  // IS_CONSTANT.  IS_COMMON is true if the implicit variable should\n+  // be treated as a common variable (multiple definitions with\n+  // different sizes permitted in different object files, all merged\n+  // into the largest definition at link time); this will be true for\n+  // the zero value.  If IS_COMMON is true, INIT will be NULL, and the\n+  // variable should be initialized to all zeros.  If ALIGNMENT is not\n+  // zero, it is the desired alignment of the variable.\n   virtual Bvariable*\n   implicit_variable(const std::string& name, Btype* type, Bexpression* init,\n-\t\t    bool is_constant) = 0;\n+\t\t    bool is_constant, bool is_common, size_t alignment) = 0;\n \n   // Create a named immutable initialized data structure.  This is\n   // used for type descriptors, map descriptors, and function"}, {"sha": "c481bc59c8fbca0eae8d0d399a2cdd0c912ac69d", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -4105,7 +4105,8 @@ Unary_expression::do_get_backend(Translate_context* context)\n \t\t\t      && !context->is_const());\n \t    }\n \t  Bvariable* implicit =\n-\t    gogo->backend()->implicit_variable(buf, btype, bexpr, copy_to_heap);\n+\t    gogo->backend()->implicit_variable(buf, btype, bexpr, copy_to_heap,\n+\t\t\t\t\t       false, 0);\n \t  bexpr = gogo->backend()->var_expression(implicit, loc);\n \t}\n       else if ((this->expr_->is_composite_literal()\n@@ -7598,7 +7599,7 @@ Builtin_call_expression::do_numeric_constant_value(Numeric_constant* nc) const\n       if (this->seen_)\n         return false;\n \n-      unsigned int ret;\n+      unsigned long ret;\n       if (this->code_ == BUILTIN_SIZEOF)\n \t{\n           this->seen_ = true;\n@@ -7626,8 +7627,7 @@ Builtin_call_expression::do_numeric_constant_value(Numeric_constant* nc) const\n       else\n \tgo_unreachable();\n \n-      nc->set_unsigned_long(Type::lookup_integer_type(\"uintptr\"),\n-\t\t\t    static_cast<unsigned long>(ret));\n+      nc->set_unsigned_long(Type::lookup_integer_type(\"uintptr\"), ret);\n       return true;\n     }\n   else if (this->code_ == BUILTIN_OFFSETOF)"}, {"sha": "b9c8fa95e02c3bc7a88dfda155c90ae7919aa026", "filename": "gcc/go/gofrontend/gogo.cc", "status": "modified", "additions": 88, "deletions": 1, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Fgogo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.cc?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -41,6 +41,9 @@ Gogo::Gogo(Backend* backend, Linemap* linemap, int, int pointer_size)\n     pkgpath_(),\n     pkgpath_symbol_(),\n     prefix_(),\n+    zero_value_(NULL),\n+    zero_value_size_(0),\n+    zero_value_align_(0),\n     pkgpath_set_(false),\n     pkgpath_from_option_(false),\n     prefix_from_option_(false),\n@@ -575,6 +578,88 @@ Gogo::current_bindings() const\n     return this->globals_;\n }\n \n+// Return the special variable used as the zero value of types.\n+\n+Named_object*\n+Gogo::zero_value(Type *type)\n+{\n+  if (this->zero_value_ == NULL)\n+    {\n+      Location bloc = Linemap::predeclared_location();\n+\n+      // We will change the type later, when we know the size.\n+      Type* byte_type = this->lookup_global(\"byte\")->type_value();\n+\n+      mpz_t val;\n+      mpz_init_set_ui(val, 0);\n+      Expression* zero = Expression::make_integer(&val, NULL, bloc);\n+      mpz_clear(val);\n+\n+      Type* array_type = Type::make_array_type(byte_type, zero);\n+\n+      Variable* var = new Variable(array_type, NULL, true, false, false, bloc);\n+      this->zero_value_ = Named_object::make_variable(\"go$zerovalue\", NULL,\n+\t\t\t\t\t\t      var);\n+    }\n+\n+  // The zero value will be the maximum required size.\n+  unsigned long size;\n+  bool ok = type->backend_type_size(this, &size);\n+  if (!ok) {\n+    go_assert(saw_errors());\n+    size = 4;\n+  }\n+  if (size > this->zero_value_size_)\n+    this->zero_value_size_ = size;\n+\n+  unsigned long align;\n+  ok = type->backend_type_align(this, &align);\n+  if (!ok) {\n+    go_assert(saw_errors());\n+    align = 4;\n+  }\n+  if (align > this->zero_value_align_)\n+    this->zero_value_align_ = align;\n+\n+  return this->zero_value_;\n+}\n+\n+// Return whether V is the zero value variable.\n+\n+bool\n+Gogo::is_zero_value(Variable* v) const\n+{\n+  return this->zero_value_ != NULL && this->zero_value_->var_value() == v;\n+}\n+\n+// Return the backend variable for the special zero value, or NULL if\n+// it is not needed.\n+\n+Bvariable*\n+Gogo::backend_zero_value()\n+{\n+  if (this->zero_value_ == NULL)\n+    return NULL;\n+\n+  Type* byte_type = this->lookup_global(\"byte\")->type_value();\n+  Btype* bbtype_type = byte_type->get_backend(this);\n+\n+  Type* int_type = this->lookup_global(\"int\")->type_value();\n+  Btype* bint_type = int_type->get_backend(this);\n+\n+  mpz_t val;\n+  mpz_init_set_ui(val, this->zero_value_size_);\n+  Bexpression* blength =\n+    this->backend()->integer_constant_expression(bint_type, val);\n+  mpz_clear(val);\n+\n+  Btype* barray_type = this->backend()->array_type(bbtype_type, blength);\n+\n+  return this->backend()->implicit_variable(this->zero_value_->name(),\n+\t\t\t\t\t    barray_type, NULL, true, true,\n+\t\t\t\t\t    this->zero_value_align_);\n+}\n+\n // Add statements to INIT_STMTS which run the initialization\n // functions for imported packages.  This is only used for the \"main\"\n // package.\n@@ -6078,7 +6163,9 @@ Variable::get_backend_variable(Gogo* gogo, Named_object* function,\n \t  Btype* btype = type->get_backend(gogo);\n \n \t  Bvariable* bvar;\n-\t  if (this->is_global_)\n+\t  if (gogo->is_zero_value(this))\n+\t    bvar = gogo->backend_zero_value();\n+\t  else if (this->is_global_)\n \t    bvar = backend->global_variable((package == NULL\n \t\t\t\t\t     ? gogo->package_name()\n \t\t\t\t\t     : package->package_name()),"}, {"sha": "700b09207a17a9e21e487ef01574160a535f312c", "filename": "gcc/go/gofrontend/gogo.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Fgogo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo.h?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -591,6 +591,20 @@ class Gogo\n   named_types_are_converted() const\n   { return this->named_types_are_converted_; }\n \n+  // Return the variable to use for the zero value of TYPE.  All types\n+  // shared the same zero value, and we make sure that it is large\n+  // enough.\n+  Named_object*\n+  zero_value(Type *type);\n+\n+  // Return whether a variable is the zero value variable.\n+  bool\n+  is_zero_value(Variable* v) const;\n+\n+  // Create the zero value variable.\n+  Bvariable*\n+  backend_zero_value();\n+\n   // Write out the global values.\n   void\n   write_globals();\n@@ -727,6 +741,12 @@ class Gogo\n   std::string pkgpath_symbol_;\n   // The prefix to use for symbols, from the -fgo-prefix option.\n   std::string prefix_;\n+  // The special zero value variable.\n+  Named_object* zero_value_;\n+  // The size of the zero value variable.\n+  unsigned long zero_value_size_;\n+  // The alignment of the zero value variable, in bytes.\n+  unsigned long zero_value_align_;\n   // Whether pkgpath_ has been set.\n   bool pkgpath_set_;\n   // Whether an explicit package path was set by -fgo-pkgpath."}, {"sha": "eba224b4266e030ed238fdad61420e0ad65d0394", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 24, "deletions": 14, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1519,7 +1519,7 @@ Type::make_type_descriptor_type()\n       // The type descriptor type.\n \n       Struct_type* type_descriptor_type =\n-\tType::make_builtin_struct_type(10,\n+\tType::make_builtin_struct_type(11,\n \t\t\t\t       \"Kind\", uint8_type,\n \t\t\t\t       \"align\", uint8_type,\n \t\t\t\t       \"fieldAlign\", uint8_type,\n@@ -1530,7 +1530,8 @@ Type::make_type_descriptor_type()\n \t\t\t\t       \"string\", pointer_string_type,\n \t\t\t\t       \"\", pointer_uncommon_type,\n \t\t\t\t       \"ptrToThis\",\n-\t\t\t\t       pointer_type_descriptor_type);\n+\t\t\t\t       pointer_type_descriptor_type,\n+\t\t\t\t       \"zero\", unsafe_pointer_type);\n \n       Named_type* named = Type::make_builtin_named_type(\"commonType\",\n \t\t\t\t\t\t\ttype_descriptor_type);\n@@ -2049,6 +2050,15 @@ Type::type_descriptor_constructor(Gogo* gogo, int runtime_type_kind,\n       vals->push_back(Expression::make_type_descriptor(pt, bloc));\n     }\n \n+  ++p;\n+  go_assert(p->is_field_name(\"zero\"));\n+  Expression* z = Expression::make_var_reference(gogo->zero_value(this), bloc);\n+  z = Expression::make_unary(OPERATOR_AND, z, bloc);\n+  Type* void_type = Type::make_void_type();\n+  Type* unsafe_pointer_type = Type::make_pointer_type(void_type);\n+  z = Expression::make_cast(unsafe_pointer_type, z, bloc);\n+  vals->push_back(z);\n+\n   ++p;\n   go_assert(p == fields->end());\n \n@@ -2382,13 +2392,13 @@ Type::is_backend_type_size_known(Gogo* gogo)\n // the backend.\n \n bool\n-Type::backend_type_size(Gogo* gogo, unsigned int *psize)\n+Type::backend_type_size(Gogo* gogo, unsigned long *psize)\n {\n   if (!this->is_backend_type_size_known(gogo))\n     return false;\n   Btype* bt = this->get_backend_placeholder(gogo);\n   size_t size = gogo->backend()->type_size(bt);\n-  *psize = static_cast<unsigned int>(size);\n+  *psize = static_cast<unsigned long>(size);\n   if (*psize != size)\n     return false;\n   return true;\n@@ -2398,13 +2408,13 @@ Type::backend_type_size(Gogo* gogo, unsigned int *psize)\n // the alignment in bytes and return true.  Otherwise, return false.\n \n bool\n-Type::backend_type_align(Gogo* gogo, unsigned int *palign)\n+Type::backend_type_align(Gogo* gogo, unsigned long *palign)\n {\n   if (!this->is_backend_type_size_known(gogo))\n     return false;\n   Btype* bt = this->get_backend_placeholder(gogo);\n   size_t align = gogo->backend()->type_alignment(bt);\n-  *palign = static_cast<unsigned int>(align);\n+  *palign = static_cast<unsigned long>(align);\n   if (*palign != align)\n     return false;\n   return true;\n@@ -2414,13 +2424,13 @@ Type::backend_type_align(Gogo* gogo, unsigned int *palign)\n // field.\n \n bool\n-Type::backend_type_field_align(Gogo* gogo, unsigned int *palign)\n+Type::backend_type_field_align(Gogo* gogo, unsigned long *palign)\n {\n   if (!this->is_backend_type_size_known(gogo))\n     return false;\n   Btype* bt = this->get_backend_placeholder(gogo);\n   size_t a = gogo->backend()->type_field_alignment(bt);\n-  *palign = static_cast<unsigned int>(a);\n+  *palign = static_cast<unsigned long>(a);\n   if (*palign != a)\n     return false;\n   return true;\n@@ -4595,7 +4605,7 @@ Struct_type::do_compare_is_identity(Gogo* gogo)\n   const Struct_field_list* fields = this->fields_;\n   if (fields == NULL)\n     return true;\n-  unsigned int offset = 0;\n+  unsigned long offset = 0;\n   for (Struct_field_list::const_iterator pf = fields->begin();\n        pf != fields->end();\n        ++pf)\n@@ -4606,7 +4616,7 @@ Struct_type::do_compare_is_identity(Gogo* gogo)\n       if (!pf->type()->compare_is_identity(gogo))\n \treturn false;\n \n-      unsigned int field_align;\n+      unsigned long field_align;\n       if (!pf->type()->backend_type_align(gogo, &field_align))\n \treturn false;\n       if ((offset & (field_align - 1)) != 0)\n@@ -4617,13 +4627,13 @@ Struct_type::do_compare_is_identity(Gogo* gogo)\n \t  return false;\n \t}\n \n-      unsigned int field_size;\n+      unsigned long field_size;\n       if (!pf->type()->backend_type_size(gogo, &field_size))\n \treturn false;\n       offset += field_size;\n     }\n \n-  unsigned int struct_size;\n+  unsigned long struct_size;\n   if (!this->backend_type_size(gogo, &struct_size))\n     return false;\n   if (offset != struct_size)\n@@ -5620,8 +5630,8 @@ Array_type::do_compare_is_identity(Gogo* gogo)\n     return false;\n \n   // If there is any padding, then we can't use memcmp.\n-  unsigned int size;\n-  unsigned int align;\n+  unsigned long size;\n+  unsigned long align;\n   if (!this->element_type_->backend_type_size(gogo, &size)\n       || !this->element_type_->backend_type_align(gogo, &align))\n     return false;"}, {"sha": "6fa65133a0ef609cb5425f6f7bcc0f6d3e5e97ac", "filename": "gcc/go/gofrontend/types.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/gcc%2Fgo%2Fgofrontend%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.h?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -925,18 +925,18 @@ class Type\n   // in bytes and return true.  Otherwise, return false.  This queries\n   // the backend.\n   bool\n-  backend_type_size(Gogo*, unsigned int* psize);\n+  backend_type_size(Gogo*, unsigned long* psize);\n \n   // If the alignment of the type can be determined, set *PALIGN to\n   // the alignment in bytes and return true.  Otherwise, return false.\n   bool\n-  backend_type_align(Gogo*, unsigned int* palign);\n+  backend_type_align(Gogo*, unsigned long* palign);\n \n   // If the alignment of a struct field of this type can be\n   // determined, set *PALIGN to the alignment in bytes and return\n   // true.  Otherwise, return false.\n   bool\n-  backend_type_field_align(Gogo*, unsigned int* palign);\n+  backend_type_field_align(Gogo*, unsigned long* palign);\n \n   // Whether the backend size is known.\n   bool"}, {"sha": "d789afe1d3d5b33cf582ea7c62d9a084b0f7fd00", "filename": "libgo/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMERGE?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,4 +1,4 @@\n-0ddbdc3c7ce2\n+00cce3a34d7e\n \n The first line of this file holds the Mercurial revision number of the\n last merge done from the master library sources."}, {"sha": "b6be7e48867d8d5d9d6b132adc4d8960023b5cdc", "filename": "libgo/Makefile.am", "status": "modified", "additions": 19, "deletions": 2, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -196,6 +196,7 @@ toolexeclibgodebugdir = $(toolexeclibgodir)/debug\n toolexeclibgodebug_DATA = \\\n \tdebug/dwarf.gox \\\n \tdebug/elf.gox \\\n+\tdebug/goobj.gox \\\n \tdebug/gosym.gox \\\n \tdebug/macho.gox \\\n \tdebug/pe.gox\n@@ -998,6 +999,7 @@ go_sync_files = \\\n \tgo/sync/cond.go \\\n \tgo/sync/mutex.go \\\n \tgo/sync/once.go \\\n+\tgo/sync/pool.go \\\n \tgo/sync/race0.go \\\n \tgo/sync/runtime.go \\\n \tgo/sync/rwmutex.go \\\n@@ -1124,7 +1126,8 @@ go_crypto_cipher_files = \\\n \tgo/crypto/cipher/ctr.go \\\n \tgo/crypto/cipher/gcm.go \\\n \tgo/crypto/cipher/io.go \\\n-\tgo/crypto/cipher/ofb.go\n+\tgo/crypto/cipher/ofb.go \\\n+\tgo/crypto/cipher/xor.go\n go_crypto_des_files = \\\n \tgo/crypto/des/block.go \\\n \tgo/crypto/des/cipher.go \\\n@@ -1209,6 +1212,8 @@ go_debug_dwarf_files = \\\n go_debug_elf_files = \\\n \tgo/debug/elf/elf.go \\\n \tgo/debug/elf/file.go\n+go_debug_goobj_files = \\\n+\tgo/debug/goobj/read.go\n go_debug_gosym_files = \\\n \tgo/debug/gosym/pclntab.go \\\n \tgo/debug/gosym/symtab.go\n@@ -1248,6 +1253,7 @@ go_encoding_hex_files = \\\n go_encoding_json_files = \\\n \tgo/encoding/json/decode.go \\\n \tgo/encoding/json/encode.go \\\n+\tgo/encoding/json/fold.go \\\n \tgo/encoding/json/indent.go \\\n \tgo/encoding/json/scanner.go \\\n \tgo/encoding/json/stream.go \\\n@@ -1363,7 +1369,6 @@ go_index_suffixarray_files = \\\n \tgo/index/suffixarray/suffixarray.go\n \n go_io_ioutil_files = \\\n-\tgo/io/ioutil/blackhole.go \\\n \tgo/io/ioutil/ioutil.go \\\n \tgo/io/ioutil/tempfile.go\n \n@@ -1867,6 +1872,7 @@ libgo_go_objs = \\\n \tdatabase/sql/driver.lo \\\n \tdebug/dwarf.lo \\\n \tdebug/elf.lo \\\n+\tdebug/goobj.lo \\\n \tdebug/gosym.lo \\\n \tdebug/macho.lo \\\n \tdebug/pe.lo \\\n@@ -2594,6 +2600,15 @@ debug/elf/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: debug/elf/check\n \n+@go_include@ debug/goobj.lo.dep\n+debug/goobj.lo.dep: $(go_debug_goobj_files)\n+\t$(BUILDDEPS)\n+debug/goobj.lo: $(go_debug_goobj_files)\n+\t$(BUILDPACKAGE)\n+debug/goobj/check: $(CHECK_DEPS)\n+\t@$(CHECK)\n+.PHONY: debug/goobj/check\n+\n @go_include@ debug/gosym.lo.dep\n debug/gosym.lo.dep: $(go_debug_gosym_files)\n \t$(BUILDDEPS)\n@@ -3412,6 +3427,8 @@ debug/dwarf.gox: debug/dwarf.lo\n \t$(BUILDGOX)\n debug/elf.gox: debug/elf.lo\n \t$(BUILDGOX)\n+debug/goobj.gox: debug/goobj.lo\n+\t$(BUILDGOX)\n debug/gosym.gox: debug/gosym.lo\n \t$(BUILDGOX)\n debug/macho.gox: debug/macho.lo"}, {"sha": "eb731e43912461ce31cbf22efec9454ec065e284", "filename": "libgo/Makefile.in", "status": "modified", "additions": 29, "deletions": 11, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -147,15 +147,15 @@ am__DEPENDENCIES_2 = bufio.lo bytes.lo bytes/index.lo crypto.lo \\\n \tcrypto/rc4.lo crypto/rsa.lo crypto/sha1.lo crypto/sha256.lo \\\n \tcrypto/sha512.lo crypto/subtle.lo crypto/tls.lo crypto/x509.lo \\\n \tcrypto/x509/pkix.lo database/sql.lo database/sql/driver.lo \\\n-\tdebug/dwarf.lo debug/elf.lo debug/gosym.lo debug/macho.lo \\\n-\tdebug/pe.lo encoding/ascii85.lo encoding/asn1.lo \\\n-\tencoding/base32.lo encoding/base64.lo encoding/binary.lo \\\n-\tencoding/csv.lo encoding/gob.lo encoding/hex.lo \\\n-\tencoding/json.lo encoding/pem.lo encoding/xml.lo exp/proxy.lo \\\n-\texp/terminal.lo html/template.lo go/ast.lo go/build.lo \\\n-\tgo/doc.lo go/format.lo go/parser.lo go/printer.lo \\\n-\tgo/scanner.lo go/token.lo hash/adler32.lo hash/crc32.lo \\\n-\thash/crc64.lo hash/fnv.lo net/http/cgi.lo \\\n+\tdebug/dwarf.lo debug/elf.lo debug/goobj.lo debug/gosym.lo \\\n+\tdebug/macho.lo debug/pe.lo encoding/ascii85.lo \\\n+\tencoding/asn1.lo encoding/base32.lo encoding/base64.lo \\\n+\tencoding/binary.lo encoding/csv.lo encoding/gob.lo \\\n+\tencoding/hex.lo encoding/json.lo encoding/pem.lo \\\n+\tencoding/xml.lo exp/proxy.lo exp/terminal.lo html/template.lo \\\n+\tgo/ast.lo go/build.lo go/doc.lo go/format.lo go/parser.lo \\\n+\tgo/printer.lo go/scanner.lo go/token.lo hash/adler32.lo \\\n+\thash/crc32.lo hash/crc64.lo hash/fnv.lo net/http/cgi.lo \\\n \tnet/http/cookiejar.lo net/http/fcgi.lo net/http/httptest.lo \\\n \tnet/http/httputil.lo net/http/pprof.lo image/color.lo \\\n \timage/color/palette.lo image/draw.lo image/gif.lo \\\n@@ -588,6 +588,7 @@ toolexeclibgodebugdir = $(toolexeclibgodir)/debug\n toolexeclibgodebug_DATA = \\\n \tdebug/dwarf.gox \\\n \tdebug/elf.gox \\\n+\tdebug/goobj.gox \\\n \tdebug/gosym.gox \\\n \tdebug/macho.gox \\\n \tdebug/pe.gox\n@@ -1168,6 +1169,7 @@ go_sync_files = \\\n \tgo/sync/cond.go \\\n \tgo/sync/mutex.go \\\n \tgo/sync/once.go \\\n+\tgo/sync/pool.go \\\n \tgo/sync/race0.go \\\n \tgo/sync/runtime.go \\\n \tgo/sync/rwmutex.go \\\n@@ -1276,7 +1278,8 @@ go_crypto_cipher_files = \\\n \tgo/crypto/cipher/ctr.go \\\n \tgo/crypto/cipher/gcm.go \\\n \tgo/crypto/cipher/io.go \\\n-\tgo/crypto/cipher/ofb.go\n+\tgo/crypto/cipher/ofb.go \\\n+\tgo/crypto/cipher/xor.go\n \n go_crypto_des_files = \\\n \tgo/crypto/des/block.go \\\n@@ -1378,6 +1381,9 @@ go_debug_elf_files = \\\n \tgo/debug/elf/elf.go \\\n \tgo/debug/elf/file.go\n \n+go_debug_goobj_files = \\\n+\tgo/debug/goobj/read.go\n+\n go_debug_gosym_files = \\\n \tgo/debug/gosym/pclntab.go \\\n \tgo/debug/gosym/symtab.go\n@@ -1427,6 +1433,7 @@ go_encoding_hex_files = \\\n go_encoding_json_files = \\\n \tgo/encoding/json/decode.go \\\n \tgo/encoding/json/encode.go \\\n+\tgo/encoding/json/fold.go \\\n \tgo/encoding/json/indent.go \\\n \tgo/encoding/json/scanner.go \\\n \tgo/encoding/json/stream.go \\\n@@ -1555,7 +1562,6 @@ go_index_suffixarray_files = \\\n \tgo/index/suffixarray/suffixarray.go\n \n go_io_ioutil_files = \\\n-\tgo/io/ioutil/blackhole.go \\\n \tgo/io/ioutil/ioutil.go \\\n \tgo/io/ioutil/tempfile.go\n \n@@ -1937,6 +1943,7 @@ libgo_go_objs = \\\n \tdatabase/sql/driver.lo \\\n \tdebug/dwarf.lo \\\n \tdebug/elf.lo \\\n+\tdebug/goobj.lo \\\n \tdebug/gosym.lo \\\n \tdebug/macho.lo \\\n \tdebug/pe.lo \\\n@@ -4971,6 +4978,15 @@ debug/elf/check: $(CHECK_DEPS)\n \t@$(CHECK)\n .PHONY: debug/elf/check\n \n+@go_include@ debug/goobj.lo.dep\n+debug/goobj.lo.dep: $(go_debug_goobj_files)\n+\t$(BUILDDEPS)\n+debug/goobj.lo: $(go_debug_goobj_files)\n+\t$(BUILDPACKAGE)\n+debug/goobj/check: $(CHECK_DEPS)\n+\t@$(CHECK)\n+.PHONY: debug/goobj/check\n+\n @go_include@ debug/gosym.lo.dep\n debug/gosym.lo.dep: $(go_debug_gosym_files)\n \t$(BUILDDEPS)\n@@ -5781,6 +5797,8 @@ debug/dwarf.gox: debug/dwarf.lo\n \t$(BUILDGOX)\n debug/elf.gox: debug/elf.lo\n \t$(BUILDGOX)\n+debug/goobj.gox: debug/goobj.lo\n+\t$(BUILDGOX)\n debug/gosym.gox: debug/gosym.lo\n \t$(BUILDGOX)\n debug/macho.gox: debug/macho.lo"}, {"sha": "ed333f3ea4f146318c63547d8f8c5efc15749c77", "filename": "libgo/go/archive/tar/tar_test.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Farchive%2Ftar%2Ftar_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Farchive%2Ftar%2Ftar_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Ftar%2Ftar_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -36,6 +36,10 @@ func TestFileInfoHeader(t *testing.T) {\n \tif g, e := h.ModTime, fi.ModTime(); !g.Equal(e) {\n \t\tt.Errorf(\"ModTime = %v; want %v\", g, e)\n \t}\n+\t// FileInfoHeader should error when passing nil FileInfo\n+\tif _, err := FileInfoHeader(nil, \"\"); err == nil {\n+\t\tt.Fatalf(\"Expected error when passing nil to FileInfoHeader\")\n+\t}\n }\n \n func TestFileInfoHeaderDir(t *testing.T) {"}, {"sha": "80ee03006f09691740f8d8ccd4c6b217ab718120", "filename": "libgo/go/archive/zip/reader.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Farchive%2Fzip%2Freader.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Farchive%2Fzip%2Freader.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Farchive%2Fzip%2Freader.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -253,7 +253,7 @@ func readDirectoryHeader(f *File, r io.Reader) error {\n \t\t\t}\n \t\t\tif tag == zip64ExtraId {\n \t\t\t\t// update directory values from the zip64 extra block\n-\t\t\t\teb := readBuf(b)\n+\t\t\t\teb := readBuf(b[:size])\n \t\t\t\tif len(eb) >= 8 {\n \t\t\t\t\tf.UncompressedSize64 = eb.uint64()\n \t\t\t\t}"}, {"sha": "5cd030714de7cc6f404207071643978a577697b6", "filename": "libgo/go/bufio/bufio_test.go", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fbufio%2Fbufio_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fbufio%2Fbufio_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fbufio%2Fbufio_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -139,7 +139,7 @@ var bufreaders = []bufReader{\n const minReadBufferSize = 16\n \n var bufsizes = []int{\n-\tminReadBufferSize, 23, 32, 46, 64, 93, 128, 1024, 4096,\n+\t0, minReadBufferSize, 23, 32, 46, 64, 93, 128, 1024, 4096,\n }\n \n func TestReader(t *testing.T) {\n@@ -259,6 +259,38 @@ func TestUnreadRune(t *testing.T) {\n \t}\n }\n \n+func TestUnreadByte(t *testing.T) {\n+\twant := \"Hello, world\"\n+\tgot := \"\"\n+\tsegments := []string{\"Hello, \", \"world\"}\n+\tr := NewReader(&StringReader{data: segments})\n+\t// Normal execution.\n+\tfor {\n+\t\tb1, err := r.ReadByte()\n+\t\tif err != nil {\n+\t\t\tif err != io.EOF {\n+\t\t\t\tt.Fatal(\"unexpected EOF\")\n+\t\t\t}\n+\t\t\tbreak\n+\t\t}\n+\t\tgot += string(b1)\n+\t\t// Put it back and read it again\n+\t\tif err = r.UnreadByte(); err != nil {\n+\t\t\tt.Fatalf(\"unexpected error on UnreadByte: %v\", err)\n+\t\t}\n+\t\tb2, err := r.ReadByte()\n+\t\tif err != nil {\n+\t\t\tt.Fatalf(\"unexpected error reading after unreading: %v\", err)\n+\t\t}\n+\t\tif b1 != b2 {\n+\t\t\tt.Fatalf(\"incorrect byte after unread: got %c wanted %c\", b1, b2)\n+\t\t}\n+\t}\n+\tif got != want {\n+\t\tt.Errorf(\"got=%q want=%q\", got, want)\n+\t}\n+}\n+\n // Test that UnreadRune fails if the preceding operation was not a ReadRune.\n func TestUnreadRuneError(t *testing.T) {\n \tbuf := make([]byte, 3) // All runes in this test are 3 bytes long\n@@ -516,6 +548,9 @@ func TestPeek(t *testing.T) {\n \tif s, err := buf.Peek(4); string(s) != \"abcd\" || err != nil {\n \t\tt.Fatalf(\"want %q got %q, err=%v\", \"abcd\", string(s), err)\n \t}\n+\tif _, err := buf.Peek(-1); err != ErrNegativeCount {\n+\t\tt.Fatalf(\"want ErrNegativeCount got %v\", err)\n+\t}\n \tif _, err := buf.Peek(32); err != ErrBufferFull {\n \t\tt.Fatalf(\"want ErrBufFull got %v\", err)\n \t}"}, {"sha": "644bf75b894336ea9f7dae7c60ecd73e840d15e4", "filename": "libgo/go/bytes/bytes.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fbytes%2Fbytes.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fbytes%2Fbytes.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fbytes%2Fbytes.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -265,8 +265,8 @@ func Fields(s []byte) [][]byte {\n \n // FieldsFunc interprets s as a sequence of UTF-8-encoded Unicode code points.\n // It splits the slice s at each run of code points c satisfying f(c) and\n-// returns a slice of subslices of s.  If no code points in s satisfy f(c), an\n-// empty slice is returned.\n+// returns a slice of subslices of s.  If all code points in s satisfy f(c), or\n+// len(s) == 0, an empty slice is returned.\n func FieldsFunc(s []byte, f func(rune) bool) [][]byte {\n \tn := 0\n \tinField := false"}, {"sha": "808655a4a48622c9d4145c6278cdb46937a47a0e", "filename": "libgo/go/bytes/bytes_test.go", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fbytes%2Fbytes_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fbytes%2Fbytes_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fbytes%2Fbytes_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1073,6 +1073,8 @@ var TitleTests = []TitleTest{\n \t{\"123a456\", \"123a456\"},\n \t{\"double-blind\", \"Double-Blind\"},\n \t{\"\u00ff\u00f8\u00fb\", \"\u0178\u00f8\u00fb\"},\n+\t{\"with_underscore\", \"With_underscore\"},\n+\t{\"unicode \\xe2\\x80\\xa8 line separator\", \"Unicode \\xe2\\x80\\xa8 Line Separator\"},\n }\n \n func TestTitle(t *testing.T) {\n@@ -1160,6 +1162,24 @@ func TestBufferTruncateOutOfRange(t *testing.T) {\n \tb.Truncate(20)\n }\n \n+var containsTests = []struct {\n+\tb, subslice []byte\n+\twant        bool\n+}{\n+\t{[]byte(\"hello\"), []byte(\"hel\"), true},\n+\t{[]byte(\"\u65e5\u672c\u8a9e\"), []byte(\"\u65e5\u672c\"), true},\n+\t{[]byte(\"hello\"), []byte(\"Hello, world\"), false},\n+\t{[]byte(\"\u6771\u4eac\"), []byte(\"\u4eac\u6771\"), false},\n+}\n+\n+func TestContains(t *testing.T) {\n+\tfor _, tt := range containsTests {\n+\t\tif got := Contains(tt.b, tt.subslice); got != tt.want {\n+\t\t\tt.Errorf(\"Contains(%q, %q) = %v, want %v\", tt.b, tt.subslice, got, tt.want)\n+\t\t}\n+\t}\n+}\n+\n var makeFieldsInput = func() []byte {\n \tx := make([]byte, 1<<20)\n \t// Input is ~10% space, ~10% 2-byte UTF-8, rest ASCII non-space."}, {"sha": "63522374ee0403f81210f9a6381578e974551527", "filename": "libgo/go/bytes/compare_test.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fbytes%2Fcompare_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fbytes%2Fcompare_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fbytes%2Fcompare_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n package bytes_test\n \n import ("}, {"sha": "9be3d534954be4395260a02eb712fadbc81aa3a3", "filename": "libgo/go/compress/flate/fixedhuff.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcompress%2Fflate%2Ffixedhuff.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcompress%2Fflate%2Ffixedhuff.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fflate%2Ffixedhuff.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n package flate\n \n // autogenerated by gen.go, DO NOT EDIT"}, {"sha": "bbe4c5a16fbc9aad762409c610d8233e0dd1f494", "filename": "libgo/go/compress/flate/inflate.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcompress%2Fflate%2Finflate.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcompress%2Fflate%2Finflate.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcompress%2Fflate%2Finflate.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -180,7 +180,7 @@ func (h *huffmanDecoder) init(bits []int) bool {\n // the NewReader will introduce its own buffering.\n type Reader interface {\n \tio.Reader\n-\tReadByte() (c byte, err error)\n+\tio.ByteReader\n }\n \n // Decompress state."}, {"sha": "1cc7e311bb896996baa9a9f55e129adb78c23502", "filename": "libgo/go/container/list/list.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcontainer%2Flist%2Flist.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcontainer%2Flist%2Flist.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcontainer%2Flist%2Flist.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -65,7 +65,7 @@ func New() *List { return new(List).Init() }\n // The complexity is O(1).\n func (l *List) Len() int { return l.len }\n \n-// Front returns the first element of list l or nil\n+// Front returns the first element of list l or nil.\n func (l *List) Front() *Element {\n \tif l.len == 0 {\n \t\treturn nil"}, {"sha": "df06c423fe5b7dc558861a6e3848c32a58100e84", "filename": "libgo/go/container/list/list_test.go", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcontainer%2Flist%2Flist_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcontainer%2Flist%2Flist_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcontainer%2Flist%2Flist_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -285,3 +285,42 @@ func TestMove(t *testing.T) {\n \tcheckListPointers(t, l, []*Element{e1, e3, e2, e4})\n \te1, e2, e3, e4 = e1, e3, e2, e4\n }\n+\n+// Test PushFront, PushBack, PushFrontList, PushBackList with uninitialized List\n+func TestZeroList(t *testing.T) {\n+\tvar l1 = new(List)\n+\tl1.PushFront(1)\n+\tcheckList(t, l1, []interface{}{1})\n+\n+\tvar l2 = new(List)\n+\tl2.PushBack(1)\n+\tcheckList(t, l2, []interface{}{1})\n+\n+\tvar l3 = new(List)\n+\tl3.PushFrontList(l1)\n+\tcheckList(t, l3, []interface{}{1})\n+\n+\tvar l4 = new(List)\n+\tl4.PushBackList(l2)\n+\tcheckList(t, l4, []interface{}{1})\n+}\n+\n+// Test that a list l is not modified when calling InsertBefore with a mark that is not an element of l.\n+func TestInsertBeforeUnknownMark(t *testing.T) {\n+\tvar l List\n+\tl.PushBack(1)\n+\tl.PushBack(2)\n+\tl.PushBack(3)\n+\tl.InsertBefore(1, new(Element))\n+\tcheckList(t, &l, []interface{}{1, 2, 3})\n+}\n+\n+// Test that a list l is not modified when calling InsertAfter with a mark that is not an element of l.\n+func TestInsertAfterUnknownMark(t *testing.T) {\n+\tvar l List\n+\tl.PushBack(1)\n+\tl.PushBack(2)\n+\tl.PushBack(3)\n+\tl.InsertAfter(1, new(Element))\n+\tcheckList(t, &l, []interface{}{1, 2, 3})\n+}"}, {"sha": "552f0e24b55b964635c24a147c40c59d4b1d5522", "filename": "libgo/go/container/ring/ring_test.go", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcontainer%2Fring%2Fring_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcontainer%2Fring%2Fring_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcontainer%2Fring%2Fring_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -218,3 +218,11 @@ func TestLinkUnlink(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+// Test that calling Move() on an empty Ring initializes it.\n+func TestMoveEmptyRing(t *testing.T) {\n+\tvar r Ring\n+\n+\tr.Move(1)\n+\tverify(t, &r, 1, 0)\n+}"}, {"sha": "0b173a4f3f228710c832efb9b22a44ff3c1f6194", "filename": "libgo/go/crypto/cipher/benchmark_test.go", "status": "added", "additions": 139, "deletions": 0, "changes": 139, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fbenchmark_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fbenchmark_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fbenchmark_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,139 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package cipher_test\n+\n+import (\n+\t\"crypto/aes\"\n+\t\"crypto/cipher\"\n+\t\"testing\"\n+)\n+\n+func BenchmarkAESGCMSeal1K(b *testing.B) {\n+\tbuf := make([]byte, 1024)\n+\tb.SetBytes(int64(len(buf)))\n+\n+\tvar key [16]byte\n+\tvar nonce [12]byte\n+\taes, _ := aes.NewCipher(key[:])\n+\taesgcm, _ := cipher.NewGCM(aes)\n+\tvar out []byte\n+\n+\tb.ResetTimer()\n+\tfor i := 0; i < b.N; i++ {\n+\t\tout = aesgcm.Seal(out[:0], nonce[:], buf, nonce[:])\n+\t}\n+}\n+\n+func BenchmarkAESGCMOpen1K(b *testing.B) {\n+\tbuf := make([]byte, 1024)\n+\tb.SetBytes(int64(len(buf)))\n+\n+\tvar key [16]byte\n+\tvar nonce [12]byte\n+\taes, _ := aes.NewCipher(key[:])\n+\taesgcm, _ := cipher.NewGCM(aes)\n+\tvar out []byte\n+\tout = aesgcm.Seal(out[:0], nonce[:], buf, nonce[:])\n+\n+\tb.ResetTimer()\n+\tfor i := 0; i < b.N; i++ {\n+\t\t_, err := aesgcm.Open(buf[:0], nonce[:], out, nonce[:])\n+\t\tif err != nil {\n+\t\t\tb.Errorf(\"Open: %v\", err)\n+\t\t}\n+\t}\n+}\n+\n+// If we test exactly 1K blocks, we would generate exact multiples of\n+// the cipher's block size, and and the cipher stream fragments would\n+// always be wordsize aligned, whereas non-aligned is a more typical\n+// use-case.\n+const almost1K = 1024 - 5\n+\n+func BenchmarkAESCFBEncrypt1K(b *testing.B) {\n+\tbuf := make([]byte, almost1K)\n+\tb.SetBytes(int64(len(buf)))\n+\n+\tvar key [16]byte\n+\tvar iv [16]byte\n+\taes, _ := aes.NewCipher(key[:])\n+\tctr := cipher.NewCFBEncrypter(aes, iv[:])\n+\n+\tb.ResetTimer()\n+\tfor i := 0; i < b.N; i++ {\n+\t\tctr.XORKeyStream(buf, buf)\n+\t}\n+}\n+\n+func BenchmarkAESCFBDecrypt1K(b *testing.B) {\n+\tbuf := make([]byte, almost1K)\n+\tb.SetBytes(int64(len(buf)))\n+\n+\tvar key [16]byte\n+\tvar iv [16]byte\n+\taes, _ := aes.NewCipher(key[:])\n+\tctr := cipher.NewCFBDecrypter(aes, iv[:])\n+\n+\tb.ResetTimer()\n+\tfor i := 0; i < b.N; i++ {\n+\t\tctr.XORKeyStream(buf, buf)\n+\t}\n+}\n+\n+func BenchmarkAESOFB1K(b *testing.B) {\n+\tbuf := make([]byte, almost1K)\n+\tb.SetBytes(int64(len(buf)))\n+\n+\tvar key [16]byte\n+\tvar iv [16]byte\n+\taes, _ := aes.NewCipher(key[:])\n+\tctr := cipher.NewOFB(aes, iv[:])\n+\n+\tb.ResetTimer()\n+\tfor i := 0; i < b.N; i++ {\n+\t\tctr.XORKeyStream(buf, buf)\n+\t}\n+}\n+\n+func BenchmarkAESCTR1K(b *testing.B) {\n+\tbuf := make([]byte, almost1K)\n+\tb.SetBytes(int64(len(buf)))\n+\n+\tvar key [16]byte\n+\tvar iv [16]byte\n+\taes, _ := aes.NewCipher(key[:])\n+\tctr := cipher.NewCTR(aes, iv[:])\n+\n+\tb.ResetTimer()\n+\tfor i := 0; i < b.N; i++ {\n+\t\tctr.XORKeyStream(buf, buf)\n+\t}\n+}\n+\n+func BenchmarkAESCBCEncrypt1K(b *testing.B) {\n+\tbuf := make([]byte, 1024)\n+\tb.SetBytes(int64(len(buf)))\n+\n+\tvar key [16]byte\n+\tvar iv [16]byte\n+\taes, _ := aes.NewCipher(key[:])\n+\tcbc := cipher.NewCBCEncrypter(aes, iv[:])\n+\tfor i := 0; i < b.N; i++ {\n+\t\tcbc.CryptBlocks(buf, buf)\n+\t}\n+}\n+\n+func BenchmarkAESCBCDecrypt1K(b *testing.B) {\n+\tbuf := make([]byte, 1024)\n+\tb.SetBytes(int64(len(buf)))\n+\n+\tvar key [16]byte\n+\tvar iv [16]byte\n+\taes, _ := aes.NewCipher(key[:])\n+\tcbc := cipher.NewCBCDecrypter(aes, iv[:])\n+\tfor i := 0; i < b.N; i++ {\n+\t\tcbc.CryptBlocks(buf, buf)\n+\t}\n+}"}, {"sha": "9a2aece0e1b5f33020295ad6c23d931ddbac9844", "filename": "libgo/go/crypto/cipher/cbc.go", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcbc.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -49,13 +49,9 @@ func (x *cbcEncrypter) CryptBlocks(dst, src []byte) {\n \t\tpanic(\"crypto/cipher: output smaller than input\")\n \t}\n \tfor len(src) > 0 {\n-\t\tfor i := 0; i < x.blockSize; i++ {\n-\t\t\tx.iv[i] ^= src[i]\n-\t\t}\n+\t\txorBytes(x.iv, x.iv, src[:x.blockSize])\n \t\tx.b.Encrypt(x.iv, x.iv)\n-\t\tfor i := 0; i < x.blockSize; i++ {\n-\t\t\tdst[i] = x.iv[i]\n-\t\t}\n+\t\tcopy(dst, x.iv)\n \t\tsrc = src[x.blockSize:]\n \t\tdst = dst[x.blockSize:]\n \t}\n@@ -91,12 +87,9 @@ func (x *cbcDecrypter) CryptBlocks(dst, src []byte) {\n \t}\n \tfor len(src) > 0 {\n \t\tx.b.Decrypt(x.tmp, src[:x.blockSize])\n-\t\tfor i := 0; i < x.blockSize; i++ {\n-\t\t\tx.tmp[i] ^= x.iv[i]\n-\t\t\tx.iv[i] = src[i]\n-\t\t\tdst[i] = x.tmp[i]\n-\t\t}\n-\n+\t\txorBytes(x.tmp, x.tmp, x.iv)\n+\t\tcopy(x.iv, src)\n+\t\tcopy(dst, x.tmp)\n \t\tsrc = src[x.blockSize:]\n \t\tdst = dst[x.blockSize:]\n \t}"}, {"sha": "9b4eebf5b454164c794e6e166f1e2769a1c3adbd", "filename": "libgo/go/crypto/cipher/cfb.go", "status": "modified", "additions": 31, "deletions": 29, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcfb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcfb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcfb.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -8,63 +8,65 @@ package cipher\n \n type cfb struct {\n \tb       Block\n+\tnext    []byte\n \tout     []byte\n \toutUsed int\n+\n \tdecrypt bool\n }\n \n+func (x *cfb) XORKeyStream(dst, src []byte) {\n+\tfor len(src) > 0 {\n+\t\tif x.outUsed == len(x.out) {\n+\t\t\tx.b.Encrypt(x.out, x.next)\n+\t\t\tx.outUsed = 0\n+\t\t}\n+\n+\t\tif x.decrypt {\n+\t\t\t// We can precompute a larger segment of the\n+\t\t\t// keystream on decryption. This will allow\n+\t\t\t// larger batches for xor, and we should be\n+\t\t\t// able to match CTR/OFB performance.\n+\t\t\tcopy(x.next[x.outUsed:], src)\n+\t\t}\n+\t\tn := xorBytes(dst, src, x.out[x.outUsed:])\n+\t\tif !x.decrypt {\n+\t\t\tcopy(x.next[x.outUsed:], dst)\n+\t\t}\n+\t\tdst = dst[n:]\n+\t\tsrc = src[n:]\n+\t\tx.outUsed += n\n+\t}\n+}\n+\n // NewCFBEncrypter returns a Stream which encrypts with cipher feedback mode,\n // using the given Block. The iv must be the same length as the Block's block\n // size.\n func NewCFBEncrypter(block Block, iv []byte) Stream {\n-\tif len(iv) != block.BlockSize() {\n-\t\tpanic(\"cipher.NewCBFEncrypter: IV length must equal block size\")\n-\t}\n \treturn newCFB(block, iv, false)\n }\n \n // NewCFBDecrypter returns a Stream which decrypts with cipher feedback mode,\n // using the given Block. The iv must be the same length as the Block's block\n // size.\n func NewCFBDecrypter(block Block, iv []byte) Stream {\n-\tif len(iv) != block.BlockSize() {\n-\t\tpanic(\"cipher.NewCBFEncrypter: IV length must equal block size\")\n-\t}\n \treturn newCFB(block, iv, true)\n }\n \n func newCFB(block Block, iv []byte, decrypt bool) Stream {\n \tblockSize := block.BlockSize()\n \tif len(iv) != blockSize {\n-\t\treturn nil\n+\t\t// stack trace will indicate whether it was de or encryption\n+\t\tpanic(\"cipher.newCFB: IV length must equal block size\")\n \t}\n-\n \tx := &cfb{\n \t\tb:       block,\n \t\tout:     make([]byte, blockSize),\n-\t\toutUsed: 0,\n+\t\tnext:    make([]byte, blockSize),\n+\t\toutUsed: blockSize,\n \t\tdecrypt: decrypt,\n \t}\n-\tblock.Encrypt(x.out, iv)\n+\tcopy(x.next, iv)\n \n \treturn x\n }\n-\n-func (x *cfb) XORKeyStream(dst, src []byte) {\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif x.outUsed == len(x.out) {\n-\t\t\tx.b.Encrypt(x.out, x.out)\n-\t\t\tx.outUsed = 0\n-\t\t}\n-\n-\t\tif x.decrypt {\n-\t\t\tt := src[i]\n-\t\t\tdst[i] = src[i] ^ x.out[x.outUsed]\n-\t\t\tx.out[x.outUsed] = t\n-\t\t} else {\n-\t\t\tx.out[x.outUsed] ^= src[i]\n-\t\t\tdst[i] = x.out[x.outUsed]\n-\t\t}\n-\t\tx.outUsed++\n-\t}\n-}"}, {"sha": "ec708ab2be29c8fff0ce18a0f584d786a0ca13fc", "filename": "libgo/go/crypto/cipher/cfb_test.go", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcfb_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcfb_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcfb_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -19,16 +19,18 @@ func TestCFB(t *testing.T) {\n \t\treturn\n \t}\n \n-\tplaintext := []byte(\"this is the plaintext\")\n+\tplaintext := []byte(\"this is the plaintext. this is the plaintext.\")\n \tiv := make([]byte, block.BlockSize())\n \trand.Reader.Read(iv)\n \tcfb := cipher.NewCFBEncrypter(block, iv)\n \tciphertext := make([]byte, len(plaintext))\n-\tcfb.XORKeyStream(ciphertext, plaintext)\n+\tcopy(ciphertext, plaintext)\n+\tcfb.XORKeyStream(ciphertext, ciphertext)\n \n \tcfbdec := cipher.NewCFBDecrypter(block, iv)\n \tplaintextCopy := make([]byte, len(plaintext))\n-\tcfbdec.XORKeyStream(plaintextCopy, ciphertext)\n+\tcopy(plaintextCopy, ciphertext)\n+\tcfbdec.XORKeyStream(plaintextCopy, plaintextCopy)\n \n \tif !bytes.Equal(plaintextCopy, plaintext) {\n \t\tt.Errorf(\"got: %x, want: %x\", plaintextCopy, plaintext)"}, {"sha": "67afdb1e057a5637c4cf35452e11a108c089de19", "filename": "libgo/go/crypto/cipher/cipher.go", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcipher.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcipher.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fcipher.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -46,16 +46,6 @@ type BlockMode interface {\n \n // Utility routines\n \n-func shift1(dst, src []byte) byte {\n-\tvar b byte\n-\tfor i := len(src) - 1; i >= 0; i-- {\n-\t\tbb := src[i] >> 7\n-\t\tdst[i] = src[i]<<1 | b\n-\t\tb = bb\n-\t}\n-\treturn b\n-}\n-\n func dup(p []byte) []byte {\n \tq := make([]byte, len(p))\n \tcopy(q, p)"}, {"sha": "70ac40f6a7afbd32d58658bd57120c3bc685c899", "filename": "libgo/go/crypto/cipher/ctr.go", "status": "modified", "additions": 38, "deletions": 17, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fctr.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fctr.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fctr.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -19,37 +19,58 @@ type ctr struct {\n \toutUsed int\n }\n \n+const streamBufferSize = 512\n+\n // NewCTR returns a Stream which encrypts/decrypts using the given Block in\n // counter mode. The length of iv must be the same as the Block's block size.\n func NewCTR(block Block, iv []byte) Stream {\n \tif len(iv) != block.BlockSize() {\n \t\tpanic(\"cipher.NewCTR: IV length must equal block size\")\n \t}\n-\n+\tbufSize := streamBufferSize\n+\tif bufSize < block.BlockSize() {\n+\t\tbufSize = block.BlockSize()\n+\t}\n \treturn &ctr{\n \t\tb:       block,\n \t\tctr:     dup(iv),\n-\t\tout:     make([]byte, len(iv)),\n-\t\toutUsed: len(iv),\n+\t\tout:     make([]byte, 0, bufSize),\n+\t\toutUsed: 0,\n \t}\n }\n \n-func (x *ctr) XORKeyStream(dst, src []byte) {\n-\tfor i := 0; i < len(src); i++ {\n-\t\tif x.outUsed == len(x.ctr) {\n-\t\t\tx.b.Encrypt(x.out, x.ctr)\n-\t\t\tx.outUsed = 0\n-\n-\t\t\t// Increment counter\n-\t\t\tfor i := len(x.ctr) - 1; i >= 0; i-- {\n-\t\t\t\tx.ctr[i]++\n-\t\t\t\tif x.ctr[i] != 0 {\n-\t\t\t\t\tbreak\n-\t\t\t\t}\n+func (x *ctr) refill() {\n+\tremain := len(x.out) - x.outUsed\n+\tif remain > x.outUsed {\n+\t\treturn\n+\t}\n+\tcopy(x.out, x.out[x.outUsed:])\n+\tx.out = x.out[:cap(x.out)]\n+\tbs := x.b.BlockSize()\n+\tfor remain < len(x.out)-bs {\n+\t\tx.b.Encrypt(x.out[remain:], x.ctr)\n+\t\tremain += bs\n+\n+\t\t// Increment counter\n+\t\tfor i := len(x.ctr) - 1; i >= 0; i-- {\n+\t\t\tx.ctr[i]++\n+\t\t\tif x.ctr[i] != 0 {\n+\t\t\t\tbreak\n \t\t\t}\n \t\t}\n+\t}\n+\tx.out = x.out[:remain]\n+\tx.outUsed = 0\n+}\n \n-\t\tdst[i] = src[i] ^ x.out[x.outUsed]\n-\t\tx.outUsed++\n+func (x *ctr) XORKeyStream(dst, src []byte) {\n+\tfor len(src) > 0 {\n+\t\tif x.outUsed >= len(x.out)-x.b.BlockSize() {\n+\t\t\tx.refill()\n+\t\t}\n+\t\tn := xorBytes(dst, src, x.out[x.outUsed:])\n+\t\tdst = dst[n:]\n+\t\tsrc = src[n:]\n+\t\tx.outUsed += n\n \t}\n }"}, {"sha": "2f748f02f7ca8a4498d98633cb464d2819c836bf", "filename": "libgo/go/crypto/cipher/gcm.go", "status": "modified", "additions": 7, "deletions": 14, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fgcm.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fgcm.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fgcm.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -258,11 +258,11 @@ func (g *gcm) update(y *gcmFieldElement, data []byte) {\n // gcmInc32 treats the final four bytes of counterBlock as a big-endian value\n // and increments it.\n func gcmInc32(counterBlock *[16]byte) {\n-\tc := 1\n \tfor i := gcmBlockSize - 1; i >= gcmBlockSize-4; i-- {\n-\t\tc += int(counterBlock[i])\n-\t\tcounterBlock[i] = byte(c)\n-\t\tc >>= 8\n+\t\tcounterBlock[i]++\n+\t\tif counterBlock[i] != 0 {\n+\t\t\tbreak\n+\t\t}\n \t}\n }\n \n@@ -289,20 +289,15 @@ func (g *gcm) counterCrypt(out, in []byte, counter *[gcmBlockSize]byte) {\n \t\tg.cipher.Encrypt(mask[:], counter[:])\n \t\tgcmInc32(counter)\n \n-\t\tfor i := range mask {\n-\t\t\tout[i] = in[i] ^ mask[i]\n-\t\t}\n+\t\txorWords(out, in, mask[:])\n \t\tout = out[gcmBlockSize:]\n \t\tin = in[gcmBlockSize:]\n \t}\n \n \tif len(in) > 0 {\n \t\tg.cipher.Encrypt(mask[:], counter[:])\n \t\tgcmInc32(counter)\n-\n-\t\tfor i := range in {\n-\t\t\tout[i] = in[i] ^ mask[i]\n-\t\t}\n+\t\txorBytes(out, in, mask[:])\n \t}\n }\n \n@@ -321,9 +316,7 @@ func (g *gcm) auth(out, ciphertext, additionalData []byte, tagMask *[gcmTagSize]\n \tputUint64(out, y.low)\n \tputUint64(out[8:], y.high)\n \n-\tfor i := range tagMask {\n-\t\tout[i] ^= tagMask[i]\n-\t}\n+\txorWords(out, out, tagMask[:])\n }\n \n func getUint64(data []byte) uint64 {"}, {"sha": "0c502ce405978a0d510e766c921980662890f042", "filename": "libgo/go/crypto/cipher/gcm_test.go", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fgcm_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fgcm_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fgcm_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -157,19 +157,3 @@ func TestAESGCM(t *testing.T) {\n \t\tct[0] ^= 0x80\n \t}\n }\n-\n-func BenchmarkAESGCM(b *testing.B) {\n-\tbuf := make([]byte, 1024)\n-\tb.SetBytes(int64(len(buf)))\n-\n-\tvar key [16]byte\n-\tvar nonce [12]byte\n-\taes, _ := aes.NewCipher(key[:])\n-\taesgcm, _ := cipher.NewGCM(aes)\n-\tvar out []byte\n-\n-\tb.ResetTimer()\n-\tfor i := 0; i < b.N; i++ {\n-\t\tout = aesgcm.Seal(out[:0], nonce[:], buf, nonce[:])\n-\t}\n-}"}, {"sha": "e86ebcb237ee3ce2ef203c92adaaa94042d94d46", "filename": "libgo/go/crypto/cipher/ofb.go", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fofb.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fofb.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fofb.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -8,6 +8,7 @@ package cipher\n \n type ofb struct {\n \tb       Block\n+\tcipher  []byte\n \tout     []byte\n \toutUsed int\n }\n@@ -20,25 +21,46 @@ func NewOFB(b Block, iv []byte) Stream {\n \tif len(iv) != blockSize {\n \t\treturn nil\n \t}\n-\n+\tbufSize := streamBufferSize\n+\tif bufSize < blockSize {\n+\t\tbufSize = blockSize\n+\t}\n \tx := &ofb{\n \t\tb:       b,\n-\t\tout:     make([]byte, blockSize),\n+\t\tcipher:  make([]byte, blockSize),\n+\t\tout:     make([]byte, 0, bufSize),\n \t\toutUsed: 0,\n \t}\n-\tb.Encrypt(x.out, iv)\n \n+\tcopy(x.cipher, iv)\n \treturn x\n }\n \n+func (x *ofb) refill() {\n+\tbs := x.b.BlockSize()\n+\tremain := len(x.out) - x.outUsed\n+\tif remain > x.outUsed {\n+\t\treturn\n+\t}\n+\tcopy(x.out, x.out[x.outUsed:])\n+\tx.out = x.out[:cap(x.out)]\n+\tfor remain < len(x.out)-bs {\n+\t\tx.b.Encrypt(x.cipher, x.cipher)\n+\t\tcopy(x.out[remain:], x.cipher)\n+\t\tremain += bs\n+\t}\n+\tx.out = x.out[:remain]\n+\tx.outUsed = 0\n+}\n+\n func (x *ofb) XORKeyStream(dst, src []byte) {\n-\tfor i, s := range src {\n-\t\tif x.outUsed == len(x.out) {\n-\t\t\tx.b.Encrypt(x.out, x.out)\n-\t\t\tx.outUsed = 0\n+\tfor len(src) > 0 {\n+\t\tif x.outUsed >= len(x.out)-x.b.BlockSize() {\n+\t\t\tx.refill()\n \t\t}\n-\n-\t\tdst[i] = s ^ x.out[x.outUsed]\n-\t\tx.outUsed++\n+\t\tn := xorBytes(dst, src, x.out[x.outUsed:])\n+\t\tdst = dst[n:]\n+\t\tsrc = src[n:]\n+\t\tx.outUsed += n\n \t}\n }"}, {"sha": "f88dc8914ac8c98fa8691947ee4721326930e292", "filename": "libgo/go/crypto/cipher/xor.go", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fxor.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fxor.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fxor.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,84 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package cipher\n+\n+import (\n+\t\"runtime\"\n+\t\"unsafe\"\n+)\n+\n+const wordSize = int(unsafe.Sizeof(uintptr(0)))\n+const supportsUnaligned = runtime.GOARCH == \"386\" || runtime.GOARCH == \"amd64\"\n+\n+// fastXORBytes xors in bulk. It only works on architectures that\n+// support unaligned read/writes.\n+func fastXORBytes(dst, a, b []byte) int {\n+\tn := len(a)\n+\tif len(b) < n {\n+\t\tn = len(b)\n+\t}\n+\n+\tw := n / wordSize\n+\tif w > 0 {\n+\t\tdw := *(*[]uintptr)(unsafe.Pointer(&dst))\n+\t\taw := *(*[]uintptr)(unsafe.Pointer(&a))\n+\t\tbw := *(*[]uintptr)(unsafe.Pointer(&b))\n+\t\tfor i := 0; i < w; i++ {\n+\t\t\tdw[i] = aw[i] ^ bw[i]\n+\t\t}\n+\t}\n+\n+\tfor i := (n - n%wordSize); i < n; i++ {\n+\t\tdst[i] = a[i] ^ b[i]\n+\t}\n+\n+\treturn n\n+}\n+\n+func safeXORBytes(dst, a, b []byte) int {\n+\tn := len(a)\n+\tif len(b) < n {\n+\t\tn = len(b)\n+\t}\n+\tfor i := 0; i < n; i++ {\n+\t\tdst[i] = a[i] ^ b[i]\n+\t}\n+\treturn n\n+}\n+\n+// xorBytes xors the bytes in a and b. The destination is assumed to have enough\n+// space. Returns the number of bytes xor'd.\n+func xorBytes(dst, a, b []byte) int {\n+\tif supportsUnaligned {\n+\t\treturn fastXORBytes(dst, a, b)\n+\t} else {\n+\t\t// TODO(hanwen): if (dst, a, b) have common alignment\n+\t\t// we could still try fastXORBytes. It is not clear\n+\t\t// how often this happens, and it's only worth it if\n+\t\t// the block encryption itself is hardware\n+\t\t// accelerated.\n+\t\treturn safeXORBytes(dst, a, b)\n+\t}\n+}\n+\n+// fastXORWords XORs multiples of 4 or 8 bytes (depending on architecture.)\n+// The arguments are assumed to be of equal length.\n+func fastXORWords(dst, a, b []byte) {\n+\tdw := *(*[]uintptr)(unsafe.Pointer(&dst))\n+\taw := *(*[]uintptr)(unsafe.Pointer(&a))\n+\tbw := *(*[]uintptr)(unsafe.Pointer(&b))\n+\tn := len(b) / wordSize\n+\tfor i := 0; i < n; i++ {\n+\t\tdw[i] = aw[i] ^ bw[i]\n+\t}\n+}\n+\n+func xorWords(dst, a, b []byte) {\n+\tif supportsUnaligned {\n+\t\tfastXORWords(dst, a, b)\n+\t} else {\n+\t\tsafeXORBytes(dst, a, b)\n+\t}\n+}"}, {"sha": "cc1c9d72d5591d8130920f34bd6b29f14bb83020", "filename": "libgo/go/crypto/cipher/xor_test.go", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fxor_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fcipher%2Fxor_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fcipher%2Fxor_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package cipher\n+\n+import (\n+\t\"bytes\"\n+\t\"testing\"\n+)\n+\n+func TestXOR(t *testing.T) {\n+\tfor alignP := 0; alignP < 2; alignP++ {\n+\t\tfor alignQ := 0; alignQ < 2; alignQ++ {\n+\t\t\tfor alignD := 0; alignD < 2; alignD++ {\n+\t\t\t\tp := make([]byte, 1024)[alignP:]\n+\t\t\t\tq := make([]byte, 1024)[alignQ:]\n+\t\t\t\td1 := make([]byte, 1024+alignD)[alignD:]\n+\t\t\t\td2 := make([]byte, 1024+alignD)[alignD:]\n+\t\t\t\txorBytes(d1, p, q)\n+\t\t\t\tsafeXORBytes(d2, p, q)\n+\t\t\t\tif bytes.Compare(d1, d2) != 0 {\n+\t\t\t\t\tt.Error(\"not equal\")\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}"}, {"sha": "e80b7e0baa0d01faf99ac4c24ccba306f4ab7666", "filename": "libgo/go/crypto/hmac/hmac_test.go", "status": "modified", "additions": 62, "deletions": 4, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fhmac%2Fhmac_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fhmac%2Fhmac_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fhmac%2Fhmac_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -15,10 +15,12 @@ import (\n )\n \n type hmacTest struct {\n-\thash func() hash.Hash\n-\tkey  []byte\n-\tin   []byte\n-\tout  string\n+\thash      func() hash.Hash\n+\tkey       []byte\n+\tin        []byte\n+\tout       string\n+\tsize      int\n+\tblocksize int\n }\n \n var hmacTests = []hmacTest{\n@@ -38,6 +40,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample #1\"),\n \t\t\"4f4ca3d5d68ba7cc0a1208c9c61e9c5da0403c0a\",\n+\t\tsha1.Size,\n+\t\tsha1.BlockSize,\n \t},\n \t{\n \t\tsha1.New,\n@@ -48,6 +52,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample #2\"),\n \t\t\"0922d3405faa3d194f82a45830737d5cc6c75d24\",\n+\t\tsha1.Size,\n+\t\tsha1.BlockSize,\n \t},\n \t{\n \t\tsha1.New,\n@@ -68,6 +74,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample #3\"),\n \t\t\"bcf41eab8bb2d802f3d05caf7cb092ecf8d1a3aa\",\n+\t\tsha1.Size,\n+\t\tsha1.BlockSize,\n \t},\n \n \t// Test from Plan 9.\n@@ -76,6 +84,8 @@ var hmacTests = []hmacTest{\n \t\t[]byte(\"Jefe\"),\n \t\t[]byte(\"what do ya want for nothing?\"),\n \t\t\"750c783e6ab0b503eaa86e310a5db738\",\n+\t\tmd5.Size,\n+\t\tmd5.BlockSize,\n \t},\n \n \t// Tests from RFC 4231\n@@ -88,12 +98,16 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Hi There\"),\n \t\t\"b0344c61d8db38535ca8afceaf0bf12b881dc200c9833da726e9376c2e32cff7\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New,\n \t\t[]byte(\"Jefe\"),\n \t\t[]byte(\"what do ya want for nothing?\"),\n \t\t\"5bdcc146bf60754e6a042426089575c75a003f089d2739839dec58b964ec3843\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New,\n@@ -112,6 +126,8 @@ var hmacTests = []hmacTest{\n \t\t\t0xdd, 0xdd,\n \t\t},\n \t\t\"773ea91e36800e46854db8ebd09181a72959098b3ef8c122d9635514ced565fe\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New,\n@@ -131,6 +147,8 @@ var hmacTests = []hmacTest{\n \t\t\t0xcd, 0xcd,\n \t\t},\n \t\t\"82558a389a443c0ea4cc819899f2083a85f0faa3e578f8077a2e3ff46729665b\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New,\n@@ -155,6 +173,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Test Using Larger Than Block-Size Key - Hash Key First\"),\n \t\t\"60e431591ee0b67f0d8a26aacbf5b77f8e0bc6213728c5140546040f0ee37f54\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New,\n@@ -181,6 +201,8 @@ var hmacTests = []hmacTest{\n \t\t\t\"and a larger than block-size data. The key needs to \" +\n \t\t\t\"be hashed before being used by the HMAC algorithm.\"),\n \t\t\"9b09ffa71b942fcb27635fbcd5b0e944bfdc63644f0713938a7f51535c3a35e2\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \n \t// Tests from http://csrc.nist.gov/groups/ST/toolkit/examples.html\n@@ -199,6 +221,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen=blocklen\"),\n \t\t\"5fd596ee78d5553c8ff4e72d266dfd192366da29\",\n+\t\tsha1.Size,\n+\t\tsha1.BlockSize,\n \t},\n \t{\n \t\tsha1.New,\n@@ -209,6 +233,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen<blocklen\"),\n \t\t\"4c99ff0cb1b31bd33f8431dbaf4d17fcd356a807\",\n+\t\tsha1.Size,\n+\t\tsha1.BlockSize,\n \t},\n \t{\n \t\tsha1.New,\n@@ -229,6 +255,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen=blocklen\"),\n \t\t\"2d51b2f7750e410584662e38f133435f4c4fd42a\",\n+\t\tsha1.Size,\n+\t\tsha1.BlockSize,\n \t},\n \t{\n \t\tsha256.New224,\n@@ -244,6 +272,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen=blocklen\"),\n \t\t\"c7405e3ae058e8cd30b08b4140248581ed174cb34e1224bcc1efc81b\",\n+\t\tsha256.Size224,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New224,\n@@ -255,6 +285,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen<blocklen\"),\n \t\t\"e3d249a8cfb67ef8b7a169e9a0a599714a2cecba65999a51beb8fbbe\",\n+\t\tsha256.Size224,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New224,\n@@ -275,6 +307,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen=blocklen\"),\n \t\t\"91c52509e5af8531601ae6230099d90bef88aaefb961f4080abc014d\",\n+\t\tsha256.Size224,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New,\n@@ -290,6 +324,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen=blocklen\"),\n \t\t\"8bb9a1db9806f20df7f77b82138c7914d174d59e13dc4d0169c9057b133e1d62\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New,\n@@ -301,6 +337,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen<blocklen\"),\n \t\t\"a28cf43130ee696a98f14a37678b56bcfcbdd9e5cf69717fecf5480f0ebdf790\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha256.New,\n@@ -321,6 +359,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen=blocklen\"),\n \t\t\"bdccb6c72ddeadb500ae768386cb38cc41c63dbb0878ddb9c7a38a431b78378d\",\n+\t\tsha256.Size,\n+\t\tsha256.BlockSize,\n \t},\n \t{\n \t\tsha512.New384,\n@@ -344,6 +384,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen=blocklen\"),\n \t\t\"63c5daa5e651847ca897c95814ab830bededc7d25e83eef9195cd45857a37f448947858f5af50cc2b1b730ddf29671a9\",\n+\t\tsha512.Size384,\n+\t\tsha512.BlockSize,\n \t},\n \t{\n \t\tsha512.New384,\n@@ -357,6 +399,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen<blocklen\"),\n \t\t\"6eb242bdbb582ca17bebfa481b1e23211464d2b7f8c20b9ff2201637b93646af5ae9ac316e98db45d9cae773675eeed0\",\n+\t\tsha512.Size384,\n+\t\tsha512.BlockSize,\n \t},\n \t{\n \t\tsha512.New384,\n@@ -389,6 +433,8 @@ var hmacTests = []hmacTest{\n \t\t},\n \t\t[]byte(\"Sample message for keylen=blocklen\"),\n \t\t\"5b664436df69b0ca22551231a3f0a3d5b4f97991713cfa84bff4d0792eff96c27dccbbb6f79b65d548b40e8564cef594\",\n+\t\tsha512.Size384,\n+\t\tsha512.BlockSize,\n \t},\n \t{\n \t\tsha512.New,\n@@ -414,6 +460,8 @@ var hmacTests = []hmacTest{\n \t\t\"fc25e240658ca785b7a811a8d3f7b4ca\" +\n \t\t\t\"48cfa26a8a366bf2cd1f836b05fcb024bd36853081811d6c\" +\n \t\t\t\"ea4216ebad79da1cfcb95ea4586b8a0ce356596a55fb1347\",\n+\t\tsha512.Size,\n+\t\tsha512.BlockSize,\n \t},\n \t{\n \t\tsha512.New,\n@@ -431,6 +479,8 @@ var hmacTests = []hmacTest{\n \t\t\"fd44c18bda0bb0a6ce0e82b031bf2818\" +\n \t\t\t\"f6539bd56ec00bdc10a8a2d730b3634de2545d639b0f2cf7\" +\n \t\t\t\"10d0692c72a1896f1f211c2b922d1a96c392e07e7ea9fedc\",\n+\t\tsha512.Size,\n+\t\tsha512.BlockSize,\n \t},\n \t{\n \t\tsha512.New,\n@@ -465,12 +515,20 @@ var hmacTests = []hmacTest{\n \t\t\"d93ec8d2de1ad2a9957cb9b83f14e76a\" +\n \t\t\t\"d6b5e0cce285079a127d3b14bccb7aa7286d4ac0d4ce6421\" +\n \t\t\t\"5f2bc9e6870b33d97438be4aaa20cda5c5a912b48b8e27f3\",\n+\t\tsha512.Size,\n+\t\tsha512.BlockSize,\n \t},\n }\n \n func TestHMAC(t *testing.T) {\n \tfor i, tt := range hmacTests {\n \t\th := New(tt.hash, tt.key)\n+\t\tif s := h.Size(); s != tt.size {\n+\t\t\tt.Errorf(\"Size: got %v, want %v\", s, tt.size)\n+\t\t}\n+\t\tif b := h.BlockSize(); b != tt.blocksize {\n+\t\t\tt.Errorf(\"BlockSize: got %v, want %v\", b, tt.blocksize)\n+\t\t}\n \t\tfor j := 0; j < 2; j++ {\n \t\t\tn, err := h.Write(tt.in)\n \t\t\tif n != len(tt.in) || err != nil {"}, {"sha": "397e2647e4bef36c000a4c8004ec8c90b6d21358", "filename": "libgo/go/crypto/md5/gen.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fmd5%2Fgen.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fmd5%2Fgen.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fmd5%2Fgen.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -160,7 +160,10 @@ var data = Data{\n \t},\n }\n \n-var program = `\n+var program = `// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n // DO NOT EDIT.\n // Generate with: go run gen.go{{if .Full}} -full{{end}} | gofmt >md5block.go\n "}, {"sha": "c1a87e4640bb969ccab76d8ab03ce1153ca27190", "filename": "libgo/go/crypto/md5/md5block.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fmd5%2Fmd5block.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n // DO NOT EDIT.\n // Generate with: go run gen.go -full | gofmt >md5block.go\n "}, {"sha": "5f74407850c55f161493c2f6f311090e5761d7e2", "filename": "libgo/go/crypto/rand/util.go", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frand%2Futil.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frand%2Futil.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frand%2Futil.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -27,9 +27,11 @@ var smallPrimesProduct = new(big.Int).SetUint64(16294579238595022365)\n \n // Prime returns a number, p, of the given size, such that p is prime\n // with high probability.\n+// Prime will return error for any error returned by rand.Read or if bits < 2.\n func Prime(rand io.Reader, bits int) (p *big.Int, err error) {\n-\tif bits < 1 {\n-\t\terr = errors.New(\"crypto/rand: prime size must be positive\")\n+\tif bits < 2 {\n+\t\terr = errors.New(\"crypto/rand: prime size must be at least 2-bit\")\n+\t\treturn\n \t}\n \n \tb := uint(bits % 8)\n@@ -79,7 +81,7 @@ func Prime(rand io.Reader, bits int) (p *big.Int, err error) {\n \t\tfor delta := uint64(0); delta < 1<<20; delta += 2 {\n \t\t\tm := mod + delta\n \t\t\tfor _, prime := range smallPrimes {\n-\t\t\t\tif m%uint64(prime) == 0 {\n+\t\t\t\tif m%uint64(prime) == 0 && (bits > 6 || m != uint64(prime)) {\n \t\t\t\t\tcontinue NextDelta\n \t\t\t\t}\n \t\t\t}"}, {"sha": "33f9820371a7166522a67a25cbc5f2238d304dfd", "filename": "libgo/go/crypto/rand/util_test.go", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frand%2Futil_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frand%2Futil_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frand%2Futil_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package rand_test\n+\n+import (\n+\t\"crypto/rand\"\n+\t\"testing\"\n+)\n+\n+// http://golang.org/issue/6849.\n+func TestPrimeSmall(t *testing.T) {\n+\tfor n := 2; n < 10; n++ {\n+\t\tp, err := rand.Prime(rand.Reader, n)\n+\t\tif err != nil {\n+\t\t\tt.Fatalf(\"Can't generate %d-bit prime: %v\", n, err)\n+\t\t}\n+\t\tif p.BitLen() != n {\n+\t\t\tt.Fatalf(\"%v is not %d-bit\", p, n)\n+\t\t}\n+\t\tif !p.ProbablyPrime(32) {\n+\t\t\tt.Fatalf(\"%v is not prime\", p)\n+\t\t}\n+\t}\n+}"}, {"sha": "bca4d28e1d1d8a2d6a2b5763395dea9bc88a9c10", "filename": "libgo/go/crypto/rc4/rc4_ref.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_ref.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_ref.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frc4%2Frc4_ref.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -14,7 +14,7 @@ func (c *Cipher) XORKeyStream(dst, src []byte) {\n \t\ti += 1\n \t\tj += uint8(c.s[i])\n \t\tc.s[i], c.s[j] = c.s[j], c.s[i]\n-\t\tdst[k] = v ^ byte(c.s[byte(c.s[i]+c.s[j])])\n+\t\tdst[k] = v ^ uint8(c.s[uint8(c.s[i]+c.s[j])])\n \t}\n \tc.i, c.j = i, j\n }"}, {"sha": "cf174b6a21dbe8d4bd6b2e92bebc3d25f68158d8", "filename": "libgo/go/crypto/rsa/pkcs1v15.go", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -176,7 +176,8 @@ var hashPrefixes = map[crypto.Hash][]byte{\n \n // SignPKCS1v15 calculates the signature of hashed using RSASSA-PKCS1-V1_5-SIGN from RSA PKCS#1 v1.5.\n // Note that hashed must be the result of hashing the input message using the\n-// given hash function.\n+// given hash function. If hash is zero, hashed is signed directly. This isn't\n+// advisable except for interoperability.\n func SignPKCS1v15(rand io.Reader, priv *PrivateKey, hash crypto.Hash, hashed []byte) (s []byte, err error) {\n \thashLen, prefix, err := pkcs1v15HashInfo(hash, len(hashed))\n \tif err != nil {\n@@ -212,7 +213,8 @@ func SignPKCS1v15(rand io.Reader, priv *PrivateKey, hash crypto.Hash, hashed []b\n // VerifyPKCS1v15 verifies an RSA PKCS#1 v1.5 signature.\n // hashed is the result of hashing the input message using the given hash\n // function and sig is the signature. A valid signature is indicated by\n-// returning a nil error.\n+// returning a nil error. If hash is zero then hashed is used directly. This\n+// isn't advisable except for interopability.\n func VerifyPKCS1v15(pub *PublicKey, hash crypto.Hash, hashed []byte, sig []byte) (err error) {\n \thashLen, prefix, err := pkcs1v15HashInfo(hash, len(hashed))\n \tif err != nil {\n@@ -249,6 +251,12 @@ func VerifyPKCS1v15(pub *PublicKey, hash crypto.Hash, hashed []byte, sig []byte)\n }\n \n func pkcs1v15HashInfo(hash crypto.Hash, inLen int) (hashLen int, prefix []byte, err error) {\n+\t// Special case: crypto.Hash(0) is used to indicate that the data is\n+\t// signed directly.\n+\tif hash == 0 {\n+\t\treturn inLen, nil, nil\n+\t}\n+\n \thashLen = hash.Size()\n \tif inLen != hashLen {\n \t\treturn 0, nil, errors.New(\"crypto/rsa: input must be hashed message\")"}, {"sha": "37c14d1d949b471e4a66cecfb65b2b38bbaa9c57", "filename": "libgo/go/crypto/rsa/pkcs1v15_test.go", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Frsa%2Fpkcs1v15_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -205,6 +205,28 @@ func TestOverlongMessagePKCS1v15(t *testing.T) {\n \t}\n }\n \n+func TestUnpaddedSignature(t *testing.T) {\n+\tmsg := []byte(\"Thu Dec 19 18:06:16 EST 2013\\n\")\n+\t// This base64 value was generated with:\n+\t// % echo Thu Dec 19 18:06:16 EST 2013 > /tmp/msg\n+\t// % openssl rsautl -sign -inkey key -out /tmp/sig -in /tmp/msg\n+\t//\n+\t// Where \"key\" contains the RSA private key given at the bottom of this\n+\t// file.\n+\texpectedSig := decodeBase64(\"pX4DR8azytjdQ1rtUiC040FjkepuQut5q2ZFX1pTjBrOVKNjgsCDyiJDGZTCNoh9qpXYbhl7iEym30BWWwuiZg==\")\n+\n+\tsig, err := SignPKCS1v15(nil, rsaPrivateKey, crypto.Hash(0), msg)\n+\tif err != nil {\n+\t\tt.Fatalf(\"SignPKCS1v15 failed: %s\", err)\n+\t}\n+\tif !bytes.Equal(sig, expectedSig) {\n+\t\tt.Fatalf(\"signature is not expected value: got %x, want %x\", sig, expectedSig)\n+\t}\n+\tif err := VerifyPKCS1v15(&rsaPrivateKey.PublicKey, crypto.Hash(0), msg, sig); err != nil {\n+\t\tt.Fatalf(\"signature failed to verify: %s\", err)\n+\t}\n+}\n+\n // In order to generate new test vectors you'll need the PEM form of this key:\n // -----BEGIN RSA PRIVATE KEY-----\n // MIIBOgIBAAJBALKZD0nEffqM1ACuak0bijtqE2QrI/KLADv7l3kK3ppMyCuLKoF0"}, {"sha": "9f1a96e36492ab131ecb403b76318238c667c79e", "filename": "libgo/go/crypto/sha1/sha1.go", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -62,16 +62,10 @@ func (d *digest) Write(p []byte) (nn int, err error) {\n \tnn = len(p)\n \td.len += uint64(nn)\n \tif d.nx > 0 {\n-\t\tn := len(p)\n-\t\tif n > chunk-d.nx {\n-\t\t\tn = chunk - d.nx\n-\t\t}\n-\t\tfor i := 0; i < n; i++ {\n-\t\t\td.x[d.nx+i] = p[i]\n-\t\t}\n+\t\tn := copy(d.x[d.nx:], p)\n \t\td.nx += n\n \t\tif d.nx == chunk {\n-\t\t\tblock(d, d.x[0:])\n+\t\t\tblock(d, d.x[:])\n \t\t\td.nx = 0\n \t\t}\n \t\tp = p[n:]"}, {"sha": "6d2a9f24dcb9966ecb4f454b2fddd44a73a17d09", "filename": "libgo/go/crypto/sha1/sha1_test.go", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha1%2Fsha1_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -76,6 +76,20 @@ func TestGolden(t *testing.T) {\n \t}\n }\n \n+func TestSize(t *testing.T) {\n+\tc := New()\n+\tif got := c.Size(); got != Size {\n+\t\tt.Errorf(\"Size = %d; want %d\", got, Size)\n+\t}\n+}\n+\n+func TestBlockSize(t *testing.T) {\n+\tc := New()\n+\tif got := c.BlockSize(); got != BlockSize {\n+\t\tt.Errorf(\"BlockSize = %d; want %d\", got, BlockSize)\n+\t}\n+}\n+\n var bench = New()\n var buf = make([]byte, 8192)\n "}, {"sha": "d84cebf2ff2c1734ee143ee0ac3bd50ede3e2932", "filename": "libgo/go/crypto/sha256/sha256.go", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -3,7 +3,7 @@\n // license that can be found in the LICENSE file.\n \n // Package sha256 implements the SHA224 and SHA256 hash algorithms as defined\n-// in FIPS 180-2.\n+// in FIPS 180-4.\n package sha256\n \n import (\n@@ -106,16 +106,10 @@ func (d *digest) Write(p []byte) (nn int, err error) {\n \tnn = len(p)\n \td.len += uint64(nn)\n \tif d.nx > 0 {\n-\t\tn := len(p)\n-\t\tif n > chunk-d.nx {\n-\t\t\tn = chunk - d.nx\n-\t\t}\n-\t\tfor i := 0; i < n; i++ {\n-\t\t\td.x[d.nx+i] = p[i]\n-\t\t}\n+\t\tn := copy(d.x[d.nx:], p)\n \t\td.nx += n\n \t\tif d.nx == chunk {\n-\t\t\tblock(d, d.x[0:])\n+\t\t\tblock(d, d.x[:])\n \t\t\td.nx = 0\n \t\t}\n \t\tp = p[n:]"}, {"sha": "1d883d39059577224fd98faa37c1f80c0f353221", "filename": "libgo/go/crypto/sha256/sha256_test.go", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -132,6 +132,24 @@ func TestGolden(t *testing.T) {\n \t}\n }\n \n+func TestSize(t *testing.T) {\n+\tc := New()\n+\tif got := c.Size(); got != Size {\n+\t\tt.Errorf(\"Size = %d; want %d\", got, Size)\n+\t}\n+\tc = New224()\n+\tif got := c.Size(); got != Size224 {\n+\t\tt.Errorf(\"New224.Size = %d; want %d\", got, Size224)\n+\t}\n+}\n+\n+func TestBlockSize(t *testing.T) {\n+\tc := New()\n+\tif got := c.BlockSize(); got != BlockSize {\n+\t\tt.Errorf(\"BlockSize = %d want %d\", got, BlockSize)\n+\t}\n+}\n+\n var bench = New()\n var buf = make([]byte, 8192)\n "}, {"sha": "ca5efd156a9d99d2433b77246acf807647666fc2", "filename": "libgo/go/crypto/sha256/sha256block.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256block.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256block.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256block.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -2,6 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// +build !386,!amd64\n+\n // SHA256 block step.\n // In its own file so that a faster assembly or C version\n // can be substituted easily."}, {"sha": "a50c9787108d3e0a2263a956ae46a9e392944eda", "filename": "libgo/go/crypto/sha256/sha256block_decl.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256block_decl.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256block_decl.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha256%2Fsha256block_decl.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2013 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build 386 amd64\n+\n+package sha256\n+\n+//go:noescape\n+\n+func block(dig *digest, p []byte)"}, {"sha": "bca7a91e22ec551ad8c3bd20192f547526f7f340", "filename": "libgo/go/crypto/sha512/sha512.go", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -106,16 +106,10 @@ func (d *digest) Write(p []byte) (nn int, err error) {\n \tnn = len(p)\n \td.len += uint64(nn)\n \tif d.nx > 0 {\n-\t\tn := len(p)\n-\t\tif n > chunk-d.nx {\n-\t\t\tn = chunk - d.nx\n-\t\t}\n-\t\tfor i := 0; i < n; i++ {\n-\t\t\td.x[d.nx+i] = p[i]\n-\t\t}\n+\t\tn := copy(d.x[d.nx:], p)\n \t\td.nx += n\n \t\tif d.nx == chunk {\n-\t\t\tblock(d, d.x[0:])\n+\t\t\tblock(d, d.x[:])\n \t\t\td.nx = 0\n \t\t}\n \t\tp = p[n:]"}, {"sha": "541860f701b231ae784e4426288591fc781a6486", "filename": "libgo/go/crypto/sha512/sha512_test.go", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -132,6 +132,24 @@ func TestGolden(t *testing.T) {\n \t}\n }\n \n+func TestSize(t *testing.T) {\n+\tc := New()\n+\tif got := c.Size(); got != Size {\n+\t\tt.Errorf(\"Size = %d; want %d\", got, Size)\n+\t}\n+\tc = New384()\n+\tif got := c.Size(); got != Size384 {\n+\t\tt.Errorf(\"New384.Size = %d; want %d\", got, Size384)\n+\t}\n+}\n+\n+func TestBlockSize(t *testing.T) {\n+\tc := New()\n+\tif got := c.BlockSize(); got != BlockSize {\n+\t\tt.Errorf(\"BlockSize = %d; want %d\", got, BlockSize)\n+\t}\n+}\n+\n var bench = New()\n var buf = make([]byte, 8192)\n "}, {"sha": "648ae8f7e1f436de807b348f3a23e9ff3b86534d", "filename": "libgo/go/crypto/sha512/sha512block.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512block.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512block.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512block.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -2,6 +2,8 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n+// +build !amd64\n+\n // SHA512 block step.\n // In its own file so that a faster assembly or C version\n // can be substituted easily."}, {"sha": "bef99de2e46148f85ce7f3b24c74a7f91ee72666", "filename": "libgo/go/crypto/sha512/sha512block_decl.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512block_decl.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512block_decl.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fsha512%2Fsha512block_decl.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2013 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build amd64\n+\n+package sha512\n+\n+//go:noescape\n+\n+func block(dig *digest, p []byte)"}, {"sha": "1b4830c725cb40f0766f354442ed74e4ffbd9807", "filename": "libgo/go/crypto/tls/generate_cert.go", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Fgenerate_cert.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Fgenerate_cert.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fgenerate_cert.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -43,7 +43,6 @@ func main() {\n \tpriv, err := rsa.GenerateKey(rand.Reader, *rsaBits)\n \tif err != nil {\n \t\tlog.Fatalf(\"failed to generate private key: %s\", err)\n-\t\treturn\n \t}\n \n \tvar notBefore time.Time\n@@ -65,8 +64,14 @@ func main() {\n \t\tnotAfter = endOfTime\n \t}\n \n+\tserialNumberLimit := new(big.Int).Lsh(big.NewInt(1), 128)\n+\tserialNumber, err := rand.Int(rand.Reader, serialNumberLimit)\n+\tif err != nil {\n+\t\tlog.Fatalf(\"failed to generate serial number: %s\", err)\n+\t}\n+\n \ttemplate := x509.Certificate{\n-\t\tSerialNumber: new(big.Int).SetInt64(0),\n+\t\tSerialNumber: serialNumber,\n \t\tSubject: pkix.Name{\n \t\t\tOrganization: []string{\"Acme Co\"},\n \t\t},\n@@ -95,13 +100,11 @@ func main() {\n \tderBytes, err := x509.CreateCertificate(rand.Reader, &template, &template, &priv.PublicKey, priv)\n \tif err != nil {\n \t\tlog.Fatalf(\"Failed to create certificate: %s\", err)\n-\t\treturn\n \t}\n \n \tcertOut, err := os.Create(\"cert.pem\")\n \tif err != nil {\n \t\tlog.Fatalf(\"failed to open cert.pem for writing: %s\", err)\n-\t\treturn\n \t}\n \tpem.Encode(certOut, &pem.Block{Type: \"CERTIFICATE\", Bytes: derBytes})\n \tcertOut.Close()"}, {"sha": "766cb1320e777b923772db14d16139290257ce7f", "filename": "libgo/go/crypto/tls/handshake_client_test.go", "status": "modified", "additions": 287, "deletions": 2982, "changes": 3269, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_client_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da"}, {"sha": "1eb420af4764c60f377ef7a9a45d76982f96526a", "filename": "libgo/go/crypto/tls/handshake_server_test.go", "status": "modified", "additions": 343, "deletions": 3460, "changes": 3803, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_server_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da"}, {"sha": "f95f274ab415909f4ce3f838eb779f1856b136a9", "filename": "libgo/go/crypto/tls/handshake_test.go", "status": "added", "additions": 167, "deletions": 0, "changes": 167, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Fhandshake_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,167 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package tls\n+\n+import (\n+\t\"bufio\"\n+\t\"encoding/hex\"\n+\t\"errors\"\n+\t\"flag\"\n+\t\"fmt\"\n+\t\"io\"\n+\t\"io/ioutil\"\n+\t\"net\"\n+\t\"strconv\"\n+\t\"strings\"\n+\t\"sync\"\n+)\n+\n+// TLS reference tests run a connection against a reference implementation\n+// (OpenSSL) of TLS and record the bytes of the resulting connection. The Go\n+// code, during a test, is configured with deterministic randomness and so the\n+// reference test can be reproduced exactly in the future.\n+//\n+// In order to save everyone who wishes to run the tests from needing the\n+// reference implementation installed, the reference connections are saved in\n+// files in the testdata directory. Thus running the tests involves nothing\n+// external, but creating and updating them requires the reference\n+// implementation.\n+//\n+// Tests can be updated by running them with the -update flag. This will cause\n+// the test files. Generally one should combine the -update flag with -test.run\n+// to updated a specific test. Since the reference implementation will always\n+// generate fresh random numbers, large parts of the reference connection will\n+// always change.\n+\n+var update = flag.Bool(\"update\", false, \"update golden files on disk\")\n+\n+// recordingConn is a net.Conn that records the traffic that passes through it.\n+// WriteTo can be used to produce output that can be later be loaded with\n+// ParseTestData.\n+type recordingConn struct {\n+\tnet.Conn\n+\tsync.Mutex\n+\tflows   [][]byte\n+\treading bool\n+}\n+\n+func (r *recordingConn) Read(b []byte) (n int, err error) {\n+\tif n, err = r.Conn.Read(b); n == 0 {\n+\t\treturn\n+\t}\n+\tb = b[:n]\n+\n+\tr.Lock()\n+\tdefer r.Unlock()\n+\n+\tif l := len(r.flows); l == 0 || !r.reading {\n+\t\tbuf := make([]byte, len(b))\n+\t\tcopy(buf, b)\n+\t\tr.flows = append(r.flows, buf)\n+\t} else {\n+\t\tr.flows[l-1] = append(r.flows[l-1], b[:n]...)\n+\t}\n+\tr.reading = true\n+\treturn\n+}\n+\n+func (r *recordingConn) Write(b []byte) (n int, err error) {\n+\tif n, err = r.Conn.Write(b); n == 0 {\n+\t\treturn\n+\t}\n+\tb = b[:n]\n+\n+\tr.Lock()\n+\tdefer r.Unlock()\n+\n+\tif l := len(r.flows); l == 0 || r.reading {\n+\t\tbuf := make([]byte, len(b))\n+\t\tcopy(buf, b)\n+\t\tr.flows = append(r.flows, buf)\n+\t} else {\n+\t\tr.flows[l-1] = append(r.flows[l-1], b[:n]...)\n+\t}\n+\tr.reading = false\n+\treturn\n+}\n+\n+// WriteTo writes Go source code to w that contains the recorded traffic.\n+func (r *recordingConn) WriteTo(w io.Writer) {\n+\t// TLS always starts with a client to server flow.\n+\tclientToServer := true\n+\n+\tfor i, flow := range r.flows {\n+\t\tsource, dest := \"client\", \"server\"\n+\t\tif !clientToServer {\n+\t\t\tsource, dest = dest, source\n+\t\t}\n+\t\tfmt.Fprintf(w, \">>> Flow %d (%s to %s)\\n\", i+1, source, dest)\n+\t\tdumper := hex.Dumper(w)\n+\t\tdumper.Write(flow)\n+\t\tdumper.Close()\n+\t\tclientToServer = !clientToServer\n+\t}\n+}\n+\n+func parseTestData(r io.Reader) (flows [][]byte, err error) {\n+\tvar currentFlow []byte\n+\n+\tscanner := bufio.NewScanner(r)\n+\tfor scanner.Scan() {\n+\t\tline := scanner.Text()\n+\t\t// If the line starts with \">>> \" then it marks the beginning\n+\t\t// of a new flow.\n+\t\tif strings.HasPrefix(line, \">>> \") {\n+\t\t\tif len(currentFlow) > 0 || len(flows) > 0 {\n+\t\t\t\tflows = append(flows, currentFlow)\n+\t\t\t\tcurrentFlow = nil\n+\t\t\t}\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\t// Otherwise the line is a line of hex dump that looks like:\n+\t\t// 00000170  fc f5 06 bf (...)  |.....X{&?......!|\n+\t\t// (Some bytes have been omitted from the middle section.)\n+\n+\t\tif i := strings.IndexByte(line, ' '); i >= 0 {\n+\t\t\tline = line[i:]\n+\t\t} else {\n+\t\t\treturn nil, errors.New(\"invalid test data\")\n+\t\t}\n+\n+\t\tif i := strings.IndexByte(line, '|'); i >= 0 {\n+\t\t\tline = line[:i]\n+\t\t} else {\n+\t\t\treturn nil, errors.New(\"invalid test data\")\n+\t\t}\n+\n+\t\thexBytes := strings.Fields(line)\n+\t\tfor _, hexByte := range hexBytes {\n+\t\t\tval, err := strconv.ParseUint(hexByte, 16, 8)\n+\t\t\tif err != nil {\n+\t\t\t\treturn nil, errors.New(\"invalid hex byte in test data: \" + err.Error())\n+\t\t\t}\n+\t\t\tcurrentFlow = append(currentFlow, byte(val))\n+\t\t}\n+\t}\n+\n+\tif len(currentFlow) > 0 {\n+\t\tflows = append(flows, currentFlow)\n+\t}\n+\n+\treturn flows, nil\n+}\n+\n+// tempFile creates a temp file containing contents and returns its path.\n+func tempFile(contents string) string {\n+\tfile, err := ioutil.TempFile(\"\", \"go-tls-test\")\n+\tif err != nil {\n+\t\tpanic(\"failed to create temp file: \" + err.Error())\n+\t}\n+\tpath := file.Name()\n+\tfile.WriteString(contents)\n+\tfile.Close()\n+\treturn path\n+}"}, {"sha": "990a8c6b2abbaa4cc5f71c583e6ecb3390352e41", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ClientCert-ECDSA-ECDSA", "status": "added", "additions": 129, "deletions": 0, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-ECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-ECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-ECDSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,129 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 54 02 00 00  50 03 01 52 ac 77 f8 34  |....T...P..R.w.4|\n+00000010  93 89 d0 c8 9e 83 58 9b  46 f1 4e 67 40 4c ea 67  |......X.F.Ng@L.g|\n+00000020  6b 70 0e 24 0e 95 3e 49  96 56 7d 20 2e 80 c6 ef  |kp.$..>I.V} ....|\n+00000030  c7 dc 41 e1 86 f4 7c d9  8a 01 b5 70 9e 02 20 6b  |..A...|....p.. k|\n+00000040  bb 4a 4c 8f ed 79 dc 15  be 16 cb ef c0 09 00 00  |.JL..y..........|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 01 02 0e 0b 00  |................|\n+00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n+00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n+00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n+00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n+000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n+000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n+000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n+00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n+00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n+00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n+00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n+00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n+00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n+000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n+000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n+000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n+000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n+000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n+000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n+00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n+00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n+00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n+00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n+00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n+00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n+00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 01 00  |6$1{j.9....*....|\n+00000270  d5 0c 00 00 d1 03 00 17  41 04 13 22 64 a7 fc 9c  |........A..\"d...|\n+00000280  f8 90 f2 4d 68 a1 cc b0  03 48 d7 e5 14 1e 3b e9  |...Mh....H....;.|\n+00000290  d0 be 49 ee c7 b3 98 b5  b2 9c 52 d0 ab 28 b5 16  |..I.......R..(..|\n+000002a0  ef 17 ee 7a 64 a3 81 8b  0e 3f 44 81 18 67 2c c1  |...zd....?D..g,.|\n+000002b0  17 da be f4 59 bc 0e d8  c5 4f 00 8a 30 81 87 02  |....Y....O..0...|\n+000002c0  41 0f be e7 a5 29 04 dc  89 b5 02 bd 59 8f c1 66  |A....)......Y..f|\n+000002d0  47 1c c0 ad 25 52 22 91  fc 6a 17 37 cc b5 a7 42  |G...%R\"..j.7...B|\n+000002e0  06 36 44 7a 78 33 df 25  34 85 82 9b 9d ed 98 1c  |.6Dzx3.%4.......|\n+000002f0  43 72 3e 79 61 0d ca 5f  a1 2e ff 47 bf ae 11 c6  |Cr>ya.._...G....|\n+00000300  60 ec 02 42 00 de 6f 7b  44 78 f5 70 9c 95 f6 09  |`..B..o{Dx.p....|\n+00000310  9f 84 f5 10 c8 f3 b2 ab  4c 67 07 c1 6f a2 94 18  |........Lg..o...|\n+00000320  3b b0 6b d9 43 70 e3 d5  ef be 23 79 5f 84 33 20  |;.k.Cp....#y_.3 |\n+00000330  0c c3 f6 cd d9 18 d3 0a  a5 e8 2e 27 69 07 47 72  |...........'i.Gr|\n+00000340  d4 cd 38 3e 30 9e 16 03  01 00 0e 0d 00 00 06 03  |..8>0...........|\n+00000350  01 02 40 00 00 0e 00 00  00                       |..@......|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n+00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n+00000020  d9 17 30 09 06 07 2a 86  48 ce 3d 04 01 30 45 31  |..0...*.H.=..0E1|\n+00000030  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000040  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000050  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000060  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000070  20 4c 74 64 30 1e 17 0d  31 32 31 31 31 34 31 33  | Ltd0...12111413|\n+00000080  32 35 35 33 5a 17 0d 32  32 31 31 31 32 31 33 32  |2553Z..221112132|\n+00000090  35 35 33 5a 30 41 31 0b  30 09 06 03 55 04 06 13  |553Z0A1.0...U...|\n+000000a0  02 41 55 31 0c 30 0a 06  03 55 04 08 13 03 4e 53  |.AU1.0...U....NS|\n+000000b0  57 31 10 30 0e 06 03 55  04 07 13 07 50 79 72 6d  |W1.0...U....Pyrm|\n+000000c0  6f 6e 74 31 12 30 10 06  03 55 04 03 13 09 4a 6f  |ont1.0...U....Jo|\n+000000d0  65 6c 20 53 69 6e 67 30  81 9b 30 10 06 07 2a 86  |el Sing0..0...*.|\n+000000e0  48 ce 3d 02 01 06 05 2b  81 04 00 23 03 81 86 00  |H.=....+...#....|\n+000000f0  04 00 95 8c 91 75 14 c0  5e c4 57 b4 d4 c3 6f 8d  |.....u..^.W...o.|\n+00000100  ae 68 1e dd 6f ce 86 e1  7e 6e b2 48 3e 81 e5 4e  |.h..o...~n.H>..N|\n+00000110  e2 c6 88 4b 64 dc f5 30  bb d3 ff 65 cc 5b f4 dd  |...Kd..0...e.[..|\n+00000120  b5 6a 3e 3e d0 1d de 47  c3 76 ad 19 f6 45 2c 8c  |.j>>...G.v...E,.|\n+00000130  bc d8 1d 01 4c 1f 70 90  46 76 48 8b 8f 83 cc 4a  |....L.p.FvH....J|\n+00000140  5c 8f 40 76 da e0 89 ec  1d 2b c4 4e 30 76 28 41  |\\.@v.....+.N0v(A|\n+00000150  b2 62 a8 fb 5b f1 f9 4e  7a 8d bd 09 b8 ae ea 8b  |.b..[..Nz.......|\n+00000160  18 27 4f 2e 70 fe 13 96  ba c3 d3 40 16 cd 65 4e  |.'O.p......@..eN|\n+00000170  ac 11 1e e6 f1 30 09 06  07 2a 86 48 ce 3d 04 01  |.....0...*.H.=..|\n+00000180  03 81 8c 00 30 81 88 02  42 00 e0 14 c4 60 60 0b  |....0...B....``.|\n+00000190  72 68 b0 32 5d 61 4a 02  74 5c c2 81 b9 16 a8 3f  |rh.2]aJ.t\\.....?|\n+000001a0  29 c8 36 c7 81 ff 6c b6  5b d9 70 f1 38 3b 50 48  |).6...l.[.p.8;PH|\n+000001b0  28 94 cb 09 1a 52 f1 5d  ee 8d f2 b9 f0 f0 da d9  |(....R.]........|\n+000001c0  15 3a f9 bd 03 7a 87 a2  23 35 ec 02 42 01 a3 d4  |.:...z..#5..B...|\n+000001d0  8a 78 35 1c 4a 9a 23 d2  0a be 2b 10 31 9d 9c 5f  |.x5.J.#...+.1.._|\n+000001e0  be e8 91 b3 da 1a f5 5d  a3 23 f5 26 8b 45 70 8d  |.......].#.&.Ep.|\n+000001f0  65 62 9b 7e 01 99 3d 18  f6 10 9a 38 61 9b 2e 57  |eb.~..=....8a..W|\n+00000200  e4 fa cc b1 8a ce e2 23  a0 87 f0 e1 67 51 eb 16  |.......#....gQ..|\n+00000210  03 01 00 46 10 00 00 42  41 04 1e 18 37 ef 0d 19  |...F...BA...7...|\n+00000220  51 88 35 75 71 b5 e5 54  5b 12 2e 8f 09 67 fd a7  |Q.5uq..T[....g..|\n+00000230  24 20 3e b2 56 1c ce 97  28 5e f8 2b 2d 4f 9e f1  |$ >.V...(^.+-O..|\n+00000240  07 9f 6c 4b 5b 83 56 e2  32 42 e9 58 b6 d7 49 a6  |..lK[.V.2B.X..I.|\n+00000250  b5 68 1a 41 03 56 6b dc  5a 89 16 03 01 00 90 0f  |.h.A.Vk.Z.......|\n+00000260  00 00 8c 00 8a 30 81 87  02 42 00 c6 85 8e 06 b7  |.....0...B......|\n+00000270  04 04 e9 cd 9e 3e cb 66  23 95 b4 42 9c 64 81 39  |.....>.f#..B.d.9|\n+00000280  05 3f b5 21 f8 28 af 60  6b 4d 3d ba a1 4b 5e 77  |.?.!.(.`kM=..K^w|\n+00000290  ef e7 59 28 fe 1d c1 27  a2 ff a8 de 33 48 b3 c1  |..Y(...'....3H..|\n+000002a0  85 6a 42 9b f9 7e 7e 31  c2 e5 bd 66 02 41 4b 49  |.jB..~~1...f.AKI|\n+000002b0  c6 cd 02 e3 83 f7 03 50  18 6d b4 c9 51 02 c0 ab  |.......P.m..Q...|\n+000002c0  87 bc e0 3e 4b 89 53 3a  e2 65 89 97 02 c1 87 f1  |...>K.S:.e......|\n+000002d0  67 d0 f2 06 28 4e 51 4e  fd f0 01 ee b8 6b e0 01  |g...(NQN.....k..|\n+000002e0  1c 57 7e a8 fc 82 71 26  10 42 27 8c 5d c8 a9 14  |.W~...q&.B'.]...|\n+000002f0  03 01 00 01 01 16 03 01  00 30 6e 6b 80 06 bb 98  |.........0nk....|\n+00000300  c1 47 e3 92 1b 4d 98 4a  b4 3f 18 2e 73 a9 57 84  |.G...M.J.?..s.W.|\n+00000310  92 b5 cb 45 db bb db 89  dd 10 04 7c 60 3e a0 d1  |...E.......|`>..|\n+00000320  22 1d 7c 51 11 28 09 4a  26 f6                    |\".|Q.(.J&.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 30 05 ba 98 98 0f  |..........0.....|\n+00000010  f9 f8 f4 4d 9a 29 99 ce  d7 d4 9a 4b d1 ed 54 d1  |...M.).....K..T.|\n+00000020  a7 32 9a b8 ce 80 53 c4  50 61 83 37 35 c8 99 25  |.2....S.Pa.75..%|\n+00000030  0b ac 66 91 62 ce 12 ba  cf dc 6f                 |..f.b.....o|\n+>>> Flow 5 (client to server)\n+00000000  17 03 01 00 20 7a 1e c3  4c 5f dd f1 14 f4 97 45  |.... z..L_.....E|\n+00000010  21 4f 75 a5 a5 53 4a d7  91 a4 ad 1b cd 4b da 5a  |!Ou..SJ......K.Z|\n+00000020  92 96 48 1f bc 17 03 01  00 20 a4 c9 d5 67 2f d9  |..H...... ...g/.|\n+00000030  d2 ee e4 82 a5 ff 2d fa  41 8f 3d cc 3d ce 08 4a  |......-.A.=.=..J|\n+00000040  39 7d 0c 6c 69 a4 71 e2  c0 98 15 03 01 00 20 19  |9}.li.q....... .|\n+00000050  ae 20 b2 ff ce d4 71 37  ed 92 6a b3 3c 8d df 00  |. ....q7..j.<...|\n+00000060  3b 69 5d f9 45 b1 8b 33  37 fe 52 d2 a1 56 01     |;i].E..37.R..V.|"}, {"sha": "2030e4b7f9fd45211b559a10754fce61c06f8c87", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ClientCert-ECDSA-RSA", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-RSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-RSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-ECDSA-RSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,125 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 4a 02 00 00  46 03 01 52 ac 77 f8 32  |....J...F..R.w.2|\n+00000010  42 f3 96 ae d6 f1 36 23  a4 c5 c0 ba 05 5a 67 bb  |B.....6#.....Zg.|\n+00000020  12 5c 64 95 96 3d cc 0c  3a 85 38 20 13 48 bf 31  |.\\d..=..:.8 .H.1|\n+00000030  52 76 11 55 05 5d 24 5a  53 17 9e be d5 88 c1 d7  |Rv.U.]$ZS.......|\n+00000040  88 35 b9 70 2b 66 46 35  a6 aa ff 8f 00 05 00 16  |.5.p+fF5........|\n+00000050  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+00000310  bd d9 16 03 01 00 0e 0d  00 00 06 03 01 02 40 00  |..............@.|\n+00000320  00 0e 00 00 00                                    |.....|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n+00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n+00000020  d9 17 30 09 06 07 2a 86  48 ce 3d 04 01 30 45 31  |..0...*.H.=..0E1|\n+00000030  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000040  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000050  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000060  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000070  20 4c 74 64 30 1e 17 0d  31 32 31 31 31 34 31 33  | Ltd0...12111413|\n+00000080  32 35 35 33 5a 17 0d 32  32 31 31 31 32 31 33 32  |2553Z..221112132|\n+00000090  35 35 33 5a 30 41 31 0b  30 09 06 03 55 04 06 13  |553Z0A1.0...U...|\n+000000a0  02 41 55 31 0c 30 0a 06  03 55 04 08 13 03 4e 53  |.AU1.0...U....NS|\n+000000b0  57 31 10 30 0e 06 03 55  04 07 13 07 50 79 72 6d  |W1.0...U....Pyrm|\n+000000c0  6f 6e 74 31 12 30 10 06  03 55 04 03 13 09 4a 6f  |ont1.0...U....Jo|\n+000000d0  65 6c 20 53 69 6e 67 30  81 9b 30 10 06 07 2a 86  |el Sing0..0...*.|\n+000000e0  48 ce 3d 02 01 06 05 2b  81 04 00 23 03 81 86 00  |H.=....+...#....|\n+000000f0  04 00 95 8c 91 75 14 c0  5e c4 57 b4 d4 c3 6f 8d  |.....u..^.W...o.|\n+00000100  ae 68 1e dd 6f ce 86 e1  7e 6e b2 48 3e 81 e5 4e  |.h..o...~n.H>..N|\n+00000110  e2 c6 88 4b 64 dc f5 30  bb d3 ff 65 cc 5b f4 dd  |...Kd..0...e.[..|\n+00000120  b5 6a 3e 3e d0 1d de 47  c3 76 ad 19 f6 45 2c 8c  |.j>>...G.v...E,.|\n+00000130  bc d8 1d 01 4c 1f 70 90  46 76 48 8b 8f 83 cc 4a  |....L.p.FvH....J|\n+00000140  5c 8f 40 76 da e0 89 ec  1d 2b c4 4e 30 76 28 41  |\\.@v.....+.N0v(A|\n+00000150  b2 62 a8 fb 5b f1 f9 4e  7a 8d bd 09 b8 ae ea 8b  |.b..[..Nz.......|\n+00000160  18 27 4f 2e 70 fe 13 96  ba c3 d3 40 16 cd 65 4e  |.'O.p......@..eN|\n+00000170  ac 11 1e e6 f1 30 09 06  07 2a 86 48 ce 3d 04 01  |.....0...*.H.=..|\n+00000180  03 81 8c 00 30 81 88 02  42 00 e0 14 c4 60 60 0b  |....0...B....``.|\n+00000190  72 68 b0 32 5d 61 4a 02  74 5c c2 81 b9 16 a8 3f  |rh.2]aJ.t\\.....?|\n+000001a0  29 c8 36 c7 81 ff 6c b6  5b d9 70 f1 38 3b 50 48  |).6...l.[.p.8;PH|\n+000001b0  28 94 cb 09 1a 52 f1 5d  ee 8d f2 b9 f0 f0 da d9  |(....R.]........|\n+000001c0  15 3a f9 bd 03 7a 87 a2  23 35 ec 02 42 01 a3 d4  |.:...z..#5..B...|\n+000001d0  8a 78 35 1c 4a 9a 23 d2  0a be 2b 10 31 9d 9c 5f  |.x5.J.#...+.1.._|\n+000001e0  be e8 91 b3 da 1a f5 5d  a3 23 f5 26 8b 45 70 8d  |.......].#.&.Ep.|\n+000001f0  65 62 9b 7e 01 99 3d 18  f6 10 9a 38 61 9b 2e 57  |eb.~..=....8a..W|\n+00000200  e4 fa cc b1 8a ce e2 23  a0 87 f0 e1 67 51 eb 16  |.......#....gQ..|\n+00000210  03 01 00 86 10 00 00 82  00 80 6d 51 f3 7f f9 3e  |..........mQ...>|\n+00000220  fb 75 82 41 36 83 e8 6a  ee 2a 2e 25 90 67 4c 8e  |.u.A6..j.*.%.gL.|\n+00000230  62 2f 30 81 17 e0 85 09  0c 2b b7 23 d7 b0 e2 1d  |b/0......+.#....|\n+00000240  f7 3b d7 f5 a1 27 b6 ee  24 b6 1b cc 5b ea 66 0d  |.;...'..$...[.f.|\n+00000250  6a f4 e5 85 f9 da 43 b4  0e 86 85 e1 f5 aa be c8  |j.....C.........|\n+00000260  ce 39 4c 9c 86 00 08 c2  4b e2 c6 ec 2f f7 ce e6  |.9L.....K.../...|\n+00000270  bd 77 82 6f 23 b6 e0 bd  a2 92 b7 3a ac e8 56 f1  |.w.o#......:..V.|\n+00000280  af 54 5e 46 87 e9 3b 33  e7 b8 28 b7 d6 c8 90 35  |.T^F..;3..(....5|\n+00000290  d4 1c 43 d1 30 6f 55 4e  0a 70 16 03 01 00 90 0f  |..C.0oUN.p......|\n+000002a0  00 00 8c 00 8a 30 81 87  02 42 00 c6 85 8e 06 b7  |.....0...B......|\n+000002b0  04 04 e9 cd 9e 3e cb 66  23 95 b4 42 9c 64 81 39  |.....>.f#..B.d.9|\n+000002c0  05 3f b5 21 f8 28 af 60  6b 4d 3d ba a1 4b 5e 77  |.?.!.(.`kM=..K^w|\n+000002d0  ef e7 59 28 fe 1d c1 27  a2 ff a8 de 33 48 b3 c1  |..Y(...'....3H..|\n+000002e0  85 6a 42 9b f9 7e 7e 31  c2 e5 bd 66 02 41 4b 49  |.jB..~~1...f.AKI|\n+000002f0  c6 cd 02 e3 83 f7 03 50  18 6d b4 c9 51 02 c0 ab  |.......P.m..Q...|\n+00000300  87 bc e0 3e 4b 89 53 3a  e2 65 89 97 02 c1 87 f1  |...>K.S:.e......|\n+00000310  67 d0 f2 06 28 4e 51 4e  fd f0 01 92 6d 54 ed 77  |g...(NQN....mT.w|\n+00000320  96 b9 6c 79 66 fc c7 4e  db 53 7a 61 f3 31 9b 14  |..lyf..N.Sza.1..|\n+00000330  03 01 00 01 01 16 03 01  00 24 4d cd f0 d5 d5 4c  |.........$M....L|\n+00000340  2b 51 9f 88 04 10 65 c9  1c 92 26 d0 07 0a af 06  |+Q....e...&.....|\n+00000350  bd 0a 2d 1e e6 dd 2a a5  3f c9 39 2d f8 0d        |..-...*.?.9-..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 24 79 e0 a5 d6 1c  |..........$y....|\n+00000010  2d c9 2f 3d 35 96 2f ce  97 9c 33 38 8b fc ba 02  |-./=5./...38....|\n+00000020  6f 46 13 64 82 d5 ff 9d  16 9a ad 90 e3 ec 46     |oF.d..........F|\n+>>> Flow 5 (client to server)\n+00000000  17 03 01 00 1a 8b 3c 90  3e 94 ef fd 6e 32 42 fa  |......<.>...n2B.|\n+00000010  70 0b d0 65 62 23 25 a4  0f b5 a7 9a 45 f0 52 15  |p..eb#%.....E.R.|\n+00000020  03 01 00 16 74 72 64 8d  b8 41 13 07 49 7c d7 d0  |....trd..A..I|..|\n+00000030  b6 c9 cf 33 20 69 5e f4  d2 a8                    |...3 i^...|"}, {"sha": "11fd37a9f675d3f0a2954c95bdb975e50be319a8", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ClientCert-RSA-ECDSA", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-ECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-ECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-ECDSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,128 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 54 02 00 00  50 03 01 52 ac 77 f7 ee  |....T...P..R.w..|\n+00000010  90 30 d2 75 be d4 70 dd  2d 4f a7 9e 0f 6f 0b ac  |.0.u..p.-O...o..|\n+00000020  bf 02 7d 53 1d 05 7f 93  9a c3 50 20 c8 18 17 c2  |..}S......P ....|\n+00000030  70 76 8d a8 52 c8 b7 ff  32 35 cb bb 7e e0 4c 9c  |pv..R...25..~.L.|\n+00000040  42 69 90 26 b5 c8 b7 22  da 52 db f9 c0 09 00 00  |Bi.&...\".R......|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 01 02 0e 0b 00  |................|\n+00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n+00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n+00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n+00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n+000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n+000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n+000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n+00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n+00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n+00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n+00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n+00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n+00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n+000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n+000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n+000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n+000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n+000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n+000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n+00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n+00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n+00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n+00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n+00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n+00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n+00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 01 00  |6$1{j.9....*....|\n+00000270  d6 0c 00 00 d2 03 00 17  41 04 14 a3 b3 8a d0 9a  |........A.......|\n+00000280  93 50 4e 4c ad b1 61 10  09 96 cc 65 d0 85 02 17  |.PNL..a....e....|\n+00000290  e6 12 56 e5 f3 6b 97 0e  4e 04 60 49 46 39 a9 a9  |..V..k..N.`IF9..|\n+000002a0  70 20 fa 28 d7 91 01 24  3a 52 90 7d ac dc 1c 87  |p .(...$:R.}....|\n+000002b0  fe 05 2a 23 ff d6 f7 84  ad 08 00 8b 30 81 88 02  |..*#........0...|\n+000002c0  42 00 f0 df fd cb 17 ba  68 6e 1c b5 6c ee 29 68  |B.......hn..l.)h|\n+000002d0  a4 a7 15 c8 88 cd 60 57  fd ec b3 53 31 6f 19 64  |......`W...S1o.d|\n+000002e0  fd 91 c8 59 c3 19 d3 67  5d 38 26 07 c5 93 c1 92  |...Y...g]8&.....|\n+000002f0  86 5b 89 99 01 24 db ab  d0 51 a3 6a 54 e8 7f bb  |.[...$...Q.jT...|\n+00000300  de 9c 1c 02 42 01 7c d6  5f b8 f9 15 b4 a2 89 04  |....B.|._.......|\n+00000310  46 36 2f a9 cc 5c 7c 78  24 17 fd 11 b8 3f 0b 4a  |F6/..\\|x$....?.J|\n+00000320  5e 4d 55 1a 65 b2 27 d8  51 97 6c d8 a7 b2 62 30  |^MU.e.'.Q.l...b0|\n+00000330  01 3d b0 ef 27 fe f6 cd  40 0e 7b 54 c6 bc 38 b0  |.=..'...@.{T..8.|\n+00000340  b1 b2 37 6c 87 ac d1 16  03 01 00 0e 0d 00 00 06  |..7l............|\n+00000350  03 01 02 40 00 00 0e 00  00 00                    |...@......|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n+00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n+00000020  0b 06 09 2a 86 48 86 f7  0d 01 01 05 30 26 31 10  |...*.H......0&1.|\n+00000030  30 0e 06 03 55 04 0a 13  07 41 63 6d 65 20 43 6f  |0...U....Acme Co|\n+00000040  31 12 30 10 06 03 55 04  03 13 09 31 32 37 2e 30  |1.0...U....127.0|\n+00000050  2e 30 2e 31 30 1e 17 0d  31 31 31 32 30 38 30 37  |.0.10...11120807|\n+00000060  35 35 31 32 5a 17 0d 31  32 31 32 30 37 30 38 30  |5512Z..121207080|\n+00000070  30 31 32 5a 30 26 31 10  30 0e 06 03 55 04 0a 13  |012Z0&1.0...U...|\n+00000080  07 41 63 6d 65 20 43 6f  31 12 30 10 06 03 55 04  |.Acme Co1.0...U.|\n+00000090  03 13 09 31 32 37 2e 30  2e 30 2e 31 30 81 9c 30  |...127.0.0.10..0|\n+000000a0  0b 06 09 2a 86 48 86 f7  0d 01 01 01 03 81 8c 00  |...*.H..........|\n+000000b0  30 81 88 02 81 80 4e d0  7b 31 e3 82 64 d9 59 c0  |0.....N.{1..d.Y.|\n+000000c0  c2 87 a4 5e 1e 8b 73 33  c7 63 53 df 66 92 06 84  |...^..s3.cS.f...|\n+000000d0  f6 64 d5 8f e4 36 a7 1d  2b e8 b3 20 36 45 23 b5  |.d...6..+.. 6E#.|\n+000000e0  e3 95 ae ed e0 f5 20 9c  8d 95 df 7f 5a 12 ef 87  |...... .....Z...|\n+000000f0  e4 5b 68 e4 e9 0e 74 ec  04 8a 7f de 93 27 c4 01  |.[h...t......'..|\n+00000100  19 7a bd f2 dc 3d 14 ab  d0 54 ca 21 0c d0 4d 6e  |.z...=...T.!..Mn|\n+00000110  87 2e 5c c5 d2 bb 4d 4b  4f ce b6 2c f7 7e 88 ec  |..\\...MKO..,.~..|\n+00000120  7c d7 02 91 74 a6 1e 0c  1a da e3 4a 5a 2e de 13  ||...t......JZ...|\n+00000130  9c 4c 40 88 59 93 02 03  01 00 01 a3 32 30 30 30  |.L@.Y.......2000|\n+00000140  0e 06 03 55 1d 0f 01 01  ff 04 04 03 02 00 a0 30  |...U...........0|\n+00000150  0d 06 03 55 1d 0e 04 06  04 04 01 02 03 04 30 0f  |...U..........0.|\n+00000160  06 03 55 1d 23 04 08 30  06 80 04 01 02 03 04 30  |..U.#..0.......0|\n+00000170  0b 06 09 2a 86 48 86 f7  0d 01 01 05 03 81 81 00  |...*.H..........|\n+00000180  36 1f b3 7a 0c 75 c9 6e  37 46 61 2b d5 bd c0 a7  |6..z.u.n7Fa+....|\n+00000190  4b cc 46 9a 81 58 7c 85  79 29 c8 c8 c6 67 dd 32  |K.F..X|.y)...g.2|\n+000001a0  56 45 2b 75 b6 e9 24 a9  50 9a be 1f 5a fa 1a 15  |VE+u..$.P...Z...|\n+000001b0  d9 cc 55 95 72 16 83 b9  c2 b6 8f fd 88 8c 38 84  |..U.r.........8.|\n+000001c0  1d ab 5d 92 31 13 4f fd  83 3b c6 9d f1 11 62 b6  |..].1.O..;....b.|\n+000001d0  8b ec ab 67 be c8 64 b0  11 50 46 58 17 6b 99 1c  |...g..d..PFX.k..|\n+000001e0  d3 1d fc 06 f1 0e e5 96  a8 0c f9 78 20 b7 44 18  |...........x .D.|\n+000001f0  51 8d 10 7e 4f 94 67 df  a3 4e 70 73 8e 90 91 85  |Q..~O.g..Nps....|\n+00000200  16 03 01 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000210  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000220  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000230  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000240  a6 b5 68 1a 41 03 56 6b  dc 5a 89 16 03 01 00 86  |..h.A.Vk.Z......|\n+00000250  0f 00 00 82 00 80 1b 62  58 10 7f d1 fb 94 fd 4e  |.......bX......N|\n+00000260  29 d8 ce fb 46 c4 16 ce  32 a0 a6 40 10 a8 24 0c  |)...F...2..@..$.|\n+00000270  c3 a2 50 34 2c 50 e4 b9  0f d8 2a d1 c6 d5 d9 ee  |..P4,P....*.....|\n+00000280  66 38 dd 68 7d 9f a4 78  b7 9c e3 fb 29 d9 8d ff  |f8.h}..x....)...|\n+00000290  0e b4 94 6e a9 58 a3 74  d7 b7 47 1a 0f 37 2b ab  |...n.X.t..G..7+.|\n+000002a0  cc ee 90 36 58 72 2a cb  2a 0f 2f 1b a0 fa 43 18  |...6Xr*.*./...C.|\n+000002b0  1f 4a 24 9a 67 55 11 e5  b9 f3 f0 d2 ff 66 26 dd  |.J$.gU.......f&.|\n+000002c0  b9 d1 ab b3 35 52 95 98  dd 86 8a 1b f8 8e ba 7e  |....5R.........~|\n+000002d0  10 07 0f a6 85 dc 14 03  01 00 01 01 16 03 01 00  |................|\n+000002e0  30 c6 a2 49 6c 31 b1 a8  d2 9e 0c 96 b1 0b 0d 57  |0..Il1.........W|\n+000002f0  8d f0 93 37 93 ea 06 b5  a7 d7 ba 3f 0e a2 f5 6a  |...7.......?...j|\n+00000300  38 88 cc 53 66 18 61 a5  e1 79 99 59 0e 44 58 79  |8..Sf.a..y.Y.DXy|\n+00000310  c7                                                |.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 30 68 f5 47 9c 34  |..........0h.G.4|\n+00000010  ba c1 96 05 d0 bd 77 e9  6c fb 88 c8 45 f5 fe 37  |......w.l...E..7|\n+00000020  e2 6b b9 3c 95 36 bf cc  76 2b 1c 3e 1e 8f 63 e7  |.k.<.6..v+.>..c.|\n+00000030  9b c2 84 fb 76 cf 97 a0  da 96 42                 |....v.....B|\n+>>> Flow 5 (client to server)\n+00000000  17 03 01 00 20 99 81 8e  c7 04 d1 03 0c 80 e2 44  |.... ..........D|\n+00000010  14 7c 74 5a 85 36 55 f0  62 d5 36 d4 da 6f 43 98  |.|tZ.6U.b.6..oC.|\n+00000020  36 7c 53 76 89 17 03 01  00 20 ec d3 7f fa 49 6c  |6|Sv..... ....Il|\n+00000030  60 89 16 ee 6a 1f 69 4f  5a 88 0c 5c 89 a6 e0 3f  |`...j.iOZ..\\...?|\n+00000040  38 89 fa da 39 16 d2 9b  08 1f 15 03 01 00 20 64  |8...9......... d|\n+00000050  a1 7a 98 b4 ff 54 a4 a0  e1 01 e4 0b 6c 67 80 b6  |.z...T......lg..|\n+00000060  b6 76 90 e5 e5 cf 9b ca  fe 5c a3 4a 24 53 e4     |.v.......\\.J$S.|"}, {"sha": "f689b8e41e6b4642041952b82e91a0ddf5799a2e", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ClientCert-RSA-RSA", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-RSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-RSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ClientCert-RSA-RSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,124 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 4a 02 00 00  46 03 01 52 ac 77 f7 f0  |....J...F..R.w..|\n+00000010  99 da 46 81 2b c1 04 7a  9e 61 bf 0f 67 e3 40 ed  |..F.+..z.a..g.@.|\n+00000020  9c 69 17 75 6f 64 63 14  4f 0f 99 20 06 c2 0e 89  |.i.uodc.O.. ....|\n+00000030  2e 5a bb e6 ce e1 39 f6  11 53 a5 92 95 61 b4 e3  |.Z....9..S...a..|\n+00000040  20 35 72 f8 e3 8d 19 6e  e3 5c a9 af 00 05 00 16  | 5r....n.\\......|\n+00000050  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+00000310  bd d9 16 03 01 00 0e 0d  00 00 06 03 01 02 40 00  |..............@.|\n+00000320  00 0e 00 00 00                                    |.....|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n+00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n+00000020  0b 06 09 2a 86 48 86 f7  0d 01 01 05 30 26 31 10  |...*.H......0&1.|\n+00000030  30 0e 06 03 55 04 0a 13  07 41 63 6d 65 20 43 6f  |0...U....Acme Co|\n+00000040  31 12 30 10 06 03 55 04  03 13 09 31 32 37 2e 30  |1.0...U....127.0|\n+00000050  2e 30 2e 31 30 1e 17 0d  31 31 31 32 30 38 30 37  |.0.10...11120807|\n+00000060  35 35 31 32 5a 17 0d 31  32 31 32 30 37 30 38 30  |5512Z..121207080|\n+00000070  30 31 32 5a 30 26 31 10  30 0e 06 03 55 04 0a 13  |012Z0&1.0...U...|\n+00000080  07 41 63 6d 65 20 43 6f  31 12 30 10 06 03 55 04  |.Acme Co1.0...U.|\n+00000090  03 13 09 31 32 37 2e 30  2e 30 2e 31 30 81 9c 30  |...127.0.0.10..0|\n+000000a0  0b 06 09 2a 86 48 86 f7  0d 01 01 01 03 81 8c 00  |...*.H..........|\n+000000b0  30 81 88 02 81 80 4e d0  7b 31 e3 82 64 d9 59 c0  |0.....N.{1..d.Y.|\n+000000c0  c2 87 a4 5e 1e 8b 73 33  c7 63 53 df 66 92 06 84  |...^..s3.cS.f...|\n+000000d0  f6 64 d5 8f e4 36 a7 1d  2b e8 b3 20 36 45 23 b5  |.d...6..+.. 6E#.|\n+000000e0  e3 95 ae ed e0 f5 20 9c  8d 95 df 7f 5a 12 ef 87  |...... .....Z...|\n+000000f0  e4 5b 68 e4 e9 0e 74 ec  04 8a 7f de 93 27 c4 01  |.[h...t......'..|\n+00000100  19 7a bd f2 dc 3d 14 ab  d0 54 ca 21 0c d0 4d 6e  |.z...=...T.!..Mn|\n+00000110  87 2e 5c c5 d2 bb 4d 4b  4f ce b6 2c f7 7e 88 ec  |..\\...MKO..,.~..|\n+00000120  7c d7 02 91 74 a6 1e 0c  1a da e3 4a 5a 2e de 13  ||...t......JZ...|\n+00000130  9c 4c 40 88 59 93 02 03  01 00 01 a3 32 30 30 30  |.L@.Y.......2000|\n+00000140  0e 06 03 55 1d 0f 01 01  ff 04 04 03 02 00 a0 30  |...U...........0|\n+00000150  0d 06 03 55 1d 0e 04 06  04 04 01 02 03 04 30 0f  |...U..........0.|\n+00000160  06 03 55 1d 23 04 08 30  06 80 04 01 02 03 04 30  |..U.#..0.......0|\n+00000170  0b 06 09 2a 86 48 86 f7  0d 01 01 05 03 81 81 00  |...*.H..........|\n+00000180  36 1f b3 7a 0c 75 c9 6e  37 46 61 2b d5 bd c0 a7  |6..z.u.n7Fa+....|\n+00000190  4b cc 46 9a 81 58 7c 85  79 29 c8 c8 c6 67 dd 32  |K.F..X|.y)...g.2|\n+000001a0  56 45 2b 75 b6 e9 24 a9  50 9a be 1f 5a fa 1a 15  |VE+u..$.P...Z...|\n+000001b0  d9 cc 55 95 72 16 83 b9  c2 b6 8f fd 88 8c 38 84  |..U.r.........8.|\n+000001c0  1d ab 5d 92 31 13 4f fd  83 3b c6 9d f1 11 62 b6  |..].1.O..;....b.|\n+000001d0  8b ec ab 67 be c8 64 b0  11 50 46 58 17 6b 99 1c  |...g..d..PFX.k..|\n+000001e0  d3 1d fc 06 f1 0e e5 96  a8 0c f9 78 20 b7 44 18  |...........x .D.|\n+000001f0  51 8d 10 7e 4f 94 67 df  a3 4e 70 73 8e 90 91 85  |Q..~O.g..Nps....|\n+00000200  16 03 01 00 86 10 00 00  82 00 80 6d 51 f3 7f f9  |...........mQ...|\n+00000210  3e fb 75 82 41 36 83 e8  6a ee 2a 2e 25 90 67 4c  |>.u.A6..j.*.%.gL|\n+00000220  8e 62 2f 30 81 17 e0 85  09 0c 2b b7 23 d7 b0 e2  |.b/0......+.#...|\n+00000230  1d f7 3b d7 f5 a1 27 b6  ee 24 b6 1b cc 5b ea 66  |..;...'..$...[.f|\n+00000240  0d 6a f4 e5 85 f9 da 43  b4 0e 86 85 e1 f5 aa be  |.j.....C........|\n+00000250  c8 ce 39 4c 9c 86 00 08  c2 4b e2 c6 ec 2f f7 ce  |..9L.....K.../..|\n+00000260  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n+00000270  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n+00000280  35 d4 1c 43 d1 30 6f 55  4e 0a 70 16 03 01 00 86  |5..C.0oUN.p.....|\n+00000290  0f 00 00 82 00 80 4d 9d  67 d8 0f e2 4e f4 bc eb  |......M.g...N...|\n+000002a0  5f ad 77 c6 4d d4 2f 2c  77 dd a5 f7 4c 87 7e 99  |_.w.M./,w...L.~.|\n+000002b0  86 70 f3 8a 9d b4 29 21  75 17 f1 cf 66 63 a1 76  |.p....)!u...fc.v|\n+000002c0  3c 6c d7 3c 23 ee 35 1a  18 46 86 60 25 81 e3 25  |<l.<#.5..F.`%..%|\n+000002d0  df ab 2c 28 26 53 a8 92  6c 35 5a 9a cc cb d5 43  |..,(&S..l5Z....C|\n+000002e0  74 2f 6e a3 df d3 60 6a  97 97 71 ce 81 10 51 2d  |t/n...`j..q...Q-|\n+000002f0  50 f7 8a b2 ff d2 56 ba  e3 e5 03 e9 99 79 9e b4  |P.....V......y..|\n+00000300  a7 16 6e 08 98 1b f0 a5  d1 81 79 cc f4 48 34 58  |..n.......y..H4X|\n+00000310  df 69 49 b5 77 81 14 03  01 00 01 01 16 03 01 00  |.iI.w...........|\n+00000320  24 a2 58 ce 9a 68 34 da  df f7 21 41 da da 3d f1  |$.X..h4...!A..=.|\n+00000330  a1 cf 87 9e 50 96 aa 3d  80 71 50 0f 30 56 75 fe  |....P..=.qP.0Vu.|\n+00000340  97 48 66 de 13                                    |.Hf..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 24 83 7b dc b5 11  |..........$.{...|\n+00000010  28 12 6b d0 8a a3 dd f2  eb 29 cb fd 04 54 a1 31  |(.k......)...T.1|\n+00000020  8c 08 40 c3 bd 21 3a 13  be 57 47 89 f3 26 30     |..@..!:..WG..&0|\n+>>> Flow 5 (client to server)\n+00000000  17 03 01 00 1a 52 d0 be  a9 8f fb 91 38 7b a4 82  |.....R......8{..|\n+00000010  5d ff 93 61 f8 e9 80 b4  26 0e 21 42 2d 44 5a 15  |]..a....&.!B-DZ.|\n+00000020  03 01 00 16 49 68 5c 35  7e 9d eb ed 16 a4 60 16  |....Ih\\5~.....`.|\n+00000030  fb 25 80 5c 15 9e 31 68  aa 5b                    |.%.\\..1h.[|"}, {"sha": "f1e925d6509a4d2004d487600ae0020a6e2a9bf2", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ECDHE-ECDSA-AES", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-ECDSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,86 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 54 02 00 00  50 03 01 52 ac 77 f7 24  |....T...P..R.w.$|\n+00000010  5b 96 60 d7 6a 2e 9f 05  ea 1e 61 15 64 16 ab a6  |[.`.j.....a.d...|\n+00000020  a8 4e 72 f2 09 14 c2 fd  64 2d 22 20 e9 e3 04 64  |.Nr.....d-\" ...d|\n+00000030  7a 93 f1 de 0c d5 f9 5a  9a 5b d3 af 2b 03 84 bd  |z......Z.[..+...|\n+00000040  69 71 dd 35 a7 ca 52 bf  90 a1 03 f0 c0 09 00 00  |iq.5..R.........|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 01 02 0e 0b 00  |................|\n+00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n+00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n+00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n+00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n+000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n+000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n+000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n+00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n+00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n+00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n+00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n+00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n+00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n+000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n+000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n+000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n+000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n+000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n+000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n+00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n+00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n+00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n+00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n+00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n+00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n+00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 01 00  |6$1{j.9....*....|\n+00000270  d5 0c 00 00 d1 03 00 17  41 04 65 02 4b f2 bc 54  |........A.e.K..T|\n+00000280  3d c2 42 3d 8d 06 b4 9a  7a 15 c8 04 0f 2b a0 f8  |=.B=....z....+..|\n+00000290  ee e8 5d 52 10 c3 36 30  e0 cc 34 67 bb 83 29 ea  |..]R..60..4g..).|\n+000002a0  d3 47 56 54 95 c5 29 25  53 d8 97 15 66 69 f2 cb  |.GVT..)%S...fi..|\n+000002b0  59 05 97 f7 ac 66 27 d9  19 4a 00 8a 30 81 87 02  |Y....f'..J..0...|\n+000002c0  41 6a 3c ca 93 ea 20 84  0e 04 2b 1b 52 28 32 29  |Aj<... ...+.R(2)|\n+000002d0  af b9 8d fb 1c 5c c3 02  6b 45 02 c7 25 4e 19 51  |.....\\..kE..%N.Q|\n+000002e0  19 8b 3c 34 5d 20 b8 77  77 4a f1 b1 ba 47 03 14  |..<4] .wwJ...G..|\n+000002f0  09 74 42 df 82 39 b0 51  54 ad e9 4d 1a 9d b9 18  |.tB..9.QT..M....|\n+00000300  14 58 02 42 01 b8 18 1d  a1 53 a2 52 ad a3 13 85  |.X.B.....S.R....|\n+00000310  f5 fb c4 75 0e 6b f1 f9  a6 7d 21 63 d0 fe 20 ba  |...u.k...}!c.. .|\n+00000320  4b 38 3d 25 12 dc 73 5e  1d 5e 23 e5 52 ae cf 62  |K8=%..s^.^#.R..b|\n+00000330  5a f4 a5 11 b7 33 1e 08  06 32 bb 7f 8d 40 db 5f  |Z....3...2...@._|\n+00000340  f7 39 93 0e 32 9e 16 03  01 00 04 0e 00 00 00     |.9..2..........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 01 00 01  |..h.A.Vk.Z......|\n+00000050  01 16 03 01 00 30 6d 72  30 82 5b 76 0b bd a7 a2  |.....0mr0.[v....|\n+00000060  ed 1e de bd 14 1d 25 69  97 4c ad 9c b1 50 8e 2f  |......%i.L...P./|\n+00000070  a0 65 ac e7 52 e0 b4 fb  f9 8c e7 26 09 96 53 6f  |.e..R......&..So|\n+00000080  bc 77 24 8c 1f a7                                 |.w$...|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 30 a0 97 45 7d 58  |..........0..E}X|\n+00000010  2d 6e 6b 51 ad 5b 4f e0  f3 58 d3 48 a6 e1 b7 71  |-nkQ.[O..X.H...q|\n+00000020  f8 94 e2 fe c5 c9 b2 0b  27 4f 48 11 df 01 5f ef  |........'OH..._.|\n+00000030  5d 9c f5 85 91 39 75 f4  21 1b ed                 |]....9u.!..|\n+>>> Flow 5 (client to server)\n+00000000  17 03 01 00 20 31 c0 13  eb 77 e7 51 f6 14 fc bd  |.... 1...w.Q....|\n+00000010  94 32 2c 31 58 28 72 29  a9 6a 11 56 f2 c1 de 96  |.2,1X(r).j.V....|\n+00000020  e0 cd cf 4a 47 17 03 01  00 20 b2 95 e4 81 56 f3  |...JG.... ....V.|\n+00000030  f8 6a b1 4f a0 41 41 fd  1f 7e b8 bb 7f 71 80 0d  |.j.O.AA..~...q..|\n+00000040  22 9f 46 be cb b9 b6 bd  c0 0e 15 03 01 00 20 fa  |\".F........... .|\n+00000050  4e 05 c4 29 a5 92 4e 68  34 b7 5b 99 a8 b3 46 1b  |N..)..Nh4.[...F.|\n+00000060  f9 f6 fc e5 b4 f4 cd c4  be 1a b2 af b7 13 43     |..............C|"}, {"sha": "f4904a3db6367cbe889bc510a0f679a0fef9d7f6", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-ECDHE-RSA-AES", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-ECDHE-RSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,97 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 54 02 00 00  50 03 01 52 ac 77 f7 b6  |....T...P..R.w..|\n+00000010  40 88 14 a0 46 9b 24 3c  7c 8d cb 63 70 b3 fc 60  |@...F.$<|..cp..`|\n+00000020  fb 04 97 82 c4 f6 d4 02  ab c6 5b 20 da cf c2 62  |..........[ ...b|\n+00000030  87 5b 67 63 3a fa e1 f7  cd 64 d2 84 ee 95 bb 86  |.[gc:....d......|\n+00000040  f5 c7 32 20 74 99 34 6c  ad 92 07 de c0 13 00 00  |..2 t.4l........|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 01 02 be 0b 00  |................|\n+00000060  02 ba 00 02 b7 00 02 b4  30 82 02 b0 30 82 02 19  |........0...0...|\n+00000070  a0 03 02 01 02 02 09 00  85 b0 bb a4 8a 7f b8 ca  |................|\n+00000080  30 0d 06 09 2a 86 48 86  f7 0d 01 01 05 05 00 30  |0...*.H........0|\n+00000090  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+000000a0  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+000000b0  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+000000c0  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+000000d0  74 79 20 4c 74 64 30 1e  17 0d 31 30 30 34 32 34  |ty Ltd0...100424|\n+000000e0  30 39 30 39 33 38 5a 17  0d 31 31 30 34 32 34 30  |090938Z..1104240|\n+000000f0  39 30 39 33 38 5a 30 45  31 0b 30 09 06 03 55 04  |90938Z0E1.0...U.|\n+00000100  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000110  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000120  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000130  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 81 9f  |dgits Pty Ltd0..|\n+00000140  30 0d 06 09 2a 86 48 86  f7 0d 01 01 01 05 00 03  |0...*.H.........|\n+00000150  81 8d 00 30 81 89 02 81  81 00 bb 79 d6 f5 17 b5  |...0.......y....|\n+00000160  e5 bf 46 10 d0 dc 69 be  e6 2b 07 43 5a d0 03 2d  |..F...i..+.CZ..-|\n+00000170  8a 7a 43 85 b7 14 52 e7  a5 65 4c 2c 78 b8 23 8c  |.zC...R..eL,x.#.|\n+00000180  b5 b4 82 e5 de 1f 95 3b  7e 62 a5 2c a5 33 d6 fe  |.......;~b.,.3..|\n+00000190  12 5c 7a 56 fc f5 06 bf  fa 58 7b 26 3f b5 cd 04  |.\\zV.....X{&?...|\n+000001a0  d3 d0 c9 21 96 4a c7 f4  54 9f 5a bf ef 42 71 00  |...!.J..T.Z..Bq.|\n+000001b0  fe 18 99 07 7f 7e 88 7d  7d f1 04 39 c4 a2 2e db  |.....~.}}..9....|\n+000001c0  51 c9 7c e3 c0 4c 3b 32  66 01 cf af b1 1d b8 71  |Q.|..L;2f......q|\n+000001d0  9a 1d db db 89 6b ae da  2d 79 02 03 01 00 01 a3  |.....k..-y......|\n+000001e0  81 a7 30 81 a4 30 1d 06  03 55 1d 0e 04 16 04 14  |..0..0...U......|\n+000001f0  b1 ad e2 85 5a cf cb 28  db 69 ce 23 69 de d3 26  |....Z..(.i.#i..&|\n+00000200  8e 18 88 39 30 75 06 03  55 1d 23 04 6e 30 6c 80  |...90u..U.#.n0l.|\n+00000210  14 b1 ad e2 85 5a cf cb  28 db 69 ce 23 69 de d3  |.....Z..(.i.#i..|\n+00000220  26 8e 18 88 39 a1 49 a4  47 30 45 31 0b 30 09 06  |&...9.I.G0E1.0..|\n+00000230  03 55 04 06 13 02 41 55  31 13 30 11 06 03 55 04  |.U....AU1.0...U.|\n+00000240  08 13 0a 53 6f 6d 65 2d  53 74 61 74 65 31 21 30  |...Some-State1!0|\n+00000250  1f 06 03 55 04 0a 13 18  49 6e 74 65 72 6e 65 74  |...U....Internet|\n+00000260  20 57 69 64 67 69 74 73  20 50 74 79 20 4c 74 64  | Widgits Pty Ltd|\n+00000270  82 09 00 85 b0 bb a4 8a  7f b8 ca 30 0c 06 03 55  |...........0...U|\n+00000280  1d 13 04 05 30 03 01 01  ff 30 0d 06 09 2a 86 48  |....0....0...*.H|\n+00000290  86 f7 0d 01 01 05 05 00  03 81 81 00 08 6c 45 24  |.............lE$|\n+000002a0  c7 6b b1 59 ab 0c 52 cc  f2 b0 14 d7 87 9d 7a 64  |.k.Y..R.......zd|\n+000002b0  75 b5 5a 95 66 e4 c5 2b  8e ae 12 66 1f eb 4f 38  |u.Z.f..+...f..O8|\n+000002c0  b3 6e 60 d3 92 fd f7 41  08 b5 25 13 b1 18 7a 24  |.n`....A..%...z$|\n+000002d0  fb 30 1d ba ed 98 b9 17  ec e7 d7 31 59 db 95 d3  |.0.........1Y...|\n+000002e0  1d 78 ea 50 56 5c d5 82  5a 2d 5a 5f 33 c4 b6 d8  |.x.PV\\..Z-Z_3...|\n+000002f0  c9 75 90 96 8c 0f 52 98  b5 cd 98 1f 89 20 5f f2  |.u....R...... _.|\n+00000300  a0 1c a3 1b 96 94 dd a9  fd 57 e9 70 e8 26 6d 71  |.........W.p.&mq|\n+00000310  99 9b 26 6e 38 50 29 6c  90 a7 bd d9 16 03 01 00  |..&n8P)l........|\n+00000320  cb 0c 00 00 c7 03 00 17  41 04 eb a8 6e 0a 31 5e  |........A...n.1^|\n+00000330  20 2a 31 db 85 82 43 e0  b6 ca a5 3c 1c e1 32 52  | *1...C....<..2R|\n+00000340  e8 75 50 f2 e2 e0 de 30  06 3f e5 6d 8f d5 00 61  |.uP....0.?.m...a|\n+00000350  22 8a bc e0 58 4a 37 3b  fd b7 67 2e c4 07 22 4c  |\"...XJ7;..g...\"L|\n+00000360  ac 27 6d bb 10 b6 e3 6e  34 35 00 80 8c e7 14 84  |.'m....n45......|\n+00000370  84 d0 ab f9 8f c7 ae 6d  34 c7 f8 9e e4 93 3e 67  |.......m4.....>g|\n+00000380  be 03 7a 7a 5b 30 15 99  e2 e8 ff c1 28 af 40 9a  |..zz[0......(.@.|\n+00000390  20 8c 11 e1 c7 12 fe bc  b5 12 51 f8 59 ed af a2  | .........Q.Y...|\n+000003a0  78 d2 77 e2 bc 0e 97 0b  69 8f 98 40 04 6e 59 4e  |x.w.....i..@.nYN|\n+000003b0  6d 50 c2 06 7e a6 74 27  97 a0 35 43 7d 9f 44 66  |mP..~.t'..5C}.Df|\n+000003c0  17 91 fe 19 50 c2 d4 9a  f7 4f 0b 8a 40 c9 33 c8  |....P....O..@.3.|\n+000003d0  a5 b0 0a d4 18 72 4a 1d  5d cd b3 9a 62 d9 1d 04  |.....rJ.]...b...|\n+000003e0  d2 42 04 a1 27 5a 19 02  19 d9 cd ab 16 03 01 00  |.B..'Z..........|\n+000003f0  04 0e 00 00 00                                    |.....|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 01 00 01  |..h.A.Vk.Z......|\n+00000050  01 16 03 01 00 30 33 95  ec 63 ff 89 fe 3b f8 80  |.....03..c...;..|\n+00000060  1b 05 c6 29 a4 72 78 af  04 c1 21 53 fd 02 28 36  |...).rx...!S..(6|\n+00000070  29 b1 c7 a8 25 02 3d b0  ad 5b f3 52 9c a0 f5 8d  |)...%.=..[.R....|\n+00000080  da 03 65 b6 ac 27                                 |..e..'|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 30 20 59 0a 77 5a  |..........0 Y.wZ|\n+00000010  15 63 2b 9e f0 ff 27 ce  a8 57 89 e3 32 91 2d 5b  |.c+...'..W..2.-[|\n+00000020  55 e1 c0 fd 50 69 c8 e1  d8 02 e3 3f d4 56 d7 b8  |U...Pi.....?.V..|\n+00000030  80 5f 83 53 5e 2e 17 c3  41 72 bd                 |._.S^...Ar.|\n+>>> Flow 5 (client to server)\n+00000000  17 03 01 00 20 f5 42 0c  71 9c 27 35 6f 89 96 ca  |.... .B.q.'5o...|\n+00000010  25 55 ce d3 81 3a 99 6e  c3 25 29 c6 71 05 f2 e2  |%U...:.n.%).q...|\n+00000020  4d 21 6f d9 d6 17 03 01  00 20 a2 03 64 b9 0e e9  |M!o...... ..d...|\n+00000030  cf 8e aa 15 f4 46 66 52  a6 c1 8b 00 3b 22 36 cc  |.....FfR....;\"6.|\n+00000040  34 b6 43 08 a5 73 eb 3f  1f e6 15 03 01 00 20 52  |4.C..s.?...... R|\n+00000050  4d 42 9f 91 8e 0d d9 3f  ca 35 7f 47 af 30 14 5c  |MB.....?.5.G.0.\\|\n+00000060  10 6d de 84 84 36 2e f3  24 44 a3 5f 2b e4 7e     |.m...6..$D._+.~|"}, {"sha": "a69125574734c210166103b41fd6446100796eeb", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv10-RSA-RC4", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv10-RSA-RC4?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,82 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 4a 02 00 00  46 03 01 52 ac 77 f7 17  |....J...F..R.w..|\n+00000010  4c 25 27 29 1a fe 71 9e  69 96 e9 a7 8a 5f dc 47  |L%')..q.i...._.G|\n+00000020  b1 70 9a 23 e0 3a 32 95  4e 73 a4 20 b1 7a f0 69  |.p.#.:2.Ns. .z.i|\n+00000030  f6 26 55 0b 6b 77 cc b6  f2 03 5b 6c 81 25 28 ea  |.&U.kw....[l.%(.|\n+00000040  4b 2e ac 7a fe 54 62 bf  62 b4 0c e3 00 05 00 16  |K..z.Tb.b.......|\n+00000050  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+00000310  bd d9 16 03 01 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 00 86 10 00 00  82 00 80 6d 51 f3 7f f9  |...........mQ...|\n+00000010  3e fb 75 82 41 36 83 e8  6a ee 2a 2e 25 90 67 4c  |>.u.A6..j.*.%.gL|\n+00000020  8e 62 2f 30 81 17 e0 85  09 0c 2b b7 23 d7 b0 e2  |.b/0......+.#...|\n+00000030  1d f7 3b d7 f5 a1 27 b6  ee 24 b6 1b cc 5b ea 66  |..;...'..$...[.f|\n+00000040  0d 6a f4 e5 85 f9 da 43  b4 0e 86 85 e1 f5 aa be  |.j.....C........|\n+00000050  c8 ce 39 4c 9c 86 00 08  c2 4b e2 c6 ec 2f f7 ce  |..9L.....K.../..|\n+00000060  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n+00000070  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n+00000080  35 d4 1c 43 d1 30 6f 55  4e 0a 70 14 03 01 00 01  |5..C.0oUN.p.....|\n+00000090  01 16 03 01 00 24 8f 42  2e 1a 6f 42 a2 d1 51 ae  |.....$.B..oB..Q.|\n+000000a0  68 c4 3c 76 d0 df c3 41  3e 79 88 1a 43 28 bf 08  |h.<v...A>y..C(..|\n+000000b0  ad 4e e2 1c f1 7f 87 3d  9d ba                    |.N.....=..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 24 19 91 48 bb ae  |..........$..H..|\n+00000010  63 9d 91 d8 2f 8b 97 00  b4 ae 79 06 88 a8 23 a0  |c.../.....y...#.|\n+00000020  2d f4 dc 0f d9 6e c9 24  61 dd 3f 54 ec 9b 2f     |-....n.$a.?T../|\n+>>> Flow 5 (client to server)\n+00000000  17 03 01 00 1a 80 15 48  e1 1a 02 3e 0f 11 0a 8b  |.......H...>....|\n+00000010  ff 31 28 5f 7c 1e af fb  c7 c2 1f 8b fc 0f 12 15  |.1(_|...........|\n+00000020  03 01 00 16 67 d2 c4 57  fd e1 55 9f 51 0d ff 89  |....g..W..U.Q...|\n+00000030  09 17 87 2c 6c d4 96 9d  d9 86                    |...,l.....|"}, {"sha": "0c0474d470a0169c883aac1c9577eccd0c16f697", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv11-ECDHE-ECDSA-AES", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-ECDSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,88 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 02 00 54 02 00 00  50 03 02 52 ac 77 f7 1a  |....T...P..R.w..|\n+00000010  64 f7 56 af 0c d1 f7 5c  35 fb 48 6a b7 29 65 d6  |d.V....\\5.Hj.)e.|\n+00000020  3c b0 76 37 16 02 3c ed  25 24 d5 20 29 00 2f 99  |<.v7..<.%$. )./.|\n+00000030  d5 2b 2e 59 f5 59 c6 ca  04 57 a9 5c ec ee f7 38  |.+.Y.Y...W.\\...8|\n+00000040  c9 0d 3b 6b e9 01 8b bd  5a e5 0d 68 c0 09 00 00  |..;k....Z..h....|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 02 02 0e 0b 00  |................|\n+00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n+00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n+00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n+00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n+000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n+000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n+000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n+00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n+00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n+00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n+00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n+00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n+00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n+000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n+000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n+000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n+000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n+000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n+000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n+00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n+00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n+00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n+00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n+00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n+00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n+00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 02 00  |6$1{j.9....*....|\n+00000270  d5 0c 00 00 d1 03 00 17  41 04 6f c1 70 ca c9 46  |........A.o.p..F|\n+00000280  2c 5e 69 58 33 1f 6f d6  aa 87 b7 bb d5 66 42 e9  |,^iX3.o......fB.|\n+00000290  34 2e 37 d1 0b 04 11 14  ce 57 f4 00 6c ec 47 31  |4.7......W..l.G1|\n+000002a0  e4 5a 38 25 50 51 f7 3a  22 b0 9f 7c 4d 81 f9 9a  |.Z8%PQ.:\"..|M...|\n+000002b0  b3 c9 fd 4e f4 20 62 0b  73 ce 00 8a 30 81 87 02  |...N. b.s...0...|\n+000002c0  41 4d ee 15 33 7a 88 5f  20 15 e8 76 1f c9 0f 16  |AM..3z._ ..v....|\n+000002d0  64 8c e1 d6 97 45 6a 56  1f 75 1b 41 6a ca de 86  |d....EjV.u.Aj...|\n+000002e0  3e de 50 49 e7 21 ac f9  09 14 ca 96 c7 e6 23 ba  |>.PI.!........#.|\n+000002f0  32 8d d4 22 b7 02 0b 40  77 cc 3f 19 50 9e a1 72  |2..\"...@w.?.P..r|\n+00000300  b8 8d 02 42 01 2c d4 47  4c 0b 20 3a 14 dd 11 ed  |...B.,.GL. :....|\n+00000310  90 ed 83 ff 94 62 ec 88  d9 11 fd 2d 0c b0 01 b7  |.....b.....-....|\n+00000320  0c 47 0b a2 1f 7f 73 5a  77 7d 76 27 8b 8c ca 29  |.G....sZw}v'...)|\n+00000330  b5 b8 fb 22 79 25 4b dd  0a a1 39 c9 81 c7 2b 24  |...\"y%K...9...+$|\n+00000340  c9 5c b5 31 17 95 16 03  02 00 04 0e 00 00 00     |.\\.1...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 02 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 02 00 01  |..h.A.Vk.Z......|\n+00000050  01 16 03 02 00 40 00 00  00 00 00 00 00 00 00 00  |.....@..........|\n+00000060  00 00 00 00 00 00 8d 08  b9 eb b8 28 6a 9b b0 fb  |...........(j...|\n+00000070  c3 79 06 07 ed b2 e5 56  5e 80 5d 0a 12 3b 50 b7  |.y.....V^.]..;P.|\n+00000080  eb a0 6c eb aa d2 16 02  86 a8 76 13 23 65 ce ff  |..l.......v.#e..|\n+00000090  57 52 7c 30 f2 a0                                 |WR|0..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 02 00 01 01 16 03  02 00 40 8f b3 15 b3 54  |..........@....T|\n+00000010  3b e9 7e c5 ec b7 df 4b  ae e4 d7 0f e5 4a d5 8e  |;.~....K.....J..|\n+00000020  1c 94 f8 19 d9 a7 f3 5d  8b 18 6b 1f e8 a2 94 e4  |.......]..k.....|\n+00000030  f9 31 ed ab 38 3b 25 22  12 61 d6 c9 c7 76 6d 82  |.1..8;%\".a...vm.|\n+00000040  ac 16 02 89 73 4f 02 98  e2 95 0f                 |....sO.....|\n+>>> Flow 5 (client to server)\n+00000000  17 03 02 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+00000010  00 00 00 00 00 f3 c1 b3  fb 58 f0 ce 01 e4 23 4f  |.........X....#O|\n+00000020  de d9 81 9b d8 80 66 7a  fb 7b 45 1b a8 ac a0 f5  |......fz.{E.....|\n+00000030  0b b4 92 74 e9 15 03 02  00 30 00 00 00 00 00 00  |...t.....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 0b 89 72 90 d6 30  |............r..0|\n+00000050  1c fb 6d ab 68 79 48 6d  2a 32 1a 4f b7 45 0b 08  |..m.hyHm*2.O.E..|\n+00000060  11 dd 52 66 76 65 fc 02  e1 7e                    |..Rfve...~|"}, {"sha": "9a6de9ffccf47787d80c33ee4e946c22a464677d", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv11-ECDHE-RSA-AES", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-ECDHE-RSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,99 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 02 00 54 02 00 00  50 03 02 52 ac 77 f7 e5  |....T...P..R.w..|\n+00000010  29 8d 77 7e b2 af b8 50  dd 1f d4 2d 86 c1 bd c6  |).w~...P...-....|\n+00000020  13 77 41 6c a1 2a 68 20  80 ce 0f 20 b4 52 61 8d  |.wAl.*h ... .Ra.|\n+00000030  44 36 59 2b fa 58 be 5f  fa 69 f9 cd cf 4b 6f 9e  |D6Y+.X._.i...Ko.|\n+00000040  dd 2f bf 58 e1 5f 11 5f  fa 24 75 38 c0 13 00 00  |./.X._._.$u8....|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 02 02 be 0b 00  |................|\n+00000060  02 ba 00 02 b7 00 02 b4  30 82 02 b0 30 82 02 19  |........0...0...|\n+00000070  a0 03 02 01 02 02 09 00  85 b0 bb a4 8a 7f b8 ca  |................|\n+00000080  30 0d 06 09 2a 86 48 86  f7 0d 01 01 05 05 00 30  |0...*.H........0|\n+00000090  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+000000a0  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+000000b0  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+000000c0  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+000000d0  74 79 20 4c 74 64 30 1e  17 0d 31 30 30 34 32 34  |ty Ltd0...100424|\n+000000e0  30 39 30 39 33 38 5a 17  0d 31 31 30 34 32 34 30  |090938Z..1104240|\n+000000f0  39 30 39 33 38 5a 30 45  31 0b 30 09 06 03 55 04  |90938Z0E1.0...U.|\n+00000100  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000110  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000120  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000130  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 81 9f  |dgits Pty Ltd0..|\n+00000140  30 0d 06 09 2a 86 48 86  f7 0d 01 01 01 05 00 03  |0...*.H.........|\n+00000150  81 8d 00 30 81 89 02 81  81 00 bb 79 d6 f5 17 b5  |...0.......y....|\n+00000160  e5 bf 46 10 d0 dc 69 be  e6 2b 07 43 5a d0 03 2d  |..F...i..+.CZ..-|\n+00000170  8a 7a 43 85 b7 14 52 e7  a5 65 4c 2c 78 b8 23 8c  |.zC...R..eL,x.#.|\n+00000180  b5 b4 82 e5 de 1f 95 3b  7e 62 a5 2c a5 33 d6 fe  |.......;~b.,.3..|\n+00000190  12 5c 7a 56 fc f5 06 bf  fa 58 7b 26 3f b5 cd 04  |.\\zV.....X{&?...|\n+000001a0  d3 d0 c9 21 96 4a c7 f4  54 9f 5a bf ef 42 71 00  |...!.J..T.Z..Bq.|\n+000001b0  fe 18 99 07 7f 7e 88 7d  7d f1 04 39 c4 a2 2e db  |.....~.}}..9....|\n+000001c0  51 c9 7c e3 c0 4c 3b 32  66 01 cf af b1 1d b8 71  |Q.|..L;2f......q|\n+000001d0  9a 1d db db 89 6b ae da  2d 79 02 03 01 00 01 a3  |.....k..-y......|\n+000001e0  81 a7 30 81 a4 30 1d 06  03 55 1d 0e 04 16 04 14  |..0..0...U......|\n+000001f0  b1 ad e2 85 5a cf cb 28  db 69 ce 23 69 de d3 26  |....Z..(.i.#i..&|\n+00000200  8e 18 88 39 30 75 06 03  55 1d 23 04 6e 30 6c 80  |...90u..U.#.n0l.|\n+00000210  14 b1 ad e2 85 5a cf cb  28 db 69 ce 23 69 de d3  |.....Z..(.i.#i..|\n+00000220  26 8e 18 88 39 a1 49 a4  47 30 45 31 0b 30 09 06  |&...9.I.G0E1.0..|\n+00000230  03 55 04 06 13 02 41 55  31 13 30 11 06 03 55 04  |.U....AU1.0...U.|\n+00000240  08 13 0a 53 6f 6d 65 2d  53 74 61 74 65 31 21 30  |...Some-State1!0|\n+00000250  1f 06 03 55 04 0a 13 18  49 6e 74 65 72 6e 65 74  |...U....Internet|\n+00000260  20 57 69 64 67 69 74 73  20 50 74 79 20 4c 74 64  | Widgits Pty Ltd|\n+00000270  82 09 00 85 b0 bb a4 8a  7f b8 ca 30 0c 06 03 55  |...........0...U|\n+00000280  1d 13 04 05 30 03 01 01  ff 30 0d 06 09 2a 86 48  |....0....0...*.H|\n+00000290  86 f7 0d 01 01 05 05 00  03 81 81 00 08 6c 45 24  |.............lE$|\n+000002a0  c7 6b b1 59 ab 0c 52 cc  f2 b0 14 d7 87 9d 7a 64  |.k.Y..R.......zd|\n+000002b0  75 b5 5a 95 66 e4 c5 2b  8e ae 12 66 1f eb 4f 38  |u.Z.f..+...f..O8|\n+000002c0  b3 6e 60 d3 92 fd f7 41  08 b5 25 13 b1 18 7a 24  |.n`....A..%...z$|\n+000002d0  fb 30 1d ba ed 98 b9 17  ec e7 d7 31 59 db 95 d3  |.0.........1Y...|\n+000002e0  1d 78 ea 50 56 5c d5 82  5a 2d 5a 5f 33 c4 b6 d8  |.x.PV\\..Z-Z_3...|\n+000002f0  c9 75 90 96 8c 0f 52 98  b5 cd 98 1f 89 20 5f f2  |.u....R...... _.|\n+00000300  a0 1c a3 1b 96 94 dd a9  fd 57 e9 70 e8 26 6d 71  |.........W.p.&mq|\n+00000310  99 9b 26 6e 38 50 29 6c  90 a7 bd d9 16 03 02 00  |..&n8P)l........|\n+00000320  cb 0c 00 00 c7 03 00 17  41 04 f2 1f af 58 08 d7  |........A....X..|\n+00000330  4e ac d4 ee 2b 56 df 11  96 c8 01 d8 c8 0c 97 95  |N...+V..........|\n+00000340  3c 34 1c 24 8b e9 a0 92  1a 74 71 9c ee 56 ec 0f  |<4.$.....tq..V..|\n+00000350  b5 c6 3b 3c f1 a2 4d 52  11 f1 e3 3b 43 f8 fc 43  |..;<..MR...;C..C|\n+00000360  83 67 7d 62 c7 56 0c 38  01 5c 00 80 83 5f df 3b  |.g}b.V.8.\\..._.;|\n+00000370  fe 4f 90 30 c6 c3 c7 16  df 7b 58 dc 5a c1 68 e6  |.O.0.....{X.Z.h.|\n+00000380  18 7f 5e 4c 0f ae d2 f0  81 2c 48 a9 c4 7b 05 f6  |..^L.....,H..{..|\n+00000390  e0 9e 17 95 dd fe a3 53  32 57 12 f4 96 55 94 ff  |.......S2W...U..|\n+000003a0  0a ee cf 95 85 43 7c 75  fc f3 13 5e e0 cf c2 ff  |.....C|u...^....|\n+000003b0  56 c6 2b 60 09 b3 32 b2  1a 93 49 2e f0 b6 5c 2f  |V.+`..2...I...\\/|\n+000003c0  5a 45 c9 da 8c ee 26 72  ca 9e b4 63 13 a8 7d 60  |ZE....&r...c..}`|\n+000003d0  54 dd 17 70 40 60 15 e1  85 d5 64 02 83 e2 b3 e9  |T..p@`....d.....|\n+000003e0  b3 de 84 6e 9d 62 18 48  99 66 cd 63 16 03 02 00  |...n.b.H.f.c....|\n+000003f0  04 0e 00 00 00                                    |.....|\n+>>> Flow 3 (client to server)\n+00000000  16 03 02 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 02 00 01  |..h.A.Vk.Z......|\n+00000050  01 16 03 02 00 40 00 00  00 00 00 00 00 00 00 00  |.....@..........|\n+00000060  00 00 00 00 00 00 a4 c5  6a e0 d6 3d 47 a8 17 8f  |........j..=G...|\n+00000070  5e 21 57 ac d5 0a 7c f7  fb df 33 e2 68 c4 46 82  |^!W...|...3.h.F.|\n+00000080  b4 48 d2 d3 f5 79 14 0a  db f9 00 f2 59 ff c3 f4  |.H...y......Y...|\n+00000090  11 a2 e9 90 49 d6                                 |....I.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 02 00 01 01 16 03  02 00 40 84 bb 5f a3 9a  |..........@.._..|\n+00000010  07 af bf a2 3a 48 23 7c  a9 45 0c 07 ba ea bf 62  |....:H#|.E.....b|\n+00000020  c0 4f f3 2f f1 70 0e b1  ee ec 90 4e ea b4 0f 50  |.O./.p.....N...P|\n+00000030  47 e2 29 f3 ef ee 01 c7  eb db a4 56 d6 e8 d9 77  |G.)........V...w|\n+00000040  9a 64 42 50 40 42 d9 4b  ef 04 48                 |.dBP@B.K..H|\n+>>> Flow 5 (client to server)\n+00000000  17 03 02 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+00000010  00 00 00 00 00 d4 03 ec  a2 a8 1b 0a 4f 63 36 5e  |............Oc6^|\n+00000020  df 85 45 e0 e7 1e 2d 48  be 2f 1a 09 5f 02 cb 91  |..E...-H./.._...|\n+00000030  b2 76 35 39 a2 15 03 02  00 30 00 00 00 00 00 00  |.v59.....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 b1 f1 a5 97 1d e5  |................|\n+00000050  29 4c e4 d0 c7 43 3a 43  b1 15 fc 84 6e 54 ab 92  |)L...C:C....nT..|\n+00000060  d4 c0 62 c9 fc 8b 73 83  62 a3                    |..b...s.b.|"}, {"sha": "fb39b4a9db15f65d1568fe1071b7d25e5acaba9f", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv11-RSA-RC4", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv11-RSA-RC4?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,82 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 02 00 4a 02 00 00  46 03 02 52 ac 77 f7 01  |....J...F..R.w..|\n+00000010  a9 ef 15 61 bf ac 76 b1  88 0d de 98 8c de f4 3e  |...a..v........>|\n+00000020  52 04 64 33 6f ca b5 b4  19 5b 8f 20 1a d3 25 e1  |R.d3o....[. ..%.|\n+00000030  d0 17 4c 71 8e ec 5b be  e6 99 f0 c0 07 76 8a be  |..Lq..[......v..|\n+00000040  43 35 9b 98 71 e4 22 cc  88 48 fb c0 00 05 00 16  |C5..q.\"..H......|\n+00000050  03 02 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+00000310  bd d9 16 03 02 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 02 00 86 10 00 00  82 00 80 6d 51 f3 7f f9  |...........mQ...|\n+00000010  3e fb 75 82 41 36 83 e8  6a ee 2a 2e 25 90 67 4c  |>.u.A6..j.*.%.gL|\n+00000020  8e 62 2f 30 81 17 e0 85  09 0c 2b b7 23 d7 b0 e2  |.b/0......+.#...|\n+00000030  1d f7 3b d7 f5 a1 27 b6  ee 24 b6 1b cc 5b ea 66  |..;...'..$...[.f|\n+00000040  0d 6a f4 e5 85 f9 da 43  b4 0e 86 85 e1 f5 aa be  |.j.....C........|\n+00000050  c8 ce 39 4c 9c 86 00 08  c2 4b e2 c6 ec 2f f7 ce  |..9L.....K.../..|\n+00000060  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n+00000070  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n+00000080  35 d4 1c 43 d1 30 6f 55  4e 0a 70 14 03 02 00 01  |5..C.0oUN.p.....|\n+00000090  01 16 03 02 00 24 8e 02  46 f8 a6 27 03 86 ce 21  |.....$..F..'...!|\n+000000a0  3e c1 64 75 2d fa db 7c  01 2f 89 43 9a 75 63 92  |>.du-..|./.C.uc.|\n+000000b0  b0 03 5e a8 97 59 40 81  75 10                    |..^..Y@.u.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 02 00 01 01 16 03  02 00 24 0f 50 8b d8 76  |..........$.P..v|\n+00000010  1b 47 9d 1a 8f 8c 48 d1  1d 14 57 f5 54 6b f8 59  |.G....H...W.Tk.Y|\n+00000020  cf 2c 6e ab f6 cb dd 43  0d f7 59 6d 41 cb 50     |.,n....C..YmA.P|\n+>>> Flow 5 (client to server)\n+00000000  17 03 02 00 1a 3d 52 8b  ae aa b7 15 dd 68 bd b5  |.....=R......h..|\n+00000010  bb 49 fb 5c ab eb aa cd  1e af 5b 3c 75 6f 51 15  |.I.\\......[<uoQ.|\n+00000020  03 02 00 16 ca fb 12 88  a0 47 f3 fa 9c d9 21 ee  |.........G....!.|\n+00000030  20 35 0c 6d 37 04 2c 75  f8 c6                    | 5.m7.,u..|"}, {"sha": "1cc6b3bdc134b1b3dfadd5729ffeb2eaf6fba858", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-ECDSA-ECDSA", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-ECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-ECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-ECDSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,133 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f8 c5  |....T...P..R.w..|\n+00000010  96 12 04 26 41 58 b0 da  a3 63 a6 7c 30 17 a4 95  |...&AX...c.|0...|\n+00000020  72 dc 9b 08 6b 5c cd f0  93 9e 64 20 b7 5d af c1  |r...k\\....d .]..|\n+00000030  b7 ca 6f 52 3b d8 51 da  34 4a 39 38 31 ed 69 01  |..oR;.Q.4J981.i.|\n+00000040  bf e5 57 4c bb 90 07 f8  7b 59 e4 4c c0 09 00 00  |..WL....{Y.L....|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 0e 0b 00  |................|\n+00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n+00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n+00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n+00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n+000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n+000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n+000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n+00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n+00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n+00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n+00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n+00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n+00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n+000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n+000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n+000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n+000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n+000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n+000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n+00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n+00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n+00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n+00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n+00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n+00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n+00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 03 00  |6$1{j.9....*....|\n+00000270  d7 0c 00 00 d3 03 00 17  41 04 d8 75 d0 64 77 b8  |........A..u.dw.|\n+00000280  77 cf 62 09 56 22 8d 7c  c9 ad 95 b6 20 e1 22 53  |w.b.V\".|.... .\"S|\n+00000290  04 a2 ff ef 55 98 32 a1  93 35 0d 75 21 cf f3 8b  |....U.2..5.u!...|\n+000002a0  75 f1 8c da 6a d1 4d 3f  ee 45 bd 10 4c c3 cc 45  |u...j.M?.E..L..E|\n+000002b0  ea 3c f7 6d 0f be 49 2c  f7 82 04 03 00 8a 30 81  |.<.m..I,......0.|\n+000002c0  87 02 42 01 d5 04 fa a4  10 ff 0e 5f bb a3 ab ae  |..B........_....|\n+000002d0  19 ee f0 cf 01 f1 c5 5a  ed b3 2c 08 21 e2 36 2f  |.......Z..,.!.6/|\n+000002e0  ef ab 04 ab 03 2f 8c 3a  c6 1d 02 44 ca 91 dd 43  |...../.:...D...C|\n+000002f0  a5 00 08 0c 5d ff d7 4e  31 5c 0c b3 da 7f 6d 6d  |....]..N1\\....mm|\n+00000300  0a ef 36 2e 55 02 41 2e  74 02 05 c1 4f 48 6e 3a  |..6.U.A.t...OHn:|\n+00000310  59 fc 67 1d 31 b2 85 67  24 ea ed be 99 87 b3 03  |Y.g.1..g$.......|\n+00000320  3c a5 bb fa f0 39 39 b6  a1 3a 3d b0 7e c4 c8 8f  |<....99..:=.~...|\n+00000330  5b 74 9c bf df a0 84 f5  6c c5 c8 2a b5 65 f3 60  |[t......l..*.e.`|\n+00000340  5f 38 10 c7 9b 71 64 a3  16 03 03 00 30 0d 00 00  |_8...qd.....0...|\n+00000350  28 03 01 02 40 00 20 06  01 06 02 06 03 05 01 05  |(...@. .........|\n+00000360  02 05 03 04 01 04 02 04  03 03 01 03 02 03 03 02  |................|\n+00000370  01 02 02 02 03 01 01 00  00 0e 00 00 00           |.............|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n+00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n+00000020  d9 17 30 09 06 07 2a 86  48 ce 3d 04 01 30 45 31  |..0...*.H.=..0E1|\n+00000030  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000040  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000050  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000060  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000070  20 4c 74 64 30 1e 17 0d  31 32 31 31 31 34 31 33  | Ltd0...12111413|\n+00000080  32 35 35 33 5a 17 0d 32  32 31 31 31 32 31 33 32  |2553Z..221112132|\n+00000090  35 35 33 5a 30 41 31 0b  30 09 06 03 55 04 06 13  |553Z0A1.0...U...|\n+000000a0  02 41 55 31 0c 30 0a 06  03 55 04 08 13 03 4e 53  |.AU1.0...U....NS|\n+000000b0  57 31 10 30 0e 06 03 55  04 07 13 07 50 79 72 6d  |W1.0...U....Pyrm|\n+000000c0  6f 6e 74 31 12 30 10 06  03 55 04 03 13 09 4a 6f  |ont1.0...U....Jo|\n+000000d0  65 6c 20 53 69 6e 67 30  81 9b 30 10 06 07 2a 86  |el Sing0..0...*.|\n+000000e0  48 ce 3d 02 01 06 05 2b  81 04 00 23 03 81 86 00  |H.=....+...#....|\n+000000f0  04 00 95 8c 91 75 14 c0  5e c4 57 b4 d4 c3 6f 8d  |.....u..^.W...o.|\n+00000100  ae 68 1e dd 6f ce 86 e1  7e 6e b2 48 3e 81 e5 4e  |.h..o...~n.H>..N|\n+00000110  e2 c6 88 4b 64 dc f5 30  bb d3 ff 65 cc 5b f4 dd  |...Kd..0...e.[..|\n+00000120  b5 6a 3e 3e d0 1d de 47  c3 76 ad 19 f6 45 2c 8c  |.j>>...G.v...E,.|\n+00000130  bc d8 1d 01 4c 1f 70 90  46 76 48 8b 8f 83 cc 4a  |....L.p.FvH....J|\n+00000140  5c 8f 40 76 da e0 89 ec  1d 2b c4 4e 30 76 28 41  |\\.@v.....+.N0v(A|\n+00000150  b2 62 a8 fb 5b f1 f9 4e  7a 8d bd 09 b8 ae ea 8b  |.b..[..Nz.......|\n+00000160  18 27 4f 2e 70 fe 13 96  ba c3 d3 40 16 cd 65 4e  |.'O.p......@..eN|\n+00000170  ac 11 1e e6 f1 30 09 06  07 2a 86 48 ce 3d 04 01  |.....0...*.H.=..|\n+00000180  03 81 8c 00 30 81 88 02  42 00 e0 14 c4 60 60 0b  |....0...B....``.|\n+00000190  72 68 b0 32 5d 61 4a 02  74 5c c2 81 b9 16 a8 3f  |rh.2]aJ.t\\.....?|\n+000001a0  29 c8 36 c7 81 ff 6c b6  5b d9 70 f1 38 3b 50 48  |).6...l.[.p.8;PH|\n+000001b0  28 94 cb 09 1a 52 f1 5d  ee 8d f2 b9 f0 f0 da d9  |(....R.]........|\n+000001c0  15 3a f9 bd 03 7a 87 a2  23 35 ec 02 42 01 a3 d4  |.:...z..#5..B...|\n+000001d0  8a 78 35 1c 4a 9a 23 d2  0a be 2b 10 31 9d 9c 5f  |.x5.J.#...+.1.._|\n+000001e0  be e8 91 b3 da 1a f5 5d  a3 23 f5 26 8b 45 70 8d  |.......].#.&.Ep.|\n+000001f0  65 62 9b 7e 01 99 3d 18  f6 10 9a 38 61 9b 2e 57  |eb.~..=....8a..W|\n+00000200  e4 fa cc b1 8a ce e2 23  a0 87 f0 e1 67 51 eb 16  |.......#....gQ..|\n+00000210  03 03 00 46 10 00 00 42  41 04 1e 18 37 ef 0d 19  |...F...BA...7...|\n+00000220  51 88 35 75 71 b5 e5 54  5b 12 2e 8f 09 67 fd a7  |Q.5uq..T[....g..|\n+00000230  24 20 3e b2 56 1c ce 97  28 5e f8 2b 2d 4f 9e f1  |$ >.V...(^.+-O..|\n+00000240  07 9f 6c 4b 5b 83 56 e2  32 42 e9 58 b6 d7 49 a6  |..lK[.V.2B.X..I.|\n+00000250  b5 68 1a 41 03 56 6b dc  5a 89 16 03 03 00 92 0f  |.h.A.Vk.Z.......|\n+00000260  00 00 8e 04 03 00 8a 30  81 87 02 42 00 c6 85 8e  |.......0...B....|\n+00000270  06 b7 04 04 e9 cd 9e 3e  cb 66 23 95 b4 42 9c 64  |.......>.f#..B.d|\n+00000280  81 39 05 3f b5 21 f8 28  af 60 6b 4d 3d ba a1 4b  |.9.?.!.(.`kM=..K|\n+00000290  5e 77 ef e7 59 28 fe 1d  c1 27 a2 ff a8 de 33 48  |^w..Y(...'....3H|\n+000002a0  b3 c1 85 6a 42 9b f9 7e  7e 31 c2 e5 bd 66 02 41  |...jB..~~1...f.A|\n+000002b0  4b 49 c6 cd 02 e3 83 f7  03 50 18 6d b4 c9 51 02  |KI.......P.m..Q.|\n+000002c0  c0 ab 87 bc e0 3e 4b 89  53 3a e2 65 89 97 02 c1  |.....>K.S:.e....|\n+000002d0  88 4a bb 6d c8 1f 2a 63  e4 a7 25 02 5c 95 a7 f1  |.J.m..*c..%.\\...|\n+000002e0  2c 8f bb f1 f6 95 31 b6  6b bc 29 61 b6 36 27 6e  |,.....1.k.)a.6'n|\n+000002f0  ee 14 03 03 00 01 01 16  03 03 00 40 00 00 00 00  |...........@....|\n+00000300  00 00 00 00 00 00 00 00  00 00 00 00 2b ec 49 d6  |............+.I.|\n+00000310  bc 29 f0 dd ad 8f 56 56  1f e1 1e 8a 52 f1 ec d0  |.)....VV....R...|\n+00000320  60 21 d9 6f e0 82 7b 5a  de 2d 9e e9 74 6d 7a e5  |`!.o..{Z.-..tmz.|\n+00000330  c6 9f 6b da 1e 4c d6 2e  e8 57 cd 9f              |..k..L...W..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 17 41 a0 69 d4  |..........@.A.i.|\n+00000010  a0 9d aa dd 16 bf 06 ef  8d 63 e2 c8 d8 60 d9 a1  |.........c...`..|\n+00000020  15 9e 28 76 6c 68 07 1a  e9 d6 68 f7 d2 51 5e b2  |..(vlh....h..Q^.|\n+00000030  fb 5a 3c 39 5f d9 6a 1f  dd 23 06 63 47 b5 9e c1  |.Z<9_.j..#.cG...|\n+00000040  7f 7a 3a e9 d9 fa 72 8a  44 e8 01                 |.z:...r.D..|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+00000010  00 00 00 00 00 36 4a d2  bf e3 17 b8 b0 08 09 2e  |.....6J.........|\n+00000020  75 9e 67 b6 86 09 6a f5  ed fa 75 3a 17 1e a8 9e  |u.g...j...u:....|\n+00000030  50 e7 b5 79 75 15 03 03  00 30 00 00 00 00 00 00  |P..yu....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 ee b2 c1 37 7d 4d  |.............7}M|\n+00000050  9c 00 34 26 42 7f 3b d1  f2 f1 a9 7d 35 18 25 bb  |..4&B.;....}5.%.|\n+00000060  a5 46 cc 2c 2b 90 02 a2  3b cc                    |.F.,+...;.|"}, {"sha": "04368440ff8edeea2976401eb1d116a67a9cb31c", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-ECDSA-RSA", "status": "added", "additions": 127, "deletions": 0, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-RSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-RSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-ECDSA-RSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,127 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 4a 02 00 00  46 03 03 52 ac 77 f8 46  |....J...F..R.w.F|\n+00000010  c2 25 41 4d f8 87 23 8f  4b f7 71 de cf 3b 78 df  |.%AM..#.K.q..;x.|\n+00000020  77 c6 71 a2 6e f6 87 de  31 c6 89 20 23 7f ad 48  |w.q.n...1.. #..H|\n+00000030  70 f7 2c 4f 87 c8 fb fd  0c 6f af a3 c1 a9 be 57  |p.,O.....o.....W|\n+00000040  0f e0 d4 cc 2c f3 31 94  6f 60 b0 1e 00 05 00 16  |....,.1.o`......|\n+00000050  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+00000310  bd d9 16 03 03 00 30 0d  00 00 28 03 01 02 40 00  |......0...(...@.|\n+00000320  20 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04  | ...............|\n+00000330  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 01  |................|\n+00000340  01 00 00 0e 00 00 00                              |.......|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n+00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n+00000020  d9 17 30 09 06 07 2a 86  48 ce 3d 04 01 30 45 31  |..0...*.H.=..0E1|\n+00000030  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000040  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000050  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000060  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000070  20 4c 74 64 30 1e 17 0d  31 32 31 31 31 34 31 33  | Ltd0...12111413|\n+00000080  32 35 35 33 5a 17 0d 32  32 31 31 31 32 31 33 32  |2553Z..221112132|\n+00000090  35 35 33 5a 30 41 31 0b  30 09 06 03 55 04 06 13  |553Z0A1.0...U...|\n+000000a0  02 41 55 31 0c 30 0a 06  03 55 04 08 13 03 4e 53  |.AU1.0...U....NS|\n+000000b0  57 31 10 30 0e 06 03 55  04 07 13 07 50 79 72 6d  |W1.0...U....Pyrm|\n+000000c0  6f 6e 74 31 12 30 10 06  03 55 04 03 13 09 4a 6f  |ont1.0...U....Jo|\n+000000d0  65 6c 20 53 69 6e 67 30  81 9b 30 10 06 07 2a 86  |el Sing0..0...*.|\n+000000e0  48 ce 3d 02 01 06 05 2b  81 04 00 23 03 81 86 00  |H.=....+...#....|\n+000000f0  04 00 95 8c 91 75 14 c0  5e c4 57 b4 d4 c3 6f 8d  |.....u..^.W...o.|\n+00000100  ae 68 1e dd 6f ce 86 e1  7e 6e b2 48 3e 81 e5 4e  |.h..o...~n.H>..N|\n+00000110  e2 c6 88 4b 64 dc f5 30  bb d3 ff 65 cc 5b f4 dd  |...Kd..0...e.[..|\n+00000120  b5 6a 3e 3e d0 1d de 47  c3 76 ad 19 f6 45 2c 8c  |.j>>...G.v...E,.|\n+00000130  bc d8 1d 01 4c 1f 70 90  46 76 48 8b 8f 83 cc 4a  |....L.p.FvH....J|\n+00000140  5c 8f 40 76 da e0 89 ec  1d 2b c4 4e 30 76 28 41  |\\.@v.....+.N0v(A|\n+00000150  b2 62 a8 fb 5b f1 f9 4e  7a 8d bd 09 b8 ae ea 8b  |.b..[..Nz.......|\n+00000160  18 27 4f 2e 70 fe 13 96  ba c3 d3 40 16 cd 65 4e  |.'O.p......@..eN|\n+00000170  ac 11 1e e6 f1 30 09 06  07 2a 86 48 ce 3d 04 01  |.....0...*.H.=..|\n+00000180  03 81 8c 00 30 81 88 02  42 00 e0 14 c4 60 60 0b  |....0...B....``.|\n+00000190  72 68 b0 32 5d 61 4a 02  74 5c c2 81 b9 16 a8 3f  |rh.2]aJ.t\\.....?|\n+000001a0  29 c8 36 c7 81 ff 6c b6  5b d9 70 f1 38 3b 50 48  |).6...l.[.p.8;PH|\n+000001b0  28 94 cb 09 1a 52 f1 5d  ee 8d f2 b9 f0 f0 da d9  |(....R.]........|\n+000001c0  15 3a f9 bd 03 7a 87 a2  23 35 ec 02 42 01 a3 d4  |.:...z..#5..B...|\n+000001d0  8a 78 35 1c 4a 9a 23 d2  0a be 2b 10 31 9d 9c 5f  |.x5.J.#...+.1.._|\n+000001e0  be e8 91 b3 da 1a f5 5d  a3 23 f5 26 8b 45 70 8d  |.......].#.&.Ep.|\n+000001f0  65 62 9b 7e 01 99 3d 18  f6 10 9a 38 61 9b 2e 57  |eb.~..=....8a..W|\n+00000200  e4 fa cc b1 8a ce e2 23  a0 87 f0 e1 67 51 eb 16  |.......#....gQ..|\n+00000210  03 03 00 86 10 00 00 82  00 80 6d 51 f3 7f f9 3e  |..........mQ...>|\n+00000220  fb 75 82 41 36 83 e8 6a  ee 2a 2e 25 90 67 4c 8e  |.u.A6..j.*.%.gL.|\n+00000230  62 2f 30 81 17 e0 85 09  0c 2b b7 23 d7 b0 e2 1d  |b/0......+.#....|\n+00000240  f7 3b d7 f5 a1 27 b6 ee  24 b6 1b cc 5b ea 66 0d  |.;...'..$...[.f.|\n+00000250  6a f4 e5 85 f9 da 43 b4  0e 86 85 e1 f5 aa be c8  |j.....C.........|\n+00000260  ce 39 4c 9c 86 00 08 c2  4b e2 c6 ec 2f f7 ce e6  |.9L.....K.../...|\n+00000270  bd 77 82 6f 23 b6 e0 bd  a2 92 b7 3a ac e8 56 f1  |.w.o#......:..V.|\n+00000280  af 54 5e 46 87 e9 3b 33  e7 b8 28 b7 d6 c8 90 35  |.T^F..;3..(....5|\n+00000290  d4 1c 43 d1 30 6f 55 4e  0a 70 16 03 03 00 92 0f  |..C.0oUN.p......|\n+000002a0  00 00 8e 04 03 00 8a 30  81 87 02 42 00 c6 85 8e  |.......0...B....|\n+000002b0  06 b7 04 04 e9 cd 9e 3e  cb 66 23 95 b4 42 9c 64  |.......>.f#..B.d|\n+000002c0  81 39 05 3f b5 21 f8 28  af 60 6b 4d 3d ba a1 4b  |.9.?.!.(.`kM=..K|\n+000002d0  5e 77 ef e7 59 28 fe 1d  c1 27 a2 ff a8 de 33 48  |^w..Y(...'....3H|\n+000002e0  b3 c1 85 6a 42 9b f9 7e  7e 31 c2 e5 bd 66 02 41  |...jB..~~1...f.A|\n+000002f0  4b 49 c6 cd 02 e3 83 f7  03 50 18 6d b4 c9 51 02  |KI.......P.m..Q.|\n+00000300  c0 ab 87 bc e0 3e 4b 89  53 3a e2 65 89 97 02 c1  |.....>K.S:.e....|\n+00000310  88 e9 ba 78 0b 19 d9 81  39 02 7e b5 9f ec 53 0d  |...x....9.~...S.|\n+00000320  7e 92 80 e5 ca c5 4a 25  50 bf 85 3a 4c 0f 73 ca  |~.....J%P..:L.s.|\n+00000330  ef 14 03 03 00 01 01 16  03 03 00 24 d0 33 06 ab  |...........$.3..|\n+00000340  17 88 e1 65 44 18 3a 45  51 44 6f 0e 2e 85 61 33  |...eD.:EQDo...a3|\n+00000350  1d 1b bb 5b 89 b5 da f0  7d df 01 90 67 0c 27 4e  |...[....}...g.'N|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 4d ed 09 20 61  |..........$M.. a|\n+00000010  30 03 09 eb cd d5 84 29  82 90 84 50 1e e7 9b 7b  |0......)...P...{|\n+00000020  ec 8a 18 0c b5 6e 32 c7  65 fb 26 15 9e 79 41     |.....n2.e.&..yA|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 1a 85 47 11  25 35 d5 53 7f 3d 01 87  |......G.%5.S.=..|\n+00000010  14 58 90 f7 25 1a 56 99  7b a2 b9 31 86 b3 45 15  |.X..%.V.{..1..E.|\n+00000020  03 03 00 16 88 b2 fb 1c  f9 bb e6 7a a0 c0 d0 52  |...........z...R|\n+00000030  f2 f9 b8 e4 5d e5 b7 a0  96 ca                    |....].....|"}, {"sha": "5c4b62321f1cb30e493cb1cb10f319baf33dc222", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-RSA-ECDSA", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-ECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-ECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-ECDSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,132 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f8 85  |....T...P..R.w..|\n+00000010  40 fe 2e 6e 8e 8b 52 83  0e 17 63 15 6e a8 07 43  |@..n..R...c.n..C|\n+00000020  de 66 78 c6 3b 54 c2 fe  a1 8e c8 20 d8 77 b3 a3  |.fx.;T..... .w..|\n+00000030  2e bf c7 0f 1a 2f 0a 76  c7 e3 a6 62 ae 4b 57 0a  |...../.v...b.KW.|\n+00000040  78 ed 7e ea 4f 4e ce 97  72 b1 04 78 c0 09 00 00  |x.~.ON..r..x....|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 0e 0b 00  |................|\n+00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n+00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n+00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n+00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n+000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n+000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n+000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n+00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n+00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n+00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n+00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n+00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n+00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n+000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n+000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n+000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n+000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n+000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n+000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n+00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n+00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n+00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n+00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n+00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n+00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n+00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 03 00  |6$1{j.9....*....|\n+00000270  d8 0c 00 00 d4 03 00 17  41 04 d9 d2 72 4b ef c3  |........A...rK..|\n+00000280  be a2 5b fc b3 75 52 c9  b4 5d 56 bf 23 2e e6 18  |..[..uR..]V.#...|\n+00000290  96 df 4b 67 af 1c 11 c3  17 fa d5 43 81 d6 91 c3  |..Kg.......C....|\n+000002a0  b2 0a d8 cc b9 24 36 1d  74 4e bf 1e 20 2f 77 cd  |.....$6.tN.. /w.|\n+000002b0  6a 3b d7 07 b9 17 e8 ad  1d 5a 04 03 00 8b 30 81  |j;.......Z....0.|\n+000002c0  88 02 42 01 9d ae 1a b6  0f 0a 0d 1b e1 d7 30 8c  |..B...........0.|\n+000002d0  f1 63 1c 0a b9 9a 06 ef  23 59 4d c7 ba 86 ec 7e  |.c......#YM....~|\n+000002e0  e4 5b 95 21 ea 7b 28 d2  a1 8c 9c fe 80 25 63 5f  |.[.!.{(......%c_|\n+000002f0  42 e7 a2 59 db 76 de a2  66 cc 99 c7 96 a2 0a 54  |B..Y.v..f......T|\n+00000300  15 62 cb d4 59 02 42 00  80 29 a2 cb a7 f4 ce 1d  |.b..Y.B..)......|\n+00000310  4b 99 9b c1 36 70 a7 18  a4 94 8a 4b 02 6d 25 a6  |K...6p.....K.m%.|\n+00000320  00 7c 84 09 21 db 31 0f  0d cc 4a 57 b6 44 5b cd  |.|..!.1...JW.D[.|\n+00000330  1b be 16 ec d7 0c e4 27  bb 13 33 e9 d2 ae 13 c5  |.......'..3.....|\n+00000340  05 c1 48 fd f3 c6 f9 a2  e0 16 03 03 00 30 0d 00  |..H..........0..|\n+00000350  00 28 03 01 02 40 00 20  06 01 06 02 06 03 05 01  |.(...@. ........|\n+00000360  05 02 05 03 04 01 04 02  04 03 03 01 03 02 03 03  |................|\n+00000370  02 01 02 02 02 03 01 01  00 00 0e 00 00 00        |..............|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n+00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n+00000020  0b 06 09 2a 86 48 86 f7  0d 01 01 05 30 26 31 10  |...*.H......0&1.|\n+00000030  30 0e 06 03 55 04 0a 13  07 41 63 6d 65 20 43 6f  |0...U....Acme Co|\n+00000040  31 12 30 10 06 03 55 04  03 13 09 31 32 37 2e 30  |1.0...U....127.0|\n+00000050  2e 30 2e 31 30 1e 17 0d  31 31 31 32 30 38 30 37  |.0.10...11120807|\n+00000060  35 35 31 32 5a 17 0d 31  32 31 32 30 37 30 38 30  |5512Z..121207080|\n+00000070  30 31 32 5a 30 26 31 10  30 0e 06 03 55 04 0a 13  |012Z0&1.0...U...|\n+00000080  07 41 63 6d 65 20 43 6f  31 12 30 10 06 03 55 04  |.Acme Co1.0...U.|\n+00000090  03 13 09 31 32 37 2e 30  2e 30 2e 31 30 81 9c 30  |...127.0.0.10..0|\n+000000a0  0b 06 09 2a 86 48 86 f7  0d 01 01 01 03 81 8c 00  |...*.H..........|\n+000000b0  30 81 88 02 81 80 4e d0  7b 31 e3 82 64 d9 59 c0  |0.....N.{1..d.Y.|\n+000000c0  c2 87 a4 5e 1e 8b 73 33  c7 63 53 df 66 92 06 84  |...^..s3.cS.f...|\n+000000d0  f6 64 d5 8f e4 36 a7 1d  2b e8 b3 20 36 45 23 b5  |.d...6..+.. 6E#.|\n+000000e0  e3 95 ae ed e0 f5 20 9c  8d 95 df 7f 5a 12 ef 87  |...... .....Z...|\n+000000f0  e4 5b 68 e4 e9 0e 74 ec  04 8a 7f de 93 27 c4 01  |.[h...t......'..|\n+00000100  19 7a bd f2 dc 3d 14 ab  d0 54 ca 21 0c d0 4d 6e  |.z...=...T.!..Mn|\n+00000110  87 2e 5c c5 d2 bb 4d 4b  4f ce b6 2c f7 7e 88 ec  |..\\...MKO..,.~..|\n+00000120  7c d7 02 91 74 a6 1e 0c  1a da e3 4a 5a 2e de 13  ||...t......JZ...|\n+00000130  9c 4c 40 88 59 93 02 03  01 00 01 a3 32 30 30 30  |.L@.Y.......2000|\n+00000140  0e 06 03 55 1d 0f 01 01  ff 04 04 03 02 00 a0 30  |...U...........0|\n+00000150  0d 06 03 55 1d 0e 04 06  04 04 01 02 03 04 30 0f  |...U..........0.|\n+00000160  06 03 55 1d 23 04 08 30  06 80 04 01 02 03 04 30  |..U.#..0.......0|\n+00000170  0b 06 09 2a 86 48 86 f7  0d 01 01 05 03 81 81 00  |...*.H..........|\n+00000180  36 1f b3 7a 0c 75 c9 6e  37 46 61 2b d5 bd c0 a7  |6..z.u.n7Fa+....|\n+00000190  4b cc 46 9a 81 58 7c 85  79 29 c8 c8 c6 67 dd 32  |K.F..X|.y)...g.2|\n+000001a0  56 45 2b 75 b6 e9 24 a9  50 9a be 1f 5a fa 1a 15  |VE+u..$.P...Z...|\n+000001b0  d9 cc 55 95 72 16 83 b9  c2 b6 8f fd 88 8c 38 84  |..U.r.........8.|\n+000001c0  1d ab 5d 92 31 13 4f fd  83 3b c6 9d f1 11 62 b6  |..].1.O..;....b.|\n+000001d0  8b ec ab 67 be c8 64 b0  11 50 46 58 17 6b 99 1c  |...g..d..PFX.k..|\n+000001e0  d3 1d fc 06 f1 0e e5 96  a8 0c f9 78 20 b7 44 18  |...........x .D.|\n+000001f0  51 8d 10 7e 4f 94 67 df  a3 4e 70 73 8e 90 91 85  |Q..~O.g..Nps....|\n+00000200  16 03 03 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000210  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000220  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000230  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000240  a6 b5 68 1a 41 03 56 6b  dc 5a 89 16 03 03 00 88  |..h.A.Vk.Z......|\n+00000250  0f 00 00 84 04 01 00 80  3c 05 23 6b 47 37 6c de  |........<.#kG7l.|\n+00000260  d9 21 fc c5 ba 63 15 5d  55 d0 1c 78 cc b7 76 6f  |.!...c.]U..x..vo|\n+00000270  97 d7 ce cc 28 e4 cb 2c  b4 33 c4 7b 39 3a da b8  |....(..,.3.{9:..|\n+00000280  0a 6d 79 be 30 86 21 2d  40 c9 7a 5e 44 98 b7 a2  |.my.0.!-@.z^D...|\n+00000290  23 9d d2 af 3d d1 df 08  a0 b5 87 9f 57 06 1b ab  |#...=.......W...|\n+000002a0  1e 8b e5 1f 09 71 cd df  7d 9b d3 bd a9 06 29 7f  |.....q..}.....).|\n+000002b0  6a 84 b7 1b c5 a4 ee 11  e4 11 23 c1 1c 64 00 0b  |j.........#..d..|\n+000002c0  07 49 ba 2b 40 95 57 0a  e5 02 ae a1 c1 e4 0b 31  |.I.+@.W........1|\n+000002d0  9b bf ad eb aa 74 a9 fa  14 03 03 00 01 01 16 03  |.....t..........|\n+000002e0  03 00 40 00 00 00 00 00  00 00 00 00 00 00 00 00  |..@.............|\n+000002f0  00 00 00 9b 04 da 20 1e  55 a7 d0 60 f3 7b 60 e2  |...... .U..`.{`.|\n+00000300  3e 46 59 73 84 f7 1c 19  93 c5 53 95 bf 24 05 c9  |>FYs......S..$..|\n+00000310  68 40 53 a9 b8 da 98 2b  08 9e 02 39 b0 a3 3f aa  |h@S....+...9..?.|\n+00000320  eb ba 9c                                          |...|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 23 ec df cd 12  |..........@#....|\n+00000010  ca 13 f8 b5 75 10 af a0  27 a7 cf f5 d7 a7 46 68  |....u...'.....Fh|\n+00000020  44 6b 7e cf 0b ce dc 86  5f b7 35 16 5f 01 ae c9  |Dk~....._.5._...|\n+00000030  16 15 ae 4c 9e 7a ca 8e  ae dd cb ec 24 32 32 9c  |...L.z......$22.|\n+00000040  b4 b7 61 78 18 0b ee 61  74 6d 0b                 |..ax...atm.|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+00000010  00 00 00 00 00 d7 7d 87  ac 42 06 f2 4e d3 71 0c  |......}..B..N.q.|\n+00000020  1b 62 8c 81 03 38 85 7e  6c 31 ae 8c b4 04 2f 19  |.b...8.~l1..../.|\n+00000030  b1 c8 6c a2 6c 15 03 03  00 30 00 00 00 00 00 00  |..l.l....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 99 e8 4b a9 33 ec  |............K.3.|\n+00000050  f4 5e 60 5b c0 72 ef 61  6c e2 e0 5b 4d af f8 c6  |.^`[.r.al..[M...|\n+00000060  b6 57 be 07 a3 c0 fe cd  29 65                    |.W......)e|"}, {"sha": "f8f121234d7c343e57ddb8d4b154b49269f6b839", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ClientCert-RSA-RSA", "status": "added", "additions": 126, "deletions": 0, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-RSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-RSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ClientCert-RSA-RSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,126 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 4a 02 00 00  46 03 03 52 ac 77 f7 91  |....J...F..R.w..|\n+00000010  73 b5 51 be 27 c7 ba 60  72 d9 ca 1f f6 7e a2 c2  |s.Q.'..`r....~..|\n+00000020  ec 8a 16 39 9a 30 c8 46  3f 34 e8 20 90 e8 71 aa  |...9.0.F?4. ..q.|\n+00000030  9f 0a fe 6f f1 9c 5c 8d  10 51 45 ea 90 ef f8 6e  |...o..\\..QE....n|\n+00000040  88 ba 7e 37 00 e8 66 b9  53 6f 89 dc 00 05 00 16  |..~7..f.So......|\n+00000050  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+00000310  bd d9 16 03 03 00 30 0d  00 00 28 03 01 02 40 00  |......0...(...@.|\n+00000320  20 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04  | ...............|\n+00000330  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 01  |................|\n+00000340  01 00 00 0e 00 00 00                              |.......|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n+00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n+00000020  0b 06 09 2a 86 48 86 f7  0d 01 01 05 30 26 31 10  |...*.H......0&1.|\n+00000030  30 0e 06 03 55 04 0a 13  07 41 63 6d 65 20 43 6f  |0...U....Acme Co|\n+00000040  31 12 30 10 06 03 55 04  03 13 09 31 32 37 2e 30  |1.0...U....127.0|\n+00000050  2e 30 2e 31 30 1e 17 0d  31 31 31 32 30 38 30 37  |.0.10...11120807|\n+00000060  35 35 31 32 5a 17 0d 31  32 31 32 30 37 30 38 30  |5512Z..121207080|\n+00000070  30 31 32 5a 30 26 31 10  30 0e 06 03 55 04 0a 13  |012Z0&1.0...U...|\n+00000080  07 41 63 6d 65 20 43 6f  31 12 30 10 06 03 55 04  |.Acme Co1.0...U.|\n+00000090  03 13 09 31 32 37 2e 30  2e 30 2e 31 30 81 9c 30  |...127.0.0.10..0|\n+000000a0  0b 06 09 2a 86 48 86 f7  0d 01 01 01 03 81 8c 00  |...*.H..........|\n+000000b0  30 81 88 02 81 80 4e d0  7b 31 e3 82 64 d9 59 c0  |0.....N.{1..d.Y.|\n+000000c0  c2 87 a4 5e 1e 8b 73 33  c7 63 53 df 66 92 06 84  |...^..s3.cS.f...|\n+000000d0  f6 64 d5 8f e4 36 a7 1d  2b e8 b3 20 36 45 23 b5  |.d...6..+.. 6E#.|\n+000000e0  e3 95 ae ed e0 f5 20 9c  8d 95 df 7f 5a 12 ef 87  |...... .....Z...|\n+000000f0  e4 5b 68 e4 e9 0e 74 ec  04 8a 7f de 93 27 c4 01  |.[h...t......'..|\n+00000100  19 7a bd f2 dc 3d 14 ab  d0 54 ca 21 0c d0 4d 6e  |.z...=...T.!..Mn|\n+00000110  87 2e 5c c5 d2 bb 4d 4b  4f ce b6 2c f7 7e 88 ec  |..\\...MKO..,.~..|\n+00000120  7c d7 02 91 74 a6 1e 0c  1a da e3 4a 5a 2e de 13  ||...t......JZ...|\n+00000130  9c 4c 40 88 59 93 02 03  01 00 01 a3 32 30 30 30  |.L@.Y.......2000|\n+00000140  0e 06 03 55 1d 0f 01 01  ff 04 04 03 02 00 a0 30  |...U...........0|\n+00000150  0d 06 03 55 1d 0e 04 06  04 04 01 02 03 04 30 0f  |...U..........0.|\n+00000160  06 03 55 1d 23 04 08 30  06 80 04 01 02 03 04 30  |..U.#..0.......0|\n+00000170  0b 06 09 2a 86 48 86 f7  0d 01 01 05 03 81 81 00  |...*.H..........|\n+00000180  36 1f b3 7a 0c 75 c9 6e  37 46 61 2b d5 bd c0 a7  |6..z.u.n7Fa+....|\n+00000190  4b cc 46 9a 81 58 7c 85  79 29 c8 c8 c6 67 dd 32  |K.F..X|.y)...g.2|\n+000001a0  56 45 2b 75 b6 e9 24 a9  50 9a be 1f 5a fa 1a 15  |VE+u..$.P...Z...|\n+000001b0  d9 cc 55 95 72 16 83 b9  c2 b6 8f fd 88 8c 38 84  |..U.r.........8.|\n+000001c0  1d ab 5d 92 31 13 4f fd  83 3b c6 9d f1 11 62 b6  |..].1.O..;....b.|\n+000001d0  8b ec ab 67 be c8 64 b0  11 50 46 58 17 6b 99 1c  |...g..d..PFX.k..|\n+000001e0  d3 1d fc 06 f1 0e e5 96  a8 0c f9 78 20 b7 44 18  |...........x .D.|\n+000001f0  51 8d 10 7e 4f 94 67 df  a3 4e 70 73 8e 90 91 85  |Q..~O.g..Nps....|\n+00000200  16 03 03 00 86 10 00 00  82 00 80 6d 51 f3 7f f9  |...........mQ...|\n+00000210  3e fb 75 82 41 36 83 e8  6a ee 2a 2e 25 90 67 4c  |>.u.A6..j.*.%.gL|\n+00000220  8e 62 2f 30 81 17 e0 85  09 0c 2b b7 23 d7 b0 e2  |.b/0......+.#...|\n+00000230  1d f7 3b d7 f5 a1 27 b6  ee 24 b6 1b cc 5b ea 66  |..;...'..$...[.f|\n+00000240  0d 6a f4 e5 85 f9 da 43  b4 0e 86 85 e1 f5 aa be  |.j.....C........|\n+00000250  c8 ce 39 4c 9c 86 00 08  c2 4b e2 c6 ec 2f f7 ce  |..9L.....K.../..|\n+00000260  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n+00000270  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n+00000280  35 d4 1c 43 d1 30 6f 55  4e 0a 70 16 03 03 00 88  |5..C.0oUN.p.....|\n+00000290  0f 00 00 84 04 01 00 80  1d 50 f8 65 0a 2e e7 b8  |.........P.e....|\n+000002a0  4e 52 51 05 bd 9f 4f 7a  31 67 dd 6c 34 ea 45 30  |NRQ...Oz1g.l4.E0|\n+000002b0  57 0b ac a0 9c 41 f5 d7  82 1a fe 7d 3f 5d d4 b9  |W....A.....}?]..|\n+000002c0  38 b0 3d 0c f3 57 ff 8e  e8 52 3d be 91 54 c5 49  |8.=..W...R=..T.I|\n+000002d0  38 63 9e b8 8a 17 b5 36  29 e1 22 f5 a9 b8 f3 1a  |8c.....6).\".....|\n+000002e0  98 ab c3 32 3c 36 70 45  b0 25 e4 8c b7 e8 2c ea  |...2<6pE.%....,.|\n+000002f0  cf 62 cd c0 69 6d 35 c4  3b 77 4d 90 5a ba 35 de  |.b..im5.;wM.Z.5.|\n+00000300  6f 1d d3 ab bb e8 77 e7  83 6c b6 3c b3 ab b2 7e  |o.....w..l.<...~|\n+00000310  f4 52 b4 e0 5f c9 9e 0d  14 03 03 00 01 01 16 03  |.R.._...........|\n+00000320  03 00 24 8c 9a a2 e5 d5  9c af dc 73 d9 aa 86 a2  |..$........s....|\n+00000330  f5 ff 2f 66 f1 5f 1e 65  4f ba 57 37 4f 6d 3b 47  |../f._.eO.W7Om;G|\n+00000340  24 27 74 ca 91 3e e1                              |$'t..>.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 a0 10 09 ea 2c  |..........$....,|\n+00000010  f5 7c 55 41 84 35 47 d6  7d 75 09 fc 1a d7 b7 da  |.|UA.5G.}u......|\n+00000020  8f e0 2d fb c8 a5 9e 71  12 1e eb 64 6b bb ae     |..-....q...dk..|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 1a dd 2a cd  81 c7 ed c5 29 5f ef b2  |......*.....)_..|\n+00000010  f2 34 9e bb cb 00 75 8b  d5 3e a6 3e b8 42 cd 15  |.4....u..>.>.B..|\n+00000020  03 03 00 16 d5 4d e2 8f  8d f1 be 2d 85 fe 49 8a  |.....M.....-..I.|\n+00000030  8d f8 df ca e4 ed d0 22  72 e0                    |.......\"r.|"}, {"sha": "5ca0bbff05d6f6508a8ab84a633fc1016066647e", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ECDHE-ECDSA-AES", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,89 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f7 5e  |....T...P..R.w.^|\n+00000010  12 d1 1a fa 09 d7 e5 3c  eb 34 6f 79 3a 4f e8 7b  |.......<.4oy:O.{|\n+00000020  92 d7 bd ff 22 37 21 58  c2 73 c2 20 7e 17 7f 83  |....\"7!X.s. ~...|\n+00000030  36 9e 12 f1 ce c0 3a b3  02 7f 3f 6d 58 7e 71 fe  |6.....:...?mX~q.|\n+00000040  9c ce e2 7e f4 19 92 e3  45 57 69 5e c0 09 00 00  |...~....EWi^....|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 0e 0b 00  |................|\n+00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n+00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n+00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n+00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n+000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n+000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n+000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n+00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n+00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n+00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n+00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n+00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n+00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n+000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n+000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n+000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n+000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n+000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n+000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n+00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n+00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n+00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n+00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n+00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n+00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n+00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 03 00  |6$1{j.9....*....|\n+00000270  d8 0c 00 00 d4 03 00 17  41 04 81 cc fd bd 41 23  |........A.....A#|\n+00000280  dc cb a6 e5 8f 0b c9 bc  8a 0b 4a 26 e0 a6 5f 89  |..........J&.._.|\n+00000290  a0 10 50 41 4b a9 80 f1  bf c1 a0 c0 e1 97 40 47  |..PAK.........@G|\n+000002a0  f1 98 10 b2 73 a7 40 e6  8b 15 ed 83 37 4f 32 b9  |....s.@.....7O2.|\n+000002b0  1f 0b 91 11 33 46 70 15  35 4d 04 03 00 8b 30 81  |....3Fp.5M....0.|\n+000002c0  88 02 42 00 84 b5 7e 53  1d 32 a2 88 19 e6 bc a8  |..B...~S.2......|\n+000002d0  8a b9 e8 13 af 63 8c a2  af 39 3b e0 dc d3 13 f9  |.....c...9;.....|\n+000002e0  ec fe 4b 4a e1 7c 59 0a  ae 98 0c 5e ec 9b 33 d2  |..KJ.|Y....^..3.|\n+000002f0  b4 ff 9a ed de 5a be 21  29 ad a6 e6 d5 c4 63 ae  |.....Z.!).....c.|\n+00000300  b2 cd 8a dd 26 02 42 01  29 f0 0a 38 4d 14 ca 41  |....&.B.)..8M..A|\n+00000310  89 02 31 2e 37 46 1f 60  f8 8d 4a 11 8e 86 a1 80  |..1.7F.`..J.....|\n+00000320  10 be 13 79 a0 74 af 43  d8 b1 6e 52 33 3e eb bf  |...y.t.C..nR3>..|\n+00000330  39 87 22 53 95 a4 15 1a  e6 d1 90 39 65 ec 75 c0  |9.\"S.......9e.u.|\n+00000340  1c 58 fa 0b f1 83 04 f5  e7 16 03 03 00 04 0e 00  |.X..............|\n+00000350  00 00                                             |..|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 03 00 01  |..h.A.Vk.Z......|\n+00000050  01 16 03 03 00 40 00 00  00 00 00 00 00 00 00 00  |.....@..........|\n+00000060  00 00 00 00 00 00 dd af  5a 6c c7 fb 45 57 e9 0b  |........Zl..EW..|\n+00000070  33 b6 a9 42 7e d0 33 79  dc ba d2 9f 07 b2 a5 16  |3..B~.3y........|\n+00000080  31 30 5b 72 fb 27 10 ab  0b a9 cb 18 27 6f bd 75  |10[r.'......'o.u|\n+00000090  65 a8 94 ba 2d 18                                 |e...-.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 2a 60 dc bf a9  |..........@*`...|\n+00000010  7e 5e a9 97 17 ee 1e 62  e8 0f c5 f2 72 1b 11 86  |~^.....b....r...|\n+00000020  68 83 49 30 2e d4 08 32  80 16 1d 6a 4a 98 d2 e0  |h.I0...2...jJ...|\n+00000030  0b 0c fa 5b 1c 74 b6 83  b8 ec 3d c6 7c f4 c5 f1  |...[.t....=.|...|\n+00000040  d9 16 68 cf 32 1b 06 9b  18 fd f6                 |..h.2......|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+00000010  00 00 00 00 00 16 b5 36  aa c9 3d 27 04 cf 9f 37  |.......6..='...7|\n+00000020  a0 6c 35 d1 d3 dd 5b cf  a1 df aa e0 54 0b 5d d4  |.l5...[.....T.].|\n+00000030  b0 d3 44 18 5e 15 03 03  00 30 00 00 00 00 00 00  |..D.^....0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 ea de c9 15 ff e6  |................|\n+00000050  28 f8 5d c4 2a de 64 64  98 22 1e ea 75 2e a7 72  |(.].*.dd.\"..u..r|\n+00000060  65 95 98 0a e0 96 f4 de  ad 33                    |e........3|"}, {"sha": "079ccfd328533cb62b3b5172448b90740293f973", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ECDHE-ECDSA-AES-GCM", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES-GCM", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES-GCM", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-ECDSA-AES-GCM?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,84 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f7 a9  |....T...P..R.w..|\n+00000010  e1 80 2b b8 c5 87 2e 11  81 69 a3 0c 25 83 bb 69  |..+......i..%..i|\n+00000020  4c a0 c9 cf c0 b9 f4 be  7b 8b fc 20 d4 78 d2 91  |L.......{.. .x..|\n+00000030  37 58 b2 d6 0a ee 11 5c  31 c6 d3 58 83 38 c3 6a  |7X.....\\1..X.8.j|\n+00000040  2a da 64 70 02 0f ce f5  65 27 21 76 c0 2b 00 00  |*.dp....e'!v.+..|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 0e 0b 00  |................|\n+00000060  02 0a 00 02 07 00 02 04  30 82 02 00 30 82 01 62  |........0...0..b|\n+00000070  02 09 00 b8 bf 2d 47 a0  d2 eb f4 30 09 06 07 2a  |.....-G....0...*|\n+00000080  86 48 ce 3d 04 01 30 45  31 0b 30 09 06 03 55 04  |.H.=..0E1.0...U.|\n+00000090  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+000000a0  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+000000b0  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+000000c0  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 1e 17  |dgits Pty Ltd0..|\n+000000d0  0d 31 32 31 31 32 32 31  35 30 36 33 32 5a 17 0d  |.121122150632Z..|\n+000000e0  32 32 31 31 32 30 31 35  30 36 33 32 5a 30 45 31  |221120150632Z0E1|\n+000000f0  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000100  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000110  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000120  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000130  20 4c 74 64 30 81 9b 30  10 06 07 2a 86 48 ce 3d  | Ltd0..0...*.H.=|\n+00000140  02 01 06 05 2b 81 04 00  23 03 81 86 00 04 00 c4  |....+...#.......|\n+00000150  a1 ed be 98 f9 0b 48 73  36 7e c3 16 56 11 22 f2  |......Hs6~..V.\".|\n+00000160  3d 53 c3 3b 4d 21 3d cd  6b 75 e6 f6 b0 dc 9a df  |=S.;M!=.ku......|\n+00000170  26 c1 bc b2 87 f0 72 32  7c b3 64 2f 1c 90 bc ea  |&.....r2|.d/....|\n+00000180  68 23 10 7e fe e3 25 c0  48 3a 69 e0 28 6d d3 37  |h#.~..%.H:i.(m.7|\n+00000190  00 ef 04 62 dd 0d a0 9c  70 62 83 d8 81 d3 64 31  |...b....pb....d1|\n+000001a0  aa 9e 97 31 bd 96 b0 68  c0 9b 23 de 76 64 3f 1a  |...1...h..#.vd?.|\n+000001b0  5c 7f e9 12 0e 58 58 b6  5f 70 dd 9b d8 ea d5 d7  |\\....XX._p......|\n+000001c0  f5 d5 cc b9 b6 9f 30 66  5b 66 9a 20 e2 27 e5 bf  |......0f[f. .'..|\n+000001d0  fe 3b 30 09 06 07 2a 86  48 ce 3d 04 01 03 81 8c  |.;0...*.H.=.....|\n+000001e0  00 30 81 88 02 42 01 88  a2 4f eb e2 45 c5 48 7d  |.0...B...O..E.H}|\n+000001f0  1b ac f5 ed 98 9d ae 47  70 c0 5e 1b b6 2f bd f1  |.......Gp.^../..|\n+00000200  b6 4d b7 61 40 d3 11 a2  ce ee 0b 7e 92 7e ff 76  |.M.a@......~.~.v|\n+00000210  9d c3 3b 7e a5 3f ce fa  10 e2 59 ec 47 2d 7c ac  |..;~.?....Y.G-|.|\n+00000220  da 4e 97 0e 15 a0 6f d0  02 42 01 4d fc be 67 13  |.N....o..B.M..g.|\n+00000230  9c 2d 05 0e bd 3f a3 8c  25 c1 33 13 83 0d 94 06  |.-...?..%.3.....|\n+00000240  bb d4 37 7a f6 ec 7a c9  86 2e dd d7 11 69 7f 85  |..7z..z......i..|\n+00000250  7c 56 de fb 31 78 2b e4  c7 78 0d ae cb be 9e 4e  ||V..1x+..x.....N|\n+00000260  36 24 31 7b 6a 0f 39 95  12 07 8f 2a 16 03 03 00  |6$1{j.9....*....|\n+00000270  d7 0c 00 00 d3 03 00 17  41 04 b1 83 29 44 4d 61  |........A...)DMa|\n+00000280  7f 14 4e 4f 54 fc 9f fb  01 e7 ab 16 fb 28 20 fc  |..NOT........( .|\n+00000290  9a cb 75 50 b0 47 d5 3e  d3 41 0f 0f f7 dd c8 6f  |..uP.G.>.A.....o|\n+000002a0  b3 65 e2 e4 c4 2b 74 fa  4e f0 6d 27 5a 1a 5a 69  |.e...+t.N.m'Z.Zi|\n+000002b0  9d 44 78 f0 9b ec 4e cc  26 70 04 03 00 8a 30 81  |.Dx...N.&p....0.|\n+000002c0  87 02 42 01 16 f4 f8 7a  52 8b 0f 83 75 d9 4f b2  |..B....zR...u.O.|\n+000002d0  51 10 1c a6 30 6b ac 30  ab b9 00 38 b9 44 95 47  |Q...0k.0...8.D.G|\n+000002e0  4b 80 29 ca 36 f4 b2 86  32 25 14 7b 4a 99 14 18  |K.).6...2%.{J...|\n+000002f0  cd 3c 43 68 cb cf d8 cb  12 d8 1c 27 7b 4e de dd  |.<Ch.......'{N..|\n+00000300  91 d8 7a 23 de 02 41 4b  33 2b 28 83 e4 47 e9 a7  |..z#..AK3+(..G..|\n+00000310  fb aa 8a 3b ee 5e 96 3f  dd 2c c8 cf f4 1f 1d c7  |...;.^.?.,......|\n+00000320  c3 41 b5 ba c9 22 d3 5b  7f 11 d9 e6 c5 f3 a7 df  |.A...\".[........|\n+00000330  bb dd 4f df a0 5f 53 0b  d0 bb 73 84 8a 5c 1c 8f  |..O.._S...s..\\..|\n+00000340  a7 4c 6e fd 4b fe d5 b1  16 03 03 00 04 0e 00 00  |.Ln.K...........|\n+00000350  00                                                |.|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 03 00 01  |..h.A.Vk.Z......|\n+00000050  01 16 03 03 00 28 00 00  00 00 00 00 00 00 cd 30  |.....(.........0|\n+00000060  fd 7f db 2c e9 5d df be  c1 6d ee 15 44 e3 04 f4  |...,.]...m..D...|\n+00000070  4c 32 e8 05 65 65 8f 20  93 4b 7a b2 29 e6        |L2..ee. .Kz.).|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 28 fb ad f8 e3 77  |..........(....w|\n+00000010  e2 56 68 41 49 cb 4c 7b  1d 1e c4 2f 0b d2 3f 45  |.VhAI.L{.../..?E|\n+00000020  e5 ec a0 72 bd 77 f7 c3  be 17 39 e2 ff 03 36 ee  |...r.w....9...6.|\n+00000030  39 b0 9f                                          |9..|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 1e 00 00 00  00 00 00 00 01 cc 1e ea  |................|\n+00000010  a9 11 7d 34 9d 73 f0 5d  76 e6 3a bf 76 9b 71 45  |..}4.s.]v.:.v.qE|\n+00000020  84 4b 37 15 03 03 00 1a  00 00 00 00 00 00 00 02  |.K7.............|\n+00000030  a4 98 0c 9a 61 5f 58 48  98 b5 eb 9a 67 93 3e 6a  |....a_XH....g.>j|\n+00000040  7d 49                                             |}I|"}, {"sha": "158c63a150ae2b1d592808a9d03f33f84f0a867f", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-ECDHE-RSA-AES", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-ECDHE-RSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,99 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 54 02 00 00  50 03 03 52 ac 77 f7 63  |....T...P..R.w.c|\n+00000010  0f 46 31 fc 9b 1f 13 19  98 13 0f dc f0 99 40 1c  |.F1...........@.|\n+00000020  a4 72 1a 73 39 8e 49 d8  bc c6 60 20 80 ba 81 b5  |.r.s9.I...` ....|\n+00000030  fb 17 2e 41 f4 e3 26 4b  2e ab 4f e0 10 d6 fd 46  |...A..&K..O....F|\n+00000040  b6 1e 94 ef 5f 66 34 21  e0 27 71 b9 c0 13 00 00  |...._f4!.'q.....|\n+00000050  08 00 0b 00 04 03 00 01  02 16 03 03 02 be 0b 00  |................|\n+00000060  02 ba 00 02 b7 00 02 b4  30 82 02 b0 30 82 02 19  |........0...0...|\n+00000070  a0 03 02 01 02 02 09 00  85 b0 bb a4 8a 7f b8 ca  |................|\n+00000080  30 0d 06 09 2a 86 48 86  f7 0d 01 01 05 05 00 30  |0...*.H........0|\n+00000090  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+000000a0  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+000000b0  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+000000c0  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+000000d0  74 79 20 4c 74 64 30 1e  17 0d 31 30 30 34 32 34  |ty Ltd0...100424|\n+000000e0  30 39 30 39 33 38 5a 17  0d 31 31 30 34 32 34 30  |090938Z..1104240|\n+000000f0  39 30 39 33 38 5a 30 45  31 0b 30 09 06 03 55 04  |90938Z0E1.0...U.|\n+00000100  06 13 02 41 55 31 13 30  11 06 03 55 04 08 13 0a  |...AU1.0...U....|\n+00000110  53 6f 6d 65 2d 53 74 61  74 65 31 21 30 1f 06 03  |Some-State1!0...|\n+00000120  55 04 0a 13 18 49 6e 74  65 72 6e 65 74 20 57 69  |U....Internet Wi|\n+00000130  64 67 69 74 73 20 50 74  79 20 4c 74 64 30 81 9f  |dgits Pty Ltd0..|\n+00000140  30 0d 06 09 2a 86 48 86  f7 0d 01 01 01 05 00 03  |0...*.H.........|\n+00000150  81 8d 00 30 81 89 02 81  81 00 bb 79 d6 f5 17 b5  |...0.......y....|\n+00000160  e5 bf 46 10 d0 dc 69 be  e6 2b 07 43 5a d0 03 2d  |..F...i..+.CZ..-|\n+00000170  8a 7a 43 85 b7 14 52 e7  a5 65 4c 2c 78 b8 23 8c  |.zC...R..eL,x.#.|\n+00000180  b5 b4 82 e5 de 1f 95 3b  7e 62 a5 2c a5 33 d6 fe  |.......;~b.,.3..|\n+00000190  12 5c 7a 56 fc f5 06 bf  fa 58 7b 26 3f b5 cd 04  |.\\zV.....X{&?...|\n+000001a0  d3 d0 c9 21 96 4a c7 f4  54 9f 5a bf ef 42 71 00  |...!.J..T.Z..Bq.|\n+000001b0  fe 18 99 07 7f 7e 88 7d  7d f1 04 39 c4 a2 2e db  |.....~.}}..9....|\n+000001c0  51 c9 7c e3 c0 4c 3b 32  66 01 cf af b1 1d b8 71  |Q.|..L;2f......q|\n+000001d0  9a 1d db db 89 6b ae da  2d 79 02 03 01 00 01 a3  |.....k..-y......|\n+000001e0  81 a7 30 81 a4 30 1d 06  03 55 1d 0e 04 16 04 14  |..0..0...U......|\n+000001f0  b1 ad e2 85 5a cf cb 28  db 69 ce 23 69 de d3 26  |....Z..(.i.#i..&|\n+00000200  8e 18 88 39 30 75 06 03  55 1d 23 04 6e 30 6c 80  |...90u..U.#.n0l.|\n+00000210  14 b1 ad e2 85 5a cf cb  28 db 69 ce 23 69 de d3  |.....Z..(.i.#i..|\n+00000220  26 8e 18 88 39 a1 49 a4  47 30 45 31 0b 30 09 06  |&...9.I.G0E1.0..|\n+00000230  03 55 04 06 13 02 41 55  31 13 30 11 06 03 55 04  |.U....AU1.0...U.|\n+00000240  08 13 0a 53 6f 6d 65 2d  53 74 61 74 65 31 21 30  |...Some-State1!0|\n+00000250  1f 06 03 55 04 0a 13 18  49 6e 74 65 72 6e 65 74  |...U....Internet|\n+00000260  20 57 69 64 67 69 74 73  20 50 74 79 20 4c 74 64  | Widgits Pty Ltd|\n+00000270  82 09 00 85 b0 bb a4 8a  7f b8 ca 30 0c 06 03 55  |...........0...U|\n+00000280  1d 13 04 05 30 03 01 01  ff 30 0d 06 09 2a 86 48  |....0....0...*.H|\n+00000290  86 f7 0d 01 01 05 05 00  03 81 81 00 08 6c 45 24  |.............lE$|\n+000002a0  c7 6b b1 59 ab 0c 52 cc  f2 b0 14 d7 87 9d 7a 64  |.k.Y..R.......zd|\n+000002b0  75 b5 5a 95 66 e4 c5 2b  8e ae 12 66 1f eb 4f 38  |u.Z.f..+...f..O8|\n+000002c0  b3 6e 60 d3 92 fd f7 41  08 b5 25 13 b1 18 7a 24  |.n`....A..%...z$|\n+000002d0  fb 30 1d ba ed 98 b9 17  ec e7 d7 31 59 db 95 d3  |.0.........1Y...|\n+000002e0  1d 78 ea 50 56 5c d5 82  5a 2d 5a 5f 33 c4 b6 d8  |.x.PV\\..Z-Z_3...|\n+000002f0  c9 75 90 96 8c 0f 52 98  b5 cd 98 1f 89 20 5f f2  |.u....R...... _.|\n+00000300  a0 1c a3 1b 96 94 dd a9  fd 57 e9 70 e8 26 6d 71  |.........W.p.&mq|\n+00000310  99 9b 26 6e 38 50 29 6c  90 a7 bd d9 16 03 03 00  |..&n8P)l........|\n+00000320  cd 0c 00 00 c9 03 00 17  41 04 07 bc 8a ca 81 0b  |........A.......|\n+00000330  56 ef fa 13 da 6f 4b 90  77 d7 bc e0 4b b5 50 31  |V....oK.w...K.P1|\n+00000340  f4 a4 bf c8 e3 28 32 42  22 ec a3 2e c6 65 21 93  |.....(2B\"....e!.|\n+00000350  75 26 cf b0 83 68 c4 22  ce 02 7d 9a 5a a4 2a 76  |u&...h.\"..}.Z.*v|\n+00000360  f4 63 d1 97 48 6e 5a 5d  55 af 04 01 00 80 2f 5a  |.c..HnZ]U...../Z|\n+00000370  0e 8e a3 98 6c 5d fe 45  c0 a1 80 56 9b a7 cd 3f  |....l].E...V...?|\n+00000380  62 5c 65 94 4a b4 00 e1  85 6a 08 9f 21 c7 de f5  |b\\e.J....j..!...|\n+00000390  32 96 3a e1 24 4c a2 1a  f4 42 eb 26 34 32 98 1f  |2.:.$L...B.&42..|\n+000003a0  00 1f 0c 54 ed cd d5 90  32 ac 63 7a 6b 8b 81 22  |...T....2.czk..\"|\n+000003b0  a0 9a 1b 72 cc b1 ea aa  a8 e5 92 dd 1b 47 59 9f  |...r.........GY.|\n+000003c0  2c 0e f4 96 44 ae 40 4b  d2 12 8d 66 f3 13 a2 fe  |,...D.@K...f....|\n+000003d0  e8 ec d7 69 5b fe 6b 1b  57 2a b0 e4 4c 9c d8 01  |...i[.k.W*..L...|\n+000003e0  fc b6 b1 b6 b5 06 49 2f  a7 65 6c da ac a1 16 03  |......I/.el.....|\n+000003f0  03 00 04 0e 00 00 00                              |.......|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 46 10 00 00  42 41 04 1e 18 37 ef 0d  |....F...BA...7..|\n+00000010  19 51 88 35 75 71 b5 e5  54 5b 12 2e 8f 09 67 fd  |.Q.5uq..T[....g.|\n+00000020  a7 24 20 3e b2 56 1c ce  97 28 5e f8 2b 2d 4f 9e  |.$ >.V...(^.+-O.|\n+00000030  f1 07 9f 6c 4b 5b 83 56  e2 32 42 e9 58 b6 d7 49  |...lK[.V.2B.X..I|\n+00000040  a6 b5 68 1a 41 03 56 6b  dc 5a 89 14 03 03 00 01  |..h.A.Vk.Z......|\n+00000050  01 16 03 03 00 40 00 00  00 00 00 00 00 00 00 00  |.....@..........|\n+00000060  00 00 00 00 00 00 40 b3  ad 72 14 89 dc 2f e5 ac  |......@..r.../..|\n+00000070  21 94 09 2f a4 99 ea f1  6e 09 57 20 05 51 2b 0b  |!../....n.W .Q+.|\n+00000080  db 16 2d d8 ab 58 71 d9  da be 75 10 69 2d ef 03  |..-..Xq...u.i-..|\n+00000090  e3 68 0e ab da 21                                 |.h...!|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 c3 bb ef 26 e3  |..........@...&.|\n+00000010  77 8d ca 38 15 ee e3 ce  2e b4 63 41 5a 07 fe b7  |w..8......cAZ...|\n+00000020  9e 68 48 40 fc 09 17 f7  44 0d 04 7c af 2a 72 08  |.hH@....D..|.*r.|\n+00000030  26 a0 65 13 02 04 c5 c7  63 80 86 76 cb da 67 4b  |&.e.....c..v..gK|\n+00000040  6b 77 6b 69 f7 38 81 9b  22 42 36                 |kwki.8..\"B6|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+00000010  00 00 00 00 00 4a b4 4a  af 44 80 31 87 26 b3 a8  |.....J.J.D.1.&..|\n+00000020  1e f7 2a 4c 0c 8f 29 ac  52 55 75 e7 fe de b9 66  |..*L..).RUu....f|\n+00000030  aa 16 e7 18 02 15 03 03  00 30 00 00 00 00 00 00  |.........0......|\n+00000040  00 00 00 00 00 00 00 00  00 00 54 7f 4b c7 d7 93  |..........T.K...|\n+00000050  90 30 ff 8f 96 4d 71 b7  ed db 65 7c af a2 00 f9  |.0...Mq...e|....|\n+00000060  cb b4 77 a6 c4 5e 23 a7  77 4a                    |..w..^#.wJ|"}, {"sha": "ac1d9a407fa4cbd734aff4f481780dae9315ccfc", "filename": "libgo/go/crypto/tls/testdata/Client-TLSv12-RSA-RC4", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FClient-TLSv12-RSA-RC4?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,82 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 70 01 00 00  6c 03 03 00 00 00 00 00  |....p...l.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 1a c0 2f  |.............../|\n+00000030  c0 2b c0 11 c0 07 c0 13  c0 09 c0 14 c0 0a 00 05  |.+..............|\n+00000040  00 2f 00 35 c0 12 00 0a  01 00 00 29 00 05 00 05  |./.5.......)....|\n+00000050  01 00 00 00 00 00 0a 00  08 00 06 00 17 00 18 00  |................|\n+00000060  19 00 0b 00 02 01 00 00  0d 00 0a 00 08 04 01 04  |................|\n+00000070  03 02 01 02 03                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 4a 02 00 00  46 03 03 52 ac 77 f7 35  |....J...F..R.w.5|\n+00000010  a6 0a 57 0a 43 25 69 29  e7 14 d6 27 f3 21 ec c7  |..W.C%i)...'.!..|\n+00000020  be 69 65 eb f4 ed 96 4c  9e 0a fa 20 5d 7d 71 3b  |.ie....L... ]}q;|\n+00000030  c1 7d 2d 56 a9 60 2f 58  f2 05 29 36 8f 59 a6 0f  |.}-V.`/X..)6.Y..|\n+00000040  13 f8 31 dc 8e b5 ca 4d  38 c4 28 19 00 05 00 16  |..1....M8.(.....|\n+00000050  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000060  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000070  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000080  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000090  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+000000a0  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+000000b0  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000c0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000d0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000e0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000f0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000100  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000110  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000120  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000130  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000140  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000150  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000160  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000170  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000180  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000190  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+000001a0  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+000001b0  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001c0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001d0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001e0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001f0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+00000200  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+00000210  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000220  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000230  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000240  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000250  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000260  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000270  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000280  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000290  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+000002a0  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+000002b0  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002c0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002d0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002e0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002f0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+00000300  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+00000310  bd d9 16 03 03 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 86 10 00 00  82 00 80 6d 51 f3 7f f9  |...........mQ...|\n+00000010  3e fb 75 82 41 36 83 e8  6a ee 2a 2e 25 90 67 4c  |>.u.A6..j.*.%.gL|\n+00000020  8e 62 2f 30 81 17 e0 85  09 0c 2b b7 23 d7 b0 e2  |.b/0......+.#...|\n+00000030  1d f7 3b d7 f5 a1 27 b6  ee 24 b6 1b cc 5b ea 66  |..;...'..$...[.f|\n+00000040  0d 6a f4 e5 85 f9 da 43  b4 0e 86 85 e1 f5 aa be  |.j.....C........|\n+00000050  c8 ce 39 4c 9c 86 00 08  c2 4b e2 c6 ec 2f f7 ce  |..9L.....K.../..|\n+00000060  e6 bd 77 82 6f 23 b6 e0  bd a2 92 b7 3a ac e8 56  |..w.o#......:..V|\n+00000070  f1 af 54 5e 46 87 e9 3b  33 e7 b8 28 b7 d6 c8 90  |..T^F..;3..(....|\n+00000080  35 d4 1c 43 d1 30 6f 55  4e 0a 70 14 03 03 00 01  |5..C.0oUN.p.....|\n+00000090  01 16 03 03 00 24 6e bd  04 e6 9f 42 97 d8 e5 c8  |.....$n....B....|\n+000000a0  53 80 41 35 a7 f3 a3 9e  88 13 37 ac 51 25 c2 87  |S.A5......7.Q%..|\n+000000b0  29 4a e1 e4 eb 2b 31 a3  8b 0b                    |)J...+1...|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 60 22 7f 1b 4d  |..........$`\"..M|\n+00000010  75 6a c3 d3 d6 7c 18 f5  94 b1 4b 80 b8 7c a5 1b  |uj...|....K..|..|\n+00000020  8c 45 f0 b6 e7 8a 65 82  69 0f c0 0f 9b 71 ea     |.E....e.i....q.|\n+>>> Flow 5 (client to server)\n+00000000  17 03 03 00 1a 3a 50 9f  29 c9 86 ec 81 79 f0 86  |.....:P.)....y..|\n+00000010  25 03 5b 0c dd a6 f7 d6  e0 ad dc bc eb 37 c7 15  |%.[..........7..|\n+00000020  03 03 00 16 89 31 da 0a  95 7a 42 54 81 85 de 9f  |.....1...zBT....|\n+00000030  ff 9f 7e 13 28 3a f6 84  40 24                    |..~.(:..@$|"}, {"sha": "28bb242216eef0a6ee61c21519afd39fb827fc5e", "filename": "libgo/go/crypto/tls/testdata/Server-SSLv3-RSA-3DES", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-3DES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-3DES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-3DES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,82 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 00 00 30 01 00 00  2c 03 00 52 ac 77 f8 ba  |....0...,..R.w..|\n+00000010  20 7c b1 a6 c2 a5 5e 1b  b6 76 26 88 79 9b 52 56  | |....^..v&.y.RV|\n+00000020  f4 f5 83 1e 23 be 66 6c  47 70 ed 00 00 04 00 0a  |....#.flGp......|\n+00000030  00 ff 02 01 00                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 00 00 2a 02 00 00  26 03 00 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 16  |................|\n+00000030  03 00 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 00 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 00 00 84 10 00 00  80 b6 25 91 8f 12 fc a2  |..........%.....|\n+00000010  b9 f1 31 3a b5 a8 b6 cf  aa f1 b4 83 3d aa f1 1d  |..1:........=...|\n+00000020  de 33 e4 25 6a 49 25 71  e9 9d 51 97 3b 9d 2a 68  |.3.%jI%q..Q.;.*h|\n+00000030  84 13 3a e7 2c 97 67 36  ee 23 a9 97 6d c2 3a e5  |..:.,.g6.#..m.:.|\n+00000040  33 24 37 ce 76 ed a1 8f  f8 49 e4 b8 77 2a ef 9a  |3$7.v....I..w*..|\n+00000050  38 3c 4f d1 88 7b 28 1b  3a 90 4b 6b 67 8f 04 f0  |8<O..{(.:.Kkg...|\n+00000060  cd d4 b7 ab a2 42 86 e9  45 38 dd 78 4c 9f fb 10  |.....B..E8.xL...|\n+00000070  3c 65 35 8e f5 bc 3a 28  e1 cb 86 44 e8 bc 29 26  |<e5...:(...D..)&|\n+00000080  fc 43 be 15 f2 5b e7 07  82 14 03 00 00 01 01 16  |.C...[..........|\n+00000090  03 00 00 40 3d db ec d5  66 0d 92 2f 23 36 3e e6  |...@=...f../#6>.|\n+000000a0  ac ee 10 8d db 11 ce dc  65 e7 cb ba 14 4d 81 34  |........e....M.4|\n+000000b0  46 eb 6e fd 5e 36 20 32  bd 59 05 b6 39 a1 86 31  |F.n.^6 2.Y..9..1|\n+000000c0  24 ef 53 64 0a 7a 91 95  c1 e3 aa bb 48 08 ac 22  |$.Sd.z......H..\"|\n+000000d0  6e 1c df e1                                       |n...|\n+>>> Flow 4 (server to client)\n+00000000  14 03 00 00 01 01 16 03  00 00 40 c1 e3 a0 4d 7d  |..........@...M}|\n+00000010  02 0b dc 0a 12 8c 2c 5c  c4 d4 b9 76 b8 a3 dc 9a  |......,\\...v....|\n+00000020  7d 3a 08 a6 b6 c9 00 8b  ee b7 e6 8e 72 3c e0 07  |}:..........r<..|\n+00000030  28 07 20 a7 7a 93 1a de  63 af bd 80 2b 66 74 d9  |(. .z...c...+ft.|\n+00000040  d8 ef 7c 56 cd 0f c4 bf  b4 7d cc 17 03 00 00 18  |..|V.....}......|\n+00000050  18 d2 23 27 f9 89 7c 47  8a a8 92 32 26 4e 7d c6  |..#'..|G...2&N}.|\n+00000060  59 44 71 b3 c9 ca 31 63  17 03 00 00 28 24 09 c1  |YDq...1c....($..|\n+00000070  98 2e 4c 4b 80 66 b5 cb  20 01 0f 23 06 44 be 23  |..LK.f.. ..#.D.#|\n+00000080  32 0e bc e4 c1 b5 b4 f0  e3 53 5a 69 fb ae 3b 92  |2........SZi..;.|\n+00000090  29 c9 b6 cf 5d 15 03 00  00 18 ec 3e e9 e6 4e 7e  |)...]......>..N~|\n+000000a0  4d 8f b7 74 93 61 f4 85  28 5f e6 37 2d 9f 01 54  |M..t.a..(_.7-..T|\n+000000b0  bd 24                                             |.$|"}, {"sha": "515ebac23ad93964c9c4d5378d88d8054dbb8976", "filename": "libgo/go/crypto/tls/testdata/Server-SSLv3-RSA-AES", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,83 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 00 00 30 01 00 00  2c 03 00 52 ac 77 f8 f2  |....0...,..R.w..|\n+00000010  8a e8 25 e4 df f9 db 01  25 d2 14 4b 10 25 b8 f7  |..%.....%..K.%..|\n+00000020  86 b3 83 32 96 e8 af 50  93 78 8d 00 00 04 00 2f  |...2...P.x...../|\n+00000030  00 ff 02 01 00                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 00 00 2a 02 00 00  26 03 00 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 16  |............./..|\n+00000030  03 00 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 00 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 00 00 84 10 00 00  80 00 0a a1 56 18 df ac  |............V...|\n+00000010  c2 e2 64 41 17 df 7f 05  29 0a 72 65 46 ea c9 ff  |..dA....).reF...|\n+00000020  c6 67 75 62 9a e8 46 05  e3 08 1a 14 ea e7 ff 35  |.gub..F........5|\n+00000030  a8 d1 fa 96 cc e2 d8 d9  7a a3 40 64 37 96 54 29  |........z.@d7.T)|\n+00000040  ad 72 7c 98 13 de c3 a8  fb c6 4a 6e 2a 8b e7 5f  |.r|.......Jn*.._|\n+00000050  ef f3 c5 76 7f fb b3 24  ed 80 57 b6 ce 0e 53 65  |...v...$..W...Se|\n+00000060  2b db da fd a5 6a ee 46  b4 2e 26 8c 53 d5 67 d4  |+....j.F..&.S.g.|\n+00000070  8a 4c 56 58 40 68 7d b5  d7 51 f3 05 1f 68 b5 54  |.LVX@h}..Q...h.T|\n+00000080  f5 91 86 71 cd 3c 6d 0a  d6 14 03 00 00 01 01 16  |...q.<m.........|\n+00000090  03 00 00 40 1c 55 bc ea  55 12 63 36 f2 1a f4 ae  |...@.U..U.c6....|\n+000000a0  34 51 d6 d0 63 e1 13 4c  d9 a0 a9 ac 3b cb 1e e4  |4Q..c..L....;...|\n+000000b0  de 21 f7 bf ae 7f 27 31  cb 01 58 e4 b1 57 00 39  |.!....'1..X..W.9|\n+000000c0  13 e0 e3 be 2b b1 24 cc  41 55 69 c4 f0 a6 cc 38  |....+.$.AUi....8|\n+000000d0  e8 a8 ba c1                                       |....|\n+>>> Flow 4 (server to client)\n+00000000  14 03 00 00 01 01 16 03  00 00 40 68 cb f5 14 f0  |..........@h....|\n+00000010  42 7a 8c d6 69 09 37 24  92 82 ef 78 bb 4f f9 86  |Bz..i.7$...x.O..|\n+00000020  9f f1 db 3c da 97 f1 02  ab f0 9d c9 8a 71 8e b4  |...<.........q..|\n+00000030  ac 6f 83 1a 44 90 80 a3  3b 97 a2 7f 64 b9 63 b1  |.o..D...;...d.c.|\n+00000040  6b 80 2a a5 5f 2d c3 14  b6 d5 0c 17 03 00 00 20  |k.*._-......... |\n+00000050  b1 d5 04 a3 c4 05 f9 8d  96 84 78 a6 cb 8e 0a 04  |..........x.....|\n+00000060  a9 e3 97 f9 dc f0 7a 7d  f5 44 0e e5 eb 80 83 9a  |......z}.D......|\n+00000070  17 03 00 00 30 8d c7 b7  e4 ac 13 79 cc fb f8 74  |....0......y...t|\n+00000080  00 cb 89 5c b0 fb bd 3c  f6 9f e0 72 02 34 4f d2  |...\\...<...r.4O.|\n+00000090  f5 6e 29 da 14 d2 11 45  85 dd ae 72 8e b6 4e eb  |.n)....E...r..N.|\n+000000a0  56 cb a9 33 fd 15 03 00  00 20 10 46 5e 81 a1 29  |V..3..... .F^..)|\n+000000b0  69 2b 66 52 6c d9 4b 8f  79 c0 7f d9 13 8a 67 99  |i+fRl.K.y.....g.|\n+000000c0  14 b2 eb a8 2a 2e 2d b0  0f 5a                    |....*.-..Z|"}, {"sha": "15c0e2213260e0dd8825515463f57a04640be08e", "filename": "libgo/go/crypto/tls/testdata/Server-SSLv3-RSA-RC4", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-SSLv3-RSA-RC4?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,78 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 00 00 30 01 00 00  2c 03 00 52 ac 77 f8 34  |....0...,..R.w.4|\n+00000010  e1 b1 2e 93 67 6d 6e 49  b5 9d 74 06 e1 1b 73 92  |....gmnI..t...s.|\n+00000020  0f c3 39 5f 4b 17 88 45  84 28 fd 00 00 04 00 05  |..9_K..E.(......|\n+00000030  00 ff 02 01 00                                    |.....|\n+>>> Flow 2 (server to client)\n+00000000  16 03 00 00 2a 02 00 00  26 03 00 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n+00000030  03 00 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 00 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 00 00 84 10 00 00  80 a0 f8 7e 56 69 88 3a  |...........~Vi.:|\n+00000010  75 b6 bc 7f 3f a5 15 0c  7a 33 7c 3d c9 84 ce 06  |u...?...z3|=....|\n+00000020  52 a4 c3 47 8d 91 c1 0d  27 b6 56 a8 92 b8 b5 2c  |R..G....'.V....,|\n+00000030  6b 19 54 3f 14 e2 d8 b5  39 6a 53 0a ba 3d 7f bc  |k.T?....9jS..=..|\n+00000040  69 e5 fd 93 88 15 84 27  ea e0 ef f3 6b 17 5c 07  |i......'....k.\\.|\n+00000050  76 5f 71 0f 3e 94 d3 7b  2f 63 88 03 5e 79 28 d9  |v_q.>..{/c..^y(.|\n+00000060  e8 c7 fc 65 b1 5a a3 91  1c fe cc a3 f6 13 d3 a2  |...e.Z..........|\n+00000070  7c e0 5f 51 97 a3 a7 32  14 c5 d4 fa 09 5d de 04  ||._Q...2.....]..|\n+00000080  59 7d 78 af 1e e5 d9 99  68 14 03 00 00 01 01 16  |Y}x.....h.......|\n+00000090  03 00 00 3c de c0 8f 60  be 89 4f 61 5e 88 72 50  |...<...`..Oa^.rP|\n+000000a0  b4 c8 e0 ff 9d 91 2e c4  ba 11 3e fb 92 ba dd ab  |..........>.....|\n+000000b0  96 ba 56 91 78 70 f6 fe  73 fb a3 85 47 28 9e 57  |..V.xp..s...G(.W|\n+000000c0  80 18 f0 e7 44 d6 0c a6  6e 5a 03 9e c1 7a f3 a4  |....D...nZ...z..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 00 00 01 01 16 03  00 00 3c 8e ae 6b 37 56  |..........<..k7V|\n+00000010  42 96 37 76 e9 48 a0 4d  67 5e e9 e0 48 4e 75 4d  |B.7v.H.Mg^..HNuM|\n+00000020  a8 58 01 a5 e5 c2 0c ec  43 ae a1 86 8d 0f be fc  |.X......C.......|\n+00000030  de c3 5c 15 c3 84 fc ed  6a 48 6f dd 22 94 4f 54  |..\\.....jHo.\".OT|\n+00000040  83 ab 76 ab 38 ea a1 17  03 00 00 21 64 56 94 f9  |..v.8......!dV..|\n+00000050  ba 22 a3 af 63 30 16 b0  23 54 e2 22 92 4e 67 5d  |.\"..c0..#T.\".Ng]|\n+00000060  a2 37 92 83 1f 28 78 bb  02 6b fe 4d de 15 03 00  |.7...(x..k.M....|\n+00000070  00 16 c3 1b bb 58 03 ce  44 9b 3c 6e e9 75 ba 66  |.....X..D.<n.u.f|\n+00000080  1c 03 08 19 75 64 9c 98                           |....ud..|"}, {"sha": "e824b152fe3aa0840aabf3120c0ce29bb330247d", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv10-ECDHE-ECDSA-AES", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-ECDHE-ECDSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,92 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 77 01 00 00  73 03 01 52 ac 77 f8 0f  |....w...s..R.w..|\n+00000010  da f5 85 29 f9 40 1c fd  b5 88 59 30 92 9d 24 66  |...).@....Y0..$f|\n+00000020  d5 14 a0 f2 f3 31 5f 55  a2 6e 49 00 00 04 c0 0a  |.....1_U.nI.....|\n+00000030  00 ff 02 01 00 00 45 00  0b 00 04 03 00 01 02 00  |......E.........|\n+00000040  0a 00 34 00 32 00 0e 00  0d 00 19 00 0b 00 0c 00  |..4.2...........|\n+00000050  18 00 09 00 0a 00 16 00  17 00 08 00 06 00 07 00  |................|\n+00000060  14 00 15 00 04 00 05 00  12 00 13 00 01 00 02 00  |................|\n+00000070  03 00 0f 00 10 00 11 00  0f 00 01 01              |............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 2a 02 00 00  26 03 01 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 0a 00 16  |................|\n+00000030  03 01 02 0e 0b 00 02 0a  00 02 07 00 02 04 30 82  |..............0.|\n+00000040  02 00 30 82 01 62 02 09  00 b8 bf 2d 47 a0 d2 eb  |..0..b.....-G...|\n+00000050  f4 30 09 06 07 2a 86 48  ce 3d 04 01 30 45 31 0b  |.0...*.H.=..0E1.|\n+00000060  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000070  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000080  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000090  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000a0  4c 74 64 30 1e 17 0d 31  32 31 31 32 32 31 35 30  |Ltd0...121122150|\n+000000b0  36 33 32 5a 17 0d 32 32  31 31 32 30 31 35 30 36  |632Z..2211201506|\n+000000c0  33 32 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |32Z0E1.0...U....|\n+000000d0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000e0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+000000f0  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000100  74 73 20 50 74 79 20 4c  74 64 30 81 9b 30 10 06  |ts Pty Ltd0..0..|\n+00000110  07 2a 86 48 ce 3d 02 01  06 05 2b 81 04 00 23 03  |.*.H.=....+...#.|\n+00000120  81 86 00 04 00 c4 a1 ed  be 98 f9 0b 48 73 36 7e  |............Hs6~|\n+00000130  c3 16 56 11 22 f2 3d 53  c3 3b 4d 21 3d cd 6b 75  |..V.\".=S.;M!=.ku|\n+00000140  e6 f6 b0 dc 9a df 26 c1  bc b2 87 f0 72 32 7c b3  |......&.....r2|.|\n+00000150  64 2f 1c 90 bc ea 68 23  10 7e fe e3 25 c0 48 3a  |d/....h#.~..%.H:|\n+00000160  69 e0 28 6d d3 37 00 ef  04 62 dd 0d a0 9c 70 62  |i.(m.7...b....pb|\n+00000170  83 d8 81 d3 64 31 aa 9e  97 31 bd 96 b0 68 c0 9b  |....d1...1...h..|\n+00000180  23 de 76 64 3f 1a 5c 7f  e9 12 0e 58 58 b6 5f 70  |#.vd?.\\....XX._p|\n+00000190  dd 9b d8 ea d5 d7 f5 d5  cc b9 b6 9f 30 66 5b 66  |............0f[f|\n+000001a0  9a 20 e2 27 e5 bf fe 3b  30 09 06 07 2a 86 48 ce  |. .'...;0...*.H.|\n+000001b0  3d 04 01 03 81 8c 00 30  81 88 02 42 01 88 a2 4f  |=......0...B...O|\n+000001c0  eb e2 45 c5 48 7d 1b ac  f5 ed 98 9d ae 47 70 c0  |..E.H}.......Gp.|\n+000001d0  5e 1b b6 2f bd f1 b6 4d  b7 61 40 d3 11 a2 ce ee  |^../...M.a@.....|\n+000001e0  0b 7e 92 7e ff 76 9d c3  3b 7e a5 3f ce fa 10 e2  |.~.~.v..;~.?....|\n+000001f0  59 ec 47 2d 7c ac da 4e  97 0e 15 a0 6f d0 02 42  |Y.G-|..N....o..B|\n+00000200  01 4d fc be 67 13 9c 2d  05 0e bd 3f a3 8c 25 c1  |.M..g..-...?..%.|\n+00000210  33 13 83 0d 94 06 bb d4  37 7a f6 ec 7a c9 86 2e  |3.......7z..z...|\n+00000220  dd d7 11 69 7f 85 7c 56  de fb 31 78 2b e4 c7 78  |...i..|V..1x+..x|\n+00000230  0d ae cb be 9e 4e 36 24  31 7b 6a 0f 39 95 12 07  |.....N6$1{j.9...|\n+00000240  8f 2a 16 03 01 01 1a 0c  00 01 16 03 00 19 85 04  |.*..............|\n+00000250  01 39 dc ee 44 17 5e db  d7 27 af b6 56 d9 b4 43  |.9..D.^..'..V..C|\n+00000260  5a 99 cf aa 31 37 0c 6f  3a a0 f8 53 c4 74 d1 91  |Z...17.o:..S.t..|\n+00000270  0a 46 f5 38 3b 5c 09 d8  97 dc 4b aa 70 26 48 f2  |.F.8;\\....K.p&H.|\n+00000280  d6 0b 31 c9 f8 d4 98 43  e1 6c d5 c7 b2 8e 0b 01  |..1....C.l......|\n+00000290  e6 b6 00 28 80 7b fc 96  8f 0d a2 4f b0 79 af dc  |...(.{.....O.y..|\n+000002a0  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n+000002b0  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n+000002c0  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n+000002d0  94 79 90 33 00 8b 30 81  88 02 42 00 c6 85 8e 06  |.y.3..0...B.....|\n+000002e0  b7 04 04 e9 cd 9e 3e cb  66 23 95 b4 42 9c 64 81  |......>.f#..B.d.|\n+000002f0  39 05 3f b5 21 f8 28 af  60 6b 4d 3d ba a1 4b 5e  |9.?.!.(.`kM=..K^|\n+00000300  77 ef e7 59 28 fe 1d c1  27 a2 ff a8 de 33 48 b3  |w..Y(...'....3H.|\n+00000310  c1 85 6a 42 9b f9 7e 7e  31 c2 e5 bd 66 02 42 00  |..jB..~~1...f.B.|\n+00000320  ad 7d 06 35 ab ec 8d ac  d4 ba 1b 49 5e 05 5f f0  |.}.5.......I^._.|\n+00000330  97 93 82 b8 2b 8d 91 98  63 8e b4 14 62 db 1e c9  |....+...c...b...|\n+00000340  2b 30 f8 41 9b a6 e6 bc  de 0e 68 30 21 d7 c5 13  |+0.A......h0!...|\n+00000350  c5 0d 59 07 a1 c7 28 ca  0c e3 9b 45 fa d3 04 fb  |..Y...(....E....|\n+00000360  31 16 03 01 00 04 0e 00  00 00                    |1.........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 00 8a 10 00 00  86 85 04 00 dc a9 a1 fb  |................|\n+00000010  01 f0 3c 35 4f f0 67 6c  7b de 7d dc 6e bb 59 6f  |..<5O.gl{.}.n.Yo|\n+00000020  5b 42 57 b1 55 c6 78 28  69 cb c5 c0 c1 e3 b5 89  |[BW.U.x(i.......|\n+00000030  dd 03 20 6b d2 08 17 50  68 11 64 ad 0c 2f aa 4f  |.. k...Ph.d../.O|\n+00000040  df ea e1 b9 1a 3c 92 ec  e7 78 f4 19 f8 01 77 e0  |.....<...x....w.|\n+00000050  e2 c5 a2 d1 39 e3 e4 6b  78 0c 70 ae d4 2b 9f e4  |....9..kx.p..+..|\n+00000060  79 a2 ab 23 82 9e ec 3c  7c 62 f1 66 b9 9a 06 4f  |y..#...<|b.f...O|\n+00000070  49 a0 39 79 b4 32 7a 38  0e 6c ec e0 aa fc e2 d9  |I.9y.2z8.l......|\n+00000080  fe 2a c0 88 bc 9c 29 8c  78 06 bb bc 5d 0f 01 14  |.*....).x...]...|\n+00000090  03 01 00 01 01 16 03 01  00 30 76 33 00 79 15 52  |.........0v3.y.R|\n+000000a0  12 d8 c0 34 74 b3 50 76  98 e3 29 db 30 9c 82 1f  |...4t.Pv..).0...|\n+000000b0  89 47 b7 ab 26 bc 19 d8  b1 49 7b f8 d2 71 88 b0  |.G..&....I{..q..|\n+000000c0  05 c4 0d 96 54 d2 61 c4  ad b8                    |....T.a...|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 30 7a 2a 1b a8 08  |..........0z*...|\n+00000010  56 fa a3 93 04 45 31 8d  8b 9b 55 36 bb 5b 18 53  |V....E1...U6.[.S|\n+00000020  b5 da d6 9f 51 89 a5 b5  ff 8d 26 24 df 05 1e 09  |....Q.....&$....|\n+00000030  ee 7d 59 d3 e0 8b 9b d7  10 93 ce 17 03 01 00 20  |.}Y............ |\n+00000040  b0 68 94 01 e0 38 37 6d  5c 4e ec 9d 77 f7 e6 a8  |.h...87m\\N..w...|\n+00000050  1a 06 bd ec 9f a2 63 ce  25 10 d2 ad 48 00 30 8f  |......c.%...H.0.|\n+00000060  17 03 01 00 30 6f c4 67  87 d4 b2 1e 32 31 44 23  |....0o.g....21D#|\n+00000070  54 45 95 99 16 7a 83 32  86 75 5d 14 d1 ae 65 3c  |TE...z.2.u]...e<|\n+00000080  71 2c c7 ca 84 4a ea 1d  6a 54 33 6f d6 38 21 4d  |q,...J..jT3o.8!M|\n+00000090  e0 6c 64 a9 58 15 03 01  00 20 8f 9e 96 b1 74 b0  |.ld.X.... ....t.|\n+000000a0  93 1e 6b ba c3 ce 53 f5  0a 11 ae cb 08 ac 1d 2c  |..k...S........,|\n+000000b0  e4 79 9a 6b bf fb db 0b  29 a1                    |.y.k....).|"}, {"sha": "a93c2dbcc4e69b076be2af3e8362e21d1be17249", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv10-RSA-3DES", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-3DES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-3DES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-3DES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,78 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 37 01 00 00  33 03 01 52 ac 77 f8 13  |....7...3..R.w..|\n+00000010  46 58 6c 7e 9a 3d 5b 13  de 27 23 60 5a a9 8e 0b  |FXl~.=[..'#`Z...|\n+00000020  b9 f0 f8 f9 ad d5 fc f9  c2 50 10 00 00 04 00 0a  |.........P......|\n+00000030  00 ff 02 01 00 00 05 00  0f 00 01 01              |............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 2a 02 00 00  26 03 01 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 16  |................|\n+00000030  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 01 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 00 86 10 00 00  82 00 80 17 30 df 06 a4  |............0...|\n+00000010  8d 51 21 4a 76 9f 8b d2  2d 5d 0b 5e b1 72 63 7f  |.Q!Jv...-].^.rc.|\n+00000020  f6 66 50 76 7a e0 90 de  3a 30 3f c3 66 1e 06 e4  |.fPvz...:0?.f...|\n+00000030  ae fa 2f e5 a9 e9 9e fe  a6 b8 78 44 73 72 31 91  |../.......xDsr1.|\n+00000040  78 76 7e e3 86 58 2f 62  79 5c 04 08 63 24 bd 29  |xv~..X/by\\..c$.)|\n+00000050  42 af fc c7 40 8b b0 26  1b a7 e1 a6 00 be e7 3a  |B...@..&.......:|\n+00000060  60 bd a9 ff de 21 7f 87  55 7f d5 5f 5c 0f dc 5e  |`....!..U.._\\..^|\n+00000070  af b1 be 7f f6 5a fc e1  fc 81 2a 5d 5a 57 17 4c  |.....Z....*]ZW.L|\n+00000080  76 b7 33 9a a2 89 46 66  b8 70 86 14 03 01 00 01  |v.3...Ff.p......|\n+00000090  01 16 03 01 00 28 02 28  ba 24 9f 8c aa d8 e6 ce  |.....(.(.$......|\n+000000a0  48 cf d5 6a 38 8b d4 d3  68 7a ce 6e a6 92 c7 47  |H..j8...hz.n...G|\n+000000b0  85 72 c5 06 2f f1 5b b7  be 89 04 f3 b6 af        |.r../.[.......|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 28 d8 7a 71 41 9f  |..........(.zqA.|\n+00000010  63 7a a8 5e ad 34 83 75  6a 15 29 d0 87 43 9b 3f  |cz.^.4.uj.)..C.?|\n+00000020  b6 79 b1 44 92 f6 fd 9c  9b cc ec fc 05 8e 55 e9  |.y.D..........U.|\n+00000030  7b 6a fe 17 03 01 00 18  52 2c 2b 19 63 fa 1f f0  |{j......R,+.c...|\n+00000040  3a c2 1a 7e ba 3a 90 aa  25 46 f9 a4 f6 57 0e 32  |:..~.:..%F...W.2|\n+00000050  17 03 01 00 28 49 ad 51  5e 27 fe e7 e4 1b bc 79  |....(I.Q^'.....y|\n+00000060  34 51 f2 ea 3f cb 16 51  c5 d1 01 9a 65 7b e1 97  |4Q..?..Q....e{..|\n+00000070  d4 28 f1 e6 ab cd 19 86  d3 01 79 9c 53 15 03 01  |.(........y.S...|\n+00000080  00 18 ee 5b 0a 3c c5 0f  6f 85 2b 24 de 93 55 31  |...[.<..o.+$..U1|\n+00000090  d8 17 a5 77 3c d4 10 48  cf af                    |...w<..H..|"}, {"sha": "40cd947565dd435de50a22e4ad9c60d8971be8f1", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv10-RSA-AES", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,81 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 37 01 00 00  33 03 01 52 ac 77 f8 da  |....7...3..R.w..|\n+00000010  b3 ba 8c d1 0a a2 3b 35  7c db 1b ff cc e0 c4 f1  |......;5|.......|\n+00000020  aa a3 40 fe 92 15 5b ed  29 3d 07 00 00 04 00 2f  |..@...[.)=...../|\n+00000030  00 ff 02 01 00 00 05 00  0f 00 01 01              |............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 2a 02 00 00  26 03 01 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 16  |............./..|\n+00000030  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 01 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 00 86 10 00 00  82 00 80 ae 53 cd ef fb  |............S...|\n+00000010  31 07 cb 0b 1b a6 da c6  b6 b6 49 1b fb 5c f9 2f  |1.........I..\\./|\n+00000020  6b fe c9 5c 46 0c 2b 01  a2 4b 2e df 65 6d d9 61  |k..\\F.+..K..em.a|\n+00000030  59 93 72 89 d1 38 72 49  a7 28 e8 7a 70 7d 96 6e  |Y.r..8rI.(.zp}.n|\n+00000040  72 0b 4d d4 f8 59 46 32  49 8b e4 97 35 de 77 19  |r.M..YF2I...5.w.|\n+00000050  e9 30 12 ff d9 3d 32 07  4b 26 f7 d3 1a 32 dc 36  |.0...=2.K&...2.6|\n+00000060  d9 f3 f9 33 fb 34 73 a4  35 15 f1 a9 cc 1a 30 55  |...3.4s.5.....0U|\n+00000070  f3 25 20 8a 9e 25 87 13  58 ec e7 07 87 5d a7 84  |.% ..%..X....]..|\n+00000080  e9 f8 83 c3 9e 08 0a 01  fa c2 8f 14 03 01 00 01  |................|\n+00000090  01 16 03 01 00 30 dd 53  57 25 a0 e3 91 a1 0b fd  |.....0.SW%......|\n+000000a0  16 91 90 59 4a 12 fe 96  a2 4b ca c9 85 a2 91 ef  |...YJ....K......|\n+000000b0  ac 1f aa dc ff c3 9a 6d  79 5a 56 36 8d 48 fd e4  |.......myZV6.H..|\n+000000c0  9a d2 4d 47 8e d0                                 |..MG..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 30 12 3f 15 b4 79  |..........0.?..y|\n+00000010  a8 f7 48 a3 f5 fa 0b 8e  58 f2 f0 cb dc 56 54 95  |..H.....X....VT.|\n+00000020  8d fa 83 3a 09 da 97 28  bd 01 7f 0d 88 1d 46 33  |...:...(......F3|\n+00000030  42 58 b3 d5 31 45 c2 4c  cb 0b fc 17 03 01 00 20  |BX..1E.L....... |\n+00000040  9c 90 ff 54 aa 89 5a f7  70 0a 1e 99 47 94 1e b6  |...T..Z.p...G...|\n+00000050  b7 66 14 4a 25 4f b8 b1  cc 60 65 5d 0b 5a c1 c2  |.f.J%O...`e].Z..|\n+00000060  17 03 01 00 30 b6 f0 49  f3 b1 2e 3a b5 d8 9e 35  |....0..I...:...5|\n+00000070  fc 2a 77 6e d3 d8 5a 17  dc d8 8a ac 29 d3 90 28  |.*wn..Z.....)..(|\n+00000080  8b bf 3c 8a b0 59 05 15  e6 ac 53 5b 59 ae 61 30  |..<..Y....S[Y.a0|\n+00000090  f8 1c b4 40 62 15 03 01  00 20 1f bb db f5 0e a8  |...@b.... ......|\n+000000a0  8d ed 68 b1 aa 3d c7 15  3e 7f 00 24 41 c6 4e b8  |..h..=..>..$A.N.|\n+000000b0  91 24 46 5e f1 23 b2 4d  7e 47                    |.$F^.#.M~G|"}, {"sha": "7dc32b53a8abf95531106bd725d42bffbd4f61c5", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv10-RSA-RC4", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv10-RSA-RC4?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,75 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 37 01 00 00  33 03 01 52 ac 77 f8 61  |....7...3..R.w.a|\n+00000010  5d ea e5 06 b5 5e 74 c9  65 dd 4b f3 12 10 82 90  |]....^t.e.K.....|\n+00000020  3a 4f 56 50 1a 96 fa a1  6e 41 12 00 00 04 00 05  |:OVP....nA......|\n+00000030  00 ff 02 01 00 00 05 00  0f 00 01 01              |............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 01 00 2a 02 00 00  26 03 01 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n+00000030  03 01 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 01 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 01 00 86 10 00 00  82 00 80 9a 45 b5 b4 9d  |............E...|\n+00000010  1c 49 c5 52 aa 0b 43 45  45 10 ab a0 21 04 f1 ca  |.I.R..CEE...!...|\n+00000020  41 d8 b3 70 10 fc c5 7c  a1 d2 d7 15 04 1e 8f ae  |A..p...|........|\n+00000030  39 a4 d2 0d b9 e3 cf d4  40 9a b4 ee 8e 57 c4 41  |9.......@....W.A|\n+00000040  74 d4 94 a4 7b 36 70 e9  af 43 e3 7b 02 52 7d 99  |t...{6p..C.{.R}.|\n+00000050  52 65 03 b7 e3 05 72 36  7c f7 c0 07 49 27 f8 5d  |Re....r6|...I'.]|\n+00000060  cb e0 00 5b 84 b1 bd b7  7f e5 6b a8 ad e3 df 9e  |...[......k.....|\n+00000070  b8 7c 19 aa 6e 22 c7 0b  43 61 6d 0b d3 b9 72 10  |.|..n\"..Cam...r.|\n+00000080  b1 a3 ac e4 12 de 32 b5  e0 89 a0 14 03 01 00 01  |......2.........|\n+00000090  01 16 03 01 00 24 ba 96  18 34 84 cc 60 cd 33 33  |.....$...4..`.33|\n+000000a0  c2 24 88 ec 0d 46 93 d3  d5 42 82 a5 8b f0 a5 c6  |.$...F...B......|\n+000000b0  c5 73 9a d5 85 fb 79 5e  90 09                    |.s....y^..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 01 00 01 01 16 03  01 00 24 88 79 b1 70 0e  |..........$.y.p.|\n+00000010  86 2a ec 3e a3 8b 2f 78  70 d0 92 4e ae 8e 17 78  |.*.>../xp..N...x|\n+00000020  cc 91 a9 3d 5c f2 2c 36  45 12 62 e4 8d 15 0a 17  |...=\\.,6E.b.....|\n+00000030  03 01 00 21 f7 3b 4e 00  2b 54 e8 86 6f 84 bd 92  |...!.;N.+T..o...|\n+00000040  ca 87 5f a7 4e 62 ad 84  a8 3d be 8d 61 5f e2 e8  |.._.Nb...=..a_..|\n+00000050  74 83 e3 1e 1f 15 03 01  00 16 fd 57 d8 6c 17 47  |t..........W.l.G|\n+00000060  af 7b 6e c6 5e 68 26 db  bc 5b 47 51 92 ac 11 b5  |.{n.^h&..[GQ....|"}, {"sha": "b03742eca4bf5fea8d3be0cdc419d4baaea16faf", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv11-RSA-RC4", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv11-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv11-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv11-RSA-RC4?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,75 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 37 01 00 00  33 03 02 52 ac 77 f8 ec  |....7...3..R.w..|\n+00000010  6b 58 37 4d 43 de 2f 43  32 93 a4 d2 a1 10 21 6e  |kX7MC./C2.....!n|\n+00000020  55 aa f2 0d 14 70 6d 37  cb 0e e7 00 00 04 00 05  |U....pm7........|\n+00000030  00 ff 02 01 00 00 05 00  0f 00 01 01              |............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 02 00 2a 02 00 00  26 03 02 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n+00000030  03 02 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 02 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 02 00 86 10 00 00  82 00 80 04 ed f2 fd 60  |...............`|\n+00000010  fe 22 e4 ed 2a d2 f4 e2  7c 50 f7 a5 20 7f aa 06  |.\"..*...|P.. ...|\n+00000020  ab fa 73 e7 fa 52 da 1e  ee a2 27 2c 90 21 35 0e  |..s..R....',.!5.|\n+00000030  b4 c7 ca 3e 94 bc 65 e0  64 cb a0 c3 80 15 6e 40  |...>..e.d.....n@|\n+00000040  53 6c 02 ec e8 b9 51 29  ae b8 bc 1e fa 18 61 50  |Sl....Q)......aP|\n+00000050  79 f4 31 d3 13 0d e1 36  a4 2b c1 7d 3f 88 90 a5  |y.1....6.+.}?...|\n+00000060  3d bd 09 2a e8 f9 56 a5  4b 59 63 90 0a fd 79 26  |=..*..V.KYc...y&|\n+00000070  2b 80 8c 40 68 ee 85 41  c1 b7 9c 6d d5 fc 2f 96  |+..@h..A...m../.|\n+00000080  d3 20 7b 34 7b 8c 94 5f  fc 27 80 14 03 02 00 01  |. {4{.._.'......|\n+00000090  01 16 03 02 00 24 ae b1  15 28 25 1b e0 a1 d1 6e  |.....$...(%....n|\n+000000a0  6f 01 b9 ff 19 09 2e 01  c1 15 b8 04 cc ad e7 63  |o..............c|\n+000000b0  29 0a fd 3e eb ea 56 f3  68 ac                    |)..>..V.h.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 02 00 01 01 16 03  02 00 24 99 ca 80 4d cf  |..........$...M.|\n+00000010  dd de 83 29 63 8c 16 36  5f e0 6b ed c4 ed 6c 03  |...)c..6_.k...l.|\n+00000020  9a 56 8b 78 e1 cc 68 a5  83 ae 25 23 4d 31 0a 17  |.V.x..h...%#M1..|\n+00000030  03 02 00 21 66 36 75 ae  62 17 85 e8 2e b0 3d c6  |...!f6u.b.....=.|\n+00000040  c7 71 44 a5 6b 50 ea c3  8b 46 b8 b6 d0 9d 04 36  |.qD.kP...F.....6|\n+00000050  cd f1 69 cf 8f 15 03 02  00 16 47 61 e8 e2 4c bb  |..i.......Ga..L.|\n+00000060  10 a3 31 38 5a a1 33 61  c2 09 cf a9 95 1c df 72  |..18Z.3a.......r|"}, {"sha": "cd91d7f50a97c358e38fb0e9ecf3753b99d22761", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-CipherSuiteCertPreferenceECDSA", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceECDSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceECDSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceECDSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,106 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 01 39 01 00 01  35 03 03 52 ac 77 f8 cf  |....9...5..R.w..|\n+00000010  8e 29 75 5c 1e a8 0c ef  df a1 2b c5 c0 ca fe bc  |.)u\\......+.....|\n+00000020  63 b1 df 9a 17 e3 5f a4  e1 1c c4 00 00 a0 c0 30  |c....._........0|\n+00000030  c0 2c c0 28 c0 24 c0 14  c0 0a c0 22 c0 21 00 a3  |.,.(.$.....\".!..|\n+00000040  00 9f 00 6b 00 6a 00 39  00 38 00 88 00 87 c0 32  |...k.j.9.8.....2|\n+00000050  c0 2e c0 2a c0 26 c0 0f  c0 05 00 9d 00 3d 00 35  |...*.&.......=.5|\n+00000060  00 84 c0 12 c0 08 c0 1c  c0 1b 00 16 00 13 c0 0d  |................|\n+00000070  c0 03 00 0a c0 2f c0 2b  c0 27 c0 23 c0 13 c0 09  |...../.+.'.#....|\n+00000080  c0 1f c0 1e 00 a2 00 9e  00 67 00 40 00 33 00 32  |.........g.@.3.2|\n+00000090  00 9a 00 99 00 45 00 44  c0 31 c0 2d c0 29 c0 25  |.....E.D.1.-.).%|\n+000000a0  c0 0e c0 04 00 9c 00 3c  00 2f 00 96 00 41 00 07  |.......<./...A..|\n+000000b0  c0 11 c0 07 c0 0c c0 02  00 05 00 04 00 15 00 12  |................|\n+000000c0  00 09 00 14 00 11 00 08  00 06 00 03 00 ff 02 01  |................|\n+000000d0  00 00 6b 00 0b 00 04 03  00 01 02 00 0a 00 34 00  |..k...........4.|\n+000000e0  32 00 0e 00 0d 00 19 00  0b 00 0c 00 18 00 09 00  |2...............|\n+000000f0  0a 00 16 00 17 00 08 00  06 00 07 00 14 00 15 00  |................|\n+00000100  04 00 05 00 12 00 13 00  01 00 02 00 03 00 0f 00  |................|\n+00000110  10 00 11 00 0d 00 22 00  20 06 01 06 02 06 03 05  |......\". .......|\n+00000120  01 05 02 05 03 04 01 04  02 04 03 03 01 03 02 03  |................|\n+00000130  03 02 01 02 02 02 03 01  01 00 0f 00 01 01        |..............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 0a 00 16  |................|\n+00000030  03 03 02 0e 0b 00 02 0a  00 02 07 00 02 04 30 82  |..............0.|\n+00000040  02 00 30 82 01 62 02 09  00 b8 bf 2d 47 a0 d2 eb  |..0..b.....-G...|\n+00000050  f4 30 09 06 07 2a 86 48  ce 3d 04 01 30 45 31 0b  |.0...*.H.=..0E1.|\n+00000060  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000070  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000080  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000090  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000a0  4c 74 64 30 1e 17 0d 31  32 31 31 32 32 31 35 30  |Ltd0...121122150|\n+000000b0  36 33 32 5a 17 0d 32 32  31 31 32 30 31 35 30 36  |632Z..2211201506|\n+000000c0  33 32 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |32Z0E1.0...U....|\n+000000d0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000e0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+000000f0  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000100  74 73 20 50 74 79 20 4c  74 64 30 81 9b 30 10 06  |ts Pty Ltd0..0..|\n+00000110  07 2a 86 48 ce 3d 02 01  06 05 2b 81 04 00 23 03  |.*.H.=....+...#.|\n+00000120  81 86 00 04 00 c4 a1 ed  be 98 f9 0b 48 73 36 7e  |............Hs6~|\n+00000130  c3 16 56 11 22 f2 3d 53  c3 3b 4d 21 3d cd 6b 75  |..V.\".=S.;M!=.ku|\n+00000140  e6 f6 b0 dc 9a df 26 c1  bc b2 87 f0 72 32 7c b3  |......&.....r2|.|\n+00000150  64 2f 1c 90 bc ea 68 23  10 7e fe e3 25 c0 48 3a  |d/....h#.~..%.H:|\n+00000160  69 e0 28 6d d3 37 00 ef  04 62 dd 0d a0 9c 70 62  |i.(m.7...b....pb|\n+00000170  83 d8 81 d3 64 31 aa 9e  97 31 bd 96 b0 68 c0 9b  |....d1...1...h..|\n+00000180  23 de 76 64 3f 1a 5c 7f  e9 12 0e 58 58 b6 5f 70  |#.vd?.\\....XX._p|\n+00000190  dd 9b d8 ea d5 d7 f5 d5  cc b9 b6 9f 30 66 5b 66  |............0f[f|\n+000001a0  9a 20 e2 27 e5 bf fe 3b  30 09 06 07 2a 86 48 ce  |. .'...;0...*.H.|\n+000001b0  3d 04 01 03 81 8c 00 30  81 88 02 42 01 88 a2 4f  |=......0...B...O|\n+000001c0  eb e2 45 c5 48 7d 1b ac  f5 ed 98 9d ae 47 70 c0  |..E.H}.......Gp.|\n+000001d0  5e 1b b6 2f bd f1 b6 4d  b7 61 40 d3 11 a2 ce ee  |^../...M.a@.....|\n+000001e0  0b 7e 92 7e ff 76 9d c3  3b 7e a5 3f ce fa 10 e2  |.~.~.v..;~.?....|\n+000001f0  59 ec 47 2d 7c ac da 4e  97 0e 15 a0 6f d0 02 42  |Y.G-|..N....o..B|\n+00000200  01 4d fc be 67 13 9c 2d  05 0e bd 3f a3 8c 25 c1  |.M..g..-...?..%.|\n+00000210  33 13 83 0d 94 06 bb d4  37 7a f6 ec 7a c9 86 2e  |3.......7z..z...|\n+00000220  dd d7 11 69 7f 85 7c 56  de fb 31 78 2b e4 c7 78  |...i..|V..1x+..x|\n+00000230  0d ae cb be 9e 4e 36 24  31 7b 6a 0f 39 95 12 07  |.....N6$1{j.9...|\n+00000240  8f 2a 16 03 03 01 1c 0c  00 01 18 03 00 19 85 04  |.*..............|\n+00000250  01 39 dc ee 44 17 5e db  d7 27 af b6 56 d9 b4 43  |.9..D.^..'..V..C|\n+00000260  5a 99 cf aa 31 37 0c 6f  3a a0 f8 53 c4 74 d1 91  |Z...17.o:..S.t..|\n+00000270  0a 46 f5 38 3b 5c 09 d8  97 dc 4b aa 70 26 48 f2  |.F.8;\\....K.p&H.|\n+00000280  d6 0b 31 c9 f8 d4 98 43  e1 6c d5 c7 b2 8e 0b 01  |..1....C.l......|\n+00000290  e6 b6 00 28 80 7b fc 96  8f 0d a2 4f b0 79 af dc  |...(.{.....O.y..|\n+000002a0  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n+000002b0  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n+000002c0  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n+000002d0  94 79 90 33 04 03 00 8b  30 81 88 02 42 00 c6 85  |.y.3....0...B...|\n+000002e0  8e 06 b7 04 04 e9 cd 9e  3e cb 66 23 95 b4 42 9c  |........>.f#..B.|\n+000002f0  64 81 39 05 3f b5 21 f8  28 af 60 6b 4d 3d ba a1  |d.9.?.!.(.`kM=..|\n+00000300  4b 5e 77 ef e7 59 28 fe  1d c1 27 a2 ff a8 de 33  |K^w..Y(...'....3|\n+00000310  48 b3 c1 85 6a 42 9b f9  7e 7e 31 c2 e5 bd 66 02  |H...jB..~~1...f.|\n+00000320  42 00 ad 7d 06 35 ab ec  8d ac d4 ba 1b 49 5e 05  |B..}.5.......I^.|\n+00000330  5f f0 97 93 82 b8 2b 8d  91 98 63 8e b4 14 62 db  |_.....+...c...b.|\n+00000340  1e c9 2b b9 8d 7b bf 37  1c f3 94 74 60 d6 7d a5  |..+..{.7...t`.}.|\n+00000350  28 0a 74 d1 59 87 c3 42  31 9a 0e f7 85 ce ec eb  |(.t.Y..B1.......|\n+00000360  fa 4a 14 16 03 03 00 04  0e 00 00 00              |.J..........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 8a 10 00 00  86 85 04 01 31 b5 19 44  |............1..D|\n+00000010  f5 d4 29 20 77 2e cc a9  bb ab 5d 3b f6 0e 5c dd  |..) w.....];..\\.|\n+00000020  c2 cd 42 a4 b1 ce 1f 69  0f 09 c7 ef 5a 99 96 03  |..B....i....Z...|\n+00000030  5b 57 86 02 c0 d0 9a a6  5f 59 b0 5b 45 c2 ae ec  |[W......_Y.[E...|\n+00000040  cf 3d 3d 60 b5 5f 7d c9  82 5a 54 0b 74 00 c2 8b  |.==`._}..ZT.t...|\n+00000050  67 2f f9 dd c9 bd 2c 63  12 5b 55 61 09 8b fe 75  |g/....,c.[Ua...u|\n+00000060  23 2c a2 c1 bd 6e 71 23  07 e3 c2 64 5e 13 f1 d1  |#,...nq#...d^...|\n+00000070  cc db 17 dc 8b e6 4f d4  72 46 0a 1e 26 63 cb e0  |......O.rF..&c..|\n+00000080  da f3 f7 f6 d3 64 f5 44  ce 01 7b 21 4e cb 23 14  |.....d.D..{!N.#.|\n+00000090  03 03 00 01 01 16 03 03  00 40 5d 5b 3c 90 6b e1  |.........@][<.k.|\n+000000a0  33 90 6a a3 6a 9e f8 a6  9b 2d ca 8b ea 26 10 92  |3.j.j....-...&..|\n+000000b0  ca 60 7b 4b fb 8a df 5d  1d 4b 23 41 7e 4f f7 c2  |.`{K...].K#A~O..|\n+000000c0  98 64 11 84 56 bc 9c ba  11 1c 19 7f a9 04 43 d3  |.d..V.........C.|\n+000000d0  a0 80 47 11 09 a5 dc 08  fc a0                    |..G.......|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 2e 6a 39 7e ab  |............j9~.|\n+00000020  da af a7 27 4f 60 4e e4  d6 6e 75 3a 03 20 af 45  |...'O`N..nu:. .E|\n+00000030  a2 ad 58 2e 8b 4b e6 5f  22 41 87 79 21 eb 5c 71  |..X..K._\"A.y!.\\q|\n+00000040  d8 63 ba 42 8b 32 8a 61  e2 6f 43 17 03 03 00 40  |.c.B.2.a.oC....@|\n+00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000060  2e e2 39 2b 6c 28 9e 3a  59 f6 31 04 8b 95 be bd  |..9+l(.:Y.1.....|\n+00000070  73 e6 12 77 ab 3a 30 30  1b f2 5f 7e 42 f9 53 1c  |s..w.:00.._~B.S.|\n+00000080  bf 3c 58 8f e0 b6 c7 f2  c5 5d 0f d0 37 3f 37 96  |.<X......]..7?7.|\n+00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+000000a0  00 00 00 00 00 a5 fa 6a  4d 33 1a 0d 83 5e 26 39  |.......jM3...^&9|\n+000000b0  a1 07 3c 00 02 7e 2b 1b  c0 95 4a 16 85 83 c4 af  |..<..~+...J.....|\n+000000c0  79 0e 43 c6 c8                                    |y.C..|"}, {"sha": "637c8aa98f78cca1796cc30ef2e2835bb272ef1f", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-CipherSuiteCertPreferenceRSA", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceRSA", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceRSA", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-CipherSuiteCertPreferenceRSA?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,117 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 01 39 01 00 01  35 03 03 52 ac 77 f8 37  |....9...5..R.w.7|\n+00000010  29 0d 02 21 92 09 b5 f1  91 cd bc a7 7d 84 2b 9b  |)..!........}.+.|\n+00000020  f5 4f bf b6 c6 f3 a0 60  62 df cf 00 00 a0 c0 30  |.O.....`b......0|\n+00000030  c0 2c c0 28 c0 24 c0 14  c0 0a c0 22 c0 21 00 a3  |.,.(.$.....\".!..|\n+00000040  00 9f 00 6b 00 6a 00 39  00 38 00 88 00 87 c0 32  |...k.j.9.8.....2|\n+00000050  c0 2e c0 2a c0 26 c0 0f  c0 05 00 9d 00 3d 00 35  |...*.&.......=.5|\n+00000060  00 84 c0 12 c0 08 c0 1c  c0 1b 00 16 00 13 c0 0d  |................|\n+00000070  c0 03 00 0a c0 2f c0 2b  c0 27 c0 23 c0 13 c0 09  |...../.+.'.#....|\n+00000080  c0 1f c0 1e 00 a2 00 9e  00 67 00 40 00 33 00 32  |.........g.@.3.2|\n+00000090  00 9a 00 99 00 45 00 44  c0 31 c0 2d c0 29 c0 25  |.....E.D.1.-.).%|\n+000000a0  c0 0e c0 04 00 9c 00 3c  00 2f 00 96 00 41 00 07  |.......<./...A..|\n+000000b0  c0 11 c0 07 c0 0c c0 02  00 05 00 04 00 15 00 12  |................|\n+000000c0  00 09 00 14 00 11 00 08  00 06 00 03 00 ff 02 01  |................|\n+000000d0  00 00 6b 00 0b 00 04 03  00 01 02 00 0a 00 34 00  |..k...........4.|\n+000000e0  32 00 0e 00 0d 00 19 00  0b 00 0c 00 18 00 09 00  |2...............|\n+000000f0  0a 00 16 00 17 00 08 00  06 00 07 00 14 00 15 00  |................|\n+00000100  04 00 05 00 12 00 13 00  01 00 02 00 03 00 0f 00  |................|\n+00000110  10 00 11 00 0d 00 22 00  20 06 01 06 02 06 03 05  |......\". .......|\n+00000120  01 05 02 05 03 04 01 04  02 04 03 03 01 03 02 03  |................|\n+00000130  03 02 01 02 02 02 03 01  01 00 0f 00 01 01        |..............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 13 00 16  |................|\n+00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 03 01 11 0c  00 01 0d 03 00 19 85 04  |................|\n+00000300  01 39 dc ee 44 17 5e db  d7 27 af b6 56 d9 b4 43  |.9..D.^..'..V..C|\n+00000310  5a 99 cf aa 31 37 0c 6f  3a a0 f8 53 c4 74 d1 91  |Z...17.o:..S.t..|\n+00000320  0a 46 f5 38 3b 5c 09 d8  97 dc 4b aa 70 26 48 f2  |.F.8;\\....K.p&H.|\n+00000330  d6 0b 31 c9 f8 d4 98 43  e1 6c d5 c7 b2 8e 0b 01  |..1....C.l......|\n+00000340  e6 b6 00 28 80 7b fc 96  8f 0d a2 4f b0 79 af dc  |...(.{.....O.y..|\n+00000350  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n+00000360  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n+00000370  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n+00000380  94 79 90 33 04 01 00 80  8f 6a 76 5c 33 9a 1e 46  |.y.3.....jv\\3..F|\n+00000390  e6 c4 91 f6 69 23 05 38  bf c0 fd 9e dc 32 49 a6  |....i#.8.....2I.|\n+000003a0  9a 80 43 a0 47 d4 37 f5  98 06 2f 77 cb 30 8a 95  |..C.G.7.../w.0..|\n+000003b0  04 02 76 f1 2a ee 7c a6  79 df 7f 63 1e 1a 64 75  |..v.*.|.y..c..du|\n+000003c0  f5 a9 1e a9 32 49 65 8b  5b 1b 02 68 7b 6c 39 e8  |....2Ie.[..h{l9.|\n+000003d0  06 99 10 08 77 f7 a2 b3  22 14 14 d6 83 b8 a2 3e  |....w...\"......>|\n+000003e0  e3 a6 4d dd da 99 c4 d7  5c 4c d1 2f 0e 0e 21 2e  |..M.....\\L./..!.|\n+000003f0  e0 9d dc bf 51 f3 da 1d  7a df 8e dc 41 77 b3 18  |....Q...z...Aw..|\n+00000400  38 75 ba b6 a3 75 0f fd  16 03 03 00 04 0e 00 00  |8u...u..........|\n+00000410  00                                                |.|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 8a 10 00 00  86 85 04 01 e0 a2 f2 1d  |................|\n+00000010  d1 f5 e7 49 09 07 df 43  5f 45 f7 fc 42 9a 81 7d  |...I...C_E..B..}|\n+00000020  39 fa bf 1c 74 df 68 de  93 49 62 3e 72 e7 78 47  |9...t.h..Ib>r.xG|\n+00000030  71 71 fd d0 3d 89 d3 38  aa f0 54 4a ad 1e 87 e9  |qq..=..8..TJ....|\n+00000040  f7 89 90 b0 25 5b a0 81  a0 20 1a 99 5e 01 7f 05  |....%[... ..^...|\n+00000050  95 78 f7 f4 4a ec 85 a9  aa cc 56 bc f7 15 37 ab  |.x..J.....V...7.|\n+00000060  31 41 62 d3 ea 46 ce 94  bf 6c 00 83 a6 f0 ee dc  |1Ab..F...l......|\n+00000070  0b 2a e0 5a fb f0 db 70  cd 9f 48 92 49 c9 9d 20  |.*.Z...p..H.I.. |\n+00000080  7b 8c de af 9d cd 5e 20  94 4e 95 c7 32 50 94 14  |{.....^ .N..2P..|\n+00000090  03 03 00 01 01 16 03 03  00 40 6a 6c 92 ef b5 d0  |.........@jl....|\n+000000a0  8f 4d c7 23 5b 31 65 71  24 50 be 5a e7 95 fc 14  |.M.#[1eq$P.Z....|\n+000000b0  e7 4f 33 c8 ae e0 e7 5f  63 76 3a 7b 51 cd 18 7a  |.O3...._cv:{Q..z|\n+000000c0  15 15 0c aa cc 76 be fc  1e 55 a1 3a df 05 4c 84  |.....v...U.:..L.|\n+000000d0  75 6e c2 2b 3d 93 76 53  41 13                    |un.+=.vSA.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 e8 4b a0 ea c7  |............K...|\n+00000020  e8 9e 4a c7 c5 65 84 eb  3f 4e a5 bd 97 11 b4 0b  |..J..e..?N......|\n+00000030  26 b8 6d 28 16 38 c4 92  d9 45 48 7f 7f e0 74 dd  |&.m(.8...EH...t.|\n+00000040  85 b7 13 5b f8 4e 5b 3f  00 95 0a 17 03 03 00 40  |...[.N[?.......@|\n+00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000060  c6 52 ac 75 32 b3 86 f4  cb cf 18 66 02 40 a3 b1  |.R.u2......f.@..|\n+00000070  cb 1b 25 2e ac 91 a7 91  2b 73 37 72 c1 1f 2c 2f  |..%.....+s7r..,/|\n+00000080  55 59 12 bd f0 df b4 07  fa b1 13 cc 58 f3 66 54  |UY..........X.fT|\n+00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+000000a0  00 00 00 00 00 14 49 94  f4 07 cb 98 d2 6f a5 b3  |......I......o..|\n+000000b0  37 bb 55 71 04 43 f9 3c  53 1c 00 31 c9 3b 8a 5c  |7.Uq.C.<S..1.;.\\|\n+000000c0  53 75 90 5d 59                                    |Su.]Y|"}, {"sha": "fb4edae9c9169bbcbbe4410b091f212eff1751eb", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ClientAuthRequestedAndECDSAGiven", "status": "added", "additions": 122, "deletions": 0, "changes": 122, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndECDSAGiven", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndECDSAGiven", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndECDSAGiven?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,122 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 7c  |....]...Y..R.w.||\n+00000010  ec cd d0 9c df d2 a6 8b  74 43 ed af 58 14 00 1f  |........tC..X...|\n+00000020  3f 85 68 1d c9 3d 20 0a  61 87 33 00 00 04 00 05  |?.h..= .a.3.....|\n+00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n+00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n+00000060  01 01                                             |..|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n+00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 03 00 0f 0d  00 00 0b 02 01 40 00 04  |.............@..|\n+00000300  04 01 04 03 00 00 16 03  03 00 04 0e 00 00 00     |...............|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 02 0a 0b 00 02  06 00 02 03 00 02 00 30  |...............0|\n+00000010  82 01 fc 30 82 01 5e 02  09 00 9a 30 84 6c 26 35  |...0..^....0.l&5|\n+00000020  d9 17 30 09 06 07 2a 86  48 ce 3d 04 01 30 45 31  |..0...*.H.=..0E1|\n+00000030  0b 30 09 06 03 55 04 06  13 02 41 55 31 13 30 11  |.0...U....AU1.0.|\n+00000040  06 03 55 04 08 13 0a 53  6f 6d 65 2d 53 74 61 74  |..U....Some-Stat|\n+00000050  65 31 21 30 1f 06 03 55  04 0a 13 18 49 6e 74 65  |e1!0...U....Inte|\n+00000060  72 6e 65 74 20 57 69 64  67 69 74 73 20 50 74 79  |rnet Widgits Pty|\n+00000070  20 4c 74 64 30 1e 17 0d  31 32 31 31 31 34 31 33  | Ltd0...12111413|\n+00000080  32 35 35 33 5a 17 0d 32  32 31 31 31 32 31 33 32  |2553Z..221112132|\n+00000090  35 35 33 5a 30 41 31 0b  30 09 06 03 55 04 06 13  |553Z0A1.0...U...|\n+000000a0  02 41 55 31 0c 30 0a 06  03 55 04 08 13 03 4e 53  |.AU1.0...U....NS|\n+000000b0  57 31 10 30 0e 06 03 55  04 07 13 07 50 79 72 6d  |W1.0...U....Pyrm|\n+000000c0  6f 6e 74 31 12 30 10 06  03 55 04 03 13 09 4a 6f  |ont1.0...U....Jo|\n+000000d0  65 6c 20 53 69 6e 67 30  81 9b 30 10 06 07 2a 86  |el Sing0..0...*.|\n+000000e0  48 ce 3d 02 01 06 05 2b  81 04 00 23 03 81 86 00  |H.=....+...#....|\n+000000f0  04 00 95 8c 91 75 14 c0  5e c4 57 b4 d4 c3 6f 8d  |.....u..^.W...o.|\n+00000100  ae 68 1e dd 6f ce 86 e1  7e 6e b2 48 3e 81 e5 4e  |.h..o...~n.H>..N|\n+00000110  e2 c6 88 4b 64 dc f5 30  bb d3 ff 65 cc 5b f4 dd  |...Kd..0...e.[..|\n+00000120  b5 6a 3e 3e d0 1d de 47  c3 76 ad 19 f6 45 2c 8c  |.j>>...G.v...E,.|\n+00000130  bc d8 1d 01 4c 1f 70 90  46 76 48 8b 8f 83 cc 4a  |....L.p.FvH....J|\n+00000140  5c 8f 40 76 da e0 89 ec  1d 2b c4 4e 30 76 28 41  |\\.@v.....+.N0v(A|\n+00000150  b2 62 a8 fb 5b f1 f9 4e  7a 8d bd 09 b8 ae ea 8b  |.b..[..Nz.......|\n+00000160  18 27 4f 2e 70 fe 13 96  ba c3 d3 40 16 cd 65 4e  |.'O.p......@..eN|\n+00000170  ac 11 1e e6 f1 30 09 06  07 2a 86 48 ce 3d 04 01  |.....0...*.H.=..|\n+00000180  03 81 8c 00 30 81 88 02  42 00 e0 14 c4 60 60 0b  |....0...B....``.|\n+00000190  72 68 b0 32 5d 61 4a 02  74 5c c2 81 b9 16 a8 3f  |rh.2]aJ.t\\.....?|\n+000001a0  29 c8 36 c7 81 ff 6c b6  5b d9 70 f1 38 3b 50 48  |).6...l.[.p.8;PH|\n+000001b0  28 94 cb 09 1a 52 f1 5d  ee 8d f2 b9 f0 f0 da d9  |(....R.]........|\n+000001c0  15 3a f9 bd 03 7a 87 a2  23 35 ec 02 42 01 a3 d4  |.:...z..#5..B...|\n+000001d0  8a 78 35 1c 4a 9a 23 d2  0a be 2b 10 31 9d 9c 5f  |.x5.J.#...+.1.._|\n+000001e0  be e8 91 b3 da 1a f5 5d  a3 23 f5 26 8b 45 70 8d  |.......].#.&.Ep.|\n+000001f0  65 62 9b 7e 01 99 3d 18  f6 10 9a 38 61 9b 2e 57  |eb.~..=....8a..W|\n+00000200  e4 fa cc b1 8a ce e2 23  a0 87 f0 e1 67 51 eb 16  |.......#....gQ..|\n+00000210  03 03 00 86 10 00 00 82  00 80 b9 28 1c 08 59 6e  |...........(..Yn|\n+00000220  04 5f dd 1d a2 c0 04 d9  ef 2e 9c be ae a4 ce cb  |._..............|\n+00000230  a3 5e 25 da ec a7 70 95  bb 78 1f 68 37 cc 76 25  |.^%...p..x.h7.v%|\n+00000240  14 64 b1 23 35 7e af 93  07 56 41 f2 f7 6b 65 03  |.d.#5~...VA..ke.|\n+00000250  98 08 0d dd 0b b3 57 3c  63 09 14 3e 38 7a e8 f6  |......W<c..>8z..|\n+00000260  7a 92 3d f4 cc 91 78 a0  90 19 94 a8 1b 60 e5 aa  |z.=...x......`..|\n+00000270  93 48 44 6c 89 e1 d7 5c  22 20 67 8e 3c 56 ef 7d  |.HDl...\\\" g.<V.}|\n+00000280  1b 43 7d c5 d1 06 19 d4  6d 59 d7 36 59 63 e5 08  |.C}.....mY.6Yc..|\n+00000290  84 53 51 1e cf a0 d7 fc  ec 2a 16 03 03 00 93 0f  |.SQ......*......|\n+000002a0  00 00 8f 04 03 00 8b 30  81 88 02 42 01 99 ca f5  |.......0...B....|\n+000002b0  1d 5f 49 9c 9e 98 df 42  65 dd 3c 6a 50 95 34 94  |._I....Be.<jP.4.|\n+000002c0  ff 90 c1 91 89 19 4f 8c  7a a0 f6 9a 30 6d 69 25  |......O.z...0mi%|\n+000002d0  d6 73 ce 37 6f 59 cc 84  62 de 48 d9 93 41 1c cb  |.s.7oY..b.H..A..|\n+000002e0  93 b0 35 c9 01 f2 2b 23  68 62 97 ab 10 4c 02 42  |..5...+#hb...L.B|\n+000002f0  00 ba e9 5f ba 91 96 5d  7f d3 a3 f0 c0 29 45 0d  |..._...].....)E.|\n+00000300  47 64 93 92 96 6f 3a ea  a8 48 71 68 0e 67 62 b5  |Gd...o:..Hqh.gb.|\n+00000310  61 09 b3 d0 6e 28 8d 43  c8 bc 6e 15 59 91 6c 74  |a...n(.C..n.Y.lt|\n+00000320  6c 63 2c 02 dd 3d 40 ce  d9 2c 7e 4c f5 92 8c aa  |lc,..=@..,~L....|\n+00000330  3a b7 14 03 03 00 01 01  16 03 03 00 24 46 dd 87  |:...........$F..|\n+00000340  c7 50 96 64 41 11 ad b6  68 cc 90 04 85 21 48 aa  |.P.dA...h....!H.|\n+00000350  43 da 06 a6 7e ec 73 71  be 37 9a a5 10 1b c7 5c  |C...~.sq.7.....\\|\n+00000360  a7                                                |.|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 49 19 94 44 b4  |..........$I..D.|\n+00000010  e7 50 8a 4f 7a 4f 05 28  e3 bc ae fc e5 ed 1c e0  |.P.OzO.(........|\n+00000020  34 0e a7 99 99 08 44 fc  95 5a 91 c9 f4 29 4a 17  |4.....D..Z...)J.|\n+00000030  03 03 00 21 5f 7b 31 75  5f 5c 84 a9 c6 5b cf e5  |...!_{1u_\\...[..|\n+00000040  90 11 a9 64 62 5d cf 54  f2 40 4f fa 1d 52 85 d1  |...db].T.@O..R..|\n+00000050  52 5a 2d 7a 18 15 03 03  00 16 4c 68 39 b1 4b 18  |RZ-z......Lh9.K.|\n+00000060  9e 67 77 5e 89 1d ae f9  17 fd 16 03 76 12 a6 73  |.gw^........v..s|"}, {"sha": "051155028732602177197e8cf43b080f371ec3d8", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ClientAuthRequestedAndGiven", "status": "added", "additions": 120, "deletions": 0, "changes": 120, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedAndGiven?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,120 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 5a  |....]...Y..R.w.Z|\n+00000010  89 61 73 8e 24 3b 48 6d  30 b4 36 ee 17 10 58 76  |.as.$;Hm0.6...Xv|\n+00000020  d0 48 1d 93 eb 78 c9 ad  c0 53 ed 00 00 04 00 05  |.H...x...S......|\n+00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n+00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n+00000060  01 01                                             |..|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n+00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 03 00 0f 0d  00 00 0b 02 01 40 00 04  |.............@..|\n+00000300  04 01 04 03 00 00 16 03  03 00 04 0e 00 00 00     |...............|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 01 fb 0b 00 01  f7 00 01 f4 00 01 f1 30  |...............0|\n+00000010  82 01 ed 30 82 01 58 a0  03 02 01 02 02 01 00 30  |...0..X........0|\n+00000020  0b 06 09 2a 86 48 86 f7  0d 01 01 05 30 26 31 10  |...*.H......0&1.|\n+00000030  30 0e 06 03 55 04 0a 13  07 41 63 6d 65 20 43 6f  |0...U....Acme Co|\n+00000040  31 12 30 10 06 03 55 04  03 13 09 31 32 37 2e 30  |1.0...U....127.0|\n+00000050  2e 30 2e 31 30 1e 17 0d  31 31 31 32 30 38 30 37  |.0.10...11120807|\n+00000060  35 35 31 32 5a 17 0d 31  32 31 32 30 37 30 38 30  |5512Z..121207080|\n+00000070  30 31 32 5a 30 26 31 10  30 0e 06 03 55 04 0a 13  |012Z0&1.0...U...|\n+00000080  07 41 63 6d 65 20 43 6f  31 12 30 10 06 03 55 04  |.Acme Co1.0...U.|\n+00000090  03 13 09 31 32 37 2e 30  2e 30 2e 31 30 81 9c 30  |...127.0.0.10..0|\n+000000a0  0b 06 09 2a 86 48 86 f7  0d 01 01 01 03 81 8c 00  |...*.H..........|\n+000000b0  30 81 88 02 81 80 4e d0  7b 31 e3 82 64 d9 59 c0  |0.....N.{1..d.Y.|\n+000000c0  c2 87 a4 5e 1e 8b 73 33  c7 63 53 df 66 92 06 84  |...^..s3.cS.f...|\n+000000d0  f6 64 d5 8f e4 36 a7 1d  2b e8 b3 20 36 45 23 b5  |.d...6..+.. 6E#.|\n+000000e0  e3 95 ae ed e0 f5 20 9c  8d 95 df 7f 5a 12 ef 87  |...... .....Z...|\n+000000f0  e4 5b 68 e4 e9 0e 74 ec  04 8a 7f de 93 27 c4 01  |.[h...t......'..|\n+00000100  19 7a bd f2 dc 3d 14 ab  d0 54 ca 21 0c d0 4d 6e  |.z...=...T.!..Mn|\n+00000110  87 2e 5c c5 d2 bb 4d 4b  4f ce b6 2c f7 7e 88 ec  |..\\...MKO..,.~..|\n+00000120  7c d7 02 91 74 a6 1e 0c  1a da e3 4a 5a 2e de 13  ||...t......JZ...|\n+00000130  9c 4c 40 88 59 93 02 03  01 00 01 a3 32 30 30 30  |.L@.Y.......2000|\n+00000140  0e 06 03 55 1d 0f 01 01  ff 04 04 03 02 00 a0 30  |...U...........0|\n+00000150  0d 06 03 55 1d 0e 04 06  04 04 01 02 03 04 30 0f  |...U..........0.|\n+00000160  06 03 55 1d 23 04 08 30  06 80 04 01 02 03 04 30  |..U.#..0.......0|\n+00000170  0b 06 09 2a 86 48 86 f7  0d 01 01 05 03 81 81 00  |...*.H..........|\n+00000180  36 1f b3 7a 0c 75 c9 6e  37 46 61 2b d5 bd c0 a7  |6..z.u.n7Fa+....|\n+00000190  4b cc 46 9a 81 58 7c 85  79 29 c8 c8 c6 67 dd 32  |K.F..X|.y)...g.2|\n+000001a0  56 45 2b 75 b6 e9 24 a9  50 9a be 1f 5a fa 1a 15  |VE+u..$.P...Z...|\n+000001b0  d9 cc 55 95 72 16 83 b9  c2 b6 8f fd 88 8c 38 84  |..U.r.........8.|\n+000001c0  1d ab 5d 92 31 13 4f fd  83 3b c6 9d f1 11 62 b6  |..].1.O..;....b.|\n+000001d0  8b ec ab 67 be c8 64 b0  11 50 46 58 17 6b 99 1c  |...g..d..PFX.k..|\n+000001e0  d3 1d fc 06 f1 0e e5 96  a8 0c f9 78 20 b7 44 18  |...........x .D.|\n+000001f0  51 8d 10 7e 4f 94 67 df  a3 4e 70 73 8e 90 91 85  |Q..~O.g..Nps....|\n+00000200  16 03 03 00 86 10 00 00  82 00 80 05 f0 5b e7 ee  |.............[..|\n+00000210  1a a0 9d 54 85 3c c9 1d  e0 fd d7 21 ed d2 34 0a  |...T.<.....!..4.|\n+00000220  91 da db 03 b4 c8 b5 50  d9 5f 8e 31 9e 56 ec 62  |.......P._.1.V.b|\n+00000230  ff df 79 37 6e 22 c1 11  00 a2 e3 ed 63 29 9e 26  |..y7n\"......c).&|\n+00000240  4c d1 7a 6a d4 b6 06 cc  06 da 72 a8 4b 08 0b fc  |L.zj......r.K...|\n+00000250  f4 23 e8 43 9b 9f 55 cc  dc 4a e3 45 be b5 be d7  |.#.C..U..J.E....|\n+00000260  e5 34 e5 86 ca 45 b4 15  9d 8c bc 0c 66 f2 e5 24  |.4...E......f..$|\n+00000270  2c af d8 1a c0 9e dc f7  cc 30 43 d1 1e 8e 4c c0  |,........0C...L.|\n+00000280  e8 7b 8e a5 21 37 35 ae  b9 c4 aa 16 03 03 00 88  |.{..!75.........|\n+00000290  0f 00 00 84 04 01 00 80  2f db 55 56 9a 38 36 98  |......../.UV.86.|\n+000002a0  b3 46 cf 9f 91 37 92 98  97 d6 7e 7b 5e b8 cc ef  |.F...7....~{^...|\n+000002b0  b9 f8 69 91 e4 f5 4a bf  2c 6d f5 b2 d0 61 b3 79  |..i...J.,m...a.y|\n+000002c0  f0 6a 22 3c 32 bf 72 c3  7d 4c 30 68 dd d6 cd 53  |.j\"<2.r.}L0h...S|\n+000002d0  c1 88 84 11 90 7f 75 e2  5b ca 80 a9 c9 8e 6e ef  |......u.[.....n.|\n+000002e0  87 8b 80 06 c5 ce 95 a5  b5 20 d6 75 04 66 87 29  |......... .u.f.)|\n+000002f0  06 1d 59 0b b5 d2 b1 07  5e 09 c3 1d 9e 47 0e 07  |..Y.....^....G..|\n+00000300  d9 83 dd 56 e5 93 b6 1e  e7 61 5c f8 2b 8a e7 83  |...V.....a\\.+...|\n+00000310  52 15 2f bd 9c 91 3b a3  14 03 03 00 01 01 16 03  |R./...;.........|\n+00000320  03 00 24 64 d6 db a5 d4  0c 9f 03 be c9 f1 20 5c  |..$d.......... \\|\n+00000330  5f 5a 41 1e 5e c9 c6 04  e7 f5 7f 68 db 38 a6 8c  |_ZA.^......h.8..|\n+00000340  cb 5e b9 99 5e b3 69                              |.^..^.i|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 5a 42 72 e0 fc  |..........$ZBr..|\n+00000010  c7 ca 9c 74 da 0a 85 df  d5 32 f4 24 aa e1 45 39  |...t.....2.$..E9|\n+00000020  5c 86 29 99 85 c8 1b cb  bc ba 1d 27 68 1a a7 17  |\\.)........'h...|\n+00000030  03 03 00 21 95 56 9f 44  51 a4 51 67 3f ee 8b e4  |...!.V.DQ.Qg?...|\n+00000040  19 03 e4 5f 15 aa b7 ce  7f db 15 a0 15 65 e7 cc  |..._.........e..|\n+00000050  c5 25 72 ae 0c 15 03 03  00 16 e5 97 49 3d f1 5e  |.%r.........I=.^|\n+00000060  53 4e d9 40 cf 81 de 3b  5f 5e b2 2a 78 51 ab 66  |SN.@...;_^.*xQ.f|"}, {"sha": "1543e83c7865bcba41e9baede7fdb031ab9a1ecd", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ClientAuthRequestedNotGiven", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedNotGiven", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedNotGiven", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ClientAuthRequestedNotGiven?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,80 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 c7  |....]...Y..R.w..|\n+00000010  e6 0f 80 12 13 8e 2d a8  61 1f 31 ba 94 f9 0e f8  |......-.a.1.....|\n+00000020  43 a5 2b c8 95 c5 f7 47  b4 f9 b5 00 00 04 00 05  |C.+....G........|\n+00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n+00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n+00000060  01 01                                             |..|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n+00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 03 00 0f 0d  00 00 0b 02 01 40 00 04  |.............@..|\n+00000300  04 01 04 03 00 00 16 03  03 00 04 0e 00 00 00     |...............|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 07 0b 00 00  03 00 00 00 16 03 03 00  |................|\n+00000010  86 10 00 00 82 00 80 8c  f3 9d ed 36 34 11 9b 89  |...........64...|\n+00000020  22 b2 0e 20 0c be c6 91  f5 2e 7f 35 e9 14 b1 b9  |\".. .......5....|\n+00000030  c6 02 cf da d2 3a 81 a4  18 1b 32 0c 21 fe cd a5  |.....:....2.!...|\n+00000040  c2 74 0c db 29 9c 73 e4  de 7c c4 8d f6 2d b0 0e  |.t..).s..|...-..|\n+00000050  f5 b4 48 b5 24 94 be 3f  c2 da 2a fe 82 b9 66 1f  |..H.$..?..*...f.|\n+00000060  45 12 e9 50 a9 e4 09 2d  6e 67 e2 63 21 a8 e7 23  |E..P...-ng.c!..#|\n+00000070  2e ec e3 e3 39 dc f9 54  c4 5a 5c 3e e8 a1 fc 6a  |....9..T.Z\\>...j|\n+00000080  98 38 23 85 a2 a4 f4 26  4c 8e 00 fa 99 f9 53 3f  |.8#....&L.....S?|\n+00000090  ce f7 34 4e a3 1b 2e 14  03 03 00 01 01 16 03 03  |..4N............|\n+000000a0  00 24 e2 c8 25 81 12 b8  b1 28 f9 a3 8c 94 9e 7c  |.$..%....(.....||\n+000000b0  63 78 f0 04 74 53 31 50  40 29 2f 6c 0a 09 05 6a  |cx..tS1P@)/l...j|\n+000000c0  32 5d 92 1a 0c 2e                                 |2]....|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 fb 18 af ff 1b  |..........$.....|\n+00000010  72 08 c5 e1 1f c6 8b 43  18 0b 54 65 bd 6e d8 f4  |r......C..Te.n..|\n+00000020  7e 3e e4 b0 bb 73 39 bf  24 ab d4 cd 4a 88 b2 17  |~>...s9.$...J...|\n+00000030  03 03 00 21 ee 69 69 7c  70 70 d7 63 b7 cf 3c 50  |...!.ii|pp.c..<P|\n+00000040  30 96 0a f8 1b ed c8 3a  c7 a4 8e d5 35 5d e1 8d  |0......:....5]..|\n+00000050  bd 26 6e 1e 33 15 03 03  00 16 bc 99 f6 0b 44 7e  |.&n.3.........D~|\n+00000060  6a 5b 65 51 8d 2d b9 e0  bf 47 fa 46 f7 0a f0 9f  |j[eQ.-...G.F....|"}, {"sha": "1ba6bc8388a963e6dcbb115e2c77e668d316c02c", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-ECDHE-ECDSA-AES", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ECDHE-ECDSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ECDHE-ECDSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-ECDHE-ECDSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,97 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 9d 01 00 00  99 03 03 52 ac 77 f8 5b  |...........R.w.[|\n+00000010  57 5f 06 3b 30 36 42 66  99 e9 c9 8c 57 1c cf 14  |W_.;06Bf....W...|\n+00000020  c9 a8 20 ee da a6 55 d4  d9 ff 1c 00 00 04 c0 0a  |.. ...U.........|\n+00000030  00 ff 02 01 00 00 6b 00  0b 00 04 03 00 01 02 00  |......k.........|\n+00000040  0a 00 34 00 32 00 0e 00  0d 00 19 00 0b 00 0c 00  |..4.2...........|\n+00000050  18 00 09 00 0a 00 16 00  17 00 08 00 06 00 07 00  |................|\n+00000060  14 00 15 00 04 00 05 00  12 00 13 00 01 00 02 00  |................|\n+00000070  03 00 0f 00 10 00 11 00  0d 00 22 00 20 06 01 06  |..........\". ...|\n+00000080  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000090  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n+000000a0  01 01                                             |..|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 0a 00 16  |................|\n+00000030  03 03 02 0e 0b 00 02 0a  00 02 07 00 02 04 30 82  |..............0.|\n+00000040  02 00 30 82 01 62 02 09  00 b8 bf 2d 47 a0 d2 eb  |..0..b.....-G...|\n+00000050  f4 30 09 06 07 2a 86 48  ce 3d 04 01 30 45 31 0b  |.0...*.H.=..0E1.|\n+00000060  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+00000070  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+00000080  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000090  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+000000a0  4c 74 64 30 1e 17 0d 31  32 31 31 32 32 31 35 30  |Ltd0...121122150|\n+000000b0  36 33 32 5a 17 0d 32 32  31 31 32 30 31 35 30 36  |632Z..2211201506|\n+000000c0  33 32 5a 30 45 31 0b 30  09 06 03 55 04 06 13 02  |32Z0E1.0...U....|\n+000000d0  41 55 31 13 30 11 06 03  55 04 08 13 0a 53 6f 6d  |AU1.0...U....Som|\n+000000e0  65 2d 53 74 61 74 65 31  21 30 1f 06 03 55 04 0a  |e-State1!0...U..|\n+000000f0  13 18 49 6e 74 65 72 6e  65 74 20 57 69 64 67 69  |..Internet Widgi|\n+00000100  74 73 20 50 74 79 20 4c  74 64 30 81 9b 30 10 06  |ts Pty Ltd0..0..|\n+00000110  07 2a 86 48 ce 3d 02 01  06 05 2b 81 04 00 23 03  |.*.H.=....+...#.|\n+00000120  81 86 00 04 00 c4 a1 ed  be 98 f9 0b 48 73 36 7e  |............Hs6~|\n+00000130  c3 16 56 11 22 f2 3d 53  c3 3b 4d 21 3d cd 6b 75  |..V.\".=S.;M!=.ku|\n+00000140  e6 f6 b0 dc 9a df 26 c1  bc b2 87 f0 72 32 7c b3  |......&.....r2|.|\n+00000150  64 2f 1c 90 bc ea 68 23  10 7e fe e3 25 c0 48 3a  |d/....h#.~..%.H:|\n+00000160  69 e0 28 6d d3 37 00 ef  04 62 dd 0d a0 9c 70 62  |i.(m.7...b....pb|\n+00000170  83 d8 81 d3 64 31 aa 9e  97 31 bd 96 b0 68 c0 9b  |....d1...1...h..|\n+00000180  23 de 76 64 3f 1a 5c 7f  e9 12 0e 58 58 b6 5f 70  |#.vd?.\\....XX._p|\n+00000190  dd 9b d8 ea d5 d7 f5 d5  cc b9 b6 9f 30 66 5b 66  |............0f[f|\n+000001a0  9a 20 e2 27 e5 bf fe 3b  30 09 06 07 2a 86 48 ce  |. .'...;0...*.H.|\n+000001b0  3d 04 01 03 81 8c 00 30  81 88 02 42 01 88 a2 4f  |=......0...B...O|\n+000001c0  eb e2 45 c5 48 7d 1b ac  f5 ed 98 9d ae 47 70 c0  |..E.H}.......Gp.|\n+000001d0  5e 1b b6 2f bd f1 b6 4d  b7 61 40 d3 11 a2 ce ee  |^../...M.a@.....|\n+000001e0  0b 7e 92 7e ff 76 9d c3  3b 7e a5 3f ce fa 10 e2  |.~.~.v..;~.?....|\n+000001f0  59 ec 47 2d 7c ac da 4e  97 0e 15 a0 6f d0 02 42  |Y.G-|..N....o..B|\n+00000200  01 4d fc be 67 13 9c 2d  05 0e bd 3f a3 8c 25 c1  |.M..g..-...?..%.|\n+00000210  33 13 83 0d 94 06 bb d4  37 7a f6 ec 7a c9 86 2e  |3.......7z..z...|\n+00000220  dd d7 11 69 7f 85 7c 56  de fb 31 78 2b e4 c7 78  |...i..|V..1x+..x|\n+00000230  0d ae cb be 9e 4e 36 24  31 7b 6a 0f 39 95 12 07  |.....N6$1{j.9...|\n+00000240  8f 2a 16 03 03 01 1c 0c  00 01 18 03 00 19 85 04  |.*..............|\n+00000250  01 39 dc ee 44 17 5e db  d7 27 af b6 56 d9 b4 43  |.9..D.^..'..V..C|\n+00000260  5a 99 cf aa 31 37 0c 6f  3a a0 f8 53 c4 74 d1 91  |Z...17.o:..S.t..|\n+00000270  0a 46 f5 38 3b 5c 09 d8  97 dc 4b aa 70 26 48 f2  |.F.8;\\....K.p&H.|\n+00000280  d6 0b 31 c9 f8 d4 98 43  e1 6c d5 c7 b2 8e 0b 01  |..1....C.l......|\n+00000290  e6 b6 00 28 80 7b fc 96  8f 0d a2 4f b0 79 af dc  |...(.{.....O.y..|\n+000002a0  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n+000002b0  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n+000002c0  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n+000002d0  94 79 90 33 04 03 00 8b  30 81 88 02 42 00 c6 85  |.y.3....0...B...|\n+000002e0  8e 06 b7 04 04 e9 cd 9e  3e cb 66 23 95 b4 42 9c  |........>.f#..B.|\n+000002f0  64 81 39 05 3f b5 21 f8  28 af 60 6b 4d 3d ba a1  |d.9.?.!.(.`kM=..|\n+00000300  4b 5e 77 ef e7 59 28 fe  1d c1 27 a2 ff a8 de 33  |K^w..Y(...'....3|\n+00000310  48 b3 c1 85 6a 42 9b f9  7e 7e 31 c2 e5 bd 66 02  |H...jB..~~1...f.|\n+00000320  42 00 ad 7d 06 35 ab ec  8d ac d4 ba 1b 49 5e 05  |B..}.5.......I^.|\n+00000330  5f f0 97 93 82 b8 2b 8d  91 98 63 8e b4 14 62 db  |_.....+...c...b.|\n+00000340  1e c9 2c 13 30 dc 4e 5e  b7 d5 65 00 16 6c 30 04  |..,.0.N^..e..l0.|\n+00000350  cb 66 02 97 ea 7f 7a 16  90 97 16 51 4e de 88 c8  |.f....z....QN...|\n+00000360  63 95 8f 16 03 03 00 04  0e 00 00 00              |c...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 8a 10 00 00  86 85 04 00 c6 26 3b 69  |.............&;i|\n+00000010  8e 54 b7 33 1f be ba 55  54 2d 37 79 d2 69 b9 ff  |.T.3...UT-7y.i..|\n+00000020  2f 18 4f e4 64 94 84 37  d3 34 5b 51 cd cd 62 45  |/.O.d..7.4[Q..bE|\n+00000030  6f b6 78 46 ed 2e 7d 75  93 d7 b9 e3 18 d2 80 1e  |o.xF..}u........|\n+00000040  55 09 57 13 6d 74 04 c6  f2 18 85 d2 44 01 7e 0a  |U.W.mt......D.~.|\n+00000050  d7 31 93 51 45 47 74 11  a9 db b1 1b 93 d0 64 75  |.1.QEGt.......du|\n+00000060  e1 be 61 88 5c 26 c3 a6  82 b0 04 ad b2 39 26 c7  |..a.\\&.......9&.|\n+00000070  75 fe ac 50 cd f4 87 8d  02 3a b4 06 9d 93 d5 09  |u..P.....:......|\n+00000080  2c 8a fd 20 1c 34 73 8f  47 96 85 ce 80 fc b1 14  |,.. .4s.G.......|\n+00000090  03 03 00 01 01 16 03 03  00 40 f2 63 f6 c1 21 89  |.........@.c..!.|\n+000000a0  34 a9 cc a3 ff 71 a0 c5  9e b7 f9 32 80 8f 60 cc  |4....q.....2..`.|\n+000000b0  bf 58 43 7c 5e d5 52 f1  d4 ea a3 50 ac 0d b5 ce  |.XC|^.R....P....|\n+000000c0  80 82 f7 91 9b 07 f6 38  a8 90 b2 15 77 f5 b6 7c  |.......8....w..||\n+000000d0  f9 df 62 f1 dc 15 21 04  dc 89                    |..b...!...|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 3c d0 01 76 c9  |...........<..v.|\n+00000020  0a 55 3f 92 47 ec 04 22  d8 79 3e 0c 7d f9 fe 12  |.U?.G..\".y>.}...|\n+00000030  c1 21 ce 50 d9 f1 2d 21  38 1a 74 44 e2 0d d0 e6  |.!.P..-!8.tD....|\n+00000040  e5 e1 e2 a0 0e 20 59 7b  2c 62 57 17 03 03 00 40  |..... Y{,bW....@|\n+00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000060  c7 92 46 7e 19 ca ca a3  39 e5 11 de 06 bd a8 ab  |..F~....9.......|\n+00000070  68 75 b7 32 0b 8c a9 80  42 9c a2 ae a4 98 f1 5b  |hu.2....B......[|\n+00000080  35 7b 05 63 2d a0 58 ae  01 9f b1 24 12 06 00 c5  |5{.c-.X....$....|\n+00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+000000a0  00 00 00 00 00 74 9c 20  9a ab fb 26 4b cd da 86  |.....t. ...&K...|\n+000000b0  ad 35 0a ff 33 2f 49 59  47 f0 bd ac cf 77 b3 2e  |.5..3/IYG....w..|\n+000000c0  0f 20 91 6b ed                                    |. .k.|"}, {"sha": "6350fe15dd1a66c8190ea96dcf27ad234b247bdb", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-IssueTicket", "status": "added", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicket", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicket", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-IssueTicket?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,87 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 61 01 00 00  5d 03 03 52 ac 77 f8 de  |....a...]..R.w..|\n+00000010  80 6f ff 1d 84 ca 82 41  2c 64 aa 9f a8 d3 85 c0  |.o.....A,d......|\n+00000020  11 58 e0 72 b1 e7 98 03  00 cc 89 00 00 04 00 05  |.X.r............|\n+00000030  00 ff 02 01 00 00 2f 00  23 00 00 00 0d 00 22 00  |....../.#.....\".|\n+00000040  20 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04  | ...............|\n+00000050  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 01  |................|\n+00000060  01 00 0f 00 01 01                                 |......|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 30 02 00 00  2c 03 03 00 00 00 00 00  |....0...,.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 00  |................|\n+00000030  04 00 23 00 00 16 03 03  02 be 0b 00 02 ba 00 02  |..#.............|\n+00000040  b7 00 02 b4 30 82 02 b0  30 82 02 19 a0 03 02 01  |....0...0.......|\n+00000050  02 02 09 00 85 b0 bb a4  8a 7f b8 ca 30 0d 06 09  |............0...|\n+00000060  2a 86 48 86 f7 0d 01 01  05 05 00 30 45 31 0b 30  |*.H........0E1.0|\n+00000070  09 06 03 55 04 06 13 02  41 55 31 13 30 11 06 03  |...U....AU1.0...|\n+00000080  55 04 08 13 0a 53 6f 6d  65 2d 53 74 61 74 65 31  |U....Some-State1|\n+00000090  21 30 1f 06 03 55 04 0a  13 18 49 6e 74 65 72 6e  |!0...U....Intern|\n+000000a0  65 74 20 57 69 64 67 69  74 73 20 50 74 79 20 4c  |et Widgits Pty L|\n+000000b0  74 64 30 1e 17 0d 31 30  30 34 32 34 30 39 30 39  |td0...1004240909|\n+000000c0  33 38 5a 17 0d 31 31 30  34 32 34 30 39 30 39 33  |38Z..11042409093|\n+000000d0  38 5a 30 45 31 0b 30 09  06 03 55 04 06 13 02 41  |8Z0E1.0...U....A|\n+000000e0  55 31 13 30 11 06 03 55  04 08 13 0a 53 6f 6d 65  |U1.0...U....Some|\n+000000f0  2d 53 74 61 74 65 31 21  30 1f 06 03 55 04 0a 13  |-State1!0...U...|\n+00000100  18 49 6e 74 65 72 6e 65  74 20 57 69 64 67 69 74  |.Internet Widgit|\n+00000110  73 20 50 74 79 20 4c 74  64 30 81 9f 30 0d 06 09  |s Pty Ltd0..0...|\n+00000120  2a 86 48 86 f7 0d 01 01  01 05 00 03 81 8d 00 30  |*.H............0|\n+00000130  81 89 02 81 81 00 bb 79  d6 f5 17 b5 e5 bf 46 10  |.......y......F.|\n+00000140  d0 dc 69 be e6 2b 07 43  5a d0 03 2d 8a 7a 43 85  |..i..+.CZ..-.zC.|\n+00000150  b7 14 52 e7 a5 65 4c 2c  78 b8 23 8c b5 b4 82 e5  |..R..eL,x.#.....|\n+00000160  de 1f 95 3b 7e 62 a5 2c  a5 33 d6 fe 12 5c 7a 56  |...;~b.,.3...\\zV|\n+00000170  fc f5 06 bf fa 58 7b 26  3f b5 cd 04 d3 d0 c9 21  |.....X{&?......!|\n+00000180  96 4a c7 f4 54 9f 5a bf  ef 42 71 00 fe 18 99 07  |.J..T.Z..Bq.....|\n+00000190  7f 7e 88 7d 7d f1 04 39  c4 a2 2e db 51 c9 7c e3  |.~.}}..9....Q.|.|\n+000001a0  c0 4c 3b 32 66 01 cf af  b1 1d b8 71 9a 1d db db  |.L;2f......q....|\n+000001b0  89 6b ae da 2d 79 02 03  01 00 01 a3 81 a7 30 81  |.k..-y........0.|\n+000001c0  a4 30 1d 06 03 55 1d 0e  04 16 04 14 b1 ad e2 85  |.0...U..........|\n+000001d0  5a cf cb 28 db 69 ce 23  69 de d3 26 8e 18 88 39  |Z..(.i.#i..&...9|\n+000001e0  30 75 06 03 55 1d 23 04  6e 30 6c 80 14 b1 ad e2  |0u..U.#.n0l.....|\n+000001f0  85 5a cf cb 28 db 69 ce  23 69 de d3 26 8e 18 88  |.Z..(.i.#i..&...|\n+00000200  39 a1 49 a4 47 30 45 31  0b 30 09 06 03 55 04 06  |9.I.G0E1.0...U..|\n+00000210  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000220  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000230  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+00000240  67 69 74 73 20 50 74 79  20 4c 74 64 82 09 00 85  |gits Pty Ltd....|\n+00000250  b0 bb a4 8a 7f b8 ca 30  0c 06 03 55 1d 13 04 05  |.......0...U....|\n+00000260  30 03 01 01 ff 30 0d 06  09 2a 86 48 86 f7 0d 01  |0....0...*.H....|\n+00000270  01 05 05 00 03 81 81 00  08 6c 45 24 c7 6b b1 59  |.........lE$.k.Y|\n+00000280  ab 0c 52 cc f2 b0 14 d7  87 9d 7a 64 75 b5 5a 95  |..R.......zdu.Z.|\n+00000290  66 e4 c5 2b 8e ae 12 66  1f eb 4f 38 b3 6e 60 d3  |f..+...f..O8.n`.|\n+000002a0  92 fd f7 41 08 b5 25 13  b1 18 7a 24 fb 30 1d ba  |...A..%...z$.0..|\n+000002b0  ed 98 b9 17 ec e7 d7 31  59 db 95 d3 1d 78 ea 50  |.......1Y....x.P|\n+000002c0  56 5c d5 82 5a 2d 5a 5f  33 c4 b6 d8 c9 75 90 96  |V\\..Z-Z_3....u..|\n+000002d0  8c 0f 52 98 b5 cd 98 1f  89 20 5f f2 a0 1c a3 1b  |..R...... _.....|\n+000002e0  96 94 dd a9 fd 57 e9 70  e8 26 6d 71 99 9b 26 6e  |.....W.p.&mq..&n|\n+000002f0  38 50 29 6c 90 a7 bd d9  16 03 03 00 04 0e 00 00  |8P)l............|\n+00000300  00                                                |.|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 86 10 00 00  82 00 80 01 0a 69 54 c5  |.............iT.|\n+00000010  b8 a7 ab 91 53 42 ff c9  2b 27 49 12 df 7d 4d 65  |....SB..+'I..}Me|\n+00000020  d1 5a 36 a0 47 ad f6 42  59 36 99 d0 d6 92 9e 16  |.Z6.G..BY6......|\n+00000030  9d 8c 0c ad ee f9 7b b1  96 91 01 1e b1 b5 04 a9  |......{.........|\n+00000040  0d fe 0b 88 b8 25 4f 70  f8 51 7e 6f c9 cd 7a 60  |.....%Op.Q~o..z`|\n+00000050  2c 58 b4 50 36 28 01 e8  71 86 08 7e 75 b3 76 31  |,X.P6(..q..~u.v1|\n+00000060  69 50 3a bb 21 95 f8 75  64 7f 0b 78 29 da 82 6b  |iP:.!..ud..x)..k|\n+00000070  e1 b9 cd ca 2c f0 57 f9  e3 d0 09 df fd 51 bc fa  |....,.W......Q..|\n+00000080  ef f1 68 07 4b 21 6e 52  7a 5f dc 14 03 03 00 01  |..h.K!nRz_......|\n+00000090  01 16 03 03 00 24 ca a5  ab ab 2f 12 1e a8 3c 33  |.....$..../...<3|\n+000000a0  24 e8 ef c9 b2 bb 58 61  c0 eb 97 66 fb e0 72 4a  |$.....Xa...f..rJ|\n+000000b0  82 9e e7 d1 0f fa be aa  d0 d3                    |..........|\n+>>> Flow 4 (server to client)\n+00000000  16 03 03 00 72 04 00 00  6e 00 00 00 00 00 68 00  |....r...n.....h.|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 65  |...............e|\n+00000020  ea 4b d1 ef ba 11 a0 88  48 34 0d 3b 22 38 1e 62  |.K......H4.;\"8.b|\n+00000030  c5 0a 33 b3 f0 65 ff fa  c4 f3 a8 2d 24 75 55 e4  |..3..e.....-$uU.|\n+00000040  47 cc d2 6b 8d 26 c6 d1  10 cc a2 48 29 c0 a1 a5  |G..k.&.....H)...|\n+00000050  52 66 dc ec 0b 59 23 02  5b 66 c3 af 88 27 f0 65  |Rf...Y#.[f...'.e|\n+00000060  c0 72 de 1a db cf 9b 5f  e7 fe e8 2d 27 6f 67 fb  |.r....._...-'og.|\n+00000070  91 a1 46 70 b1 ce 29 14  03 03 00 01 01 16 03 03  |..Fp..).........|\n+00000080  00 24 de 3d 06 39 fa fe  ad 47 50 1e 3d 38 ff 1d  |.$.=.9...GP.=8..|\n+00000090  15 7f 11 4a 90 52 de 7d  0b d3 8b f4 f8 60 a9 78  |...J.R.}.....`.x|\n+000000a0  6a db e2 a7 5b b7 17 03  03 00 21 66 6f 29 59 68  |j...[.....!fo)Yh|\n+000000b0  e0 64 a1 87 c8 f2 63 86  c6 5c c8 dc 05 de 6f d2  |.d....c..\\....o.|\n+000000c0  db 53 72 f1 ae 22 61 4e  a1 b8 c9 25 15 03 03 00  |.Sr..\"aN...%....|\n+000000d0  16 70 ad 3d dc 66 ab 57  2e 75 ab 1f 07 9e 70 77  |.p.=.f.W.u....pw|\n+000000e0  c2 2b 88 05 34 cf da                              |.+..4..|"}, {"sha": "fe0a0bd3f0af1bc437c8c4f6c75ba1301e07fa58", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-3DES", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-3DES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-3DES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-3DES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,82 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 94  |....]...Y..R.w..|\n+00000010  1b 92 d4 0b 16 00 df 59  3d 0e 9b 20 4a 9a 37 b5  |.......Y=.. J.7.|\n+00000020  8c 96 96 f9 a0 d4 4f b2  20 9e 22 00 00 04 00 0a  |......O. .\".....|\n+00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n+00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n+00000060  01 01                                             |..|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 0a 00 16  |................|\n+00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 03 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 86 10 00 00  82 00 80 49 e0 e1 1c 2f  |...........I.../|\n+00000010  7a 73 f4 a2 af 83 23 1d  4a 49 2b 6d d8 95 c7 48  |zs....#.JI+m...H|\n+00000020  ea 32 03 0d f8 72 06 73  92 90 67 10 d7 c5 12 b3  |.2...r.s..g.....|\n+00000030  52 56 1e e9 14 d5 1b 67  68 93 9f 9f 0c 53 bf 73  |RV.....gh....S.s|\n+00000040  80 09 0f 67 05 d6 de 59  4b 76 0e 8f 8d a2 6e 09  |...g...YKv....n.|\n+00000050  3d 86 a4 d8 f9 af a0 89  73 5a 1a 58 9b 80 a6 28  |=.......sZ.X...(|\n+00000060  4b 6b 79 af de 02 56 1e  2b d3 ec 3f 67 43 1e 45  |Kky...V.+..?gC.E|\n+00000070  cd d0 69 db 88 f3 6b d8  cd cd 89 82 7a cf 5a 76  |..i...k.....z.Zv|\n+00000080  5f 1e b3 ae 01 34 7c 2b  3c fa 82 14 03 03 00 01  |_....4|+<.......|\n+00000090  01 16 03 03 00 30 ce 2c  83 c5 74 8b ab 3c 6b 54  |.....0.,..t..<kT|\n+000000a0  73 7a d2 5e e6 db 7c c7  c1 c0 8e da 13 d3 a3 d8  |sz.^..|.........|\n+000000b0  de 53 be b9 0b 45 cf 40  35 fa 77 6a 95 83 4f 26  |.S...E.@5.wj..O&|\n+000000c0  74 33 5b a3 5d f8                                 |t3[.].|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 30 00 00 00 00 00  |..........0.....|\n+00000010  00 00 00 fa 71 b5 6e 06  4f ba 9e 8d 44 85 b1 58  |....q.n.O...D..X|\n+00000020  dc 6e 13 a7 f4 26 96 cd  9d 58 41 c3 d7 14 7c 20  |.n...&...XA...| |\n+00000030  0d 77 83 e0 8c 43 a7 74  8b 7d 60 17 03 03 00 30  |.w...C.t.}`....0|\n+00000040  00 00 00 00 00 00 00 00  55 f4 03 c0 00 95 bb 6d  |........U......m|\n+00000050  52 29 35 7b ba 5d d5 e4  4d 8b 2a 5a 21 25 af 43  |R)5{.]..M.*Z!%.C|\n+00000060  0d e5 ad 97 ba 70 4d b2  79 78 58 1d c4 d3 c9 8b  |.....pM.yxX.....|\n+00000070  15 03 03 00 20 00 00 00  00 00 00 00 00 d4 54 36  |.... .........T6|\n+00000080  41 07 5d e0 de 65 80 ad  b8 0f 61 22 a8 0f 87 2f  |A.]..e....a\".../|\n+00000090  59 91 0a de 60                                    |Y...`|"}, {"sha": "c19d37fa4eb5786c9df97e68ae27fa54d581f5b9", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-AES", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,86 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 f2  |....]...Y..R.w..|\n+00000010  28 d7 4f 30 1c 37 0e be  ff 22 60 a4 4a b4 14 11  |(.O0.7...\"`.J...|\n+00000020  47 2d 7b 91 55 d6 c3 58  51 c3 f1 00 00 04 00 2f  |G-{.U..XQ....../|\n+00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n+00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n+00000060  01 01                                             |..|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 16  |............./..|\n+00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 03 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 86 10 00 00  82 00 80 67 83 ea ad 9c  |...........g....|\n+00000010  e6 e0 e6 39 39 8a f4 1d  b0 da 2e a0 de 44 b1 92  |...99........D..|\n+00000020  2a ca 64 cb e5 d2 d4 40  f9 a6 ec 12 fc 00 97 8a  |*.d....@........|\n+00000030  9c bb b6 e3 55 06 93 af  3f 70 53 2a c8 93 fe 08  |....U...?pS*....|\n+00000040  1a bf 92 a9 64 71 36 55  f4 7b a3 08 59 05 8d 69  |....dq6U.{..Y..i|\n+00000050  e2 6d 1a d8 97 2e b9 f1  f4 16 63 6e c4 28 59 44  |.m........cn.(YD|\n+00000060  5b 53 84 11 2b f6 bd 41  21 9e cc 3e c3 9a 17 8e  |[S..+..A!..>....|\n+00000070  53 92 b7 cf 45 dc f3 0c  2d f2 dd 0b a2 6c 34 ab  |S...E...-....l4.|\n+00000080  05 e2 48 1a 83 60 dc 8e  f7 bc 3a 14 03 03 00 01  |..H..`....:.....|\n+00000090  01 16 03 03 00 40 c8 19  88 56 0b fd 75 d9 e9 7a  |.....@...V..u..z|\n+000000a0  38 04 37 e3 74 fc af 7b  b6 2b d8 93 da 25 ba 14  |8.7.t..{.+...%..|\n+000000b0  3b 5e ef 19 c5 45 fd cf  b4 f5 ce a5 ee 8a 9b cc  |;^...E..........|\n+000000c0  52 17 87 3c c7 9f 56 72  f3 e1 03 e4 db d5 24 6a  |R..<..Vr......$j|\n+000000d0  08 de 9b fd a5 2c                                 |.....,|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 c9 7d ec 45 ce  |............}.E.|\n+00000020  b9 e1 3b 11 02 44 56 cf  86 61 44 64 0c 00 5a 9e  |..;..DV..aDd..Z.|\n+00000030  f0 37 cc 56 6a 13 f7 81  67 f3 78 a2 53 a6 5c b5  |.7.Vj...g.x.S.\\.|\n+00000040  0f cc 5b f0 c3 6c 2d cb  48 e1 e4 17 03 03 00 40  |..[..l-.H......@|\n+00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000060  6d 27 67 8e 44 ed c2 6b  e7 a8 f5 ab c9 5d a5 a6  |m'g.D..k.....]..|\n+00000070  da f0 ae 72 2c 95 75 00  fb e3 94 6e b7 8f e7 44  |...r,.u....n...D|\n+00000080  69 37 8c aa 7f 8d 63 5b  03 1d 8e 64 1a 75 72 cb  |i7....c[...d.ur.|\n+00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+000000a0  00 00 00 00 00 5e f4 e5  ae 1f f9 37 b7 14 26 cc  |.....^.....7..&.|\n+000000b0  b0 07 f4 61 60 03 2d e3  ff f2 85 bf 1c 74 74 e2  |...a`.-......tt.|\n+000000c0  db 0b e3 5f 62                                    |..._b|"}, {"sha": "54ad7474120b100b23be27b6c1db35c8542916c6", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-AES-GCM", "status": "added", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES-GCM", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES-GCM", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-AES-GCM?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,102 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 9d 01 00 00  99 03 03 52 ac 77 f8 7a  |...........R.w.z|\n+00000010  f5 85 72 ff ef a8 58 b7  be 86 38 82 c7 dd 79 f7  |..r...X...8...y.|\n+00000020  78 20 05 9d cf 1b 44 71  92 ab b8 00 00 04 c0 2f  |x ....Dq......./|\n+00000030  00 ff 02 01 00 00 6b 00  0b 00 04 03 00 01 02 00  |......k.........|\n+00000040  0a 00 34 00 32 00 0e 00  0d 00 19 00 0b 00 0c 00  |..4.2...........|\n+00000050  18 00 09 00 0a 00 16 00  17 00 08 00 06 00 07 00  |................|\n+00000060  14 00 15 00 04 00 05 00  12 00 13 00 01 00 02 00  |................|\n+00000070  03 00 0f 00 10 00 11 00  0d 00 22 00 20 06 01 06  |..........\". ...|\n+00000080  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000090  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n+000000a0  01 01                                             |..|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 c0 2f 00 16  |............./..|\n+00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 03 01 11 0c  00 01 0d 03 00 19 85 04  |................|\n+00000300  01 39 dc ee 44 17 5e db  d7 27 af b6 56 d9 b4 43  |.9..D.^..'..V..C|\n+00000310  5a 99 cf aa 31 37 0c 6f  3a a0 f8 53 c4 74 d1 91  |Z...17.o:..S.t..|\n+00000320  0a 46 f5 38 3b 5c 09 d8  97 dc 4b aa 70 26 48 f2  |.F.8;\\....K.p&H.|\n+00000330  d6 0b 31 c9 f8 d4 98 43  e1 6c d5 c7 b2 8e 0b 01  |..1....C.l......|\n+00000340  e6 b6 00 28 80 7b fc 96  8f 0d a2 4f b0 79 af dc  |...(.{.....O.y..|\n+00000350  61 28 63 33 78 f6 31 39  fd 8a f4 15 18 11 fe db  |a(c3x.19........|\n+00000360  d5 07 da 2c ed 49 a0 23  bf d0 3a 38 1d 54 ae 1c  |...,.I.#..:8.T..|\n+00000370  7b ea 29 ee d0 38 c1 76  a7 7f 2a f4 ce 1e ac cc  |{.)..8.v..*.....|\n+00000380  94 79 90 33 04 01 00 80  11 d6 f6 f9 49 4c ad d6  |.y.3........IL..|\n+00000390  c6 50 3f 8d 28 d2 9b 32  8c c8 14 b4 75 22 81 8f  |.P?.(..2....u\"..|\n+000003a0  b9 dc 0b 5e 71 7a eb 15  1a 8e 50 fb 03 f0 42 de  |...^qz....P...B.|\n+000003b0  06 bb d7 28 c7 b3 c5 23  2d 29 11 01 5e 03 3b 2f  |...(...#-)..^.;/|\n+000003c0  3c e0 5c 26 b2 15 95 e3  30 35 1f 79 9b de a5 ee  |<.\\&....05.y....|\n+000003d0  01 35 14 22 c3 7f 0f 30  75 9d ec 94 bd 17 08 1a  |.5.\"...0u.......|\n+000003e0  96 b5 7a 16 39 58 ce 96  aa 90 06 19 1b d5 64 13  |..z.9X........d.|\n+000003f0  49 9f c6 84 e8 22 5c 5c  cc f9 90 75 75 ef 33 94  |I....\"\\\\...uu.3.|\n+00000400  6b 76 8a b7 c0 9a 34 aa  16 03 03 00 04 0e 00 00  |kv....4.........|\n+00000410  00                                                |.|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 8a 10 00 00  86 85 04 01 bf 6a c6 3e  |.............j.>|\n+00000010  39 bb 08 d0 2a 07 fd d9  9a 61 5d 0f ca e5 26 80  |9...*....a]...&.|\n+00000020  09 45 b9 34 2d e8 1b 8f  9c 6f b3 c0 2b a3 48 46  |.E.4-....o..+.HF|\n+00000030  ce a5 6c b9 16 0f 26 ca  65 00 11 e3 6d ff 18 89  |..l...&.e...m...|\n+00000040  5d 0d 4a 94 1b a5 c7 35  59 72 a8 2d 08 01 e2 5e  |].J....5Yr.-...^|\n+00000050  d8 12 2d f6 6c d2 0a b1  df d2 5a 13 5c 29 fb 59  |..-.l.....Z.\\).Y|\n+00000060  fc 2a 77 81 73 dd 86 4a  00 8c 61 a0 e4 b3 ae 6e  |.*w.s..J..a....n|\n+00000070  7a 59 bf a2 61 7d 10 ca  4b a0 b3 70 b0 0b 77 09  |zY..a}..K..p..w.|\n+00000080  6c 6c 3c b5 b0 65 4a 35  de c5 88 f0 17 b1 4a 14  |ll<..eJ5......J.|\n+00000090  03 03 00 01 01 16 03 03  00 28 4a d7 fe 68 74 b5  |.........(J..ht.|\n+000000a0  3d 9d 40 33 2a 96 4e 60  d6 d0 ae 2a c5 c8 51 f5  |=.@3*.N`...*..Q.|\n+000000b0  aa 54 9b b4 99 56 a4 fe  06 5b 94 6a be 9b aa fa  |.T...V...[.j....|\n+000000c0  15 83                                             |..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 28 00 00 00 00 00  |..........(.....|\n+00000010  00 00 00 dc 64 82 fd 0e  fc b5 a4 e0 7b 8d 62 69  |....d.......{.bi|\n+00000020  6e 03 35 a6 6b 0e 19 53  7e 87 e5 fe 7b 78 e6 27  |n.5.k..S~...{x.'|\n+00000030  fa 31 7d 17 03 03 00 25  00 00 00 00 00 00 00 01  |.1}....%........|\n+00000040  8e 5d 8d 1c a1 07 a4 ed  d1 e2 35 28 d3 8d 47 ec  |.]........5(..G.|\n+00000050  d2 67 31 c2 88 5c 23 f8  6b d1 bd a9 0b 15 03 03  |.g1..\\#.k.......|\n+00000060  00 1a 00 00 00 00 00 00  00 02 3e 14 30 85 89 e0  |..........>.0...|\n+00000070  19 3c 0a dc 80 3f c1 28  65 12 f7 38              |.<...?.(e..8|"}, {"sha": "d5cf4e4232b47548d619b3061f19d2579308431f", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-RSA-RC4", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-RC4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-RC4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-RSA-RC4?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,78 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 5d 01 00 00  59 03 03 52 ac 77 f8 36  |....]...Y..R.w.6|\n+00000010  6c 14 4d a5 96 7f 9f 63  56 81 2f ef 2b e8 4c 9d  |l.M....cV./.+.L.|\n+00000020  04 92 ba 6c 99 29 47 f3  b5 22 46 00 00 04 00 05  |...l.)G..\"F.....|\n+00000030  00 ff 02 01 00 00 2b 00  0d 00 22 00 20 06 01 06  |......+...\". ...|\n+00000040  02 06 03 05 01 05 02 05  03 04 01 04 02 04 03 03  |................|\n+00000050  01 03 02 03 03 02 01 02  02 02 03 01 01 00 0f 00  |................|\n+00000060  01 01                                             |..|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 05 00 16  |................|\n+00000030  03 03 02 be 0b 00 02 ba  00 02 b7 00 02 b4 30 82  |..............0.|\n+00000040  02 b0 30 82 02 19 a0 03  02 01 02 02 09 00 85 b0  |..0.............|\n+00000050  bb a4 8a 7f b8 ca 30 0d  06 09 2a 86 48 86 f7 0d  |......0...*.H...|\n+00000060  01 01 05 05 00 30 45 31  0b 30 09 06 03 55 04 06  |.....0E1.0...U..|\n+00000070  13 02 41 55 31 13 30 11  06 03 55 04 08 13 0a 53  |..AU1.0...U....S|\n+00000080  6f 6d 65 2d 53 74 61 74  65 31 21 30 1f 06 03 55  |ome-State1!0...U|\n+00000090  04 0a 13 18 49 6e 74 65  72 6e 65 74 20 57 69 64  |....Internet Wid|\n+000000a0  67 69 74 73 20 50 74 79  20 4c 74 64 30 1e 17 0d  |gits Pty Ltd0...|\n+000000b0  31 30 30 34 32 34 30 39  30 39 33 38 5a 17 0d 31  |100424090938Z..1|\n+000000c0  31 30 34 32 34 30 39 30  39 33 38 5a 30 45 31 0b  |10424090938Z0E1.|\n+000000d0  30 09 06 03 55 04 06 13  02 41 55 31 13 30 11 06  |0...U....AU1.0..|\n+000000e0  03 55 04 08 13 0a 53 6f  6d 65 2d 53 74 61 74 65  |.U....Some-State|\n+000000f0  31 21 30 1f 06 03 55 04  0a 13 18 49 6e 74 65 72  |1!0...U....Inter|\n+00000100  6e 65 74 20 57 69 64 67  69 74 73 20 50 74 79 20  |net Widgits Pty |\n+00000110  4c 74 64 30 81 9f 30 0d  06 09 2a 86 48 86 f7 0d  |Ltd0..0...*.H...|\n+00000120  01 01 01 05 00 03 81 8d  00 30 81 89 02 81 81 00  |.........0......|\n+00000130  bb 79 d6 f5 17 b5 e5 bf  46 10 d0 dc 69 be e6 2b  |.y......F...i..+|\n+00000140  07 43 5a d0 03 2d 8a 7a  43 85 b7 14 52 e7 a5 65  |.CZ..-.zC...R..e|\n+00000150  4c 2c 78 b8 23 8c b5 b4  82 e5 de 1f 95 3b 7e 62  |L,x.#........;~b|\n+00000160  a5 2c a5 33 d6 fe 12 5c  7a 56 fc f5 06 bf fa 58  |.,.3...\\zV.....X|\n+00000170  7b 26 3f b5 cd 04 d3 d0  c9 21 96 4a c7 f4 54 9f  |{&?......!.J..T.|\n+00000180  5a bf ef 42 71 00 fe 18  99 07 7f 7e 88 7d 7d f1  |Z..Bq......~.}}.|\n+00000190  04 39 c4 a2 2e db 51 c9  7c e3 c0 4c 3b 32 66 01  |.9....Q.|..L;2f.|\n+000001a0  cf af b1 1d b8 71 9a 1d  db db 89 6b ae da 2d 79  |.....q.....k..-y|\n+000001b0  02 03 01 00 01 a3 81 a7  30 81 a4 30 1d 06 03 55  |........0..0...U|\n+000001c0  1d 0e 04 16 04 14 b1 ad  e2 85 5a cf cb 28 db 69  |..........Z..(.i|\n+000001d0  ce 23 69 de d3 26 8e 18  88 39 30 75 06 03 55 1d  |.#i..&...90u..U.|\n+000001e0  23 04 6e 30 6c 80 14 b1  ad e2 85 5a cf cb 28 db  |#.n0l......Z..(.|\n+000001f0  69 ce 23 69 de d3 26 8e  18 88 39 a1 49 a4 47 30  |i.#i..&...9.I.G0|\n+00000200  45 31 0b 30 09 06 03 55  04 06 13 02 41 55 31 13  |E1.0...U....AU1.|\n+00000210  30 11 06 03 55 04 08 13  0a 53 6f 6d 65 2d 53 74  |0...U....Some-St|\n+00000220  61 74 65 31 21 30 1f 06  03 55 04 0a 13 18 49 6e  |ate1!0...U....In|\n+00000230  74 65 72 6e 65 74 20 57  69 64 67 69 74 73 20 50  |ternet Widgits P|\n+00000240  74 79 20 4c 74 64 82 09  00 85 b0 bb a4 8a 7f b8  |ty Ltd..........|\n+00000250  ca 30 0c 06 03 55 1d 13  04 05 30 03 01 01 ff 30  |.0...U....0....0|\n+00000260  0d 06 09 2a 86 48 86 f7  0d 01 01 05 05 00 03 81  |...*.H..........|\n+00000270  81 00 08 6c 45 24 c7 6b  b1 59 ab 0c 52 cc f2 b0  |...lE$.k.Y..R...|\n+00000280  14 d7 87 9d 7a 64 75 b5  5a 95 66 e4 c5 2b 8e ae  |....zdu.Z.f..+..|\n+00000290  12 66 1f eb 4f 38 b3 6e  60 d3 92 fd f7 41 08 b5  |.f..O8.n`....A..|\n+000002a0  25 13 b1 18 7a 24 fb 30  1d ba ed 98 b9 17 ec e7  |%...z$.0........|\n+000002b0  d7 31 59 db 95 d3 1d 78  ea 50 56 5c d5 82 5a 2d  |.1Y....x.PV\\..Z-|\n+000002c0  5a 5f 33 c4 b6 d8 c9 75  90 96 8c 0f 52 98 b5 cd  |Z_3....u....R...|\n+000002d0  98 1f 89 20 5f f2 a0 1c  a3 1b 96 94 dd a9 fd 57  |... _..........W|\n+000002e0  e9 70 e8 26 6d 71 99 9b  26 6e 38 50 29 6c 90 a7  |.p.&mq..&n8P)l..|\n+000002f0  bd d9 16 03 03 00 04 0e  00 00 00                 |...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 86 10 00 00  82 00 80 91 75 8a cc 25  |............u..%|\n+00000010  6e 5e c5 ce 1b a8 1d fc  ed 80 08 1a e2 fb 04 12  |n^..............|\n+00000020  00 fb 52 d2 92 b0 0b 42  8a f2 66 11 fc 31 91 1c  |..R....B..f..1..|\n+00000030  28 5a 9a 62 12 84 f8 fb  8b 08 18 03 58 ec 5a 5c  |(Z.b........X.Z\\|\n+00000040  aa 71 69 e5 c2 a9 5d c3  06 d4 cb e5 58 01 be 6e  |.qi...].....X..n|\n+00000050  41 22 02 b2 71 52 d5 67  a2 fc 7c f2 f6 38 67 a3  |A\"..qR.g..|..8g.|\n+00000060  23 e0 21 7f b8 59 2c ca  7b 3f 8a ee 47 b2 ed 51  |#.!..Y,.{?..G..Q|\n+00000070  63 cd 04 8e 19 ac ca 97  13 fb c0 b8 30 82 58 22  |c...........0.X\"|\n+00000080  a8 30 31 7a ed 64 8e fc  10 53 f1 14 03 03 00 01  |.01z.d...S......|\n+00000090  01 16 03 03 00 24 7c 40  76 86 a1 2d 7a 0d 6a e0  |.....$|@v..-z.j.|\n+000000a0  be 52 1e a4 5c 8a 8a 41  b7 65 b8 98 09 fd 84 28  |.R..\\..A.e.....(|\n+000000b0  31 2c b2 5f 25 dc fd 72  df 26                    |1,._%..r.&|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 6c 98 e2 1b ad  |..........$l....|\n+00000010  22 8b 5a 5a b7 95 5c be  2f 29 97 7f 05 54 59 6f  |\".ZZ..\\./)...TYo|\n+00000020  c6 91 98 ed 7a 81 eb 7f  5c 34 b8 f8 6d a4 da 17  |....z...\\4..m...|\n+00000030  03 03 00 21 4f d9 55 62  2a 4e fa 4e 28 8f 92 e2  |...!O.Ub*N.N(...|\n+00000040  22 50 14 21 ca 48 ba 71  2c 36 77 b6 92 eb 67 e2  |\"P.!.H.q,6w...g.|\n+00000050  ba 31 f4 4c 00 15 03 03  00 16 3f a2 64 b0 a9 ed  |.1.L......?.d...|\n+00000060  cf 5e b3 25 07 97 d9 1b  a5 04 e7 ff 8a 08 4f ff  |.^.%..........O.|"}, {"sha": "944289029d3207e63d93b503f460e711477c7021", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-Resume", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-Resume", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-Resume", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-Resume?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,35 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 e9 01 00 00  e5 03 03 52 ac 77 f8 65  |...........R.w.e|\n+00000010  60 65 1c ac 85 b1 4c d1  e0 5f 02 b0 22 80 c9 98  |`e....L.._..\"...|\n+00000020  af d9 43 87 0a e8 26 a3  d9 59 cc 20 76 ef 21 5d  |..C...&..Y. v.!]|\n+00000030  53 6c 8b 2e 11 a0 43 a8  af 74 8a 58 40 a5 95 ee  |Sl....C..t.X@...|\n+00000040  6d a9 ff e8 e4 d8 ba d2  88 ca 7f 0a 00 04 00 05  |m...............|\n+00000050  00 ff 02 01 00 00 97 00  23 00 68 00 00 00 00 00  |........#.h.....|\n+00000060  00 00 00 00 00 00 00 00  00 00 00 65 ea 4b d1 ef  |...........e.K..|\n+00000070  ba 11 a0 88 48 34 0d 3b  22 38 1e 62 c5 0a 33 b3  |....H4.;\"8.b..3.|\n+00000080  f0 65 ff fa c4 f3 a8 2d  24 75 55 e4 47 cc d2 6b  |.e.....-$uU.G..k|\n+00000090  8d 26 c6 d1 10 cc a2 48  29 c0 a1 a5 52 66 dc ec  |.&.....H)...Rf..|\n+000000a0  0b 59 23 02 5b 66 c3 af  88 27 f0 65 c0 72 de 1a  |.Y#.[f...'.e.r..|\n+000000b0  db cf 9b 5f e7 fe e8 2d  27 6f 67 fb 91 a1 46 70  |..._...-'og...Fp|\n+000000c0  b1 ce 29 00 0d 00 22 00  20 06 01 06 02 06 03 05  |..)...\". .......|\n+000000d0  01 05 02 05 03 04 01 04  02 04 03 03 01 03 02 03  |................|\n+000000e0  03 02 01 02 02 02 03 01  01 00 0f 00 01 01        |..............|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 4a 02 00 00  46 03 03 00 00 00 00 00  |....J...F.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 20 76 ef 21 5d  |........... v.!]|\n+00000030  53 6c 8b 2e 11 a0 43 a8  af 74 8a 58 40 a5 95 ee  |Sl....C..t.X@...|\n+00000040  6d a9 ff e8 e4 d8 ba d2  88 ca 7f 0a 00 05 00 14  |m...............|\n+00000050  03 03 00 01 01 16 03 03  00 24 37 d8 ed 9b cc 6d  |.........$7....m|\n+00000060  5f ce c0 40 68 4b 1f 45  ff 94 3a 98 ec c7 69 1c  |_..@hK.E..:...i.|\n+00000070  26 50 9e 3c 54 e6 da b6  5c 2e 48 66 1d 65        |&P.<T...\\.Hf.e|\n+>>> Flow 3 (client to server)\n+00000000  14 03 03 00 01 01 16 03  03 00 24 de 72 a3 15 54  |..........$.r..T|\n+00000010  7e 6d a0 ce 5c 38 5c f3  6f 49 00 ba fb c0 c2 cc  |~m..\\8\\.oI......|\n+00000020  6f 29 00 39 f9 bf 77 07  57 f1 e4 cf 6e 0c a3     |o).9..w.W...n..|\n+>>> Flow 4 (server to client)\n+00000000  17 03 03 00 21 b0 e7 1c  af 33 cd 5e ad 24 cf a4  |....!....3.^.$..|\n+00000010  51 99 1a f6 65 1e f3 28  ec 83 93 25 3d 8f f9 57  |Q...e..(...%=..W|\n+00000020  cb ec 1f 4a 47 77 15 03  03 00 16 2b 87 cb 08 f7  |...JGw.....+....|\n+00000030  51 08 3b c9 73 f4 1f 22  ac 8c 7c 1a 2e 43 84 d7  |Q.;.s..\"..|..C..|\n+00000040  ef                                                |.|"}, {"sha": "667adb3aaa221c8db2cf764a3f87ab57466b32a4", "filename": "libgo/go/crypto/tls/testdata/Server-TLSv12-SNI", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-SNI", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-SNI", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Ftls%2Ftestdata%2FServer-TLSv12-SNI?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,75 @@\n+>>> Flow 1 (client to server)\n+00000000  16 03 01 00 71 01 00 00  6d 03 03 52 ac 77 f8 8f  |....q...m..R.w..|\n+00000010  99 4f 1f b2 b1 8e c1 fe  52 04 d7 2f 45 db 34 55  |.O......R../E.4U|\n+00000020  ca d1 ae 94 68 05 5d ae  7f 34 ae 00 00 04 00 2f  |....h.]..4...../|\n+00000030  00 ff 02 01 00 00 3f 00  00 00 10 00 0e 00 00 0b  |......?.........|\n+00000040  73 6e 69 74 65 73 74 2e  63 6f 6d 00 0d 00 22 00  |snitest.com...\".|\n+00000050  20 06 01 06 02 06 03 05  01 05 02 05 03 04 01 04  | ...............|\n+00000060  02 04 03 03 01 03 02 03  03 02 01 02 02 02 03 01  |................|\n+00000070  01 00 0f 00 01 01                                 |......|\n+>>> Flow 2 (server to client)\n+00000000  16 03 03 00 2a 02 00 00  26 03 03 00 00 00 00 00  |....*...&.......|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000020  00 00 00 00 00 00 00 00  00 00 00 00 00 2f 00 16  |............./..|\n+00000030  03 03 02 00 0b 00 01 fc  00 01 f9 00 01 f6 30 82  |..............0.|\n+00000040  01 f2 30 82 01 5d a0 03  02 01 02 02 01 00 30 0b  |..0..]........0.|\n+00000050  06 09 2a 86 48 86 f7 0d  01 01 05 30 28 31 10 30  |..*.H......0(1.0|\n+00000060  0e 06 03 55 04 0a 13 07  41 63 6d 65 20 43 6f 31  |...U....Acme Co1|\n+00000070  14 30 12 06 03 55 04 03  13 0b 73 6e 69 74 65 73  |.0...U....snites|\n+00000080  74 2e 63 6f 6d 30 1e 17  0d 31 32 30 34 31 31 31  |t.com0...1204111|\n+00000090  37 34 30 33 35 5a 17 0d  31 33 30 34 31 31 31 37  |74035Z..13041117|\n+000000a0  34 35 33 35 5a 30 28 31  10 30 0e 06 03 55 04 0a  |4535Z0(1.0...U..|\n+000000b0  13 07 41 63 6d 65 20 43  6f 31 14 30 12 06 03 55  |..Acme Co1.0...U|\n+000000c0  04 03 13 0b 73 6e 69 74  65 73 74 2e 63 6f 6d 30  |....snitest.com0|\n+000000d0  81 9d 30 0b 06 09 2a 86  48 86 f7 0d 01 01 01 03  |..0...*.H.......|\n+000000e0  81 8d 00 30 81 89 02 81  81 00 bb 79 d6 f5 17 b5  |...0.......y....|\n+000000f0  e5 bf 46 10 d0 dc 69 be  e6 2b 07 43 5a d0 03 2d  |..F...i..+.CZ..-|\n+00000100  8a 7a 43 85 b7 14 52 e7  a5 65 4c 2c 78 b8 23 8c  |.zC...R..eL,x.#.|\n+00000110  b5 b4 82 e5 de 1f 95 3b  7e 62 a5 2c a5 33 d6 fe  |.......;~b.,.3..|\n+00000120  12 5c 7a 56 fc f5 06 bf  fa 58 7b 26 3f b5 cd 04  |.\\zV.....X{&?...|\n+00000130  d3 d0 c9 21 96 4a c7 f4  54 9f 5a bf ef 42 71 00  |...!.J..T.Z..Bq.|\n+00000140  fe 18 99 07 7f 7e 88 7d  7d f1 04 39 c4 a2 2e db  |.....~.}}..9....|\n+00000150  51 c9 7c e3 c0 4c 3b 32  66 01 cf af b1 1d b8 71  |Q.|..L;2f......q|\n+00000160  9a 1d db db 89 6b ae da  2d 79 02 03 01 00 01 a3  |.....k..-y......|\n+00000170  32 30 30 30 0e 06 03 55  1d 0f 01 01 ff 04 04 03  |2000...U........|\n+00000180  02 00 a0 30 0d 06 03 55  1d 0e 04 06 04 04 01 02  |...0...U........|\n+00000190  03 04 30 0f 06 03 55 1d  23 04 08 30 06 80 04 01  |..0...U.#..0....|\n+000001a0  02 03 04 30 0b 06 09 2a  86 48 86 f7 0d 01 01 05  |...0...*.H......|\n+000001b0  03 81 81 00 89 c6 45 5f  1c 1f 5e f8 eb 1a b1 74  |......E_..^....t|\n+000001c0  ee 24 39 05 9f 5c 42 59  bb 1a 8d 86 cd b1 d0 56  |.$9..\\BY.......V|\n+000001d0  f5 6a 71 7d a4 0e 95 ab  90 f5 9e 8d ea f6 27 c1  |.jq}..........'.|\n+000001e0  57 99 50 94 db 08 02 26  6e b3 4f c6 84 2d ea 8a  |W.P....&n.O..-..|\n+000001f0  4b 68 d9 c1 38 91 03 ab  84 fb 9e 1f 85 d9 b5 d2  |Kh..8...........|\n+00000200  3f f2 31 2c 86 70 fb b5  40 14 82 45 a4 eb af e2  |?.1,.p..@..E....|\n+00000210  64 d9 0c 8a 4c f4 f8 5b  0f ac 12 ac 2f c4 a3 15  |d...L..[..../...|\n+00000220  4b ad 52 46 28 68 af 96  c6 2c 65 25 d6 52 b6 e3  |K.RF(h...,e%.R..|\n+00000230  18 45 bd cc 16 03 03 00  04 0e 00 00 00           |.E...........|\n+>>> Flow 3 (client to server)\n+00000000  16 03 03 00 86 10 00 00  82 00 80 53 d9 f6 6b 66  |...........S..kf|\n+00000010  c8 ef e0 90 72 b4 57 ab  a0 21 1f 2b d1 da 50 6d  |....r.W..!.+..Pm|\n+00000020  fc 0b bb 45 1b 5c f3 44  d3 a3 45 7f 2f ef 5c 46  |...E.\\.D..E./.\\F|\n+00000030  d5 39 eb 28 1d bb 25 af  34 f3 f8 d3 0d c3 6f a2  |.9.(..%.4.....o.|\n+00000040  c9 fc 2c 87 9e 9e 1e 73  6f 9f f2 bc 9d 03 c3 80  |..,....so.......|\n+00000050  fa c5 52 70 5a 5e 64 89  bb 90 ba c3 e5 93 bc 65  |..RpZ^d........e|\n+00000060  47 f6 7e f2 9c 0e 4c 8d  a7 b9 d0 51 09 b3 51 53  |G.~...L....Q..QS|\n+00000070  39 12 4e f4 ed a0 39 27  d5 5f a3 cc f2 d3 05 73  |9.N...9'._.....s|\n+00000080  49 d8 09 c3 1d 03 c8 1f  13 12 75 14 03 03 00 01  |I.........u.....|\n+00000090  01 16 03 03 00 40 c4 16  cc fe ae db 1c dd eb 8e  |.....@..........|\n+000000a0  97 ca ce 6d 88 de 64 81  91 4f 92 fe 77 50 03 77  |...m..d..O..wP.w|\n+000000b0  86 31 4c b7 e7 ed 10 7a  61 b3 b0 06 7b 01 70 e4  |.1L....za...{.p.|\n+000000c0  7f 04 37 f1 24 14 4f b3  32 0c 04 0d e0 90 aa ec  |..7.$.O.2.......|\n+000000d0  47 8f 2d 3e cf c8                                 |G.->..|\n+>>> Flow 4 (server to client)\n+00000000  14 03 03 00 01 01 16 03  03 00 40 00 00 00 00 00  |..........@.....|\n+00000010  00 00 00 00 00 00 00 00  00 00 00 f7 24 2c f6 09  |............$,..|\n+00000020  46 72 c8 41 83 e4 1b fe  6b 6e 5d b1 a0 40 07 9f  |Fr.A....kn]..@..|\n+00000030  f5 45 a2 bc 12 1c cd 0c  da ac 13 c0 3d 72 fb 02  |.E..........=r..|\n+00000040  70 d6 cd 6e 5b 43 16 c4  c4 cd 6b 17 03 03 00 40  |p..n[C....k....@|\n+00000050  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  |................|\n+00000060  73 ec e3 ba 42 c5 3f 17  9a 04 98 78 23 3e 8a d2  |s...B.?....x#>..|\n+00000070  5c b2 6a 0b 4a 1d 6a db  4d 98 89 ba 99 36 51 bc  |\\.j.J.j.M....6Q.|\n+00000080  7b 12 83 28 62 c7 26 dc  04 d4 79 49 f3 08 2a 1d  |{..(b.&...yI..*.|\n+00000090  15 03 03 00 30 00 00 00  00 00 00 00 00 00 00 00  |....0...........|\n+000000a0  00 00 00 00 00 72 b0 8e  3b 7d 3f 74 fd 65 7a 32  |.....r..;}?t.ez2|\n+000000b0  6a 3b 7f e9 75 84 a9 87  81 2f f6 08 ea 42 31 55  |j;..u..../...B1U|\n+000000c0  78 82 f0 cc 89                                    |x....|"}, {"sha": "bdcc2c1708ae113563266c5812a8466e11576156", "filename": "libgo/go/crypto/x509/root_cgo_darwin.go", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_cgo_darwin.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_cgo_darwin.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_cgo_darwin.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,79 @@\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build cgo\n+\n+package x509\n+\n+/*\n+#cgo CFLAGS: -mmacosx-version-min=10.6 -D__MAC_OS_X_VERSION_MAX_ALLOWED=1060\n+#cgo LDFLAGS: -framework CoreFoundation -framework Security\n+\n+#include <CoreFoundation/CoreFoundation.h>\n+#include <Security/Security.h>\n+\n+// FetchPEMRoots fetches the system's list of trusted X.509 root certificates.\n+//\n+// On success it returns 0 and fills pemRoots with a CFDataRef that contains the extracted root\n+// certificates of the system. On failure, the function returns -1.\n+//\n+// Note: The CFDataRef returned in pemRoots must be released (using CFRelease) after\n+// we've consumed its content.\n+int FetchPEMRoots(CFDataRef *pemRoots) {\n+\tif (pemRoots == NULL) {\n+\t\treturn -1;\n+\t}\n+\n+\tCFArrayRef certs = NULL;\n+\tOSStatus err = SecTrustCopyAnchorCertificates(&certs);\n+\tif (err != noErr) {\n+\t\treturn -1;\n+\t}\n+\n+\tCFMutableDataRef combinedData = CFDataCreateMutable(kCFAllocatorDefault, 0);\n+\tint i, ncerts = CFArrayGetCount(certs);\n+\tfor (i = 0; i < ncerts; i++) {\n+\t\tCFDataRef data = NULL;\n+\t\tSecCertificateRef cert = (SecCertificateRef)CFArrayGetValueAtIndex(certs, i);\n+\t\tif (cert == NULL) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\t// Note: SecKeychainItemExport is deprecated as of 10.7 in favor of SecItemExport.\n+\t\t// Once we support weak imports via cgo we should prefer that, and fall back to this\n+\t\t// for older systems.\n+\t\terr = SecKeychainItemExport(cert, kSecFormatX509Cert, kSecItemPemArmour, NULL, &data);\n+\t\tif (err != noErr) {\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tif (data != NULL) {\n+\t\t\tCFDataAppendBytes(combinedData, CFDataGetBytePtr(data), CFDataGetLength(data));\n+\t\t\tCFRelease(data);\n+\t\t}\n+\t}\n+\n+\tCFRelease(certs);\n+\n+\t*pemRoots = combinedData;\n+\treturn 0;\n+}\n+*/\n+import \"C\"\n+import \"unsafe\"\n+\n+func initSystemRoots() {\n+\troots := NewCertPool()\n+\n+\tvar data C.CFDataRef = nil\n+\terr := C.FetchPEMRoots(&data)\n+\tif err == -1 {\n+\t\treturn\n+\t}\n+\n+\tdefer C.CFRelease(C.CFTypeRef(data))\n+\tbuf := C.GoBytes(unsafe.Pointer(C.CFDataGetBytePtr(data)), C.int(C.CFDataGetLength(data)))\n+\troots.AppendCertsFromPEM(buf)\n+\tsystemRoots = roots\n+}"}, {"sha": "2a61d36eaeaf2a29bfaccfd3139f834e538f6dec", "filename": "libgo/go/crypto/x509/root_darwin.go", "status": "modified", "additions": 10, "deletions": 68, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_darwin.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_darwin.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_darwin.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,81 +1,23 @@\n-// Copyright 2011 The Go Authors. All rights reserved.\n+// Copyright 2013 The Go Authors. All rights reserved.\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n package x509\n \n-/*\n-#cgo CFLAGS: -mmacosx-version-min=10.6 -D__MAC_OS_X_VERSION_MAX_ALLOWED=1060\n-#cgo LDFLAGS: -framework CoreFoundation -framework Security\n-\n-#include <CoreFoundation/CoreFoundation.h>\n-#include <Security/Security.h>\n-\n-// FetchPEMRoots fetches the system's list of trusted X.509 root certificates.\n-//\n-// On success it returns 0 and fills pemRoots with a CFDataRef that contains the extracted root\n-// certificates of the system. On failure, the function returns -1.\n-//\n-// Note: The CFDataRef returned in pemRoots must be released (using CFRelease) after\n-// we've consumed its content.\n-int FetchPEMRoots(CFDataRef *pemRoots) {\n-\tif (pemRoots == NULL) {\n-\t\treturn -1;\n-\t}\n-\n-\tCFArrayRef certs = NULL;\n-\tOSStatus err = SecTrustCopyAnchorCertificates(&certs);\n-\tif (err != noErr) {\n-\t\treturn -1;\n-\t}\n-\n-\tCFMutableDataRef combinedData = CFDataCreateMutable(kCFAllocatorDefault, 0);\n-\tint i, ncerts = CFArrayGetCount(certs);\n-\tfor (i = 0; i < ncerts; i++) {\n-\t\tCFDataRef data = NULL;\n-\t\tSecCertificateRef cert = (SecCertificateRef)CFArrayGetValueAtIndex(certs, i);\n-\t\tif (cert == NULL) {\n-\t\t\tcontinue;\n-\t\t}\n-\n-\t\t// Note: SecKeychainItemExport is deprecated as of 10.7 in favor of SecItemExport.\n-\t\t// Once we support weak imports via cgo we should prefer that, and fall back to this\n-\t\t// for older systems.\n-\t\terr = SecKeychainItemExport(cert, kSecFormatX509Cert, kSecItemPemArmour, NULL, &data);\n-\t\tif (err != noErr) {\n-\t\t\tcontinue;\n-\t\t}\n-\n-\t\tif (data != NULL) {\n-\t\t\tCFDataAppendBytes(combinedData, CFDataGetBytePtr(data), CFDataGetLength(data));\n-\t\t\tCFRelease(data);\n-\t\t}\n-\t}\n-\n-\tCFRelease(certs);\n-\n-\t*pemRoots = combinedData;\n-\treturn 0;\n-}\n-*/\n-import \"C\"\n-import \"unsafe\"\n+import \"os/exec\"\n \n func (c *Certificate) systemVerify(opts *VerifyOptions) (chains [][]*Certificate, err error) {\n \treturn nil, nil\n }\n \n-func initSystemRoots() {\n-\troots := NewCertPool()\n-\n-\tvar data C.CFDataRef = nil\n-\terr := C.FetchPEMRoots(&data)\n-\tif err == -1 {\n-\t\treturn\n+func execSecurityRoots() (*CertPool, error) {\n+\tcmd := exec.Command(\"/usr/bin/security\", \"find-certificate\", \"-a\", \"-p\", \"/System/Library/Keychains/SystemRootCertificates.keychain\")\n+\tdata, err := cmd.Output()\n+\tif err != nil {\n+\t\treturn nil, err\n \t}\n \n-\tdefer C.CFRelease(C.CFTypeRef(data))\n-\tbuf := C.GoBytes(unsafe.Pointer(C.CFDataGetBytePtr(data)), C.int(C.CFDataGetLength(data)))\n-\troots.AppendCertsFromPEM(buf)\n-\tsystemRoots = roots\n+\troots := NewCertPool()\n+\troots.AppendCertsFromPEM(data)\n+\treturn roots, nil\n }"}, {"sha": "d00e2576624ad5c67cd325846e07171090579b0e", "filename": "libgo/go/crypto/x509/root_nocgo_darwin.go", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_nocgo_darwin.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_nocgo_darwin.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_nocgo_darwin.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build !cgo\n+\n+package x509\n+\n+func initSystemRoots() {\n+\tsystemRoots, _ = execSecurityRoots()\n+}"}, {"sha": "4c742ccc3715eb8475c776aeab973fbdda5ac722", "filename": "libgo/go/crypto/x509/root_stub.go", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b3da6a714493644a4333bfd8205e3341ed3b8e/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_stub.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b3da6a714493644a4333bfd8205e3341ed3b8e/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_stub.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Froot_stub.go?ref=82b3da6a714493644a4333bfd8205e3341ed3b8e", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2011 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-// +build darwin,!cgo\n-\n-package x509\n-\n-func (c *Certificate) systemVerify(opts *VerifyOptions) (chains [][]*Certificate, err error) {\n-\treturn nil, nil\n-}\n-\n-func initSystemRoots() {\n-}"}, {"sha": "5fd8e371747d85dc6fb2fb838b8e8e3b17f763b7", "filename": "libgo/go/crypto/x509/verify.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Fverify.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Fverify.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fverify.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -425,6 +425,7 @@ func checkChainForKeyUsage(chain []*Certificate, keyUsages []ExtKeyUsage) bool {\n \t// by each certificate. If we cross out all the usages, then the chain\n \t// is unacceptable.\n \n+NextCert:\n \tfor i := len(chain) - 1; i >= 0; i-- {\n \t\tcert := chain[i]\n \t\tif len(cert.ExtKeyUsage) == 0 && len(cert.UnknownExtKeyUsage) == 0 {\n@@ -435,7 +436,7 @@ func checkChainForKeyUsage(chain []*Certificate, keyUsages []ExtKeyUsage) bool {\n \t\tfor _, usage := range cert.ExtKeyUsage {\n \t\t\tif usage == ExtKeyUsageAny {\n \t\t\t\t// The certificate is explicitly good for any usage.\n-\t\t\t\tcontinue\n+\t\t\t\tcontinue NextCert\n \t\t\t}\n \t\t}\n "}, {"sha": "2a55fb1e5581c30c2e59dba2d0a3690be9233ead", "filename": "libgo/go/crypto/x509/x509.go", "status": "modified", "additions": 53, "deletions": 29, "changes": 82, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -13,6 +13,7 @@ import (\n \t\"crypto/elliptic\"\n \t\"crypto/rsa\"\n \t\"crypto/sha1\"\n+\t_ \"crypto/sha256\"\n \t\"crypto/x509/pkix\"\n \t\"encoding/asn1\"\n \t\"encoding/pem\"\n@@ -241,32 +242,31 @@ var (\n \toidSignatureECDSAWithSHA512 = asn1.ObjectIdentifier{1, 2, 840, 10045, 4, 3, 4}\n )\n \n+var signatureAlgorithmDetails = []struct {\n+\talgo       SignatureAlgorithm\n+\toid        asn1.ObjectIdentifier\n+\tpubKeyAlgo PublicKeyAlgorithm\n+\thash       crypto.Hash\n+}{\n+\t{MD2WithRSA, oidSignatureMD2WithRSA, RSA, crypto.Hash(0) /* no value for MD2 */},\n+\t{MD5WithRSA, oidSignatureMD5WithRSA, RSA, crypto.MD5},\n+\t{SHA1WithRSA, oidSignatureSHA1WithRSA, RSA, crypto.SHA1},\n+\t{SHA256WithRSA, oidSignatureSHA256WithRSA, RSA, crypto.SHA256},\n+\t{SHA384WithRSA, oidSignatureSHA384WithRSA, RSA, crypto.SHA384},\n+\t{SHA512WithRSA, oidSignatureSHA512WithRSA, RSA, crypto.SHA512},\n+\t{DSAWithSHA1, oidSignatureDSAWithSHA1, DSA, crypto.SHA1},\n+\t{DSAWithSHA256, oidSignatureDSAWithSHA256, DSA, crypto.SHA256},\n+\t{ECDSAWithSHA1, oidSignatureECDSAWithSHA1, ECDSA, crypto.SHA1},\n+\t{ECDSAWithSHA256, oidSignatureECDSAWithSHA256, ECDSA, crypto.SHA256},\n+\t{ECDSAWithSHA384, oidSignatureECDSAWithSHA384, ECDSA, crypto.SHA384},\n+\t{ECDSAWithSHA512, oidSignatureECDSAWithSHA512, ECDSA, crypto.SHA512},\n+}\n+\n func getSignatureAlgorithmFromOID(oid asn1.ObjectIdentifier) SignatureAlgorithm {\n-\tswitch {\n-\tcase oid.Equal(oidSignatureMD2WithRSA):\n-\t\treturn MD2WithRSA\n-\tcase oid.Equal(oidSignatureMD5WithRSA):\n-\t\treturn MD5WithRSA\n-\tcase oid.Equal(oidSignatureSHA1WithRSA):\n-\t\treturn SHA1WithRSA\n-\tcase oid.Equal(oidSignatureSHA256WithRSA):\n-\t\treturn SHA256WithRSA\n-\tcase oid.Equal(oidSignatureSHA384WithRSA):\n-\t\treturn SHA384WithRSA\n-\tcase oid.Equal(oidSignatureSHA512WithRSA):\n-\t\treturn SHA512WithRSA\n-\tcase oid.Equal(oidSignatureDSAWithSHA1):\n-\t\treturn DSAWithSHA1\n-\tcase oid.Equal(oidSignatureDSAWithSHA256):\n-\t\treturn DSAWithSHA256\n-\tcase oid.Equal(oidSignatureECDSAWithSHA1):\n-\t\treturn ECDSAWithSHA1\n-\tcase oid.Equal(oidSignatureECDSAWithSHA256):\n-\t\treturn ECDSAWithSHA256\n-\tcase oid.Equal(oidSignatureECDSAWithSHA384):\n-\t\treturn ECDSAWithSHA384\n-\tcase oid.Equal(oidSignatureECDSAWithSHA512):\n-\t\treturn ECDSAWithSHA512\n+\tfor _, details := range signatureAlgorithmDetails {\n+\t\tif oid.Equal(details.oid) {\n+\t\t\treturn details.algo\n+\t\t}\n \t}\n \treturn UnknownSignatureAlgorithm\n }\n@@ -1346,7 +1346,7 @@ func subjectBytes(cert *Certificate) ([]byte, error) {\n // following members of template are used: SerialNumber, Subject, NotBefore,\n // NotAfter, KeyUsage, ExtKeyUsage, UnknownExtKeyUsage, BasicConstraintsValid,\n // IsCA, MaxPathLen, SubjectKeyId, DNSNames, PermittedDNSDomainsCritical,\n-// PermittedDNSDomains.\n+// PermittedDNSDomains, SignatureAlgorithm.\n //\n // The certificate is signed by parent. If parent is equal to template then the\n // certificate is self-signed. The parameter pub is the public key of the\n@@ -1355,7 +1355,7 @@ func subjectBytes(cert *Certificate) ([]byte, error) {\n // The returned slice is the certificate in DER encoding.\n //\n // The only supported key types are RSA and ECDSA (*rsa.PublicKey or\n-// *ecdsa.PublicKey for pub, *rsa.PrivateKey or *ecdsa.PublicKey for priv).\n+// *ecdsa.PublicKey for pub, *rsa.PrivateKey or *ecdsa.PrivateKey for priv).\n func CreateCertificate(rand io.Reader, template, parent *Certificate, pub interface{}, priv interface{}) (cert []byte, err error) {\n \tvar publicKeyBytes []byte\n \tvar publicKeyAlgorithm pkix.AlgorithmIdentifier\n@@ -1366,12 +1366,16 @@ func CreateCertificate(rand io.Reader, template, parent *Certificate, pub interf\n \n \tvar signatureAlgorithm pkix.AlgorithmIdentifier\n \tvar hashFunc crypto.Hash\n+\tvar privType PublicKeyAlgorithm\n \n \tswitch priv := priv.(type) {\n \tcase *rsa.PrivateKey:\n-\t\tsignatureAlgorithm.Algorithm = oidSignatureSHA1WithRSA\n-\t\thashFunc = crypto.SHA1\n+\t\tprivType = RSA\n+\t\tsignatureAlgorithm.Algorithm = oidSignatureSHA256WithRSA\n+\t\thashFunc = crypto.SHA256\n \tcase *ecdsa.PrivateKey:\n+\t\tprivType = ECDSA\n+\n \t\tswitch priv.Curve {\n \t\tcase elliptic.P224(), elliptic.P256():\n \t\t\thashFunc = crypto.SHA256\n@@ -1389,6 +1393,26 @@ func CreateCertificate(rand io.Reader, template, parent *Certificate, pub interf\n \t\treturn nil, errors.New(\"x509: only RSA and ECDSA private keys supported\")\n \t}\n \n+\tif template.SignatureAlgorithm != 0 {\n+\t\tfound := false\n+\t\tfor _, details := range signatureAlgorithmDetails {\n+\t\t\tif details.algo == template.SignatureAlgorithm {\n+\t\t\t\tif details.pubKeyAlgo != privType {\n+\t\t\t\t\treturn nil, errors.New(\"x509: requested SignatureAlgorithm does not match private key type\")\n+\t\t\t\t}\n+\t\t\t\tsignatureAlgorithm.Algorithm, hashFunc = details.oid, details.hash\n+\t\t\t\tif hashFunc == 0 {\n+\t\t\t\t\treturn nil, errors.New(\"x509: cannot sign with hash function requested\")\n+\t\t\t\t}\n+\t\t\t\tfound = true\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t}\n+\t\tif !found {\n+\t\t\treturn nil, errors.New(\"x509: unknown SignatureAlgorithm\")\n+\t\t}\n+\t}\n+\n \tif err != nil {\n \t\treturn\n \t}"}, {"sha": "9d727f0fa7c94bad2ce4c2ac0c6e0ec91a6982c2", "filename": "libgo/go/crypto/x509/x509_test.go", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -20,6 +20,7 @@ import (\n \t\"encoding/pem\"\n \t\"math/big\"\n \t\"net\"\n+\t\"os/exec\"\n \t\"reflect\"\n \t\"testing\"\n \t\"time\"\n@@ -305,11 +306,12 @@ func TestCreateSelfSignedCertificate(t *testing.T) {\n \t\tname      string\n \t\tpub, priv interface{}\n \t\tcheckSig  bool\n+\t\tsigAlgo   SignatureAlgorithm\n \t}{\n-\t\t{\"RSA/RSA\", &rsaPriv.PublicKey, rsaPriv, true},\n-\t\t{\"RSA/ECDSA\", &rsaPriv.PublicKey, ecdsaPriv, false},\n-\t\t{\"ECDSA/RSA\", &ecdsaPriv.PublicKey, rsaPriv, false},\n-\t\t{\"ECDSA/ECDSA\", &ecdsaPriv.PublicKey, ecdsaPriv, true},\n+\t\t{\"RSA/RSA\", &rsaPriv.PublicKey, rsaPriv, true, SHA1WithRSA},\n+\t\t{\"RSA/ECDSA\", &rsaPriv.PublicKey, ecdsaPriv, false, ECDSAWithSHA384},\n+\t\t{\"ECDSA/RSA\", &ecdsaPriv.PublicKey, rsaPriv, false, SHA256WithRSA},\n+\t\t{\"ECDSA/ECDSA\", &ecdsaPriv.PublicKey, ecdsaPriv, true, ECDSAWithSHA1},\n \t}\n \n \ttestExtKeyUsage := []ExtKeyUsage{ExtKeyUsageClientAuth, ExtKeyUsageServerAuth}\n@@ -327,6 +329,8 @@ func TestCreateSelfSignedCertificate(t *testing.T) {\n \t\t\tNotBefore: time.Unix(1000, 0),\n \t\t\tNotAfter:  time.Unix(100000, 0),\n \n+\t\t\tSignatureAlgorithm: test.sigAlgo,\n+\n \t\t\tSubjectKeyId: []byte{1, 2, 3, 4},\n \t\t\tKeyUsage:     KeyUsageCertSign,\n \n@@ -390,6 +394,10 @@ func TestCreateSelfSignedCertificate(t *testing.T) {\n \t\t\tt.Errorf(\"%s: issuer wasn't correctly copied from the template. Got %s, want %s\", test.name, cert.Issuer.CommonName, commonName)\n \t\t}\n \n+\t\tif cert.SignatureAlgorithm != test.sigAlgo {\n+\t\t\tt.Errorf(\"%s: SignatureAlgorithm wasn't copied from template. Got %s, want %s\", test.name, cert.SignatureAlgorithm, test.sigAlgo)\n+\t\t}\n+\n \t\tif !reflect.DeepEqual(cert.ExtKeyUsage, testExtKeyUsage) {\n \t\t\tt.Errorf(\"%s: extkeyusage wasn't correctly copied from the template. Got %v, want %v\", test.name, cert.ExtKeyUsage, testExtKeyUsage)\n \t\t}\n@@ -718,6 +726,12 @@ func TestParsePEMCRL(t *testing.T) {\n \t// Can't check the signature here without a package cycle.\n }\n \n+func TestImports(t *testing.T) {\n+\tif err := exec.Command(\"go\", \"run\", \"x509_test_import.go\").Run(); err != nil {\n+\t\tt.Errorf(\"failed to run x509_test_import.go: %s\", err)\n+\t}\n+}\n+\n const derCRLBase64 = \"MIINqzCCDJMCAQEwDQYJKoZIhvcNAQEFBQAwVjEZMBcGA1UEAxMQUEtJIEZJTk1FQ0NBTklDQTEVMBMGA1UEChMMRklOTUVDQ0FOSUNBMRUwEwYDVQQLEwxGSU5NRUNDQU5JQ0ExCzAJBgNVBAYTAklUFw0xMTA1MDQxNjU3NDJaFw0xMTA1MDQyMDU3NDJaMIIMBzAhAg4Ze1od49Lt1qIXBydAzhcNMDkwNzE2MDg0MzIyWjAAMCECDl0HSL9bcZ1Ci/UHJ0DPFw0wOTA3MTYwODQzMTNaMAAwIQIOESB9tVAmX3cY7QcnQNAXDTA5MDcxNjA4NDUyMlowADAhAg4S1tGAQ3mHt8uVBydA1RcNMDkwODA0MTUyNTIyWjAAMCECDlQ249Y7vtC25ScHJ0DWFw0wOTA4MDQxNTI1MzdaMAAwIQIOISMop3NkA4PfYwcnQNkXDTA5MDgwNDExMDAzNFowADAhAg56/BMoS29KEShTBydA2hcNMDkwODA0MTEwMTAzWjAAMCECDnBp/22HPH5CSWoHJ0DbFw0wOTA4MDQxMDU0NDlaMAAwIQIOV9IP+8CD8bK+XAcnQNwXDTA5MDgwNDEwNTcxN1owADAhAg4v5aRz0IxWqYiXBydA3RcNMDkwODA0MTA1NzQ1WjAAMCECDlOU34VzvZAybQwHJ0DeFw0wOTA4MDQxMDU4MjFaMAAwIAINO4CD9lluIxcwBydBAxcNMDkwNzIyMTUzMTU5WjAAMCECDgOllfO8Y1QA7/wHJ0ExFw0wOTA3MjQxMTQxNDNaMAAwIQIOJBX7jbiCdRdyjgcnQUQXDTA5MDkxNjA5MzAwOFowADAhAg5iYSAgmDrlH/RZBydBRRcNMDkwOTE2MDkzMDE3WjAAMCECDmu6k6srP3jcMaQHJ0FRFw0wOTA4MDQxMDU2NDBaMAAwIQIOX8aHlO0V+WVH4QcnQVMXDTA5MDgwNDEwNTcyOVowADAhAg5flK2rg3NnsRgDBydBzhcNMTEwMjAxMTUzMzQ2WjAAMCECDg35yJDL1jOPTgoHJ0HPFw0xMTAyMDExNTM0MjZaMAAwIQIOMyFJ6+e9iiGVBQcnQdAXDTA5MDkxODEzMjAwNVowADAhAg5Emb/Oykucmn8fBydB1xcNMDkwOTIxMTAxMDQ3WjAAMCECDjQKCncV+MnUavMHJ0HaFw0wOTA5MjIwODE1MjZaMAAwIQIOaxiFUt3dpd+tPwcnQfQXDTEwMDYxODA4NDI1MVowADAhAg5G7P8nO0tkrMt7BydB9RcNMTAwNjE4MDg0MjMwWjAAMCECDmTCC3SXhmDRst4HJ0H2Fw0wOTA5MjgxMjA3MjBaMAAwIQIOHoGhUr/pRwzTKgcnQfcXDTA5MDkyODEyMDcyNFowADAhAg50wrcrCiw8mQmPBydCBBcNMTAwMjE2MTMwMTA2WjAAMCECDifWmkvwyhEqwEcHJ0IFFw0xMDAyMTYxMzAxMjBaMAAwIQIOfgPmlW9fg+osNgcnQhwXDTEwMDQxMzA5NTIwMFowADAhAg4YHAGuA6LgCk7tBydCHRcNMTAwNDEzMDk1MTM4WjAAMCECDi1zH1bxkNJhokAHJ0IsFw0xMDA0MTMwOTU5MzBaMAAwIQIOMipNccsb/wo2fwcnQi0XDTEwMDQxMzA5NTkwMFowADAhAg46lCmvPl4GpP6ABydCShcNMTAwMTE5MDk1MjE3WjAAMCECDjaTcaj+wBpcGAsHJ0JLFw0xMDAxMTkwOTUyMzRaMAAwIQIOOMC13EOrBuxIOQcnQloXDTEwMDIwMTA5NDcwNVowADAhAg5KmZl+krz4RsmrBydCWxcNMTAwMjAxMDk0NjQwWjAAMCECDmLG3zQJ/fzdSsUHJ0JiFw0xMDAzMDEwOTUxNDBaMAAwIQIOP39ksgHdojf4owcnQmMXDTEwMDMwMTA5NTExN1owADAhAg4LDQzvWNRlD6v9BydCZBcNMTAwMzAxMDk0NjIyWjAAMCECDkmNfeclaFhIaaUHJ0JlFw0xMDAzMDEwOTQ2MDVaMAAwIQIOT/qWWfpH/m8NTwcnQpQXDTEwMDUxMTA5MTgyMVowADAhAg5m/ksYxvCEgJSvBydClRcNMTAwNTExMDkxODAxWjAAMCECDgvf3Ohq6JOPU9AHJ0KWFw0xMDA1MTEwOTIxMjNaMAAwIQIOKSPas10z4jNVIQcnQpcXDTEwMDUxMTA5MjEwMlowADAhAg4mCWmhoZ3lyKCDBydCohcNMTEwNDI4MTEwMjI1WjAAMCECDkeiyRsBMK0Gvr4HJ0KjFw0xMTA0MjgxMTAyMDdaMAAwIQIOa09b/nH2+55SSwcnQq4XDTExMDQwMTA4Mjk0NlowADAhAg5O7M7iq7gGplr1BydCrxcNMTEwNDAxMDgzMDE3WjAAMCECDjlT6mJxUjTvyogHJ0K1Fw0xMTAxMjcxNTQ4NTJaMAAwIQIODS/l4UUFLe21NAcnQrYXDTExMDEyNzE1NDgyOFowADAhAg5lPRA0XdOUF6lSBydDHhcNMTEwMTI4MTQzNTA1WjAAMCECDixKX4fFGGpENwgHJ0MfFw0xMTAxMjgxNDM1MzBaMAAwIQIORNBkqsPnpKTtbAcnQ08XDTEwMDkwOTA4NDg0MlowADAhAg5QL+EMM3lohedEBydDUBcNMTAwOTA5MDg0ODE5WjAAMCECDlhDnHK+HiTRAXcHJ0NUFw0xMDEwMTkxNjIxNDBaMAAwIQIOdBFqAzq/INz53gcnQ1UXDTEwMTAxOTE2MjA0NFowADAhAg4OjR7s8MgKles1BydDWhcNMTEwMTI3MTY1MzM2WjAAMCECDmfR/elHee+d0SoHJ0NbFw0xMTAxMjcxNjUzNTZaMAAwIQIOBTKv2ui+KFMI+wcnQ5YXDTEwMDkxNTEwMjE1N1owADAhAg49F3c/GSah+oRUBydDmxcNMTEwMTI3MTczMjMzWjAAMCECDggv4I61WwpKFMMHJ0OcFw0xMTAxMjcxNzMyNTVaMAAwIQIOXx/Y8sEvwS10LAcnQ6UXDTExMDEyODExMjkzN1owADAhAg5LSLbnVrSKaw/9BydDphcNMTEwMTI4MTEyOTIwWjAAMCECDmFFoCuhKUeACQQHJ0PfFw0xMTAxMTExMDE3MzdaMAAwIQIOQTDdFh2fSPF6AAcnQ+AXDTExMDExMTEwMTcxMFowADAhAg5B8AOXX61FpvbbBydD5RcNMTAxMDA2MTAxNDM2WjAAMCECDh41P2Gmi7PkwI4HJ0PmFw0xMDEwMDYxMDE2MjVaMAAwIQIOWUHGLQCd+Ale9gcnQ/0XDTExMDUwMjA3NTYxMFowADAhAg5Z2c9AYkikmgWOBydD/hcNMTEwNTAyMDc1NjM0WjAAMCECDmf/UD+/h8nf+74HJ0QVFw0xMTA0MTUwNzI4MzNaMAAwIQIOICvj4epy3MrqfwcnRBYXDTExMDQxNTA3Mjg1NlowADAhAg4bouRMfOYqgv4xBydEHxcNMTEwMzA4MTYyNDI1WjAAMCECDhebWHGoKiTp7pEHJ0QgFw0xMTAzMDgxNjI0NDhaMAAwIQIOX+qnxxAqJ8LtawcnRDcXDTExMDEzMTE1MTIyOFowADAhAg4j0fICqZ+wkOdqBydEOBcNMTEwMTMxMTUxMTQxWjAAMCECDhmXjsV4SUpWtAMHJ0RLFw0xMTAxMjgxMTI0MTJaMAAwIQIODno/w+zG43kkTwcnREwXDTExMDEyODExMjM1MlowADAhAg4b1gc88767Fr+LBydETxcNMTEwMTI4MTEwMjA4WjAAMCECDn+M3Pa1w2nyFeUHJ0RQFw0xMTAxMjgxMDU4NDVaMAAwIQIOaduoyIH61tqybAcnRJUXDTEwMTIxNTA5NDMyMlowADAhAg4nLqQPkyi3ESAKBydElhcNMTAxMjE1MDk0MzM2WjAAMCECDi504NIMH8578gQHJ0SbFw0xMTAyMTQxNDA1NDFaMAAwIQIOGuaM8PDaC5u1egcnRJwXDTExMDIxNDE0MDYwNFowADAhAg4ehYq/BXGnB5PWBydEnxcNMTEwMjA0MDgwOTUxWjAAMCECDkSD4eS4FxW5H20HJ0SgFw0xMTAyMDQwODA5MjVaMAAwIQIOOCcb6ilYObt1egcnRKEXDTExMDEyNjEwNDEyOVowADAhAg58tISWCCwFnKGnBydEohcNMTEwMjA0MDgxMzQyWjAAMCECDn5rjtabY/L/WL0HJ0TJFw0xMTAyMDQxMTAzNDFaMAAwDQYJKoZIhvcNAQEFBQADggEBAGnF2Gs0+LNiYCW1Ipm83OXQYP/bd5tFFRzyz3iepFqNfYs4D68/QihjFoRHQoXEB0OEe1tvaVnnPGnEOpi6krwekquMxo4H88B5SlyiFIqemCOIss0SxlCFs69LmfRYvPPvPEhoXtQ3ZThe0UvKG83GOklhvGl6OaiRf4Mt+m8zOT4Wox/j6aOBK6cw6qKCdmD+Yj1rrNqFGg1CnSWMoD6S6mwNgkzwdBUJZ22BwrzAAo4RHa2Uy3ef1FjwD0XtU5N3uDSxGGBEDvOe5z82rps3E22FpAA8eYl8kaXtmWqyvYU0epp4brGuTxCuBMCAsxt/OjIjeNNQbBGkwxgfYA0=\"\n \n const pemCRLBase64 = \"LS0tLS1CRUdJTiBYNTA5IENSTC0tLS0tDQpNSUlCOWpDQ0FWOENBUUV3RFFZSktvWklodmNOQVFFRkJRQXdiREVhTUJnR0ExVUVDaE1SVWxOQklGTmxZM1Z5DQphWFI1SUVsdVl5NHhIakFjQmdOVkJBTVRGVkpUUVNCUWRXSnNhV01nVW05dmRDQkRRU0IyTVRFdU1Dd0dDU3FHDQpTSWIzRFFFSkFSWWZjbk5oYTJWdmJuSnZiM1J6YVdkdVFISnpZWE5sWTNWeWFYUjVMbU52YlJjTk1URXdNakl6DQpNVGt5T0RNd1doY05NVEV3T0RJeU1Ua3lPRE13V2pDQmpEQktBaEVBckRxb2g5RkhKSFhUN09QZ3V1bjQrQmNODQpNRGt4TVRBeU1UUXlOekE1V2pBbU1Bb0dBMVVkRlFRRENnRUpNQmdHQTFVZEdBUVJHQTh5TURBNU1URXdNakUwDQpNalExTlZvd1BnSVJBTEd6blowOTVQQjVhQU9MUGc1N2ZNTVhEVEF5TVRBeU16RTBOVEF4TkZvd0dqQVlCZ05WDQpIUmdFRVJnUE1qQXdNakV3TWpNeE5EVXdNVFJhb0RBd0xqQWZCZ05WSFNNRUdEQVdnQlQxVERGNlVRTS9MTmVMDQpsNWx2cUhHUXEzZzltekFMQmdOVkhSUUVCQUlDQUlRd0RRWUpLb1pJaHZjTkFRRUZCUUFEZ1lFQUZVNUFzNk16DQpxNVBSc2lmYW9iUVBHaDFhSkx5QytNczVBZ2MwYld5QTNHQWR4dXI1U3BQWmVSV0NCamlQL01FSEJXSkNsQkhQDQpHUmNxNXlJZDNFakRrYUV5eFJhK2k2N0x6dmhJNmMyOUVlNks5cFNZd2ppLzdSVWhtbW5Qclh0VHhsTDBsckxyDQptUVFKNnhoRFJhNUczUUE0Q21VZHNITnZicnpnbUNZcHZWRT0NCi0tLS0tRU5EIFg1MDkgQ1JMLS0tLS0NCg0K\""}, {"sha": "3fda7da188c0da0050f09f491fb260c0d9e7d128", "filename": "libgo/go/crypto/x509/x509_test_import.go", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test_import.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test_import.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcrypto%2Fx509%2Fx509_test_import.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,53 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build ignore\n+\n+// This file is run by the x509 tests to ensure that a program with minimal\n+// imports can sign certificates without errors resulting from missing hash\n+// functions.\n+package main\n+\n+import (\n+\t\"crypto/rand\"\n+\t\"crypto/x509\"\n+\t\"crypto/x509/pkix\"\n+\t\"encoding/pem\"\n+\t\"math/big\"\n+\t\"time\"\n+)\n+\n+func main() {\n+\tblock, _ := pem.Decode([]byte(pemPrivateKey))\n+\trsaPriv, err := x509.ParsePKCS1PrivateKey(block.Bytes)\n+\tif err != nil {\n+\t\tpanic(\"Failed to parse private key: \" + err.Error())\n+\t}\n+\n+\ttemplate := x509.Certificate{\n+\t\tSerialNumber: big.NewInt(1),\n+\t\tSubject: pkix.Name{\n+\t\t\tCommonName:   \"test\",\n+\t\t\tOrganization: []string{\"\u03a3 Acme Co\"},\n+\t\t},\n+\t\tNotBefore: time.Unix(1000, 0),\n+\t\tNotAfter:  time.Unix(100000, 0),\n+\t\tKeyUsage:  x509.KeyUsageCertSign,\n+\t}\n+\n+\tif _, err = x509.CreateCertificate(rand.Reader, &template, &template, &rsaPriv.PublicKey, rsaPriv); err != nil {\n+\t\tpanic(\"failed to create certificate with basic imports: \" + err.Error())\n+\t}\n+}\n+\n+var pemPrivateKey = `-----BEGIN RSA PRIVATE KEY-----\n+MIIBOgIBAAJBALKZD0nEffqM1ACuak0bijtqE2QrI/KLADv7l3kK3ppMyCuLKoF0\n+fd7Ai2KW5ToIwzFofvJcS/STa6HA5gQenRUCAwEAAQJBAIq9amn00aS0h/CrjXqu\n+/ThglAXJmZhOMPVn4eiu7/ROixi9sex436MaVeMqSNf7Ex9a8fRNfWss7Sqd9eWu\n+RTUCIQDasvGASLqmjeffBNLTXV2A5g4t+kLVCpsEIZAycV5GswIhANEPLmax0ME/\n+EO+ZJ79TJKN5yiGBRsv5yvx5UiHxajEXAiAhAol5N4EUyq6I9w1rYdhPMGpLfk7A\n+IU2snfRJ6Nq2CQIgFrPsWRCkV+gOYcajD17rEqmuLrdIRexpg8N1DOSXoJ8CIGlS\n+tAboUGBxTDq3ZroNism3DaMIbKPyYrAqhKov1h5V\n+-----END RSA PRIVATE KEY-----\n+`"}, {"sha": "c7db0dd77b370a1efa5f27b31707117a3168fd78", "filename": "libgo/go/database/sql/fakedb_test.go", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdatabase%2Fsql%2Ffakedb_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdatabase%2Fsql%2Ffakedb_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdatabase%2Fsql%2Ffakedb_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -23,7 +23,7 @@ var _ = log.Printf\n // interface, just for testing.\n //\n // It speaks a query language that's semantically similar to but\n-// syntantically different and simpler than SQL.  The syntax is as\n+// syntactically different and simpler than SQL.  The syntax is as\n // follows:\n //\n //   WIPE\n@@ -433,11 +433,19 @@ func (c *fakeConn) prepareInsert(stmt *fakeStmt, parts []string) (driver.Stmt, e\n \treturn stmt, nil\n }\n \n+// hook to simulate broken connections\n+var hookPrepareBadConn func() bool\n+\n func (c *fakeConn) Prepare(query string) (driver.Stmt, error) {\n \tc.numPrepare++\n \tif c.db == nil {\n \t\tpanic(\"nil c.db; conn = \" + fmt.Sprintf(\"%#v\", c))\n \t}\n+\n+\tif hookPrepareBadConn != nil && hookPrepareBadConn() {\n+\t\treturn nil, driver.ErrBadConn\n+\t}\n+\n \tparts := strings.Split(query, \"|\")\n \tif len(parts) < 1 {\n \t\treturn nil, errf(\"empty query\")\n@@ -489,10 +497,18 @@ func (s *fakeStmt) Close() error {\n \n var errClosed = errors.New(\"fakedb: statement has been closed\")\n \n+// hook to simulate broken connections\n+var hookExecBadConn func() bool\n+\n func (s *fakeStmt) Exec(args []driver.Value) (driver.Result, error) {\n \tif s.closed {\n \t\treturn nil, errClosed\n \t}\n+\n+\tif hookExecBadConn != nil && hookExecBadConn() {\n+\t\treturn nil, driver.ErrBadConn\n+\t}\n+\n \terr := checkSubsetTypes(args)\n \tif err != nil {\n \t\treturn nil, err\n@@ -565,10 +581,18 @@ func (s *fakeStmt) execInsert(args []driver.Value, doInsert bool) (driver.Result\n \treturn driver.RowsAffected(1), nil\n }\n \n+// hook to simulate broken connections\n+var hookQueryBadConn func() bool\n+\n func (s *fakeStmt) Query(args []driver.Value) (driver.Rows, error) {\n \tif s.closed {\n \t\treturn nil, errClosed\n \t}\n+\n+\tif hookQueryBadConn != nil && hookQueryBadConn() {\n+\t\treturn nil, driver.ErrBadConn\n+\t}\n+\n \terr := checkSubsetTypes(args)\n \tif err != nil {\n \t\treturn nil, err\n@@ -686,7 +710,13 @@ func (rc *rowsCursor) Columns() []string {\n \treturn rc.cols\n }\n \n+var rowsCursorNextHook func(dest []driver.Value) error\n+\n func (rc *rowsCursor) Next(dest []driver.Value) error {\n+\tif rowsCursorNextHook != nil {\n+\t\treturn rowsCursorNextHook(dest)\n+\t}\n+\n \tif rc.closed {\n \t\treturn errors.New(\"fakedb: cursor is closed\")\n \t}"}, {"sha": "4f86d24b2e5e819b149e399b2e8d16f14516091f", "filename": "libgo/go/database/sql/sql.go", "status": "modified", "additions": 86, "deletions": 59, "changes": 145, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -256,7 +256,7 @@ func (dc *driverConn) prepareLocked(query string) (driver.Stmt, error) {\n \t\t// stmt closes if the conn is about to close anyway? For now\n \t\t// do the safe thing, in case stmts need to be closed.\n \t\t//\n-\t\t// TODO(bradfitz): after Go 1.1, closing driver.Stmts\n+\t\t// TODO(bradfitz): after Go 1.2, closing driver.Stmts\n \t\t// should be moved to driverStmt, using unique\n \t\t// *driverStmts everywhere (including from\n \t\t// *Stmt.connStmt, instead of returning a\n@@ -569,7 +569,7 @@ func (db *DB) maybeOpenNewConnections() {\n \t}\n }\n \n-// Runs in a seperate goroutine, opens new connections when requested.\n+// Runs in a separate goroutine, opens new connections when requested.\n func (db *DB) connectionOpener() {\n \tfor _ = range db.openerCh {\n \t\tdb.openNewConnection()\n@@ -774,8 +774,8 @@ func (db *DB) putConn(dc *driverConn, err error) {\n // Satisfy a connRequest or put the driverConn in the idle pool and return true\n // or return false.\n // putConnDBLocked will satisfy a connRequest if there is one, or it will\n-// return the *driverConn to the freeConn list if err != nil and the idle\n-// connection limit would not be reached.\n+// return the *driverConn to the freeConn list if err == nil and the idle\n+// connection limit will not be exceeded.\n // If err != nil, the value of dc is ignored.\n // If err == nil, then dc must not equal nil.\n // If a connRequest was fullfilled or the *driverConn was placed in the\n@@ -791,20 +791,24 @@ func (db *DB) putConnDBLocked(dc *driverConn, err error) bool {\n \t\t\treq <- dc\n \t\t}\n \t\treturn true\n-\t} else if err == nil && !db.closed && db.maxIdleConnsLocked() > 0 && db.maxIdleConnsLocked() > db.freeConn.Len() {\n+\t} else if err == nil && !db.closed && db.maxIdleConnsLocked() > db.freeConn.Len() {\n \t\tdc.listElem = db.freeConn.PushFront(dc)\n \t\treturn true\n \t}\n \treturn false\n }\n \n+// maxBadConnRetries is the number of maximum retries if the driver returns\n+// driver.ErrBadConn to signal a broken connection.\n+const maxBadConnRetries = 10\n+\n // Prepare creates a prepared statement for later queries or executions.\n // Multiple queries or executions may be run concurrently from the\n // returned statement.\n func (db *DB) Prepare(query string) (*Stmt, error) {\n \tvar stmt *Stmt\n \tvar err error\n-\tfor i := 0; i < 10; i++ {\n+\tfor i := 0; i < maxBadConnRetries; i++ {\n \t\tstmt, err = db.prepare(query)\n \t\tif err != driver.ErrBadConn {\n \t\t\tbreak\n@@ -846,7 +850,7 @@ func (db *DB) prepare(query string) (*Stmt, error) {\n func (db *DB) Exec(query string, args ...interface{}) (Result, error) {\n \tvar res Result\n \tvar err error\n-\tfor i := 0; i < 10; i++ {\n+\tfor i := 0; i < maxBadConnRetries; i++ {\n \t\tres, err = db.exec(query, args)\n \t\tif err != driver.ErrBadConn {\n \t\t\tbreak\n@@ -895,7 +899,7 @@ func (db *DB) exec(query string, args []interface{}) (res Result, err error) {\n func (db *DB) Query(query string, args ...interface{}) (*Rows, error) {\n \tvar rows *Rows\n \tvar err error\n-\tfor i := 0; i < 10; i++ {\n+\tfor i := 0; i < maxBadConnRetries; i++ {\n \t\trows, err = db.query(query, args)\n \t\tif err != driver.ErrBadConn {\n \t\t\tbreak\n@@ -983,7 +987,7 @@ func (db *DB) QueryRow(query string, args ...interface{}) *Row {\n func (db *DB) Begin() (*Tx, error) {\n \tvar tx *Tx\n \tvar err error\n-\tfor i := 0; i < 10; i++ {\n+\tfor i := 0; i < maxBadConnRetries; i++ {\n \t\ttx, err = db.begin()\n \t\tif err != driver.ErrBadConn {\n \t\t\tbreak\n@@ -1245,13 +1249,24 @@ type Stmt struct {\n func (s *Stmt) Exec(args ...interface{}) (Result, error) {\n \ts.closemu.RLock()\n \tdefer s.closemu.RUnlock()\n-\tdc, releaseConn, si, err := s.connStmt()\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n-\tdefer releaseConn(nil)\n \n-\treturn resultFromStatement(driverStmt{dc, si}, args...)\n+\tvar res Result\n+\tfor i := 0; i < maxBadConnRetries; i++ {\n+\t\tdc, releaseConn, si, err := s.connStmt()\n+\t\tif err != nil {\n+\t\t\tif err == driver.ErrBadConn {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\treturn nil, err\n+\t\t}\n+\n+\t\tres, err = resultFromStatement(driverStmt{dc, si}, args...)\n+\t\treleaseConn(err)\n+\t\tif err != driver.ErrBadConn {\n+\t\t\treturn res, err\n+\t\t}\n+\t}\n+\treturn nil, driver.ErrBadConn\n }\n \n func resultFromStatement(ds driverStmt, args ...interface{}) (Result, error) {\n@@ -1329,26 +1344,21 @@ func (s *Stmt) connStmt() (ci *driverConn, releaseConn func(error), si driver.St\n \t// Make a new conn if all are busy.\n \t// TODO(bradfitz): or wait for one? make configurable later?\n \tif !match {\n-\t\tfor i := 0; ; i++ {\n-\t\t\tdc, err := s.db.conn()\n-\t\t\tif err != nil {\n-\t\t\t\treturn nil, nil, nil, err\n-\t\t\t}\n-\t\t\tdc.Lock()\n-\t\t\tsi, err := dc.prepareLocked(s.query)\n-\t\t\tdc.Unlock()\n-\t\t\tif err == driver.ErrBadConn && i < 10 {\n-\t\t\t\tcontinue\n-\t\t\t}\n-\t\t\tif err != nil {\n-\t\t\t\treturn nil, nil, nil, err\n-\t\t\t}\n-\t\t\ts.mu.Lock()\n-\t\t\tcs = connStmt{dc, si}\n-\t\t\ts.css = append(s.css, cs)\n-\t\t\ts.mu.Unlock()\n-\t\t\tbreak\n+\t\tdc, err := s.db.conn()\n+\t\tif err != nil {\n+\t\t\treturn nil, nil, nil, err\n \t\t}\n+\t\tdc.Lock()\n+\t\tsi, err := dc.prepareLocked(s.query)\n+\t\tdc.Unlock()\n+\t\tif err != nil {\n+\t\t\ts.db.putConn(dc, err)\n+\t\t\treturn nil, nil, nil, err\n+\t\t}\n+\t\ts.mu.Lock()\n+\t\tcs = connStmt{dc, si}\n+\t\ts.css = append(s.css, cs)\n+\t\ts.mu.Unlock()\n \t}\n \n \tconn := cs.dc\n@@ -1361,31 +1371,39 @@ func (s *Stmt) Query(args ...interface{}) (*Rows, error) {\n \ts.closemu.RLock()\n \tdefer s.closemu.RUnlock()\n \n-\tdc, releaseConn, si, err := s.connStmt()\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n+\tvar rowsi driver.Rows\n+\tfor i := 0; i < maxBadConnRetries; i++ {\n+\t\tdc, releaseConn, si, err := s.connStmt()\n+\t\tif err != nil {\n+\t\t\tif err == driver.ErrBadConn {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\treturn nil, err\n+\t\t}\n \n-\tds := driverStmt{dc, si}\n-\trowsi, err := rowsiFromStatement(ds, args...)\n-\tif err != nil {\n-\t\treleaseConn(err)\n-\t\treturn nil, err\n-\t}\n+\t\trowsi, err = rowsiFromStatement(driverStmt{dc, si}, args...)\n+\t\tif err == nil {\n+\t\t\t// Note: ownership of ci passes to the *Rows, to be freed\n+\t\t\t// with releaseConn.\n+\t\t\trows := &Rows{\n+\t\t\t\tdc:    dc,\n+\t\t\t\trowsi: rowsi,\n+\t\t\t\t// releaseConn set below\n+\t\t\t}\n+\t\t\ts.db.addDep(s, rows)\n+\t\t\trows.releaseConn = func(err error) {\n+\t\t\t\treleaseConn(err)\n+\t\t\t\ts.db.removeDep(s, rows)\n+\t\t\t}\n+\t\t\treturn rows, nil\n+\t\t}\n \n-\t// Note: ownership of ci passes to the *Rows, to be freed\n-\t// with releaseConn.\n-\trows := &Rows{\n-\t\tdc:    dc,\n-\t\trowsi: rowsi,\n-\t\t// releaseConn set below\n-\t}\n-\ts.db.addDep(s, rows)\n-\trows.releaseConn = func(err error) {\n \t\treleaseConn(err)\n-\t\ts.db.removeDep(s, rows)\n+\t\tif err != driver.ErrBadConn {\n+\t\t\treturn nil, err\n+\t\t}\n \t}\n-\treturn rows, nil\n+\treturn nil, driver.ErrBadConn\n }\n \n func rowsiFromStatement(ds driverStmt, args ...interface{}) (driver.Rows, error) {\n@@ -1495,10 +1513,12 @@ type Rows struct {\n \tcloseStmt driver.Stmt // if non-nil, statement to Close on close\n }\n \n-// Next prepares the next result row for reading with the Scan method.\n-// It returns true on success, false if there is no next result row.\n-// Every call to Scan, even the first one, must be preceded by a call\n-// to Next.\n+// Next prepares the next result row for reading with the Scan method.  It\n+// returns true on success, or false if there is no next result row or an error\n+// happened while preparing it.  Err should be consulted to distinguish between\n+// the two cases.\n+//\n+// Every call to Scan, even the first one, must be preceded by a call to Next.\n func (rs *Rows) Next() bool {\n \tif rs.closed {\n \t\treturn false\n@@ -1625,12 +1645,19 @@ func (r *Row) Scan(dest ...interface{}) error {\n \t}\n \n \tif !r.rows.Next() {\n+\t\tif err := r.rows.Err(); err != nil {\n+\t\t\treturn err\n+\t\t}\n \t\treturn ErrNoRows\n \t}\n \terr := r.rows.Scan(dest...)\n \tif err != nil {\n \t\treturn err\n \t}\n+\t// Make sure the query can be processed to completion with no errors.\n+\tif err := r.rows.Close(); err != nil {\n+\t\treturn err\n+\t}\n \n \treturn nil\n }"}, {"sha": "a0a20df6f83600d757ee4e6e0ad37072907fc2a9", "filename": "libgo/go/database/sql/sql_test.go", "status": "modified", "additions": 134, "deletions": 1, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdatabase%2Fsql%2Fsql_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -348,7 +348,6 @@ func TestStatementQueryRow(t *testing.T) {\n \t\t\tt.Errorf(\"%d: age=%d, want %d\", n, age, tt.want)\n \t\t}\n \t}\n-\n }\n \n // golang.org/issue/3734\n@@ -660,6 +659,35 @@ func TestQueryRowClosingStmt(t *testing.T) {\n \t}\n }\n \n+// Test issue 6651\n+func TestIssue6651(t *testing.T) {\n+\tdb := newTestDB(t, \"people\")\n+\tdefer closeDB(t, db)\n+\n+\tvar v string\n+\n+\twant := \"error in rows.Next\"\n+\trowsCursorNextHook = func(dest []driver.Value) error {\n+\t\treturn fmt.Errorf(want)\n+\t}\n+\tdefer func() { rowsCursorNextHook = nil }()\n+\terr := db.QueryRow(\"SELECT|people|name|\").Scan(&v)\n+\tif err == nil || err.Error() != want {\n+\t\tt.Errorf(\"error = %q; want %q\", err, want)\n+\t}\n+\trowsCursorNextHook = nil\n+\n+\twant = \"error in rows.Close\"\n+\trowsCloseHook = func(rows *Rows, err *error) {\n+\t\t*err = fmt.Errorf(want)\n+\t}\n+\tdefer func() { rowsCloseHook = nil }()\n+\terr = db.QueryRow(\"SELECT|people|name|\").Scan(&v)\n+\tif err == nil || err.Error() != want {\n+\t\tt.Errorf(\"error = %q; want %q\", err, want)\n+\t}\n+}\n+\n type nullTestRow struct {\n \tnullParam    interface{}\n \tnotNullParam interface{}\n@@ -1249,6 +1277,111 @@ func TestStmtCloseOrder(t *testing.T) {\n \t}\n }\n \n+// golang.org/issue/5781\n+func TestErrBadConnReconnect(t *testing.T) {\n+\tdb := newTestDB(t, \"foo\")\n+\tdefer closeDB(t, db)\n+\texec(t, db, \"CREATE|t1|name=string,age=int32,dead=bool\")\n+\n+\tsimulateBadConn := func(name string, hook *func() bool, op func() error) {\n+\t\tbroken, retried := false, false\n+\t\tnumOpen := db.numOpen\n+\n+\t\t// simulate a broken connection on the first try\n+\t\t*hook = func() bool {\n+\t\t\tif !broken {\n+\t\t\t\tbroken = true\n+\t\t\t\treturn true\n+\t\t\t}\n+\t\t\tretried = true\n+\t\t\treturn false\n+\t\t}\n+\n+\t\tif err := op(); err != nil {\n+\t\t\tt.Errorf(name+\": %v\", err)\n+\t\t\treturn\n+\t\t}\n+\n+\t\tif !broken || !retried {\n+\t\t\tt.Error(name + \": Failed to simulate broken connection\")\n+\t\t}\n+\t\t*hook = nil\n+\n+\t\tif numOpen != db.numOpen {\n+\t\t\tt.Errorf(name+\": leaked %d connection(s)!\", db.numOpen-numOpen)\n+\t\t\tnumOpen = db.numOpen\n+\t\t}\n+\t}\n+\n+\t// db.Exec\n+\tdbExec := func() error {\n+\t\t_, err := db.Exec(\"INSERT|t1|name=?,age=?,dead=?\", \"Gordon\", 3, true)\n+\t\treturn err\n+\t}\n+\tsimulateBadConn(\"db.Exec prepare\", &hookPrepareBadConn, dbExec)\n+\tsimulateBadConn(\"db.Exec exec\", &hookExecBadConn, dbExec)\n+\n+\t// db.Query\n+\tdbQuery := func() error {\n+\t\trows, err := db.Query(\"SELECT|t1|age,name|\")\n+\t\tif err == nil {\n+\t\t\terr = rows.Close()\n+\t\t}\n+\t\treturn err\n+\t}\n+\tsimulateBadConn(\"db.Query prepare\", &hookPrepareBadConn, dbQuery)\n+\tsimulateBadConn(\"db.Query query\", &hookQueryBadConn, dbQuery)\n+\n+\t// db.Prepare\n+\tsimulateBadConn(\"db.Prepare\", &hookPrepareBadConn, func() error {\n+\t\tstmt, err := db.Prepare(\"INSERT|t1|name=?,age=?,dead=?\")\n+\t\tif err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tstmt.Close()\n+\t\treturn nil\n+\t})\n+\n+\t// stmt.Exec\n+\tstmt1, err := db.Prepare(\"INSERT|t1|name=?,age=?,dead=?\")\n+\tif err != nil {\n+\t\tt.Fatalf(\"prepare: %v\", err)\n+\t}\n+\tdefer stmt1.Close()\n+\t// make sure we must prepare the stmt first\n+\tfor _, cs := range stmt1.css {\n+\t\tcs.dc.inUse = true\n+\t}\n+\n+\tstmtExec := func() error {\n+\t\t_, err := stmt1.Exec(\"Gopher\", 3, false)\n+\t\treturn err\n+\t}\n+\tsimulateBadConn(\"stmt.Exec prepare\", &hookPrepareBadConn, stmtExec)\n+\tsimulateBadConn(\"stmt.Exec exec\", &hookExecBadConn, stmtExec)\n+\n+\t// stmt.Query\n+\tstmt2, err := db.Prepare(\"SELECT|t1|age,name|\")\n+\tif err != nil {\n+\t\tt.Fatalf(\"prepare: %v\", err)\n+\t}\n+\tdefer stmt2.Close()\n+\t// make sure we must prepare the stmt first\n+\tfor _, cs := range stmt2.css {\n+\t\tcs.dc.inUse = true\n+\t}\n+\n+\tstmtQuery := func() error {\n+\t\trows, err := stmt2.Query()\n+\t\tif err == nil {\n+\t\t\terr = rows.Close()\n+\t\t}\n+\t\treturn err\n+\t}\n+\tsimulateBadConn(\"stmt.Query prepare\", &hookPrepareBadConn, stmtQuery)\n+\tsimulateBadConn(\"stmt.Query exec\", &hookQueryBadConn, stmtQuery)\n+}\n+\n type concurrentTest interface {\n \tinit(t testing.TB, db *DB)\n \tfinish(t testing.TB)"}, {"sha": "3338c411dc3f8ea59e600aa0481bcc418cdd2fd0", "filename": "libgo/go/debug/goobj/read.go", "status": "added", "additions": 605, "deletions": 0, "changes": 605, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,605 @@\n+// Copyright 2013 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Package goobj implements reading of Go object files and archives.\n+//\n+// TODO(rsc): Decide where this package should live. (golang.org/issue/6932)\n+// TODO(rsc): Decide the appropriate integer types for various fields.\n+// TODO(rsc): Write tests. (File format still up in the air a little.)\n+package goobj\n+\n+import (\n+\t\"bufio\"\n+\t\"bytes\"\n+\t\"errors\"\n+\t\"fmt\"\n+\t\"io\"\n+\t\"strconv\"\n+\t\"strings\"\n+)\n+\n+// A SymKind describes the kind of memory represented by a symbol.\n+type SymKind int\n+\n+// This list is taken from include/link.h.\n+\n+// Defined SymKind values.\n+// TODO(rsc): Give idiomatic Go names.\n+// TODO(rsc): Reduce the number of symbol types in the object files.\n+const (\n+\t_ SymKind = iota\n+\n+\t// readonly, executable\n+\tSTEXT\n+\tSELFRXSECT\n+\n+\t// readonly, non-executable\n+\tSTYPE\n+\tSSTRING\n+\tSGOSTRING\n+\tSGOFUNC\n+\tSRODATA\n+\tSFUNCTAB\n+\tSTYPELINK\n+\tSSYMTAB // TODO: move to unmapped section\n+\tSPCLNTAB\n+\tSELFROSECT\n+\n+\t// writable, non-executable\n+\tSMACHOPLT\n+\tSELFSECT\n+\tSMACHO // Mach-O __nl_symbol_ptr\n+\tSMACHOGOT\n+\tSNOPTRDATA\n+\tSINITARR\n+\tSDATA\n+\tSWINDOWS\n+\tSBSS\n+\tSNOPTRBSS\n+\tSTLSBSS\n+\n+\t// not mapped\n+\tSXREF\n+\tSMACHOSYMSTR\n+\tSMACHOSYMTAB\n+\tSMACHOINDIRECTPLT\n+\tSMACHOINDIRECTGOT\n+\tSFILE\n+\tSFILEPATH\n+\tSCONST\n+\tSDYNIMPORT\n+\tSHOSTOBJ\n+)\n+\n+// A Sym is a named symbol in an object file.\n+type Sym struct {\n+\tSymID         // symbol identifier (name and version)\n+\tKind  SymKind // kind of symbol\n+\tDupOK bool    // are duplicate definitions okay?\n+\tSize  int     // size of corresponding data\n+\tType  SymID   // symbol for Go type information\n+\tData  Data    // memory image of symbol\n+\tReloc []Reloc // relocations to apply to Data\n+\tFunc  *Func   // additional data for functions\n+}\n+\n+// A SymID - the combination of Name and Version - uniquely identifies\n+// a symbol within a package.\n+type SymID struct {\n+\t// Name is the name of a symbol.\n+\tName string\n+\n+\t// Version is zero for symbols with global visibility.\n+\t// Symbols with only file visibility (such as file-level static\n+\t// declarations in C) have a non-zero version distinguising\n+\t// a symbol in one file from a symbol of the same name\n+\t// in another file\n+\tVersion int\n+}\n+\n+// A Data is a reference to data stored in an object file.\n+// It records the offset and size of the data, so that a client can\n+// read the data only if necessary.\n+type Data struct {\n+\tOffset int64\n+\tSize   int64\n+}\n+\n+// A Reloc describes a relocation applied to a memory image to refer\n+// to an address within a particular symbol.\n+type Reloc struct {\n+\t// The bytes at [Offset, Offset+Size) within the memory image\n+\t// should be updated to refer to the address Add bytes after the start\n+\t// of the symbol Sym.\n+\tOffset int\n+\tSize   int\n+\tSym    SymID\n+\tAdd    int\n+\n+\t// The Type records the form of address expected in the bytes\n+\t// described by the previous fields: absolute, PC-relative, and so on.\n+\t// TODO(rsc): The interpretation of Type is not exposed by this package.\n+\tType int\n+}\n+\n+// A Var describes a variable in a function stack frame: a declared\n+// local variable, an input argument, or an output result.\n+type Var struct {\n+\t// The combination of Name, Kind, and Offset uniquely\n+\t// identifies a variable in a function stack frame.\n+\t// Using fewer of these - in particular, using only Name - does not.\n+\tName   string // Name of variable.\n+\tKind   int    // TODO(rsc): Define meaning.\n+\tOffset int    // Frame offset. TODO(rsc): Define meaning.\n+\n+\tType SymID // Go type for variable.\n+}\n+\n+// Func contains additional per-symbol information specific to functions.\n+type Func struct {\n+\tArgs     int        // size in bytes of of argument frame: inputs and outputs\n+\tFrame    int        // size in bytes of local variable frame\n+\tVar      []Var      // detail about local variables\n+\tPCSP     Data       // PC \u2192 SP offset map\n+\tPCFile   Data       // PC \u2192 file number map (index into File)\n+\tPCLine   Data       // PC \u2192 line number map\n+\tPCData   []Data     // PC \u2192 runtime support data map\n+\tFuncData []FuncData // non-PC-specific runtime support data\n+\tFile     []string   // paths indexed by PCFile\n+}\n+\n+// TODO: Add PCData []byte and PCDataIter (similar to liblink).\n+\n+// A FuncData is a single function-specific data value.\n+type FuncData struct {\n+\tSym    SymID // symbol holding data\n+\tOffset int64 // offset into symbol for funcdata pointer\n+}\n+\n+// A Package is a parsed Go object file or archive defining a Go package.\n+type Package struct {\n+\tImportPath string   // import path denoting this package\n+\tImports    []string // packages imported by this package\n+\tSyms       []*Sym   // symbols defined by this package\n+\tMaxVersion int      // maximum Version in any SymID in Syms\n+}\n+\n+var (\n+\tarchiveHeader = []byte(\"!<arch>\\n\")\n+\tarchiveMagic  = []byte(\"`\\n\")\n+\tgoobjHeader   = []byte(\"go objec\") // truncated to size of archiveHeader\n+\n+\terrCorruptArchive   = errors.New(\"corrupt archive\")\n+\terrTruncatedArchive = errors.New(\"truncated archive\")\n+\terrNotArchive       = errors.New(\"unrecognized archive format\")\n+\n+\terrCorruptObject   = errors.New(\"corrupt object file\")\n+\terrTruncatedObject = errors.New(\"truncated object file\")\n+\terrNotObject       = errors.New(\"unrecognized object file format\")\n+)\n+\n+// An objReader is an object file reader.\n+type objReader struct {\n+\tp         *Package\n+\tb         *bufio.Reader\n+\tf         io.ReadSeeker\n+\terr       error\n+\toffset    int64\n+\tlimit     int64\n+\ttmp       [256]byte\n+\tpkg       string\n+\tpkgprefix string\n+}\n+\n+// importPathToPrefix returns the prefix that will be used in the\n+// final symbol table for the given import path.\n+// We escape '%', '\"', all control characters and non-ASCII bytes,\n+// and any '.' after the final slash.\n+//\n+// See ../../../cmd/ld/lib.c:/^pathtoprefix and\n+// ../../../cmd/gc/subr.c:/^pathtoprefix.\n+func importPathToPrefix(s string) string {\n+\t// find index of last slash, if any, or else -1.\n+\t// used for determining whether an index is after the last slash.\n+\tslash := strings.LastIndex(s, \"/\")\n+\n+\t// check for chars that need escaping\n+\tn := 0\n+\tfor r := 0; r < len(s); r++ {\n+\t\tif c := s[r]; c <= ' ' || (c == '.' && r > slash) || c == '%' || c == '\"' || c >= 0x7F {\n+\t\t\tn++\n+\t\t}\n+\t}\n+\n+\t// quick exit\n+\tif n == 0 {\n+\t\treturn s\n+\t}\n+\n+\t// escape\n+\tconst hex = \"0123456789abcdef\"\n+\tp := make([]byte, 0, len(s)+2*n)\n+\tfor r := 0; r < len(s); r++ {\n+\t\tif c := s[r]; c <= ' ' || (c == '.' && r > slash) || c == '%' || c == '\"' || c >= 0x7F {\n+\t\t\tp = append(p, '%', hex[c>>4], hex[c&0xF])\n+\t\t} else {\n+\t\t\tp = append(p, c)\n+\t\t}\n+\t}\n+\n+\treturn string(p)\n+}\n+\n+// init initializes r to read package p from f.\n+func (r *objReader) init(f io.ReadSeeker, p *Package) {\n+\tr.f = f\n+\tr.p = p\n+\tr.offset, _ = f.Seek(0, 1)\n+\tr.limit, _ = f.Seek(0, 2)\n+\tf.Seek(r.offset, 0)\n+\tr.b = bufio.NewReader(f)\n+\tr.pkgprefix = importPathToPrefix(p.ImportPath) + \".\"\n+}\n+\n+// error records that an error occurred.\n+// It returns only the first error, so that an error\n+// caused by an earlier error does not discard information\n+// about the earlier error.\n+func (r *objReader) error(err error) error {\n+\tif r.err == nil {\n+\t\tif err == io.EOF {\n+\t\t\terr = io.ErrUnexpectedEOF\n+\t\t}\n+\t\tr.err = err\n+\t}\n+\t// panic(\"corrupt\") // useful for debugging\n+\treturn r.err\n+}\n+\n+// readByte reads and returns a byte from the input file.\n+// On I/O error or EOF, it records the error but returns byte 0.\n+// A sequence of 0 bytes will eventually terminate any\n+// parsing state in the object file. In particular, it ends the\n+// reading of a varint.\n+func (r *objReader) readByte() byte {\n+\tif r.err != nil {\n+\t\treturn 0\n+\t}\n+\tif r.offset >= r.limit {\n+\t\tr.error(io.ErrUnexpectedEOF)\n+\t\treturn 0\n+\t}\n+\tb, err := r.b.ReadByte()\n+\tif err != nil {\n+\t\tif err == io.EOF {\n+\t\t\terr = io.ErrUnexpectedEOF\n+\t\t}\n+\t\tr.error(err)\n+\t\tb = 0\n+\t} else {\n+\t\tr.offset++\n+\t}\n+\treturn b\n+}\n+\n+// read reads exactly len(b) bytes from the input file.\n+// If an error occurs, read returns the error but also\n+// records it, so it is safe for callers to ignore the result\n+// as long as delaying the report is not a problem.\n+func (r *objReader) readFull(b []byte) error {\n+\tif r.err != nil {\n+\t\treturn r.err\n+\t}\n+\tif r.offset+int64(len(b)) > r.limit {\n+\t\treturn r.error(io.ErrUnexpectedEOF)\n+\t}\n+\tn, err := io.ReadFull(r.b, b)\n+\tr.offset += int64(n)\n+\tif err != nil {\n+\t\treturn r.error(err)\n+\t}\n+\treturn nil\n+}\n+\n+// readInt reads a zigzag varint from the input file.\n+func (r *objReader) readInt() int {\n+\tvar u uint64\n+\n+\tfor shift := uint(0); ; shift += 7 {\n+\t\tif shift >= 64 {\n+\t\t\tr.error(errCorruptObject)\n+\t\t\treturn 0\n+\t\t}\n+\t\tc := r.readByte()\n+\t\tu |= uint64(c&0x7F) << shift\n+\t\tif c&0x80 == 0 {\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\n+\tv := int64(u>>1) ^ (int64(u) << 63 >> 63)\n+\tif int64(int(v)) != v {\n+\t\tr.error(errCorruptObject) // TODO\n+\t\treturn 0\n+\t}\n+\treturn int(v)\n+}\n+\n+// readString reads a length-delimited string from the input file.\n+func (r *objReader) readString() string {\n+\tn := r.readInt()\n+\tbuf := make([]byte, n)\n+\tr.readFull(buf)\n+\treturn string(buf)\n+}\n+\n+// readSymID reads a SymID from the input file.\n+func (r *objReader) readSymID() SymID {\n+\tname, vers := r.readString(), r.readInt()\n+\n+\t// In a symbol name in an object file, \"\". denotes the\n+\t// prefix for the package in which the object file has been found.\n+\t// Expand it.\n+\tname = strings.Replace(name, `\"\".`, r.pkgprefix, -1)\n+\n+\t// An individual object file only records version 0 (extern) or 1 (static).\n+\t// To make static symbols unique across all files being read, we\n+\t// replace version 1 with the version corresponding to the current\n+\t// file number. The number is incremented on each call to parseObject.\n+\tif vers != 0 {\n+\t\tvers = r.p.MaxVersion\n+\t}\n+\n+\treturn SymID{name, vers}\n+}\n+\n+// readData reads a data reference from the input file.\n+func (r *objReader) readData() Data {\n+\tn := r.readInt()\n+\td := Data{Offset: r.offset, Size: int64(n)}\n+\tr.skip(int64(n))\n+\treturn d\n+}\n+\n+// skip skips n bytes in the input.\n+func (r *objReader) skip(n int64) {\n+\tif n < 0 {\n+\t\tr.error(fmt.Errorf(\"debug/goobj: internal error: misuse of skip\"))\n+\t}\n+\tif n < int64(len(r.tmp)) {\n+\t\t// Since the data is so small, a just reading from the buffered\n+\t\t// reader is better than flushing the buffer and seeking.\n+\t\tr.readFull(r.tmp[:n])\n+\t} else if n <= int64(r.b.Buffered()) {\n+\t\t// Even though the data is not small, it has already been read.\n+\t\t// Advance the buffer instead of seeking.\n+\t\tfor n > int64(len(r.tmp)) {\n+\t\t\tr.readFull(r.tmp[:])\n+\t\t\tn -= int64(len(r.tmp))\n+\t\t}\n+\t\tr.readFull(r.tmp[:n])\n+\t} else {\n+\t\t// Seek, giving up buffered data.\n+\t\t_, err := r.f.Seek(r.offset+n, 0)\n+\t\tif err != nil {\n+\t\t\tr.error(err)\n+\t\t}\n+\t\tr.offset += n\n+\t\tr.b.Reset(r.f)\n+\t}\n+}\n+\n+// Parse parses an object file or archive from r,\n+// assuming that its import path is pkgpath.\n+func Parse(r io.ReadSeeker, pkgpath string) (*Package, error) {\n+\tif pkgpath == \"\" {\n+\t\tpkgpath = `\"\"`\n+\t}\n+\tp := new(Package)\n+\tp.ImportPath = pkgpath\n+\n+\tvar rd objReader\n+\trd.init(r, p)\n+\terr := rd.readFull(rd.tmp[:8])\n+\tif err != nil {\n+\t\tif err == io.EOF {\n+\t\t\terr = io.ErrUnexpectedEOF\n+\t\t}\n+\t\treturn nil, err\n+\t}\n+\n+\tswitch {\n+\tdefault:\n+\t\treturn nil, errNotObject\n+\n+\tcase bytes.Equal(rd.tmp[:8], archiveHeader):\n+\t\tif err := rd.parseArchive(); err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\tcase bytes.Equal(rd.tmp[:8], goobjHeader):\n+\t\tif err := rd.parseObject(goobjHeader); err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\t}\n+\n+\treturn p, nil\n+}\n+\n+// trimSpace removes trailing spaces from b and returns the corresponding string.\n+// This effectively parses the form used in archive headers.\n+func trimSpace(b []byte) string {\n+\treturn string(bytes.TrimRight(b, \" \"))\n+}\n+\n+// parseArchive parses a Unix archive of Go object files.\n+// TODO(rsc): Need to skip non-Go object files.\n+// TODO(rsc): Maybe record table of contents in r.p so that\n+// linker can avoid having code to parse archives too.\n+func (r *objReader) parseArchive() error {\n+\tfor r.offset < r.limit {\n+\t\tif err := r.readFull(r.tmp[:60]); err != nil {\n+\t\t\treturn err\n+\t\t}\n+\t\tdata := r.tmp[:60]\n+\n+\t\t// Each file is preceded by this text header (slice indices in first column):\n+\t\t//\t 0:16\tname\n+\t\t//\t16:28 date\n+\t\t//\t28:34 uid\n+\t\t//\t34:40 gid\n+\t\t//\t40:48 mode\n+\t\t//\t48:58 size\n+\t\t//\t58:60 magic - `\\n\n+\t\t// We only care about name, size, and magic.\n+\t\t// The fields are space-padded on the right.\n+\t\t// The size is in decimal.\n+\t\t// The file data - size bytes - follows the header.\n+\t\t// Headers are 2-byte aligned, so if size is odd, an extra padding\n+\t\t// byte sits between the file data and the next header.\n+\t\t// The file data that follows is padded to an even number of bytes:\n+\t\t// if size is odd, an extra padding byte is inserted betw the next header.\n+\t\tif len(data) < 60 {\n+\t\t\treturn errTruncatedArchive\n+\t\t}\n+\t\tif !bytes.Equal(data[58:60], archiveMagic) {\n+\t\t\treturn errCorruptArchive\n+\t\t}\n+\t\tname := trimSpace(data[0:16])\n+\t\tsize, err := strconv.ParseInt(trimSpace(data[48:58]), 10, 64)\n+\t\tif err != nil {\n+\t\t\treturn errCorruptArchive\n+\t\t}\n+\t\tdata = data[60:]\n+\t\tfsize := size + size&1\n+\t\tif fsize < 0 || fsize < size {\n+\t\t\treturn errCorruptArchive\n+\t\t}\n+\t\tswitch name {\n+\t\tcase \"__.SYMDEF\", \"__.GOSYMDEF\", \"__.PKGDEF\":\n+\t\t\tr.skip(size)\n+\t\tdefault:\n+\t\t\toldLimit := r.limit\n+\t\t\tr.limit = r.offset + size\n+\t\t\tif err := r.parseObject(nil); err != nil {\n+\t\t\t\treturn fmt.Errorf(\"parsing archive member %q: %v\", name, err)\n+\t\t\t}\n+\t\t\tr.skip(r.limit - r.offset)\n+\t\t\tr.limit = oldLimit\n+\t\t}\n+\t\tif size&1 != 0 {\n+\t\t\tr.skip(1)\n+\t\t}\n+\t}\n+\treturn nil\n+}\n+\n+// parseObject parses a single Go object file.\n+// The prefix is the bytes already read from the file,\n+// typically in order to detect that this is an object file.\n+// The object file consists of a textual header ending in \"\\n!\\n\"\n+// and then the part we want to parse begins.\n+// The format of that part is defined in a comment at the top\n+// of src/liblink/objfile.c.\n+func (r *objReader) parseObject(prefix []byte) error {\n+\t// TODO(rsc): Maybe use prefix and the initial input to\n+\t// record the header line from the file, which would\n+\t// give the architecture and other version information.\n+\n+\tr.p.MaxVersion++\n+\tvar c1, c2, c3 byte\n+\tfor {\n+\t\tc1, c2, c3 = c2, c3, r.readByte()\n+\t\tif c3 == 0 { // NUL or EOF, either is bad\n+\t\t\treturn errCorruptObject\n+\t\t}\n+\t\tif c1 == '\\n' && c2 == '!' && c3 == '\\n' {\n+\t\t\tbreak\n+\t\t}\n+\t}\n+\n+\tr.readFull(r.tmp[:8])\n+\tif !bytes.Equal(r.tmp[:8], []byte(\"\\x00\\x00go13ld\")) {\n+\t\treturn r.error(errCorruptObject)\n+\t}\n+\n+\t// Direct package dependencies.\n+\tfor {\n+\t\ts := r.readString()\n+\t\tif s == \"\" {\n+\t\t\tbreak\n+\t\t}\n+\t\tr.p.Imports = append(r.p.Imports, s)\n+\t}\n+\n+\t// Symbols.\n+\tfor {\n+\t\tif b := r.readByte(); b != 0xfe {\n+\t\t\tif b != 0xff {\n+\t\t\t\treturn r.error(errCorruptObject)\n+\t\t\t}\n+\t\t\tbreak\n+\t\t}\n+\n+\t\ttyp := r.readInt()\n+\t\ts := &Sym{SymID: r.readSymID()}\n+\t\tr.p.Syms = append(r.p.Syms, s)\n+\t\ts.Kind = SymKind(typ)\n+\t\ts.DupOK = r.readInt() != 0\n+\t\ts.Size = r.readInt()\n+\t\ts.Type = r.readSymID()\n+\t\ts.Data = r.readData()\n+\t\ts.Reloc = make([]Reloc, r.readInt())\n+\t\tfor i := range s.Reloc {\n+\t\t\trel := &s.Reloc[i]\n+\t\t\trel.Offset = r.readInt()\n+\t\t\trel.Size = r.readInt()\n+\t\t\trel.Type = r.readInt()\n+\t\t\trel.Add = r.readInt()\n+\t\t\tr.readInt() // Xadd - ignored\n+\t\t\trel.Sym = r.readSymID()\n+\t\t\tr.readSymID() // Xsym - ignored\n+\t\t}\n+\n+\t\tif s.Kind == STEXT {\n+\t\t\tf := new(Func)\n+\t\t\ts.Func = f\n+\t\t\tf.Args = r.readInt()\n+\t\t\tf.Frame = r.readInt()\n+\t\t\tf.Var = make([]Var, r.readInt())\n+\t\t\tfor i := range f.Var {\n+\t\t\t\tv := &f.Var[i]\n+\t\t\t\tv.Name = r.readSymID().Name\n+\t\t\t\tv.Offset = r.readInt()\n+\t\t\t\tv.Kind = r.readInt()\n+\t\t\t\tv.Type = r.readSymID()\n+\t\t\t}\n+\n+\t\t\tf.PCSP = r.readData()\n+\t\t\tf.PCFile = r.readData()\n+\t\t\tf.PCLine = r.readData()\n+\t\t\tf.PCData = make([]Data, r.readInt())\n+\t\t\tfor i := range f.PCData {\n+\t\t\t\tf.PCData[i] = r.readData()\n+\t\t\t}\n+\t\t\tf.FuncData = make([]FuncData, r.readInt())\n+\t\t\tfor i := range f.FuncData {\n+\t\t\t\tf.FuncData[i].Sym = r.readSymID()\n+\t\t\t}\n+\t\t\tfor i := range f.FuncData {\n+\t\t\t\tf.FuncData[i].Offset = int64(r.readInt()) // TODO\n+\t\t\t}\n+\t\t\tf.File = make([]string, r.readInt())\n+\t\t\tfor i := range f.File {\n+\t\t\t\tf.File[i] = r.readSymID().Name\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tr.readFull(r.tmp[:7])\n+\tif !bytes.Equal(r.tmp[:7], []byte(\"\\xffgo13ld\")) {\n+\t\treturn r.error(errCorruptObject)\n+\t}\n+\n+\treturn nil\n+}"}, {"sha": "dee140533c996c8bb232e786671eb96c0d4aaeff", "filename": "libgo/go/debug/goobj/read_test.go", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Fgoobj%2Fread_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2013 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package goobj\n+\n+import \"testing\"\n+\n+var importPathToPrefixTests = []struct {\n+\tin  string\n+\tout string\n+}{\n+\t{\"runtime\", \"runtime\"},\n+\t{\"sync/atomic\", \"sync/atomic\"},\n+\t{\"code.google.com/p/go.tools/godoc\", \"code.google.com/p/go.tools/godoc\"},\n+\t{\"foo.bar/baz.quux\", \"foo.bar/baz%2equux\"},\n+\t{\"\", \"\"},\n+\t{\"%foo%bar\", \"%25foo%25bar\"},\n+\t{\"\\x01\\x00\\x7F\u263a\", \"%01%00%7f%e2%98%ba\"},\n+}\n+\n+func TestImportPathToPrefix(t *testing.T) {\n+\tfor _, tt := range importPathToPrefixTests {\n+\t\tif out := importPathToPrefix(tt.in); out != tt.out {\n+\t\t\tt.Errorf(\"importPathToPrefix(%q) = %q, want %q\", tt.in, out, tt.out)\n+\t\t}\n+\t}\n+}"}, {"sha": "dc1134dccd63713c88633370e4361b306edd076a", "filename": "libgo/go/encoding/ascii85/ascii85_test.go", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fascii85%2Fascii85_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fascii85%2Fascii85_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fascii85%2Fascii85_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -16,6 +16,11 @@ type testpair struct {\n }\n \n var pairs = []testpair{\n+\t// Encode returns 0 when len(src) is 0\n+\t{\n+\t\t\"\",\n+\t\t\"\",\n+\t},\n \t// Wikipedia example\n \t{\n \t\t\"Man is distinguished, not only by his reason, but by this singular passion from \" +"}, {"sha": "dfcbf920d0afcd34783582fb4be4b9326552e81d", "filename": "libgo/go/encoding/asn1/asn1.go", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -451,11 +451,13 @@ func parseSequenceOf(bytes []byte, sliceType reflect.Type, elemType reflect.Type\n \t\tif err != nil {\n \t\t\treturn\n \t\t}\n-\t\t// We pretend that GENERAL STRINGs are PRINTABLE STRINGs so\n-\t\t// that a sequence of them can be parsed into a []string.\n-\t\tif t.tag == tagGeneralString {\n+\t\t// We pretend that various other string types are PRINTABLE STRINGs\n+\t\t// so that a sequence of them can be parsed into a []string.\n+\t\tswitch t.tag {\n+\t\tcase tagIA5String, tagGeneralString, tagT61String, tagUTF8String:\n \t\t\tt.tag = tagPrintableString\n \t\t}\n+\n \t\tif t.class != classUniversal || t.isCompound != compoundType || t.tag != expectedTag {\n \t\t\terr = StructuralError{\"sequence tag mismatch\"}\n \t\t\treturn"}, {"sha": "ea98e023faf20badfec5caa5f0cc2f8411f5957d", "filename": "libgo/go/encoding/asn1/asn1_test.go", "status": "modified", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fasn1%2Fasn1_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -6,6 +6,7 @@ package asn1\n \n import (\n \t\"bytes\"\n+\t\"fmt\"\n \t\"math/big\"\n \t\"reflect\"\n \t\"testing\"\n@@ -171,6 +172,12 @@ func TestBitStringAt(t *testing.T) {\n \tif bs.At(9) != 1 {\n \t\tt.Error(\"#4: Failed\")\n \t}\n+\tif bs.At(-1) != 0 {\n+\t\tt.Error(\"#5: Failed\")\n+\t}\n+\tif bs.At(17) != 0 {\n+\t\tt.Error(\"#6: Failed\")\n+\t}\n }\n \n type bitStringRightAlignTest struct {\n@@ -238,6 +245,7 @@ var utcTestData = []timeTest{\n \t{\"910506164540+0730\", true, time.Date(1991, 05, 06, 16, 45, 40, 0, time.FixedZone(\"\", 7*60*60+30*60))},\n \t{\"910506234540Z\", true, time.Date(1991, 05, 06, 23, 45, 40, 0, time.UTC)},\n \t{\"9105062345Z\", true, time.Date(1991, 05, 06, 23, 45, 0, 0, time.UTC)},\n+\t{\"5105062345Z\", true, time.Date(1951, 05, 06, 23, 45, 0, 0, time.UTC)},\n \t{\"a10506234540Z\", false, time.Time{}},\n \t{\"91a506234540Z\", false, time.Time{}},\n \t{\"9105a6234540Z\", false, time.Time{}},\n@@ -509,6 +517,38 @@ func TestRawStructs(t *testing.T) {\n \t}\n }\n \n+type oiEqualTest struct {\n+\tfirst  ObjectIdentifier\n+\tsecond ObjectIdentifier\n+\tsame   bool\n+}\n+\n+var oiEqualTests = []oiEqualTest{\n+\t{\n+\t\tObjectIdentifier{1, 2, 3},\n+\t\tObjectIdentifier{1, 2, 3},\n+\t\ttrue,\n+\t},\n+\t{\n+\t\tObjectIdentifier{1},\n+\t\tObjectIdentifier{1, 2, 3},\n+\t\tfalse,\n+\t},\n+\t{\n+\t\tObjectIdentifier{1, 2, 3},\n+\t\tObjectIdentifier{10, 11, 12},\n+\t\tfalse,\n+\t},\n+}\n+\n+func TestObjectIdentifierEqual(t *testing.T) {\n+\tfor _, o := range oiEqualTests {\n+\t\tif s := o.first.Equal(o.second); s != o.same {\n+\t\t\tt.Errorf(\"ObjectIdentifier.Equal: got: %t want: %t\", s, o.same)\n+\t\t}\n+\t}\n+}\n+\n var derEncodedSelfSignedCert = Certificate{\n \tTBSCertificate: TBSCertificate{\n \t\tVersion:            0,\n@@ -737,3 +777,29 @@ var derEncodedPaypalNULCertBytes = []byte{\n \t0xc8, 0x64, 0x8c, 0xb5, 0x50, 0x23, 0x82, 0x6f, 0xdb, 0xb8, 0x22, 0x1c, 0x43,\n \t0x96, 0x07, 0xa8, 0xbb,\n }\n+\n+var stringSliceTestData = [][]string{\n+\t{\"foo\", \"bar\"},\n+\t{\"foo\", \"\\\\bar\"},\n+\t{\"foo\", \"\\\"bar\\\"\"},\n+\t{\"foo\", \"\u00e5\u00e4\u00f6\"},\n+}\n+\n+func TestStringSlice(t *testing.T) {\n+\tfor _, test := range stringSliceTestData {\n+\t\tbs, err := Marshal(test)\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t}\n+\n+\t\tvar res []string\n+\t\t_, err = Unmarshal(bs, &res)\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t}\n+\n+\t\tif fmt.Sprintf(\"%v\", res) != fmt.Sprintf(\"%v\", test) {\n+\t\t\tt.Errorf(\"incorrect marshal/unmarshal; %v != %v\", res, test)\n+\t\t}\n+\t}\n+}"}, {"sha": "d9432954ac9d6ec7e92c547971d2f5e5e1593dd0", "filename": "libgo/go/encoding/csv/reader.go", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fcsv%2Freader.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fcsv%2Freader.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fcsv%2Freader.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -193,12 +193,6 @@ func (r *Reader) readRune() (rune, error) {\n \treturn r1, err\n }\n \n-// unreadRune puts the last rune read from r back.\n-func (r *Reader) unreadRune() {\n-\tr.r.UnreadRune()\n-\tr.column--\n-}\n-\n // skip reads runes up to and including the rune delim or until error.\n func (r *Reader) skip(delim rune) error {\n \tfor {"}, {"sha": "22b740c0745297edf0db0da8f9561846b04e7276", "filename": "libgo/go/encoding/csv/writer_test.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fcsv%2Fwriter_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fcsv%2Fwriter_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fcsv%2Fwriter_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -26,6 +26,8 @@ var writeTests = []struct {\n \t{Input: [][]string{{\"abc\"}, {\"def\"}}, Output: \"abc\\ndef\\n\"},\n \t{Input: [][]string{{\"abc\\ndef\"}}, Output: \"\\\"abc\\ndef\\\"\\n\"},\n \t{Input: [][]string{{\"abc\\ndef\"}}, Output: \"\\\"abc\\r\\ndef\\\"\\r\\n\", UseCRLF: true},\n+\t{Input: [][]string{{\"abc\\rdef\"}}, Output: \"\\\"abcdef\\\"\\r\\n\", UseCRLF: true},\n+\t{Input: [][]string{{\"abc\\rdef\"}}, Output: \"\\\"abc\\rdef\\\"\\n\", UseCRLF: false},\n }\n \n func TestWrite(t *testing.T) {"}, {"sha": "3037a581b3a001ab7c46b5b07374fd965a9254fc", "filename": "libgo/go/encoding/gob/decode.go", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fgob%2Fdecode.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fgob%2Fdecode.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fgob%2Fdecode.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -654,21 +654,20 @@ func (dec *Decoder) ignoreMap(state *decoderState, keyOp, elemOp decOp) {\n \n // decodeSlice decodes a slice and stores the slice header through p.\n // Slices are encoded as an unsigned length followed by the elements.\n-func (dec *Decoder) decodeSlice(atyp reflect.Type, state *decoderState, p uintptr, elemOp decOp, elemWid uintptr, indir, elemIndir int, ovfl error) {\n+func (dec *Decoder) decodeSlice(atyp reflect.Type, state *decoderState, p unsafe.Pointer, elemOp decOp, elemWid uintptr, indir, elemIndir int, ovfl error) {\n \tnr := state.decodeUint()\n \tn := int(nr)\n \tif indir > 0 {\n-\t\tup := unsafe.Pointer(p)\n-\t\tif *(*unsafe.Pointer)(up) == nil {\n+\t\tif *(*unsafe.Pointer)(p) == nil {\n \t\t\t// Allocate the slice header.\n-\t\t\t*(*unsafe.Pointer)(up) = unsafe.Pointer(new([]unsafe.Pointer))\n+\t\t\t*(*unsafe.Pointer)(p) = unsafe.Pointer(new([]unsafe.Pointer))\n \t\t}\n-\t\tp = *(*uintptr)(up)\n+\t\tp = *(*unsafe.Pointer)(p)\n \t}\n \t// Allocate storage for the slice elements, that is, the underlying array,\n \t// if the existing slice does not have the capacity.\n \t// Always write a header at p.\n-\thdrp := (*reflect.SliceHeader)(unsafe.Pointer(p))\n+\thdrp := (*reflect.SliceHeader)(p)\n \tif hdrp.Cap < n {\n \t\thdrp.Data = reflect.MakeSlice(atyp, n, n).Pointer()\n \t\thdrp.Cap = n\n@@ -887,7 +886,7 @@ func (dec *Decoder) decOpFor(wireId typeId, rt reflect.Type, name string, inProg\n \t\t\telemOp, elemIndir := dec.decOpFor(elemId, t.Elem(), name, inProgress)\n \t\t\tovfl := overflow(name)\n \t\t\top = func(i *decInstr, state *decoderState, p unsafe.Pointer) {\n-\t\t\t\tstate.dec.decodeSlice(t, state, uintptr(p), *elemOp, t.Elem().Size(), i.indir, elemIndir, ovfl)\n+\t\t\t\tstate.dec.decodeSlice(t, state, p, *elemOp, t.Elem().Size(), i.indir, elemIndir, ovfl)\n \t\t\t}\n \n \t\tcase reflect.Struct:"}, {"sha": "b969636cd5e6a330df08f03964f06df2fb1024db", "filename": "libgo/go/encoding/hex/hex_test.go", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fhex%2Fhex_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fhex%2Fhex_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fhex%2Fhex_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -38,7 +38,10 @@ func TestEncode(t *testing.T) {\n }\n \n func TestDecode(t *testing.T) {\n-\tfor i, test := range encDecTests {\n+\t// Case for decoding uppercase hex characters, since\n+\t// Encode always uses lowercase.\n+\tdecTests := append(encDecTests, encDecTest{\"F8F9FAFBFCFDFEFF\", []byte{0xf8, 0xf9, 0xfa, 0xfb, 0xfc, 0xfd, 0xfe, 0xff}})\n+\tfor i, test := range decTests {\n \t\tdst := make([]byte, DecodedLen(len(test.enc)))\n \t\tn, err := Decode(dst, []byte(test.enc))\n \t\tif err != nil {\n@@ -79,6 +82,7 @@ type errTest struct {\n var errTests = []errTest{\n \t{\"0\", \"encoding/hex: odd length hex string\"},\n \t{\"0g\", \"encoding/hex: invalid byte: U+0067 'g'\"},\n+\t{\"00gg\", \"encoding/hex: invalid byte: U+0067 'g'\"},\n \t{\"0\\x01\", \"encoding/hex: invalid byte: U+0001\"},\n }\n "}, {"sha": "dde0d78e327380724270cab3e8b8a45ae7e1339c", "filename": "libgo/go/encoding/json/decode.go", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fdecode.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fdecode.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fdecode.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -8,14 +8,14 @@\n package json\n \n import (\n+\t\"bytes\"\n \t\"encoding\"\n \t\"encoding/base64\"\n \t\"errors\"\n \t\"fmt\"\n \t\"reflect\"\n \t\"runtime\"\n \t\"strconv\"\n-\t\"strings\"\n \t\"unicode\"\n \t\"unicode/utf16\"\n \t\"unicode/utf8\"\n@@ -500,11 +500,11 @@ func (d *decodeState) object(v reflect.Value) {\n \t\t\td.error(errPhase)\n \t\t}\n \n-\t\t// Read string key.\n+\t\t// Read key.\n \t\tstart := d.off - 1\n \t\top = d.scanWhile(scanContinue)\n \t\titem := d.data[start : d.off-1]\n-\t\tkey, ok := unquote(item)\n+\t\tkey, ok := unquoteBytes(item)\n \t\tif !ok {\n \t\t\td.error(errPhase)\n \t\t}\n@@ -526,11 +526,11 @@ func (d *decodeState) object(v reflect.Value) {\n \t\t\tfields := cachedTypeFields(v.Type())\n \t\t\tfor i := range fields {\n \t\t\t\tff := &fields[i]\n-\t\t\t\tif ff.name == key {\n+\t\t\t\tif bytes.Equal(ff.nameBytes, key) {\n \t\t\t\t\tf = ff\n \t\t\t\t\tbreak\n \t\t\t\t}\n-\t\t\t\tif f == nil && strings.EqualFold(ff.name, key) {\n+\t\t\t\tif f == nil && ff.equalFold(ff.nameBytes, key) {\n \t\t\t\t\tf = ff\n \t\t\t\t}\n \t\t\t}\n@@ -561,6 +561,7 @@ func (d *decodeState) object(v reflect.Value) {\n \t\tif destring {\n \t\t\td.value(reflect.ValueOf(&d.tempstr))\n \t\t\td.literalStore([]byte(d.tempstr), subv, true)\n+\t\t\td.tempstr = \"\" // Zero scratch space for successive values.\n \t\t} else {\n \t\t\td.value(subv)\n \t\t}"}, {"sha": "238a87fd665a88a1e21485c3054c31693a9839a6", "filename": "libgo/go/encoding/json/decode_test.go", "status": "modified", "additions": 40, "deletions": 2, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fdecode_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fdecode_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fdecode_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1060,6 +1060,21 @@ func TestEmptyString(t *testing.T) {\n \t}\n }\n \n+// Test that the returned error is non-nil when trying to unmarshal null string into int, for successive ,string option\n+// Issue 7046\n+func TestNullString(t *testing.T) {\n+\ttype T struct {\n+\t\tA int `json:\",string\"`\n+\t\tB int `json:\",string\"`\n+\t}\n+\tdata := []byte(`{\"A\": \"1\", \"B\": null}`)\n+\tvar s T\n+\terr := Unmarshal(data, &s)\n+\tif err == nil {\n+\t\tt.Fatalf(\"expected error; got %v\", s)\n+\t}\n+}\n+\n func intp(x int) *int {\n \tp := new(int)\n \t*p = x\n@@ -1110,8 +1125,8 @@ func TestInterfaceSet(t *testing.T) {\n // Issue 2540\n func TestUnmarshalNulls(t *testing.T) {\n \tjsonData := []byte(`{\n-\t\t\"Bool\"    : null, \n-\t\t\"Int\"     : null, \n+\t\t\"Bool\"    : null,\n+\t\t\"Int\"     : null,\n \t\t\"Int8\"    : null,\n \t\t\"Int16\"   : null,\n \t\t\"Int32\"   : null,\n@@ -1316,3 +1331,26 @@ func TestPrefilled(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+var invalidUnmarshalTests = []struct {\n+\tv    interface{}\n+\twant string\n+}{\n+\t{nil, \"json: Unmarshal(nil)\"},\n+\t{struct{}{}, \"json: Unmarshal(non-pointer struct {})\"},\n+\t{(*int)(nil), \"json: Unmarshal(nil *int)\"},\n+}\n+\n+func TestInvalidUnmarshal(t *testing.T) {\n+\tbuf := []byte(`{\"a\":\"1\"}`)\n+\tfor _, tt := range invalidUnmarshalTests {\n+\t\terr := Unmarshal(buf, tt.v)\n+\t\tif err == nil {\n+\t\t\tt.Errorf(\"Unmarshal expecting error, got nil\")\n+\t\t\tcontinue\n+\t\t}\n+\t\tif got := err.Error(); got != tt.want {\n+\t\t\tt.Errorf(\"Unmarshal = %q; want %q\", got, tt.want)\n+\t\t}\n+\t}\n+}"}, {"sha": "4a77ba1cd256e1f47709979c06325d64ddca8b88", "filename": "libgo/go/encoding/json/encode.go", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fencode.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -241,24 +241,15 @@ type encodeState struct {\n \tscratch      [64]byte\n }\n \n-// TODO(bradfitz): use a sync.Cache here\n-var encodeStatePool = make(chan *encodeState, 8)\n+var encodeStatePool sync.Pool\n \n func newEncodeState() *encodeState {\n-\tselect {\n-\tcase e := <-encodeStatePool:\n+\tif v := encodeStatePool.Get(); v != nil {\n+\t\te := v.(*encodeState)\n \t\te.Reset()\n \t\treturn e\n-\tdefault:\n-\t\treturn new(encodeState)\n-\t}\n-}\n-\n-func putEncodeState(e *encodeState) {\n-\tselect {\n-\tcase encodeStatePool <- e:\n-\tdefault:\n \t}\n+\treturn new(encodeState)\n }\n \n func (e *encodeState) marshal(v interface{}) (err error) {\n@@ -936,13 +927,22 @@ func (e *encodeState) stringBytes(s []byte) (int, error) {\n // A field represents a single field found in a struct.\n type field struct {\n \tname      string\n+\tnameBytes []byte                 // []byte(name)\n+\tequalFold func(s, t []byte) bool // bytes.EqualFold or equivalent\n+\n \ttag       bool\n \tindex     []int\n \ttyp       reflect.Type\n \tomitEmpty bool\n \tquoted    bool\n }\n \n+func fillField(f field) field {\n+\tf.nameBytes = []byte(f.name)\n+\tf.equalFold = foldFunc(f.nameBytes)\n+\treturn f\n+}\n+\n // byName sorts field by name, breaking ties with depth,\n // then breaking ties with \"name came from json tag\", then\n // breaking ties with index sequence.\n@@ -1042,8 +1042,14 @@ func typeFields(t reflect.Type) []field {\n \t\t\t\t\tif name == \"\" {\n \t\t\t\t\t\tname = sf.Name\n \t\t\t\t\t}\n-\t\t\t\t\tfields = append(fields, field{name, tagged, index, ft,\n-\t\t\t\t\t\topts.Contains(\"omitempty\"), opts.Contains(\"string\")})\n+\t\t\t\t\tfields = append(fields, fillField(field{\n+\t\t\t\t\t\tname:      name,\n+\t\t\t\t\t\ttag:       tagged,\n+\t\t\t\t\t\tindex:     index,\n+\t\t\t\t\t\ttyp:       ft,\n+\t\t\t\t\t\tomitEmpty: opts.Contains(\"omitempty\"),\n+\t\t\t\t\t\tquoted:    opts.Contains(\"string\"),\n+\t\t\t\t\t}))\n \t\t\t\t\tif count[f.typ] > 1 {\n \t\t\t\t\t\t// If there were multiple instances, add a second,\n \t\t\t\t\t\t// so that the annihilation code will see a duplicate.\n@@ -1057,7 +1063,7 @@ func typeFields(t reflect.Type) []field {\n \t\t\t\t// Record new anonymous struct to explore in next round.\n \t\t\t\tnextCount[ft]++\n \t\t\t\tif nextCount[ft] == 1 {\n-\t\t\t\t\tnext = append(next, field{name: ft.Name(), index: index, typ: ft})\n+\t\t\t\t\tnext = append(next, fillField(field{name: ft.Name(), index: index, typ: ft}))\n \t\t\t\t}\n \t\t\t}\n \t\t}"}, {"sha": "265a237e448761eb96123b5c328aecf9632b8c3a", "filename": "libgo/go/encoding/json/encode_test.go", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fencode_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fencode_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fencode_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -25,13 +25,30 @@ type Optionals struct {\n \n \tMr map[string]interface{} `json:\"mr\"`\n \tMo map[string]interface{} `json:\",omitempty\"`\n+\n+\tFr float64 `json:\"fr\"`\n+\tFo float64 `json:\"fo,omitempty\"`\n+\n+\tBr bool `json:\"br\"`\n+\tBo bool `json:\"bo,omitempty\"`\n+\n+\tUr uint `json:\"ur\"`\n+\tUo uint `json:\"uo,omitempty\"`\n+\n+\tStr struct{} `json:\"str\"`\n+\tSto struct{} `json:\"sto,omitempty\"`\n }\n \n var optionalsExpected = `{\n  \"sr\": \"\",\n  \"omitempty\": 0,\n  \"slr\": null,\n- \"mr\": {}\n+ \"mr\": {},\n+ \"fr\": 0,\n+ \"br\": false,\n+ \"ur\": 0,\n+ \"str\": {},\n+ \"sto\": {}\n }`\n \n func TestOmitEmpty(t *testing.T) {\n@@ -425,3 +442,13 @@ func TestIssue6458(t *testing.T) {\n \t\tt.Errorf(\"Marshal(x) = %#q; want %#q\", b, want)\n \t}\n }\n+\n+func TestHTMLEscape(t *testing.T) {\n+\tvar b, want bytes.Buffer\n+\tm := `{\"M\":\"<html>foo &` + \"\\xe2\\x80\\xa8 \\xe2\\x80\\xa9\" + `</html>\"}`\n+\twant.Write([]byte(`{\"M\":\"\\u003chtml\\u003efoo \\u0026\\u2028 \\u2029\\u003c/html\\u003e\"}`))\n+\tHTMLEscape(&b, []byte(m))\n+\tif !bytes.Equal(b.Bytes(), want.Bytes()) {\n+\t\tt.Errorf(\"HTMLEscape(&b, []byte(m)) = %s; want %s\", b.Bytes(), want.Bytes())\n+\t}\n+}"}, {"sha": "d6f77c93e57fca9808fbb417b73cb2987c13922a", "filename": "libgo/go/encoding/json/fold.go", "status": "added", "additions": 143, "deletions": 0, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Ffold.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Ffold.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Ffold.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,143 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package json\n+\n+import (\n+\t\"bytes\"\n+\t\"unicode/utf8\"\n+)\n+\n+const (\n+\tcaseMask     = ^byte(0x20) // Mask to ignore case in ASCII.\n+\tkelvin       = '\\u212a'\n+\tsmallLongEss = '\\u017f'\n+)\n+\n+// foldFunc returns one of four different case folding equivalence\n+// functions, from most general (and slow) to fastest:\n+//\n+// 1) bytes.EqualFold, if the key s contains any non-ASCII UTF-8\n+// 2) equalFoldRight, if s contains special folding ASCII ('k', 'K', 's', 'S')\n+// 3) asciiEqualFold, no special, but includes non-letters (including _)\n+// 4) simpleLetterEqualFold, no specials, no non-letters.\n+//\n+// The letters S and K are special because they map to 3 runes, not just 2:\n+//  * S maps to s and to U+017F '\u017f' Latin small letter long s\n+//  * k maps to K and to U+212A '\u212a' Kelvin sign\n+// See http://play.golang.org/p/tTxjOc0OGo\n+//\n+// The returned function is specialized for matching against s and\n+// should only be given s. It's not curried for performance reasons.\n+func foldFunc(s []byte) func(s, t []byte) bool {\n+\tnonLetter := false\n+\tspecial := false // special letter\n+\tfor _, b := range s {\n+\t\tif b >= utf8.RuneSelf {\n+\t\t\treturn bytes.EqualFold\n+\t\t}\n+\t\tupper := b & caseMask\n+\t\tif upper < 'A' || upper > 'Z' {\n+\t\t\tnonLetter = true\n+\t\t} else if upper == 'K' || upper == 'S' {\n+\t\t\t// See above for why these letters are special.\n+\t\t\tspecial = true\n+\t\t}\n+\t}\n+\tif special {\n+\t\treturn equalFoldRight\n+\t}\n+\tif nonLetter {\n+\t\treturn asciiEqualFold\n+\t}\n+\treturn simpleLetterEqualFold\n+}\n+\n+// equalFoldRight is a specialization of bytes.EqualFold when s is\n+// known to be all ASCII (including punctuation), but contains an 's',\n+// 'S', 'k', or 'K', requiring a Unicode fold on the bytes in t.\n+// See comments on foldFunc.\n+func equalFoldRight(s, t []byte) bool {\n+\tfor _, sb := range s {\n+\t\tif len(t) == 0 {\n+\t\t\treturn false\n+\t\t}\n+\t\ttb := t[0]\n+\t\tif tb < utf8.RuneSelf {\n+\t\t\tif sb != tb {\n+\t\t\t\tsbUpper := sb & caseMask\n+\t\t\t\tif 'A' <= sbUpper && sbUpper <= 'Z' {\n+\t\t\t\t\tif sbUpper != tb&caseMask {\n+\t\t\t\t\t\treturn false\n+\t\t\t\t\t}\n+\t\t\t\t} else {\n+\t\t\t\t\treturn false\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tt = t[1:]\n+\t\t\tcontinue\n+\t\t}\n+\t\t// sb is ASCII and t is not. t must be either kelvin\n+\t\t// sign or long s; sb must be s, S, k, or K.\n+\t\ttr, size := utf8.DecodeRune(t)\n+\t\tswitch sb {\n+\t\tcase 's', 'S':\n+\t\t\tif tr != smallLongEss {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\tcase 'k', 'K':\n+\t\t\tif tr != kelvin {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\tdefault:\n+\t\t\treturn false\n+\t\t}\n+\t\tt = t[size:]\n+\n+\t}\n+\tif len(t) > 0 {\n+\t\treturn false\n+\t}\n+\treturn true\n+}\n+\n+// asciiEqualFold is a specialization of bytes.EqualFold for use when\n+// s is all ASCII (but may contain non-letters) and contains no\n+// special-folding letters.\n+// See comments on foldFunc.\n+func asciiEqualFold(s, t []byte) bool {\n+\tif len(s) != len(t) {\n+\t\treturn false\n+\t}\n+\tfor i, sb := range s {\n+\t\ttb := t[i]\n+\t\tif sb == tb {\n+\t\t\tcontinue\n+\t\t}\n+\t\tif ('a' <= sb && sb <= 'z') || ('A' <= sb && sb <= 'Z') {\n+\t\t\tif sb&caseMask != tb&caseMask {\n+\t\t\t\treturn false\n+\t\t\t}\n+\t\t} else {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\treturn true\n+}\n+\n+// simpleLetterEqualFold is a specialization of bytes.EqualFold for\n+// use when s is all ASCII letters (no underscores, etc) and also\n+// doesn't contain 'k', 'K', 's', or 'S'.\n+// See comments on foldFunc.\n+func simpleLetterEqualFold(s, t []byte) bool {\n+\tif len(s) != len(t) {\n+\t\treturn false\n+\t}\n+\tfor i, b := range s {\n+\t\tif b&caseMask != t[i]&caseMask {\n+\t\t\treturn false\n+\t\t}\n+\t}\n+\treturn true\n+}"}, {"sha": "9fb94646a859c955b138aced46871e78922c1862", "filename": "libgo/go/encoding/json/fold_test.go", "status": "added", "additions": 116, "deletions": 0, "changes": 116, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Ffold_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Ffold_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Ffold_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,116 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package json\n+\n+import (\n+\t\"bytes\"\n+\t\"strings\"\n+\t\"testing\"\n+\t\"unicode/utf8\"\n+)\n+\n+var foldTests = []struct {\n+\tfn   func(s, t []byte) bool\n+\ts, t string\n+\twant bool\n+}{\n+\t{equalFoldRight, \"\", \"\", true},\n+\t{equalFoldRight, \"a\", \"a\", true},\n+\t{equalFoldRight, \"\", \"a\", false},\n+\t{equalFoldRight, \"a\", \"\", false},\n+\t{equalFoldRight, \"a\", \"A\", true},\n+\t{equalFoldRight, \"AB\", \"ab\", true},\n+\t{equalFoldRight, \"AB\", \"ac\", false},\n+\t{equalFoldRight, \"sbkKc\", \"\u017fb\u212aKc\", true},\n+\t{equalFoldRight, \"SbKkc\", \"\u017fb\u212aKc\", true},\n+\t{equalFoldRight, \"SbKkc\", \"\u017fbKK\", false},\n+\t{equalFoldRight, \"e\", \"\u00e9\", false},\n+\t{equalFoldRight, \"s\", \"S\", true},\n+\n+\t{simpleLetterEqualFold, \"\", \"\", true},\n+\t{simpleLetterEqualFold, \"abc\", \"abc\", true},\n+\t{simpleLetterEqualFold, \"abc\", \"ABC\", true},\n+\t{simpleLetterEqualFold, \"abc\", \"ABCD\", false},\n+\t{simpleLetterEqualFold, \"abc\", \"xxx\", false},\n+\n+\t{asciiEqualFold, \"a_B\", \"A_b\", true},\n+\t{asciiEqualFold, \"aa@\", \"aa`\", false}, // verify 0x40 and 0x60 aren't case-equivalent\n+}\n+\n+func TestFold(t *testing.T) {\n+\tfor i, tt := range foldTests {\n+\t\tif got := tt.fn([]byte(tt.s), []byte(tt.t)); got != tt.want {\n+\t\t\tt.Errorf(\"%d. %q, %q = %v; want %v\", i, tt.s, tt.t, got, tt.want)\n+\t\t}\n+\t\ttruth := strings.EqualFold(tt.s, tt.t)\n+\t\tif truth != tt.want {\n+\t\t\tt.Errorf(\"strings.EqualFold doesn't agree with case %d\", i)\n+\t\t}\n+\t}\n+}\n+\n+func TestFoldAgainstUnicode(t *testing.T) {\n+\tconst bufSize = 5\n+\tbuf1 := make([]byte, 0, bufSize)\n+\tbuf2 := make([]byte, 0, bufSize)\n+\tvar runes []rune\n+\tfor i := 0x20; i <= 0x7f; i++ {\n+\t\trunes = append(runes, rune(i))\n+\t}\n+\trunes = append(runes, kelvin, smallLongEss)\n+\n+\tfuncs := []struct {\n+\t\tname   string\n+\t\tfold   func(s, t []byte) bool\n+\t\tletter bool // must be ASCII letter\n+\t\tsimple bool // must be simple ASCII letter (not 'S' or 'K')\n+\t}{\n+\t\t{\n+\t\t\tname: \"equalFoldRight\",\n+\t\t\tfold: equalFoldRight,\n+\t\t},\n+\t\t{\n+\t\t\tname:   \"asciiEqualFold\",\n+\t\t\tfold:   asciiEqualFold,\n+\t\t\tsimple: true,\n+\t\t},\n+\t\t{\n+\t\t\tname:   \"simpleLetterEqualFold\",\n+\t\t\tfold:   simpleLetterEqualFold,\n+\t\t\tsimple: true,\n+\t\t\tletter: true,\n+\t\t},\n+\t}\n+\n+\tfor _, ff := range funcs {\n+\t\tfor _, r := range runes {\n+\t\t\tif r >= utf8.RuneSelf {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tif ff.letter && !isASCIILetter(byte(r)) {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tif ff.simple && (r == 's' || r == 'S' || r == 'k' || r == 'K') {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tfor _, r2 := range runes {\n+\t\t\t\tbuf1 := append(buf1[:0], 'x')\n+\t\t\t\tbuf2 := append(buf2[:0], 'x')\n+\t\t\t\tbuf1 = buf1[:1+utf8.EncodeRune(buf1[1:bufSize], r)]\n+\t\t\t\tbuf2 = buf2[:1+utf8.EncodeRune(buf2[1:bufSize], r2)]\n+\t\t\t\tbuf1 = append(buf1, 'x')\n+\t\t\t\tbuf2 = append(buf2, 'x')\n+\t\t\t\twant := bytes.EqualFold(buf1, buf2)\n+\t\t\t\tif got := ff.fold(buf1, buf2); got != want {\n+\t\t\t\t\tt.Errorf(\"%s(%q, %q) = %v; want %v\", ff.name, buf1, buf2, got, want)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+\n+func isASCIILetter(b byte) bool {\n+\treturn ('A' <= b && b <= 'Z') || ('a' <= b && b <= 'z')\n+}"}, {"sha": "e8d6bd4c2ce00a4f4ed7bbb1e7dc647b4db66b9e", "filename": "libgo/go/encoding/json/stream.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fstream.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fencoding%2Fjson%2Fstream.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fencoding%2Fjson%2Fstream.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -173,7 +173,7 @@ func (enc *Encoder) Encode(v interface{}) error {\n \tif _, err = enc.w.Write(e.Bytes()); err != nil {\n \t\tenc.err = err\n \t}\n-\tputEncodeState(e)\n+\tencodeStatePool.Put(e)\n \treturn err\n }\n "}, {"sha": "d3b454fefd4e814e185364842f38cfa6c395a997", "filename": "libgo/go/flag/flag.go", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fflag%2Fflag.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fflag%2Fflag.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fflag%2Fflag.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -269,7 +269,6 @@ type FlagSet struct {\n \tactual        map[string]*Flag\n \tformal        map[string]*Flag\n \targs          []string // arguments after flags\n-\texitOnError   bool     // does the program exit if there's an error?\n \terrorHandling ErrorHandling\n \toutput        io.Writer // nil means stderr; use out() accessor\n }"}, {"sha": "42b3c22048c7d800dcf020004e6e3c61c8ed93b8", "filename": "libgo/go/fmt/fmt_test.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ffmt%2Ffmt_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ffmt%2Ffmt_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Ffmt_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -220,6 +220,8 @@ var fmtTests = []struct {\n \t{\"%+.3e\", 0.0, \"+0.000e+00\"},\n \t{\"%+.3e\", 1.0, \"+1.000e+00\"},\n \t{\"%+.3f\", -1.0, \"-1.000\"},\n+\t{\"%+07.2f\", 1.0, \"+001.00\"},\n+\t{\"%+07.2f\", -1.0, \"-001.00\"},\n \t{\"% .3E\", -1.0, \"-1.000E+00\"},\n \t{\"% .3e\", 1.0, \" 1.000e+00\"},\n \t{\"%+.3g\", 0.0, \"+0\"},"}, {"sha": "a54f12ee9f9f08fd80a1c0c704960779f5834795", "filename": "libgo/go/fmt/format.go", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ffmt%2Fformat.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ffmt%2Fformat.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Fformat.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -372,7 +372,10 @@ func (f *fmt) formatFloat(v float64, verb byte, prec, n int) {\n \tdefault:\n \t\t// There's no sign, but we might need one.\n \t\tif f.plus {\n-\t\t\tslice[0] = '+'\n+\t\t\tf.buf.WriteByte('+')\n+\t\t\tf.wid--\n+\t\t\tf.pad(slice[1:])\n+\t\t\treturn\n \t\t} else if f.space {\n \t\t\t// space is already there\n \t\t} else {"}, {"sha": "2f13bcd95e971415401e75a10b0f7d36d209d930", "filename": "libgo/go/fmt/print.go", "status": "modified", "additions": 4, "deletions": 36, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ffmt%2Fprint.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ffmt%2Fprint.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Fprint.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -124,45 +124,13 @@ type pp struct {\n \tfmt        fmt\n }\n \n-// A cache holds a set of reusable objects.\n-// The slice is a stack (LIFO).\n-// If more are needed, the cache creates them by calling new.\n-type cache struct {\n-\tmu    sync.Mutex\n-\tsaved []interface{}\n-\tnew   func() interface{}\n+var ppFree = sync.Pool{\n+\tNew: func() interface{} { return new(pp) },\n }\n \n-func (c *cache) put(x interface{}) {\n-\tc.mu.Lock()\n-\tif len(c.saved) < cap(c.saved) {\n-\t\tc.saved = append(c.saved, x)\n-\t}\n-\tc.mu.Unlock()\n-}\n-\n-func (c *cache) get() interface{} {\n-\tc.mu.Lock()\n-\tn := len(c.saved)\n-\tif n == 0 {\n-\t\tc.mu.Unlock()\n-\t\treturn c.new()\n-\t}\n-\tx := c.saved[n-1]\n-\tc.saved = c.saved[0 : n-1]\n-\tc.mu.Unlock()\n-\treturn x\n-}\n-\n-func newCache(f func() interface{}) *cache {\n-\treturn &cache{saved: make([]interface{}, 0, 100), new: f}\n-}\n-\n-var ppFree = newCache(func() interface{} { return new(pp) })\n-\n // newPrinter allocates a new pp struct or grab a cached one.\n func newPrinter() *pp {\n-\tp := ppFree.get().(*pp)\n+\tp := ppFree.Get().(*pp)\n \tp.panicking = false\n \tp.erroring = false\n \tp.fmt.init(&p.buf)\n@@ -178,7 +146,7 @@ func (p *pp) free() {\n \tp.buf = p.buf[:0]\n \tp.arg = nil\n \tp.value = reflect.Value{}\n-\tppFree.put(p)\n+\tppFree.Put(p)\n }\n \n func (p *pp) Width() (wid int, ok bool) { return p.fmt.wid, p.fmt.widPresent }"}, {"sha": "c73b8b60283e4e9940096a7ffa2389966c1f76cf", "filename": "libgo/go/fmt/scan.go", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ffmt%2Fscan.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ffmt%2Fscan.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ffmt%2Fscan.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -11,6 +11,7 @@ import (\n \t\"os\"\n \t\"reflect\"\n \t\"strconv\"\n+\t\"sync\"\n \t\"unicode/utf8\"\n )\n \n@@ -380,7 +381,9 @@ func (r *readRune) ReadRune() (rr rune, size int, err error) {\n \treturn\n }\n \n-var ssFree = newCache(func() interface{} { return new(ss) })\n+var ssFree = sync.Pool{\n+\tNew: func() interface{} { return new(ss) },\n+}\n \n // newScanState allocates a new ss struct or grab a cached one.\n func newScanState(r io.Reader, nlIsSpace, nlIsEnd bool) (s *ss, old ssave) {\n@@ -395,7 +398,7 @@ func newScanState(r io.Reader, nlIsSpace, nlIsEnd bool) (s *ss, old ssave) {\n \t\treturn\n \t}\n \n-\ts = ssFree.get().(*ss)\n+\ts = ssFree.Get().(*ss)\n \tif rr, ok := r.(io.RuneReader); ok {\n \t\ts.rr = rr\n \t} else {\n@@ -427,7 +430,7 @@ func (s *ss) free(old ssave) {\n \t}\n \ts.buf = s.buf[:0]\n \ts.rr = nil\n-\tssFree.put(s)\n+\tssFree.Put(s)\n }\n \n // skipSpace skips spaces and maybe newlines."}, {"sha": "278a22701855ee9efeaaac7c44fae8e4182a5b1f", "filename": "libgo/go/go/build/deps_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fgo%2Fbuild%2Fdeps_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fgo%2Fbuild%2Fdeps_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fbuild%2Fdeps_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -359,7 +359,7 @@ func allowed(pkg string) map[string]bool {\n }\n \n var bools = []bool{false, true}\n-var geese = []string{\"darwin\", \"dragonfly\", \"freebsd\", \"linux\", \"netbsd\", \"openbsd\", \"plan9\", \"windows\"}\n+var geese = []string{\"darwin\", \"dragonfly\", \"freebsd\", \"linux\", \"netbsd\", \"openbsd\", \"plan9\", \"solaris\", \"windows\"}\n var goarches = []string{\"386\", \"amd64\", \"arm\", \"arm64\"}\n \n type osPkg struct {"}, {"sha": "83292f29f82fb423cd15fe1611d2ae4537e1f0b5", "filename": "libgo/go/go/build/doc.go", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fgo%2Fbuild%2Fdoc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fgo%2Fbuild%2Fdoc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fbuild%2Fdoc.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -57,11 +57,15 @@\n //\n // Build Constraints\n //\n-// A build constraint is a line comment beginning with the directive +build\n+// A build constraint, also known as a build tag, is a line comment that begins\n+//\n+//\t// +build\n+//\n // that lists the conditions under which a file should be included in the package.\n // Constraints may appear in any kind of source file (not just Go), but\n // they must appear near the top of the file, preceded\n-// only by blank lines and other line comments.\n+// only by blank lines and other line comments. These rules mean that in Go\n+// files a build constraint must appear before the package clause.\n //\n // To distinguish build constraints from package documentation, a series of\n // build constraints must be followed by a blank line."}, {"sha": "71484aa9f1671795e63f8e269bc316f4ec54f303", "filename": "libgo/go/go/build/syslist.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fgo%2Fbuild%2Fsyslist.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -4,5 +4,5 @@\n \n package build\n \n-const goosList = \"darwin dragonfly freebsd linux netbsd openbsd plan9 windows solaris \"\n+const goosList = \"darwin dragonfly freebsd linux netbsd openbsd plan9 solaris windows \"\n const goarchList = \"386 amd64 arm arm64 alpha m68k mipso32 mipsn32 mipsn64 mipso64 ppc ppc64 sparc sparc64 \""}, {"sha": "c0206613acdfd08bb6fd4995ab5f2a97dbe394ef", "filename": "libgo/go/hash/fnv/fnv.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fhash%2Ffnv%2Ffnv.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fhash%2Ffnv%2Ffnv.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fhash%2Ffnv%2Ffnv.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -4,7 +4,8 @@\n \n // Package fnv implements FNV-1 and FNV-1a, non-cryptographic hash functions\n // created by Glenn Fowler, Landon Curt Noll, and Phong Vo.\n-// See http://isthe.com/chongo/tech/comp/fnv/.\n+// See\n+// http://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function.\n package fnv\n \n import ("}, {"sha": "2d7ad8ac266c22968578d2ef211abb9500805b8a", "filename": "libgo/go/html/escape_test.go", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fhtml%2Fescape_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fhtml%2Fescape_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fhtml%2Fescape_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -64,6 +64,24 @@ var unescapeTests = []unescapeTest{\n \t\t\"Footnote&#x87;\",\n \t\t\"Footnote\u2021\",\n \t},\n+\t// Handle single ampersand.\n+\t{\n+\t\t\"copySingleAmpersand\",\n+\t\t\"&\",\n+\t\t\"&\",\n+\t},\n+\t// Handle ampersand followed by non-entity.\n+\t{\n+\t\t\"copyAmpersandNonEntity\",\n+\t\t\"text &test\",\n+\t\t\"text &test\",\n+\t},\n+\t// Handle \"&#\".\n+\t{\n+\t\t\"copyAmpersandHash\",\n+\t\t\"text &#\",\n+\t\t\"text &#\",\n+\t},\n }\n \n func TestUnescape(t *testing.T) {"}, {"sha": "4f4d88345a8da3e068565632072c9c72dc67a9fb", "filename": "libgo/go/image/color/palette/gen.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fimage%2Fcolor%2Fpalette%2Fgen.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fimage%2Fcolor%2Fpalette%2Fgen.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fimage%2Fcolor%2Fpalette%2Fgen.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -14,6 +14,10 @@ import (\n )\n \n func main() {\n+\tfmt.Println(`// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.`)\n+\tfmt.Println()\n \tfmt.Println(\"// generated by go run gen.go; DO NOT EDIT\")\n \tfmt.Println()\n \tfmt.Println(\"// Package palette provides standard color palettes.\")"}, {"sha": "f761e5368d90b42a42d6a417ec017b641426822c", "filename": "libgo/go/image/color/palette/palette.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fimage%2Fcolor%2Fpalette%2Fpalette.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fimage%2Fcolor%2Fpalette%2Fpalette.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fimage%2Fcolor%2Fpalette%2Fpalette.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n // generated by go run gen.go; DO NOT EDIT\n \n // Package palette provides standard color palettes."}, {"sha": "926710a4562da27068b16eb429c115586f8b7301", "filename": "libgo/go/image/gif/reader.go", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fimage%2Fgif%2Freader.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fimage%2Fgif%2Freader.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fimage%2Fgif%2Freader.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -79,7 +79,8 @@ type decoder struct {\n \timageFields byte\n \n \t// From graphics control.\n-\ttransparentIndex byte\n+\ttransparentIndex    byte\n+\thasTransparentIndex bool\n \n \t// Computed.\n \tpixelSize      uint\n@@ -175,11 +176,12 @@ func (d *decoder) decode(r io.Reader, configOnly bool) error {\n \t\t\t\tif err != nil {\n \t\t\t\t\treturn err\n \t\t\t\t}\n-\t\t\t\t// TODO: do we set transparency in this map too? That would be\n-\t\t\t\t// d.setTransparency(m.Palette)\n \t\t\t} else {\n \t\t\t\tm.Palette = d.globalColorMap\n \t\t\t}\n+\t\t\tif d.hasTransparentIndex && int(d.transparentIndex) < len(m.Palette) {\n+\t\t\t\tm.Palette[d.transparentIndex] = color.RGBA{}\n+\t\t\t}\n \t\t\tlitWidth, err := d.r.ReadByte()\n \t\t\tif err != nil {\n \t\t\t\treturn err\n@@ -228,7 +230,11 @@ func (d *decoder) decode(r io.Reader, configOnly bool) error {\n \n \t\t\td.image = append(d.image, m)\n \t\t\td.delay = append(d.delay, d.delayTime)\n-\t\t\td.delayTime = 0 // TODO: is this correct, or should we hold on to the value?\n+\t\t\t// The GIF89a spec, Section 23 (Graphic Control Extension) says:\n+\t\t\t// \"The scope of this extension is the first graphic rendering block\n+\t\t\t// to follow.\" We therefore reset the GCE fields to zero.\n+\t\t\td.delayTime = 0\n+\t\t\td.hasTransparentIndex = false\n \n \t\tcase sTrailer:\n \t\t\tif len(d.image) == 0 {\n@@ -339,17 +345,11 @@ func (d *decoder) readGraphicControl() error {\n \td.delayTime = int(d.tmp[2]) | int(d.tmp[3])<<8\n \tif d.flags&gcTransparentColorSet != 0 {\n \t\td.transparentIndex = d.tmp[4]\n-\t\td.setTransparency(d.globalColorMap)\n+\t\td.hasTransparentIndex = true\n \t}\n \treturn nil\n }\n \n-func (d *decoder) setTransparency(colorMap color.Palette) {\n-\tif int(d.transparentIndex) < len(colorMap) {\n-\t\tcolorMap[d.transparentIndex] = color.RGBA{}\n-\t}\n-}\n-\n func (d *decoder) newImageFromDescriptor() (*image.Paletted, error) {\n \tif _, err := io.ReadFull(d.r, d.tmp[0:9]); err != nil {\n \t\treturn nil, fmt.Errorf(\"gif: can't read image descriptor: %s\", err)"}, {"sha": "fc2041e99704209193404656acb41c4eb898f860", "filename": "libgo/go/image/gif/reader_test.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fimage%2Fgif%2Freader_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fimage%2Fgif%2Freader_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fimage%2Fgif%2Freader_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n package gif\n \n import ("}, {"sha": "57db1fbf0bfdd51384eaf0b82e13a04e5599afab", "filename": "libgo/go/io/io_test.go", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fio%2Fio_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fio%2Fio_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fio%2Fio_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -281,6 +281,8 @@ func TestSectionReader_ReadAt(t *testing.T) {\n \t\t{data: dat, off: 3, n: len(dat), bufLen: len(dat) / 2, at: 2, exp: dat[5 : 5+len(dat)/2], err: nil},\n \t\t{data: dat, off: 3, n: len(dat) / 2, bufLen: len(dat)/2 - 2, at: 2, exp: dat[5 : 5+len(dat)/2-2], err: nil},\n \t\t{data: dat, off: 3, n: len(dat) / 2, bufLen: len(dat)/2 + 2, at: 2, exp: dat[5 : 5+len(dat)/2-2], err: EOF},\n+\t\t{data: dat, off: 0, n: 0, bufLen: 0, at: -1, exp: \"\", err: EOF},\n+\t\t{data: dat, off: 0, n: 0, bufLen: 0, at: 1, exp: \"\", err: EOF},\n \t}\n \tfor i, tt := range tests {\n \t\tr := strings.NewReader(tt.data)\n@@ -319,3 +321,21 @@ func TestSectionReader_Seek(t *testing.T) {\n \t\tt.Errorf(\"Read = %v, %v; want 0, EOF\", n, err)\n \t}\n }\n+\n+func TestSectionReader_Size(t *testing.T) {\n+\ttests := []struct {\n+\t\tdata string\n+\t\twant int64\n+\t}{\n+\t\t{\"a long sample data, 1234567890\", 30},\n+\t\t{\"\", 0},\n+\t}\n+\n+\tfor _, tt := range tests {\n+\t\tr := strings.NewReader(tt.data)\n+\t\tsr := NewSectionReader(r, 0, int64(len(tt.data)))\n+\t\tif got := sr.Size(); got != tt.want {\n+\t\t\tt.Errorf(\"Size = %v; want %v\", got, tt.want)\n+\t\t}\n+\t}\n+}"}, {"sha": "101d2c12153e6538bd33c3dea8fd65497d6a502c", "filename": "libgo/go/io/ioutil/blackhole.go", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/82b3da6a714493644a4333bfd8205e3341ed3b8e/libgo%2Fgo%2Fio%2Fioutil%2Fblackhole.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/82b3da6a714493644a4333bfd8205e3341ed3b8e/libgo%2Fgo%2Fio%2Fioutil%2Fblackhole.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fio%2Fioutil%2Fblackhole.go?ref=82b3da6a714493644a4333bfd8205e3341ed3b8e", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2012 The Go Authors. All rights reserved.\n-// Use of this source code is governed by a BSD-style\n-// license that can be found in the LICENSE file.\n-\n-package ioutil\n-\n-var blackHoleBuf = make(chan []byte, 1)\n-\n-func blackHole() []byte {\n-\tselect {\n-\tcase b := <-blackHoleBuf:\n-\t\treturn b\n-\tdefault:\n-\t}\n-\treturn make([]byte, 8192)\n-}\n-\n-func blackHolePut(p []byte) {\n-\tselect {\n-\tcase blackHoleBuf <- p:\n-\tdefault:\n-\t}\n-}"}, {"sha": "909a8156326735dbfaca50dca573dcf38b8facfa", "filename": "libgo/go/io/ioutil/ioutil.go", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fio%2Fioutil%2Fioutil.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fio%2Fioutil%2Fioutil.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fio%2Fioutil%2Fioutil.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -10,6 +10,7 @@ import (\n \t\"io\"\n \t\"os\"\n \t\"sort\"\n+\t\"sync\"\n )\n \n // readAll reads from r until an error or EOF and returns the data it read\n@@ -136,14 +137,21 @@ func (devNull) WriteString(s string) (int, error) {\n \treturn len(s), nil\n }\n \n+var blackHolePool = sync.Pool{\n+\tNew: func() interface{} {\n+\t\tb := make([]byte, 8192)\n+\t\treturn &b\n+\t},\n+}\n+\n func (devNull) ReadFrom(r io.Reader) (n int64, err error) {\n-\tbuf := blackHole()\n-\tdefer blackHolePut(buf)\n+\tbufp := blackHolePool.Get().(*[]byte)\n \treadSize := 0\n \tfor {\n-\t\treadSize, err = r.Read(buf)\n+\t\treadSize, err = r.Read(*bufp)\n \t\tn += int64(readSize)\n \t\tif err != nil {\n+\t\t\tblackHolePool.Put(bufp)\n \t\t\tif err == io.EOF {\n \t\t\t\treturn n, nil\n \t\t\t}"}, {"sha": "d3ea84017812613645c55689fca44db699d160b6", "filename": "libgo/go/math/rand/rand.go", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fmath%2Frand%2Frand.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fmath%2Frand%2Frand.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Frand%2Frand.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -95,20 +95,18 @@ func (r *Rand) Intn(n int) int {\n }\n \n // Float64 returns, as a float64, a pseudo-random number in [0.0,1.0).\n-func (r *Rand) Float64() float64 { return float64(r.Int63()) / (1 << 63) }\n+func (r *Rand) Float64() float64 { return float64(r.Int63n(1<<53)) / (1 << 53) }\n \n // Float32 returns, as a float32, a pseudo-random number in [0.0,1.0).\n-func (r *Rand) Float32() float32 { return float32(r.Float64()) }\n+func (r *Rand) Float32() float32 { return float32(r.Int31n(1<<24)) / (1 << 24) }\n \n // Perm returns, as a slice of n ints, a pseudo-random permutation of the integers [0,n).\n func (r *Rand) Perm(n int) []int {\n \tm := make([]int, n)\n-\tfor i := 0; i < n; i++ {\n-\t\tm[i] = i\n-\t}\n \tfor i := 0; i < n; i++ {\n \t\tj := r.Intn(i + 1)\n-\t\tm[i], m[j] = m[j], m[i]\n+\t\tm[i] = m[j]\n+\t\tm[j] = i\n \t}\n \treturn m\n }"}, {"sha": "c174c613f40c56cb6012f04b16dae82da3198a55", "filename": "libgo/go/math/rand/rand_test.go", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fmath%2Frand%2Frand_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fmath%2Frand%2Frand_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fmath%2Frand%2Frand_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -322,6 +322,17 @@ func TestExpTables(t *testing.T) {\n \t}\n }\n \n+// For issue 6721, the problem came after 7533753 calls, so check 10e6.\n+func TestFloat32(t *testing.T) {\n+\tr := New(NewSource(1))\n+\tfor ct := 0; ct < 10e6; ct++ {\n+\t\tf := r.Float32()\n+\t\tif f >= 1 {\n+\t\t\tt.Fatal(\"Float32() should be in range [0,1). ct:\", ct, \"f:\", f)\n+\t\t}\n+\t}\n+}\n+\n // Benchmarks\n \n func BenchmarkInt63Threadsafe(b *testing.B) {\n@@ -357,3 +368,24 @@ func BenchmarkInt31n1000(b *testing.B) {\n \t\tr.Int31n(1000)\n \t}\n }\n+\n+func BenchmarkFloat32(b *testing.B) {\n+\tr := New(NewSource(1))\n+\tfor n := b.N; n > 0; n-- {\n+\t\tr.Float32()\n+\t}\n+}\n+\n+func BenchmarkPerm3(b *testing.B) {\n+\tr := New(NewSource(1))\n+\tfor n := b.N; n > 0; n-- {\n+\t\tr.Perm(3)\n+\t}\n+}\n+\n+func BenchmarkPerm30(b *testing.B) {\n+\tr := New(NewSource(1))\n+\tfor n := b.N; n > 0; n-- {\n+\t\tr.Perm(30)\n+\t}\n+}"}, {"sha": "33566ce9c2e1c6ca253b0ce4818b95a6e8350d57", "filename": "libgo/go/net/cgo_unix_test.go", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fcgo_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fcgo_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fcgo_unix_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build cgo,!netgo\n+// +build darwin dragonfly freebsd linux netbsd openbsd\n+\n+package net\n+\n+import \"testing\"\n+\n+func TestCgoLookupIP(t *testing.T) {\n+\thost := \"localhost\"\n+\t_, err, ok := cgoLookupIP(host)\n+\tif !ok {\n+\t\tt.Errorf(\"cgoLookupIP must not be a placeholder\")\n+\t}\n+\tif err != nil {\n+\t\tt.Errorf(\"cgoLookupIP failed: %v\", err)\n+\t}\n+\tif _, err := goLookupIP(host); err != nil {\n+\t\tt.Errorf(\"goLookupIP failed: %v\", err)\n+\t}\n+}"}, {"sha": "70b66e70d1564f4ee2adb70c3df9a2c709a0d922", "filename": "libgo/go/net/dial.go", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdial.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdial.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdial.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -172,7 +172,6 @@ func (d *Dialer) Dial(network, address string) (Conn, error) {\n func dialMulti(net, addr string, la Addr, ras addrList, deadline time.Time) (Conn, error) {\n \ttype racer struct {\n \t\tConn\n-\t\tAddr\n \t\terror\n \t}\n \t// Sig controls the flow of dial results on lane. It passes a\n@@ -184,7 +183,7 @@ func dialMulti(net, addr string, la Addr, ras addrList, deadline time.Time) (Con\n \t\tgo func(ra Addr) {\n \t\t\tc, err := dialSingle(net, addr, la, ra, deadline)\n \t\t\tif _, ok := <-sig; ok {\n-\t\t\t\tlane <- racer{c, ra, err}\n+\t\t\t\tlane <- racer{c, err}\n \t\t\t} else if err == nil {\n \t\t\t\t// We have to return the resources\n \t\t\t\t// that belong to the other\n@@ -195,7 +194,6 @@ func dialMulti(net, addr string, la Addr, ras addrList, deadline time.Time) (Con\n \t\t}(ra.toAddr())\n \t}\n \tdefer close(sig)\n-\tvar failAddr Addr\n \tlastErr := errTimeout\n \tnracers := len(ras)\n \tfor nracers > 0 {\n@@ -205,12 +203,11 @@ func dialMulti(net, addr string, la Addr, ras addrList, deadline time.Time) (Con\n \t\t\tif racer.error == nil {\n \t\t\t\treturn racer.Conn, nil\n \t\t\t}\n-\t\t\tfailAddr = racer.Addr\n \t\t\tlastErr = racer.error\n \t\t\tnracers--\n \t\t}\n \t}\n-\treturn nil, &OpError{Op: \"dial\", Net: net, Addr: failAddr, Err: lastErr}\n+\treturn nil, lastErr\n }\n \n // dialSingle attempts to establish and returns a single connection to"}, {"sha": "79d150f8aad0a1281c10c206eb83539d8b697379", "filename": "libgo/go/net/dialgoogle_test.go", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdialgoogle_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdialgoogle_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdialgoogle_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -107,30 +107,6 @@ var googleaddrsipv4 = []string{\n \t\"[0:0:0:0:0:ffff::%d.%d.%d.%d]:80\",\n }\n \n-func TestDNSThreadLimit(t *testing.T) {\n-\tif testing.Short() || !*testExternal {\n-\t\tt.Skip(\"skipping test to avoid external network\")\n-\t}\n-\n-\tconst N = 10000\n-\tc := make(chan int, N)\n-\tfor i := 0; i < N; i++ {\n-\t\tgo func(i int) {\n-\t\t\tLookupIP(fmt.Sprintf(\"%d.net-test.golang.org\", i))\n-\t\t\tc <- 1\n-\t\t}(i)\n-\t}\n-\t// Don't bother waiting for the stragglers; stop at 0.9 N.\n-\tfor i := 0; i < N*9/10; i++ {\n-\t\tif i%100 == 0 {\n-\t\t\t//println(\"TestDNSThreadLimit:\", i)\n-\t\t}\n-\t\t<-c\n-\t}\n-\n-\t// If we're still here, it worked.\n-}\n-\n func TestDialGoogleIPv4(t *testing.T) {\n \tif testing.Short() || !*testExternal {\n \t\tt.Skip(\"skipping test to avoid external network\")"}, {"sha": "a30c9a73d7e0e920f7a8a7ee33e79ff44b39b0a4", "filename": "libgo/go/net/dnsclient_unix.go", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdnsclient_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdnsclient_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdnsclient_unix.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -159,7 +159,8 @@ func convertRR_AAAA(records []dnsRR) []IP {\n var cfg *dnsConfig\n var dnserr error\n \n-func loadConfig() { cfg, dnserr = dnsReadConfig() }\n+// Assume dns config file is /etc/resolv.conf here\n+func loadConfig() { cfg, dnserr = dnsReadConfig(\"/etc/resolv.conf\") }\n \n var onceLoadConfig sync.Once\n "}, {"sha": "7856ebc80de5ca45bc70c63b389c86b8cc0b1152", "filename": "libgo/go/net/dnsconfig_unix.go", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdnsconfig_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdnsconfig_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdnsconfig_unix.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -20,14 +20,13 @@ type dnsConfig struct {\n // See resolv.conf(5) on a Linux machine.\n // TODO(rsc): Supposed to call uname() and chop the beginning\n // of the host name to get the default search domain.\n-// We assume it's in resolv.conf anyway.\n-func dnsReadConfig() (*dnsConfig, error) {\n-\tfile, err := open(\"/etc/resolv.conf\")\n+func dnsReadConfig(filename string) (*dnsConfig, error) {\n+\tfile, err := open(filename)\n \tif err != nil {\n \t\treturn nil, &DNSConfigError{err}\n \t}\n \tconf := new(dnsConfig)\n-\tconf.servers = make([]string, 3)[0:0] // small, but the standard limit\n+\tconf.servers = make([]string, 0, 3) // small, but the standard limit\n \tconf.search = make([]string, 0)\n \tconf.ndots = 1\n \tconf.timeout = 5"}, {"sha": "697c69f995952678a532dc1edfed0ed7eb6bf841", "filename": "libgo/go/net/dnsconfig_unix_test.go", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdnsconfig_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fdnsconfig_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fdnsconfig_unix_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,46 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// +build darwin dragonfly freebsd linux netbsd openbsd\n+\n+package net\n+\n+import \"testing\"\n+\n+func TestDNSReadConfig(t *testing.T) {\n+\tdnsConfig, err := dnsReadConfig(\"testdata/resolv.conf\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\n+\tif len(dnsConfig.servers) != 1 {\n+\t\tt.Errorf(\"len(dnsConfig.servers) = %d; want %d\", len(dnsConfig.servers), 1)\n+\t}\n+\tif dnsConfig.servers[0] != \"[192.168.1.1]\" {\n+\t\tt.Errorf(\"dnsConfig.servers[0] = %s; want %s\", dnsConfig.servers[0], \"[192.168.1.1]\")\n+\t}\n+\n+\tif len(dnsConfig.search) != 1 {\n+\t\tt.Errorf(\"len(dnsConfig.search) = %d; want %d\", len(dnsConfig.search), 1)\n+\t}\n+\tif dnsConfig.search[0] != \"Home\" {\n+\t\tt.Errorf(\"dnsConfig.search[0] = %s; want %s\", dnsConfig.search[0], \"Home\")\n+\t}\n+\n+\tif dnsConfig.ndots != 5 {\n+\t\tt.Errorf(\"dnsConfig.ndots = %d; want %d\", dnsConfig.ndots, 5)\n+\t}\n+\n+\tif dnsConfig.timeout != 10 {\n+\t\tt.Errorf(\"dnsConfig.timeout = %d; want %d\", dnsConfig.timeout, 10)\n+\t}\n+\n+\tif dnsConfig.attempts != 3 {\n+\t\tt.Errorf(\"dnsConfig.attempts = %d; want %d\", dnsConfig.attempts, 3)\n+\t}\n+\n+\tif dnsConfig.rotate != true {\n+\t\tt.Errorf(\"dnsConfig.rotate = %t; want %t\", dnsConfig.rotate, true)\n+\t}\n+}"}, {"sha": "64d56c73e06c4316fb0c9fcc143257120db03775", "filename": "libgo/go/net/fd_windows.go", "status": "modified", "additions": 8, "deletions": 40, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Ffd_windows.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Ffd_windows.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ffd_windows.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -513,7 +513,12 @@ func (fd *netFD) WriteTo(buf []byte, sa syscall.Sockaddr) (int, error) {\n \t})\n }\n \n-func (fd *netFD) acceptOne(toAddr func(syscall.Sockaddr) Addr, rawsa []syscall.RawSockaddrAny, o *operation) (*netFD, error) {\n+func (fd *netFD) accept(toAddr func(syscall.Sockaddr) Addr) (*netFD, error) {\n+\tif err := fd.readLock(); err != nil {\n+\t\treturn nil, err\n+\t}\n+\tdefer fd.readUnlock()\n+\n \t// Get new socket.\n \ts, err := sysSocket(fd.family, fd.sotype, 0)\n \tif err != nil {\n@@ -532,7 +537,9 @@ func (fd *netFD) acceptOne(toAddr func(syscall.Sockaddr) Addr, rawsa []syscall.R\n \t}\n \n \t// Submit accept request.\n+\to := &fd.rop\n \to.handle = s\n+\tvar rawsa [2]syscall.RawSockaddrAny\n \to.rsan = int32(unsafe.Sizeof(rawsa[0]))\n \t_, err = rsrv.ExecIO(o, \"AcceptEx\", func(o *operation) error {\n \t\treturn syscall.AcceptEx(o.fd.sysfd, o.handle, (*byte)(unsafe.Pointer(&rawsa[0])), 0, uint32(o.rsan), uint32(o.rsan), &o.qty, &o.o)\n@@ -549,45 +556,6 @@ func (fd *netFD) acceptOne(toAddr func(syscall.Sockaddr) Addr, rawsa []syscall.R\n \t\treturn nil, &OpError{\"Setsockopt\", fd.net, fd.laddr, err}\n \t}\n \n-\treturn netfd, nil\n-}\n-\n-func (fd *netFD) accept(toAddr func(syscall.Sockaddr) Addr) (*netFD, error) {\n-\tif err := fd.readLock(); err != nil {\n-\t\treturn nil, err\n-\t}\n-\tdefer fd.readUnlock()\n-\n-\to := &fd.rop\n-\tvar netfd *netFD\n-\tvar err error\n-\tvar rawsa [2]syscall.RawSockaddrAny\n-\tfor {\n-\t\tnetfd, err = fd.acceptOne(toAddr, rawsa[:], o)\n-\t\tif err == nil {\n-\t\t\tbreak\n-\t\t}\n-\t\t// Sometimes we see WSAECONNRESET and ERROR_NETNAME_DELETED is\n-\t\t// returned here. These happen if connection reset is received\n-\t\t// before AcceptEx could complete. These errors relate to new\n-\t\t// connection, not to AcceptEx, so ignore broken connection and\n-\t\t// try AcceptEx again for more connections.\n-\t\toperr, ok := err.(*OpError)\n-\t\tif !ok {\n-\t\t\treturn nil, err\n-\t\t}\n-\t\terrno, ok := operr.Err.(syscall.Errno)\n-\t\tif !ok {\n-\t\t\treturn nil, err\n-\t\t}\n-\t\tswitch errno {\n-\t\tcase syscall.ERROR_NETNAME_DELETED, syscall.WSAECONNRESET:\n-\t\t\t// ignore these and try again\n-\t\tdefault:\n-\t\t\treturn nil, err\n-\t\t}\n-\t}\n-\n \t// Get local and peer addr out of AcceptEx buffer.\n \tvar lrsa, rrsa *syscall.RawSockaddrAny\n \tvar llen, rlen int32"}, {"sha": "2fe358e079c620d59e7548f3c33e9b9bebd3b55f", "filename": "libgo/go/net/hosts_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhosts_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhosts_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhosts_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -41,7 +41,7 @@ func TestLookupStaticHost(t *testing.T) {\n \t\tif len(ips) != len(tt.ips) {\n \t\t\tt.Errorf(\"# of hosts = %v; want %v\",\n \t\t\t\tlen(ips), len(tt.ips))\n-\t\t\treturn\n+\t\t\tcontinue\n \t\t}\n \t\tfor k, v := range ips {\n \t\t\tif tt.ips[k].String() != v {"}, {"sha": "e5ad39c77418a568adff50ac258a236d31147605", "filename": "libgo/go/net/http/client_test.go", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fclient_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fclient_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fclient_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -373,24 +373,6 @@ func (j *TestJar) Cookies(u *url.URL) []*Cookie {\n \treturn j.perURL[u.Host]\n }\n \n-func TestRedirectCookiesOnRequest(t *testing.T) {\n-\tdefer afterTest(t)\n-\tvar ts *httptest.Server\n-\tts = httptest.NewServer(echoCookiesRedirectHandler)\n-\tdefer ts.Close()\n-\tc := &Client{}\n-\treq, _ := NewRequest(\"GET\", ts.URL, nil)\n-\treq.AddCookie(expectedCookies[0])\n-\t// TODO: Uncomment when an implementation of a RFC6265 cookie jar lands.\n-\t_ = c\n-\t// resp, _ := c.Do(req)\n-\t// matchReturnedCookies(t, expectedCookies, resp.Cookies())\n-\n-\treq, _ = NewRequest(\"GET\", ts.URL, nil)\n-\t// resp, _ = c.Do(req)\n-\t// matchReturnedCookies(t, expectedCookies[1:], resp.Cookies())\n-}\n-\n func TestRedirectCookiesJar(t *testing.T) {\n \tdefer afterTest(t)\n \tvar ts *httptest.Server\n@@ -410,8 +392,8 @@ func TestRedirectCookiesJar(t *testing.T) {\n }\n \n func matchReturnedCookies(t *testing.T, expected, given []*Cookie) {\n-\tt.Logf(\"Received cookies: %v\", given)\n \tif len(given) != len(expected) {\n+\t\tt.Logf(\"Received cookies: %v\", given)\n \t\tt.Errorf(\"Expected %d cookies, got %d\", len(expected), len(given))\n \t}\n \tfor _, ec := range expected {"}, {"sha": "a1759214f3827c394441f43e18a7af433f22a390", "filename": "libgo/go/net/http/cookie.go", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fcookie.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fcookie.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fcookie.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -94,7 +94,6 @@ func readSetCookies(h Header) []*Cookie {\n \t\t\t\tcontinue\n \t\t\tcase \"domain\":\n \t\t\t\tc.Domain = val\n-\t\t\t\t// TODO: Add domain parsing\n \t\t\t\tcontinue\n \t\t\tcase \"max-age\":\n \t\t\t\tsecs, err := strconv.Atoi(val)\n@@ -121,7 +120,6 @@ func readSetCookies(h Header) []*Cookie {\n \t\t\t\tcontinue\n \t\t\tcase \"path\":\n \t\t\t\tc.Path = val\n-\t\t\t\t// TODO: Add path parsing\n \t\t\t\tcontinue\n \t\t\t}\n \t\t\tc.Unparsed = append(c.Unparsed, parts[i])"}, {"sha": "1aa9d49d96ec40d36128a0e163db7e6d751b7421", "filename": "libgo/go/net/http/cookie_test.go", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fcookie_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fcookie_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fcookie_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -5,9 +5,13 @@\n package http\n \n import (\n+\t\"bytes\"\n \t\"encoding/json\"\n \t\"fmt\"\n+\t\"log\"\n+\t\"os\"\n \t\"reflect\"\n+\t\"strings\"\n \t\"testing\"\n \t\"time\"\n )\n@@ -51,12 +55,20 @@ var writeSetCookiesTests = []struct {\n }\n \n func TestWriteSetCookies(t *testing.T) {\n+\tdefer log.SetOutput(os.Stderr)\n+\tvar logbuf bytes.Buffer\n+\tlog.SetOutput(&logbuf)\n+\n \tfor i, tt := range writeSetCookiesTests {\n \t\tif g, e := tt.Cookie.String(), tt.Raw; g != e {\n \t\t\tt.Errorf(\"Test %d, expecting:\\n%s\\nGot:\\n%s\\n\", i, e, g)\n \t\t\tcontinue\n \t\t}\n \t}\n+\n+\tif got, sub := logbuf.String(), \"dropping domain attribute\"; !strings.Contains(got, sub) {\n+\t\tt.Errorf(\"Expected substring %q in log output. Got:\\n%s\", sub, got)\n+\t}\n }\n \n type headerOnlyResponseWriter Header\n@@ -244,6 +256,10 @@ func TestReadCookies(t *testing.T) {\n }\n \n func TestCookieSanitizeValue(t *testing.T) {\n+\tdefer log.SetOutput(os.Stderr)\n+\tvar logbuf bytes.Buffer\n+\tlog.SetOutput(&logbuf)\n+\n \ttests := []struct {\n \t\tin, want string\n \t}{\n@@ -257,9 +273,17 @@ func TestCookieSanitizeValue(t *testing.T) {\n \t\t\tt.Errorf(\"sanitizeCookieValue(%q) = %q; want %q\", tt.in, got, tt.want)\n \t\t}\n \t}\n+\n+\tif got, sub := logbuf.String(), \"dropping invalid bytes\"; !strings.Contains(got, sub) {\n+\t\tt.Errorf(\"Expected substring %q in log output. Got:\\n%s\", sub, got)\n+\t}\n }\n \n func TestCookieSanitizePath(t *testing.T) {\n+\tdefer log.SetOutput(os.Stderr)\n+\tvar logbuf bytes.Buffer\n+\tlog.SetOutput(&logbuf)\n+\n \ttests := []struct {\n \t\tin, want string\n \t}{\n@@ -272,4 +296,8 @@ func TestCookieSanitizePath(t *testing.T) {\n \t\t\tt.Errorf(\"sanitizeCookiePath(%q) = %q; want %q\", tt.in, got, tt.want)\n \t\t}\n \t}\n+\n+\tif got, sub := logbuf.String(), \"dropping invalid bytes\"; !strings.Contains(got, sub) {\n+\t\tt.Errorf(\"Expected substring %q in log output. Got:\\n%s\", sub, got)\n+\t}\n }"}, {"sha": "82f18a178487cc89f5a977cf68ac736aa0a619d2", "filename": "libgo/go/net/http/cookiejar/jar.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fjar.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fjar.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fcookiejar%2Fjar.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -34,9 +34,9 @@ import (\n type PublicSuffixList interface {\n \t// PublicSuffix returns the public suffix of domain.\n \t//\n-\t// TODO: specify which of the caller and callee is responsible for IP\n-\t// addresses, for leading and trailing dots, for case sensitivity, and\n-\t// for IDN/Punycode.\n+\t// Domain is a lowercase punycoded domain name (not an IP address)\n+\t// without leading or trailing dots. The returned value is in the\n+\t// same form.\n \tPublicSuffix(domain string) string\n \n \t// String returns a description of the source of this public suffix"}, {"sha": "de62bef55254c554b1cb417c5b228d01ff7d9606", "filename": "libgo/go/net/http/header.go", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fheader.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fheader.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fheader.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -9,6 +9,7 @@ import (\n \t\"net/textproto\"\n \t\"sort\"\n \t\"strings\"\n+\t\"sync\"\n \t\"time\"\n )\n \n@@ -114,18 +115,15 @@ func (s *headerSorter) Len() int           { return len(s.kvs) }\n func (s *headerSorter) Swap(i, j int)      { s.kvs[i], s.kvs[j] = s.kvs[j], s.kvs[i] }\n func (s *headerSorter) Less(i, j int) bool { return s.kvs[i].key < s.kvs[j].key }\n \n-// TODO: convert this to a sync.Cache (issue 4720)\n-var headerSorterCache = make(chan *headerSorter, 8)\n+var headerSorterPool = sync.Pool{\n+\tNew: func() interface{} { return new(headerSorter) },\n+}\n \n // sortedKeyValues returns h's keys sorted in the returned kvs\n // slice. The headerSorter used to sort is also returned, for possible\n // return to headerSorterCache.\n func (h Header) sortedKeyValues(exclude map[string]bool) (kvs []keyValues, hs *headerSorter) {\n-\tselect {\n-\tcase hs = <-headerSorterCache:\n-\tdefault:\n-\t\ths = new(headerSorter)\n-\t}\n+\ths = headerSorterPool.Get().(*headerSorter)\n \tif cap(hs.kvs) < len(h) {\n \t\ths.kvs = make([]keyValues, 0, len(h))\n \t}\n@@ -159,10 +157,7 @@ func (h Header) WriteSubset(w io.Writer, exclude map[string]bool) error {\n \t\t\t}\n \t\t}\n \t}\n-\tselect {\n-\tcase headerSorterCache <- sorter:\n-\tdefault:\n-\t}\n+\theaderSorterPool.Put(sorter)\n \treturn nil\n }\n "}, {"sha": "7a97770314d7f824f87d754d53ac8c044b13fa5c", "filename": "libgo/go/net/http/request.go", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Frequest.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Frequest.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Frequest.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -20,6 +20,7 @@ import (\n \t\"net/url\"\n \t\"strconv\"\n \t\"strings\"\n+\t\"sync\"\n )\n \n const (\n@@ -494,25 +495,20 @@ func parseRequestLine(line string) (method, requestURI, proto string, ok bool) {\n \treturn line[:s1], line[s1+1 : s2], line[s2+1:], true\n }\n \n-// TODO(bradfitz): use a sync.Cache when available\n-var textprotoReaderCache = make(chan *textproto.Reader, 4)\n+var textprotoReaderPool sync.Pool\n \n func newTextprotoReader(br *bufio.Reader) *textproto.Reader {\n-\tselect {\n-\tcase r := <-textprotoReaderCache:\n-\t\tr.R = br\n-\t\treturn r\n-\tdefault:\n-\t\treturn textproto.NewReader(br)\n+\tif v := textprotoReaderPool.Get(); v != nil {\n+\t\ttr := v.(*textproto.Reader)\n+\t\ttr.R = br\n+\t\treturn tr\n \t}\n+\treturn textproto.NewReader(br)\n }\n \n func putTextprotoReader(r *textproto.Reader) {\n \tr.R = nil\n-\tselect {\n-\tcase textprotoReaderCache <- r:\n-\tdefault:\n-\t}\n+\ttextprotoReaderPool.Put(r)\n }\n \n // ReadRequest reads and parses a request from b.\n@@ -677,6 +673,11 @@ func parsePostForm(r *Request) (vs url.Values, err error) {\n \t\treturn\n \t}\n \tct := r.Header.Get(\"Content-Type\")\n+\t// RFC 2616, section 7.2.1 - empty type\n+\t//   SHOULD be treated as application/octet-stream\n+\tif ct == \"\" {\n+\t\tct = \"application/octet-stream\"\n+\t}\n \tct, _, err = mime.ParseMediaType(ct)\n \tswitch {\n \tcase ct == \"application/x-www-form-urlencoded\":\n@@ -707,7 +708,7 @@ func parsePostForm(r *Request) (vs url.Values, err error) {\n \t\t// orders to call too many functions here.\n \t\t// Clean this up and write more tests.\n \t\t// request_test.go contains the start of this,\n-\t\t// in TestRequestMultipartCallOrder.\n+\t\t// in TestParseMultipartFormOrder and others.\n \t}\n \treturn\n }"}, {"sha": "0c1e16b8d5eb93de47f610777a55d0c4db638d5c", "filename": "libgo/go/net/http/request_test.go", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Frequest_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Frequest_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Frequest_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -68,8 +68,9 @@ type parseContentTypeTest struct {\n \n var parseContentTypeTests = []parseContentTypeTest{\n \t{false, stringMap{\"Content-Type\": {\"text/plain\"}}},\n-\t// Non-existent keys are not placed. The value nil is illegal.\n-\t{true, stringMap{}},\n+\t// Empty content type is legal - shoult be treated as\n+\t// application/octet-stream (RFC 2616, section 7.2.1)\n+\t{false, stringMap{}},\n \t{true, stringMap{\"Content-Type\": {\"text/plain; boundary=\"}}},\n \t{false, stringMap{\"Content-Type\": {\"application/unknown\"}}},\n }\n@@ -198,15 +199,39 @@ func TestEmptyMultipartRequest(t *testing.T) {\n \ttestMissingFile(t, req)\n }\n \n-func TestRequestMultipartCallOrder(t *testing.T) {\n+// Test that ParseMultipartForm errors if called\n+// after MultipartReader on the same request.\n+func TestParseMultipartFormOrder(t *testing.T) {\n \treq := newTestMultipartRequest(t)\n-\t_, err := req.MultipartReader()\n-\tif err != nil {\n+\tif _, err := req.MultipartReader(); err != nil {\n+\t\tt.Fatalf(\"MultipartReader: %v\", err)\n+\t}\n+\tif err := req.ParseMultipartForm(1024); err == nil {\n+\t\tt.Fatal(\"expected an error from ParseMultipartForm after call to MultipartReader\")\n+\t}\n+}\n+\n+// Test that MultipartReader errors if called\n+// after ParseMultipartForm on the same request.\n+func TestMultipartReaderOrder(t *testing.T) {\n+\treq := newTestMultipartRequest(t)\n+\tif err := req.ParseMultipartForm(25); err != nil {\n+\t\tt.Fatalf(\"ParseMultipartForm: %v\", err)\n+\t}\n+\tif _, err := req.MultipartReader(); err == nil {\n+\t\tt.Fatal(\"expected an error from MultipartReader after call to ParseMultipartForm\")\n+\t}\n+}\n+\n+// Test that FormFile errors if called after\n+// MultipartReader on the same request.\n+func TestFormFileOrder(t *testing.T) {\n+\treq := newTestMultipartRequest(t)\n+\tif _, err := req.MultipartReader(); err != nil {\n \t\tt.Fatalf(\"MultipartReader: %v\", err)\n \t}\n-\terr = req.ParseMultipartForm(1024)\n-\tif err == nil {\n-\t\tt.Errorf(\"expected an error from ParseMultipartForm after call to MultipartReader\")\n+\tif _, _, err := req.FormFile(\"\"); err == nil {\n+\t\tt.Fatal(\"expected an error from FormFile after call to MultipartReader\")\n \t}\n }\n "}, {"sha": "2ec1d408728c1a49f90bc59a2538b5aceff1c1a9", "filename": "libgo/go/net/http/response.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -187,6 +187,7 @@ func (r *Response) ProtoAtLeast(major, minor int) bool {\n //  ContentLength\n //  Header, values for non-canonical keys will have unpredictable behavior\n //\n+// Body is closed after it is sent.\n func (r *Response) Write(w io.Writer) error {\n \n \t// Status line"}, {"sha": "f73172189e94985fbd9c815be98024fb376ce506", "filename": "libgo/go/net/http/response_test.go", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fresponse_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -14,6 +14,7 @@ import (\n \t\"io/ioutil\"\n \t\"net/url\"\n \t\"reflect\"\n+\t\"regexp\"\n \t\"strings\"\n \t\"testing\"\n )\n@@ -406,8 +407,7 @@ func TestWriteResponse(t *testing.T) {\n \t\t\tt.Errorf(\"#%d: %v\", i, err)\n \t\t\tcontinue\n \t\t}\n-\t\tbout := bytes.NewBuffer(nil)\n-\t\terr = resp.Write(bout)\n+\t\terr = resp.Write(ioutil.Discard)\n \t\tif err != nil {\n \t\t\tt.Errorf(\"#%d: %v\", i, err)\n \t\t\tcontinue\n@@ -506,6 +506,9 @@ func TestReadResponseCloseInMiddle(t *testing.T) {\n \t\trest, err := ioutil.ReadAll(bufr)\n \t\tcheckErr(err, \"ReadAll on remainder\")\n \t\tif e, g := \"Next Request Here\", string(rest); e != g {\n+\t\t\tg = regexp.MustCompile(`(xx+)`).ReplaceAllStringFunc(g, func(match string) string {\n+\t\t\t\treturn fmt.Sprintf(\"x(repeated x%d)\", len(match))\n+\t\t\t})\n \t\t\tfatalf(\"remainder = %q, expected %q\", g, e)\n \t\t}\n \t}"}, {"sha": "1dba1873ea5280499536453ed88d1ae1f7f2f796", "filename": "libgo/go/net/http/serve_test.go", "status": "modified", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fserve_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fserve_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fserve_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1934,6 +1934,31 @@ func TestWriteAfterHijack(t *testing.T) {\n \t}\n }\n \n+func TestDoubleHijack(t *testing.T) {\n+\treq := reqBytes(\"GET / HTTP/1.1\\nHost: golang.org\")\n+\tvar buf bytes.Buffer\n+\tconn := &rwTestConn{\n+\t\tReader: bytes.NewReader(req),\n+\t\tWriter: &buf,\n+\t\tclosec: make(chan bool, 1),\n+\t}\n+\thandler := HandlerFunc(func(rw ResponseWriter, r *Request) {\n+\t\tconn, _, err := rw.(Hijacker).Hijack()\n+\t\tif err != nil {\n+\t\t\tt.Error(err)\n+\t\t\treturn\n+\t\t}\n+\t\t_, _, err = rw.(Hijacker).Hijack()\n+\t\tif err == nil {\n+\t\t\tt.Errorf(\"got err = nil;  want err != nil\")\n+\t\t}\n+\t\tconn.Close()\n+\t})\n+\tln := &oneConnListener{conn: conn}\n+\tgo Serve(ln, handler)\n+\t<-conn.closec\n+}\n+\n // http://code.google.com/p/go/issues/detail?id=5955\n // Note that this does not test the \"request too large\"\n // exit path from the http server. This is intentional;\n@@ -2065,6 +2090,64 @@ func TestNoContentTypeOnNotModified(t *testing.T) {\n \t}\n }\n \n+// Issue 6995\n+// A server Handler can receive a Request, and then turn around and\n+// give a copy of that Request.Body out to the Transport (e.g. any\n+// proxy).  So then two people own that Request.Body (both the server\n+// and the http client), and both think they can close it on failure.\n+// Therefore, all incoming server requests Bodies need to be thread-safe.\n+func TestTransportAndServerSharedBodyRace(t *testing.T) {\n+\tdefer afterTest(t)\n+\n+\tconst bodySize = 1 << 20\n+\n+\tunblockBackend := make(chan bool)\n+\tbackend := httptest.NewServer(HandlerFunc(func(rw ResponseWriter, req *Request) {\n+\t\tio.CopyN(rw, req.Body, bodySize/2)\n+\t\t<-unblockBackend\n+\t}))\n+\tdefer backend.Close()\n+\n+\tbackendRespc := make(chan *Response, 1)\n+\tproxy := httptest.NewServer(HandlerFunc(func(rw ResponseWriter, req *Request) {\n+\t\tif req.RequestURI == \"/foo\" {\n+\t\t\trw.Write([]byte(\"bar\"))\n+\t\t\treturn\n+\t\t}\n+\t\treq2, _ := NewRequest(\"POST\", backend.URL, req.Body)\n+\t\treq2.ContentLength = bodySize\n+\n+\t\tbresp, err := DefaultClient.Do(req2)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"Proxy outbound request: %v\", err)\n+\t\t\treturn\n+\t\t}\n+\t\t_, err = io.CopyN(ioutil.Discard, bresp.Body, bodySize/4)\n+\t\tif err != nil {\n+\t\t\tt.Errorf(\"Proxy copy error: %v\", err)\n+\t\t\treturn\n+\t\t}\n+\t\tbackendRespc <- bresp // to close later\n+\n+\t\t// Try to cause a race: Both the DefaultTransport and the proxy handler's Server\n+\t\t// will try to read/close req.Body (aka req2.Body)\n+\t\tDefaultTransport.(*Transport).CancelRequest(req2)\n+\t\trw.Write([]byte(\"OK\"))\n+\t}))\n+\tdefer proxy.Close()\n+\n+\treq, _ := NewRequest(\"POST\", proxy.URL, io.LimitReader(neverEnding('a'), bodySize))\n+\tres, err := DefaultClient.Do(req)\n+\tif err != nil {\n+\t\tt.Fatalf(\"Original request: %v\", err)\n+\t}\n+\n+\t// Cleanup, so we don't leak goroutines.\n+\tres.Body.Close()\n+\tclose(unblockBackend)\n+\t(<-backendRespc).Body.Close()\n+}\n+\n func TestResponseWriterWriteStringAllocs(t *testing.T) {\n \tt.Skip(\"allocs test unreliable with gccgo\")\n \tht := newHandlerTest(HandlerFunc(func(w ResponseWriter, r *Request) {\n@@ -2391,3 +2474,28 @@ Host: golang.org\n \t\tb.Errorf(\"b.N=%d but handled %d\", b.N, handled)\n \t}\n }\n+\n+func BenchmarkServerHijack(b *testing.B) {\n+\tb.ReportAllocs()\n+\treq := reqBytes(`GET / HTTP/1.1\n+Host: golang.org\n+`)\n+\th := HandlerFunc(func(w ResponseWriter, r *Request) {\n+\t\tconn, _, err := w.(Hijacker).Hijack()\n+\t\tif err != nil {\n+\t\t\tpanic(err)\n+\t\t}\n+\t\tconn.Close()\n+\t})\n+\tconn := &rwTestConn{\n+\t\tWriter: ioutil.Discard,\n+\t\tclosec: make(chan bool, 1),\n+\t}\n+\tln := &oneConnListener{conn: conn}\n+\tfor i := 0; i < b.N; i++ {\n+\t\tconn.Reader = bytes.NewReader(req)\n+\t\tln.conn = conn\n+\t\tServe(ln, h)\n+\t\t<-conn.closec\n+\t}\n+}"}, {"sha": "7ebd8575f3beb7d1640b14451e8c0cfb12fe2aa1", "filename": "libgo/go/net/http/server.go", "status": "modified", "additions": 30, "deletions": 27, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fserver.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Fserver.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Fserver.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -435,56 +435,52 @@ func (srv *Server) newConn(rwc net.Conn) (c *conn, err error) {\n \treturn c, nil\n }\n \n-// TODO: use a sync.Cache instead\n var (\n-\tbufioReaderCache   = make(chan *bufio.Reader, 4)\n-\tbufioWriterCache2k = make(chan *bufio.Writer, 4)\n-\tbufioWriterCache4k = make(chan *bufio.Writer, 4)\n+\tbufioReaderPool   sync.Pool\n+\tbufioWriter2kPool sync.Pool\n+\tbufioWriter4kPool sync.Pool\n )\n \n-func bufioWriterCache(size int) chan *bufio.Writer {\n+func bufioWriterPool(size int) *sync.Pool {\n \tswitch size {\n \tcase 2 << 10:\n-\t\treturn bufioWriterCache2k\n+\t\treturn &bufioWriter2kPool\n \tcase 4 << 10:\n-\t\treturn bufioWriterCache4k\n+\t\treturn &bufioWriter4kPool\n \t}\n \treturn nil\n }\n \n func newBufioReader(r io.Reader) *bufio.Reader {\n-\tselect {\n-\tcase p := <-bufioReaderCache:\n-\t\tp.Reset(r)\n-\t\treturn p\n-\tdefault:\n-\t\treturn bufio.NewReader(r)\n+\tif v := bufioReaderPool.Get(); v != nil {\n+\t\tbr := v.(*bufio.Reader)\n+\t\tbr.Reset(r)\n+\t\treturn br\n \t}\n+\treturn bufio.NewReader(r)\n }\n \n func putBufioReader(br *bufio.Reader) {\n \tbr.Reset(nil)\n-\tselect {\n-\tcase bufioReaderCache <- br:\n-\tdefault:\n-\t}\n+\tbufioReaderPool.Put(br)\n }\n \n func newBufioWriterSize(w io.Writer, size int) *bufio.Writer {\n-\tselect {\n-\tcase p := <-bufioWriterCache(size):\n-\t\tp.Reset(w)\n-\t\treturn p\n-\tdefault:\n-\t\treturn bufio.NewWriterSize(w, size)\n+\tpool := bufioWriterPool(size)\n+\tif pool != nil {\n+\t\tif v := pool.Get(); v != nil {\n+\t\t\tbw := v.(*bufio.Writer)\n+\t\t\tbw.Reset(w)\n+\t\t\treturn bw\n+\t\t}\n \t}\n+\treturn bufio.NewWriterSize(w, size)\n }\n \n func putBufioWriter(bw *bufio.Writer) {\n \tbw.Reset(nil)\n-\tselect {\n-\tcase bufioWriterCache(bw.Available()) <- bw:\n-\tdefault:\n+\tif pool := bufioWriterPool(bw.Available()); pool != nil {\n+\t\tpool.Put(bw)\n \t}\n }\n \n@@ -1202,7 +1198,14 @@ func (w *response) Hijack() (rwc net.Conn, buf *bufio.ReadWriter, err error) {\n \tif w.wroteHeader {\n \t\tw.cw.flush()\n \t}\n-\treturn w.conn.hijack()\n+\t// Release the bufioWriter that writes to the chunk writer, it is not\n+\t// used after a connection has been hijacked.\n+\trwc, buf, err = w.conn.hijack()\n+\tif err == nil {\n+\t\tputBufioWriter(w.w)\n+\t\tw.w = nil\n+\t}\n+\treturn rwc, buf, err\n }\n \n func (w *response) CloseNotify() <-chan bool {"}, {"sha": "4a2bda19facf83d23bf79e51560c100ffc674327", "filename": "libgo/go/net/http/transfer.go", "status": "modified", "additions": 33, "deletions": 8, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -14,6 +14,7 @@ import (\n \t\"net/textproto\"\n \t\"strconv\"\n \t\"strings\"\n+\t\"sync\"\n )\n \n // transferWriter inspects the fields of a user-supplied Request or Response,\n@@ -331,17 +332,17 @@ func readTransfer(msg interface{}, r *bufio.Reader) (err error) {\n \t\tif noBodyExpected(t.RequestMethod) {\n \t\t\tt.Body = eofReader\n \t\t} else {\n-\t\t\tt.Body = &body{Reader: newChunkedReader(r), hdr: msg, r: r, closing: t.Close}\n+\t\t\tt.Body = &body{src: newChunkedReader(r), hdr: msg, r: r, closing: t.Close}\n \t\t}\n \tcase realLength == 0:\n \t\tt.Body = eofReader\n \tcase realLength > 0:\n-\t\tt.Body = &body{Reader: io.LimitReader(r, realLength), closing: t.Close}\n+\t\tt.Body = &body{src: io.LimitReader(r, realLength), closing: t.Close}\n \tdefault:\n \t\t// realLength < 0, i.e. \"Content-Length\" not mentioned in header\n \t\tif t.Close {\n \t\t\t// Close semantics (i.e. HTTP/1.0)\n-\t\t\tt.Body = &body{Reader: r, closing: t.Close}\n+\t\t\tt.Body = &body{src: r, closing: t.Close}\n \t\t} else {\n \t\t\t// Persistent connection (i.e. HTTP/1.1)\n \t\t\tt.Body = eofReader\n@@ -514,11 +515,13 @@ func fixTrailer(header Header, te []string) (Header, error) {\n // Close ensures that the body has been fully read\n // and then reads the trailer if necessary.\n type body struct {\n-\tio.Reader\n+\tsrc     io.Reader\n \thdr     interface{}   // non-nil (Response or Request) value means read trailer\n \tr       *bufio.Reader // underlying wire-format reader for the trailer\n \tclosing bool          // is the connection to be closed after reading body?\n-\tclosed  bool\n+\n+\tmu     sync.Mutex // guards closed, and calls to Read and Close\n+\tclosed bool\n }\n \n // ErrBodyReadAfterClose is returned when reading a Request or Response\n@@ -528,10 +531,17 @@ type body struct {\n var ErrBodyReadAfterClose = errors.New(\"http: invalid Read on closed Body\")\n \n func (b *body) Read(p []byte) (n int, err error) {\n+\tb.mu.Lock()\n+\tdefer b.mu.Unlock()\n \tif b.closed {\n \t\treturn 0, ErrBodyReadAfterClose\n \t}\n-\tn, err = b.Reader.Read(p)\n+\treturn b.readLocked(p)\n+}\n+\n+// Must hold b.mu.\n+func (b *body) readLocked(p []byte) (n int, err error) {\n+\tn, err = b.src.Read(p)\n \n \tif err == io.EOF {\n \t\t// Chunked case. Read the trailer.\n@@ -543,7 +553,7 @@ func (b *body) Read(p []byte) (n int, err error) {\n \t\t} else {\n \t\t\t// If the server declared the Content-Length, our body is a LimitedReader\n \t\t\t// and we need to check whether this EOF arrived early.\n-\t\t\tif lr, ok := b.Reader.(*io.LimitedReader); ok && lr.N > 0 {\n+\t\t\tif lr, ok := b.src.(*io.LimitedReader); ok && lr.N > 0 {\n \t\t\t\terr = io.ErrUnexpectedEOF\n \t\t\t}\n \t\t}\n@@ -618,6 +628,8 @@ func (b *body) readTrailer() error {\n }\n \n func (b *body) Close() error {\n+\tb.mu.Lock()\n+\tdefer b.mu.Unlock()\n \tif b.closed {\n \t\treturn nil\n \t}\n@@ -629,12 +641,25 @@ func (b *body) Close() error {\n \tdefault:\n \t\t// Fully consume the body, which will also lead to us reading\n \t\t// the trailer headers after the body, if present.\n-\t\t_, err = io.Copy(ioutil.Discard, b)\n+\t\t_, err = io.Copy(ioutil.Discard, bodyLocked{b})\n \t}\n \tb.closed = true\n \treturn err\n }\n \n+// bodyLocked is a io.Reader reading from a *body when its mutex is\n+// already held.\n+type bodyLocked struct {\n+\tb *body\n+}\n+\n+func (bl bodyLocked) Read(p []byte) (n int, err error) {\n+\tif bl.b.closed {\n+\t\treturn 0, ErrBodyReadAfterClose\n+\t}\n+\treturn bl.b.readLocked(p)\n+}\n+\n // parseContentLength trims whitespace from s and returns -1 if no value\n // is set, or the value if it's >= 0.\n func parseContentLength(cl string) (int64, error) {"}, {"sha": "fb5ef37a0f0e605f7e11d220130709f0a6a37606", "filename": "libgo/go/net/http/transfer_test.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ftransfer_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -12,9 +12,9 @@ import (\n \n func TestBodyReadBadTrailer(t *testing.T) {\n \tb := &body{\n-\t\tReader: strings.NewReader(\"foobar\"),\n-\t\thdr:    true, // force reading the trailer\n-\t\tr:      bufio.NewReader(strings.NewReader(\"\")),\n+\t\tsrc: strings.NewReader(\"foobar\"),\n+\t\thdr: true, // force reading the trailer\n+\t\tr:   bufio.NewReader(strings.NewReader(\"\")),\n \t}\n \tbuf := make([]byte, 7)\n \tn, err := b.Read(buf[:3])"}, {"sha": "2ce2b6b5180c86c6c73d047e8cda3f7665b2cc19", "filename": "libgo/go/net/http/transport_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fhttp%2Ftransport_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -798,8 +798,8 @@ func TestTransportPersistConnLeak(t *testing.T) {\n \n \t// We expect 0 or 1 extra goroutine, empirically.  Allow up to 5.\n \t// Previously we were leaking one per numReq.\n-\tt.Logf(\"goroutine growth: %d -> %d -> %d (delta: %d)\", n0, nhigh, nfinal, growth)\n \tif int(growth) > 5 {\n+\t\tt.Logf(\"goroutine growth: %d -> %d -> %d (delta: %d)\", n0, nhigh, nfinal, growth)\n \t\tt.Error(\"too many new goroutines\")\n \t}\n }"}, {"sha": "0582009b8bdb58169dff74f5e5131fee0075364f", "filename": "libgo/go/net/ip.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fip.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fip.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fip.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -623,6 +623,9 @@ func parseIPv6(s string, zoneAllowed bool) (ip IP, zone string) {\n \t\tfor k := ellipsis + n - 1; k >= ellipsis; k-- {\n \t\t\tip[k] = 0\n \t\t}\n+\t} else if ellipsis >= 0 {\n+\t\t// Ellipsis must represent at least one 0 group.\n+\t\treturn nil, zone\n \t}\n \treturn ip, zone\n }"}, {"sha": "ffeb9d315e703936f0f5c8b43e2579d9e431a4ba", "filename": "libgo/go/net/ip_test.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fip_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fip_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fip_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -25,6 +25,7 @@ var parseIPTests = []struct {\n \t{\"fe80::1%lo0\", nil},\n \t{\"fe80::1%911\", nil},\n \t{\"\", nil},\n+\t{\"a1:a2:a3:a4::b1:b2:b3:b4\", nil}, // Issue 6628\n }\n \n func TestParseIP(t *testing.T) {"}, {"sha": "a1a008ac413c6d12fed4b31fa982169dfe651a3c", "filename": "libgo/go/net/iprawsock_posix.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fiprawsock_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fiprawsock_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fiprawsock_posix.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -19,7 +19,7 @@ import (\n // that you do not uses these methods if it is important to receive a\n // full packet.\n //\n-// The Go 1 compatibliity guidelines make it impossible for us to\n+// The Go 1 compatibility guidelines make it impossible for us to\n // change the behavior of these methods; use Read or ReadMsgIP\n // instead.\n "}, {"sha": "a755ff2aacc49e3c3f79dd78b10a2ea522ce9932", "filename": "libgo/go/net/lookup_plan9.go", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Flookup_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Flookup_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Flookup_plan9.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -69,10 +69,31 @@ func queryDNS(addr string, typ string) (res []string, err error) {\n \treturn query(\"/net/dns\", addr+\" \"+typ, 1024)\n }\n \n+// toLower returns a lower-case version of in. Restricting us to\n+// ASCII is sufficient to handle the IP protocol names and allow\n+// us to not depend on the strings and unicode packages.\n+func toLower(in string) string {\n+\tfor _, c := range in {\n+\t\tif 'A' <= c && c <= 'Z' {\n+\t\t\t// Has upper case; need to fix.\n+\t\t\tout := []byte(in)\n+\t\t\tfor i := 0; i < len(in); i++ {\n+\t\t\t\tc := in[i]\n+\t\t\t\tif 'A' <= c && c <= 'Z' {\n+\t\t\t\t\tc += 'a' - 'A'\n+\t\t\t\t}\n+\t\t\t\tout[i] = c\n+\t\t\t}\n+\t\t\treturn string(out)\n+\t\t}\n+\t}\n+\treturn in\n+}\n+\n // lookupProtocol looks up IP protocol name and returns\n // the corresponding protocol number.\n func lookupProtocol(name string) (proto int, err error) {\n-\tlines, err := query(\"/net/cs\", \"!protocol=\"+name, 128)\n+\tlines, err := query(\"/net/cs\", \"!protocol=\"+toLower(name), 128)\n \tif err != nil {\n \t\treturn 0, err\n \t}\n@@ -94,7 +115,7 @@ func lookupProtocol(name string) (proto int, err error) {\n func lookupHost(host string) (addrs []string, err error) {\n \t// Use /net/cs instead of /net/dns because cs knows about\n \t// host names in local network (e.g. from /lib/ndb/local)\n-\tlines, err := queryCS(\"tcp\", host, \"1\")\n+\tlines, err := queryCS(\"net\", host, \"1\")\n \tif err != nil {\n \t\treturn\n \t}"}, {"sha": "c9fb433ec91b10edf57c3bbb8c3f265307ac5a71", "filename": "libgo/go/net/net_test.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fnet_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fnet_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fnet_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -231,12 +231,12 @@ func TestErrorNil(t *testing.T) {\n \t// Make Listen fail by relistening on the same address.\n \tl, err := Listen(\"tcp\", \"127.0.0.1:0\")\n \tif err != nil {\n-\t\tt.Fatal(\"Listen 127.0.0.1:0: %v\", err)\n+\t\tt.Fatalf(\"Listen 127.0.0.1:0: %v\", err)\n \t}\n \tdefer l.Close()\n \tl1, err := Listen(\"tcp\", l.Addr().String())\n \tif err == nil {\n-\t\tt.Fatal(\"second Listen %v: %v\", l.Addr(), err)\n+\t\tt.Fatalf(\"second Listen %v: %v\", l.Addr(), err)\n \t}\n \tif l1 != nil {\n \t\tt.Fatalf(\"Listen returned non-nil interface %T(%v) with err != nil\", l1, l1)\n@@ -245,12 +245,12 @@ func TestErrorNil(t *testing.T) {\n \t// Make ListenPacket fail by relistening on the same address.\n \tlp, err := ListenPacket(\"udp\", \"127.0.0.1:0\")\n \tif err != nil {\n-\t\tt.Fatal(\"Listen 127.0.0.1:0: %v\", err)\n+\t\tt.Fatalf(\"Listen 127.0.0.1:0: %v\", err)\n \t}\n \tdefer lp.Close()\n \tlp1, err := ListenPacket(\"udp\", lp.LocalAddr().String())\n \tif err == nil {\n-\t\tt.Fatal(\"second Listen %v: %v\", lp.LocalAddr(), err)\n+\t\tt.Fatalf(\"second Listen %v: %v\", lp.LocalAddr(), err)\n \t}\n \tif lp1 != nil {\n \t\tt.Fatalf(\"ListenPacket returned non-nil interface %T(%v) with err != nil\", lp1, lp1)"}, {"sha": "ee6e7e99522a2cc04346e46390d022bfc7f8451b", "filename": "libgo/go/net/parse.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fparse.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fparse.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fparse.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -67,7 +67,7 @@ func open(name string) (*file, error) {\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\treturn &file{fd, make([]byte, os.Getpagesize())[0:0], false}, nil\n+\treturn &file{fd, make([]byte, 0, os.Getpagesize()), false}, nil\n }\n \n func byteIndex(s string, c byte) int {"}, {"sha": "b5972e09c98bc8dc87b74515aa28f02673a71316", "filename": "libgo/go/net/testdata/resolv.conf", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Ftestdata%2Fresolv.conf", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Ftestdata%2Fresolv.conf", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Ftestdata%2Fresolv.conf?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,5 @@\n+# /etc/resolv.conf\n+\n+domain Home\n+nameserver 192.168.1.1\n+options ndots:5 timeout:10 attempts:3 rotate"}, {"sha": "bb00f110fe97bd70334036c908e0796b33935ea9", "filename": "libgo/go/net/z_last_test.go", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fz_last_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fnet%2Fz_last_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fz_last_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,34 @@\n+// Copyright 2009 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package net\n+\n+import (\n+\t\"fmt\"\n+\t\"testing\"\n+)\n+\n+func TestDNSThreadLimit(t *testing.T) {\n+\tif testing.Short() || !*testExternal {\n+\t\tt.Skip(\"skipping test to avoid external network\")\n+\t}\n+\n+\tconst N = 10000\n+\tc := make(chan int, N)\n+\tfor i := 0; i < N; i++ {\n+\t\tgo func(i int) {\n+\t\t\tLookupIP(fmt.Sprintf(\"%d.net-test.golang.org\", i))\n+\t\t\tc <- 1\n+\t\t}(i)\n+\t}\n+\t// Don't bother waiting for the stragglers; stop at 0.9 N.\n+\tfor i := 0; i < N*9/10; i++ {\n+\t\tif i%100 == 0 {\n+\t\t\t//println(\"TestDNSThreadLimit:\", i)\n+\t\t}\n+\t\t<-c\n+\t}\n+\n+\t// If we're still here, it worked.\n+}"}, {"sha": "32868fc7463b80e10cbfbb331b727b841a7796b9", "filename": "libgo/go/os/exec/exec_test.go", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Fexec%2Fexec_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Fexec%2Fexec_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fexec%2Fexec_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -2,7 +2,10 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-package exec\n+// Use an external test to avoid os/exec -> net/http -> crypto/x509 -> os/exec\n+// circular dependency on non-cgo darwin.\n+\n+package exec_test\n \n import (\n \t\"bufio\"\n@@ -14,6 +17,7 @@ import (\n \t\"net/http\"\n \t\"net/http/httptest\"\n \t\"os\"\n+\t\"os/exec\"\n \t\"path/filepath\"\n \t\"runtime\"\n \t\"strconv\"\n@@ -22,10 +26,10 @@ import (\n \t\"time\"\n )\n \n-func helperCommand(s ...string) *Cmd {\n+func helperCommand(s ...string) *exec.Cmd {\n \tcs := []string{\"-test.run=TestHelperProcess\", \"--\"}\n \tcs = append(cs, s...)\n-\tcmd := Command(os.Args[0], cs...)\n+\tcmd := exec.Command(os.Args[0], cs...)\n \tcmd.Env = []string{\"GO_WANT_HELPER_PROCESS=1\"}\n \tpath := os.Getenv(\"LD_LIBRARY_PATH\")\n \tif path != \"\" {\n@@ -62,8 +66,8 @@ func TestCatStdin(t *testing.T) {\n func TestCatGoodAndBadFile(t *testing.T) {\n \t// Testing combined output and error values.\n \tbs, err := helperCommand(\"cat\", \"/bogus/file.foo\", \"exec_test.go\").CombinedOutput()\n-\tif _, ok := err.(*ExitError); !ok {\n-\t\tt.Errorf(\"expected *ExitError from cat combined; got %T: %v\", err, err)\n+\tif _, ok := err.(*exec.ExitError); !ok {\n+\t\tt.Errorf(\"expected *exec.ExitError from cat combined; got %T: %v\", err, err)\n \t}\n \ts := string(bs)\n \tsp := strings.SplitN(s, \"\\n\", 2)\n@@ -81,7 +85,7 @@ func TestCatGoodAndBadFile(t *testing.T) {\n \n func TestNoExistBinary(t *testing.T) {\n \t// Can't run a non-existent binary\n-\terr := Command(\"/no-exist-binary\").Run()\n+\terr := exec.Command(\"/no-exist-binary\").Run()\n \tif err == nil {\n \t\tt.Error(\"expected error from /no-exist-binary\")\n \t}\n@@ -96,12 +100,12 @@ func TestExitStatus(t *testing.T) {\n \tcase \"plan9\":\n \t\twant = fmt.Sprintf(\"exit status: '%s %d: 42'\", filepath.Base(cmd.Path), cmd.ProcessState.Pid())\n \t}\n-\tif werr, ok := err.(*ExitError); ok {\n+\tif werr, ok := err.(*exec.ExitError); ok {\n \t\tif s := werr.Error(); s != want {\n \t\t\tt.Errorf(\"from exit 42 got exit %q, want %q\", s, want)\n \t\t}\n \t} else {\n-\t\tt.Fatalf(\"expected *ExitError from exit 42; got %T: %v\", err, err)\n+\t\tt.Fatalf(\"expected *exec.ExitError from exit 42; got %T: %v\", err, err)\n \t}\n }\n \n@@ -188,7 +192,7 @@ func TestStdinClose(t *testing.T) {\n func TestPipeLookPathLeak(t *testing.T) {\n \tfd0 := numOpenFDS(t)\n \tfor i := 0; i < 4; i++ {\n-\t\tcmd := Command(\"something-that-does-not-exist-binary\")\n+\t\tcmd := exec.Command(\"something-that-does-not-exist-binary\")\n \t\tcmd.StdoutPipe()\n \t\tcmd.StderrPipe()\n \t\tcmd.StdinPipe()\n@@ -203,7 +207,7 @@ func TestPipeLookPathLeak(t *testing.T) {\n }\n \n func numOpenFDS(t *testing.T) int {\n-\tlsof, err := Command(\"lsof\", \"-n\", \"-p\", strconv.Itoa(os.Getpid())).Output()\n+\tlsof, err := exec.Command(\"lsof\", \"-n\", \"-p\", strconv.Itoa(os.Getpid())).Output()\n \tif err != nil {\n \t\tt.Skip(\"skipping test; error finding or running lsof\")\n \t\treturn 0\n@@ -429,7 +433,7 @@ func TestExtraFilesRace(t *testing.T) {\n \t\t}\n \t\treturn f\n \t}\n-\trunCommand := func(c *Cmd, out chan<- string) {\n+\trunCommand := func(c *exec.Cmd, out chan<- string) {\n \t\tbout, err := c.CombinedOutput()\n \t\tif err != nil {\n \t\t\tout <- \"ERROR:\" + err.Error()\n@@ -581,7 +585,7 @@ func TestHelperProcess(*testing.T) {\n \t\t\t\t}\n \t\t\t\tif got := f.Fd(); got != wantfd {\n \t\t\t\t\tfmt.Printf(\"leaked parent file. fd = %d; want %d\\n\", got, wantfd)\n-\t\t\t\t\tout, _ := Command(ofcmd, \"-p\", fmt.Sprint(os.Getpid())).CombinedOutput()\n+\t\t\t\t\tout, _ := exec.Command(ofcmd, \"-p\", fmt.Sprint(os.Getpid())).CombinedOutput()\n \t\t\t\t\tfmt.Print(string(out))\n \t\t\t\t\tos.Exit(1)\n \t\t\t\t}"}, {"sha": "b4a745801621585eaf6197b678d286da2c839c2c", "filename": "libgo/go/os/file.go", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Ffile.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Ffile.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ffile.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -140,6 +140,9 @@ func (f *File) Write(b []byte) (n int, err error) {\n \tif n < 0 {\n \t\tn = 0\n \t}\n+\tif n != len(b) {\n+\t\terr = io.ErrShortWrite\n+\t}\n \n \tepipecheck(f, e)\n \n@@ -247,3 +250,8 @@ func Create(name string) (file *File, err error) {\n \n // lstat is overridden in tests.\n var lstat = Lstat\n+\n+// Rename renames (moves) a file. OS-specific restrictions might apply.\n+func Rename(oldpath, newpath string) error {\n+\treturn rename(oldpath, newpath)\n+}"}, {"sha": "e6496558ca5ed95253e9e5912f92f77627eb5e1c", "filename": "libgo/go/os/file_plan9.go", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Ffile_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Ffile_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ffile_plan9.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -313,8 +313,31 @@ func Remove(name string) error {\n \treturn nil\n }\n \n-// Rename renames a file.\n-func Rename(oldname, newname string) error {\n+// HasPrefix from the strings package.\n+func hasPrefix(s, prefix string) bool {\n+\treturn len(s) >= len(prefix) && s[0:len(prefix)] == prefix\n+}\n+\n+// Variant of LastIndex from the strings package.\n+func lastIndex(s string, sep byte) int {\n+\tfor i := len(s) - 1; i >= 0; i-- {\n+\t\tif s[i] == sep {\n+\t\t\treturn i\n+\t\t}\n+\t}\n+\treturn -1\n+}\n+\n+func rename(oldname, newname string) error {\n+\tdirname := oldname[:lastIndex(oldname, '/')+1]\n+\tif hasPrefix(newname, dirname) {\n+\t\tnewname = newname[len(dirname):]\n+\t}\n+\n+\t// If newname still contains slashes after removing the oldname\n+\t// prefix, the rename is cross-directory and must be rejected.\n+\t// This case is caught by d.Marshal below.\n+\n \tvar d syscall.Dir\n \n \td.Null()\n@@ -323,10 +346,10 @@ func Rename(oldname, newname string) error {\n \tbuf := make([]byte, syscall.STATFIXLEN+len(d.Name))\n \tn, err := d.Marshal(buf[:])\n \tif err != nil {\n-\t\treturn &PathError{\"rename\", oldname, err}\n+\t\treturn &LinkError{\"rename\", oldname, newname, err}\n \t}\n \tif err = syscall.Wstat(oldname, buf[:n]); err != nil {\n-\t\treturn &PathError{\"rename\", oldname, err}\n+\t\treturn &LinkError{\"rename\", oldname, newname, err}\n \t}\n \treturn nil\n }"}, {"sha": "4a17877547dff0b158aad86e6bc644ed827a3057", "filename": "libgo/go/os/file_posix.go", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Ffile_posix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Ffile_posix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ffile_posix.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -48,8 +48,7 @@ func Readlink(name string) (string, error) {\n \t}\n }\n \n-// Rename renames a file.\n-func Rename(oldname, newname string) error {\n+func rename(oldname, newname string) error {\n \te := syscall.Rename(oldname, newname)\n \tif e != nil {\n \t\treturn &LinkError{\"rename\", oldname, newname, e}\n@@ -145,7 +144,7 @@ func (f *File) Truncate(size int64) error {\n // of recently written data to disk.\n func (f *File) Sync() (err error) {\n \tif f == nil {\n-\t\treturn syscall.EINVAL\n+\t\treturn ErrInvalid\n \t}\n \tif e := syscall.Fsync(f.fd); e != nil {\n \t\treturn NewSyscallError(\"fsync\", e)"}, {"sha": "2a7b958a4b48b87f0b486ee28b97890a95c3abb9", "filename": "libgo/go/os/file_unix.go", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Ffile_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Ffile_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Ffile_unix.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -171,16 +171,19 @@ func (f *File) readdir(n int) (fi []FileInfo, err error) {\n \tif dirname == \"\" {\n \t\tdirname = \".\"\n \t}\n-\tdirname += \"/\"\n \tnames, err := f.Readdirnames(n)\n-\tfi = make([]FileInfo, len(names))\n-\tfor i, filename := range names {\n-\t\tfip, lerr := lstat(dirname + filename)\n-\t\tif lerr != nil {\n-\t\t\tfi[i] = &fileStat{name: filename}\n+\tfi = make([]FileInfo, 0, len(names))\n+\tfor _, filename := range names {\n+\t\tfip, lerr := lstat(dirname + \"/\" + filename)\n+\t\tif IsNotExist(lerr) {\n+\t\t\t// File disappeared between readdir + stat.\n+\t\t\t// Just treat it as if it didn't exist.\n \t\t\tcontinue\n \t\t}\n-\t\tfi[i] = fip\n+\t\tif lerr != nil {\n+\t\t\treturn fi, lerr\n+\t\t}\n+\t\tfi = append(fi, fip)\n \t}\n \treturn fi, err\n }"}, {"sha": "43d4677b0dd2507603b6a3ab2e5ce6f03f03a36d", "filename": "libgo/go/os/os_test.go", "status": "modified", "additions": 112, "deletions": 0, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Fos_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Fos_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fos_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -6,14 +6,17 @@ package os_test\n \n import (\n \t\"bytes\"\n+\t\"errors\"\n \t\"flag\"\n \t\"fmt\"\n \t\"io\"\n \t\"io/ioutil\"\n \t. \"os\"\n \tosexec \"os/exec\"\n \t\"path/filepath\"\n+\t\"reflect\"\n \t\"runtime\"\n+\t\"sort\"\n \t\"strings\"\n \t\"syscall\"\n \t\"testing\"\n@@ -380,6 +383,83 @@ func TestReaddirNValues(t *testing.T) {\n \t}\n }\n \n+func touch(t *testing.T, name string) {\n+\tf, err := Create(name)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tif err := f.Close(); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+}\n+\n+func TestReaddirStatFailures(t *testing.T) {\n+\tif runtime.GOOS == \"windows\" {\n+\t\t// Windows already does this correctly, but is\n+\t\t// structured with different syscalls such that it\n+\t\t// doesn't use Lstat, so the hook below for testing it\n+\t\t// wouldn't work.\n+\t\tt.Skipf(\"skipping test on %v\", runtime.GOOS)\n+\t}\n+\tdir, err := ioutil.TempDir(\"\", \"\")\n+\tif err != nil {\n+\t\tt.Fatalf(\"TempDir: %v\", err)\n+\t}\n+\tdefer RemoveAll(dir)\n+\ttouch(t, filepath.Join(dir, \"good1\"))\n+\ttouch(t, filepath.Join(dir, \"x\")) // will disappear or have an error\n+\ttouch(t, filepath.Join(dir, \"good2\"))\n+\tdefer func() {\n+\t\t*LstatP = Lstat\n+\t}()\n+\tvar xerr error // error to return for x\n+\t*LstatP = func(path string) (FileInfo, error) {\n+\t\tif xerr != nil && strings.HasSuffix(path, \"x\") {\n+\t\t\treturn nil, xerr\n+\t\t}\n+\t\treturn Lstat(path)\n+\t}\n+\treadDir := func() ([]FileInfo, error) {\n+\t\td, err := Open(dir)\n+\t\tif err != nil {\n+\t\t\tt.Fatal(err)\n+\t\t}\n+\t\tdefer d.Close()\n+\t\treturn d.Readdir(-1)\n+\t}\n+\tmustReadDir := func(testName string) []FileInfo {\n+\t\tfis, err := readDir()\n+\t\tif err != nil {\n+\t\t\tt.Fatalf(\"%s: Readdir: %v\", testName, err)\n+\t\t}\n+\t\treturn fis\n+\t}\n+\tnames := func(fis []FileInfo) []string {\n+\t\ts := make([]string, len(fis))\n+\t\tfor i, fi := range fis {\n+\t\t\ts[i] = fi.Name()\n+\t\t}\n+\t\tsort.Strings(s)\n+\t\treturn s\n+\t}\n+\n+\tif got, want := names(mustReadDir(\"inital readdir\")),\n+\t\t[]string{\"good1\", \"good2\", \"x\"}; !reflect.DeepEqual(got, want) {\n+\t\tt.Errorf(\"initial readdir got %q; want %q\", got, want)\n+\t}\n+\n+\txerr = ErrNotExist\n+\tif got, want := names(mustReadDir(\"with x disappearing\")),\n+\t\t[]string{\"good1\", \"good2\"}; !reflect.DeepEqual(got, want) {\n+\t\tt.Errorf(\"with x disappearing, got %q; want %q\", got, want)\n+\t}\n+\n+\txerr = errors.New(\"some real error\")\n+\tif _, err := readDir(); err != xerr {\n+\t\tt.Errorf(\"with a non-ErrNotExist error, got error %v; want %v\", err, xerr)\n+\t}\n+}\n+\n func TestHardLink(t *testing.T) {\n \t// Hardlinks are not supported under windows or Plan 9.\n \tif runtime.GOOS == \"windows\" || runtime.GOOS == \"plan9\" {\n@@ -1210,3 +1290,35 @@ func TestKillFindProcess(t *testing.T) {\n \t\t}\n \t})\n }\n+\n+var nilFileMethodTests = []struct {\n+\tname string\n+\tf    func(*File) error\n+}{\n+\t{\"Chdir\", func(f *File) error { return f.Chdir() }},\n+\t{\"Close\", func(f *File) error { return f.Close() }},\n+\t{\"Chmod\", func(f *File) error { return f.Chmod(0) }},\n+\t{\"Chown\", func(f *File) error { return f.Chown(0, 0) }},\n+\t{\"Read\", func(f *File) error { _, err := f.Read(make([]byte, 0)); return err }},\n+\t{\"ReadAt\", func(f *File) error { _, err := f.ReadAt(make([]byte, 0), 0); return err }},\n+\t{\"Readdir\", func(f *File) error { _, err := f.Readdir(1); return err }},\n+\t{\"Readdirnames\", func(f *File) error { _, err := f.Readdirnames(1); return err }},\n+\t{\"Seek\", func(f *File) error { _, err := f.Seek(0, 0); return err }},\n+\t{\"Stat\", func(f *File) error { _, err := f.Stat(); return err }},\n+\t{\"Sync\", func(f *File) error { return f.Sync() }},\n+\t{\"Truncate\", func(f *File) error { return f.Truncate(0) }},\n+\t{\"Write\", func(f *File) error { _, err := f.Write(make([]byte, 0)); return err }},\n+\t{\"WriteAt\", func(f *File) error { _, err := f.WriteAt(make([]byte, 0), 0); return err }},\n+\t{\"WriteString\", func(f *File) error { _, err := f.WriteString(\"\"); return err }},\n+}\n+\n+// Test that all File methods give ErrInvalid if the receiver is nil.\n+func TestNilFileMethods(t *testing.T) {\n+\tfor _, tt := range nilFileMethodTests {\n+\t\tvar file *File\n+\t\tgot := tt.f(file)\n+\t\tif got != ErrInvalid {\n+\t\t\tt.Errorf(\"%v should fail when f is nil; got %v\", tt.name, got)\n+\t\t}\n+\t}\n+}"}, {"sha": "1e8a66122503f4703fdabbe0e0fd8c898eeead5c", "filename": "libgo/go/os/os_unix_test.go", "status": "modified", "additions": 0, "deletions": 38, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Fos_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fos%2Fos_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fos_unix_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -74,41 +74,3 @@ func TestChown(t *testing.T) {\n \t\tcheckUidGid(t, f.Name(), int(sys.Uid), gid)\n \t}\n }\n-\n-func TestReaddirWithBadLstat(t *testing.T) {\n-\thandle, err := Open(sfdir)\n-\tfailfile := sfdir + \"/\" + sfname\n-\tif err != nil {\n-\t\tt.Fatalf(\"Couldn't open %s: %s\", sfdir, err)\n-\t}\n-\n-\t*LstatP = func(file string) (FileInfo, error) {\n-\t\tif file == failfile {\n-\t\t\tvar fi FileInfo\n-\t\t\treturn fi, ErrInvalid\n-\t\t}\n-\t\treturn Lstat(file)\n-\t}\n-\tdefer func() { *LstatP = Lstat }()\n-\n-\tdirs, err := handle.Readdir(-1)\n-\tif err != nil {\n-\t\tt.Fatalf(\"Expected Readdir to return no error, got %v\", err)\n-\t}\n-\tfoundfail := false\n-\tfor _, dir := range dirs {\n-\t\tif dir.Name() == sfname {\n-\t\t\tfoundfail = true\n-\t\t\tif dir.Sys() != nil {\n-\t\t\t\tt.Errorf(\"Expected Readdir for %s should not contain Sys\", failfile)\n-\t\t\t}\n-\t\t} else {\n-\t\t\tif dir.Sys() == nil {\n-\t\t\t\tt.Errorf(\"Readdir for every file other than %s should contain Sys, but %s/%s didn't either\", failfile, sfdir, dir.Name())\n-\t\t\t}\n-\t\t}\n-\t}\n-\tif !foundfail {\n-\t\tt.Fatalf(\"Expected %s from Readdir, but didn't find it\", failfile)\n-\t}\n-}"}, {"sha": "0cf9e3bca1187d8c3cfc5d3ed86c3613b54ec270", "filename": "libgo/go/path/filepath/export_test.go", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fpath%2Ffilepath%2Fexport_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fpath%2Ffilepath%2Fexport_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fpath%2Ffilepath%2Fexport_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package filepath\n+\n+var LstatP = &lstat"}, {"sha": "65d29bf9f9db6f149393501cc800c1e48b2ba951", "filename": "libgo/go/path/filepath/path.go", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -336,6 +336,8 @@ var SkipDir = errors.New(\"skip this directory\")\n // the next file.\n type WalkFunc func(path string, info os.FileInfo, err error) error\n \n+var lstat = os.Lstat // for testing\n+\n // walk recursively descends path, calling w.\n func walk(path string, info os.FileInfo, walkFn WalkFunc) error {\n \terr := walkFn(path, info, nil)\n@@ -350,17 +352,25 @@ func walk(path string, info os.FileInfo, walkFn WalkFunc) error {\n \t\treturn nil\n \t}\n \n-\tlist, err := readDir(path)\n+\tnames, err := readDirNames(path)\n \tif err != nil {\n \t\treturn walkFn(path, info, err)\n \t}\n \n-\tfor _, fileInfo := range list {\n-\t\terr = walk(Join(path, fileInfo.Name()), fileInfo, walkFn)\n+\tfor _, name := range names {\n+\t\tfilename := Join(path, name)\n+\t\tfileInfo, err := lstat(filename)\n \t\tif err != nil {\n-\t\t\tif !fileInfo.IsDir() || err != SkipDir {\n+\t\t\tif err := walkFn(filename, fileInfo, err); err != nil && err != SkipDir {\n \t\t\t\treturn err\n \t\t\t}\n+\t\t} else {\n+\t\t\terr = walk(filename, fileInfo, walkFn)\n+\t\t\tif err != nil {\n+\t\t\t\tif !fileInfo.IsDir() || err != SkipDir {\n+\t\t\t\t\treturn err\n+\t\t\t\t}\n+\t\t\t}\n \t\t}\n \t}\n \treturn nil\n@@ -380,30 +390,22 @@ func Walk(root string, walkFn WalkFunc) error {\n \treturn walk(root, info, walkFn)\n }\n \n-// readDir reads the directory named by dirname and returns\n+// readDirNames reads the directory named by dirname and returns\n // a sorted list of directory entries.\n-// Copied from io/ioutil to avoid the circular import.\n-func readDir(dirname string) ([]os.FileInfo, error) {\n+func readDirNames(dirname string) ([]string, error) {\n \tf, err := os.Open(dirname)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tlist, err := f.Readdir(-1)\n+\tnames, err := f.Readdirnames(-1)\n \tf.Close()\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tsort.Sort(byName(list))\n-\treturn list, nil\n+\tsort.Strings(names)\n+\treturn names, nil\n }\n \n-// byName implements sort.Interface.\n-type byName []os.FileInfo\n-\n-func (f byName) Len() int           { return len(f) }\n-func (f byName) Less(i, j int) bool { return f[i].Name() < f[j].Name() }\n-func (f byName) Swap(i, j int)      { f[i], f[j] = f[j], f[i] }\n-\n // Base returns the last element of path.\n // Trailing path separators are removed before extracting the last element.\n // If the path is empty, Base returns \".\"."}, {"sha": "dc87d791037ae9746298e77632f7c69dc4529bde", "filename": "libgo/go/path/filepath/path_test.go", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fpath%2Ffilepath%2Fpath_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -5,6 +5,7 @@\n package filepath_test\n \n import (\n+\t\"errors\"\n \t\"io/ioutil\"\n \t\"os\"\n \t\"path/filepath\"\n@@ -461,6 +462,63 @@ func TestWalk(t *testing.T) {\n \t}\n }\n \n+func touch(t *testing.T, name string) {\n+\tf, err := os.Create(name)\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tif err := f.Close(); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+}\n+\n+func TestWalkFileError(t *testing.T) {\n+\ttd, err := ioutil.TempDir(\"\", \"walktest\")\n+\tif err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\tdefer os.RemoveAll(td)\n+\n+\ttouch(t, filepath.Join(td, \"foo\"))\n+\ttouch(t, filepath.Join(td, \"bar\"))\n+\tdir := filepath.Join(td, \"dir\")\n+\tif err := os.MkdirAll(filepath.Join(td, \"dir\"), 0755); err != nil {\n+\t\tt.Fatal(err)\n+\t}\n+\ttouch(t, filepath.Join(dir, \"baz\"))\n+\ttouch(t, filepath.Join(dir, \"stat-error\"))\n+\tdefer func() {\n+\t\t*filepath.LstatP = os.Lstat\n+\t}()\n+\tstatErr := errors.New(\"some stat error\")\n+\t*filepath.LstatP = func(path string) (os.FileInfo, error) {\n+\t\tif strings.HasSuffix(path, \"stat-error\") {\n+\t\t\treturn nil, statErr\n+\t\t}\n+\t\treturn os.Lstat(path)\n+\t}\n+\tgot := map[string]error{}\n+\terr = filepath.Walk(td, func(path string, fi os.FileInfo, err error) error {\n+\t\trel, _ := filepath.Rel(td, path)\n+\t\tgot[filepath.ToSlash(rel)] = err\n+\t\treturn nil\n+\t})\n+\tif err != nil {\n+\t\tt.Errorf(\"Walk error: %v\", err)\n+\t}\n+\twant := map[string]error{\n+\t\t\".\":              nil,\n+\t\t\"foo\":            nil,\n+\t\t\"bar\":            nil,\n+\t\t\"dir\":            nil,\n+\t\t\"dir/baz\":        nil,\n+\t\t\"dir/stat-error\": statErr,\n+\t}\n+\tif !reflect.DeepEqual(got, want) {\n+\t\tt.Errorf(\"Walked %#v; want %#v\", got, want)\n+\t}\n+}\n+\n var basetests = []PathTest{\n \t{\"\", \".\"},\n \t{\".\", \".\"},"}, {"sha": "6c015ad029fc244d8521f5dd2b392eb6cc89daba", "filename": "libgo/go/reflect/all_test.go", "status": "modified", "additions": 41, "deletions": 5, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fall_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fall_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fall_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -678,6 +678,7 @@ var deepEqualTests = []DeepEqualTest{\n \t{1, nil, false},\n \t{fn1, fn3, false},\n \t{fn3, fn3, false},\n+\t{[][]int{[]int{1}}, [][]int{[]int{2}}, false},\n \n \t// Nil vs empty: not the same.\n \t{[]int{}, []int(nil), false},\n@@ -1456,21 +1457,21 @@ func takesNonEmpty(n nonEmptyStruct) int {\n }\n \n func TestCallWithStruct(t *testing.T) {\n-\tr := ValueOf(returnEmpty).Call([]Value{})\n+\tr := ValueOf(returnEmpty).Call(nil)\n \tif len(r) != 1 || r[0].Type() != TypeOf(emptyStruct{}) {\n-\t\tt.Errorf(\"returning empty struct returned %s instead\", r)\n+\t\tt.Errorf(\"returning empty struct returned %#v instead\", r)\n \t}\n \tr = ValueOf(takesEmpty).Call([]Value{ValueOf(emptyStruct{})})\n \tif len(r) != 0 {\n-\t\tt.Errorf(\"takesEmpty returned values: %s\", r)\n+\t\tt.Errorf(\"takesEmpty returned values: %#v\", r)\n \t}\n \tr = ValueOf(returnNonEmpty).Call([]Value{ValueOf(42)})\n \tif len(r) != 1 || r[0].Type() != TypeOf(nonEmptyStruct{}) || r[0].Field(0).Int() != 42 {\n-\t\tt.Errorf(\"returnNonEmpty returned %s\", r)\n+\t\tt.Errorf(\"returnNonEmpty returned %#v\", r)\n \t}\n \tr = ValueOf(takesNonEmpty).Call([]Value{ValueOf(nonEmptyStruct{member: 42})})\n \tif len(r) != 1 || r[0].Type() != TypeOf(1) || r[0].Int() != 42 {\n-\t\tt.Errorf(\"takesNonEmpty returned %s\", r)\n+\t\tt.Errorf(\"takesNonEmpty returned %#v\", r)\n \t}\n }\n \n@@ -3687,3 +3688,38 @@ func (x *exhaustive) Choose(max int) int {\n func (x *exhaustive) Maybe() bool {\n \treturn x.Choose(2) == 1\n }\n+\n+func GCFunc(args []Value) []Value {\n+\truntime.GC()\n+\treturn []Value{}\n+}\n+\n+func TestReflectFuncTraceback(t *testing.T) {\n+\tf := MakeFunc(TypeOf(func() {}), GCFunc)\n+\tf.Call([]Value{})\n+}\n+\n+func (p Point) GCMethod(k int) int {\n+\truntime.GC()\n+\treturn k + p.x\n+}\n+\n+func TestReflectMethodTraceback(t *testing.T) {\n+\tp := Point{3, 4}\n+\tm := ValueOf(p).MethodByName(\"GCMethod\")\n+\ti := ValueOf(m.Interface()).Call([]Value{ValueOf(5)})[0].Int()\n+\tif i != 8 {\n+\t\tt.Errorf(\"Call returned %d; want 8\", i)\n+\t}\n+}\n+\n+func TestBigZero(t *testing.T) {\n+\tconst size = 1 << 10\n+\tvar v [size]byte\n+\tz := Zero(ValueOf(v).Type()).Interface().([size]byte)\n+\tfor i := 0; i < size; i++ {\n+\t\tif z[i] != 0 {\n+\t\t\tt.Fatalf(\"Zero object not all zero, index %d\", i)\n+\t\t}\n+\t}\n+}"}, {"sha": "f63715c9afc9862681422180aa4ba08b078215c2", "filename": "libgo/go/reflect/deepequal.go", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fdeepequal.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fdeepequal.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fdeepequal.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -62,9 +62,6 @@ func deepValueEqual(v1, v2 Value, visited map[visit]bool, depth int) bool {\n \n \tswitch v1.Kind() {\n \tcase Array:\n-\t\tif v1.Len() != v2.Len() {\n-\t\t\treturn false\n-\t\t}\n \t\tfor i := 0; i < v1.Len(); i++ {\n \t\t\tif !deepValueEqual(v1.Index(i), v2.Index(i), visited, depth+1) {\n \t\t\t\treturn false"}, {"sha": "03ddd49f008bd282963e02212d4203ffe3b19d28", "filename": "libgo/go/reflect/makefunc.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fmakefunc.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fmakefunc.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefunc.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -87,7 +87,7 @@ func makeFuncStub()\n // by code like Convert and Interface and Assign.\n func makeMethodValue(op string, v Value) Value {\n \tif v.flag&flagMethod == 0 {\n-\t\tpanic(\"reflect: internal error: invalid use of makePartialFunc\")\n+\t\tpanic(\"reflect: internal error: invalid use of makeMethodValue\")\n \t}\n \n \tswitch runtime.GOARCH {\n@@ -99,7 +99,7 @@ func makeMethodValue(op string, v Value) Value {\n \t// Ignoring the flagMethod bit, v describes the receiver, not the method type.\n \tfl := v.flag & (flagRO | flagAddr | flagIndir)\n \tfl |= flag(v.typ.Kind()) << flagKindShift\n-\trcvr := Value{v.typ, v.val, fl}\n+\trcvr := Value{v.typ, v.ptr /* v.scalar, */, fl}\n \n \t// v.Type returns the actual type of the method value.\n \tft := v.Type().(*rtype)"}, {"sha": "46cd3ad5144b83e5a2d1a287f7c19ea35074fa5b", "filename": "libgo/go/reflect/makefuncgo_386.go", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fmakefuncgo_386.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fmakefuncgo_386.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefuncgo_386.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -112,9 +112,9 @@ func MakeFuncStubGo(regs *i386Regs, c *makeFuncImpl) {\n \t\t\toff = align(off, uintptr(typ.fieldAlign))\n \t\t\taddr := unsafe.Pointer(uintptr(retPtr) + off)\n \t\t\tif v.flag&flagIndir == 0 && (v.kind() == Ptr || v.kind() == UnsafePointer) {\n-\t\t\t\tstoreIword(addr, iword(v.val), typ.size)\n+\t\t\t\t*(*unsafe.Pointer)(addr) = v.ptr\n \t\t\t} else {\n-\t\t\t\tmemmove(addr, v.val, typ.size)\n+\t\t\t\tmemmove(addr, v.ptr, typ.size)\n \t\t\t}\n \t\t\toff += typ.size\n \t\t}\n@@ -138,6 +138,6 @@ func MakeFuncStubGo(regs *i386Regs, c *makeFuncImpl) {\n \t\tregs.st0 = *(*float64)(unsafe.Pointer(w))\n \t\tregs.sf = true\n \tdefault:\n-\t\tregs.eax = uint32(uintptr(loadIword(unsafe.Pointer(w), v.typ.size)))\n+\t\tregs.eax = uint32(loadScalar(unsafe.Pointer(w), v.typ.size))\n \t}\n }"}, {"sha": "ad1893a8e997b0da47d01caf5eefe3afd280a70c", "filename": "libgo/go/reflect/makefuncgo_amd64.go", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefuncgo_amd64.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -352,9 +352,9 @@ argloop:\n \t\t\toff = align(off, uintptr(typ.fieldAlign))\n \t\t\taddr := unsafe.Pointer(uintptr(ptr) + off)\n \t\t\tif v.flag&flagIndir == 0 && (v.kind() == Ptr || v.kind() == UnsafePointer) {\n-\t\t\t\tstoreIword(addr, iword(v.val), typ.size)\n+\t\t\t\t*(*unsafe.Pointer)(addr) = v.ptr\n \t\t\t} else {\n-\t\t\t\tmemmove(addr, v.val, typ.size)\n+\t\t\t\tmemmove(addr, v.ptr, typ.size)\n \t\t\t}\n \t\t\toff += typ.size\n \t\t}\n@@ -365,7 +365,7 @@ argloop:\n \t\tv := out[0]\n \t\tw := v.iword()\n \t\tif v.Kind() != Ptr && v.Kind() != UnsafePointer {\n-\t\t\tw = loadIword(unsafe.Pointer(w), v.typ.size)\n+\t\t\tw = iword(loadScalar(unsafe.Pointer(w), v.typ.size))\n \t\t}\n \t\tswitch ret1 {\n \t\tcase amd64Integer:\n@@ -387,9 +387,9 @@ argloop:\n \t\toff = align(off, uintptr(typ.fieldAlign))\n \t\taddr := unsafe.Pointer(uintptr(ptr) + off)\n \t\tif v.flag&flagIndir == 0 && (v.kind() == Ptr || v.kind() == UnsafePointer) {\n-\t\t\tstoreIword(addr, iword(v.val), typ.size)\n+\t\t\t*(*unsafe.Pointer)(addr) = v.ptr\n \t\t} else {\n-\t\t\tmemmove(addr, v.val, typ.size)\n+\t\t\tmemmove(addr, v.ptr, typ.size)\n \t\t}\n \t\toff += uintptr(typ.size)\n \t}"}, {"sha": "f8e2c59b614db17f8f46f2b1d26b4d9d1c78d6c3", "filename": "libgo/go/reflect/type.go", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Ftype.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Ftype.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Ftype.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -254,9 +254,10 @@ type rtype struct {\n \thashfn  uintptr // hash function code\n \tequalfn uintptr // equality function code\n \n-\tstring        *string // string form; unnecessary  but undeniably useful\n-\t*uncommonType         // (relatively) uncommon fields\n-\tptrToThis     *rtype  // type for pointer to this type, if used in binary or has methods\n+\tstring        *string        // string form; unnecessary  but undeniably useful\n+\t*uncommonType                // (relatively) uncommon fields\n+\tptrToThis     *rtype         // type for pointer to this type, if used in binary or has methods\n+\tzero          unsafe.Pointer // pointer to zero value\n }\n \n // Method on non-interface type\n@@ -498,6 +499,8 @@ func (t *rtype) FieldAlign() int { return int(t.fieldAlign) }\n \n func (t *rtype) Kind() Kind { return Kind(t.kind & kindMask) }\n \n+func (t *rtype) pointers() bool { return t.kind&kindNoPointers == 0 }\n+\n func (t *rtype) common() *rtype { return t }\n \n func (t *uncommonType) Method(i int) (m Method) {\n@@ -517,7 +520,7 @@ func (t *uncommonType) Method(i int) (m Method) {\n \tm.Type = toType(mt)\n \tx := new(unsafe.Pointer)\n \t*x = unsafe.Pointer(&p.tfn)\n-\tm.Func = Value{mt, unsafe.Pointer(x), fl | flagIndir | flagMethodFn}\n+\tm.Func = Value{mt, unsafe.Pointer(x) /* 0, */, fl | flagIndir | flagMethodFn}\n \tm.Index = i\n \treturn\n }\n@@ -1123,6 +1126,7 @@ func (t *rtype) ptrTo() *rtype {\n \n \tp.uncommonType = nil\n \tp.ptrToThis = nil\n+\tp.zero = unsafe.Pointer(&make([]byte, p.size)[0])\n \tp.elem = t\n \n \tq := canonicalize(&p.rtype)\n@@ -1464,6 +1468,7 @@ func ChanOf(dir ChanDir, t Type) Type {\n \tch.elem = typ\n \tch.uncommonType = nil\n \tch.ptrToThis = nil\n+\tch.zero = unsafe.Pointer(&make([]byte, ch.size)[0])\n \n \t// INCORRECT. Uncomment to check that TestChanOfGC fails when ch.gc is wrong.\n \t//ch.gc = unsafe.Pointer(&badGC{width: ch.size, end: _GC_END})\n@@ -1513,6 +1518,7 @@ func MapOf(key, elem Type) Type {\n \t// mt.hmap = hMapOf(mt.bucket)\n \tmt.uncommonType = nil\n \tmt.ptrToThis = nil\n+\tmt.zero = unsafe.Pointer(&make([]byte, mt.size)[0])\n \n \t// INCORRECT. Uncomment to check that TestMapOfGC and TestMapOfGCValues\n \t// fail when mt.gc is wrong.\n@@ -1687,6 +1693,7 @@ func SliceOf(t Type) Type {\n \tslice.elem = typ\n \tslice.uncommonType = nil\n \tslice.ptrToThis = nil\n+\tslice.zero = unsafe.Pointer(&make([]byte, slice.size)[0])\n \n \t// INCORRECT. Uncomment to check that TestSliceOfOfGC fails when slice.gc is wrong.\n \t//slice.gc = unsafe.Pointer(&badGC{width: slice.size, end: _GC_END})\n@@ -1742,6 +1749,7 @@ func arrayOf(count int, elem Type) Type {\n \t// TODO: array.gc\n \tarray.uncommonType = nil\n \tarray.ptrToThis = nil\n+\tarray.zero = unsafe.Pointer(&make([]byte, array.size)[0])\n \tarray.len = uintptr(count)\n \tarray.slice = slice.(*rtype)\n "}, {"sha": "877bfac6d245a32548e356df70aea165311792f1", "filename": "libgo/go/reflect/value.go", "status": "modified", "additions": 435, "deletions": 263, "changes": 698, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fvalue.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Freflect%2Fvalue.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fvalue.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -62,14 +62,17 @@ type Value struct {\n \t// typ holds the type of the value represented by a Value.\n \ttyp *rtype\n \n-\t// val holds the 1-word representation of the value.\n-\t// If flag's flagIndir bit is set, then val is a pointer to the data.\n-\t// Otherwise val is a word holding the actual data.\n-\t// When the data is smaller than a word, it begins at\n-\t// the first byte (in the memory address sense) of val.\n-\t// We use unsafe.Pointer so that the garbage collector\n-\t// knows that val could be a pointer.\n-\tval unsafe.Pointer\n+\t// Pointer-valued data or, if flagIndir is set, pointer to data.\n+\t// Valid when either flagIndir is set or typ.pointers() is true.\n+\t// Gccgo always uses this field.\n+\tptr unsafe.Pointer\n+\n+\t// Non-pointer-valued data.  When the data is smaller\n+\t// than a word, it begins at the first byte (in the memory\n+\t// address sense) of this field.\n+\t// Valid when flagIndir is not set and typ.pointers() is false.\n+\t// Gccgo never uses this field.\n+\t// scalar uintptr\n \n \t// flag holds metadata about the value.\n \t// The lowest bits are flag bits:\n@@ -109,6 +112,79 @@ func (f flag) kind() Kind {\n \treturn Kind((f >> flagKindShift) & flagKindMask)\n }\n \n+// pointer returns the underlying pointer represented by v.\n+// v.Kind() must be Ptr, Map, Chan, Func, or UnsafePointer\n+func (v Value) pointer() unsafe.Pointer {\n+\tif v.typ.size != ptrSize || !v.typ.pointers() {\n+\t\tpanic(\"can't call pointer on a non-pointer Value\")\n+\t}\n+\tif v.flag&flagIndir != 0 {\n+\t\treturn *(*unsafe.Pointer)(v.ptr)\n+\t}\n+\treturn v.ptr\n+}\n+\n+// packEface converts v to the empty interface.\n+func packEface(v Value) interface{} {\n+\tt := v.typ\n+\tvar i interface{}\n+\te := (*emptyInterface)(unsafe.Pointer(&i))\n+\t// First, fill in the data portion of the interface.\n+\tswitch {\n+\tcase v.Kind() != Ptr && v.Kind() != UnsafePointer:\n+\t\t// Value is indirect, and so is the interface we're making.\n+\t\tif v.flag&flagIndir == 0 {\n+\t\t\tpanic(\"reflect: missing flagIndir\")\n+\t\t}\n+\t\tptr := v.ptr\n+\t\tif v.flag&flagAddr != 0 {\n+\t\t\t// TODO: pass safe boolean from valueInterface so\n+\t\t\t// we don't need to copy if safe==true?\n+\t\t\tc := unsafe_New(t)\n+\t\t\tmemmove(c, ptr, t.size)\n+\t\t\tptr = c\n+\t\t}\n+\t\te.word = iword(ptr)\n+\tcase v.flag&flagIndir != 0:\n+\t\t// Value is indirect, but interface is direct.  We need\n+\t\t// to load the data at v.ptr into the interface data word.\n+\t\tif t.pointers() {\n+\t\t\te.word = iword(*(*unsafe.Pointer)(v.ptr))\n+\t\t} else {\n+\t\t\te.word = iword(loadScalar(v.ptr, t.size))\n+\t\t}\n+\tdefault:\n+\t\t// Value is direct, and so is the interface.\n+\t\tif t.pointers() {\n+\t\t\te.word = iword(v.ptr)\n+\t\t} else {\n+\t\t\t// e.word = iword(v.scalar)\n+\t\t\tpanic(\"reflect: missing flagIndir\")\n+\t\t}\n+\t}\n+\t// Now, fill in the type portion.  We're very careful here not\n+\t// to have any operation between the e.word and e.typ assignments\n+\t// that would let the garbage collector observe the partially-built\n+\t// interface value.\n+\te.typ = t\n+\treturn i\n+}\n+\n+// unpackEface converts the empty interface i to a Value.\n+func unpackEface(i interface{}) Value {\n+\te := (*emptyInterface)(unsafe.Pointer(&i))\n+\t// NOTE: don't read e.word until we know whether it is really a pointer or not.\n+\tt := e.typ\n+\tif t == nil {\n+\t\treturn Value{}\n+\t}\n+\tf := flag(t.Kind()) << flagKindShift\n+\tif t.Kind() != Ptr && t.Kind() != UnsafePointer {\n+\t\tf |= flagIndir\n+\t}\n+\treturn Value{t, unsafe.Pointer(e.word), f}\n+}\n+\n // A ValueError occurs when a Value method is invoked on\n // a Value that does not support it.  Such cases are documented\n // in the description of each method.\n@@ -144,24 +220,58 @@ func methodName() string {\n // unsafe.Pointer to represent it, so that if iword appears\n // in a struct, the garbage collector knows that might be\n // a pointer.\n+// TODO: get rid of all occurrences of iword (except in the interface decls below?)\n+// We want to get rid of the \"feature\" that an unsafe.Pointer is sometimes a pointer\n+// and sometimes a uintptr.\n type iword unsafe.Pointer\n \n+// Get an iword that represents this value.\n+// TODO: this function goes away at some point\n func (v Value) iword() iword {\n-\tif v.flag&flagIndir != 0 && (v.kind() == Ptr || v.kind() == UnsafePointer) {\n+\tt := v.typ\n+\tif t == nil {\n+\t\treturn iword(nil)\n+\t}\n+\tif v.flag&flagIndir != 0 {\n+\t\tif v.kind() != Ptr && v.kind() != UnsafePointer {\n+\t\t\treturn iword(v.ptr)\n+\t\t}\n \t\t// Have indirect but want direct word.\n-\t\treturn loadIword(v.val, v.typ.size)\n+\t\tif t.pointers() {\n+\t\t\treturn iword(*(*unsafe.Pointer)(v.ptr))\n+\t\t}\n+\t\treturn iword(loadScalar(v.ptr, v.typ.size))\n+\t}\n+\tif t.pointers() {\n+\t\treturn iword(v.ptr)\n \t}\n-\treturn iword(v.val)\n+\t// return iword(v.scalar)\n+\tpanic(\"reflect: missing flagIndir\")\n }\n \n-// loadIword loads n bytes at p from memory into an iword.\n-func loadIword(p unsafe.Pointer, n uintptr) iword {\n+// Build a Value from a type/iword pair, plus any extra flags.\n+// TODO: this function goes away at some point\n+func fromIword(t *rtype, w iword, fl flag) Value {\n+\tfl |= flag(t.Kind()) << flagKindShift\n+\tif t.Kind() != Ptr && t.Kind() != UnsafePointer {\n+\t\treturn Value{t, unsafe.Pointer(w) /* 0, */, fl | flagIndir}\n+\t} else if t.pointers() {\n+\t\treturn Value{t, unsafe.Pointer(w) /* 0, */, fl}\n+\t} else {\n+\t\tpanic(\"reflect: can't reach\")\n+\t}\n+}\n+\n+// loadScalar loads n bytes at p from memory into a uintptr\n+// that forms the second word of an interface.  The data\n+// must be non-pointer in nature.\n+func loadScalar(p unsafe.Pointer, n uintptr) uintptr {\n \t// Run the copy ourselves instead of calling memmove\n \t// to avoid moving w to the heap.\n-\tvar w iword\n+\tvar w uintptr\n \tswitch n {\n \tdefault:\n-\t\tpanic(\"reflect: internal error: loadIword of \" + strconv.Itoa(int(n)) + \"-byte value\")\n+\t\tpanic(\"reflect: internal error: loadScalar of \" + strconv.Itoa(int(n)) + \"-byte value\")\n \tcase 0:\n \tcase 1:\n \t\t*(*uint8)(unsafe.Pointer(&w)) = *(*uint8)(p)\n@@ -183,13 +293,13 @@ func loadIword(p unsafe.Pointer, n uintptr) iword {\n \treturn w\n }\n \n-// storeIword stores n bytes from w into p.\n-func storeIword(p unsafe.Pointer, w iword, n uintptr) {\n+// storeScalar stores n bytes from w into p.\n+func storeScalar(p unsafe.Pointer, w uintptr, n uintptr) {\n \t// Run the copy ourselves instead of calling memmove\n \t// to avoid moving w to the heap.\n \tswitch n {\n \tdefault:\n-\t\tpanic(\"reflect: internal error: storeIword of \" + strconv.Itoa(int(n)) + \"-byte value\")\n+\t\tpanic(\"reflect: internal error: storeScalar of \" + strconv.Itoa(int(n)) + \"-byte value\")\n \tcase 0:\n \tcase 1:\n \t\t*(*uint8)(p) = *(*uint8)(unsafe.Pointer(&w))\n@@ -275,17 +385,18 @@ func (v Value) Addr() Value {\n \tif v.flag&flagAddr == 0 {\n \t\tpanic(\"reflect.Value.Addr of unaddressable value\")\n \t}\n-\treturn Value{v.typ.ptrTo(), v.val, (v.flag & flagRO) | flag(Ptr)<<flagKindShift}\n+\treturn Value{v.typ.ptrTo(), v.ptr /* 0, */, (v.flag & flagRO) | flag(Ptr)<<flagKindShift}\n }\n \n // Bool returns v's underlying value.\n // It panics if v's kind is not Bool.\n func (v Value) Bool() bool {\n \tv.mustBe(Bool)\n \tif v.flag&flagIndir != 0 {\n-\t\treturn *(*bool)(v.val)\n+\t\treturn *(*bool)(v.ptr)\n \t}\n-\treturn *(*bool)(unsafe.Pointer(&v.val))\n+\t// return *(*bool)(unsafe.Pointer(&v.scalar))\n+\tpanic(\"reflect: missing flagIndir\")\n }\n \n // Bytes returns v's underlying value.\n@@ -296,7 +407,7 @@ func (v Value) Bytes() []byte {\n \t\tpanic(\"reflect.Value.Bytes of non-byte slice\")\n \t}\n \t// Slice is always bigger than a word; assume flagIndir.\n-\treturn *(*[]byte)(v.val)\n+\treturn *(*[]byte)(v.ptr)\n }\n \n // runes returns v's underlying value.\n@@ -307,7 +418,7 @@ func (v Value) runes() []rune {\n \t\tpanic(\"reflect.Value.Bytes of non-rune slice\")\n \t}\n \t// Slice is always bigger than a word; assume flagIndir.\n-\treturn *(*[]rune)(v.val)\n+\treturn *(*[]rune)(v.ptr)\n }\n \n // CanAddr returns true if the value's address can be obtained with Addr.\n@@ -355,6 +466,9 @@ func (v Value) CallSlice(in []Value) []Value {\n \treturn v.call(\"CallSlice\", in)\n }\n \n+var makeFuncStubFn = makeFuncStub\n+var makeFuncStubCode = **(**uintptr)(unsafe.Pointer(&makeFuncStubFn))\n+\n func (v Value) call(op string, in []Value) []Value {\n \t// Get function pointer, type.\n \tt := v.typ\n@@ -365,15 +479,26 @@ func (v Value) call(op string, in []Value) []Value {\n \tif v.flag&flagMethod != 0 {\n \t\tt, fn, rcvr = methodReceiver(op, v, int(v.flag)>>flagMethodShift)\n \t} else if v.flag&flagIndir != 0 {\n-\t\tfn = *(*unsafe.Pointer)(v.val)\n+\t\tfn = *(*unsafe.Pointer)(v.ptr)\n \t} else {\n-\t\tfn = v.val\n+\t\tfn = v.ptr\n \t}\n \n \tif fn == nil {\n \t\tpanic(\"reflect.Value.Call: call of nil function\")\n \t}\n \n+\t// If target is makeFuncStub, short circuit the unpack onto stack /\n+\t// pack back into []Value for the args and return values.  Just do the\n+\t// call directly.\n+\t// We need to do this here because otherwise we have a situation where\n+\t// reflect.callXX calls makeFuncStub, neither of which knows the\n+\t// layout of the args.  That's bad for precise gc & stack copying.\n+\tx := (*makeFuncImpl)(fn)\n+\tif x.code == makeFuncStubCode {\n+\t\treturn x.call(in)\n+\t}\n+\n \tisSlice := op == \"CallSlice\"\n \tn := t.NumIn()\n \tif isSlice {\n@@ -450,10 +575,10 @@ func (v Value) call(op string, in []Value) []Value {\n \t\tpv = pv.assignTo(\"reflect.Value.Call\", targ, nil)\n \t\tif pv.flag&flagIndir == 0 {\n \t\t\tp := new(unsafe.Pointer)\n-\t\t\t*p = pv.val\n+\t\t\t*p = pv.ptr\n \t\t\tparams[off] = unsafe.Pointer(p)\n \t\t} else {\n-\t\t\tparams[off] = pv.val\n+\t\t\tparams[off] = pv.ptr\n \t\t}\n \t\tif i == 0 && firstPointer {\n \t\t\tp := new(unsafe.Pointer)\n@@ -501,7 +626,7 @@ func methodReceiver(op string, v Value, methodIndex int) (t *rtype, fn unsafe.Po\n \t\t\tpanic(\"reflect: \" + op + \" of unexported method\")\n \t\t}\n \t\tt = m.typ\n-\t\tiface := (*nonEmptyInterface)(v.val)\n+\t\tiface := (*nonEmptyInterface)(v.ptr)\n \t\tif iface.itab == nil {\n \t\t\tpanic(\"reflect: \" + op + \" of method on nil interface value\")\n \t\t}\n@@ -521,9 +646,9 @@ func methodReceiver(op string, v Value, methodIndex int) (t *rtype, fn unsafe.Po\n \t\t// Can't call iword here, because it checks v.kind,\n \t\t// and that is always Func.\n \t\tif v.flag&flagIndir != 0 && (v.typ.Kind() == Ptr || v.typ.Kind() == UnsafePointer) {\n-\t\t\trcvr = loadIword(v.val, v.typ.size)\n+\t\t\trcvr = iword(loadScalar(v.ptr, v.typ.size))\n \t\t} else {\n-\t\t\trcvr = iword(v.val)\n+\t\t\trcvr = iword(v.ptr)\n \t\t}\n \t}\n \treturn\n@@ -553,10 +678,10 @@ func (v Value) Cap() int {\n \tcase Array:\n \t\treturn v.typ.Len()\n \tcase Chan:\n-\t\treturn int(chancap(*(*iword)(v.iword())))\n+\t\treturn int(chancap(v.pointer()))\n \tcase Slice:\n \t\t// Slice is always bigger than a word; assume flagIndir.\n-\t\treturn (*SliceHeader)(v.val).Cap\n+\t\treturn (*sliceHeader)(v.ptr).Cap\n \t}\n \tpanic(&ValueError{\"reflect.Value.Cap\", k})\n }\n@@ -566,7 +691,7 @@ func (v Value) Cap() int {\n func (v Value) Close() {\n \tv.mustBe(Chan)\n \tv.mustBeExported()\n-\tchanclose(*(*iword)(v.iword()))\n+\tchanclose(v.pointer())\n }\n \n // Complex returns v's underlying value, as a complex128.\n@@ -576,12 +701,13 @@ func (v Value) Complex() complex128 {\n \tswitch k {\n \tcase Complex64:\n \t\tif v.flag&flagIndir != 0 {\n-\t\t\treturn complex128(*(*complex64)(v.val))\n+\t\t\treturn complex128(*(*complex64)(v.ptr))\n \t\t}\n-\t\treturn complex128(*(*complex64)(unsafe.Pointer(&v.val)))\n+\t\t// return complex128(*(*complex64)(unsafe.Pointer(&v.scalar)))\n+\t\tpanic(\"reflect: missing flagIndir\")\n \tcase Complex128:\n \t\t// complex128 is always bigger than a word; assume flagIndir.\n-\t\treturn *(*complex128)(v.val)\n+\t\treturn *(*complex128)(v.ptr)\n \t}\n \tpanic(&ValueError{\"reflect.Value.Complex\", k})\n }\n@@ -594,48 +720,31 @@ func (v Value) Elem() Value {\n \tk := v.kind()\n \tswitch k {\n \tcase Interface:\n-\t\tvar (\n-\t\t\ttyp *rtype\n-\t\t\tval unsafe.Pointer\n-\t\t)\n+\t\tvar eface interface{}\n \t\tif v.typ.NumMethod() == 0 {\n-\t\t\teface := (*emptyInterface)(v.val)\n-\t\t\tif eface.typ == nil {\n-\t\t\t\t// nil interface value\n-\t\t\t\treturn Value{}\n-\t\t\t}\n-\t\t\ttyp = eface.typ\n-\t\t\tval = unsafe.Pointer(eface.word)\n+\t\t\teface = *(*interface{})(v.ptr)\n \t\t} else {\n-\t\t\tiface := (*nonEmptyInterface)(v.val)\n-\t\t\tif iface.itab == nil {\n-\t\t\t\t// nil interface value\n-\t\t\t\treturn Value{}\n-\t\t\t}\n-\t\t\ttyp = iface.itab.typ\n-\t\t\tval = unsafe.Pointer(iface.word)\n+\t\t\teface = (interface{})(*(*interface {\n+\t\t\t\tM()\n+\t\t\t})(v.ptr))\n \t\t}\n-\t\tfl := v.flag & flagRO\n-\t\tfl |= flag(typ.Kind()) << flagKindShift\n-\t\tif typ.Kind() != Ptr && typ.Kind() != UnsafePointer {\n-\t\t\tfl |= flagIndir\n-\t\t}\n-\t\treturn Value{typ, val, fl}\n-\n+\t\tx := unpackEface(eface)\n+\t\tx.flag |= v.flag & flagRO\n+\t\treturn x\n \tcase Ptr:\n-\t\tval := v.val\n+\t\tptr := v.ptr\n \t\tif v.flag&flagIndir != 0 {\n-\t\t\tval = *(*unsafe.Pointer)(val)\n+\t\t\tptr = *(*unsafe.Pointer)(ptr)\n \t\t}\n \t\t// The returned value's address is v's value.\n-\t\tif val == nil {\n+\t\tif ptr == nil {\n \t\t\treturn Value{}\n \t\t}\n \t\ttt := (*ptrType)(unsafe.Pointer(v.typ))\n \t\ttyp := tt.elem\n \t\tfl := v.flag&flagRO | flagIndir | flagAddr\n \t\tfl |= flag(typ.Kind() << flagKindShift)\n-\t\treturn Value{typ, val, fl}\n+\t\treturn Value{typ, ptr /* 0, */, fl}\n \t}\n \tpanic(&ValueError{\"reflect.Value.Elem\", k})\n }\n@@ -659,20 +768,28 @@ func (v Value) Field(i int) Value {\n \t}\n \tfl |= flag(typ.Kind()) << flagKindShift\n \n-\tvar val unsafe.Pointer\n+\tvar ptr unsafe.Pointer\n+\t// var scalar uintptr\n \tswitch {\n \tcase fl&flagIndir != 0:\n \t\t// Indirect.  Just bump pointer.\n-\t\tval = unsafe.Pointer(uintptr(v.val) + field.offset)\n+\t\tptr = unsafe.Pointer(uintptr(v.ptr) + field.offset)\n+\tcase typ.pointers():\n+\t\tif field.offset != 0 {\n+\t\t\tpanic(\"field access of ptr value isn't at offset 0\")\n+\t\t}\n+\t\tptr = v.ptr\n \tcase bigEndian:\n-\t\t// Direct.  Discard leading bytes.\n-\t\tval = unsafe.Pointer(uintptr(v.val) << (field.offset * 8))\n+\t\t// Must be scalar.  Discard leading bytes.\n+\t\t// scalar = v.scalar << (field.offset * 8)\n+\t\tpanic(\"reflect: missing flagIndir\")\n \tdefault:\n-\t\t// Direct.  Discard leading bytes.\n-\t\tval = unsafe.Pointer(uintptr(v.val) >> (field.offset * 8))\n+\t\t// Must be scalar.  Discard leading bytes.\n+\t\t// scalar = v.scalar >> (field.offset * 8)\n+\t\tpanic(\"reflect: missing flagIndir\")\n \t}\n \n-\treturn Value{typ, val, fl}\n+\treturn Value{typ, ptr /* scalar, */, fl}\n }\n \n // FieldByIndex returns the nested field corresponding to index.\n@@ -720,14 +837,16 @@ func (v Value) Float() float64 {\n \tswitch k {\n \tcase Float32:\n \t\tif v.flag&flagIndir != 0 {\n-\t\t\treturn float64(*(*float32)(v.val))\n+\t\t\treturn float64(*(*float32)(v.ptr))\n \t\t}\n-\t\treturn float64(*(*float32)(unsafe.Pointer(&v.val)))\n+\t\t// return float64(*(*float32)(unsafe.Pointer(&v.scalar)))\n+\t\tpanic(\"reflect: missing flagIndir\")\n \tcase Float64:\n \t\tif v.flag&flagIndir != 0 {\n-\t\t\treturn *(*float64)(v.val)\n+\t\t\treturn *(*float64)(v.ptr)\n \t\t}\n-\t\treturn *(*float64)(unsafe.Pointer(&v.val))\n+\t\t// return *(*float64)(unsafe.Pointer(&v.scalar))\n+\t\tpanic(\"reflect: missing flagIndir\")\n \t}\n \tpanic(&ValueError{\"reflect.Value.Float\", k})\n }\n@@ -753,38 +872,46 @@ func (v Value) Index(i int) Value {\n \t\tswitch {\n \t\tcase fl&flagIndir != 0:\n \t\t\t// Indirect.  Just bump pointer.\n-\t\t\tval = unsafe.Pointer(uintptr(v.val) + offset)\n+\t\t\tval = unsafe.Pointer(uintptr(v.ptr) + offset)\n+\t\tcase typ.pointers():\n+\t\t\tif offset != 0 {\n+\t\t\t\tpanic(\"can't Index(i) with i!=0 on ptrLike value\")\n+\t\t\t}\n+\t\t\tval = v.ptr\n \t\tcase bigEndian:\n \t\t\t// Direct.  Discard leading bytes.\n-\t\t\tval = unsafe.Pointer(uintptr(v.val) << (offset * 8))\n+\t\t\t// scalar = v.scalar << (offset * 8)\n+\t\t\tpanic(\"reflect: missing flagIndir\")\n \t\tdefault:\n \t\t\t// Direct.  Discard leading bytes.\n-\t\t\tval = unsafe.Pointer(uintptr(v.val) >> (offset * 8))\n+\t\t\t// scalar = v.scalar >> (offset * 8)\n+\t\t\tpanic(\"reflect: missing flagIndir\")\n \t\t}\n-\t\treturn Value{typ, val, fl}\n+\t\treturn Value{typ, val /* scalar, */, fl}\n \n \tcase Slice:\n \t\t// Element flag same as Elem of Ptr.\n \t\t// Addressable, indirect, possibly read-only.\n \t\tfl := flagAddr | flagIndir | v.flag&flagRO\n-\t\ts := (*SliceHeader)(v.val)\n+\t\ts := (*sliceHeader)(v.ptr)\n \t\tif i < 0 || i >= s.Len {\n \t\t\tpanic(\"reflect: slice index out of range\")\n \t\t}\n \t\ttt := (*sliceType)(unsafe.Pointer(v.typ))\n \t\ttyp := tt.elem\n \t\tfl |= flag(typ.Kind()) << flagKindShift\n-\t\tval := unsafe.Pointer(s.Data + uintptr(i)*typ.size)\n-\t\treturn Value{typ, val, fl}\n+\t\tval := unsafe.Pointer(uintptr(s.Data) + uintptr(i)*typ.size)\n+\t\treturn Value{typ, val /* 0, */, fl}\n \n \tcase String:\n \t\tfl := v.flag&flagRO | flag(Uint8<<flagKindShift) | flagIndir\n-\t\ts := (*StringHeader)(v.val)\n+\t\ts := (*StringHeader)(v.ptr)\n \t\tif i < 0 || i >= s.Len {\n \t\t\tpanic(\"reflect: string index out of range\")\n \t\t}\n-\t\tval := *(*byte)(unsafe.Pointer(s.Data + uintptr(i)))\n-\t\treturn Value{uint8Type, unsafe.Pointer(&val), fl}\n+\t\tb := uintptr(0)\n+\t\t*(*byte)(unsafe.Pointer(&b)) = *(*byte)(unsafe.Pointer(uintptr(s.Data) + uintptr(i)))\n+\t\treturn Value{uint8Type, unsafe.Pointer(&b) /* 0, */, fl | flagIndir}\n \t}\n \tpanic(&ValueError{\"reflect.Value.Index\", k})\n }\n@@ -795,11 +922,15 @@ func (v Value) Int() int64 {\n \tk := v.kind()\n \tvar p unsafe.Pointer\n \tif v.flag&flagIndir != 0 {\n-\t\tp = v.val\n+\t\tp = v.ptr\n \t} else {\n-\t\t// The escape analysis is good enough that &v.val\n+\t\t// The escape analysis is good enough that &v.scalar\n \t\t// does not trigger a heap allocation.\n-\t\tp = unsafe.Pointer(&v.val)\n+\t\t// p = unsafe.Pointer(&v.scalar)\n+\t\tswitch k {\n+\t\tcase Int, Int8, Int16, Int32, Int64:\n+\t\t\tpanic(\"reflect: missing flagIndir\")\n+\t\t}\n \t}\n \tswitch k {\n \tcase Int:\n@@ -857,17 +988,16 @@ func valueInterface(v Value, safe bool) interface{} {\n \t\t}\n \t}\n \n-\tk := v.kind()\n-\tif k == Interface {\n+\tif v.kind() == Interface {\n \t\t// Special case: return the element inside the interface.\n \t\t// Empty interface has one layout, all interfaces with\n \t\t// methods have a second layout.\n \t\tif v.NumMethod() == 0 {\n-\t\t\treturn *(*interface{})(v.val)\n+\t\t\treturn *(*interface{})(v.ptr)\n \t\t}\n \t\treturn *(*interface {\n \t\t\tM()\n-\t\t})(v.val)\n+\t\t})(v.ptr)\n \t}\n \n \t// Non-interface value.\n@@ -888,20 +1018,21 @@ func valueInterface(v Value, safe bool) interface{} {\n \tif v.flag&flagIndir == 0 && v.kind() != Ptr && v.kind() != UnsafePointer {\n \t\tpanic(\"missing flagIndir\")\n \t}\n-\n-\treturn *(*interface{})(unsafe.Pointer(&eface))\n+\t// TODO: pass safe to packEface so we don't need to copy if safe==true?\n+\treturn packEface(v)\n }\n \n // InterfaceData returns the interface v's value as a uintptr pair.\n // It panics if v's Kind is not Interface.\n func (v Value) InterfaceData() [2]uintptr {\n+\t// TODO: deprecate this\n \tv.mustBe(Interface)\n \t// We treat this as a read operation, so we allow\n \t// it even for unexported data, because the caller\n \t// has to import \"unsafe\" to turn it into something\n \t// that can be abused.\n \t// Interface value is always bigger than a word; assume flagIndir.\n-\treturn *(*[2]uintptr)(v.val)\n+\treturn *(*[2]uintptr)(v.ptr)\n }\n \n // IsNil returns true if v is a nil value.\n@@ -913,15 +1044,15 @@ func (v Value) IsNil() bool {\n \t\tif v.flag&flagMethod != 0 {\n \t\t\treturn false\n \t\t}\n-\t\tptr := v.val\n+\t\tptr := v.ptr\n \t\tif v.flag&flagIndir != 0 {\n \t\t\tptr = *(*unsafe.Pointer)(ptr)\n \t\t}\n \t\treturn ptr == nil\n \tcase Interface, Slice:\n \t\t// Both interface and slice are nil if first word is 0.\n \t\t// Both are always bigger than a word; assume flagIndir.\n-\t\treturn *(*unsafe.Pointer)(v.val) == nil\n+\t\treturn *(*unsafe.Pointer)(v.ptr) == nil\n \t}\n \tpanic(&ValueError{\"reflect.Value.IsNil\", k})\n }\n@@ -950,15 +1081,15 @@ func (v Value) Len() int {\n \t\ttt := (*arrayType)(unsafe.Pointer(v.typ))\n \t\treturn int(tt.len)\n \tcase Chan:\n-\t\treturn chanlen(*(*iword)(v.iword()))\n+\t\treturn chanlen(v.pointer())\n \tcase Map:\n-\t\treturn maplen(*(*iword)(v.iword()))\n+\t\treturn maplen(v.pointer())\n \tcase Slice:\n \t\t// Slice is bigger than a word; assume flagIndir.\n-\t\treturn (*SliceHeader)(v.val).Len\n+\t\treturn (*sliceHeader)(v.ptr).Len\n \tcase String:\n \t\t// String is bigger than a word; assume flagIndir.\n-\t\treturn (*StringHeader)(v.val).Len\n+\t\treturn (*stringHeader)(v.ptr).Len\n \t}\n \tpanic(&ValueError{\"reflect.Value.Len\", k})\n }\n@@ -980,17 +1111,33 @@ func (v Value) MapIndex(key Value) Value {\n \t// of unexported fields.\n \tkey = key.assignTo(\"reflect.Value.MapIndex\", tt.key, nil)\n \n-\tword, ok := mapaccess(v.typ, *(*iword)(v.iword()), key.iword())\n-\tif !ok {\n+\tvar k unsafe.Pointer\n+\tif key.flag&flagIndir != 0 {\n+\t\tk = key.ptr\n+\t} else if key.typ.pointers() {\n+\t\tk = unsafe.Pointer(&key.ptr)\n+\t} else {\n+\t\t// k = unsafe.Pointer(&key.scalar)\n+\t\tpanic(\"reflect: missing flagIndir\")\n+\t}\n+\te := mapaccess(v.typ, v.pointer(), k)\n+\tif e == nil {\n \t\treturn Value{}\n \t}\n \ttyp := tt.elem\n \tfl := (v.flag | key.flag) & flagRO\n+\tfl |= flag(typ.Kind()) << flagKindShift\n \tif typ.Kind() != Ptr && typ.Kind() != UnsafePointer {\n-\t\tfl |= flagIndir\n+\t\t// Copy result so future changes to the map\n+\t\t// won't change the underlying value.\n+\t\tc := unsafe_New(typ)\n+\t\tmemmove(c, e, typ.size)\n+\t\treturn Value{typ, c /* 0, */, fl | flagIndir}\n+\t} else if typ.pointers() {\n+\t\treturn Value{typ, *(*unsafe.Pointer)(e) /* 0, */, fl}\n+\t} else {\n+\t\tpanic(\"reflect: can't happen\")\n \t}\n-\tfl |= flag(typ.Kind()) << flagKindShift\n-\treturn Value{typ, unsafe.Pointer(word), fl}\n }\n \n // MapKeys returns a slice containing all the keys present in the map,\n@@ -1002,13 +1149,12 @@ func (v Value) MapKeys() []Value {\n \ttt := (*mapType)(unsafe.Pointer(v.typ))\n \tkeyType := tt.key\n \n-\tfl := v.flag & flagRO\n-\tfl |= flag(keyType.Kind()) << flagKindShift\n+\tfl := v.flag&flagRO | flag(keyType.Kind())<<flagKindShift\n \tif keyType.Kind() != Ptr && keyType.Kind() != UnsafePointer {\n \t\tfl |= flagIndir\n \t}\n \n-\tm := *(*iword)(v.iword())\n+\tm := v.pointer()\n \tmlen := int(0)\n \tif m != nil {\n \t\tmlen = maplen(m)\n@@ -1017,11 +1163,24 @@ func (v Value) MapKeys() []Value {\n \ta := make([]Value, mlen)\n \tvar i int\n \tfor i = 0; i < len(a); i++ {\n-\t\tkeyWord, ok := mapiterkey(it)\n-\t\tif !ok {\n+\t\tkey := mapiterkey(it)\n+\t\tif key == nil {\n+\t\t\t// Someone deleted an entry from the map since we\n+\t\t\t// called maplen above.  It's a data race, but nothing\n+\t\t\t// we can do about it.\n \t\t\tbreak\n \t\t}\n-\t\ta[i] = Value{keyType, unsafe.Pointer(keyWord), fl}\n+\t\tif keyType.Kind() != Ptr && keyType.Kind() != UnsafePointer {\n+\t\t\t// Copy result so future changes to the map\n+\t\t\t// won't change the underlying value.\n+\t\t\tc := unsafe_New(keyType)\n+\t\t\tmemmove(c, key, keyType.size)\n+\t\t\ta[i] = Value{keyType, c /* 0, */, fl | flagIndir}\n+\t\t} else if keyType.pointers() {\n+\t\t\ta[i] = Value{keyType, *(*unsafe.Pointer)(key) /* 0, */, fl}\n+\t\t} else {\n+\t\t\tpanic(\"reflect: can't happen\")\n+\t\t}\n \t\tmapiternext(it)\n \t}\n \treturn a[:i]\n@@ -1044,7 +1203,7 @@ func (v Value) Method(i int) Value {\n \tfl := v.flag & (flagRO | flagIndir)\n \tfl |= flag(Func) << flagKindShift\n \tfl |= flag(i)<<flagMethodShift | flagMethod\n-\treturn Value{v.typ, v.val, fl}\n+\treturn Value{v.typ, v.ptr /* v.scalar, */, fl}\n }\n \n // NumMethod returns the number of methods in the value's method set.\n@@ -1154,15 +1313,16 @@ func (v Value) OverflowUint(x uint64) bool {\n // code pointer, but not necessarily enough to identify a\n // single function uniquely. The only guarantee is that the\n // result is zero if and only if v is a nil func Value.\n+//\n+// If v's Kind is Slice, the returned pointer is to the first\n+// element of the slice.  If the slice is nil the returned value\n+// is 0.  If the slice is empty but non-nil the return value is non-zero.\n func (v Value) Pointer() uintptr {\n+\t// TODO: deprecate\n \tk := v.kind()\n \tswitch k {\n \tcase Chan, Map, Ptr, UnsafePointer:\n-\t\tp := v.val\n-\t\tif v.flag&flagIndir != 0 {\n-\t\t\tp = *(*unsafe.Pointer)(p)\n-\t\t}\n-\t\treturn uintptr(p)\n+\t\treturn uintptr(v.pointer())\n \tcase Func:\n \t\tif v.flag&flagMethod != 0 {\n \t\t\t// As the doc comment says, the returned pointer is an\n@@ -1174,10 +1334,7 @@ func (v Value) Pointer() uintptr {\n \t\t\tf := makeFuncStub\n \t\t\treturn **(**uintptr)(unsafe.Pointer(&f))\n \t\t}\n-\t\tp := v.val\n-\t\tif v.flag&flagIndir != 0 {\n-\t\t\tp = *(*unsafe.Pointer)(p)\n-\t\t}\n+\t\tp := v.pointer()\n \t\t// Non-nil func value points at data block.\n \t\t// First word of data block is actual code.\n \t\tif p != nil {\n@@ -1186,7 +1343,7 @@ func (v Value) Pointer() uintptr {\n \t\treturn uintptr(p)\n \n \tcase Slice:\n-\t\treturn (*SliceHeader)(v.val).Data\n+\t\treturn (*SliceHeader)(v.ptr).Data\n \t}\n \tpanic(&ValueError{\"reflect.Value.Pointer\", k})\n }\n@@ -1209,14 +1366,9 @@ func (v Value) recv(nb bool) (val Value, ok bool) {\n \tif ChanDir(tt.dir)&RecvDir == 0 {\n \t\tpanic(\"reflect: recv on send-only channel\")\n \t}\n-\tword, selected, ok := chanrecv(v.typ, *(*iword)(v.iword()), nb)\n+\tword, selected, ok := chanrecv(v.typ, v.pointer(), nb)\n \tif selected {\n-\t\ttyp := tt.elem\n-\t\tfl := flag(typ.Kind()) << flagKindShift\n-\t\tif typ.Kind() != Ptr && typ.Kind() != UnsafePointer {\n-\t\t\tfl |= flagIndir\n-\t\t}\n-\t\tval = Value{typ, unsafe.Pointer(word), fl}\n+\t\tval = fromIword(tt.elem, word, 0)\n \t}\n \treturn\n }\n@@ -1239,7 +1391,7 @@ func (v Value) send(x Value, nb bool) (selected bool) {\n \t}\n \tx.mustBeExported()\n \tx = x.assignTo(\"reflect.Value.Send\", tt.elem, nil)\n-\treturn chansend(v.typ, *(*iword)(v.iword()), x.iword(), nb)\n+\treturn chansend(v.typ, v.pointer(), x.iword(), nb)\n }\n \n // Set assigns x to the value v.\n@@ -1250,13 +1402,16 @@ func (v Value) Set(x Value) {\n \tx.mustBeExported() // do not let unexported x leak\n \tvar target *interface{}\n \tif v.kind() == Interface {\n-\t\ttarget = (*interface{})(v.val)\n+\t\ttarget = (*interface{})(v.ptr)\n \t}\n \tx = x.assignTo(\"reflect.Set\", v.typ, target)\n \tif x.flag&flagIndir != 0 {\n-\t\tmemmove(v.val, x.val, v.typ.size)\n+\t\tmemmove(v.ptr, x.ptr, v.typ.size)\n+\t} else if x.typ.pointers() {\n+\t\t*(*unsafe.Pointer)(v.ptr) = x.ptr\n \t} else {\n-\t\tstoreIword(v.val, iword(x.val), v.typ.size)\n+\t\t// memmove(v.ptr, unsafe.Pointer(&x.scalar), v.typ.size)\n+\t\tpanic(\"reflect: missing flagIndir\")\n \t}\n }\n \n@@ -1265,7 +1420,7 @@ func (v Value) Set(x Value) {\n func (v Value) SetBool(x bool) {\n \tv.mustBeAssignable()\n \tv.mustBe(Bool)\n-\t*(*bool)(v.val) = x\n+\t*(*bool)(v.ptr) = x\n }\n \n // SetBytes sets v's underlying value.\n@@ -1276,7 +1431,7 @@ func (v Value) SetBytes(x []byte) {\n \tif v.typ.Elem().Kind() != Uint8 {\n \t\tpanic(\"reflect.Value.SetBytes of non-byte slice\")\n \t}\n-\t*(*[]byte)(v.val) = x\n+\t*(*[]byte)(v.ptr) = x\n }\n \n // setRunes sets v's underlying value.\n@@ -1287,7 +1442,7 @@ func (v Value) setRunes(x []rune) {\n \tif v.typ.Elem().Kind() != Int32 {\n \t\tpanic(\"reflect.Value.setRunes of non-rune slice\")\n \t}\n-\t*(*[]rune)(v.val) = x\n+\t*(*[]rune)(v.ptr) = x\n }\n \n // SetComplex sets v's underlying value to x.\n@@ -1298,9 +1453,9 @@ func (v Value) SetComplex(x complex128) {\n \tdefault:\n \t\tpanic(&ValueError{\"reflect.Value.SetComplex\", k})\n \tcase Complex64:\n-\t\t*(*complex64)(v.val) = complex64(x)\n+\t\t*(*complex64)(v.ptr) = complex64(x)\n \tcase Complex128:\n-\t\t*(*complex128)(v.val) = x\n+\t\t*(*complex128)(v.ptr) = x\n \t}\n }\n \n@@ -1312,9 +1467,9 @@ func (v Value) SetFloat(x float64) {\n \tdefault:\n \t\tpanic(&ValueError{\"reflect.Value.SetFloat\", k})\n \tcase Float32:\n-\t\t*(*float32)(v.val) = float32(x)\n+\t\t*(*float32)(v.ptr) = float32(x)\n \tcase Float64:\n-\t\t*(*float64)(v.val) = x\n+\t\t*(*float64)(v.ptr) = x\n \t}\n }\n \n@@ -1326,15 +1481,15 @@ func (v Value) SetInt(x int64) {\n \tdefault:\n \t\tpanic(&ValueError{\"reflect.Value.SetInt\", k})\n \tcase Int:\n-\t\t*(*int)(v.val) = int(x)\n+\t\t*(*int)(v.ptr) = int(x)\n \tcase Int8:\n-\t\t*(*int8)(v.val) = int8(x)\n+\t\t*(*int8)(v.ptr) = int8(x)\n \tcase Int16:\n-\t\t*(*int16)(v.val) = int16(x)\n+\t\t*(*int16)(v.ptr) = int16(x)\n \tcase Int32:\n-\t\t*(*int32)(v.val) = int32(x)\n+\t\t*(*int32)(v.ptr) = int32(x)\n \tcase Int64:\n-\t\t*(*int64)(v.val) = x\n+\t\t*(*int64)(v.ptr) = x\n \t}\n }\n \n@@ -1344,7 +1499,7 @@ func (v Value) SetInt(x int64) {\n func (v Value) SetLen(n int) {\n \tv.mustBeAssignable()\n \tv.mustBe(Slice)\n-\ts := (*SliceHeader)(v.val)\n+\ts := (*sliceHeader)(v.ptr)\n \tif n < 0 || n > int(s.Cap) {\n \t\tpanic(\"reflect: slice length out of range in SetLen\")\n \t}\n@@ -1357,7 +1512,7 @@ func (v Value) SetLen(n int) {\n func (v Value) SetCap(n int) {\n \tv.mustBeAssignable()\n \tv.mustBe(Slice)\n-\ts := (*SliceHeader)(v.val)\n+\ts := (*sliceHeader)(v.ptr)\n \tif n < int(s.Len) || n > int(s.Cap) {\n \t\tpanic(\"reflect: slice capacity out of range in SetCap\")\n \t}\n@@ -1375,11 +1530,31 @@ func (v Value) SetMapIndex(key, val Value) {\n \tkey.mustBeExported()\n \ttt := (*mapType)(unsafe.Pointer(v.typ))\n \tkey = key.assignTo(\"reflect.Value.SetMapIndex\", tt.key, nil)\n-\tif val.typ != nil {\n-\t\tval.mustBeExported()\n-\t\tval = val.assignTo(\"reflect.Value.SetMapIndex\", tt.elem, nil)\n+\tvar k unsafe.Pointer\n+\tif key.flag&flagIndir != 0 {\n+\t\tk = key.ptr\n+\t} else if key.typ.pointers() {\n+\t\tk = unsafe.Pointer(&key.ptr)\n+\t} else {\n+\t\t// k = unsafe.Pointer(&key.scalar)\n+\t\tpanic(\"reflect: missing flagIndir\")\n+\t}\n+\tif val.typ == nil {\n+\t\tmapdelete(v.typ, v.pointer(), k)\n+\t\treturn\n+\t}\n+\tval.mustBeExported()\n+\tval = val.assignTo(\"reflect.Value.SetMapIndex\", tt.elem, nil)\n+\tvar e unsafe.Pointer\n+\tif val.flag&flagIndir != 0 {\n+\t\te = val.ptr\n+\t} else if val.typ.pointers() {\n+\t\te = unsafe.Pointer(&val.ptr)\n+\t} else {\n+\t\t// e = unsafe.Pointer(&val.scalar)\n+\t\tpanic(\"reflect: missing flagIndir\")\n \t}\n-\tmapassign(v.typ, *(*iword)(v.iword()), key.iword(), val.iword(), val.typ != nil)\n+\tmapassign(v.typ, v.pointer(), k, e)\n }\n \n // SetUint sets v's underlying value to x.\n@@ -1390,17 +1565,17 @@ func (v Value) SetUint(x uint64) {\n \tdefault:\n \t\tpanic(&ValueError{\"reflect.Value.SetUint\", k})\n \tcase Uint:\n-\t\t*(*uint)(v.val) = uint(x)\n+\t\t*(*uint)(v.ptr) = uint(x)\n \tcase Uint8:\n-\t\t*(*uint8)(v.val) = uint8(x)\n+\t\t*(*uint8)(v.ptr) = uint8(x)\n \tcase Uint16:\n-\t\t*(*uint16)(v.val) = uint16(x)\n+\t\t*(*uint16)(v.ptr) = uint16(x)\n \tcase Uint32:\n-\t\t*(*uint32)(v.val) = uint32(x)\n+\t\t*(*uint32)(v.ptr) = uint32(x)\n \tcase Uint64:\n-\t\t*(*uint64)(v.val) = x\n+\t\t*(*uint64)(v.ptr) = x\n \tcase Uintptr:\n-\t\t*(*uintptr)(v.val) = uintptr(x)\n+\t\t*(*uintptr)(v.ptr) = uintptr(x)\n \t}\n }\n \n@@ -1409,15 +1584,15 @@ func (v Value) SetUint(x uint64) {\n func (v Value) SetPointer(x unsafe.Pointer) {\n \tv.mustBeAssignable()\n \tv.mustBe(UnsafePointer)\n-\t*(*unsafe.Pointer)(v.val) = x\n+\t*(*unsafe.Pointer)(v.ptr) = x\n }\n \n // SetString sets v's underlying value to x.\n // It panics if v's Kind is not String or if CanSet() is false.\n func (v Value) SetString(x string) {\n \tv.mustBeAssignable()\n \tv.mustBe(String)\n-\t*(*string)(v.val) = x\n+\t*(*string)(v.ptr) = x\n }\n \n // Slice returns v[i:j].\n@@ -1440,24 +1615,21 @@ func (v Value) Slice(i, j int) Value {\n \t\ttt := (*arrayType)(unsafe.Pointer(v.typ))\n \t\tcap = int(tt.len)\n \t\ttyp = (*sliceType)(unsafe.Pointer(tt.slice))\n-\t\tbase = v.val\n+\t\tbase = v.ptr\n \n \tcase Slice:\n \t\ttyp = (*sliceType)(unsafe.Pointer(v.typ))\n-\t\ts := (*SliceHeader)(v.val)\n+\t\ts := (*sliceHeader)(v.ptr)\n \t\tbase = unsafe.Pointer(s.Data)\n \t\tcap = s.Cap\n \n \tcase String:\n-\t\ts := (*StringHeader)(v.val)\n+\t\ts := (*stringHeader)(v.ptr)\n \t\tif i < 0 || j < i || j > s.Len {\n \t\t\tpanic(\"reflect.Value.Slice: string slice index out of bounds\")\n \t\t}\n-\t\tvar x string\n-\t\tval := (*StringHeader)(unsafe.Pointer(&x))\n-\t\tval.Data = s.Data + uintptr(i)\n-\t\tval.Len = j - i\n-\t\treturn Value{v.typ, unsafe.Pointer(&x), v.flag}\n+\t\tt := stringHeader{unsafe.Pointer(uintptr(s.Data) + uintptr(i)), j - i}\n+\t\treturn Value{v.typ, unsafe.Pointer(&t) /* 0, */, v.flag}\n \t}\n \n \tif i < 0 || j < i || j > cap {\n@@ -1467,14 +1639,14 @@ func (v Value) Slice(i, j int) Value {\n \t// Declare slice so that gc can see the base pointer in it.\n \tvar x []unsafe.Pointer\n \n-\t// Reinterpret as *SliceHeader to edit.\n-\ts := (*SliceHeader)(unsafe.Pointer(&x))\n-\ts.Data = uintptr(base) + uintptr(i)*typ.elem.Size()\n+\t// Reinterpret as *sliceHeader to edit.\n+\ts := (*sliceHeader)(unsafe.Pointer(&x))\n+\ts.Data = unsafe.Pointer(uintptr(base) + uintptr(i)*typ.elem.Size())\n \ts.Len = j - i\n \ts.Cap = cap - i\n \n \tfl := v.flag&flagRO | flagIndir | flag(Slice)<<flagKindShift\n-\treturn Value{typ.common(), unsafe.Pointer(&x), fl}\n+\treturn Value{typ.common(), unsafe.Pointer(&x) /* 0, */, fl}\n }\n \n // Slice3 is the 3-index form of the slice operation: it returns v[i:j:k].\n@@ -1492,17 +1664,17 @@ func (v Value) Slice3(i, j, k int) Value {\n \n \tcase Array:\n \t\tif v.flag&flagAddr == 0 {\n-\t\t\tpanic(\"reflect.Value.Slice: slice of unaddressable array\")\n+\t\t\tpanic(\"reflect.Value.Slice3: slice of unaddressable array\")\n \t\t}\n \t\ttt := (*arrayType)(unsafe.Pointer(v.typ))\n \t\tcap = int(tt.len)\n \t\ttyp = (*sliceType)(unsafe.Pointer(tt.slice))\n-\t\tbase = v.val\n+\t\tbase = v.ptr\n \n \tcase Slice:\n \t\ttyp = (*sliceType)(unsafe.Pointer(v.typ))\n-\t\ts := (*SliceHeader)(v.val)\n-\t\tbase = unsafe.Pointer(s.Data)\n+\t\ts := (*sliceHeader)(v.ptr)\n+\t\tbase = s.Data\n \t\tcap = s.Cap\n \t}\n \n@@ -1514,14 +1686,14 @@ func (v Value) Slice3(i, j, k int) Value {\n \t// can see the base pointer in it.\n \tvar x []unsafe.Pointer\n \n-\t// Reinterpret as *SliceHeader to edit.\n-\ts := (*SliceHeader)(unsafe.Pointer(&x))\n-\ts.Data = uintptr(base) + uintptr(i)*typ.elem.Size()\n+\t// Reinterpret as *sliceHeader to edit.\n+\ts := (*sliceHeader)(unsafe.Pointer(&x))\n+\ts.Data = unsafe.Pointer(uintptr(base) + uintptr(i)*typ.elem.Size())\n \ts.Len = j - i\n \ts.Cap = k - i\n \n \tfl := v.flag&flagRO | flagIndir | flag(Slice)<<flagKindShift\n-\treturn Value{typ.common(), unsafe.Pointer(&x), fl}\n+\treturn Value{typ.common(), unsafe.Pointer(&x) /* 0, */, fl}\n }\n \n // String returns the string v's underlying value, as a string.\n@@ -1533,7 +1705,7 @@ func (v Value) String() string {\n \tcase Invalid:\n \t\treturn \"<invalid Value>\"\n \tcase String:\n-\t\treturn *(*string)(v.val)\n+\t\treturn *(*string)(v.ptr)\n \t}\n \t// If you call String on a reflect.Value of other type, it's better to\n \t// print something than to panic. Useful in debugging.\n@@ -1599,11 +1771,15 @@ func (v Value) Uint() uint64 {\n \tk := v.kind()\n \tvar p unsafe.Pointer\n \tif v.flag&flagIndir != 0 {\n-\t\tp = v.val\n+\t\tp = v.ptr\n \t} else {\n-\t\t// The escape analysis is good enough that &v.val\n+\t\t// The escape analysis is good enough that &v.scalar\n \t\t// does not trigger a heap allocation.\n-\t\tp = unsafe.Pointer(&v.val)\n+\t\t// p = unsafe.Pointer(&v.scalar)\n+\t\tswitch k {\n+\t\tcase Uint, Uint8, Uint16, Uint32, Uint64, Uintptr:\n+\t\t\tpanic(\"reflect: missing flagIndir\")\n+\t\t}\n \t}\n \tswitch k {\n \tcase Uint:\n@@ -1626,13 +1802,14 @@ func (v Value) Uint() uint64 {\n // It is for advanced clients that also import the \"unsafe\" package.\n // It panics if v is not addressable.\n func (v Value) UnsafeAddr() uintptr {\n+\t// TODO: deprecate\n \tif v.typ == nil {\n \t\tpanic(&ValueError{\"reflect.Value.UnsafeAddr\", Invalid})\n \t}\n \tif v.flag&flagAddr == 0 {\n \t\tpanic(\"reflect.Value.UnsafeAddr of unaddressable value\")\n \t}\n-\treturn uintptr(v.val)\n+\treturn uintptr(v.ptr)\n }\n \n // StringHeader is the runtime representation of a string.\n@@ -1646,6 +1823,12 @@ type StringHeader struct {\n \tLen  int\n }\n \n+// stringHeader is a safe version of StringHeader used within this package.\n+type stringHeader struct {\n+\tData unsafe.Pointer\n+\tLen  int\n+}\n+\n // SliceHeader is the runtime representation of a slice.\n // It cannot be used safely or portably and its representation may\n // change in a later release.\n@@ -1658,6 +1841,13 @@ type SliceHeader struct {\n \tCap  int\n }\n \n+// sliceHeader is a safe version of SliceHeader used within this package.\n+type sliceHeader struct {\n+\tData unsafe.Pointer\n+\tLen  int\n+\tCap  int\n+}\n+\n func typesMustMatch(what string, t1, t2 Type) {\n \tif t1 != t2 {\n \t\tpanic(what + \": \" + t1.String() + \" != \" + t2.String())\n@@ -1746,6 +1936,8 @@ func Copy(dst, src Value) int {\n \n \t// If sk is an in-line array, cannot take its address.\n \t// Instead, copy element by element.\n+\t// TODO: memmove would be ok for this (sa = unsafe.Pointer(&v.scalar))\n+\t// if we teach the compiler that ptrs don't escape from memmove.\n \tif src.flag&flagIndir == 0 {\n \t\tfor i := 0; i < n; i++ {\n \t\t\tdst.Index(i).Set(src.Index(i))\n@@ -1756,14 +1948,14 @@ func Copy(dst, src Value) int {\n \t// Copy via memmove.\n \tvar da, sa unsafe.Pointer\n \tif dk == Array {\n-\t\tda = dst.val\n+\t\tda = dst.ptr\n \t} else {\n-\t\tda = unsafe.Pointer((*SliceHeader)(dst.val).Data)\n+\t\tda = (*sliceHeader)(dst.ptr).Data\n \t}\n \tif sk == Array {\n-\t\tsa = src.val\n+\t\tsa = src.ptr\n \t} else {\n-\t\tsa = unsafe.Pointer((*SliceHeader)(src.val).Data)\n+\t\tsa = (*sliceHeader)(src.ptr).Data\n \t}\n \tmemmove(da, sa, uintptr(n)*de.Size())\n \treturn n\n@@ -1894,12 +2086,7 @@ func Select(cases []SelectCase) (chosen int, recv Value, recvOK bool) {\n \tchosen, word, recvOK := rselect(runcases)\n \tif runcases[chosen].dir == uintptr(SelectRecv) {\n \t\ttt := (*chanType)(unsafe.Pointer(runcases[chosen].typ))\n-\t\ttyp := tt.elem\n-\t\tfl := flag(typ.Kind()) << flagKindShift\n-\t\tif typ.Kind() != Ptr && typ.Kind() != UnsafePointer {\n-\t\t\tfl |= flagIndir\n-\t\t}\n-\t\trecv = Value{typ, unsafe.Pointer(word), fl}\n+\t\trecv = fromIword(tt.elem, word, 0)\n \t}\n \treturn chosen, recv, recvOK\n }\n@@ -1928,16 +2115,8 @@ func MakeSlice(typ Type, len, cap int) Value {\n \t\tpanic(\"reflect.MakeSlice: len > cap\")\n \t}\n \n-\t// Declare slice so that gc can see the base pointer in it.\n-\tvar x []unsafe.Pointer\n-\n-\t// Reinterpret as *SliceHeader to edit.\n-\ts := (*SliceHeader)(unsafe.Pointer(&x))\n-\ts.Data = uintptr(unsafe_NewArray(typ.Elem().(*rtype), cap))\n-\ts.Len = len\n-\ts.Cap = cap\n-\n-\treturn Value{typ.common(), unsafe.Pointer(&x), flagIndir | flag(Slice)<<flagKindShift}\n+\ts := sliceHeader{unsafe_NewArray(typ.Elem().(*rtype), cap), len, cap}\n+\treturn Value{typ.common(), unsafe.Pointer(&s) /* 0, */, flagIndir | flag(Slice)<<flagKindShift}\n }\n \n // MakeChan creates a new channel with the specified type and buffer size.\n@@ -1952,7 +2131,7 @@ func MakeChan(typ Type, buffer int) Value {\n \t\tpanic(\"reflect.MakeChan: unidirectional channel type\")\n \t}\n \tch := makechan(typ.(*rtype), uint64(buffer))\n-\treturn Value{typ.common(), unsafe.Pointer(ch), flagIndir | (flag(Chan) << flagKindShift)}\n+\treturn Value{typ.common(), unsafe.Pointer(&ch) /* 0, */, flagIndir | (flag(Chan) << flagKindShift)}\n }\n \n // MakeMap creates a new map of the specified type.\n@@ -1961,7 +2140,7 @@ func MakeMap(typ Type) Value {\n \t\tpanic(\"reflect.MakeMap of non-map type\")\n \t}\n \tm := makemap(typ.(*rtype))\n-\treturn Value{typ.common(), unsafe.Pointer(m), flagIndir | (flag(Map) << flagKindShift)}\n+\treturn Value{typ.common(), unsafe.Pointer(&m) /* 0, */, flagIndir | (flag(Map) << flagKindShift)}\n }\n \n // Indirect returns the value that v points to.\n@@ -1982,21 +2161,13 @@ func ValueOf(i interface{}) Value {\n \t}\n \n \t// TODO(rsc): Eliminate this terrible hack.\n-\t// In the call to packValue, eface.typ doesn't escape,\n-\t// and eface.word is an integer.  So it looks like\n-\t// i (= eface) doesn't escape.  But really it does,\n-\t// because eface.word is actually a pointer.\n+\t// In the call to unpackEface, i.typ doesn't escape,\n+\t// and i.word is an integer.  So it looks like\n+\t// i doesn't escape.  But really it does,\n+\t// because i.word is actually a pointer.\n \tescapes(i)\n \n-\t// For an interface value with the noAddr bit set,\n-\t// the representation is identical to an empty interface.\n-\teface := *(*emptyInterface)(unsafe.Pointer(&i))\n-\ttyp := eface.typ\n-\tfl := flag(typ.Kind()) << flagKindShift\n-\tif typ.Kind() != Ptr && typ.Kind() != UnsafePointer {\n-\t\tfl |= flagIndir\n-\t}\n-\treturn Value{typ, unsafe.Pointer(eface.word), fl}\n+\treturn unpackEface(i)\n }\n \n // Zero returns a Value representing the zero value for the specified type.\n@@ -2011,9 +2182,9 @@ func Zero(typ Type) Value {\n \tt := typ.common()\n \tfl := flag(t.Kind()) << flagKindShift\n \tif t.Kind() == Ptr || t.Kind() == UnsafePointer {\n-\t\treturn Value{t, nil, fl}\n+\t\treturn Value{t, nil /* 0, */, fl}\n \t}\n-\treturn Value{t, unsafe_New(typ.(*rtype)), fl | flagIndir}\n+\treturn Value{t, unsafe_New(typ.(*rtype)) /* 0, */, fl | flagIndir}\n }\n \n // New returns a Value representing a pointer to a new zero value\n@@ -2024,14 +2195,14 @@ func New(typ Type) Value {\n \t}\n \tptr := unsafe_New(typ.(*rtype))\n \tfl := flag(Ptr) << flagKindShift\n-\treturn Value{typ.common().ptrTo(), ptr, fl}\n+\treturn Value{typ.common().ptrTo(), ptr /* 0, */, fl}\n }\n \n // NewAt returns a Value representing a pointer to a value of the\n // specified type, using p as that pointer.\n func NewAt(typ Type, p unsafe.Pointer) Value {\n \tfl := flag(Ptr) << flagKindShift\n-\treturn Value{typ.common().ptrTo(), p, fl}\n+\treturn Value{typ.common().ptrTo(), p /* 0, */, fl}\n }\n \n // assignTo returns a value v that can be assigned directly to typ.\n@@ -2049,7 +2220,7 @@ func (v Value) assignTo(context string, dst *rtype, target *interface{}) Value {\n \t\tv.typ = dst\n \t\tfl := v.flag & (flagRO | flagAddr | flagIndir)\n \t\tfl |= flag(dst.Kind()) << flagKindShift\n-\t\treturn Value{dst, v.val, fl}\n+\t\treturn Value{dst, v.ptr /* v.scalar, */, fl}\n \n \tcase implements(dst, v.typ):\n \t\tif target == nil {\n@@ -2061,7 +2232,7 @@ func (v Value) assignTo(context string, dst *rtype, target *interface{}) Value {\n \t\t} else {\n \t\t\tifaceE2I(dst, x, unsafe.Pointer(target))\n \t\t}\n-\t\treturn Value{dst, unsafe.Pointer(target), flagIndir | flag(Interface)<<flagKindShift}\n+\t\treturn Value{dst, unsafe.Pointer(target) /* 0, */, flagIndir | flag(Interface)<<flagKindShift}\n \t}\n \n \t// Failed.\n@@ -2173,20 +2344,20 @@ func makeInt(f flag, bits uint64, t Type) Value {\n \t\t// Assume ptrSize >= 4, so this must be uint64.\n \t\tptr := unsafe_New(typ)\n \t\t*(*uint64)(unsafe.Pointer(ptr)) = bits\n-\t\treturn Value{typ, ptr, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n+\t\treturn Value{typ, ptr /* 0, */, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n \t}\n-\tvar w iword\n+\tvar s uintptr\n \tswitch typ.size {\n \tcase 1:\n-\t\t*(*uint8)(unsafe.Pointer(&w)) = uint8(bits)\n+\t\t*(*uint8)(unsafe.Pointer(&s)) = uint8(bits)\n \tcase 2:\n-\t\t*(*uint16)(unsafe.Pointer(&w)) = uint16(bits)\n+\t\t*(*uint16)(unsafe.Pointer(&s)) = uint16(bits)\n \tcase 4:\n-\t\t*(*uint32)(unsafe.Pointer(&w)) = uint32(bits)\n+\t\t*(*uint32)(unsafe.Pointer(&s)) = uint32(bits)\n \tcase 8:\n-\t\t*(*uint64)(unsafe.Pointer(&w)) = uint64(bits)\n+\t\t*(*uint64)(unsafe.Pointer(&s)) = uint64(bits)\n \t}\n-\treturn Value{typ, unsafe.Pointer(&w), f | flag(typ.Kind())<<flagKindShift | flagIndir}\n+\treturn Value{typ, unsafe.Pointer(&s) /* 0, */, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n }\n \n // makeFloat returns a Value of type t equal to v (possibly truncated to float32),\n@@ -2197,17 +2368,17 @@ func makeFloat(f flag, v float64, t Type) Value {\n \t\t// Assume ptrSize >= 4, so this must be float64.\n \t\tptr := unsafe_New(typ)\n \t\t*(*float64)(unsafe.Pointer(ptr)) = v\n-\t\treturn Value{typ, ptr, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n+\t\treturn Value{typ, ptr /* 0, */, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n \t}\n \n-\tvar w iword\n+\tvar s uintptr\n \tswitch typ.size {\n \tcase 4:\n-\t\t*(*float32)(unsafe.Pointer(&w)) = float32(v)\n+\t\t*(*float32)(unsafe.Pointer(&s)) = float32(v)\n \tcase 8:\n-\t\t*(*float64)(unsafe.Pointer(&w)) = v\n+\t\t*(*float64)(unsafe.Pointer(&s)) = v\n \t}\n-\treturn Value{typ, unsafe.Pointer(&w), f | flag(typ.Kind())<<flagKindShift | flagIndir}\n+\treturn Value{typ, unsafe.Pointer(&s) /* 0, */, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n }\n \n // makeComplex returns a Value of type t equal to v (possibly truncated to complex64),\n@@ -2222,13 +2393,13 @@ func makeComplex(f flag, v complex128, t Type) Value {\n \t\tcase 16:\n \t\t\t*(*complex128)(unsafe.Pointer(ptr)) = v\n \t\t}\n-\t\treturn Value{typ, ptr, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n+\t\treturn Value{typ, ptr /* 0, */, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n \t}\n \n \t// Assume ptrSize <= 8 so this must be complex64.\n-\tvar w iword\n-\t*(*complex64)(unsafe.Pointer(&w)) = complex64(v)\n-\treturn Value{typ, unsafe.Pointer(&w), f | flag(typ.Kind())<<flagKindShift | flagIndir}\n+\tvar s uintptr\n+\t*(*complex64)(unsafe.Pointer(&s)) = complex64(v)\n+\treturn Value{typ, unsafe.Pointer(&s) /* 0, */, f | flagIndir | flag(typ.Kind())<<flagKindShift}\n }\n \n func makeString(f flag, v string, t Type) Value {\n@@ -2331,15 +2502,15 @@ func cvtStringRunes(v Value, t Type) Value {\n func cvtDirect(v Value, typ Type) Value {\n \tf := v.flag\n \tt := typ.common()\n-\tval := v.val\n+\tptr := v.ptr\n \tif f&flagAddr != 0 {\n \t\t// indirect, mutable word - make a copy\n-\t\tptr := unsafe_New(t)\n-\t\tmemmove(ptr, val, t.size)\n-\t\tval = ptr\n+\t\tc := unsafe_New(t)\n+\t\tmemmove(c, ptr, t.size)\n+\t\tptr = c\n \t\tf &^= flagAddr\n \t}\n-\treturn Value{t, val, v.flag&flagRO | f}\n+\treturn Value{t, ptr /* v.scalar, */, v.flag&flagRO | f} // v.flag&flagRO|f == f?\n }\n \n // convertOp: concrete -> interface\n@@ -2351,7 +2522,7 @@ func cvtT2I(v Value, typ Type) Value {\n \t} else {\n \t\tifaceE2I(typ.(*rtype), x, unsafe.Pointer(target))\n \t}\n-\treturn Value{typ.common(), unsafe.Pointer(target), v.flag&flagRO | flagIndir | flag(Interface)<<flagKindShift}\n+\treturn Value{typ.common(), unsafe.Pointer(target) /* 0, */, v.flag&flagRO | flagIndir | flag(Interface)<<flagKindShift}\n }\n \n // convertOp: interface -> interface\n@@ -2365,20 +2536,21 @@ func cvtI2I(v Value, typ Type) Value {\n }\n \n // implemented in ../pkg/runtime\n-func chancap(ch iword) int\n-func chanclose(ch iword)\n-func chanlen(ch iword) int\n-func chanrecv(t *rtype, ch iword, nb bool) (val iword, selected, received bool)\n-func chansend(t *rtype, ch iword, val iword, nb bool) bool\n-\n-func makechan(typ *rtype, size uint64) (ch iword)\n-func makemap(t *rtype) (m iword)\n-func mapaccess(t *rtype, m iword, key iword) (val iword, ok bool)\n-func mapassign(t *rtype, m iword, key, val iword, ok bool)\n-func mapiterinit(t *rtype, m iword) *byte\n-func mapiterkey(it *byte) (key iword, ok bool)\n-func mapiternext(it *byte)\n-func maplen(m iword) int\n+func chancap(ch unsafe.Pointer) int\n+func chanclose(ch unsafe.Pointer)\n+func chanlen(ch unsafe.Pointer) int\n+func chanrecv(t *rtype, ch unsafe.Pointer, nb bool) (val iword, selected, received bool)\n+func chansend(t *rtype, ch unsafe.Pointer, val iword, nb bool) bool\n+\n+func makechan(typ *rtype, size uint64) (ch unsafe.Pointer)\n+func makemap(t *rtype) (m unsafe.Pointer)\n+func mapaccess(t *rtype, m unsafe.Pointer, key unsafe.Pointer) (val unsafe.Pointer)\n+func mapassign(t *rtype, m unsafe.Pointer, key, val unsafe.Pointer)\n+func mapdelete(t *rtype, m unsafe.Pointer, key unsafe.Pointer)\n+func mapiterinit(t *rtype, m unsafe.Pointer) unsafe.Pointer\n+func mapiterkey(it unsafe.Pointer) (key unsafe.Pointer)\n+func mapiternext(it unsafe.Pointer)\n+func maplen(m unsafe.Pointer) int\n \n func call(typ *rtype, fnaddr unsafe.Pointer, isInterface bool, isMethod bool, params *unsafe.Pointer, results *unsafe.Pointer)\n func ifaceE2I(t *rtype, src interface{}, dst unsafe.Pointer)"}, {"sha": "effe4e6862754899ebeeabe5bedf97b46b06f120", "filename": "libgo/go/regexp/syntax/perl_groups.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fregexp%2Fsyntax%2Fperl_groups.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fregexp%2Fsyntax%2Fperl_groups.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fregexp%2Fsyntax%2Fperl_groups.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n // GENERATED BY make_perl_groups.pl; DO NOT EDIT.\n // make_perl_groups.pl >perl_groups.go\n "}, {"sha": "85b69cfdcfcb93e169986b4f9276b61c01f16d40", "filename": "libgo/go/runtime/extern.go", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fextern.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fextern.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fextern.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -24,18 +24,25 @@ percentage at run time. See http://golang.org/pkg/runtime/debug/#SetGCPercent.\n The GODEBUG variable controls debug output from the runtime. GODEBUG value is\n a comma-separated list of name=val pairs. Supported names are:\n \n+\tallocfreetrace: setting allocfreetrace=1 causes every allocation to be\n+\tprofiled and a stack trace printed on each object's allocation and free.\n+\n+\tefence: setting efence=1 causes the allocator to run in a mode\n+\twhere each object is allocated on a unique page and addresses are\n+\tnever recycled.\n+\n \tgctrace: setting gctrace=1 causes the garbage collector to emit a single line to standard\n \terror at each collection, summarizing the amount of memory collected and the\n \tlength of the pause. Setting gctrace=2 emits the same summary but also\n \trepeats each collection.\n \n-\tschedtrace: setting schedtrace=X causes the scheduler to emit a single line to standard\n-\terror every X milliseconds, summarizing the scheduler state.\n-\n \tscheddetail: setting schedtrace=X and scheddetail=1 causes the scheduler to emit\n \tdetailed multiline info every X milliseconds, describing state of the scheduler,\n \tprocessors, threads and goroutines.\n \n+\tschedtrace: setting schedtrace=X causes the scheduler to emit a single line to standard\n+\terror every X milliseconds, summarizing the scheduler state.\n+\n The GOMAXPROCS variable limits the number of operating system threads that\n can execute user-level Go code simultaneously. There is no limit to the number of threads\n that can be blocked in system calls on behalf of Go code; those do not count against\n@@ -153,6 +160,9 @@ func funcentry_go(*Func) uintptr\n // to depend on a finalizer to flush an in-memory I/O buffer such as a\n // bufio.Writer, because the buffer would not be flushed at program exit.\n //\n+// It is not guaranteed that a finalizer will run if the size of *x is\n+// zero bytes.\n+//\n // A single goroutine runs all finalizers for a program, sequentially.\n // If a finalizer must run for a long time, it should do so by starting\n // a new goroutine."}, {"sha": "3d18e3be82c0f909c5466d636ac91a47853abcff", "filename": "libgo/go/runtime/map_test.go", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fmap_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fmap_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmap_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -416,3 +416,37 @@ func TestMapNanGrowIterator(t *testing.T) {\n \t\tt.Fatalf(\"missing value\")\n \t}\n }\n+\n+func TestMapIterOrder(t *testing.T) {\n+\tif runtime.Compiler == \"gccgo\" {\n+\t\tt.Skip(\"skipping for gccgo\")\n+\t}\n+\n+\t// TODO: For issue 6719, add 3 and 7 to this list.\n+\tfor _, n := range [...]int{9, 15} {\n+\t\t// Make m be {0: true, 1: true, ..., n-1: true}.\n+\t\tm := make(map[int]bool)\n+\t\tfor i := 0; i < n; i++ {\n+\t\t\tm[i] = true\n+\t\t}\n+\t\t// Check that iterating over the map produces at least two different orderings.\n+\t\tord := func() []int {\n+\t\t\tvar s []int\n+\t\t\tfor key := range m {\n+\t\t\t\ts = append(s, key)\n+\t\t\t}\n+\t\t\treturn s\n+\t\t}\n+\t\tfirst := ord()\n+\t\tok := false\n+\t\tfor try := 0; try < 100; try++ {\n+\t\t\tif !reflect.DeepEqual(first, ord()) {\n+\t\t\t\tok = true\n+\t\t\t\tbreak\n+\t\t\t}\n+\t\t}\n+\t\tif !ok {\n+\t\t\tt.Errorf(\"Map with n=%d elements had consistent iteration order: %v\", n, first)\n+\t\t}\n+\t}\n+}"}, {"sha": "da45ea11e49b9ba0c8ea3d4a87d597d3c2aa130f", "filename": "libgo/go/runtime/mapspeed_test.go", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fmapspeed_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fmapspeed_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmapspeed_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -268,3 +268,33 @@ func BenchmarkSameLengthMap(b *testing.B) {\n \t\t_ = m[s1]\n \t}\n }\n+\n+type BigKey [3]int64\n+\n+func BenchmarkBigKeyMap(b *testing.B) {\n+\tm := make(map[BigKey]bool)\n+\tk := BigKey{3, 4, 5}\n+\tm[k] = true\n+\tfor i := 0; i < b.N; i++ {\n+\t\t_ = m[k]\n+\t}\n+}\n+\n+type BigVal [3]int64\n+\n+func BenchmarkBigValMap(b *testing.B) {\n+\tm := make(map[BigKey]BigVal)\n+\tk := BigKey{3, 4, 5}\n+\tm[k] = BigVal{6, 7, 8}\n+\tfor i := 0; i < b.N; i++ {\n+\t\t_ = m[k]\n+\t}\n+}\n+\n+func BenchmarkSmallKeyMap(b *testing.B) {\n+\tm := make(map[int16]bool)\n+\tm[5] = true\n+\tfor i := 0; i < b.N; i++ {\n+\t\t_ = m[5]\n+\t}\n+}"}, {"sha": "ffcffbd4befa0bc5239985e3e2da13ca7d7fb0b4", "filename": "libgo/go/runtime/mfinal_test.go", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fmfinal_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fmfinal_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fmfinal_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -46,13 +46,15 @@ func TestFinalizerType(t *testing.T) {\n \t}\n \n \tfor _, tt := range finalizerTests {\n+\t\tdone := make(chan bool, 1)\n \t\tgo func() {\n \t\t\tv := new(int)\n \t\t\t*v = 97531\n \t\t\truntime.SetFinalizer(tt.convert(v), tt.finalizer)\n \t\t\tv = nil\n+\t\t\tdone <- true\n \t\t}()\n-\t\ttime.Sleep(1 * time.Second)\n+\t\t<-done\n \t\truntime.GC()\n \t\tselect {\n \t\tcase <-ch:\n@@ -73,6 +75,7 @@ func TestFinalizerInterfaceBig(t *testing.T) {\n \t\tt.Skipf(\"Skipping on non-amd64 machine\")\n \t}\n \tch := make(chan bool)\n+\tdone := make(chan bool, 1)\n \tgo func() {\n \t\tv := &bigValue{0xDEADBEEFDEADBEEF, true, \"It matters not how strait the gate\"}\n \t\told := *v\n@@ -87,8 +90,9 @@ func TestFinalizerInterfaceBig(t *testing.T) {\n \t\t\tclose(ch)\n \t\t})\n \t\tv = nil\n+\t\tdone <- true\n \t}()\n-\ttime.Sleep(1 * time.Second)\n+\t<-done\n \truntime.GC()\n \tselect {\n \tcase <-ch:\n@@ -100,6 +104,13 @@ func TestFinalizerInterfaceBig(t *testing.T) {\n func fin(v *int) {\n }\n \n+// Verify we don't crash at least. golang.org/issue/6857\n+func TestFinalizerZeroSizedStruct(t *testing.T) {\n+\ttype Z struct{}\n+\tz := new(Z)\n+\truntime.SetFinalizer(z, func(*Z) {})\n+}\n+\n func BenchmarkFinalizer(b *testing.B) {\n \tconst CallsPerSched = 1000\n \tprocs := runtime.GOMAXPROCS(-1)"}, {"sha": "e556ca11e0690ee04dd912680f3adb8cabbafc55", "filename": "libgo/go/runtime/pprof/pprof_test.go", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fpprof%2Fpprof_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -33,6 +33,10 @@ func TestCPUProfile(t *testing.T) {\n }\n \n func TestCPUProfileMultithreaded(t *testing.T) {\n+\t// TODO(brainman): delete when issue 6986 is fixed.\n+\tif runtime.GOOS == \"windows\" && runtime.GOARCH == \"amd64\" {\n+\t\tt.Skip(\"skipping broken test on windows-amd64-race\")\n+\t}\n \tbuf := make([]byte, 100000)\n \tdefer runtime.GOMAXPROCS(runtime.GOMAXPROCS(2))\n \ttestCPUProfile(t, []string{\"crc32.update\"}, func() {\n@@ -244,6 +248,10 @@ func TestGoroutineSwitch(t *testing.T) {\n \n // Test that profiling of division operations is okay, especially on ARM. See issue 6681.\n func TestMathBigDivide(t *testing.T) {\n+\t// TODO(brainman): delete when issue 6986 is fixed.\n+\tif runtime.GOOS == \"windows\" && runtime.GOARCH == \"amd64\" {\n+\t\tt.Skip(\"skipping broken test on windows-amd64-race\")\n+\t}\n \ttestCPUProfile(t, nil, func() {\n \t\tt := time.After(5 * time.Second)\n \t\tpi := new(big.Int)"}, {"sha": "1702298aed1a40c757bb71b5ad334965830b4e74", "filename": "libgo/go/runtime/runtime_test.go", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fruntime_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fruntime_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fruntime_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -95,6 +95,10 @@ func BenchmarkDeferMany(b *testing.B) {\n // The value reported will include the padding between runtime.gogo and the\n // next function in memory. That's fine.\n func TestRuntimeGogoBytes(t *testing.T) {\n+\t// TODO(brainman): delete when issue 6973 is fixed.\n+\tif GOOS == \"windows\" {\n+\t\tt.Skip(\"skipping broken test on windows\")\n+\t}\n \tdir, err := ioutil.TempDir(\"\", \"go-build\")\n \tif err != nil {\n \t\tt.Fatalf(\"failed to create temp directory: %v\", err)\n@@ -106,7 +110,7 @@ func TestRuntimeGogoBytes(t *testing.T) {\n \t\tt.Fatalf(\"building hello world: %v\\n%s\", err, out)\n \t}\n \n-\tout, err = exec.Command(\"go\", \"tool\", \"nm\", \"-S\", dir+\"/hello\").CombinedOutput()\n+\tout, err = exec.Command(\"go\", \"tool\", \"nm\", \"-size\", dir+\"/hello\").CombinedOutput()\n \tif err != nil {\n \t\tt.Fatalf(\"go tool nm: %v\\n%s\", err, out)\n \t}\n@@ -125,3 +129,8 @@ func TestRuntimeGogoBytes(t *testing.T) {\n \tt.Fatalf(\"go tool nm did not report size for runtime.gogo\")\n }\n */\n+\n+// golang.org/issue/7063\n+func TestStopCPUProfilingWithProfilerOff(t *testing.T) {\n+\tSetCPUProfileRate(0)\n+}"}, {"sha": "963de8cdb8266335d7e19ef27bcf57bc9053ab32", "filename": "libgo/go/runtime/runtime_unix_test.go", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fruntime_unix_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fruntime%2Fruntime_unix_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fruntime_unix_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,56 @@\n+// Copyright 2013 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// Only works on systems with syscall.Close.\n+// We need a fast system call to provoke the race,\n+// and Close(-1) is nearly universally fast.\n+\n+// +build darwin dragonfly freebsd linux netbsd openbsd plan9\n+\n+package runtime_test\n+\n+import (\n+\t\"runtime\"\n+\t\"sync\"\n+\t\"sync/atomic\"\n+\t\"syscall\"\n+\t\"testing\"\n+)\n+\n+func TestGoroutineProfile(t *testing.T) {\n+\t// GoroutineProfile used to use the wrong starting sp for\n+\t// goroutines coming out of system calls, causing possible\n+\t// crashes.\n+\tdefer runtime.GOMAXPROCS(runtime.GOMAXPROCS(100))\n+\n+\tvar stop uint32\n+\tdefer atomic.StoreUint32(&stop, 1) // in case of panic\n+\n+\tvar wg sync.WaitGroup\n+\tfor i := 0; i < 4; i++ {\n+\t\twg.Add(1)\n+\t\tgo func() {\n+\t\t\tfor atomic.LoadUint32(&stop) == 0 {\n+\t\t\t\tsyscall.Close(-1)\n+\t\t\t}\n+\t\t\twg.Done()\n+\t\t}()\n+\t}\n+\n+\tmax := 10000\n+\tif testing.Short() {\n+\t\tmax = 100\n+\t}\n+\tstk := make([]runtime.StackRecord, 100)\n+\tfor n := 0; n < max; n++ {\n+\t\t_, ok := runtime.GoroutineProfile(stk)\n+\t\tif !ok {\n+\t\t\tt.Fatalf(\"GoroutineProfile failed\")\n+\t\t}\n+\t}\n+\n+\t// If the program didn't crash, we passed.\n+\tatomic.StoreUint32(&stop, 1)\n+\twg.Wait()\n+}"}, {"sha": "242c5fffa217e2af515283f5eec189e192cde647", "filename": "libgo/go/sort/sort.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsort%2Fsort.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsort%2Fsort.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsort%2Fsort.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -289,7 +289,7 @@ func StringsAreSorted(a []string) bool { return IsSorted(StringSlice(a)) }\n // only logarithmic additional stack space.  They perform well if compared\n // experimentaly to other stable in-place sorting algorithms.\n //\n-// Remarks on other algoritms evaluated:\n+// Remarks on other algorithms evaluated:\n //  - GCC's 4.6.3 stable_sort with merge_without_buffer from libstdc++:\n //    Not faster.\n //  - GCC's __rotate for block rotations: Not faster.\n@@ -349,7 +349,7 @@ func Stable(data Interface) {\n // The algorithm needs O((M+N)*log(M)) calls to data.Swap.\n //\n // The paper gives O((M+N)*log(M)) as the number of assignments assuming a\n-// rotation algorithm wich uses O(M+N+gcd(M+N)) assignments. The argumentation\n+// rotation algorithm which uses O(M+N+gcd(M+N)) assignments. The argumentation\n // in the paper carries through for Swap operations, especially as the block\n // swapping rotate uses only O(M+N) Swaps.\n func symMerge(data Interface, a, m, b int) {"}, {"sha": "28f469f5854d8a504674e88cab58a9f2d5b98d13", "filename": "libgo/go/strconv/atob_test.go", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fatob_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fatob_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fstrconv%2Fatob_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -5,6 +5,7 @@\n package strconv_test\n \n import (\n+\t\"bytes\"\n \t. \"strconv\"\n \t\"testing\"\n )\n@@ -55,3 +56,36 @@ func TestParseBool(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+var boolString = map[bool]string{\n+\ttrue:  \"true\",\n+\tfalse: \"false\",\n+}\n+\n+func TestFormatBool(t *testing.T) {\n+\tfor b, s := range boolString {\n+\t\tif f := FormatBool(b); f != s {\n+\t\t\tt.Errorf(`FormatBool(%v): expected %q but got %q`, b, s, f)\n+\t\t}\n+\t}\n+}\n+\n+type appendBoolTest struct {\n+\tb   bool\n+\tin  []byte\n+\tout []byte\n+}\n+\n+var appendBoolTests = []appendBoolTest{\n+\t{true, []byte(\"foo \"), []byte(\"foo true\")},\n+\t{false, []byte(\"foo \"), []byte(\"foo false\")},\n+}\n+\n+func TestAppendBool(t *testing.T) {\n+\tfor _, test := range appendBoolTests {\n+\t\tb := AppendBool(test.in, test.b)\n+\t\tif !bytes.Equal(b, test.out) {\n+\t\t\tt.Errorf(\"AppendBool(%q, %v): expected %q but got %q\", test.in, test.b, test.out, b)\n+\t\t}\n+\t}\n+}"}, {"sha": "beaa68d71f544867f6e226b627061325144d07c6", "filename": "libgo/go/strconv/atof.go", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fatof.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fatof.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fstrconv%2Fatof.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -354,17 +354,6 @@ out:\n \treturn bits, overflow\n }\n \n-func (d *decimal) atof32int() float32 {\n-\tf := float32(0)\n-\tfor i := 0; i < d.nd; i++ {\n-\t\tf = f*10 + float32(d.d[i]-'0')\n-\t}\n-\tif d.neg {\n-\t\tf = -f\n-\t}\n-\treturn f\n-}\n-\n // Exact powers of 10.\n var float64pow10 = []float64{\n \t1e0, 1e1, 1e2, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9,"}, {"sha": "91f1795356bec9cd77e29e09165091ae01209048", "filename": "libgo/go/strconv/isprint.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fisprint.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fisprint.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fstrconv%2Fisprint.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n // DO NOT EDIT.  GENERATED BY\n //     go run makeisprint.go >x && mv x isprint.go\n "}, {"sha": "216159cc020fdc5e27c5e3aa7c106dced48c0c1d", "filename": "libgo/go/strconv/makeisprint.go", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fmakeisprint.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fmakeisprint.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fstrconv%2Fmakeisprint.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -122,6 +122,9 @@ func main() {\n \t\t}\n \t}\n \n+\tfmt.Printf(`// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.` + \"\\n\\n\")\n \tfmt.Printf(\"// DO NOT EDIT.  GENERATED BY\\n\")\n \tfmt.Printf(\"//     go run makeisprint.go >x && mv x isprint.go\\n\\n\")\n \tfmt.Printf(\"package strconv\\n\\n\")"}, {"sha": "405a57eb576a410c2c6351eaa75ffc4b3f774435", "filename": "libgo/go/strconv/quote_example_test.go", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fquote_example_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrconv%2Fquote_example_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fstrconv%2Fquote_example_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package strconv_test\n+\n+import (\n+\t\"fmt\"\n+\t\"strconv\"\n+)\n+\n+func ExampleUnquote() {\n+\ttest := func(s string) {\n+\t\tt, err := strconv.Unquote(s)\n+\t\tif err != nil {\n+\t\t\tfmt.Printf(\"Unquote(%#v): %v\\n\", s, err)\n+\t\t} else {\n+\t\t\tfmt.Printf(\"Unquote(%#v) = %v\\n\", s, t)\n+\t\t}\n+\t}\n+\n+\ts := `cafe\\u0301`\n+\t// If the string doesn't have quotes, it can't be unquoted.\n+\ttest(s) // invalid syntax\n+\ttest(\"`\" + s + \"`\")\n+\ttest(`\"` + s + `\"`)\n+\n+\ttest(`'\\u00e9'`)\n+\n+\t// Output:\n+\t// Unquote(\"cafe\\\\u0301\"): invalid syntax\n+\t// Unquote(\"`cafe\\\\u0301`\") = cafe\\u0301\n+\t// Unquote(\"\\\"cafe\\\\u0301\\\"\") = cafe\u0301\n+\t// Unquote(\"'\\\\u00e9'\") = \u00e9\n+}"}, {"sha": "7243e16b127086e4931962c0536a45fba8d01792", "filename": "libgo/go/strings/example_test.go", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrings%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrings%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fstrings%2Fexample_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -7,13 +7,22 @@ package strings_test\n import (\n \t\"fmt\"\n \t\"strings\"\n+\t\"unicode\"\n )\n \n func ExampleFields() {\n \tfmt.Printf(\"Fields are: %q\", strings.Fields(\"  foo bar  baz   \"))\n \t// Output: Fields are: [\"foo\" \"bar\" \"baz\"]\n }\n \n+func ExampleFieldsFunc() {\n+\tf := func(c rune) bool {\n+\t\treturn !unicode.IsLetter(c) && !unicode.IsNumber(c)\n+\t}\n+\tfmt.Printf(\"Fields are: %q\", strings.FieldsFunc(\"  foo1;bar2,baz3...\", f))\n+\t// Output: Fields are: [\"foo1\" \"bar2\" \"baz3\"]\n+}\n+\n func ExampleContains() {\n \tfmt.Println(strings.Contains(\"seafood\", \"foo\"))\n \tfmt.Println(strings.Contains(\"seafood\", \"bar\"))\n@@ -59,6 +68,25 @@ func ExampleIndex() {\n \t// -1\n }\n \n+func ExampleIndexFunc() {\n+\tf := func(c rune) bool {\n+\t\treturn unicode.Is(unicode.Han, c)\n+\t}\n+\tfmt.Println(strings.IndexFunc(\"Hello, \u4e16\u754c\", f))\n+\tfmt.Println(strings.IndexFunc(\"Hello, world\", f))\n+\t// Output:\n+\t// 7\n+\t// -1\n+}\n+\n+func ExampleIndexAny() {\n+\tfmt.Println(strings.IndexAny(\"chicken\", \"aeiouy\"))\n+\tfmt.Println(strings.IndexAny(\"crwth\", \"aeiouy\"))\n+\t// Output:\n+\t// 2\n+\t// -1\n+}\n+\n func ExampleIndexRune() {\n \tfmt.Println(strings.IndexRune(\"chicken\", 'k'))\n \tfmt.Println(strings.IndexRune(\"chicken\", 'd'))\n@@ -141,8 +169,8 @@ func ExampleToTitle() {\n }\n \n func ExampleTrim() {\n-\tfmt.Printf(\"[%q]\", strings.Trim(\" !!! Achtung !!! \", \"! \"))\n-\t// Output: [\"Achtung\"]\n+\tfmt.Printf(\"[%q]\", strings.Trim(\" !!! Achtung! Achtung! !!! \", \"! \"))\n+\t// Output: [\"Achtung! Achtung\"]\n }\n \n func ExampleMap() {"}, {"sha": "a5be2f9bed5e0e56f43d5a7b5e5db0dcfcf6788e", "filename": "libgo/go/strings/strings_test.go", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrings%2Fstrings_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fstrings%2Fstrings_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fstrings%2Fstrings_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -903,6 +903,8 @@ var TitleTests = []struct {\n \t{\"123a456\", \"123a456\"},\n \t{\"double-blind\", \"Double-Blind\"},\n \t{\"\u00ff\u00f8\u00fb\", \"\u0178\u00f8\u00fb\"},\n+\t{\"with_underscore\", \"With_underscore\"},\n+\t{\"unicode \\xe2\\x80\\xa8 line separator\", \"Unicode \\xe2\\x80\\xa8 Line Separator\"},\n }\n \n func TestTitle(t *testing.T) {"}, {"sha": "9eb07c3a03f26aebee9b403d0c92d7ccd44dd815", "filename": "libgo/go/sync/pool.go", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsync%2Fpool.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsync%2Fpool.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsync%2Fpool.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,75 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package sync\n+\n+// A Pool is a set of temporary objects that may be individually saved\n+// and retrieved.\n+//\n+// Any item stored in the Pool may be removed automatically by the\n+// implementation at any time without notification.\n+// If the Pool holds the only reference when this happens, the item\n+// might be deallocated.\n+//\n+// A Pool is safe for use by multiple goroutines simultaneously.\n+//\n+// Pool's intended use is for free lists maintained in global variables,\n+// typically accessed by multiple goroutines simultaneously. Using a\n+// Pool instead of a custom free list allows the runtime to reclaim\n+// entries from the pool when it makes sense to do so. An\n+// appropriate use of sync.Pool is to create a pool of temporary buffers\n+// shared between independent clients of a global resource. On the\n+// other hand, if a free list is maintained as part of an object used\n+// only by a single client and freed when the client completes,\n+// implementing that free list as a Pool is not appropriate.\n+//\n+// This is an experimental type and might not be released.\n+type Pool struct {\n+\tnext *Pool         // for use by runtime. must be first.\n+\tlist []interface{} // offset known to runtime\n+\tmu   Mutex         // guards list\n+\n+\t// New optionally specifies a function to generate\n+\t// a value when Get would otherwise return nil.\n+\t// It may not be changed concurrently with calls to Get.\n+\tNew func() interface{}\n+}\n+\n+func runtime_registerPool(*Pool)\n+\n+// Put adds x to the pool.\n+func (p *Pool) Put(x interface{}) {\n+\tif x == nil {\n+\t\treturn\n+\t}\n+\tp.mu.Lock()\n+\tif p.list == nil {\n+\t\truntime_registerPool(p)\n+\t}\n+\tp.list = append(p.list, x)\n+\tp.mu.Unlock()\n+}\n+\n+// Get selects an arbitrary item from the Pool, removes it from the\n+// Pool, and returns it to the caller.\n+// Get may choose to ignore the pool and treat it as empty.\n+// Callers should not assume any relation between values passed to Put and\n+// the values returned by Get.\n+//\n+// If Get would otherwise return nil and p.New is non-nil, Get returns\n+// the result of calling p.New.\n+func (p *Pool) Get() interface{} {\n+\tp.mu.Lock()\n+\tvar x interface{}\n+\tif n := len(p.list); n > 0 {\n+\t\tx = p.list[n-1]\n+\t\tp.list[n-1] = nil // Just to be safe\n+\t\tp.list = p.list[:n-1]\n+\t}\n+\tp.mu.Unlock()\n+\tif x == nil && p.New != nil {\n+\t\tx = p.New()\n+\t}\n+\treturn x\n+}"}, {"sha": "f88dab494367dc236cf0568de334f0d051af9ff1", "filename": "libgo/go/sync/pool_test.go", "status": "added", "additions": 159, "deletions": 0, "changes": 159, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsync%2Fpool_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsync%2Fpool_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsync%2Fpool_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -0,0 +1,159 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package sync_test\n+\n+import (\n+\t\"runtime\"\n+\t\"runtime/debug\"\n+\t. \"sync\"\n+\t\"sync/atomic\"\n+\t\"testing\"\n+\t\"time\"\n+\t\"unsafe\"\n+)\n+\n+func TestPool(t *testing.T) {\n+\t// disable GC so we can control when it happens.\n+\tdefer debug.SetGCPercent(debug.SetGCPercent(-1))\n+\tvar p Pool\n+\tif p.Get() != nil {\n+\t\tt.Fatal(\"expected empty\")\n+\t}\n+\tp.Put(\"a\")\n+\tp.Put(\"b\")\n+\tif g := p.Get(); g != \"b\" {\n+\t\tt.Fatalf(\"got %#v; want b\", g)\n+\t}\n+\tif g := p.Get(); g != \"a\" {\n+\t\tt.Fatalf(\"got %#v; want a\", g)\n+\t}\n+\tif g := p.Get(); g != nil {\n+\t\tt.Fatalf(\"got %#v; want nil\", g)\n+\t}\n+\n+\tp.Put(\"c\")\n+\tdebug.SetGCPercent(100) // to allow following GC to actually run\n+\truntime.GC()\n+\tif g := p.Get(); g != nil {\n+\t\tt.Fatalf(\"got %#v; want nil after GC\", g)\n+\t}\n+}\n+\n+func TestPoolNew(t *testing.T) {\n+\t// disable GC so we can control when it happens.\n+\tdefer debug.SetGCPercent(debug.SetGCPercent(-1))\n+\n+\ti := 0\n+\tp := Pool{\n+\t\tNew: func() interface{} {\n+\t\t\ti++\n+\t\t\treturn i\n+\t\t},\n+\t}\n+\tif v := p.Get(); v != 1 {\n+\t\tt.Fatalf(\"got %v; want 1\", v)\n+\t}\n+\tif v := p.Get(); v != 2 {\n+\t\tt.Fatalf(\"got %v; want 2\", v)\n+\t}\n+\tp.Put(42)\n+\tif v := p.Get(); v != 42 {\n+\t\tt.Fatalf(\"got %v; want 42\", v)\n+\t}\n+\tif v := p.Get(); v != 3 {\n+\t\tt.Fatalf(\"got %v; want 3\", v)\n+\t}\n+}\n+\n+// Test that Pool does not hold pointers to previously cached\n+// resources\n+func TestPoolGC(t *testing.T) {\n+\tvar p Pool\n+\tvar fin uint32\n+\tconst N = 100\n+\tfor i := 0; i < N; i++ {\n+\t\tv := new(int)\n+\t\truntime.SetFinalizer(v, func(vv *int) {\n+\t\t\tatomic.AddUint32(&fin, 1)\n+\t\t})\n+\t\tp.Put(v)\n+\t}\n+\tfor i := 0; i < N; i++ {\n+\t\tp.Get()\n+\t}\n+\tfor i := 0; i < 5; i++ {\n+\t\truntime.GC()\n+\t\ttime.Sleep(time.Millisecond)\n+\t\t// 1 pointer can remain on stack or elsewhere\n+\t\tif atomic.LoadUint32(&fin) >= N-1 {\n+\t\t\treturn\n+\t\t}\n+\n+\t\t// gccgo has a less precise heap.\n+\t\tif runtime.Compiler == \"gccgo\" && atomic.LoadUint32(&fin) >= N-5 {\n+\t\t\treturn\n+\t\t}\n+\t}\n+\tt.Fatalf(\"only %v out of %v resources are finalized\",\n+\t\tatomic.LoadUint32(&fin), N)\n+}\n+\n+func TestPoolStress(t *testing.T) {\n+\tconst P = 10\n+\tN := int(1e6)\n+\tif testing.Short() {\n+\t\tN /= 100\n+\t}\n+\tvar p Pool\n+\tdone := make(chan bool)\n+\tfor i := 0; i < P; i++ {\n+\t\tgo func() {\n+\t\t\tvar v interface{} = 0\n+\t\t\tfor j := 0; j < N; j++ {\n+\t\t\t\tif v == nil {\n+\t\t\t\t\tv = 0\n+\t\t\t\t}\n+\t\t\t\tp.Put(v)\n+\t\t\t\tv = p.Get()\n+\t\t\t\tif v != nil && v.(int) != 0 {\n+\t\t\t\t\tt.Fatalf(\"expect 0, got %v\", v)\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tdone <- true\n+\t\t}()\n+\t}\n+\tfor i := 0; i < P; i++ {\n+\t\t<-done\n+\t}\n+}\n+\n+func BenchmarkPool(b *testing.B) {\n+\tprocs := runtime.GOMAXPROCS(-1)\n+\tvar dec func() bool\n+\tif unsafe.Sizeof(b.N) == 8 {\n+\t\tn := int64(b.N)\n+\t\tdec = func() bool {\n+\t\t\treturn atomic.AddInt64(&n, -1) >= 0\n+\t\t}\n+\t} else {\n+\t\tn := int32(b.N)\n+\t\tdec = func() bool {\n+\t\t\treturn atomic.AddInt32(&n, -1) >= 0\n+\t\t}\n+\t}\n+\tvar p Pool\n+\tvar wg WaitGroup\n+\tfor i := 0; i < procs; i++ {\n+\t\twg.Add(1)\n+\t\tgo func() {\n+\t\t\tdefer wg.Done()\n+\t\t\tfor dec() {\n+\t\t\t\tp.Put(1)\n+\t\t\t\tp.Get()\n+\t\t\t}\n+\t\t}()\n+\t}\n+\twg.Wait()\n+}"}, {"sha": "d9fb26b133f1e7c3acc39afd87a37584518ba72e", "filename": "libgo/go/syscall/dir_plan9.go", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsyscall%2Fdir_plan9.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsyscall%2Fdir_plan9.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fdir_plan9.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -11,6 +11,7 @@ import \"errors\"\n var (\n \tErrShortStat = errors.New(\"stat buffer too short\")\n \tErrBadStat   = errors.New(\"malformed stat buffer\")\n+\tErrBadName   = errors.New(\"bad character in file name\")\n )\n \n // A Qid represents a 9P server's unique identification for a file.\n@@ -65,6 +66,12 @@ func (d *Dir) Marshal(b []byte) (n int, err error) {\n \t\treturn n, ErrShortStat\n \t}\n \n+\tfor _, c := range d.Name {\n+\t\tif c == '/' {\n+\t\t\treturn n, ErrBadName\n+\t\t}\n+\t}\n+\n \tb = pbit16(b, uint16(n)-2)\n \tb = pbit16(b, d.Type)\n \tb = pbit32(b, d.Dev)"}, {"sha": "48af587450ba1eca15cbd56abc775c41f3c36670", "filename": "libgo/go/syscall/route_bsd.go", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsyscall%2Froute_bsd.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Fsyscall%2Froute_bsd.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Froute_bsd.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -199,14 +199,21 @@ func (m *InterfaceAddrMessage) sockaddr() (sas []Sockaddr) {\n // ParseRoutingMessage parses b as routing messages and returns the\n // slice containing the RoutingMessage interfaces.\n func ParseRoutingMessage(b []byte) (msgs []RoutingMessage, err error) {\n+\tmsgCount := 0\n \tfor len(b) >= anyMessageLen {\n+\t\tmsgCount++\n \t\tany := (*anyMessage)(unsafe.Pointer(&b[0]))\n \t\tif any.Version != RTM_VERSION {\n-\t\t\treturn nil, EINVAL\n+\t\t\tb = b[any.Msglen:]\n+\t\t\tcontinue\n \t\t}\n \t\tmsgs = append(msgs, any.toRoutingMessage(b))\n \t\tb = b[any.Msglen:]\n \t}\n+\t// We failed to parse any of the messages - version mismatch?\n+\tif msgCount > 0 && len(msgs) == 0 {\n+\t\treturn nil, EINVAL\n+\t}\n \treturn msgs, nil\n }\n "}, {"sha": "b0526a03f738b616787e3a4ff4fab555b79c9b1a", "filename": "libgo/go/text/tabwriter/tabwriter_test.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Ftabwriter%2Ftabwriter_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -14,7 +14,7 @@ type buffer struct {\n \ta []byte\n }\n \n-func (b *buffer) init(n int) { b.a = make([]byte, n)[0:0] }\n+func (b *buffer) init(n int) { b.a = make([]byte, 0, n) }\n \n func (b *buffer) clear() { b.a = b.a[0:0] }\n "}, {"sha": "e4e804880a4e88050cd31549c70602e560cc868b", "filename": "libgo/go/text/template/multi_test.go", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftext%2Ftemplate%2Fmulti_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftext%2Ftemplate%2Fmulti_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Ftemplate%2Fmulti_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -259,6 +259,18 @@ func TestAddParseTree(t *testing.T) {\n \t}\n }\n \n+// Issue 7032\n+func TestAddParseTreeToUnparsedTemplate(t *testing.T) {\n+\tmaster := \"{{define \\\"master\\\"}}{{end}}\"\n+\ttmpl := New(\"master\")\n+\ttree, err := parse.Parse(\"master\", master, \"\", \"\", nil)\n+\tif err != nil {\n+\t\tt.Fatalf(\"unexpected parse err: %v\", err)\n+\t}\n+\tmasterTree := tree[\"master\"]\n+\ttmpl.AddParseTree(\"master\", masterTree) // used to panic\n+}\n+\n func TestRedefinition(t *testing.T) {\n \tvar tmpl *Template\n \tvar err error"}, {"sha": "249d0cbfb9038d1c48757a7da8bdf4afecf07bcd", "filename": "libgo/go/text/template/template.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftext%2Ftemplate%2Ftemplate.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftext%2Ftemplate%2Ftemplate.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftext%2Ftemplate%2Ftemplate.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -105,7 +105,7 @@ func (t *Template) copy(c *common) *Template {\n // AddParseTree creates a new template with the name and parse tree\n // and associates it with t.\n func (t *Template) AddParseTree(name string, tree *parse.Tree) (*Template, error) {\n-\tif t.tmpl[name] != nil {\n+\tif t.common != nil && t.tmpl[name] != nil {\n \t\treturn nil, fmt.Errorf(\"template: redefinition of template %q\", name)\n \t}\n \tnt := t.New(name)"}, {"sha": "32f4740ad93cbcaad8e2460fef270eef9046994c", "filename": "libgo/go/time/tick_test.go", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftime%2Ftick_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftime%2Ftick_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Ftick_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -48,6 +48,24 @@ func TestTeardown(t *testing.T) {\n \t}\n }\n \n+// Test the Tick convenience wrapper.\n+func TestTick(t *testing.T) {\n+\t// Test that giving a negative duration returns nil.\n+\tif got := Tick(-1); got != nil {\n+\t\tt.Errorf(\"Tick(-1) = %v; want nil\", got)\n+\t}\n+}\n+\n+// Test that NewTicker panics when given a duration less than zero.\n+func TestNewTickerLtZeroDuration(t *testing.T) {\n+\tdefer func() {\n+\t\tif err := recover(); err == nil {\n+\t\t\tt.Errorf(\"NewTicker(-1) should have panicked\")\n+\t\t}\n+\t}()\n+\tNewTicker(-1)\n+}\n+\n func BenchmarkTicker(b *testing.B) {\n \tticker := NewTicker(1)\n \tb.ResetTimer()"}, {"sha": "77429b836b21f1286ab9c0f0873e934b8084838f", "filename": "libgo/go/time/time_test.go", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftime%2Ftime_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftime%2Ftime_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Ftime_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1463,6 +1463,60 @@ func TestSub(t *testing.T) {\n \t}\n }\n \n+var nsDurationTests = []struct {\n+\td    Duration\n+\twant int64\n+}{\n+\t{Duration(-1000), -1000},\n+\t{Duration(-1), -1},\n+\t{Duration(1), 1},\n+\t{Duration(1000), 1000},\n+}\n+\n+func TestDurationNanoseconds(t *testing.T) {\n+\tfor _, tt := range nsDurationTests {\n+\t\tif got := tt.d.Nanoseconds(); got != tt.want {\n+\t\t\tt.Errorf(\"d.Nanoseconds() = %d; want: %d\", got, tt.want)\n+\t\t}\n+\t}\n+}\n+\n+var minDurationTests = []struct {\n+\td    Duration\n+\twant float64\n+}{\n+\t{Duration(-60000000000), -1},\n+\t{Duration(-1), -1 / 60e9},\n+\t{Duration(1), 1 / 60e9},\n+\t{Duration(60000000000), 1},\n+}\n+\n+func TestDurationMinutes(t *testing.T) {\n+\tfor _, tt := range minDurationTests {\n+\t\tif got := tt.d.Minutes(); got != tt.want {\n+\t\t\tt.Errorf(\"d.Minutes() = %d; want: %d\", got, tt.want)\n+\t\t}\n+\t}\n+}\n+\n+var hourDurationTests = []struct {\n+\td    Duration\n+\twant float64\n+}{\n+\t{Duration(-3600000000000), -1},\n+\t{Duration(-1), -1 / 3600e9},\n+\t{Duration(1), 1 / 3600e9},\n+\t{Duration(3600000000000), 1},\n+}\n+\n+func TestDurationHours(t *testing.T) {\n+\tfor _, tt := range hourDurationTests {\n+\t\tif got := tt.d.Hours(); got != tt.want {\n+\t\t\tt.Errorf(\"d.Hours() = %d; want: %d\", got, tt.want)\n+\t\t}\n+\t}\n+}\n+\n func BenchmarkNow(b *testing.B) {\n \tfor i := 0; i < b.N; i++ {\n \t\tt = Now()"}, {"sha": "7e4d146d89eed68f4bfcdd1984cafde87471f2ed", "filename": "libgo/go/time/zoneinfo_windows.go", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftime%2Fzoneinfo_windows.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Ftime%2Fzoneinfo_windows.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Ftime%2Fzoneinfo_windows.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -54,7 +54,7 @@ func matchZoneKey(zones syscall.Handle, kname string, stdname, dstname string) (\n \tif err != nil {\n \t\treturn false, err\n \t}\n-\tif s != dstname {\n+\tif s != dstname && dstname != stdname {\n \t\treturn false, nil\n \t}\n \treturn true, nil"}, {"sha": "d8101d68100f50ae4df81b786583a945c2a6fa77", "filename": "libgo/go/unicode/tables.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Funicode%2Ftables.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Funicode%2Ftables.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Funicode%2Ftables.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n // Generated by running\n //\tmaketables --tables=all --data=http://www.unicode.org/Public/6.2.0/ucd/UnicodeData.txt --casefolding=http://www.unicode.org/Public/6.2.0/ucd/CaseFolding.txt\n // DO NOT EDIT"}, {"sha": "3dca472bbe2165197fa4fb213adade90ff5bf930", "filename": "libgo/go/unicode/utf16/utf16_test.go", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Funicode%2Futf16%2Futf16_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Funicode%2Futf16%2Futf16_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Funicode%2Futf16%2Futf16_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -99,3 +99,51 @@ func TestDecode(t *testing.T) {\n \t\t}\n \t}\n }\n+\n+var decodeRuneTests = []struct {\n+\tr1, r2 rune\n+\twant   rune\n+}{\n+\t{0xd800, 0xdc00, 0x10000},\n+\t{0xd800, 0xdc01, 0x10001},\n+\t{0xd808, 0xdf45, 0x12345},\n+\t{0xdbff, 0xdfff, 0x10ffff},\n+\t{0xd800, 'a', 0xfffd}, // illegal, replacement rune substituted\n+}\n+\n+func TestDecodeRune(t *testing.T) {\n+\tfor i, tt := range decodeRuneTests {\n+\t\tgot := DecodeRune(tt.r1, tt.r2)\n+\t\tif got != tt.want {\n+\t\t\tt.Errorf(\"%d: DecodeRune(%q, %q) = %v; want %v\", i, tt.r1, tt.r2, got, tt.want)\n+\t\t}\n+\t}\n+}\n+\n+var surrogateTests = []struct {\n+\tr    rune\n+\twant bool\n+}{\n+\t// from http://en.wikipedia.org/wiki/UTF-16\n+\t{'\\u007A', false},     // LATIN SMALL LETTER Z\n+\t{'\\u6C34', false},     // CJK UNIFIED IDEOGRAPH-6C34 (water)\n+\t{'\\uFEFF', false},     // Byte Order Mark\n+\t{'\\U00010000', false}, // LINEAR B SYLLABLE B008 A (first non-BMP code point)\n+\t{'\\U0001D11E', false}, // MUSICAL SYMBOL G CLEF\n+\t{'\\U0010FFFD', false}, // PRIVATE USE CHARACTER-10FFFD (last Unicode code point)\n+\n+\t{rune(0xd7ff), false}, // surr1-1\n+\t{rune(0xd800), true},  // surr1\n+\t{rune(0xdc00), true},  // surr2\n+\t{rune(0xe000), false}, // surr3\n+\t{rune(0xdfff), true},  // surr3-1\n+}\n+\n+func TestIsSurrogate(t *testing.T) {\n+\tfor i, tt := range surrogateTests {\n+\t\tgot := IsSurrogate(tt.r)\n+\t\tif got != tt.want {\n+\t\t\tt.Errorf(\"%d: IsSurrogate(%q) = %v; want %v\", i, tt.r, got, tt.want)\n+\t\t}\n+\t}\n+}"}, {"sha": "7b3e7ac742570cab11d311d5dbc958673e43ab6c", "filename": "libgo/go/unicode/utf8/example_test.go", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Funicode%2Futf8%2Fexample_test.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fgo%2Funicode%2Futf8%2Fexample_test.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Funicode%2Futf8%2Fexample_test.go?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -1,3 +1,7 @@\n+// Copyright 2013 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n package utf8_test\n \n import ("}, {"sha": "6bd12e43d9c225da7c2d4d6801bd54e38474ec6d", "filename": "libgo/runtime/chan.c", "status": "modified", "additions": 13, "deletions": 20, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fchan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fchan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fchan.c?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -123,19 +123,16 @@ runtime_makechan_c(ChanType *t, int64 hint)\n \n // For reflect\n //\tfunc makechan(typ *ChanType, size uint64) (chan)\n-uintptr reflect_makechan(ChanType *, uint64)\n+Hchan *reflect_makechan(ChanType *, uint64)\n   __asm__ (GOSYM_PREFIX \"reflect.makechan\");\n \n-uintptr\n+Hchan *\n reflect_makechan(ChanType *t, uint64 size)\n {\n-\tvoid *ret;\n \tHchan *c;\n \n \tc = runtime_makechan_c(t, size);\n-\tret = runtime_mal(sizeof(void*));\n-\t__builtin_memcpy(ret, &c, sizeof(void*));\n-\treturn (uintptr)ret;\n+\treturn c;\n }\n \n // makechan(t *ChanType, hint int64) (hchan *chan any);\n@@ -1308,12 +1305,12 @@ runtime_closechan(Hchan *c)\n // For reflect\n //\tfunc chanclose(c chan)\n \n-void reflect_chanclose(uintptr) __asm__ (GOSYM_PREFIX \"reflect.chanclose\");\n+void reflect_chanclose(Hchan *) __asm__ (GOSYM_PREFIX \"reflect.chanclose\");\n \n void\n-reflect_chanclose(uintptr c)\n+reflect_chanclose(Hchan *c)\n {\n-\tclosechan((Hchan*)c, runtime_getcallerpc(&c));\n+\tclosechan(c, runtime_getcallerpc(&c));\n }\n \n static void\n@@ -1377,15 +1374,13 @@ __go_builtin_close(Hchan *c)\n // For reflect\n //\tfunc chanlen(c chan) (len int)\n \n-intgo reflect_chanlen(uintptr) __asm__ (GOSYM_PREFIX \"reflect.chanlen\");\n+intgo reflect_chanlen(Hchan *) __asm__ (GOSYM_PREFIX \"reflect.chanlen\");\n \n intgo\n-reflect_chanlen(uintptr ca)\n+reflect_chanlen(Hchan *c)\n {\n-\tHchan *c;\n \tintgo len;\n \n-\tc = (Hchan*)ca;\n \tif(c == nil)\n \t\tlen = 0;\n \telse\n@@ -1396,21 +1391,19 @@ reflect_chanlen(uintptr ca)\n intgo\n __go_chan_len(Hchan *c)\n {\n-\treturn reflect_chanlen((uintptr)c);\n+\treturn reflect_chanlen(c);\n }\n \n // For reflect\n-//\tfunc chancap(c chan) (cap intgo)\n+//\tfunc chancap(c chan) int\n \n-intgo reflect_chancap(uintptr) __asm__ (GOSYM_PREFIX \"reflect.chancap\");\n+intgo reflect_chancap(Hchan *) __asm__ (GOSYM_PREFIX \"reflect.chancap\");\n \n intgo\n-reflect_chancap(uintptr ca)\n+reflect_chancap(Hchan *c)\n {\n-\tHchan *c;\n \tintgo cap;\n \n-\tc = (Hchan*)ca;\n \tif(c == nil)\n \t\tcap = 0;\n \telse\n@@ -1421,7 +1414,7 @@ reflect_chancap(uintptr ca)\n intgo\n __go_chan_cap(Hchan *c)\n {\n-\treturn reflect_chancap((uintptr)c);\n+\treturn reflect_chancap(c);\n }\n \n static SudoG*"}, {"sha": "a07029c4c4f00070cfa24a7295db2efefa4ffe1d", "filename": "libgo/runtime/cpuprof.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fcpuprof.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fcpuprof.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fcpuprof.c?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -177,7 +177,7 @@ runtime_SetCPUProfileRate(intgo hz)\n \t\truntime_noteclear(&prof->wait);\n \n \t\truntime_setcpuprofilerate(tick, hz);\n-\t} else if(prof->on) {\n+\t} else if(prof != nil && prof->on) {\n \t\truntime_setcpuprofilerate(nil, 0);\n \t\tprof->on = false;\n "}, {"sha": "ab116e85950533f473b42bed3b89144abf973641", "filename": "libgo/runtime/go-reflect-map.c", "status": "modified", "additions": 42, "deletions": 136, "changes": 178, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fgo-reflect-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fgo-reflect-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-reflect-map.c?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -16,112 +16,55 @@\n /* This file implements support for reflection on maps.  These\n    functions are called from reflect/value.go.  */\n \n-struct mapaccess_ret\n-{\n-  uintptr_t val;\n-  _Bool pres;\n-};\n-\n-extern struct mapaccess_ret mapaccess (struct __go_map_type *, uintptr_t,\n-\t\t\t\t       uintptr_t)\n+extern void *mapaccess (struct __go_map_type *, void *, void *)\n   __asm__ (GOSYM_PREFIX \"reflect.mapaccess\");\n \n-struct mapaccess_ret\n-mapaccess (struct __go_map_type *mt, uintptr_t m, uintptr_t key_i)\n+void *\n+mapaccess (struct __go_map_type *mt, void *m, void *key)\n {\n   struct __go_map *map = (struct __go_map *) m;\n-  void *key;\n-  const struct __go_type_descriptor *key_descriptor;\n-  void *p;\n-  const struct __go_type_descriptor *val_descriptor;\n-  struct mapaccess_ret ret;\n-  void *val;\n-  void *pv;\n \n   __go_assert (mt->__common.__code == GO_MAP);\n-\n-  key_descriptor = mt->__key_type;\n-  if (__go_is_pointer_type (key_descriptor))\n-    key = &key_i;\n-  else\n-    key = (void *) key_i;\n-\n   if (map == NULL)\n-    p = NULL;\n+    return NULL;\n   else\n-    p = __go_map_index (map, key, 0);\n-\n-  val_descriptor = mt->__val_type;\n-  if (__go_is_pointer_type (val_descriptor))\n-    {\n-      val = NULL;\n-      pv = &val;\n-    }\n-  else\n-    {\n-      val = __go_alloc (val_descriptor->__size);\n-      pv = val;\n-    }\n-\n-  if (p == NULL)\n-    ret.pres = 0;\n-  else\n-    {\n-      __builtin_memcpy (pv, p, val_descriptor->__size);\n-      ret.pres = 1;\n-    }\n-\n-  ret.val = (uintptr_t) val;\n-  return ret;\n+    return __go_map_index (map, key, 0);\n }\n \n-extern void mapassign (struct __go_map_type *, uintptr_t, uintptr_t,\n-\t\t       uintptr_t, _Bool)\n+extern void mapassign (struct __go_map_type *, void *, void *, void *)\n   __asm__ (GOSYM_PREFIX \"reflect.mapassign\");\n \n void\n-mapassign (struct __go_map_type *mt, uintptr_t m, uintptr_t key_i,\n-\t   uintptr_t val_i, _Bool pres)\n+mapassign (struct __go_map_type *mt, void *m, void *key, void *val)\n {\n   struct __go_map *map = (struct __go_map *) m;\n-  const struct __go_type_descriptor *key_descriptor;\n-  void *key;\n+  void *p;\n \n   __go_assert (mt->__common.__code == GO_MAP);\n-\n   if (map == NULL)\n     runtime_panicstring (\"assignment to entry in nil map\");\n+  p = __go_map_index (map, key, 1);\n+  __builtin_memcpy (p, val, mt->__val_type->__size);\n+}\n \n-  key_descriptor = mt->__key_type;\n-  if (__go_is_pointer_type (key_descriptor))\n-    key = &key_i;\n-  else\n-    key = (void *) key_i;\n+extern void mapdelete (struct __go_map_type *, void *, void *)\n+  __asm__ (GOSYM_PREFIX \"reflect.mapdelete\");\n \n-  if (!pres)\n-    __go_map_delete (map, key);\n-  else\n-    {\n-      void *p;\n-      const struct __go_type_descriptor *val_descriptor;\n-      void *pv;\n-\n-      p = __go_map_index (map, key, 1);\n-\n-      val_descriptor = mt->__val_type;\n-      if (__go_is_pointer_type (val_descriptor))\n-\tpv = &val_i;\n-      else\n-\tpv = (void *) val_i;\n-      __builtin_memcpy (p, pv, val_descriptor->__size);\n-    }\n+void\n+mapdelete (struct __go_map_type *mt, void *m, void *key)\n+{\n+  struct __go_map *map = (struct __go_map *) m;\n+\n+  __go_assert (mt->__common.__code == GO_MAP);\n+  if (map == NULL)\n+    return;\n+  __go_map_delete (map, key);\n }\n \n-extern int32_t maplen (uintptr_t)\n-  __asm__ (GOSYM_PREFIX \"reflect.maplen\");\n+extern int32_t maplen (void *) __asm__ (GOSYM_PREFIX \"reflect.maplen\");\n \n int32_t\n-maplen (uintptr_t m)\n+maplen (void *m)\n {\n   struct __go_map *map = (struct __go_map *) m;\n \n@@ -130,11 +73,11 @@ maplen (uintptr_t m)\n   return (int32_t) map->__element_count;\n }\n \n-extern unsigned char *mapiterinit (struct __go_map_type *, uintptr_t)\n+extern unsigned char *mapiterinit (struct __go_map_type *, void *)\n   __asm__ (GOSYM_PREFIX \"reflect.mapiterinit\");\n \n unsigned char *\n-mapiterinit (struct __go_map_type *mt, uintptr_t m)\n+mapiterinit (struct __go_map_type *mt, void *m)\n {\n   struct __go_hash_iter *it;\n \n@@ -144,78 +87,45 @@ mapiterinit (struct __go_map_type *mt, uintptr_t m)\n   return (unsigned char *) it;\n }\n \n-extern void mapiternext (unsigned char *)\n-  __asm__ (GOSYM_PREFIX \"reflect.mapiternext\");\n+extern void mapiternext (void *) __asm__ (GOSYM_PREFIX \"reflect.mapiternext\");\n \n void\n-mapiternext (unsigned char *it)\n+mapiternext (void *it)\n {\n   __go_mapiternext ((struct __go_hash_iter *) it);\n }\n \n-struct mapiterkey_ret\n-{\n-  uintptr_t key;\n-  _Bool ok;\n-};\n-\n-extern struct mapiterkey_ret mapiterkey (unsigned char *)\n-  __asm__ (GOSYM_PREFIX \"reflect.mapiterkey\");\n+extern void *mapiterkey (void *) __asm__ (GOSYM_PREFIX \"reflect.mapiterkey\");\n \n-struct mapiterkey_ret\n-mapiterkey (unsigned char *ita)\n+void *\n+mapiterkey (void *ita)\n {\n   struct __go_hash_iter *it = (struct __go_hash_iter *) ita;\n-  struct mapiterkey_ret ret;\n+  const struct __go_type_descriptor *key_descriptor;\n+  void *key;\n \n   if (it->entry == NULL)\n-    {\n-      ret.key = 0;\n-      ret.ok = 0;\n-    }\n-  else\n-    {\n-      const struct __go_type_descriptor *key_descriptor;\n-      void *key;\n-      void *pk;\n-\n-      key_descriptor = it->map->__descriptor->__map_descriptor->__key_type;\n-      if (__go_is_pointer_type (key_descriptor))\n-\t{\n-\t  key = NULL;\n-\t  pk = &key;\n-\t}\n-      else\n-\t{\n-\t  key = __go_alloc (key_descriptor->__size);\n-\t  pk = key;\n-\t}\n-\n-      __go_mapiter1 (it, pk);\n-\n-      ret.key = (uintptr_t) key;\n-      ret.ok = 1;\n-    }\n-\n-  return ret;\n+    return NULL;\n+\n+  key_descriptor = it->map->__descriptor->__map_descriptor->__key_type;\n+  key = __go_alloc (key_descriptor->__size);\n+  __go_mapiter1 (it, key);\n+  return key;\n }\n \n /* Make a new map.  We have to build our own map descriptor.  */\n \n-extern uintptr_t makemap (const struct __go_map_type *)\n+extern struct __go_map *makemap (const struct __go_map_type *)\n   __asm__ (GOSYM_PREFIX \"reflect.makemap\");\n \n-uintptr_t\n+struct __go_map *\n makemap (const struct __go_map_type *t)\n {\n   struct __go_map_descriptor *md;\n   unsigned int o;\n   const struct __go_type_descriptor *kt;\n   const struct __go_type_descriptor *vt;\n-  struct __go_map* map;\n-  void *ret;\n \n-  /* FIXME: Reference count.  */\n   md = (struct __go_map_descriptor *) __go_alloc (sizeof (*md));\n   md->__map_descriptor = t;\n   o = sizeof (void *);\n@@ -232,11 +142,7 @@ makemap (const struct __go_map_type *t)\n   o = (o + vt->__field_align - 1) & ~ (vt->__field_align - 1);\n   md->__entry_size = o;\n \n-  map = __go_new_map (md, 0);\n-\n-  ret = __go_alloc (sizeof (void *));\n-  __builtin_memcpy (ret, &map, sizeof (void *));\n-  return (uintptr_t) ret;\n+  return __go_new_map (md, 0);\n }\n \n extern _Bool ismapkey (const struct __go_type_descriptor *)"}, {"sha": "fa355ce3d2fbeb9303697084ff34ee66a6e774cd", "filename": "libgo/runtime/go-type.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fgo-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fgo-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-type.h?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -103,6 +103,11 @@ struct __go_type_descriptor\n   /* The descriptor for the type which is a pointer to this type.\n      This may be NULL.  */\n   const struct __go_type_descriptor *__pointer_to_this;\n+\n+  /* A pointer to a zero value for this type.  All types will point to\n+     the same zero value, go$zerovalue, which is a common variable so\n+     that it will be large enough.  */\n+  void *__zero;\n };\n \n /* The information we store for each method of a type.  */"}, {"sha": "b71804ac741d9feed2ad6fd50394d60fc08efc1c", "filename": "libgo/runtime/go-unsafe-pointer.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fgo-unsafe-pointer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fgo-unsafe-pointer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-unsafe-pointer.c?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -9,6 +9,9 @@\n #include \"runtime.h\"\n #include \"go-type.h\"\n \n+/* A pointer with a zero value.  */\n+static void *zero_pointer;\n+\n /* This file provides the type descriptor for the unsafe.Pointer type.\n    The unsafe package is defined by the compiler itself, which means\n    that there is no package to compile to define the type\n@@ -53,7 +56,9 @@ const struct __go_type_descriptor unsafe_Pointer =\n   /* __uncommon */\n   NULL,\n   /* __pointer_to_this */\n-  NULL\n+  NULL,\n+  /* __zero */\n+  &zero_pointer\n };\n \n /* We also need the type descriptor for the pointer to unsafe.Pointer,\n@@ -94,7 +99,9 @@ const struct __go_ptr_type pointer_unsafe_Pointer =\n     /* __uncommon */\n     NULL,\n     /* __pointer_to_this */\n-    NULL\n+    NULL,\n+    /* __zero */\n+    &zero_pointer\n   },\n   /* __element_type */\n   &unsafe_Pointer"}, {"sha": "33d0c39b36732545575f22d742f41577baa8f1f0", "filename": "libgo/runtime/malloc.goc", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fmalloc.goc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fmalloc.goc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmalloc.goc?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -118,7 +118,7 @@ runtime_mallocgc(uintptr size, uintptr typ, uint32 flag)\n \t\tsize += sizeof(uintptr);\n \n \tc = m->mcache;\n-\tif(size <= MaxSmallSize) {\n+\tif(!runtime_debug.efence && size <= MaxSmallSize) {\n \t\t// Allocate from mcache free lists.\n \t\t// Inlined version of SizeToClass().\n \t\tif(size <= 1024-8)\n@@ -157,8 +157,10 @@ runtime_mallocgc(uintptr size, uintptr typ, uint32 flag)\n \t\truntime_markspan(v, 0, 0, true);\n \t}\n \n-\tif(!(flag & FlagNoGC))\n-\t\truntime_markallocated(v, size, (flag&FlagNoScan) != 0);\n+\tif(flag & FlagNoGC)\n+\t\truntime_marknogc(v);\n+\telse if(!(flag & FlagNoScan))\n+\t\truntime_markscan(v);\n \n \tif(DebugTypeAtBlockEnd)\n \t\t*(uintptr*)((uintptr)v+size-sizeof(uintptr)) = typ;\n@@ -180,6 +182,9 @@ runtime_mallocgc(uintptr size, uintptr typ, uint32 flag)\n \t\truntime_settype_flush(m);\n \tm->locks--;\n \n+\tif(runtime_debug.allocfreetrace)\n+\t\tgoto profile;\n+\n \tif(!(flag & FlagNoProfiling) && (rate = runtime_MemProfileRate) > 0) {\n \t\tif(size >= (uint32) rate)\n \t\t\tgoto profile;\n@@ -193,7 +198,7 @@ runtime_mallocgc(uintptr size, uintptr typ, uint32 flag)\n \t\t\tm->mcache->next_sample = runtime_fastrand1() % (2*rate);\n \t\tprofile:\n \t\t\truntime_setblockspecial(v, true);\n-\t\t\truntime_MProf_Malloc(v, size);\n+\t\t\truntime_MProf_Malloc(v, size, typ);\n \t\t}\n \t}\n \n@@ -257,7 +262,10 @@ __go_free(void *v)\n \t\t// they might coalesce v into other spans and change the bitmap further.\n \t\truntime_markfreed(v, size);\n \t\truntime_unmarkspan(v, 1<<PageShift);\n-\t\truntime_MHeap_Free(&runtime_mheap, s, 1);\n+\t\tif(runtime_debug.efence)\n+\t\t\truntime_SysFree((void*)(s->start<<PageShift), size, &mstats.heap_sys);\n+\t\telse\n+\t\t\truntime_MHeap_Free(&runtime_mheap, s, 1);\n \t\tc->local_nlargefree++;\n \t\tc->local_largefree += size;\n \t} else {\n@@ -819,6 +827,10 @@ func SetFinalizer(obj Eface, finalizer Eface) {\n \t\truntime_printf(\"runtime.SetFinalizer: first argument is %S, not pointer\\n\", *obj.__type_descriptor->__reflection);\n \t\tgoto throw;\n \t}\n+\tot = (const PtrType*)obj.type;\n+\tif(ot->__element_type != nil && ot->__element_type->__size == 0) {\n+\t\treturn;\n+\t}\n \tif(!runtime_mlookup(obj.__object, &base, &size, nil) || obj.__object != base) {\n \t\truntime_printf(\"runtime.SetFinalizer: pointer not at beginning of allocated block\\n\");\n \t\tgoto throw;"}, {"sha": "16f51a51bdc69f8fc34bbf99d2ab53e7a8b9dc84", "filename": "libgo/runtime/malloc.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fmalloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fmalloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmalloc.h?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -449,7 +449,8 @@ void*\truntime_mallocgc(uintptr size, uintptr typ, uint32 flag);\n void*\truntime_persistentalloc(uintptr size, uintptr align, uint64 *stat);\n int32\truntime_mlookup(void *v, byte **base, uintptr *size, MSpan **s);\n void\truntime_gc(int32 force);\n-void\truntime_markallocated(void *v, uintptr n, bool noptr);\n+void\truntime_markscan(void *v);\n+void\truntime_marknogc(void *v);\n void\truntime_checkallocated(void *v, uintptr n);\n void\truntime_markfreed(void *v, uintptr n);\n void\truntime_checkfreed(void *v, uintptr n);\n@@ -484,7 +485,7 @@ struct Obj\n \tuintptr\tti;\t// type info\n };\n \n-void\truntime_MProf_Malloc(void*, uintptr);\n+void\truntime_MProf_Malloc(void*, uintptr, uintptr);\n void\truntime_MProf_Free(void*, uintptr);\n void\truntime_MProf_GC(void);\n void\truntime_MProf_Mark(void (*addroot)(Obj));"}, {"sha": "d665d92664288f40a1b0dc331229b274c68abdfa", "filename": "libgo/runtime/mgc0.c", "status": "modified", "additions": 331, "deletions": 202, "changes": 533, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fmgc0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fmgc0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmgc0.c?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -45,7 +45,7 @@ enum {\n \tDebug = 0,\n \tDebugMark = 0,  // run second pass to check mark\n \tCollectStats = 0,\n-\tScanStackByFrames = 0,\n+\tScanStackByFrames = 1,\n \tIgnorePreciseGC = 0,\n \n \t// Four bits per word (see #defines below).\n@@ -68,6 +68,39 @@ enum {\n \tBitsEface = 3,\n };\n \n+static struct\n+{\n+\tLock;  \n+\tvoid* head;\n+} pools;\n+\n+void sync_runtime_registerPool(void **)\n+  __asm__ (GOSYM_PREFIX \"sync.runtime_registerPool\");\n+\n+void\n+sync_runtime_registerPool(void **p)\n+{\n+\truntime_lock(&pools);\n+\tp[0] = pools.head;\n+\tpools.head = p;\n+\truntime_unlock(&pools);\n+}\n+\n+static void\n+clearpools(void)\n+{\n+\tvoid **p, **next;\n+\n+\tfor(p = pools.head; p != nil; p = next) {\n+\t\tnext = p[0];\n+\t\tp[0] = nil; // next\n+\t\tp[1] = nil; // slice\n+\t\tp[2] = nil;\n+\t\tp[3] = nil;\n+\t}\n+\tpools.head = nil;\n+}\n+\n // Bits in per-word bitmap.\n // #defines because enum might not be able to hold the values.\n //\n@@ -77,7 +110,7 @@ enum {\n // The bits in the word are packed together by type first, then by\n // heap location, so each 64-bit bitmap word consists of, from top to bottom,\n // the 16 bitSpecial bits for the corresponding heap words, then the 16 bitMarked bits,\n-// then the 16 bitNoScan/bitBlockBoundary bits, then the 16 bitAllocated bits.\n+// then the 16 bitScan/bitBlockBoundary bits, then the 16 bitAllocated bits.\n // This layout makes it easier to iterate over the bits of a given type.\n //\n // The bitmap starts at mheap.arena_start and extends *backward* from\n@@ -93,13 +126,13 @@ enum {\n //\tbits = *b >> shift;\n //\t/* then test bits & bitAllocated, bits & bitMarked, etc. */\n //\n-#define bitAllocated\t\t((uintptr)1<<(bitShift*0))\n-#define bitNoScan\t\t((uintptr)1<<(bitShift*1))\t/* when bitAllocated is set */\n+#define bitAllocated\t\t((uintptr)1<<(bitShift*0))\t/* block start; eligible for garbage collection */\n+#define bitScan\t\t\t((uintptr)1<<(bitShift*1))\t/* when bitAllocated is set */\n #define bitMarked\t\t((uintptr)1<<(bitShift*2))\t/* when bitAllocated is set */\n #define bitSpecial\t\t((uintptr)1<<(bitShift*3))\t/* when bitAllocated is set - has finalizer or being profiled */\n-#define bitBlockBoundary\t((uintptr)1<<(bitShift*1))\t/* when bitAllocated is NOT set */\n+#define bitBlockBoundary\t((uintptr)1<<(bitShift*1))\t/* when bitAllocated is NOT set - mark for FlagNoGC objects */\n \n-#define bitMask (bitBlockBoundary | bitAllocated | bitMarked | bitSpecial)\n+#define bitMask (bitAllocated | bitScan | bitMarked | bitSpecial)\n \n // Holding worldsema grants an M the right to try to stop the world.\n // The procedure is:\n@@ -185,6 +218,7 @@ static struct {\n enum {\n \tGC_DEFAULT_PTR = GC_NUM_INSTR,\n \tGC_CHAN,\n+\tGC_G_PTR,\n \n \tGC_NUM_INSTR2\n };\n@@ -325,6 +359,24 @@ struct PtrTarget\n \tuintptr ti;\n };\n \n+typedef\tstruct Scanbuf Scanbuf;\n+struct\tScanbuf\n+{\n+\tstruct {\n+\t\tPtrTarget *begin;\n+\t\tPtrTarget *end;\n+\t\tPtrTarget *pos;\n+\t} ptr;\n+\tstruct {\n+\t\tObj *begin;\n+\t\tObj *end;\n+\t\tObj *pos;\n+\t} obj;\n+\tWorkbuf *wbuf;\n+\tObj *wp;\n+\tuintptr nobj;\n+};\n+\n typedef struct BufferList BufferList;\n struct BufferList\n {\n@@ -357,25 +409,27 @@ static void enqueue(Obj obj, Workbuf **_wbuf, Obj **_wp, uintptr *_nobj);\n //     flushptrbuf\n //  (find block start, mark and enqueue)\n static void\n-flushptrbuf(PtrTarget *ptrbuf, PtrTarget **ptrbufpos, Obj **_wp, Workbuf **_wbuf, uintptr *_nobj)\n+flushptrbuf(Scanbuf *sbuf)\n {\n \tbyte *p, *arena_start, *obj;\n \tuintptr size, *bitp, bits, shift, j, x, xbits, off, nobj, ti, n;\n \tMSpan *s;\n \tPageID k;\n \tObj *wp;\n \tWorkbuf *wbuf;\n+\tPtrTarget *ptrbuf;\n \tPtrTarget *ptrbuf_end;\n \n \tarena_start = runtime_mheap.arena_start;\n \n-\twp = *_wp;\n-\twbuf = *_wbuf;\n-\tnobj = *_nobj;\n+\twp = sbuf->wp;\n+\twbuf = sbuf->wbuf;\n+\tnobj = sbuf->nobj;\n \n-\tptrbuf_end = *ptrbufpos;\n-\tn = ptrbuf_end - ptrbuf;\n-\t*ptrbufpos = ptrbuf;\n+\tptrbuf = sbuf->ptr.begin;\n+\tptrbuf_end = sbuf->ptr.pos;\n+\tn = ptrbuf_end - sbuf->ptr.begin;\n+\tsbuf->ptr.pos = sbuf->ptr.begin;\n \n \tif(CollectStats) {\n \t\truntime_xadd64(&gcstats.ptr.sum, n);\n@@ -394,150 +448,146 @@ flushptrbuf(PtrTarget *ptrbuf, PtrTarget **ptrbufpos, Obj **_wp, Workbuf **_wbuf\n \t\t\truntime_throw(\"ptrbuf has to be smaller than WorkBuf\");\n \t}\n \n-\t// TODO(atom): This block is a branch of an if-then-else statement.\n-\t//             The single-threaded branch may be added in a next CL.\n-\t{\n-\t\t// Multi-threaded version.\n+\twhile(ptrbuf < ptrbuf_end) {\n+\t\tobj = ptrbuf->p;\n+\t\tti = ptrbuf->ti;\n+\t\tptrbuf++;\n \n-\t\twhile(ptrbuf < ptrbuf_end) {\n-\t\t\tobj = ptrbuf->p;\n-\t\t\tti = ptrbuf->ti;\n-\t\t\tptrbuf++;\n+\t\t// obj belongs to interval [mheap.arena_start, mheap.arena_used).\n+\t\tif(Debug > 1) {\n+\t\t\tif(obj < runtime_mheap.arena_start || obj >= runtime_mheap.arena_used)\n+\t\t\t\truntime_throw(\"object is outside of mheap\");\n+\t\t}\n \n-\t\t\t// obj belongs to interval [mheap.arena_start, mheap.arena_used).\n-\t\t\tif(Debug > 1) {\n-\t\t\t\tif(obj < runtime_mheap.arena_start || obj >= runtime_mheap.arena_used)\n-\t\t\t\t\truntime_throw(\"object is outside of mheap\");\n-\t\t\t}\n+\t\t// obj may be a pointer to a live object.\n+\t\t// Try to find the beginning of the object.\n+\n+\t\t// Round down to word boundary.\n+\t\tif(((uintptr)obj & ((uintptr)PtrSize-1)) != 0) {\n+\t\t\tobj = (void*)((uintptr)obj & ~((uintptr)PtrSize-1));\n+\t\t\tti = 0;\n+\t\t}\n \n-\t\t\t// obj may be a pointer to a live object.\n-\t\t\t// Try to find the beginning of the object.\n+\t\t// Find bits for this word.\n+\t\toff = (uintptr*)obj - (uintptr*)arena_start;\n+\t\tbitp = (uintptr*)arena_start - off/wordsPerBitmapWord - 1;\n+\t\tshift = off % wordsPerBitmapWord;\n+\t\txbits = *bitp;\n+\t\tbits = xbits >> shift;\n \n-\t\t\t// Round down to word boundary.\n-\t\t\tif(((uintptr)obj & ((uintptr)PtrSize-1)) != 0) {\n-\t\t\t\tobj = (void*)((uintptr)obj & ~((uintptr)PtrSize-1));\n-\t\t\t\tti = 0;\n-\t\t\t}\n+\t\t// Pointing at the beginning of a block?\n+\t\tif((bits & (bitAllocated|bitBlockBoundary)) != 0) {\n+\t\t\tif(CollectStats)\n+\t\t\t\truntime_xadd64(&gcstats.flushptrbuf.foundbit, 1);\n+\t\t\tgoto found;\n+\t\t}\n \n-\t\t\t// Find bits for this word.\n-\t\t\toff = (uintptr*)obj - (uintptr*)arena_start;\n-\t\t\tbitp = (uintptr*)arena_start - off/wordsPerBitmapWord - 1;\n-\t\t\tshift = off % wordsPerBitmapWord;\n-\t\t\txbits = *bitp;\n-\t\t\tbits = xbits >> shift;\n+\t\tti = 0;\n \n-\t\t\t// Pointing at the beginning of a block?\n-\t\t\tif((bits & (bitAllocated|bitBlockBoundary)) != 0) {\n+\t\t// Pointing just past the beginning?\n+\t\t// Scan backward a little to find a block boundary.\n+\t\tfor(j=shift; j-->0; ) {\n+\t\t\tif(((xbits>>j) & (bitAllocated|bitBlockBoundary)) != 0) {\n+\t\t\t\tobj = (byte*)obj - (shift-j)*PtrSize;\n+\t\t\t\tshift = j;\n+\t\t\t\tbits = xbits>>shift;\n \t\t\t\tif(CollectStats)\n-\t\t\t\t\truntime_xadd64(&gcstats.flushptrbuf.foundbit, 1);\n+\t\t\t\t\truntime_xadd64(&gcstats.flushptrbuf.foundword, 1);\n \t\t\t\tgoto found;\n \t\t\t}\n+\t\t}\n \n-\t\t\tti = 0;\n-\n-\t\t\t// Pointing just past the beginning?\n-\t\t\t// Scan backward a little to find a block boundary.\n-\t\t\tfor(j=shift; j-->0; ) {\n-\t\t\t\tif(((xbits>>j) & (bitAllocated|bitBlockBoundary)) != 0) {\n-\t\t\t\t\tobj = (byte*)obj - (shift-j)*PtrSize;\n-\t\t\t\t\tshift = j;\n-\t\t\t\t\tbits = xbits>>shift;\n-\t\t\t\t\tif(CollectStats)\n-\t\t\t\t\t\truntime_xadd64(&gcstats.flushptrbuf.foundword, 1);\n-\t\t\t\t\tgoto found;\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\t// Otherwise consult span table to find beginning.\n-\t\t\t// (Manually inlined copy of MHeap_LookupMaybe.)\n-\t\t\tk = (uintptr)obj>>PageShift;\n-\t\t\tx = k;\n-\t\t\tx -= (uintptr)arena_start>>PageShift;\n-\t\t\ts = runtime_mheap.spans[x];\n-\t\t\tif(s == nil || k < s->start || obj >= s->limit || s->state != MSpanInUse)\n-\t\t\t\tcontinue;\n-\t\t\tp = (byte*)((uintptr)s->start<<PageShift);\n-\t\t\tif(s->sizeclass == 0) {\n-\t\t\t\tobj = p;\n-\t\t\t} else {\n-\t\t\t\tsize = s->elemsize;\n-\t\t\t\tint32 i = ((byte*)obj - p)/size;\n-\t\t\t\tobj = p+i*size;\n-\t\t\t}\n+\t\t// Otherwise consult span table to find beginning.\n+\t\t// (Manually inlined copy of MHeap_LookupMaybe.)\n+\t\tk = (uintptr)obj>>PageShift;\n+\t\tx = k;\n+\t\tx -= (uintptr)arena_start>>PageShift;\n+\t\ts = runtime_mheap.spans[x];\n+\t\tif(s == nil || k < s->start || obj >= s->limit || s->state != MSpanInUse)\n+\t\t\tcontinue;\n+\t\tp = (byte*)((uintptr)s->start<<PageShift);\n+\t\tif(s->sizeclass == 0) {\n+\t\t\tobj = p;\n+\t\t} else {\n+\t\t\tsize = s->elemsize;\n+\t\t\tint32 i = ((byte*)obj - p)/size;\n+\t\t\tobj = p+i*size;\n+\t\t}\n \n-\t\t\t// Now that we know the object header, reload bits.\n-\t\t\toff = (uintptr*)obj - (uintptr*)arena_start;\n-\t\t\tbitp = (uintptr*)arena_start - off/wordsPerBitmapWord - 1;\n-\t\t\tshift = off % wordsPerBitmapWord;\n-\t\t\txbits = *bitp;\n-\t\t\tbits = xbits >> shift;\n-\t\t\tif(CollectStats)\n-\t\t\t\truntime_xadd64(&gcstats.flushptrbuf.foundspan, 1);\n+\t\t// Now that we know the object header, reload bits.\n+\t\toff = (uintptr*)obj - (uintptr*)arena_start;\n+\t\tbitp = (uintptr*)arena_start - off/wordsPerBitmapWord - 1;\n+\t\tshift = off % wordsPerBitmapWord;\n+\t\txbits = *bitp;\n+\t\tbits = xbits >> shift;\n+\t\tif(CollectStats)\n+\t\t\truntime_xadd64(&gcstats.flushptrbuf.foundspan, 1);\n \n-\t\tfound:\n-\t\t\t// Now we have bits, bitp, and shift correct for\n-\t\t\t// obj pointing at the base of the object.\n-\t\t\t// Only care about allocated and not marked.\n-\t\t\tif((bits & (bitAllocated|bitMarked)) != bitAllocated)\n-\t\t\t\tcontinue;\n-\t\t\tif(work.nproc == 1)\n-\t\t\t\t*bitp |= bitMarked<<shift;\n-\t\t\telse {\n-\t\t\t\tfor(;;) {\n-\t\t\t\t\tx = *bitp;\n-\t\t\t\t\tif(x & (bitMarked<<shift))\n-\t\t\t\t\t\tgoto continue_obj;\n-\t\t\t\t\tif(runtime_casp((void**)bitp, (void*)x, (void*)(x|(bitMarked<<shift))))\n-\t\t\t\t\t\tbreak;\n-\t\t\t\t}\n+\tfound:\n+\t\t// Now we have bits, bitp, and shift correct for\n+\t\t// obj pointing at the base of the object.\n+\t\t// Only care about allocated and not marked.\n+\t\tif((bits & (bitAllocated|bitMarked)) != bitAllocated)\n+\t\t\tcontinue;\n+\t\tif(work.nproc == 1)\n+\t\t\t*bitp |= bitMarked<<shift;\n+\t\telse {\n+\t\t\tfor(;;) {\n+\t\t\t\tx = *bitp;\n+\t\t\t\tif(x & (bitMarked<<shift))\n+\t\t\t\t\tgoto continue_obj;\n+\t\t\t\tif(runtime_casp((void**)bitp, (void*)x, (void*)(x|(bitMarked<<shift))))\n+\t\t\t\t\tbreak;\n \t\t\t}\n+\t\t}\n \n-\t\t\t// If object has no pointers, don't need to scan further.\n-\t\t\tif((bits & bitNoScan) != 0)\n-\t\t\t\tcontinue;\n+\t\t// If object has no pointers, don't need to scan further.\n+\t\tif((bits & bitScan) == 0)\n+\t\t\tcontinue;\n \n-\t\t\t// Ask span about size class.\n-\t\t\t// (Manually inlined copy of MHeap_Lookup.)\n-\t\t\tx = (uintptr)obj >> PageShift;\n-\t\t\tx -= (uintptr)arena_start>>PageShift;\n-\t\t\ts = runtime_mheap.spans[x];\n+\t\t// Ask span about size class.\n+\t\t// (Manually inlined copy of MHeap_Lookup.)\n+\t\tx = (uintptr)obj >> PageShift;\n+\t\tx -= (uintptr)arena_start>>PageShift;\n+\t\ts = runtime_mheap.spans[x];\n \n-\t\t\tPREFETCH(obj);\n+\t\tPREFETCH(obj);\n \n-\t\t\t*wp = (Obj){obj, s->elemsize, ti};\n-\t\t\twp++;\n-\t\t\tnobj++;\n-\t\tcontinue_obj:;\n-\t\t}\n+\t\t*wp = (Obj){obj, s->elemsize, ti};\n+\t\twp++;\n+\t\tnobj++;\n+\tcontinue_obj:;\n+\t}\n \n-\t\t// If another proc wants a pointer, give it some.\n-\t\tif(work.nwait > 0 && nobj > handoffThreshold && work.full == 0) {\n-\t\t\twbuf->nobj = nobj;\n-\t\t\twbuf = handoff(wbuf);\n-\t\t\tnobj = wbuf->nobj;\n-\t\t\twp = wbuf->obj + nobj;\n-\t\t}\n+\t// If another proc wants a pointer, give it some.\n+\tif(work.nwait > 0 && nobj > handoffThreshold && work.full == 0) {\n+\t\twbuf->nobj = nobj;\n+\t\twbuf = handoff(wbuf);\n+\t\tnobj = wbuf->nobj;\n+\t\twp = wbuf->obj + nobj;\n \t}\n \n-\t*_wp = wp;\n-\t*_wbuf = wbuf;\n-\t*_nobj = nobj;\n+\tsbuf->wp = wp;\n+\tsbuf->wbuf = wbuf;\n+\tsbuf->nobj = nobj;\n }\n \n static void\n-flushobjbuf(Obj *objbuf, Obj **objbufpos, Obj **_wp, Workbuf **_wbuf, uintptr *_nobj)\n+flushobjbuf(Scanbuf *sbuf)\n {\n \tuintptr nobj, off;\n \tObj *wp, obj;\n \tWorkbuf *wbuf;\n+\tObj *objbuf;\n \tObj *objbuf_end;\n \n-\twp = *_wp;\n-\twbuf = *_wbuf;\n-\tnobj = *_nobj;\n+\twp = sbuf->wp;\n+\twbuf = sbuf->wbuf;\n+\tnobj = sbuf->nobj;\n \n-\tobjbuf_end = *objbufpos;\n-\t*objbufpos = objbuf;\n+\tobjbuf = sbuf->obj.begin;\n+\tobjbuf_end = sbuf->obj.pos;\n+\tsbuf->obj.pos = sbuf->obj.begin;\n \n \twhile(objbuf < objbuf_end) {\n \t\tobj = *objbuf++;\n@@ -575,9 +625,9 @@ flushobjbuf(Obj *objbuf, Obj **objbufpos, Obj **_wp, Workbuf **_wbuf, uintptr *_\n \t\twp = wbuf->obj + nobj;\n \t}\n \n-\t*_wp = wp;\n-\t*_wbuf = wbuf;\n-\t*_nobj = nobj;\n+\tsbuf->wp = wp;\n+\tsbuf->wbuf = wbuf;\n+\tsbuf->nobj = nobj;\n }\n \n // Program that scans the whole block and treats every block element as a potential pointer\n@@ -588,6 +638,11 @@ static uintptr defaultProg[2] = {PtrSize, GC_DEFAULT_PTR};\n static uintptr chanProg[2] = {0, GC_CHAN};\n #endif\n \n+#if 0\n+// G* program\n+static uintptr gptrProg[2] = {0, GC_G_PTR};\n+#endif\n+\n // Local variables of a program fragment or loop\n typedef struct Frame Frame;\n struct Frame {\n@@ -676,8 +731,7 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \tSlice *sliceptr;\n \tFrame *stack_ptr, stack_top, stack[GC_STACK_CAPACITY+4];\n \tBufferList *scanbuffers;\n-\tPtrTarget *ptrbuf, *ptrbuf_end, *ptrbufpos;\n-\tObj *objbuf, *objbuf_end, *objbufpos;\n+\tScanbuf sbuf;\n \tEface *eface;\n \tIface *iface;\n #if 0\n@@ -693,21 +747,22 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \tarena_used = runtime_mheap.arena_used;\n \n \tstack_ptr = stack+nelem(stack)-1;\n-\t\n+\n \tprecise_type = false;\n \tnominal_size = 0;\n \n-\t// Allocate ptrbuf\n-\t{\n-\t\tscanbuffers = &bufferList[runtime_m()->helpgc];\n-\t\tptrbuf = &scanbuffers->ptrtarget[0];\n-\t\tptrbuf_end = &scanbuffers->ptrtarget[0] + nelem(scanbuffers->ptrtarget);\n-\t\tobjbuf = &scanbuffers->obj[0];\n-\t\tobjbuf_end = &scanbuffers->obj[0] + nelem(scanbuffers->obj);\n-\t}\n+\t// Initialize sbuf\n+\tscanbuffers = &bufferList[runtime_m()->helpgc];\n+\n+\tsbuf.ptr.begin = sbuf.ptr.pos = &scanbuffers->ptrtarget[0];\n+\tsbuf.ptr.end = sbuf.ptr.begin + nelem(scanbuffers->ptrtarget);\n+\n+\tsbuf.obj.begin = sbuf.obj.pos = &scanbuffers->obj[0];\n+\tsbuf.obj.end = sbuf.obj.begin + nelem(scanbuffers->obj);\n \n-\tptrbufpos = ptrbuf;\n-\tobjbufpos = objbuf;\n+\tsbuf.wbuf = wbuf;\n+\tsbuf.wp = wp;\n+\tsbuf.nobj = nobj;\n \n \t// (Silence the compiler)\n #if 0\n@@ -727,7 +782,7 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \n \t\tif(CollectStats) {\n \t\t\truntime_xadd64(&gcstats.nbytes, n);\n-\t\t\truntime_xadd64(&gcstats.obj.sum, nobj);\n+\t\t\truntime_xadd64(&gcstats.obj.sum, sbuf.nobj);\n \t\t\truntime_xadd64(&gcstats.obj.cnt, 1);\n \t\t}\n \n@@ -857,9 +912,9 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \t\t\tif((const byte*)t >= arena_start && (const byte*)t < arena_used) {\n \t\t\t\tunion { const Type *tc; Type *tr; } u;\n \t\t\t\tu.tc = t;\n-\t\t\t\t*ptrbufpos++ = (struct PtrTarget){(void*)u.tr, 0};\n-\t\t\t\tif(ptrbufpos == ptrbuf_end)\n-\t\t\t\t\tflushptrbuf(ptrbuf, &ptrbufpos, &wp, &wbuf, &nobj);\n+\t\t\t\t*sbuf.ptr.pos++ = (PtrTarget){u.tr, 0};\n+\t\t\t\tif(sbuf.ptr.pos == sbuf.ptr.end)\n+\t\t\t\t\tflushptrbuf(&sbuf);\n \t\t\t}\n \n \t\t\t// eface->__object\n@@ -888,10 +943,9 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \t\t\t\n \t\t\t// iface->tab\n \t\t\tif((byte*)iface->tab >= arena_start && (byte*)iface->tab < arena_used) {\n-\t\t\t\t// *ptrbufpos++ = (struct PtrTarget){iface->tab, (uintptr)itabtype->gc};\n-\t\t\t\t*ptrbufpos++ = (struct PtrTarget){iface->tab, 0};\n-\t\t\t\tif(ptrbufpos == ptrbuf_end)\n-\t\t\t\t\tflushptrbuf(ptrbuf, &ptrbufpos, &wp, &wbuf, &nobj);\n+\t\t\t\t*sbuf.ptr.pos++ = (PtrTarget){iface->tab, /* (uintptr)itabtype->gc */ 0};\n+\t\t\t\tif(sbuf.ptr.pos == sbuf.ptr.end)\n+\t\t\t\t\tflushptrbuf(&sbuf);\n \t\t\t}\n \n \t\t\t// iface->data\n@@ -919,9 +973,9 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \t\t\t\tobj = *(byte**)stack_top.b;\n \t\t\t\tstack_top.b += PtrSize;\n \t\t\t\tif((byte*)obj >= arena_start && (byte*)obj < arena_used) {\n-\t\t\t\t\t*ptrbufpos++ = (struct PtrTarget){obj, 0};\n-\t\t\t\t\tif(ptrbufpos == ptrbuf_end)\n-\t\t\t\t\t\tflushptrbuf(ptrbuf, &ptrbufpos, &wp, &wbuf, &nobj);\n+\t\t\t\t\t*sbuf.ptr.pos++ = (PtrTarget){obj, 0};\n+\t\t\t\t\tif(sbuf.ptr.pos == sbuf.ptr.end)\n+\t\t\t\t\t\tflushptrbuf(&sbuf);\n \t\t\t\t}\n \t\t\t}\n \t\t\tgoto next_block;\n@@ -950,7 +1004,7 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \t\t\t\t\tif(*(byte**)i != nil) {\n \t\t\t\t\t\t// Found a value that may be a pointer.\n \t\t\t\t\t\t// Do a rescan of the entire block.\n-\t\t\t\t\t\tenqueue((Obj){b, n, 0}, &wbuf, &wp, &nobj);\n+\t\t\t\t\t\tenqueue((Obj){b, n, 0}, &sbuf.wbuf, &sbuf.wp, &sbuf.nobj);\n \t\t\t\t\t\tif(CollectStats) {\n \t\t\t\t\t\t\truntime_xadd64(&gcstats.rescan, 1);\n \t\t\t\t\t\t\truntime_xadd64(&gcstats.rescanbytes, n);\n@@ -996,9 +1050,9 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \t\t\tobjti = pc[3];\n \t\t\tpc += 4;\n \n-\t\t\t*objbufpos++ = (Obj){obj, size, objti};\n-\t\t\tif(objbufpos == objbuf_end)\n-\t\t\t\tflushobjbuf(objbuf, &objbufpos, &wp, &wbuf, &nobj);\n+\t\t\t*sbuf.obj.pos++ = (Obj){obj, size, objti};\n+\t\t\tif(sbuf.obj.pos == sbuf.obj.end)\n+\t\t\t\tflushobjbuf(&sbuf);\n \t\t\tcontinue;\n \n #if 0\n@@ -1032,10 +1086,10 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \t\t\t\t\t// in-use part of the circular buffer is scanned.\n \t\t\t\t\t// (Channel routines zero the unused part, so the current\n \t\t\t\t\t// code does not lead to leaks, it's just a little inefficient.)\n-\t\t\t\t\t*objbufpos++ = (Obj){(byte*)chan+runtime_Hchansize, chancap*chantype->elem->size,\n+\t\t\t\t\t*sbuf.obj.pos++ = (Obj){(byte*)chan+runtime_Hchansize, chancap*chantype->elem->size,\n \t\t\t\t\t\t(uintptr)chantype->elem->gc | PRECISE | LOOP};\n-\t\t\t\t\tif(objbufpos == objbuf_end)\n-\t\t\t\t\t\tflushobjbuf(objbuf, &objbufpos, &wp, &wbuf, &nobj);\n+\t\t\t\t\tif(sbuf.obj.pos == sbuf.obj.end)\n+\t\t\t\t\t\tflushobjbuf(&sbuf);\n \t\t\t\t}\n \t\t\t}\n \t\t\tif(chan_ret == nil)\n@@ -1044,50 +1098,55 @@ scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)\n \t\t\tcontinue;\n #endif\n \n+#if 0\n+\t\tcase GC_G_PTR:\n+\t\t\tobj = (void*)stack_top.b;\n+\t\t\tscanstack(obj, &sbuf);\n+\t\t\tgoto next_block;\n+#endif\n+\n \t\tdefault:\n \t\t\truntime_throw(\"scanblock: invalid GC instruction\");\n \t\t\treturn;\n \t\t}\n \n \t\tif((byte*)obj >= arena_start && (byte*)obj < arena_used) {\n-\t\t\t*ptrbufpos++ = (struct PtrTarget){obj, objti};\n-\t\t\tif(ptrbufpos == ptrbuf_end)\n-\t\t\t\tflushptrbuf(ptrbuf, &ptrbufpos, &wp, &wbuf, &nobj);\n+\t\t\t*sbuf.ptr.pos++ = (PtrTarget){obj, objti};\n+\t\t\tif(sbuf.ptr.pos == sbuf.ptr.end)\n+\t\t\t\tflushptrbuf(&sbuf);\n \t\t}\n \t}\n \n \tnext_block:\n \t\t// Done scanning [b, b+n).  Prepare for the next iteration of\n \t\t// the loop by setting b, n, ti to the parameters for the next block.\n \n-\t\tif(nobj == 0) {\n-\t\t\tflushptrbuf(ptrbuf, &ptrbufpos, &wp, &wbuf, &nobj);\n-\t\t\tflushobjbuf(objbuf, &objbufpos, &wp, &wbuf, &nobj);\n+\t\tif(sbuf.nobj == 0) {\n+\t\t\tflushptrbuf(&sbuf);\n+\t\t\tflushobjbuf(&sbuf);\n \n-\t\t\tif(nobj == 0) {\n+\t\t\tif(sbuf.nobj == 0) {\n \t\t\t\tif(!keepworking) {\n-\t\t\t\t\tif(wbuf)\n-\t\t\t\t\t\tputempty(wbuf);\n-\t\t\t\t\tgoto endscan;\n+\t\t\t\t\tif(sbuf.wbuf)\n+\t\t\t\t\t\tputempty(sbuf.wbuf);\n+\t\t\t\t\treturn;\n \t\t\t\t}\n \t\t\t\t// Emptied our buffer: refill.\n-\t\t\t\twbuf = getfull(wbuf);\n-\t\t\t\tif(wbuf == nil)\n-\t\t\t\t\tgoto endscan;\n-\t\t\t\tnobj = wbuf->nobj;\n-\t\t\t\twp = wbuf->obj + wbuf->nobj;\n+\t\t\t\tsbuf.wbuf = getfull(sbuf.wbuf);\n+\t\t\t\tif(sbuf.wbuf == nil)\n+\t\t\t\t\treturn;\n+\t\t\t\tsbuf.nobj = sbuf.wbuf->nobj;\n+\t\t\t\tsbuf.wp = sbuf.wbuf->obj + sbuf.wbuf->nobj;\n \t\t\t}\n \t\t}\n \n \t\t// Fetch b from the work buffer.\n-\t\t--wp;\n-\t\tb = wp->p;\n-\t\tn = wp->n;\n-\t\tti = wp->ti;\n-\t\tnobj--;\n+\t\t--sbuf.wp;\n+\t\tb = sbuf.wp->p;\n+\t\tn = sbuf.wp->n;\n+\t\tti = sbuf.wp->ti;\n+\t\tsbuf.nobj--;\n \t}\n-\n-endscan:;\n }\n \n // debug_scanblock is the debug copy of scanblock.\n@@ -1159,7 +1218,7 @@ debug_scanblock(byte *b, uintptr n)\n \t\t\truntime_printf(\"found unmarked block %p in %p\\n\", obj, vp+i);\n \n \t\t// If object has no pointers, don't need to scan further.\n-\t\tif((bits & bitNoScan) != 0)\n+\t\tif((bits & bitScan) == 0)\n \t\t\tcontinue;\n \n \t\tdebug_scanblock(obj, size);\n@@ -1536,6 +1595,28 @@ addroots(void)\n \taddroot((Obj){(byte*)&work, sizeof work, 0});\n }\n \n+static void\n+addfreelists(void)\n+{\n+\tint32 i;\n+\tP *p, **pp;\n+\tMCache *c;\n+\tMLink *m;\n+\n+\t// Mark objects in the MCache of each P so we don't collect them.\n+\tfor(pp=runtime_allp; (p=*pp); pp++) {\n+\t\tc = p->mcache;\n+\t\tif(c==nil)\n+\t\t\tcontinue;\n+\t\tfor(i = 0; i < NumSizeClasses; i++) {\n+\t\t\tfor(m = c->list[i].list; m != nil; m = m->next) {\n+\t\t\t\tmarkonly(m);\n+\t\t\t}\n+\t\t}\n+\t}\n+\t// Note: the sweeper will mark objects in each span's freelist.\n+}\n+\n static bool\n handlespecial(byte *p, uintptr size)\n {\n@@ -1581,7 +1662,7 @@ sweepspan(ParFor *desc, uint32 idx)\n {\n \tM *m;\n \tint32 cl, n, npages;\n-\tuintptr size;\n+\tuintptr size, off, *bitp, shift;\n \tbyte *p;\n \tMCache *c;\n \tbyte *arena_start;\n@@ -1591,6 +1672,7 @@ sweepspan(ParFor *desc, uint32 idx)\n \tbyte compression;\n \tuintptr type_data_inc;\n \tMSpan *s;\n+\tMLink *x;\n \n \tm = runtime_m();\n \n@@ -1612,6 +1694,17 @@ sweepspan(ParFor *desc, uint32 idx)\n \tnfree = 0;\n \tend = &head;\n \tc = m->mcache;\n+\n+\t// mark any free objects in this span so we don't collect them\n+\tfor(x = s->freelist; x != nil; x = x->next) {\n+\t\t// This is markonly(x) but faster because we don't need\n+\t\t// atomic access and we're guaranteed to be pointing at\n+\t\t// the head of a valid object.\n+\t\toff = (uintptr*)x - (uintptr*)runtime_mheap.arena_start;\n+\t\tbitp = (uintptr*)runtime_mheap.arena_start - off/wordsPerBitmapWord - 1;\n+\t\tshift = off % wordsPerBitmapWord;\n+\t\t*bitp |= bitMarked<<shift;\n+\t}\n \t\n \ttype_data = (byte*)s->types.data;\n \ttype_data_inc = sizeof(uintptr);\n@@ -1655,14 +1748,17 @@ sweepspan(ParFor *desc, uint32 idx)\n \t\t\t\tcontinue;\n \t\t}\n \n-\t\t// Mark freed; restore block boundary bit.\n-\t\t*bitp = (*bitp & ~(bitMask<<shift)) | (bitBlockBoundary<<shift);\n+\t\t// Clear mark, scan, and special bits.\n+\t\t*bitp &= ~((bitScan|bitMarked|bitSpecial)<<shift);\n \n \t\tif(cl == 0) {\n \t\t\t// Free large span.\n \t\t\truntime_unmarkspan(p, 1<<PageShift);\n \t\t\t*(uintptr*)p = (uintptr)0xdeaddeaddeaddeadll;\t// needs zeroing\n-\t\t\truntime_MHeap_Free(&runtime_mheap, s, 1);\n+\t\t\tif(runtime_debug.efence)\n+\t\t\t\truntime_SysFree(p, size, &mstats.gc_sys);\n+\t\t\telse\n+\t\t\t\truntime_MHeap_Free(&runtime_mheap, s, 1);\n \t\t\tc->local_nlargefree++;\n \t\t\tc->local_largefree += size;\n \t\t} else {\n@@ -1985,7 +2081,9 @@ runtime_gc(int32 force)\n \ta.start_time = runtime_nanotime();\n \tm->gcing = 1;\n \truntime_stoptheworld();\n-\t\n+\n+\tclearpools();\n+\n \t// Run gc on the g0 stack.  We do this so that the g stack\n \t// we're currently running on will no longer change.  Cuts\n \t// the root set down a bit (g0 stacks are not scanned, and\n@@ -2081,6 +2179,7 @@ gc(struct gc_args *args)\n \twork.debugmarkdone = 0;\n \twork.nproc = runtime_gcprocs();\n \taddroots();\n+\taddfreelists();\n \truntime_parforsetup(work.markfor, work.nproc, work.nroot, nil, false, markroot);\n \truntime_parforsetup(work.sweepfor, work.nproc, runtime_mheap.nspan, nil, true, sweepspan);\n \tif(work.nproc > 1) {\n@@ -2317,28 +2416,45 @@ runfinq(void* dummy __attribute__ ((unused)))\n \t}\n }\n \n-// mark the block at v of size n as allocated.\n-// If noscan is true, mark it as not needing scanning.\n void\n-runtime_markallocated(void *v, uintptr n, bool noscan)\n+runtime_marknogc(void *v)\n {\n \tuintptr *b, obits, bits, off, shift;\n \n-\tif(0)\n-\t\truntime_printf(\"markallocated %p+%p\\n\", v, n);\n+\toff = (uintptr*)v - (uintptr*)runtime_mheap.arena_start;  // word offset\n+\tb = (uintptr*)runtime_mheap.arena_start - off/wordsPerBitmapWord - 1;\n+\tshift = off % wordsPerBitmapWord;\n \n-\tif((byte*)v+n > (byte*)runtime_mheap.arena_used || (byte*)v < runtime_mheap.arena_start)\n-\t\truntime_throw(\"markallocated: bad pointer\");\n+\tfor(;;) {\n+\t\tobits = *b;\n+\t\tif((obits>>shift & bitMask) != bitAllocated)\n+\t\t\truntime_throw(\"bad initial state for marknogc\");\n+\t\tbits = (obits & ~(bitAllocated<<shift)) | bitBlockBoundary<<shift;\n+\t\tif(runtime_gomaxprocs == 1) {\n+\t\t\t*b = bits;\n+\t\t\tbreak;\n+\t\t} else {\n+\t\t\t// more than one goroutine is potentially running: use atomic op\n+\t\t\tif(runtime_casp((void**)b, (void*)obits, (void*)bits))\n+\t\t\t\tbreak;\n+\t\t}\n+\t}\n+}\n+\n+void\n+runtime_markscan(void *v)\n+{\n+\tuintptr *b, obits, bits, off, shift;\n \n \toff = (uintptr*)v - (uintptr*)runtime_mheap.arena_start;  // word offset\n \tb = (uintptr*)runtime_mheap.arena_start - off/wordsPerBitmapWord - 1;\n \tshift = off % wordsPerBitmapWord;\n \n \tfor(;;) {\n \t\tobits = *b;\n-\t\tbits = (obits & ~(bitMask<<shift)) | (bitAllocated<<shift);\n-\t\tif(noscan)\n-\t\t\tbits |= bitNoScan<<shift;\n+\t\tif((obits>>shift & bitMask) != bitAllocated)\n+\t\t\truntime_throw(\"bad initial state for markscan\");\n+\t\tbits = obits | bitScan<<shift;\n \t\tif(runtime_gomaxprocs == 1) {\n \t\t\t*b = bits;\n \t\t\tbreak;\n@@ -2368,7 +2484,10 @@ runtime_markfreed(void *v, uintptr n)\n \n \tfor(;;) {\n \t\tobits = *b;\n-\t\tbits = (obits & ~(bitMask<<shift)) | (bitBlockBoundary<<shift);\n+\t\t// This could be a free of a gc-eligible object (bitAllocated + others) or\n+\t\t// a FlagNoGC object (bitBlockBoundary set).  In either case, we revert to\n+\t\t// a simple no-scan allocated object because it is going on a free list.\n+\t\tbits = (obits & ~(bitMask<<shift)) | (bitAllocated<<shift);\n \t\tif(runtime_gomaxprocs == 1) {\n \t\t\t*b = bits;\n \t\t\tbreak;\n@@ -2409,12 +2528,22 @@ runtime_checkfreed(void *v, uintptr n)\n void\n runtime_markspan(void *v, uintptr size, uintptr n, bool leftover)\n {\n-\tuintptr *b, off, shift;\n+\tuintptr *b, off, shift, i;\n \tbyte *p;\n \n \tif((byte*)v+size*n > (byte*)runtime_mheap.arena_used || (byte*)v < runtime_mheap.arena_start)\n \t\truntime_throw(\"markspan: bad pointer\");\n \n+\tif(runtime_checking) {\n+\t\t// bits should be all zero at the start\n+\t\toff = (byte*)v + size - runtime_mheap.arena_start;\n+\t\tb = (uintptr*)(runtime_mheap.arena_start - off/wordsPerBitmapWord);\n+\t\tfor(i = 0; i < size/PtrSize/wordsPerBitmapWord; i++) {\n+\t\t\tif(b[i] != 0)\n+\t\t\t\truntime_throw(\"markspan: span bits not zero\");\n+\t\t}\n+\t}\n+\n \tp = v;\n \tif(leftover)\t// mark a boundary just past end of last block too\n \t\tn++;\n@@ -2426,7 +2555,7 @@ runtime_markspan(void *v, uintptr size, uintptr n, bool leftover)\n \t\toff = (uintptr*)p - (uintptr*)runtime_mheap.arena_start;  // word offset\n \t\tb = (uintptr*)runtime_mheap.arena_start - off/wordsPerBitmapWord - 1;\n \t\tshift = off % wordsPerBitmapWord;\n-\t\t*b = (*b & ~(bitMask<<shift)) | (bitBlockBoundary<<shift);\n+\t\t*b = (*b & ~(bitMask<<shift)) | (bitAllocated<<shift);\n \t}\n }\n "}, {"sha": "469ddfebb369ab534306905bc0a6111162e06d67", "filename": "libgo/runtime/mprof.goc", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fmprof.goc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fmprof.goc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fmprof.goc?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -256,16 +256,56 @@ found:\n \treturn nil;\n }\n \n+static const char*\n+typeinfoname(int32 typeinfo)\n+{\n+\tif(typeinfo == TypeInfo_SingleObject)\n+\t\treturn \"single object\";\n+\telse if(typeinfo == TypeInfo_Array)\n+\t\treturn \"array\";\n+\telse if(typeinfo == TypeInfo_Chan)\n+\t\treturn \"channel\";\n+\t// runtime_throw(\"typinfoname: unknown type info\");\n+\treturn \"unknown\";\n+}\n+\n+static void\n+printstackframes(Location *stk, int32 nstk)\n+{\n+\tLocation *loc;\n+\tint32 frame;\n+\n+\tfor(frame = 0; frame < nstk; frame++) {\n+\t\tloc = &stk[frame];\n+\t\tif (loc->function.len > 0) {\n+\t\t\truntime_printf(\"\\t#%d %p %S %S:%d\\n\", frame, loc->pc, loc->function, loc->filename, (int32)loc->lineno);\n+\t\t} else {\n+\t\t\truntime_printf(\"\\t#%d %p\\n\", frame, loc->pc);\n+\t\t}\n+\t}\n+}\n+\n // Called by malloc to record a profiled block.\n void\n-runtime_MProf_Malloc(void *p, uintptr size)\n+runtime_MProf_Malloc(void *p, uintptr size, uintptr typ)\n {\n-\tint32 nstk;\n \tLocation stk[32];\n \tBucket *b;\n+\tType *type;\n+\tconst char *name;\n+\tint32 nstk;\n \n \tnstk = runtime_callers(1, stk, 32);\n \truntime_lock(&proflock);\n+        if(runtime_debug.allocfreetrace) {\n+\t\ttype = (Type*)(typ & ~3);\n+\t\tname = typeinfoname(typ & 3);\n+\t\truntime_printf(\"MProf_Malloc(p=%p, size=%p, type=%p <%s\", p, size, type, name);\n+\t\tif(type != nil)\n+                \truntime_printf(\" of %S\", *type->__reflection);\n+\t\truntime_printf(\">)\\n\");\n+\t\tprintstackframes(stk, nstk);\n+\t}\n \tb = stkbucket(MProf, stk, nstk, true);\n \tb->recent_allocs++;\n \tb->recent_alloc_bytes += size;\n@@ -284,6 +324,10 @@ runtime_MProf_Free(void *p, uintptr size)\n \tif(b != nil) {\n \t\tb->recent_frees++;\n \t\tb->recent_free_bytes += size;\n+\t\tif(runtime_debug.allocfreetrace) {\n+\t\t\truntime_printf(\"MProf_Free(p=%p, size=%p)\\n\", p, size);\n+\t\t\tprintstackframes(b->stk, b->nstk);\n+\t\t}\n \t}\n \truntime_unlock(&proflock);\n }"}, {"sha": "d00b63809a8902daa99a3e8b7b7084496791f975", "filename": "libgo/runtime/print.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fprint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fprint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fprint.c?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -208,7 +208,10 @@ runtime_printfloat(double v)\n \tn = 7;\t// digits printed\n \te = 0;\t// exp\n \ts = 0;\t// sign\n-\tif(v != 0) {\n+\tif(v == 0) {\n+\t\tif(isinf(1/v) && 1/v < 0)\n+\t\t\ts = 1;\n+\t} else {\n \t\t// sign\n \t\tif(v < 0) {\n \t\t\tv = -v;"}, {"sha": "c97e672fed5ccee5d1d88d643d026d1c925e7866", "filename": "libgo/runtime/race.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Frace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Frace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Frace.h?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -24,6 +24,8 @@ void\truntime_racewritepc(void *addr, void *callpc, void *pc);\n void\truntime_racereadpc(void *addr, void *callpc, void *pc);\n void\truntime_racewriterangepc(void *addr, uintptr sz, void *callpc, void *pc);\n void\truntime_racereadrangepc(void *addr, uintptr sz, void *callpc, void *pc);\n+void\truntime_racereadobjectpc(void *addr, Type *t, void *callpc, void *pc);\n+void\truntime_racewriteobjectpc(void *addr, Type *t, void *callpc, void *pc);\n void\truntime_racefingo(void);\n void\truntime_raceacquire(void *addr);\n void\truntime_raceacquireg(G *gp, void *addr);"}, {"sha": "4f9909bbc8aaf8e6b1f82dd7811d0405b1c2e1d8", "filename": "libgo/runtime/runtime.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fruntime.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fruntime.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.c?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -282,9 +282,11 @@ static struct {\n \tconst char* name;\n \tint32*\tvalue;\n } dbgvar[] = {\n+\t{\"allocfreetrace\", &runtime_debug.allocfreetrace},\n+\t{\"efence\", &runtime_debug.efence},\n \t{\"gctrace\", &runtime_debug.gctrace},\n-\t{\"schedtrace\", &runtime_debug.schedtrace},\n \t{\"scheddetail\", &runtime_debug.scheddetail},\n+\t{\"schedtrace\", &runtime_debug.schedtrace},\n };\n \n void"}, {"sha": "ef6090fb6f85cd944951ba3414d1c8674ea060a9", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -427,9 +427,11 @@ struct CgoMal\n // Holds variables parsed from GODEBUG env var.\n struct DebugVars\n {\n+\tint32\tallocfreetrace;\n+\tint32\tefence;\n \tint32\tgctrace;\n-\tint32\tschedtrace;\n \tint32\tscheddetail;\n+\tint32\tschedtrace;\n };\n \n extern bool runtime_precisestack;\n@@ -741,6 +743,9 @@ void\truntime_lockOSThread(void);\n void\truntime_unlockOSThread(void);\n \n bool\truntime_showframe(String, bool);\n+Hchan*\truntime_makechan_c(ChanType*, int64);\n+void\truntime_chansend(ChanType*, Hchan*, byte*, bool*, void*);\n+void\truntime_chanrecv(ChanType*, Hchan*, byte*, bool*, bool*);\n void\truntime_printcreatedby(G*);\n \n uintptr\truntime_memlimit(void);"}, {"sha": "6c191d03f79cc7e054689740519ed5f34359fa23", "filename": "libgo/runtime/signal_unix.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fsignal_unix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae90c989cb020d17a24919ec84c0b8dd2fae2da/libgo%2Fruntime%2Fsignal_unix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fsignal_unix.c?ref=bae90c989cb020d17a24919ec84c0b8dd2fae2da", "patch": "@@ -121,6 +121,14 @@ os_sigpipe(void)\n \truntime_raise(SIGPIPE);\n }\n \n+void\n+runtime_unblocksignals(void)\n+{\n+\tsigset_t sigset_none;\n+\tsigemptyset(&sigset_none);\n+\tpthread_sigmask(SIG_SETMASK, &sigset_none, nil);\n+}\n+\n void\n runtime_crash(void)\n {\n@@ -137,6 +145,7 @@ runtime_crash(void)\n \t\treturn;\n #endif\n \n+\truntime_unblocksignals();\n \tfor(i = 0; runtime_sigtab[i].sig != -1; i++)\n \t\tif(runtime_sigtab[i].sig == SIGABRT)\n \t\t\tbreak;"}]}