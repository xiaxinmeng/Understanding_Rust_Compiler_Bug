{"sha": "17abb5ac387fe5ea785517522cab95f035b3a7d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdhYmI1YWMzODdmZTVlYTc4NTUxNzUyMmNhYjk1ZjAzNWIzYTdkNQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2015-03-11T21:42:56Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2015-03-11T21:42:56Z"}, "message": "libgfortran LIBGFOR_MINIMAL enhancements.\n\nBased on GCC trunk r220892, for nvptx-none:\n\n                    === gfortran Summary ===\n\n    # of expected passes            [-31320-]{+32117+}\n    # of unexpected failures        [-7222-]{+6821+}\n    # of expected failures          78\n    # of unresolved testcases       [-6441-]{+6158+}\n    # of untested testcases         [-432-]{+391+}\n    # of unsupported tests          639\n\n\tlibgfortran/\n\t* caf/single.c (caf_runtime_error): Revert 2014-11-28 changes.\n\t* runtime/minimal.c (STRERR_MAXSZ): Don't define.\n\t(runtime_error_at, sys_abort): Bring more in line with the\n\tnon-LIBGFOR_MINIMAL code.\n\t(runtime_warning_at, internal_error): New functions.\n\nFrom-SVN: r221363", "tree": {"sha": "5b9ba83715b19f39ebd97c0e0334d1d64d489255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b9ba83715b19f39ebd97c0e0334d1d64d489255"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17abb5ac387fe5ea785517522cab95f035b3a7d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17abb5ac387fe5ea785517522cab95f035b3a7d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17abb5ac387fe5ea785517522cab95f035b3a7d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17abb5ac387fe5ea785517522cab95f035b3a7d5/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d94fae044da071381b73a2ee8afa874b14fa3820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d94fae044da071381b73a2ee8afa874b14fa3820", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d94fae044da071381b73a2ee8afa874b14fa3820"}], "stats": {"total": 69, "additions": 64, "deletions": 5}, "files": [{"sha": "5b201d21fa415904636a10c540d52abaf4e06616", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17abb5ac387fe5ea785517522cab95f035b3a7d5/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17abb5ac387fe5ea785517522cab95f035b3a7d5/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=17abb5ac387fe5ea785517522cab95f035b3a7d5", "patch": "@@ -1,3 +1,11 @@\n+2015-03-11  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* caf/single.c (caf_runtime_error): Revert 2014-11-28 changes.\n+\t* runtime/minimal.c (STRERR_MAXSZ): Don't define.\n+\t(runtime_error_at, sys_abort): Bring more in line with the\n+\tnon-LIBGFOR_MINIMAL code.\n+\t(runtime_warning_at, internal_error): New functions.\n+\n 2015-03-11  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/65200"}, {"sha": "6c582860ebfaca5f9120c531ed5fffcc77bdb1a3", "filename": "libgfortran/caf/single.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17abb5ac387fe5ea785517522cab95f035b3a7d5/libgfortran%2Fcaf%2Fsingle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17abb5ac387fe5ea785517522cab95f035b3a7d5/libgfortran%2Fcaf%2Fsingle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fcaf%2Fsingle.c?ref=17abb5ac387fe5ea785517522cab95f035b3a7d5", "patch": "@@ -48,14 +48,13 @@ caf_static_t *caf_static_list = NULL;\n static void\n caf_runtime_error (const char *message, ...)\n {\n-#ifndef LIBGFOR_MINIMAL\n   va_list ap;\n   fprintf (stderr, \"Fortran runtime error: \");\n   va_start (ap, message);\n   vfprintf (stderr, message, ap);\n   va_end (ap);\n   fprintf (stderr, \"\\n\");\n-#endif\n+\n   /* FIXME: Shutdown the Fortran RTL to flush the buffer.  PR 43849.  */\n   exit (EXIT_FAILURE);\n }"}, {"sha": "72a134a48dc442289108133a5981849145f0bfc3", "filename": "libgfortran/runtime/minimal.c", "status": "modified", "additions": 55, "deletions": 3, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17abb5ac387fe5ea785517522cab95f035b3a7d5/libgfortran%2Fruntime%2Fminimal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17abb5ac387fe5ea785517522cab95f035b3a7d5/libgfortran%2Fruntime%2Fminimal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fminimal.c?ref=17abb5ac387fe5ea785517522cab95f035b3a7d5", "patch": "@@ -73,7 +73,10 @@ recursion_check (void)\n   magic = MAGIC;\n }\n \n-#define STRERR_MAXSZ 256\n+\n+/* os_error()-- Operating system error.  We get a message from the\n+ * operating system, show it and leave.  Some operating system errors\n+ * are caught and processed by the library.  If not, we come here. */\n \n void\n os_error (const char *message)\n@@ -85,6 +88,10 @@ os_error (const char *message)\n }\n iexport(os_error);\n \n+\n+/* void runtime_error()-- These are errors associated with an\n+ * invalid fortran program. */\n+\n void\n runtime_error (const char *message, ...)\n {\n@@ -109,7 +116,8 @@ runtime_error_at (const char *where, const char *message, ...)\n   va_list ap;\n \n   recursion_check ();\n-  printf (\"Fortran runtime error: \");\n+  printf (\"%s\", where);\n+  printf (\"\\nFortran runtime error: \");\n   va_start (ap, message);\n   vprintf (message, ap);\n   va_end (ap);\n@@ -118,6 +126,43 @@ runtime_error_at (const char *where, const char *message, ...)\n }\n iexport(runtime_error_at);\n \n+\n+void\n+runtime_warning_at (const char *where, const char *message, ...)\n+{\n+  va_list ap;\n+\n+  printf (\"%s\", where);\n+  printf (\"\\nFortran runtime warning: \");\n+  va_start (ap, message);\n+  vprintf (message, ap);\n+  va_end (ap);\n+  printf (\"\\n\");\n+}\n+iexport(runtime_warning_at);\n+\n+\n+/* void internal_error()-- These are this-can't-happen errors\n+ * that indicate something deeply wrong. */\n+\n+void\n+internal_error (st_parameter_common *cmp, const char *message)\n+{\n+  recursion_check ();\n+  printf (\"Internal Error: \");\n+  printf (\"%s\", message);\n+  printf (\"\\n\");\n+\n+  /* This function call is here to get the main.o object file included\n+     when linking statically. This works because error.o is supposed to\n+     be always linked in (and the function call is in internal_error\n+     because hopefully it doesn't happen too often).  */\n+  stupid_function_name_for_static_linking();\n+\n+  exit (3);\n+}\n+\n+\n /* Return the full path of the executable.  */\n char *\n full_exe_path (void)\n@@ -153,6 +198,13 @@ get_args (int *argc, char ***argv)\n void\n sys_abort (void)\n {\n-  printf (\"Abort called.\\n\");\n+  /* If backtracing is enabled, print backtrace and disable signal\n+     handler for ABRT.  */\n+  if (options.backtrace == 1\n+      || (options.backtrace == -1 && compile_options.backtrace == 1))\n+    {\n+      printf (\"\\nProgram aborted.\\n\");\n+    }\n+\n   abort();\n }"}]}