{"sha": "d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4M2IyYTJkYzkxZTFkMmMxZmVhNzhjYWMyYjZjNmM3M2IzNjgwZA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2005-08-03T22:10:54Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2005-08-03T22:10:54Z"}, "message": "profile.c (branch_prob): Split edges with goto locus on them to get proper line counts.\n\n\n\t* profile.c (branch_prob): Split edges with goto locus on them\n\tto get proper line counts.\n\t* tree-cfg.c (make_cond_expr_edges): Record user goto locuses, if any.\n\n\t* gcov-1.C: Fix switch counts.\n\t* gcov-4b.c: Likewise.\n\nFrom-SVN: r102717", "tree": {"sha": "fcee55b5f24d9dfb6674c4dbf7fa3c50e5dfb709", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcee55b5f24d9dfb6674c4dbf7fa3c50e5dfb709"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/comments", "author": null, "committer": null, "parents": [{"sha": "5336645054c5bc4bf56215863b9d64bd24884f32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5336645054c5bc4bf56215863b9d64bd24884f32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5336645054c5bc4bf56215863b9d64bd24884f32"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "8a061aed2eed2fae1fbf9a4ffde3288ac0e00e96", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "patch": "@@ -1,3 +1,9 @@\n+2005-08-04  Jan Hubicka  <jh@suse.cz>\n+\n+\t* profile.c (branch_prob): Split edges with goto locus on them\n+\tto get proper line counts.\n+\t* tree-cfg.c (make_cond_expr_edges): Record user goto locuses, if any.\n+\n 2005-08-03  Paul Brook  <paul@codesourcery.com>\n \n \t* function.c (assign_parms): Round current_function_args_size"}, {"sha": "1fc8aa58d505f9b92019f010f5c35476c866fd78", "filename": "gcc/profile.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "patch": "@@ -806,6 +806,27 @@ branch_prob (void)\n \n       FOR_EACH_EDGE (e, ei, bb->succs)\n \t{\n+\t  tree last = last_stmt (bb);\n+\t  /* Edge with goto locus might get wrong coverage info unless\n+\t     it is the only edge out of BB.   \n+\t     Don't do that when the locuses match, so \n+\t     if (blah) goto something;\n+\t     is not computed twice.  */\n+\t  if (e->goto_locus && !single_succ_p (bb)\n+#ifdef USE_MAPPED_LOCATION\n+\t      && (LOCATION_FILE (e->goto_locus)\n+\t          != LOCATION_FILE (EXPR_LOCATION  (last))\n+\t\t  || (LOCATION_LINE (e->goto_locus)\n+\t\t      != LOCATION_LINE (EXPR_LOCATION  (last)))))\n+#else\n+\t      && (e->goto_locus->file != EXPR_LOCUS (last)->file\n+\t\t  || (e->goto_locus->line\n+\t\t      != EXPR_LOCUS (last)->line)))\n+#endif\n+\t    {\n+\t      basic_block new = split_edge (e);\n+\t      single_succ_edge (new)->goto_locus = e->goto_locus;\n+\t    }\n \t  if ((e->flags & (EDGE_ABNORMAL | EDGE_ABNORMAL_CALL))\n \t       && e->dest != EXIT_BLOCK_PTR)\n \t    need_exit_edge = 1;"}, {"sha": "acbe5eba8bcdc545d2ebe221bbdca7fc1706abb6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "patch": "@@ -1,3 +1,8 @@\n+2005-08-04  Jan Hubicka  <jh@suse.cz>\n+\n+\t* gcov-1.C: Fix switch counts.\n+\t* gcov-4b.c: Likewise.\n+\n 2005-08-03  Jeff Law  <law@redhat.com>\n \n \t* g++.dg/tree-ssa/pr14814.C: xfail test for &this count."}, {"sha": "c279b1452fcdf39d68e23a75ed274bb94a6a186a", "filename": "gcc/testsuite/g++.dg/gcov/gcov-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgcov%2Fgcov-1.C?ref=d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "patch": "@@ -253,7 +253,7 @@ test_switch (int i, int j)\n {\n   int result = 0;\t\t\t/* count(5) */\n \n-\t\t\t\t\t/* branch(80 25) */\n+\t\t\t\t\t/* branch(20 0 60 20) */\n   switch (i)\t\t\t\t/* count(5) */\n \t\t\t\t\t/* branch(end) */\n     {"}, {"sha": "da98749f719a868d9465391d90906332a4dbf785", "filename": "gcc/testsuite/gcc.misc-tests/gcov-4b.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4b.c?ref=d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "patch": "@@ -207,7 +207,7 @@ test_switch (int i, int j)\n {\n   int result = 0;\n \n-  switch (i)\t\t\t\t/* branch(80 25) */\n+  switch (i)\t\t\t\t/* branch(20 0 60 20) */\n     \t\t\t\t\t/* branch(end) */\n     {\n       case 1:"}, {"sha": "096da092151bc883e76272d7ba274fb00b8e6279", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=d783b2a2dc91e1d2c1fea78cac2b6c6c73b3680d", "patch": "@@ -577,6 +577,7 @@ make_cond_expr_edges (basic_block bb)\n   tree entry = last_stmt (bb);\n   basic_block then_bb, else_bb;\n   tree then_label, else_label;\n+  edge e;\n \n   gcc_assert (entry);\n   gcc_assert (TREE_CODE (entry) == COND_EXPR);\n@@ -587,8 +588,21 @@ make_cond_expr_edges (basic_block bb)\n   then_bb = label_to_block (then_label);\n   else_bb = label_to_block (else_label);\n \n-  make_edge (bb, then_bb, EDGE_TRUE_VALUE);\n-  make_edge (bb, else_bb, EDGE_FALSE_VALUE);\n+  e = make_edge (bb, then_bb, EDGE_TRUE_VALUE);\n+#ifdef USE_MAPPED_LOCATION\n+  e->goto_locus = EXPR_LOCATION (COND_EXPR_THEN (entry));\n+#else\n+  e->goto_locus = EXPR_LOCUS (COND_EXPR_THEN (entry));\n+#endif\n+  e = make_edge (bb, else_bb, EDGE_FALSE_VALUE);\n+  if (e)\n+    {\n+#ifdef USE_MAPPED_LOCATION\n+      e->goto_locus = EXPR_LOCATION (COND_EXPR_ELSE (entry));\n+#else\n+      e->goto_locus = EXPR_LOCUS (COND_EXPR_ELSE (entry));\n+#endif\n+    }\n }\n \n /* Hashing routine for EDGE_TO_CASES.  */"}]}