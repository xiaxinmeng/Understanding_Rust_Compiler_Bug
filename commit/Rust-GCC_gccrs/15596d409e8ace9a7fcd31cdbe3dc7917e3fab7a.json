{"sha": "15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTU1OTZkNDA5ZThhY2U5YTdmY2QzMWNkYmUzZGM3OTE3ZTNmYWI3YQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-03-21T09:00:29Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-03-21T09:00:29Z"}, "message": "2003-03-21  Michael Koch  <konqueror@gmx.de>\n\n\t* java/rmi/activation/Activatable.java\n\t(serialVersionUID): New member variable.\n\t* java/rmi/activation/ActivationGroup.java\n\t(serialVersionUID): New member variable.\n\t* java/rmi/activation/ActivationGroupDesc.java\n\t(serialVersionUID): New member variable.\n\t* java/rmi/registry/Registry.java:\n\tReformated.\n\t(Registry): Deprecated.\n\t* java/rmi/server/LoaderHandler.java\n\tReformated.\n\t(LoaderHandler): Deprecated.\n\t* java/rmi/server/LogStream.java\n\tReformated.\n\t(LogStream): Deprecated.\n\t* java/rmi/server/Operation.java\n\t(Operation): Deprecated.\n\t* java/rmi/server/RMIFailureHandler.java:\n\tReformated.\n\t* java/rmi/server/RMISocketFactory.java:\n\tReformated.\n\t* java/rmi/server/RemoteCall.java\n\t(RemoteCall): Deprecated.\n\t* java/rmi/server/RemoteStub.java:\n\tReformated.\n\t* java/rmi/server/Skeleton.java\n\tReformated.\n\t(Skeleton): Deprecated.\n\nFrom-SVN: r64655", "tree": {"sha": "dfed08e7c10127300b7162be09addc4a7ce41d72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfed08e7c10127300b7162be09addc4a7ce41d72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/comments", "author": null, "committer": null, "parents": [{"sha": "ae429eabd866b9984f29b0305a903e5cb548909f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae429eabd866b9984f29b0305a903e5cb548909f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae429eabd866b9984f29b0305a903e5cb548909f"}], "stats": {"total": 377, "additions": 239, "deletions": 138}, "files": [{"sha": "941f46b52f1fe359334c4621dba32c2622338b13", "filename": "libjava/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -1,3 +1,34 @@\n+2003-03-21  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/rmi/activation/Activatable.java\n+\t(serialVersionUID): New member variable.\n+\t* java/rmi/activation/ActivationGroup.java\n+\t(serialVersionUID): New member variable.\n+\t* java/rmi/activation/ActivationGroupDesc.java\n+\t(serialVersionUID): New member variable.\n+\t* java/rmi/registry/Registry.java:\n+\tReformated.\n+\t(Registry): Deprecated.\n+\t* java/rmi/server/LoaderHandler.java\n+\tReformated.\n+\t(LoaderHandler): Deprecated.\n+\t* java/rmi/server/LogStream.java\n+\tReformated.\n+\t(LogStream): Deprecated.\n+\t* java/rmi/server/Operation.java\n+\t(Operation): Deprecated.\n+\t* java/rmi/server/RMIFailureHandler.java:\n+\tReformated.\n+\t* java/rmi/server/RMISocketFactory.java:\n+\tReformated.\n+\t* java/rmi/server/RemoteCall.java\n+\t(RemoteCall): Deprecated.\n+\t* java/rmi/server/RemoteStub.java:\n+\tReformated.\n+\t* java/rmi/server/Skeleton.java\n+\tReformated.\n+\t(Skeleton): Deprecated.\n+\n 2003-03-21  Michael Koch  <konqueror@gmx.de>\n \n \t* java/io/LineNumberReader.java"}, {"sha": "95913199f091b6f9b6b5ca5b155c7f6cb311fda0", "filename": "libjava/java/rmi/activation/Activatable.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Factivation%2FActivatable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Factivation%2FActivatable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Factivation%2FActivatable.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -48,6 +48,8 @@\n public abstract class Activatable\n \textends RemoteServer {\n \n+static final long serialVersionUID = -3120617863591563455L;\n+\n protected Activatable(String location, MarshalledObject data, boolean restart, int port) throws ActivationException, RemoteException {\n \tthrow new Error(\"Not implemented\");\n }"}, {"sha": "e9cd472113b44452139a32b54b7d42bb328b8155", "filename": "libjava/java/rmi/activation/ActivationGroup.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Factivation%2FActivationGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Factivation%2FActivationGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Factivation%2FActivationGroup.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -46,6 +46,8 @@\n \textends UnicastRemoteObject\n \timplements ActivationInstantiator {\n \n+static final long serialVersionUID = -7696947875314805420L;\n+\n protected ActivationGroup(ActivationGroupID groupID) throws RemoteException {\n \tthrow new Error(\"Not implemented\");\n }"}, {"sha": "2afb8440b0b26f510872b7739e52cf7846bbb6d7", "filename": "libjava/java/rmi/activation/ActivationGroupDesc.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Factivation%2FActivationGroupDesc.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Factivation%2FActivationGroupDesc.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Factivation%2FActivationGroupDesc.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -48,6 +48,8 @@ public final class ActivationGroupDesc implements Serializable\n public static class CommandEnvironment\n \timplements Serializable {\n \n+static final long serialVersionUID = 6165754737887770191L;\n+  \n private String cmdpath;\n private String[] argv;\n "}, {"sha": "203da118c534b7186f8146201f90943469e2612e", "filename": "libjava/java/rmi/registry/Registry.java", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fregistry%2FRegistry.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fregistry%2FRegistry.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fregistry%2FRegistry.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -43,19 +43,22 @@\n import java.rmi.AlreadyBoundException;\n import java.rmi.Remote;\n \n-public interface Registry\n-\textends Remote {\n+public interface Registry extends Remote\n+{\n+  public static final int REGISTRY_PORT = 1099;\n \n-public static int REGISTRY_PORT = 1099;\n+  public Remote lookup(String name)\n+    throws RemoteException, NotBoundException, AccessException;\n \n-public Remote lookup(String name) throws RemoteException, NotBoundException, AccessException;\n+  public void bind(String name, Remote obj)\n+    throws RemoteException, AlreadyBoundException, AccessException;\n \n-public void bind(String name, Remote obj) throws RemoteException, AlreadyBoundException, AccessException;\n+  public void unbind(String name)\n+    throws RemoteException, NotBoundException, AccessException;\n \n-public void unbind(String name) throws RemoteException, NotBoundException, AccessException;\n-\n-public void rebind(String name, Remote obj) throws RemoteException, AccessException;\n-\n-public String[] list() throws RemoteException, AccessException;\n+  public void rebind(String name, Remote obj)\n+    throws RemoteException, AccessException;\n \n+  public String[] list()\n+    throws RemoteException, AccessException;\n }"}, {"sha": "f6003069b4cf4f12db4d1a62c21e05e78f32b888", "filename": "libjava/java/rmi/server/LoaderHandler.java", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FLoaderHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FLoaderHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FLoaderHandler.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -40,15 +40,18 @@\n import java.net.MalformedURLException;\n import java.net.URL;\n \n+/**\n+ * @deprecated\n+ */\n+public interface LoaderHandler\n+{\n+  public static final String packagePrefix = \"\";\n \n-public interface LoaderHandler {\n+  public Class loadClass(String name)\n+    throws MalformedURLException, ClassNotFoundException;\n \n-public static final String packagePrefix = \"\";\n-\n-public Class loadClass(String name) throws MalformedURLException, ClassNotFoundException;\n-\n-public Class loadClass(URL codebase, String name) throws MalformedURLException, ClassNotFoundException;\n-\n-public Object getSecurityContext(ClassLoader loader);\n+  public Class loadClass(URL codebase, String name)\n+    throws MalformedURLException, ClassNotFoundException;\n \n+  public Object getSecurityContext(ClassLoader loader);\n }"}, {"sha": "b7e8fea70ddb60a59754e4c089ddce7510792343", "filename": "libjava/java/rmi/server/LogStream.java", "status": "modified", "additions": 73, "deletions": 55, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FLogStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FLogStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FLogStream.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -41,62 +41,80 @@\n import java.io.OutputStream;\n import java.io.IOException;\n \n+/**\n+ * @deprecated\n+ */\n public class LogStream\n-\textends PrintStream {\n-\n-public static final int SILENT = 0;\n-public static final int BRIEF = 10;\n-public static final int VERBOSE = 20;\n-\n-private static PrintStream defStream;\n-\n-private LogStream(OutputStream s) {\n-\tsuper(s);\n-}\n-\n-public static LogStream log(String name) {\n-\tthrow new Error(\"Not implemented\");\n-}\n-\n-public static PrintStream getDefaultStream() {\n-\treturn (defStream);\n-}\n-\n-public static void setDefaultStream(PrintStream s) {\n-\tdefStream = s;\n-}\n-\n-public OutputStream getOutputStream() {\n-\treturn (out);\n-}\n-\n-public void setOutputStream(OutputStream s) {\n-\tout = s;\n-}\n-\n-public void write(int b) {\n-\tsuper.write(b);\n-}\n-\n-public void write(byte[] b, int off, int len) {\n-\tsuper.write(b, off, len);\n-}\n-\n-public String toString() {\n-\tthrow new Error(\"Not implemented\");\n-}\n-\n-public static int parseLevel(String s) {\n-\tif (s.equalsIgnoreCase(\"silent\")) {\n-\t\treturn (SILENT);\n-\t}\n-\tif (s.equalsIgnoreCase(\"brief\")) {\n-\t\treturn (BRIEF);\n-\t}\n-\tif (s.equalsIgnoreCase(\"verbose\")) {\n-\t\treturn (VERBOSE);\n-\t}\n-\treturn (SILENT);\n+\textends PrintStream\n+{\n+  public static final int SILENT = 0;\n+  public static final int BRIEF = 10;\n+  public static final int VERBOSE = 20;\n+\n+  private static PrintStream defStream;\n+\n+  private LogStream(OutputStream s)\n+  {\n+    super(s);\n+  }\n+\n+  public static LogStream log(String name)\n+  {\n+    throw new Error(\"Not implemented\");\n+  }\n+\n+  public static PrintStream getDefaultStream()\n+  {\n+    return (defStream);\n+  }\n+  \n+  public static void setDefaultStream(PrintStream s)\n+  {\n+    defStream = s;\n+  }\n+\n+  public OutputStream getOutputStream()\n+  {\n+    return (out);\n+  }\n+\n+  public void setOutputStream(OutputStream s)\n+  {\n+    out = s;\n+  }\n+\n+  public void write(int b)\n+  {\n+    super.write(b);\n+  }\n+\n+  public void write(byte[] b, int off, int len)\n+  {\n+    super.write(b, off, len);\n+  }\n+\n+  public String toString()\n+  {\n+    throw new Error(\"Not implemented\");\n+  }\n+\n+  public static int parseLevel(String s) {\n+    if (s.equalsIgnoreCase(\"silent\"))\n+      {\n+        return (SILENT);\n+      }\n+    \n+    if (s.equalsIgnoreCase(\"brief\"))\n+      {\n+        return (BRIEF);\n+      }\n+    \n+    if (s.equalsIgnoreCase(\"verbose\"))\n+      {\n+        return (VERBOSE);\n+      }\n+    \n+    return (SILENT);\n }\n \n }"}, {"sha": "9b1e7c218c8ae36a1fd59d4727b970e68d0b6290", "filename": "libjava/java/rmi/server/Operation.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FOperation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FOperation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FOperation.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -37,6 +37,9 @@\n \n package java.rmi.server;\n \n+/**\n+ * @deprecated\n+ */\n public class Operation {\n \n private String operation;"}, {"sha": "dace6fa1b0926cfaf28eae281101c25e67f153bb", "filename": "libjava/java/rmi/server/RMIFailureHandler.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FRMIFailureHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FRMIFailureHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMIFailureHandler.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -37,8 +37,10 @@\n \n package java.rmi.server;\n \n-public interface RMIFailureHandler {\n-\n-public boolean failure(Exception ex);\n-\n+public interface RMIFailureHandler\n+{\n+  /**\n+   * @exception IOException If an error occurs\n+   */\n+  public boolean failure (Exception ex);\n }"}, {"sha": "544b1250660e6037ff9d99f117343cf77108119f", "filename": "libjava/java/rmi/server/RMISocketFactory.java", "status": "modified", "additions": 60, "deletions": 38, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FRMISocketFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FRMISocketFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRMISocketFactory.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -43,42 +43,64 @@\n import gnu.java.rmi.server.RMIDefaultSocketFactory;\n \n public abstract class RMISocketFactory\n-\timplements RMIClientSocketFactory, RMIServerSocketFactory {\n-\n-static private RMISocketFactory defaultFactory;\n-static private RMISocketFactory currentFactory;\n-static private RMIFailureHandler currentHandler;\n-\n-static {\n-\tdefaultFactory = new RMIDefaultSocketFactory();\n-\tcurrentFactory = defaultFactory;\n-}\n-\n-public RMISocketFactory() {\n-}\n-\n-public abstract Socket createSocket(String host, int port) throws IOException;\n-\n-public abstract ServerSocket createServerSocket(int port) throws IOException;\n-\n-public static void setSocketFactory(RMISocketFactory fac) throws IOException {\n-\tcurrentFactory = fac;\n-}\n-\n-public static RMISocketFactory getSocketFactory() {\n-\treturn (currentFactory);\n-}\n-\n-public static RMISocketFactory getDefaultSocketFactory() {\n-\treturn (defaultFactory);\n-}\n-\n-public static void setFailureHandler(RMIFailureHandler fh) {\n-\tcurrentHandler = fh;\n-}\n-\n-public static RMIFailureHandler getFailureHandler() {\n-\treturn (currentHandler);\n-}\n-\n+  implements RMIClientSocketFactory, RMIServerSocketFactory\n+{\n+  static private RMISocketFactory defaultFactory;\n+  static private RMISocketFactory currentFactory;\n+  static private RMIFailureHandler currentHandler;\n+\n+  static\n+    {\n+      defaultFactory = new RMIDefaultSocketFactory();\n+      currentFactory = defaultFactory;\n+    }\n+\n+  public RMISocketFactory ()\n+  {\n+  }\n+\n+  /**\n+   * @exception IOException If an error occurs\n+   */\n+  public abstract Socket createSocket (String host, int port)\n+    throws IOException;\n+\n+  /**\n+   * @exception IOException If an error occurs\n+   */\n+  public abstract ServerSocket createServerSocket (int port)\n+    throws IOException;\n+\n+  /**\n+   * @exception IOException If an error occurs\n+   * @exception SecurityException FIXME\n+   */\n+  public static void setSocketFactory (RMISocketFactory fac)\n+    throws IOException\n+  {\n+    currentFactory = fac;\n+  }\n+\n+  public static RMISocketFactory getSocketFactory ()\n+  {\n+    return currentFactory;\n+  }\n+\n+  public static RMISocketFactory getDefaultSocketFactory ()\n+  {\n+    return defaultFactory;\n+  }\n+\n+  /**\n+   * @exception SecurityException FIXME\n+   */\n+  public static void setFailureHandler (RMIFailureHandler fh)\n+  {\n+    currentHandler = fh;\n+  }\n+\n+  public static RMIFailureHandler getFailureHandler ()\n+  {\n+    return currentHandler;\n+  }\n }"}, {"sha": "eac9ee233a9d9f92f50db5627cfe5145232124b7", "filename": "libjava/java/rmi/server/RemoteCall.java", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FRemoteCall.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FRemoteCall.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRemoteCall.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -43,6 +43,9 @@\n import java.io.ObjectInput;\n import java.io.StreamCorruptedException;\n \n+/**\n+ * @deprecated\n+ */\n public interface RemoteCall {\n \n public ObjectOutput getOutputStream() throws IOException;"}, {"sha": "83cce3514e919836e703a7c1d5a8ab6d936e09e5", "filename": "libjava/java/rmi/server/RemoteStub.java", "status": "modified", "additions": 20, "deletions": 18, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FRemoteStub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FRemoteStub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FRemoteStub.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -1,5 +1,5 @@\n /*\n-  Copyright (c) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n+  Copyright (c) 1996, 1997, 1998, 1999, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -38,20 +38,22 @@\n package java.rmi.server;\n \n public abstract class RemoteStub\n-\textends RemoteObject {\n-\n-public static final long serialVersionUID = -1585587260594494182l;\n-\n-protected RemoteStub() {\n-\tsuper();\n-}\n-\n-protected RemoteStub(RemoteRef ref) {\n-\tsuper(ref);\n-}\n-\n-protected static void setRef(RemoteStub stub, RemoteRef ref) {\n-\tstub.ref = ref;\n-}\n-\n-}\n+  extends RemoteObject\n+{\n+  static final long serialVersionUID = -1585587260594494182l;\n+\n+  protected RemoteStub ()\n+  {\n+    super ();\n+  }\n+\n+  protected RemoteStub (RemoteRef ref)\n+  {\n+    super (ref);\n+  }\n+\n+  protected static void setRef (RemoteStub stub,  RemoteRef ref)\n+  {\n+    stub.ref = ref;\n+  }\n+} // class RemoteSub"}, {"sha": "a341894af5c3fcb96102c5be972759f85bf2124d", "filename": "libjava/java/rmi/server/Skeleton.java", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FSkeleton.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Frmi%2Fserver%2FSkeleton.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FSkeleton.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -41,9 +41,13 @@\n import java.lang.Exception;\n import java.rmi.server.RemoteCall;\n \n-public interface Skeleton {\n-\n-public void dispatch(Remote obj, RemoteCall theCall, int opnum, long hash) throws Exception;\n-public Operation[] getOperations();\n-\n+/**\n+ * @deprecated\n+ */\n+public interface Skeleton\n+{\n+  public void dispatch (Remote obj, RemoteCall theCall, int opnum, long hash)\n+    throws Exception;\n+\n+  public Operation[] getOperations();\n }"}, {"sha": "ba976b7de843fc3e040e92b043f4e81b42f95b89", "filename": "libjava/java/text/AttributedCharacterIterator.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Ftext%2FAttributedCharacterIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Ftext%2FAttributedCharacterIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FAttributedCharacterIterator.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -70,6 +70,8 @@ public interface AttributedCharacterIterator extends CharacterIterator\n public static class Attribute implements Serializable\n {\n \n+  private static final long serialVersionUID = -9142742483513960612L;\n+\n /*************************************************************************/\n \n /*"}, {"sha": "0e4a678378c8da716af37cc9273483d47a1c13a7", "filename": "libjava/java/text/MessageFormat.java", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Ftext%2FMessageFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a/libjava%2Fjava%2Ftext%2FMessageFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FMessageFormat.java?ref=15596d409e8ace9a7fcd31cdbe3dc7917e3fab7a", "patch": "@@ -143,6 +143,8 @@ else if (type.equals(\"choice\"))\n \n public class MessageFormat extends Format\n {\n+  private static final long serialVersionUID = 6479157306784022952L;\n+  \n   // Helper that returns the text up to the next format opener.  The\n   // text is put into BUFFER.  Returns index of character after end of\n   // string.  Throws IllegalArgumentException on error."}]}