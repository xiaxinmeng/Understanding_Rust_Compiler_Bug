{"sha": "2847d7d28ea79e2f93049fad16f931b6705c9fff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjg0N2Q3ZDI4ZWE3OWUyZjkzMDQ5ZmFkMTZmOTMxYjY3MDVjOWZmZg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-11-26T10:45:02Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-12-02T21:14:53Z"}, "message": "c++: Give better placeholder diagnostic\n\nWe were saying 'auto parameter not permitted' in a place where 'auto' is in\nfact permitted in C++20, but a class template placeholder is not.\n\ngcc/cp/ChangeLog:\n\n\t* decl.c (grokdeclarator): Improve diagnostic for\n\tdisallowed CTAD placeholder.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/other/pr88187.C: Adjust expected error.\n\t* g++.dg/cpp2a/class-deduction-abbrev1.C: New test.", "tree": {"sha": "098a2060ff83707d5fea5078548813d1094eda7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/098a2060ff83707d5fea5078548813d1094eda7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2847d7d28ea79e2f93049fad16f931b6705c9fff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2847d7d28ea79e2f93049fad16f931b6705c9fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2847d7d28ea79e2f93049fad16f931b6705c9fff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2847d7d28ea79e2f93049fad16f931b6705c9fff/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9288bd28e24c755a7216311ee5247e7c88270a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9288bd28e24c755a7216311ee5247e7c88270a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9288bd28e24c755a7216311ee5247e7c88270a6"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "0cf84a0750c384080f9a71a589199ff329a65362", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2847d7d28ea79e2f93049fad16f931b6705c9fff/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2847d7d28ea79e2f93049fad16f931b6705c9fff/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=2847d7d28ea79e2f93049fad16f931b6705c9fff", "patch": "@@ -13145,6 +13145,16 @@ grokdeclarator (const cp_declarator *declarator,\n \t      if (decl_context == PARM && AUTO_IS_DECLTYPE (auto_node))\n \t\terror_at (typespec_loc,\n \t\t\t  \"cannot declare a parameter with %<decltype(auto)%>\");\n+\t      else if (tree c = CLASS_PLACEHOLDER_TEMPLATE (auto_node))\n+\t\t{\n+\t\t  auto_diagnostic_group g;\n+\t\t  error_at (typespec_loc,\n+\t\t\t    \"class template placeholder %qE not permitted \"\n+\t\t\t    \"in this context\", c);\n+\t\t  if (decl_context == PARM && cxx_dialect >= cxx20)\n+\t\t    inform (typespec_loc, \"use %<auto%> for an \"\n+\t\t\t    \"abbreviated function template\");\n+\t\t}\n \t      else\n \t\terror_at (typespec_loc,\n \t\t\t  \"%<auto%> parameter not permitted in this context\");"}, {"sha": "f9310090b5b7a9faa197f55d140278a71fb8dc49", "filename": "gcc/testsuite/g++.dg/cpp2a/class-deduction-abbrev1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2847d7d28ea79e2f93049fad16f931b6705c9fff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-abbrev1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2847d7d28ea79e2f93049fad16f931b6705c9fff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-abbrev1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp2a%2Fclass-deduction-abbrev1.C?ref=2847d7d28ea79e2f93049fad16f931b6705c9fff", "patch": "@@ -0,0 +1,13 @@\n+ // { dg-do compile { target c++20 } }\n+\n+template <class T> struct A { };\n+template <class T> concept is_A = requires { A(T()); };\n+\n+void f(auto);      // OK\n+void f(is_A auto); // OK\n+void f(A);\t   // { dg-error \"placeholder\" }\n+\n+int main()\n+{\n+  f(A<int>());\n+}"}, {"sha": "13466d3ce577cf1f70fc416be4356cee3532af11", "filename": "gcc/testsuite/g++.dg/other/pr88187.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2847d7d28ea79e2f93049fad16f931b6705c9fff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr88187.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2847d7d28ea79e2f93049fad16f931b6705c9fff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr88187.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fpr88187.C?ref=2847d7d28ea79e2f93049fad16f931b6705c9fff", "patch": "@@ -4,4 +4,4 @@\n template <int> struct A;\n void f (A ());\t// { dg-error \"6:variable or field 'f' declared void\" \"\" { target c++14_down } }\n \t\t// { dg-error \"missing template arguments before '\\\\(' token\" \"\" { target c++14_down } .-1 }\n-\t\t// { dg-error \"'auto' parameter not permitted in this context\" \"\" { target c++17 } .-2 }\n+\t\t// { dg-error \"placeholder .A. not permitted in this context\" \"\" { target c++17 } .-2 }"}]}