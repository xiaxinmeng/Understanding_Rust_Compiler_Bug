{"sha": "77bf9f83b8e388de8bedb259991f588a7b8a7f57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzdiZjlmODNiOGUzODhkZThiZWRiMjU5OTkxZjU4OGE3YjhhN2Y1Nw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-08-19T18:49:40Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2021-08-19T18:49:40Z"}, "message": "Document enable_ranger and disable_ranger.\n\ngcc:\n\t* gimple-range.cc: Add comments.\n\t* gimple-range.h: Same.", "tree": {"sha": "517e3c2b6282b2747172652ac8839ddc96fca867", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/517e3c2b6282b2747172652ac8839ddc96fca867"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77bf9f83b8e388de8bedb259991f588a7b8a7f57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77bf9f83b8e388de8bedb259991f588a7b8a7f57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77bf9f83b8e388de8bedb259991f588a7b8a7f57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77bf9f83b8e388de8bedb259991f588a7b8a7f57/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81501087758cb0c32e555858cf367e449a09246e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81501087758cb0c32e555858cf367e449a09246e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81501087758cb0c32e555858cf367e449a09246e"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "ef3afeacc901932a7dec7a690cbd862c5f56a589", "filename": "gcc/gimple-range.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77bf9f83b8e388de8bedb259991f588a7b8a7f57/gcc%2Fgimple-range.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77bf9f83b8e388de8bedb259991f588a7b8a7f57/gcc%2Fgimple-range.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.cc?ref=77bf9f83b8e388de8bedb259991f588a7b8a7f57", "patch": "@@ -381,6 +381,10 @@ gimple_ranger::dump (FILE *f)\n   m_cache.dump (f);\n }\n \n+/* Create a new ranger instance and associate it with function FUN.\n+   Each call must be paired with a call to disable_ranger to release\n+   resources.  */\n+\n gimple_ranger *\n enable_ranger (struct function *fun)\n {\n@@ -392,6 +396,9 @@ enable_ranger (struct function *fun)\n   return r;\n }\n \n+/* Destroy and release the ranger instance associated with function FUN\n+   and replace it the global ranger.  */\n+\n void\n disable_ranger (struct function *fun)\n {"}, {"sha": "eaebb9c5833793cfb262903d88d20c643a7e08f6", "filename": "gcc/gimple-range.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77bf9f83b8e388de8bedb259991f588a7b8a7f57/gcc%2Fgimple-range.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77bf9f83b8e388de8bedb259991f588a7b8a7f57/gcc%2Fgimple-range.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range.h?ref=77bf9f83b8e388de8bedb259991f588a7b8a7f57", "patch": "@@ -62,6 +62,9 @@ class gimple_ranger : public range_query\n   range_tracer tracer;\n };\n \n+/* Create a new ranger instance and associate it with a function.\n+   Each call must be paired with a call to disable_ranger to release\n+   resources.  */\n extern gimple_ranger *enable_ranger (struct function *);\n extern void disable_ranger (struct function *);\n "}]}