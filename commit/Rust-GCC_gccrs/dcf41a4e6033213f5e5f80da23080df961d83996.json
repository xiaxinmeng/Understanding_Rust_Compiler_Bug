{"sha": "dcf41a4e6033213f5e5f80da23080df961d83996", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNmNDFhNGU2MDMzMjEzZjVlNWY4MGRhMjMwODBkZjk2MWQ4Mzk5Ng==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-06-11T02:41:06Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-06-11T02:41:06Z"}, "message": "RISC-V: Unify the output asm pattern between gpr_save and gpr_restore pattern.\n\ngcc/ChangeLog:\n\n\t* config/riscv/riscv-protos.h (riscv_output_gpr_save): Remove.\n\t* config/riscv/riscv-sr.c (riscv_sr_match_prologue): Update\n\tvalue.\n\t* config/riscv/riscv.c (riscv_output_gpr_save): Remove.\n\t* config/riscv/riscv.md (gpr_save): Update output asm pattern.", "tree": {"sha": "79bbbff33483e5eb39b9f9acdc049f503b3c882b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79bbbff33483e5eb39b9f9acdc049f503b3c882b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcf41a4e6033213f5e5f80da23080df961d83996", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcf41a4e6033213f5e5f80da23080df961d83996", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcf41a4e6033213f5e5f80da23080df961d83996", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcf41a4e6033213f5e5f80da23080df961d83996/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0e0c1300f9f08608873df5571e14a61308dd0c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0e0c1300f9f08608873df5571e14a61308dd0c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0e0c1300f9f08608873df5571e14a61308dd0c0"}], "stats": {"total": 21, "additions": 3, "deletions": 18}, "files": [{"sha": "358224af898856839cfe7824e6a448198f27bfbd", "filename": "gcc/config/riscv/riscv-protos.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf41a4e6033213f5e5f80da23080df961d83996/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf41a4e6033213f5e5f80da23080df961d83996/gcc%2Fconfig%2Friscv%2Friscv-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-protos.h?ref=dcf41a4e6033213f5e5f80da23080df961d83996", "patch": "@@ -53,7 +53,6 @@ extern rtx riscv_subword (rtx, bool);\n extern bool riscv_split_64bit_move_p (rtx, rtx);\n extern void riscv_split_doubleword_move (rtx, rtx);\n extern const char *riscv_output_move (rtx, rtx);\n-extern const char *riscv_output_gpr_save (unsigned);\n extern const char *riscv_output_return ();\n #ifdef RTX_CODE\n extern void riscv_expand_int_scc (rtx, enum rtx_code, rtx, rtx);"}, {"sha": "9af50ef028e3672247e6ddf0be76d5acebae69f9", "filename": "gcc/config/riscv/riscv-sr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf41a4e6033213f5e5f80da23080df961d83996/gcc%2Fconfig%2Friscv%2Friscv-sr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf41a4e6033213f5e5f80da23080df961d83996/gcc%2Fconfig%2Friscv%2Friscv-sr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv-sr.c?ref=dcf41a4e6033213f5e5f80da23080df961d83996", "patch": "@@ -115,7 +115,7 @@ riscv_sr_match_prologue (rtx_insn **body)\n       && GET_CODE (XVECEXP (PATTERN (insn), 0, 0)) == UNSPEC_VOLATILE\n       && (GET_CODE (XVECEXP (XVECEXP (PATTERN (insn), 0, 0), 0, 0))\n \t  == CONST_INT)\n-      && INTVAL (XVECEXP (XVECEXP (PATTERN (insn), 0, 0), 0, 0)) == 2)\n+      && INTVAL (XVECEXP (XVECEXP (PATTERN (insn), 0, 0), 0, 0)) == 0)\n     return insn;\n \n   return NULL;"}, {"sha": "02ebf1945eac06eafd22fe9867a9448792a6bde4", "filename": "gcc/config/riscv/riscv.c", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf41a4e6033213f5e5f80da23080df961d83996/gcc%2Fconfig%2Friscv%2Friscv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf41a4e6033213f5e5f80da23080df961d83996/gcc%2Fconfig%2Friscv%2Friscv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.c?ref=dcf41a4e6033213f5e5f80da23080df961d83996", "patch": "@@ -3951,20 +3951,6 @@ riscv_restore_reg (rtx reg, rtx mem)\n   RTX_FRAME_RELATED_P (insn) = 1;\n }\n \n-/* Return the code to invoke the GPR save routine.  */\n-\n-const char *\n-riscv_output_gpr_save (unsigned mask)\n-{\n-  static char s[32];\n-  unsigned n = riscv_save_libcall_count (mask);\n-\n-  ssize_t bytes = snprintf (s, sizeof (s), \"call\\tt0,__riscv_save_%u\", n);\n-  gcc_assert ((size_t) bytes < sizeof (s));\n-\n-  return s;\n-}\n-\n /* For stack frames that can't be allocated with a single ADDI instruction,\n    compute the best value to initially allocate.  It must at a minimum\n    allocate enough space to spill the callee-saved registers.  If TARGET_RVC,\n@@ -5199,7 +5185,7 @@ riscv_gen_gpr_save_insn (struct riscv_frame_info *frame)\n \n   RTVEC_ELT (vec, 0) =\n     gen_rtx_UNSPEC_VOLATILE (VOIDmode,\n-      gen_rtvec (1, GEN_INT (frame->mask)), UNSPECV_GPR_SAVE);\n+      gen_rtvec (1, GEN_INT (count)), UNSPECV_GPR_SAVE);\n \n   for (int i = 1; i < veclen; ++i)\n     {"}, {"sha": "36012ad1f778d5fc76f8a6a1aa3fbea753e79fa5", "filename": "gcc/config/riscv/riscv.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcf41a4e6033213f5e5f80da23080df961d83996/gcc%2Fconfig%2Friscv%2Friscv.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcf41a4e6033213f5e5f80da23080df961d83996/gcc%2Fconfig%2Friscv%2Friscv.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.md?ref=dcf41a4e6033213f5e5f80da23080df961d83996", "patch": "@@ -2445,7 +2445,7 @@\n      [(unspec_volatile [(match_operand 0 \"const_int_operand\")]\n \t               UNSPECV_GPR_SAVE)])]\n   \"\"\n-  { return riscv_output_gpr_save (INTVAL (operands[0])); })\n+  \"call\\tt0,__riscv_save_%0\")\n \n (define_insn \"gpr_restore\"\n   [(unspec_volatile [(match_operand 0 \"const_int_operand\")] UNSPECV_GPR_RESTORE)]"}]}