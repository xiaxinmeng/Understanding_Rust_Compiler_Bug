{"sha": "f3922acfdfff1e426bd1238cf09eeb84332464c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM5MjJhY2ZkZmZmMWU0MjZiZDEyMzhjZjA5ZWViODQzMzI0NjRjOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-09-14T08:32:00Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-09-14T08:32:41Z"}, "message": "Implement PR ada/101385\n\nFor consistency's sake with -Wall & -w, this makes -Werror imply -gnatwe.\n\ngcc/ada/\n\tPR ada/101385\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst\n\t(-Wall): Minor fixes.\n\t(-w): Likewise.\n\t(-Werror): Document that it also sets -gnatwe by default.\n\t* gcc-interface/lang-specs.h (ada): Expand -gnatwe if -Werror is\n\tpassed and move expansion of -gnatw switches to before -gnatez.", "tree": {"sha": "e62475fa932b1c83dddcd2dc4d4e7858e8443f3e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e62475fa932b1c83dddcd2dc4d4e7858e8443f3e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f3922acfdfff1e426bd1238cf09eeb84332464c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3922acfdfff1e426bd1238cf09eeb84332464c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3922acfdfff1e426bd1238cf09eeb84332464c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3922acfdfff1e426bd1238cf09eeb84332464c9/comments", "author": null, "committer": null, "parents": [{"sha": "45d32da2bc0f62f196ec311dddb89563555b1a2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45d32da2bc0f62f196ec311dddb89563555b1a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45d32da2bc0f62f196ec311dddb89563555b1a2a"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "5a69967615ff38a0a653e940a998ccf6e46046d7", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3922acfdfff1e426bd1238cf09eeb84332464c9/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3922acfdfff1e426bd1238cf09eeb84332464c9/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=f3922acfdfff1e426bd1238cf09eeb84332464c9", "patch": "@@ -4157,16 +4157,16 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   This switch enables most warnings from the GCC back end.\n   The code generator detects a number of warning situations that are missed\n   by the GNAT front end, and this switch can be used to activate them.\n-  The use of this switch also sets the default front end warning mode to\n-  :switch:`-gnatwa`, that is, most front end warnings activated as well.\n+  The use of this switch also sets the default front-end warning mode to\n+  :switch:`-gnatwa`, that is, most front-end warnings are activated as well.\n \n \n .. index:: -w (gcc)\n \n :switch:`-w`\n   Conversely, this switch suppresses warnings from the GCC back end.\n-  The use of this switch also sets the default front end warning mode to\n-  :switch:`-gnatws`, that is, front end warnings suppressed as well.\n+  The use of this switch also sets the default front-end warning mode to\n+  :switch:`-gnatws`, that is, front-end warnings are suppressed as well.\n \n \n .. index:: -Werror (gcc)\n@@ -4175,6 +4175,9 @@ of the pragma in the :title:`GNAT_Reference_manual`).\n   This switch causes warnings from the GCC back end to be treated as\n   errors.  The warning string still appears, but the warning messages are\n   counted as errors, and prevent the generation of an object file.\n+  The use of this switch also sets the default front-end warning mode to\n+  :switch:`-gnatwe`, that is, front-end warning messages and style check\n+  messages are treated as errors as well.\n \n \n A string of warning parameters can be used in the same parameter. For example::"}, {"sha": "d26cc8d0534831d7204b52985243ff23c79c3965", "filename": "gcc/ada/gcc-interface/lang-specs.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f3922acfdfff1e426bd1238cf09eeb84332464c9/gcc%2Fada%2Fgcc-interface%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f3922acfdfff1e426bd1238cf09eeb84332464c9/gcc%2Fada%2Fgcc-interface%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Flang-specs.h?ref=f3922acfdfff1e426bd1238cf09eeb84332464c9", "patch": "@@ -36,16 +36,17 @@\n    \"\\\n  %{pg:%{fomit-frame-pointer:%e-pg and -fomit-frame-pointer are incompatible}}\\\n  %{!S:%{!c:%e-c or -S required for Ada}}\\\n- gnat1 %{I*} %{k8:-gnatk8} %{Wall:-gnatwa} %{w:-gnatws} %{!Q:-quiet}\\\n+ gnat1 %{I*} %{k8:-gnatk8} %{!Q:-quiet}\\\n     %{nostdinc*} %{nostdlib*}\\\n     %{fcompare-debug-second:-gnatd_A} \\\n     %{O*} %{W*} %{w} %{p} %{pg:-p} \" ADA_DUMPS_OPTIONS \" \\\n     %{coverage:-fprofile-arcs -ftest-coverage} \"\n #if defined(TARGET_VXWORKS_RTP)\n    \"%{fRTS=rtp|fRTS=rtp-smp|fRTS=ravenscar-cert-rtp:-mrtp} \"\n #endif\n-   \"%{gnatea:-gnatez} %{g*&m*&f*} \"\n-   \"%1 %{!S:%{o*:%w%*-gnatO}} \\\n+   \"%{Wall:-gnatwa} %{Werror:-gnatwe} %{w:-gnatws} \\\n+    %{gnatea:-gnatez} %{g*&m*&f*} \\\n+    %1 %{!S:%{o*:%w%*-gnatO}} \\\n     %i %{S:%W{o*}%{!o*:-o %w%b.s}} \\\n     %{gnatc*|gnats*: -o %j} %{-param*} \\\n     %{!gnatc*:%{!gnats*:%(invoke_as)}}\", 0, 0, 0},"}]}