{"sha": "56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZjOWVmNWYyZmE1Nzg3ZGRkN2IyYzgzODA0YTQ2NTU0ZmExZmZjOQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-04-28T12:24:47Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-04-28T12:24:47Z"}, "message": "[AArch64] Define WORD_REGISTER_OPERATIONS to zero and comment why\n\n\t* config/aarch64/aarch64.h (WORD_REGISTER_OPERATIONS): Define to 0\n\tand explain why in a comment.\n\nFrom-SVN: r235563", "tree": {"sha": "71c403e0a0fe63461a2f1b54260ec59dc818271d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71c403e0a0fe63461a2f1b54260ec59dc818271d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac2f36e33655a8fae9fe98e07cf5f77564902fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac2f36e33655a8fae9fe98e07cf5f77564902fc"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "0284c895ae64573d8a0537f50d0d2cffd81f1376", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9", "patch": "@@ -1,3 +1,8 @@\n+2015-04-28  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/aarch64/aarch64.h (WORD_REGISTER_OPERATIONS): Define to 0\n+\tand explain why in a comment.\n+\n 2016-04-28  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.md (cpu_facility): Add fpx variant."}, {"sha": "4135da1becd8a433a57b9a82fa2b63f6cc76640f", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=56c9ef5f2fa5787ddd7b2c83804a46554fa1ffc9", "patch": "@@ -722,7 +722,12 @@ do {\t\t\t\t\t\t\t\t\t     \\\n #define USE_STORE_PRE_INCREMENT(MODE)   0\n #define USE_STORE_PRE_DECREMENT(MODE)   0\n \n-/* ?? #define WORD_REGISTER_OPERATIONS  */\n+/* WORD_REGISTER_OPERATIONS does not hold for AArch64.\n+   The assigned word_mode is DImode but operations narrower than SImode\n+   behave as 32-bit operations if using the W-form of the registers rather\n+   than as word_mode (64-bit) operations as WORD_REGISTER_OPERATIONS\n+   expects.  */\n+#define WORD_REGISTER_OPERATIONS 0\n \n /* Define if loading from memory in MODE, an integral mode narrower than\n    BITS_PER_WORD will either zero-extend or sign-extend.  The value of this"}]}