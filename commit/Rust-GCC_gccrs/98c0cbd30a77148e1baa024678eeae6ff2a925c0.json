{"sha": "98c0cbd30a77148e1baa024678eeae6ff2a925c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OThjMGNiZDMwYTc3MTQ4ZTFiYWEwMjQ2NzhlZWFlNmZmMmE5MjVjMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-08-29T18:54:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-08-29T18:54:53Z"}, "message": "dwarf2out.c (fortran_common): Update comment.\n\n\t* dwarf2out.c (fortran_common): Update comment.\n\t(gen_variable_die): Swap com_die and var_die variables in Fortran\n\tCOMMON block handling code.\n\nFrom-SVN: r139783", "tree": {"sha": "1a8ce08cb71faa4f2128213f322d3ef68b1e336d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a8ce08cb71faa4f2128213f322d3ef68b1e336d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/98c0cbd30a77148e1baa024678eeae6ff2a925c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c0cbd30a77148e1baa024678eeae6ff2a925c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98c0cbd30a77148e1baa024678eeae6ff2a925c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98c0cbd30a77148e1baa024678eeae6ff2a925c0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de870512b6dfd173e888bead942fe051a4c59b43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de870512b6dfd173e888bead942fe051a4c59b43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de870512b6dfd173e888bead942fe051a4c59b43"}], "stats": {"total": 54, "additions": 29, "deletions": 25}, "files": [{"sha": "d326fc9d10139b166b2e960a64523062e6670ab0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c0cbd30a77148e1baa024678eeae6ff2a925c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c0cbd30a77148e1baa024678eeae6ff2a925c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=98c0cbd30a77148e1baa024678eeae6ff2a925c0", "patch": "@@ -1,5 +1,9 @@\n 2008-08-29  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* dwarf2out.c (fortran_common): Update comment.\n+\t(gen_variable_die): Swap com_die and var_die variables in Fortran\n+\tCOMMON block handling code.\n+\n \t* dwarf2out.c (descr_info_loc): Handle VAR_DECL.\n \n \t* dwarf2out.c (gen_const_die): New function."}, {"sha": "567fc7ad95707fedf53c17dcbf7de349addef69e", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/98c0cbd30a77148e1baa024678eeae6ff2a925c0/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/98c0cbd30a77148e1baa024678eeae6ff2a925c0/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=98c0cbd30a77148e1baa024678eeae6ff2a925c0", "patch": "@@ -11556,8 +11556,8 @@ secname_for_decl (const_tree decl)\n   return secname;\n }\n \n-/* Check whether decl is a Fortran COMMON symbol.  If not, NULL_RTX is returned.\n-   If so, the rtx for the SYMBOL_REF for the COMMON block is returned, and the\n+/* Check whether decl is a Fortran COMMON symbol.  If not, NULL_TREE is\n+   returned.  If so, the decl for the COMMON block is returned, and the\n    value is the offset into the common block for the symbol.  */\n \n static tree\n@@ -13780,65 +13780,65 @@ gen_variable_die (tree decl, dw_die_ref context_die)\n       dw_die_ref com_die;\n       dw_loc_descr_ref loc;\n \n-      com_die = lookup_decl_die (decl);\n-      if (com_die)\n+      var_die = lookup_decl_die (decl);\n+      if (var_die)\n \t{\n-\t  if (get_AT (com_die, DW_AT_location) == NULL)\n+\t  if (get_AT (var_die, DW_AT_location) == NULL)\n \t    {\n \t      loc = loc_descriptor_from_tree (com_decl);\n \t      if (loc)\n \t\t{\n \t\t  if (off)\n \t\t    add_loc_descr (&loc, new_loc_descr (DW_OP_plus_uconst,\n \t\t\t\t\t\t\toff, 0));\n-\t\t  add_AT_loc (com_die, DW_AT_location, loc);\n-\t\t  remove_AT (com_die, DW_AT_declaration);\n+\t\t  add_AT_loc (var_die, DW_AT_location, loc);\n+\t\t  remove_AT (var_die, DW_AT_declaration);\n \t\t}\n \t    }\n \t  return;\n \t}\n       field = TREE_OPERAND (DECL_VALUE_EXPR (decl), 0);\n-      var_die = lookup_decl_die (com_decl);\n+      com_die = lookup_decl_die (com_decl);\n       loc = loc_descriptor_from_tree (com_decl);\n-      if (var_die == NULL)\n+      if (com_die == NULL)\n \t{\n \t  const char *cnam\n \t    = IDENTIFIER_POINTER (DECL_ASSEMBLER_NAME (com_decl));\n \n-\t  var_die = new_die (DW_TAG_common_block, context_die, decl);\n-\t  add_name_and_src_coords_attributes (var_die, com_decl);\n+\t  com_die = new_die (DW_TAG_common_block, context_die, decl);\n+\t  add_name_and_src_coords_attributes (com_die, com_decl);\n \t  if (loc)\n \t    {\n-\t      add_AT_loc (var_die, DW_AT_location, loc);\n+\t      add_AT_loc (com_die, DW_AT_location, loc);\n \t      /* Avoid sharing the same loc descriptor between\n \t\t DW_TAG_common_block and DW_TAG_variable.  */\n \t      loc = loc_descriptor_from_tree (com_decl);\n \t    }\n           else if (DECL_EXTERNAL (decl))\n-\t    add_AT_flag (var_die, DW_AT_declaration, 1);\n-\t  add_pubname_string (cnam, var_die); /* ??? needed? */\n-\t  equate_decl_number_to_die (com_decl, var_die);\n+\t    add_AT_flag (com_die, DW_AT_declaration, 1);\n+\t  add_pubname_string (cnam, com_die); /* ??? needed? */\n+\t  equate_decl_number_to_die (com_decl, com_die);\n \t}\n-      else if (get_AT (var_die, DW_AT_location) == NULL && loc)\n+      else if (get_AT (com_die, DW_AT_location) == NULL && loc)\n \t{\n-\t  add_AT_loc (var_die, DW_AT_location, loc);\n+\t  add_AT_loc (com_die, DW_AT_location, loc);\n \t  loc = loc_descriptor_from_tree (com_decl);\n-\t  remove_AT (var_die, DW_AT_declaration);\n+\t  remove_AT (com_die, DW_AT_declaration);\n \t}\n-      com_die = new_die (DW_TAG_variable, var_die, decl);\n-      add_name_and_src_coords_attributes (com_die, decl);\n-      add_type_attribute (com_die, TREE_TYPE (decl), TREE_READONLY (decl),\n+      var_die = new_die (DW_TAG_variable, com_die, decl);\n+      add_name_and_src_coords_attributes (var_die, decl);\n+      add_type_attribute (var_die, TREE_TYPE (decl), TREE_READONLY (decl),\n \t\t\t  TREE_THIS_VOLATILE (decl), context_die);\n-      add_AT_flag (com_die, DW_AT_external, 1);\n+      add_AT_flag (var_die, DW_AT_external, 1);\n       if (loc)\n \t{\n \t  if (off)\n \t    add_loc_descr (&loc, new_loc_descr (DW_OP_plus_uconst, off, 0));\n-\t  add_AT_loc (com_die, DW_AT_location, loc);\n+\t  add_AT_loc (var_die, DW_AT_location, loc);\n \t}\n       else if (DECL_EXTERNAL (decl))\n-\tadd_AT_flag (com_die, DW_AT_declaration, 1);\n-      equate_decl_number_to_die (decl, com_die);\n+\tadd_AT_flag (var_die, DW_AT_declaration, 1);\n+      equate_decl_number_to_die (decl, var_die);\n       return;\n     }\n "}]}