{"sha": "7b3b340eafc59df1e79b9cb231722ea2507f04c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2IzYjM0MGVhZmM1OWRmMWU3OWI5Y2IyMzE3MjJlYTI1MDdmMDRjNw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2014-04-14T17:17:27Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2014-04-14T17:17:27Z"}, "message": "tree-sra.c (ipa_sra_preliminary_function_checks): Skip DECL_DISREGARD_INLINE_LIMITS functions.\n\n2014-04-14  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-sra.c (ipa_sra_preliminary_function_checks): Skip\n\tDECL_DISREGARD_INLINE_LIMITS functions.\n\nFrom-SVN: r209386", "tree": {"sha": "12be5e5062745af24cc3c6ed63a3cf59911c253f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12be5e5062745af24cc3c6ed63a3cf59911c253f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b3b340eafc59df1e79b9cb231722ea2507f04c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3b340eafc59df1e79b9cb231722ea2507f04c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b3b340eafc59df1e79b9cb231722ea2507f04c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b3b340eafc59df1e79b9cb231722ea2507f04c7/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2ed3b4ee02399c2c520199a6ccd896e83c31591a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ed3b4ee02399c2c520199a6ccd896e83c31591a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ed3b4ee02399c2c520199a6ccd896e83c31591a"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "e641c6ef29a14142da9c4589d1c6c158532d7c57", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3b340eafc59df1e79b9cb231722ea2507f04c7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3b340eafc59df1e79b9cb231722ea2507f04c7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7b3b340eafc59df1e79b9cb231722ea2507f04c7", "patch": "@@ -1,3 +1,8 @@\n+2014-04-14  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* tree-sra.c (ipa_sra_preliminary_function_checks): Skip\n+\tDECL_DISREGARD_INLINE_LIMITS functions.\n+\n 2014-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/60827"}, {"sha": "91286b44842319ed5584565bb9a149b6a4fb83db", "filename": "gcc/tree-sra.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b3b340eafc59df1e79b9cb231722ea2507f04c7/gcc%2Ftree-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b3b340eafc59df1e79b9cb231722ea2507f04c7/gcc%2Ftree-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-sra.c?ref=7b3b340eafc59df1e79b9cb231722ea2507f04c7", "patch": "@@ -4960,6 +4960,14 @@ ipa_sra_preliminary_function_checks (struct cgraph_node *node)\n   if (TYPE_ATTRIBUTES (TREE_TYPE (node->decl)))\n     return false;\n \n+  if (DECL_DISREGARD_INLINE_LIMITS (node->decl))\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"Always inline function will be inlined \"\n+\t\t \"anyway. \\n\");\n+      return false;\n+    }\n+\n   return true;\n }\n "}]}