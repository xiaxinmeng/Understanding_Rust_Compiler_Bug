{"sha": "02e4edeaf41e6a15fdd59c476ef7592275b568c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDJlNGVkZWFmNDFlNmExNWZkZDU5YzQ3NmVmNzU5MjI3NWI1NjhjNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-12T13:16:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-12T13:16:38Z"}, "message": "[multiple changes]\n\n2012-06-12  Robert Dewar  <dewar@adacore.com>\n\n        * gcc-interface/Make-lang.in: Update dependencies.\n\t* sem_ch9.ads, einfo.adb, einfo.ads, sem_prag.adb, freeze.adb,\n\tsem_util.adb, sem_ch13.adb, sem_ch13.ads, exp_ch3.adb: Add comments.\n\tMinor reformatting.\n\n2012-06-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Instantiate_Formal_Subprogram): Remove code that\n\timplements AI05-0296, because the actual may be overloaded.\n\t* sem_ch8.adb (Analyze_Subprogram_Renaming): and move it here,\n\tto be applied once the actual subprogram is properly resolved.\n\nFrom-SVN: r188456", "tree": {"sha": "d9ca6cca41b2c9fee12de84ad24b35095da1b4e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9ca6cca41b2c9fee12de84ad24b35095da1b4e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/02e4edeaf41e6a15fdd59c476ef7592275b568c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e4edeaf41e6a15fdd59c476ef7592275b568c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02e4edeaf41e6a15fdd59c476ef7592275b568c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02e4edeaf41e6a15fdd59c476ef7592275b568c6/comments", "author": null, "committer": null, "parents": [{"sha": "b98e296954eded73ab660265878b17a293678d97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b98e296954eded73ab660265878b17a293678d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b98e296954eded73ab660265878b17a293678d97"}], "stats": {"total": 4798, "additions": 2121, "deletions": 2677}, "files": [{"sha": "d152ce26e25348496d4d704da38dde9c0f1a494d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -1,3 +1,17 @@\n+2012-06-12  Robert Dewar  <dewar@adacore.com>\n+\n+        * gcc-interface/Make-lang.in: Update dependencies.\n+\t* sem_ch9.ads, einfo.adb, einfo.ads, sem_prag.adb, freeze.adb,\n+\tsem_util.adb, sem_ch13.adb, sem_ch13.ads, exp_ch3.adb: Add comments.\n+\tMinor reformatting.\n+\n+2012-06-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Instantiate_Formal_Subprogram): Remove code that\n+\timplements AI05-0296, because the actual may be overloaded.\n+\t* sem_ch8.adb (Analyze_Subprogram_Renaming): and move it here,\n+\tto be applied once the actual subprogram is properly resolved.\n+\n 2012-06-12  Robert Dewar  <dewar@adacore.com>\n \n \t* switch-c.adb, a-exexpr-gcc.adb: Minor reformatting."}, {"sha": "48f2eeeb72ba56edc0be47c38ef4d5b107160979", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -35,7 +35,7 @@ pragma Style_Checks (All_Checks);\n with Atree;    use Atree;\n with Nlists;   use Nlists;\n with Output;   use Output;\n-with Sem_Aux;  use Sem_Aux;\n+with Sem_Aux;  use Sem_Aux;   -- wrong dependency ???\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n \n@@ -5992,14 +5992,11 @@ package body Einfo is\n \n    begin\n       N := First_Rep_Item (E);\n-\n       while Present (N) loop\n          if Nkind (N) = N_Pragma then\n             N_Nam := Pragma_Name (N);\n-\n          elsif Nkind (N) = N_Attribute_Definition_Clause then\n             N_Nam := Chars (N);\n-\n          elsif Nkind (N) = N_Aspect_Specification then\n             N_Nam := Chars (Identifier (N));\n          end if;"}, {"sha": "e5cfbf302a76c382ab41da6242467168bf412b01", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -3851,7 +3851,7 @@ package Einfo is\n --       entity which may or may not be a type, with the intent that if it is a\n --       type, its underlying type is taken.\n \n---    Universal_Aliasing (Flag216) [base type only]\n+--    Universal_Aliasing (Flag216) [implementation base type only]\n --       Present in all type entities. Set to direct the back-end to avoid\n --       any optimizations based on type-based alias analysis for this type.\n --       Indicates that objects of this type can alias objects of any other\n@@ -4941,7 +4941,7 @@ package Einfo is\n    --    Strict_Alignment                    (Flag145)  (base type only)\n    --    Suppress_Initialization             (Flag105)\n    --    Treat_As_Volatile                   (Flag41)\n-   --    Universal_Aliasing                  (Flag216)  (base type only)\n+   --    Universal_Aliasing                  (Flag216)  (impl base type only)\n \n    --    Alignment_Clause                    (synth)\n    --    Base_Type                           (synth)\n@@ -7190,6 +7190,9 @@ package Einfo is\n    --  value returned is the N_Attribute_Definition_Clause node, otherwise\n    --  Empty is returned.\n \n+   --  What is difference between following two, and why are they named\n+   --  the way they are ???\n+\n    function Get_Rep_Item\n      (E   : Entity_Id;\n       Nam : Name_Id) return Node_Id;\n@@ -7215,6 +7218,9 @@ package Einfo is\n    --  representation clause, and if found, returns it. Returns Empty\n    --  if no such clause is found.\n \n+   --  I still don't get it, if the first one returns stuff from the parent\n+   --  it should say so, and it doesn't, and the names make no sense ???\n+\n    function Get_Rep_Pragma (E : Entity_Id; Nam : Name_Id) return Node_Id;\n    --  Searches the Rep_Item chain for the given entity E, for an instance\n    --  a representation pragma with the given name Nam. If found then the\n@@ -7232,6 +7238,8 @@ package Einfo is\n    --  of rep item with the given name Nam. If found then True is returned,\n    --  otherwise False indicates that no matching entry was found.\n \n+   --  Again, the following two have bizarre names, and unclear specs ???\n+\n    function Has_Rep_Pragma (E : Entity_Id; Nam : Name_Id) return Boolean;\n    --  Searches the Rep_Item chain for the given entity E, for an instance\n    --  of representation pragma with the given name Nam. If found then True"}, {"sha": "a413d88248b4ca550772c16611073c01f19a49ff", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -2642,9 +2642,9 @@ package body Exp_Ch3 is\n \n                elsif Ekind (Scope (Id)) = E_Record_Type\n                  and then Present (Corresponding_Concurrent_Type (Scope (Id)))\n-                 and then (Chars (Id) = Name_uCPU\n-                            or else Chars (Id) = Name_uDispatching_Domain\n-                            or else Chars (Id) = Name_uPriority)\n+                 and then (Chars (Id) = Name_uCPU                or else\n+                           Chars (Id) = Name_uDispatching_Domain or else\n+                           Chars (Id) = Name_uPriority)\n                then\n                   declare\n                      Exp   : Node_Id;\n@@ -2671,6 +2671,7 @@ package body Exp_Ch3 is\n                          (Corresponding_Concurrent_Type (Scope (Id)), Nam);\n \n                      if Present (Ritem) then\n+\n                         --  Pragma case\n \n                         if Nkind (Ritem) = N_Pragma then"}, {"sha": "6dd00b3c984cfa74b126537202941c16f33c2723", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -1324,6 +1324,7 @@ package body Freeze is\n             --  for a description of how we handle aspect visibility).\n \n             elsif Has_Delayed_Aspects (E) then\n+\n                --  Retrieve the visibility to the discriminants in order to\n                --  analyze properly the aspects.\n "}, {"sha": "1da6c14da645ba3ee655e72e1406adb5e833198a", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 2003, "deletions": 2572, "changes": 4575, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6"}, {"sha": "579acb7dd5545e3d9ceb870e22330a5b1aeefdff", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -9419,63 +9419,6 @@ package body Sem_Ch12 is\n          end;\n       end if;\n \n-      --  In Ada 2012, enforce the (RM 13.14(10.2/3)) freezing rule concerning\n-      --  formal incomplete types: a callable entity freezes its profile,\n-      --  unless it has an incomplete untagged formal.\n-\n-      if Ada_Version >= Ada_2012 then\n-         declare\n-            F : Entity_Id;\n-            Has_Untagged_Inc : Boolean;\n-\n-         begin\n-            F := First_Formal (Analyzed_S);\n-            Has_Untagged_Inc := False;\n-            while Present (F) loop\n-               if Ekind (Etype (F)) = E_Incomplete_Type\n-                 and then not Is_Tagged_Type (Etype (F))\n-               then\n-                  Has_Untagged_Inc := True;\n-                  exit;\n-               end if;\n-\n-               F := Next_Formal (F);\n-            end loop;\n-\n-            if Ekind (Analyzed_S) = E_Function\n-              and then Ekind (Etype (Analyzed_S)) = E_Incomplete_Type\n-              and then not Is_Tagged_Type (Etype (F))\n-            then\n-               Has_Untagged_Inc := True;\n-            end if;\n-\n-            --  This is a temporary implementation. Most of this code has\n-            --  to be moved to sem_ch8, and will be commented then ???\n-\n-            if Is_Entity_Name (Actual)\n-              and then not Is_Overloaded (Actual)\n-              and then not Has_Untagged_Inc\n-            then\n-               F := First_Formal (Entity (Actual));\n-               while Present (F) loop\n-                  Freeze_Before (Instantiation_Node, Etype (F));\n-\n-                  if Is_Incomplete_Or_Private_Type (Etype (F))\n-                    and then No (Underlying_Type (Etype (F)))\n-                    and then not Is_Generic_Type (Etype (F))\n-                  then\n-                     Error_Msg_NE\n-                       (\"type& must be frozen before this point\",\n-                          Instantiation_Node, Etype (F));\n-                     Abandon_Instantiation (Instantiation_Node);\n-                  end if;\n-\n-                  F := Next_Formal (F);\n-               end loop;\n-            end if;\n-         end;\n-      end if;\n-\n       return Decl_Node;\n    end Instantiate_Formal_Subprogram;\n "}, {"sha": "b4bbb2de9fbf73d49158b625529c786337d4e91c", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 20, "deletions": 25, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -762,7 +762,6 @@ package body Sem_Ch13 is\n \n                begin\n                   A := First (L);\n-\n                   while Present (A) loop\n                      exit when Chars (Identifier (A)) = Name_Export\n                        or else Chars (Identifier (A)) = Name_Import;\n@@ -795,7 +794,6 @@ package body Sem_Ch13 is\n \n                   begin\n                      Disc := First_Discriminant (E);\n-\n                      while Present (Disc) loop\n                         if Chars (Expr) = Chars (Disc)\n                           and then Ekind (Etype (Disc)) =\n@@ -1451,9 +1449,7 @@ package body Sem_Ch13 is\n \n                      goto Continue;\n \n-                  elsif A_Id = Aspect_Import\n-                    or else A_Id = Aspect_Export\n-                  then\n+                  elsif A_Id = Aspect_Import or else A_Id = Aspect_Export then\n \n                      --  Verify that there is an aspect Convention that will\n                      --  incorporate the Import/Export aspect, and eventual\n@@ -6152,8 +6148,8 @@ package body Sem_Ch13 is\n       --  Case of stream attributes, just have to compare entities\n \n       elsif A_Id = Aspect_Input  or else\n-         A_Id = Aspect_Output or else\n-         A_Id = Aspect_Read   or else\n+         A_Id = Aspect_Output    or else\n+         A_Id = Aspect_Read      or else\n          A_Id = Aspect_Write\n       then\n          Analyze (End_Decl_Expr);\n@@ -6231,7 +6227,7 @@ package body Sem_Ch13 is\n \n       A_Id : constant Aspect_Id := Get_Aspect_Id (Chars (Ident));\n \n-      T    : Entity_Id := Empty;\n+      T : Entity_Id := Empty;\n       --  Type required for preanalyze call\n \n    begin\n@@ -6255,7 +6251,7 @@ package body Sem_Ch13 is\n          when No_Aspect =>\n             raise Program_Error;\n \n-         --  Aspects taking an optional boolean argument.\n+         --  Aspects taking an optional boolean argument\n \n          when Boolean_Aspects      |\n               Library_Unit_Aspects =>\n@@ -6332,23 +6328,23 @@ package body Sem_Ch13 is\n          --  Special case, the expression of these aspects is just an entity\n          --  that does not need any resolution, so just analyze.\n \n-         when Aspect_Input           |\n-              Aspect_Output          |\n-              Aspect_Read            |\n-              Aspect_Suppress        |\n-              Aspect_Unsuppress      |\n-              Aspect_Warnings        |\n-              Aspect_Write           =>\n+         when Aspect_Input      |\n+              Aspect_Output     |\n+              Aspect_Read       |\n+              Aspect_Suppress   |\n+              Aspect_Unsuppress |\n+              Aspect_Warnings   |\n+              Aspect_Write      =>\n             Analyze (Expression (ASN));\n             return;\n \n          --  Same for Iterator aspects, where the expression is a function\n          --  name. Legality rules are checked separately.\n \n-         when Aspect_Constant_Indexing    |\n-              Aspect_Default_Iterator     |\n-              Aspect_Iterator_Element     |\n-              Aspect_Variable_Indexing    =>\n+         when Aspect_Constant_Indexing |\n+              Aspect_Default_Iterator  |\n+              Aspect_Iterator_Element  |\n+              Aspect_Variable_Indexing =>\n             Analyze (Expression (ASN));\n             return;\n \n@@ -7599,14 +7595,13 @@ package body Sem_Ch13 is\n       Ritem : Node_Id;\n \n       procedure Analyze_Aspect_Default_Value (ASN : Node_Id);\n-      --  This routine analyzes an Aspect_Default_Value or\n-      --  Aspect_Default_Component_Value denoted by the aspect specification\n-      --  node ASN.\n+      --  This routine analyzes an Aspect_Default_[Component_]Value denoted by\n+      --  the aspect specification node ASN.\n \n       procedure Make_Pragma_From_Boolean_Aspect (ASN : Node_Id);\n       --  Given an aspect specification node ASN whose expression is an\n-      --  optional Boolean, this routines creates the corresponding pragma at\n-      --  the freezing point.\n+      --  optional Boolean, this routines creates the corresponding pragma\n+      --  at the freezing point.\n \n       ----------------------------------\n       -- Analyze_Aspect_Default_Value --"}, {"sha": "355e11e51b668baaaff9b7cfd31a64dfd4c606f8", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -309,6 +309,5 @@ package Sem_Ch13 is\n    --  Again, ASN is the N_Aspect_Specification node for the aspect.\n \n    procedure Evaluate_Aspects_At_Freeze_Point (E : Entity_Id);\n-   --  This routines evaluates all the delayed aspects for entity E at freezing\n-   --  point.\n+   --  Evaluates all the delayed aspects for entity E at freezing point\n end Sem_Ch13;"}, {"sha": "fd90b72d63627928a326a3a45fbc53064614328f", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -1688,6 +1688,11 @@ package body Sem_Ch8 is\n       --    have one. Otherwise the subtype of Sub's return profile must\n       --    exclude null.\n \n+      procedure Freeze_Actual_Profile;\n+      --  In Ada 2012, enforce the freezing rule concerning formal incomplete\n+      --  types: a callable entity freezes its profile, unless it has an\n+      --  incomplete untagged formal (RM 13.14(10.2/3)).\n+\n       function Original_Subprogram (Subp : Entity_Id) return Entity_Id;\n       --  Find renamed entity when the declaration is a renaming_as_body and\n       --  the renamed entity may itself be a renaming_as_body. Used to enforce\n@@ -1925,6 +1930,57 @@ package body Sem_Ch8 is\n          end if;\n       end Check_Null_Exclusion;\n \n+      ---------------------------\n+      -- Freeze_Actual_Profile --\n+      ---------------------------\n+\n+      procedure Freeze_Actual_Profile is\n+         F                  : Entity_Id;\n+         Has_Untagged_Inc   : Boolean;\n+         Instantiation_Node : constant Node_Id := Parent (N);\n+\n+      begin\n+         if Ada_Version >= Ada_2012 then\n+            F := First_Formal (Formal_Spec);\n+            Has_Untagged_Inc := False;\n+            while Present (F) loop\n+               if Ekind (Etype (F)) = E_Incomplete_Type\n+                 and then not Is_Tagged_Type (Etype (F))\n+               then\n+                  Has_Untagged_Inc := True;\n+                  exit;\n+               end if;\n+\n+               F := Next_Formal (F);\n+            end loop;\n+\n+            if Ekind (Formal_Spec) = E_Function\n+              and then Ekind (Etype (Formal_Spec)) = E_Incomplete_Type\n+              and then not Is_Tagged_Type (Etype (F))\n+            then\n+               Has_Untagged_Inc := True;\n+            end if;\n+\n+            if not Has_Untagged_Inc then\n+               F := First_Formal (Old_S);\n+               while Present (F) loop\n+                  Freeze_Before (Instantiation_Node, Etype (F));\n+\n+                  if Is_Incomplete_Or_Private_Type (Etype (F))\n+                    and then No (Underlying_Type (Etype (F)))\n+                    and then not Is_Generic_Type (Etype (F))\n+                  then\n+                     Error_Msg_NE\n+                       (\"type& must be frozen before this point\",\n+                          Instantiation_Node, Etype (F));\n+                  end if;\n+\n+                  F := Next_Formal (F);\n+               end loop;\n+            end if;\n+         end if;\n+      end Freeze_Actual_Profile;\n+\n       ---------------------------\n       -- Has_Class_Wide_Actual --\n       ---------------------------\n@@ -2702,6 +2758,7 @@ package body Sem_Ch8 is\n \n          if Is_Actual then\n             Freeze_Before (N, Old_S);\n+            Freeze_Actual_Profile;\n             Set_Has_Delayed_Freeze (New_S, False);\n             Freeze_Before (N, New_S);\n "}, {"sha": "1ab0b8ceca4bfad7004e7ee976fc0baf27b137cc", "filename": "gcc/ada/sem_ch9.ads", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch9.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_ch9.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.ads?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -55,23 +55,22 @@ package Sem_Ch9  is\n    procedure Analyze_Triggering_Alternative             (N : Node_Id);\n \n    procedure Install_Declarations (Spec : Entity_Id);\n-   --  Utility to make visible in corresponding body the entities defined in\n-   --  task, protected type declaration, or entry declaration.\n+   --  Make visible in corresponding body the entities defined in a task,\n+   --  protected type declaration, or entry declaration.\n \n    procedure Install_Discriminants (E : Entity_Id);\n-   --  Utility to make visible the discriminants of type entity E\n+   --  Make visible the discriminants of type entity E\n \n    procedure Push_Scope_And_Install_Discriminants (E : Entity_Id);\n-   --  Utility that pushes the scope E and makes visible the discriminants of\n-   --  type entity E if E has discriminants.\n+   --  Push scope E and makes visible the discriminants of type entity E if E\n+   --  has discriminants.\n \n    procedure Uninstall_Discriminants (E : Entity_Id);\n-   --  Utility that removes the visibility to the discriminants of type entity\n-   --  E.\n+   --  Remove visibility to the discriminants of type entity E\n \n    procedure Uninstall_Discriminants_And_Pop_Scope (E : Entity_Id);\n-   --  Utility that removes the visibility to the discriminants of type entity\n-   --  E and pop the scope stack if E has discriminants.\n+   --  Remove visibility to the discriminants of type entity E and pop the\n+   --  scope stack if E has discriminants.\n \n    ------------------------------\n    -- Lock Free Data Structure --"}, {"sha": "72fe18e52a22b80023b5df54177e7016f1e571c6", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -1622,9 +1622,7 @@ package body Sem_Prag is\n             --  For a single protected or a single task object, the error is\n             --  issued on the original entity.\n \n-            if Ekind (Id) = E_Task_Type\n-              or else Ekind (Id) = E_Protected_Type\n-            then\n+            if Ekind_In (Id, E_Task_Type, E_Protected_Type) then\n                Id := Defining_Identifier (Original_Node (Parent (Id)));\n             end if;\n "}, {"sha": "c2ae5195cf69ffec1ce6792301e2b7bcce75f0da", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/02e4edeaf41e6a15fdd59c476ef7592275b568c6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=02e4edeaf41e6a15fdd59c476ef7592275b568c6", "patch": "@@ -2259,6 +2259,7 @@ package body Sem_Util is\n             end if;\n \n             if Wmsg then\n+\n                --  Check whether the context is an Init_Proc\n \n                if Inside_Init_Proc then"}]}