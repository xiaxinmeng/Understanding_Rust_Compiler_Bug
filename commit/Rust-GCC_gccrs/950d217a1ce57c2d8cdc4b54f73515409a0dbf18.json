{"sha": "950d217a1ce57c2d8cdc4b54f73515409a0dbf18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUwZDIxN2ExY2U1N2MyZDhjZGM0YjU0ZjczNTE1NDA5YTBkYmYxOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-24T09:15:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-06-24T09:15:17Z"}, "message": "[multiple changes]\n\n2009-06-24  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_ch4.adb (Expand_N_Type_Conversion): return immediately\n\tfrom processing the type conversion when the node is\n\treplaced by an N_Raise_Program_Error node.\n\n2009-06-24  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch6.adb (Designates_From_With_Type): New routine.\n\t(Process_Formals): Since anonymous access types are no longer flagged\n\tas from with types, traverse the designated type to determine whether\n\tit is coming from a limited view.\n\n\t* sem_res.adb: Remove with and use clauses for Sem_Ch10.\n\t(Full_Designated_Type): Use Available_View to extract the non-limited /\n\tfull view of a type.\n\nFrom-SVN: r148899", "tree": {"sha": "457c6c4d8bef46c8bb6dd48f175232555e39ec22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/457c6c4d8bef46c8bb6dd48f175232555e39ec22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/950d217a1ce57c2d8cdc4b54f73515409a0dbf18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/950d217a1ce57c2d8cdc4b54f73515409a0dbf18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/950d217a1ce57c2d8cdc4b54f73515409a0dbf18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/comments", "author": null, "committer": null, "parents": [{"sha": "dd3e1ff52932c9093fa88a9dac4fd586536c4279", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3e1ff52932c9093fa88a9dac4fd586536c4279", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd3e1ff52932c9093fa88a9dac4fd586536c4279"}], "stats": {"total": 65, "additions": 51, "deletions": 14}, "files": [{"sha": "8a097f4436a86b26cabbd0ef622bd30a59fc7b28", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=950d217a1ce57c2d8cdc4b54f73515409a0dbf18", "patch": "@@ -1,3 +1,20 @@\n+2009-06-24  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_ch4.adb (Expand_N_Type_Conversion): return immediately\n+\tfrom processing the type conversion when the node is\n+\treplaced by an N_Raise_Program_Error node.\n+\n+2009-06-24  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch6.adb (Designates_From_With_Type): New routine.\n+\t(Process_Formals): Since anonymous access types are no longer flagged\n+\tas from with types, traverse the designated type to determine whether\n+\tit is coming from a limited view.\n+\n+\t* sem_res.adb: Remove with and use clauses for Sem_Ch10.\n+\t(Full_Designated_Type): Use Available_View to extract the non-limited /\n+\tfull view of a type.\n+\n 2009-06-24  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_ch6.adb: Minor reformatting"}, {"sha": "1862cb5d9aaffe0aa8923b6fc2dba5a901a456f0", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=950d217a1ce57c2d8cdc4b54f73515409a0dbf18", "patch": "@@ -7860,6 +7860,8 @@ package body Exp_Ch4 is\n               Make_Raise_Program_Error (Sloc (N),\n                 Reason => PE_Accessibility_Check_Failed));\n             Set_Etype (N, Target_Type);\n+\n+            return;\n          end if;\n       end if;\n "}, {"sha": "dfd0cd424d0b399db317324966ff3268620868c1", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=950d217a1ce57c2d8cdc4b54f73515409a0dbf18", "patch": "@@ -7837,11 +7837,36 @@ package body Sem_Ch6 is\n       First_Out_Param : Entity_Id := Empty;\n       --  Used for setting Is_Only_Out_Parameter\n \n+      function Designates_From_With_Type (Typ : Entity_Id) return Boolean;\n+      --  Determine whether an access type designates a type coming from a\n+      --  limited view.\n+\n       function Is_Class_Wide_Default (D : Node_Id) return Boolean;\n       --  Check whether the default has a class-wide type. After analysis the\n       --  default has the type of the formal, so we must also check explicitly\n       --  for an access attribute.\n \n+      -------------------------------\n+      -- Designates_From_With_Type --\n+      -------------------------------\n+\n+      function Designates_From_With_Type (Typ : Entity_Id) return Boolean is\n+         Desig : Entity_Id := Typ;\n+\n+      begin\n+         if Is_Access_Type (Desig) then\n+            Desig := Directly_Designated_Type (Desig);\n+         end if;\n+\n+         if Is_Class_Wide_Type (Desig) then\n+            Desig := Root_Type (Desig);\n+         end if;\n+\n+         return\n+           Ekind (Desig) = E_Incomplete_Type\n+             and then From_With_Type (Desig);\n+      end Designates_From_With_Type;\n+\n       ---------------------------\n       -- Is_Class_Wide_Default --\n       ---------------------------\n@@ -8031,7 +8056,7 @@ package body Sem_Ch6 is\n             --  is also class-wide.\n \n             if Ekind (Formal_Type) = E_Anonymous_Access_Type\n-              and then not From_With_Type (Formal_Type)\n+              and then not Designates_From_With_Type (Formal_Type)\n               and then Is_Class_Wide_Default (Default)\n               and then not Is_Class_Wide_Type (Designated_Type (Formal_Type))\n             then"}, {"sha": "c797d8caef160bb88803aa609489a4ea86418fc3", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950d217a1ce57c2d8cdc4b54f73515409a0dbf18/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=950d217a1ce57c2d8cdc4b54f73515409a0dbf18", "patch": "@@ -9620,26 +9620,19 @@ package body Sem_Res is\n             --------------------------\n \n             function Full_Designated_Type (T : Entity_Id) return Entity_Id is\n-               Desig : Entity_Id := Designated_Type (T);\n+               Desig : constant Entity_Id := Designated_Type (T);\n \n             begin\n+               --  Handle the limited view of a type\n+\n                if Is_Incomplete_Type (Desig)\n                  and then From_With_Type (Desig)\n                  and then Present (Non_Limited_View (Desig))\n                then\n-                  Desig := Non_Limited_View (Desig);\n-\n-                  --  The shadow entity's non-limited view may designate an\n-                  --  incomplete type.\n-\n-                  if Is_Incomplete_Type (Desig)\n-                    and then Present (Full_View (Desig))\n-                  then\n-                     Desig := Full_View (Desig);\n-                  end if;\n+                  return Available_View (Desig);\n+               else\n+                  return Desig;\n                end if;\n-\n-               return Desig;\n             end Full_Designated_Type;\n \n             --  Local Declarations"}]}