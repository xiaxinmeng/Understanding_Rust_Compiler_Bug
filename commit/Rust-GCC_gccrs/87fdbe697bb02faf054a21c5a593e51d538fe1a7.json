{"sha": "87fdbe697bb02faf054a21c5a593e51d538fe1a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODdmZGJlNjk3YmIwMmZhZjA1NGEyMWM1YTU5M2U1MWQ1MzhmZTFhNw==", "commit": {"author": {"name": "Kwok Cheung Yeung", "email": "kcy@codesourcery.com", "date": "2019-11-15T16:32:29Z"}, "committer": {"name": "Kwok Cheung Yeung", "email": "kcy@gcc.gnu.org", "date": "2019-11-15T16:32:29Z"}, "message": "[amdgcn] Update lower bounds for the number of registers in non-leaf kernels\n\nReduce the lower limits on the number of registers requested by non-leaf\nkernels to help improve CU occupancy.\n\n2019-11-15  Kwok Cheung Yeung  <kcy@codesourcery.com>\n\n\tgcc/\n\t* config/gcn/gcn.c (MAX_NORMAL_SGPR_COUNT, MAX_NORMAL_VGPR_COUNT): New.\n\t(gcn_conditional_register_usage): Use constants in place of hard-coded\n\tvalues.\n\t(gcn_hsa_declare_function_name): Set lower bound for number of\n\tSGPRs/VGPRs in non-leaf kernels to MAX_NORMAL_SGPR_COUNT and\n\tMAX_NORMAL_VGPR_COUNT.\n\nFrom-SVN: r278305", "tree": {"sha": "3c09462b26a4762ed36b6e0bfabeeb4c69718958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c09462b26a4762ed36b6e0bfabeeb4c69718958"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/87fdbe697bb02faf054a21c5a593e51d538fe1a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fdbe697bb02faf054a21c5a593e51d538fe1a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/87fdbe697bb02faf054a21c5a593e51d538fe1a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/87fdbe697bb02faf054a21c5a593e51d538fe1a7/comments", "author": {"login": "k-yeung", "id": 16960193, "node_id": "MDQ6VXNlcjE2OTYwMTkz", "avatar_url": "https://avatars.githubusercontent.com/u/16960193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/k-yeung", "html_url": "https://github.com/k-yeung", "followers_url": "https://api.github.com/users/k-yeung/followers", "following_url": "https://api.github.com/users/k-yeung/following{/other_user}", "gists_url": "https://api.github.com/users/k-yeung/gists{/gist_id}", "starred_url": "https://api.github.com/users/k-yeung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/k-yeung/subscriptions", "organizations_url": "https://api.github.com/users/k-yeung/orgs", "repos_url": "https://api.github.com/users/k-yeung/repos", "events_url": "https://api.github.com/users/k-yeung/events{/privacy}", "received_events_url": "https://api.github.com/users/k-yeung/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1ca59cbe15c56dce1efb1ed26863ee01109d513f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ca59cbe15c56dce1efb1ed26863ee01109d513f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ca59cbe15c56dce1efb1ed26863ee01109d513f"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "8c06b824d62ffe20ed4045b9a175936992138017", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fdbe697bb02faf054a21c5a593e51d538fe1a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fdbe697bb02faf054a21c5a593e51d538fe1a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=87fdbe697bb02faf054a21c5a593e51d538fe1a7", "patch": "@@ -1,3 +1,12 @@\n+2019-11-15  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\n+\t* config/gcn/gcn.c (MAX_NORMAL_SGPR_COUNT, MAX_NORMAL_VGPR_COUNT): New.\n+\t(gcn_conditional_register_usage): Use constants in place of hard-coded\n+\tvalues.\n+\t(gcn_hsa_declare_function_name): Set lower bound for number of\n+\tSGPRs/VGPRs in non-leaf kernels to MAX_NORMAL_SGPR_COUNT and\n+\tMAX_NORMAL_VGPR_COUNT.\n+\n 2019-11-15  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-utils.h (ipa_remove_useless_jump_functions): Remove stray"}, {"sha": "4401896d4411e0b6ebad6a869ffbea1ede695511", "filename": "gcc/config/gcn/gcn.c", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/87fdbe697bb02faf054a21c5a593e51d538fe1a7/gcc%2Fconfig%2Fgcn%2Fgcn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/87fdbe697bb02faf054a21c5a593e51d538fe1a7/gcc%2Fconfig%2Fgcn%2Fgcn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.c?ref=87fdbe697bb02faf054a21c5a593e51d538fe1a7", "patch": "@@ -75,6 +75,12 @@ int gcn_isa = 3;\t\t/* Default to GCN3.  */\n \n #define LDS_SIZE 65536\n \n+/* The number of registers usable by normal non-kernel functions.\n+   The SGPR count includes any special extra registers such as VCC.  */\n+\n+#define MAX_NORMAL_SGPR_COUNT\t64\n+#define MAX_NORMAL_VGPR_COUNT\t24\n+\n /* }}}  */\n /* {{{ Initialization and options.  */\n \n@@ -2053,10 +2059,12 @@ gcn_conditional_register_usage (void)\n   if (cfun->machine->normal_function)\n     {\n       /* Restrict the set of SGPRs and VGPRs used by non-kernel functions.  */\n-      for (int i = SGPR_REGNO (62); i <= LAST_SGPR_REG; i++)\n+      for (int i = SGPR_REGNO (MAX_NORMAL_SGPR_COUNT - 2);\n+\t   i <= LAST_SGPR_REG; i++)\n \tfixed_regs[i] = 1, call_used_regs[i] = 1;\n \n-      for (int i = VGPR_REGNO (24); i <= LAST_VGPR_REG; i++)\n+      for (int i = VGPR_REGNO (MAX_NORMAL_VGPR_COUNT);\n+\t   i <= LAST_VGPR_REG; i++)\n \tfixed_regs[i] = 1, call_used_regs[i] = 1;\n \n       return;\n@@ -4908,10 +4916,10 @@ gcn_hsa_declare_function_name (FILE *file, const char *name, tree)\n   if (!leaf_function_p ())\n     {\n       /* We can't know how many registers function calls might use.  */\n-      if (vgpr < 64)\n-\tvgpr = 64;\n-      if (sgpr + extra_regs < 102)\n-\tsgpr = 102 - extra_regs;\n+      if (vgpr < MAX_NORMAL_VGPR_COUNT)\n+\tvgpr = MAX_NORMAL_VGPR_COUNT;\n+      if (sgpr + extra_regs < MAX_NORMAL_SGPR_COUNT)\n+\tsgpr = MAX_NORMAL_SGPR_COUNT - extra_regs;\n     }\n \n   fputs (\"\\t.align\\t256\\n\", file);"}]}