{"sha": "1ab83276edecdf4237e07a41301efa97bebc8726", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFiODMyNzZlZGVjZGY0MjM3ZTA3YTQxMzAxZWZhOTdiZWJjODcyNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-02-27T06:54:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-02-27T06:54:06Z"}, "message": "update\n\nFrom-SVN: r32213", "tree": {"sha": "212da3799e5b63af82e9c13947df06074a0d8203", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/212da3799e5b63af82e9c13947df06074a0d8203"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ab83276edecdf4237e07a41301efa97bebc8726", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab83276edecdf4237e07a41301efa97bebc8726", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ab83276edecdf4237e07a41301efa97bebc8726", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ab83276edecdf4237e07a41301efa97bebc8726/comments", "author": null, "committer": null, "parents": [{"sha": "aa52c1ffad50ffe721a19a816f474c56958b1d3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa52c1ffad50ffe721a19a816f474c56958b1d3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa52c1ffad50ffe721a19a816f474c56958b1d3a"}], "stats": {"total": 80, "additions": 64, "deletions": 16}, "files": [{"sha": "6897fe943a46146b039dda548a68aa8cf96ef40a", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/14687.C", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14687.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14687.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F14687.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -1,6 +1,5 @@\n // 981203 bkoz\n // g++/14687\n-// excess errors test - XFAIL *-*-*\n \n #include <assert.h>\n unsigned int gtest;"}, {"sha": "582723ab9f9f8febcc8078ade8067ec83c7da793", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/scope01.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fscope01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fscope01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2Fscope01.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -19,8 +19,8 @@ class C : public A, public B {};\n void foo() {\n   // straight call\n   C x;\n-  x.A::ii = 5;\n-  x.A::foo(x.A::ii);\n+  x.A::ii = 5;\t\t\t// ERROR - L is ambiguous base\n+  x.A::foo(x.A::ii);\t\t// ERROR - L is ambiguous base\n   \n   // 5.1 Primary expressions\n   // p 8 "}, {"sha": "30c4feb42a2117cc5a9e1ff2e250368c7b806cb5", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/misc15.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fmisc15.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -1,6 +1,6 @@\n // Build don't link: \n // GROUPS passed miscellaneous-bugs\n-// we shouldn't get any warnings or errors for this code\n+\n struct A {\n         int     aa;\n };\n@@ -9,5 +9,5 @@ struct B : public A {\n struct C : public A {\n };\n struct D : public C, public B {\n-        void fun() { C::aa = 10; }\n+        void fun() { C::aa = 10; } // ERROR - conversion to A is ambiguous\n };"}, {"sha": "d736826a9e53d33f2dd051bdef0efc8b85b4ede3", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate18.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -1,6 +1,6 @@\n // GROUPS passed templates\n // Bug: g++ emits template instances when it shouldn't.\n-// Special g++ Options: -g -Wno-deprecated -fexternal-templates\n+// Special g++ Options: -g -O0 -Wno-deprecated -fexternal-templates\n \n // We mark this XFAIL because we can't test for expected linker errors.\n // If we get an XPASS for this testcase, that's a bug."}, {"sha": "ba1299d29993f78466bf464a261b62a6e19648fb", "filename": "gcc/testsuite/g++.old-deja/g++.law/visibility26.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fvisibility26.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -13,6 +13,6 @@ class X {\n \n class Y : private X {\n   public:\n-    void f(int);// ERROR -    because.*\n-    X::f;  // g++ 2.5.5 doesn't flag this misuse\n-};// ERROR -  cannot adjust.*\n+    void f(int);\n+    X::f;  // used to be an error; now equivalent to 'using X::f'\n+};"}, {"sha": "bec78f845c16a24daf144c334505cb678f2be83b", "filename": "gcc/testsuite/g++.old-deja/g++.other/lookup18.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Flookup18.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -0,0 +1,23 @@\n+// Test that referring to an ambiguous base in name lookup does not\n+// interfere with accessing the field, which is not ambiguous.\n+\n+// Build don't link:\n+\n+struct A {\n+  int i;\n+};\n+struct B: virtual A { };\n+struct C: public B { };\n+struct D: public B { };\n+struct E: public C, public D {\n+  void f ();\n+};\n+\n+void E::f() {\n+  B::i = 0;\n+}\n+\n+void f () {\n+  E e;\n+  e.B::i = 0;\n+}"}, {"sha": "cb457bfafb4ebd8d906e049eb8e171c140f47d07", "filename": "gcc/testsuite/g++.old-deja/g++.other/using2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing2.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -5,6 +5,6 @@ struct X{\n \n struct Y:X{\n   void f(int);\n-  void f();         // ERROR - conflict\n+  void f();\n   using X::f;\n-};                  // ERROR - \n+};"}, {"sha": "bb653e491ee32f3ee18d696f78c4eb2279b68c3a", "filename": "gcc/testsuite/g++.old-deja/g++.other/using4.C", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing4.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -2,8 +2,6 @@\n \n // Based on a testcase by Martin Bachtold <martinb@coyotesystems.com>\n \n-// excess errors test - XFAIL *-*-*\n-\n struct foo {\n   void m();\n };"}, {"sha": "40b21b5e3e2c1027c541ffdefec794192996aa6c", "filename": "gcc/testsuite/g++.old-deja/g++.other/using6.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fusing6.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -0,0 +1,29 @@\n+// Test of class-scope using-declaration for functions.\n+\n+#define assert(COND) if (!(COND)) return 1\n+\n+struct A {\n+  int f(int) { return 1; }\n+  int f(char) { return 2; }\n+};\n+\n+struct B {\n+  int f(double) { return 3; }\n+};\n+\n+struct C : public A, public B {\n+  using A::f;\n+  using B::f;\n+  int f(char) { return 4; }\n+  int f(C) { return 5; }\n+};\n+\n+int main ()\n+{\n+  C c;\n+\n+  assert (c.f(1) == 1);\n+  assert (c.f('a') == 4);\n+  assert (c.f(2.0) == 3);\n+  assert (c.f(c) == 5);\n+}"}, {"sha": "768b374c2801e2d58351e583b20a98f68f222057", "filename": "gcc/testsuite/g++.old-deja/g++.pt/memtemp89.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp89.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ab83276edecdf4237e07a41301efa97bebc8726/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp89.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fmemtemp89.C?ref=1ab83276edecdf4237e07a41301efa97bebc8726", "patch": "@@ -1,5 +1,4 @@\n // Build don't link:\n-// crash test - XFAIL *-*-*\n \n // by Paul Burchard <burchard@pobox.com>, Level Set Systems, Inc.\n // Copyright (C) 1999 Free Software Foundation\n@@ -11,7 +10,7 @@ class Q {\n };\n template<template<class> class XX>\n class Y {\n-\tXX<int> x_;\n+\tXX<int> x_;\t\t// ERROR - Q::X not a template\n };\n-Y<Q::X> y;\n+Y<Q::X> y;\t\t\t// ERROR - instantiated from here\n "}]}