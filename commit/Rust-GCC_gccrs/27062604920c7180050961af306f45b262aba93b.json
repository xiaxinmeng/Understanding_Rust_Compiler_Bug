{"sha": "27062604920c7180050961af306f45b262aba93b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjcwNjI2MDQ5MjBjNzE4MDA1MDk2MWFmMzA2ZjQ1YjI2MmFiYTkzYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-07T20:10:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-07T20:10:44Z"}, "message": "re PR c++/48008 (libstdc++-v3/testsuite/20_util/function/43397.cc fails to assemble with -fabi-version=5)\n\n\tPR c++/48008\n\t* mangle.c (write_type): Strip cv-quals from FUNCTION_TYPE here.\n\t(write_CV_qualifiers_for_type): Not here.\n\nFrom-SVN: r170752", "tree": {"sha": "7114f34248ea1d2ab3cc3d8acb50bc5ed266d1b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7114f34248ea1d2ab3cc3d8acb50bc5ed266d1b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27062604920c7180050961af306f45b262aba93b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27062604920c7180050961af306f45b262aba93b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27062604920c7180050961af306f45b262aba93b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27062604920c7180050961af306f45b262aba93b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "43070a6e9b83d07021fb1a9c70e9358a0d76e004", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43070a6e9b83d07021fb1a9c70e9358a0d76e004", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43070a6e9b83d07021fb1a9c70e9358a0d76e004"}], "stats": {"total": 54, "additions": 41, "deletions": 13}, "files": [{"sha": "03fe7def98315a300234251f4298e5174894ba20", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27062604920c7180050961af306f45b262aba93b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27062604920c7180050961af306f45b262aba93b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=27062604920c7180050961af306f45b262aba93b", "patch": "@@ -1,3 +1,9 @@\n+2011-03-07  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48008\n+\t* mangle.c (write_type): Strip cv-quals from FUNCTION_TYPE here.\n+\t(write_CV_qualifiers_for_type): Not here.\n+\n 2011-03-06  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lang-specs.h: Match -save-temps* instead of -save-temps."}, {"sha": "c46ba305def371ae6acddbac7982f059821f95fb", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27062604920c7180050961af306f45b262aba93b/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27062604920c7180050961af306f45b262aba93b/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=27062604920c7180050961af306f45b262aba93b", "patch": "@@ -1880,16 +1880,25 @@ write_type (tree type)\n \t      break;\n \n \t    case POINTER_TYPE:\n-\t      write_char ('P');\n-\t      write_type (TREE_TYPE (type));\n-\t      break;\n-\n \t    case REFERENCE_TYPE:\n-\t      if (TYPE_REF_IS_RVALUE (type))\n-        \twrite_char('O');\n+\t      if (TREE_CODE (type) == POINTER_TYPE)\n+\t\twrite_char ('P');\n+\t      else if (TYPE_REF_IS_RVALUE (type))\n+\t\twrite_char ('O');\n               else\n                 write_char ('R');\n-\t      write_type (TREE_TYPE (type));\n+\t      {\n+\t\ttree target = TREE_TYPE (type);\n+\t\t/* Attribute const/noreturn are not reflected in mangling.\n+\t\t   We strip them here rather than at a lower level because\n+\t\t   a typedef or template argument can have function type\n+\t\t   with function-cv-quals (that use the same representation),\n+\t\t   but you can't have a pointer/reference to such a type.  */\n+\t\tif (abi_version_at_least (5)\n+\t\t    && TREE_CODE (target) == FUNCTION_TYPE)\n+\t\t  target = build_qualified_type (target, TYPE_UNQUALIFIED);\n+\t\twrite_type (target);\n+\t      }\n \t      break;\n \n \t    case TEMPLATE_TYPE_PARM:\n@@ -2017,12 +2026,6 @@ write_CV_qualifiers_for_type (const tree type)\n      array.  */\n   cp_cv_quals quals = TYPE_QUALS (type);\n \n-  /* Attribute const/noreturn are not reflected in mangling.  */\n-  if (abi_version_at_least (5)\n-      && (TREE_CODE (type) == FUNCTION_TYPE\n-\t  || TREE_CODE (type) == METHOD_TYPE))\n-    return 0;\n-\n   if (quals & TYPE_QUAL_RESTRICT)\n     {\n       write_char ('r');"}, {"sha": "71fc429469c09ce3f35ba5218391ce04d61b8bb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27062604920c7180050961af306f45b262aba93b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27062604920c7180050961af306f45b262aba93b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=27062604920c7180050961af306f45b262aba93b", "patch": "@@ -1,3 +1,7 @@\n+2011-03-07  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/abi/mangle46.C: New.\n+\n 2011-03-07  Pat Haugen <pthaugen@us.ibm.com>\n \n \tPR target/47862"}, {"sha": "fddc88d0ad450efec8135c89136438cbf37c3952", "filename": "gcc/testsuite/g++.dg/abi/mangle46.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27062604920c7180050961af306f45b262aba93b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle46.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27062604920c7180050961af306f45b262aba93b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle46.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmangle46.C?ref=27062604920c7180050961af306f45b262aba93b", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/48008\n+// { dg-options -fabi-version=5 }\n+// Test that we retain function-cv-quals in template argument mangling.\n+\n+template <class T>\n+struct A\n+{ };\n+\n+typedef void cfn(int) const;\n+typedef void fn(int);\n+\n+// { dg-final { scan-assembler  \"_Z1f1AIFviEE\" } }\n+void f(A<fn>) { }\n+// { dg-final { scan-assembler  \"_Z1f1AIKFviEE\" } }\n+void f(A<cfn>) { }"}]}