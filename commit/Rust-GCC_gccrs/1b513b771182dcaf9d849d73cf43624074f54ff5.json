{"sha": "1b513b771182dcaf9d849d73cf43624074f54ff5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI1MTNiNzcxMTgyZGNhZjlkODQ5ZDczY2Y0MzYyNDA3NGY1NGZmNQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2000-04-27T15:34:16Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-04-27T15:34:16Z"}, "message": "* function.c (epilogue_done): Pass whole insn to record_insns.\n\nFrom-SVN: r33488", "tree": {"sha": "2a937fa2d4d674c2fa40f6bc9a6b243a9de188de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a937fa2d4d674c2fa40f6bc9a6b243a9de188de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b513b771182dcaf9d849d73cf43624074f54ff5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b513b771182dcaf9d849d73cf43624074f54ff5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b513b771182dcaf9d849d73cf43624074f54ff5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b513b771182dcaf9d849d73cf43624074f54ff5/comments", "author": null, "committer": null, "parents": [{"sha": "8e02c4d08d74b07290d9f18eae923e5a77914f62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e02c4d08d74b07290d9f18eae923e5a77914f62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e02c4d08d74b07290d9f18eae923e5a77914f62"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "e309f7eea630ebc26a63306e02e8872554f2cf1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b513b771182dcaf9d849d73cf43624074f54ff5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b513b771182dcaf9d849d73cf43624074f54ff5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b513b771182dcaf9d849d73cf43624074f54ff5", "patch": "@@ -1,3 +1,7 @@\n+Thu Apr 27 17:33:05 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n+\n+\t* function.c (epilogue_done): Pass whole insn to record_insns.\n+\n Thu Apr 27 16:55:28 MET DST 2000  Jan Hubicka  <jh@suse.cz>\n \n \t* cse.c (CSE_ADDRESS_COST): Remove."}, {"sha": "131d88bf46ec909249df5956379c2d5e1b6fc4ef", "filename": "gcc/flow.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b513b771182dcaf9d849d73cf43624074f54ff5/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b513b771182dcaf9d849d73cf43624074f54ff5/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=1b513b771182dcaf9d849d73cf43624074f54ff5", "patch": "@@ -4000,6 +4000,8 @@ mark_set_1 (pbi, code, reg, cond, insn, flags)\n \t     || GET_CODE (reg) == ZERO_EXTRACT\n \t     || GET_CODE (reg) == SIGN_EXTRACT\n \t     || GET_CODE (reg) == STRICT_LOW_PART);\n+      if (GET_CODE (reg) == MEM)\n+\tbreak;\n       not_dead = REGNO_REG_SET_P (pbi->reg_live, REGNO (reg));\n       /* FALLTHRU */\n "}, {"sha": "756f5fcb8b493a4dc4f954004919400857aff5eb", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b513b771182dcaf9d849d73cf43624074f54ff5/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b513b771182dcaf9d849d73cf43624074f54ff5/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=1b513b771182dcaf9d849d73cf43624074f54ff5", "patch": "@@ -7025,6 +7025,7 @@ thread_prologue_and_epilogue_insns (f)\n       basic_block bb = e->src;\n       rtx insn = bb->end;\n       rtx i;\n+      rtx newinsn;\n \n       if (GET_CODE (insn) != CALL_INSN\n \t  || ! SIBLING_CALL_P (insn))\n@@ -7035,15 +7036,16 @@ thread_prologue_and_epilogue_insns (f)\n       end_sequence ();\n \n       i = PREV_INSN (insn);\n-      emit_insn_before (seq, insn);\n+      newinsn = emit_insn_before (seq, insn);\n \n       /* Update the UID to basic block map.  */\n       for (i = NEXT_INSN (i); i != insn; i = NEXT_INSN (i))\n \tset_block_for_insn (i, bb);\n \n       /* Retain a map of the epilogue insns.  Used in life analysis to\n \t avoid getting rid of sibcall epilogue insns.  */\n-      record_insns (seq, &sibcall_epilogue);\n+      record_insns (GET_CODE (seq) == SEQUENCE\n+\t\t    ? seq : newinsn, &sibcall_epilogue);\n     }\n #endif\n }"}]}