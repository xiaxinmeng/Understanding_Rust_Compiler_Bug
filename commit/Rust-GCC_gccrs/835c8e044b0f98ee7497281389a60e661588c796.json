{"sha": "835c8e044b0f98ee7497281389a60e661588c796", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM1YzhlMDQ0YjBmOThlZTc0OTcyODEzODlhNjBlNjYxNTg4Yzc5Ng==", "commit": {"author": {"name": "Donn Terry", "email": "donn@interix.com", "date": "1999-03-25T00:48:16Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-03-25T00:48:16Z"}, "message": "combine.c (force_to_mode, case PLUS): Use sign extended mask when masking the low bits out of a constant.\n\n        * combine.c (force_to_mode, case PLUS): Use sign extended mask\n        when masking the low bits out of a constant.\n\nFrom-SVN: r25964", "tree": {"sha": "062017b91fb65501bd9e8848abe4a28fb4ac5363", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/062017b91fb65501bd9e8848abe4a28fb4ac5363"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/835c8e044b0f98ee7497281389a60e661588c796", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835c8e044b0f98ee7497281389a60e661588c796", "html_url": "https://github.com/Rust-GCC/gccrs/commit/835c8e044b0f98ee7497281389a60e661588c796", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/835c8e044b0f98ee7497281389a60e661588c796/comments", "author": null, "committer": null, "parents": [{"sha": "5e7d21e9165388f3c1c8556273117586b55d22c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e7d21e9165388f3c1c8556273117586b55d22c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e7d21e9165388f3c1c8556273117586b55d22c5"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "deba212192b0e8008544359277cf725cc9d3f1bb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835c8e044b0f98ee7497281389a60e661588c796/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835c8e044b0f98ee7497281389a60e661588c796/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=835c8e044b0f98ee7497281389a60e661588c796", "patch": "@@ -1,3 +1,8 @@\n+Thu Mar 25 01:15:33 1999  Donn Terry  <donn@interix.com>\n+\n+\t* combine.c (force_to_mode, case PLUS): Use sign extended mask\n+\twhen masking the low bits out of a constant.\n+\n Tue Mar 23 15:45:25 1999  Richard Earnshaw (rearnsha@arm.com)\n \t\t\t  Jeff Law <law@cygnus.com>\n "}, {"sha": "e0a162ac2b7283138a07ee47994f320a7832ecda", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/835c8e044b0f98ee7497281389a60e661588c796/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/835c8e044b0f98ee7497281389a60e661588c796/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=835c8e044b0f98ee7497281389a60e661588c796", "patch": "@@ -6415,20 +6415,21 @@ force_to_mode (x, mode, mask, reg, just_select)\n                 unsigned HOST_WIDE_INT sp_mask = GET_MODE_MASK (mode);\n           \n \t\tsp_mask &= ~ (sp_alignment - 1);\n-\t\tif ((sp_mask & ~ mask) == 0\n-\t\t    && ((INTVAL (XEXP (x, 1)) - STACK_BIAS) & ~ mask) != 0)\n+\t\tif ((sp_mask & ~ smask) == 0\n+\t\t    && ((INTVAL (XEXP (x, 1)) - STACK_BIAS) & ~ smask) != 0)\n \t\t  return force_to_mode (plus_constant (XEXP (x, 0),\n \t\t  \t\t\t\t       ((INTVAL (XEXP (x, 1)) -\n-\t\t\t\t\t\t\t STACK_BIAS) & mask)\n+\t\t\t\t\t\t\t STACK_BIAS) & smask)\n \t\t\t\t\t\t       + STACK_BIAS),\n-\t\t \t\t\tmode, mask, reg, next_select);\n+\t\t \t\t\tmode, smask, reg, next_select);\n               }\n #endif\n-\t    if ((nonzero_bits (XEXP (x, 0), mode) & ~ mask) == 0\n-\t        && (INTVAL (XEXP (x, 1)) & ~ mask) != 0)\n+\t    if ((nonzero_bits (XEXP (x, 0), mode) & ~ smask) == 0\n+\t        && (INTVAL (XEXP (x, 1)) & ~ smask) != 0)\n \t      return force_to_mode (plus_constant (XEXP (x, 0),\n-\t\t\t\t\t           INTVAL (XEXP (x, 1)) & mask),\n-\t\t\t\t    mode, mask, reg, next_select);\n+\t\t\t\t\t           (INTVAL (XEXP (x, 1))\n+\t\t\t\t\t\t    & smask)),\n+\t\t\t\t    mode, smask, reg, next_select);\n \t  }\n       }\n "}]}