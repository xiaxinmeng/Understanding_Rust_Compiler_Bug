{"sha": "9d27bffe6db1773316c444e5cf1de5fa3a698dc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQyN2JmZmU2ZGIxNzczMzE2YzQ0NGU1Y2YxZGU1ZmEzYTY5OGRjNQ==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2000-03-14T08:24:21Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-03-14T08:24:21Z"}, "message": "c-typeck.c (c_alignof): Error on incomplete types.\n\n        * c-typeck.c (c_alignof): Error on incomplete types.\n        * extend.texi (Alignment): Document this.\n\nFrom-SVN: r32522", "tree": {"sha": "436c07ae50d58c69b35870f134bd22257f49ce84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/436c07ae50d58c69b35870f134bd22257f49ce84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d27bffe6db1773316c444e5cf1de5fa3a698dc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d27bffe6db1773316c444e5cf1de5fa3a698dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d27bffe6db1773316c444e5cf1de5fa3a698dc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d27bffe6db1773316c444e5cf1de5fa3a698dc5/comments", "author": null, "committer": null, "parents": [{"sha": "d9420976f2ab42d24519b10b2ae8671b9aa9661b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9420976f2ab42d24519b10b2ae8671b9aa9661b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9420976f2ab42d24519b10b2ae8671b9aa9661b"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "74499929f3dae157e58d98499c1e2fd4e4b3f160", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d27bffe6db1773316c444e5cf1de5fa3a698dc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d27bffe6db1773316c444e5cf1de5fa3a698dc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d27bffe6db1773316c444e5cf1de5fa3a698dc5", "patch": "@@ -1,3 +1,8 @@\n+2000-03-14  Stan Shebs  <shebs@apple.com>\n+\n+\t* c-typeck.c (c_alignof): Error on incomplete types.\n+\t* extend.texi (Alignment): Document this.\n+\n 2000-03-13  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cppfiles.c: Include mkdeps.h."}, {"sha": "886e07102f6751a48276cc17b4c05c464dae63ce", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d27bffe6db1773316c444e5cf1de5fa3a698dc5/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d27bffe6db1773316c444e5cf1de5fa3a698dc5/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=9d27bffe6db1773316c444e5cf1de5fa3a698dc5", "patch": "@@ -781,6 +781,12 @@ c_alignof (type)\n   if (code == VOID_TYPE || code == ERROR_MARK)\n     return size_one_node;\n \n+  if (TYPE_SIZE (type) == 0)\n+    {\n+      error (\"__alignof__ applied to an incomplete type\");\n+      return size_zero_node;\n+    }\n+\n   return size_int (TYPE_ALIGN (type) / BITS_PER_UNIT);\n }\n \f"}, {"sha": "475241aadde3ae8e422157790d72c3680ecf956e", "filename": "gcc/extend.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d27bffe6db1773316c444e5cf1de5fa3a698dc5/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d27bffe6db1773316c444e5cf1de5fa3a698dc5/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=9d27bffe6db1773316c444e5cf1de5fa3a698dc5", "patch": "@@ -1879,6 +1879,8 @@ the value of @code{__alignof__ (foo1.y)} is probably 2 or 4, the same as\n @code{__alignof__ (int)}, even though the data type of @code{foo1.y}\n does not itself demand any alignment.@refill\n \n+It is an error to ask for the alignment of an incomplete type.\n+\n A related feature which lets you specify the alignment of an object is\n @code{__attribute__ ((aligned (@var{alignment})))}; see the following\n section."}]}