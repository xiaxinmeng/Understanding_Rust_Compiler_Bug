{"sha": "a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTZiMGM3YmM0NTA4YTE3ZmNkOTY5MDgwYjllNzIxZjRkY2Q1YzMwNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-08-08T18:17:21Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-08-08T18:17:21Z"}, "message": "* pt.c (lookup_template_class_1): Copy abi_tag.\n\nFrom-SVN: r213762", "tree": {"sha": "8286334c70fbce318b195b800978193880e5e1e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8286334c70fbce318b195b800978193880e5e1e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff09769fac4d76ae93c1ca473d788b9be6809923", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff09769fac4d76ae93c1ca473d788b9be6809923", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff09769fac4d76ae93c1ca473d788b9be6809923"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "6d3eda2651ffc4d5e819b8227a366a90042f3eba", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "patch": "@@ -1,3 +1,7 @@\n+2014-08-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (lookup_template_class_1): Copy abi_tag.\n+\n 2014-08-08  Kai Tietz  <ktietz@redhat.com>\n \n \t* semantics.c (expand_or_defer_fn_1): Check for keep-inline-dllexport"}, {"sha": "25921722f3865202d7520b4a2c1b42cc86ad495d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "patch": "@@ -7813,6 +7813,12 @@ lookup_template_class_1 (tree d1, tree arglist, tree in_decl, tree context,\n \t    }\n \t}\n \n+      if (OVERLOAD_TYPE_P (t)\n+\t  && !DECL_ALIAS_TEMPLATE_P (gen_tmpl))\n+\tif (tree attributes\n+\t    = lookup_attribute (\"abi_tag\", TYPE_ATTRIBUTES (template_type)))\n+\t  TYPE_ATTRIBUTES (t) = attributes;\n+\n       /* Let's consider the explicit specialization of a member\n          of a class template specialization that is implicitly instantiated,\n \t e.g.:"}, {"sha": "0a6eb5802afeea9f2dc680fc960e93483e3d2897", "filename": "gcc/testsuite/g++.dg/abi/abi-tag8.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6b0c7bc4508a17fcd969080b9e721f4dcd5c305/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fabi-tag8.C?ref=a6b0c7bc4508a17fcd969080b9e721f4dcd5c305", "patch": "@@ -0,0 +1,9 @@\n+// { dg-options \"-Wabi-tag\" }\n+\n+template<class T>\n+struct __attribute ((__abi_tag__(\"cxx11\"))) list // { dg-message \"list\" }\n+{ };\n+\n+struct X {\t\t\t// { dg-warning \"abi tag\" }\n+  list<int> l;\t\t\t// { dg-message \"X::l\" }\n+};"}]}