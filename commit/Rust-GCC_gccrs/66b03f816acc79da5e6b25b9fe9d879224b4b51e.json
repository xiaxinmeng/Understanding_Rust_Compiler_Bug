{"sha": "66b03f816acc79da5e6b25b9fe9d879224b4b51e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjZiMDNmODE2YWNjNzlkYTVlNmIyNWI5ZmU5ZDg3OTIyNGI0YjUxZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-03-04T18:13:12Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-03-04T18:13:12Z"}, "message": "predicates.md (const2356_operand): Change to ...\n\n\t* config/i386/predicates.md (const2356_operand): Change to ...\n\t(const2367_operand): ... this.\n\t* config/i386/sse.md (avx512pf_scatterpf<mode>sf): Use\n\tconst2367_operand.\n\t(*avx512pf_scatterpf<mode>sf_mask): Ditto.\n\t(*avx512pf_scatterpf<mode>sf): Ditto.\n\t(avx512pf_scatterpf<mode>df): Ditto.\n\t(*avx512pf_scatterpf<mode>df_mask): Ditto.\n\t(*avx512pf_scatterpf<mode>df): Ditto.\n\t* config/i386/i386.c (ix86_expand_builtin): Update\n\tincorrect hint operand error message.\n\nFrom-SVN: r208324", "tree": {"sha": "0b5dabc2c479765e2e75f72d91a31d9a6b5eef61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b5dabc2c479765e2e75f72d91a31d9a6b5eef61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/66b03f816acc79da5e6b25b9fe9d879224b4b51e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66b03f816acc79da5e6b25b9fe9d879224b4b51e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66b03f816acc79da5e6b25b9fe9d879224b4b51e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66b03f816acc79da5e6b25b9fe9d879224b4b51e/comments", "author": null, "committer": null, "parents": [{"sha": "fabdcf97a572387959d363a90ef2808b1007bc29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fabdcf97a572387959d363a90ef2808b1007bc29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fabdcf97a572387959d363a90ef2808b1007bc29"}], "stats": {"total": 49, "additions": 31, "deletions": 18}, "files": [{"sha": "3a02c148810cbe919430696b83f7aaf043999e32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b03f816acc79da5e6b25b9fe9d879224b4b51e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b03f816acc79da5e6b25b9fe9d879224b4b51e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=66b03f816acc79da5e6b25b9fe9d879224b4b51e", "patch": "@@ -1,7 +1,21 @@\n+2014-03-04  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/predicates.md (const2356_operand): Change to ...\n+\t(const2367_operand): ... this.\n+\t* config/i386/sse.md (avx512pf_scatterpf<mode>sf): Use\n+\tconst2367_operand.\n+\t(*avx512pf_scatterpf<mode>sf_mask): Ditto.\n+\t(*avx512pf_scatterpf<mode>sf): Ditto.\n+\t(avx512pf_scatterpf<mode>df): Ditto.\n+\t(*avx512pf_scatterpf<mode>df_mask): Ditto.\n+\t(*avx512pf_scatterpf<mode>df): Ditto.\n+\t* config/i386/i386.c (ix86_expand_builtin): Update\n+\tincorrect hint operand error message.\n+\n 2014-03-04  Richard Biener  <rguenther@suse.de>\n \n \t* lto-section-in.c (lto_get_section_data): Fix const cast.\n- \n+\n 2014-03-04  Paulo Matos  <paulo@matos-sorge.com>\n \n         * tree-streamer.c (record_common_node): Assert we don't record\n@@ -13,12 +27,11 @@\n 2014-03-04  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/60405\n-\t* lto-streamer-in.c (lto_read_body): Remove LTO bytecode version\n-\tcheck.\n+\t* lto-streamer-in.c (lto_read_body): Remove LTO bytecode version check.\n \t(lto_input_toplevel_asms): Likewise.\n \t* lto-section-in.c (lto_get_section_data): Instead do it here\n \tfor every section.\n- \n+\n 2014-03-04  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/60382"}, {"sha": "38b41a93c22c231dcd6071c4b3fe90ceaea96712", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b03f816acc79da5e6b25b9fe9d879224b4b51e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b03f816acc79da5e6b25b9fe9d879224b4b51e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=66b03f816acc79da5e6b25b9fe9d879224b4b51e", "patch": "@@ -36022,7 +36022,7 @@ ix86_expand_builtin (tree exp, rtx target, rtx subtarget,\n \n       if (!insn_data[icode].operand[4].predicate (op4, mode4))\n \t{\n-\t  error (\"the last argument must be hint 0 or 1\");\n+\t  error (\"incorrect hint operand\");\n \t  return const0_rtx;\n \t}\n "}, {"sha": "0492241fd8f818170437ba39e40030373dff3df2", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b03f816acc79da5e6b25b9fe9d879224b4b51e/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b03f816acc79da5e6b25b9fe9d879224b4b51e/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=66b03f816acc79da5e6b25b9fe9d879224b4b51e", "patch": "@@ -660,12 +660,12 @@\n   return i == 2 || i == 4 || i == 8;\n })\n \n-;; Match 2, 3, 5, or 6\n-(define_predicate \"const2356_operand\"\n+;; Match 2, 3, 6, or 7\n+(define_predicate \"const2367_operand\"\n   (match_code \"const_int\")\n {\n   HOST_WIDE_INT i = INTVAL (op);\n-  return i == 2 || i == 3 || i == 5 || i == 6;\n+  return i == 2 || i == 3 || i == 6 || i == 7;\n })\n \n ;; Match 1, 2, 4, or 8"}, {"sha": "f30b27e860f5f429f7f337298a9e47b77dc3ce6e", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/66b03f816acc79da5e6b25b9fe9d879224b4b51e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/66b03f816acc79da5e6b25b9fe9d879224b4b51e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=66b03f816acc79da5e6b25b9fe9d879224b4b51e", "patch": "@@ -12652,7 +12652,7 @@\n \t  [(match_operand 2 \"vsib_address_operand\")\n \t   (match_operand:VI48_512 1 \"register_operand\")\n \t   (match_operand:SI 3 \"const1248_operand\")]))\n-      (match_operand:SI 4 \"const2356_operand\")]\n+      (match_operand:SI 4 \"const2367_operand\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n@@ -12670,14 +12670,14 @@\n \t    (match_operand:VI48_512 1 \"register_operand\" \"v\")\n \t    (match_operand:SI 3 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 4 \"const2356_operand\" \"n\")]\n+      (match_operand:SI 4 \"const2367_operand\" \"n\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[4]))\n     {\n     case 3:\n-    case 5:\n+    case 7:\n       return \"vscatterpf0<ssemodesuffix>ps\\t{%5%{%0%}|%5%{%0%}}\";\n     case 2:\n     case 6:\n@@ -12699,14 +12699,14 @@\n \t    (match_operand:VI48_512 0 \"register_operand\" \"v\")\n \t    (match_operand:SI 2 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 3 \"const2356_operand\" \"n\")]\n+      (match_operand:SI 3 \"const2367_operand\" \"n\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[3]))\n     {\n     case 3:\n-    case 5:\n+    case 7:\n       return \"vscatterpf0<ssemodesuffix>ps\\t{%4|%4}\";\n     case 2:\n     case 6:\n@@ -12728,7 +12728,7 @@\n \t  [(match_operand 2 \"vsib_address_operand\")\n \t   (match_operand:VI4_256_8_512 1 \"register_operand\")\n \t   (match_operand:SI 3 \"const1248_operand\")]))\n-      (match_operand:SI 4 \"const2356_operand\")]\n+      (match_operand:SI 4 \"const2367_operand\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n@@ -12746,14 +12746,14 @@\n \t    (match_operand:VI4_256_8_512 1 \"register_operand\" \"v\")\n \t    (match_operand:SI 3 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 4 \"const2356_operand\" \"n\")]\n+      (match_operand:SI 4 \"const2367_operand\" \"n\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[4]))\n     {\n     case 3:\n-    case 5:\n+    case 7:\n       return \"vscatterpf0<ssemodesuffix>pd\\t{%5%{%0%}|%5%{%0%}}\";\n     case 2:\n     case 6:\n@@ -12775,14 +12775,14 @@\n \t    (match_operand:VI4_256_8_512 0 \"register_operand\" \"v\")\n \t    (match_operand:SI 2 \"const1248_operand\" \"n\")]\n \t   UNSPEC_VSIBADDR)])\n-      (match_operand:SI 3 \"const2356_operand\" \"n\")]\n+      (match_operand:SI 3 \"const2367_operand\" \"n\")]\n      UNSPEC_SCATTER_PREFETCH)]\n   \"TARGET_AVX512PF\"\n {\n   switch (INTVAL (operands[3]))\n     {\n     case 3:\n-    case 5:\n+    case 7:\n       return \"vscatterpf0<ssemodesuffix>pd\\t{%4|%4}\";\n     case 2:\n     case 6:"}]}