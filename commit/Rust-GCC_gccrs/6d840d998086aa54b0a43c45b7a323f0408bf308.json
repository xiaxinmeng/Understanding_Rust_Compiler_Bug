{"sha": "6d840d998086aa54b0a43c45b7a323f0408bf308", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmQ4NDBkOTk4MDg2YWE1NGIwYTQzYzQ1YjdhMzIzZjA0MDhiZjMwOA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-02-06T10:34:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-02-06T10:34:53Z"}, "message": "re PR c++/56217 (ICE: OpenMP: when combining shared() and a move constructor)\n\n\tPR middle-end/56217\n\t* omp-low.c (use_pointer_for_field): Return false if\n\tlower_send_shared_vars doesn't generate any copy-out code.\n\n\t* g++.dg/gomp/pr56217.C: New test.\n\n\t* testsuite/libgomp.c++/pr56217.C: New test.\n\nFrom-SVN: r195796", "tree": {"sha": "091d383fc8916e747be9e17db128fffaa6963396", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/091d383fc8916e747be9e17db128fffaa6963396"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6d840d998086aa54b0a43c45b7a323f0408bf308", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d840d998086aa54b0a43c45b7a323f0408bf308", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d840d998086aa54b0a43c45b7a323f0408bf308", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d840d998086aa54b0a43c45b7a323f0408bf308/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ca4a4fe903f536b400f1708437a69df637cf2c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca4a4fe903f536b400f1708437a69df637cf2c7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca4a4fe903f536b400f1708437a69df637cf2c7f"}], "stats": {"total": 81, "additions": 77, "deletions": 4}, "files": [{"sha": "0865a81addf9416d102eb9ba272902166d49b0a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d840d998086aa54b0a43c45b7a323f0408bf308/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d840d998086aa54b0a43c45b7a323f0408bf308/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6d840d998086aa54b0a43c45b7a323f0408bf308", "patch": "@@ -1,3 +1,9 @@\n+2013-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56217\n+\t* omp-low.c (use_pointer_for_field): Return false if\n+\tlower_send_shared_vars doesn't generate any copy-out code.\n+\n 2013-02-06  Tom de Vries  <tom@codesourcery.com>\n \n \tPR rtl-optimization/56131"}, {"sha": "ef4ed5e98ace39690d798e633830937ea09d64a6", "filename": "gcc/omp-low.c", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d840d998086aa54b0a43c45b7a323f0408bf308/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d840d998086aa54b0a43c45b7a323f0408bf308/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=6d840d998086aa54b0a43c45b7a323f0408bf308", "patch": "@@ -757,12 +757,20 @@ use_pointer_for_field (tree decl, omp_context *shared_ctx)\n       if (TREE_ADDRESSABLE (decl))\n \treturn true;\n \n+      /* lower_send_shared_vars only uses copy-in, but not copy-out\n+\t for these.  */\n+      if (TREE_READONLY (decl)\n+\t  || ((TREE_CODE (decl) == RESULT_DECL\n+\t       || TREE_CODE (decl) == PARM_DECL)\n+\t      && DECL_BY_REFERENCE (decl)))\n+\treturn false;\n+\n       /* Disallow copy-in/out in nested parallel if\n \t decl is shared in outer parallel, otherwise\n \t each thread could store the shared variable\n \t in its own copy-in location, making the\n \t variable no longer really shared.  */\n-      if (!TREE_READONLY (decl) && shared_ctx->is_nested)\n+      if (shared_ctx->is_nested)\n \t{\n \t  omp_context *up;\n \n@@ -785,11 +793,10 @@ use_pointer_for_field (tree decl, omp_context *shared_ctx)\n \t    }\n \t}\n \n-      /* For tasks avoid using copy-in/out, unless they are readonly\n-\t (in which case just copy-in is used).  As tasks can be\n+      /* For tasks avoid using copy-in/out.  As tasks can be\n \t deferred or executed in different thread, when GOMP_task\n \t returns, the task hasn't necessarily terminated.  */\n-      if (!TREE_READONLY (decl) && is_task_ctx (shared_ctx))\n+      if (is_task_ctx (shared_ctx))\n \t{\n \t  tree outer;\n \tmaybe_mark_addressable_and_ret:"}, {"sha": "a2a2bb9515d0b7f769b3883a483ea1eb27a6ae86", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d840d998086aa54b0a43c45b7a323f0408bf308/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d840d998086aa54b0a43c45b7a323f0408bf308/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6d840d998086aa54b0a43c45b7a323f0408bf308", "patch": "@@ -1,3 +1,8 @@\n+2013-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56217\n+\t* g++.dg/gomp/pr56217.C: New test.\n+\n 2013-02-05  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/56205"}, {"sha": "03dfc5f180bfc820f681695efcaf1ef7412e6402", "filename": "gcc/testsuite/g++.dg/gomp/pr56217.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d840d998086aa54b0a43c45b7a323f0408bf308/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr56217.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d840d998086aa54b0a43c45b7a323f0408bf308/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr56217.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr56217.C?ref=6d840d998086aa54b0a43c45b7a323f0408bf308", "patch": "@@ -0,0 +1,14 @@\n+// PR middle-end/56217\n+// { dg-do compile }\n+// { dg-options \"-fopenmp\" }\n+\n+struct S { int *p; S (); S (S &); };\n+\n+S\n+foo ()\n+{\n+  S s;\n+  #pragma omp task shared (s)\n+    s.p = 0;\n+  return s;\n+}"}, {"sha": "b0dc764c9c1d74d81b20a7f245d90eb52f3f93f4", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d840d998086aa54b0a43c45b7a323f0408bf308/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d840d998086aa54b0a43c45b7a323f0408bf308/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=6d840d998086aa54b0a43c45b7a323f0408bf308", "patch": "@@ -1,3 +1,8 @@\n+2013-02-06  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/56217\n+\t* testsuite/libgomp.c++/pr56217.C: New test.\n+\n 2013-02-01  Alan Modra  <amodra@gmail.com>\n \n \t* task.c (GOMP_task, GOMP_taskwait): Comment."}, {"sha": "19da9185350037431f17e0e914d1bf82bf85a9e9", "filename": "libgomp/testsuite/libgomp.c++/pr56217.C", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6d840d998086aa54b0a43c45b7a323f0408bf308/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr56217.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6d840d998086aa54b0a43c45b7a323f0408bf308/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr56217.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fpr56217.C?ref=6d840d998086aa54b0a43c45b7a323f0408bf308", "patch": "@@ -0,0 +1,36 @@\n+// PR middle-end/56217\n+// { dg-do run }\n+// { dg-options \"-std=c++0x\" }\n+\n+extern \"C\" void abort ();\n+\n+template <typename T>\n+struct ptr {\n+  T *p;\n+  ptr () : p () {}\n+  ptr (ptr &) = delete;\n+  ptr (ptr &&o) : p(o) {}\n+  operator T * () { return p; }\n+};\n+\n+int a[6] = { 100, 101, 102, 103, 104, 105 };\n+\n+static ptr<int>\n+f ()\n+{\n+  ptr<int> pt;\n+  #pragma omp task shared (pt)\n+    pt.p = a + 2;\n+  #pragma omp taskwait\n+  return pt;\n+}\n+\n+int\n+main ()\n+{\n+  ptr<int> pt;\n+  #pragma omp parallel\n+  #pragma omp single\n+  if (f () != a + 2 || *f () != 102)\n+    abort ();\n+}"}]}