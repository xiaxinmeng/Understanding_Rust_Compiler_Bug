{"sha": "ec573d17b874fe0528f47b7522905fffe9803d48", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM1NzNkMTdiODc0ZmUwNTI4ZjQ3Yjc1MjI5MDVmZmZlOTgwM2Q0OA==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-07-14T13:57:05Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-07-14T13:57:05Z"}, "message": "[1/2] Move choose_mult_variant declaration and dependent declarations to expmed.h\n\n\t* expmed.c (mult_variant, choose_mult_variant): Move declaration to...\n\t* expmed.h: ... Here.\n\nFrom-SVN: r238337", "tree": {"sha": "3dc359817317863344f51515c8225727c5202651", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dc359817317863344f51515c8225727c5202651"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec573d17b874fe0528f47b7522905fffe9803d48", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec573d17b874fe0528f47b7522905fffe9803d48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec573d17b874fe0528f47b7522905fffe9803d48", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec573d17b874fe0528f47b7522905fffe9803d48/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "21bcd7bedde07878098db00fc4042a85939077a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21bcd7bedde07878098db00fc4042a85939077a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21bcd7bedde07878098db00fc4042a85939077a2"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "e04e48af5236dabb08465e935ea29c4fee88702f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec573d17b874fe0528f47b7522905fffe9803d48/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec573d17b874fe0528f47b7522905fffe9803d48/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec573d17b874fe0528f47b7522905fffe9803d48", "patch": "@@ -1,3 +1,8 @@\n+2016-07-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* expmed.c (mult_variant, choose_mult_variant): Move declaration to...\n+\t* expmed.h: ... Here.\n+\n 2016-07-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* gimple.h (stmt_can_terminate_bb_p): New function."}, {"sha": "bd29e42aae03742a856d0a4f1232a47ac254f8d6", "filename": "gcc/expmed.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec573d17b874fe0528f47b7522905fffe9803d48/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec573d17b874fe0528f47b7522905fffe9803d48/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=ec573d17b874fe0528f47b7522905fffe9803d48", "patch": "@@ -2482,16 +2482,8 @@ expand_variable_shift (enum tree_code code, machine_mode mode, rtx shifted,\n }\n \n \f\n-/* Indicates the type of fixup needed after a constant multiplication.\n-   BASIC_VARIANT means no fixup is needed, NEGATE_VARIANT means that\n-   the result should be negated, and ADD_VARIANT means that the\n-   multiplicand should be added to the result.  */\n-enum mult_variant {basic_variant, negate_variant, add_variant};\n-\n static void synth_mult (struct algorithm *, unsigned HOST_WIDE_INT,\n \t\t\tconst struct mult_cost *, machine_mode mode);\n-static bool choose_mult_variant (machine_mode, HOST_WIDE_INT,\n-\t\t\t\t struct algorithm *, enum mult_variant *, int);\n static rtx expand_mult_const (machine_mode, rtx, HOST_WIDE_INT, rtx,\n \t\t\t      const struct algorithm *, enum mult_variant);\n static unsigned HOST_WIDE_INT invert_mod2n (unsigned HOST_WIDE_INT, int);\n@@ -2981,7 +2973,7 @@ synth_mult (struct algorithm *alg_out, unsigned HOST_WIDE_INT t,\n    Return true if the cheapest of these cost less than MULT_COST,\n    describing the algorithm in *ALG and final fixup in *VARIANT.  */\n \n-static bool\n+bool\n choose_mult_variant (machine_mode mode, HOST_WIDE_INT val,\n \t\t     struct algorithm *alg, enum mult_variant *variant,\n \t\t     int mult_cost)"}, {"sha": "cbceaf16dffa456ef247a8fb8e93402a6e9afcb9", "filename": "gcc/expmed.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec573d17b874fe0528f47b7522905fffe9803d48/gcc%2Fexpmed.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec573d17b874fe0528f47b7522905fffe9803d48/gcc%2Fexpmed.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.h?ref=ec573d17b874fe0528f47b7522905fffe9803d48", "patch": "@@ -35,6 +35,15 @@ enum alg_code {\n   alg_impossible\n };\n \n+/* Indicates the type of fixup needed after a constant multiplication.\n+   BASIC_VARIANT means no fixup is needed, NEGATE_VARIANT means that\n+   the result should be negated, and ADD_VARIANT means that the\n+   multiplicand should be added to the result.  */\n+enum mult_variant {basic_variant, negate_variant, add_variant};\n+\n+bool choose_mult_variant (machine_mode, HOST_WIDE_INT,\n+\t\t\t  struct algorithm *, enum mult_variant *, int);\n+\n /* This structure holds the \"cost\" of a multiply sequence.  The\n    \"cost\" field holds the total rtx_cost of every operator in the\n    synthetic multiplication sequence, hence cost(a op b) is defined"}]}