{"sha": "ffc3503d9f3b98e5a5ab72132389282e3f040de5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZjMzUwM2Q5ZjNiOThlNWE1YWI3MjEzMjM4OTI4MmUzZjA0MGRlNQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-18T00:01:22Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-01-18T00:01:22Z"}, "message": "emit_rtl.c (init_emit_once): Ensure that potential aliasing between frame_pointer_rtx...\n\n        * emit_rtl.c (init_emit_once): Ensure that potential aliasing\n        between frame_pointer_rtx, hard_frame_pointer_rtx, and\n        arg_pointer_rtx is respected in initialization.\n        (init_emit_once): Use gen_rtx_raw_REG() to create\n        return_address_pointer_rtx.\n\t* rtl.h: Fix typo.\n\nFrom-SVN: r17409", "tree": {"sha": "2950d6a5efdf63220fcc170f66901456a73c2987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2950d6a5efdf63220fcc170f66901456a73c2987"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffc3503d9f3b98e5a5ab72132389282e3f040de5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc3503d9f3b98e5a5ab72132389282e3f040de5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffc3503d9f3b98e5a5ab72132389282e3f040de5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffc3503d9f3b98e5a5ab72132389282e3f040de5/comments", "author": null, "committer": null, "parents": [{"sha": "a0372c94de45537222a342228a5c22e30fe5c3a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0372c94de45537222a342228a5c22e30fe5c3a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0372c94de45537222a342228a5c22e30fe5c3a6"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "aa1866529bb239ca2d8634d76bfdafbed6111193", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc3503d9f3b98e5a5ab72132389282e3f040de5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc3503d9f3b98e5a5ab72132389282e3f040de5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffc3503d9f3b98e5a5ab72132389282e3f040de5", "patch": "@@ -48,6 +48,12 @@ Sat Jan 17 22:35:39 1998  Mumit Khan <khan@xraylith.wisc.edu>\n \n 1998-01-17  Lee Iverson  <leei@Canada.AI.SRI.COM>\n \n+\t* emit_rtl.c (init_emit_once): Ensure that potential aliasing\n+\tbetween frame_pointer_rtx, hard_frame_pointer_rtx, and\n+\targ_pointer_rtx is respected in initialization.\n+\t(init_emit_once): Use gen_rtx_raw_REG() to create\n+\treturn_address_pointer_rtx.\n+\n \t* reorg.c: #include \"expr.h\" for rtx prototypes.\n \t* Makefile.in (reorg.o): Depend on expr.h\n \n@@ -62,6 +68,8 @@ Sat Jan 17 21:24:16 1998  David T. McWherter <dtm@waterw.com>\n \n Sat Jan 17 21:16:19 1998  Jeffrey A Law  (law@cygnus.com)\n \n+\t* rtl.h: Fix typos.\n+\n \t* acconfig.h (NEED_DECLARATION_ATOL): New declaration to check for.\n \t* rtl.c (atol): Only provide the declaration if NEED_DECLARATION_ATOL.\n "}, {"sha": "ad661245641dead9a722125509c40184c6b81a08", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc3503d9f3b98e5a5ab72132389282e3f040de5/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc3503d9f3b98e5a5ab72132389282e3f040de5/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=ffc3503d9f3b98e5a5ab72132389282e3f040de5", "patch": "@@ -3425,10 +3425,14 @@ init_emit_once (line_numbers)\n   PUT_MODE (stack_pointer_rtx, Pmode);\n   REGNO (frame_pointer_rtx) = FRAME_POINTER_REGNUM;\n   PUT_MODE (frame_pointer_rtx, Pmode);\n+#if HARD_FRAME_POINTER_REGNUM != FRAME_POINTER_REGNUM\n   REGNO (hard_frame_pointer_rtx) = HARD_FRAME_POINTER_REGNUM;\n   PUT_MODE (hard_frame_pointer_rtx, Pmode);\n+#endif\n+#if FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM && HARD_FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n   REGNO (arg_pointer_rtx) = ARG_POINTER_REGNUM;\n   PUT_MODE (arg_pointer_rtx, Pmode);\n+#endif\n \n   REGNO (virtual_incoming_args_rtx) = VIRTUAL_INCOMING_ARGS_REGNUM;\n   PUT_MODE (virtual_incoming_args_rtx, Pmode);\n@@ -3440,8 +3444,8 @@ init_emit_once (line_numbers)\n   PUT_MODE (virtual_outgoing_args_rtx, Pmode);\n \n #ifdef RETURN_ADDRESS_POINTER_REGNUM\n-  return_address_pointer_rtx = gen_rtx_REG (Pmode,\n-\t\t\t\t\t    RETURN_ADDRESS_POINTER_REGNUM);\n+  return_address_pointer_rtx\n+    = gen_rtx_raw_REG (Pmode, RETURN_ADDRESS_POINTER_REGNUM);\n #endif\n \n #ifdef STRUCT_VALUE"}, {"sha": "834ce8cdfb2d5c29c10be5a3544f184ee2792262", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffc3503d9f3b98e5a5ab72132389282e3f040de5/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffc3503d9f3b98e5a5ab72132389282e3f040de5/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=ffc3503d9f3b98e5a5ab72132389282e3f040de5", "patch": "@@ -970,7 +970,7 @@ extern rtx gen_rtx_REG PROTO((enum machine_mode, int));\n #if FRAME_POINTER_REGNUM == ARG_POINTER_REGNUM\n #define arg_pointer_rtx\t\t(&global_rtl.frame_pointer_val)\n #else\n-#if HARD_POINTER_REGNUM == ARG_POINTER_REGNUM\n+#if HARD_FRAME_POINTER_REGNUM == ARG_POINTER_REGNUM\n #define arg_pointer_rtx\t\t(&global_rtl.hard_frame_pointer_val)\n #else\n #define arg_pointer_rtx\t\t(&global_rtl.arg_pointer_val)"}]}