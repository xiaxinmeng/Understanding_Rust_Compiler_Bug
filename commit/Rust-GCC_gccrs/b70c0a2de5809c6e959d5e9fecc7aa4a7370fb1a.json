{"sha": "b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcwYzBhMmRlNTgwOWM2ZTk1OWQ1ZTlmZWNjN2FhNGE3MzcwZmIxYQ==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-09-25T16:19:43Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-09-25T16:19:43Z"}, "message": "re PR other/54701 (double_int conversion breaks avr build)\n\n\tPR other/54701\n\t* config/avr/avr-log.c (avr_double_int_pop_digit): Reerite using\n\tdouble_int::udivmod.\n\nFrom-SVN: r191716", "tree": {"sha": "622db31e498df1afb474a399937dbf76bbd27092", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/622db31e498df1afb474a399937dbf76bbd27092"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1bdc68d43b4572a5824514c4f92ea93f73dfec2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1bdc68d43b4572a5824514c4f92ea93f73dfec2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1bdc68d43b4572a5824514c4f92ea93f73dfec2"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "d6365a88bacbe90f5a7c15cd3de1735e4966eae7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a", "patch": "@@ -1,3 +1,9 @@\n+2012-09-25  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR other/54701\n+\t* config/avr/avr-log.c (avr_double_int_pop_digit): Reerite using\n+\tdouble_int::udivmod.\n+\n 2012-09-25  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr.c (avr_set_current_function): Check cfun->machine"}, {"sha": "edb1cbda1ec01fff9501aae810f65a9911ad4514", "filename": "gcc/config/avr/avr-log.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a/gcc%2Fconfig%2Favr%2Favr-log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a/gcc%2Fconfig%2Favr%2Favr-log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr-log.c?ref=b70c0a2de5809c6e959d5e9fecc7aa4a7370fb1a", "patch": "@@ -144,15 +144,12 @@ avr_log_set_caller_f (const char *caller)\n static unsigned\n avr_double_int_pop_digit (double_int *cst, unsigned base)\n {\n-  unsigned HOST_WIDE_INT resl, reml;\n-  HOST_WIDE_INT resh, remh;\n+  double_int drem;\n \n-  div_and_round_double (FLOOR_DIV_EXPR, true, cst->low, cst->high, base, 0,\n-\t\t\t&resl, &resh, &reml, &remh);\n-  cst->high = resh;\n-  cst->low = resl;\n+  *cst = cst->udivmod (double_int::from_uhwi (base), (int) FLOOR_DIV_EXPR,\n+                       &drem);\n \n-  return reml;\n+  return (unsigned) drem.to_uhwi();\n }\n \n "}]}