{"sha": "99309f3bcbb8cd7d7504a89b32588d301609bf9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTkzMDlmM2JjYmI4Y2Q3ZDc1MDRhODliMzI1ODhkMzAxNjA5YmY5ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-30T20:36:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-03-30T20:36:43Z"}, "message": "(find_regno_note): Find note that overlaps REGNO, not just one that\nmentions REGNO explicitly.\n\nFrom-SVN: r3929", "tree": {"sha": "b39e317a5a9ab4ccd349302a9169191489e86df3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b39e317a5a9ab4ccd349302a9169191489e86df3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99309f3bcbb8cd7d7504a89b32588d301609bf9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99309f3bcbb8cd7d7504a89b32588d301609bf9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99309f3bcbb8cd7d7504a89b32588d301609bf9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99309f3bcbb8cd7d7504a89b32588d301609bf9e/comments", "author": null, "committer": null, "parents": [{"sha": "2c0623e83abf78609905752326e68fc5b6724ffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c0623e83abf78609905752326e68fc5b6724ffd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c0623e83abf78609905752326e68fc5b6724ffd"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "549f9054f6ec7a38082e60f104d4ab61ea5b4309", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99309f3bcbb8cd7d7504a89b32588d301609bf9e/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99309f3bcbb8cd7d7504a89b32588d301609bf9e/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=99309f3bcbb8cd7d7504a89b32588d301609bf9e", "patch": "@@ -1135,7 +1135,9 @@ find_reg_note (insn, kind, datum)\n }\n \n /* Return the reg-note of kind KIND in insn INSN which applies to register\n-   number REGNO, if any.  Return 0 if there is no such reg-note.  */\n+   number REGNO, if any.  Return 0 if there is no such reg-note.  Note that\n+   the REGNO of this NOTE need not be REGNO if REGNO is a hard register;\n+   it might be the case that the note overlaps REGNO.  */\n \n rtx\n find_regno_note (insn, kind, regno)\n@@ -1150,7 +1152,12 @@ find_regno_note (insn, kind, regno)\n \t/* Verify that it is a register, so that scratch and MEM won't cause a\n \t   problem here.  */\n \t&& GET_CODE (XEXP (link, 0)) == REG\n-\t&& REGNO (XEXP (link, 0)) == regno)\n+\t&& REGNO (XEXP (link, 0)) <= regno\n+\t&& ((REGNO (XEXP (link, 0))\n+\t     + (REGNO (XEXP (link, 0)) >= FIRST_PSEUDO_REGISTER ? 1\n+\t\t: HARD_REGNO_NREGS (REGNO (XEXP (link, 0)),\n+\t\t\t\t    GET_MODE (XEXP (link, 0)))))\n+\t    > regno))\n       return link;\n   return 0;\n }"}]}