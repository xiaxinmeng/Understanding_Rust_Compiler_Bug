{"sha": "7476f0866c606870ed338f64269b840da3bcb1e4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ3NmYwODY2YzYwNjg3MGVkMzM4ZjY0MjY5Yjg0MGRhM2JjYjFlNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2007-03-07T18:13:29Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2007-03-07T18:13:29Z"}, "message": "re PR target/30848 (ICE with invalid constraint in asm statement)\n\n        PR target/30848\n        * reg-stack.c (emit_swap_insn): If a malformed asm was seen,\n        silently fix up the stack in the case of a missing register.\n\nFrom-SVN: r122669", "tree": {"sha": "9966163c9b3bfdf8faa218f12e89e2b2c8b20dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9966163c9b3bfdf8faa218f12e89e2b2c8b20dd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7476f0866c606870ed338f64269b840da3bcb1e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7476f0866c606870ed338f64269b840da3bcb1e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7476f0866c606870ed338f64269b840da3bcb1e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7476f0866c606870ed338f64269b840da3bcb1e4/comments", "author": null, "committer": null, "parents": [{"sha": "1611915067138d5ab84a3225599281b68943172f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1611915067138d5ab84a3225599281b68943172f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1611915067138d5ab84a3225599281b68943172f"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "8712524b4fe67d40bd93d8e24525bd12ced2b6e7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7476f0866c606870ed338f64269b840da3bcb1e4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7476f0866c606870ed338f64269b840da3bcb1e4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7476f0866c606870ed338f64269b840da3bcb1e4", "patch": "@@ -1,3 +1,9 @@\n+2007-03-07  Richard Henderson  <rth@redhat.com>\n+\n+\tPR target/30848\n+\t* reg-stack.c (emit_swap_insn): If a malformed asm was seen,\n+\tsilently fix up the stack in the case of a missing register.\n+\n 2007-03-07  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/libunwind.S: Add .arch/.object_arch for armv4 builds."}, {"sha": "8413ca3a399eda04d1156b7d7d3ea3990b3690cf", "filename": "gcc/reg-stack.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7476f0866c606870ed338f64269b840da3bcb1e4/gcc%2Freg-stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7476f0866c606870ed338f64269b840da3bcb1e4/gcc%2Freg-stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freg-stack.c?ref=7476f0866c606870ed338f64269b840da3bcb1e4", "patch": "@@ -815,9 +815,19 @@ emit_swap_insn (rtx insn, stack regstack, rtx reg)\n \n   hard_regno = get_hard_regnum (regstack, reg);\n \n-  gcc_assert (hard_regno >= FIRST_STACK_REG);\n   if (hard_regno == FIRST_STACK_REG)\n     return;\n+  if (hard_regno == -1)\n+    {\n+      /* Something failed if the register wasn't on the stack.  If we had\n+\t malformed asms, we zapped the instruction itself, but that didn't\n+\t produce the same pattern of register sets as before.  To prevent\n+\t further failure, adjust REGSTACK to include REG at TOP.  */\n+      gcc_assert (any_malformed_asm);\n+      regstack->reg[++regstack->top] = REGNO (reg);\n+      return;\n+    }\n+  gcc_assert (hard_regno >= FIRST_STACK_REG);\n \n   other_reg = regstack->top - (hard_regno - FIRST_STACK_REG);\n "}, {"sha": "2a92851516c60846057188a37fc8b9d99761af00", "filename": "gcc/testsuite/gcc.target/i386/pr30848.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7476f0866c606870ed338f64269b840da3bcb1e4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30848.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7476f0866c606870ed338f64269b840da3bcb1e4/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30848.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr30848.c?ref=7476f0866c606870ed338f64269b840da3bcb1e4", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile } */\n+\n+void foo(double d)\n+{\n+  __asm__ (\"\" : \"=u\" (d));  /* { dg-error \"output regs\" } */\n+}"}]}