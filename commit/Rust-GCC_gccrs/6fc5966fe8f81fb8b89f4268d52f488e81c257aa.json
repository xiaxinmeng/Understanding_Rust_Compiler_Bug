{"sha": "6fc5966fe8f81fb8b89f4268d52f488e81c257aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZjNTk2NmZlOGY4MWZiOGI4OWY0MjY4ZDUyZjQ4OGU4MWMyNTdhYQ==", "commit": {"author": {"name": "Alexander Monakov", "email": "amonakov@ispras.ru", "date": "2011-06-15T08:08:27Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2011-06-15T08:08:27Z"}, "message": "re PR target/49349 (gfortran.dg/char_result_3.f90 fails with -O3)\n\n\tPR target/49349\n\t* sel-sched.c (find_place_for_bookkeeping): Add new parameter\n\t(fence_to_rewind).  Use it to notice when bookkeeping will be placed\n\tabove a fence.  Update comments.\n\t(generate_bookkeeping_insn): Rewind fence when bookkeeping code is\n\tplaced just above it.  Do not allow NULL place_to_insert.\n\nFrom-SVN: r175075", "tree": {"sha": "30def536d3f14cfe874b598f831f5872cff90898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30def536d3f14cfe874b598f831f5872cff90898"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fc5966fe8f81fb8b89f4268d52f488e81c257aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc5966fe8f81fb8b89f4268d52f488e81c257aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fc5966fe8f81fb8b89f4268d52f488e81c257aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fc5966fe8f81fb8b89f4268d52f488e81c257aa/comments", "author": {"login": "amonakov", "id": 1997391, "node_id": "MDQ6VXNlcjE5OTczOTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1997391?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amonakov", "html_url": "https://github.com/amonakov", "followers_url": "https://api.github.com/users/amonakov/followers", "following_url": "https://api.github.com/users/amonakov/following{/other_user}", "gists_url": "https://api.github.com/users/amonakov/gists{/gist_id}", "starred_url": "https://api.github.com/users/amonakov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amonakov/subscriptions", "organizations_url": "https://api.github.com/users/amonakov/orgs", "repos_url": "https://api.github.com/users/amonakov/repos", "events_url": "https://api.github.com/users/amonakov/events{/privacy}", "received_events_url": "https://api.github.com/users/amonakov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9d5e7640c335a590cec4497fa64230f0b0e83465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d5e7640c335a590cec4497fa64230f0b0e83465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d5e7640c335a590cec4497fa64230f0b0e83465"}], "stats": {"total": 31, "additions": 24, "deletions": 7}, "files": [{"sha": "8c055b3d1bf0b5c7d25b1edc7f0fe4bbac257c3c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc5966fe8f81fb8b89f4268d52f488e81c257aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc5966fe8f81fb8b89f4268d52f488e81c257aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6fc5966fe8f81fb8b89f4268d52f488e81c257aa", "patch": "@@ -1,3 +1,12 @@\n+2011-06-15  Alexander Monakov  <amonakov@ispras.ru>\n+\n+\tPR target/49349\n+\t* sel-sched.c (find_place_for_bookkeeping): Add new parameter\n+\t(fence_to_rewind).  Use it to notice when bookkeeping will be placed\n+\tabove a fence.  Update comments.\n+\t(generate_bookkeeping_insn): Rewind fence when bookkeeping code is\n+\tplaced just above it.  Do not allow NULL place_to_insert.\n+\n 2011-06-15  Ira Rosen  <ira.rosen@linaro.org>\n \n \t* tree-vect-loop-manip.c (remove_dead_stmts_from_loop): Remove."}, {"sha": "92ba2222502d55ada37ad2f4fa318548cc7334de", "filename": "gcc/sel-sched.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fc5966fe8f81fb8b89f4268d52f488e81c257aa/gcc%2Fsel-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fc5966fe8f81fb8b89f4268d52f488e81c257aa/gcc%2Fsel-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsel-sched.c?ref=6fc5966fe8f81fb8b89f4268d52f488e81c257aa", "patch": "@@ -4663,9 +4663,10 @@ create_block_for_bookkeeping (edge e1, edge e2)\n }\n \n /* Return insn after which we must insert bookkeeping code for path(s) incoming\n-   into E2->dest, except from E1->src.  */\n+   into E2->dest, except from E1->src.  If the returned insn immediately\n+   precedes a fence, assign that fence to *FENCE_TO_REWIND.  */\n static insn_t\n-find_place_for_bookkeeping (edge e1, edge e2)\n+find_place_for_bookkeeping (edge e1, edge e2, fence_t *fence_to_rewind)\n {\n   insn_t place_to_insert;\n   /* Find a basic block that can hold bookkeeping.  If it can be found, do not\n@@ -4707,9 +4708,14 @@ find_place_for_bookkeeping (edge e1, edge e2)\n \tsel_print (\"Pre-existing bookkeeping block is %i\\n\", book_block->index);\n     }\n \n-  /* If basic block ends with a jump, insert bookkeeping code right before it.  */\n+  *fence_to_rewind = NULL;\n+  /* If basic block ends with a jump, insert bookkeeping code right before it.\n+     Notice if we are crossing a fence when taking PREV_INSN.  */\n   if (INSN_P (place_to_insert) && control_flow_insn_p (place_to_insert))\n-    place_to_insert = PREV_INSN (place_to_insert);\n+    {\n+      *fence_to_rewind = flist_lookup (fences, place_to_insert);\n+      place_to_insert = PREV_INSN (place_to_insert);\n+    }\n \n   return place_to_insert;\n }\n@@ -4784,21 +4790,23 @@ generate_bookkeeping_insn (expr_t c_expr, edge e1, edge e2)\n   insn_t join_point, place_to_insert, new_insn;\n   int new_seqno;\n   bool need_to_exchange_data_sets;\n+  fence_t fence_to_rewind;\n \n   if (sched_verbose >= 4)\n     sel_print (\"Generating bookkeeping insn (%d->%d)\\n\", e1->src->index,\n \t       e2->dest->index);\n \n   join_point = sel_bb_head (e2->dest);\n-  place_to_insert = find_place_for_bookkeeping (e1, e2);\n-  if (!place_to_insert)\n-    return NULL;\n+  place_to_insert = find_place_for_bookkeeping (e1, e2, &fence_to_rewind);\n   new_seqno = find_seqno_for_bookkeeping (place_to_insert, join_point);\n   need_to_exchange_data_sets\n     = sel_bb_empty_p (BLOCK_FOR_INSN (place_to_insert));\n \n   new_insn = emit_bookkeeping_insn (place_to_insert, c_expr, new_seqno);\n \n+  if (fence_to_rewind)\n+    FENCE_INSN (fence_to_rewind) = new_insn;\n+\n   /* When inserting bookkeeping insn in new block, av sets should be\n      following: old basic block (that now holds bookkeeping) data sets are\n      the same as was before generation of bookkeeping, and new basic block"}]}