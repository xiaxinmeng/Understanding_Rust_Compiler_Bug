{"sha": "dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNjNDE4NTJlMTBiODlkYjliNDdmZGYwMmNhZjc5YjhkZGIzYjBiZA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2000-10-24T17:00:59Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-10-24T17:00:59Z"}, "message": "compare.cc (test01): Add using declarations.\n\n\n\n2000-10-23  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* testsuite/21_strings/compare.cc (test01): Add using declarations.\n\n\t* include/c_std/bits/std_cerrno.h: And here.\n\t* include/c_std/bits/std_cassert.h: Tweaks.\n\n\t* mkcheck.in: Simplify.\n\n\t* acinclude.m4 (GLIBCPP_ENABLE_LONG_DOUBLE): Simplify.\n\t(GLIBCPP_ENABLE_LONG_LONG): Same.\n\t* aclocal.m4: Regenerate.\n\n\t* src/Makefile.am (c_shadow_headers): Add features.h,\n\tbits/wrap_features.h.\n\t* src/Makefile.in: Regenerate.\n\t* include/c_std/features.h: New file.\n\t* include/c_std/bits/wrap_features.h (_CPP_WRAP_FEATURES_H): New\n\tfile. Need to have c++config.h included before this file so\n\t_ISOC99_SOURCE around.\n\n\t* include/c_std/sys/cdefs.h: Hack.\n\t* include/c_std/stdlib.h: Same, use c++config.h.\n\t* include/c_std/bits/std_cstdlib.h: Use _GLIBCPP_HAVE_STRTOLD.\n\n\t* include/c_std/bits/std_cassert.h: Fix.\n\t* include/c_std/bits/std_cerrno.h: Make consistent.\n\n\t* include/c_std/bits/std_csetjmp.h (setjmp): Unscope global\n\tdeclaration from ::_C_legacy to _C_legacy.\n\n\t* include/c_std/bits/std_cstdio.h: same with printf.\n\t* include/c_std/stdio.h: And here.\n\n\t* include/c_std/bits/std_cstdlib.h: abort, exit comment.\n\t* include/c_std/stdlib.h: Same here.\n\nFrom-SVN: r37035", "tree": {"sha": "10b6cbeac1a09a9c386d77a8bd37241cac3b1fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10b6cbeac1a09a9c386d77a8bd37241cac3b1fd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/comments", "author": null, "committer": null, "parents": [{"sha": "060974d0af8d8162df62df7f4dfbf95536df29b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/060974d0af8d8162df62df7f4dfbf95536df29b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/060974d0af8d8162df62df7f4dfbf95536df29b5"}], "stats": {"total": 2030, "additions": 1043, "deletions": 987}, "files": [{"sha": "2911e5a4c64b43f00ce7b3675dc66caff3faf9d0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -1,3 +1,40 @@\n+2000-10-23  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* testsuite/21_strings/compare.cc (test01): Add using declarations.\n+\n+\t* include/c_std/bits/std_cerrno.h: And here.\n+\t* include/c_std/bits/std_cassert.h: Tweaks.\n+\n+\t* mkcheck.in: Simplify.\n+\t\n+\t* acinclude.m4 (GLIBCPP_ENABLE_LONG_DOUBLE): Simplify.\n+\t(GLIBCPP_ENABLE_LONG_LONG): Same.\n+\t* aclocal.m4: Regenerate.\n+\n+\t* src/Makefile.am (c_shadow_headers): Add features.h,\n+\tbits/wrap_features.h.\n+\t* src/Makefile.in: Regenerate.\n+\t* include/c_std/features.h: New file.\n+\t* include/c_std/bits/wrap_features.h (_CPP_WRAP_FEATURES_H): New\n+\tfile. Need to have c++config.h included before this file so\n+\t_ISOC99_SOURCE around.\n+\n+\t* include/c_std/sys/cdefs.h: Hack.\n+\t* include/c_std/stdlib.h: Same, use c++config.h.\n+\t* include/c_std/bits/std_cstdlib.h: Use _GLIBCPP_HAVE_STRTOLD.\n+\n+\t* include/c_std/bits/std_cassert.h: Fix.\n+\t* include/c_std/bits/std_cerrno.h: Make consistent.\n+\n+\t* include/c_std/bits/std_csetjmp.h (setjmp): Unscope global\n+\tdeclaration from ::_C_legacy to _C_legacy.\n+\n+\t* include/c_std/bits/std_cstdio.h: same with printf.\n+\t* include/c_std/stdio.h: And here.\n+\n+\t* include/c_std/bits/std_cstdlib.h: abort, exit comment.\n+\t* include/c_std/stdlib.h: Same here.\n+\t\n 2000-10-21  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n \t* acinclude.m4 (GLIBCPP_ENABLE_LONG_DOUBLE): New macro."}, {"sha": "36dac30cd86594bb4e28aa5f3fa994a4994cc527", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -1404,10 +1404,9 @@ AC_DEFUN(GLIBCPP_ENABLE_LONG_LONG, [dnl\n   AC_MSG_RESULT($enable_long_long)\n \n   dnl Option parsed, now set things appropriately\n-  case \"$enable_long_long\" in\n-    yes)  AC_DEFINE(_GLIBCPP_USE_LONG_LONG)\n-          ;;\n-  esac\n+  if test x\"$enable_long_long\" = xyes; then\n+    AC_DEFINE(_GLIBCPP_USE_LONG_LONG)\n+  fi\n ])\n \n \n@@ -1448,10 +1447,9 @@ AC_DEFUN(GLIBCPP_ENABLE_LONG_DOUBLE, [dnl\n   AC_MSG_RESULT($enable_long_double)\n \n   dnl Option parsed, now set things appropriately\n-  case \"$enable_long_double\" in\n-    yes)  AC_DEFINE(_GLIBCPP_USE_LONG_DOUBLE)\n-          ;;\n-  esac\n+  if test x\"$enable_long_double\" = xyes; then\n+    AC_DEFINE(_GLIBCPP_USE_LONG_DOUBLE)\n+  fi\n ])\n \n "}, {"sha": "afb4a8e4f5337bf7eb816403ef6443dd80580ffe", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -1416,10 +1416,9 @@ AC_DEFUN(GLIBCPP_ENABLE_LONG_LONG, [dnl\n   AC_MSG_RESULT($enable_long_long)\n \n   dnl Option parsed, now set things appropriately\n-  case \"$enable_long_long\" in\n-    yes)  AC_DEFINE(_GLIBCPP_USE_LONG_LONG)\n-          ;;\n-  esac\n+  if test x\"$enable_long_long\" = xyes; then\n+    AC_DEFINE(_GLIBCPP_USE_LONG_LONG)\n+  fi\n ])\n \n \n@@ -1460,10 +1459,9 @@ AC_DEFUN(GLIBCPP_ENABLE_LONG_DOUBLE, [dnl\n   AC_MSG_RESULT($enable_long_double)\n \n   dnl Option parsed, now set things appropriately\n-  case \"$enable_long_double\" in\n-    yes)  AC_DEFINE(_GLIBCPP_USE_LONG_DOUBLE)\n-          ;;\n-  esac\n+  if test x\"$enable_long_double\" = xyes; then\n+    AC_DEFINE(_GLIBCPP_USE_LONG_DOUBLE)\n+  fi\n ])\n \n "}, {"sha": "f7763cf386a3be43ad15b442ef6896c63f4b1006", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 925, "deletions": 927, "changes": 1852, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd"}, {"sha": "57e28db743c1258f7e6658dc3b46ff3a8f413d43", "filename": "libstdc++-v3/include/c_std/assert.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fassert.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -41,8 +41,8 @@\n \n #include <cassert>\n  \n-  // expose global C names, including non-standard ones, but shadow\n-  //   some names and types with the std:: C++ version.\n+  // Expose global C names, including non-standard ones, but shadow\n+  // some names and types with the std:: C++ version.\n \n #ifdef _ASSERT_NEED_C_LEGACY_\n   // dive back into the \"swamp\""}, {"sha": "ada1ea16f9306ac36e88308381e48414c9d608c6", "filename": "libstdc++-v3/include/c_std/bits/std_cassert.h", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cassert.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -31,19 +31,31 @@\n // ISO C++ 14882: 19.2  Assertions\n //\n \n-#ifndef _CPP_CASSERT\n-#define _CPP_CASSERT 1\n+// NB: This is assumed to be a conforming implementation.\n \n-namespace _C_legacy {\n+// ISO/IEC 9899:1999 (E), section 7.2\n+// assert.h\n+// ..defines the assert macro...\n+\n+// ISO 14882\n+// 17.4.1.2 Headers\n+// ... declarations and definitions (except for macros) are within\n+// namespace scope of the namepace std...\n+\n+\n+//#ifndef _CPP_CASSERT\n+//#define _CPP_CASSERT 1\n+\n+//namespace _C_legacy {\n   extern \"C\" {\n-#   define _IN_C_LEGACY_\n+//#   define _IN_C_LEGACY_\n #   pragma GCC system_header\n #   include_next <assert.h>\n   }\n-} // namespace _C_legacy\n+//} // namespace _C_legacy\n \n-#undef _IN_C_LEGACY_\n+//#undef _IN_C_LEGACY_\n \n-#endif\n+//#endif\n \n "}, {"sha": "0f94a420a8ec9accdf600b9d02c4fb689fd3db36", "filename": "libstdc++-v3/include/c_std/bits/std_cerrno.h", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cerrno.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -33,26 +33,16 @@\n #ifndef _CPP_CERRNO\n #define _CPP_CERRNO 1\n \n-namespace _C_legacy {\n+//namespace _C_legacy {\n   extern \"C\" {\n-#     define _IN_C_LEGACY_\n+//#     define _IN_C_LEGACY_\n #     pragma GCC system_header\n #     include_next <errno.h>\n   }\n+//} // namespace _C_legacy::\n \n-  //  inline int& \n-  //  _CPP_errno_capture() { return errno; }\n-\n-} // namespace _C_legacy::\n-\n-#  undef  errno\n-//#  define errno _C_legacy::_CPP_errno_capture()\n-\n-namespace std {\n-  using _C_legacy::errno;\n-}\n-\n-# undef _IN_C_LEGACY_\n+//# undef _IN_C_LEGACY_\n \n #endif\n \n+"}, {"sha": "c8f37002329c8f94f7a65f7b8379d66eb2361cc8", "filename": "libstdc++-v3/include/c_std/bits/std_csetjmp.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_csetjmp.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -46,7 +46,7 @@ namespace _C_legacy {\n \n #  undef jmp_buf\n #  undef setjmp\n-#  define setjmp(__jb) ::_C_legacy::_CPP_setjmp_capture(__jb)\n+#  define setjmp(__jb) _C_legacy::_CPP_setjmp_capture(__jb)\n #  undef longjmp\n \n namespace std {"}, {"sha": "7725b676f4c67ac08779c9097fdb48e055b6fc86", "filename": "libstdc++-v3/include/c_std/bits/std_cstdio.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdio.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -133,7 +133,7 @@ namespace std {\n   using _C_legacy::remove;\n   using _C_legacy::rename;\n   using _C_legacy::tmpnam;\n-  using _C_legacy::printf;\n+  //  using _C_legacy::printf;\n   using _C_legacy::scanf;\n   using _C_legacy::sprintf;\n   using _C_legacy::sscanf;"}, {"sha": "484182b03d2ab513f715c0503278f2effe17f9ca", "filename": "libstdc++-v3/include/c_std/bits/std_cstdlib.h", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fbits%2Fstd_cstdlib.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -57,7 +57,6 @@ namespace _C_legacy {\n # endif\n } // namespace _C_legacy\n \n-#  undef size_t\n #  undef wchar_t\n #  undef div_t\n #  undef ldiv_t\n@@ -68,6 +67,9 @@ namespace _C_legacy {\n #  undef strtod\n #  undef strtol\n #  undef strtoul\n+#ifdef _GLIBCPP_HAVE_STRTOLD\n+#  undef strtold\n+#endif\n #  undef rand\n #  undef srand\n #  undef calloc\n@@ -124,9 +126,9 @@ namespace std {\n   using _C_legacy::malloc;\n   using _C_legacy::realloc;\n \n-  using _C_legacy::abort;\n+  //  using _C_legacy::abort;\n   using _C_legacy::atexit;\n-  using _C_legacy::exit;\n+  //  using _C_legacy::exit;\n   using _C_legacy::bsearch;\n   using _C_legacy::qsort; \n \n@@ -137,10 +139,14 @@ namespace std {\n   using _C_legacy::mbstowcs;\n   using _C_legacy::wcstombs;\n \n+  using _C_legacy::strtof;\n+\n #ifdef _GLIBCPP_USE_LONG_LONG\n   using _C_legacy::strtoll;\n   using _C_legacy::strtoull;\n-  using _C_legacy::strtof;\n+#endif\n+\n+#ifdef _GLIBCPP_HAVE_STRTOLD\n   using _C_legacy::strtold;\n #endif\n "}, {"sha": "4e2fc332e88084394f64901c0bd432a8b338369f", "filename": "libstdc++-v3/include/c_std/errno.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Ferrno.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -43,7 +43,7 @@\n \n   // Expose global C names, including non-standard ones, but shadow\n   // some names and types with the std:: C++ version.\n-  using std::errno;\n+  //  using std::errno;\n \n # ifdef _ERRNO_NEED_C_LEGACY_\n   // dive back into the \"swamp\"\n@@ -53,3 +53,4 @@\n #  undef _ERRNO_NEED_C_LEGACY_\n # endif /* _ERRNO_NEED_C_LEGACY_ */\n #endif /* _INCLUDED_CPP_ERRNO_H_ */\n+"}, {"sha": "58bfccfe3cf73bbf0ae7b55db68bbf5a4e121e74", "filename": "libstdc++-v3/include/c_std/stdio.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdio.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -57,7 +57,7 @@\n   using std::setvbuf;\n   using std::fprintf;\n   using std::fscanf;\n-  using std::printf;\n+//  using std::printf;\n   using std::scanf;\n   using std::sprintf;\n   using std::sscanf;"}, {"sha": "c75cc5c068f524934198f85bb9ac4167478f43c2", "filename": "libstdc++-v3/include/c_std/stdlib.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fstdlib.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -31,6 +31,8 @@\n #ifndef  _INCLUDED_CPP_STDLIB_H_\n # define _INCLUDED_CPP_STDLIB_H_ 1\n \n+# include <bits/c++config.h>\n+\n # ifdef _IN_C_LEGACY_  /* sub-included by a C header */\n       // get out of the \"legacy\"\n     } // close extern \"C\"\n@@ -49,7 +51,7 @@\n   using std::lldiv_t;\n #endif\n \n-  using std::abort;\n+//  using std::abort;\n   using std::abs;\n   using std::atexit;\n   using std::atof;\n@@ -58,7 +60,7 @@\n   using std::bsearch;\n   using std::calloc;\n   using std::div;\n-  using std::exit;\n+//  using std::exit;\n   using std::free;\n   using std::getenv;\n   using std::labs;\n@@ -78,10 +80,14 @@\n   using std::wcstombs;\n   using std::wctomb;\n \n+  using std::strtof;\n+\n #ifdef _GLIBCPP_USE_LONG_LONG\n   using std::strtoll;\n   using std::strtoull;\n-  using std::strtof;\n+#endif\n+\n+#ifdef _GLIBCPP_HAVE_STRTOLD\n   using std::strtold;\n #endif\n "}, {"sha": "da377faadbcc2a19e19baeaec4a0354968289c2a", "filename": "libstdc++-v3/include/c_std/sys/cdefs.h", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsys%2Fcdefs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsys%2Fcdefs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_std%2Fsys%2Fcdefs.h?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -1,6 +1,6 @@\n // -*- C++ -*- header wrapper.\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -29,7 +29,7 @@\n \n \n #ifndef _CPP_SYS_CDEFS_H\n-# define _CPP_SYS_CDEFS_H\n+# define _CPP_SYS_CDEFS_H 1\n \n # pragma GCC system_header\n # include_next <sys/cdefs.h>\n@@ -40,4 +40,10 @@\n #undef\t__END_DECLS\n #define\t__END_DECLS\n \n-#endif\n+#endif /* _CPP_SYS_CDEFS_H_ */\n+\n+\n+\n+\n+\n+"}, {"sha": "6dd0f336ec002d9386ad0cfabf587762373b646e", "filename": "libstdc++-v3/mkcheck.in", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Fmkcheck.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Fmkcheck.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmkcheck.in?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -72,18 +72,16 @@ fi\n #LIB_PATH == where to find the build library binaries.\n if [ $WHICH != \"1\" ]; then\n   LIB_PATH=\"$BUILD_DIR/src/.libs\"\n-  CXX=\"../../gcc/g++\"\n-  CXX_BASE=\"-B../../gcc/\"\n+  CXX=\"$BUILD_DIR/../../gcc/g++ -B$BUILD_DIR/../../gcc/\"\n elif [ $WHICH -eq 1 ]; then\n   LIB_PATH=\"$PREFIX_DIR/lib\"\n   CXX=\"$PREFIX_DIR/bin/g++\"\n-  CXX_BASE=\"\"\n fi\n \n # gcc compiler flags\n #CXX_FLAG=\"-fsquangle -fhonor-std -fnew-exceptions -g -O2 -DDEBUG_ASSERT \"\n #CXX_FLAG=\"-g -O2 -DDEBUG_ASSERT \"\n-CXX_FLAG=\"-g $CXX_BASE -DDEBUG_ASSERT @SECTION_FLAGS@ @SECTION_LDFLAGS@\"\n+CXX_FLAG=\"-g -DDEBUG_ASSERT @SECTION_FLAGS@ @SECTION_LDFLAGS@\"\n \n # a specific flag(s) to force the use of shared libraries, if any\n SH_FLAG=\"\""}, {"sha": "251d6b441213c787b3caa8ea36cdda68b92071fd", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -21,7 +21,7 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.42 2000/10/17 10:12:23 bkoz Exp $\n+## $Id: Makefile.am,v 1.43 2000/10/18 23:26:22 bkoz Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -136,8 +136,10 @@ c_shadow_headers = \\\n \tassert.h ctype.h errno.h float.h limits.h locale.h math.h setjmp.h \\\n \tsignal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h wchar.h \\\n \twctype.h fcntl.h libio.h iolibio.h libioP.h pthread.h iconv.h \\\n+\tfeatures.h \\\n \tbits/wrap_libio.h bits/wrap_iolibio.h bits/wrap_libioP.h \\\n \tbits/wrap_iconv.h bits/wrap_fcntl.h bits/wrap_pthread.h \\\n+\tbits/wrap_features.h \\\n \tsys/cdefs.h \n \n if GLIBCPP_USE_CSHADOW"}, {"sha": "094a341d5d89b178e8ca6f821054de272efe18da", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -146,7 +146,7 @@ base_headers =  \tbits/cpp_type_traits.h bits/char_traits.h bits/codecvt.h \tbits/\n c_base_headers =  \tbits/std_cassert.h bits/std_cctype.h bits/std_cerrno.h \tbits/std_cfloat.h bits/std_climits.h bits/std_clocale.h \tbits/std_cmath.h bits/std_csetjmp.h bits/std_csignal.h \tbits/std_cstdarg.h bits/std_cstddef.h bits/std_cstdio.h \tbits/std_cstdlib.h bits/std_cstring.h bits/std_ctime.h \tbits/std_cwchar.h bits/std_cwctype.h \n \n \n-c_shadow_headers =  \tassert.h ctype.h errno.h float.h limits.h locale.h math.h setjmp.h \tsignal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h wchar.h \twctype.h fcntl.h libio.h iolibio.h libioP.h pthread.h iconv.h \tbits/wrap_libio.h bits/wrap_iolibio.h bits/wrap_libioP.h \tbits/wrap_iconv.h bits/wrap_fcntl.h bits/wrap_pthread.h \tsys/cdefs.h \n+c_shadow_headers =  \tassert.h ctype.h errno.h float.h limits.h locale.h math.h setjmp.h \tsignal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h wchar.h \twctype.h fcntl.h libio.h iolibio.h libioP.h pthread.h iconv.h \tfeatures.h \tbits/wrap_libio.h bits/wrap_iolibio.h bits/wrap_libioP.h \tbits/wrap_iconv.h bits/wrap_fcntl.h bits/wrap_pthread.h \tbits/wrap_features.h \tsys/cdefs.h \n \n @GLIBCPP_USE_CSHADOW_TRUE@c_headers = $(c_base_headers) $(c_shadow_headers)\n @GLIBCPP_USE_CSHADOW_FALSE@c_headers = $(c_base_headers)"}, {"sha": "16055ff34815061d4aee59aa3cfe2166ef1a6b57", "filename": "libstdc++-v3/testsuite/21_strings/compare.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fcompare.cc?ref=dcc41852e10b89db9b47fdf02caf79b8ddb3b0bd", "patch": "@@ -75,6 +75,10 @@ test01()\n   std::string \tstr_1(\"costa marbella\");\n   std::string \tstr_2;\n \n+  using std::strcmp;\n+  using std::strncmp;\n+  using std::memcmp;\n+\n   //sanity check\n   test_value(strcmp(\"costa marbella\", \"costa rica\"), lt); \n   test_value(strcmp(\"costa rica\", \"costa rica\"), z);"}]}