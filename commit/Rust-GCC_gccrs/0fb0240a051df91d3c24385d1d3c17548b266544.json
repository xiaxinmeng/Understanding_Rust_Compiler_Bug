{"sha": "0fb0240a051df91d3c24385d1d3c17548b266544", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiMDI0MGEwNTFkZjkxZDNjMjQzODVkMWQzYzE3NTQ4YjI2NjU0NA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-25T10:01:43Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-03-25T10:01:43Z"}, "message": "Fix handling of --with{,out}-zstd option.\n\n\tPR lto/94259\n\t* configure.ac: Respect --without-zstd and report\n\terror when we can't find header file with --with-zstd.\n\t* configure: Regenerate.", "tree": {"sha": "00a0591a682315130375ec33687766295037c387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00a0591a682315130375ec33687766295037c387"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fb0240a051df91d3c24385d1d3c17548b266544", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEE6I4wzqqylQBfXaRhTcGC3A+nN4UFAl57LAcACgkQTcGC3A+n\nN4Vmiwf/bO12zdc5Jp+boMMuwNh0PtsfEx15E3kvTyfe1Dj+4C7SC1aWL05MEWS5\nNRvRXg6qazIjvbv4iVm5+I4hQWzzDiZxjoagsnn+IRl6ofLuvqzW/vJeHF+XDvHV\nL/HJuGxYutupcHeDormPWy/sfuaXMxylaoP0zrEFdKg1tTYQPkSAJatHe0WEj9v0\ni8fu3h+x3cticT0WI8b34cd8WZpAC1QKYgfGa/LvWkVXcLt9tgsuaMtwhzumYOow\n7V6HP4bAsAPdB+d+iahnOwWqQXh/wM6iqGhqVlMeWza2IBUwSlCTuL2vhI7RuHpi\nC1LtHCh+DhaleZCAyhMm9N8ATcldgg==\n=DYIV\n-----END PGP SIGNATURE-----", "payload": "tree 00a0591a682315130375ec33687766295037c387\nparent c8504ebef1d6a799600b8e5d255c704b7b3aa19c\nauthor Martin Liska <mliska@suse.cz> 1585130503 +0100\ncommitter Martin Liska <mliska@suse.cz> 1585130503 +0100\n\nFix handling of --with{,out}-zstd option.\n\n\tPR lto/94259\n\t* configure.ac: Respect --without-zstd and report\n\terror when we can't find header file with --with-zstd.\n\t* configure: Regenerate.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb0240a051df91d3c24385d1d3c17548b266544", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb0240a051df91d3c24385d1d3c17548b266544", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb0240a051df91d3c24385d1d3c17548b266544/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8504ebef1d6a799600b8e5d255c704b7b3aa19c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8504ebef1d6a799600b8e5d255c704b7b3aa19c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8504ebef1d6a799600b8e5d255c704b7b3aa19c"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "89cfb07b457b279252cf157099fc6a183cefa937", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb0240a051df91d3c24385d1d3c17548b266544/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb0240a051df91d3c24385d1d3c17548b266544/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fb0240a051df91d3c24385d1d3c17548b266544", "patch": "@@ -1,3 +1,10 @@\n+2020-03-25  Martin Liska  <mliska@suse.cz>\n+\n+\tPR lto/94259\n+\t* configure.ac: Respect --without-zstd and report\n+\terror when we can't find header file with --with-zstd.\n+\t* configure: Regenerate.\n+\n 2020-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/94303"}, {"sha": "b4231fe7b7e0f013c0b843672347bfaf8613824e", "filename": "gcc/configure", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb0240a051df91d3c24385d1d3c17548b266544/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb0240a051df91d3c24385d1d3c17548b266544/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=0fb0240a051df91d3c24385d1d3c17548b266544", "patch": "@@ -9962,13 +9962,15 @@ fi\n case \"x$with_zstd\" in\n   x) ;;\n   xno)\n-    ZSTD_INCLUDE=no\n-    ZSTD_LIB=no\n+    ZSTD_INCLUDE=\n+    ZSTD_LIB=\n     ;;\n   *) ZSTD_INCLUDE=$with_zstd/include\n      ZSTD_LIB=$with_zstd/lib\n      ;;\n esac\n+\n+if test \"x$with_zstd\" != xno; then\n if test \"x$with_zstd_include\" != x; then\n   ZSTD_INCLUDE=$with_zstd_include\n fi\n@@ -10017,6 +10019,8 @@ if test $gcc_cv_header_zstd_h = yes; then\n \n $as_echo \"#define HAVE_ZSTD_H 1\" >>confdefs.h\n \n+else\n+    as_fn_error $? \"Unable to find zstd.h.  See config.log for details.\" \"$LINENO\" 5\n fi\n \n # LTO can use zstd compression algorithm\n@@ -10081,6 +10085,7 @@ fi\n ZSTD_LIB=\"$LIBS\"\n LIBS=\"$save_LIBS\"\n \n+fi\n \n \n \n@@ -18980,7 +18985,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18983 \"configure\"\n+#line 18988 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19086,7 +19091,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19089 \"configure\"\n+#line 19094 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "0051963c85d2e1572798e6bfb72c3f481d332be4", "filename": "gcc/configure.ac", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb0240a051df91d3c24385d1d3c17548b266544/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb0240a051df91d3c24385d1d3c17548b266544/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=0fb0240a051df91d3c24385d1d3c17548b266544", "patch": "@@ -1334,13 +1334,15 @@ AC_ARG_WITH(zstd-lib,\n case \"x$with_zstd\" in\n   x) ;;\n   xno)\n-    ZSTD_INCLUDE=no\n-    ZSTD_LIB=no\n+    ZSTD_INCLUDE=\n+    ZSTD_LIB=\n     ;;\n   *) ZSTD_INCLUDE=$with_zstd/include\n      ZSTD_LIB=$with_zstd/lib\n      ;;\n esac\n+\n+if test \"x$with_zstd\" != xno; then\n if test \"x$with_zstd_include\" != x; then\n   ZSTD_INCLUDE=$with_zstd_include\n fi\n@@ -1369,6 +1371,8 @@ AC_MSG_RESULT($gcc_cv_header_zstd_h)\n if test $gcc_cv_header_zstd_h = yes; then\n   AC_DEFINE(HAVE_ZSTD_H, 1,\n \t[Define if you have a working <zstd.h> header file.])\n+else\n+    as_fn_error $? \"Unable to find zstd.h.  See config.log for details.\" \"$LINENO\" 5\n fi\n \n # LTO can use zstd compression algorithm\n@@ -1378,6 +1382,7 @@ AC_SEARCH_LIBS(ZSTD_compress, zstd)\n ZSTD_LIB=\"$LIBS\"\n LIBS=\"$save_LIBS\"\n AC_SUBST(ZSTD_LIB)\n+fi\n \n dnl Disabled until we have a complete test for buggy enum bitfields.\n dnl gcc_AC_C_ENUM_BF_UNSIGNED"}]}