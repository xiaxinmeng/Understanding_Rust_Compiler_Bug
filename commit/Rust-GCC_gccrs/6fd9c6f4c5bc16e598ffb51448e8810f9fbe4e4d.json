{"sha": "6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZkOWM2ZjRjNWJjMTZlNTk4ZmZiNTE0NDhlODgxMGY5ZmJlNGU0ZA==", "commit": {"author": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-10-14T08:52:10Z"}, "committer": {"name": "Andre Vehreschild", "email": "vehre@gcc.gnu.org", "date": "2016-10-14T08:52:10Z"}, "message": "coarray_38.f90: Expect error message.\n\ngcc/testsuite/ChangeLog:\n\n2016-10-14  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\t* gfortran.dg/coarray_38.f90: Expect error message.\n\ngcc/fortran/ChangeLog:\n\n2016-10-14  Andre Vehreschild  <vehre@gcc.gnu.org>\n\n\t* resolve.c (resolve_symbol): Add unimplemented message for\n\tpolymorphic types with allocatable/pointer components and coarray=lib.\n\nFrom-SVN: r241150", "tree": {"sha": "b9259b566db781670e32403b65b6826384906957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b9259b566db781670e32403b65b6826384906957"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/comments", "author": null, "committer": null, "parents": [{"sha": "01f440383c8758c7ecc80605cae98cc48c4ec335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01f440383c8758c7ecc80605cae98cc48c4ec335", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01f440383c8758c7ecc80605cae98cc48c4ec335"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "a3e1f49c3f2955ae43f969a977421ded7a47baba", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "patch": "@@ -1,3 +1,8 @@\n+2016-10-14  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\t* resolve.c (resolve_symbol): Add unimplemented message for\n+\tpolymorphic types with allocatable/pointer components and coarray=lib.\n+\n 2016-10-13  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n \n \t* trans-intrinsic.c: Include memmodel.h."}, {"sha": "e03979e1710c44013b7777138c6b14f2c7c80bb3", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "patch": "@@ -13787,6 +13787,19 @@ resolve_symbol (gfc_symbol *sym)\n      (just like derived type declaration symbols have flavor FL_DERIVED). */\n   gcc_assert (sym->ts.type != BT_UNION);\n \n+  /* Coarrayed polymorphic objects with allocatable or pointer components are\n+     yet unsupported for -fcoarray=lib.  */\n+  if (flag_coarray == GFC_FCOARRAY_LIB && sym->ts.type == BT_CLASS\n+      && sym->ts.u.derived && CLASS_DATA (sym)\n+      && CLASS_DATA (sym)->attr.codimension\n+      && (sym->ts.u.derived->attr.alloc_comp\n+\t  || sym->ts.u.derived->attr.pointer_comp))\n+    {\n+      gfc_error (\"Sorry, allocatable/pointer components in polymorphic (CLASS) \"\n+\t\t \"type coarrays at %L are unsupported\", &sym->declared_at);\n+      return;\n+    }\n+\n   if (sym->attr.artificial)\n     return;\n "}, {"sha": "9596d77e362e4a9d6c214a51d50bd1940fd2b296", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "patch": "@@ -1,3 +1,7 @@\n+2016-10-14  Andre Vehreschild  <vehre@gcc.gnu.org>\n+\n+\t* gfortran.dg/coarray_38.f90: Expect error message.\n+\n 2016-10-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* gcc.target/aarch64/spellcheck_1.c: New test."}, {"sha": "c8011d447078bc47a87b1d920de7ac5a1d28c3f3", "filename": "gcc/testsuite/gfortran.dg/coarray_38.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_38.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_38.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcoarray_38.f90?ref=6fd9c6f4c5bc16e598ffb51448e8810f9fbe4e4d", "patch": "@@ -71,7 +71,7 @@ subroutine four\n type t2\n   class(t), allocatable :: caf2[:]\n end type t2\n-class(t), allocatable :: caf[:]\n+class(t), allocatable :: caf[:] ! { dg-error \"Sorry, allocatable/pointer components in polymorphic\" }\n type(t) :: x\n type(t2) :: y\n "}]}