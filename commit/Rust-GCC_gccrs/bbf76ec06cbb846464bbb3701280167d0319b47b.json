{"sha": "bbf76ec06cbb846464bbb3701280167d0319b47b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJmNzZlYzA2Y2JiODQ2NDY0YmJiMzcwMTI4MDE2N2QwMzE5YjQ3Yg==", "commit": {"author": {"name": "Mohan Embar", "email": "gnustuff@thisiscool.com", "date": "2003-11-07T03:13:56Z"}, "committer": {"name": "Mohan Embar", "email": "membar@gcc.gnu.org", "date": "2003-11-07T03:13:56Z"}, "message": "win32.h (_Jv_platform_close_on_exec): Changed signature and declared extern.\n\n\t* include/win32.h (_Jv_platform_close_on_exec): Changed\n\tsignature and declared extern.\n\t* win32.cc (_Jv_platform_close_on_exec): Implemented.\n\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc\n\t(create): Use new signature of _Jv_platform_close_on_exec.\n\t* gnu/java/net/natPlainSocketImplWin32.cc\n\t(create): Eliminated a few typecasts\n\tUse new signature of _Jv_platform_close_on_exec.\n\t(accept): Eliminated a few typecasts\n\tUse new signature of _Jv_platform_close_on_exec.\n\t* java/io/natFileDescriptorWin32.cc (open): Use\n\t_Jv_platform_close_on_exec.\n\nFrom-SVN: r73325", "tree": {"sha": "c9570d50348a6ac911e60fd0d891fb96bfe37fcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9570d50348a6ac911e60fd0d891fb96bfe37fcc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbf76ec06cbb846464bbb3701280167d0319b47b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf76ec06cbb846464bbb3701280167d0319b47b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbf76ec06cbb846464bbb3701280167d0319b47b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbf76ec06cbb846464bbb3701280167d0319b47b/comments", "author": null, "committer": null, "parents": [{"sha": "eb4ad71ac1d151524c097e7f956d44b3b7eafd52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb4ad71ac1d151524c097e7f956d44b3b7eafd52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb4ad71ac1d151524c097e7f956d44b3b7eafd52"}], "stats": {"total": 70, "additions": 53, "deletions": 17}, "files": [{"sha": "9b1af441622f45c94412113510ee92f9b2c7229b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=bbf76ec06cbb846464bbb3701280167d0319b47b", "patch": "@@ -1,3 +1,18 @@\n+2003-11-06  Mohan Embar  <gnustuff@thisiscool.com>\n+\n+\t* include/win32.h (_Jv_platform_close_on_exec): Changed\n+\tsignature and declared extern.\n+\t* win32.cc (_Jv_platform_close_on_exec): Implemented.\n+\t* gnu/java/net/natPlainDatagramSocketImplWin32.cc\n+\t(create): Use new signature of _Jv_platform_close_on_exec.\n+\t* gnu/java/net/natPlainSocketImplWin32.cc \n+\t(create): Eliminated a few typecasts\n+\tUse new signature of _Jv_platform_close_on_exec.\n+\t(accept): Eliminated a few typecasts\n+\tUse new signature of _Jv_platform_close_on_exec.\n+\t* java/io/natFileDescriptorWin32.cc (open): Use\n+\t_Jv_platform_close_on_exec.\n+\n 2003-11-04  Bryce McKinlay  <bryce@mckinlay.net.nz>\n \n \t* java/lang/natClass.cc (newInstance): Throw InstantiationException"}, {"sha": "4a4ec986c612e2dae61b95969c30aade9d08d3e5", "filename": "libjava/gnu/java/net/natPlainDatagramSocketImplWin32.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainDatagramSocketImplWin32.cc?ref=bbf76ec06cbb846464bbb3701280167d0319b47b", "patch": "@@ -69,11 +69,14 @@ gnu::java::net::PlainDatagramSocketImpl::create ()\n       _Jv_ThrowSocketException ();\n     }\n \n-  _Jv_platform_close_on_exec (sock);\n+  // Cast this to a HANDLE so we can make\n+  // it non-inheritable via _Jv_platform_close_on_exec.\n+  HANDLE hSocket = (HANDLE) sock;\n+  _Jv_platform_close_on_exec (hSocket);\n \n   // We use native_fd in place of fd here.  From leaving fd null we avoid\n   // the double close problem in FileDescriptor.finalize.\n-  native_fd = (int) sock;\n+  native_fd = (jint) hSocket;\n }\n \n void"}, {"sha": "c1c813ec7adc280eab6c45d2c9d9d28b69f3384e", "filename": "libjava/gnu/java/net/natPlainSocketImplWin32.cc", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnet%2FnatPlainSocketImplWin32.cc?ref=bbf76ec06cbb846464bbb3701280167d0319b47b", "patch": "@@ -45,18 +45,21 @@ union SockAddr\n void\n gnu::java::net::PlainSocketImpl::create (jboolean stream)\n {\n-  int sock = ::socket (AF_INET, stream ? SOCK_STREAM : SOCK_DGRAM, 0);\n+  SOCKET sock = ::socket (AF_INET, stream ? SOCK_STREAM : SOCK_DGRAM, 0);\n \n-  if (sock == int(INVALID_SOCKET))\n+  if (sock == INVALID_SOCKET)\n     {\n       _Jv_ThrowIOException ();\n     }\n \n-  _Jv_platform_close_on_exec (sock);\n+  // Cast this to a HANDLE so we can make\n+  // it non-inheritable via _Jv_platform_close_on_exec.\n+  HANDLE hSocket = (HANDLE) sock;\n+  _Jv_platform_close_on_exec (hSocket);\n \n   // We use native_fd in place of fd here.  From leaving fd null we avoid\n   // the double close problem in FileDescriptor.finalize.\n-  native_fd = sock;\n+  native_fd = (jint) hSocket;\n }\n \n void\n@@ -230,7 +233,8 @@ gnu::java::net::PlainSocketImpl::accept (gnu::java::net::PlainSocketImpl *s)\n {\n   union SockAddr u;\n   socklen_t addrlen = sizeof(u);\n-  int new_socket = 0;\n+  HANDLE hSocket = 0;\n+  SOCKET new_socket = 0;\n \n   if (timeout > 0)\n     {\n@@ -245,7 +249,7 @@ gnu::java::net::PlainSocketImpl::accept (gnu::java::net::PlainSocketImpl *s)\n       {\n         new_socket = ::accept (native_fd, (sockaddr*) &u, &addrlen);\n \n-        if (new_socket != int(INVALID_SOCKET))\n+        if (new_socket != INVALID_SOCKET)\n         {\n           // This new child socket is nonblocking because the parent\n           // socket became nonblocking via the WSAEventSelect() call,\n@@ -284,10 +288,13 @@ gnu::java::net::PlainSocketImpl::accept (gnu::java::net::PlainSocketImpl *s)\n       new_socket = ::accept (native_fd, (sockaddr*) &u, &addrlen);\n     }\n \n-  if (new_socket == int(INVALID_SOCKET))\n+  if (new_socket == INVALID_SOCKET)\n     goto error;\n \n-  _Jv_platform_close_on_exec (new_socket);\n+  // Cast this to a HANDLE so we can make\n+  // it non-inheritable via _Jv_platform_close_on_exec.\n+  hSocket = (HANDLE) new_socket;\n+  _Jv_platform_close_on_exec (hSocket);\n \n   jbyteArray raddr;\n   jint rport;\n@@ -308,7 +315,7 @@ gnu::java::net::PlainSocketImpl::accept (gnu::java::net::PlainSocketImpl *s)\n   else\n     throw new ::java::net::SocketException (JvNewStringUTF (\"invalid family\"));\n \n-  s->native_fd = new_socket;\n+  s->native_fd = (jint) hSocket;\n   s->localport = localport;\n   s->address = new ::java::net::InetAddress (raddr, NULL);\n   s->port = rport;"}, {"sha": "479ed53f00ec96b9a42a3f319c3b6c0cd64ba895", "filename": "libjava/include/win32.h", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Finclude%2Fwin32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Finclude%2Fwin32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fwin32.h?ref=bbf76ec06cbb846464bbb3701280167d0319b47b", "patch": "@@ -97,11 +97,8 @@ extern jlong _Jv_platform_gettimeofday ();\n extern int _Jv_select (int n, fd_set *, fd_set *, fd_set *, struct timeval *);\n extern int _Jv_pipe (int filedes[2]);\n \n-inline void\n-_Jv_platform_close_on_exec (jint)\n-{\n-  // Ignore.\n-}\n+extern void\n+_Jv_platform_close_on_exec (HANDLE h);\n \n #ifdef JV_HASH_SYNCHRONIZATION\n /* Suspends the execution of the current thread for the specified"}, {"sha": "465d7557992edecedf61060207cd4ac6b65a30e0", "filename": "libjava/java/io/natFileDescriptorWin32.cc", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFileDescriptorWin32.cc?ref=bbf76ec06cbb846464bbb3701280167d0319b47b", "patch": "@@ -133,7 +133,13 @@ java::io::FileDescriptor::open (jstring path, jint jflags) {\n         throw new FileNotFoundException (_Jv_WinStrError (cpath, dwErrorCode));\n       }\n     }\n-  return (jint)handle;\n+    \n+  // Make this handle non-inheritable so that child\n+  // processes don't inadvertently prevent us from\n+  // closing this file.\n+  _Jv_platform_close_on_exec (handle);\n+\n+  return (jint) handle;\n }\n \n void"}, {"sha": "dfed8c436603c0317a2e60b3e309bb74047eb5fc", "filename": "libjava/win32.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Fwin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbf76ec06cbb846464bbb3701280167d0319b47b/libjava%2Fwin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fwin32.cc?ref=bbf76ec06cbb846464bbb3701280167d0319b47b", "patch": "@@ -363,3 +363,11 @@ _Jv_pipe (int filedes[2])\n {\n   return _pipe (filedes, 4096, _O_BINARY);\n }\n+\n+void\n+_Jv_platform_close_on_exec (HANDLE h)\n+{\n+  // Mark the handle as non-inheritable. This has\n+  // no effect under Win9X.\n+  SetHandleInformation (h, HANDLE_FLAG_INHERIT, 0);\n+}"}]}