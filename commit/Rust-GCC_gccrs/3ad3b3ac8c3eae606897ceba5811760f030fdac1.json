{"sha": "3ad3b3ac8c3eae606897ceba5811760f030fdac1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FkM2IzYWM4YzNlYWU2MDY4OTdjZWJhNTgxMTc2MGYwMzBmZGFjMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2018-08-22T12:58:53Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-08-22T12:58:53Z"}, "message": "Only test STMT_VINFO_STRIDED_P for the first statement in a group\n\nget_load_store_type & co were testing STMT_VINFO_STRIDED_P on individual\nstatements in a group instead of the first.  This has no effect on\nits own, but is needed by a later patch.\n\n2018-08-22  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vect-stmts.c (get_group_load_store_type)\n\t(get_load_store_type): Only test STMT_VINFO_STRIDED_P for the\n\tfirst statement in a group.\n\nFrom-SVN: r263771", "tree": {"sha": "5397fa7f558b0c6749ba0c73da2c7cf3b44d8af5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5397fa7f558b0c6749ba0c73da2c7cf3b44d8af5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ad3b3ac8c3eae606897ceba5811760f030fdac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad3b3ac8c3eae606897ceba5811760f030fdac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ad3b3ac8c3eae606897ceba5811760f030fdac1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ad3b3ac8c3eae606897ceba5811760f030fdac1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "257d10b524dbf6e026c5f67e4053b2612661e272", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257d10b524dbf6e026c5f67e4053b2612661e272", "html_url": "https://github.com/Rust-GCC/gccrs/commit/257d10b524dbf6e026c5f67e4053b2612661e272"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "099cf968b14130a356cca3c56ee6a65367af6bfb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad3b3ac8c3eae606897ceba5811760f030fdac1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad3b3ac8c3eae606897ceba5811760f030fdac1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ad3b3ac8c3eae606897ceba5811760f030fdac1", "patch": "@@ -1,3 +1,9 @@\n+2018-08-22  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-stmts.c (get_group_load_store_type)\n+\t(get_load_store_type): Only test STMT_VINFO_STRIDED_P for the\n+\tfirst statement in a group.\n+\n 2018-08-22  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.h (LINK_COMMAND_SPEC_A): Sync LTO options with"}, {"sha": "8fcb1e2f8bcf7e1b05d410a0ee6853c388db11e1", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ad3b3ac8c3eae606897ceba5811760f030fdac1/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ad3b3ac8c3eae606897ceba5811760f030fdac1/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=3ad3b3ac8c3eae606897ceba5811760f030fdac1", "patch": "@@ -2191,14 +2191,14 @@ get_group_load_store_type (stmt_vec_info stmt_info, tree vectype, bool slp,\n \n   /* There can only be a gap at the end of the group if the stride is\n      known at compile time.  */\n-  gcc_assert (!STMT_VINFO_STRIDED_P (stmt_info) || gap == 0);\n+  gcc_assert (!STMT_VINFO_STRIDED_P (first_stmt_info) || gap == 0);\n \n   /* Stores can't yet have gaps.  */\n   gcc_assert (slp || vls_type == VLS_LOAD || gap == 0);\n \n   if (slp)\n     {\n-      if (STMT_VINFO_STRIDED_P (stmt_info))\n+      if (STMT_VINFO_STRIDED_P (first_stmt_info))\n \t{\n \t  /* Try to use consecutive accesses of DR_GROUP_SIZE elements,\n \t     separated by the stride, until we have a complete vector.\n@@ -2255,7 +2255,7 @@ get_group_load_store_type (stmt_vec_info stmt_info, tree vectype, bool slp,\n \t\t    / vect_get_scalar_dr_size (first_dr_info)))\n \twould_overrun_p = false;\n \n-      if (!STMT_VINFO_STRIDED_P (stmt_info)\n+      if (!STMT_VINFO_STRIDED_P (first_stmt_info)\n \t  && (can_overrun_p || !would_overrun_p)\n \t  && compare_step_with_zero (stmt_info) > 0)\n \t{\n@@ -2466,8 +2466,11 @@ get_load_store_type (stmt_vec_info stmt_info, tree vectype, bool slp,\n   /* FIXME: At the moment the cost model seems to underestimate the\n      cost of using elementwise accesses.  This check preserves the\n      traditional behavior until that can be fixed.  */\n+  stmt_vec_info first_stmt_info = DR_GROUP_FIRST_ELEMENT (stmt_info);\n+  if (!first_stmt_info)\n+    first_stmt_info = stmt_info;\n   if (*memory_access_type == VMAT_ELEMENTWISE\n-      && !STMT_VINFO_STRIDED_P (stmt_info)\n+      && !STMT_VINFO_STRIDED_P (first_stmt_info)\n       && !(stmt_info == DR_GROUP_FIRST_ELEMENT (stmt_info)\n \t   && !DR_GROUP_NEXT_ELEMENT (stmt_info)\n \t   && !pow2p_hwi (DR_GROUP_SIZE (stmt_info))))"}]}