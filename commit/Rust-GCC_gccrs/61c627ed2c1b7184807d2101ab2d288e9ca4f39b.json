{"sha": "61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFjNjI3ZWQyYzFiNzE4NDgwN2QyMTAxYWIyZDI4OGU5Y2E0ZjM5Yg==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola@brainstorm.co.uk", "date": "2004-06-01T07:40:02Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-06-01T07:40:02Z"}, "message": "re PR objc/7993 (private variables cannot be shadowed in subclasses)\n\n2004-06-01  Nicola Pero  <nicola@brainstorm.co.uk>\n\n \tFix PR objc/7993:\n\t* objc-act.c (is_private): Do not emit the 'instance variable %s\n\tis declared private' error.\n\t(is_public): Emit the error after calling is_private.\n\t(lookup_objc_ivar): If the instance variable is private, return 0\n\t- the instance variable is invisible here.\ntestsuite:\n\t* objc.dg/private-1.m, objc-dg/private-2.m: New testcases.\n\nFrom-SVN: r82532", "tree": {"sha": "139086f8092179d1478c674d6dd17965d6d53178", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/139086f8092179d1478c674d6dd17965d6d53178"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/comments", "author": null, "committer": null, "parents": [{"sha": "d314442396916fa65739d6baeb24b2f0cfc76634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d314442396916fa65739d6baeb24b2f0cfc76634", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d314442396916fa65739d6baeb24b2f0cfc76634"}], "stats": {"total": 164, "additions": 146, "deletions": 18}, "files": [{"sha": "9e3fd3b527145634c712bc1a08769811635c25b6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "patch": "@@ -1,3 +1,12 @@\n+2004-06-01  Nicola Pero  <nicola@brainstorm.co.uk>\n+\n+ \tPR objc/7993\n+\t* objc-act.c (is_private): Do not emit the 'instance variable %s\n+\tis declared private' error.\n+\t(is_public): Emit the error after calling is_private.\n+\t(lookup_objc_ivar): If the instance variable is private, return 0\n+\t- the instance variable is invisible here.\n+\n 2004-06-01  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* doc/invoke.texi (-static-libgcc): Explicitly mention\n@@ -315,7 +324,7 @@\n \tand the remaining even if flag_unsafe_math_optimizations\n \tis off but we are under -fno-trapping-math.\n \t(fold_relational_const): Integer modes do not honor NaNs.\n-\t\n+\n 2004-05-28  Paul Brook  <paul@codesourcery.com>\n \n \t* config/arm/arm.c (arm_output_epilogue): Remove redundant code.\n@@ -475,13 +484,13 @@\n \tcalculate_local_reg_bb_info, set_up_bb_rts_numbers, rpost_cmp,\n \tmodify_bb_reg_pav, calculate_reg_pav,\n \tmake_accurate_live_analysis): New functions.\n-\t\n+\n 2004-05-25  Devang Patel  <dpatel@apple.com>\n \n \t* alias.c (init_alias_analysis): Use ggc_calloc instead of\n \txrealloc.\n \t(end_alias_analysis): Use ggc_free instead fo free.\n-\t\n+\n 2004-05-25  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR target/15546\n@@ -556,15 +565,15 @@\n \t(nonzero_bits, cached_nonzero_bits, nonzero_bits1,\n \tnum_sign_bit_copies, cached_num_sign_bit_copies,\n \tnum_sign_bit_copies1): New, from combine.c.\n-\t* rtlhooks.c: New file. \n+\t* rtlhooks.c: New file.\n \n 2004-05-25  Svein E. Seldal  <Svein.Seldal@solidas.com>\n \n \t* config/avr/avr.h (LONG_LONG_TYPE_SIZE): Changed long long type\n \tto support 32-bit -mint8 mode.\n \n \t* doc/invoke.texi (-mint8): Added documentation for the -mint8\n-\toption in the AVR architecture. \n+\toption in the AVR architecture.\n \n 2004-05-24  Mike Stump  <mrs@apple.com>\n \n@@ -598,7 +607,7 @@\n \n \tPR tree-optimization/14197\n \t* builtins.c: Include \"tree-gimple.h\"\n-\t(readonly_data_expr): Use get_base_address.  Make sure to call \n+\t(readonly_data_expr): Use get_base_address.  Make sure to call\n \tdecl_readonly_section only on trees it can handle.\n \t* tree-gimple.c (get_base_address): Accept STRING_CST and\n \tCONSTRUCTOR expressions."}, {"sha": "07074330adfe60df4283628bd19a9ff0a4cdadd6", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "patch": "@@ -6467,15 +6467,9 @@ is_ivar (tree decl_chain, tree ident)\n int\n is_private (tree decl)\n {\n-  if (TREE_PRIVATE (decl)\n-      && ! is_ivar (CLASS_IVARS (implementation_template), DECL_NAME (decl)))\n-    {\n-      error (\"instance variable `%s' is declared private\",\n-\t     IDENTIFIER_POINTER (DECL_NAME (decl)));\n-      return 1;\n-    }\n-  else\n-    return 0;\n+  return (TREE_PRIVATE (decl)\n+\t  && ! is_ivar (CLASS_IVARS (implementation_template),\n+\t\t\tDECL_NAME (decl)));\n }\n \n /* We have an instance variable reference;, check to see if it is public.  */\n@@ -6513,7 +6507,14 @@ is_public (tree expr, tree identifier)\n \t\t\t   == CATEGORY_IMPLEMENTATION_TYPE))\n \t\t      && (CLASS_NAME (objc_implementation_context)\n \t\t\t  == OBJC_TYPE_NAME (basetype))))\n-\t\treturn ! is_private (decl);\n+\t\t{\n+\t\t  int private = is_private (decl);\n+\n+\t\t  if (private)\n+\t\t    error (\"instance variable `%s' is declared private\",\n+\t\t\t   IDENTIFIER_POINTER (DECL_NAME (decl)));\n+\t\t  return !private;\n+\t\t}\n \n \t      /* The 2.95.2 compiler sometimes allowed C functions to access\n \t\t non-@public ivars.  We will let this slide for now...  */\n@@ -9066,7 +9067,7 @@ lookup_objc_ivar (tree id)\n   else if (objc_method_context && (decl = is_ivar (objc_ivar_chain, id)))\n     {\n       if (is_private (decl))\n-\treturn error_mark_node;\n+\treturn 0;\n       else\n         return build_ivar_reference (id);\n     }"}, {"sha": "0c34a57a740afe2c2f496d9ffdd9886a88cbdb53", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "patch": "@@ -1,3 +1,8 @@\n+2004-06-01  Nicola Pero  <nicola@brainstorm.co.uk>\n+\n+ \tPR objc/7993\n+\t* objc.dg/private-1.m, objc-dg/private-2.m: New testcases.\n+\n 2004-05-31  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/15701\n@@ -207,7 +212,7 @@\n \t* gfortran.fortran-torture/execute/power.f90: Test constant integers.\n \n 2004-05-18  Andrew Pinski  <pinskia@physics.uc.edu>\n-            Jeff Law  <law@redhat.com>\n+\t    Jeff Law  <law@redhat.com>\n \n \t* gcc.dg/tree-ssa/20040514-2.c: Update expected output.\n \t* gcc.dg/tree-ssa/20040518-2.c: New test."}, {"sha": "f4d8a5268bacc3070cfe5239bb921b0a9335a156", "filename": "gcc/testsuite/objc.dg/private-1.m", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-1.m?ref=61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "patch": "@@ -0,0 +1,59 @@\n+/* Test errors for accessing @private and @protected variables.  */\n+/* Author: Nicola Pero <nicola@brainstorm.co.uk>.  */\n+/* { dg-do compile } */\n+#include <objc/objc.h>\n+\n+@interface MySuperClass\n+{\n+@private\n+  int private;\n+\n+@protected\n+  int protected;\n+\n+@public\n+  int public;\n+}\n+- (void) test;\n+@end\n+\n+@implementation MySuperClass\n+- (void) test\n+{\n+  private = 12;   /* Ok  */\n+  protected = 12; /* Ok  */\n+  public = 12;    /* Ok  */\n+}\n+@end\n+\n+\n+@interface MyClass : MySuperClass \n+@end\n+\n+@implementation MyClass\n+- (void) test\n+{\n+  /* Private variables simply don't exist in the subclass.  */\n+  private = 12;/* { dg-error \"undeclared\" } */\n+  /* { dg-error \"function it appears in\" \"\" { target *-*-* } { 37 } } */\n+\n+  protected = 12; /* Ok  */\n+  public = 12;    /* Ok  */\n+}\n+@end\n+\n+int main (void)\n+{\n+  MyClass *m = nil;\n+  \n+  if (m != nil)\n+    {\n+      int access;\n+\n+      access = m->private;   /* { dg-error \"is @private\" }  */\n+      access = m->protected; /* { dg-error \"is @protected\" }  */\n+      access = m->public;    /* Ok  */\n+    }\n+\n+  return 0;\n+}"}, {"sha": "eff376a0c84bbbc396442ccc047ee7fddb4a8974", "filename": "gcc/testsuite/objc.dg/private-2.m", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61c627ed2c1b7184807d2101ab2d288e9ca4f39b/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fprivate-2.m?ref=61c627ed2c1b7184807d2101ab2d288e9ca4f39b", "patch": "@@ -0,0 +1,54 @@\n+/* Test warnings for shadowing instance variables.  */\n+/* Author: Nicola Pero <nicola@brainstorm.co.uk>.  */\n+/* { dg-do compile } */\n+#include <objc/objc.h>\n+\n+@interface MySuperClass\n+{\n+@private\n+  int private;\n+\n+@protected\n+  int protected;\n+\n+@public\n+  int public;\n+}\n+- (void) test;\n+@end\n+\n+@implementation MySuperClass\n+- (void) test\n+{\n+  /* FIXME: I wonder if the warnings shouldn't be better generated\n+     when the variable is declared, rather than used!  */\n+  int private = 12;\n+  int protected = 12;\n+  int public = 12;\n+  int a;\n+  \n+  a = private;    /* { dg-warning \"hides instance variable\" } */\n+  a = protected;  /* { dg-warning \"hides instance variable\" } */\n+  a = public;     /* { dg-warning \"hides instance variable\" } */\n+}\n+@end\n+\n+\n+@interface MyClass : MySuperClass \n+@end\n+\n+@implementation MyClass\n+- (void) test\n+{\n+  int private = 12;\n+  int protected = 12;\n+  int public = 12;\n+  int a;\n+\n+  /* The private variable can be shadowed without warnings, because\n+   * it's invisible, and not accessible, to the subclass!  */\n+  a = private;   /* Ok  */\n+  a = protected; /* { dg-warning \"hides instance variable\" } */\n+  a = public;    /* { dg-warning \"hides instance variable\" } */\n+}\n+@end"}]}