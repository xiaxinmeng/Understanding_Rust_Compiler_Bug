{"sha": "06e32a5ebf20c11dd31bc2677bede569fef84316", "node_id": "C_kwDOANBUbNoAKDA2ZTMyYTVlYmYyMGMxMWRkMzFiYzI2NzdiZWRlNTY5ZmVmODQzMTY", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-01-25T12:44:04Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-02-05T08:10:12Z"}, "message": "RISC-V: Always pass -misa-spec to assembler [PR104219]\n\nAdd -misa-spec to OPTION_DEFAULT_SPECS to make sure -misa-spec will\nalways pass that into assembler, that prevent GCC and binutils using\ndifferent way to interpret the ISA string.\n\ngcc/ChangeLog:\n\n\tPR target/104219\n\t* config.gcc (riscv*-*-*): Normalize the with_isa_spec value.\n\t(all_defaults): Add isa_spec.\n\t* config/riscv/riscv.h (OPTION_DEFAULT_SPECS): Add isa_spec.", "tree": {"sha": "f5c4044dad74f9b18895ae89c5621d1a7694003f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5c4044dad74f9b18895ae89c5621d1a7694003f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/06e32a5ebf20c11dd31bc2677bede569fef84316", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e32a5ebf20c11dd31bc2677bede569fef84316", "html_url": "https://github.com/Rust-GCC/gccrs/commit/06e32a5ebf20c11dd31bc2677bede569fef84316", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/06e32a5ebf20c11dd31bc2677bede569fef84316/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "119cea98f664764cce04963243c39c8f6d797d33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/119cea98f664764cce04963243c39c8f6d797d33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/119cea98f664764cce04963243c39c8f6d797d33"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "2cc5aeec9e46aacc46e4e509d01f57f9f6585169", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e32a5ebf20c11dd31bc2677bede569fef84316/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e32a5ebf20c11dd31bc2677bede569fef84316/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=06e32a5ebf20c11dd31bc2677bede569fef84316", "patch": "@@ -4643,12 +4643,14 @@ case \"${target}\" in\n \t\tcase \"${with_isa_spec}\" in\n \t\t\"\"|default|20191213|201912)\n \t\t\ttm_defines=\"${tm_defines} TARGET_DEFAULT_ISA_SPEC=ISA_SPEC_CLASS_20191213\"\n+\t\t\twith_isa_spec=20191213\n \t\t\t;;\n \t\t2.2)\n \t\t\ttm_defines=\"${tm_defines} TARGET_DEFAULT_ISA_SPEC=ISA_SPEC_CLASS_2P2\"\n \t\t\t;;\n \t\t20190608 | 201906)\n \t\t\ttm_defines=\"${tm_defines} TARGET_DEFAULT_ISA_SPEC=ISA_SPEC_CLASS_20190608\"\n+\t\t\twith_isa_spec=20190608\n \t\t\t;;\n \t\t*)\n \t\t\techo \"--with-isa-spec only accept 2.2, 20191213, 201912, 20190608 or 201906\" 1>&2\n@@ -5430,7 +5432,7 @@ case ${target} in\n esac\n \n t=\n-all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu nan fp_32 odd_spreg_32 divide llsc mips-plt synci tls lxc1-sxc1 madd4\"\n+all_defaults=\"abi cpu cpu_32 cpu_64 arch arch_32 arch_64 tune tune_32 tune_64 schedule float mode fpu nan fp_32 odd_spreg_32 divide llsc mips-plt synci tls lxc1-sxc1 madd4 isa_spec\"\n for option in $all_defaults\n do\n \teval \"val=\\$with_\"`echo $option | sed s/-/_/g`"}, {"sha": "8a4d2cf7f85a8945b1ba6215690ce927e69fb624", "filename": "gcc/config/riscv/riscv.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/06e32a5ebf20c11dd31bc2677bede569fef84316/gcc%2Fconfig%2Friscv%2Friscv.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/06e32a5ebf20c11dd31bc2677bede569fef84316/gcc%2Fconfig%2Friscv%2Friscv.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Friscv.h?ref=06e32a5ebf20c11dd31bc2677bede569fef84316", "patch": "@@ -60,6 +60,7 @@ extern const char *riscv_default_mtune (int argc, const char **argv);\n    --with-arch is ignored if -march or -mcpu is specified.\n    --with-abi is ignored if -mabi is specified.\n    --with-tune is ignored if -mtune or -mcpu is specified.\n+   --with-isa-spec is ignored if -misa-spec is specified.\n \n    But using default -march/-mtune value if -mcpu don't have valid option.  */\n #define OPTION_DEFAULT_SPECS \\\n@@ -70,6 +71,7 @@ extern const char *riscv_default_mtune (int argc, const char **argv);\n \t   \"  %{!mcpu=*:-march=%(VALUE)}\"\t\t\t\t\\\n \t   \"  %{mcpu=*:%:riscv_expand_arch_from_cpu(%* %(VALUE))}}\" },\t\\\n   {\"abi\", \"%{!mabi=*:-mabi=%(VALUE)}\" }, \\\n+  {\"isa_spec\", \"%{!misa-spec=*:-misa-spec=%(VALUE)}\" }, \\\n \n #ifdef IN_LIBGCC2\n #undef TARGET_64BIT"}]}