{"sha": "b36e8cac9faaa245baa3c0579a6584d375f24e2c", "node_id": "C_kwDOANBUbNoAKGIzNmU4Y2FjOWZhYWEyNDViYWEzYzA1NzlhNjU4NGQzNzVmMjRlMmM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-12-08T18:46:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-08T18:46:53Z"}, "message": "Merge #1685\n\n1685: Backport 1656 r=CohenArthur a=CohenArthur\n\n\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "cb04188322a6d489b1c1811b4a94c8d2dfcbd8e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb04188322a6d489b1c1811b4a94c8d2dfcbd8e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b36e8cac9faaa245baa3c0579a6584d375f24e2c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjkjEdCRBK7hj4Ov3rIwAAKUkIAErRHXunvlQZbDooz8IRKLxZ\nRAQGxv/AbNxUg+h4l9Gw4UIwAxVPaTdxWN1UBrbXRlT3PPVPozXVIKLpP16r53jc\n0KfPG6nYnLlnCVYuWLagqNVoKoWZX8ghkkLTdbelyPwVa6sbtE/on/zzYexZr2nu\nH3wep1SUSj4+1nei9jZNFSkwOKcArO3RoxLF+FCAMfmcpKVUobnPybq5vRIfOLt9\nl2V4VxEGIcFkozxYAiZnlmG+hUcP+hLYk9iSlR2/Ui2XCwNZnrk58QUydskHEbiL\nWK5fNkNxiAX/SHcT1OkmYCljTZ7vmdTCJ/Iyja0dq/77VUtm1+3aguGq5jPiBt4=\n=CCar\n-----END PGP SIGNATURE-----\n", "payload": "tree cb04188322a6d489b1c1811b4a94c8d2dfcbd8e1\nparent 038e11c3eeb4eb36f8894829af6299abb70f3e04\nparent a2ae23a9f2703519ab0e0709ca9785005c1ed872\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1670525213 +0000\ncommitter GitHub <noreply@github.com> 1670525213 +0000\n\nMerge #1685\n\n1685: Backport 1656 r=CohenArthur a=CohenArthur\n\n\n\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36e8cac9faaa245baa3c0579a6584d375f24e2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b36e8cac9faaa245baa3c0579a6584d375f24e2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b36e8cac9faaa245baa3c0579a6584d375f24e2c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "038e11c3eeb4eb36f8894829af6299abb70f3e04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/038e11c3eeb4eb36f8894829af6299abb70f3e04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/038e11c3eeb4eb36f8894829af6299abb70f3e04"}, {"sha": "a2ae23a9f2703519ab0e0709ca9785005c1ed872", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2ae23a9f2703519ab0e0709ca9785005c1ed872", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2ae23a9f2703519ab0e0709ca9785005c1ed872"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "8df34c24497d445e5b60c6dafb09619136c58717", "filename": "gcc/rust/backend/rust-compile-expr.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36e8cac9faaa245baa3c0579a6584d375f24e2c/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36e8cac9faaa245baa3c0579a6584d375f24e2c/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fbackend%2Frust-compile-expr.cc?ref=b36e8cac9faaa245baa3c0579a6584d375f24e2c", "patch": "@@ -2278,13 +2278,13 @@ CompileExpr::type_cast_expression (tree type_to_cast_to, tree expr_tree,\n     }\n   else if (TREE_CODE (type_to_cast_to) == INTEGER_TYPE)\n     {\n-      tree cast = fold (convert_to_integer (type_to_cast_to, expr_tree));\n+      tree cast = convert_to_integer (type_to_cast_to, expr_tree);\n       // FIXME check for TREE_OVERFLOW?\n       return cast;\n     }\n   else if (TREE_CODE (type_to_cast_to) == REAL_TYPE)\n     {\n-      tree cast = fold (convert_to_real (type_to_cast_to, expr_tree));\n+      tree cast = convert_to_real (type_to_cast_to, expr_tree);\n       // FIXME\n       // We might need to check that the tree is MAX val and thusly saturate it\n       // to inf. we can get the bounds and check the value if its >= or <= to\n@@ -2295,12 +2295,12 @@ CompileExpr::type_cast_expression (tree type_to_cast_to, tree expr_tree,\n     }\n   else if (TREE_CODE (type_to_cast_to) == COMPLEX_TYPE)\n     {\n-      return fold (convert_to_complex (type_to_cast_to, expr_tree));\n+      return convert_to_complex (type_to_cast_to, expr_tree);\n     }\n   else if (TREE_CODE (type_to_cast_to) == POINTER_TYPE\n \t   && TREE_CODE (TREE_TYPE (expr_tree)) == INTEGER_TYPE)\n     {\n-      return fold (convert_to_pointer (type_to_cast_to, expr_tree));\n+      return convert_to_pointer (type_to_cast_to, expr_tree);\n     }\n   else if (TREE_CODE (type_to_cast_to) == RECORD_TYPE\n \t   || TREE_CODE (type_to_cast_to) == ARRAY_TYPE)"}, {"sha": "5bb5313b1dc6d9698d3069b970596ba27da347ab", "filename": "gcc/rust/rust-gcc.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36e8cac9faaa245baa3c0579a6584d375f24e2c/gcc%2Frust%2Frust-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36e8cac9faaa245baa3c0579a6584d375f24e2c/gcc%2Frust%2Frust-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-gcc.cc?ref=b36e8cac9faaa245baa3c0579a6584d375f24e2c", "patch": "@@ -1171,14 +1171,14 @@ Gcc_backend::convert_expression (tree type_tree, tree expr_tree,\n       ret = expr_tree;\n     }\n   else if (TREE_CODE (type_tree) == INTEGER_TYPE)\n-    ret = fold (convert_to_integer (type_tree, expr_tree));\n+    ret = convert_to_integer (type_tree, expr_tree);\n   else if (TREE_CODE (type_tree) == REAL_TYPE)\n-    ret = fold (convert_to_real (type_tree, expr_tree));\n+    ret = convert_to_real (type_tree, expr_tree);\n   else if (TREE_CODE (type_tree) == COMPLEX_TYPE)\n-    ret = fold (convert_to_complex (type_tree, expr_tree));\n+    ret = convert_to_complex (type_tree, expr_tree);\n   else if (TREE_CODE (type_tree) == POINTER_TYPE\n \t   && TREE_CODE (TREE_TYPE (expr_tree)) == INTEGER_TYPE)\n-    ret = fold (convert_to_pointer (type_tree, expr_tree));\n+    ret = convert_to_pointer (type_tree, expr_tree);\n   else if (TREE_CODE (type_tree) == RECORD_TYPE\n \t   || TREE_CODE (type_tree) == ARRAY_TYPE)\n     ret = fold_build1_loc (location.gcc_location (), VIEW_CONVERT_EXPR,"}, {"sha": "d69f283c2f8dd935c7b12d0bc8fa942c2d2a2146", "filename": "gcc/rust/rust-lang.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b36e8cac9faaa245baa3c0579a6584d375f24e2c/gcc%2Frust%2Frust-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b36e8cac9faaa245baa3c0579a6584d375f24e2c/gcc%2Frust%2Frust-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Frust-lang.cc?ref=b36e8cac9faaa245baa3c0579a6584d375f24e2c", "patch": "@@ -355,13 +355,13 @@ convert (tree type, tree expr)\n     case BOOLEAN_TYPE:\n       return fold_convert (type, expr);\n     case INTEGER_TYPE:\n-      return fold (convert_to_integer (type, expr));\n+      return convert_to_integer (type, expr);\n     case POINTER_TYPE:\n-      return fold (convert_to_pointer (type, expr));\n+      return convert_to_pointer (type, expr);\n     case REAL_TYPE:\n-      return fold (convert_to_real (type, expr));\n+      return convert_to_real (type, expr);\n     case COMPLEX_TYPE:\n-      return fold (convert_to_complex (type, expr));\n+      return convert_to_complex (type, expr);\n     default:\n       break;\n     }"}]}