{"sha": "ab5324fb68852510f9b208894cf6c2716e129d77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI1MzI0ZmI2ODg1MjUxMGY5YjIwODg5NGNmNmMyNzE2ZTEyOWQ3Nw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2018-10-31T17:12:27Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2018-10-31T17:12:27Z"}, "message": "[PATCH] command line macros\n\nhttps://gcc.gnu.org/ml/gcc-patches/2018-10/msg02062.html\n\t* c-opts.c (c_finish_options): Force command line macro\n\tlocation.  Refactor to avoid repeating main debug hook.\n\t(push_command_line_include): Clarify comment.\n\nFrom-SVN: r265696", "tree": {"sha": "d56a7a480cd55650dba5af8453f062eb9c2fa253", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d56a7a480cd55650dba5af8453f062eb9c2fa253"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab5324fb68852510f9b208894cf6c2716e129d77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab5324fb68852510f9b208894cf6c2716e129d77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab5324fb68852510f9b208894cf6c2716e129d77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab5324fb68852510f9b208894cf6c2716e129d77/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "22e052725189a472e4e86ebb6595278a49f4bcdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22e052725189a472e4e86ebb6595278a49f4bcdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22e052725189a472e4e86ebb6595278a49f4bcdd"}], "stats": {"total": 76, "additions": 37, "deletions": 39}, "files": [{"sha": "a3ab8e897556e7a43444a6e136406ea3ccdff2df", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5324fb68852510f9b208894cf6c2716e129d77/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5324fb68852510f9b208894cf6c2716e129d77/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=ab5324fb68852510f9b208894cf6c2716e129d77", "patch": "@@ -1,5 +1,9 @@\n 2018-10-31  Nathan Sidwell  <nathan@acm.org>\n \n+\t* c-opts.c (c_finish_options): Force command line macro\n+\tlocation.  Refactor to avoid repeating main debug hook.\n+\t(push_command_line_include): Clarify comment.\n+\n \t* c-opts.c (c_finish_options): Adjust cpp_force_token_locations call.\n \n 2018-10-30  Martin Sebor  <msebor@redhat.com>"}, {"sha": "fe4d1ffb03004865543aab9a12e9314455ac6343", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 33, "deletions": 39, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab5324fb68852510f9b208894cf6c2716e129d77/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab5324fb68852510f9b208894cf6c2716e129d77/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=ab5324fb68852510f9b208894cf6c2716e129d77", "patch": "@@ -1387,22 +1387,18 @@ c_finish_options (void)\n {\n   if (!cpp_opts->preprocessed)\n     {\n-      size_t i;\n+      const line_map_ordinary *bltin_map\n+\t= linemap_check_ordinary (linemap_add (line_table, LC_RENAME, 0,\n+\t\t\t\t\t       _(\"<built-in>\"), 0));\n+      cb_file_change (parse_in, bltin_map);\n \n-      cb_file_change (parse_in,\n-\t\t      linemap_check_ordinary (linemap_add (line_table,\n-\t\t\t\t\t\t\t   LC_RENAME, 0,\n-\t\t\t\t\t\t\t   _(\"<built-in>\"),\n-\t\t\t\t\t\t\t   0)));\n       /* Make sure all of the builtins about to be declared have\n \t BUILTINS_LOCATION has their source_location.  */\n       cpp_force_token_locations (parse_in, BUILTINS_LOCATION);\n \n       cpp_init_builtins (parse_in, flag_hosted);\n       c_cpp_builtins (parse_in);\n \n-      cpp_stop_forcing_token_locations (parse_in);\n-\n       /* We're about to send user input to cpplib, so make it warn for\n \t things that we previously (when we sent it internal definitions)\n \t told it to not warn.\n@@ -1414,11 +1410,14 @@ c_finish_options (void)\n \t their acceptance on the -std= setting.  */\n       cpp_opts->warn_dollars = (cpp_opts->cpp_pedantic && !cpp_opts->c99);\n \n-      cb_file_change (parse_in,\n-\t\t      linemap_check_ordinary (linemap_add (line_table, LC_RENAME, 0,\n-\t\t\t\t\t\t\t   _(\"<command-line>\"), 0)));\n+      const line_map_ordinary *cmd_map\n+\t= linemap_check_ordinary (linemap_add (line_table, LC_RENAME, 0,\n+\t\t\t\t\t       _(\"<command-line>\"), 0));\n+      cb_file_change (parse_in, cmd_map);\n \n-      for (i = 0; i < deferred_count; i++)\n+      /* All command line defines must have the same location.  */\n+      cpp_force_token_locations (parse_in, cmd_map->start_location);\n+      for (size_t i = 0; i < deferred_count; i++)\n \t{\n \t  struct deferred_opt *opt = &deferred_opts[i];\n \n@@ -1435,35 +1434,30 @@ c_finish_options (void)\n \t    }\n \t}\n \n-      /* Start the main input file, if the debug writer wants it. */\n-      if (debug_hooks->start_end_main_source_file\n-\t  && !flag_preprocess_only)\n-\t(*debug_hooks->start_source_file) (0, this_input_filename);\n+      cpp_stop_forcing_token_locations (parse_in);\n+    }\n+  else if (cpp_opts->directives_only)\n+    cpp_init_special_builtins (parse_in);\n \n-      /* Handle -imacros after -D and -U.  */\n-      for (i = 0; i < deferred_count; i++)\n-\t{\n-\t  struct deferred_opt *opt = &deferred_opts[i];\n+  /* Start the main input file, if the debug writer wants it. */\n+  if (debug_hooks->start_end_main_source_file\n+      && !flag_preprocess_only)\n+    (*debug_hooks->start_source_file) (0, this_input_filename);\n \n-\t  if (opt->code == OPT_imacros\n-\t      && cpp_push_include (parse_in, opt->arg))\n-\t    {\n-\t      /* Disable push_command_line_include callback for now.  */\n-\t      include_cursor = deferred_count + 1;\n-\t      cpp_scan_nooutput (parse_in);\n-\t    }\n-\t}\n-    }\n-  else\n-    {\n-      if (cpp_opts->directives_only)\n-\tcpp_init_special_builtins (parse_in);\n+  if (!cpp_opts->preprocessed)\n+    /* Handle -imacros after -D and -U.  */\n+    for (size_t i = 0; i < deferred_count; i++)\n+      {\n+\tstruct deferred_opt *opt = &deferred_opts[i];\n \n-      /* Start the main input file, if the debug writer wants it. */\n-      if (debug_hooks->start_end_main_source_file\n-\t  && !flag_preprocess_only)\n-\t(*debug_hooks->start_source_file) (0, this_input_filename);\n-    }\n+\tif (opt->code == OPT_imacros\n+\t    && cpp_push_include (parse_in, opt->arg))\n+\t  {\n+\t    /* Disable push_command_line_include callback for now.  */\n+\t    include_cursor = deferred_count + 1;\n+\t    cpp_scan_nooutput (parse_in);\n+\t  }\n+      }\n \n   include_cursor = 0;\n   push_command_line_include ();\n@@ -1506,7 +1500,7 @@ push_command_line_include (void)\n       include_cursor++;\n       /* -Wunused-macros should only warn about macros defined hereafter.  */\n       cpp_opts->warn_unused_macros = cpp_warn_unused_macros;\n-      /* Restore the line map from <command line>.  */\n+      /* Restore the line map back to the main file.  */\n       if (!cpp_opts->preprocessed)\n \tcpp_change_file (parse_in, LC_RENAME, this_input_filename);\n "}]}