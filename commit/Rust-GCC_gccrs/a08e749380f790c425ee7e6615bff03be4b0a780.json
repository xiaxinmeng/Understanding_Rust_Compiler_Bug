{"sha": "a08e749380f790c425ee7e6615bff03be4b0a780", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA4ZTc0OTM4MGY3OTBjNDI1ZWU3ZTY2MTViZmYwM2JlNGIwYTc4MA==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1994-07-12T20:23:58Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1994-07-12T20:23:58Z"}, "message": "pa.h (GO_IF_LEGITIMATE_ADDRESS): Only allow immediate addressing using 5 bits to avoid losing with FP loads and...\n\n        * pa.h (GO_IF_LEGITIMATE_ADDRESS): Only allow immediate addressing\n        using 5 bits to avoid losing with FP loads and stores on page zero.\n\nFrom-SVN: r7752", "tree": {"sha": "af5f47faaf8e7ca36a3b59f904f8c388313467b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af5f47faaf8e7ca36a3b59f904f8c388313467b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a08e749380f790c425ee7e6615bff03be4b0a780", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a08e749380f790c425ee7e6615bff03be4b0a780", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a08e749380f790c425ee7e6615bff03be4b0a780", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a08e749380f790c425ee7e6615bff03be4b0a780/comments", "author": null, "committer": null, "parents": [{"sha": "ca192950181ba57a9ab7c5d6aa388afa8723806c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca192950181ba57a9ab7c5d6aa388afa8723806c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca192950181ba57a9ab7c5d6aa388afa8723806c"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "ed20c28088de2864643e5363f7bcee719b26ebec", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a08e749380f790c425ee7e6615bff03be4b0a780/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a08e749380f790c425ee7e6615bff03be4b0a780/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=a08e749380f790c425ee7e6615bff03be4b0a780", "patch": "@@ -1268,7 +1268,11 @@ extern union tree_node *current_function_decl;\n    REG+REG, REG+(REG*SCALE) or REG+SMALLINT.\n    But we can treat a SYMBOL_REF as legitimate if it is part of this\n    function's constant-pool, because such addresses can actually\n-   be output as REG+SMALLINT.  */\n+   be output as REG+SMALLINT. \n+\n+   Note we only allow 5 bit immediates for access to a constant address;\n+   doing so avoids losing for loading/storing a FP register at an address\n+   which will not fit in 5 bits.  */\n \n #define VAL_5_BITS_P(X) ((unsigned)(X) + 0x10 < 0x20)\n #define INT_5_BITS(X) VAL_5_BITS_P (INTVAL (X))\n@@ -1333,7 +1337,7 @@ extern union tree_node *current_function_decl;\n     goto ADDR;\t\t\t\t\t\t\\\n   else if (GET_CODE (X) == LABEL_REF\t\t\t\\\n \t   || (GET_CODE (X) == CONST_INT\t\t\\\n-\t       && INT_14_BITS (X)))\t\t\t\\\n+\t       && INT_5_BITS (X)))\t\t\t\\\n     goto ADDR;\t\t\t\t\t\t\\\n }\n \f"}]}