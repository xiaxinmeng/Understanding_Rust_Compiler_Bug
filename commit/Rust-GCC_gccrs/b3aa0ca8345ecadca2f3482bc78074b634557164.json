{"sha": "b3aa0ca8345ecadca2f3482bc78074b634557164", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNhYTBjYTgzNDVlY2FkY2EyZjM0ODJiYzc4MDc0YjYzNDU1NzE2NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-23T08:55:13Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-01-23T08:55:13Z"}, "message": "[multiple changes]\n\n2012-01-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Subprogram_Declaration): Do not set the\n\tCorresponding_Body on a defaulted null formal subprogram.\n\t* sem_ch12.adb (Check_Formal_Package_Instance): No check needed\n\ton a defaulted formal subprogram that is a null procedure.\n\n2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch9.adb: Update the comments involving pragma Implemented.\n\t* sem_ch3.adb (Check_Pragma_Implemented (Entity_Id)): Add local\n\tconstant Subp_Alias and local variable Impl_Subp. Properly\n\thandle aliases of synchronized wrappers. Code cleanup.\n\t(Check_Pragma_Implemented (Entity_Id; Entity_Id)): Add\n\tName_Optional as part of the condition.\n\t* sem_prag.adb (Analyze_Pragma): Add \"Optional\" as one of the\n\tvalid choices of implementation kind.\n\t(Check_Arg_Is_One_Of): New routine.\n\t* snames.ads-tmlp: Add Name_Optional.\n\n2012-01-23  Ed Schonberg  <schonberg@adacore.com>\n\n\t* par-ch13.adb: Better error recovery in illegal aspect\n\tspecification.\n\n2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* a-calend.adb: Add with clause for Interfaces.C. Add constant\n\tUnix_Max.\n\t(Day_Of_Week): Call the internal UTC_Time_Offset.\n\t(Split): Call the internal UTC_Time_Offset.\n\t(Time_Of): Call the internal UTC_Time_Offset.\n\t(Time_Zone_Operations.UTC_Time_Offset): Call internal UTC_Time_Offset.\n\t(UTC_Time_Offset): New library-level routine.\n\t* a-calend.ads (UTC_Time_Offset): Remove parameter\n\tIs_Historic. Update related comment on usage.\n\t* a-catizo.adb (UTC_Time_Offset): Removed.\n\t(UTC_Time_Offset (Time)): Call Time_Zone_Operations.UTC_Time_Offset.\n\t* a-caltizo.ads (UTC_Time_Offset): Removed.\n\t(UTC_Time_Offset (Time)): Add back the default expression of parameter\n\tDate.\n\nFrom-SVN: r183414", "tree": {"sha": "9005c3751c02616edac5d5ea549551890eb04451", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9005c3751c02616edac5d5ea549551890eb04451"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3aa0ca8345ecadca2f3482bc78074b634557164", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3aa0ca8345ecadca2f3482bc78074b634557164", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3aa0ca8345ecadca2f3482bc78074b634557164", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3aa0ca8345ecadca2f3482bc78074b634557164/comments", "author": null, "committer": null, "parents": [{"sha": "3ffd18f16ccb5256aaf5d8e6a55fc8ad2d521085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ffd18f16ccb5256aaf5d8e6a55fc8ad2d521085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ffd18f16ccb5256aaf5d8e6a55fc8ad2d521085"}], "stats": {"total": 470, "additions": 277, "deletions": 193}, "files": [{"sha": "511afc0ea6bc79dccd212857639c121aa3ecb7f5", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -1,3 +1,45 @@\n+2012-01-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Subprogram_Declaration): Do not set the\n+\tCorresponding_Body on a defaulted null formal subprogram.\n+\t* sem_ch12.adb (Check_Formal_Package_Instance): No check needed\n+\ton a defaulted formal subprogram that is a null procedure.\n+\n+2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch9.adb: Update the comments involving pragma Implemented.\n+\t* sem_ch3.adb (Check_Pragma_Implemented (Entity_Id)): Add local\n+\tconstant Subp_Alias and local variable Impl_Subp. Properly\n+\thandle aliases of synchronized wrappers. Code cleanup.\n+\t(Check_Pragma_Implemented (Entity_Id; Entity_Id)): Add\n+\tName_Optional as part of the condition.\n+\t* sem_prag.adb (Analyze_Pragma): Add \"Optional\" as one of the\n+\tvalid choices of implementation kind.\n+\t(Check_Arg_Is_One_Of): New routine.\n+\t* snames.ads-tmlp: Add Name_Optional.\n+\n+2012-01-23  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* par-ch13.adb: Better error recovery in illegal aspect\n+\tspecification.\n+\n+2012-01-23  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* a-calend.adb: Add with clause for Interfaces.C. Add constant\n+\tUnix_Max.\n+\t(Day_Of_Week): Call the internal UTC_Time_Offset.\n+\t(Split): Call the internal UTC_Time_Offset.\n+\t(Time_Of): Call the internal UTC_Time_Offset.\n+\t(Time_Zone_Operations.UTC_Time_Offset): Call internal UTC_Time_Offset.\n+\t(UTC_Time_Offset): New library-level routine.\n+\t* a-calend.ads (UTC_Time_Offset): Remove parameter\n+\tIs_Historic. Update related comment on usage.\n+\t* a-catizo.adb (UTC_Time_Offset): Removed.\n+\t(UTC_Time_Offset (Time)): Call Time_Zone_Operations.UTC_Time_Offset.\n+\t* a-caltizo.ads (UTC_Time_Offset): Removed.\n+\t(UTC_Time_Offset (Time)): Add back the default expression of parameter\n+\tDate.\n+\n 2012-01-23  Robert Dewar  <dewar@adacore.com>\n \n \t* sprint.ads, sprint.adb (Sprint_Node_List): Add New_Lines parameter"}, {"sha": "731c4eddfb9c7fcfa2f03b5582ebcdcd7868817c", "filename": "gcc/ada/a-calend.adb", "status": "modified", "additions": 135, "deletions": 119, "changes": 254, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fa-calend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fa-calend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.adb?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -30,7 +30,7 @@\n ------------------------------------------------------------------------------\n \n with Ada.Unchecked_Conversion;\n-\n+with Interfaces.C;\n with System.OS_Primitives;\n \n package body Ada.Calendar is\n@@ -109,6 +109,21 @@ package body Ada.Calendar is\n      new Ada.Unchecked_Conversion (Time_Rep, Duration);\n    --  Convert a time representation value into a duration value\n \n+   function UTC_Time_Offset\n+     (Date        : Time;\n+      Is_Historic : Boolean) return Long_Integer;\n+   --  This routine acts as an Ada wrapper around __gnat_localtime_tzoff which\n+   --  in turn utilizes various OS-dependent mechanisms to calculate the time\n+   --  zone offset of a date. Formal parameter Date represents an arbitrary\n+   --  time stamp, either in the past, now, or in the future. If flag\n+   --  Is_Historic is set, this routine would try to calculate to the best of\n+   --  the OS's abilities the time zone offset that was or will be in effect\n+   --  on Date. If the flag is set to False, the routine returns the current\n+   --  time zone with Date effectively set to Clock.\n+   --  NOTE: Targets which support localtime_r will aways return a historic\n+   --  time zone even if flag Is_Historic is set to False because this is how\n+   --  localtime_r operates.\n+\n    -----------------\n    -- Local Types --\n    -----------------\n@@ -176,6 +191,13 @@ package body Ada.Calendar is\n    Unix_Min : constant Time_Rep :=\n                 Ada_Low + Time_Rep (17 * 366 + 52 * 365) * Nanos_In_Day;\n \n+   --  The Unix upper time bound expressed as nonoseconds since the start of\n+   --  Ada time in UTC.\n+\n+   Unix_Max : constant Time_Rep :=\n+                Ada_Low + Time_Rep (34 * 366 + 102 * 365) * Nanos_In_Day +\n+                          Time_Rep (Leap_Seconds_Count) * Nano;\n+\n    Epoch_Offset : constant Time_Rep := (136 * 365 + 44 * 366) * Nanos_In_Day;\n    --  The difference between 2150-1-1 UTC and 1970-1-1 UTC expressed in\n    --  nanoseconds. Note that year 2100 is non-leap.\n@@ -626,6 +648,110 @@ package body Ada.Calendar is\n            Time_Zone    => 0);\n    end Time_Of;\n \n+   ---------------------\n+   -- UTC_Time_Offset --\n+   ---------------------\n+\n+   function UTC_Time_Offset\n+     (Date        : Time;\n+      Is_Historic : Boolean) return Long_Integer\n+   is\n+      --  The following constants denote February 28 during non-leap centennial\n+      --  years, the units are nanoseconds.\n+\n+      T_2100_2_28 : constant Time_Rep := Ada_Low +\n+                      (Time_Rep (49 * 366 + 150 * 365 + 59) * Secs_In_Day +\n+                       Time_Rep (Leap_Seconds_Count)) * Nano;\n+\n+      T_2200_2_28 : constant Time_Rep := Ada_Low +\n+                      (Time_Rep (73 * 366 + 226 * 365 + 59) * Secs_In_Day +\n+                       Time_Rep (Leap_Seconds_Count)) * Nano;\n+\n+      T_2300_2_28 : constant Time_Rep := Ada_Low +\n+                      (Time_Rep (97 * 366 + 302 * 365 + 59) * Secs_In_Day +\n+                       Time_Rep (Leap_Seconds_Count)) * Nano;\n+\n+      --  56 years (14 leap years + 42 non-leap years) in nanoseconds:\n+\n+      Nanos_In_56_Years : constant := (14 * 366 + 42 * 365) * Nanos_In_Day;\n+\n+      type int_Pointer  is access all Interfaces.C.int;\n+      type long_Pointer is access all Interfaces.C.long;\n+\n+      type time_t is\n+        range -(2 ** (Standard'Address_Size - Integer'(1))) ..\n+              +(2 ** (Standard'Address_Size - Integer'(1)) - 1);\n+      type time_t_Pointer is access all time_t;\n+\n+      procedure localtime_tzoff\n+        (timer       : time_t_Pointer;\n+         is_historic : int_Pointer;\n+         off         : long_Pointer);\n+      pragma Import (C, localtime_tzoff, \"__gnat_localtime_tzoff\");\n+      --  This routine is a interfacing wrapper around the library function\n+      --  __gnat_localtime_tzoff. Parameter 'timer' represents a Unix-based\n+      --  time equivalent of the input date. If flag 'is_historic' is set, this\n+      --  routine would try to calculate to the best of the OS's abilities the\n+      --  time zone offset that was or will be in effect on 'timer'. If the\n+      --  flag is set to False, the routine returns the current time zone\n+      --  regardless of what 'timer' designates. Parameter 'off' captures the\n+      --  UTC offset of 'timer'.\n+\n+      Adj_Cent : Integer;\n+      Date_N   : Time_Rep;\n+      Flag     : aliased Interfaces.C.int;\n+      Offset   : aliased Interfaces.C.long;\n+      Secs_T   : aliased time_t;\n+\n+   --  Start of processing for UTC_Time_Offset\n+\n+   begin\n+      Date_N := Time_Rep (Date);\n+\n+      --  Dates which are 56 years apart fall on the same day, day light saving\n+      --  and so on. Non-leap centennial years violate this rule by one day and\n+      --  as a consequence, special adjustment is needed.\n+\n+      Adj_Cent :=\n+        (if    Date_N <= T_2100_2_28 then 0\n+         elsif Date_N <= T_2200_2_28 then 1\n+         elsif Date_N <= T_2300_2_28 then 2\n+         else                             3);\n+\n+      if Adj_Cent > 0 then\n+         Date_N := Date_N - Time_Rep (Adj_Cent) * Nanos_In_Day;\n+      end if;\n+\n+      --  Shift the date within bounds of Unix time\n+\n+      while Date_N < Unix_Min loop\n+         Date_N := Date_N + Nanos_In_56_Years;\n+      end loop;\n+\n+      while Date_N >= Unix_Max loop\n+         Date_N := Date_N - Nanos_In_56_Years;\n+      end loop;\n+\n+      --  Perform a shift in origins from Ada to Unix\n+\n+      Date_N := Date_N - Unix_Min;\n+\n+      --  Convert the date into seconds\n+\n+      Secs_T := time_t (Date_N / Nano);\n+\n+      --  Determine whether to treat the input date as historical or not\n+\n+      Flag := (if Is_Historic then 1 else 0);\n+\n+      localtime_tzoff\n+        (Secs_T'Unchecked_Access,\n+         Flag'Unchecked_Access,\n+         Offset'Unchecked_Access);\n+\n+      return Long_Integer (Offset);\n+   end UTC_Time_Offset;\n+\n    ----------\n    -- Year --\n    ----------\n@@ -1024,11 +1150,7 @@ package body Ada.Calendar is\n \n       function Day_Of_Week (Date : Time) return Integer is\n          Date_N    : constant Time_Rep := Time_Rep (Date);\n-         Time_Zone : constant Long_Integer :=\n-                       Time_Zones_Operations.UTC_Time_Offset\n-                         (Date        => Date,\n-                          Is_Historic => False);\n-\n+         Time_Zone : constant Long_Integer := UTC_Time_Offset (Date, True);\n          Ada_Low_N : Time_Rep;\n          Day_Count : Long_Integer;\n          Day_Dur   : Time_Dur;\n@@ -1141,9 +1263,8 @@ package body Ada.Calendar is\n          else\n             declare\n                Off : constant Long_Integer :=\n-                       Time_Zones_Operations.UTC_Time_Offset\n-                         (Date        => Time (Date_N),\n-                          Is_Historic => False);\n+                       UTC_Time_Offset (Time (Date_N), False);\n+\n             begin\n                Date_N := Date_N + Time_Rep (Off) * Nano;\n             end;\n@@ -1364,15 +1485,12 @@ package body Ada.Calendar is\n          else\n             declare\n                Current_Off   : constant Long_Integer :=\n-                                 Time_Zones_Operations.UTC_Time_Offset\n-                                   (Date        => Time (Res_N),\n-                                    Is_Historic => False);\n+                                 UTC_Time_Offset (Time (Res_N), False);\n                Current_Res_N : constant Time_Rep :=\n                                  Res_N - Time_Rep (Current_Off) * Nano;\n                Off           : constant Long_Integer :=\n-                                 Time_Zones_Operations.UTC_Time_Offset\n-                                   (Date        => Time (Current_Res_N),\n-                                    Is_Historic => False);\n+                                 UTC_Time_Offset (Time (Current_Res_N), False);\n+\n             begin\n                Res_N := Res_N - Time_Rep (Off) * Nano;\n             end;\n@@ -1416,115 +1534,13 @@ package body Ada.Calendar is\n \n    package body Time_Zones_Operations is\n \n-      --  The Unix time bounds in nanoseconds: 1970/1/1 .. 2037/1/1\n-\n-      Unix_Min : constant Time_Rep := Ada_Low +\n-                   Time_Rep (17 * 366 +  52 * 365) * Nanos_In_Day;\n-\n-      Unix_Max : constant Time_Rep := Ada_Low +\n-                   Time_Rep (34 * 366 + 102 * 365) * Nanos_In_Day +\n-                   Time_Rep (Leap_Seconds_Count) * Nano;\n-\n-      --  The following constants denote February 28 during non-leap\n-      --  centennial years, the units are nanoseconds.\n-\n-      T_2100_2_28 : constant Time_Rep := Ada_Low +\n-                      (Time_Rep (49 * 366 + 150 * 365 + 59) * Secs_In_Day +\n-                       Time_Rep (Leap_Seconds_Count)) * Nano;\n-\n-      T_2200_2_28 : constant Time_Rep := Ada_Low +\n-                      (Time_Rep (73 * 366 + 226 * 365 + 59) * Secs_In_Day +\n-                       Time_Rep (Leap_Seconds_Count)) * Nano;\n-\n-      T_2300_2_28 : constant Time_Rep := Ada_Low +\n-                      (Time_Rep (97 * 366 + 302 * 365 + 59) * Secs_In_Day +\n-                       Time_Rep (Leap_Seconds_Count)) * Nano;\n-\n-      --  56 years (14 leap years + 42 non leap years) in nanoseconds:\n-\n-      Nanos_In_56_Years : constant := (14 * 366 + 42 * 365) * Nanos_In_Day;\n-\n-      subtype long is Long_Integer;\n-      subtype int  is Integer;\n-      type long_Pointer is access all long;\n-      type int_Pointer  is access all int;\n-\n-      type time_t is\n-        range -(2 ** (Standard'Address_Size - Integer'(1))) ..\n-              +(2 ** (Standard'Address_Size - Integer'(1)) - 1);\n-      type time_t_Pointer is access all time_t;\n-\n-      procedure localtime_tzoff\n-        (timer       : time_t_Pointer;\n-         is_historic : int_Pointer;\n-         off         : long_Pointer);\n-      pragma Import (C, localtime_tzoff, \"__gnat_localtime_tzoff\");\n-      --  This is a lightweight wrapper around the system library function\n-      --  localtime_r. Parameter 'off' captures the UTC offset which is either\n-      --  retrieved from the tm struct or calculated from the 'timezone' extern\n-      --  and the tm_isdst flag in the tm struct. Flag 'is_historic' denotes\n-      --  whether 'timer' is a historical time stamp. If this is not the case,\n-      --  the routine returns the offset of the local time zone.\n-\n       ---------------------\n       -- UTC_Time_Offset --\n       ---------------------\n \n-      function UTC_Time_Offset\n-        (Date        : Time;\n-         Is_Historic : Boolean := True) return Long_Integer\n-      is\n-         Adj_Cent : Integer;\n-         Date_N   : Time_Rep;\n-         Flag     : aliased int;\n-         Offset   : aliased long;\n-         Secs_T   : aliased time_t;\n-\n+      function UTC_Time_Offset (Date : Time) return Long_Integer is\n       begin\n-         Date_N := Time_Rep (Date);\n-\n-         --  Dates which are 56 years apart fall on the same day, day light\n-         --  saving and so on. Non-leap centennial years violate this rule by\n-         --  one day and as a consequence, special adjustment is needed.\n-\n-         Adj_Cent :=\n-           (if    Date_N <= T_2100_2_28 then 0\n-            elsif Date_N <= T_2200_2_28 then 1\n-            elsif Date_N <= T_2300_2_28 then 2\n-            else                             3);\n-\n-         if Adj_Cent > 0 then\n-            Date_N := Date_N - Time_Rep (Adj_Cent) * Nanos_In_Day;\n-         end if;\n-\n-         --  Shift the date within bounds of Unix time\n-\n-         while Date_N < Unix_Min loop\n-            Date_N := Date_N + Nanos_In_56_Years;\n-         end loop;\n-\n-         while Date_N >= Unix_Max loop\n-            Date_N := Date_N - Nanos_In_56_Years;\n-         end loop;\n-\n-         --  Perform a shift in origins from Ada to Unix\n-\n-         Date_N := Date_N - Unix_Min;\n-\n-         --  Convert the date into seconds\n-\n-         Secs_T := time_t (Date_N / Nano);\n-\n-         --  Determine whether to treat the input date as historical or not\n-\n-         Flag := (if Is_Historic then 1 else 0);\n-\n-         localtime_tzoff\n-           (Secs_T'Unchecked_Access,\n-            Flag'Unchecked_Access,\n-            Offset'Unchecked_Access);\n-\n-         return Offset;\n+         return UTC_Time_Offset (Date, True);\n       end UTC_Time_Offset;\n \n    end Time_Zones_Operations;"}, {"sha": "61780190039132956acebb06ffb90e8e56d11ece", "filename": "gcc/ada/a-calend.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fa-calend.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fa-calend.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-calend.ads?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -350,12 +350,9 @@ private\n \n    package Time_Zones_Operations is\n \n-      function UTC_Time_Offset\n-        (Date        : Time;\n-         Is_Historic : Boolean := True) return Long_Integer;\n-      --  Return the offset in seconds from UTC of an arbitrary date. If flag\n-      --  Is_Historic is set to False, then return the local time zone offset\n-      --  regardless of what Date designates.\n+      function UTC_Time_Offset (Date : Time) return Long_Integer;\n+      --  Return (in seconds), the difference between the local time zone and\n+      --  UTC time at a specific historic date.\n \n    end Time_Zones_Operations;\n "}, {"sha": "a0eb02d0b0d0d9d643627806f0fe0e03eb4a8680", "filename": "gcc/ada/a-catizo.adb", "status": "modified", "additions": 2, "deletions": 34, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fa-catizo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fa-catizo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-catizo.adb?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -42,41 +42,9 @@ package body Ada.Calendar.Time_Zones is\n    -- UTC_Time_Offset --\n    ---------------------\n \n-   function UTC_Time_Offset return Time_Offset is\n+   function UTC_Time_Offset (Date : Time := Clock) return Time_Offset is\n       Offset_L : constant Long_Integer :=\n-                   Time_Zones_Operations.UTC_Time_Offset\n-                     (Date        => Clock,\n-                      Is_Historic => False);\n-      Offset   : Time_Offset;\n-\n-   begin\n-      if Offset_L = Invalid_Time_Zone_Offset then\n-         raise Unknown_Zone_Error;\n-      end if;\n-\n-      --  The offset returned by Time_Zones_Operations.UTC_Time_Offset is in\n-      --  seconds, the returned value needs to be in minutes.\n-\n-      Offset := Time_Offset (Offset_L / 60);\n-\n-      --  Validity checks\n-\n-      if not Offset'Valid then\n-         raise Unknown_Zone_Error;\n-      end if;\n-\n-      return Offset;\n-   end UTC_Time_Offset;\n-\n-   ---------------------\n-   -- UTC_Time_Offset --\n-   ---------------------\n-\n-   function UTC_Time_Offset (Date : Time) return Time_Offset is\n-      Offset_L : constant Long_Integer :=\n-                   Time_Zones_Operations.UTC_Time_Offset\n-                     (Date        => Date,\n-                      Is_Historic => True);\n+                   Time_Zones_Operations.UTC_Time_Offset (Date);\n       Offset   : Time_Offset;\n \n    begin"}, {"sha": "feb0402e7f1c87efa11844be3c6b8cb1577488bf", "filename": "gcc/ada/a-catizo.ads", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fa-catizo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fa-catizo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-catizo.ads?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -26,12 +26,7 @@ package Ada.Calendar.Time_Zones is\n \n    Unknown_Zone_Error : exception;\n \n-   function UTC_Time_Offset return Time_Offset;\n-   --  Returns (in minutes), the difference between the implementation-defined\n-   --  time zone of Calendar, and UTC time. If the time zone of the Calendar\n-   --  implementation is unknown, raises Unknown_Zone_Error.\n-\n-   function UTC_Time_Offset (Date : Time) return Time_Offset;\n+   function UTC_Time_Offset (Date : Time := Clock) return Time_Offset;\n    --  Returns (in minutes), the difference between the implementation-defined\n    --  time zone of Calendar, and UTC time, at the time Date. If the time zone\n    --  of the Calendar implementation is unknown, raises Unknown_Zone_Error."}, {"sha": "a20254b49d6eaa41f94e669ed2ea3298bfd64171", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -8878,7 +8878,8 @@ package body Exp_Ch9 is\n    --    Target.Primitive (Param1, ..., ParamN);\n \n    --  Ada 2012 (AI05-0030): Dispatching requeue to an interface primitive\n-   --  marked by pragma Implemented (XXX, By_Any) or not marked at all.\n+   --  marked by pragma Implemented (XXX, By_Any | Optional) or not marked\n+   --  at all.\n \n    --    declare\n    --       S : constant Offset_Index :=\n@@ -8923,9 +8924,9 @@ package body Exp_Ch9 is\n       function Build_Dispatching_Requeue_To_Any return Node_Id;\n       --  Ada 2012 (AI05-0030): N denotes a dispatching requeue statement of\n       --  the form Concval.Ename. Ename is either marked by pragma Implemented\n-      --  (XXX, By_Any) or not marked at all. Create a block which determines\n-      --  at runtime whether Ename denotes an entry or a procedure and perform\n-      --  the appropriate kind of dispatching select.\n+      --  (XXX, By_Any | Optional) or not marked at all. Create a block which\n+      --  determines at runtime whether Ename denotes an entry or a procedure\n+      --  and perform the appropriate kind of dispatching select.\n \n       function Build_Normal_Requeue return Node_Id;\n       --  N denotes a non-dispatching requeue statement to either a task or a\n@@ -9445,9 +9446,10 @@ package body Exp_Ch9 is\n                Analyze (N);\n \n             --  The procedure_or_entry_NAME's implementation kind is either\n-            --  By_Any or pragma Implemented was not applied at all. In this\n-            --  case a runtime test determines whether Ename denotes an entry\n-            --  or a protected procedure and performs the appropriate call.\n+            --  By_Any, Optional, or pragma Implemented was not applied at all.\n+            --  In this case a runtime test determines whether Ename denotes an\n+            --  entry or a protected procedure and performs the appropriate\n+            --  call.\n \n             else\n                Rewrite (N, Build_Dispatching_Requeue_To_Any);"}, {"sha": "107426fb78c935afb69c3b12b892a4cb58788f0c", "filename": "gcc/ada/par-ch13.adb", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fpar-ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fpar-ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch13.adb?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -514,12 +514,24 @@ package body Ch13 is\n \n             if Token = Tok_Comma\n               or else Token = Tok_Semicolon\n-              or else (not Semicolon and then Token /= Tok_Arrow)\n+\n             then\n+               --  or else (not Semicolon and then Token /= Tok_Arrow)\n                if Aspect_Argument (A_Id) /= Optional then\n-                  Error_Msg_Node_1 := Aspect;\n+                  Error_Msg_Node_1 := Identifier (Aspect);\n                   Error_Msg_AP (\"aspect& requires an aspect definition\");\n                   OK := False;\n+\n+               end if;\n+\n+            elsif not Semicolon and then Token /= Tok_Arrow then\n+               if Aspect_Argument (A_Id) /= Optional then\n+\n+                  --  The name or expression may be there, but the arrow is\n+                  --  missing. Skip to the end of the declaration.\n+\n+                  T_Arrow;\n+                  Resync_To_Semicolon;\n                end if;\n \n             --  Here we have an aspect definition"}, {"sha": "31c92935b799eb8d355a4cf7192a09c132622516", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5104,6 +5104,15 @@ package body Sem_Ch12 is\n             then\n                null;\n \n+            --  No check needed if subprogram is a defaulted null procedure\n+\n+            elsif No (Alias (E2))\n+              and then Ekind (E2) = E_Procedure\n+              and then\n+                Null_Present (Specification (Unit_Declaration_Node (E2)))\n+            then\n+               null;\n+\n             --  Otherwise the actual in the formal and the actual in the\n             --  instantiation of the formal must match, up to renamings.\n "}, {"sha": "9e319305d53d8f108e1d667b98bf978c8b50b7af", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -8897,17 +8897,27 @@ package body Sem_Ch3 is\n       procedure Check_Pragma_Implemented (Subp : Entity_Id) is\n          Iface_Alias : constant Entity_Id := Interface_Alias (Subp);\n          Impl_Kind   : constant Name_Id   := Implementation_Kind (Iface_Alias);\n+         Subp_Alias  : constant Entity_Id := Alias (Subp);\n          Contr_Typ   : Entity_Id;\n+         Impl_Subp   : Entity_Id;\n \n       begin\n          --  Subp must have an alias since it is a hidden entity used to link\n          --  an interface subprogram to its overriding counterpart.\n \n-         pragma Assert (Present (Alias (Subp)));\n+         pragma Assert (Present (Subp_Alias));\n+\n+         --  Handle aliases to synchronized wrappers\n+\n+         Impl_Subp := Subp_Alias;\n+\n+         if Is_Primitive_Wrapper (Impl_Subp) then\n+            Impl_Subp := Wrapped_Entity (Impl_Subp);\n+         end if;\n \n          --  Extract the type of the controlling formal\n \n-         Contr_Typ := Etype (First_Formal (Alias (Subp)));\n+         Contr_Typ := Etype (First_Formal (Subp_Alias));\n \n          if Is_Concurrent_Record_Type (Contr_Typ) then\n             Contr_Typ := Corresponding_Concurrent_Type (Contr_Typ);\n@@ -8917,12 +8927,12 @@ package body Sem_Ch3 is\n          --  be implemented by an entry.\n \n          if Impl_Kind = Name_By_Entry\n-           and then Ekind (Wrapped_Entity (Alias (Subp))) /= E_Entry\n+           and then Ekind (Impl_Subp) /= E_Entry\n          then\n             Error_Msg_Node_2 := Iface_Alias;\n             Error_Msg_NE\n               (\"type & must implement abstract subprogram & with an entry\",\n-               Alias (Subp), Contr_Typ);\n+               Subp_Alias, Contr_Typ);\n \n          elsif Impl_Kind = Name_By_Protected_Procedure then\n \n@@ -8934,19 +8944,17 @@ package body Sem_Ch3 is\n                Error_Msg_Node_2 := Contr_Typ;\n                Error_Msg_NE\n                  (\"interface subprogram & cannot be implemented by a \" &\n-                  \"primitive procedure of task type &\", Alias (Subp),\n+                  \"primitive procedure of task type &\", Subp_Alias,\n                   Iface_Alias);\n \n             --  An interface subprogram whose implementation kind is By_\n             --  Protected_Procedure must be implemented by a procedure.\n \n-            elsif Is_Primitive_Wrapper (Alias (Subp))\n-              and then Ekind (Wrapped_Entity (Alias (Subp))) /= E_Procedure\n-            then\n+            elsif Ekind (Impl_Subp) /= E_Procedure then\n                Error_Msg_Node_2 := Iface_Alias;\n                Error_Msg_NE\n                  (\"type & must implement abstract subprogram & with a \" &\n-                  \"procedure\", Alias (Subp), Contr_Typ);\n+                  \"procedure\", Subp_Alias, Contr_Typ);\n             end if;\n          end if;\n       end Check_Pragma_Implemented;\n@@ -8966,10 +8974,11 @@ package body Sem_Ch3 is\n          --  Ada 2012 (AI05-0030): The implementation kinds of an overridden\n          --  and overriding subprogram are different. In general this is an\n          --  error except when the implementation kind of the overridden\n-         --  subprograms is By_Any.\n+         --  subprograms is By_Any or Optional.\n \n          if Iface_Kind /= Subp_Kind\n            and then Iface_Kind /= Name_By_Any\n+           and then Iface_Kind /= Name_Optional\n          then\n             if Iface_Kind = Name_By_Entry then\n                Error_Msg_N"}, {"sha": "cd65caa4253a55b9284c7da828c0684754821038", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3138,7 +3138,6 @@ package body Sem_Ch6 is\n \n          Set_Defining_Unit_Name (Specification (Null_Body),\n            Make_Defining_Identifier (Loc, Chars (Defining_Entity (N))));\n-         Set_Corresponding_Body (N, Defining_Entity (Null_Body));\n \n          Form := First (Parameter_Specifications (Specification (Null_Body)));\n          while Present (Form) loop\n@@ -3192,7 +3191,13 @@ package body Sem_Ch6 is\n       then\n          Set_Has_Completion (Designator);\n \n-         if Present (Null_Body) then\n+         --  Null procedures are always inlined, but generic formal subprograms\n+         --  which appear as such in the internal instance of formal packages,\n+         --  need no completion and are not marked Inline.\n+\n+         if Present (Null_Body)\n+           and then Nkind (N) /= N_Formal_Concrete_Subprogram_Declaration\n+         then\n             Set_Corresponding_Body (N, Defining_Entity (Null_Body));\n             Set_Body_To_Inline (N, Null_Body);\n             Set_Is_Inlined (Designator);"}, {"sha": "59640de92824ca5097c38b67b8f1777bc56b5a12", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -471,6 +471,9 @@ package body Sem_Prag is\n       procedure Check_Arg_Is_One_Of\n         (Arg                : Node_Id;\n          N1, N2, N3         : Name_Id);\n+      procedure Check_Arg_Is_One_Of\n+        (Arg                : Node_Id;\n+         N1, N2, N3, N4     : Name_Id);\n       procedure Check_Arg_Is_One_Of\n         (Arg                : Node_Id;\n          N1, N2, N3, N4, N5 : Name_Id);\n@@ -1176,6 +1179,24 @@ package body Sem_Prag is\n          end if;\n       end Check_Arg_Is_One_Of;\n \n+      procedure Check_Arg_Is_One_Of\n+        (Arg                : Node_Id;\n+         N1, N2, N3, N4     : Name_Id)\n+      is\n+         Argx : constant Node_Id := Get_Pragma_Arg (Arg);\n+\n+      begin\n+         Check_Arg_Is_Identifier (Argx);\n+\n+         if Chars (Argx) /= N1\n+           and then Chars (Argx) /= N2\n+           and then Chars (Argx) /= N3\n+           and then Chars (Argx) /= N4\n+         then\n+            Error_Pragma_Arg (\"invalid argument for pragma%\", Argx);\n+         end if;\n+      end Check_Arg_Is_One_Of;\n+\n       procedure Check_Arg_Is_One_Of\n         (Arg                : Node_Id;\n          N1, N2, N3, N4, N5 : Name_Id)\n@@ -9325,7 +9346,11 @@ package body Sem_Prag is\n          -----------------\n \n          --  pragma Implemented (procedure_LOCAL_NAME, implementation_kind);\n-         --  implementation_kind ::= By_Entry | By_Protected_Procedure | By_Any\n+         --  implementation_kind ::=\n+         --    By_Entry | By_Protected_Procedure | By_Any | Optional\n+\n+         --  \"By_Any\" and \"Optional\" are treated as synonyms in order to\n+         --  support Ada 2012 aspect Synchronization.\n \n          when Pragma_Implemented => Implemented : declare\n             Proc_Id : Entity_Id;\n@@ -9337,8 +9362,11 @@ package body Sem_Prag is\n             Check_No_Identifiers;\n             Check_Arg_Is_Identifier (Arg1);\n             Check_Arg_Is_Local_Name (Arg1);\n-            Check_Arg_Is_One_Of\n-              (Arg2, Name_By_Any, Name_By_Entry, Name_By_Protected_Procedure);\n+            Check_Arg_Is_One_Of (Arg2,\n+              Name_By_Any,\n+              Name_By_Entry,\n+              Name_By_Protected_Procedure,\n+              Name_Optional);\n \n             --  Extract the name of the local procedure\n "}, {"sha": "a091047cab0e7a4763e80c12aae297763e74eb8c", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3aa0ca8345ecadca2f3482bc78074b634557164/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=b3aa0ca8345ecadca2f3482bc78074b634557164", "patch": "@@ -678,6 +678,7 @@ package Snames is\n    Name_No_Task_Attributes_Package     : constant Name_Id := N + $;\n    Name_Nominal                        : constant Name_Id := N + $;\n    Name_On                             : constant Name_Id := N + $;\n+   Name_Optional                       : constant Name_Id := N + $;\n    Name_Policy                         : constant Name_Id := N + $;\n    Name_Parameter_Types                : constant Name_Id := N + $;\n    Name_Reference                      : constant Name_Id := N + $;"}]}