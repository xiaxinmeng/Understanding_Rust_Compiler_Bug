{"sha": "dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMxN2NjN2JlYzM3YWJmMzA0ZWM2M2FiMDUzYTVmOGE0N2QyYWViOQ==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "2000-04-06T00:13:50Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2000-04-06T00:13:50Z"}, "message": "* splay-tree.c (splay_tree_remove): New.\n\nFrom-SVN: r32949", "tree": {"sha": "3ef40d517c63bc11ebd2b75d3f99de5009ce3c18", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ef40d517c63bc11ebd2b75d3f99de5009ce3c18"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9/comments", "author": null, "committer": null, "parents": [{"sha": "aa5a5f0272e1ca829e8fd9ade1e3eea5b0926f46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5a5f0272e1ca829e8fd9ade1e3eea5b0926f46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5a5f0272e1ca829e8fd9ade1e3eea5b0926f46"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "d78a86a358567f4d29b660e71ad8799805f12a5f", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9", "patch": "@@ -1,3 +1,7 @@\n+2000-04-05  Richard Henderson  <rth@cygnus.com>\n+\n+\t* splay-tree.c (splay_tree_remove): New.\n+\n 2000-03-30  Mark Mitchell  <mark@codesourcery.com>\n \n \t* hashtab.c (find_empty_slot_for_expand): Use hashval_t for hash"}, {"sha": "de66d11bf563f0ce37d0bffe57ef9e48e0cf65dd", "filename": "libiberty/splay-tree.c", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9/libiberty%2Fsplay-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9/libiberty%2Fsplay-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsplay-tree.c?ref=dc17cc7bec37abf304ec63ab053a5f8a47d2aeb9", "patch": "@@ -309,6 +309,47 @@ splay_tree_insert (sp, key, value)\n   return sp->root;\n }\n \n+/* Remove KEY from SP.  It is not an error if it did not exist.  */\n+\n+void\n+splay_tree_remove (sp, key)\n+     splay_tree sp;\n+     splay_tree_key key;\n+{\n+  splay_tree_splay (sp, key);\n+\n+  if (sp->root && (*sp->comp) (sp->root->key, key) == 0)\n+    {\n+      splay_tree_node left, right;\n+\n+      left = sp->root->left;\n+      right = sp->root->right;\n+\n+      /* Delete the root node itself.  */\n+      if (sp->delete_value)\n+\t(*sp->delete_value) (sp->root->value);\n+      free (sp->root);\n+\n+      /* One of the children is now the root.  Doesn't matter much\n+\t which, so long as we preserve the properties of the tree.  */\n+      if (left)\n+\t{\n+\t  sp->root = left;\n+\n+\t  /* If there was a right child as well, hang it off the \n+\t     right-most leaf of the left child.  */\n+\t  if (right)\n+\t    {\n+\t      while (left->right)\n+\t\tleft = left->right;\n+\t      left->right = right;\n+\t    }\n+\t}\n+      else\n+\tsp->root = right;\n+    }\n+}\n+\n /* Lookup KEY in SP, returning VALUE if present, and NULL \n    otherwise.  */\n "}]}