{"sha": "e1c8cf9006bd278e969ab7ed35178067ce128f32", "node_id": "C_kwDOANBUbNoAKGUxYzhjZjkwMDZiZDI3OGU5NjlhYjdlZDM1MTc4MDY3Y2UxMjhmMzI", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-03-10T04:33:43Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2023-03-10T13:54:29Z"}, "message": "c++: class NTTP and nested anon union [PR108566]\n\nWe were failing to come up with the name for the anonymous union.  It seems\nlike unfortunate redundancy, but the ABI does say that the name of an\nanonymous union is its first named member.\n\n\tPR c++/108566\n\ngcc/cp/ChangeLog:\n\n\t* mangle.cc (anon_aggr_naming_decl): New.\n\t(write_unqualified_name): Use it.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/abi/anon6.C: New test.", "tree": {"sha": "0f49cb76ec63ef70886e1009496cb1b0268312a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f49cb76ec63ef70886e1009496cb1b0268312a2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e1c8cf9006bd278e969ab7ed35178067ce128f32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c8cf9006bd278e969ab7ed35178067ce128f32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1c8cf9006bd278e969ab7ed35178067ce128f32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1c8cf9006bd278e969ab7ed35178067ce128f32/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4fd232f9843bb800548a906653aeb0723cdb411", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4fd232f9843bb800548a906653aeb0723cdb411", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4fd232f9843bb800548a906653aeb0723cdb411"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "a235f23459d2ca6a12ba2eecb0611c81c3d3e2e1", "filename": "gcc/cp/mangle.cc", "status": "modified", "additions": 26, "deletions": 1, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c8cf9006bd278e969ab7ed35178067ce128f32/gcc%2Fcp%2Fmangle.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c8cf9006bd278e969ab7ed35178067ce128f32/gcc%2Fcp%2Fmangle.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.cc?ref=e1c8cf9006bd278e969ab7ed35178067ce128f32", "patch": "@@ -1389,6 +1389,28 @@ find_decomp_unqualified_name (tree decl, size_t *len)\n   return p;\n }\n \n+/* \"For the purposes of mangling, the name of an anonymous union is considered\n+   to be the name of the first named data member found by a pre-order,\n+   depth-first, declaration-order walk of the data members of the anonymous\n+   union. If there is no such data member (i.e., if all of the data members in\n+   the union are unnamed), then there is no way for a program to refer to the\n+   anonymous union, and there is therefore no need to mangle its name.\"  */\n+\n+static tree\n+anon_aggr_naming_decl (tree type)\n+{\n+  tree field = next_aggregate_field (TYPE_FIELDS (type));\n+  for (; field; field = next_aggregate_field (DECL_CHAIN (field)))\n+    {\n+      if (DECL_NAME (field))\n+\treturn field;\n+      if (ANON_AGGR_TYPE_P (TREE_TYPE (field)))\n+\tif (tree sub = anon_aggr_naming_decl (TREE_TYPE (field)))\n+\t  return sub;\n+    }\n+  return NULL_TREE;\n+}\n+\n /* We don't need to handle thunks, vtables, or VTTs here.  Those are\n    mangled through special entry points.\n \n@@ -1432,7 +1454,10 @@ write_unqualified_name (tree decl)\n \n   bool found = false;\n \n-  if (DECL_NAME (decl) == NULL_TREE)\n+  if (DECL_NAME (decl) == NULL_TREE\n+      && ANON_AGGR_TYPE_P (TREE_TYPE (decl)))\n+    decl = anon_aggr_naming_decl (TREE_TYPE (decl));\n+  else if (DECL_NAME (decl) == NULL_TREE)\n     {\n       found = true;\n       gcc_assert (DECL_ASSEMBLER_NAME_SET_P (decl));"}, {"sha": "7be0b0bbdb7ea83b3cc9de8881977cb31df60d07", "filename": "gcc/testsuite/g++.dg/abi/anon6.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e1c8cf9006bd278e969ab7ed35178067ce128f32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e1c8cf9006bd278e969ab7ed35178067ce128f32/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fanon6.C?ref=e1c8cf9006bd278e969ab7ed35178067ce128f32", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/108566\n+// { dg-do compile { target c++20 } }\n+\n+template<typename T>\n+struct wrapper1 {\n+  union {\n+    union {\n+      T RightName;\n+    };\n+  };\n+};\n+\n+template<auto tparam> void dummy(){}\n+\n+void uses() {\n+  dummy<wrapper1<double>{123.0}>();\n+}\n+\n+// { dg-final { scan-assembler \"_Z5dummyIXtl8wrapper1IdEtlNS1_Ut_Edi9RightNametlNS2_Ut_Edi9RightNameLd405ec00000000000EEEEEEvv\" } }"}]}