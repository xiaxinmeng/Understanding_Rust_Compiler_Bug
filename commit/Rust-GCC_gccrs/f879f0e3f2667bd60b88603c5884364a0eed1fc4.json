{"sha": "f879f0e3f2667bd60b88603c5884364a0eed1fc4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg3OWYwZTNmMjY2N2JkNjBiODg2MDNjNTg4NDM2NGEwZWVkMWZjNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-03-07T08:18:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-03-07T08:18:36Z"}, "message": "re PR c++/89585 (GCC 8.3: asm volatile no longer accepted at file scope)\n\n\tPR c++/89585\n\t* doc/extend.texi (Basic Asm): Document qualifiers are not allowed\n\tat toplevel.\n\n\t* parser.c (cp_parser_asm_definition): Parse asm qualifiers even\n\tat toplevel, but diagnose them.\n\n\t* g++.dg/asm-qual-3.C: Adjust expected diagnostics.\n\nFrom-SVN: r269451", "tree": {"sha": "163301ef840f91ff320c8d9b60c0770358a5f9ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/163301ef840f91ff320c8d9b60c0770358a5f9ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f879f0e3f2667bd60b88603c5884364a0eed1fc4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f879f0e3f2667bd60b88603c5884364a0eed1fc4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f879f0e3f2667bd60b88603c5884364a0eed1fc4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f879f0e3f2667bd60b88603c5884364a0eed1fc4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c0017f91c4895e8cc625614454d0e2571c077770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0017f91c4895e8cc625614454d0e2571c077770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0017f91c4895e8cc625614454d0e2571c077770"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "4d48a674e44a1c45c039bfa9815949e2229509cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f879f0e3f2667bd60b88603c5884364a0eed1fc4", "patch": "@@ -1,3 +1,9 @@\n+2019-03-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/89585\n+\t* doc/extend.texi (Basic Asm): Document qualifiers are not allowed\n+\tat toplevel.\n+\n 2019-03-06  Peter Bergner  <bergner@linux.ibm.com>\n \n \tPR rtl-optimization/88845"}, {"sha": "c2162a4a3d467c062d818d0adef7191faccea46c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f879f0e3f2667bd60b88603c5884364a0eed1fc4", "patch": "@@ -1,3 +1,9 @@\n+2019-03-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/89585\n+\t* parser.c (cp_parser_asm_definition): Parse asm qualifiers even\n+\tat toplevel, but diagnose them.\n+\n 2019-03-06  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/89381 - implicit copy and using-declaration."}, {"sha": "5ac6fc49bdefa4bb79da1ae7f2f2fe2f26f82b91", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=f879f0e3f2667bd60b88603c5884364a0eed1fc4", "patch": "@@ -19766,8 +19766,9 @@ cp_parser_asm_definition (cp_parser* parser)\n   location_t volatile_loc = UNKNOWN_LOCATION;\n   location_t inline_loc = UNKNOWN_LOCATION;\n   location_t goto_loc = UNKNOWN_LOCATION;\n+  location_t first_loc = UNKNOWN_LOCATION;\n \n-  if (cp_parser_allow_gnu_extensions_p (parser) && parser->in_function_body)\n+  if (cp_parser_allow_gnu_extensions_p (parser))\n     for (;;)\n       {\n \tcp_token *token = cp_lexer_peek_token (parser->lexer);\n@@ -19782,6 +19783,8 @@ cp_parser_asm_definition (cp_parser* parser)\n \t      }\n \t    else\n \t      volatile_loc = loc;\n+\t    if (!first_loc)\n+\t      first_loc = loc;\n \t    cp_lexer_consume_token (parser->lexer);\n \t    continue;\n \n@@ -19793,6 +19796,8 @@ cp_parser_asm_definition (cp_parser* parser)\n \t      }\n \t    else\n \t      inline_loc = loc;\n+\t    if (!first_loc)\n+\t      first_loc = loc;\n \t    cp_lexer_consume_token (parser->lexer);\n \t    continue;\n \n@@ -19804,6 +19809,8 @@ cp_parser_asm_definition (cp_parser* parser)\n \t      }\n \t    else\n \t      goto_loc = loc;\n+\t    if (!first_loc)\n+\t      first_loc = loc;\n \t    cp_lexer_consume_token (parser->lexer);\n \t    continue;\n \n@@ -19823,6 +19830,12 @@ cp_parser_asm_definition (cp_parser* parser)\n   bool inline_p = (inline_loc != UNKNOWN_LOCATION);\n   bool goto_p = (goto_loc != UNKNOWN_LOCATION);\n \n+  if (!parser->in_function_body && (volatile_p || inline_p || goto_p))\n+    {\n+      error_at (first_loc, \"asm qualifier outside of function body\");\n+      volatile_p = inline_p = goto_p = false;\n+    }\n+\n   /* Look for the opening `('.  */\n   if (!cp_parser_require (parser, CPP_OPEN_PAREN, RT_OPEN_PAREN))\n     return;"}, {"sha": "0a84083c5f30fcff2822f6e4db6b64088f7f2f9e", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=f879f0e3f2667bd60b88603c5884364a0eed1fc4", "patch": "@@ -9064,6 +9064,8 @@ outside of C functions, you must use basic @code{asm}.\n You can use this technique to emit assembler directives,\n define assembly language macros that can be invoked elsewhere in the file,\n or write entire functions in assembly language.\n+Basic @code{asm} statements outside of functions may not use any\n+qualifiers.\n \n @item\n Functions declared"}, {"sha": "7092764419c327e67b6dd0a098c60fea812c926c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f879f0e3f2667bd60b88603c5884364a0eed1fc4", "patch": "@@ -1,3 +1,8 @@\n+2019-03-07  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/89585\n+\t* g++.dg/asm-qual-3.C: Adjust expected diagnostics.\n+\n 2019-03-06  Harald Anlauf  <anlauf@gmx.de>\n \n \tPR fortran/71203"}, {"sha": "0f8de369462687d017477ad30920dab76b0f3a8a", "filename": "gcc/testsuite/g++.dg/asm-qual-3.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f879f0e3f2667bd60b88603c5884364a0eed1fc4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fasm-qual-3.C?ref=f879f0e3f2667bd60b88603c5884364a0eed1fc4", "patch": "@@ -2,11 +2,11 @@\n // { dg-do compile }\n // { dg-options \"-std=gnu++98\" }\n \n-asm const (\"\");    // { dg-error {expected '\\(' before 'const'} }\n-asm volatile (\"\"); // { dg-error {expected '\\(' before 'volatile'} }\n+asm const (\"\");    // { dg-error {'const' is not an asm qualifier} }\n+asm volatile (\"\"); // { dg-error {asm qualifier outside of function body} }\n asm restrict (\"\"); // { dg-error {expected '\\(' before 'restrict'} }\n-asm inline (\"\");   // { dg-error {expected '\\(' before 'inline'} }\n-asm goto (\"\");     // { dg-error {expected '\\(' before 'goto'} }\n+asm inline (\"\");   // { dg-error {asm qualifier outside of function body} }\n+asm goto (\"\");     // { dg-error {asm qualifier outside of function body} }\n \n // There are many other things wrong with this code, so:\n // { dg-excess-errors \"\" }"}]}