{"sha": "d211e4719264a66f3a310870d7459751c335ce7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIxMWU0NzE5MjY0YTY2ZjNhMzEwODcwZDc0NTk3NTFjMzM1Y2U3Zg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2014-06-04T09:39:24Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2014-06-04T09:39:24Z"}, "message": "Enhancement of call graph API\n\n\t* cgraph.h (expand_thunk): New argument added.\n\t(address_taken_from_non_vtable_p): New global function.\n\t* ipa-visibility.c (address_taken_from_non_vtable_p): Likewise.\n\t* cgraphclones.c (duplicate_thunk_for_node): Argument added to call.\n\t* cgraphunit.c (analyze_function): Likewise.\n\t(assemble_thunks_and_aliases): Argument added to call.\n\t(expand_thunk): New argument forces to produce GIMPLE thunk.\n\nFrom-SVN: r211218", "tree": {"sha": "9145c7839e56bc45a6609950c9b5e844507d3d03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9145c7839e56bc45a6609950c9b5e844507d3d03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d211e4719264a66f3a310870d7459751c335ce7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d211e4719264a66f3a310870d7459751c335ce7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d211e4719264a66f3a310870d7459751c335ce7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d211e4719264a66f3a310870d7459751c335ce7f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a96bf0d3ceb411299cc5dedfc7705de9ac21988a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a96bf0d3ceb411299cc5dedfc7705de9ac21988a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a96bf0d3ceb411299cc5dedfc7705de9ac21988a"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "1f42a28b2c7384f3d3723d8cf395a5d9bf84bf48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d211e4719264a66f3a310870d7459751c335ce7f", "patch": "@@ -1,3 +1,13 @@\n+2014-06-04  Martin Liska  <mliska@suse.cz>\n+\n+\t* cgraph.h (expand_thunk): New argument added.\n+\t(address_taken_from_non_vtable_p): New global function.\n+\t* ipa-visibility.c (address_taken_from_non_vtable_p): Likewise.\n+\t* cgraphclones.c (duplicate_thunk_for_node): Argument added to call.\n+\t* cgraphunit.c (analyze_function): Likewise.\n+\t(assemble_thunks_and_aliases): Argument added to call.\n+\t(expand_thunk): New argument forces to produce GIMPLE thunk.\n+\n 2014-06-04  Martin Liska  <mliska@suse.cz>\n \n \t* coverage.h (coverage_compute_cfg_checksum): Argument added."}, {"sha": "202c746813f8712a07fc76999475c4f9d09f5ea3", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=d211e4719264a66f3a310870d7459751c335ce7f", "patch": "@@ -911,7 +911,7 @@ void fixup_same_cpp_alias_visibility (symtab_node *, symtab_node *target, tree);\n     IN_SSA is true if the gimple is in SSA.  */\n basic_block init_lowered_empty_function (tree, bool);\n void cgraph_reset_node (struct cgraph_node *);\n-bool expand_thunk (struct cgraph_node *, bool);\n+bool expand_thunk (struct cgraph_node *, bool, bool);\n \n /* In cgraphclones.c  */\n \n@@ -979,6 +979,7 @@ bool varpool_externally_visible_p (varpool_node *);\n \n /* In ipa-visibility.c */\n bool cgraph_local_node_p (struct cgraph_node *);\n+bool address_taken_from_non_vtable_p (symtab_node *node);\n \n \n /* In predict.c  */"}, {"sha": "75eba6da59dbb5666b9e4696663c4d8f1c0a666d", "filename": "gcc/cgraphclones.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2Fcgraphclones.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2Fcgraphclones.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphclones.c?ref=d211e4719264a66f3a310870d7459751c335ce7f", "patch": "@@ -353,7 +353,7 @@ duplicate_thunk_for_node (cgraph_node *thunk, cgraph_node *node,\n \t\t\t\t\t      CGRAPH_FREQ_BASE);\n   e->call_stmt_cannot_inline_p = true;\n   cgraph_call_edge_duplication_hooks (thunk->callees, e);\n-  if (!expand_thunk (new_thunk, false))\n+  if (!expand_thunk (new_thunk, false, false))\n     new_thunk->analyzed = true;\n   cgraph_call_node_duplication_hooks (thunk, new_thunk);\n   return new_thunk;"}, {"sha": "55bf37858e173b2b05376887d4d92c67ca451366", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=d211e4719264a66f3a310870d7459751c335ce7f", "patch": "@@ -610,7 +610,7 @@ analyze_function (struct cgraph_node *node)\n     {\n       cgraph_create_edge (node, cgraph_get_node (node->thunk.alias),\n \t\t          NULL, 0, CGRAPH_FREQ_BASE);\n-      if (!expand_thunk (node, false))\n+      if (!expand_thunk (node, false, false))\n \t{\n \t  node->thunk.alias = NULL;\n \t  node->analyzed = true;\n@@ -1466,11 +1466,13 @@ thunk_adjust (gimple_stmt_iterator * bsi,\n }\n \n /* Expand thunk NODE to gimple if possible.\n+   When FORCE_GIMPLE_THUNK is true, gimple thunk is created and\n+   no assembler is produced.\n    When OUTPUT_ASM_THUNK is true, also produce assembler for\n    thunks that are not lowered.  */\n \n bool\n-expand_thunk (struct cgraph_node *node, bool output_asm_thunks)\n+expand_thunk (struct cgraph_node *node, bool output_asm_thunks, bool force_gimple_thunk)\n {\n   bool this_adjusting = node->thunk.this_adjusting;\n   HOST_WIDE_INT fixed_offset = node->thunk.fixed_offset;\n@@ -1481,7 +1483,7 @@ expand_thunk (struct cgraph_node *node, bool output_asm_thunks)\n   tree a;\n \n \n-  if (this_adjusting\n+  if (!force_gimple_thunk && this_adjusting\n       && targetm.asm_out.can_output_mi_thunk (thunk_fndecl, fixed_offset,\n \t\t\t\t\t      virtual_value, alias))\n     {\n@@ -1719,7 +1721,7 @@ assemble_thunks_and_aliases (struct cgraph_node *node)\n \n \te = e->next_caller;\n \tassemble_thunks_and_aliases (thunk);\n-        expand_thunk (thunk, true);\n+        expand_thunk (thunk, true, false);\n       }\n     else\n       e = e->next_caller;"}, {"sha": "7886722ab8bd8c7ee51a816e1e953965377959f3", "filename": "gcc/ipa-visibility.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2Fipa-visibility.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d211e4719264a66f3a310870d7459751c335ce7f/gcc%2Fipa-visibility.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-visibility.c?ref=d211e4719264a66f3a310870d7459751c335ce7f", "patch": "@@ -115,7 +115,7 @@ cgraph_local_node_p (struct cgraph_node *node)\n }\n \n /* Return true when there is a reference to node and it is not vtable.  */\n-static bool\n+bool\n address_taken_from_non_vtable_p (symtab_node *node)\n {\n   int i;"}]}