{"sha": "6987c38487443ef2055c40d2859682ec2a0cd4de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk4N2MzODQ4NzQ0M2VmMjA1NWM0MGQyODU5NjgyZWMyYTBjZDRkZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-05-05T11:02:49Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-05-05T11:02:49Z"}, "message": "i386.c: Use HOST_WIDE_INT_1 instead of (HOST_WIDE_INT) 1 and HOST_WIDE_INT_1U instead...\n\n\t* config/i386/i386.c: Use HOST_WIDE_INT_1 instead of (HOST_WIDE_INT) 1\n\tand HOST_WIDE_INT_1U instead of (unsigned HOST_WIDE_INT) 1.\n\t* config/i386/i386.md: Ditto.\n\t* config/i386/winnt.c: Ditto.\n\nFrom-SVN: r222804", "tree": {"sha": "28c775b57efba2d0c021b154647c57c7eafa0cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28c775b57efba2d0c021b154647c57c7eafa0cf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6987c38487443ef2055c40d2859682ec2a0cd4de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6987c38487443ef2055c40d2859682ec2a0cd4de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6987c38487443ef2055c40d2859682ec2a0cd4de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6987c38487443ef2055c40d2859682ec2a0cd4de/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78b1add95968f632ca5e107d58e449e32fdc390c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b1add95968f632ca5e107d58e449e32fdc390c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b1add95968f632ca5e107d58e449e32fdc390c"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "f31aebb076277ece60fc6631e9768bb4cd4e02de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6987c38487443ef2055c40d2859682ec2a0cd4de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6987c38487443ef2055c40d2859682ec2a0cd4de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6987c38487443ef2055c40d2859682ec2a0cd4de", "patch": "@@ -1,3 +1,10 @@\n+2015-05-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c: Use HOST_WIDE_INT_1 instead of (HOST_WIDE_INT) 1\n+\tand HOST_WIDE_INT_1U instead of (unsigned HOST_WIDE_INT) 1.\n+\t* config/i386/i386.md: Ditto.\n+\t* config/i386/winnt.c: Ditto.\n+\n 2015-05-05  Matthew Wahab  <matthew.wahab@arm.com>\n \n \t* doc/extend.texi (__atomic Builtins): Move implementation details"}, {"sha": "eeef3d42f8df54b8c52a25a5fe98e09c20a06cb7", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6987c38487443ef2055c40d2859682ec2a0cd4de/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6987c38487443ef2055c40d2859682ec2a0cd4de/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=6987c38487443ef2055c40d2859682ec2a0cd4de", "patch": "@@ -19366,7 +19366,7 @@ ix86_expand_adjust_ufix_to_sfix_si (rtx val, rtx *xorp)\n \t\t\t\t OPTAB_DIRECT);\n   else\n     {\n-      rtx two31 = GEN_INT ((unsigned HOST_WIDE_INT) 1 << 31);\n+      rtx two31 = GEN_INT (HOST_WIDE_INT_1U << 31);\n       two31 = ix86_build_const_vector (intmode, 1, two31);\n       *xorp = expand_simple_binop (intmode, AND,\n \t\t\t\t   gen_lowpart (intmode, tmp[0]),\n@@ -24772,7 +24772,7 @@ ix86_expand_set_or_movmem (rtx dst, rtx src, rtx count_exp, rtx val_exp,\n      }\n \n   /* Make sure we don't need to care about overflow later on.  */\n-  if (count > ((unsigned HOST_WIDE_INT) 1 << 30))\n+  if (count > (HOST_WIDE_INT_1U << 30))\n     return false;\n \n   /* Step 0: Decide on preferred algorithm, desired alignment and\n@@ -47734,7 +47734,7 @@ expand_vec_perm_interleave2 (struct expand_vec_perm_d *d)\n   /* Examine from whence the elements come.  */\n   contents = 0;\n   for (i = 0; i < nelt; ++i)\n-    contents |= ((unsigned HOST_WIDE_INT) 1) << d->perm[i];\n+    contents |= HOST_WIDE_INT_1U << d->perm[i];\n \n   memset (remap, 0xff, sizeof (remap));\n   dremap = *d;\n@@ -47744,7 +47744,7 @@ expand_vec_perm_interleave2 (struct expand_vec_perm_d *d)\n       unsigned HOST_WIDE_INT h1, h2, h3, h4;\n \n       /* Split the two input vectors into 4 halves.  */\n-      h1 = (((unsigned HOST_WIDE_INT) 1) << nelt2) - 1;\n+      h1 = (HOST_WIDE_INT_1U << nelt2) - 1;\n       h2 = h1 << nelt2;\n       h3 = h2 << nelt2;\n       h4 = h3 << nelt2;\n@@ -47826,7 +47826,7 @@ expand_vec_perm_interleave2 (struct expand_vec_perm_d *d)\n       unsigned int nonzero_halves[4];\n \n       /* Split the two input vectors into 8 quarters.  */\n-      q[0] = (((unsigned HOST_WIDE_INT) 1) << nelt4) - 1;\n+      q[0] = (HOST_WIDE_INT_1U << nelt4) - 1;\n       for (i = 1; i < 8; ++i)\n \tq[i] = q[0] << (nelt4 * i);\n       for (i = 0; i < 4; ++i)"}, {"sha": "0e941b6be6683a290db7296e3281291c8434e637", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6987c38487443ef2055c40d2859682ec2a0cd4de/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6987c38487443ef2055c40d2859682ec2a0cd4de/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=6987c38487443ef2055c40d2859682ec2a0cd4de", "patch": "@@ -6087,7 +6087,7 @@\n    && GET_MODE (operands[0]) == GET_MODE (operands[1])\n    && ((unsigned HOST_WIDE_INT) INTVAL (operands[2])) - 1 < 3\n    && ((unsigned HOST_WIDE_INT) INTVAL (operands[3])\n-       < ((unsigned HOST_WIDE_INT) 1 << INTVAL (operands[2])))\"\n+       < (HOST_WIDE_INT_1U << INTVAL (operands[2])))\"\n   \"#\"\n   \"&& reload_completed\"\n   [(const_int 0)]"}, {"sha": "e698cd5df9839b7201905d1803d6b46a8d6a9379", "filename": "gcc/config/i386/winnt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6987c38487443ef2055c40d2859682ec2a0cd4de/gcc%2Fconfig%2Fi386%2Fwinnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6987c38487443ef2055c40d2859682ec2a0cd4de/gcc%2Fconfig%2Fi386%2Fwinnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fwinnt.c?ref=6987c38487443ef2055c40d2859682ec2a0cd4de", "patch": "@@ -599,7 +599,7 @@ i386_pe_asm_output_aligned_decl_common (FILE *stream, tree decl,\n   assemble_name (stream, name);\n   if (use_pe_aligned_common)\n     fprintf (stream, \", \" HOST_WIDE_INT_PRINT_DEC \", %d\\n\",\n-\t   size ? size : (HOST_WIDE_INT) 1,\n+\t   size ? size : HOST_WIDE_INT_1,\n \t   exact_log2 (align) - exact_log2 (CHAR_BIT));\n   else\n     fprintf (stream, \", \" HOST_WIDE_INT_PRINT_DEC \"\\t\" ASM_COMMENT_START"}]}