{"sha": "9b0d780514131e09634b01ab3ec43a9a85aecb3b", "node_id": "C_kwDOANBUbNoAKDliMGQ3ODA1MTQxMzFlMDk2MzRiMDFhYjNlYzQzYTlhODVhZWNiM2I", "commit": {"author": {"name": "Ronan Desplanques", "email": "desplanques@adacore.com", "date": "2022-09-26T14:55:28Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-29T09:08:47Z"}, "message": "ada: Remove duplicated doc comment section\n\nA documentation section was duplicated by mistake in r0-110752.\nThis commit removes the copy that was added by r0-110752, but\nintegrates the small editorial change that it brought to the\noriginal.\n\ngcc/ada/\n\n\t* einfo.ads: remove documentation duplicate", "tree": {"sha": "63c5ec00ea529cab56fb01a9c571a4945bfcdfd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/63c5ec00ea529cab56fb01a9c571a4945bfcdfd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b0d780514131e09634b01ab3ec43a9a85aecb3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0d780514131e09634b01ab3ec43a9a85aecb3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b0d780514131e09634b01ab3ec43a9a85aecb3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b0d780514131e09634b01ab3ec43a9a85aecb3b/comments", "author": {"login": "ronan-d", "id": 14870758, "node_id": "MDQ6VXNlcjE0ODcwNzU4", "avatar_url": "https://avatars.githubusercontent.com/u/14870758?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ronan-d", "html_url": "https://github.com/ronan-d", "followers_url": "https://api.github.com/users/ronan-d/followers", "following_url": "https://api.github.com/users/ronan-d/following{/other_user}", "gists_url": "https://api.github.com/users/ronan-d/gists{/gist_id}", "starred_url": "https://api.github.com/users/ronan-d/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ronan-d/subscriptions", "organizations_url": "https://api.github.com/users/ronan-d/orgs", "repos_url": "https://api.github.com/users/ronan-d/repos", "events_url": "https://api.github.com/users/ronan-d/events{/privacy}", "received_events_url": "https://api.github.com/users/ronan-d/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f8a934b44ef0d64b5c96c673d14da78867a2738", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f8a934b44ef0d64b5c96c673d14da78867a2738", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f8a934b44ef0d64b5c96c673d14da78867a2738"}], "stats": {"total": 40, "additions": 3, "deletions": 37}, "files": [{"sha": "e350f137ee74db1a83946859259a5fca7f63576f", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 3, "deletions": 37, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b0d780514131e09634b01ab3ec43a9a85aecb3b/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b0d780514131e09634b01ab3ec43a9a85aecb3b/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=9b0d780514131e09634b01ab3ec43a9a85aecb3b", "patch": "@@ -222,10 +222,9 @@ package Einfo is\n --  on the actions triggered by a freeze node, which include the construction\n --  of initialization procedures and dispatch tables.\n \n---  b) The presence of a freeze node on an entity is used by the back end to\n---  defer elaboration of the entity until its freeze node is seen. In the\n---  absence of an explicit freeze node, an entity is frozen (and elaborated)\n---  at the point of declaration.\n+--  b) The flag is used by the back end to defer elaboration of the entity\n+--  until its freeze node is seen. In the absence of an explicit freeze node,\n+--  an entity is frozen (and elaborated) at the point of declaration.\n \n --  For object declarations, the flag is set when an address clause for the\n --  object is encountered. Legality checks on the address expression only take\n@@ -4825,39 +4824,6 @@ package Einfo is\n \n --  The front-end does not store explicitly the fact that Z renames X.\n \n---------------------------------------\n--- Delayed Freezing and Elaboration --\n---------------------------------------\n-\n---  The flag Has_Delayed_Freeze indicates that an entity carries an explicit\n---  freeze node, which appears later in the expanded tree.\n-\n---  a) The flag is used by the front-end to trigger expansion actions\n---  which include the generation of that freeze node. Typically this happens at\n---  the end of the current compilation unit, or before the first subprogram\n---  body is encountered in the current unit. See files freeze and exp_ch13 for\n---  details on the actions triggered by a freeze node, which include the\n---  construction of initialization procedures and dispatch tables.\n-\n---  b) The flag is used by the backend to defer elaboration of the entity until\n---  its freeze node is seen. In the absence of an explicit freeze node, an\n---  entity is frozen (and elaborated) at the point of declaration.\n-\n---  For object declarations, the flag is set when an address clause for the\n---  object is encountered. Legality checks on the address expression only\n---  take place at the freeze point of the object.\n-\n---  Most types have an explicit freeze node, because they cannot be elaborated\n---  until all representation and operational items that apply to them have been\n---  analyzed. Private types and incomplete types have the flag set as well, as\n---  do task and protected types.\n-\n---  Implicit base types created for type derivations, as well as classwide\n---  types created for all tagged types, have the flag set.\n-\n---  If a subprogram has an access parameter whose designated type is incomplete\n---  the subprogram has the flag set.\n-\n ------------------\n -- Access Kinds --\n ------------------"}]}