{"sha": "317ea7c0f44135b03b5dc1827532004ef86d72e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE3ZWE3YzBmNDQxMzViMDNiNWRjMTgyNzUzMjAwNGVmODZkNzJlMA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-14T19:40:09Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-02-14T19:40:09Z"}, "message": "re PR go/48410 (weird installation dir)\n\n\tPR go/48410\nlibgo: Don't put .gox files in version-specific directory.\n\nFrom-SVN: r184223", "tree": {"sha": "ac078a0e02e9c32f7674fa05823f2b151584da6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac078a0e02e9c32f7674fa05823f2b151584da6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/317ea7c0f44135b03b5dc1827532004ef86d72e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317ea7c0f44135b03b5dc1827532004ef86d72e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/317ea7c0f44135b03b5dc1827532004ef86d72e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/317ea7c0f44135b03b5dc1827532004ef86d72e0/comments", "author": null, "committer": null, "parents": [{"sha": "2b120fe98e786016576a60b30d0e0a3e3c780c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b120fe98e786016576a60b30d0e0a3e3c780c78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b120fe98e786016576a60b30d0e0a3e3c780c78"}], "stats": {"total": 73, "additions": 38, "deletions": 35}, "files": [{"sha": "2e874df00b71cdcca5a3f12010bebf1bf65947f4", "filename": "libgo/Makefile.am", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=317ea7c0f44135b03b5dc1827532004ef86d72e0", "patch": "@@ -25,6 +25,7 @@ STAMP = echo timestamp >\n \n toolexecdir = $(glibgo_toolexecdir)\n toolexeclibdir = $(glibgo_toolexeclibdir)\n+toolexeclibgodir = $(nover_glibgo_toolexeclibdir)/go/$(gcc_version)/$(target_alias)\n \n LIBFFI = @LIBFFI@\n LIBFFIINCS = @LIBFFIINCS@\n@@ -97,8 +98,6 @@ FLAGS_TO_PASS = $(AM_MAKEFLAGS)\n toolexeclib_LTLIBRARIES = libgo.la\n toolexeclib_LIBRARIES = libgobegin.a\n \n-toolexeclibgodir = $(toolexeclibdir)/go/$(gcc_version)/$(target_alias)\n-\n toolexeclibgo_DATA = \\\n \tbufio.gox \\\n \tbytes.gox \\"}, {"sha": "50195cc458a52b0ba06b4b814065bf065479021c", "filename": "libgo/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=317ea7c0f44135b03b5dc1827532004ef86d72e0", "patch": "@@ -451,7 +451,6 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n-glibgo_prefixdir = @glibgo_prefixdir@\n glibgo_toolexecdir = @glibgo_toolexecdir@\n glibgo_toolexeclibdir = @glibgo_toolexeclibdir@\n go_include = @go_include@\n@@ -472,6 +471,7 @@ localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n multi_basedir = @multi_basedir@\n+nover_glibgo_toolexeclibdir = @nover_glibgo_toolexeclibdir@\n oldincludedir = @oldincludedir@\n pdfdir = @pdfdir@\n prefix = @prefix@\n@@ -501,6 +501,7 @@ PWD_COMMAND = $${PWDCMD-pwd}\n STAMP = echo timestamp >\n toolexecdir = $(glibgo_toolexecdir)\n toolexeclibdir = $(glibgo_toolexeclibdir)\n+toolexeclibgodir = $(nover_glibgo_toolexeclibdir)/go/$(gcc_version)/$(target_alias)\n WARN_CFLAGS = $(WARN_FLAGS) $(WERROR)\n \n # -I/-D flags to pass when compiling.\n@@ -564,7 +565,6 @@ AM_MAKEFLAGS = \\\n FLAGS_TO_PASS = $(AM_MAKEFLAGS)\n toolexeclib_LTLIBRARIES = libgo.la\n toolexeclib_LIBRARIES = libgobegin.a\n-toolexeclibgodir = $(toolexeclibdir)/go/$(gcc_version)/$(target_alias)\n toolexeclibgo_DATA = \\\n \tbufio.gox \\\n \tbytes.gox \\"}, {"sha": "9bbdfe92985df8edb49a1343099740c001127276", "filename": "libgo/configure", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=317ea7c0f44135b03b5dc1827532004ef86d72e0", "patch": "@@ -671,9 +671,9 @@ LIBGO_IS_DARWIN_TRUE\n go_include\n LIBFFIINCS\n LIBFFI\n+nover_glibgo_toolexeclibdir\n glibgo_toolexeclibdir\n glibgo_toolexecdir\n-glibgo_prefixdir\n WERROR\n WARN_FLAGS\n CC_FOR_BUILD\n@@ -13391,7 +13391,6 @@ WERROR=\"-Werror\"\n \n glibgo_toolexecdir=no\n glibgo_toolexeclibdir=no\n-glibgo_prefixdir=$prefix\n \n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for --enable-version-specific-runtime-libs\" >&5\n $as_echo_n \"checking for --enable-version-specific-runtime-libs... \" >&6; }\n@@ -13417,20 +13416,23 @@ fi\n \n # Calculate glibgo_toolexecdir, glibgo_toolexeclibdir\n # Install a library built with a cross compiler in tooldir, not libdir.\n+if test -n \"$with_cross_host\" &&\n+   test x\"$with_cross_host\" != x\"no\"; then\n+  nover_glibgo_toolexecdir='${exec_prefix}/${host_alias}'\n+  nover_glibgo_toolexeclibdir='${toolexecdir}/lib'\n+else\n+  nover_glibgo_toolexecdir='${libdir}/gcc/${host_alias}'\n+  nover_glibgo_toolexeclibdir='${libdir}'\n+fi\n+multi_os_directory=`$CC -print-multi-os-directory`\n+case $multi_os_directory in\n+  .) ;; # Avoid trailing /.\n+  *) nover_glibgo_toolexeclibdir=${nover_glibgo_toolexeclibdir}/${multi_os_directory} ;;\n+esac\n+\n if test x\"$glibgo_toolexecdir\" = x\"no\"; then\n-  if test -n \"$with_cross_host\" &&\n-     test x\"$with_cross_host\" != x\"no\"; then\n-    glibgo_toolexecdir='${exec_prefix}/${host_alias}'\n-    glibgo_toolexeclibdir='${toolexecdir}/lib'\n-  else\n-    glibgo_toolexecdir='${libdir}/gcc/${host_alias}'\n-    glibgo_toolexeclibdir='${libdir}'\n-  fi\n-  multi_os_directory=`$CC -print-multi-os-directory`\n-  case $multi_os_directory in\n-    .) ;; # Avoid trailing /.\n-    *) glibgo_toolexeclibdir=$glibgo_toolexeclibdir/$multi_os_directory ;;\n-  esac\n+  glibgo_toolexecdir=\"${nover_glibgo_toolexecdir}\"\n+  glibgo_toolexeclibdir=\"${nover_glibgo_toolexeclibdir}\"\n fi\n \n "}, {"sha": "249918b15d0c367065c4d683d03beca9e3cd07bc", "filename": "libgo/configure.ac", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=317ea7c0f44135b03b5dc1827532004ef86d72e0", "patch": "@@ -58,7 +58,6 @@ AC_SUBST(WERROR)\n \n glibgo_toolexecdir=no\n glibgo_toolexeclibdir=no\n-glibgo_prefixdir=$prefix\n \n AC_MSG_CHECKING([for --enable-version-specific-runtime-libs])\n AC_ARG_ENABLE([version-specific-runtime-libs],\n@@ -80,25 +79,28 @@ fi\n \n # Calculate glibgo_toolexecdir, glibgo_toolexeclibdir\n # Install a library built with a cross compiler in tooldir, not libdir.\n+if test -n \"$with_cross_host\" &&\n+   test x\"$with_cross_host\" != x\"no\"; then\n+  nover_glibgo_toolexecdir='${exec_prefix}/${host_alias}'\n+  nover_glibgo_toolexeclibdir='${toolexecdir}/lib'\n+else\n+  nover_glibgo_toolexecdir='${libdir}/gcc/${host_alias}'\n+  nover_glibgo_toolexeclibdir='${libdir}'\n+fi\n+multi_os_directory=`$CC -print-multi-os-directory`\n+case $multi_os_directory in\n+  .) ;; # Avoid trailing /.\n+  *) nover_glibgo_toolexeclibdir=${nover_glibgo_toolexeclibdir}/${multi_os_directory} ;;\n+esac\n+\n if test x\"$glibgo_toolexecdir\" = x\"no\"; then\n-  if test -n \"$with_cross_host\" &&\n-     test x\"$with_cross_host\" != x\"no\"; then\n-    glibgo_toolexecdir='${exec_prefix}/${host_alias}'\n-    glibgo_toolexeclibdir='${toolexecdir}/lib'\n-  else\n-    glibgo_toolexecdir='${libdir}/gcc/${host_alias}'\n-    glibgo_toolexeclibdir='${libdir}'\n-  fi\n-  multi_os_directory=`$CC -print-multi-os-directory`\n-  case $multi_os_directory in\n-    .) ;; # Avoid trailing /.\n-    *) glibgo_toolexeclibdir=$glibgo_toolexeclibdir/$multi_os_directory ;;\n-  esac\n+  glibgo_toolexecdir=\"${nover_glibgo_toolexecdir}\"\n+  glibgo_toolexeclibdir=\"${nover_glibgo_toolexeclibdir}\"\n fi\n \n-AC_SUBST(glibgo_prefixdir)\n AC_SUBST(glibgo_toolexecdir)\n AC_SUBST(glibgo_toolexeclibdir)\n+AC_SUBST(nover_glibgo_toolexeclibdir)\n \n # See if the user wants to configure without libffi.  Some\n # architectures don't support it.  FIXME: We should set a default"}, {"sha": "4628fdd919b8d9732b1906ab6cca4e40450ac655", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/317ea7c0f44135b03b5dc1827532004ef86d72e0/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=317ea7c0f44135b03b5dc1827532004ef86d72e0", "patch": "@@ -167,7 +167,6 @@ dvidir = @dvidir@\n enable_shared = @enable_shared@\n enable_static = @enable_static@\n exec_prefix = @exec_prefix@\n-glibgo_prefixdir = @glibgo_prefixdir@\n glibgo_toolexecdir = @glibgo_toolexecdir@\n glibgo_toolexeclibdir = @glibgo_toolexeclibdir@\n go_include = @go_include@\n@@ -188,6 +187,7 @@ localstatedir = @localstatedir@\n mandir = @mandir@\n mkdir_p = @mkdir_p@\n multi_basedir = @multi_basedir@\n+nover_glibgo_toolexeclibdir = @nover_glibgo_toolexeclibdir@\n oldincludedir = @oldincludedir@\n pdfdir = @pdfdir@\n prefix = @prefix@"}]}