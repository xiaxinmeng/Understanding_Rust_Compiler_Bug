{"sha": "c0561434cdccc513e6b1238302a5b8f798456b66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzA1NjE0MzRjZGNjYzUxM2U2YjEyMzgzMDJhNWI4Zjc5ODQ1NmI2Ng==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2002-03-22T02:40:32Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2002-03-22T02:40:32Z"}, "message": "gcconfig.h: Add unified test for FreeBSD.\n\n\t* include/private/gcconfig.h: Add unified test for FreeBSD.\n\tSupport FreeBSD/alpha.\n\t* os_dep.c: Do not include <machine/trap.h> unless available.\n\t(GC_freebsd_stack_base): Fix types.\n\nFrom-SVN: r51159", "tree": {"sha": "4c334d22c263ac85927733f701963abf3bec4c78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c334d22c263ac85927733f701963abf3bec4c78"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c0561434cdccc513e6b1238302a5b8f798456b66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0561434cdccc513e6b1238302a5b8f798456b66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0561434cdccc513e6b1238302a5b8f798456b66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0561434cdccc513e6b1238302a5b8f798456b66/comments", "author": null, "committer": null, "parents": [{"sha": "fba39eafffa316f82e6f588233db8cdb7cd8ee22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fba39eafffa316f82e6f588233db8cdb7cd8ee22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fba39eafffa316f82e6f588233db8cdb7cd8ee22"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "5f1c1e121bcf8ac2335643e075dd516de64340d4", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0561434cdccc513e6b1238302a5b8f798456b66/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0561434cdccc513e6b1238302a5b8f798456b66/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=c0561434cdccc513e6b1238302a5b8f798456b66", "patch": "@@ -1,3 +1,10 @@\n+2002-03-21  Loren J. Rittle  <ljrittle@acm.org>\n+\n+\t* include/private/gcconfig.h: Add unified test for FreeBSD.\n+\tSupport FreeBSD/alpha.\n+\t* os_dep.c: Do not include <machine/trap.h> unless available.\n+\t(GC_freebsd_stack_base): Fix types.\n+\n 2002-03-17  Bryce McKinlay  <bryce@waitaki.otago.ac.nz>\n \n \t* Makefile.am: Make a convenience library."}, {"sha": "14aa8cb2edb07cdafdb7585c822e59c35e8b16a9", "filename": "boehm-gc/include/private/gcconfig.h", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0561434cdccc513e6b1238302a5b8f798456b66/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0561434cdccc513e6b1238302a5b8f798456b66/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2Fprivate%2Fgcconfig.h?ref=c0561434cdccc513e6b1238302a5b8f798456b66", "patch": "@@ -38,6 +38,11 @@\n #    define OPENBSD\n # endif\n \n+/* And one for FreeBSD: */\n+# if defined(__FreeBSD__)\n+#    define FREEBSD\n+# endif\n+\n /* Determine the machine type: */\n # if defined(__XSCALE__)\n #    define ARM32\n@@ -214,7 +219,7 @@\n # endif\n # if defined(__alpha) || defined(__alpha__)\n #   define ALPHA\n-#   if !defined(LINUX) && !defined(NETBSD) && !defined(OPENBSD)\n+#   if !defined(LINUX) && !defined(NETBSD) && !defined(OPENBSD) && !defined(FREEBSD)\n #     define OSF1\t/* a.k.a Digital Unix */\n #   endif\n #   define mach_type_known\n@@ -262,9 +267,8 @@\n #   define OPENBSD\n #   define mach_type_known\n # endif\n-# if defined(__FreeBSD__) && (defined(i386) || defined(__i386__))\n+# if defined(FREEBSD) && (defined(i386) || defined(__i386__))\n #   define I386\n-#   define FREEBSD\n #   define mach_type_known\n # endif\n # if defined(__NetBSD__) && (defined(i386) || defined(__i386__))\n@@ -1330,6 +1334,26 @@\n #   \t   define DATASTART ((ptr_t) 0x140000000)\n #   \tendif\n #   endif\n+#   ifdef FREEBSD\n+#\tdefine OS_TYPE \"FREEBSD\"\n+/* MPROTECT_VDB is not yet supported at all on FreeBSD/alpha. */\n+#\tdefine SIG_SUSPEND SIGUSR1\n+#\tdefine SIG_THR_RESTART SIGUSR2\n+#\tdefine FREEBSD_STACKBOTTOM\n+#\tifdef __ELF__\n+#\t    define DYNAMIC_LOADING\n+#\tendif\n+/* Handle unmapped hole alpha*-*-freebsd[45]* puts between etext and edata. */\n+\textern char etext;\n+\textern char edata;\n+\textern char end;\n+#\tdefine NEED_FIND_LIMIT\n+#\tdefine DATASTART ((ptr_t)(&etext))\n+#\tdefine DATAEND (GC_find_limit (DATASTART, TRUE))\n+#\tdefine DATASTART2 ((ptr_t)(&edata))\n+#\tdefine DATAEND2 ((ptr_t)(&end))\n+#\tdefine CPP_WORDSZ 64\n+#   endif\n #   ifdef OSF1\n #\tdefine OS_TYPE \"OSF1\"\n #   \tdefine DATASTART ((ptr_t) 0x140000000)"}, {"sha": "88194fe82db7d307a5fbc23e19ef8d74e8ac2dc5", "filename": "boehm-gc/os_dep.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c0561434cdccc513e6b1238302a5b8f798456b66/boehm-gc%2Fos_dep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c0561434cdccc513e6b1238302a5b8f798456b66/boehm-gc%2Fos_dep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fos_dep.c?ref=c0561434cdccc513e6b1238302a5b8f798456b66", "patch": "@@ -84,7 +84,7 @@\n #   include <setjmp.h>\n #endif\n \n-#ifdef FREEBSD\n+#if defined(FREEBSD) && defined(I386)\n #  include <machine/trap.h>\n #endif\n \n@@ -747,14 +747,14 @@ ptr_t GC_get_stack_base()\n \n   ptr_t GC_freebsd_stack_base(void)\n   {\n-    int nm[2] = { CTL_KERN, KERN_USRSTACK}, base, len, r;\n-    \n-    len = sizeof(int);\n-    r = sysctl(nm, 2, &base, &len, NULL, 0);\n+    int nm[2] = {CTL_KERN, KERN_USRSTACK};\n+    ptr_t base;\n+    size_t len = sizeof(ptr_t);\n+    int r = sysctl(nm, 2, &base, &len, NULL, 0);\n     \n     if (r) ABORT(\"Error getting stack base\");\n \n-    return (ptr_t)base;\n+    return base;\n   }\n \n #endif /* FREEBSD_STACKBOTTOM */"}]}