{"sha": "5e127570e2871666c51d6c27a05cc3297030a823", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWUxMjc1NzBlMjg3MTY2NmM1MWQ2YzI3YTA1Y2MzMjk3MDMwYTgyMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:22:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-06T11:22:32Z"}, "message": "[multiple changes]\n\n2017-01-06  Justin Squirek  <squirek@adacore.com>\n\n\t* sem_attr.adb (Analyze_Attribute): Modify semantic checks for\n\tFinalization_Size to allow a prefix of any non-class-wide type.\n\t* sem_attr.ads Modify comment for Finalization_Size to include\n\tdefinite type use case.\n\n2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n\n\t* einfo.ads, einfo.adb (Is_Entry_Wrapper): New flag, defined\n\ton procedures that are wrappers created for entries that have\n\tpreconditions.\n\t* sem_ch6.adb (Analyze_Subrogram_Body_Helper): If the subprogram\n\tbody is an entry_wrapper, compile it in the context of the\n\tsynchronized type, because a precondition may refer to funtions\n\tof the type.\n\t* exp_ch9.adb (Build_Contract_Wrapper): Set Is_Entry_Wrapper on\n\tbody entity.\n\t* exp_ch6.adb (Expand_Protected_Subprogram_Call): if the call is\n\twithin an Entry_Wrapper this is an external call whose target\n\tis the synchronized object that is the actual in the call to\n\tthe wrapper.\n\nFrom-SVN: r244138", "tree": {"sha": "ebeb3258b4fb1c6dfdae062c78ba5e192fdef917", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ebeb3258b4fb1c6dfdae062c78ba5e192fdef917"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5e127570e2871666c51d6c27a05cc3297030a823", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e127570e2871666c51d6c27a05cc3297030a823", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e127570e2871666c51d6c27a05cc3297030a823", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e127570e2871666c51d6c27a05cc3297030a823/comments", "author": null, "committer": null, "parents": [{"sha": "50145b93899e4a184a20309942255b6e68f206b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50145b93899e4a184a20309942255b6e68f206b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50145b93899e4a184a20309942255b6e68f206b3"}], "stats": {"total": 113, "additions": 106, "deletions": 7}, "files": [{"sha": "71f2ada9ef2a425a697912b268230786d823e957", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=5e127570e2871666c51d6c27a05cc3297030a823", "patch": "@@ -1,3 +1,26 @@\n+2017-01-06  Justin Squirek  <squirek@adacore.com>\n+\n+\t* sem_attr.adb (Analyze_Attribute): Modify semantic checks for\n+\tFinalization_Size to allow a prefix of any non-class-wide type.\n+\t* sem_attr.ads Modify comment for Finalization_Size to include\n+\tdefinite type use case.\n+\n+2017-01-06  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* einfo.ads, einfo.adb (Is_Entry_Wrapper): New flag, defined\n+\ton procedures that are wrappers created for entries that have\n+\tpreconditions.\n+\t* sem_ch6.adb (Analyze_Subrogram_Body_Helper): If the subprogram\n+\tbody is an entry_wrapper, compile it in the context of the\n+\tsynchronized type, because a precondition may refer to funtions\n+\tof the type.\n+\t* exp_ch9.adb (Build_Contract_Wrapper): Set Is_Entry_Wrapper on\n+\tbody entity.\n+\t* exp_ch6.adb (Expand_Protected_Subprogram_Call): if the call is\n+\twithin an Entry_Wrapper this is an external call whose target\n+\tis the synchronized object that is the actual in the call to\n+\tthe wrapper.\n+\n 2017-01-06  Yannick Moy  <moy@adacore.com>\n \n \t* sem_attr.adb (Analyze_Attribute/Attribute_Loop_Entry): Analyze node"}, {"sha": "f2023c0e81a0656d909bfd3d486207dac68b5f46", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=5e127570e2871666c51d6c27a05cc3297030a823", "patch": "@@ -613,8 +613,8 @@ package body Einfo is\n    --    Has_Pragma_Unused               Flag294\n    --    Is_Ignored_Transient            Flag295\n    --    Has_Partial_Visible_Refinement  Flag296\n+   --    Is_Entry_Wrapper                Flag297\n \n-   --    (unused)                        Flag297\n    --    (unused)                        Flag298\n    --    (unused)                        Flag299\n    --    (unused)                        Flag300\n@@ -2197,6 +2197,11 @@ package body Einfo is\n       return Flag52 (Id);\n    end Is_Entry_Formal;\n \n+   function Is_Entry_Wrapper (Id : E) return B is\n+   begin\n+      return Flag297 (Id);\n+   end Is_Entry_Wrapper;\n+\n    function Is_Exception_Handler (Id : E) return B is\n    begin\n       pragma Assert (Ekind (Id) = E_Block);\n@@ -5287,6 +5292,11 @@ package body Einfo is\n       Set_Flag52 (Id, V);\n    end Set_Is_Entry_Formal;\n \n+   procedure Set_Is_Entry_Wrapper (Id : E; V : B := True) is\n+   begin\n+      Set_Flag297 (Id, V);\n+   end Set_Is_Entry_Wrapper;\n+\n    procedure Set_Is_Exception_Handler (Id : E; V : B := True) is\n    begin\n       pragma Assert (Ekind (Id) = E_Block);"}, {"sha": "b1c817f7484d6ff00d94a78706823b5524499a76", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5e127570e2871666c51d6c27a05cc3297030a823", "patch": "@@ -2483,6 +2483,10 @@ package Einfo is\n --       be in, in-out or out parameters). This flag is used to speed up the\n --       test for the need to replace references in Exp_Ch2.\n \n+--    Is_Entry_Wrapper (Flag297)\n+--       Defined on wrappers that are created for entries that have pre-\n+--       condition aspects.\n+\n --    Is_Enumeration_Type (synthesized)\n --       Defined in all entities, true for enumeration types and subtypes\n \n@@ -5893,6 +5897,7 @@ package Einfo is\n    --    Sec_Stack_Needed_For_Return         (Flag167)\n    --    Has_Expanded_Contract               (Flag240)\n    --    SPARK_Pragma_Inherited              (Flag265)  (protected kind)\n+   --    Is_Entry_Wrapper                    (Flag297)\n    --    Address_Clause                      (synth)\n    --    Entry_Index_Type                    (synth)\n    --    First_Formal                        (synth)\n@@ -7102,6 +7107,7 @@ package Einfo is\n    function Is_Dispatching_Operation            (Id : E) return B;\n    function Is_Eliminated                       (Id : E) return B;\n    function Is_Entry_Formal                     (Id : E) return B;\n+   function Is_Entry_Wrapper                    (Id : E) return B;\n    function Is_Exception_Handler                (Id : E) return B;\n    function Is_Exported                         (Id : E) return B;\n    function Is_Finalized_Transient              (Id : E) return B;\n@@ -7781,6 +7787,7 @@ package Einfo is\n    procedure Set_Is_Dispatching_Operation        (Id : E; V : B := True);\n    procedure Set_Is_Eliminated                   (Id : E; V : B := True);\n    procedure Set_Is_Entry_Formal                 (Id : E; V : B := True);\n+   procedure Set_Is_Entry_Wrapper                (Id : E; V : B := True);\n    procedure Set_Is_Exception_Handler            (Id : E; V : B := True);\n    procedure Set_Is_Exported                     (Id : E; V : B := True);\n    procedure Set_Is_Finalized_Transient          (Id : E; V : B := True);\n@@ -8591,6 +8598,7 @@ package Einfo is\n    pragma Inline (Is_Eliminated);\n    pragma Inline (Is_Entry);\n    pragma Inline (Is_Entry_Formal);\n+   pragma Inline (Is_Entry_Wrapper);\n    pragma Inline (Is_Enumeration_Type);\n    pragma Inline (Is_Exception_Handler);\n    pragma Inline (Is_Exported);\n@@ -9091,6 +9099,7 @@ package Einfo is\n    pragma Inline (Set_Is_Dispatching_Operation);\n    pragma Inline (Set_Is_Eliminated);\n    pragma Inline (Set_Is_Entry_Formal);\n+   pragma Inline (Set_Is_Entry_Wrapper);\n    pragma Inline (Set_Is_Exception_Handler);\n    pragma Inline (Set_Is_Exported);\n    pragma Inline (Set_Is_Finalized_Transient);"}, {"sha": "2a0dac730d8c83620ff040887a0c5ad3ec207320", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=5e127570e2871666c51d6c27a05cc3297030a823", "patch": "@@ -6014,6 +6014,19 @@ package body Exp_Ch6 is\n          elsif Nkind (Name (N)) = N_Indexed_Component then\n             Rec := Prefix (Prefix (Name (N)));\n \n+         --  If this is a call within an entry wrapper, it appears within a\n+         --  precondition that calls another primitive of the synchronized\n+         --  type. The target object of the call is the first actual on the\n+         --  wrapper. Note that this is an external call, because the wrapper\n+         --  is called outside of the synchronized object. This means that\n+         --  an entry call to an entry with preconditions involves two\n+         --  synchronized operations.\n+\n+         elsif Ekind (Current_Scope) = E_Procedure\n+           and then Is_Entry_Wrapper (Current_Scope)\n+         then\n+            Rec := New_Occurrence_Of (First_Entity (Current_Scope), Sloc (N));\n+\n          else\n             --  If the context is the initialization procedure for a protected\n             --  type, the call is legal because the called entity must be a"}, {"sha": "18a56aeb463d26f8ab7e73fc0b28da87420df682", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=5e127570e2871666c51d6c27a05cc3297030a823", "patch": "@@ -1495,6 +1495,7 @@ package body Exp_Ch9 is\n       Wrapper_Id :=\n         Make_Defining_Identifier (Loc, New_External_Name (Chars (E), 'E'));\n       Set_Contract_Wrapper (E, Wrapper_Id);\n+      Set_Is_Entry_Wrapper (Wrapper_Id);\n \n       --  The wrapper body is analyzed when the enclosing type is frozen\n "}, {"sha": "8d883383d54a5975467340a0c0aaec8a77ac8304", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=5e127570e2871666c51d6c27a05cc3297030a823", "patch": "@@ -3839,8 +3839,27 @@ package body Sem_Attr is\n \n       when Attribute_Finalization_Size =>\n          Check_E0;\n-         Analyze_And_Resolve (P);\n-         Check_Object_Reference (P);\n+\n+         if Is_Object_Reference (P) then\n+            Analyze_And_Resolve (P);\n+            Check_Object_Reference (P);\n+\n+         --  Redundant type verification for accurate error output\n+\n+         elsif not Is_Entity_Name (P)\n+           or else not Is_Type (Entity (P))\n+         then\n+            Error_Attr_P (\"prefix of % attribute must be a definite type or\" &\n+                          \" an object\");\n+         else\n+            Check_Type;\n+            Check_Not_Incomplete_Type;\n+            if Is_Class_Wide_Type (Etype (P)) then\n+               Error_Attr_P (\"prefix of % attribute cannot be applied to \" &\n+                             \"a class-wide type\");\n+            end if;\n+         end if;\n+\n          Set_Etype (N, Universal_Integer);\n \n       -----------"}, {"sha": "c68ce0de9540c4defb7c07cba51cc1f3ecaeb526", "filename": "gcc/ada/sem_attr.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fsem_attr.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fsem_attr.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.ads?ref=5e127570e2871666c51d6c27a05cc3297030a823", "patch": "@@ -247,10 +247,10 @@ package Sem_Attr is\n       -----------------------\n \n       Attribute_Finalization_Size => True,\n-      --  For every object, Finalization_Size returns the size of the hidden\n-      --  header used for finalization purposes as if the object was allocated\n-      --  on the heap. The size of the header does take into account any extra\n-      --  padding due to alignment issues.\n+      --  For every object or non-class-wide-type, Finalization_Size returns\n+      --  the size of the hidden header used for finalization purposes as if\n+      --  the object or type was allocated on the heap. The size of the header\n+      --  does take into account any extra padding due to alignment issues.\n \n       -----------------\n       -- Fixed_Value --"}, {"sha": "21790c35f791bc67e33ddf4fc5f0851530956385", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5e127570e2871666c51d6c27a05cc3297030a823/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=5e127570e2871666c51d6c27a05cc3297030a823", "patch": "@@ -62,6 +62,7 @@ with Sem_Ch3;   use Sem_Ch3;\n with Sem_Ch4;   use Sem_Ch4;\n with Sem_Ch5;   use Sem_Ch5;\n with Sem_Ch8;   use Sem_Ch8;\n+with Sem_Ch9;   use Sem_Ch9;\n with Sem_Ch10;  use Sem_Ch10;\n with Sem_Ch12;  use Sem_Ch12;\n with Sem_Ch13;  use Sem_Ch13;\n@@ -3640,6 +3641,21 @@ package body Sem_Ch6 is\n             Generate_Definition (Body_Id);\n             Generate_Reference\n               (Body_Id, Body_Id, 'b', Set_Ref => False, Force => True);\n+\n+            --  If the body is an entry wrapper created for an entry with\n+            --  preconditions, it must compiled in the context of the\n+            --  enclosing synchronized object, because it may mention other\n+            --  operations of the type.\n+\n+            if Is_Entry_Wrapper (Body_Id) then\n+               declare\n+                  Prot : constant Entity_Id := Etype (First_Entity (Body_Id));\n+               begin\n+                  Push_Scope (Prot);\n+                  Install_Declarations (Prot);\n+               end;\n+            end if;\n+\n             Install_Formals (Body_Id);\n \n             Push_Scope (Body_Id);\n@@ -4000,6 +4016,14 @@ package body Sem_Ch6 is\n \n       Process_End_Label (HSS, 't', Current_Scope);\n       End_Scope;\n+\n+      --  If we are compiling an entry wrapper, remove the enclosing\n+      --  syncrhonized object from the stack.\n+\n+      if Is_Entry_Wrapper (Body_Id) then\n+         End_Scope;\n+      end if;\n+\n       Check_Subprogram_Order (N);\n       Set_Analyzed (Body_Id);\n "}]}