{"sha": "6b97a4396460b02c90e9166776361322ee783424", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI5N2E0Mzk2NDYwYjAyYzkwZTkxNjY3NzYzNjEzMjJlZTc4MzQyNA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernd.schmidt@analog.com", "date": "2006-11-15T12:27:32Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2006-11-15T12:27:32Z"}, "message": "bfin.c (legitimize_pic_address): Lose dead code that tests for CONSTANT_POOL_ADDRESS_P.\n\n\t* config/bfin/bfin.c (legitimize_pic_address): Lose dead code\n\tthat tests for CONSTANT_POOL_ADDRESS_P.\n\nFrom-SVN: r118854", "tree": {"sha": "40449184e324bdddaca1406b1e5d27a61564ff2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40449184e324bdddaca1406b1e5d27a61564ff2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b97a4396460b02c90e9166776361322ee783424", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b97a4396460b02c90e9166776361322ee783424", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b97a4396460b02c90e9166776361322ee783424", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b97a4396460b02c90e9166776361322ee783424/comments", "author": null, "committer": null, "parents": [{"sha": "0f14009a1ef12022294382f8a128cfd1ff7b8db7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f14009a1ef12022294382f8a128cfd1ff7b8db7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f14009a1ef12022294382f8a128cfd1ff7b8db7"}], "stats": {"total": 46, "additions": 20, "deletions": 26}, "files": [{"sha": "25b18138b7a28548bc87a71260133d8a68e91e9a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b97a4396460b02c90e9166776361322ee783424/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b97a4396460b02c90e9166776361322ee783424/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b97a4396460b02c90e9166776361322ee783424", "patch": "@@ -2,6 +2,9 @@\n \n \t* tree-ssa-loop-ivopts.c (determine_iv_costs): Fix formatting.\n \n+\t* config/bfin/bfin.c (legitimize_pic_address): Lose dead code\n+\tthat tests for CONSTANT_POOL_ADDRESS_P.\n+\n 2006-11-15  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/29581"}, {"sha": "299fc56552982c552665325eee4690efa09ad044", "filename": "gcc/config/bfin/bfin.c", "status": "modified", "additions": 17, "deletions": 26, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b97a4396460b02c90e9166776361322ee783424/gcc%2Fconfig%2Fbfin%2Fbfin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b97a4396460b02c90e9166776361322ee783424/gcc%2Fconfig%2Fbfin%2Fbfin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fbfin%2Fbfin.c?ref=6b97a4396460b02c90e9166776361322ee783424", "patch": "@@ -145,36 +145,27 @@ legitimize_pic_address (rtx orig, rtx reg, rtx picreg)\n \n   if (GET_CODE (addr) == SYMBOL_REF || GET_CODE (addr) == LABEL_REF)\n     {\n-      if (GET_CODE (addr) == SYMBOL_REF && CONSTANT_POOL_ADDRESS_P (addr))\n-\treg = new = orig;\n+      int unspec;\n+      rtx tmp;\n+\n+      if (TARGET_ID_SHARED_LIBRARY)\n+\tunspec = UNSPEC_MOVE_PIC;\n+      else if (GET_CODE (addr) == SYMBOL_REF\n+\t       && SYMBOL_REF_FUNCTION_P (addr))\n+\tunspec = UNSPEC_FUNCDESC_GOT17M4;\n       else\n-\t{\n-\t  int unspec;\n-\t  rtx tmp;\n-\n-\t  if (TARGET_ID_SHARED_LIBRARY)\n-\t    unspec = UNSPEC_MOVE_PIC;\n-\t  else if (GET_CODE (addr) == SYMBOL_REF\n-\t\t   && SYMBOL_REF_FUNCTION_P (addr))\n-\t    {\n-\t      unspec = UNSPEC_FUNCDESC_GOT17M4;\n-\t    }\n-\t  else\n-\t    {\n-\t      unspec = UNSPEC_MOVE_FDPIC;\n-\t    }\n+\tunspec = UNSPEC_MOVE_FDPIC;\n \n-\t  if (reg == 0)\n-\t    {\n-\t      gcc_assert (!no_new_pseudos);\n-\t      reg = gen_reg_rtx (Pmode);\n-\t    }\n+      if (reg == 0)\n+\t{\n+\t  gcc_assert (!no_new_pseudos);\n+\t  reg = gen_reg_rtx (Pmode);\n+\t}\n \n-\t  tmp = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), unspec);\n-\t  new = gen_const_mem (Pmode, gen_rtx_PLUS (Pmode, picreg, tmp));\n+      tmp = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr), unspec);\n+      new = gen_const_mem (Pmode, gen_rtx_PLUS (Pmode, picreg, tmp));\n \n-\t  emit_move_insn (reg, new);\n-\t}\n+      emit_move_insn (reg, new);\n       if (picreg == pic_offset_table_rtx)\n \tcurrent_function_uses_pic_offset_table = 1;\n       return reg;"}]}