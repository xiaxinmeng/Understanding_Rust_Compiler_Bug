{"sha": "932c9bffa0224eb16e061da1802f6f95fb23e7d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMyYzliZmZhMDIyNGViMTZlMDYxZGExODAyZjZmOTVmYjIzZTdkMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-08-25T17:49:26Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-08-25T17:49:26Z"}, "message": "re PR rtl-optimization/45400 (XBMC AudioEngine Compilation C++ Internal Compiler Error /w Optimization)\n\n\tPR rtl-optimization/45400\n\t* combine.c (simplify_shift_const_1) <case SUBREG>: Only use\n\tSUBREG_REG if both modes are of MODE_INT class.\n\n\t* g++.dg/other/i386-8.C: New test.\n\nFrom-SVN: r163551", "tree": {"sha": "8a8acf4b9ce8ddbeb52fe565d42d09aae104ca03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a8acf4b9ce8ddbeb52fe565d42d09aae104ca03"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/932c9bffa0224eb16e061da1802f6f95fb23e7d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932c9bffa0224eb16e061da1802f6f95fb23e7d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/932c9bffa0224eb16e061da1802f6f95fb23e7d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/932c9bffa0224eb16e061da1802f6f95fb23e7d3/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d8099dd8599b3fb226b451a1d421046ace4c6307", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8099dd8599b3fb226b451a1d421046ace4c6307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8099dd8599b3fb226b451a1d421046ace4c6307"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "1123d07ce20839fd126934d41467477e998a7dde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/932c9bffa0224eb16e061da1802f6f95fb23e7d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/932c9bffa0224eb16e061da1802f6f95fb23e7d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=932c9bffa0224eb16e061da1802f6f95fb23e7d3", "patch": "@@ -1,3 +1,9 @@\n+2010-08-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/45400\n+\t* combine.c (simplify_shift_const_1) <case SUBREG>: Only use\n+\tSUBREG_REG if both modes are of MODE_INT class.\n+\n 2010-08-25  Julian Brown  <julian@codesourcery.com>\n \n \t* config/arm/arm.c (arm_issue_rate): Return 2 for Cortex-A5."}, {"sha": "acff54198e54c3ec36bc22aab56dffbd7bb4ab07", "filename": "gcc/combine.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/932c9bffa0224eb16e061da1802f6f95fb23e7d3/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/932c9bffa0224eb16e061da1802f6f95fb23e7d3/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=932c9bffa0224eb16e061da1802f6f95fb23e7d3", "patch": "@@ -9858,7 +9858,9 @@ simplify_shift_const_1 (enum rtx_code code, enum machine_mode result_mode,\n \t\t  > GET_MODE_SIZE (GET_MODE (varop)))\n \t      && (unsigned int) ((GET_MODE_SIZE (GET_MODE (SUBREG_REG (varop)))\n \t\t\t\t  + (UNITS_PER_WORD - 1)) / UNITS_PER_WORD)\n-\t\t == mode_words)\n+\t\t == mode_words\n+\t      && GET_MODE_CLASS (GET_MODE (varop)) == MODE_INT\n+\t      && GET_MODE_CLASS (GET_MODE (SUBREG_REG (varop))) == MODE_INT)\n \t    {\n \t      varop = SUBREG_REG (varop);\n \t      if (GET_MODE_SIZE (GET_MODE (varop)) > GET_MODE_SIZE (mode))"}, {"sha": "fd9f5ad3d0ae5ee2d01f55581f757d25ca296f52", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/932c9bffa0224eb16e061da1802f6f95fb23e7d3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/932c9bffa0224eb16e061da1802f6f95fb23e7d3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=932c9bffa0224eb16e061da1802f6f95fb23e7d3", "patch": "@@ -1,3 +1,8 @@\n+2010-08-25  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/45400\n+\t* g++.dg/other/i386-8.C: New test.\n+\n 2010-08-25  Richard Guenther  <rguenther@suse.de>\n \n \t* gcc.dg/alias-8.c: Adjust."}, {"sha": "7de75c73c8b97b3c1a509ca8cfc194afdbeeb480", "filename": "gcc/testsuite/g++.dg/other/i386-8.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/932c9bffa0224eb16e061da1802f6f95fb23e7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/932c9bffa0224eb16e061da1802f6f95fb23e7d3/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-8.C?ref=932c9bffa0224eb16e061da1802f6f95fb23e7d3", "patch": "@@ -0,0 +1,23 @@\n+// PR rtl-optimization/45400\n+// { dg-do compile { target i?86-*-* x86_64-*-* } }\n+// { dg-options \"-O2 -msse2\" }\n+// { dg-options \"-O2 -msse2 -fpic\" { target fpic } }\n+// { dg-require-effective-target sse2 }\n+\n+#include <xmmintrin.h>\n+\n+static inline unsigned short\n+bar (unsigned short x)\n+{\n+  return ((x << 8) | (x >> 8));\n+}\n+\n+unsigned int\n+foo (float *x, short *y)\n+{\n+  __m128 a = _mm_set_ps1 (32767.5f);\n+  __m128 b = _mm_mul_ps (_mm_load_ps (x), a);\n+  __m64 c = _mm_cvtps_pi16 (b);\n+  __builtin_memcpy (y, &c, sizeof (short) * 4);\n+  y[0] = bar (y[0]);\n+}"}]}