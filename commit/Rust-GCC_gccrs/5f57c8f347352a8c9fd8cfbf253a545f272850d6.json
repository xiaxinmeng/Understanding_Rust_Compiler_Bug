{"sha": "5f57c8f347352a8c9fd8cfbf253a545f272850d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY1N2M4ZjM0NzM1MmE4YzlmZDhjZmJmMjUzYTU0NWYyNzI4NTBkNg==", "commit": {"author": {"name": "Tom de Vries", "email": "tdevries@suse.de", "date": "2019-01-03T15:08:06Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2019-01-03T15:08:06Z"}, "message": "[nvptx] Eliminate changed local var in nvptx_goacc_validate_dims\n\nThe TARGET_GOACC_VALIDATE_DIMS hook requires an implementation to return a bool\nindicating whether the dims parameter has changed.\n\nFactor nvptx_goacc_validate_dims_1 out of nvptx_goacc_validate_dims, and\ncalculate the return value in nvptx_goacc_validate_dims.\n\n2019-01-03  Tom de Vries  <tdevries@suse.de>\n\n\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1): New function,\n\tfactored out of ...\n\t(nvptx_goacc_validate_dims): ... here.\n\nFrom-SVN: r267555", "tree": {"sha": "b5d8d9aae6325d56c3c3d2d910eef6e71f319cd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5d8d9aae6325d56c3c3d2d910eef6e71f319cd3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f57c8f347352a8c9fd8cfbf253a545f272850d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f57c8f347352a8c9fd8cfbf253a545f272850d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f57c8f347352a8c9fd8cfbf253a545f272850d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f57c8f347352a8c9fd8cfbf253a545f272850d6/comments", "author": {"login": "vries", "id": 4057235, "node_id": "MDQ6VXNlcjQwNTcyMzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4057235?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vries", "html_url": "https://github.com/vries", "followers_url": "https://api.github.com/users/vries/followers", "following_url": "https://api.github.com/users/vries/following{/other_user}", "gists_url": "https://api.github.com/users/vries/gists{/gist_id}", "starred_url": "https://api.github.com/users/vries/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vries/subscriptions", "organizations_url": "https://api.github.com/users/vries/orgs", "repos_url": "https://api.github.com/users/vries/repos", "events_url": "https://api.github.com/users/vries/events{/privacy}", "received_events_url": "https://api.github.com/users/vries/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed72c2e3b39a30ece53f0896c594160c6aa53330", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed72c2e3b39a30ece53f0896c594160c6aa53330", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed72c2e3b39a30ece53f0896c594160c6aa53330"}], "stats": {"total": 44, "additions": 32, "deletions": 12}, "files": [{"sha": "4f1150f8478f4338c69ab4831b5741e50be3c922", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57c8f347352a8c9fd8cfbf253a545f272850d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57c8f347352a8c9fd8cfbf253a545f272850d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5f57c8f347352a8c9fd8cfbf253a545f272850d6", "patch": "@@ -1,3 +1,9 @@\n+2019-01-03  Tom de Vries  <tdevries@suse.de>\n+\n+\t* config/nvptx/nvptx.c (nvptx_goacc_validate_dims_1): New function,\n+\tfactored out of ...\n+\t(nvptx_goacc_validate_dims): ... here.\n+\n 2019-01-03  Jan Hubicka  <hubicka@ucw.cz>\n \n \tPR tree-optimization/85574"}, {"sha": "0b9701d97f13a45f5451ffce861303c923ed6391", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f57c8f347352a8c9fd8cfbf253a545f272850d6/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f57c8f347352a8c9fd8cfbf253a545f272850d6/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=5f57c8f347352a8c9fd8cfbf253a545f272850d6", "patch": "@@ -5188,15 +5188,12 @@ nvptx_simt_vf ()\n   return PTX_WARP_SIZE;\n }\n \n-/* Validate compute dimensions of an OpenACC offload or routine, fill\n-   in non-unity defaults.  FN_LEVEL indicates the level at which a\n-   routine might spawn a loop.  It is negative for non-routines.  If\n-   DECL is null, we are validating the default dimensions.  */\n+/* As nvptx_goacc_validate_dims, but does not return bool to indicate whether\n+   DIMS has changed.  */\n \n-static bool\n-nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n+static void\n+nvptx_goacc_validate_dims_1 (tree decl, int dims[], int fn_level)\n {\n-  bool changed = false;\n   bool oacc_default_dims_p = false;\n   bool oacc_min_dims_p = false;\n   bool offload_region_p = false;\n@@ -5255,7 +5252,6 @@ nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n       dims[GOMP_DIM_VECTOR] = fn_level > GOMP_DIM_VECTOR ? 1 : 0;\n       dims[GOMP_DIM_WORKER] = fn_level > GOMP_DIM_WORKER ? 1 : 0;\n       dims[GOMP_DIM_GANG] = fn_level > GOMP_DIM_GANG ? 1 : 0;\n-      changed = true;\n     }\n \n   /* The vector size must be 32, unless this is a SEQ routine.  */\n@@ -5272,7 +5268,6 @@ nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n \t\t    : G_(\"using vector_length (%d), ignoring runtime setting\"),\n \t\t    PTX_VECTOR_LENGTH, dims[GOMP_DIM_VECTOR]);\n       dims[GOMP_DIM_VECTOR] = PTX_VECTOR_LENGTH;\n-      changed = true;\n     }\n \n   /* Check the num workers is not too large.  */\n@@ -5282,7 +5277,6 @@ nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n \t\t  \"using num_workers (%d), ignoring %d\",\n \t\t  PTX_WORKER_LENGTH, dims[GOMP_DIM_WORKER]);\n       dims[GOMP_DIM_WORKER] = PTX_WORKER_LENGTH;\n-      changed = true;\n     }\n \n   if (oacc_default_dims_p || oacc_min_dims_p)\n@@ -5292,10 +5286,30 @@ nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n \tdims[GOMP_DIM_WORKER] = PTX_DEFAULT_RUNTIME_DIM;\n       if (dims[GOMP_DIM_GANG] < 0)\n \tdims[GOMP_DIM_GANG] = PTX_DEFAULT_RUNTIME_DIM;\n-      changed = true;\n     }\n+}\n+\n+/* Validate compute dimensions of an OpenACC offload or routine, fill\n+   in non-unity defaults.  FN_LEVEL indicates the level at which a\n+   routine might spawn a loop.  It is negative for non-routines.  If\n+   DECL is null, we are validating the default dimensions.  */\n+\n+static bool\n+nvptx_goacc_validate_dims (tree decl, int dims[], int fn_level)\n+{\n+  int old_dims[GOMP_DIM_MAX];\n+  unsigned int i;\n \n-  return changed;\n+  for (i = 0; i < GOMP_DIM_MAX; ++i)\n+    old_dims[i] = dims[i];\n+\n+  nvptx_goacc_validate_dims_1 (decl, dims, fn_level);\n+\n+  for (i = 0; i < GOMP_DIM_MAX; ++i)\n+    if (old_dims[i] != dims[i])\n+      return true;\n+\n+  return false;\n }\n \n /* Return maximum dimension size, or zero for unbounded.  */"}]}