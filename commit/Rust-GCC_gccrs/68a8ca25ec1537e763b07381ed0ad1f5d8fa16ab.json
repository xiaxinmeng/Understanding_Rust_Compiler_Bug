{"sha": "68a8ca25ec1537e763b07381ed0ad1f5d8fa16ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhhOGNhMjVlYzE1MzdlNzYzYjA3MzgxZWQwYWQxZjVkOGZhMTZhYg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-18T02:03:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-18T02:03:55Z"}, "message": "(do_include): If search_start is NULL, complain that we had nowhere to look.\n\nFrom-SVN: r1878", "tree": {"sha": "94b9cdb5a9db78566b88dfe4ba39b7ff8ad245e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94b9cdb5a9db78566b88dfe4ba39b7ff8ad245e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68a8ca25ec1537e763b07381ed0ad1f5d8fa16ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a8ca25ec1537e763b07381ed0ad1f5d8fa16ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a8ca25ec1537e763b07381ed0ad1f5d8fa16ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a8ca25ec1537e763b07381ed0ad1f5d8fa16ab/comments", "author": null, "committer": null, "parents": [{"sha": "c0954bcdaf80a6d4d2e63023a40ed0a2ffc9705a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0954bcdaf80a6d4d2e63023a40ed0a2ffc9705a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0954bcdaf80a6d4d2e63023a40ed0a2ffc9705a"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "56aa06b9ea70424a914cea308176cd118cadf53a", "filename": "gcc/cccp.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68a8ca25ec1537e763b07381ed0ad1f5d8fa16ab/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68a8ca25ec1537e763b07381ed0ad1f5d8fa16ab/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=68a8ca25ec1537e763b07381ed0ad1f5d8fa16ab", "patch": "@@ -47,11 +47,13 @@ typedef unsigned char U_CHAR;\n #define LOCAL_INCLUDE_DIR \"/usr/local/include\"\n #endif\n \n+#if 0 /* We can't get ptrdiff_t, so I arranged not to need PTR_INT_TYPE.  */\n #ifdef __STDC__\n #define PTR_INT_TYPE ptrdiff_t\n #else\n #define PTR_INT_TYPE long\n #endif\n+#endif /* 0 */\n \n #include \"pcp.h\"\n \n@@ -161,7 +163,6 @@ extern char *getenv ();\n extern FILE *fdopen ();\n extern char *version_string;\n extern struct tm *localtime ();\n-extern char *malloc (), *realloc ();\n extern int sys_nerr;\n extern char *sys_errlist[];\n \n@@ -3814,8 +3815,11 @@ do_include (buf, limit, op, keyword)\n \n     strncpy (fname, fbeg, flen);\n     fname[flen] = 0;\n-    error_from_errno (fname);\n-\n+    if (search_start)\n+      error_from_errno (fname);\n+    else\n+      error (\"No include path in which to find %s\", fname);\n+    \n     /* For -M, add this file to the dependencies.  */\n     if (print_deps > (angle_brackets || (system_include_depth > 0))) {\n       /* Break the line before this.  */\n@@ -4380,8 +4384,11 @@ pcfinclude (buf, limit, name, op)\n \n     /* First skip to a longword boundary */\n     /* ??? Why a 4-byte boundary?  On all machines? */\n-    if ((PTR_INT_TYPE) cp & 3)\n-      cp += 4 - ((PTR_INT_TYPE) cp & 3);\n+    /* NOTE: while int may not be as wide as a pointer on some machins,\n+       this is correct nonethelesss works anyway.\n+       Do not try risky measures here to get another type to use!  */\n+    if ((int) cp & 3)\n+      cp += 4 - ((int) cp & 3);\n     \n     /* Now get the string. */\n     str = (STRINGDEF *) cp;"}]}