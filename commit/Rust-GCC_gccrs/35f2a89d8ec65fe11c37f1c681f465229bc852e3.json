{"sha": "35f2a89d8ec65fe11c37f1c681f465229bc852e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmMmE4OWQ4ZWM2NWZlMTFjMzdmMWM2ODFmNDY1MjI5YmM4NTJlMw==", "commit": {"author": {"name": "Andi Kleen", "email": "ak@linux.intel.com", "date": "2011-09-29T13:15:13Z"}, "committer": {"name": "Andi Kleen", "email": "ak@gcc.gnu.org", "date": "2011-09-29T13:15:13Z"}, "message": "Use urandom to get random seed\n\nWhen available use /dev/urandom to get the random seem. This will lower the probability\nof collisions.\n\nOn other systems it will fallback to the old methods.\n\nPasses bootstrap + testsuite on x86_64. Ok?\n\ngcc/:\n\n2011-09-26   Andi Kleen <ak@linux.intel.com>\n\n\t* toplev.c (init_local_tick): Try reading random seed from /dev/urandom\n\nFrom-SVN: r179348", "tree": {"sha": "036cb4380d2a3505ae1768b759e006e030596b0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/036cb4380d2a3505ae1768b759e006e030596b0d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35f2a89d8ec65fe11c37f1c681f465229bc852e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f2a89d8ec65fe11c37f1c681f465229bc852e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f2a89d8ec65fe11c37f1c681f465229bc852e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f2a89d8ec65fe11c37f1c681f465229bc852e3/comments", "author": null, "committer": null, "parents": [{"sha": "dde8b3609b40a5e9073a7638d492b8c29af2e24c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dde8b3609b40a5e9073a7638d492b8c29af2e24c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dde8b3609b40a5e9073a7638d492b8c29af2e24c"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "67afcd5ceb1a961c3935d9165c861e2ea317c3cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f2a89d8ec65fe11c37f1c681f465229bc852e3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f2a89d8ec65fe11c37f1c681f465229bc852e3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35f2a89d8ec65fe11c37f1c681f465229bc852e3", "patch": "@@ -1,3 +1,7 @@\n+2011-09-26   Andi Kleen <ak@linux.intel.com>\n+\n+\t* toplev.c (init_local_tick): Try reading random seed from /dev/urandom\n+\n 2011-09-26   Andi Kleen <ak@linux.intel.com>\n \n \t* hwint.h (HOST_WIDE_INT_PRINT_HEX_PURE): Add."}, {"sha": "ab6b5a418378fc5ffc3828fc41432a1cfec25602", "filename": "gcc/toplev.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f2a89d8ec65fe11c37f1c681f465229bc852e3/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f2a89d8ec65fe11c37f1c681f465229bc852e3/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=35f2a89d8ec65fe11c37f1c681f465229bc852e3", "patch": "@@ -262,7 +262,17 @@ init_local_tick (void)\n {\n   if (!flag_random_seed)\n     {\n-      /* Get some more or less random data.  */\n+      /* Try urandom first. Time of day is too likely to collide. \n+\t In case of any error we just use the local tick. */\n+\n+      int fd = open (\"/dev/urandom\", O_RDONLY);\n+      if (fd >= 0)\n+        {\n+          read (fd, &random_seed, sizeof (random_seed));\n+          close (fd);\n+        }\n+\n+      /* Now get the tick anyways  */\n #ifdef HAVE_GETTIMEOFDAY\n       {\n \tstruct timeval tv;"}]}