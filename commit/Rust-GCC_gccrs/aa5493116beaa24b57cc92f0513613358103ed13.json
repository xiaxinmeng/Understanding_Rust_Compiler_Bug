{"sha": "aa5493116beaa24b57cc92f0513613358103ed13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE1NDkzMTE2YmVhYTI0YjU3Y2M5MmYwNTEzNjEzMzU4MTAzZWQxMw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-07T18:12:58Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-06-07T18:12:58Z"}, "message": "runtime: support ia64 in lfstack\n    \n    Patch by Andreas Schwab.\n    \n    Reviewed-on: https://go-review.googlesource.com/45071\n\nFrom-SVN: r248994", "tree": {"sha": "a3c9fe69f97089221b62730001bbfddac70b2e7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3c9fe69f97089221b62730001bbfddac70b2e7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa5493116beaa24b57cc92f0513613358103ed13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5493116beaa24b57cc92f0513613358103ed13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa5493116beaa24b57cc92f0513613358103ed13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa5493116beaa24b57cc92f0513613358103ed13/comments", "author": null, "committer": null, "parents": [{"sha": "bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bfd88d1df1c57ef5ad3ed34bbb1672359d4eaabf"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "b603f1a4f38300a674423cd1fb8cec06de6c533c", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5493116beaa24b57cc92f0513613358103ed13/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5493116beaa24b57cc92f0513613358103ed13/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=aa5493116beaa24b57cc92f0513613358103ed13", "patch": "@@ -1,4 +1,4 @@\n-7e3904e4370ccfd9062c2661c612476288244e17\n+eaf4afbabcd91df55d31955500b6db55b07f6de5\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "8a39fee87945e913667af03dd28287fc57982cb9", "filename": "libgo/go/runtime/lfstack_64bit.go", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa5493116beaa24b57cc92f0513613358103ed13/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa5493116beaa24b57cc92f0513613358103ed13/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Flfstack_64bit.go?ref=aa5493116beaa24b57cc92f0513613358103ed13", "patch": "@@ -2,7 +2,7 @@\n // Use of this source code is governed by a BSD-style\n // license that can be found in the LICENSE file.\n \n-// +build amd64 arm64 mips64 mips64le ppc64 ppc64le s390x arm64be alpha mipsn64 sparc64\n+// +build amd64 arm64 mips64 mips64le ppc64 ppc64le s390x arm64be alpha mipsn64 sparc64 ia64\n \n package runtime\n \n@@ -38,12 +38,22 @@ const (\n \t// room in the bottom for the count.\n \tsparcLinuxAddrBits = 52\n \tsparcLinuxCntBits  = 64 - sparcLinuxAddrBits + 3\n+\n+\t// On IA64, the virtual address space is devided into 8 regions, with\n+\t// 52 address bits each (with 64k page size).\n+\tia64AddrBits = 55\n+\tia64CntBits  = 64 - ia64AddrBits + 3\n )\n \n func lfstackPack(node *lfnode, cnt uintptr) uint64 {\n \tif GOARCH == \"sparc64\" && GOOS == \"linux\" {\n \t\treturn uint64(uintptr(unsafe.Pointer(node)))<<(64-sparcLinuxAddrBits) | uint64(cnt&(1<<sparcLinuxCntBits-1))\n \t}\n+\tif GOARCH == \"ia64\" {\n+\t\t// Top three bits are the region number\n+\t\tval := uint64(uintptr(unsafe.Pointer(node)))\n+\t\treturn (val<<(64-ia64AddrBits))&(1<<(64-3)-1) | val&^(1<<(64-3)-1) | uint64(cnt&(1<<ia64CntBits-1))\n+\t}\n \treturn uint64(uintptr(unsafe.Pointer(node)))<<(64-addrBits) | uint64(cnt&(1<<cntBits-1))\n }\n \n@@ -56,5 +66,8 @@ func lfstackUnpack(val uint64) *lfnode {\n \tif GOARCH == \"sparc64\" && GOOS == \"linux\" {\n \t\treturn (*lfnode)(unsafe.Pointer(uintptr(int64(val) >> sparcLinuxCntBits << 3)))\n \t}\n+\tif GOARCH == \"ia64\" {\n+\t\treturn (*lfnode)(unsafe.Pointer(uintptr((val>>ia64CntBits<<3)&(1<<(64-3)-1) | val&^(1<<(64-3)-1))))\n+\t}\n \treturn (*lfnode)(unsafe.Pointer(uintptr(val >> cntBits << 3)))\n }"}]}