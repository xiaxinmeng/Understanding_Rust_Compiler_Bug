{"sha": "8180cde0fb12e1aa10a74319d24cfa9619a60261", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE4MGNkZTBmYjEyZTFhYTEwYTc0MzE5ZDI0Y2ZhOTYxOWE2MDI2MQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2018-10-31T11:27:07Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2018-10-31T11:27:07Z"}, "message": "[ARC] Remove non standard funcions calls.\n\nReplace all custom \"library\" calls with compiler known patterns.\n\ngcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.md (mulsi3): Remove call to mulsi_600_lib.\n\t(mulsi3_600_lib): Remove pattern.\n\t(umulsi3_highpart_600_lib_le): Likewise.\n\t(umulsi3_highpart): Remove call to umulsi3_highpart_600_lib_le.\n\t(umulsidi3): Remove call to umulsidi3_600_lib.\n\t(umulsidi3_600_lib): Remove pattern.\n\t(peephole2): Remove peephole using the above deprecated patterns.\n\ntestsuite/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* gcc.target/arc/mulsi3_highpart-2.c: Update test.\n\nlibgcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/lib1funcs.S (_muldi3): New function.\n\t* config/arc/t-arc (LIB1ASMFUNCS): Add _muldi3.\n\nFrom-SVN: r265672", "tree": {"sha": "be25f7c816bf625f23cb1080b1a3c5dd1996efe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be25f7c816bf625f23cb1080b1a3c5dd1996efe3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8180cde0fb12e1aa10a74319d24cfa9619a60261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8180cde0fb12e1aa10a74319d24cfa9619a60261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8180cde0fb12e1aa10a74319d24cfa9619a60261", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8180cde0fb12e1aa10a74319d24cfa9619a60261/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fad03406ebbeb8609491bf6a71377cc71431661f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fad03406ebbeb8609491bf6a71377cc71431661f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fad03406ebbeb8609491bf6a71377cc71431661f"}], "stats": {"total": 238, "additions": 86, "deletions": 152}, "files": [{"sha": "820b958b585b06753af8c2ba848432557c44e8fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8180cde0fb12e1aa10a74319d24cfa9619a60261/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8180cde0fb12e1aa10a74319d24cfa9619a60261/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8180cde0fb12e1aa10a74319d24cfa9619a60261", "patch": "@@ -1,3 +1,13 @@\n+2018-10-31  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.md (mulsi3): Remove call to mulsi_600_lib.\n+\t(mulsi3_600_lib): Remove pattern.\n+\t(umulsi3_highpart_600_lib_le): Likewise.\n+\t(umulsi3_highpart): Remove call to umulsi3_highpart_600_lib_le.\n+\t(umulsidi3): Remove call to umulsidi3_600_lib.\n+\t(umulsidi3_600_lib): Remove pattern.\n+\t(peephole2): Remove peephole using the above deprecated patterns.\n+\n 2018-10-31  Thomas Preud'homme  <thomas.preudhomme@linaro.org>\n \n \tPR target/87374"}, {"sha": "230f4de98839cd0855cc9a4b504638676721f4e1", "filename": "gcc/config/arc/arc.md", "status": "modified", "additions": 10, "deletions": 148, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8180cde0fb12e1aa10a74319d24cfa9619a60261/gcc%2Fconfig%2Farc%2Farc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8180cde0fb12e1aa10a74319d24cfa9619a60261/gcc%2Fconfig%2Farc%2Farc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.md?ref=8180cde0fb12e1aa10a74319d24cfa9619a60261", "patch": "@@ -2076,44 +2076,21 @@ archs4x, archs4xd, archs4xd_slow\"\n ;; SI <- SI * SI\n \n (define_expand \"mulsi3\"\n- [(set (match_operand:SI 0 \"nonimmediate_operand\"            \"\")\n+ [(set (match_operand:SI 0 \"register_operand\"            \"\")\n \t(mult:SI (match_operand:SI 1 \"register_operand\"  \"\")\n \t\t (match_operand:SI 2 \"nonmemory_operand\" \"\")))]\n-  \"\"\n+  \"TARGET_ANY_MPY\"\n {\n-  if (TARGET_MPY)\n-    {\n-      if (!register_operand (operands[0], SImode))\n-\t{\n-\t  rtx result = gen_reg_rtx (SImode);\n-\n-\t  emit_insn (gen_mulsi3 (result, operands[1], operands[2]));\n-\t  emit_move_insn (operands[0], result);\n-\t  DONE;\n-\t}\n-    }\n-  else if (TARGET_MUL64_SET)\n+  if (TARGET_MUL64_SET)\n     {\n-     rtx tmp = gen_reg_rtx (SImode);\n-     emit_insn (gen_mulsi64 (tmp, operands[1], operands[2]));\n-     emit_move_insn (operands[0], tmp);\n+     emit_insn (gen_mulsi64 (operands[0], operands[1], operands[2]));\n      DONE;\n     }\n   else if (TARGET_MULMAC_32BY16_SET)\n     {\n-     rtx tmp = gen_reg_rtx (SImode);\n-     emit_insn (gen_mulsi32x16 (tmp, operands[1], operands[2]));\n-     emit_move_insn (operands[0], tmp);\n+     emit_insn (gen_mulsi32x16 (operands[0], operands[1], operands[2]));\n      DONE;\n     }\n-  else\n-    {\n-      emit_move_insn (gen_rtx_REG (SImode, R0_REG), operands[1]);\n-      emit_move_insn (gen_rtx_REG (SImode, R1_REG), operands[2]);\n-      emit_insn (gen_mulsi3_600_lib ());\n-      emit_move_insn (operands[0], gen_rtx_REG (SImode, R0_REG));\n-      DONE;\n-    }\n })\n \n (define_insn_and_split \"mulsi32x16\"\n@@ -2229,27 +2206,6 @@ archs4x, archs4xd, archs4xd_slow\"\n    (set_attr \"predicable\" \"yes,yes,no,yes\")\n    (set_attr \"cond\" \"canuse,canuse,canuse_limm,canuse\")])\n \n-; If we compile without an mul option enabled, but link with libraries\n-; for a mul option, we'll see clobbers of multiplier output registers.\n-; There is also an implementation using norm that clobbers the loop registers.\n-(define_insn \"mulsi3_600_lib\"\n-  [(set (reg:SI R0_REG)\n-\t(mult:SI (reg:SI R0_REG) (reg:SI R1_REG)))\n-   (clobber (reg:SI RETURN_ADDR_REGNUM))\n-   (clobber (reg:SI R1_REG))\n-   (clobber (reg:SI R2_REG))\n-   (clobber (reg:SI R3_REG))\n-   (clobber (reg:DI MUL64_OUT_REG))\n-   (clobber (reg:SI LP_COUNT))\n-   (clobber (reg:SI LP_START))\n-   (clobber (reg:SI LP_END))\n-   (clobber (reg:CC CC_REG))]\n-  \"!TARGET_ANY_MPY\n-   && SFUNC_CHECK_PREDICABLE\"\n-  \"*return arc_output_libcall (\\\"__mulsi3\\\");\"\n-  [(set_attr \"is_sfunc\" \"yes\")\n-   (set_attr \"predicable\" \"yes\")])\n-\n (define_insn_and_split \"mulsidi_600\"\n   [(set (match_operand:DI 0 \"register_operand\"                               \"=c, c,c,  c\")\n \t(mult:DI (sign_extend:DI (match_operand:SI 1 \"register_operand\"  \"%Rcq#q, c,c,  c\"))\n@@ -2504,48 +2460,6 @@ archs4x, archs4xd, archs4xd_slow\"\n    (set_attr \"predicable\" \"yes,no,yes,no\")\n    (set_attr \"cond\" \"canuse,nocond,canuse,nocond\")])\n \n-; Implementations include additional labels for umulsidi3, so we got all\n-; the same clobbers - plus one for the result low part.  */\n-(define_insn \"umulsi3_highpart_600_lib_le\"\n-  [(set (reg:SI R1_REG)\n-\t(truncate:SI\n-\t (lshiftrt:DI\n-\t  (mult:DI (zero_extend:DI (reg:SI R0_REG))\n-\t\t   (zero_extend:DI (reg:SI R1_REG)))\n-\t  (const_int 32))))\n-   (clobber (reg:SI RETURN_ADDR_REGNUM))\n-   (clobber (reg:SI R0_REG))\n-   (clobber (reg:DI R2_REG))\n-   (clobber (reg:SI R12_REG))\n-   (clobber (reg:DI MUL64_OUT_REG))\n-   (clobber (reg:CC CC_REG))]\n-  \"!TARGET_BIG_ENDIAN\n-   && !TARGET_ANY_MPY\n-   && SFUNC_CHECK_PREDICABLE\"\n-  \"*return arc_output_libcall (\\\"__umulsi3_highpart\\\");\"\n-  [(set_attr \"is_sfunc\" \"yes\")\n-   (set_attr \"predicable\" \"yes\")])\n-\n-(define_insn \"umulsi3_highpart_600_lib_be\"\n-  [(set (reg:SI R0_REG)\n-\t(truncate:SI\n-\t (lshiftrt:DI\n-\t  (mult:DI (zero_extend:DI (reg:SI R0_REG))\n-\t\t   (zero_extend:DI (reg:SI R1_REG)))\n-\t  (const_int 32))))\n-   (clobber (reg:SI RETURN_ADDR_REGNUM))\n-   (clobber (reg:SI R1_REG))\n-   (clobber (reg:DI R2_REG))\n-   (clobber (reg:SI R12_REG))\n-   (clobber (reg:DI MUL64_OUT_REG))\n-   (clobber (reg:CC CC_REG))]\n-  \"TARGET_BIG_ENDIAN\n-   && !TARGET_ANY_MPY\n-   && SFUNC_CHECK_PREDICABLE\"\n-  \"*return arc_output_libcall (\\\"__umulsi3_highpart\\\");\"\n-  [(set_attr \"is_sfunc\" \"yes\")\n-   (set_attr \"predicable\" \"yes\")])\n-\n ;; (zero_extend:DI (const_int)) leads to internal errors in combine, so we\n ;; need a separate pattern for immediates\n ;; ??? This is fine for combine, but not for reload.\n@@ -2572,23 +2486,11 @@ archs4x, archs4xd, archs4xd_slow\"\n \t   (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"\"))\n \t   (zero_extend:DI (match_operand:SI 2 \"nonmemory_operand\" \"\")))\n \t  (const_int 32))))]\n-  \"!TARGET_MUL64_SET && !TARGET_MULMAC_32BY16_SET\"\n+  \"TARGET_MPY\"\n   \"\n {\n   rtx target = operands[0];\n \n-  if (!TARGET_MPY)\n-    {\n-      emit_move_insn (gen_rtx_REG (SImode, 0), operands[1]);\n-      emit_move_insn (gen_rtx_REG (SImode, 1), operands[2]);\n-      if (TARGET_BIG_ENDIAN)\n-\temit_insn (gen_umulsi3_highpart_600_lib_be ());\n-      else\n-\temit_insn (gen_umulsi3_highpart_600_lib_le ());\n-      emit_move_insn (target, gen_rtx_REG (SImode, 0));\n-      DONE;\n-    }\n-\n   if (!register_operand (target, SImode))\n     target = gen_reg_rtx (SImode);\n \n@@ -2607,7 +2509,7 @@ archs4x, archs4xd, archs4xd_slow\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n \t(mult:DI (zero_extend:DI (match_operand:SI 1 \"register_operand\" \"\"))\n \t\t (zero_extend:DI (match_operand:SI 2 \"nonmemory_operand\" \"\"))))]\n-  \"\"\n+  \"TARGET_ANY_MPY\"\n {\n   if (TARGET_PLUS_MACD)\n     {\n@@ -2646,12 +2548,8 @@ archs4x, archs4xd, archs4xd_slow\"\n       DONE;\n     }\n   else\n-    {\n-      emit_move_insn (gen_rtx_REG (SImode, R0_REG), operands[1]);\n-      emit_move_insn (gen_rtx_REG (SImode, R1_REG), operands[2]);\n-      emit_insn (gen_umulsidi3_600_lib ());\n-      emit_move_insn (operands[0], gen_rtx_REG (DImode, R0_REG));\n-      DONE;\n+  {\n+   gcc_unreachable ();\n     }\n })\n \n@@ -2729,7 +2627,7 @@ archs4x, archs4xd, archs4xd_slow\"\n \t\t (zero_extend:DI (match_operand:SI 2 \"extend_operand\" \"cL\"))))]\n   \"TARGET_MPY && !TARGET_PLUS_MACD\"\n   \"#\"\n-  \"reload_completed\"\n+  \"TARGET_MPY && !TARGET_PLUS_MACD && reload_completed\"\n   [(const_int 0)]\n {\n   int hi = !TARGET_BIG_ENDIAN;\n@@ -2743,42 +2641,6 @@ archs4x, archs4xd, archs4xd_slow\"\n   [(set_attr \"type\" \"umulti\")\n   (set_attr \"length\" \"8\")])\n \n-(define_insn \"umulsidi3_600_lib\"\n-  [(set (reg:DI R0_REG)\n-\t(mult:DI (zero_extend:DI (reg:SI R0_REG))\n-\t\t (zero_extend:DI (reg:SI R1_REG))))\n-   (clobber (reg:SI RETURN_ADDR_REGNUM))\n-   (clobber (reg:DI R2_REG))\n-   (clobber (reg:SI R12_REG))\n-   (clobber (reg:DI MUL64_OUT_REG))\n-   (clobber (reg:CC CC_REG))]\n-   \"!TARGET_ANY_MPY\n-   && SFUNC_CHECK_PREDICABLE\"\n-  \"*return arc_output_libcall (\\\"__umulsidi3\\\");\"\n-  [(set_attr \"is_sfunc\" \"yes\")\n-   (set_attr \"predicable\" \"yes\")])\n-\n-(define_peephole2\n-  [(parallel\n-     [(set (reg:DI R0_REG)\n-\t   (mult:DI (zero_extend:DI (reg:SI R0_REG))\n-\t\t    (zero_extend:DI (reg:SI R1_REG))))\n-      (clobber (reg:SI RETURN_ADDR_REGNUM))\n-      (clobber (reg:DI R2_REG))\n-      (clobber (reg:SI R12_REG))\n-      (clobber (reg:DI MUL64_OUT_REG))\n-      (clobber (reg:CC CC_REG))])]\n-  \"!TARGET_ANY_MPY\n-   && peep2_regno_dead_p (1, TARGET_BIG_ENDIAN ? R1_REG : R0_REG)\"\n-  [(pc)]\n-{\n-  if (TARGET_BIG_ENDIAN)\n-    emit_insn (gen_umulsi3_highpart_600_lib_be ());\n-  else\n-    emit_insn (gen_umulsi3_highpart_600_lib_le ());\n-  DONE;\n-})\n-\n (define_expand \"addsi3\"\n   [(set (match_operand:SI 0 \"dest_reg_operand\" \"\")\n \t(plus:SI (match_operand:SI 1 \"register_operand\" \"\")"}, {"sha": "9c23f1df1ed640229782615d70c508c0b8693ea5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8180cde0fb12e1aa10a74319d24cfa9619a60261/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8180cde0fb12e1aa10a74319d24cfa9619a60261/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8180cde0fb12e1aa10a74319d24cfa9619a60261", "patch": "@@ -1,3 +1,7 @@\n+2018-10-31  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* gcc.target/arc/mulsi3_highpart-2.c: Update test.\n+\n 2018-10-31  Martin Liska  <mliska@suse.cz>\n \n \t* c-c++-common/ubsan/pr63839.c: Update to new sanitizer message."}, {"sha": "22b28cf250707c308be98c336f909843684dcbbb", "filename": "gcc/testsuite/gcc.target/arc/mulsi3_highpart-2.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8180cde0fb12e1aa10a74319d24cfa9619a60261/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8180cde0fb12e1aa10a74319d24cfa9619a60261/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farc%2Fmulsi3_highpart-2.c?ref=8180cde0fb12e1aa10a74319d24cfa9619a60261", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do run } */\n /* { dg-skip-if \"ARC700 always has mpy option on\" { arc700 } } */\n /* { dg-skip-if \"ARC600 doesn't have mpy instruction\" { arc6xx } } */\n-/* { dg-options \"-O2 -mmpy-option=0 -w\" } */\n+/* { dg-options \"-O2 -mmpy-option=0 -w -save-temps\" } */\n \n #include <stdlib.h>\n \n@@ -28,5 +28,4 @@ main (void)\n }\n \n /* { dg-final { scan-assembler-not \"mpyhu\\[ \\t\\]\" } } */\n-/* { dg-final { scan-assembler-not \"@__muldi3\" } } */\n-/* { dg-final { scan-assembler \"@__umulsi3_highpart\" } } */\n+/* { dg-final { scan-assembler \"@__muldi3\" } } */"}, {"sha": "d3edd5c5402624b55f2dc700855a9db2c41608a8", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8180cde0fb12e1aa10a74319d24cfa9619a60261/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8180cde0fb12e1aa10a74319d24cfa9619a60261/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=8180cde0fb12e1aa10a74319d24cfa9619a60261", "patch": "@@ -1,3 +1,8 @@\n+2018-10-31  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/lib1funcs.S (_muldi3): New function.\n+\t* config/arc/t-arc (LIB1ASMFUNCS): Add _muldi3.\n+\n 2018-10-30  Rasmus Villemoes  <rv@rasmusvillemoes.dk>\n \n \t* config/gthr-vxworks.h (__gthread_mutex_destroy): Call semDelete."}, {"sha": "249dd7a7ff7360055ed1245f89b78a35644e0f66", "filename": "libgcc/config/arc/lib1funcs.S", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8180cde0fb12e1aa10a74319d24cfa9619a60261/libgcc%2Fconfig%2Farc%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8180cde0fb12e1aa10a74319d24cfa9619a60261/libgcc%2Fconfig%2Farc%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Flib1funcs.S?ref=8180cde0fb12e1aa10a74319d24cfa9619a60261", "patch": "@@ -232,6 +232,60 @@ SYM(__umulsi3_highpart):\n #endif\n #endif /* L_umulsidi3 */\n \n+#ifdef L_muldi3\n+\t.section .text\n+\t.align 4\n+\t.global SYM(__muldi3)\n+SYM(__muldi3):\n+#ifdef __LITTLE_ENDIAN__\n+        push_s blink\n+        mov_s r4,r3     ;4\n+        mov_s r5,r2     ;4\n+        mov_s r9,r0     ;4\n+        mov_s r8,r1     ;4\n+        bl.d @__umulsidi3\n+        mov_s r1,r2     ;4\n+        mov_s r6,r0     ;4\n+        mov_s r7,r1     ;4\n+        mov_s r0,r9     ;4\n+        bl.d @__mulsi3\n+        mov_s r1,r4     ;4\n+        mov_s r4,r0     ;4\n+        mov_s r1,r8     ;4\n+        bl.d @__mulsi3\n+        mov_s r0,r5     ;4\n+        pop_s blink\n+        add_s r0,r0,r4 ;2\n+        add r1,r0,r7\n+        j_s.d [blink]\n+        mov_s r0,r6     ;4\n+#else\n+\tpush_s  blink\n+\tmov_s   r5,r3\n+\tmov_s   r9,r2\n+\tmov_s   r4,r1\n+\tmov_s   r8,r0\n+\tmov_s   r0,r1\n+\tbl.d \t@__umulsidi3\n+\tmov_s   r1,r3\n+\tmov_s   r7,r0\n+\tmov_s   r6,r1\n+\tmov_s   r0,r4\n+\tbl.d    @__mulsi3\n+\tmov_s   r1,r9\n+\tmov_s   r4,r0\n+\tmov_s   r1,r8\n+\tbl.d    @__mulsi3\n+\tmov_s   r0,r5\n+\tpop_s   blink\n+\tadd_s   r0,r0,r4\n+\tadd_s   r0,r0,r7\n+\tj_s.d   [blink]\n+\tmov_s   r1,r6\n+#endif /* __LITTLE_ENDIAN__ */\n+ENDFUNC(__muldi3)\n+#endif /* L_muldi3 */\n+\n #ifdef  L_umulsi3_highpart\n #include \"ieee-754/arc-ieee-754.h\"\n /* For use without a barrel shifter, and for ARC700 / ARC_MUL64, the"}, {"sha": "c79bc1cfdc4a8b3fb69b33b7e589074c9fd12344", "filename": "libgcc/config/arc/t-arc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8180cde0fb12e1aa10a74319d24cfa9619a60261/libgcc%2Fconfig%2Farc%2Ft-arc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8180cde0fb12e1aa10a74319d24cfa9619a60261/libgcc%2Fconfig%2Farc%2Ft-arc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Farc%2Ft-arc?ref=8180cde0fb12e1aa10a74319d24cfa9619a60261", "patch": "@@ -21,7 +21,7 @@\n \n CROSS_LIBGCC1 = libgcc1-asm.a\n LIB1ASMSRC = arc/lib1funcs.S\n-LIB1ASMFUNCS = _mulsi3 _umulsidi3  _umulsi3_highpart \\\n+LIB1ASMFUNCS = _mulsi3 _umulsidi3  _umulsi3_highpart _muldi3 \\\n   _udivsi3 _divsi3 _umodsi3 _modsi3 \\\n   _divmod_tools _clzsi2 \\\n   _millicodethunk_st _millicodethunk_ld _millicodethunk_ret \\"}]}