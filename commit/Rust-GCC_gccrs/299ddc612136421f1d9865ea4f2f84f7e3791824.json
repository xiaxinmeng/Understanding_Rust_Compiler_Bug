{"sha": "299ddc612136421f1d9865ea4f2f84f7e3791824", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk5ZGRjNjEyMTM2NDIxZjFkOTg2NWVhNGYyZjg0ZjdlMzc5MTgyNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-15T19:13:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2020-01-15T20:12:45Z"}, "message": "Revert \"PR c++/33799 - destroy return value if local cleanup throws.\"\n\nThis change was blocking the coroutines merge, so I'm backing it out for now\nto adjust my approach.\n\nThis reverts commit 7c82dd6c02d44d9d2cd84dda137c00b1a3cd6c90.", "tree": {"sha": "15b55558a59a9ad516e343d64b4591ab588de990", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15b55558a59a9ad516e343d64b4591ab588de990"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/299ddc612136421f1d9865ea4f2f84f7e3791824", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299ddc612136421f1d9865ea4f2f84f7e3791824", "html_url": "https://github.com/Rust-GCC/gccrs/commit/299ddc612136421f1d9865ea4f2f84f7e3791824", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/299ddc612136421f1d9865ea4f2f84f7e3791824/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "596334fa040094c772965ff1998d171fe3e00348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/596334fa040094c772965ff1998d171fe3e00348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/596334fa040094c772965ff1998d171fe3e00348"}], "stats": {"total": 38, "additions": 7, "deletions": 31}, "files": [{"sha": "4a155795493ca94c9e31b8eddfa7ac676338e8c7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=299ddc612136421f1d9865ea4f2f84f7e3791824", "patch": "@@ -1,5 +1,11 @@\n 2020-01-15  Jason Merrill  <jason@redhat.com>\n \n+\tRevert\n+\tPR c++/33799 - destroy return value if local cleanup throws.\n+\t* cp-tree.h (current_retval_sentinel): New macro.\n+\t* decl.c (start_preparsed_function): Set up cleanup for retval.\n+\t* typeck.c (check_return_expr): Set current_retval_sentinel.\n+\n \tPR c++/93257 - consteval void function.\n \t* constexpr.c (verify_constant): Allow void_node.\n "}, {"sha": "2b08d1b50cd822d38adf49d85e63f3ad5373675d", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=299ddc612136421f1d9865ea4f2f84f7e3791824", "patch": "@@ -1954,13 +1954,6 @@ struct GTY(()) language_function {\n \n #define current_vtt_parm cp_function_chain->x_vtt_parm\n \n-/* A boolean flag to control whether we need to clean up the return value if a\n-   local destructor throws.  Only used in functions that return by value a\n-   class with a destructor.  Which 'tors don't, so we can use the same\n-   field as current_vtt_parm.  */\n-\n-#define current_retval_sentinel current_vtt_parm\n-\n /* Set to 0 at beginning of a function definition, set to 1 if\n    a return statement that specifies a return value is seen.  */\n "}, {"sha": "094e32edf5868b04ede566ddaa3a8eb7b82bf3a2", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=299ddc612136421f1d9865ea4f2f84f7e3791824", "patch": "@@ -16418,20 +16418,6 @@ start_preparsed_function (tree decl1, tree attrs, int flags)\n   if (!DECL_OMP_DECLARE_REDUCTION_P (decl1))\n     start_lambda_scope (decl1);\n \n-  /* If cleaning up locals on return throws an exception, we need to destroy\n-     the return value that we just constructed.  */\n-  if (!processing_template_decl\n-      && TYPE_HAS_NONTRIVIAL_DESTRUCTOR (TREE_TYPE (TREE_TYPE (decl1))))\n-    {\n-      tree retval = DECL_RESULT (decl1);\n-      tree dtor = build_cleanup (retval);\n-      current_retval_sentinel = get_temp_regvar (boolean_type_node,\n-\t\t\t\t\t\t boolean_false_node);\n-      dtor = build3 (COND_EXPR, void_type_node, current_retval_sentinel,\n-\t\t     dtor, void_node);\n-      push_cleanup (retval, dtor, /*eh-only*/true);\n-    }\n-\n   return true;\n }\n "}, {"sha": "8955442349f903632fc06f7f586a1f05c97b0cff", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=299ddc612136421f1d9865ea4f2f84f7e3791824", "patch": "@@ -10090,15 +10090,6 @@ check_return_expr (tree retval, bool *no_warning)\n   if (retval && retval != result)\n     retval = build2 (INIT_EXPR, TREE_TYPE (result), result, retval);\n \n-  if (TYPE_HAS_NONTRIVIAL_DESTRUCTOR (valtype)\n-      /* FIXME doesn't work with deduced return type.  */\n-      && current_retval_sentinel)\n-    {\n-      tree set = build2 (MODIFY_EXPR, boolean_type_node,\n-\t\t\t current_retval_sentinel, boolean_true_node);\n-      retval = build2 (COMPOUND_EXPR, void_type_node, retval, set);\n-    }\n-\n   return retval;\n }\n "}, {"sha": "ca0b8046e1b3967aed29a291e5ad90620e7cb4ef", "filename": "gcc/testsuite/g++.dg/eh/return1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Freturn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/299ddc612136421f1d9865ea4f2f84f7e3791824/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Freturn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Freturn1.C?ref=299ddc612136421f1d9865ea4f2f84f7e3791824", "patch": "@@ -1,5 +1,5 @@\n // PR c++/33799\n-// { dg-do run }\n+// { dg-do run { xfail *-*-* } }\n \n extern \"C\" void abort();\n "}]}