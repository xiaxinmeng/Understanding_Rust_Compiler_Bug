{"sha": "3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0YTE0ZWYyZWRkNzllNmQwMGFlY2I4Mzg3MWYwMWQ1YzVhNjFlMw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T23:09:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-04-25T23:09:34Z"}, "message": "(gen_highpart): Add comment about broken implementation.\n\nFrom-SVN: r9463", "tree": {"sha": "bfc8e18393255ce7ed05e3b58024b6c0d5ddaa3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfc8e18393255ce7ed05e3b58024b6c0d5ddaa3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3/comments", "author": null, "committer": null, "parents": [{"sha": "ee33823f45e8f5fa4347300efb481f50858d489b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee33823f45e8f5fa4347300efb481f50858d489b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee33823f45e8f5fa4347300efb481f50858d489b"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "847926f7948109c4e75823ca74cface394ecf3ce", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=3e4a14ef2edd79e6d00aecb83871f01d5c5a61e3", "patch": "@@ -932,6 +932,12 @@ gen_highpart (mode, x)\n \t\t - MAX (GET_MODE_SIZE (mode), UNITS_PER_WORD))\n \t\t/ UNITS_PER_WORD);\n \n+      /*\n+       * ??? This fails miserably for complex values being passed in registers\n+       * where the sizeof the real and imaginary part are not equal to the\n+       * sizeof SImode.  FIXME\n+       */\n+\n       if (REGNO (x) < FIRST_PSEUDO_REGISTER\n \t  /* integrate.c can't handle parts of a return value register. */\n \t  && (! REG_FUNCTION_VALUE_P (x)"}]}