{"sha": "7d6f7e92c3b737736a2d8ff97a71af9f230c2f88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Q2ZjdlOTJjM2I3Mzc3MzZhMmQ4ZmY5N2E3MWFmOWYyMzBjMmY4OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-19T11:29:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2021-01-19T12:22:40Z"}, "message": "ipa/97673 - fix input_location leak\n\nThis fixes input_location leaking with an invalid BLOCK from\nexpand_call_inline to tree_function_versioning via clone\nmaterialization.\n\n2021-01-19  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/97673\n\t* tree-inline.c (tree_function_versioning): Set input_location\n\tto UNKNOWN_LOCATION throughout the function.\n\n\t* gfortran.dg/pr97673.f90: New testcase.", "tree": {"sha": "0981bc255a108b38012d7f55bbd81ea18eed2496", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0981bc255a108b38012d7f55bbd81ea18eed2496"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7d6f7e92c3b737736a2d8ff97a71af9f230c2f88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6f7e92c3b737736a2d8ff97a71af9f230c2f88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d6f7e92c3b737736a2d8ff97a71af9f230c2f88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d6f7e92c3b737736a2d8ff97a71af9f230c2f88/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "049bfd186fae9fb764a3ec04acb20d3eaacda7a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/049bfd186fae9fb764a3ec04acb20d3eaacda7a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/049bfd186fae9fb764a3ec04acb20d3eaacda7a3"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "33b81435806d2a322f2cbf7f94be878b74b4ad76", "filename": "gcc/testsuite/gfortran.dg/pr97673.f90", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6f7e92c3b737736a2d8ff97a71af9f230c2f88/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97673.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6f7e92c3b737736a2d8ff97a71af9f230c2f88/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97673.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr97673.f90?ref=7d6f7e92c3b737736a2d8ff97a71af9f230c2f88", "patch": "@@ -0,0 +1,14 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -fno-early-inlining --param large-stack-frame=4000\" }\n+\n+subroutine sub3noiso(a, b)\n+  use iso_c_binding\n+  implicit none\n+  character(len=1,kind=c_char) :: a(*), b\n+  character(len=1,kind=c_char):: x,z\n+  integer(c_int) :: y\n+  value :: b\n+  print *, a(1:2), b\n+entry sub3noisoEntry(x,y,z)\n+  x = 'd'\n+end subroutine sub3noiso"}, {"sha": "a710fa590279234e5e8062a87bac68eb324df3cb", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7d6f7e92c3b737736a2d8ff97a71af9f230c2f88/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7d6f7e92c3b737736a2d8ff97a71af9f230c2f88/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=7d6f7e92c3b737736a2d8ff97a71af9f230c2f88", "patch": "@@ -6215,6 +6215,12 @@ tree_function_versioning (tree old_decl, tree new_decl,\n   auto_vec<gimple *, 10> init_stmts;\n   tree vars = NULL_TREE;\n \n+  /* We can get called recursively from expand_call_inline via clone\n+     materialization.  While expand_call_inline maintains input_location\n+     we cannot tolerate it to leak into the materialized clone.  */\n+  location_t saved_location = input_location;\n+  input_location = UNKNOWN_LOCATION;\n+\n   gcc_assert (TREE_CODE (old_decl) == FUNCTION_DECL\n \t      && TREE_CODE (new_decl) == FUNCTION_DECL);\n   DECL_POSSIBLY_INLINED (old_decl) = 1;\n@@ -6516,6 +6522,7 @@ tree_function_versioning (tree old_decl, tree new_decl,\n \n   gcc_assert (!id.debug_stmts.exists ());\n   pop_cfun ();\n+  input_location = saved_location;\n   return;\n }\n "}]}