{"sha": "62674ffe2b69f8d8550e718c478621500ff6effb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI2NzRmZmUyYjY5ZjhkODU1MGU3MThjNDc4NjIxNTAwZmY2ZWZmYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@freesoft.cz", "date": "1999-04-10T22:16:29Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-04-10T22:16:29Z"}, "message": "recog.c (constrain_operands): Ignore unary operators when matching operands.\n\n        * recog.c (constrain_operands): Ignore unary operators when\n        matching operands.  Recognize '5'..'9' as well.\n\nFrom-SVN: r26342", "tree": {"sha": "0d11b9b740ce0204ceafaeff59828f8f5e19b8fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d11b9b740ce0204ceafaeff59828f8f5e19b8fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62674ffe2b69f8d8550e718c478621500ff6effb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62674ffe2b69f8d8550e718c478621500ff6effb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62674ffe2b69f8d8550e718c478621500ff6effb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62674ffe2b69f8d8550e718c478621500ff6effb/comments", "author": null, "committer": null, "parents": [{"sha": "83f4345f444119d37513fbb4fcb33daf1a8478f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83f4345f444119d37513fbb4fcb33daf1a8478f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83f4345f444119d37513fbb4fcb33daf1a8478f0"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "6eed4a05fb67bfd31f6e3b2b2b0cd42e4da69e54", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62674ffe2b69f8d8550e718c478621500ff6effb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62674ffe2b69f8d8550e718c478621500ff6effb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=62674ffe2b69f8d8550e718c478621500ff6effb", "patch": "@@ -1,3 +1,8 @@\n+Sat Apr 10 22:12:12 1999  Jan Hubicka <hubicka@freesoft.cz>\n+  \n+\t* recog.c (constrain_operands): Ignore unary operators when\n+\tmatching operands.  Recognize '5'..'9' as well.\n+\n Sat Apr 10 21:53:02 1999  Philipp Thomas  (kthomas@gwdg.de)\n \t\t\t  Richard Henderson  <rth@cygnus.com>\n "}, {"sha": "94e7abbffff519e16cf6f3ecb23ba5a47888442e", "filename": "gcc/recog.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62674ffe2b69f8d8550e718c478621500ff6effb/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62674ffe2b69f8d8550e718c478621500ff6effb/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=62674ffe2b69f8d8550e718c478621500ff6effb", "patch": "@@ -2303,11 +2303,8 @@ constrain_operands (strict)\n \t\tearlyclobber[opno] = 1;\n \t\tbreak;\n \n-\t      case '0':\n-\t      case '1':\n-\t      case '2':\n-\t      case '3':\n-\t      case '4':\n+\t      case '0': case '1': case '2': case '3': case '4':\n+\t      case '5': case '6': case '7': case '8': case '9':\n \t\t/* This operand must be the same as a previous one.\n \t\t   This kind of constraint is used for instructions such\n \t\t   as add when they take only two operands.\n@@ -2319,8 +2316,19 @@ constrain_operands (strict)\n \t\tif (strict < 0)\n \t\t  val = 1;\n \t\telse\n-\t\t  val = operands_match_p (recog_operand[c - '0'],\n-\t\t\t\t\t  recog_operand[opno]);\n+\t\t  {\n+\t\t    rtx op1 = recog_operand[c - '0'];\n+\t\t    rtx op2 = recog_operand[opno];\n+\n+\t            /* A unary operator may be accepted by the predicate,\n+\t\t       but it is irrelevant for matching constraints.  */\n+\t            if (GET_RTX_CLASS (GET_CODE (op1)) == '1')\n+\t              op1 = XEXP (op1, 0);\n+\t            if (GET_RTX_CLASS (GET_CODE (op2)) == '1')\n+\t              op2 = XEXP (op2, 0);\n+\n+\t\t    val = operands_match_p (op1, op2);\n+\t\t  }\n \n \t\tmatching_operands[opno] = c - '0';\n \t\tmatching_operands[c - '0'] = opno;"}]}