{"sha": "1a172da8a3f3625d6d35675e604678ab0154bef7", "node_id": "C_kwDOANBUbNoAKDFhMTcyZGE4YTNmMzYyNWQ2ZDM1Njc1ZTYwNDY3OGFiMDE1NGJlZjc", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-04-01T13:18:26Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2022-04-01T13:19:41Z"}, "message": "jit: further doc fixes\n\nFurther jit doc fixes, which fix links to\ngcc_jit_function_type_get_param_type and gcc_jit_struct_get_field.\n\ngcc/jit/ChangeLog:\n\t* docs/topics/expressions.rst: Fix formatting.\n\t* docs/topics/types.rst: Likewise.\n\t* docs/_build/texinfo/libgccjit.texi: Regenerate\n\nSigned-off-by: David Malcolm <dmalcolm@redhat.com>", "tree": {"sha": "e6d0dcabacf99d84a0ef8dc3671c685b34a556f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6d0dcabacf99d84a0ef8dc3671c685b34a556f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a172da8a3f3625d6d35675e604678ab0154bef7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a172da8a3f3625d6d35675e604678ab0154bef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a172da8a3f3625d6d35675e604678ab0154bef7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a172da8a3f3625d6d35675e604678ab0154bef7/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aed0f014781ee334921030d4b86e295bd1080b96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aed0f014781ee334921030d4b86e295bd1080b96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aed0f014781ee334921030d4b86e295bd1080b96"}], "stats": {"total": 2022, "additions": 1320, "deletions": 702}, "files": [{"sha": "c1ca5aaf7f627694bfaacc1cc6fcf86072664655", "filename": "gcc/jit/docs/_build/texinfo/libgccjit.texi", "status": "modified", "additions": 1313, "deletions": 695, "changes": 2008, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a172da8a3f3625d6d35675e604678ab0154bef7/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a172da8a3f3625d6d35675e604678ab0154bef7/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2F_build%2Ftexinfo%2Flibgccjit.texi?ref=1a172da8a3f3625d6d35675e604678ab0154bef7"}, {"sha": "d51264af73fa3eef4c04d99e78a4201c0b9d3d44", "filename": "gcc/jit/docs/topics/expressions.rst", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a172da8a3f3625d6d35675e604678ab0154bef7/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a172da8a3f3625d6d35675e604678ab0154bef7/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Fexpressions.rst?ref=1a172da8a3f3625d6d35675e604678ab0154bef7", "patch": "@@ -24,7 +24,7 @@ Rvalues\n -------\n .. type:: gcc_jit_rvalue\n \n-A :c:type:`gcc_jit_rvalue *` is an expression that can be computed.\n+A :c:type:`gcc_jit_rvalue` is an expression that can be computed.\n \n It can be simple, e.g.:\n \n@@ -602,7 +602,7 @@ Function calls\n               gcc_jit_rvalue_set_bool_require_tail_call (gcc_jit_rvalue *call,\\\n                                                          int require_tail_call)\n \n-   Given an :c:type:`gcc_jit_rvalue *` for a call created through\n+   Given an :c:type:`gcc_jit_rvalue` for a call created through\n    :c:func:`gcc_jit_context_new_call` or\n    :c:func:`gcc_jit_context_new_call_through_ptr`, mark/clear the\n    call as needing tail-call optimization.  The optimizer will\n@@ -721,8 +721,8 @@ where the rvalue is computed by reading from the storage area.\n \n       #ifdef LIBGCCJIT_HAVE_gcc_jit_lvalue_set_tls_model\n \n-.. function:: void\n-              gcc_jit_lvalue_set_link_section (gcc_jit_lvalue *lvalue,\n+.. function:: void\\\n+              gcc_jit_lvalue_set_link_section (gcc_jit_lvalue *lvalue,\\\n                                                const char *section_name)\n \n    Set the link section of a variable."}, {"sha": "c2082c0ef3ed4972c4f12706e2f14901ffadfce9", "filename": "gcc/jit/docs/topics/types.rst", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a172da8a3f3625d6d35675e604678ab0154bef7/gcc%2Fjit%2Fdocs%2Ftopics%2Ftypes.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a172da8a3f3625d6d35675e604678ab0154bef7/gcc%2Fjit%2Fdocs%2Ftopics%2Ftypes.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fdocs%2Ftopics%2Ftypes.rst?ref=1a172da8a3f3625d6d35675e604678ab0154bef7", "patch": "@@ -192,7 +192,7 @@ A compound type analagous to a C `struct`.\n \n A field within a :c:type:`gcc_jit_struct`.\n \n-You can model C `struct` types by creating :c:type:`gcc_jit_struct *` and\n+You can model C `struct` types by creating :c:type:`gcc_jit_struct` and\n :c:type:`gcc_jit_field` instances, in either order:\n \n * by creating the fields, then the structure.  For example, to model:\n@@ -375,7 +375,7 @@ Reflection API\n      Given a function type, return its number of parameters.\n \n .. function::  gcc_jit_type *\\\n-               gcc_jit_function_type_get_param_type (gcc_jit_function_type *function_type,\n+               gcc_jit_function_type_get_param_type (gcc_jit_function_type *function_type,\\\n                                                      size_t index)\n \n      Given a function type, return the type of the specified parameter.\n@@ -417,7 +417,7 @@ Reflection API\n      alignment qualifiers.\n \n .. function::  gcc_jit_field *\\\n-               gcc_jit_struct_get_field (gcc_jit_struct *struct_type,\n+               gcc_jit_struct_get_field (gcc_jit_struct *struct_type,\\\n                                          size_t index)\n \n      Get a struct field by index."}]}