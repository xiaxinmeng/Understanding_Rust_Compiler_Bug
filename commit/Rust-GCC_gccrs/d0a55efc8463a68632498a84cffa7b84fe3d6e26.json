{"sha": "d0a55efc8463a68632498a84cffa7b84fe3d6e26", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBhNTVlZmM4NDYzYTY4NjMyNDk4YTg0Y2ZmYTdiODRmZTNkNmUyNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-11-01T08:48:05Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-11-01T08:48:05Z"}, "message": "re PR rtl-optimization/33673 (ICE in verify_flow_info, missing barrier, when multiple tree opts disabled)\n\n\tPR rtl-optimization/33673\n\t* gcse.c (cprop_jump): If a conditional jump has been optimized\n\tinto unconditional jump, make the remaining normal edge fallthru\n\tand delete the jump insn.\n\n\t* gcc.dg/pr33673.c: New test.\n\nFrom-SVN: r129819", "tree": {"sha": "45f7a53520410f93df610fbb1e6060c29abf1bae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45f7a53520410f93df610fbb1e6060c29abf1bae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0a55efc8463a68632498a84cffa7b84fe3d6e26", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a55efc8463a68632498a84cffa7b84fe3d6e26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0a55efc8463a68632498a84cffa7b84fe3d6e26", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0a55efc8463a68632498a84cffa7b84fe3d6e26/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "895a8136438717d4770e58be58ffa8bb71df4c28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/895a8136438717d4770e58be58ffa8bb71df4c28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/895a8136438717d4770e58be58ffa8bb71df4c28"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "0aa3b00c8b6ba20d1393551becfe693242a3bffa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a55efc8463a68632498a84cffa7b84fe3d6e26/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a55efc8463a68632498a84cffa7b84fe3d6e26/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0a55efc8463a68632498a84cffa7b84fe3d6e26", "patch": "@@ -1,3 +1,10 @@\n+2007-11-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/33673\n+\t* gcse.c (cprop_jump): If a conditional jump has been optimized\n+\tinto unconditional jump, make the remaining normal edge fallthru\n+\tand delete the jump insn.\n+\n 2007-11-01  Ben Elliston  <bje@au.ibm.com>\n \n \t* emit-rtl.c (set_reg_attrs_from_mem): Clarify function comment."}, {"sha": "a519acbf0545042e176e0c22ba73476c00cb246e", "filename": "gcc/gcse.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a55efc8463a68632498a84cffa7b84fe3d6e26/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a55efc8463a68632498a84cffa7b84fe3d6e26/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=d0a55efc8463a68632498a84cffa7b84fe3d6e26", "patch": "@@ -2875,6 +2875,24 @@ cprop_jump (basic_block bb, rtx setcc, rtx jump, rtx from, rtx src)\n     }\n   purge_dead_edges (bb);\n \n+  /* If a conditional jump has been changed into unconditional jump, remove\n+     the jump and make the edge fallthru - this is always called in\n+     cfglayout mode.  */\n+  if (new != pc_rtx && simplejump_p (jump))\n+    {\n+      edge e;\n+      edge_iterator ei;\n+\n+      for (ei = ei_start (bb->succs); (e = ei_safe_edge (ei)); ei_next (&ei))\n+\tif (e->dest != EXIT_BLOCK_PTR\n+\t    && BB_HEAD (e->dest) == JUMP_LABEL (jump))\n+\t  {\n+\t    e->flags |= EDGE_FALLTHRU;\n+\t    break;\n+\t  }\n+      delete_insn (jump);\n+    }\n+\n   return 1;\n }\n "}, {"sha": "fd1f046ac218d218f810ce9351ad6fd44e5d90fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a55efc8463a68632498a84cffa7b84fe3d6e26/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a55efc8463a68632498a84cffa7b84fe3d6e26/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0a55efc8463a68632498a84cffa7b84fe3d6e26", "patch": "@@ -1,3 +1,8 @@\n+2007-11-01  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/33673\n+\t* gcc.dg/pr33673.c: New test.\n+\n 2007-11-01  Michael Matz  <matz@suse.de>\n \n \tPR tree-optimization/33961"}, {"sha": "d238d112cfa1cb804fd1c5d2188aaf766cd8d2f7", "filename": "gcc/testsuite/gcc.dg/pr33673.c", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0a55efc8463a68632498a84cffa7b84fe3d6e26/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33673.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0a55efc8463a68632498a84cffa7b84fe3d6e26/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33673.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33673.c?ref=d0a55efc8463a68632498a84cffa7b84fe3d6e26", "patch": "@@ -0,0 +1,43 @@\n+/* PR rtl-optimization/33673 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -fno-forward-propagate -fno-guess-branch-probability -fno-move-loop-invariants -fno-tree-dominator-opts -fno-tree-loop-optimize\" } */\n+\n+extern int f1 (int);\n+extern int f2 (int);\n+\n+extern int *a;\n+\n+static void\n+find_reg (int n)\n+{\n+  int i, pass;\n+  unsigned int used[2], used1[2];\n+\n+  int c = n ? f1 (a[1]) : f2 (a[1]);\n+\n+  for (i = 64, pass = 0; pass <= 1 && i >= 64; pass++)\n+    {\n+      if (pass == 1)\n+\t{\n+\t  unsigned int *scan_tp_ = used;\n+\t  unsigned int *scan_fp_ = used1;\n+\t  int j;\n+\t  for (j = 0; j < 2; j++)\n+\t    *scan_tp_++ = *scan_fp_++;\n+\t}\n+      for (i = 0; i < 64; i++)\n+\t{\n+\t  int regno = i;\n+\t  if (n == 0)\n+\t    if (i == regno)\n+\t      break;\n+\t}\n+    }\n+}\n+\n+void\n+global_alloc ()\n+{\n+  find_reg (0);\n+  find_reg (1);\n+}"}]}