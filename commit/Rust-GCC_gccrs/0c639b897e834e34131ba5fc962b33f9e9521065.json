{"sha": "0c639b897e834e34131ba5fc962b33f9e9521065", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGM2MzliODk3ZTgzNGUzNDEzMWJhNWZjOTYyYjMzZjllOTUyMTA2NQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-06-19T23:47:43Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2002-06-19T23:47:43Z"}, "message": "* configure.in: Rearrange a little.\n\nFrom-SVN: r54808", "tree": {"sha": "558330f4a62f5ca02e1cbf12627bfa8530a6ab10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/558330f4a62f5ca02e1cbf12627bfa8530a6ab10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c639b897e834e34131ba5fc962b33f9e9521065", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c639b897e834e34131ba5fc962b33f9e9521065", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c639b897e834e34131ba5fc962b33f9e9521065", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c639b897e834e34131ba5fc962b33f9e9521065/comments", "author": null, "committer": null, "parents": [{"sha": "e1848dde7a6c5ed3d2da2e83a91b28d237faa931", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e1848dde7a6c5ed3d2da2e83a91b28d237faa931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e1848dde7a6c5ed3d2da2e83a91b28d237faa931"}], "stats": {"total": 53, "additions": 26, "deletions": 27}, "files": [{"sha": "334fc70a3cdd295ef7c4eac8076383f46c82af86", "filename": "configure.in", "status": "modified", "additions": 26, "deletions": 27, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c639b897e834e34131ba5fc962b33f9e9521065/configure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c639b897e834e34131ba5fc962b33f9e9521065/configure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.in?ref=0c639b897e834e34131ba5fc962b33f9e9521065", "patch": "@@ -497,33 +497,6 @@ if test x\"${with_libs}\" != x ; then\n   done\n fi\n \n-# If both --with-headers and --with-libs are specified, default to\n-# --without-newlib.\n-if test x\"${with_headers}\" != x && test x\"${with_libs}\" != x ; then\n-  if test x\"${with_newlib}\" = x ; then\n-    with_newlib=no\n-  fi\n-fi\n-\n-# Recognize --with-newlib/--without-newlib.\n-if test x${with_newlib} = xno ; then\n-  skipdirs=\"${skipdirs} target-newlib\"\n-elif test x${with_newlib} = xyes ; then\n-  skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n-fi\n-\n-# Default to using --with-stabs for certain targets.\n-if test x${with_stabs} = x ; then\n-  case \"${target}\" in\n-  mips*-*-irix6*)\n-    ;;\n-  mips*-*-* | alpha*-*-osf*)\n-    with_stabs=yes;\n-    withoptions=\"${withoptions} --with-stabs\"\n-    ;;\n-  esac\n-fi\n-\n # Handle ${copy_dirs}\n set fnord ${copy_dirs}\n shift\n@@ -555,6 +528,32 @@ while test $# != 0 ; do\n   shift; shift\n done\n \n+# If both --with-headers and --with-libs are specified, default to\n+# --without-newlib.\n+if test x\"${with_headers}\" != x && test x\"${with_libs}\" != x ; then\n+  if test x\"${with_newlib}\" = x ; then\n+    with_newlib=no\n+  fi\n+fi\n+\n+# Recognize --with-newlib/--without-newlib.\n+case ${with_newlib} in\n+  no) skipdirs=\"${skipdirs} target-newlib\" ;;\n+  yes) skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'` ;;\n+esac\n+\n+# Default to using --with-stabs for certain targets.\n+if test x${with_stabs} = x ; then\n+  case \"${target}\" in\n+  mips*-*-irix6*)\n+    ;;\n+  mips*-*-* | alpha*-*-osf*)\n+    with_stabs=yes;\n+    withoptions=\"${withoptions} --with-stabs\"\n+    ;;\n+  esac\n+fi\n+\n # Configure extra directories which are host specific\n \n case \"${host}\" in"}]}