{"sha": "a69d2520e0ed978f8c030689958e5f67e7ca42eb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTY5ZDI1MjBlMGVkOTc4ZjhjMDMwNjg5OTU4ZTVmNjdlN2NhNDJlYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-08-31T22:47:25Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-08-31T22:47:25Z"}, "message": "re PR preprocessor/45457 (ICE: invalid built-in macro \"__DBL_DENORM_MIN__\")\n\n\tPR preprocessor/45457\n\t* expr.c (parse_defined): Call pfile->cb.user_builtin_macro hook if\n\tneeded.\n\t* directives.c (do_ifdef, do_ifndef): Likewise.\n\n\t* c-c++-common/cpp/pr45457.c: New test.\n\nFrom-SVN: r163705", "tree": {"sha": "f637ade47d19715a8cf418b551c01d28ece8d143", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f637ade47d19715a8cf418b551c01d28ece8d143"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a69d2520e0ed978f8c030689958e5f67e7ca42eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a69d2520e0ed978f8c030689958e5f67e7ca42eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a69d2520e0ed978f8c030689958e5f67e7ca42eb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a69d2520e0ed978f8c030689958e5f67e7ca42eb/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c1bebc414bf795957a4371d614618344589310e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c1bebc414bf795957a4371d614618344589310e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c1bebc414bf795957a4371d614618344589310e"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "d9f26d927f35a5987c55e514e589fbd794808dfb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a69d2520e0ed978f8c030689958e5f67e7ca42eb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a69d2520e0ed978f8c030689958e5f67e7ca42eb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a69d2520e0ed978f8c030689958e5f67e7ca42eb", "patch": "@@ -1,3 +1,8 @@\n+2010-08-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/45457\n+\t* c-c++-common/cpp/pr45457.c: New test.\n+\n 2010-08-31  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc.dg/nested-func-8.c: New test."}, {"sha": "14879cd7953a15d4f38d11e7e5d03e91562df995", "filename": "gcc/testsuite/c-c++-common/cpp/pr45457.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a69d2520e0ed978f8c030689958e5f67e7ca42eb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr45457.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a69d2520e0ed978f8c030689958e5f67e7ca42eb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr45457.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcpp%2Fpr45457.c?ref=a69d2520e0ed978f8c030689958e5f67e7ca42eb", "patch": "@@ -0,0 +1,18 @@\n+/* PR preprocessor/45457 */\n+/* { dg-do compile } */\n+\n+const char *a =\n+#ifdef __DBL_DENORM_MIN__                                                                                                                         \n+\"a\"\n+#endif                                                                                                                                            \n+#if defined(__DBL_EPSILON__)\n+\"b\"\n+#endif\n+#ifndef __DBL_MAX__\n+\"c\"\n+#endif\n+#if !defined(__DBL_MIN__)\n+\"d\"\n+#endif\n+;\n+double b = __DBL_DENORM_MIN__ + __DBL_EPSILON__ + __DBL_MAX__ + __DBL_MIN__;"}, {"sha": "5169a11558c6c1276fa3903271aadccc5862882a", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a69d2520e0ed978f8c030689958e5f67e7ca42eb/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a69d2520e0ed978f8c030689958e5f67e7ca42eb/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=a69d2520e0ed978f8c030689958e5f67e7ca42eb", "patch": "@@ -1,3 +1,10 @@\n+2010-08-31  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR preprocessor/45457\n+\t* expr.c (parse_defined): Call pfile->cb.user_builtin_macro hook if\n+\tneeded.\n+\t* directives.c (do_ifdef, do_ifndef): Likewise.\n+\n 2010-08-26  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* system.h [HAVE_INTTYPES_H]: Include inttypes.h."}, {"sha": "997737bd4dae578d45d3634952cb2ef222895930", "filename": "libcpp/directives.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a69d2520e0ed978f8c030689958e5f67e7ca42eb/libcpp%2Fdirectives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a69d2520e0ed978f8c030689958e5f67e7ca42eb/libcpp%2Fdirectives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fdirectives.c?ref=a69d2520e0ed978f8c030689958e5f67e7ca42eb", "patch": "@@ -1,7 +1,7 @@\n /* CPP Library. (Directive handling.)\n    Copyright (C) 1986, 1987, 1989, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n    1999, 2000, 2001, 2002, 2003, 2004, 2005,\n-   2007, 2008, 2009 Free Software Foundation, Inc.\n+   2007, 2008, 2009, 2010 Free Software Foundation, Inc.\n    Contributed by Per Bothner, 1994-95.\n    Based on CCCP program by Paul Rubin, June 1986\n    Adapted to ANSI C, Richard Stallman, Jan 1987\n@@ -1804,6 +1804,9 @@ do_ifdef (cpp_reader *pfile)\n \t      node->flags |= NODE_USED;\n \t      if (node->type == NT_MACRO)\n \t\t{\n+\t\t  if ((node->flags & NODE_BUILTIN)\n+\t\t      && pfile->cb.user_builtin_macro)\n+\t\t    pfile->cb.user_builtin_macro (pfile, node);\n \t\t  if (pfile->cb.used_define)\n \t\t    pfile->cb.used_define (pfile, pfile->directive_line, node);\n \t\t}\n@@ -1842,6 +1845,9 @@ do_ifndef (cpp_reader *pfile)\n \t      node->flags |= NODE_USED;\n \t      if (node->type == NT_MACRO)\n \t\t{\n+\t\t  if ((node->flags & NODE_BUILTIN)\n+\t\t      && pfile->cb.user_builtin_macro)\n+\t\t    pfile->cb.user_builtin_macro (pfile, node);\n \t\t  if (pfile->cb.used_define)\n \t\t    pfile->cb.used_define (pfile, pfile->directive_line, node);\n \t\t}"}, {"sha": "d2f6c3cf0acc98548470329f69ef79812720bf14", "filename": "libcpp/expr.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a69d2520e0ed978f8c030689958e5f67e7ca42eb/libcpp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a69d2520e0ed978f8c030689958e5f67e7ca42eb/libcpp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fexpr.c?ref=a69d2520e0ed978f8c030689958e5f67e7ca42eb", "patch": "@@ -700,6 +700,9 @@ parse_defined (cpp_reader *pfile)\n \t  node->flags |= NODE_USED;\n \t  if (node->type == NT_MACRO)\n \t    {\n+\t      if ((node->flags & NODE_BUILTIN)\n+\t\t  && pfile->cb.user_builtin_macro)\n+\t\tpfile->cb.user_builtin_macro (pfile, node);\n \t      if (pfile->cb.used_define)\n \t\tpfile->cb.used_define (pfile, pfile->directive_line, node);\n \t    }"}]}