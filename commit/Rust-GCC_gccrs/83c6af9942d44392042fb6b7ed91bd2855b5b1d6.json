{"sha": "83c6af9942d44392042fb6b7ed91bd2855b5b1d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNjNmFmOTk0MmQ0NDM5MjA0MmZiNmI3ZWQ5MWJkMjg1NWI1YjFkNg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-11-07T20:54:05Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2001-11-07T20:54:05Z"}, "message": "forgot cl entries\n\nFrom-SVN: r46835", "tree": {"sha": "67a042fc2bac500b6903f9ada687698b36668ca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67a042fc2bac500b6903f9ada687698b36668ca9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83c6af9942d44392042fb6b7ed91bd2855b5b1d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c6af9942d44392042fb6b7ed91bd2855b5b1d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83c6af9942d44392042fb6b7ed91bd2855b5b1d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83c6af9942d44392042fb6b7ed91bd2855b5b1d6/comments", "author": null, "committer": null, "parents": [{"sha": "5573cb39182adccc522b7e1548a4eb43da974c5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5573cb39182adccc522b7e1548a4eb43da974c5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5573cb39182adccc522b7e1548a4eb43da974c5e"}], "stats": {"total": 233, "additions": 233, "deletions": 0}, "files": [{"sha": "ca29ecca38932dc32e6d5846c19c1a6b9ff99593", "filename": "gcc/ChangeLog", "status": "modified", "additions": 233, "deletions": 0, "changes": 233, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83c6af9942d44392042fb6b7ed91bd2855b5b1d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83c6af9942d44392042fb6b7ed91bd2855b5b1d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83c6af9942d44392042fb6b7ed91bd2855b5b1d6", "patch": "@@ -1,3 +1,236 @@\n+2001-11-07  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* doc/invoke.texi: Add -maltivec, -mno-altivec, and -mabi=altivec\n+\tfor rs6000.\n+\n+\t* config/rs6000/rs6000.h (MASK_ALTIVEC): New.\n+\t(TARGET_ALTIVEC): New.\n+\t(TARGET_SWITCHES): Add altivec.\n+\t(FIRST_PSEUDO_REGISTER): Change to 109.\n+\t(CALL_USED_REGISTERS): Same.\n+\t(FIRST_ALTIVEC_REGNO): New.\n+\t(LAST_ALTIVEC_REGNO): New.\n+\t(ALTIVEC_REGNO_P): New.\n+\t(UNITS_PER_ALTIVEC_WORD): New.\n+\t(ALTIVEC_VECTOR_MODE): New.\n+\t(FIXED_REGISTERS): Add altivec registers.\n+\t(REG_ALLOC_ORDER): Same.\n+\t(HARD_REGNO_NREGS): Adjust for altivec registers.\n+\t(HARD_REGNO_MODE_OK): Same.\n+\t(MODES_TIEABLE_P): Same.\n+\t(REGISTER_MOVE_COST): Same.\n+\t(REGNO_REG_CLASS): Same.\n+\t(reg_class): Add ALTIVEC_REGS.\n+\t(REG_CLASS_NAMES): Same.\n+\t(REG_CLASS_CONTENTS): Same.\n+\t(REG_CLASS_FROM_LETTER): Add 'v' constraint for ALTIVEC_REGS.\n+\t(ALTIVEC_ARG_RETURN): New.\n+\t(FUNCTION_VALUE): Handle VECTOR_TYPE.\n+\t(LIBCALL_VALUE): Handle altivec vector modes.\n+\t(VECTOR_MODE_SUPPORTED_P): New.\n+\t(ALTIVEC_ARG_MIN_REG): New.\n+\t(ALTIVEC_ARG_MAX_REG): New.\n+\t(ALTIVEC_ARG_NUM_REG): New.\n+\t(FUNCTION_VALUE_REGNO_P): Return true for altivec return register.\n+\t(FUNCTION_ARG_REGNO_P): Support passing args in altivec registers.\n+\t(REGISTER_NAMES): Add altivec regs.\n+\t(DEBUG_REGISTER_NAMES): Same.\n+\t(ADDITIONAL_REGISTER_NAMES): Same.\n+\t(rs6000_builtins): New.\n+\t(MD_EXPAND_BUILTIN): New.\n+\t(MD_INIT_BUILTINS): New.\n+\t(LEGITIMATE_OFFSET_ADDRESS_P): This addressing mode is not valid\n+\tfor AltiVec instructions.\n+\t(LEGITIMATE_LO_SUM_ADDRESS_P): Same.\n+\t(HARD_REGNO_MODE_OK): Altivec modes can only go in altivec\n+\tregisters.\n+\t(SECONDARY_MEMORY_NEEDED): We need memory to copy vector modes.\n+\t(TARGET_SWITCHES): Add no-altivec.\n+\t(DATA_ALIGNMENT): Align vectors to 128 bits.\n+\t(TARGET_OPTIONS): Add abi= option.\n+\tAdd rs6000_abi_string extern.\n+\t(LOCAL_ALIGNMENT): New.\n+\t(CPP_CPU_SPEC): Define __ALTIVEC__ when -maltivec.\n+\t(MASK_ALTIVEC_ABI): New.\n+\t(TARGET_ALTIVEC_ABI): New.\n+\t(CONDITIONAL_REGISTER_USAGE): Set first 20 AltiVec registers to\n+\tcall-saved.\n+\t(STACK_BOUNDARY): Adjust for altivec.\n+\t(BIGGEST_ALIGNMENT): Same.\n+\t(rs6000_args): Add vregno.\n+\t(USE_ALTIVEC_FOR_ARG_P): New.\n+\t(FIXED_REGISTERS): Add vrsave register.\n+\t(CALL_USED_REGISTERS): Same.\n+\t(CONDITIONAL_REGISTER_USAGE): Set VRSAVE info.\n+\t(VRSAVE_REGNO): New.\n+\t(reg_class): Add VRSAVE_REGS.\n+\t(REG_CLASS_NAMES): Same.\n+\t(REG_CLASS_CONTENTS): Same.\n+\t(REGNO_REG_CLASS): Same.\n+\t\n+\t* config/rs6000/sysv4.h (STACK_BOUNDARY): Adjust for altivec.\n+\t(ABI_STACK_BOUNDARY): Same.\n+\t(BIGGEST_ALIGNMENT): Same.\n+\t(ADJUST_FIELD_ALIGN): Remove undef.  Define anew.\n+\t(ROUND_TYPE_ALIGN): Same.\n+\t\n+\t* config/rs6000/aix.h (ROUND_TYPE_ALIGN): Change BIGGEST_ALIGNMENT\n+\tto 64.\n+\n+\t* config/rs6000/rs6000.c (rs6000_expand_builtin): New.\n+\t(altivec_expand_builtin): New.\n+\t(altivec_init_builtins): New.\n+\t(TARGET_EXPAND_BUILTIN): New.\n+\t(TARGET_INIT_BUILTINS): New.\n+\t(rs6000_init_builtins): New.\n+\t(struct builtin_description): New.\n+\t(bdesc_2arg): New.\n+\t(rs6000_reg_names): Add altivec registers.\n+\t(alt_reg_names): Same.\n+\t(secondary_reload_class): Altivec regs can hold altivec regs and\n+\tmemory.\n+\t(rs6000_emit_move): Force constants into memory for AltiVec moves.\n+\t(print_operand): Add 'y' case for printing altivec memory\n+\toperands.\n+\t(rs6000_legitimize_address): Legitimize vector addresses into\n+\t[REG+REG] or [REG].\n+\t(altivec_expand_binop_builtin): New.\n+\tNew string rs6000_current_abi.\n+\t(rs6000_override_options): Call rs6000_parse_abi_options.\n+\t(rs6000_parse_abi_options): New.\n+\t(function_arg_boundary): Vector arguments must be 16\n+\tbyte aligned.\n+\t(function_arg_advance): Handle vector arguments.\n+\t(function_arg_partial_nregs): Same.\n+\t(init_cumulative_args): Same.\n+\t(function_arg): Same.\n+\n+\t* config/rs6000/rs6000.md (altivec_lvx): New.\n+\t(type): Add altivec attribute.\n+\t(movv4si): New.\n+\t(*movv4si_internal): New.\n+\t(movv16qi): New.\n+\t(*movv16qi_internal): New.\n+\t(movv8hi): New.\n+\t(*movv8hi_internal1): New.\n+\t(movv4sf): New.\n+\t(*movv4sf_internal1): New.\n+\t(altivec_stvx): New.\n+\t(vaddubm): New.\n+\t(vadduhm): New.\n+\t(vadduwm): New.\n+\t(vaddfp): New.\n+\t(vaddcuw): New.\n+\t(vaddubs): New.\n+\t(vaddsbs): New.\n+\t(vadduhs): New.\n+\t(vaddshs): New.\n+\t(vadduws): New.\n+\t(vaddsws): New.\n+\t(vand): New.\n+\t(vandc): New.\n+\t(vavgub): New.\n+\t(vavgsb): New.\n+\t(vavguh): New.\n+\t(vavgsh): New.\n+\t(vavguw): New.\n+\t(vavgsw): New.\n+\t(vcmpbfp): New.\n+\t(vcmpequb): New.\n+\t(vcmpequh): New.\n+\t(vcmpequw): New.\n+\t(vcmpeqfp): New.\n+\t(vcmpgefp): New.\n+\t(vcmpgtub): New.\n+\t(vcmpgtsb): New.\n+\t(vcmpgtuh): New.\n+\t(vcmpgtsh): New.\n+\t(vcmpgtuw): New.\n+\t(vcmpgtsw): New.\n+\t(vcmpgtfp): New.\n+\t(vcmpgefp): New.\n+\t(vcmpgtub): New.\n+\t(vcmpgtsb): New.\n+\t(vcmpgtuh): New.\n+\t(vcmpgtsh): New.\n+\t(vcmpgtuw): New.\n+\t(vcmpgtsw): New.\n+\t(vcmpgtfp): New.\n+\t(vmaxub): New.\n+\t(vmaxsb): New.\n+\t(vmaxuh): New.\n+\t(vmaxsh): New.\n+\t(vmaxuw): New.\n+\t(vmaxsw): New.\n+\t(vmaxfp): New.\n+\t(vmrghb): New.\n+\t(vmrghh): New.\n+\t(vmrghw): New.\n+\t(vmrglb): New.\n+\t(vmrglh): New.\n+\t(vmrglw): New.\n+\t(vminub): New.\n+\t(vminsb): New.\n+\t(vminuh): New.\n+\t(vminsh): New.\n+\t(vminuw): New.\n+\t(vminsw): New.\n+\t(vminfp): New.\n+\t(vmuleub): New.\n+\t(vmulesb): New.\n+\t(vmuleuh): New.\n+\t(vmulesh): New.\n+\t(vmuloub): New.\n+\t(vmulosb): New.\n+\t(vmulouh): New.\n+\t(vmulosh): New.\n+\t(vnor): New.\n+\t(vor): New.\n+\t(vpkuhum): New.\n+\t(vpkuwum): New.\n+\t(vpkpx): New.\n+\t(vpkuhss): New.\n+\t(vpkshss): New.\n+\t(vpkuwss): New.\n+\t(vpkswss): New.\n+\t(vpkuhus): New.\n+\t(vpkshus): New.\n+\t(vpkuwus): New.\n+\t(vpkswus): New.\n+\t(vrlb): New.\n+\t(vrlh): New.\n+\t(vrlw): New.\n+\t(vslb): New.\n+\t(vslh): New.\n+\t(vslw): New.\n+\t(vsl): New.\n+\t(vslo): New.\n+\t(vsrb): New.\n+\t(vrsh): New.\n+\t(vrsw): New.\n+\t(vsrab): New.\n+\t(vsrah): New.\n+\t(vsraw): New.\n+\t(vsr): New.\n+\t(vsro): New.\n+\t(vsububm): New.\n+\t(vsubuhm): New.\n+\t(vsubuwm): New.\n+\t(vsubfp): New.\n+\t(vsubcuw): New.\n+\t(vsububs): New.\n+\t(vsubsbs): New.\n+\t(vsubuhs): New.\n+\t(vsubshs): New.\n+\t(vsubuws): New.\n+\t(vsubsws): New.\n+\t(vsum4ubs): New.\n+\t(vsum4sbs): New.\n+\t(vsum4shs): New.\n+\t(vsum2sws): New.\n+\t(vsumsws): New.\n+\t(vxor): New.\n+\n 2001-11-07  Daniel Berlin  <dan@cgsoftware.com>\n \n         * Makefile.in (df.o): Add fibheap.h to dependencies."}]}