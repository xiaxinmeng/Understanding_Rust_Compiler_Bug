{"sha": "ec7ef53312303ddcf5fa22abd1620d396b1218e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM3ZWY1MzMxMjMwM2RkY2Y1ZmEyMmFiZDE2MjBkMzk2YjEyMThlNw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2013-11-19T17:12:14Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2013-11-19T17:12:14Z"}, "message": "ppc64-abi-2.c (MAKE_SLOT): New macro to construct parameter slot value in endian-independent way.\n\n\t* gcc.target/powerpc/ppc64-abi-2.c (MAKE_SLOT): New macro to\n\tconstruct parameter slot value in endian-independent way.\n\t(fcevv, fciievv, fcvevv): Use it.\n\nFrom-SVN: r205047", "tree": {"sha": "7eee18bb58e54956861ad47cd7fb48eb80155126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eee18bb58e54956861ad47cd7fb48eb80155126"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec7ef53312303ddcf5fa22abd1620d396b1218e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec7ef53312303ddcf5fa22abd1620d396b1218e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec7ef53312303ddcf5fa22abd1620d396b1218e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec7ef53312303ddcf5fa22abd1620d396b1218e7/comments", "author": null, "committer": null, "parents": [{"sha": "2d04cc301b37691506e287be5ddfd757b7d64c23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d04cc301b37691506e287be5ddfd757b7d64c23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d04cc301b37691506e287be5ddfd757b7d64c23"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "7235aaf8a31b290688900e082f63749a06f28dbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7ef53312303ddcf5fa22abd1620d396b1218e7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7ef53312303ddcf5fa22abd1620d396b1218e7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec7ef53312303ddcf5fa22abd1620d396b1218e7", "patch": "@@ -1,3 +1,9 @@\n+2013-11-19  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\t* gcc.target/powerpc/ppc64-abi-2.c (MAKE_SLOT): New macro to\n+\tconstruct parameter slot value in endian-independent way.\n+\t(fcevv, fciievv, fcvevv): Use it.\n+\n 2013-11-19  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa/devirt9.C: Fix prevoius change."}, {"sha": "e4825973b113909f94c42b227fc45536e78de831", "filename": "gcc/testsuite/gcc.target/powerpc/ppc64-abi-2.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec7ef53312303ddcf5fa22abd1620d396b1218e7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec7ef53312303ddcf5fa22abd1620d396b1218e7/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fppc64-abi-2.c?ref=ec7ef53312303ddcf5fa22abd1620d396b1218e7", "patch": "@@ -121,6 +121,12 @@ typedef union\n   vector int v;\n } vector_int_t;\n \n+#ifdef __LITTLE_ENDIAN__\n+#define MAKE_SLOT(x, y) ((long)x | ((long)y << 32))\n+#else\n+#define MAKE_SLOT(x, y) ((long)y | ((long)x << 32))\n+#endif\n+\n /* Paramter passing.\n    s : gpr 3\n    v : vpr 2\n@@ -228,8 +234,8 @@ fcevv (char *s, ...)\n   sp = __builtin_frame_address(0);\n   sp = sp->backchain;\n   \n-  if (sp->slot[2].l != 0x100000002ULL\n-      || sp->slot[4].l != 0x500000006ULL)\n+  if (sp->slot[2].l != MAKE_SLOT (1, 2)\n+      || sp->slot[4].l !=  MAKE_SLOT (5, 6))\n     abort();\n }\n \n@@ -270,8 +276,8 @@ fciievv (char *s, int i, int j, ...)\n   sp = __builtin_frame_address(0);\n   sp = sp->backchain;\n   \n-  if (sp->slot[4].l != 0x100000002ULL\n-      || sp->slot[6].l != 0x500000006ULL)\n+  if (sp->slot[4].l != MAKE_SLOT (1, 2)\n+      || sp->slot[6].l !=  MAKE_SLOT (5, 6))\n     abort();\n }\n \n@@ -298,8 +304,8 @@ fcvevv (char *s, vector int x, ...)\n   sp = __builtin_frame_address(0);\n   sp = sp->backchain;\n   \n-  if (sp->slot[4].l != 0x100000002ULL\n-      || sp->slot[6].l != 0x500000006ULL)\n+  if (sp->slot[4].l != MAKE_SLOT (1, 2)\n+      || sp->slot[6].l !=  MAKE_SLOT (5, 6))\n     abort();\n }\n "}]}