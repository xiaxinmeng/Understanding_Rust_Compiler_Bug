{"sha": "7406fc154b95a878a420977544498a1fa10e438a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQwNmZjMTU0Yjk1YTg3OGE0MjA5Nzc1NDQ0OThhMWZhMTBlNDM4YQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2008-08-01T10:33:21Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2008-08-01T10:33:21Z"}, "message": "sem_prag.adb (Check_Form_Of_Interface_Name): Refine and improve warnings\n\n2008-08-01  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb (Check_Form_Of_Interface_Name): Refine and improve\n\twarnings\n\nFrom-SVN: r138506", "tree": {"sha": "7eb3ff017949b0f33fa38966af0dc7e55aea3589", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb3ff017949b0f33fa38966af0dc7e55aea3589"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7406fc154b95a878a420977544498a1fa10e438a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7406fc154b95a878a420977544498a1fa10e438a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7406fc154b95a878a420977544498a1fa10e438a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7406fc154b95a878a420977544498a1fa10e438a/comments", "author": null, "committer": null, "parents": [{"sha": "0c2466035d83c57a77653edc273ff783ec8c4847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c2466035d83c57a77653edc273ff783ec8c4847", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c2466035d83c57a77653edc273ff783ec8c4847"}], "stats": {"total": 60, "additions": 41, "deletions": 19}, "files": [{"sha": "491678eb5bd7a3c7581b9d8d3081a7239632508d", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 41, "deletions": 19, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7406fc154b95a878a420977544498a1fa10e438a/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7406fc154b95a878a420977544498a1fa10e438a/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=7406fc154b95a878a420977544498a1fa10e438a", "patch": "@@ -3890,17 +3890,23 @@ package body Sem_Prag is\n          Link_Nam   : Node_Id;\n          String_Val : String_Id;\n \n-         procedure Check_Form_Of_Interface_Name (SN : Node_Id);\n+         procedure Check_Form_Of_Interface_Name\n+           (SN            : Node_Id;\n+            Ext_Name_Case : Boolean);\n          --  SN is a string literal node for an interface name. This routine\n          --  performs some minimal checks that the name is reasonable. In\n          --  particular that no spaces or other obviously incorrect characters\n          --  appear. This is only a warning, since any characters are allowed.\n+         --  Ext_Name_Case is True for an External_Name, False for a Link_Name.\n \n          ----------------------------------\n          -- Check_Form_Of_Interface_Name --\n          ----------------------------------\n \n-         procedure Check_Form_Of_Interface_Name (SN : Node_Id) is\n+         procedure Check_Form_Of_Interface_Name\n+           (SN            : Node_Id;\n+            Ext_Name_Case : Boolean)\n+         is\n             S  : constant String_Id := Strval (Expr_Value_S (SN));\n             SL : constant Nat       := String_Length (S);\n             C  : Char_Code;\n@@ -3913,15 +3919,31 @@ package body Sem_Prag is\n             for J in 1 .. SL loop\n                C := Get_String_Char (S, J);\n \n-               if Warn_On_Export_Import\n-                 and then\n-                   (not In_Character_Range (C)\n-                     or else (Get_Character (C) = ' '\n-                               and then VM_Target /= CLI_Target)\n-                     or else Get_Character (C) = ',')\n+               --  Look for dubious character and issue unconditional warning.\n+               --  Definitely dubious if not in character range.\n+\n+               if not In_Character_Range (C)\n+\n+                  --  Dubious if comma\n+\n+                  or else Get_Character (C) = ','\n+\n+                  --  For all cases except link names on a CLI target, spaces\n+                  --  and slashes are also dubious (in CLI for link names, we\n+                  --  use spaces and possibly slashes for special purposes).\n+\n+                  --  Where is this usage documented ???\n+\n+                  or else ((Ext_Name_Case or else VM_Target /= CLI_Target)\n+                             and then (Get_Character (C) = ' '\n+                                         or else\n+                                       Get_Character (C) = '/'\n+                                         or else\n+                                       Get_Character (C) = '\\'))\n                then\n-                  Error_Msg_N\n-                    (\"?interface name contains illegal character\", SN);\n+                  Error_Msg\n+                    (\"?interface name contains illegal character\",\n+                     Sloc (SN) + Source_Ptr (J));\n                end if;\n             end loop;\n          end Check_Form_Of_Interface_Name;\n@@ -3966,13 +3988,13 @@ package body Sem_Prag is\n \n          if Present (Ext_Nam) then\n             Check_Arg_Is_Static_Expression (Ext_Nam, Standard_String);\n-            Check_Form_Of_Interface_Name (Ext_Nam);\n+            Check_Form_Of_Interface_Name (Ext_Nam, Ext_Name_Case => True);\n \n-            --  Verify that the external name is not the name of a local\n-            --  entity, which would hide the imported one and lead to\n-            --  run-time surprises. The problem can only arise for entities\n-            --  declared in a package body (otherwise the external name is\n-            --  fully qualified and won't conflict).\n+            --  Verify that external name is not the name of a local entity,\n+            --  which would hide the imported one and could lead to run-time\n+            --  surprises. The problem can only arise for entities declared in\n+            --  a package body (otherwise the external name is fully qualified\n+            --  and will not conflict).\n \n             declare\n                Nam : Name_Id;\n@@ -3995,10 +4017,10 @@ package body Sem_Prag is\n                      Par := Parent (E);\n                      while Present (Par) loop\n                         if Nkind (Par) = N_Package_Body then\n-                           Error_Msg_Sloc  := Sloc (E);\n+                           Error_Msg_Sloc := Sloc (E);\n                            Error_Msg_NE\n                              (\"imported entity is hidden by & declared#\",\n-                                 Ext_Arg, E);\n+                              Ext_Arg, E);\n                            exit;\n                         end if;\n \n@@ -4011,7 +4033,7 @@ package body Sem_Prag is\n \n          if Present (Link_Nam) then\n             Check_Arg_Is_Static_Expression (Link_Nam, Standard_String);\n-            Check_Form_Of_Interface_Name (Link_Nam);\n+            Check_Form_Of_Interface_Name (Link_Nam, Ext_Name_Case => False);\n          end if;\n \n          --  If there is no link name, just set the external name"}]}