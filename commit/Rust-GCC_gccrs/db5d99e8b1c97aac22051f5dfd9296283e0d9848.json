{"sha": "db5d99e8b1c97aac22051f5dfd9296283e0d9848", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGI1ZDk5ZThiMWM5N2FhYzIyMDUxZjVkZmQ5Mjk2MjgzZTBkOTg0OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-01-04T11:34:24Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-01-04T11:34:24Z"}, "message": "sso_string_base.h (__sso_string_base<>::_M_dataplus): Use _CharT_alloc_type as base class.\n\n2006-01-04  Paolo Carlini  <pcarlini@suse.de>\n\n        * include/ext/sso_string_base.h (__sso_string_base<>::_M_dataplus):\n        Use _CharT_alloc_type as base class.\n        (_M_get_allocator, _M_swap, _M_create, _M_destroy): Adjust.\n        * include/ext/vstring.h (get_allocator): Tidy.\n\n2006-01-04  Paolo Carlini  <pcarlini@suse.de>\n\n\tImplement Option 3 of DR 431 for all the containers.\n\t* include/bits/allocator.h (struct __alloc_swap): Add, swaps\n\tallocators, optimized to nothing in case they are empty.\n\t* include/bits/stl_deque.h (deque<>::swap): Use it.\n\t* include/bits/stl_list.h (list<>::swap): Likewise.\n\t* include/bits/stl_tree.h (_Rb_tree<>::swap): Likewise.\n\t* include/bits/stl_vector.h (vector<>::swap): Likewise.\n\t* include/tr1/hashtable (hashtable<>::swap): Likewise.\n\t* include/ext/rc_string_base.h (__rc_string_base<>::_M_swap):\n\tLikewise.\n\t* include/ext/sso_string_base.h (__sso_string_base<>::_M_swap):\n\tLikewise.\n\t* include/ext/vstring_util.h (__vstring_utility<>::_Alloc_hider):\n\tClean-up (now vstring uses the generic __alloc_swap facility).\n\t* include/tr1/unordered_map: Adjust includes.\n\t* include/tr1/unordered_set: Likewise.\n\t* docs/html/ext/howto.html: Add an entry for DR 431.\n\t* testsuite/23_containers/deque/modifiers/swap.cc: Move to...\n\t* testsuite/23_containers/deque/modifiers/swap/1.cc: ... here.\t\t\n\t* testsuite/23_containers/deque/modifiers/swap/2.cc: New.\n\t* testsuite/23_containers/deque/modifiers/swap/3.cc: New.\n\t* testsuite/23_containers/list/modifiers/swap.cc: Move to...\n\t* testsuite/23_containers/list/modifiers/swap/1.cc: ... here.\t\t\n\t* testsuite/23_containers/list/modifiers/swap/2.cc: New.\n\t* testsuite/23_containers/list/modifiers/swap/3.cc: New.\n\t* testsuite/23_containers/vector/modifiers/swap.cc: Move to...\n\t* testsuite/23_containers/vector/modifiers/swap/1.cc: ... here.\t\t\n\t* testsuite/23_containers/vector/modifiers/swap/2.cc: New.\n\t* testsuite/23_containers/vector/modifiers/swap/3.cc: New.\n\t* testsuite/23_containers/set/modifiers/swap.cc: Move to...\n\t* testsuite/23_containers/set/modifiers/swap/1.cc: ... here.\t\t\n\t* testsuite/23_containers/set/modifiers/swap/2.cc: New.\n\t* testsuite/23_containers/set/modifiers/swap/3.cc: New.\n\t* testsuite/23_containers/map/modifiers/swap.cc: Move to...\n\t* testsuite/23_containers/map/modifiers/swap/1.cc: ... here.\t\t\n\t* testsuite/23_containers/map/modifiers/swap/2.cc: New.\n\t* testsuite/23_containers/map/modifiers/swap/3.cc: New.\n\t* testsuite/23_containers/multiset/modifiers/swap.cc: Move to...\n\t* testsuite/23_containers/multiset/modifiers/swap/1.cc: ... here.\t\t\n\t* testsuite/23_containers/multiset/modifiers/swap/2.cc: New.\n\t* testsuite/23_containers/multiset/modifiers/swap/3.cc: New.\n\t* testsuite/23_containers/multimap/modifiers/swap.cc: Move to...\n\t* testsuite/23_containers/multimap/modifiers/swap/1.cc: ... here.\t\t\n\t* testsuite/23_containers/multimap/modifiers/swap/2.cc: New.\n\t* testsuite/23_containers/multimap/modifiers/swap/3.cc: New.\n\t* testsuite/tr1/6_containers/unordered/swap/unordered_set/1.cc: New.\t\n\t* testsuite/tr1/6_containers/unordered/swap/unordered_set/2.cc: New.\n\t* testsuite/tr1/6_containers/unordered/swap/unordered_map/1.cc: New.\t\n\t* testsuite/tr1/6_containers/unordered/swap/unordered_map/2.cc: New.\n\t* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/1.cc: New.\t\n\t* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/2.cc: New.\n\t* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/1.cc: New.\t\n\t* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/2.cc: New.\n\nFrom-SVN: r109323", "tree": {"sha": "af413b37ecc3b2ea408b30f8878196422fc536cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af413b37ecc3b2ea408b30f8878196422fc536cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/db5d99e8b1c97aac22051f5dfd9296283e0d9848", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db5d99e8b1c97aac22051f5dfd9296283e0d9848", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db5d99e8b1c97aac22051f5dfd9296283e0d9848", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db5d99e8b1c97aac22051f5dfd9296283e0d9848/comments", "author": null, "committer": null, "parents": [{"sha": "1f0e2ace93ef562291720eab89f23c1637ed4ffd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f0e2ace93ef562291720eab89f23c1637ed4ffd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f0e2ace93ef562291720eab89f23c1637ed4ffd"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "5c7a8060dac7be6cd95f9b6df47166f728ef6236", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 65, "deletions": 2, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/db5d99e8b1c97aac22051f5dfd9296283e0d9848/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/db5d99e8b1c97aac22051f5dfd9296283e0d9848/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=db5d99e8b1c97aac22051f5dfd9296283e0d9848", "patch": "@@ -1,3 +1,66 @@\n+2006-01-04  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/ext/sso_string_base.h (__sso_string_base<>::_M_dataplus):\n+\tUse _CharT_alloc_type as base class.\n+\t(_M_get_allocator, _M_swap, _M_create, _M_destroy): Adjust.\n+\t* include/ext/vstring.h (get_allocator): Tidy.\n+\n+2006-01-04  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tImplement Option 3 of DR 431 for all the containers.\n+\t* include/bits/allocator.h (struct __alloc_swap): Add, swaps\n+\tallocators, optimized to nothing in case they are empty.\n+\t* include/bits/stl_deque.h (deque<>::swap): Use it.\n+\t* include/bits/stl_list.h (list<>::swap): Likewise.\n+\t* include/bits/stl_tree.h (_Rb_tree<>::swap): Likewise.\n+\t* include/bits/stl_vector.h (vector<>::swap): Likewise.\n+\t* include/tr1/hashtable (hashtable<>::swap): Likewise.\n+\t* include/ext/rc_string_base.h (__rc_string_base<>::_M_swap):\n+\tLikewise.\n+\t* include/ext/sso_string_base.h (__sso_string_base<>::_M_swap):\n+\tLikewise.\n+\t* include/ext/vstring_util.h (__vstring_utility<>::_Alloc_hider):\n+\tClean-up (now vstring uses the generic __alloc_swap facility).\n+\t* include/tr1/unordered_map: Adjust includes.\n+\t* include/tr1/unordered_set: Likewise.\n+\t* docs/html/ext/howto.html: Add an entry for DR 431.\n+\t* testsuite/23_containers/deque/modifiers/swap.cc: Move to...\n+\t* testsuite/23_containers/deque/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/deque/modifiers/swap/2.cc: New.\n+\t* testsuite/23_containers/deque/modifiers/swap/3.cc: New.\n+\t* testsuite/23_containers/list/modifiers/swap.cc: Move to...\n+\t* testsuite/23_containers/list/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/list/modifiers/swap/2.cc: New.\n+\t* testsuite/23_containers/list/modifiers/swap/3.cc: New.\n+\t* testsuite/23_containers/vector/modifiers/swap.cc: Move to...\n+\t* testsuite/23_containers/vector/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/vector/modifiers/swap/2.cc: New.\n+\t* testsuite/23_containers/vector/modifiers/swap/3.cc: New.\n+\t* testsuite/23_containers/set/modifiers/swap.cc: Move to...\n+\t* testsuite/23_containers/set/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/set/modifiers/swap/2.cc: New.\n+\t* testsuite/23_containers/set/modifiers/swap/3.cc: New.\n+\t* testsuite/23_containers/map/modifiers/swap.cc: Move to...\n+\t* testsuite/23_containers/map/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/map/modifiers/swap/2.cc: New.\n+\t* testsuite/23_containers/map/modifiers/swap/3.cc: New.\n+\t* testsuite/23_containers/multiset/modifiers/swap.cc: Move to...\n+\t* testsuite/23_containers/multiset/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/multiset/modifiers/swap/2.cc: New.\n+\t* testsuite/23_containers/multiset/modifiers/swap/3.cc: New.\n+\t* testsuite/23_containers/multimap/modifiers/swap.cc: Move to...\n+\t* testsuite/23_containers/multimap/modifiers/swap/1.cc: ... here.\t\t\n+\t* testsuite/23_containers/multimap/modifiers/swap/2.cc: New.\n+\t* testsuite/23_containers/multimap/modifiers/swap/3.cc: New.\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_set/1.cc: New.\t\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_set/2.cc: New.\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_map/1.cc: New.\t\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_map/2.cc: New.\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/1.cc: New.\t\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_multiset/2.cc: New.\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/1.cc: New.\t\n+\t* testsuite/tr1/6_containers/unordered/swap/unordered_multimap/2.cc: New.\n+\n 2006-01-03  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/stl_list.h (_List_base<>::_M_get_Node_allocator): Add.\n@@ -53,8 +116,8 @@\n \t(unsigned long long), operator<<(double), operator<<(float),\n \toperator<<(long double), operator<<(const void*): Use it.\n \t* include/bits/ostream.tcc (basic_ostream<>::_M_insert): Define.\n-\t* src/istream-inst.cc: Add _M_insert instantiations.\n-\t* src/ostream-inst.cc: Add _M_extract instantiations.\n+\t* src/istream-inst.cc: Add _M_extract instantiations.\n+\t* src/ostream-inst.cc: Add _M_insert instantiations.\n \t* config/abi/pre/gnu.ver: Export the new symbols @GLIBCXX_3.4.7;\n \tdetail existing @GLIBCXX_3.4 exports of basic_ostream, num_put,\n \tmoney_put, etc., symbols to avoid exporting _M_insert symbols"}]}