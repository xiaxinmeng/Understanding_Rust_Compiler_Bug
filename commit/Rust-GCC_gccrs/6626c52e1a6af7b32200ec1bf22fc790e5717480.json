{"sha": "6626c52e1a6af7b32200ec1bf22fc790e5717480", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjYyNmM1MmUxYTZhZjdiMzIyMDBlYzFiZjIyZmM3OTBlNTcxNzQ4MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-05-13T17:54:00Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-05-13T17:54:00Z"}, "message": "re PR c++/61151 (ICE with lambda)\n\n\tPR c++/61151\n\t* semantics.c (is_this_parameter): Allow capture proxies too.\n\nFrom-SVN: r210394", "tree": {"sha": "a71adf45048e5da014158f460fbf411075e369fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a71adf45048e5da014158f460fbf411075e369fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6626c52e1a6af7b32200ec1bf22fc790e5717480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6626c52e1a6af7b32200ec1bf22fc790e5717480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6626c52e1a6af7b32200ec1bf22fc790e5717480", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6626c52e1a6af7b32200ec1bf22fc790e5717480/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b107f6b91d1b44ec60bd5ce8b51218a84aac98a"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "a26472c333f9b1fd1c231711d314cc170b6d7de9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6626c52e1a6af7b32200ec1bf22fc790e5717480/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6626c52e1a6af7b32200ec1bf22fc790e5717480/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6626c52e1a6af7b32200ec1bf22fc790e5717480", "patch": "@@ -1,3 +1,8 @@\n+2014-05-13  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/61151\n+\t* semantics.c (is_this_parameter): Allow capture proxies too.\n+\n 2014-05-12  Jason Merrill  <jason@redhat.com>\n \n \t* call.c (maybe_print_user_conv_context): New."}, {"sha": "583b87048a96b934abd0cfccbee1fabfc5239b0a", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6626c52e1a6af7b32200ec1bf22fc790e5717480/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6626c52e1a6af7b32200ec1bf22fc790e5717480/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=6626c52e1a6af7b32200ec1bf22fc790e5717480", "patch": "@@ -8158,8 +8158,10 @@ maybe_initialize_constexpr_call_table (void)\n bool\n is_this_parameter (tree t)\n {\n-  return (TREE_CODE (t) == PARM_DECL\n-\t  && DECL_NAME (t) == this_identifier);\n+  if (!DECL_P (t) || DECL_NAME (t) != this_identifier)\n+    return false;\n+  gcc_assert (TREE_CODE (t) == PARM_DECL || is_capture_proxy (t));\n+  return true;\n }\n \n /* We have an expression tree T that represents a call, either CALL_EXPR"}, {"sha": "fec2da615b67ba0ffe54c1c65cd3359d268412e5", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-this18.C", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6626c52e1a6af7b32200ec1bf22fc790e5717480/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6626c52e1a6af7b32200ec1bf22fc790e5717480/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-this18.C?ref=6626c52e1a6af7b32200ec1bf22fc790e5717480", "patch": "@@ -0,0 +1,30 @@\n+// PR c++/61151\n+// { dg-do compile { target c++11 } }\n+\n+struct B\n+{\n+  void foo () {}\n+};\n+\n+template <class>\n+struct A\n+{\n+  template <class> void bar ();\n+  B a;\n+};\n+\n+template <class T>\n+template <class U>\n+void\n+A<T>::bar ()\n+{\n+  auto f = [this] () { auto g = [=] () { a.foo (); }; g (); };\n+  f ();\n+}\n+\n+int\n+main ()\n+{\n+  A<int> a;\n+  a.bar <int> ();\n+}"}]}