{"sha": "7caa21fc327a7b32b707d906fa05683e992fc3fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NhYTIxZmMzMjdhN2IzMmI3MDdkOTA2ZmEwNTY4M2U5OTJmYzNmYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-11-18T16:13:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-11-18T16:13:09Z"}, "message": "lto-streamer-in.c (input_gimple_stmt): Assert that we find a valid field decl if checking is enabled.\n\n2009-11-18  Richard Guenther  <rguenther@suse.de>\n\n\t* lto-streamer-in.c (input_gimple_stmt): Assert that we find\n\ta valid field decl if checking is enabled.\n\nFrom-SVN: r154298", "tree": {"sha": "54af1c9d3b5fde22f6240af579858a1d6e9c2241", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/54af1c9d3b5fde22f6240af579858a1d6e9c2241"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7caa21fc327a7b32b707d906fa05683e992fc3fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7caa21fc327a7b32b707d906fa05683e992fc3fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7caa21fc327a7b32b707d906fa05683e992fc3fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7caa21fc327a7b32b707d906fa05683e992fc3fb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "647e7a92de9c6fa599470926c989ca78784d8cbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647e7a92de9c6fa599470926c989ca78784d8cbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/647e7a92de9c6fa599470926c989ca78784d8cbe"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "d316b744e037373175696b8f84a5384f17b87f03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7caa21fc327a7b32b707d906fa05683e992fc3fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7caa21fc327a7b32b707d906fa05683e992fc3fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7caa21fc327a7b32b707d906fa05683e992fc3fb", "patch": "@@ -1,3 +1,8 @@\n+2009-11-18  Richard Guenther  <rguenther@suse.de>\n+\n+\t* lto-streamer-in.c (input_gimple_stmt): Assert that we find\n+\ta valid field decl if checking is enabled.\n+\n 2009-11-18  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.h (struct ipa_param_call_note): New field lto_stmt_uid."}, {"sha": "751e70472e4d852ea683c598f23380a1ed0e00da", "filename": "gcc/lto-streamer-in.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7caa21fc327a7b32b707d906fa05683e992fc3fb/gcc%2Flto-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7caa21fc327a7b32b707d906fa05683e992fc3fb/gcc%2Flto-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-streamer-in.c?ref=7caa21fc327a7b32b707d906fa05683e992fc3fb", "patch": "@@ -1090,7 +1090,11 @@ input_gimple_stmt (struct lto_input_block *ib, struct data_in *data_in,\n \t\t    }\n \t\t  /* In case of type mismatches across units we can fail\n \t\t     to unify some types and thus not find a proper\n-\t\t     field-decl here.  Just do nothing in this case.  */\n+\t\t     field-decl here.  So only assert here if checking\n+\t\t     is enabled.  */\n+#ifdef ENABLE_CHECKING\n+\t\t  gcc_assert (tem != NULL_TREE);\n+#endif\n \t\t  if (tem != NULL_TREE)\n \t\t    TREE_OPERAND (op, 1) = tem;\n \t\t}"}]}