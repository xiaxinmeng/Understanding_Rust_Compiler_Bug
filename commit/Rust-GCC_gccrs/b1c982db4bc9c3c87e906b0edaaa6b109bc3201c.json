{"sha": "b1c982db4bc9c3c87e906b0edaaa6b109bc3201c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjOTgyZGI0YmM5YzNjODdlOTA2YjBlZGFhYTZiMTA5YmMzMjAxYw==", "commit": {"author": {"name": "Kai Tietz", "email": "ktietz@redhat.com", "date": "2012-02-22T19:38:30Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2012-02-22T19:38:30Z"}, "message": "devirt2.C: Add rule for *-*-mingw* target.\n\n        * g++.dg/opt/devirt2.C: Add rule for *-*-mingw* target.\n        * g++.dg/opt/pr48549.C (long): Replace by long by __PTRDIFF_TYPE__\n        derived pdiff_t type.\n        * g++.dg/torture/pr49720.C: Likewise\n\nFrom-SVN: r184490", "tree": {"sha": "85348fdd542266f03bdc603dff098e293975a29c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/85348fdd542266f03bdc603dff098e293975a29c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/comments", "author": null, "committer": null, "parents": [{"sha": "9517e33332fedbeb98a80a96b4ee434c4bca1023", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9517e33332fedbeb98a80a96b4ee434c4bca1023", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9517e33332fedbeb98a80a96b4ee434c4bca1023"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "4fd4341b5d9a7ca387175c684ad7f20cf049e756", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1c982db4bc9c3c87e906b0edaaa6b109bc3201c", "patch": "@@ -1,3 +1,10 @@\n+2012-02-22  Kai Tietz  <ktietz@redhat.com>\n+\n+\t* g++.dg/opt/devirt2.C: Add rule for *-*-mingw* target.\n+\t* g++.dg/opt/pr48549.C (long): Replace by long by __PTRDIFF_TYPE__\n+\tderived pdiff_t type.\n+\t* g++.dg/torture/pr49720.C: Likewise\n+\n 2012-02-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/52330"}, {"sha": "cf4842bd4df346d241ca8d9d0e7bf39403f5e23d", "filename": "gcc/testsuite/g++.dg/opt/devirt2.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdevirt2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdevirt2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fdevirt2.C?ref=b1c982db4bc9c3c87e906b0edaaa6b109bc3201c", "patch": "@@ -5,7 +5,9 @@\n // { dg-additional-options \"-mshort-calls\" {target epiphany-*-*} }\n // Using -mno-abicalls avoids a R_MIPS_JALR .reloc.\n // { dg-additional-options \"-mno-abicalls\" { target mips*-*-* } }\n-// { dg-final { scan-assembler-times \"xyzzy\" 2 { target { ! { alpha*-*-* hppa*-*-* ia64*-*-hpux* sparc*-*-* } } } } }\n+// { dg-final { scan-assembler-times \"xyzzy\" 2 { target { ! { alpha*-*-* hppa*-*-* ia64*-*-hpux* sparc*-*-* *-*-mingw* } } } } }\n+// For *-*-mingw* there is additionally one .def match\n+// { dg-final { scan-assembler-times \"xyzzy\" 3 { target *-*-mingw* } } }\n // The IA64 and HPPA compilers generate external declarations in addition\n // to the call so those scans need to be more specific.\n // { dg-final { scan-assembler-times \"br\\[^\\n\\]*xyzzy\" 2 { target ia64*-*-hpux* } } }"}, {"sha": "93a38e409b43510f3aa460c47242b7711b1b9057", "filename": "gcc/testsuite/g++.dg/opt/pr48549.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48549.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48549.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr48549.C?ref=b1c982db4bc9c3c87e906b0edaaa6b109bc3201c", "patch": "@@ -2,10 +2,13 @@\n // { dg-do compile }\n // { dg-options \"-fcompare-debug -O2\" }\n \n+__extension__ typedef __PTRDIFF_TYPE__ pdiff_t;\n+\n void\n foo (void *from, void *to)\n {\n-  long offset = reinterpret_cast <long>(to) - reinterpret_cast <long>(from);\n+  pdiff_t offset = reinterpret_cast <pdiff_t>(to)\n+\t\t   - reinterpret_cast <pdiff_t>(from);\n   if (offset != static_cast <int>(offset))\n     *(int *) 0xC0DE = 0;\n   reinterpret_cast <int *>(from)[1] = offset;"}, {"sha": "d2c69087d287cb6c7ce138d5c1b2562df5db32da", "filename": "gcc/testsuite/g++.dg/torture/pr49720.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49720.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c982db4bc9c3c87e906b0edaaa6b109bc3201c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49720.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr49720.C?ref=b1c982db4bc9c3c87e906b0edaaa6b109bc3201c", "patch": "@@ -1,8 +1,10 @@\n /* { dg-do compile } */\n \n+__extension__ typedef __PTRDIFF_TYPE__ pdiff_t;\n+\n extern char t_start[], t_end[], t_size[];\n bool foo (void)\n {\n-  long size = reinterpret_cast<long>(t_size);\n+  pdiff_t size = reinterpret_cast<pdiff_t>(t_size);\n   return (size == t_end - t_start);\n }"}]}