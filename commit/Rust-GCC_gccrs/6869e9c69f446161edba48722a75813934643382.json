{"sha": "6869e9c69f446161edba48722a75813934643382", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg2OWU5YzY5ZjQ0NjE2MWVkYmE0ODcyMmE3NTgxMzkzNDY0MzM4Mg==", "commit": {"author": {"name": "Fritz Reese", "email": "fritzoreese@gmail.com", "date": "2016-11-03T18:09:44Z"}, "committer": {"name": "Fritz Reese", "email": "foreese@gcc.gnu.org", "date": "2016-11-03T18:09:44Z"}, "message": "Default missing exponents to 0 with -fdec.\n\n\tgcc/fortran/\n\t* gfortran.texi: Document.\n\t* gfortran.h (gfc_dt): New field default_exp.\n\t* primary.c (match_real_constant): Default exponent with -fdec.\n\t* io.c (match_io): Set dt.default_exp with -fdec.\n\t* ioparm.def (IOPARM_dt_default_exp): New.\n\t* trans-io.c (build_dt): Set IOPARM_dt_default_exp with -fdec.\n\n\tlibgfortran/io/\n\t* io.h (IOPARM_DT_DEFAULT_EXP): New flag bit.\n\t* list_read.c (parse_real, read_real): Allow omission of exponent with\n\tIOPARM_DT_DEFAULT_EXP.\n\t* read.c (read_f): Ditto.\n\n\tgcc/testsuite/gfortran.dg/\n\t* dec_exp_1.f90, dec_exp_2.f90, dec_exp_3.f90: New testcases.\n\nFrom-SVN: r241828", "tree": {"sha": "4b3e9356f44befe3d696e42639572508aa2db76c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4b3e9356f44befe3d696e42639572508aa2db76c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6869e9c69f446161edba48722a75813934643382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6869e9c69f446161edba48722a75813934643382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6869e9c69f446161edba48722a75813934643382", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6869e9c69f446161edba48722a75813934643382/comments", "author": {"login": "fritzr", "id": 2230564, "node_id": "MDQ6VXNlcjIyMzA1NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2230564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fritzr", "html_url": "https://github.com/fritzr", "followers_url": "https://api.github.com/users/fritzr/followers", "following_url": "https://api.github.com/users/fritzr/following{/other_user}", "gists_url": "https://api.github.com/users/fritzr/gists{/gist_id}", "starred_url": "https://api.github.com/users/fritzr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fritzr/subscriptions", "organizations_url": "https://api.github.com/users/fritzr/orgs", "repos_url": "https://api.github.com/users/fritzr/repos", "events_url": "https://api.github.com/users/fritzr/events{/privacy}", "received_events_url": "https://api.github.com/users/fritzr/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1bac673faf4a0a0bd0a5606dad9d98b33d568510", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bac673faf4a0a0bd0a5606dad9d98b33d568510", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bac673faf4a0a0bd0a5606dad9d98b33d568510"}], "stats": {"total": 153, "additions": 145, "deletions": 8}, "files": [{"sha": "b3cc871688c963cf83b7c136b69452b485090807", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -1,3 +1,12 @@\n+2016-11-03  Fritz Reese <fritzoreese@gmail.com>\n+\n+\t* gfortran.texi: Document.\n+\t* gfortran.h (gfc_dt): New field default_exp.\n+\t* primary.c (match_real_constant): Default exponent with -fdec.\n+\t* io.c (match_io): Set dt.default_exp with -fdec.\n+\t* ioparm.def (IOPARM_dt_default_exp): New.\n+\t* trans-io.c (build_dt): Set IOPARM_dt_default_exp with -fdec.\n+\n 2016-11-03  Fritz O. Reese <fritzoreese@gmail.com>\n \n \t* decl.c (gfc_match_parameter): Allow omitted '()' with -std=legacy."}, {"sha": "3fb6f4152cee3a9fdf783289e4214671dc4812a0", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -2336,6 +2336,7 @@ typedef struct\n   gfc_expr *io_unit, *format_expr, *rec, *advance, *iostat, *size, *iomsg,\n \t   *id, *pos, *asynchronous, *blank, *decimal, *delim, *pad, *round,\n \t   *sign, *extra_comma, *dt_io_kind, *udtio;\n+  char default_exp;\n \n   gfc_symbol *namelist;\n   /* A format_label of `format_asterisk' indicates the \"*\" format */"}, {"sha": "6de6c9bfeeb343129124fd7445f6b8304f607e70", "filename": "gcc/fortran/gfortran.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fgfortran.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fgfortran.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.texi?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -1472,6 +1472,7 @@ compatibility extensions along with those enabled by @option{-std=legacy}.\n * Bitwise logical operators::\n * Extended I/O specifiers::\n * Legacy PARAMETER statements::\n+* Default exponents::\n @end menu\n \n @node Old-style kind specifications\n@@ -2713,6 +2714,14 @@ real c\n parameter c = 3.0e8\n @end smallexample\n \n+@node Default exponents\n+@subsection Default exponents\n+@cindex exponent\n+\n+For compatibility, GNU Fortran supports a default exponent of zero in real\n+constants with @option{-fdec}.  For example, @code{9e} would be\n+interpreted as @code{9e0}, rather than an error.\n+\n \n @node Extensions not implemented in GNU Fortran\n @section Extensions not implemented in GNU Fortran"}, {"sha": "04cc1a253581f67bfcde39099b6be01ce6ac8b43", "filename": "gcc/fortran/io.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fio.c?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -4167,6 +4167,10 @@ match_io (io_kind k)\n \tgoto syntax;\n     }\n \n+  /* See if we want to use defaults for missing exponents in real transfers.  */\n+  if (flag_dec)\n+    dt->default_exp = 1;\n+\n   /* A full IO statement has been matched.  Check the constraints.  spec_end is\n      supplied for cases where no locus is supplied.  */\n   m = check_io_constraints (k, dt, io_code, &spec_end);"}, {"sha": "46691874e10cee70584927549b1c491076c46208", "filename": "gcc/fortran/ioparm.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fioparm.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fioparm.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fioparm.def?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -118,4 +118,5 @@ IOPARM (dt,      round,\t\t1 << 23, char2)\n IOPARM (dt,      sign,\t\t1 << 24, char1)\n #define IOPARM_dt_f2003\t\t      (1 << 25)\n #define IOPARM_dt_dtio\t\t      (1 << 26)\n+#define IOPARM_dt_default_exp\t      (1 << 27)\n IOPARM (dt,      u,\t\t0,\t pad)"}, {"sha": "f26740d42ef7089ead6dbcd00b114051dc1f4d18", "filename": "gcc/fortran/primary.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fprimary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Fprimary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fprimary.c?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -483,7 +483,7 @@ match_boz_constant (gfc_expr **result)\n static match\n match_real_constant (gfc_expr **result, int signflag)\n {\n-  int kind, count, seen_dp, seen_digits, is_iso_c;\n+  int kind, count, seen_dp, seen_digits, is_iso_c, default_exponent;\n   locus old_loc, temp_loc;\n   char *p, *buffer, c, exp_char;\n   gfc_expr *e;\n@@ -494,6 +494,7 @@ match_real_constant (gfc_expr **result, int signflag)\n \n   e = NULL;\n \n+  default_exponent = 0;\n   count = 0;\n   seen_dp = 0;\n   seen_digits = 0;\n@@ -575,8 +576,14 @@ match_real_constant (gfc_expr **result, int signflag)\n \n   if (!ISDIGIT (c))\n     {\n-      gfc_error (\"Missing exponent in real number at %C\");\n-      return MATCH_ERROR;\n+      /* With -fdec, default exponent to 0 instead of complaining.  */\n+      if (flag_dec)\n+\tdefault_exponent = 1;\n+      else\n+\t{\n+\t  gfc_error (\"Missing exponent in real number at %C\");\n+\t  return MATCH_ERROR;\n+\t}\n     }\n \n   while (ISDIGIT (c))\n@@ -597,8 +604,8 @@ match_real_constant (gfc_expr **result, int signflag)\n   gfc_current_locus = old_loc;\n   gfc_gobble_whitespace ();\n \n-  buffer = (char *) alloca (count + 1);\n-  memset (buffer, '\\0', count + 1);\n+  buffer = (char *) alloca (count + default_exponent + 1);\n+  memset (buffer, '\\0', count + default_exponent + 1);\n \n   p = buffer;\n   c = gfc_next_ascii_char ();\n@@ -621,6 +628,8 @@ match_real_constant (gfc_expr **result, int signflag)\n \n       c = gfc_next_ascii_char ();\n     }\n+  if (default_exponent)\n+    *p++ = '0';\n \n   kind = get_kind (&is_iso_c);\n   if (kind == -1)"}, {"sha": "253a5ac70a90cfed7079388f0b417574b066f076", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -1911,6 +1911,9 @@ build_dt (tree function, gfc_code * code)\n       if (dt->udtio)\n \tmask |= IOPARM_dt_dtio;\n \n+      if (dt->default_exp)\n+\tmask |= IOPARM_dt_default_exp;\n+\n       if (dt->namelist)\n \t{\n \t  if (dt->format_expr || dt->format_label)"}, {"sha": "2a7d3360857237d9c0697ec3b3f61cc294e911b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -1,3 +1,9 @@\n+2016-11-03  Fritz Reese <fritzoreese@gmail.com>\n+\n+\t* gfortran.dg/dec_exp_1.f90: New test.\n+\t* gfortran.dg/dec_exp_2.f90: Likewise.\n+\t* gfortran.dg/dec_exp_3.f90: Likewise.\n+\n 2016-11-03  Fritz O. Reese <fritzoreese@gmail.com>\n \n \t* gfortran.dg/dec_parameter_1.f: New test."}, {"sha": "c8b395aa9cec769db8614be76eaec3b539bb256e", "filename": "gcc/testsuite/gfortran.dg/dec_exp_1.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_1.f90?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do run }\n+! { dg-options \"-fdec\" }\n+!\n+! Test support for providing a default exponent of zero when unspecified in\n+! real constants with -fdec.\n+!\n+\n+subroutine asserteq (rexp, ract, msg)\n+  real, intent(in) :: rexp, ract\n+  character(*), intent(in) :: msg\n+  if (rexp .ne. ract) then\n+    write (*, '(A,F12.6,F12.6)') msg, rexp, ract\n+    call abort()\n+  endif\n+end subroutine\n+\n+implicit none\n+\n+real, parameter :: r1 = 8e0\n+real, parameter :: r2 = 8e ! { equivalent to 8e0 }\n+real, volatile :: r3, r4\n+character(2) :: s\n+r3 = 8e ! { equivalent to 8e0 }\n+s = '8e'\n+\n+read (s, *) r4\n+\n+call asserteq (r1, r2, \"[const]\")\n+call asserteq (r1, r3, \"[vol. ]\")\n+call asserteq (r1, r4, \"[read ]\")\n+\n+r4 = 8e + 48e\n+call asserteq (56e, r4, \"[sum ]\")\n+\n+end"}, {"sha": "9137aabc4b3d59eede73a9bd016e0cbca5e09d9c", "filename": "gcc/testsuite/gfortran.dg/dec_exp_2.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_2.f90?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -0,0 +1,13 @@\n+! { dg-do compile }\n+! { dg-options \"\" }\n+!\n+! Make sure we still see an error for missing exponents without -fdec.\n+!\n+\n+implicit none\n+\n+real, parameter :: r1 = 8e ! { dg-error \"Missing exponent\" }\n+real, volatile :: r2\n+r2 = 8e ! { dg-error \"Missing exponent\" }\n+\n+end"}, {"sha": "34835a77b32d9053b43f9fe1d3cfde79dcda26c9", "filename": "gcc/testsuite/gfortran.dg/dec_exp_3.f90", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdec_exp_3.f90?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -0,0 +1,15 @@\n+! { dg-do run \"xfail *-*-*\" }\n+! { dg-options \"\" }\n+!\n+! Make sure we still see an error for missing exponents without -fdec.\n+!\n+\n+implicit none\n+\n+real :: r\n+character(2) :: s\n+s = '8e'\n+\n+read (s, *) r ! { XFAIL \"Bad real number\" }\n+\n+end"}, {"sha": "d50ef47b475e3464cf0ac922070dba81114ddee5", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -1,3 +1,10 @@\n+2016-11-03  Fritz Reese <fritzoreese@gmail.com>\n+\n+\t* io/io.h (IOPARM_DT_DEFAULT_EXP): New flag bit.\n+\t* io/list_read.c (parse_real, read_real): Allow omission of exponent\n+\twith IOPARM_DT_DEFAULT_EXP.\n+\t* io/read.c (read_f): Ditto.\n+\n 2016-10-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/54679"}, {"sha": "cd0a26f6aa0961819f4b76d4df219353f04f567e", "filename": "libgfortran/io/io.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/libgfortran%2Fio%2Fio.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/libgfortran%2Fio%2Fio.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fio.h?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -443,6 +443,7 @@ st_parameter_inquire;\n #define IOPARM_DT_HAS_SIGN\t\t\t(1 << 24)\n #define IOPARM_DT_HAS_F2003                     (1 << 25)\n #define IOPARM_DT_HAS_UDTIO                     (1 << 26)\n+#define IOPARM_DT_DEFAULT_EXP\t\t\t(1 << 27)\n /* Internal use bit.  */\n #define IOPARM_DT_IONML_SET\t\t\t(1u << 31)\n "}, {"sha": "a35beb88a0045866238e9fb87cc59fae7e870353", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -1374,7 +1374,16 @@ parse_real (st_parameter_dt *dtp, void *buffer, int length)\n \n  exp2:\n   if (!isdigit (c))\n-    goto bad_exponent;\n+    {\n+      /* Extension: allow default exponent of 0 when omitted.  */\n+      if (dtp->common.flags & IOPARM_DT_DEFAULT_EXP)\n+\t{\n+\t  push_char (dtp, '0');\n+\t  goto done;\n+\t}\n+      else\n+\tgoto bad_exponent;\n+    }\n \n   push_char (dtp, c);\n \n@@ -1816,7 +1825,16 @@ read_real (st_parameter_dt *dtp, void * dest, int length)\n \n  exp2:\n   if (!isdigit (c))\n-    goto bad_exponent;\n+    {\n+      /* Extension: allow default exponent of 0 when omitted.  */\n+      if (dtp->common.flags & IOPARM_DT_DEFAULT_EXP)\n+\t{\n+\t  push_char (dtp, '0');\n+\t  goto done;\n+\t}\n+      else\n+\tgoto bad_exponent;\n+    }\n \n   push_char (dtp, c);\n "}, {"sha": "508b3a04fb0ee624b56f5f178abeb1ec67434123", "filename": "libgfortran/io/read.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6869e9c69f446161edba48722a75813934643382/libgfortran%2Fio%2Fread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6869e9c69f446161edba48722a75813934643382/libgfortran%2Fio%2Fread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fread.c?ref=6869e9c69f446161edba48722a75813934643382", "patch": "@@ -1087,7 +1087,13 @@ read_f (st_parameter_dt *dtp, const fnode *f, char *dest, int length)\n      the d parameter before explict conversion takes place.  */\n \n   if (w == 0)\n-    goto bad_float;\n+    {\n+      /* Extension: allow default exponent of 0 when omitted.  */\n+      if (dtp->common.flags & IOPARM_DT_DEFAULT_EXP)\n+\tgoto done;\n+      else\n+\tgoto bad_float;\n+    }\n \n   if (dtp->u.p.blank_status == BLANK_UNSPECIFIED)\n     {"}]}