{"sha": "d22253e5e31641c415cfc009b7d393605d4d37f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIyMjUzZTVlMzE2NDFjNDE1Y2ZjMDA5YjdkMzkzNjA1ZDRkMzdmOQ==", "commit": {"author": {"name": "Tejas Belagod", "email": "tejas.belagod@arm.com", "date": "2013-11-13T15:04:44Z"}, "committer": {"name": "Tejas Belagod", "email": "belagod@gcc.gnu.org", "date": "2013-11-13T15:04:44Z"}, "message": "aarch64-simd.md (vec_set<mode>): Add w -> w option to the constraint.\n\n2013-11-13  Tejas Belagod  <tejas.belagod@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-simd.md (vec_set<mode>): Add w -> w option to\n\tthe constraint.\n\nFrom-SVN: r204746", "tree": {"sha": "88e7f0aa0ad0eea282259d44dd802203e23ee73f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/88e7f0aa0ad0eea282259d44dd802203e23ee73f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d22253e5e31641c415cfc009b7d393605d4d37f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22253e5e31641c415cfc009b7d393605d4d37f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d22253e5e31641c415cfc009b7d393605d4d37f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22253e5e31641c415cfc009b7d393605d4d37f9/comments", "author": {"login": "tejas-belagod-arm", "id": 92718852, "node_id": "U_kgDOBYbHBA", "avatar_url": "https://avatars.githubusercontent.com/u/92718852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tejas-belagod-arm", "html_url": "https://github.com/tejas-belagod-arm", "followers_url": "https://api.github.com/users/tejas-belagod-arm/followers", "following_url": "https://api.github.com/users/tejas-belagod-arm/following{/other_user}", "gists_url": "https://api.github.com/users/tejas-belagod-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/tejas-belagod-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tejas-belagod-arm/subscriptions", "organizations_url": "https://api.github.com/users/tejas-belagod-arm/orgs", "repos_url": "https://api.github.com/users/tejas-belagod-arm/repos", "events_url": "https://api.github.com/users/tejas-belagod-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/tejas-belagod-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0cbe536ed89c298b205e702f7db34635701e4f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cbe536ed89c298b205e702f7db34635701e4f2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cbe536ed89c298b205e702f7db34635701e4f2c"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "331e61cd6a9dd43b5e7af9a4d7f5d246c1e1cd6b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22253e5e31641c415cfc009b7d393605d4d37f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22253e5e31641c415cfc009b7d393605d4d37f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d22253e5e31641c415cfc009b7d393605d4d37f9", "patch": "@@ -1,3 +1,8 @@\n+2013-11-13  Tejas Belagod  <tejas.belagod@arm.com>\n+\n+\t* config/aarch64/aarch64-simd.md (vec_set<mode>): Add w -> w option to\n+\tthe constraint.\n+\n 2013-11-13  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* cfgexpand.c (expand_used_vars): Allocate space for partitions based"}, {"sha": "df4ef9592dc1219d7395c0e77463fb651f094b60", "filename": "gcc/config/aarch64/aarch64-simd.md", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22253e5e31641c415cfc009b7d393605d4d37f9/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22253e5e31641c415cfc009b7d393605d4d37f9/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-simd.md?ref=d22253e5e31641c415cfc009b7d393605d4d37f9", "patch": "@@ -695,16 +695,18 @@\n )\n \n (define_insn \"aarch64_simd_vec_set<mode>\"\n-  [(set (match_operand:VQ_S 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:VQ_S 0 \"register_operand\" \"=w,w\")\n         (vec_merge:VQ_S\n \t    (vec_duplicate:VQ_S\n-\t\t(match_operand:<VEL> 1 \"register_operand\" \"r\"))\n-\t    (match_operand:VQ_S 3 \"register_operand\" \"0\")\n-\t    (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n+\t\t(match_operand:<VEL> 1 \"register_operand\" \"r,w\"))\n+\t    (match_operand:VQ_S 3 \"register_operand\" \"0,0\")\n+\t    (match_operand:SI 2 \"immediate_operand\" \"i,i\")))]\n   \"TARGET_SIMD\"\n-  \"ins\\t%0.<Vetype>[%p2], %w1\";\n-  [(set_attr \"simd_type\" \"simd_insgp\")\n-   (set_attr \"type\" \"neon_from_gp<q>\")\n+  \"@\n+   ins\\t%0.<Vetype>[%p2], %w1\n+   ins\\\\t%0.<Vetype>[%p2], %1.<Vetype>[0]\"\n+  [(set_attr \"simd_type\" \"simd_insgp, simd_ins\")\n+   (set_attr \"type\" \"neon_from_gp<q>, neon_ins<q>\")\n    (set_attr \"simd_mode\" \"<MODE>\")]\n )\n \n@@ -958,9 +960,9 @@\n })\n \n (define_expand \"vec_set<mode>\"\n-  [(match_operand:VQ_S 0 \"register_operand\" \"+w\")\n-   (match_operand:<VEL> 1 \"register_operand\" \"r\")\n-   (match_operand:SI 2 \"immediate_operand\" \"\")]\n+  [(match_operand:VQ_S 0 \"register_operand\")\n+   (match_operand:<VEL> 1 \"register_operand\")\n+   (match_operand:SI 2 \"immediate_operand\")]\n   \"TARGET_SIMD\"\n   {\n     HOST_WIDE_INT elem = (HOST_WIDE_INT) 1 << INTVAL (operands[2]);\n@@ -971,23 +973,25 @@\n )\n \n (define_insn \"aarch64_simd_vec_setv2di\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=w,w\")\n         (vec_merge:V2DI\n \t    (vec_duplicate:V2DI\n-\t\t(match_operand:DI 1 \"register_operand\" \"r\"))\n-\t    (match_operand:V2DI 3 \"register_operand\" \"0\")\n-\t    (match_operand:SI 2 \"immediate_operand\" \"i\")))]\n+\t\t(match_operand:DI 1 \"register_operand\" \"r,w\"))\n+\t    (match_operand:V2DI 3 \"register_operand\" \"0,0\")\n+\t    (match_operand:SI 2 \"immediate_operand\" \"i,i\")))]\n   \"TARGET_SIMD\"\n-  \"ins\\t%0.d[%p2], %1\";\n-  [(set_attr \"simd_type\" \"simd_insgp\")\n-   (set_attr \"type\" \"neon_from_gp\")\n+  \"@\n+   ins\\t%0.d[%p2], %1\n+   ins\\\\t%0.d[%p2], %1.d[0]\"\n+  [(set_attr \"simd_type\" \"simd_insgp, simd_ins\")\n+   (set_attr \"type\" \"neon_from_gp, neon_ins_q\")\n    (set_attr \"simd_mode\" \"V2DI\")]\n )\n \n (define_expand \"vec_setv2di\"\n-  [(match_operand:V2DI 0 \"register_operand\" \"+w\")\n-   (match_operand:DI 1 \"register_operand\" \"r\")\n-   (match_operand:SI 2 \"immediate_operand\" \"\")]\n+  [(match_operand:V2DI 0 \"register_operand\")\n+   (match_operand:DI 1 \"register_operand\")\n+   (match_operand:SI 2 \"immediate_operand\")]\n   \"TARGET_SIMD\"\n   {\n     HOST_WIDE_INT elem = (HOST_WIDE_INT) 1 << INTVAL (operands[2]);"}]}