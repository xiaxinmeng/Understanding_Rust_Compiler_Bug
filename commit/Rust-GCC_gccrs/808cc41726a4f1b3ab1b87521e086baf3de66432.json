{"sha": "808cc41726a4f1b3ab1b87521e086baf3de66432", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA4Y2M0MTcyNmE0ZjFiM2FiMWI4NzUyMWUwODZiYWYzZGU2NjQzMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2008-08-18T18:21:01Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2008-08-18T18:21:01Z"}, "message": "rtlanal.c (subreg_offset_representable_p): Check HARD_REGNO_MODE_OK.\n\ngcc/\n\t* rtlanal.c (subreg_offset_representable_p): Check HARD_REGNO_MODE_OK.\n\nFrom-SVN: r139207", "tree": {"sha": "c5651906fcad1a544db024c9999917678418e7e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c5651906fcad1a544db024c9999917678418e7e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/808cc41726a4f1b3ab1b87521e086baf3de66432", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808cc41726a4f1b3ab1b87521e086baf3de66432", "html_url": "https://github.com/Rust-GCC/gccrs/commit/808cc41726a4f1b3ab1b87521e086baf3de66432", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808cc41726a4f1b3ab1b87521e086baf3de66432/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7e2f896db4b8dcaef9289ac172830368e75a1ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e2f896db4b8dcaef9289ac172830368e75a1ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e2f896db4b8dcaef9289ac172830368e75a1ce"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "c3ddeabbedc20d8b14eba4c09cc5ce7cc50928d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808cc41726a4f1b3ab1b87521e086baf3de66432/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808cc41726a4f1b3ab1b87521e086baf3de66432/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=808cc41726a4f1b3ab1b87521e086baf3de66432", "patch": "@@ -1,3 +1,7 @@\n+2008-08-18  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* rtlanal.c (subreg_offset_representable_p): Check HARD_REGNO_MODE_OK.\n+\n 2008-08-18  Tomas Bily  <tbily@suse.cz>\n \n \t* tree.h (IS_CONVERT_EXPR_CODE_P): Renamed to CONVERT_EXPR_CODE_P."}, {"sha": "6337156eacbfc2b2a29734f3da0efe2b9ebe6423", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808cc41726a4f1b3ab1b87521e086baf3de66432/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808cc41726a4f1b3ab1b87521e086baf3de66432/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=808cc41726a4f1b3ab1b87521e086baf3de66432", "patch": "@@ -3241,7 +3241,8 @@ subreg_offset_representable_p (unsigned int xregno, enum machine_mode xmode,\n {\n   struct subreg_info info;\n   subreg_get_info (xregno, xmode, offset, ymode, &info);\n-  return info.representable_p;\n+  return (info.representable_p\n+\t  && HARD_REGNO_MODE_OK (xregno + info.offset, ymode));\n }\n \n /* Return the final regno that a subreg expression refers to.  */"}]}