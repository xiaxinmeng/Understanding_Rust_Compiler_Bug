{"sha": "beb32b5981c96e592c73126f3f1b89b848547fbe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmViMzJiNTk4MWM5NmU1OTJjNzMxMjZmM2YxYjg5Yjg0ODU0N2ZiZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-08-31T14:56:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-08-31T14:56:11Z"}, "message": "function.c (allocate_struct_function): Do not set current_function_returns_pointer.\n\n2007-08-31  Richard Guenther  <rguenther@suse.de>\n\n\t* function.c (allocate_struct_function): Do not set\n\tcurrent_function_returns_pointer.\n\t* function.h (struct var_refs_queue): Remove.\n\t(struct simple_obstack_stack): Likewise.\n\t(struct function): Remove fixup_var_refs_queue member.\n\tRemove returns_pointer flag.\n\t(current_function_returns_pointer): Remove define.\n\nFrom-SVN: r127994", "tree": {"sha": "53a16a8d5ccfed3dca1e664f77beadcd3b6b321a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53a16a8d5ccfed3dca1e664f77beadcd3b6b321a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/beb32b5981c96e592c73126f3f1b89b848547fbe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb32b5981c96e592c73126f3f1b89b848547fbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/beb32b5981c96e592c73126f3f1b89b848547fbe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/beb32b5981c96e592c73126f3f1b89b848547fbe/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7562df8122d83aa86ddbc2e096a96ef16e85045f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7562df8122d83aa86ddbc2e096a96ef16e85045f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7562df8122d83aa86ddbc2e096a96ef16e85045f"}], "stats": {"total": 43, "additions": 16, "deletions": 27}, "files": [{"sha": "9156b9dd4658343a057b3ce46dfd7482944cfae7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb32b5981c96e592c73126f3f1b89b848547fbe/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb32b5981c96e592c73126f3f1b89b848547fbe/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=beb32b5981c96e592c73126f3f1b89b848547fbe", "patch": "@@ -1,3 +1,13 @@\n+2007-08-31  Richard Guenther  <rguenther@suse.de>\n+\n+\t* function.c (allocate_struct_function): Do not set\n+\tcurrent_function_returns_pointer.\n+\t* function.h (struct var_refs_queue): Remove.\n+\t(struct simple_obstack_stack): Likewise.\n+\t(struct function): Remove fixup_var_refs_queue member.\n+\tRemove returns_pointer flag.\n+\t(current_function_returns_pointer): Remove define.\n+\n 2007-08-31  Nick Clifton  <nickc@redhat.com>\n \n \t* tree-ssa-coalesce.c (compare_pairs): Use the elements as"}, {"sha": "ec7c2e36f717f02ce4b9c02c1ce5bc741bb7f26e", "filename": "gcc/function.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb32b5981c96e592c73126f3f1b89b848547fbe/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb32b5981c96e592c73126f3f1b89b848547fbe/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=beb32b5981c96e592c73126f3f1b89b848547fbe", "patch": "@@ -3828,8 +3828,6 @@ allocate_struct_function (tree fndecl)\n       current_function_returns_struct = 1;\n     }\n \n-  current_function_returns_pointer = POINTER_TYPE_P (TREE_TYPE (result));\n-\n   current_function_stdarg\n     = (fntype\n        && TYPE_ARG_TYPES (fntype) != 0"}, {"sha": "084f05b77b125d43ec9053f146c71bf984e47749", "filename": "gcc/function.h", "status": "modified", "additions": 6, "deletions": 25, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/beb32b5981c96e592c73126f3f1b89b848547fbe/gcc%2Ffunction.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/beb32b5981c96e592c73126f3f1b89b848547fbe/gcc%2Ffunction.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.h?ref=beb32b5981c96e592c73126f3f1b89b848547fbe", "patch": "@@ -20,17 +20,10 @@ along with GCC; see the file COPYING3.  If not see\n \n #ifndef GCC_FUNCTION_H\n #define GCC_FUNCTION_H\n+\n #include \"tree.h\"\n #include \"hashtab.h\"\n \n-struct var_refs_queue GTY(())\n-{\n-  rtx modified;\n-  enum machine_mode promoted_mode;\n-  int unsignedp;\n-  struct var_refs_queue *next;\n-};\n-\n /* Stack of pending (incomplete) sequences saved by `start_sequence'.\n    Each element describes one pending sequence.\n    The main insn-chain is saved in the last element of the chain,\n@@ -43,14 +36,6 @@ struct sequence_stack GTY(())\n   rtx last;\n   struct sequence_stack *next;\n };\n-\n-/* Stack of single obstacks.  */\n-\n-struct simple_obstack_stack\n-{\n-  struct obstack *obstack;\n-  struct simple_obstack_stack *next;\n-};\n \f\n struct emit_status GTY(())\n {\n@@ -292,10 +277,6 @@ struct function GTY(())\n   /* List of available temp slots.  */\n   struct temp_slot *x_avail_temp_slots;\n \n-  /* This slot is initialized as 0 and is added to\n-     during the nested function.  */\n-  struct var_refs_queue *fixup_var_refs_queue;\n-\n   /* Current nesting level for temporaries.  */\n   int x_temp_slot_level;\n \n@@ -374,6 +355,7 @@ struct function GTY(())\n      function.  */\n   unsigned int va_list_fpr_size : 8;\n \n+\n   /* How commonly executed the function is.  Initialized during branch\n      probabilities pass.  */\n   ENUM_BITFIELD (function_frequency) function_frequency : 2;\n@@ -386,9 +368,6 @@ struct function GTY(())\n      return the address of where it has put a structure value.  */\n   unsigned int returns_pcc_struct : 1;\n \n-  /* Nonzero if the current function returns a pointer type.  */\n-  unsigned int returns_pointer : 1;\n-\n   /* Nonzero if function being compiled can call setjmp.  */\n   unsigned int calls_setjmp : 1;\n \n@@ -403,6 +382,7 @@ struct function GTY(())\n   /* Nonzero if the function calls __builtin_eh_return.  */\n   unsigned int calls_eh_return : 1;\n \n+\n   /* Nonzero if function being compiled receives nonlocal gotos\n      from nested functions.  */\n   unsigned int has_nonlocal_label : 1;\n@@ -437,6 +417,7 @@ struct function GTY(())\n      function.  */\n   unsigned int limit_stack : 1;\n \n+\n   /* Nonzero if current function uses stdarg.h or equivalent.  */\n   unsigned int stdarg : 1;\n \n@@ -466,13 +447,14 @@ struct function GTY(())\n   /* Set when the call to function itself has been emit.  */\n   unsigned int recursive_call_emit : 1;\n \n+\n   /* Set when the tail call has been produced.  */\n   unsigned int tail_call_emit : 1;\n \n   /* FIXME tuples: This bit is temporarily here to mark when a\n      function has been gimplified, so we can make sure we're not\n      creating non GIMPLE tuples after gimplification.  */\n-  unsigned gimplified : 1;\n+  unsigned int gimplified : 1;\n };\n \n /* If va_list_[gf]pr_size is set to this, it means we don't know how\n@@ -496,7 +478,6 @@ extern int trampolines_created;\n #define current_function_pops_args (cfun->pops_args)\n #define current_function_returns_struct (cfun->returns_struct)\n #define current_function_returns_pcc_struct (cfun->returns_pcc_struct)\n-#define current_function_returns_pointer (cfun->returns_pointer)\n #define current_function_calls_setjmp (cfun->calls_setjmp)\n #define current_function_calls_alloca (cfun->calls_alloca)\n #define current_function_accesses_prior_frames (cfun->accesses_prior_frames)"}]}