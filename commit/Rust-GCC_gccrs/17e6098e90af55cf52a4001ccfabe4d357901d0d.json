{"sha": "17e6098e90af55cf52a4001ccfabe4d357901d0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdlNjA5OGU5MGFmNTVjZjUyYTQwMDFjY2ZhYmU0ZDM1NzkwMWQwZA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2003-02-01T04:26:29Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2003-02-01T04:26:29Z"}, "message": "pa.c (pa_output_function_prologue, [...]): Move updating of total_code_bytes from prologue to epilogue.\n\n\t* pa.c (pa_output_function_prologue, pa_output_function_epilogue): Move\n\tupdating of total_code_bytes from prologue to epilogue.\n\nFrom-SVN: r62233", "tree": {"sha": "2aac4c5f8cf5b473db84f8012c0ae91e0eaafb64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2aac4c5f8cf5b473db84f8012c0ae91e0eaafb64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17e6098e90af55cf52a4001ccfabe4d357901d0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17e6098e90af55cf52a4001ccfabe4d357901d0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17e6098e90af55cf52a4001ccfabe4d357901d0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17e6098e90af55cf52a4001ccfabe4d357901d0d/comments", "author": null, "committer": null, "parents": [{"sha": "ccbaec264d2e76bad78518ec8cf473e3fb8e2049", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ccbaec264d2e76bad78518ec8cf473e3fb8e2049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ccbaec264d2e76bad78518ec8cf473e3fb8e2049"}], "stats": {"total": 55, "additions": 34, "deletions": 21}, "files": [{"sha": "fa5db284a684c668c9bc1f06adcf9ed6bc154134", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17e6098e90af55cf52a4001ccfabe4d357901d0d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17e6098e90af55cf52a4001ccfabe4d357901d0d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17e6098e90af55cf52a4001ccfabe4d357901d0d", "patch": "@@ -1,3 +1,8 @@\n+2003-01-31  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\t* pa.c (pa_output_function_prologue, pa_output_function_epilogue): Move\n+\tupdating of total_code_bytes from prologue to epilogue.\n+\n 2003-01-31  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* reload.c (find_reloads): Do not use the mode specified in the insn"}, {"sha": "aeccafbc30a49e5bc9f0ab105cd87454daf0316a", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17e6098e90af55cf52a4001ccfabe4d357901d0d/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17e6098e90af55cf52a4001ccfabe4d357901d0d/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=17e6098e90af55cf52a4001ccfabe4d357901d0d", "patch": "@@ -3306,26 +3306,6 @@ pa_output_function_prologue (file, size)\n \n   fputs (\"\\n\\t.ENTRY\\n\", file);\n \n-  /* If we're using GAS and SOM, and not using the portable runtime model,\n-     or function sections, then we don't need to accumulate the total number\n-     of code bytes.  */\n-  if ((TARGET_GAS && TARGET_SOM && ! TARGET_PORTABLE_RUNTIME)\n-      || flag_function_sections)\n-    total_code_bytes = 0;\n-  else if (INSN_ADDRESSES_SET_P ())\n-    {\n-      unsigned long old_total = total_code_bytes;\n-\n-      total_code_bytes += INSN_ADDRESSES (INSN_UID (get_last_nonnote_insn ()));\n-      total_code_bytes += FUNCTION_BOUNDARY / BITS_PER_UNIT;\n-\n-      /* Be prepared to handle overflows.  */\n-      if (old_total > total_code_bytes)\n-\ttotal_code_bytes = -1;\n-    }\n-  else\n-    total_code_bytes = -1;\n-\n   remove_useless_addtr_insns (get_insns (), 0);\n }\n \n@@ -3647,6 +3627,7 @@ pa_output_function_epilogue (file, size)\n      FILE *file;\n      HOST_WIDE_INT size ATTRIBUTE_UNUSED;\n {\n+  int last_address = 0;\n   rtx insn = get_last_insn ();\n \n   /* hppa_expand_epilogue does the dirty work now.  We just need\n@@ -3669,9 +3650,36 @@ pa_output_function_epilogue (file, size)\n   /* If insn is a CALL_INSN, then it must be a call to a volatile\n      function (otherwise there would be epilogue insns).  */\n   if (insn && GET_CODE (insn) == CALL_INSN)\n-    fputs (\"\\tnop\\n\", file);\n+    {\n+      fputs (\"\\tnop\\n\", file);\n+      last_address += 4;\n+    }\n \n   fputs (\"\\t.EXIT\\n\\t.PROCEND\\n\", file);\n+\n+  /* Finally, update the total number of code bytes output so far.  */\n+  if ((TARGET_PORTABLE_RUNTIME || !TARGET_GAS || !TARGET_SOM)\n+      && !flag_function_sections)\n+    {\n+      if (INSN_ADDRESSES_SET_P ())\n+\t{\n+\t  unsigned long old_total = total_code_bytes;\n+\n+\t  insn = get_last_nonnote_insn ();\n+\t  last_address += INSN_ADDRESSES (INSN_UID (insn));\n+\t  if (INSN_P (insn))\n+\t    last_address += insn_default_length (insn);\n+\n+\t  total_code_bytes += last_address;\n+\t  total_code_bytes += FUNCTION_BOUNDARY / BITS_PER_UNIT;\n+\n+\t  /* Be prepared to handle overflows.  */\n+\t  if (old_total > total_code_bytes)\n+\t    total_code_bytes = -1;\n+\t}\n+      else\n+\ttotal_code_bytes = -1;\n+    }\n }\n \n void"}]}