{"sha": "7555e8b225e370e0ef7f42c0e58c03ae626d9c3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU1NWU4YjIyNWUzNzBlMGVmN2Y0MmMwZTU4YzAzYWU2MjZkOWMzYg==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-05-02T08:21:27Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2016-05-02T08:21:27Z"}, "message": "sh.md (*negnegt, *movtt): Remove.\n\ngcc/\n\t* config/sh/sh.md (*negnegt, *movtt): Remove.\n\nFrom-SVN: r235704", "tree": {"sha": "f1d788645fe63087c9052b3a458ceb5bfe65d438", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1d788645fe63087c9052b3a458ceb5bfe65d438"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7555e8b225e370e0ef7f42c0e58c03ae626d9c3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7555e8b225e370e0ef7f42c0e58c03ae626d9c3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7555e8b225e370e0ef7f42c0e58c03ae626d9c3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7555e8b225e370e0ef7f42c0e58c03ae626d9c3b/comments", "author": null, "committer": null, "parents": [{"sha": "552cc5904c9d064873df6f165c99ef798df5f701", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/552cc5904c9d064873df6f165c99ef798df5f701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/552cc5904c9d064873df6f165c99ef798df5f701"}], "stats": {"total": 23, "additions": 4, "deletions": 19}, "files": [{"sha": "0b4ab48fd9eff4f6abe770fe4bab2f15b95e3e19", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7555e8b225e370e0ef7f42c0e58c03ae626d9c3b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7555e8b225e370e0ef7f42c0e58c03ae626d9c3b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7555e8b225e370e0ef7f42c0e58c03ae626d9c3b", "patch": "@@ -1,3 +1,7 @@\n+2016-05-02  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\t* config/sh/sh.md (*negnegt, *movtt): Remove.\n+\n 2016-05-02  Marek Polacek  <polacek@redhat.com>\n \t    Tom de Vries  <tom@codesourcery.com>\n "}, {"sha": "da1dfe98c206d74e7cc06429cbb9a9e49318a5ef", "filename": "gcc/config/sh/sh.md", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7555e8b225e370e0ef7f42c0e58c03ae626d9c3b/gcc%2Fconfig%2Fsh%2Fsh.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7555e8b225e370e0ef7f42c0e58c03ae626d9c3b/gcc%2Fconfig%2Fsh%2Fsh.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.md?ref=7555e8b225e370e0ef7f42c0e58c03ae626d9c3b", "patch": "@@ -8345,16 +8345,6 @@\n     gcc_unreachable ();\n })\n \n-;; The *negnegt pattern helps the combine pass to figure out how to fold \n-;; an explicit double T bit negation.\n-(define_insn_and_split \"*negnegt\"\n-  [(set (reg:SI T_REG)\n-\t(eq:SI (match_operand 0 \"negt_reg_operand\" \"\") (const_int 0)))]\n-  \"TARGET_SH1\"\n-  \"#\"\n-  \"\"\n-  [(const_int 0)])\n-\n ;; Store (negated) T bit as all zeros or ones in a reg.\n ;;\tsubc\tRn,Rn\t! Rn = Rn - Rn - T; T = T\n ;;\tnot\tRn,Rn\t! Rn = 0 - Rn\n@@ -8379,15 +8369,6 @@\n }\n   [(set_attr \"type\" \"arith\")])\n \n-;; The *movtt pattern eliminates redundant T bit to T bit moves / tests.\n-(define_insn_and_split \"*movtt\"\n-  [(set (reg:SI T_REG)\n-\t(eq:SI (match_operand 0 \"t_reg_operand\" \"\") (const_int 1)))]\n-  \"TARGET_SH1\"\n-  \"#\"\n-  \"\"\n-  [(const_int 0)])\n-\n ;; Invert the T bit.\n ;; On SH2A we can use the nott insn.  On anything else this must be done with\n ;; multiple insns like:"}]}