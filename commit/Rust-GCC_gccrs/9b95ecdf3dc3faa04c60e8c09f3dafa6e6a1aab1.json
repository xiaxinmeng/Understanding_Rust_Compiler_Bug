{"sha": "9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI5NWVjZGYzZGMzZmFhMDRjNjBlOGMwOWYzZGFmYTZlNmExYWFiMQ==", "commit": {"author": {"name": "Gary Dismukes", "email": "dismukes@adacore.com", "date": "2019-12-16T23:43:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-02T08:58:13Z"}, "message": "[Ada] Unnesting bugs with array renamings generated for quantified expr\n\n2020-06-02  Gary Dismukes  <dismukes@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Visit_Node): When visiting array attribute\n\tnodes, apply Get_Referenced_Object to the attribute prefix, to\n\thandle prefixes denoting renamed objects by picking up the Etype\n\tof the renamed object rather than the possibly unconstrained\n\tnominal subtype of the renaming declaration's Entity.\n\t* sem_util.ads (Get_Referenced_Object): Update comment to\n\tclearly indicate that any kind of node can be passed to this\n\tfunction.\n\t* sem_util.adb (Get_Referenced_Object): Add test of Is_Object to\n\tthe condition, to allow for passing names that denote types and\n\tsubtypes.", "tree": {"sha": "9dea3b593a41ec7c3c016c1b679d91ad7ffa92ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dea3b593a41ec7c3c016c1b679d91ad7ffa92ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1/comments", "author": {"login": "dismukes", "id": 50880541, "node_id": "MDQ6VXNlcjUwODgwNTQx", "avatar_url": "https://avatars.githubusercontent.com/u/50880541?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dismukes", "html_url": "https://github.com/dismukes", "followers_url": "https://api.github.com/users/dismukes/followers", "following_url": "https://api.github.com/users/dismukes/following{/other_user}", "gists_url": "https://api.github.com/users/dismukes/gists{/gist_id}", "starred_url": "https://api.github.com/users/dismukes/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dismukes/subscriptions", "organizations_url": "https://api.github.com/users/dismukes/orgs", "repos_url": "https://api.github.com/users/dismukes/repos", "events_url": "https://api.github.com/users/dismukes/events{/privacy}", "received_events_url": "https://api.github.com/users/dismukes/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "978ca2f5454b3fe88a8046c73a5067564c4f313f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/978ca2f5454b3fe88a8046c73a5067564c4f313f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/978ca2f5454b3fe88a8046c73a5067564c4f313f"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "1460b641b19fb102fb3e8ee1129ed3e146b18865", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1", "patch": "@@ -1042,14 +1042,21 @@ package body Exp_Unst is\n                            --  handled during full traversal. Note that if the\n                            --  nominal subtype of the prefix is unconstrained,\n                            --  the bound must be obtained from the object, not\n-                           --  from the (possibly) uplevel reference.\n+                           --  from the (possibly) uplevel reference. We call\n+                           --  Get_Referenced_Object to deal with prefixes that\n+                           --  are object renamings (prefixes that are types\n+                           --  can be passed and will simply be returned).\n \n-                           if Is_Constrained (Etype (Prefix (N))) then\n+                           if Is_Constrained\n+                                (Etype (Get_Referenced_Object (Prefix (N))))\n+                           then\n                               declare\n                                  DT : Boolean := False;\n                               begin\n                                  Check_Static_Type\n-                                   (Etype (Prefix (N)), Empty, DT);\n+                                   (Etype (Get_Referenced_Object (Prefix (N))),\n+                                    Empty,\n+                                    DT);\n                               end;\n \n                               return OK;"}, {"sha": "064e613b4fc1e81c71481658a246bc96569fb9cb", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1", "patch": "@@ -10181,6 +10181,7 @@ package body Sem_Util is\n    begin\n       R := N;\n       while Is_Entity_Name (R)\n+        and then Is_Object (Entity (R))\n         and then Present (Renamed_Object (Entity (R)))\n       loop\n          R := Renamed_Object (Entity (R));"}, {"sha": "6c3fded4d51ceca4ffbee0eb7bc91bdf9dd61bac", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=9b95ecdf3dc3faa04c60e8c09f3dafa6e6a1aab1", "patch": "@@ -1138,9 +1138,10 @@ package Sem_Util is\n    --  corresponding aspect.\n \n    function Get_Referenced_Object (N : Node_Id) return Node_Id;\n-   --  Given a node, return the renamed object if the node represents a renamed\n-   --  object, otherwise return the node unchanged. The node may represent an\n-   --  arbitrary expression.\n+   --  Given an arbitrary node, return the renamed object if the node\n+   --  represents a renamed object; otherwise return the node unchanged.\n+   --  The node can represent an arbitrary expression or any other kind of\n+   --  node (such as the name of a type).\n \n    function Get_Renamed_Entity (E : Entity_Id) return Entity_Id;\n    --  Given an entity for an exception, package, subprogram or generic unit,"}]}