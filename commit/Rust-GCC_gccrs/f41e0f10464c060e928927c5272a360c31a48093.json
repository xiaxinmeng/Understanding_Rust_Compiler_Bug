{"sha": "f41e0f10464c060e928927c5272a360c31a48093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQxZTBmMTA0NjRjMDYwZTkyODkyN2M1MjcyYTM2MGMzMWE0ODA5Mw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-02-07T10:29:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-02-07T10:29:04Z"}, "message": "stl_pair.h (pair<>::pair(_U1&&, const _T2&), [...]): Revert to std::is_convertible, basing on DR 811.\n\n2010-02-07  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_pair.h (pair<>::pair(_U1&&, const _T2&),\n\tpair<>::pair(const _T1&, _U2&&), pair<>::pair(_U1&&, _U2&&)):\n\tRevert to std::is_convertible, basing on DR 811.\n\nFrom-SVN: r156570", "tree": {"sha": "fffb40a484cc1342af56c6697b61c95e182a8f40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fffb40a484cc1342af56c6697b61c95e182a8f40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f41e0f10464c060e928927c5272a360c31a48093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f41e0f10464c060e928927c5272a360c31a48093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f41e0f10464c060e928927c5272a360c31a48093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f41e0f10464c060e928927c5272a360c31a48093/comments", "author": null, "committer": null, "parents": [{"sha": "791e8c9c76380624c9257f7b7dac9707b1793ca2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/791e8c9c76380624c9257f7b7dac9707b1793ca2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/791e8c9c76380624c9257f7b7dac9707b1793ca2"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "52ce8135448cd15200c9ab34de0461a55fb336a7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f41e0f10464c060e928927c5272a360c31a48093/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f41e0f10464c060e928927c5272a360c31a48093/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f41e0f10464c060e928927c5272a360c31a48093", "patch": "@@ -1,3 +1,9 @@\n+2010-02-07  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_pair.h (pair<>::pair(_U1&&, const _T2&),\n+\tpair<>::pair(const _T1&, _U2&&), pair<>::pair(_U1&&, _U2&&)):\n+\tRevert to std::is_convertible, basing on DR 811.\n+\n 2010-02-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/42989"}, {"sha": "11d0d107f25d0b529f49bb6eb29ee8de31218373", "filename": "libstdc++-v3/include/bits/stl_pair.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f41e0f10464c060e928927c5272a360c31a48093/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f41e0f10464c060e928927c5272a360c31a48093/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_pair.h?ref=f41e0f10464c060e928927c5272a360c31a48093", "patch": "@@ -1,6 +1,6 @@\n // Pair implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -90,20 +90,20 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n       // DR 811.\n       template<class _U1, class = typename\n-\t       std::enable_if<std::is_constructible<_T1, _U1&&>::value>::type>\n+\t       std::enable_if<std::is_convertible<_U1, _T1>::value>::type>\n         pair(_U1&& __x, const _T2& __y)\n \t: first(std::forward<_U1>(__x)),\n \t  second(__y) { }\n \n       template<class _U2, class = typename\n-\t       std::enable_if<std::is_constructible<_T2, _U2&&>::value>::type>\n+\t       std::enable_if<std::is_convertible<_U2, _T2>::value>::type>\n         pair(const _T1& __x, _U2&& __y)\n \t: first(__x),\n \t  second(std::forward<_U2>(__y)) { }\n \n       template<class _U1, class _U2, class = typename\n-\t       std::enable_if<std::is_constructible<_T1, _U1&&>::value\n-\t\t\t    && std::is_constructible<_T2, _U2&&>::value>::type>\n+\t       std::enable_if<std::is_convertible<_U1, _T1>::value\n+\t\t\t      && std::is_convertible<_U2, _T2>::value>::type>\n         pair(_U1&& __x, _U2&& __y)\n \t: first(std::forward<_U1>(__x)),\n \t  second(std::forward<_U2>(__y)) { }"}]}