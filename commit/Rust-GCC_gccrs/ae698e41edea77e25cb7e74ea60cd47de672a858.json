{"sha": "ae698e41edea77e25cb7e74ea60cd47de672a858", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU2OThlNDFlZGVhNzdlMjVjYjdlNzRlYTYwY2Q0N2RlNjcyYTg1OA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-27T07:23:42Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-03-27T07:23:42Z"}, "message": "(stabilize_reference_1): For division and remainder, make a save_expr.\n\nFrom-SVN: r3889", "tree": {"sha": "40efd9c03a5fe34821e59b78b1f6b1e8320abc60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40efd9c03a5fe34821e59b78b1f6b1e8320abc60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae698e41edea77e25cb7e74ea60cd47de672a858", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae698e41edea77e25cb7e74ea60cd47de672a858", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae698e41edea77e25cb7e74ea60cd47de672a858", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae698e41edea77e25cb7e74ea60cd47de672a858/comments", "author": null, "committer": null, "parents": [{"sha": "cf1c49cb5648bacda0d9a01dce9e448f87f72ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf1c49cb5648bacda0d9a01dce9e448f87f72ab7"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "0ce3ddb6cb7caecaed0577c0acd3045e1e0d4686", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae698e41edea77e25cb7e74ea60cd47de672a858/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae698e41edea77e25cb7e74ea60cd47de672a858/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=ae698e41edea77e25cb7e74ea60cd47de672a858", "patch": "@@ -1940,6 +1940,14 @@ stabilize_reference_1 (e)\n       return e;\n       \n     case '2':\n+      /* Division is slow and tends to be compiled with jumps,\n+\t especially the division by powers of 2 that is often\n+\t found inside of an array reference.  So do it just once.  */\n+      if (code == TRUNC_DIV_EXPR || code == TRUNC_MOD_EXPR\n+\t  || code == FLOOR_DIV_EXPR || code == FLOOR_MOD_EXPR\n+\t  || code == CEIL_DIV_EXPR || code == CEIL_MOD_EXPR\n+\t  || code == ROUND_DIV_EXPR || code == ROUND_MOD_EXPR)\n+\treturn save_expr (e);\n       /* Recursively stabilize each operand.  */\n       result = build_nt (code, stabilize_reference_1 (TREE_OPERAND (e, 0)),\n \t\t\t stabilize_reference_1 (TREE_OPERAND (e, 1)));"}]}