{"sha": "63b4819753c735449a0915e62928fa6374cd70c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNiNDgxOTc1M2M3MzU0NDlhMDkxNWU2MjkyOGZhNjM3NGNkNzBjMw==", "commit": {"author": {"name": "Mark Shinwell", "email": "shinwell@codesourcery.com", "date": "2006-06-04T16:28:55Z"}, "committer": {"name": "Mark Shinwell", "email": "shinwell@gcc.gnu.org", "date": "2006-06-04T16:28:55Z"}, "message": "tree.h: Declare folding_initializer.\n\ngcc:\n\n\t* tree.h: Declare folding_initializer.\n\t* builtins.c (fold_builtin_constant_p): Give definite answer\n\tif folding inside an initializer.\n\t* fold-const.c: Define folding_initializer.\n\t(START_FOLD_INIT): Save and then set folding_initializer.\n\t(END_FOLD_INIT): Restore folding_initializer.\n\ngcc/testsuite:\n\n        * gcc.c-torture/compile/builtin_constant_p.c: New test.\n\nFrom-SVN: r114358", "tree": {"sha": "8043b65180715166e17c85119e10cb873f903255", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8043b65180715166e17c85119e10cb873f903255"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63b4819753c735449a0915e62928fa6374cd70c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b4819753c735449a0915e62928fa6374cd70c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b4819753c735449a0915e62928fa6374cd70c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b4819753c735449a0915e62928fa6374cd70c3/comments", "author": null, "committer": null, "parents": [{"sha": "7ec434b841e8120aad467db3efb249f536f5b819", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec434b841e8120aad467db3efb249f536f5b819", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec434b841e8120aad467db3efb249f536f5b819"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "d7dcfd1afec26f52fcbe88a2b51d50fa574357e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=63b4819753c735449a0915e62928fa6374cd70c3", "patch": "@@ -1,3 +1,12 @@\n+2006-06-04  Mark Shinwell  <shinwell@codesourcery.com>\n+\n+\t* tree.h: Declare folding_initializer.\n+\t* builtins.c (fold_builtin_constant_p): Give definite answer\n+\tif folding inside an initializer.\n+\t* fold-const.c: Define folding_initializer.\n+\t(START_FOLD_INIT): Save and then set folding_initializer.\n+\t(END_FOLD_INIT): Restore folding_initializer.\n+\n 2006-06-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/27039"}, {"sha": "603106a6751ceffcae657e7df1e25a273769c975", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=63b4819753c735449a0915e62928fa6374cd70c3", "patch": "@@ -6495,7 +6495,8 @@ fold_builtin_constant_p (tree arglist)\n   if (TREE_SIDE_EFFECTS (arglist)\n       || AGGREGATE_TYPE_P (TREE_TYPE (arglist))\n       || POINTER_TYPE_P (TREE_TYPE (arglist))\n-      || cfun == 0)\n+      || cfun == 0\n+      || folding_initializer)\n     return integer_zero_node;\n \n   return 0;"}, {"sha": "6f19704a8f666233d99698d2a7137f4e4c860413", "filename": "gcc/fold-const.c", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=63b4819753c735449a0915e62928fa6374cd70c3", "patch": "@@ -59,6 +59,10 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #include \"langhooks.h\"\n #include \"md5.h\"\n \n+/* Non-zero if we are folding constants inside an initializer; zero\n+   otherwise.  */\n+int folding_initializer = 0;\n+\n /* The following constants represent a bit based encoding of GCC's\n    comparison operators.  This encoding simplifies transformations\n    on relational comparison operators, such as AND and OR.  */\n@@ -11708,16 +11712,19 @@ fold_build3_stat (enum tree_code code, tree type, tree op0, tree op1, tree op2\n   int saved_trapping_math = flag_trapping_math;\\\n   int saved_rounding_math = flag_rounding_math;\\\n   int saved_trapv = flag_trapv;\\\n+  int saved_folding_initializer = folding_initializer;\\\n   flag_signaling_nans = 0;\\\n   flag_trapping_math = 0;\\\n   flag_rounding_math = 0;\\\n-  flag_trapv = 0\n+  flag_trapv = 0;\\\n+  folding_initializer = 1;\n \n #define END_FOLD_INIT \\\n   flag_signaling_nans = saved_signaling_nans;\\\n   flag_trapping_math = saved_trapping_math;\\\n   flag_rounding_math = saved_rounding_math;\\\n-  flag_trapv = saved_trapv\n+  flag_trapv = saved_trapv;\\\n+  folding_initializer = saved_folding_initializer;\n \n tree\n fold_build1_initializer (enum tree_code code, tree type, tree op)"}, {"sha": "a1f527301390c8e530b7ffa47a8bc610ffaa844c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=63b4819753c735449a0915e62928fa6374cd70c3", "patch": "@@ -1,3 +1,7 @@\n+2006-06-04  Mark Shinwell  <shinwell@codesourcery.com>\n+\n+\t* gcc.c-torture/compile/builtin_constant_p.c: New test.\n+\n 2006-06-04  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/27039"}, {"sha": "b377e38decb3638efc075bbb62f680dc110d1d72", "filename": "gcc/tree.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b4819753c735449a0915e62928fa6374cd70c3/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=63b4819753c735449a0915e62928fa6374cd70c3", "patch": "@@ -4142,6 +4142,10 @@ extern void using_eh_for_cleanups (void);\n \n /* In fold-const.c */\n \n+/* Non-zero if we are folding constants inside an initializer; zero\n+   otherwise.  */\n+extern int folding_initializer;\n+\n /* Fold constants as much as possible in an expression.\n    Returns the simplified expression.\n    Acts only on the top level of the expression;"}]}