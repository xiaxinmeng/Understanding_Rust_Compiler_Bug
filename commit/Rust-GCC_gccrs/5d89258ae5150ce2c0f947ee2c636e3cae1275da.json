{"sha": "5d89258ae5150ce2c0f947ee2c636e3cae1275da", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ4OTI1OGFlNTE1MGNlMmMwZjk0N2VlMmM2MzZlM2NhZTEyNzVkYQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-04-25T06:39:48Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-04-25T06:39:48Z"}, "message": "[multiple changes]\n\n\n2000-04-24  Nathan Myers  <ncm@cantrip.org>\n\n\t* src/string-inst.cc: More fixing.\n\n2000-04-24  Benjamin Kosnik  <bkoz@gnu.org>\n\n\t* bits/stl_iterator.h: Pedantic fixing.\n\t* bits/std_sstream.h: And here.\n\t* bits/string.tcc: And here.\n\n2000-04-24  Felix Natter <fnatter@gmx.net>\n\n\t* docs/17_intro/howto.html: Add bits.\n\t* docs/17_intro/porting-howto.html: New file.\n\n2000-04-24  Branko Cibej  <branko.cibej@hermes.si>\n\n        * acinclude.m4(GLIBCPP_CHECK_WCHAR_T_SUPPORT): Expand\n        @libinst_wstring_la@ to libinst-wstring.la when specializing for\n        wchar_t, to empty string otherwise.\n        * src/Makefile.am: (EXTRA_LTLIBRARIES): New.\n        (sources): Remove $(string_sources) and $(wstring_sources).\n        (libstdc___la_LIBADD): Add libinst-string.la and @libinst_wstring_la@.\n        (libstdc___la_DEPENDENCIES): New.\n        (libinst_string_la_SOURCES, libinst_wstring_la_SOURCES): New.\n\nFrom-SVN: r33402", "tree": {"sha": "c2a81aa4cc2759809933086eb1839b130f8f584f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c2a81aa4cc2759809933086eb1839b130f8f584f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d89258ae5150ce2c0f947ee2c636e3cae1275da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d89258ae5150ce2c0f947ee2c636e3cae1275da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d89258ae5150ce2c0f947ee2c636e3cae1275da", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d89258ae5150ce2c0f947ee2c636e3cae1275da/comments", "author": null, "committer": null, "parents": [{"sha": "d872905426f4aee0ed0625abaa59524bf6330045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d872905426f4aee0ed0625abaa59524bf6330045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d872905426f4aee0ed0625abaa59524bf6330045"}], "stats": {"total": 297, "additions": 180, "deletions": 117}, "files": [{"sha": "b832f40eb05af01820b33e0f33a2cebc6fb01d81", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -1,3 +1,29 @@\n+2000-04-24  Nathan Myers  <ncm@cantrip.org>\n+\n+\t* src/string-inst.cc: More fixing.\n+\n+2000-04-24  Benjamin Kosnik  <bkoz@gnu.org>\n+\n+\t* bits/stl_iterator.h: Pedantic fixing.\n+\t* bits/std_sstream.h: And here.\n+\t* bits/string.tcc: And here.\n+\n+2000-04-24  Felix Natter <fnatter@gmx.net> \n+\n+\t* docs/17_intro/howto.html: Add bits.\n+\t* docs/17_intro/porting-howto.html: New file.\n+\t\n+2000-04-24  Branko Cibej  <branko.cibej@hermes.si>\n+\n+        * acinclude.m4(GLIBCPP_CHECK_WCHAR_T_SUPPORT): Expand\n+        @libinst_wstring_la@ to libinst-wstring.la when specializing for\n+        wchar_t, to empty string otherwise.\n+        * src/Makefile.am: (EXTRA_LTLIBRARIES): New.\n+        (sources): Remove $(string_sources) and $(wstring_sources).\n+        (libstdc___la_LIBADD): Add libinst-string.la and @libinst_wstring_la@.\n+        (libstdc___la_DEPENDENCIES): New.\n+        (libinst_string_la_SOURCES, libinst_wstring_la_SOURCES): New.\n+\n 2000-04-20  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* bits/std_sstream.h: Tweak formatting."}, {"sha": "861bcdc87ab77d5d4053eba788e7964c644f4242", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -100,6 +100,7 @@ WERRORSUPPRESS = @WERRORSUPPRESS@\n cpu_include_dir = @cpu_include_dir@\n ctype_include_dir = @ctype_include_dir@\n glibcpp_basedir = @glibcpp_basedir@\n+libinst_wstring_la = @libinst_wstring_la@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n MAINT_CHARSET = latin1"}, {"sha": "db89cb5603e62ef448a491289c69760fdb40b6d5", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -484,12 +484,15 @@ AC_DEFUN(GLIBCPP_CHECK_WCHAR_T_SUPPORT, [\n \n   dnl Tests for wide character functions.\n   AC_REPLACE_STRINGFUNCS(wcslen wmemchr wmemcmp wmemcpy wmemmove wmemset)\n+  AC_SUBST(libinst_wstring_la)\n \n   AC_MSG_CHECKING([for wide character support])\n   if test $has_weof = \"yes\" && test $has_wchar_minmax = \"yes\"; then\n+    libinst_wstring_la=\"libinst-wstring.la\"\n     AC_DEFINE(_GLIBCPP_USE_WCHAR_T)\n     AC_MSG_RESULT(ok)\n   else\n+    libinst_wstring_la=\"\"\n     AC_MSG_RESULT(\"not specializing for wchar_t\")\n   fi\n   ],["}, {"sha": "16bd938e82e24546f4c1885c36b5536af4bac17d", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -496,12 +496,15 @@ AC_DEFUN(GLIBCPP_CHECK_WCHAR_T_SUPPORT, [\n \n   dnl Tests for wide character functions.\n   AC_REPLACE_STRINGFUNCS(wcslen wmemchr wmemcmp wmemcpy wmemmove wmemset)\n+  AC_SUBST(libinst_wstring_la)\n \n   AC_MSG_CHECKING([for wide character support])\n   if test $has_weof = \"yes\" && test $has_wchar_minmax = \"yes\"; then\n+    libinst_wstring_la=\"libinst-wstring.la\"\n     AC_DEFINE(_GLIBCPP_USE_WCHAR_T)\n     AC_MSG_RESULT(ok)\n   else\n+    libinst_wstring_la=\"\"\n     AC_MSG_RESULT(\"not specializing for wchar_t\")\n   fi\n   ],["}, {"sha": "126d86d1d360fadbd8add0fb89c9fbdeddb7ef0c", "filename": "libstdc++-v3/bits/std_sstream.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -52,7 +52,7 @@ namespace std {\n       // Non-standard types:\n       typedef basic_streambuf<_CharT, _Traits> \t\t__streambuf_type;\n       typedef basic_string<_CharT, _Traits, _Alloc> \t__string_type;\n-      typedef __string_type::size_type\t\t\t__size_type;\n+      typedef typename __string_type::size_type\t\t__size_type;\n \n     private:\n       // Data Members:"}, {"sha": "289cbe6ea051f90b13f7b6a1008366373ffd0f0f", "filename": "libstdc++-v3/bits/stl_iterator.h", "status": "modified", "additions": 41, "deletions": 45, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fbits%2Fstl_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fbits%2Fstl_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstl_iterator.h?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -969,79 +969,75 @@ class __normal_iterator\n                     iterator_traits<_Iterator>::pointer,\n                     iterator_traits<_Iterator>::reference>\n {\n-public:\n \n+protected:\n+  _Iterator _M_current;\n+\n+public:\n   typedef __normal_iterator<_Iterator, _Container> normal_iterator_type;\n+  typedef iterator_traits<_Iterator>  \t\t\t__traits_type;\n+  typedef typename __traits_type::iterator_category \titerator_category;\n+  typedef typename __traits_type::value_type \t\tvalue_type;\n+  typedef typename __traits_type::difference_type \tdifference_type;\n+  typedef typename __traits_type::pointer          \tpointer;\n+  typedef typename __traits_type::reference \t\treference;\n \n-  inline __normal_iterator() : _M_current() { }\n+  __normal_iterator() : _M_current(_Iterator()) { }\n \n-  inline explicit __normal_iterator(const _Iterator& __i)\n-    : _M_current(__i) { }\n+  explicit __normal_iterator(const _Iterator& __i) : _M_current(__i) { }\n \n   // Allow iterator to const_iterator conversion\n   template<typename _Iter>\n   inline __normal_iterator(const __normal_iterator<_Iter, _Container>& __i)\n     : _M_current(__i.base()) { }\n \n-  // forward iterator requirements\n-\n-  inline reference\n-  operator*() const\n-    { return *_M_current; }\n+  // Forward iterator requirements\n+  reference\n+  operator*() const { return *_M_current; }\n \n-  inline pointer\n-  operator->() const\n-    { return _M_current; }\n+  pointer\n+  operator->() const { return _M_current; }\n \n-  inline normal_iterator_type&\n-  operator++()\n-    { ++_M_current; return *this; }\n+  normal_iterator_type&\n+  operator++() { ++_M_current; return *this; }\n \n-  inline normal_iterator_type\n-  operator++(int)\n-    { return __normal_iterator(_M_current++); }\n+  normal_iterator_type\n+  operator++(int) { return __normal_iterator(_M_current++); }\n \n-  // bidirectional iterator requirements\n+  // Bidirectional iterator requirements\n+  normal_iterator_type&\n+  operator--() { --_M_current; return *this; }\n \n-  inline normal_iterator_type&\n-  operator--()\n-    { --_M_current; return *this; }\n+  normal_iterator_type\n+  operator--(int) { return __normal_iterator(_M_current--); }\n \n-  inline normal_iterator_type\n-  operator--(int)\n-    { return __normal_iterator(_M_current--); }\n-\n-  // random access iterator requirements\n-\n-  inline reference\n+  // Random access iterator requirements\n+  reference\n   operator[](const difference_type& __n) const\n-    { return _M_current[__n]; }\n+  { return _M_current[__n]; }\n \n-  inline normal_iterator_type&\n+  normal_iterator_type&\n   operator+=(const difference_type& __n)\n-    { _M_current += __n; return *this; }\n+  { _M_current += __n; return *this; }\n \n-  inline normal_iterator_type\n+  normal_iterator_type\n   operator+(const difference_type& __n) const\n-    { return __normal_iterator(_M_current + __n); }\n+  { return __normal_iterator(_M_current + __n); }\n \n-  inline normal_iterator_type&\n+  normal_iterator_type&\n   operator-=(const difference_type& __n)\n-    { _M_current -= __n; return *this; }\n+  { _M_current -= __n; return *this; }\n \n-  inline normal_iterator_type\n+  normal_iterator_type\n   operator-(const difference_type& __n) const\n-    { return __normal_iterator(_M_current - __n); }\n+  { return __normal_iterator(_M_current - __n); }\n \n-  inline difference_type\n+  difference_type\n   operator-(const normal_iterator_type& __i) const\n-    { return _M_current - __i._M_current; }\n-\n-  const _Iterator& base() const\n-    { return _M_current; }\n+  { return _M_current - __i._M_current; }\n \n-protected:\n-  _Iterator _M_current;\n+  const _Iterator& \n+  base() const { return _M_current; }\n };\n \n // forward iterator requirements"}, {"sha": "475a5d52f8bba0e0fe9346cb946eff678faface7", "filename": "libstdc++-v3/bits/string.tcc", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fbits%2Fstring.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fbits%2Fstring.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstring.tcc?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -518,7 +518,8 @@ namespace std\n              const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n     {\n       typedef basic_string<_CharT,_Traits,_Alloc> __string_type;\n-      __string_type::size_type __len = _Traits::length(__lhs);\n+      typedef typename __string_type::size_type\t  __size_type;\n+      __size_type __len = _Traits::length(__lhs);\n       __string_type __str;\n       __str.reserve(__len + __rhs.size());\n       __str.append(__lhs, __lhs + __len);\n@@ -531,16 +532,15 @@ namespace std\n     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)\n     {\n       typedef basic_string<_CharT,_Traits,_Alloc> __string_type;\n+      typedef typename __string_type::size_type\t  __size_type;\n       __string_type __str;\n-      __string_type::size_type __len = __rhs.size();\n+      __size_type __len = __rhs.size();\n       __str.reserve(__len + 1);\n       __str.append(__string_type::size_type(1), __lhs);\n       __str.append(__rhs);\n       return __str;\n     }\n \n-\n-\n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT, _Traits, _Alloc>&\n     basic_string<_CharT, _Traits, _Alloc>::\n@@ -556,7 +556,6 @@ namespace std\n       return *this;\n     }\n   \n-  \n   template<typename _CharT, typename _Traits, typename _Alloc>\n     basic_string<_CharT, _Traits, _Alloc>::size_type\n     basic_string<_CharT, _Traits, _Alloc>::"}, {"sha": "6057eca3c401ae100458433972eded2b50611546", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 38, "deletions": 34, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -3350,16 +3350,19 @@ fi\n done\n \n \n+  \n \n   echo $ac_n \"checking for wide character support\"\"... $ac_c\" 1>&6\n-echo \"configure:3356: checking for wide character support\" >&5\n+echo \"configure:3357: checking for wide character support\" >&5\n   if test $has_weof = \"yes\" && test $has_wchar_minmax = \"yes\"; then\n+    libinst_wstring_la=\"libinst-wstring.la\"\n     cat >> confdefs.h <<\\EOF\n #define _GLIBCPP_USE_WCHAR_T 1\n EOF\n \n     echo \"$ac_t\"\"ok\" 1>&6\n   else\n+    libinst_wstring_la=\"\"\n     echo \"$ac_t\"\"\"not specializing for wchar_t\"\" 1>&6\n   fi\n   \n@@ -3378,17 +3381,17 @@ fi\n   \n   ac_safe=`echo \"ctype.h\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for ctype.h\"\"... $ac_c\" 1>&6\n-echo \"configure:3382: checking for ctype.h\" >&5\n+echo \"configure:3385: checking for ctype.h\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3387 \"configure\"\n+#line 3390 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3392: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3395: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3409,9 +3412,9 @@ if eval \"test \\\"`echo '$ac_cv_header_'$ac_safe`\\\" = yes\"; then\n         ctype_default=yes\n \n         echo $ac_n \"checking for gnu-linux <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3413: checking for gnu-linux <ctype>\" >&5\n+echo \"configure:3416: checking for gnu-linux <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3415 \"configure\"\n+#line 3418 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3422,7 +3425,7 @@ int\n \t+ __ctype_tolower[a] + __ctype_toupper[a] + __ctype_b[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3426: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3429: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_linux=yes\n@@ -3441,9 +3444,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking for solaris 2.6 or 2.7 <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3445: checking for solaris 2.6 or 2.7 <ctype>\" >&5\n+echo \"configure:3448: checking for solaris 2.6 or 2.7 <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3447 \"configure\"\n+#line 3450 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3454,7 +3457,7 @@ int\n \t+ __trans_lower[a] + __trans_upper[a] + __ctype_mask[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3458: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3461: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_solaris=yes\n@@ -3469,7 +3472,7 @@ rm -f conftest*\n \n     if test $ctype_solaris = \"yes\"; then\n       echo $ac_n \"checking   for version\"\"... $ac_c\" 1>&6\n-echo \"configure:3473: checking   for version\" >&5\n+echo \"configure:3476: checking   for version\" >&5\n       ac_ext=C\n # CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.\n ac_cpp='$CXXCPP $CPPFLAGS'\n@@ -3478,14 +3481,14 @@ ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftes\n cross_compiling=$ac_cv_prog_cxx_cross\n  \n       cat > conftest.$ac_ext <<EOF\n-#line 3482 \"configure\"\n+#line 3485 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n typedef long* __to_type; __to_type const& _M_toupper = __trans_upper;\n ; return 0; }\n EOF\n-if { (eval echo configure:3489: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3492: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n       ctype_solaris26=yes\n@@ -3517,9 +3520,9 @@ cross_compiling=$ac_cv_prog_cc_cross\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking for solaris 2.5.1 <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3521: checking for solaris 2.5.1 <ctype>\" >&5\n+echo \"configure:3524: checking for solaris 2.5.1 <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3523 \"configure\"\n+#line 3526 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3529,7 +3532,7 @@ int\n \t+ __ctype[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3533: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3536: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_solaris25=yes\n@@ -3549,9 +3552,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking for aix <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3553: checking for aix <ctype>\" >&5\n+echo \"configure:3556: checking for aix <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3555 \"configure\"\n+#line 3558 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3562,7 +3565,7 @@ int\n \t+ _VALC('a') + _IS('c', 0);}\n ; return 0; }\n EOF\n-if { (eval echo configure:3566: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3569: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_aix=yes\n@@ -3582,9 +3585,9 @@ rm -f conftest*\n \n         if test $ctype_default = \"yes\"; then\n     echo $ac_n \"checking for newlib <ctype>\"\"... $ac_c\" 1>&6\n-echo \"configure:3586: checking for newlib <ctype>\" >&5\n+echo \"configure:3589: checking for newlib <ctype>\" >&5\n     cat > conftest.$ac_ext <<EOF\n-#line 3588 \"configure\"\n+#line 3591 \"configure\"\n #include \"confdefs.h\"\n #include <ctype.h>\n int main() {\n@@ -3594,7 +3597,7 @@ int\n \t+ _ctype_[a];}\n ; return 0; }\n EOF\n-if { (eval echo configure:3598: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n+if { (eval echo configure:3601: \\\"$ac_compile\\\") 1>&5; (eval $ac_compile) 2>&5; }; then\n   rm -rf conftest*\n   \\\n     ctype_newlib=yes\n@@ -3628,17 +3631,17 @@ fi\n do\n ac_safe=`echo \"$ac_hdr\" | sed 'y%./+-%__p_%'`\n echo $ac_n \"checking for $ac_hdr\"\"... $ac_c\" 1>&6\n-echo \"configure:3632: checking for $ac_hdr\" >&5\n+echo \"configure:3635: checking for $ac_hdr\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3637 \"configure\"\n+#line 3640 \"configure\"\n #include \"confdefs.h\"\n #include <$ac_hdr>\n EOF\n ac_try=\"$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out\"\n-{ (eval echo configure:3642: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n+{ (eval echo configure:3645: \\\"$ac_try\\\") 1>&5; (eval $ac_try) 2>&5; }\n ac_err=`grep -v '^ *+' conftest.out | grep -v \"^conftest.${ac_ext}\\$\"`\n if test -z \"$ac_err\"; then\n   rm -rf conftest*\n@@ -3667,12 +3670,12 @@ done\n for ac_func in getpagesize\n do\n echo $ac_n \"checking for $ac_func\"\"... $ac_c\" 1>&6\n-echo \"configure:3671: checking for $ac_func\" >&5\n+echo \"configure:3674: checking for $ac_func\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_$ac_func'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3676 \"configure\"\n+#line 3679 \"configure\"\n #include \"confdefs.h\"\n /* System header to define __stub macros and hopefully few prototypes,\n     which can conflict with char $ac_func(); below.  */\n@@ -3695,7 +3698,7 @@ $ac_func();\n \n ; return 0; }\n EOF\n-if { (eval echo configure:3699: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3702: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   eval \"ac_cv_func_$ac_func=yes\"\n else\n@@ -3720,15 +3723,15 @@ fi\n done\n \n echo $ac_n \"checking for working mmap\"\"... $ac_c\" 1>&6\n-echo \"configure:3724: checking for working mmap\" >&5\n+echo \"configure:3727: checking for working mmap\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_func_mmap_fixed_mapped'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   if test \"$cross_compiling\" = yes; then\n   ac_cv_func_mmap_fixed_mapped=no\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3732 \"configure\"\n+#line 3735 \"configure\"\n #include \"confdefs.h\"\n \n /* Thanks to Mike Haertel and Jim Avera for this test.\n@@ -3868,7 +3871,7 @@ main()\n }\n \n EOF\n-if { (eval echo configure:3872: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n+if { (eval echo configure:3875: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null\n then\n   ac_cv_func_mmap_fixed_mapped=yes\n else\n@@ -3931,19 +3934,19 @@ fi\n \n if test $ac_cv_header_locale_h = yes; then\n     echo $ac_n \"checking for LC_MESSAGES\"\"... $ac_c\" 1>&6\n-echo \"configure:3935: checking for LC_MESSAGES\" >&5\n+echo \"configure:3938: checking for LC_MESSAGES\" >&5\n if eval \"test \\\"`echo '$''{'ac_cv_val_LC_MESSAGES'+set}'`\\\" = set\"; then\n   echo $ac_n \"(cached) $ac_c\" 1>&6\n else\n   cat > conftest.$ac_ext <<EOF\n-#line 3940 \"configure\"\n+#line 3943 \"configure\"\n #include \"confdefs.h\"\n #include <locale.h>\n int main() {\n return LC_MESSAGES\n ; return 0; }\n EOF\n-if { (eval echo configure:3947: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n+if { (eval echo configure:3950: \\\"$ac_link\\\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then\n   rm -rf conftest*\n   ac_cv_val_LC_MESSAGES=yes\n else\n@@ -4187,6 +4190,7 @@ s%@ctype_include_dir@%$ctype_include_dir%g\n s%@LIBMATHOBJS@%$LIBMATHOBJS%g\n s%@USE_LONG_DOUBLE@%$USE_LONG_DOUBLE%g\n s%@LIBSTRINGOBJS@%$LIBSTRINGOBJS%g\n+s%@libinst_wstring_la@%$libinst_wstring_la%g\n s%@CANADIAN_TRUE@%$CANADIAN_TRUE%g\n s%@CANADIAN_FALSE@%$CANADIAN_FALSE%g\n s%@NULL_TARGET_TRUE@%$NULL_TARGET_TRUE%g"}, {"sha": "25642b1ba781d9f88cb0873302d242b5437a3fd9", "filename": "libstdc++-v3/docs/17_intro/howto.html", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fhowto.html?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -9,7 +9,7 @@\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 17</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/docs/18_support/\">\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.10 2000/04/18 22:05:49 pme Exp $ -->\n+<!-- $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -29,6 +29,7 @@ <H1>Contents</H1>\n    <LI><A HREF=\"#2\">The Standard C++ header files</A>\n    <LI><A HREF=\"#3\">Thread-safety</A>\n    <LI><A HREF=\"#4\"><TT>&lt;foo&gt;</TT> vs <TT>&lt;foo.h&gt;</TT></A>\n+   <LI><A HREF=\"porting-howto.html\">Porting-howto</A>\n </UL>\n \n <HR>\n@@ -146,7 +147,7 @@ <H2><A NAME=\"4\"><TT>&lt;foo&gt;</TT> vs <TT>&lt;foo.h&gt;</TT></A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.10 2000/04/18 22:05:49 pme Exp $\n+<BR> $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "2ea9877e9f8d2b9d8b29f3a1cb2a8226e2cabbdb", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -100,6 +100,7 @@ WERRORSUPPRESS = @WERRORSUPPRESS@\n cpu_include_dir = @cpu_include_dir@\n ctype_include_dir = @ctype_include_dir@\n glibcpp_basedir = @glibcpp_basedir@\n+libinst_wstring_la = @libinst_wstring_la@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n "}, {"sha": "e2c4d2d305f0807e9d671a357bb33c8dcd50895d", "filename": "libstdc++-v3/math/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fmath%2FMakefile.in?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -100,6 +100,7 @@ WERRORSUPPRESS = @WERRORSUPPRESS@\n cpu_include_dir = @cpu_include_dir@\n ctype_include_dir = @ctype_include_dir@\n glibcpp_basedir = @glibcpp_basedir@\n+libinst_wstring_la = @libinst_wstring_la@\n \n AUTOMAKE_OPTIONS = 1.3 cygnus\n "}, {"sha": "7eb5a97e3baa16d412f724f487ebcabe54ff565e", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -34,6 +34,7 @@ toolexeclibdir = $(toolexecdir)/lib$(MULTISUBDIR)\n endif\n \n toolexeclib_LTLIBRARIES = libstdc++.la\n+EXTRA_LTLIBRARIES = libinst-string.la libinst-wstring.la\n \n \n WERROR = -Werror\n@@ -212,8 +213,7 @@ sources = \\\n \tcomplex.cc complexf.cc complexl.cc complex_io.cc \\\n \tstdexcept.cc ios.cc stdstreams.cc strstream.cc \\\n \tlocale.cc localename.cc  \\\n-\tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc \\\n-\t$(string_sources) $(wstring_sources)\n+\tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc \n \n VPATH += $(top_srcdir) $(top_srcdir)/std $(top_srcdir)/src\n VPATH += $(top_srcdir)/@ctype_include_dir@\n@@ -224,10 +224,18 @@ EXTRA_sources = string-inst.cc\n \n libstdc___la_SOURCES = $(sources)\n \n-libstdc___la_LIBADD = ../math/libmath.la ../libio/libio.la \n+libinst_string_la_SOURCES = $(string_sources)\n+\n+libinst_wstring_la_SOURCES = $(wstring_sources)\n+\n+libstdc___la_LIBADD = \\\n+\t../math/libmath.la ../libio/libio.la \\\n+\tlibinst-string.la @libinst_wstring_la@\n \n libstdc___la_LDFLAGS = -version-info 3:0:0 -lm\n \n+libstdc___la_DEPENDENCIES = $(libstdc___la_LIBADD)\n+\n \n # We cannot use the default rules to install headers since we cannot\n # statically decide which headers to install.  So we have our own special"}, {"sha": "0ffa592659acd540532708413eb689ec5ce15b4b", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 46, "deletions": 25, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -99,6 +99,7 @@ WERRORSUPPRESS = @WERRORSUPPRESS@\n cpu_include_dir = @cpu_include_dir@\n ctype_include_dir = @ctype_include_dir@\n glibcpp_basedir = @glibcpp_basedir@\n+libinst_wstring_la = @libinst_wstring_la@\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -110,6 +111,7 @@ MAINT_CHARSET = latin1\n @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n \n toolexeclib_LTLIBRARIES = libstdc++.la\n+EXTRA_LTLIBRARIES = libinst-string.la libinst-wstring.la\n \n WERROR = -Werror\n # OPTIMIZE_CXXFLAGS =  -O3 -fstrict-aliasing -fsquangle -fnew-exceptions \\\n@@ -295,8 +297,7 @@ sources = \\\n \tcomplex.cc complexf.cc complexl.cc complex_io.cc \\\n \tstdexcept.cc ios.cc stdstreams.cc strstream.cc \\\n \tlocale.cc localename.cc  \\\n-\tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc \\\n-\t$(string_sources) $(wstring_sources)\n+\tlocale-inst.cc stl-inst.cc misc-inst.cc valarray-inst.cc \n \n VPATH =  $(top_srcdir) $(top_srcdir)/std $(top_srcdir)/src $(top_srcdir)/@ctype_include_dir@\n \n@@ -305,10 +306,19 @@ EXTRA_sources = string-inst.cc\n \n libstdc___la_SOURCES = $(sources)\n \n-libstdc___la_LIBADD = ../math/libmath.la ../libio/libio.la \n+libinst_string_la_SOURCES = $(string_sources)\n+\n+libinst_wstring_la_SOURCES = $(wstring_sources)\n+\n+libstdc___la_LIBADD = \\\n+\t../math/libmath.la ../libio/libio.la \\\n+\tlibinst-string.la @libinst_wstring_la@\n+\n \n libstdc___la_LDFLAGS = -version-info 3:0:0 -lm\n \n+libstdc___la_DEPENDENCIES = $(libstdc___la_LIBADD)\n+\n # We cannot use the default rules to install headers since we cannot\n # statically decide which headers to install.  So we have our own special\n # installation routine here.\n@@ -323,11 +333,9 @@ DEFS = @DEFS@ -I. -I$(srcdir) -I..\n CPPFLAGS = @CPPFLAGS@\n LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n-libstdc___la_DEPENDENCIES =  ../math/libmath.la ../libio/libio.la\n-libstdc___la_OBJECTS =  limitsMEMBERS.lo c++io.lo cmath.lo complex.lo \\\n-complexf.lo complexl.lo complex_io.lo stdexcept.lo ios.lo stdstreams.lo \\\n-strstream.lo locale.lo localename.lo locale-inst.lo stl-inst.lo \\\n-misc-inst.lo valarray-inst.lo stringMAIN.lo stringCTORNC.lo \\\n+libinst_string_la_LDFLAGS = \n+libinst_string_la_LIBADD = \n+libinst_string_la_OBJECTS =  stringMAIN.lo stringCTORNC.lo \\\n stringCTORAL.lo stringCTORCPR.lo stringCTORCPRAL.lo stringCTORPRAL.lo \\\n stringCTORPAL.lo stringCTORDUPAL.lo stringCTORPP.lo stringCTORII.lo \\\n stringMUTATE.lo stringRESERVE.lo stringSWAP.lo stringSLOP.lo \\\n@@ -341,21 +349,28 @@ stringRFIND.lo stringRFINDC.lo stringFFO.lo stringFLO.lo stringFFNO.lo \\\n stringFLNO.lo stringFLNOC.lo stringCOMPARE.lo stringCOMPARE2.lo \\\n stringCOMPAREP.lo stringCOMPAREP2.lo stringADDPS.lo stringADDCS.lo \\\n stringEXTRACT.lo stringINSERT.lo stringGETLINE.lo stringSCOPY.lo \\\n-stringEQ.lo wstringMAIN.lo wstringCTORNC.lo wstringCTORAL.lo \\\n-wstringCTORCPR.lo wstringCTORCPRAL.lo wstringCTORPRAL.lo \\\n-wstringCTORPAL.lo wstringCTORDUPAL.lo wstringCTORPP.lo wstringCTORII.lo \\\n-wstringMUTATE.lo wstringRESERVE.lo wstringSWAP.lo wstringSLOP.lo \\\n-wstringRESIZE.lo wstringAPPCOPY.lo wstringAPPCPR.lo wstringAPPPR.lo \\\n-wstringAPPDUP.lo wstringAPPII.lo wstringASSCP.lo wstringASSII.lo \\\n-wstringINSII.lo wstringREPRR.lo wstringREPIIDUP.lo wstringREPII.lo \\\n-wstringREPIII.lo wstringREP4I.lo wstringREPIIPP.lo wstringREPIIPP2.lo \\\n-wstringCOPY.lo wstringCONII.lo wstringCONIIF.lo wstringCONPPF.lo \\\n-wstringCONPPF2.lo wstringCONSC.lo wstringFIND.lo wstringFINDC.lo \\\n-wstringRFIND.lo wstringRFINDC.lo wstringFFO.lo wstringFLO.lo \\\n-wstringFFNO.lo wstringFLNO.lo wstringFLNOC.lo wstringCOMPARE.lo \\\n-wstringCOMPARE2.lo wstringCOMPAREP.lo wstringCOMPAREP2.lo \\\n-wstringADDPS.lo wstringADDCS.lo wstringEXTRACT.lo wstringINSERT.lo \\\n-wstringGETLINE.lo wstringSCOPY.lo wstringEQ.lo\n+stringEQ.lo\n+libinst_wstring_la_LDFLAGS = \n+libinst_wstring_la_LIBADD = \n+libinst_wstring_la_OBJECTS =  wstringMAIN.lo wstringCTORNC.lo \\\n+wstringCTORAL.lo wstringCTORCPR.lo wstringCTORCPRAL.lo \\\n+wstringCTORPRAL.lo wstringCTORPAL.lo wstringCTORDUPAL.lo \\\n+wstringCTORPP.lo wstringCTORII.lo wstringMUTATE.lo wstringRESERVE.lo \\\n+wstringSWAP.lo wstringSLOP.lo wstringRESIZE.lo wstringAPPCOPY.lo \\\n+wstringAPPCPR.lo wstringAPPPR.lo wstringAPPDUP.lo wstringAPPII.lo \\\n+wstringASSCP.lo wstringASSII.lo wstringINSII.lo wstringREPRR.lo \\\n+wstringREPIIDUP.lo wstringREPII.lo wstringREPIII.lo wstringREP4I.lo \\\n+wstringREPIIPP.lo wstringREPIIPP2.lo wstringCOPY.lo wstringCONII.lo \\\n+wstringCONIIF.lo wstringCONPPF.lo wstringCONPPF2.lo wstringCONSC.lo \\\n+wstringFIND.lo wstringFINDC.lo wstringRFIND.lo wstringRFINDC.lo \\\n+wstringFFO.lo wstringFLO.lo wstringFFNO.lo wstringFLNO.lo \\\n+wstringFLNOC.lo wstringCOMPARE.lo wstringCOMPARE2.lo wstringCOMPAREP.lo \\\n+wstringCOMPAREP2.lo wstringADDPS.lo wstringADDCS.lo wstringEXTRACT.lo \\\n+wstringINSERT.lo wstringGETLINE.lo wstringSCOPY.lo wstringEQ.lo\n+libstdc___la_OBJECTS =  limitsMEMBERS.lo c++io.lo cmath.lo complex.lo \\\n+complexf.lo complexl.lo complex_io.lo stdexcept.lo ios.lo stdstreams.lo \\\n+strstream.lo locale.lo localename.lo locale-inst.lo stl-inst.lo \\\n+misc-inst.lo valarray-inst.lo\n CXXFLAGS = @CXXFLAGS@\n CXXLD = $(CXX)\n DIST_COMMON =  Makefile.am Makefile.in\n@@ -365,8 +380,8 @@ DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n TAR = gtar\n GZIP_ENV = --best\n-SOURCES = $(libstdc___la_SOURCES)\n-OBJECTS = $(libstdc___la_OBJECTS)\n+SOURCES = $(libinst_string_la_SOURCES) $(libinst_wstring_la_SOURCES) $(libstdc___la_SOURCES)\n+OBJECTS = $(libinst_string_la_OBJECTS) $(libinst_wstring_la_OBJECTS) $(libstdc___la_OBJECTS)\n \n all: all-redirect\n .SUFFIXES:\n@@ -442,6 +457,12 @@ distclean-libtool:\n \n maintainer-clean-libtool:\n \n+libinst-string.la: $(libinst_string_la_OBJECTS) $(libinst_string_la_DEPENDENCIES)\n+\t$(CXXLINK)  $(libinst_string_la_LDFLAGS) $(libinst_string_la_OBJECTS) $(libinst_string_la_LIBADD) $(LIBS)\n+\n+libinst-wstring.la: $(libinst_wstring_la_OBJECTS) $(libinst_wstring_la_DEPENDENCIES)\n+\t$(CXXLINK)  $(libinst_wstring_la_LDFLAGS) $(libinst_wstring_la_OBJECTS) $(libinst_wstring_la_LIBADD) $(LIBS)\n+\n libstdc++.la: $(libstdc___la_OBJECTS) $(libstdc___la_DEPENDENCIES)\n \t$(CXXLINK) -rpath $(toolexeclibdir) $(libstdc___la_LDFLAGS) $(libstdc___la_OBJECTS) $(libstdc___la_LIBADD) $(LIBS)\n .cc.o:"}, {"sha": "28467ec85efed0ab0c2a6d0e89b3618a7b61e981", "filename": "libstdc++-v3/src/string-inst.cc", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d89258ae5150ce2c0f947ee2c636e3cae1275da/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstring-inst.cc?ref=5d89258ae5150ce2c0f947ee2c636e3cae1275da", "patch": "@@ -280,8 +280,7 @@ namespace std\n #ifdef CONSC\n   template \n     C* \n-    S::_S_construct<S::iterator>\n-    (S::size_type, C, const allocator<C>&);\n+    S::_S_construct(S::size_type, C, S::allocator_type const&);\n #endif\n \n #ifdef FIND"}]}