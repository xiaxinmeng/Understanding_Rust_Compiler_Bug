{"sha": "a1adedd03b50d25342d52ca1e72db6de2b3b737b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhZGVkZDAzYjUwZDI1MzQyZDUyY2ExZTcyZGI2ZGUyYjNiNzM3Yg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2006-09-21T20:07:10Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2006-09-21T20:07:10Z"}, "message": "type_traits.h (__numeric_traits_integer): New.\n\n2006-09-21  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/ext/type_traits.h (__numeric_traits_integer): New.\n\t(__numeric_traits_floating): New.\n\t(__numeric_traits): Use them.\n\t* testsuite/ext/type_traits.cc: New.\n\nFrom-SVN: r117119", "tree": {"sha": "5d4d313659bcf0fdb7debf4f41a5916874386daa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d4d313659bcf0fdb7debf4f41a5916874386daa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1adedd03b50d25342d52ca1e72db6de2b3b737b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1adedd03b50d25342d52ca1e72db6de2b3b737b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1adedd03b50d25342d52ca1e72db6de2b3b737b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1adedd03b50d25342d52ca1e72db6de2b3b737b/comments", "author": null, "committer": null, "parents": [{"sha": "32273f9fa66e66aa0e5316b68ec56c6290c22b65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32273f9fa66e66aa0e5316b68ec56c6290c22b65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32273f9fa66e66aa0e5316b68ec56c6290c22b65"}], "stats": {"total": 71, "additions": 58, "deletions": 13}, "files": [{"sha": "353b2b6f7ba6fa0330e9091ba377c154a68031ac", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1adedd03b50d25342d52ca1e72db6de2b3b737b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1adedd03b50d25342d52ca1e72db6de2b3b737b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=a1adedd03b50d25342d52ca1e72db6de2b3b737b", "patch": "@@ -1,3 +1,10 @@\n+2006-09-21  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/ext/type_traits.h (__numeric_traits_integer): New.\n+\t(__numeric_traits_floating): New.\n+\t(__numeric_traits): Use them.\n+\t* testsuite/ext/type_traits.cc: New.\n+\t\n 2006-09-21  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/ext/hash_map: Remove forward declaration of equality"}, {"sha": "da71e986f753067049ce20be0a268d9869f8c9a8", "filename": "libstdc++-v3/include/ext/type_traits.h", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1adedd03b50d25342d52ca1e72db6de2b3b737b/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftype_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1adedd03b50d25342d52ca1e72db6de2b3b737b/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftype_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Ftype_traits.h?ref=a1adedd03b50d25342d52ca1e72db6de2b3b737b", "patch": "@@ -37,6 +37,7 @@\n #include <utility>\n #include <limits>\n #include <iosfwd> // std::streamsize\n+#include <bits/cpp_type_traits.h>\n \n _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n \n@@ -126,27 +127,36 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n   (__glibcxx_signed(T) ? ((T)1 << __glibcxx_digits(T)) - 1 : ~(T)0)\n \n   template<typename _Value>\n-    struct __numeric_traits\n+    struct __numeric_traits_integer\n     {\n-      typedef _Value __value_type;\n-      \n-      // Only integer types.\n-      static const __value_type __min = __glibcxx_min(__value_type);\n-      static const __value_type __max = __glibcxx_max(__value_type);\n-      \n-      // Only floating point types. See N1822. \n-      static const std::streamsize __max_digits10 =\n-\t2 + std::numeric_limits<__value_type>::digits * 3010/10000;\n+      // Only integers for initialization of member constant.\n+      static const _Value __min = __glibcxx_min(_Value);\n+      static const _Value __max = __glibcxx_max(_Value);\n     };\n \n   template<typename _Value>\n-    const _Value __numeric_traits<_Value>::__min;\n+    const _Value __numeric_traits_integer<_Value>::__min;\n \n   template<typename _Value>\n-    const _Value __numeric_traits<_Value>::__max;\n+    const _Value __numeric_traits_integer<_Value>::__max;\n \n   template<typename _Value>\n-    const std::streamsize __numeric_traits<_Value>::__max_digits10;\n+    struct __numeric_traits_floating\n+    {\n+      // Only floating point types. See N1822. \n+      static const std::streamsize __max_digits10 =\n+\t2 + std::numeric_limits<_Value>::digits * 3010/10000;\n+    };\n+\n+  template<typename _Value>\n+    const std::streamsize __numeric_traits_floating<_Value>::__max_digits10;\n+\n+  template<typename _Value>\n+    struct __numeric_traits \n+    : public __conditional_type<std::__is_integer<_Value>::__value,\n+\t\t\t\t__numeric_traits_integer<_Value>,\n+\t\t\t\t__numeric_traits_floating<_Value> >::__type\n+    { };\n \n _GLIBCXX_END_NAMESPACE\n "}, {"sha": "ea58bb8afc70e253c9948af1d1c6b9a06be02768", "filename": "libstdc++-v3/testsuite/ext/type_traits.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1adedd03b50d25342d52ca1e72db6de2b3b737b/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1adedd03b50d25342d52ca1e72db6de2b3b737b/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Ftype_traits.cc?ref=a1adedd03b50d25342d52ca1e72db6de2b3b737b", "patch": "@@ -0,0 +1,28 @@\n+// { dg-do compile }\n+// { dg-options \"-pedantic\" }\n+// -*- C++ -*-\n+\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <ext/type_traits.h>\n+\n+using __gnu_cxx::__numeric_traits;\n+template struct __numeric_traits<short>;\n+template struct __numeric_traits<unsigned short>;\n+template struct __numeric_traits<double>;"}]}