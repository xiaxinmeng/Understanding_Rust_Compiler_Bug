{"sha": "219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjE5ZmE4YzNiZDE0MzE2MWVkMzdiZjYxOTdjYjgzYzdjODdlOWI2Zg==", "commit": {"author": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-02-03T19:11:27Z"}, "committer": {"name": "Steven G. Kargl", "email": "kargl@gcc.gnu.org", "date": "2006-02-03T19:11:27Z"}, "message": "[multiple changes]\n\n2006-02-03  Steven G. Kargl  <kargls@comcast.net>   \n           Paul Thomas  <pault@gcc.gnu.org>\n\n       * resolve.c (resolve_symbol): Default initialization of derived type\n       component reguires the SAVE attribute.\n\n\n2006-02-03  Steven G. Kargl  <kargls@comcast.net>\n\n       * gfortran.dg/char_result_11.f90: Add SAVE.\n       * gfortran.dg/der_pointer_4.f90: Ditto.\n       * gfortran.dg/default_initialization.f90: New test.\n\nFrom-SVN: r110554", "tree": {"sha": "50c12e62ea4c706beae0f2e06912b333f9904b99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50c12e62ea4c706beae0f2e06912b333f9904b99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/comments", "author": null, "committer": null, "parents": [{"sha": "c57bf6210beafda78650af0e0e1647833f42d174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c57bf6210beafda78650af0e0e1647833f42d174", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c57bf6210beafda78650af0e0e1647833f42d174"}], "stats": {"total": 65, "additions": 58, "deletions": 7}, "files": [{"sha": "a9a610e69c3088912e6b5786fc6e5a71a1546f32", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "patch": "@@ -1,3 +1,9 @@\n+2006-02-03  Steven G. Kargl  <kargls@comcast>\n+\t    Paul Thomas  <pault@gcc.gnu.org>\n+\n+\t* resolve.c (resolve_symbol): Default initialization of derived type\n+\tcomponent reguires the SAVE attribute.\n+\n 2006-02-02  Steven G. Kargl  <kargls@comcast>\n \n \tPR fortran/24958"}, {"sha": "3767992bbb034e31e3afc4fe999ea73159c1298d", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 26, "deletions": 5, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "patch": "@@ -4511,11 +4511,12 @@ resolve_symbol (gfc_symbol * sym)\n   int formal_ns_save, check_constant, mp_flag;\n   int i, flag;\n   gfc_namelist *nl;\n-  gfc_symtree * symtree;\n-  gfc_symtree * this_symtree;\n-  gfc_namespace * ns;\n-  gfc_component * c;\n-  gfc_formal_arglist * arg;\n+  gfc_symtree *symtree;\n+  gfc_symtree *this_symtree;\n+  gfc_namespace *ns;\n+  gfc_component *c;\n+  gfc_formal_arglist *arg;\n+  gfc_expr *constructor_expr;\n \n   if (sym->attr.flavor == FL_UNKNOWN)\n     {\n@@ -4857,6 +4858,26 @@ resolve_symbol (gfc_symbol * sym)\n \t  return;\n \t}\n \n+     /* 4th constraint in section 11.3:  \"If an object of a type for which\n+\tcomponent-initialization is specified (R429) appears in the\n+\tspecification-part of a module and does not have the ALLOCATABLE\n+\tor POINTER attribute, the object shall have the SAVE attribute.\"  */\n+\n+      if (sym->ts.type == BT_DERIVED && !(sym->value || flag))\n+        constructor_expr = gfc_default_initializer (&sym->ts);\n+\n+      if (sym->ns->proc_name\n+\t  && sym->ns->proc_name->attr.flavor == FL_MODULE\n+\t  && constructor_expr\n+\t  && !sym->ns->save_all && !sym->attr.save\n+\t  && !sym->attr.pointer && !sym->attr.allocatable)\n+\t{\n+\t  gfc_error(\"Object '%s' at %L must have the SAVE attribute %s\",\n+ \t \t     sym->name, &sym->declared_at,\n+\t\t     \"for default initialization of a component\");\n+\t  return;\n+\t}\n+\n       /* Assign default initializer.  */\n       if (sym->ts.type == BT_DERIVED && !(sym->value || flag)\n           && !sym->attr.pointer)"}, {"sha": "5dc5b191e5e6d16b2b4f64b040919de273f8d508", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "patch": "@@ -1,3 +1,9 @@\n+2006-02-03  Steven G. Kargl  <kargls@comcast.net>\n+\n+\t* gfortran.dg/char_result_11.f90: Add SAVE.\n+\t* gfortran.dg/der_pointer_4.f90: Ditto.\n+\t* gfortran.dg/default_initialization.f90: New test.\n+\n 2006-02-03  Jeff Law  <law@redhat.com>\n \n         * lib/gcc-dg.exp (cleanup-rtl-dump): Fix dump file regexp to"}, {"sha": "c37b20eb75aeffb60a0236c761d2fb282fb46156", "filename": "gcc/testsuite/gfortran.dg/char_result_11.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_result_11.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_result_11.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_result_11.f90?ref=219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "patch": "@@ -16,7 +16,7 @@ module cutils\n     integer(1) :: n1 = 3, n2 = 3, n3 = 3, n4 = 3, n6 = 3, n8 = 3\n     character(10) :: s = \"abcdefghij\"\n     integer :: x(4) = (/ 30, 40, 50, 60 /)\n-    type(t) :: tt1(5), tt2(5)\n+    type(t), save :: tt1(5), tt2(5)\n \n     public :: IntToChar1, IntToChar2, IntToChar3, IntToChar4, IntToChar5, &\n                 IntToChar6, IntToChar7, IntToChar8"}, {"sha": "4064784247daff7d0b67da14951f8761e38f3081", "filename": "gcc/testsuite/gfortran.dg/default_initialization.f90", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdefault_initialization.f90?ref=219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "patch": "@@ -0,0 +1,18 @@\n+!\n+! { dg-do compile }\n+! PR 20845\n+!\n+! In ISO/IEC 1539-1:1997(E), 4th constraint in section 11.3:\n+!\n+!   If an object of a type for which component-initialization is specified\n+!   (R429) appears in the specification-part of a module and does not have\n+!   the ALLOCATABLE or POINTER attribute, the object shall have the SAVE\n+!   attribute.\n+!\n+module bad\n+   implicit none\n+   type default_initialization\n+      integer :: x = 42\n+   end type default_initialization\n+   type (default_initialization) t ! { dg-error \"default initialization\" }\n+end module bad"}, {"sha": "c08b8461a22ec8c9ec5dda6522b5eae174dcf5a5", "filename": "gcc/testsuite/gfortran.dg/der_pointer_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_pointer_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/219fa8c3bd143161ed37bf6197cb83c7c87e9b6f/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_pointer_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fder_pointer_4.f90?ref=219fa8c3bd143161ed37bf6197cb83c7c87e9b6f", "patch": "@@ -7,5 +7,5 @@ module crash\n     integer :: i = 0\n     type (foo), pointer :: next\n   end type foo\n-  type (foo) :: bar\n+  type (foo), save :: bar\n end module crash"}]}