{"sha": "7cea62b4f5bef517d8d5aab0a2afdba000810693", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NlYTYyYjRmNWJlZjUxN2Q4ZDVhYWIwYTJhZmRiYTAwMDgxMDY5Mw==", "commit": {"author": {"name": "Per Bothner", "email": "per@bothner.com", "date": "2005-03-01T17:24:52Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "2005-03-01T17:24:52Z"}, "message": "re PR java/8608 (segmentation fault on compiling bad program)\n\n\n\tPR java/8608\n\t* check-init.c (wfl): Remove static.\n\t(final_assign_error, check_init): Replace calls to parse_error_context\n\tby plain error.\n\t(check_init): Save, set, and restore input_location for each exp.\n\nFrom-SVN: r95749", "tree": {"sha": "f427fc2a96c7f3ffc06d7c60165d924ad6dc036b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f427fc2a96c7f3ffc06d7c60165d924ad6dc036b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cea62b4f5bef517d8d5aab0a2afdba000810693", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cea62b4f5bef517d8d5aab0a2afdba000810693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cea62b4f5bef517d8d5aab0a2afdba000810693", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cea62b4f5bef517d8d5aab0a2afdba000810693/comments", "author": {"login": "PerBothner", "id": 10293361, "node_id": "MDQ6VXNlcjEwMjkzMzYx", "avatar_url": "https://avatars.githubusercontent.com/u/10293361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/PerBothner", "html_url": "https://github.com/PerBothner", "followers_url": "https://api.github.com/users/PerBothner/followers", "following_url": "https://api.github.com/users/PerBothner/following{/other_user}", "gists_url": "https://api.github.com/users/PerBothner/gists{/gist_id}", "starred_url": "https://api.github.com/users/PerBothner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/PerBothner/subscriptions", "organizations_url": "https://api.github.com/users/PerBothner/orgs", "repos_url": "https://api.github.com/users/PerBothner/repos", "events_url": "https://api.github.com/users/PerBothner/events{/privacy}", "received_events_url": "https://api.github.com/users/PerBothner/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "837491bcc84cbf36b19c2be07768ac7e6918a0e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/837491bcc84cbf36b19c2be07768ac7e6918a0e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/837491bcc84cbf36b19c2be07768ac7e6918a0e9"}], "stats": {"total": 49, "additions": 25, "deletions": 24}, "files": [{"sha": "96dd3af364e71093f5eef71da08a17a92bd377fa", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cea62b4f5bef517d8d5aab0a2afdba000810693/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cea62b4f5bef517d8d5aab0a2afdba000810693/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=7cea62b4f5bef517d8d5aab0a2afdba000810693", "patch": "@@ -1,3 +1,11 @@\n+2005-03-01  Per Bothner  <per@bothner.com>\n+\n+\tPR java/8608\n+\t* check-init.c (wfl): Remove static.\n+\t(final_assign_error, check_init): Replace calls to parse_error_context\n+\tby plain error.\n+\t(check_init): Save, set, and restore input_location for each exp.\n+\n 2005-03-01  Per Bothner  <per@bothner.com>\n \n \t* jcf-reader.c (get_attribute): Handle SourceDebugExtension (JSR 45)"}, {"sha": "0ecfec57f130664bdd85fd9aed18cc1be0cba82d", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 17, "deletions": 24, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cea62b4f5bef517d8d5aab0a2afdba000810693/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cea62b4f5bef517d8d5aab0a2afdba000810693/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=7cea62b4f5bef517d8d5aab0a2afdba000810693", "patch": "@@ -77,8 +77,6 @@ static int start_current_locals = 0;\n \n static int num_current_words;\n \n-static tree wfl;\n-\n #define COPYN(DST, SRC, NWORDS) memcpy (DST, SRC, NWORDS * sizeof(word))\n #define COPY(DST, SRC) COPYN (DST, SRC, num_current_words)\n \n@@ -247,9 +245,8 @@ get_variable_decl (tree exp)\n static void\n final_assign_error (tree name)\n {\n-  parse_error_context (wfl,\n-                       \"Can't reassign a value to the final variable %qs\",\n-                       IDENTIFIER_POINTER (name));\n+  error (\"Can't reassign a value to the final variable %qs\",\n+\t IDENTIFIER_POINTER (name));\n }\n \n static void\n@@ -501,7 +498,10 @@ static void\n check_init (tree exp, words before)\n {\n   tree tmp;\n+  location_t save_location = input_location;\n  again:\n+  if (EXPR_HAS_LOCATION (exp))\n+    input_location = EXPR_LOCATION (exp);\n   switch (TREE_CODE (exp))\n     {\n     case VAR_DECL:\n@@ -515,10 +515,7 @@ check_init (tree exp, words before)\n \t  if (! LOCAL_CLASS_INITIALIZATION_FLAG_P (exp)\n \t      && index >= 0 && ! ASSIGNED_P (before, index))\n \t    {\n-\t      parse_error_context \n-\t\t(wfl, \"Variable %qs may not have been initialized\",\n-\t\t IDENTIFIER_POINTER (DECL_NAME (exp)));\n-\t      /* Suppress further errors. */\n+\t      error (\"variable %qD may not have been initialized\", exp);\n \t      DECL_BIT_INDEX (exp) = -2;\n \t    }\n \t}\n@@ -531,9 +528,7 @@ check_init (tree exp, words before)\n \t  int index = DECL_BIT_INDEX (tmp);\n \t  if (index >= 0 && ! ASSIGNED_P (before, index))\n \t    {\n-\t      parse_error_context \n-\t\t(wfl, \"variable %qs may not have been initialized\",\n-\t\t IDENTIFIER_POINTER (DECL_NAME (tmp)));\n+\t      error (\"variable %qD may not have been initialized\", tmp);\n \t      /* Suppress further errors. */\n \t      DECL_BIT_INDEX (tmp) = -2;\n \t    }\n@@ -669,7 +664,7 @@ check_init (tree exp, words before)\n \tEND_ALTERNATIVES (before, alt);\n \tloop_current_locals = save_loop_current_locals;\n \tstart_current_locals = save_start_current_locals;\n-\treturn;\n+\tbreak;\n       }\n     case EXIT_EXPR:\n       {\n@@ -684,7 +679,7 @@ check_init (tree exp, words before)\n \tdone_alternative (when_true, alt);\n \tCOPY (before, when_false);\n \tRELEASE_BUFFERS(when_true);\n-\treturn;\n+\tbreak;\n       }\n     case LABELED_BLOCK_EXPR:\n       {\n@@ -695,7 +690,7 @@ check_init (tree exp, words before)\n \t  check_init (LABELED_BLOCK_BODY (exp), before);\n \tdone_alternative (before, &alt);\n \tEND_ALTERNATIVES (before, alt);\n-\treturn;\n+\tbreak;\n       }\n     case EXIT_BLOCK_EXPR:\n       {\n@@ -705,7 +700,7 @@ check_init (tree exp, words before)\n \t  alt = alt->outer;\n \tdone_alternative (before, alt);\n \tSET_ALL (before);\n-\treturn;\n+\tbreak;\n       }\n     case SWITCH_EXPR:\n       {\n@@ -722,7 +717,7 @@ check_init (tree exp, words before)\n \t  done_alternative (alt.saved, &alt);\n \tFREE_BUFFER(alt.saved, buf);\n \tEND_ALTERNATIVES (before, alt);\n-\treturn;\n+\tbreak;\n       }\n     case CASE_EXPR:\n     case DEFAULT_EXPR:\n@@ -764,7 +759,7 @@ check_init (tree exp, words before)\n \t  }\n \tEND_ALTERNATIVES (before, alt);\n       }\n-    return;\n+    break;\n \n     case TRY_FINALLY_EXPR:\n       {\n@@ -775,7 +770,7 @@ check_init (tree exp, words before)\n \tUNION (before, before, tmp);\n \tRELEASE_BUFFERS(tmp);\n       }\n-      return;\n+      break;\n \n     case RETURN_EXPR:\n     case THROW_EXPR:\n@@ -786,7 +781,7 @@ check_init (tree exp, words before)\n     case ERROR_MARK:\n     never_continues:\n       SET_ALL (before);\n-      return;\n+      break;\n       \n     case COND_EXPR:\n     case TRUTH_ANDIF_EXPR:\n@@ -848,7 +843,7 @@ check_init (tree exp, words before)\n \n     case SAVE_EXPR:\n       if (IS_INIT_CHECKED (exp))\n-\treturn;\n+\tbreak;\n       IS_INIT_CHECKED (exp) = 1;\n       exp = TREE_OPERAND (exp, 0);\n       goto again;\n@@ -932,11 +927,9 @@ check_init (tree exp, words before)\n     case EXPR_WITH_FILE_LOCATION:\n       {\n \tlocation_t saved_location = input_location;\n-\ttree saved_wfl = wfl;\n \ttree body = EXPR_WFL_NODE (exp);\n \tif (IS_EMPTY_STMT (body))\n \t  break;\n-\twfl = exp;\n #ifdef USE_MAPPED_LOCATION\n \tinput_location = EXPR_LOCATION (exp);\n #else\n@@ -945,7 +938,6 @@ check_init (tree exp, words before)\n #endif\n \tcheck_init (body, before);\n \tinput_location = saved_location;\n-\twfl = saved_wfl;\n       }\n       break;\n       \n@@ -954,6 +946,7 @@ check_init (tree exp, words before)\n \t(\"internal error in check-init: tree code not implemented: %s\",\n \t tree_code_name [(int) TREE_CODE (exp)]);\n     }\n+  input_location = save_location;\n }\n \n void"}]}