{"sha": "b2e2ea671c7653b299435ed4e96c50460bfad48b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJlMmVhNjcxYzc2NTNiMjk5NDM1ZWQ0ZTk2YzUwNDYwYmZhZDQ4Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-03-02T09:00:24Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-03-02T09:00:24Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Fix test names.\n\nFrom-SVN: r170612", "tree": {"sha": "733c443ea8598f5be6cd5a1917d8373e31a48e29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/733c443ea8598f5be6cd5a1917d8373e31a48e29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2e2ea671c7653b299435ed4e96c50460bfad48b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e2ea671c7653b299435ed4e96c50460bfad48b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2e2ea671c7653b299435ed4e96c50460bfad48b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e2ea671c7653b299435ed4e96c50460bfad48b/comments", "author": null, "committer": null, "parents": [{"sha": "97efdf21c6d50baa7c63c82859414640a8be5ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97efdf21c6d50baa7c63c82859414640a8be5ab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97efdf21c6d50baa7c63c82859414640a8be5ab7"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "1bdc9babb338814c1a717886404a74c9c604ee55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e2ea671c7653b299435ed4e96c50460bfad48b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e2ea671c7653b299435ed4e96c50460bfad48b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2e2ea671c7653b299435ed4e96c50460bfad48b", "patch": "@@ -32,8 +32,7 @@\n \n \t* config/stormy16/stormy16.h (FUNCTION_VALUE, LIBCALL_VALUE,\n \tFUNCTION_VALUE_REGNO_P): Remove.\n-\t* config/stormy16/stormy16-protos.h (xstormy16_function_value):\n-\tRemove.\n+\t* config/stormy16/stormy16-protos.h (xstormy16_function_value): Remove.\n \t* config/stormy16/stormy16.c (xstormy16_function_value): Make static.\n \tAdd 'outgoing' argument.\n \t(xstormy16_libcall_value, xstormy16_function_value_regno_p): New\n@@ -46,8 +45,7 @@\n \tPR debug/28047\n \t* dwarf2out.c (file_table_eq): Use filename_cmp instead of strcmp.\n \t(lookup_filename): Likewise.\n-\t* final.c (remap_debug_filename): Use filename_ncmp instead of\n-\tstrncmp.\n+\t* final.c (remap_debug_filename): Use filename_ncmp instead of strncmp.\n \n 2011-02-28  Bernd Schmidt  <bernds@codesourcery.com>\n \t    Jakub Jelinek  <jakub@redhat.com>\n@@ -57,8 +55,7 @@\n \t(assign_stack_local_1): Change last argument type to int.\n \t* function.c (assign_stack_local_1): Replace reduce_alignment_ok\n \targument with kind.  If bit ASLK_RECORD_PAD is not set in it,\n-\tdon't record padding space into frame_space_list nor\n-\tuse those areas.\n+\tdon't record padding space into frame_space_list nor use those areas.\n \t(assign_stack_local): Adjust caller.\n \t(assign_stack_temp_for_type): Call assign_stack_local_1 instead\n \tof assign_stack_local, pass 0 as last argument.\n@@ -82,8 +79,7 @@\n \t* configure: Regenerated.\n \t* config.in: Regenerated.\n \t* varasm.c (default_function_section): Return NULL\n-\tif HAVE_LD_EH_GC_SECTIONS_BUG and decl has implicit\n-\tsection name.\n+\tif HAVE_LD_EH_GC_SECTIONS_BUG and decl has implicit section name.\n \n 2011-02-28  Martin Jambor  <mjambor@suse.cz>\n \n@@ -138,7 +134,7 @@\n \tFreeBSD 6 and later.  Generally use cpu generic.\n \n 2011-02-25  Gerald Pfeifer  <gerald@pfeifer.com>\n- \n+\n \t* doc/cpp.texi: Update copyright years.\n \n 2011-02-25  Sebastien Bourdeauducq  <sebastien@milkymist.org>\n@@ -153,8 +149,7 @@\n \t* config/lm32/lm32.md (ashlsi3): Remove unused variable.\n \t* config/lm32/lm32.c (TARGET_EXCEPT_UNWIND_INFO): New.\n \t(lm32_block_move_inline): Add type cast to remove warning.\n-\t(lm32_expand_prologue): Generate fp in a way compatible with\n-\tdwarf2out.\n+\t(lm32_expand_prologue): Generate fp in a way compatible with dwarf2out.\n \t(gen_int_relational): Move declarations to start of function.\n \n 2011-02-25  Eric Botcazou  <ebotcazou@adacore.com>"}, {"sha": "49a1c1df2868cd03fd70a9c21e3769cb232387c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e2ea671c7653b299435ed4e96c50460bfad48b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e2ea671c7653b299435ed4e96c50460bfad48b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b2e2ea671c7653b299435ed4e96c50460bfad48b", "patch": "@@ -44,7 +44,7 @@\n \t* objc.dg/gnu-api-2-sel.m: Test that sel_getTypedSelector return\n \tNULL in case of a selector with conflicting types.\n \t* obj-c++.dg/gnu-api-2-sel.mm: Same change.\n-\t\n+\n 2011-02-28  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* gcc.target/arm/vfp-ldmdbd.c, gcc.target/arm/vfp-ldmdbs.c,\n@@ -316,12 +316,10 @@\n \t* g++.dg/ext/is_empty.C: Ditto.\n \t* g++.dg/ext/is_enum.C: Ditto.\n \t* g++.dg/ext/has_nothrow_constructor_odr.C: Ditto.\n-\t* g++.dg/ext/.C: Ditto.\n-\t* g++.dg/ext/.C: Ditto.\n \t* gnat.dg/opt11.adb: Ditto.\n \t* obj-c++.dg/pr45735.mm: Ditto.\n \t* obj-c++.dg/pr24393.mm: Ditto.\n-\t* obj-c++.dg/exceptions-2.cc: Ditto.\n+\t* obj-c++.dg/exceptions-2.mm: Ditto.\n \t* objc.dg/pr45735.m: Ditto.\n \t* objc.dg/pr24393.m: Ditto.\n "}]}