{"sha": "6117220672481e5dea35a26a576b4794b5661d60", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjExNzIyMDY3MjQ4MWU1ZGVhMzVhMjZhNTc2YjQ3OTRiNTY2MWQ2MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2007-08-22T17:23:37Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-08-22T17:23:37Z"}, "message": "re PR c++/29365 (Unnecessary anonymous namespace warnings)\n\n        PR c++/29365\n        * pt.c (outermost_tinst_level): New function.\n        * lex.c (in_main_input_context): New function.\n        * decl2.c (constrain_class_visibility): Use it to avoid warning\n        about uses of the anonymous namespace in the main input file.\n\nFrom-SVN: r127711", "tree": {"sha": "15ee08cdd7c8f4fd56f28d2c93470b2102542aba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15ee08cdd7c8f4fd56f28d2c93470b2102542aba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6117220672481e5dea35a26a576b4794b5661d60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6117220672481e5dea35a26a576b4794b5661d60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6117220672481e5dea35a26a576b4794b5661d60", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6117220672481e5dea35a26a576b4794b5661d60/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1840f0c27011ba23f29540d509b275e558fa4cb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1840f0c27011ba23f29540d509b275e558fa4cb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1840f0c27011ba23f29540d509b275e558fa4cb0"}], "stats": {"total": 72, "additions": 59, "deletions": 13}, "files": [{"sha": "fa83612725d55dace73d1ad4a1242f5792cca697", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -1,3 +1,11 @@\n+2007-08-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/29365\n+\t* pt.c (outermost_tinst_level): New function.\n+\t* lex.c (in_main_input_context): New function.\n+\t* decl2.c (constrain_class_visibility): Use it to avoid warning\n+\tabout uses of the anonymous namespace in the main input file.\n+\n 2007-08-21  Jakub Jelinek  <jakub@redhat.com>\n \n \t* init.c (build_new_1): Use get_target_expr instead of save_expr.\n@@ -939,7 +947,6 @@\n 2007-04-16  Seongbae Park <seongbae.park@gmail.com>\n \n \tPR c++/29365\n-\n \t* cp/decl2.c (constrain_class_visibility):\n \tDo not warn about the use of anonymous namespace in the main input file.\n "}, {"sha": "5aea98bb801047acb0c717741a93824a31bd2b90", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -4374,6 +4374,7 @@ extern void yyerror\t\t\t\t(const char *);\n extern void yyhook\t\t\t\t(int);\n extern bool cxx_init\t\t\t\t(void);\n extern void cxx_finish\t\t\t\t(void);\n+extern bool in_main_input_context\t\t(void);\n \n /* in method.c */\n extern void init_method\t\t\t\t(void);\n@@ -4465,6 +4466,7 @@ extern tree build_non_dependent_args\t\t(tree);\n extern bool reregister_specialization\t\t(tree, tree, tree);\n extern tree fold_non_dependent_expr\t\t(tree);\n extern bool explicit_class_specialization_p     (tree);\n+extern tree outermost_tinst_level\t\t(void);\n \n /* in repo.c */\n extern void init_repo\t\t\t\t(void);"}, {"sha": "2708e5819f9fc88843f2120896d1b19080c43fd2", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -1854,8 +1854,7 @@ constrain_class_visibility (tree type)\n \n \tif (subvis == VISIBILITY_ANON)\n \t  {\n-\t    if (strcmp (main_input_filename,\n-\t                DECL_SOURCE_FILE (TYPE_MAIN_DECL (ftype))))\n+\t    if (!in_main_input_context ())\n \t      warning (0, \"\\\n %qT has a field %qD whose type uses the anonymous namespace\",\n \t\t       type, t);\n@@ -1875,8 +1874,7 @@ constrain_class_visibility (tree type)\n \n       if (subvis == VISIBILITY_ANON)\n         {\n-\t  if (strcmp (main_input_filename,\n-\t              DECL_SOURCE_FILE (TYPE_MAIN_DECL (TREE_TYPE (t)))))\n+\t  if (!in_main_input_context())\n \t    warning (0, \"\\\n %qT has a base %qT whose type uses the anonymous namespace\",\n \t\t     type, TREE_TYPE (t));"}, {"sha": "e62887dcfc1a1d48299aa87e7e7fbb08f4882313", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -849,3 +849,18 @@ make_aggr_type (enum tree_code code)\n \n   return t;\n }\n+\n+/* Returns true if we are currently in the main source file, or in a\n+   template instantiation started from the main source file.  */\n+\n+bool\n+in_main_input_context (void)\n+{\n+  tree tl = outermost_tinst_level();\n+\n+  if (tl)\n+    return strcmp (main_input_filename,\n+\t\t   LOCATION_FILE (TINST_LOCATION (tl))) == 0;\n+  else\n+    return strcmp (main_input_filename, input_filename) == 0;\n+}"}, {"sha": "b4a9b689005cc12fb3143d1b254c519d0de051f4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -6045,6 +6045,15 @@ reopen_tinst_level (tree level)\n   pop_tinst_level ();\n }\n \n+/* Returns the TINST_LEVEL which gives the original instantiation\n+   context.  */\n+\n+tree\n+outermost_tinst_level (void)\n+{\n+  return tree_last (current_tinst_level);\n+}\n+\n /* DECL is a friend FUNCTION_DECL or TEMPLATE_DECL.  ARGS is the\n    vector of template arguments, as for tsubst.\n "}, {"sha": "cf193e0cba592423e04b22d0779babbd069f0334", "filename": "gcc/testsuite/g++.dg/warn/anonymous-namespace-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-1.C?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -13,5 +13,6 @@ class foobar1\n   good g;\n };\n \n+#line 17 \"foo.C\"\n class foobar : public bad { }; // { dg-warning \"uses the anonymous namespace\" }\n class foobar2 { bad b; }; // { dg-warning \"uses the anonymous namespace\" }"}, {"sha": "4048f3959df4b0f608a28cec299125aea1ee4d7e", "filename": "gcc/testsuite/g++.dg/warn/anonymous-namespace-2.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-2.C?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -10,20 +10,20 @@ namespace {\n struct g1 {\n     good * A;\n };\n-struct b1 { // { dg-warning \"uses the anonymous namespace\" }\n-    bad * B;\n-};\n-\n struct g2 {\n     good * A[1];\n };\n-struct b2 { // { dg-warning \"uses the anonymous namespace\" }\n-    bad * B[1];\n-};\n-\n struct g3 {\n     good (*A)[1];\n };\n+\n+#line 21 \"foo.C\"\n+struct b1 { // { dg-warning \"uses the anonymous namespace\" }\n+    bad * B;\n+};\n+struct b2 { // { dg-warning \"uses the anonymous namespace\" }\n+    bad * B[1];\n+};\n struct b3 { // { dg-warning \"uses the anonymous namespace\" }\n     bad (*B)[1];\n };"}, {"sha": "fee48b46017df91d0afcf40034a029cac4518f8a", "filename": "gcc/testsuite/g++.dg/warn/anonymous-namespace-3.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.C?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -0,0 +1,13 @@\n+// Test for the warning of exposing types from an anonymous namespace\n+// { dg-do compile }\n+//\n+#include <memory>\n+#include \"anonymous-namespace-3.h\"\n+\n+struct B { std::auto_ptr<A> p; };\n+\n+#line 10 \"foo.C\"\n+struct C\n+{ // { dg-warning \"uses the anonymous namespace\" }\n+  std::auto_ptr<A> p;\n+};"}, {"sha": "0c7c1f8e406de32c30e77b3dbd25f90125ddab27", "filename": "gcc/testsuite/g++.dg/warn/anonymous-namespace-3.h", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6117220672481e5dea35a26a576b4794b5661d60/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fanonymous-namespace-3.h?ref=6117220672481e5dea35a26a576b4794b5661d60", "patch": "@@ -0,0 +1 @@\n+namespace { struct A; }"}]}