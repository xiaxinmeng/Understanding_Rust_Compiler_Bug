{"sha": "4f809983df5aff0181c6780a68a3d9359bc331db", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY4MDk5ODNkZjVhZmYwMTgxYzY3ODBhNjhhM2Q5MzU5YmMzMzFkYg==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2008-12-05T21:05:53Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2008-12-05T21:05:53Z"}, "message": "target-supports.exp (check_effective_target_hard_dfp): New.\n\n\t* lib/target-supports.exp (check_effective_target_hard_dfp): New.\n\t* gcc.dg/dfp/convert-dfp-round.c: Skip for hard_dfp.\n\t* gcc.dg/dfp/fe-binop.c: Ditto.\n\t* gcc.dg/dfp/fe-convert-1.c: Ditto.\n\nFrom-SVN: r142494", "tree": {"sha": "9555c90e09dbb3cd50f0e71b5786e2c999e18909", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9555c90e09dbb3cd50f0e71b5786e2c999e18909"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f809983df5aff0181c6780a68a3d9359bc331db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f809983df5aff0181c6780a68a3d9359bc331db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f809983df5aff0181c6780a68a3d9359bc331db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f809983df5aff0181c6780a68a3d9359bc331db/comments", "author": null, "committer": null, "parents": [{"sha": "13fa1171569120832ac2b6c9bea6da30e6985e97", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13fa1171569120832ac2b6c9bea6da30e6985e97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13fa1171569120832ac2b6c9bea6da30e6985e97"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "f4843d5b5075d22df404cf5ac7a18a037e787a38", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4f809983df5aff0181c6780a68a3d9359bc331db", "patch": "@@ -1,3 +1,10 @@\n+2008-12-05  Janis Johnson  <janis187@us.ibm.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_hard_dfp): New.\n+\t* gcc.dg/dfp/convert-dfp-round.c: Skip for hard_dfp.\n+\t* gcc.dg/dfp/fe-binop.c: Ditto.\n+\t* gcc.dg/dfp/fe-convert-1.c: Ditto.\n+\n 2008-12-05  Catherine Moore  <clm@codesourcery.com>\n \n \t* gcc-target/mips/mips-nonpic: New testsuite."}, {"sha": "9833abb7ff0bf5613ecda948cf34d71907534e25", "filename": "gcc/testsuite/gcc.dg/dfp/convert-dfp-round.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fconvert-dfp-round.c?ref=4f809983df5aff0181c6780a68a3d9359bc331db", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-O0 -std=gnu99\" } */\n+/* { dg-skip-if \"test is for emulation\" { hard_dfp } { \"*\" } { \"\" } } */\n \n /* N1150 5.2: Conversions among decimal floating types and between\n    decimal floating types and generic floating types."}, {"sha": "23f137818ed721b7f81d3d1bf42befbf715d7462", "filename": "gcc/testsuite/gcc.dg/dfp/fe-binop.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffe-binop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffe-binop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffe-binop.c?ref=4f809983df5aff0181c6780a68a3d9359bc331db", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-std=gnu99\" } */\n+/* { dg-skip-if \"test is for emulation\" { hard_dfp } { \"*\" } { \"\" } } */\n \n /* Touch tests that check for raising appropriate exceptions for binary\n    arithmetic operations on decimal float values.  */"}, {"sha": "f65cf7870aecf5edfbe6e8ca37fb9f87611e9b1c", "filename": "gcc/testsuite/gcc.dg/dfp/fe-convert-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffe-convert-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffe-convert-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Ffe-convert-1.c?ref=4f809983df5aff0181c6780a68a3d9359bc331db", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-std=gnu99\" } */\n+/* { dg-skip-if \"test is for emulation\" { hard_dfp } { \"*\" } { \"\" } } */\n \n /* Check that appropriate exceptions are raised for conversions involving\n    decimal float values.  */"}, {"sha": "a297480a62a81d100238b91d2bc74551b388271f", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f809983df5aff0181c6780a68a3d9359bc331db/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=4f809983df5aff0181c6780a68a3d9359bc331db", "patch": "@@ -2656,3 +2656,12 @@ proc check_effective_target_pow10 { } {\n \t}\n     } \"-lm\" ]\n }\n+\n+# Return 1 if current options generate DFP instructions, 0 otherwise.\n+\n+proc check_effective_target_hard_dfp {} {\n+    return [check_no_messages_and_pattern hard_dfp \"!adddd3\" assembly {\n+\t_Decimal64 x, y, z;\n+\tvoid foo (void) { z = x + y; }\n+    }]\n+}"}]}