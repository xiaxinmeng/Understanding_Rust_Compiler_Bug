{"sha": "ae56d600d223e996054483d7d7033ec8e258d39d", "node_id": "C_kwDOANBUbNoAKGFlNTZkNjAwZDIyM2U5OTYwNTQ0ODNkN2Q3MDMzZWM4ZTI1OGQzOWQ", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-04T15:03:54Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-10-05T12:21:01Z"}, "message": "[PR tree-optimization/107052] range-ops: Pass nonzero masks through cast.\n\nTrack nonzero masks through a cast in range-ops.\n\n\tPR tree-optimization/107052\n\ngcc/ChangeLog:\n\n\t* range-op.cc (operator_cast::fold_range): Set nonzero mask.", "tree": {"sha": "7eb1988c235b85688e6f63ff80f694a41d9c070e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7eb1988c235b85688e6f63ff80f694a41d9c070e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae56d600d223e996054483d7d7033ec8e258d39d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae56d600d223e996054483d7d7033ec8e258d39d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae56d600d223e996054483d7d7033ec8e258d39d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae56d600d223e996054483d7d7033ec8e258d39d/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "853ce8eea4ff97850a987167e603387b3d0f1401", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853ce8eea4ff97850a987167e603387b3d0f1401", "html_url": "https://github.com/Rust-GCC/gccrs/commit/853ce8eea4ff97850a987167e603387b3d0f1401"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "6fa27a8904e8f8be1617c3dd83c2c80bf94fbb3c", "filename": "gcc/range-op.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae56d600d223e996054483d7d7033ec8e258d39d/gcc%2Frange-op.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae56d600d223e996054483d7d7033ec8e258d39d/gcc%2Frange-op.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frange-op.cc?ref=ae56d600d223e996054483d7d7033ec8e258d39d", "patch": "@@ -2515,6 +2515,14 @@ operator_cast::fold_range (irange &r, tree type ATTRIBUTE_UNUSED,\n       if (r.varying_p ())\n \treturn true;\n     }\n+\n+  // Pass nonzero mask through the cast.\n+  if (!truncating_cast_p (inner, outer))\n+    {\n+      wide_int nz = inner.get_nonzero_bits ();\n+      nz = wide_int::from (nz, TYPE_PRECISION (type), TYPE_SIGN (inner.type ()));\n+      r.set_nonzero_bits (nz);\n+    }\n   return true;\n }\n "}]}