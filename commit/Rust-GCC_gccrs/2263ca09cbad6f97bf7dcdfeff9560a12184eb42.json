{"sha": "2263ca09cbad6f97bf7dcdfeff9560a12184eb42", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI2M2NhMDljYmFkNmY5N2JmN2RjZGZlZmY5NTYwYTEyMTg0ZWI0Mg==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-08-22T22:44:26Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-08-22T22:44:26Z"}, "message": "gij.cc (help): Document -cp and -classpath.\n\n\t* gij.cc (help): Document -cp and -classpath.\n\t(main): Handle -classpath.\n\nFrom-SVN: r56522", "tree": {"sha": "f4e5e0e961b2fc5694730b48434b8f1b4e2e09ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4e5e0e961b2fc5694730b48434b8f1b4e2e09ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2263ca09cbad6f97bf7dcdfeff9560a12184eb42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2263ca09cbad6f97bf7dcdfeff9560a12184eb42", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2263ca09cbad6f97bf7dcdfeff9560a12184eb42", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2263ca09cbad6f97bf7dcdfeff9560a12184eb42/comments", "author": null, "committer": null, "parents": [{"sha": "00a8b314c49a053180de6fc6ea3965640e619b0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00a8b314c49a053180de6fc6ea3965640e619b0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00a8b314c49a053180de6fc6ea3965640e619b0b"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "e01ab1ba9ae329593fbca8a8716a9fa0cb96e3b3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2263ca09cbad6f97bf7dcdfeff9560a12184eb42/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2263ca09cbad6f97bf7dcdfeff9560a12184eb42/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=2263ca09cbad6f97bf7dcdfeff9560a12184eb42", "patch": "@@ -1,3 +1,8 @@\n+2002-08-22  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gij.cc (help): Document -cp and -classpath.\n+\t(main): Handle -classpath.\n+\n 2002-08-21  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in: Rebuilt."}, {"sha": "47b2d6028de349ec3745a9bbf4a547b7bd8c6151", "filename": "libjava/gij.cc", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2263ca09cbad6f97bf7dcdfeff9560a12184eb42/libjava%2Fgij.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2263ca09cbad6f97bf7dcdfeff9560a12184eb42/libjava%2Fgij.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgij.cc?ref=2263ca09cbad6f97bf7dcdfeff9560a12184eb42", "patch": "@@ -28,11 +28,14 @@ help ()\n   printf (\"          to interpret Java bytecodes, or\\n\");\n   printf (\"       gij -jar [OPTION] ... JARFILE [ARGS] ...\\n\");\n   printf (\"          to execute a jar file\\n\\n\");\n+  printf (\"  --cp LIST         set class path\\n\");\n+  printf (\"  --classpath LIST  set class path\\n\");\n   printf (\"  -DVAR=VAL         define property VAR with value VAL\\n\");\n   printf (\"  --help            print this help, then exit\\n\");\n   printf (\"  --ms=NUMBER       set initial heap size\\n\");\n   printf (\"  --mx=NUMBER       set maximum heap size\\n\");\n   printf (\"  --version         print version number, then exit\\n\");\n+  printf (\"\\nOptions can be specified with `-' or `--'.\\n\");\n   printf (\"\\nSee http://gcc.gnu.org/java/ for information on reporting bugs\\n\");\n   exit (0);\n }\n@@ -115,6 +118,15 @@ main (int argc, const char **argv)\n \t    goto no_arg;\n \t  _Jv_SetMaximumHeapSize (argv[++i]);\n \t}\n+      else if (! strcmp (arg, \"-cp\") || ! strcmp (arg, \"-classpath\"))\n+\t{\n+\t  if (i >= argc - 1)\n+\t    goto no_arg;\n+\t  // We set _Jv_Jar_Class_Path.  If the user specified `-jar'\n+\t  // then the jar code will override this.  This is the\n+\t  // correct behavior.\n+\t  _Jv_Jar_Class_Path = argv[++i];\n+\t}\n       else\n \t{\n \t  fprintf (stderr, \"gij: unrecognized option -- `%s'\\n\", argv[i]);"}]}