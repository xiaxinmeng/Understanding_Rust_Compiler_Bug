{"sha": "ae4aefdca359929e167b923949ba17c0c066010a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU0YWVmZGNhMzU5OTI5ZTE2N2I5MjM5NDliYTE3YzBjMDY2MDEwYQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-24T00:13:35Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-24T00:13:35Z"}, "message": "Avoid endless loop inheriting interfaces.\n\nFrom-SVN: r168216", "tree": {"sha": "dd07a8b32ace42a720939dce1f9528d84052efe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd07a8b32ace42a720939dce1f9528d84052efe1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae4aefdca359929e167b923949ba17c0c066010a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4aefdca359929e167b923949ba17c0c066010a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae4aefdca359929e167b923949ba17c0c066010a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae4aefdca359929e167b923949ba17c0c066010a/comments", "author": null, "committer": null, "parents": [{"sha": "e99776d82aca5ed5ee7bbe2ad2f5f6191017110b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e99776d82aca5ed5ee7bbe2ad2f5f6191017110b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e99776d82aca5ed5ee7bbe2ad2f5f6191017110b"}], "stats": {"total": 27, "additions": 25, "deletions": 2}, "files": [{"sha": "2278c9426ff81ef228079f2ed14298b81bc7cad1", "filename": "gcc/go/gofrontend/types.cc", "status": "modified", "additions": 25, "deletions": 2, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae4aefdca359929e167b923949ba17c0c066010a/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae4aefdca359929e167b923949ba17c0c066010a/gcc%2Fgo%2Fgofrontend%2Ftypes.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Ftypes.cc?ref=ae4aefdca359929e167b923949ba17c0c066010a", "patch": "@@ -5548,7 +5548,7 @@ Interface_type::finalize_methods()\n       const Typed_identifier* p = &this->methods_->at(from);\n       if (!p->name().empty())\n \t{\n-\t  size_t i = 0;\n+\t  size_t i;\n \t  for (i = 0; i < to; ++i)\n \t    {\n \t      if (this->methods_->at(i).name() == p->name())\n@@ -5594,7 +5594,30 @@ Interface_type::finalize_methods()\n \t   q != methods->end();\n \t   ++q)\n \t{\n-\t  if (q->name().empty() || this->find_method(q->name()) == NULL)\n+\t  if (q->name().empty())\n+\t    {\n+\t      if (q->type() == p->type())\n+\t\terror_at(p->location(), \"interface inheritance loop\");\n+\t      else\n+\t\t{\n+\t\t  size_t i;\n+\t\t  for (i = from + 1; i < this->methods_->size(); ++i)\n+\t\t    {\n+\t\t      const Typed_identifier* r = &this->methods_->at(i);\n+\t\t      if (r->name().empty() && r->type() == q->type())\n+\t\t\t{\n+\t\t\t  error_at(p->location(),\n+\t\t\t\t   \"inherited interface listed twice\");\n+\t\t\t  break;\n+\t\t\t}\n+\t\t    }\n+\t\t  if (i == this->methods_->size())\n+\t\t    this->methods_->push_back(Typed_identifier(q->name(),\n+\t\t\t\t\t\t\t       q->type(),\n+\t\t\t\t\t\t\t       p->location()));\n+\t\t}\n+\t    }\n+\t  else if (this->find_method(q->name()) == NULL)\n \t    this->methods_->push_back(Typed_identifier(q->name(), q->type(),\n \t\t\t\t\t\t       p->location()));\n \t  else"}]}