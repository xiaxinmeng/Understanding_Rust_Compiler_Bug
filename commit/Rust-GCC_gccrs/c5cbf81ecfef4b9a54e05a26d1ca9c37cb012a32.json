{"sha": "c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzVjYmY4MWVjZmVmNGI5YTU0ZTA1YTI2ZDFjYTljMzdjYjAxMmEzMg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-09-30T17:32:15Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-09-30T17:32:15Z"}, "message": "loop.c (check_dbra_loop): Use a vanilla loop reversal if the biv is used to compute a giv or as some...\n\n        * loop.c (check_dbra_loop): Use a vanilla loop reversal if the biv is\n        used to compute a giv or as some other non-counting use.\n\nFrom-SVN: r22684", "tree": {"sha": "5652067c84539e9918286170e9ff82d98cecd1ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5652067c84539e9918286170e9ff82d98cecd1ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32/comments", "author": null, "committer": null, "parents": [{"sha": "c1daea12d528ddc803fe5710aaade0767abbe661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1daea12d528ddc803fe5710aaade0767abbe661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1daea12d528ddc803fe5710aaade0767abbe661"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "81faece302f19a9de43c59932426df31a03e50a5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32", "patch": "@@ -1,3 +1,8 @@\n+Wed Sep 30 18:29:26 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* loop.c (check_dbra_loop): Use a vanilla loop reversal if the biv is\n+\tused to compute a giv or as some other non-counting use.\n+\n Wed Sep 30 18:19:27 1998  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* regs.h (HARD_REGNO_CALLER_SAVE_MODE): New macro."}, {"sha": "f8e4d8d06b9ab56ccc2d00380151560b6a2ae635", "filename": "gcc/loop.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=c5cbf81ecfef4b9a54e05a26d1ca9c37cb012a32", "patch": "@@ -6992,9 +6992,13 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \t      if (initial_value == const0_rtx\n \t\t  /* If we have a decrement_and_branch_on_count, prefer\n \t\t     the NE test, since this will allow that instruction to\n-\t\t     be generated.  */\n+\t\t     be generated.  Note that we must use a vanilla loop\n+\t\t     reversal if the biv is used to calculate a giv or has\n+\t\t     a non-counting use.  */\n #if ! defined (HAVE_decrement_and_branch_until_zero) && defined (HAVE_decrement_and_branch_on_count)\n-\t\t  && (add_val != 1 || ! vtop)\n+\t\t  && (! (add_val == 1 && vtop\n+\t\t         && (bl->biv_count == 0\n+\t\t\t     || no_use_except_counting)))\n #endif\n \t\t  && GET_CODE (comparison_value) == CONST_INT\n \t\t     /* Now do postponed overflow checks on COMPARISON_VAL.  */\n@@ -7007,7 +7011,9 @@ check_dbra_loop (loop_end, insn_count, loop_start)\n \t\t  nonneg = 1;\n \t\t  cmp_code = GE;\n \t\t}\n-\t      else if (add_val == 1 && vtop)\n+\t      else if (add_val == 1 && vtop\n+\t\t       && (bl->biv_count == 0\n+\t\t\t   || no_use_except_counting))\n \t\t{\n \t\t  add_adjust = 0;\n \t\t  cmp_code = NE;"}]}