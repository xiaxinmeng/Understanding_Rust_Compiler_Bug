{"sha": "6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE4ZjRlNDdjOTFjNzA3MDdlYzQyOGU1YzhiNWNmMDExOTY0NjRiMg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-03T00:16:26Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2020-09-03T00:16:26Z"}, "message": "Daily bump.", "tree": {"sha": "3dbbf0b35b2a3ce0e0acf1a0b6bd8b2070b6fc29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3dbbf0b35b2a3ce0e0acf1a0b6bd8b2070b6fc29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/comments", "author": null, "committer": null, "parents": [{"sha": "f0a3bab43fda3084eaf1bdaac58936757f30ea35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0a3bab43fda3084eaf1bdaac58936757f30ea35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0a3bab43fda3084eaf1bdaac58936757f30ea35"}], "stats": {"total": 245, "additions": 244, "deletions": 1}, "files": [{"sha": "20c0750b2e6892b7bf81d5c46942b979d4371230", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "patch": "@@ -1,3 +1,34 @@\n+2020-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR c++/60304\n+\t* ginclude/stdbool.h (bool, false, true): Never define for C++.\n+\n+2020-09-02  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* doc/invoke.texi (MSP430 options): Fix -mlarge description to\n+\tindicate size_t is a 20-bit type.\n+\n+2020-09-02  Roger Sayle  <roger@nextmovesoftware.com>\n+\n+\t* config/pa/pa.c (hppa_rtx_costs) [ASHIFT, ASHIFTRT, LSHIFTRT]:\n+\tProvide accurate costs for shifts of integer constants.\n+\n+2020-09-02  Jose E. Marchesi  <jose.marchesi@oracle.com>\n+\n+\t* config/bpf/bpf.c (bpf_asm_named_section): Delete.\n+\t(TARGET_ASM_NAMED_SECTION): Likewise.\n+\n+2020-09-02  Jose E. Marchesi  <jemarch@gnu.org>\n+\n+\t* config.gcc: Use elfos.h in bpf-*-* targets.\n+\t* config/bpf/bpf.h (MAX_OFILE_ALIGNMENT): Remove definition.\n+\t(COMMON_ASM_OP): Likewise.\n+\t(INIT_SECTION_ASM_OP): Likewise.\n+\t(FINI_SECTION_ASM_OP): Likewise.\n+\t(ASM_OUTPUT_SKIP): Likewise.\n+\t(ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n+\t(ASM_OUTPUT_ALIGNED_LOCAL): Likewise.\n+\n 2020-09-01  Martin Sebor  <msebor@redhat.com>\n \n \t* builtins.c (compute_objsize):  Only replace the upper bound"}, {"sha": "38146c36fe48b6d00c91ce919dd3242c8941e945", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "patch": "@@ -1 +1 @@\n-20200902\n+20200903"}, {"sha": "575de3f6f39e2290241f2ad7242ea156f43dc46c", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "patch": "@@ -1,3 +1,12 @@\n+2020-09-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/96869\n+\t* d-builtins.cc (build_frontend_type): Don't expose intrinsics that\n+\tuse unsupported vector types.\n+\t* d-target.cc (Target::isVectorTypeSupported): Restrict to supporting\n+\tonly if TARGET_VECTOR_MODE_SUPPORTED_P is true.  Don't allow complex\n+\tor boolean vector types.\n+\n 2020-08-31  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* d-target.cc (Target::_init): Don't set classinfosize."}, {"sha": "86363ab21705782b4ae580a925e3f91e5ec39b9a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "patch": "@@ -1,3 +1,10 @@\n+2020-09-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/96859\n+\t* check.c (gfc_boz2real, gfc_boz2int): When clearing first two bits,\n+\tchange also '2' to '0' and '3' to '1' rather than just handling '4'\n+\tthrough '7'.\n+\n 2020-09-01  Steven G. Kargl  <kargl@gcc.gnu.org>\n \t    Mark Eggleston  <markeggleston@gcc.gnu.org>\n "}, {"sha": "253135b557dee9abdf3ca37f65e870121d386466", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "patch": "@@ -1,3 +1,161 @@\n+2020-09-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\tPR d/96869\n+\t* gdc.dg/simd.d: Removed.\n+\t* gdc.dg/cast1.d: New test.\n+\t* gdc.dg/gdc213.d: Compile with target vect_sizes_16B_8B.\n+\t* gdc.dg/gdc284.d: Likewise.\n+\t* gdc.dg/gdc67.d: Likewise.\n+\t* gdc.dg/pr96869.d: New test.\n+\t* gdc.dg/simd1.d: New test.\n+\t* gdc.dg/simd10447.d: New test.\n+\t* gdc.dg/simd12776.d: New test.\n+\t* gdc.dg/simd13841.d: New test.\n+\t* gdc.dg/simd13927.d: New test.\n+\t* gdc.dg/simd15123.d: New test.\n+\t* gdc.dg/simd15144.d: New test.\n+\t* gdc.dg/simd16087.d: New test.\n+\t* gdc.dg/simd16697.d: New test.\n+\t* gdc.dg/simd17237.d: New test.\n+\t* gdc.dg/simd17695.d: New test.\n+\t* gdc.dg/simd17720a.d: New test.\n+\t* gdc.dg/simd17720b.d: New test.\n+\t* gdc.dg/simd19224.d: New test.\n+\t* gdc.dg/simd19627.d: New test.\n+\t* gdc.dg/simd19628.d: New test.\n+\t* gdc.dg/simd19629.d: New test.\n+\t* gdc.dg/simd19630.d: New test.\n+\t* gdc.dg/simd2a.d: New test.\n+\t* gdc.dg/simd2b.d: New test.\n+\t* gdc.dg/simd2c.d: New test.\n+\t* gdc.dg/simd2d.d: New test.\n+\t* gdc.dg/simd2e.d: New test.\n+\t* gdc.dg/simd2f.d: New test.\n+\t* gdc.dg/simd2g.d: New test.\n+\t* gdc.dg/simd2h.d: New test.\n+\t* gdc.dg/simd2i.d: New test.\n+\t* gdc.dg/simd2j.d: New test.\n+\t* gdc.dg/simd7951.d: New test.\n+\t* gdc.dg/torture/array2.d: New test.\n+\t* gdc.dg/torture/array3.d: New test.\n+\t* gdc.dg/torture/simd16488a.d: New test.\n+\t* gdc.dg/torture/simd16488b.d: New test.\n+\t* gdc.dg/torture/simd16703.d: New test.\n+\t* gdc.dg/torture/simd19223.d: New test.\n+\t* gdc.dg/torture/simd19607.d: New test.\n+\t* gdc.dg/torture/simd3.d: New test.\n+\t* gdc.dg/torture/simd4.d: New test.\n+\t* gdc.dg/torture/simd7411.d: New test.\n+\t* gdc.dg/torture/simd7413a.d: New test.\n+\t* gdc.dg/torture/simd7413b.d: New test.\n+\t* gdc.dg/torture/simd7414.d: New test.\n+\t* gdc.dg/torture/simd9200.d: New test.\n+\t* gdc.dg/torture/simd9304.d: New test.\n+\t* gdc.dg/torture/simd9449.d: New test.\n+\t* gdc.dg/torture/simd9910.d: New test.\n+\t* gdc.dg/simd13927b.d: New file.\n+\n+2020-09-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* lib/gdc-utils.exp (gdc-convert-test): Handle LINK directive.\n+\tSet PERMUTE_ARGS as DEFAULT_DFLAGS only for runnable tests.\n+\t(gdc-do-test): Set default action of compilable tests to compile.\n+\tTest SHARED_OPTION on runnable_cxx tests.\n+\n+2020-09-02  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.dg/dg.exp: Remove torture options.\n+\t* gdc.dg/gdc115.d: Move test to gdc.dg/torture.\n+\t* gdc.dg/gdc131.d: Likewise.\n+\t* gdc.dg/gdc141.d: Likewise.\n+\t* gdc.dg/gdc17.d: Likewise.\n+\t* gdc.dg/gdc171.d: Likewise.\n+\t* gdc.dg/gdc179.d: Likewise.\n+\t* gdc.dg/gdc186.d: Likewise.\n+\t* gdc.dg/gdc187.d: Likewise.\n+\t* gdc.dg/gdc191.d: Likewise.\n+\t* gdc.dg/gdc198.d: Likewise.\n+\t* gdc.dg/gdc200.d: Likewise.\n+\t* gdc.dg/gdc210.d: Likewise.\n+\t* gdc.dg/gdc240.d: Likewise.\n+\t* gdc.dg/gdc242b.d: Likewise.\n+\t* gdc.dg/gdc248.d: Likewise.\n+\t* gdc.dg/gdc250.d: Likewise.\n+\t* gdc.dg/gdc273.d: Likewise.\n+\t* gdc.dg/gdc283.d: Likewise.\n+\t* gdc.dg/gdc285.d: Likewise.\n+\t* gdc.dg/gdc286.d: Likewise.\n+\t* gdc.dg/gdc309.d: Likewise.\n+\t* gdc.dg/gdc35.d: Likewise.\n+\t* gdc.dg/gdc36.d: Likewise.\n+\t* gdc.dg/gdc51.d: Likewise.\n+\t* gdc.dg/gdc57.d: Likewise.\n+\t* gdc.dg/gdc66.d: Likewise.\n+\t* gdc.dg/imports/gdc36.d: Likewise.\n+\t* gdc.dg/init1.d: Likewise.\n+\t* gdc.dg/pr92309.d: Likewise.\n+\t* gdc.dg/pr94424.d: Likewise.\n+\t* gdc.dg/pr94777b.d: Likewise.\n+\t* gdc.dg/pr96152.d: Likewise.\n+\t* gdc.dg/pr96153.d: Likewise.\n+\t* gdc.dg/pr96156.d: Likewise.\n+\t* gdc.dg/pr96157a.d: Likewise.\n+\t* gdc.dg/torture/torture.exp: New file.\n+\t* gdc.dg/torture/gdc115.d: New file.\n+\t* gdc.dg/torture/gdc131.d: New file.\n+\t* gdc.dg/torture/gdc141.d: New file.\n+\t* gdc.dg/torture/gdc17.d: New file.\n+\t* gdc.dg/torture/gdc171.d: New file.\n+\t* gdc.dg/torture/gdc179.d: New file.\n+\t* gdc.dg/torture/gdc186.d: New file.\n+\t* gdc.dg/torture/gdc187.d: New file.\n+\t* gdc.dg/torture/gdc191.d: New file.\n+\t* gdc.dg/torture/gdc198.d: New file.\n+\t* gdc.dg/torture/gdc200.d: New file.\n+\t* gdc.dg/torture/gdc210.d: New file.\n+\t* gdc.dg/torture/gdc240.d: New file.\n+\t* gdc.dg/torture/gdc242b.d: New file.\n+\t* gdc.dg/torture/gdc248.d: New file.\n+\t* gdc.dg/torture/gdc250.d: New file.\n+\t* gdc.dg/torture/gdc273.d: New file.\n+\t* gdc.dg/torture/gdc283.d: New file.\n+\t* gdc.dg/torture/gdc285.d: New file.\n+\t* gdc.dg/torture/gdc286.d: New file.\n+\t* gdc.dg/torture/gdc309.d: New file.\n+\t* gdc.dg/torture/gdc35.d: New file.\n+\t* gdc.dg/torture/gdc36.d: New file.\n+\t* gdc.dg/torture/gdc51.d: New file.\n+\t* gdc.dg/torture/gdc57.d: New file.\n+\t* gdc.dg/torture/gdc66.d: New file.\n+\t* gdc.dg/torture/imports/gdc36.d: New file.\n+\t* gdc.dg/torture/init1.d: New file.\n+\t* gdc.dg/torture/pr92309.d: New file.\n+\t* gdc.dg/torture/pr94424.d: New file.\n+\t* gdc.dg/torture/pr94777b.d: New file.\n+\t* gdc.dg/torture/pr96152.d: New file.\n+\t* gdc.dg/torture/pr96153.d: New file.\n+\t* gdc.dg/torture/pr96156.d: New file.\n+\t* gdc.dg/torture/pr96157a.d: New file.\n+\n+2020-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR c++/60304\n+\t* g++.dg/warn/Wconversion-null-5.C: New test.\n+\n+2020-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* g++.old-deja/g++.abi/cxa_vec.C: Include <exception> for\n+\tstd::set_terminate.\n+\n+2020-09-02  Jozef Lawrynowicz  <jozef.l@mittosystems.com>\n+\n+\t* gcc.dg/pr55940.c: Skip for msp430 unless -mlarge is specified.\n+\n+2020-09-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/96859\n+\t* gfortran.dg/pr96859.f90: New test.\n+\n 2020-09-01  Martin Sebor  <msebor@redhat.com>\n \n \t* gcc.dg/Wstringop-overflow.c: Remove xfails."}, {"sha": "c0389c1633d8d93edf1c5e71a34a8ecea0ae2ef5", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a8f4e47c91c70707ec428e5c8b5cf01196464b2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6a8f4e47c91c70707ec428e5c8b5cf01196464b2", "patch": "@@ -1,3 +1,41 @@\n+2020-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/92978\n+\t* testsuite/experimental/numeric/92978.cc: Use experimental::lcm\n+\tnot std::lcm.\n+\n+2020-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/96851\n+\t* include/bits/cpp_type_traits.h (__is_memcmp_ordered):\n+\tNew trait that says if memcmp can be used for ordering.\n+\t(__is_memcmp_ordered_with): Likewise, for two types.\n+\t* include/bits/deque.tcc (__lex_cmp_dit): Use new traits\n+\tinstead of __is_byte and __numeric_traits.\n+\t(__lexicographical_compare_aux1): Likewise.\n+\t* include/bits/ranges_algo.h (__lexicographical_compare_fn):\n+\tLikewise.\n+\t* include/bits/stl_algobase.h (__lexicographical_compare_aux1)\n+\t(__is_byte_iter): Likewise.\n+\t* include/std/array (operator<=>): Likewise. Only use memcmp\n+\twhen std::is_constant_evaluated() is false.\n+\t* testsuite/23_containers/array/comparison_operators/96851.cc:\n+\tNew test.\n+\t* testsuite/23_containers/array/tuple_interface/get_neg.cc:\n+\tAdjust dg-error line numbers.\n+\n+2020-09-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_iterator.h: Include <bits/exception_defines.h>\n+\tfor definitions of __try, __catch and __throw_exception_again.\n+\t(counted_iterator::operator++(int)): Use __throw_exception_again\n+\tinstead of throw.\n+\t* libsupc++/new: Include <bits/exception.h> not <exception>.\n+\t* libsupc++/new_opvnt.cc: Include <bits/exception_defines.h>.\n+\t* testsuite/18_support/destroying_delete.cc: Include\n+\t<type_traits> for std::is_same_v definition.\n+\t* testsuite/20_util/variant/index_type.cc: Qualify size_t.\n+\n 2020-09-01  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/71960"}]}