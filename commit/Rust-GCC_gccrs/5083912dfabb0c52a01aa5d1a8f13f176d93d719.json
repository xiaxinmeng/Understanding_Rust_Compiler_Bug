{"sha": "5083912dfabb0c52a01aa5d1a8f13f176d93d719", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA4MzkxMmRmYWJiMGM1MmEwMWFhNWQxYThmMTNmMTc2ZDkzZDcxOQ==", "commit": {"author": {"name": "Philippe De Muyter", "email": "phdm@macqel.be", "date": "2007-04-18T20:51:42Z"}, "committer": {"name": "Philippe De Muyter", "email": "phdm@gcc.gnu.org", "date": "2007-04-18T20:51:42Z"}, "message": "m68k.c (output_btst): Use `movew to ccr' when useful.\n\n2007-04-18  Philippe De Muyter  <phdm@macqel.be>\n\n\t* config/m68k/m68k.c (output_btst): Use `movew to ccr' when useful.\n\nFrom-SVN: r123959", "tree": {"sha": "27f37e1872c083d063137c5860ac05ecd10fb342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27f37e1872c083d063137c5860ac05ecd10fb342"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5083912dfabb0c52a01aa5d1a8f13f176d93d719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5083912dfabb0c52a01aa5d1a8f13f176d93d719", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5083912dfabb0c52a01aa5d1a8f13f176d93d719", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5083912dfabb0c52a01aa5d1a8f13f176d93d719/comments", "author": {"login": "phdm", "id": 2923420, "node_id": "MDQ6VXNlcjI5MjM0MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2923420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phdm", "html_url": "https://github.com/phdm", "followers_url": "https://api.github.com/users/phdm/followers", "following_url": "https://api.github.com/users/phdm/following{/other_user}", "gists_url": "https://api.github.com/users/phdm/gists{/gist_id}", "starred_url": "https://api.github.com/users/phdm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phdm/subscriptions", "organizations_url": "https://api.github.com/users/phdm/orgs", "repos_url": "https://api.github.com/users/phdm/repos", "events_url": "https://api.github.com/users/phdm/events{/privacy}", "received_events_url": "https://api.github.com/users/phdm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "05fb69e4c9ce7e8767d36e5bfb5c0e6e67d3b905", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05fb69e4c9ce7e8767d36e5bfb5c0e6e67d3b905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05fb69e4c9ce7e8767d36e5bfb5c0e6e67d3b905"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "584dd82a9c46c1de5271e2fcac4c9f0dcf0d12c8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5083912dfabb0c52a01aa5d1a8f13f176d93d719/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5083912dfabb0c52a01aa5d1a8f13f176d93d719/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5083912dfabb0c52a01aa5d1a8f13f176d93d719", "patch": "@@ -1,3 +1,7 @@\n+2007-04-18  Philippe De Muyter  <phdm@macqel.be>\n+\n+\t* config/m68k/m68k.c (output_btst): Use `movew to ccr' when useful.\n+\n 2007-04-18  Dirk Mueller  <dmueller@suse.de>\n \n \tPR diagnostic/31227"}, {"sha": "2df2a7c8904e3d53bb32703f1c674226cdfa1384", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5083912dfabb0c52a01aa5d1a8f13f176d93d719/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5083912dfabb0c52a01aa5d1a8f13f176d93d719/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=5083912dfabb0c52a01aa5d1a8f13f176d93d719", "patch": "@@ -1550,6 +1550,27 @@ output_btst (rtx *operands, rtx countop, rtx dataop, rtx insn, int signpos)\n       if (count == 7\n \t  && next_insn_tests_no_inequality (insn))\n \treturn \"tst%.b %1\";\n+      /* Try to use `movew to ccr' followed by the appropriate branch insn.\n+         On some m68k variants unfortunately that's slower than btst.\n+         On 68000 and higher, that should also work for all HImode operands. */\n+      if (TUNE_CPU32 || TARGET_COLDFIRE || optimize_size)\n+\t{\n+\t  if (count == 3 && DATA_REG_P (operands[1])\n+\t      && next_insn_tests_no_inequality (insn))\n+\t    {\n+\t    cc_status.flags = CC_NOT_NEGATIVE | CC_Z_IN_NOT_N | CC_NO_OVERFLOW;\n+\t    return \"move%.w %1,%%ccr\";\n+\t    }\n+\t  if (count == 2 && DATA_REG_P (operands[1])\n+\t      && next_insn_tests_no_inequality (insn))\n+\t    {\n+\t    cc_status.flags = CC_NOT_NEGATIVE | CC_INVERTED | CC_NO_OVERFLOW;\n+\t    return \"move%.w %1,%%ccr\";\n+\t    }\n+\t  /* count == 1 followed by bvc/bvs and\n+\t     count == 0 followed by bcc/bcs are also possible, but need\n+\t     m68k-specific CC_Z_IN_NOT_V and CC_Z_IN_NOT_C flags. */\n+\t}\n \n       cc_status.flags = CC_NOT_NEGATIVE;\n     }"}]}