{"sha": "c79154c4fafac337a11f8c99fd57070b9266d452", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc5MTU0YzRmYWZhYzMzN2ExMWY4Yzk5ZmQ1NzA3MGI5MjY2ZDQ1Mg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-11-04T00:51:51Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-11-04T00:51:51Z"}, "message": "call.c (build_op_delete_call): Test user-visible type against size_type_node...\n\n\n\t* call.c (build_op_delete_call): Test user-visible type against\n\tsize_type_node, instead of against the internal type, sizetype.\n\t* class.c (type_requires_array_cookie): Likewise.\n\t* mangle.c (write_builtin_type) <INTEGER_TYPE>: Remove special\n\thandling of TYPE_IS_SIZETYPE.\n\t* typeck.c (type_after_usual_arithmetic_conversions): Remove\n\tspecial case handling of TYPE_IS_SIZETYPE.\n\t(comptypes): Likewise.\n\nFrom-SVN: r118472", "tree": {"sha": "fbc4334b70edd89cfbec4ff262641228cba69206", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbc4334b70edd89cfbec4ff262641228cba69206"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c79154c4fafac337a11f8c99fd57070b9266d452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79154c4fafac337a11f8c99fd57070b9266d452", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c79154c4fafac337a11f8c99fd57070b9266d452", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c79154c4fafac337a11f8c99fd57070b9266d452/comments", "author": null, "committer": null, "parents": [{"sha": "4c9e00c8751ed4cdee9331c6c76149d7b2d4af45", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c9e00c8751ed4cdee9331c6c76149d7b2d4af45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c9e00c8751ed4cdee9331c6c76149d7b2d4af45"}], "stats": {"total": 35, "additions": 13, "deletions": 22}, "files": [{"sha": "9cd3d298ac0a99419374c7b49edaba92eb39cdbd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c79154c4fafac337a11f8c99fd57070b9266d452", "patch": "@@ -1,3 +1,14 @@\n+2006-11-03  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* call.c (build_op_delete_call): Test user-visible type against\n+\tsize_type_node, instead of against the internal type, sizetype.\n+\t* class.c (type_requires_array_cookie): Likewise.\n+\t* mangle.c (write_builtin_type) <INTEGER_TYPE>: Remove special\n+\thandling of TYPE_IS_SIZETYPE.\n+\t* typeck.c (type_after_usual_arithmetic_conversions): Remove\n+\tspecial case handling of TYPE_IS_SIZETYPE.\n+\t(comptypes): Likewise.\n+\n 2006-11-01  Danny Smith  <dannysmith@users.sourceforge.net>\n \n \t* decl.c (get_atexit_node): Reference atexit, not __cxa_exit."}, {"sha": "27ef20347af5d60e89985d2c400ecfe3cb87d856", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=c79154c4fafac337a11f8c99fd57070b9266d452", "patch": "@@ -4077,7 +4077,7 @@ build_op_delete_call (enum tree_code code, tree addr, tree size,\n \t  /* On the second pass, the second argument must be\n \t     \"size_t\".  */\n \t  else if (pass == 1\n-\t\t   && same_type_p (TREE_VALUE (t), sizetype)\n+\t\t   && same_type_p (TREE_VALUE (t), size_type_node)\n \t\t   && TREE_CHAIN (t) == void_list_node)\n \t    break;\n \t}"}, {"sha": "75d56bea75a6bcc2798f74b16c367ad8ac82b038", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=c79154c4fafac337a11f8c99fd57070b9266d452", "patch": "@@ -4050,7 +4050,7 @@ type_requires_array_cookie (tree type)\n \t argument is `size_t', it will be the usual deallocation\n \t function -- unless there is one-argument function, too.  */\n       if (TREE_CHAIN (second_parm) == void_list_node\n-\t  && same_type_p (TREE_VALUE (second_parm), sizetype))\n+\t  && same_type_p (TREE_VALUE (second_parm), size_type_node))\n \thas_two_argument_delete_p = true;\n     }\n "}, {"sha": "5b8d338e9100f90feca93de3da70517fafe4b013", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=c79154c4fafac337a11f8c99fd57070b9266d452", "patch": "@@ -1732,10 +1732,6 @@ write_builtin_type (tree type)\n       break;\n \n     case INTEGER_TYPE:\n-      /* If this is size_t, get the underlying int type.  */\n-      if (TYPE_IS_SIZETYPE (type))\n-\ttype = TYPE_DOMAIN (type);\n-\n       /* TYPE may still be wchar_t, since that isn't in\n \t integer_type_nodes.  */\n       if (type == wchar_type_node)"}, {"sha": "242ae1984dd854389b66acce790d506617cede7c", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c79154c4fafac337a11f8c99fd57070b9266d452/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=c79154c4fafac337a11f8c99fd57070b9266d452", "patch": "@@ -324,12 +324,6 @@ type_after_usual_arithmetic_conversions (tree t1, tree t2)\n \n   if (code1 != REAL_TYPE)\n     {\n-      /* If one is a sizetype, use it so size_binop doesn't blow up.  */\n-      if (TYPE_IS_SIZETYPE (t1) > TYPE_IS_SIZETYPE (t2))\n-\treturn build_type_attribute_variant (t1, attributes);\n-      if (TYPE_IS_SIZETYPE (t2) > TYPE_IS_SIZETYPE (t1))\n-\treturn build_type_attribute_variant (t2, attributes);\n-\n       /* If one is unsigned long long, then convert the other to unsigned\n \t long long.  */\n       if (same_type_p (TYPE_MAIN_VARIANT (t1), long_long_unsigned_type_node)\n@@ -966,16 +960,6 @@ comptypes (tree t1, tree t2, int strict)\n \tt2 = resolved;\n     }\n \n-  /* If either type is the internal version of sizetype, use the\n-     language version.  */\n-  if (TREE_CODE (t1) == INTEGER_TYPE && TYPE_IS_SIZETYPE (t1)\n-      && TYPE_ORIG_SIZE_TYPE (t1))\n-    t1 = TYPE_ORIG_SIZE_TYPE (t1);\n-\n-  if (TREE_CODE (t2) == INTEGER_TYPE && TYPE_IS_SIZETYPE (t2)\n-      && TYPE_ORIG_SIZE_TYPE (t2))\n-    t2 = TYPE_ORIG_SIZE_TYPE (t2);\n-\n   if (TYPE_PTRMEMFUNC_P (t1))\n     t1 = TYPE_PTRMEMFUNC_FN_TYPE (t1);\n   if (TYPE_PTRMEMFUNC_P (t2))"}]}