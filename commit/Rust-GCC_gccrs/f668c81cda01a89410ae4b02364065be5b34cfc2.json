{"sha": "f668c81cda01a89410ae4b02364065be5b34cfc2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY2OGM4MWNkYTAxYTg5NDEwYWU0YjAyMzY0MDY1YmU1YjM0Y2ZjMg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-01-12T17:34:22Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-01-12T17:34:22Z"}, "message": "cccp.c: Accept and ignore -lang-fortran.\n\n\t* cccp.c: Accept and ignore -lang-fortran.\n\t* f/lang-specs.h: Pass -lang-fortran to preprocessor.\n\nFrom-SVN: r31355", "tree": {"sha": "68a380ebaa22916925253a080e8f0cb322ea207d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68a380ebaa22916925253a080e8f0cb322ea207d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f668c81cda01a89410ae4b02364065be5b34cfc2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f668c81cda01a89410ae4b02364065be5b34cfc2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f668c81cda01a89410ae4b02364065be5b34cfc2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f668c81cda01a89410ae4b02364065be5b34cfc2/comments", "author": null, "committer": null, "parents": [{"sha": "e8fe510b139dc2f159d3396be28bf092c31818a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8fe510b139dc2f159d3396be28bf092c31818a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8fe510b139dc2f159d3396be28bf092c31818a0"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "ac8d0b47c502306b75b00a99aa292ccd8bf33633", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f668c81cda01a89410ae4b02364065be5b34cfc2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f668c81cda01a89410ae4b02364065be5b34cfc2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f668c81cda01a89410ae4b02364065be5b34cfc2", "patch": "@@ -1,3 +1,7 @@\n+2000-01-12  Zack Weinberg  <zack@wolery.cumb.org\n+\n+\t* cccp.c: Accept and ignore -lang-fortran.\n+\n 2000-01-12  Robert Lipe  <robertl@sco.com>\n \n \t* i386/sysv5.h (CPP_SPEC, LIBSPEC): Add -pthreadT."}, {"sha": "16231d9912a77b361b1452b6b059d4ca8e0bc7b0", "filename": "gcc/cccp.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f668c81cda01a89410ae4b02364065be5b34cfc2/gcc%2Fcccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f668c81cda01a89410ae4b02364065be5b34cfc2/gcc%2Fcccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcccp.c?ref=f668c81cda01a89410ae4b02364065be5b34cfc2", "patch": "@@ -1123,6 +1123,7 @@ print_help ()\n   printf (\"  -lang-objc                Assume that the input sources are in ObjectiveC\\n\");\n   printf (\"  -lang-objc++              Assume that the input sources are in ObjectiveC++\\n\");\n   printf (\"  -lang-asm                 Assume that the input sources are in assembler\\n\");\n+  printf (\"  -lang-fortran\t       Assume that the input sources are in Fortran\\n\");\n   printf (\"  -lang-chill               Assume that the input sources are in Chill\\n\");\n   printf (\"  -std=<std name>           Specify the conformance standard; one of:\\n\");\n   printf (\"                            gnu89, gnu9x, c89, c9x, iso9899:1990,\\n\");\n@@ -1457,6 +1458,8 @@ main (argc, argv)\n \t  cplusplus = 1, cplusplus_comments = 1, c89 = 0, c9x = 0, objc = 1;\n  \telse if (! strcmp (argv[i], \"-lang-asm\"))\n  \t  lang_asm = 1;\n+\telse if (! strcmp (argv[i], \"-lang-fortran\"))\n+\t  /* Doesn't actually do anything.  */ ;\n  \telse if (! strcmp (argv[i], \"-lint\"))\n  \t  for_lint = 1;\n \tbreak;"}, {"sha": "b6ed46f3aad7fef668ca137a83c490b7690e8563", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f668c81cda01a89410ae4b02364065be5b34cfc2/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f668c81cda01a89410ae4b02364065be5b34cfc2/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=f668c81cda01a89410ae4b02364065be5b34cfc2", "patch": "@@ -1,3 +1,7 @@\n+Wed Jan 12 09:32:59 2000  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\t* lang-specs.h: Pass -lang-fortran to preprocessor.\n+\n Thu Dec 30 13:14:31 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* stw.h (struct _ffestw_): Change type of uses_ to int."}, {"sha": "924802e73d9e4b1ead3459c87e23a9c0f82ab12c", "filename": "gcc/f/lang-specs.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f668c81cda01a89410ae4b02364065be5b34cfc2/gcc%2Ff%2Flang-specs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f668c81cda01a89410ae4b02364065be5b34cfc2/gcc%2Ff%2Flang-specs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Flang-specs.h?ref=f668c81cda01a89410ae4b02364065be5b34cfc2", "patch": "@@ -35,7 +35,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \tSun f77, at least) so you test `__unix' rather than `unix'.\n \t-D_LANGUAGE_FORTRAN is used by some compilers like SGI and\n \tmight as well be in there. */\n-   {\"cpp -lang-c %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n+   {\"cpp -lang-fortran %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I\\\n \t%{C:%{!E:%eGNU C does not support -C without using -E}}\\\n \t%{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG}\\\n \t%{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2}\\\n@@ -85,7 +85,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n \t\t      %{c:%W{o*}%{!o*:-o %w%b%O}}%{!c:-o %d%w%u%O}\\\n \t\t      %{!pipe:%g.s} %A\\n }}}}\"}},\n   {\"@f77-version\",\n-   {\"cpp -lang-c %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I \\\n+   {\"cpp -lang-fortran %{nostdinc*} %{C} %{v} %{A*} %{I*} %{P} %{$} %I \\\n       %{C:%{!E:%eGNU C does not support -C without using -E}} \\\n       %{M} %{MM} %{MD:-MD %b.d} %{MMD:-MMD %b.d} %{MG} \\\n       %{!no-gcc:-D__GNUC__=%v1 -D__GNUC_MINOR__=%v2} \\"}]}