{"sha": "247b63e33d21cb5971ae93c8232a50c678480eeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ3YjYzZTMzZDIxY2I1OTcxYWU5M2M4MjMyYTUwYzY3ODQ4MGVlYg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-06-25T12:30:19Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-06-25T12:30:19Z"}, "message": "Transform filter-rtags-warnings to filter-clang-warnings.\n\n2019-06-25  Martin Liska  <mliska@suse.cz>\n\n\tcontrib/filter-clang-warnings.py: Transform from\n\tfilter-rtags-warnings.py.\n\nFrom-SVN: r272652", "tree": {"sha": "2fd1b3e918c4cb412706d393e2b7e361fc0fd640", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fd1b3e918c4cb412706d393e2b7e361fc0fd640"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/247b63e33d21cb5971ae93c8232a50c678480eeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247b63e33d21cb5971ae93c8232a50c678480eeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/247b63e33d21cb5971ae93c8232a50c678480eeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/247b63e33d21cb5971ae93c8232a50c678480eeb/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "adef5d4f4eee1394c862cafc4cb33395af68bc4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/adef5d4f4eee1394c862cafc4cb33395af68bc4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/adef5d4f4eee1394c862cafc4cb33395af68bc4a"}], "stats": {"total": 52, "additions": 29, "deletions": 23}, "files": [{"sha": "22a671aa3a068ac4b0de472e15b081225e18acf6", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247b63e33d21cb5971ae93c8232a50c678480eeb/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247b63e33d21cb5971ae93c8232a50c678480eeb/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=247b63e33d21cb5971ae93c8232a50c678480eeb", "patch": "@@ -1,3 +1,8 @@\n+2019-06-25  Martin Liska  <mliska@suse.cz>\n+\n+\tcontrib/filter-clang-warnings.py: Transform from\n+\tfilter-rtags-warnings.py.\n+\n 2019-06-15  Tom Tromey  <tom@tromey.com>\n \n \t* configure.ac (host_libs): Add gnulib."}, {"sha": "15cca5ff2df886d8ea2777df844e7359821f0d7e", "filename": "contrib/filter-clang-warnings.py", "status": "renamed", "additions": 24, "deletions": 23, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/247b63e33d21cb5971ae93c8232a50c678480eeb/contrib%2Ffilter-clang-warnings.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/247b63e33d21cb5971ae93c8232a50c678480eeb/contrib%2Ffilter-clang-warnings.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Ffilter-clang-warnings.py?ref=247b63e33d21cb5971ae93c8232a50c678480eeb", "patch": "@@ -1,7 +1,6 @@\n #!/usr/bin/env python3\n #\n-# Script to analyze warnings produced by rtags command (using LLVM):\n-# rc --diagnose-all --synchronous-diagnostics --json\n+# Script to analyze warnings produced by clang.\n #\n # This file is part of GCC.\n #\n@@ -23,26 +22,26 @@\n #\n \n import sys\n-import json\n import argparse\n \n-def skip_warning(filename, warning):\n+def skip_warning(filename, message):\n     ignores = {\n             '': ['-Warray-bounds', '-Wmismatched-tags', 'gcc_gfc: -Wignored-attributes', '-Wchar-subscripts',\n                 'string literal (potentially insecure): -Wformat-security', '-Wdeprecated-register',\n                 '-Wvarargs', 'keyword is hidden by macro definition', \"but the argument has type 'char *': -Wformat-pedantic\",\n-                '-Wnested-anon-types', 'qualifier in explicit instantiation of', 'attribute argument not supported: asm_fprintf'],\n+                '-Wnested-anon-types', 'qualifier in explicit instantiation of', 'attribute argument not supported: asm_fprintf',\n+                'when in C++ mode, this behavior is deprecated', '-Wignored-attributes', '-Wgnu-zero-variadic-macro-arguments',\n+                '-Wformat-security'],\n             'insn-modes.c': ['-Wshift-count-overflow'],\n             'insn-emit.c': ['-Wtautological-compare'],\n             'insn-attrtab.c': ['-Wparentheses-equality'],\n             'gimple-match.c': ['-Wunused-', '-Wtautological-compare'],\n             'generic-match.c': ['-Wunused-', '-Wtautological-compare'],\n-    }\n-\n-    message = warning['message']\n+            'i386.md': ['-Wparentheses-equality', '-Wtautological-compare'],\n+            'sse.md': ['-Wparentheses-equality', '-Wtautological-compare'],\n+            'genautomata.c': ['-Wstring-plus-int']\n \n-    if warning['type'] == 'fixit':\n-        return True\n+    }\n \n     for name, ignores in ignores.items():\n         for i in ignores:\n@@ -52,20 +51,22 @@ def skip_warning(filename, warning):\n     return False\n \n parser = argparse.ArgumentParser()\n-parser.add_argument('json_file', help = 'Rtags JSON file with diagnostics')\n-parser.add_argument('-n', '--no-filter', action = 'store_true', help = 'No filter')\n-\n+parser.add_argument('log', help = 'Log file with clang warnings')\n args = parser.parse_args()\n \n-data = json.load(open(args.json_file))\n-file_warnings = data['checkStyle']\n-\n+lines = [l.strip() for l in open(args.log)]\n total = 0\n-for filename, warnings in file_warnings.items():\n-    if warnings:\n-        for w in warnings:\n-            if args.no_filter or not skip_warning(filename, w):\n-                total += 1\n-                print('%s:%d:%d:%s' % (filename, w['line'], w['column'], w['message']))\n+messages = []\n+for l in lines:\n+    token = ': warning: '\n+    i = l.find(token)\n+    if i != -1:\n+        location = l[:i]\n+        message = l[i + len(token):]\n+        if not skip_warning(location, message):\n+            total += 1\n+            messages.append(l)\n \n-print('Total: %d' % total)\n+for l in sorted(messages):\n+    print(l)\n+print('\\nTotal warnings: %d' % total)", "previous_filename": "contrib/filter-rtags-warnings.py"}]}