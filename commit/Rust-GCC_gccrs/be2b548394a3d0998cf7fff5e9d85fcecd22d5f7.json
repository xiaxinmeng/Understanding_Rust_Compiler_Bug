{"sha": "be2b548394a3d0998cf7fff5e9d85fcecd22d5f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmUyYjU0ODM5NGEzZDA5OThjZjdmZmY1ZTlkODVmY2VjZDIyZDVmNw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2008-01-16T09:46:29Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2008-01-16T09:46:29Z"}, "message": "re PR c++/33819 (Miscompiled shift of C++ bitfield)\n\n2008-01-16  Richard Guenther  <rguenther@suse.de>\n\n\tPR c++/33819\n\t* typeck.c (is_bitfield_expr_with_lowered_type): Recurse\n\tfor conversions to type variants.\n\n\t* g++.dg/torture/pr33819.C: New testcase.\n\nFrom-SVN: r131569", "tree": {"sha": "cbd5804a6e2588513cf6180a869baff17ff233c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbd5804a6e2588513cf6180a869baff17ff233c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb1387a0511b0b71c901c7a9458cea1cc2f911c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb1387a0511b0b71c901c7a9458cea1cc2f911c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb1387a0511b0b71c901c7a9458cea1cc2f911c4"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "030232b40e90997aade2f3145a3e69f0f057e2cc", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=be2b548394a3d0998cf7fff5e9d85fcecd22d5f7", "patch": "@@ -1,3 +1,9 @@\n+2008-01-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/33819\n+\t* typeck.c (is_bitfield_expr_with_lowered_type): Recurse\n+\tfor conversions to type variants.\n+\n 2008-01-15  Andreas Tobler  <a.tobler@schweiz.org>\n \n \t* parser.c (cp_parser_template_parameter): Fix C90 issue with mixing"}, {"sha": "655763772f9726d0640707fddcbc90a239808ac2", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=be2b548394a3d0998cf7fff5e9d85fcecd22d5f7", "patch": "@@ -1445,6 +1445,13 @@ is_bitfield_expr_with_lowered_type (const_tree exp)\n \treturn DECL_BIT_FIELD_TYPE (field);\n       }\n \n+    case NOP_EXPR:\n+    case CONVERT_EXPR:\n+      if (TYPE_MAIN_VARIANT (TREE_TYPE (TREE_OPERAND (exp, 0)))\n+\t  == TYPE_MAIN_VARIANT (TREE_TYPE (exp)))\n+\treturn is_bitfield_expr_with_lowered_type (TREE_OPERAND (exp, 0));\n+      /* Fallthrough.  */\n+\n     default:\n       return NULL_TREE;\n     }"}, {"sha": "e2748361e74155cfba08dedd4786fdb4ffc4d863", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=be2b548394a3d0998cf7fff5e9d85fcecd22d5f7", "patch": "@@ -1,3 +1,8 @@\n+2008-01-16  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR c++/33819\n+\t* g++.dg/torture/pr33819.C: New testcase.\n+\n 2008-01-16  Richard Guenther  <rguenther@suse.de>\n \n \tPR c/34768"}, {"sha": "a2f868daee3c06b10ce324da269ecb38e811e251", "filename": "gcc/testsuite/g++.dg/torture/pr33819.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr33819.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be2b548394a3d0998cf7fff5e9d85fcecd22d5f7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr33819.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr33819.C?ref=be2b548394a3d0998cf7fff5e9d85fcecd22d5f7", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do run } */\n+\n+class s\n+{\n+public:\n+  s(long long aa) : a(aa), i1(0) { }\n+  long long id() const { return (this->a << 16) >> 16; }\n+  bool operator< (s sv) { return this->a < sv.id(); }\n+private:\n+  long long a : 48;\n+  int i1 : 16;\n+};\n+s g(1);\n+extern \"C\" void abort (void);\n+int\n+main(int, char**)\n+{\n+  if (g < (1LL << 38) - 1)\n+    return 0;\n+  abort ();\n+}\n+"}]}