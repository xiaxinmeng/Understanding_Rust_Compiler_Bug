{"sha": "76ee804272089646a4c554ddf6be4471fb589b62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZlZTgwNDI3MjA4OTY0NmE0YzU1NGRkZjZiZTQ0NzFmYjU4OWI2Mg==", "commit": {"author": {"name": "Gavin Romig-Koch", "email": "gavin@cygnus.com", "date": "1999-11-23T19:18:48Z"}, "committer": {"name": "Gavin Romig-Koch", "email": "gavin@gcc.gnu.org", "date": "1999-11-23T19:18:48Z"}, "message": "mips.h (ISA_HAS_FP4,ISA_HAS_CONDMOVE,ISA_HAS_8CC): Split the second two from the first.\n\n\t* config/mips/mips.h (ISA_HAS_FP4,ISA_HAS_CONDMOVE,ISA_HAS_8CC): Split\n\tthe second two from the first.\n\t(CONDITIONAL_REGISTER_USAGE): Use ISA_HAS_8CC rather than ISA_HAS_FP4.\n\t* config/mips/mips.md (movcc,reload_incc,reload_outcc,\n\tconditional move): Use ISA_HAS_CONDMOVE or ISA_HAS_8CC rather than\n\tISA_HAS_FP4.\n\t* config/mips/mips.c (mips_move_1word,gen_conditional_branch,\n\toverride_options): Use ISA_HAS_CONDMOVE or ISA_HAS_8CC rather than\n\tISA_HAS_FP4.\n\nFrom-SVN: r30643", "tree": {"sha": "e157941225513aa19f4d86f264dc0438739ccb7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e157941225513aa19f4d86f264dc0438739ccb7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76ee804272089646a4c554ddf6be4471fb589b62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ee804272089646a4c554ddf6be4471fb589b62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76ee804272089646a4c554ddf6be4471fb589b62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76ee804272089646a4c554ddf6be4471fb589b62/comments", "author": null, "committer": null, "parents": [{"sha": "1b8079e9d5f922a0c6a076b708b151f8cb5eb7ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b8079e9d5f922a0c6a076b708b151f8cb5eb7ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b8079e9d5f922a0c6a076b708b151f8cb5eb7ed"}], "stats": {"total": 77, "additions": 51, "deletions": 26}, "files": [{"sha": "d1639ff6c3136654bd81fed84d4c27eaa7c9371f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee804272089646a4c554ddf6be4471fb589b62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee804272089646a4c554ddf6be4471fb589b62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76ee804272089646a4c554ddf6be4471fb589b62", "patch": "@@ -1,3 +1,15 @@\n+1999-11-23  Gavin Romig-Koch  <gavin@cygnus.com>\n+\n+\t* config/mips/mips.h (ISA_HAS_FP4,ISA_HAS_CONDMOVE,ISA_HAS_8CC): Split \n+\tthe second two from the first.\n+\t(CONDITIONAL_REGISTER_USAGE): Use ISA_HAS_8CC rather than ISA_HAS_FP4.\n+\t* config/mips/mips.md (movcc,reload_incc,reload_outcc,\n+\tconditional move): Use ISA_HAS_CONDMOVE or ISA_HAS_8CC rather than \n+\tISA_HAS_FP4.\n+\t* config/mips/mips.c (mips_move_1word,gen_conditional_branch,\n+\toverride_options): Use ISA_HAS_CONDMOVE or ISA_HAS_8CC rather than\n+\tISA_HAS_FP4.\n+\n Tue Nov 23 11:15:04 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* pa.md (call_internal_symref, call_value_internal_symref): No mode"}, {"sha": "63900f25710f76d26443c6afa3700bea0209b92d", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee804272089646a4c554ddf6be4471fb589b62/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee804272089646a4c554ddf6be4471fb589b62/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=76ee804272089646a4c554ddf6be4471fb589b62", "patch": "@@ -1719,7 +1719,7 @@ mips_move_1word (operands, insn, unsignedp)\n \t\t    ret = \"mflo\\t%0\";\n \t\t}\n \n-\t      else if (ST_REG_P (regno1) && ISA_HAS_FP4)\n+\t      else if (ST_REG_P (regno1) && ISA_HAS_8CC)\n \t\tret = \"li\\t%0,1\\n\\tmovf\\t%0,%.,%1\";\n \n \t      else\n@@ -1728,7 +1728,7 @@ mips_move_1word (operands, insn, unsignedp)\n \t\t  if (FP_REG_P (regno1))\n \t\t    ret = \"mfc1\\t%0,%1\";\n \n-\t\t  else if (regno1 == FPSW_REGNUM && ! ISA_HAS_FP4)\n+\t\t  else if (regno1 == FPSW_REGNUM && ! ISA_HAS_8CC)\n \t\t    ret = \"cfc1\\t%0,$31\";\n \t\t}\n \t    }\n@@ -1755,7 +1755,7 @@ mips_move_1word (operands, insn, unsignedp)\n \t\t}\n \t    }\n \n-\t  else if (regno0 == FPSW_REGNUM && ! ISA_HAS_FP4)\n+\t  else if (regno0 == FPSW_REGNUM && ! ISA_HAS_8CC)\n \t    {\n \t      if (GP_REG_P (regno1))\n \t\t{\n@@ -2873,7 +2873,7 @@ gen_conditional_branch (operands, test_code)\n \n     case CMP_SF:\n     case CMP_DF:\n-      if (! ISA_HAS_FP4)\n+      if (! ISA_HAS_8CC)\n \treg = gen_rtx_REG (CCmode, FPSW_REGNUM);\n       else\n \treg = gen_reg_rtx (CCmode);\n@@ -4733,7 +4733,7 @@ override_options ()\n \n \t  if (mode == CCmode)\n \t    {\n-\t      if (! ISA_HAS_FP4)\n+\t      if (! ISA_HAS_8CC)\n \t\ttemp = (regno == FPSW_REGNUM);\n \t      else\n \t\ttemp = (ST_REG_P (regno) || GP_REG_P (regno)"}, {"sha": "6768a52bc8c346d71724238fb84213b87730ffeb", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee804272089646a4c554ddf6be4471fb589b62/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee804272089646a4c554ddf6be4471fb589b62/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=76ee804272089646a4c554ddf6be4471fb589b62", "patch": "@@ -566,16 +566,29 @@ extern void\t\tsbss_section PARAMS ((void));\n #define HAVE_SQRT_P()\t\t(mips_isa != 1)\n \n /* ISA has instructions for managing 64 bit fp and gp regs (eg. mips3). */\n-#define ISA_HAS_64BIT_REGS\t(mips_isa == 3 || mips_isa == 4 || mips_isa == 64)\n+#define ISA_HAS_64BIT_REGS\t(mips_isa == 3 || mips_isa == 4 \t\\\n+                                )\n \n /* ISA has branch likely instructions (eg. mips2). */ \n #define ISA_HAS_BRANCHLIKELY\t(mips_isa != 1)\n \n-/* ISA has the FP instructions introduced in mips4. */\n-#define ISA_HAS_FP4             (mips_isa == 4)\n+/* ISA has the conditional move instructions introduced in mips4. */\n+#define ISA_HAS_CONDMOVE        (mips_isa == 4\t\t\t\t\\\n+\t\t\t\t )\n+\n+/* ISA has the mips4 FP condition code instructions: FP-compare to CC,\n+   branch on CC, and move (both FP and non-FP) on CC. */\n+#define ISA_HAS_8CC\t\t(mips_isa == 4\t\t\t\t\\\n+\t\t\t\t)\n+\n+\n+/* This is a catch all for the other new mips4 instructions: indexed load and\n+   indexed prefetch instructions, the FP madd,msub,nmadd, and nmsub instructions, \n+   and the FP recip and recip sqrt instructions */\n+#define ISA_HAS_FP4             (mips_isa == 4\t\t\t\t\\\n+\t\t\t\t)\n+\n \n-/* ISA has the non-FP conditional move instructions introduced in mips4. */\n-#define ISA_HAS_CONDMOVE        (mips_isa == 4)\n \n /* CC1_SPEC causes -mips3 and -mips4 to set -mfp64 and -mgp64; -mips1 or\n    -mips2 sets -mfp32 and -mgp32.  This can be overridden by an explicit\n@@ -645,7 +658,7 @@ do\t\t\t\t\t\t\t\t\t\\\n \tfor (regno = ST_REG_FIRST; regno <= ST_REG_LAST; regno++)\t\\\n \t  fixed_regs[regno] = call_used_regs[regno] = 1;\t\t\\\n       }\t\t\t\t\t\t\t\t\t\\\n-    else if (! ISA_HAS_FP4)\t\t\t\t\t\t\\\n+    else if (! ISA_HAS_8CC)\t\t\t\t\t\t\\\n       {\t\t\t\t\t\t\t\t\t\\\n \tint regno;\t\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\"}, {"sha": "923fcbf7f6015786772117850647efab3f43e9b2", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76ee804272089646a4c554ddf6be4471fb589b62/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76ee804272089646a4c554ddf6be4471fb589b62/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=76ee804272089646a4c554ddf6be4471fb589b62", "patch": "@@ -5565,7 +5565,7 @@ move\\\\t%0,%z4\\\\n\\\\\n (define_insn \"movcc\"\n   [(set (match_operand:CC 0 \"nonimmediate_operand\" \"=d,*d,*d,*d,*R,*m,*d,*f,*f,*f,*f,*R,*m\")\n \t(match_operand:CC 1 \"general_operand\" \"z,*d,*R,*m,*d,*d,*f,*d,*f,*R,*m,*f,*f\"))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_8CC && TARGET_HARD_FLOAT\"\n   \"* return mips_move_1word (operands, insn, FALSE);\"\n   [(set_attr \"type\"\t\"move,move,load,load,store,store,xfer,xfer,move,load,load,store,store\")\n    (set_attr \"mode\"\t\"SI\")\n@@ -5577,7 +5577,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (match_operand:CC 0 \"register_operand\" \"=z\")\n \t(match_operand:CC 1 \"general_operand\" \"z\"))\n    (clobber (match_operand:TF 2 \"register_operand\" \"=&f\"))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_8CC && TARGET_HARD_FLOAT\"\n   \"\n {\n   rtx source;\n@@ -5615,7 +5615,7 @@ move\\\\t%0,%z4\\\\n\\\\\n   [(set (match_operand:CC 0 \"general_operand\" \"=z\")\n \t(match_operand:CC 1 \"register_operand\" \"z\"))\n    (clobber (match_operand:CC 2 \"register_operand\" \"=&d\"))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_8CC && TARGET_HARD_FLOAT\"\n   \"\n {\n   /* This is called when we are copying a condition code register out\n@@ -9955,7 +9955,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t\t\t  (const_int 0)])\n \t (match_operand:SI 1 \"reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:SI 2 \"reg_or_0_operand\" \"0,dJ\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT\"\n   \"@\n     mov%T3\\\\t%0,%z1,%4\n     mov%t3\\\\t%0,%z2,%4\"\n@@ -10001,7 +10001,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t\t\t  (const_int 0)])\n \t (match_operand:DI 1 \"se_reg_or_0_operand\" \"dJ,0\")\n \t (match_operand:DI 2 \"se_reg_or_0_operand\" \"0,dJ\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT\"\n   \"@\n     mov%T3\\\\t%0,%z1,%4\n     mov%t3\\\\t%0,%z2,%4\"\n@@ -10016,7 +10016,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:SF 2 \"register_operand\" \"f,0\")\n \t (match_operand:SF 3 \"register_operand\" \"0,f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT\"\n   \"@\n     mov%B4.s\\\\t%0,%2,%1\n     mov%b4.s\\\\t%0,%3,%1\"\n@@ -10031,7 +10031,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:SF 2 \"register_operand\" \"f,0\")\n \t (match_operand:SF 3 \"register_operand\" \"0,f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT\"\n   \"@\n     mov%B4.s\\\\t%0,%2,%1\n     mov%b4.s\\\\t%0,%3,%1\"\n@@ -10047,7 +10047,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t\t\t  (const_int 0)])\n \t (match_operand:SF 1 \"register_operand\" \"f,0\")\n \t (match_operand:SF 2 \"register_operand\" \"0,f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT\"\n   \"@\n     mov%T3.s\\\\t%0,%1,%4\n     mov%t3.s\\\\t%0,%2,%4\"\n@@ -10062,7 +10062,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:DF 2 \"register_operand\" \"f,0\")\n \t (match_operand:DF 3 \"register_operand\" \"0,f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"@\n     mov%B4.d\\\\t%0,%2,%1\n     mov%b4.d\\\\t%0,%3,%1\"\n@@ -10077,7 +10077,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t  (const_int 0)])\n \t (match_operand:DF 2 \"register_operand\" \"f,0\")\n \t (match_operand:DF 3 \"register_operand\" \"0,f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"@\n     mov%B4.d\\\\t%0,%2,%1\n     mov%b4.d\\\\t%0,%3,%1\"\n@@ -10093,7 +10093,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t\t\t\t\t  (const_int 0)])\n \t (match_operand:DF 1 \"register_operand\" \"f,0\")\n \t (match_operand:DF 2 \"register_operand\" \"0,f\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"@\n     mov%T3.d\\\\t%0,%1,%4\n     mov%t3.d\\\\t%0,%2,%4\"\n@@ -10108,7 +10108,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t(if_then_else:SI (match_dup 5)\n \t\t\t (match_operand:SI 2 \"reg_or_0_operand\" \"\")\n \t\t\t (match_operand:SI 3 \"reg_or_0_operand\" \"\")))]\n-  \"ISA_HAS_CONDMOVE || ISA_HAS_FP4\"\n+  \"ISA_HAS_CONDMOVE\"\n   \"\n {\n   gen_conditional_move (operands);\n@@ -10121,7 +10121,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t(if_then_else:DI (match_dup 5)\n \t\t\t (match_operand:DI 2 \"se_reg_or_0_operand\" \"\")\n \t\t\t (match_operand:DI 3 \"se_reg_or_0_operand\" \"\")))]\n-  \"ISA_HAS_CONDMOVE || ISA_HAS_FP4\" \n+  \"ISA_HAS_CONDMOVE\" \n   \"\n {\n   gen_conditional_move (operands);\n@@ -10134,7 +10134,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t(if_then_else:SF (match_dup 5)\n \t\t\t (match_operand:SF 2 \"register_operand\" \"\")\n \t\t\t (match_operand:SF 3 \"register_operand\" \"\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT\"\n   \"\n {\n   gen_conditional_move (operands);\n@@ -10147,7 +10147,7 @@ lw\\\\t%2,%1-%S1(%2)\\;addu\\\\t%2,%2,$31\\;j\\\\t%2\"\n \t(if_then_else:DF (match_dup 5)\n \t\t\t (match_operand:DF 2 \"register_operand\" \"\")\n \t\t\t (match_operand:DF 3 \"register_operand\" \"\")))]\n-  \"ISA_HAS_FP4 && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n+  \"ISA_HAS_CONDMOVE && TARGET_HARD_FLOAT && TARGET_DOUBLE_FLOAT\"\n   \"\n {\n   gen_conditional_move (operands);"}]}