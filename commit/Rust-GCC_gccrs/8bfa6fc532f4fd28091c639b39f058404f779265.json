{"sha": "8bfa6fc532f4fd28091c639b39f058404f779265", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGJmYTZmYzUzMmY0ZmQyODA5MWM2MzliMzlmMDU4NDA0Zjc3OTI2NQ==", "commit": {"author": {"name": "Clinton Popetz", "email": "cpopetz@cygnus.com", "date": "1999-11-10T17:17:15Z"}, "committer": {"name": "Clinton Popetz", "email": "cpopetz@gcc.gnu.org", "date": "1999-11-10T17:17:15Z"}, "message": "gcov.c (struct arcdata): Add hits and total, remove prob.\n\n\t* gcov.c (struct arcdata): Add hits and total, remove prob.\n\t(output_branch_counts): New.\n\t(process_args): Set output_branch_counts if -c.\n\t(calculate_branch_probs): Store hits and total instead of\n\tpercentage.\n\t(output_data): Emit counts if output_branch_counts is true.\n\t* gcov.texi (Invoking Gcov): Document -c switch..\n\nFrom-SVN: r30476", "tree": {"sha": "ab47712e15147a92950972c9fe18941868e1019a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab47712e15147a92950972c9fe18941868e1019a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8bfa6fc532f4fd28091c639b39f058404f779265", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bfa6fc532f4fd28091c639b39f058404f779265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bfa6fc532f4fd28091c639b39f058404f779265", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bfa6fc532f4fd28091c639b39f058404f779265/comments", "author": null, "committer": null, "parents": [{"sha": "36dd3a44a3de178947d69c58ec44969a22e7a0e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36dd3a44a3de178947d69c58ec44969a22e7a0e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36dd3a44a3de178947d69c58ec44969a22e7a0e8"}], "stats": {"total": 82, "additions": 62, "deletions": 20}, "files": [{"sha": "b72b02ea978b0bffdd6bb70c42c10393fb52414e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfa6fc532f4fd28091c639b39f058404f779265/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfa6fc532f4fd28091c639b39f058404f779265/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8bfa6fc532f4fd28091c639b39f058404f779265", "patch": "@@ -1,3 +1,13 @@\n+Wed Nov 10 10:57:22 1999  Clinton Popetz  <cpopetz@cygnus.com>\n+\n+\t* gcov.c (struct arcdata): Add hits and total, remove prob.\n+\t(output_branch_counts): New.\n+\t(process_args): Set output_branch_counts if -c.\n+\t(calculate_branch_probs): Store hits and total instead of\n+\tpercentage.\n+\t(output_data): Emit counts if output_branch_counts is true.\n+\t* gcov.texi (Invoking Gcov): Document -c switch..\n+\n Wed Nov 10 01:10:41 1999  Philippe De Muyter  <phdm@macqel.be>\n \n \t* genoutput.c (output_insn_data): Cast `INSN_OUTPUT_FORMAT_MULTI' and"}, {"sha": "46e0c435c33bb9111aadb60ae53003642856d12e", "filename": "gcc/gcov.c", "status": "modified", "additions": 47, "deletions": 19, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfa6fc532f4fd28091c639b39f058404f779265/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfa6fc532f4fd28091c639b39f058404f779265/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=8bfa6fc532f4fd28091c639b39f058404f779265", "patch": "@@ -138,7 +138,8 @@ struct bb_info {\n \n struct arcdata\n {\n-  int prob;\n+  int hits;\n+  int total;\n   int call_insn;\n   struct arcdata *next;\n };\n@@ -213,6 +214,11 @@ static int output_function_summary = 0;\n \n static char *object_directory = 0;\n \n+/* Output the number of times a branch was taken as opposed to the percentage\n+   of times it was taken.  Turned on by the -c option */\n+   \n+static int output_branch_counts = 0;\n+\n /* Forward declarations.  */\n static void process_args PROTO ((int, char **));\n static void open_files PROTO ((void));\n@@ -314,6 +320,8 @@ process_args (argc, argv)\n \t{\n \t  if (argv[i][1] == 'b')\n \t    output_branch_probs = 1;\n+\t  else if (argv[i][1] == 'c')\n+\t    output_branch_counts = 1;\n \t  else if (argv[i][1] == 'v')\n \t    fputs (gcov_version_string, stderr);\n \t  else if (argv[i][1] == 'n')\n@@ -878,26 +886,27 @@ calculate_branch_probs (current_graph, block_num, branch_probs, last_line_num)\n \tcontinue;\n \t\t      \n       a_ptr = (struct arcdata *) xmalloc (sizeof (struct arcdata));\n+      a_ptr->total = total;\n       if (total == 0)\n-\ta_ptr->prob = -1;\n+          a_ptr->hits = 0;\n       else\n-\ta_ptr->prob = ((arcptr->arc_count * 100) + (total >> 1)) / total;\n+          a_ptr->hits = arcptr->arc_count;\n       a_ptr->call_insn = arcptr->fake;\n \n       if (output_function_summary)\n \t{\n \t  if (a_ptr->call_insn)\n \t    {\n \t      function_calls++;\n-\t      if (a_ptr->prob != -1)\n+\t      if (a_ptr->total != 0)\n \t\tfunction_calls_executed++;\n \t    }\n \t  else\n \t    {\n \t      function_branches++;\n-\t      if (a_ptr->prob != -1)\n+\t      if (a_ptr->total != 0)\n \t\tfunction_branches_executed++;\n-\t      if (a_ptr->prob > 0)\n+\t      if (a_ptr->hits > 0)\n \t\tfunction_branches_taken++;\n \t    }\n \t}\n@@ -1180,15 +1189,15 @@ output_data ()\n \t\t  if (a_ptr->call_insn)\n \t\t    {\n \t\t      total_calls++;\n-\t\t      if (a_ptr->prob != -1)\n+\t\t      if (a_ptr->total != 0)\n \t\t\ttotal_calls_executed++;\n \t\t    }\n \t\t  else\n \t\t    {\n \t\t      total_branches++;\n-\t\t      if (a_ptr->prob != -1)\n+\t\t      if (a_ptr->total != 0)\n \t\t\ttotal_branches_executed++;\n-\t\t      if (a_ptr->prob > 0)\n+\t\t      if (a_ptr->hits > 0)\n \t\t\ttotal_branches_taken++;\n \t\t    }\n \t\t}\n@@ -1336,24 +1345,43 @@ output_data ()\n \t\t    {\n \t\t      if (a_ptr->call_insn)\n \t\t\t{\n-\t\t\t  if (a_ptr->prob == -1)\n+\t\t\t  if (a_ptr->total == 0)\n \t\t\t    fnotice (gcov_file, \"call %d never executed\\n\", i);\n-\t\t\t  else\n-\t\t\t    fnotice (gcov_file,\n-\t\t\t\t     \"call %d returns = %d%%\\n\",\n-\t\t\t\t     i, 100 - a_ptr->prob);\n+\t\t            else\n+\t\t\t      {\n+\t\t\t\tif (output_branch_counts)\n+\t\t\t\t  fnotice (gcov_file,\n+\t\t\t\t           \"call %d returns = %d\\n\",\n+\t\t\t\t           i, a_ptr->total - a_ptr->hits);\n+\t\t\t        else\n+                                  fnotice (gcov_file,\n+\t\t\t\t           \"call %d returns = %d%%\\n\",\n+\t\t\t\t            i, 100 - ((a_ptr->hits * 100) +\n+                                           (a_ptr->total >> 1))/a_ptr->total);\n+\t\t\t      }\n \t\t\t}\n \t\t      else\n \t\t\t{\n-\t\t\t  if (a_ptr->prob == -1)\n+\t\t\t  if (a_ptr->total == 0)\n \t\t\t    fnotice (gcov_file, \"branch %d never executed\\n\",\n \t\t\t\t     i);\n \t\t\t  else\n-\t\t\t    fnotice (gcov_file, \"branch %d taken = %d%%\\n\", i,\n-\t\t\t\t     a_ptr->prob);\n+\t\t\t    {\n+\t\t\t      if (output_branch_counts)\n+\t\t\t        fnotice (gcov_file,\n+\t\t\t\t         \"branch %d taken = %d\\n\",\n+                                         i, a_ptr->hits);\n+\t\t\t      else\n+                                fnotice (gcov_file,\n+                                         \"branch %d taken = %d%%\\n\", i,\n+                                         ((a_ptr->hits * 100) +\n+                                          (a_ptr->total >> 1))/\n+                                          a_ptr->total);\n+\n+\t\t\t    }\n \t\t\t}\n-\t\t    }\n-\t\t}\n+\t\t   }\n+\t      }\n \n \t      /* Gracefully handle errors while reading the source file.  */\n \t      if (retval == NULL)"}, {"sha": "49de3f0545886f8fd0393e0489e5b5f25e49c83a", "filename": "gcc/gcov.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8bfa6fc532f4fd28091c639b39f058404f779265/gcc%2Fgcov.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8bfa6fc532f4fd28091c639b39f058404f779265/gcc%2Fgcov.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.texi?ref=8bfa6fc532f4fd28091c639b39f058404f779265", "patch": "@@ -81,7 +81,7 @@ compatible with any other profiling or test coverage mechanism.\n @section Invoking gcov\n \n @smallexample\n-gcov [-b] [-v] [-n] [-l] [-f] [-o directory] @var{sourcefile}\n+gcov [-b] [-c] [-v] [-n] [-l] [-f] [-o directory] @var{sourcefile}\n @end smallexample\n \n @table @code\n@@ -90,6 +90,10 @@ Write branch frequencies to the output file, and write branch summary\n info to the standard output.  This option allows you to see how often\n each branch in your program was taken.\n \n+@item -c\n+Write branch frequencies as the number of branches taken, rather than \n+the percentage of branches taken.\n+\n @item -v\n Display the @code{gcov} version number (on the standard error stream).\n "}]}