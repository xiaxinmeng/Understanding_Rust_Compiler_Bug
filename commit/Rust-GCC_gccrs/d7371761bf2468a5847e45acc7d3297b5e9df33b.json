{"sha": "d7371761bf2468a5847e45acc7d3297b5e9df33b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDczNzE3NjFiZjI0NjhhNTg0N2U0NWFjYzdkMzI5N2I1ZTlkZjMzYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-28T18:02:22Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-09-28T18:02:22Z"}, "message": "(USER_H): Move up so can override.\n\n(INSTALL_ASSERT_H): New definition.\n(install-headers): Use it.\n(stmp-int-hdrs): Handle USER_H being empty.\n\nFrom-SVN: r10405", "tree": {"sha": "d29619e145501c88236f5f0025a42a4dd34b51fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d29619e145501c88236f5f0025a42a4dd34b51fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7371761bf2468a5847e45acc7d3297b5e9df33b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7371761bf2468a5847e45acc7d3297b5e9df33b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7371761bf2468a5847e45acc7d3297b5e9df33b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7371761bf2468a5847e45acc7d3297b5e9df33b/comments", "author": null, "committer": null, "parents": [{"sha": "1cfb30483163d1742b4ef4834610b79d8a336007", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cfb30483163d1742b4ef4834610b79d8a336007", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cfb30483163d1742b4ef4834610b79d8a336007"}], "stats": {"total": 42, "additions": 24, "deletions": 18}, "files": [{"sha": "f97e99d3d0ff65232f62642215e6b006d3e3eda6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7371761bf2468a5847e45acc7d3297b5e9df33b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7371761bf2468a5847e45acc7d3297b5e9df33b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=d7371761bf2468a5847e45acc7d3297b5e9df33b", "patch": "@@ -102,6 +102,22 @@ OLDAR = ar\n # install-headers-tar or install-headers-cpio.\n INSTALL_HEADERS_DIR = install-headers-tar\n \n+# Header files that are made available under the same name\n+# to programs compiled with GCC.\n+USER_H = $(srcdir)/ginclude/stdarg.h $(srcdir)/ginclude/stddef.h \\\n+    $(srcdir)/ginclude/varargs.h $(srcdir)/ginclude/va-alpha.h \\\n+    $(srcdir)/ginclude/va-h8300.h $(srcdir)/ginclude/va-i860.h \\\n+    $(srcdir)/ginclude/va-i960.h $(srcdir)/ginclude/va-mips.h \\\n+    $(srcdir)/ginclude/va-m88k.h $(srcdir)/ginclude/va-pa.h \\\n+    $(srcdir)/ginclude/va-pyr.h $(srcdir)/ginclude/va-sparc.h \\\n+    $(srcdir)/ginclude/va-clipper.h $(srcdir)/ginclude/va-spur.h \\\n+    $(srcdir)/ginclude/iso646.h $(srcdir)/ginclude/va-ppc.h \\\n+    $(srcdir)/ginclude/proto.h $(EXTRA_HEADERS)\n+\n+# Target to use whe installing assert.h.  Some systems may\n+# want to set this empty.\n+INSTALL_ASSERT_H = install-assert-h\n+\n # The GCC to use for compiling libgcc2.a, enquire, and libgcc1-test.\n # Usually the one we just built.\n # Don't use this as a dependency--use $(GCC_PASSES) or $(GCC_PARTS).\n@@ -557,18 +573,6 @@ LIB2FUNCS = _muldi3 _divdi3 _moddi3 _udivdi3 _umoddi3 _negdi2 \\\n     _op_vdel _bb _shtab _clear_cache _trampoline __main _exit _ctors _eh \\\n     _pure\n \n-# Header files that are made available under the same name\n-# to programs compiled with GCC.\n-USER_H = $(srcdir)/ginclude/stdarg.h $(srcdir)/ginclude/stddef.h \\\n-    $(srcdir)/ginclude/varargs.h $(srcdir)/ginclude/va-alpha.h \\\n-    $(srcdir)/ginclude/va-h8300.h $(srcdir)/ginclude/va-i860.h \\\n-    $(srcdir)/ginclude/va-i960.h $(srcdir)/ginclude/va-mips.h \\\n-    $(srcdir)/ginclude/va-m88k.h $(srcdir)/ginclude/va-pa.h \\\n-    $(srcdir)/ginclude/va-pyr.h $(srcdir)/ginclude/va-sparc.h \\\n-    $(srcdir)/ginclude/va-clipper.h $(srcdir)/ginclude/va-spur.h \\\n-    $(srcdir)/ginclude/iso646.h $(srcdir)/ginclude/va-ppc.h \\\n-    $(srcdir)/ginclude/proto.h $(EXTRA_HEADERS)\n-\n # The files that \"belong\" in CONFIG_H are deliberately omitted\n # because having them there would not be useful in actual practice.\n # All they would do is cause complete recompilation every time\n@@ -1731,11 +1735,13 @@ stmp-int-hdrs: stmp-fixinc $(USER_H) xlimits.h objc-headers\n # Using basename would be simpler, but some systems don't have it.\n \tobjdir=`pwd`; \\\n \tcd $(srcdir); \\\n-\tfor file in $(USER_H); do \\\n-\t  realfile=`echo $$file | sed -e 's|.*/\\([^/]*\\)$$|\\1|'`; \\\n-\t  rm -f $$objdir/include/$$realfile; \\\n-\t  cp ginclude/$$realfile $$objdir/include; \\\n-\t  chmod a+r $$objdir/include/$$realfile; \\\n+\tfor file in .. $(USER_H); do \\\n+\t  if [ X$$file != X.. ]; then \\\n+\t    realfile=`echo $$file | sed -e 's|.*/\\([^/]*\\)$$|\\1|'`; \\\n+\t    rm -f $$objdir/include/$$realfile; \\\n+\t    cp ginclude/$$realfile $$objdir/include; \\\n+\t    chmod a+r $$objdir/include/$$realfile; \\\n+\t  fi; \\\n \tdone\n \trm -f include/limits.h\n \tcp xlimits.h include/limits.h\n@@ -2173,7 +2179,7 @@ install-libobjc: install-dir\n \telse true; fi\n \n # Install all the header files built in the include subdirectory.\n-install-headers: install-include-dir $(INSTALL_HEADERS_DIR) install-assert-h\n+install-headers: install-include-dir $(INSTALL_HEADERS_DIR) $(INSTALL_ASSERT_H)\n # Fix symlinks to absolute paths in the installed include directory to\n # point to the installed directory, not the build directory.\n \t-files=`cd $(libsubdir)/include; find . -type l -print 2>/dev/null`; \\"}]}