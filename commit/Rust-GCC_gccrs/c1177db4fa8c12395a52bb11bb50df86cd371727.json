{"sha": "c1177db4fa8c12395a52bb11bb50df86cd371727", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzExNzdkYjRmYThjMTIzOTVhNTJiYjExYmI1MGRmODZjZDM3MTcyNw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-01-02T08:45:05Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-01-02T08:45:05Z"}, "message": "re PR lto/83452 (FAIL: gfortran.dg/save_6.f90   -O0  (test for excess errors))\n\n2017-01-02  Richard Biener  <rguenther@suse.de>\n\n\tPR lto/83452\n\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_section):\n\tDo not use UNDEF locals for removed symbols but instead just\n\tdefine them in the first prevailing section and with no name.\n\tUse the same gnu_lto_v1 name for all removed globals we promote to\n\tWEAK UNDEFs so hpux can use a stub to provide this symbol.  Clear\n\tsh_info and sh_link in removed sections.\n\nFrom-SVN: r256069", "tree": {"sha": "9dfc2ac39ab981c198a7edf3be4953b2a1813796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9dfc2ac39ab981c198a7edf3be4953b2a1813796"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1177db4fa8c12395a52bb11bb50df86cd371727", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1177db4fa8c12395a52bb11bb50df86cd371727", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1177db4fa8c12395a52bb11bb50df86cd371727", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1177db4fa8c12395a52bb11bb50df86cd371727/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d42e3a016b75873a06a2506f1eee2c4dd8ee1025", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d42e3a016b75873a06a2506f1eee2c4dd8ee1025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d42e3a016b75873a06a2506f1eee2c4dd8ee1025"}], "stats": {"total": 67, "additions": 44, "deletions": 23}, "files": [{"sha": "08abd3b12e378454258af6a131ee4f59ec84d040", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1177db4fa8c12395a52bb11bb50df86cd371727/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1177db4fa8c12395a52bb11bb50df86cd371727/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=c1177db4fa8c12395a52bb11bb50df86cd371727", "patch": "@@ -1,3 +1,13 @@\n+2017-01-02  Richard Biener  <rguenther@suse.de>\n+\n+\tPR lto/83452\n+\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_section):\n+\tDo not use UNDEF locals for removed symbols but instead just\n+\tdefine them in the first prevailing section and with no name.\n+\tUse the same gnu_lto_v1 name for all removed globals we promote to\n+\tWEAK UNDEFs so hpux can use a stub to provide this symbol.  Clear\n+\tsh_info and sh_link in removed sections.\n+\n 2017-10-30  Richard Biener  <rguenther@suse.de>\n \n \tPR lto/82757"}, {"sha": "feef34126fa0c4de7231e3cbf36a0c572f7f2c2f", "filename": "libiberty/simple-object-elf.c", "status": "modified", "additions": 34, "deletions": 23, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1177db4fa8c12395a52bb11bb50df86cd371727/libiberty%2Fsimple-object-elf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1177db4fa8c12395a52bb11bb50df86cd371727/libiberty%2Fsimple-object-elf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fsimple-object-elf.c?ref=c1177db4fa8c12395a52bb11bb50df86cd371727", "patch": "@@ -1091,6 +1091,7 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n   int changed;\n   int *pfnret;\n   const char **pfnname;\n+  unsigned first_shndx = 0;\n \n   shdr_size = (ei_class == ELFCLASS32\n \t       ? sizeof (Elf32_External_Shdr)\n@@ -1158,6 +1159,9 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n       ret = (*pfn) (&name);\n       pfnret[i - 1] = ret == 1 ? 0 : -1;\n       pfnname[i - 1] = name;\n+      if (first_shndx == 0\n+\t  && pfnret[i - 1] == 0)\n+\tfirst_shndx = i;\n     }\n \n   /* Mark sections as preserved that are required by to be preserved\n@@ -1327,6 +1331,15 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t\t\t\t   sobj->offset + stroff,\n \t\t\t\t\t   (unsigned char *)strings,\n \t\t\t\t\t   strsz, &errmsg, err);\n+\t      /* Find gnu_lto_ in strings.  */\n+\t      char *gnu_lto = strings;\n+\t      while ((gnu_lto = memchr (gnu_lto, 'g',\n+\t\t\t\t\tstrings + strsz - gnu_lto)))\n+\t\tif (strncmp (gnu_lto, \"gnu_lto_v1\",\n+\t\t\t     strings + strsz - gnu_lto) == 0)\n+\t\t  break;\n+\t\telse\n+\t\t  gnu_lto++;\n \t      for (ent = buf; ent < buf + length; ent += entsize)\n \t\t{\n \t\t  unsigned st_shndx = ELF_FETCH_FIELD (type_functions, ei_class,\n@@ -1366,40 +1379,34 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t\t         in case it is local.  */\n \t\t      int bind = ELF_ST_BIND (*st_info);\n \t\t      int other = STV_DEFAULT;\n-\t\t      size_t st_name;\n-\n \t\t      if (bind == STB_LOCAL)\n-\t\t\tELF_SET_FIELD (type_functions, ei_class, Sym,\n-\t\t\t\t       ent, st_name, Elf_Word, 0);\n+\t\t\t{\n+\t\t\t  /* Make discarded local symbols unnamed and\n+\t\t\t     defined in the first prevailing section.  */\n+\t\t\t  ELF_SET_FIELD (type_functions, ei_class, Sym,\n+\t\t\t\t\t ent, st_name, Elf_Word, 0);\n+\t\t\t  ELF_SET_FIELD (type_functions, ei_class, Sym,\n+\t\t\t\t\t ent, st_shndx, Elf_Half, first_shndx);\n+\t\t\t}\n \t\t      else\n \t\t\t{\n+\t\t\t  /* Make discarded global symbols hidden weak\n+\t\t\t     undefined and sharing the gnu_lto_ name.  */\n \t\t\t  bind = STB_WEAK;\n-\t\t\t  st_name = ELF_FETCH_FIELD (type_functions, ei_class,\n-\t\t\t\t\t\t     Sym, ent, st_name,\n-\t\t\t\t\t\t     Elf_Word);\n-\t\t\t  if (st_name < strsz)\n-\t\t\t    {\n-\t\t\t      char *p = strings + st_name;\n-\t\t\t      if (p[0] == '_'\n-\t\t\t\t  && p[1] == '_'\n-\t\t\t\t  && strncmp (p + (p[2] == '_'),\n-\t\t\t\t\t      \"__gnu_lto_\", 10) == 0)\n-\t\t\t\t{\n-\t\t\t\t  other = STV_HIDDEN;\n-\t\t\t\t  ELF_SET_FIELD (type_functions, ei_class, Sym,\n-\t\t\t\t\t\t ent, st_name, Elf_Word,\n-\t\t\t\t\t\t st_name + 2);\n-\t\t\t\t}\n-\t\t\t    }\n+\t\t\t  other = STV_HIDDEN;\n+\t\t\t  if (gnu_lto)\n+\t\t\t    ELF_SET_FIELD (type_functions, ei_class, Sym,\n+\t\t\t\t\t   ent, st_name, Elf_Word,\n+\t\t\t\t\t   gnu_lto - strings);\n+\t\t\t  ELF_SET_FIELD (type_functions, ei_class, Sym,\n+\t\t\t\t\t ent, st_shndx, Elf_Half, SHN_UNDEF);\n \t\t\t}\n \t\t      *st_other = other;\n \t\t      *st_info = ELF_ST_INFO (bind, STT_NOTYPE);\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_value, Elf_Addr, 0);\n \t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n \t\t\t\t     ent, st_size, Elf_Word, 0);\n-\t\t      ELF_SET_FIELD (type_functions, ei_class, Sym,\n-\t\t\t\t     ent, st_shndx, Elf_Half, SHN_UNDEF);\n \t\t    }\n \t\t}\n \t      XDELETEVEC (strings);\n@@ -1422,6 +1429,10 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n \t     link.  */\n \t  ELF_SET_FIELD (type_functions, ei_class, Shdr,\n \t\t\t shdr, sh_type, Elf_Word, SHT_NULL);\n+\t  ELF_SET_FIELD (type_functions, ei_class, Shdr,\n+\t\t\t shdr, sh_info, Elf_Word, 0);\n+\t  ELF_SET_FIELD (type_functions, ei_class, Shdr,\n+\t\t\t shdr, sh_link, Elf_Word, 0);\n \t}\n \n       flags = ELF_FETCH_FIELD (type_functions, ei_class, Shdr,"}]}