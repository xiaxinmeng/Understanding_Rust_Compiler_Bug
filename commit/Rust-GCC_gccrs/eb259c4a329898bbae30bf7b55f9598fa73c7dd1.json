{"sha": "eb259c4a329898bbae30bf7b55f9598fa73c7dd1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIyNTljNGEzMjk4OThiYmFlMzBiZjdiNTVmOTU5OGZhNzNjN2RkMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-04T13:04:37Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-04T13:04:37Z"}, "message": "re PR ipa/60026 (ICE at -O3 on valid code (with the optimize pragma) on x86_64-linux-gnu)\n\n\tPR ipa/60026\n\t* tree-inline.c (copy_forbidden): Fail for\n\t__attribute__((optimize (0))) functions.\n\n\t* c-c++-common/torture/pr60026.c: New test.\n\nFrom-SVN: r207463", "tree": {"sha": "294855e859722fa6bd67ec674e1a393b20f63a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/294855e859722fa6bd67ec674e1a393b20f63a87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb259c4a329898bbae30bf7b55f9598fa73c7dd1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb259c4a329898bbae30bf7b55f9598fa73c7dd1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb259c4a329898bbae30bf7b55f9598fa73c7dd1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "30540e7958f841359d14b2c46e4c51f07a22ff5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30540e7958f841359d14b2c46e4c51f07a22ff5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30540e7958f841359d14b2c46e4c51f07a22ff5e"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "6c6dfd6cd9490928cd08dfe74baccb0002e0de09", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb259c4a329898bbae30bf7b55f9598fa73c7dd1", "patch": "@@ -1,5 +1,9 @@\n 2014-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR ipa/60026\n+\t* tree-inline.c (copy_forbidden): Fail for\n+\t__attribute__((optimize (0))) functions.\n+\n \tPR other/58712\n \t* omp-low.c (simd_clone_struct_copy): If from->inbranch\n \tis set, copy one less argument."}, {"sha": "f23b6c47455395e0080fc2a162ca76593a9df436", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=eb259c4a329898bbae30bf7b55f9598fa73c7dd1", "patch": "@@ -1,5 +1,8 @@\n 2014-02-04  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR ipa/60026\n+\t* c-c++-common/torture/pr60026.c: New test.\n+\n \tPR rtl-optimization/57915\n \t* gcc.target/i386/pr57915.c: New test.\n "}, {"sha": "1cc5f55a4d22c4f29f530372472a413fef42cd30", "filename": "gcc/testsuite/c-c++-common/torture/pr60026.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr60026.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr60026.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftorture%2Fpr60026.c?ref=eb259c4a329898bbae30bf7b55f9598fa73c7dd1", "patch": "@@ -0,0 +1,28 @@\n+/* PR ipa/60026 */\n+/* { dg-do compile } */\n+\n+struct S { int f; } a;\n+\n+__attribute__((optimize (0)))\n+struct S foo (int x, struct S y)\n+{\n+  int b = y.f;\n+  return a; \n+}\n+\n+void\n+bar ()\n+{\n+  while (a.f)\n+    {\n+      struct S c = {0};\n+      foo (0, c);\n+    }\n+}\n+\n+int\n+main ()\n+{\n+  bar (); \n+  return 0;\n+}"}, {"sha": "ade78b22a12aceb5bab23e5652cdfafc76ecc0bc", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb259c4a329898bbae30bf7b55f9598fa73c7dd1/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=eb259c4a329898bbae30bf7b55f9598fa73c7dd1", "patch": "@@ -3315,6 +3315,18 @@ copy_forbidden (struct function *fun, tree fndecl)\n \tgoto fail;\n       }\n \n+  tree fs_opts;\n+  fs_opts = DECL_FUNCTION_SPECIFIC_OPTIMIZATION (fun->decl);\n+  if (fs_opts)\n+    {\n+      struct cl_optimization *os = TREE_OPTIMIZATION (fs_opts);\n+      if (!os->x_optimize)\n+\t{\n+\t  reason = G_(\"function %q+F compiled without optimizations\");\n+\t  goto fail;\n+\t}\n+    }\n+\n  fail:\n   fun->cannot_be_copied_reason = reason;\n   fun->cannot_be_copied_set = true;"}]}