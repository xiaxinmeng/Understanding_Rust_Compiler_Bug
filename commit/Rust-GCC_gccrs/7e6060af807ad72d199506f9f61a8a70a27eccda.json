{"sha": "7e6060af807ad72d199506f9f61a8a70a27eccda", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U2MDYwYWY4MDdhZDcyZDE5OTUwNmY5ZjYxYThhNzBhMjdlY2NkYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-27T10:12:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-27T10:12:12Z"}, "message": "[multiple changes]\n\n2017-04-27  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* bindusg.adb, bindgen.adb, gnatbind.adb, opt.ads: add -nognarl switch.\n\n2017-04-27  Justin Squirek  <squirek@adacore.com>\n\n\t* exp_ch7.adb (Build_Finalize_Statements): Move Num_Comps to\n\tProcess_Component_List_For_Finalization as a local variable.\n\t(Process_Component_For_Finalize): Add an extra parameter to avoid\n\tglobal references.\n\t(Process_Component_List_For_Finalization): Correct calls to\n\tProcess_Component_For_Finalize to take Num_Comps as a parameter.\n\nFrom-SVN: r247310", "tree": {"sha": "6cc10b9aca83490a0cc406439c527896eb6932d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cc10b9aca83490a0cc406439c527896eb6932d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e6060af807ad72d199506f9f61a8a70a27eccda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e6060af807ad72d199506f9f61a8a70a27eccda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e6060af807ad72d199506f9f61a8a70a27eccda", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e6060af807ad72d199506f9f61a8a70a27eccda/comments", "author": null, "committer": null, "parents": [{"sha": "522aa6ee70820727d5be628b0f6b3cc7a185a14b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/522aa6ee70820727d5be628b0f6b3cc7a185a14b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/522aa6ee70820727d5be628b0f6b3cc7a185a14b"}], "stats": {"total": 251, "additions": 159, "deletions": 92}, "files": [{"sha": "80902e5f99b61e6d3cd70d0e1e69ea75d7b1d9bd", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7e6060af807ad72d199506f9f61a8a70a27eccda", "patch": "@@ -1,3 +1,16 @@\n+2017-04-27  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* bindusg.adb, bindgen.adb, gnatbind.adb, opt.ads: add -nognarl switch.\n+\n+2017-04-27  Justin Squirek  <squirek@adacore.com>\n+\n+\t* exp_ch7.adb (Build_Finalize_Statements): Move Num_Comps to\n+\tProcess_Component_List_For_Finalization as a local variable.\n+\t(Process_Component_For_Finalize): Add an extra parameter to avoid\n+\tglobal references.\n+\t(Process_Component_List_For_Finalization): Correct calls to\n+\tProcess_Component_For_Finalize to take Num_Comps as a parameter.\n+\n 2017-04-27  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_ch8.adb (Find_Direct_Name): Account for the case where"}, {"sha": "7e3e9811217542f323cb2f3eb58e77299f3674a7", "filename": "gcc/ada/bindgen.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fbindgen.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fbindgen.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindgen.adb?ref=7e6060af807ad72d199506f9f61a8a70a27eccda", "patch": "@@ -2853,7 +2853,9 @@ package body Bindgen is\n          --  used: System.OS_Interface should always be used by any tasking\n          --  application.\n \n-         Check_Package (With_GNARL, \"system.os_interface%s\");\n+         if not Opt.No_Libgnarl then\n+            Check_Package (With_GNARL, \"system.os_interface%s\");\n+         end if;\n \n          --  Ditto for the use of restricted tasking\n "}, {"sha": "ceaa264d622a87e3fee503b0795e08f792c081c1", "filename": "gcc/ada/bindusg.adb", "status": "modified", "additions": 117, "deletions": 77, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fbindusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fbindusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fbindusg.adb?ref=7e6060af807ad72d199506f9f61a8a70a27eccda", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -60,136 +60,166 @@ package body Bindusg is\n \n       --  Line for @response_file\n \n-      Write_Line (\"  @<resp_file> Get arguments from response file\");\n+      Write_Line\n+        (\"  @<resp_file> Get arguments from response file\");\n       Write_Eol;\n \n       --  Line for -aO switch\n \n-      Write_Line (\"  -aOdir    Specify library files search path\");\n+      Write_Line\n+        (\"  -aOdir    Specify library files search path\");\n \n       --  Line for -aI switch\n \n-      Write_Line (\"  -aIdir    Specify source files search path\");\n+      Write_Line\n+        (\"  -aIdir    Specify source files search path\");\n \n       --  Line for a switch\n \n-      Write_Line (\"  -a        Automatically initialize elaboration \" &\n-                  \"procedure\");\n+      Write_Line\n+        (\"  -a        Automatically initialize elaboration procedure\");\n \n       --  Lines for -A switch\n \n-      Write_Line (\"  -A        Give list of ALI files in partition\");\n-      Write_Line (\"  -A=file   Write ALI file list to named file\");\n+      Write_Line\n+        (\"  -A        Give list of ALI files in partition\");\n+      Write_Line\n+        (\"  -A=file   Write ALI file list to named file\");\n \n       --  Line for -b switch\n \n-      Write_Line (\"  -b        Generate brief messages to stderr \" &\n-                  \"even if verbose mode set\");\n+      Write_Line\n+        (\"  -b        Generate brief messages to stderr even if verbose mode \"\n+         & \"set\");\n \n       --  Line for -c switch\n \n-      Write_Line (\"  -c        Check only, no generation of \" &\n-                  \"binder output file\");\n+      Write_Line\n+        (\"  -c        Check only, no generation of binder output file\");\n \n       --  Line for -d switch\n \n-      Write_Line (\"  -dnn[k|m] Default primary stack \" &\n-                  \"size = nn [kilo|mega] bytes\");\n+      Write_Line\n+        (\"  -dnn[k|m] Default primary stack size = nn [kilo|mega] bytes\");\n \n       --  Line for D switch\n \n-      Write_Line (\"  -Dnn[k|m] Default secondary stack \" &\n-                  \"size = nn [kilo|mega] bytes\");\n+      Write_Line\n+        (\"  -Dnn[k|m] Default secondary stack size = nn [kilo|mega] bytes\");\n \n       --  Line for -e switch\n \n-      Write_Line (\"  -e        Output complete list of elaboration \" &\n-                  \"order dependencies\");\n+      Write_Line\n+        (\"  -e        Output complete list of elaboration order dependencies\");\n \n       --  Line for -E switch\n \n-      Write_Line (\"  -Ea       Store tracebacks in exception occurrences\");\n-      Write_Line (\"  -Es       Store tracebacks in exception occurrences,\");\n-      Write_Line (\"            and enable symbolic tracebacks\");\n-      Write_Line (\"  -E        Same as -Ea\");\n+      Write_Line\n+        (\"  -Ea       Store tracebacks in exception occurrences\");\n+      Write_Line\n+        (\"  -Es       Store tracebacks in exception occurrences,\");\n+      Write_Line\n+        (\"            and enable symbolic tracebacks\");\n+      Write_Line\n+        (\"  -E        Same as -Ea\");\n \n       --  Line for -f switch\n \n-      Write_Line (\"  -ffile    Force elaboration order from given file\");\n+      Write_Line\n+        (\"  -ffile    Force elaboration order from given file\");\n \n       --  Line for -F switch\n \n-      Write_Line (\"  -F        Force checking of elaboration Flags\");\n+      Write_Line\n+        (\"  -F        Force checking of elaboration Flags\");\n \n       --  Line for -h switch\n \n-      Write_Line (\"  -h        Output this usage (help) information\");\n+      Write_Line\n+        (\"  -h        Output this usage (help) information\");\n \n       --  Lines for -I switch\n \n-      Write_Line (\"  -Idir     Specify library and source files search path\");\n-      Write_Line (\"  -I-       Don't look for sources & library files \" &\n-                  \"in default directory\");\n+      Write_Line\n+        (\"  -Idir     Specify library and source files search path\");\n+      Write_Line\n+        (\"  -I-       Don't look for sources & library files in default \"\n+         & \"directory\");\n \n       --  Line for -K switch\n \n-      Write_Line (\"  -K        Give list of linker options specified \" &\n-                  \"for link\");\n+      Write_Line\n+        (\"  -K        Give list of linker options specified for link\");\n \n       --  Line for -l switch\n \n-      Write_Line (\"  -l        Output chosen elaboration order\");\n+      Write_Line\n+        (\"  -l        Output chosen elaboration order\");\n \n       --  Line of -L switch\n \n-      Write_Line (\"  -Lxyz     Library build: adainit/final \" &\n-                  \"renamed to xyzinit/final, implies -n\");\n+      Write_Line\n+        (\"  -Lxyz     Library build: adainit/final renamed to xyzinit/final, \"\n+         & \"implies -n\");\n \n       --  Line for -m switch\n \n-      Write_Line (\"  -mnnn     Limit number of detected errors/warnings \" &\n-                  \"to nnn (1-999999)\");\n+      Write_Line\n+        (\"  -mnnn     Limit number of detected errors/warnings to nnn \"\n+         & \"(1-999999)\");\n \n       --  Line for -M switch\n \n-      Write_Line (\"  -Mxyz     Rename generated main program from \" &\n-                  \"main to xyz\");\n+      Write_Line\n+        (\"  -Mxyz     Rename generated main program from main to xyz\");\n \n       --  Line for -n switch\n \n-      Write_Line (\"  -n        No Ada main program (foreign main routine)\");\n+      Write_Line\n+        (\"  -n        No Ada main program (foreign main routine)\");\n+\n+      --  Line for -nognarl\n+\n+      Write_Line\n+        (\"  -nognarl  Don't use libgnarl when writing linker instructions\");\n \n       --  Line for -nostdinc\n \n-      Write_Line (\"  -nostdinc Don't look for source files \" &\n-                  \"in the system default directory\");\n+      Write_Line\n+        (\"  -nostdinc Don't look for source files in the system default \"\n+         & \"directory\");\n \n       --  Line for -nostdlib\n \n-      Write_Line (\"  -nostdlib Don't look for library files \" &\n-                  \"in the system default directory\");\n+      Write_Line\n+        (\"  -nostdlib Don't look for library files in the system default \"\n+         & \"directory\");\n \n       --  Line for -o switch\n \n-      Write_Line (\"  -o file   Give the output file name \" &\n-                  \"(default is b~xxx.adb)\");\n+      Write_Line\n+        (\"  -o file   Give the output file name (default is b~xxx.adb)\");\n \n       --  Line for -O switch\n \n-      Write_Line (\"  -O        Give list of objects required for link\");\n+      Write_Line\n+        (\"  -O        Give list of objects required for link\");\n \n       --  Line for -p switch\n \n-      Write_Line (\"  -p        Pessimistic (worst-case) elaboration order\");\n+      Write_Line\n+        (\"  -p        Pessimistic (worst-case) elaboration order\");\n \n       --  Line for -P switch\n \n-      Write_Line (\"  -P        Generate binder file suitable for CodePeer\");\n+      Write_Line\n+        (\"  -P        Generate binder file suitable for CodePeer\");\n \n       --  Line for -r switch\n \n-      Write_Line (\"  -r        List restrictions that could be applied \" &\n-                  \"to this partition\");\n+      Write_Line\n+        (\"  -r        List restrictions that could be applied to this \"\n+         & \"partition\");\n \n       --  Line for -R switch\n \n@@ -198,53 +228,59 @@ package body Bindusg is\n \n       --  Line for -s switch\n \n-      Write_Line (\"  -s        Require all source files to be present\");\n+      Write_Line\n+        (\"  -s        Require all source files to be present\");\n \n       --  Line for -S?? switch\n \n-      Write_Line (\"  -S??      Sin/lo/hi/xx/ev Initialize_Scalars \" &\n-                  \"invalid/low/high/hex/env var\");\n+      Write_Line\n+        (\"  -S??      Sin/lo/hi/xx/ev Initialize_Scalars \"\n+         & \"invalid/low/high/hex/env var\");\n \n       --  Line for -static\n \n-      Write_Line (\"  -static   Link against a static GNAT run time\");\n+      Write_Line\n+        (\"  -static   Link against a static GNAT run time\");\n \n       --  Line for -shared\n \n-      Write_Line (\"  -shared   Link against a shared GNAT run time\");\n+      Write_Line\n+        (\"  -shared   Link against a shared GNAT run time\");\n \n       --  Line for -t switch\n \n-      Write_Line (\"  -t        Tolerate time stamp and other \" &\n-                  \"consistency errors\");\n+      Write_Line\n+        (\"  -t        Tolerate time stamp and other consistency errors\");\n \n       --  Line for -T switch\n \n-      Write_Line (\"  -Tn       Set time slice value to n \" &\n-                  \"milliseconds (n >= 0)\");\n+      Write_Line\n+        (\"  -Tn       Set time slice value to n milliseconds (n >= 0)\");\n \n       --  Line for -u switch\n \n-      Write_Line (\"  -un       Enable dynamic stack analysis, with \" &\n-                  \"n results stored\");\n+      Write_Line\n+        (\"  -un       Enable dynamic stack analysis, with n results stored\");\n \n       --  Line for -v switch\n \n-      Write_Line (\"  -v        Verbose mode. Error messages, \" &\n-                  \"header, summary output to stdout\");\n+      Write_Line\n+        (\"  -v        Verbose mode. Error messages, header, summary output to \"\n+         & \"stdout\");\n \n       --  Line for -V switch\n \n-      Write_Line (\"  -Vkey=val Record bind-time variable key \" &\n-                  \"with value val\");\n+      Write_Line\n+        (\"  -Vkey=val Record bind-time variable key with value val\");\n       --  Line for -w switch\n \n-      Write_Line (\"  -wx       Warning mode. (x=s/e for \" &\n-                  \"suppress/treat as error)\");\n+      Write_Line\n+        (\"  -wx       Warning mode. (x=s/e for suppress/treat as error)\");\n \n       --  Line for -W switch\n \n-      Write_Str  (\"  -W?       Wide character encoding method (\");\n+      Write_Str\n+        (\"  -W?       Wide character encoding method (\");\n \n       for J in WC_Encoding_Method loop\n          Write_Char (WC_Encoding_Letters (J));\n@@ -260,36 +296,40 @@ package body Bindusg is\n \n       --  Line for -x switch\n \n-      Write_Line (\"  -x        Exclude source files (check object \" &\n-                  \"consistency only)\");\n+      Write_Line\n+        (\"  -x        Exclude source files (check object consistency only)\");\n \n       --  Line for -X switch\n \n-      Write_Line (\"  -Xnnn     Default exit status value = nnn\");\n+      Write_Line\n+        (\"  -Xnnn     Default exit status value = nnn\");\n \n       --  Line for -y switch\n \n-      Write_Line (\"  -y        Enable leap seconds\");\n+      Write_Line\n+        (\"  -y        Enable leap seconds\");\n \n       --  Line for -z switch\n \n-      Write_Line (\"  -z        No main subprogram (zero main)\");\n+      Write_Line\n+        (\"  -z        No main subprogram (zero main)\");\n \n       --  Line for --RTS\n \n       --  Line for -Z switch\n \n-      Write_Line (\"  -Z        \" &\n-                  \"Zero formatting in auxiliary outputs (-e, -K, -l, -R)\");\n+      Write_Line\n+        (\"  -Z        Zero formatting in auxiliary outputs (-e, -K, -l, -R)\");\n \n       --  Line for --RTS\n \n-      Write_Line (\"  --RTS=dir Specify the default source and \" &\n-                  \"object search path\");\n+      Write_Line\n+        (\"  --RTS=dir Specify the default source and object search path\");\n \n       --  Line for sfile\n \n-      Write_Line (\"  lfile     Library file names\");\n+      Write_Line\n+        (\"  lfile     Library file names\");\n    end Display;\n \n end Bindusg;"}, {"sha": "8f52966249a3fc6ac3b2052ae1bafb1be68e1780", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 17, "deletions": 12, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=7e6060af807ad72d199506f9f61a8a70a27eccda", "patch": "@@ -6935,7 +6935,6 @@ package body Exp_Ch7 is\n \n          Counter        : Int := 0;\n          Finalizer_Data : Finalization_Exception_Data;\n-         Num_Comps      : Nat := 0;\n \n          function Process_Component_List_For_Finalize\n            (Comps : Node_Id) return List_Id;\n@@ -6951,25 +6950,28 @@ package body Exp_Ch7 is\n            (Comps : Node_Id) return List_Id\n          is\n             procedure Process_Component_For_Finalize\n-              (Decl  : Node_Id;\n-               Alts  : List_Id;\n-               Decls : List_Id;\n-               Stmts : List_Id);\n+              (Decl      : Node_Id;\n+               Alts      : List_Id;\n+               Decls     : List_Id;\n+               Stmts     : List_Id;\n+               Num_Comps : in out Nat);\n             --  Process the declaration of a single controlled component. If\n             --  flag Is_Local is enabled, create the corresponding label and\n             --  jump circuitry. Alts is the list of case alternatives, Decls\n             --  is the top level declaration list where labels are declared\n-            --  and Stmts is the list of finalization actions.\n+            --  and Stmts is the list of finalization actions. Num_Comps\n+            --  denotes the current number of components needing finalization.\n \n             ------------------------------------\n             -- Process_Component_For_Finalize --\n             ------------------------------------\n \n             procedure Process_Component_For_Finalize\n-              (Decl  : Node_Id;\n-               Alts  : List_Id;\n-               Decls : List_Id;\n-               Stmts : List_Id)\n+              (Decl      : Node_Id;\n+               Alts      : List_Id;\n+               Decls     : List_Id;\n+               Stmts     : List_Id;\n+               Num_Comps : in out Nat)\n             is\n                Id       : constant Entity_Id := Defining_Identifier (Decl);\n                Typ      : constant Entity_Id := Etype (Id);\n@@ -7075,6 +7077,7 @@ package body Exp_Ch7 is\n             Jump_Block : Node_Id;\n             Label      : Node_Id;\n             Label_Id   : Entity_Id;\n+            Num_Comps  : Nat;\n             Stmts      : List_Id;\n             Var_Case   : Node_Id;\n \n@@ -7185,7 +7188,8 @@ package body Exp_Ch7 is\n                     and then Has_Access_Constraint (Decl_Id)\n                     and then No (Expression (Decl))\n                   then\n-                     Process_Component_For_Finalize (Decl, Alts, Decls, Stmts);\n+                     Process_Component_For_Finalize\n+                       (Decl, Alts, Decls, Stmts, Num_Comps);\n                   end if;\n \n                   Prev_Non_Pragma (Decl);\n@@ -7212,7 +7216,8 @@ package body Exp_Ch7 is\n                   then\n                      null;\n                   else\n-                     Process_Component_For_Finalize (Decl, Alts, Decls, Stmts);\n+                     Process_Component_For_Finalize\n+                       (Decl, Alts, Decls, Stmts, Num_Comps);\n                   end if;\n                end if;\n "}, {"sha": "ed1138d3dcc79e9148808729613b29c3f53a38ef", "filename": "gcc/ada/gnatbind.adb", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fgnatbind.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fgnatbind.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatbind.adb?ref=7e6060af807ad72d199506f9f61a8a70a27eccda", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -447,6 +447,9 @@ procedure Gnatbind is\n          elsif Argv (2 .. Argv'Last) = \"nostdinc\" then\n             Opt.No_Stdinc := True;\n \n+         elsif Argv (2 .. Argv'Last) = \"nognarl\" then\n+            Opt.No_Libgnarl := True;\n+\n          --  -static\n \n          elsif Argv (2 .. Argv'Last) = \"static\" then"}, {"sha": "09ed571b533cc2363c1a8f298e0e68dc6657ba41", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e6060af807ad72d199506f9f61a8a70a27eccda/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=7e6060af807ad72d199506f9f61a8a70a27eccda", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1147,6 +1147,10 @@ package Opt is\n    --  GNATMAKE, GNATBIND, GNATFIND, GNATXREF\n    --  Set to True if no default library search dirs added to search list.\n \n+   No_Libgnarl : Boolean := False;\n+   --  GNATBIND\n+   --  Set to True if libgnarl is not available in the runtime.\n+\n    No_Strict_Aliasing : Boolean := False;\n    --  GNAT\n    --  Set True if pragma No_Strict_Aliasing with no parameters encountered."}]}