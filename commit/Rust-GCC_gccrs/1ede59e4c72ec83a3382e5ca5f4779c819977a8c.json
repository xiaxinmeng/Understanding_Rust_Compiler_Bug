{"sha": "1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWVkZTU5ZTRjNzJlYzgzYTMzODJlNWNhNWY0Nzc5YzgxOTk3N2E4Yw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2013-12-17T03:06:04Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2013-12-17T03:06:04Z"}, "message": "re PR libfortran/59419 (Failing OPEN with FILE='xxx' and IOSTAT creates the file 'xxx' after revision 196783)\n\n2013-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu>\n\n\tPR libfortran/59419\n\t* io/file_pos.c (st_rewind): Do proper return after\n\tgenerate_error.\n\t* io/open.c (edit_modes): Move action code inside block that\n\tchecks for library ok. (new_unit): Do cleanup after error.\n\t(st_open): Do proper return after error.\n\t* io/transfer.c (data_transfer_init): Likewise.\n\nFrom-SVN: r206039", "tree": {"sha": "ec8d3e6892e8fe0b968cd1630db981e970c6a72e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec8d3e6892e8fe0b968cd1630db981e970c6a72e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/comments", "author": null, "committer": null, "parents": [{"sha": "01d90185267d21a6f7c9a97722c1c71b3f1139dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01d90185267d21a6f7c9a97722c1c71b3f1139dd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01d90185267d21a6f7c9a97722c1c71b3f1139dd"}], "stats": {"total": 101, "additions": 63, "deletions": 38}, "files": [{"sha": "1c6c4da40fdca57e04b9d2048dd5f82be012314e", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "patch": "@@ -1,3 +1,13 @@\n+2013-12-16  Jerry DeLisle  <jvdelisle@gcc.gnu>\n+\n+\tPR libfortran/59419\n+\t* io/file_pos.c (st_rewind): Do proper return after\n+\tgenerate_error.\n+\t* io/open.c (edit_modes): Move action code inside block that\n+\tchecks for library ok. (new_unit): Do cleanup after error.\n+\t(st_open): Do proper return after error.\n+\t* io/transfer.c (data_transfer_init): Likewise.\n+\t\n 2013-12-11  Tobias Burnus  <burnus@net-b.de>\n \n \t* config/fpu-387.h (sigill_hdlr, get_fpu_rounding_mode): Emit SSE"}, {"sha": "d8dd361e568625ae79bd679d2f2b9f370f6b9016", "filename": "libgfortran/io/file_pos.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/libgfortran%2Fio%2Ffile_pos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/libgfortran%2Fio%2Ffile_pos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ffile_pos.c?ref=1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "patch": "@@ -410,7 +410,11 @@ st_rewind (st_parameter_filepos *fpp)\n \t  u->last_record = 0;\n \n \t  if (sseek (u->s, 0, SEEK_SET) < 0)\n-\t    generate_error (&fpp->common, LIBERROR_OS, NULL);\n+\t    {\n+\t      generate_error (&fpp->common, LIBERROR_OS, NULL);\n+\t      library_end ();\n+\t      return;\n+\t    }\n \n \t  /* Set this for compatibilty with g77 for /dev/null.  */\n \t  if (ssize (u->s) == 0)"}, {"sha": "a5cfb4ea4caeaf37987b410eff0c780dc88b09ef", "filename": "libgfortran/io/open.c", "status": "modified", "additions": 42, "deletions": 35, "changes": 77, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/libgfortran%2Fio%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/libgfortran%2Fio%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fopen.c?ref=1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "patch": "@@ -265,39 +265,39 @@ edit_modes (st_parameter_open *opp, gfc_unit * u, unit_flags * flags)\n \tu->flags.round = flags->round;\n       if (flags->sign != SIGN_UNSPECIFIED)\n \tu->flags.sign = flags->sign;\n-    }\n-\n-  /* Reposition the file if necessary.  */\n-\n-  switch (flags->position)\n-    {\n-    case POSITION_UNSPECIFIED:\n-    case POSITION_ASIS:\n-      break;\n-\n-    case POSITION_REWIND:\n-      if (sseek (u->s, 0, SEEK_SET) != 0)\n-\tgoto seek_error;\n-\n-      u->current_record = 0;\n-      u->last_record = 0;\n-\n-      test_endfile (u);\n-      break;\n \n-    case POSITION_APPEND:\n-      if (sseek (u->s, 0, SEEK_END) < 0)\n-\tgoto seek_error;\n-\n-      if (flags->access != ACCESS_STREAM)\n-\tu->current_record = 0;\n-\n-      u->endfile = AT_ENDFILE;\t/* We are at the end.  */\n-      break;\n-\n-    seek_error:\n-      generate_error (&opp->common, LIBERROR_OS, NULL);\n-      break;\n+      /* Reposition the file if necessary.  */\n+    \n+      switch (flags->position)\n+\t{\n+\tcase POSITION_UNSPECIFIED:\n+\tcase POSITION_ASIS:\n+\t  break;\n+    \n+\tcase POSITION_REWIND:\n+\t  if (sseek (u->s, 0, SEEK_SET) != 0)\n+\t    goto seek_error;\n+    \n+\t  u->current_record = 0;\n+\t  u->last_record = 0;\n+    \n+\t  test_endfile (u);\n+\t  break;\n+    \n+\tcase POSITION_APPEND:\n+\t  if (sseek (u->s, 0, SEEK_END) < 0)\n+\t    goto seek_error;\n+    \n+\t  if (flags->access != ACCESS_STREAM)\n+\t    u->current_record = 0;\n+    \n+\t  u->endfile = AT_ENDFILE;\t/* We are at the end.  */\n+\t  break;\n+    \n+\tseek_error:\n+\t  generate_error (&opp->common, LIBERROR_OS, NULL);\n+\t  break;\n+\t}\n     }\n \n   unlock_unit (u);\n@@ -562,7 +562,10 @@ new_unit (st_parameter_open *opp, gfc_unit *u, unit_flags * flags)\n   if (flags->position == POSITION_APPEND)\n     {\n       if (sseek (u->s, 0, SEEK_END) < 0)\n-\tgenerate_error (&opp->common, LIBERROR_OS, NULL);\n+\t{\n+\t  generate_error (&opp->common, LIBERROR_OS, NULL);\n+\t  goto cleanup;\n+\t}\n       u->endfile = AT_ENDFILE;\n     }\n \n@@ -852,8 +855,12 @@ st_open (st_parameter_open *opp)\n \t{\n \t  u = find_unit (opp->common.unit);\n \t  if (u == NULL) /* Negative unit and no NEWUNIT-created unit found.  */\n-\t    generate_error (&opp->common, LIBERROR_BAD_OPTION,\n-\t\t\t    \"Bad unit number in OPEN statement\");\n+\t    {\n+\t      generate_error (&opp->common, LIBERROR_BAD_OPTION,\n+\t\t\t      \"Bad unit number in OPEN statement\");\n+\t      library_end ();\n+\t      return;\n+\t    }\n \t}\n \n       if (u == NULL)"}, {"sha": "85003cc1f8376b06d9978e26a01d939466495450", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ede59e4c72ec83a3382e5ca5f4779c819977a8c/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=1ede59e4c72ec83a3382e5ca5f4779c819977a8c", "patch": "@@ -2490,14 +2490,18 @@ data_transfer_init (st_parameter_dt *dtp, int read_flag)\n   if ((cf & IOPARM_DT_HAS_NAMELIST_NAME) != 0 && dtp->u.p.ionml != NULL)\n      {\n \tif ((cf & IOPARM_DT_HAS_FORMAT) != 0)\n-\t   generate_error (&dtp->common, LIBERROR_OPTION_CONFLICT,\n-\t\t    \"A format cannot be specified with a namelist\");\n+\t  {\n+\t    generate_error (&dtp->common, LIBERROR_OPTION_CONFLICT,\n+\t\t\t\"A format cannot be specified with a namelist\");\n+\t    return;\n+\t  }\n      }\n   else if (dtp->u.p.current_unit->flags.form == FORM_FORMATTED &&\n \t   !(cf & (IOPARM_DT_HAS_FORMAT | IOPARM_DT_LIST_FORMAT)))\n     {\n       generate_error (&dtp->common, LIBERROR_OPTION_CONFLICT,\n \t\t      \"Missing format for FORMATTED data transfer\");\n+      return;\n     }\n \n   if (is_internal_unit (dtp)"}]}