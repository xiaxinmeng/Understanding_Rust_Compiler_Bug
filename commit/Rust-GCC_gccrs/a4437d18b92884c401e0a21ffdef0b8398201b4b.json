{"sha": "a4437d18b92884c401e0a21ffdef0b8398201b4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ0MzdkMThiOTI4ODRjNDAxZTBhMjFmZmRlZjBiODM5ODIwMWI0Yg==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-04-05T14:25:32Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-04-05T14:25:32Z"}, "message": "trans-intrinsic.c (gfc_build_intrinsic_lib_fndecls): Use build_function_type_list instead of build_function_type.\n\n\t* trans-intrinsic.c (gfc_build_intrinsic_lib_fndecls): Use\n\tbuild_function_type_list instead of build_function_type.  Correct\n\targument order for func_frexp and func_scalbn.\n\nFrom-SVN: r171987", "tree": {"sha": "aab36b4c9aff8f3113da4cb53c5643f27c7398a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aab36b4c9aff8f3113da4cb53c5643f27c7398a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4437d18b92884c401e0a21ffdef0b8398201b4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4437d18b92884c401e0a21ffdef0b8398201b4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4437d18b92884c401e0a21ffdef0b8398201b4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4437d18b92884c401e0a21ffdef0b8398201b4b/comments", "author": null, "committer": null, "parents": [{"sha": "6e66d62daed88ad256f1ff4d5b9eca0eca423b7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e66d62daed88ad256f1ff4d5b9eca0eca423b7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e66d62daed88ad256f1ff4d5b9eca0eca423b7f"}], "stats": {"total": 43, "additions": 26, "deletions": 17}, "files": [{"sha": "0206ba9430a55ec852270d2c136f6eaeafd4a934", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4437d18b92884c401e0a21ffdef0b8398201b4b/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4437d18b92884c401e0a21ffdef0b8398201b4b/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a4437d18b92884c401e0a21ffdef0b8398201b4b", "patch": "@@ -1,3 +1,9 @@\n+2011-04-05  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* trans-intrinsic.c (gfc_build_intrinsic_lib_fndecls): Use\n+\tbuild_function_type_list instead of build_function_type.  Correct\n+\targument order for func_frexp and func_scalbn.\n+\n 2011-04-05  Duncan Sands  <baldrick@free.fr>\n \n \t* f95-lang.c (build_builtin_fntypes): Swap frexp parameter types."}, {"sha": "9a696322d9c1f193811546386786a5e0f3fcde46", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4437d18b92884c401e0a21ffdef0b8398201b4b/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4437d18b92884c401e0a21ffdef0b8398201b4b/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=a4437d18b92884c401e0a21ffdef0b8398201b4b", "patch": "@@ -621,35 +621,38 @@ gfc_build_intrinsic_lib_fndecls (void)\n        C99-like library functions.  For now, we only handle __float128\n        q-suffixed functions.  */\n \n-    tree tmp, func_1, func_2, func_cabs, func_frexp;\n+    tree type, complex_type, func_1, func_2, func_cabs, func_frexp;\n     tree func_lround, func_llround, func_scalbn, func_cpow;\n \n     memset (quad_decls, 0, sizeof(tree) * (END_BUILTINS + 1));\n \n+    type = float128_type_node;\n+    complex_type = complex_float128_type_node;\n     /* type (*) (type) */\n-    tmp = tree_cons (NULL_TREE, float128_type_node, void_list_node);\n-    func_1 = build_function_type (float128_type_node, tmp);\n+    func_1 = build_function_type_list (type, type, NULL_TREE);\n     /* long (*) (type) */\n-    func_lround = build_function_type (long_integer_type_node, tmp);\n+    func_lround = build_function_type_list (long_integer_type_node,\n+\t\t\t\t\t    type, NULL_TREE);\n     /* long long (*) (type) */\n-    func_llround = build_function_type (long_long_integer_type_node, tmp);\n+    func_llround = build_function_type_list (long_long_integer_type_node,\n+\t\t\t\t\t     type, NULL_TREE);\n     /* type (*) (type, type) */\n-    tmp = tree_cons (NULL_TREE, float128_type_node, tmp);\n-    func_2 = build_function_type (float128_type_node, tmp);\n+    func_2 = build_function_type_list (type, type, type, NULL_TREE);\n     /* type (*) (type, &int) */\n-    tmp = tree_cons (NULL_TREE, float128_type_node, void_list_node);\n-    tmp = tree_cons (NULL_TREE, build_pointer_type (integer_type_node), tmp);\n-    func_frexp = build_function_type (float128_type_node, tmp);\n+    func_frexp\n+      = build_function_type_list (type,\n+\t\t\t\t  type,\n+\t\t\t\t  build_pointer_type (integer_type_node),\n+\t\t\t\t  NULL_TREE);\n     /* type (*) (type, int) */\n-    tmp = tree_cons (NULL_TREE, float128_type_node, void_list_node);\n-    tmp = tree_cons (NULL_TREE, integer_type_node, tmp);\n-    func_scalbn = build_function_type (float128_type_node, tmp);\n+    func_scalbn = build_function_type_list (type,\n+\t\t\t\t\t    type, integer_type_node, NULL_TREE);\n     /* type (*) (complex type) */\n-    tmp = tree_cons (NULL_TREE, complex_float128_type_node, void_list_node);\n-    func_cabs = build_function_type (float128_type_node, tmp);\n+    func_cabs = build_function_type_list (type, complex_type, NULL_TREE);\n     /* complex type (*) (complex type, complex type) */\n-    tmp = tree_cons (NULL_TREE, complex_float128_type_node, tmp);\n-    func_cpow = build_function_type (complex_float128_type_node, tmp);\n+    func_cpow\n+      = build_function_type_list (complex_type,\n+\t\t\t\t  complex_type, complex_type, NULL_TREE);\n \n #define DEFINE_MATH_BUILTIN(ID, NAME, ARGTYPE)\n #define DEFINE_MATH_BUILTIN_C(ID, NAME, ARGTYPE)"}]}