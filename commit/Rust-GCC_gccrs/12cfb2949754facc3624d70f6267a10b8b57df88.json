{"sha": "12cfb2949754facc3624d70f6267a10b8b57df88", "node_id": "C_kwDOANBUbNoAKDEyY2ZiMjk0OTc1NGZhY2MzNjI0ZDcwZjYyNjdhMTBiOGI1N2RmODg", "commit": {"author": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-09-22T08:59:42Z"}, "committer": {"name": "Marc Poulhi\u00e8s", "email": "poulhies@adacore.com", "date": "2022-11-04T13:47:28Z"}, "message": "ada: Fix loop unnesting issue.\n\nDuring loop unnesting, when the loop statements are wrapped in a code\nblock, the newly created block's scope must be set to the loop\nscope (instead of the previous 'Current_Scope' that would point to an\nupper scope).\n\ngcc/ada/\n\n\t* sem_util.ads (Add_Block_Identifier): Add new extra Scope\n\targument.\n\t* sem_util.adb (Add_Block_Identifier): Likewise and use this scope\n\tvariable instead of Current_Scope.\n\t* exp_util.adb (Wrap_Statements_In_Block): Add new scope argument\n\tto Add_Block_Identifier call.", "tree": {"sha": "628af522162df0c6e43a274128be9df1cb096592", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/628af522162df0c6e43a274128be9df1cb096592"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/12cfb2949754facc3624d70f6267a10b8b57df88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12cfb2949754facc3624d70f6267a10b8b57df88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12cfb2949754facc3624d70f6267a10b8b57df88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12cfb2949754facc3624d70f6267a10b8b57df88/comments", "author": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dkm", "id": 87603, "node_id": "MDQ6VXNlcjg3NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/87603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dkm", "html_url": "https://github.com/dkm", "followers_url": "https://api.github.com/users/dkm/followers", "following_url": "https://api.github.com/users/dkm/following{/other_user}", "gists_url": "https://api.github.com/users/dkm/gists{/gist_id}", "starred_url": "https://api.github.com/users/dkm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dkm/subscriptions", "organizations_url": "https://api.github.com/users/dkm/orgs", "repos_url": "https://api.github.com/users/dkm/repos", "events_url": "https://api.github.com/users/dkm/events{/privacy}", "received_events_url": "https://api.github.com/users/dkm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73d04a073b7288fcf6fc2e1f25d8b1f3a2c6fb81", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73d04a073b7288fcf6fc2e1f25d8b1f3a2c6fb81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73d04a073b7288fcf6fc2e1f25d8b1f3a2c6fb81"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "35667028df1846ff78ffd1d2416aaeb67398c944", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12cfb2949754facc3624d70f6267a10b8b57df88/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12cfb2949754facc3624d70f6267a10b8b57df88/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=12cfb2949754facc3624d70f6267a10b8b57df88", "patch": "@@ -11367,7 +11367,7 @@ package body Exp_Util is\n          --  Create a label for the block in case the block needs to manage the\n          --  secondary stack. A label allows for flag Uses_Sec_Stack to be set.\n \n-         Add_Block_Identifier (Block_Nod, Block_Id);\n+         Add_Block_Identifier (Block_Nod, Block_Id, Scop);\n \n          --  When wrapping the statements of an iterator loop, check whether\n          --  the loop requires secondary stack management and if so, propagate"}, {"sha": "9a7640b31479dc55ffc688c29cf6ba221066e1c6", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12cfb2949754facc3624d70f6267a10b8b57df88/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12cfb2949754facc3624d70f6267a10b8b57df88/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=12cfb2949754facc3624d70f6267a10b8b57df88", "patch": "@@ -1044,7 +1044,11 @@ package body Sem_Util is\n    -- Add_Block_Identifier --\n    --------------------------\n \n-   procedure Add_Block_Identifier (N : Node_Id; Id : out Entity_Id) is\n+   procedure Add_Block_Identifier\n+       (N : Node_Id;\n+        Id : out Entity_Id;\n+        Scope : Entity_Id := Current_Scope)\n+   is\n       Loc : constant Source_Ptr := Sloc (N);\n    begin\n       pragma Assert (Nkind (N) = N_Block_Statement);\n@@ -1057,7 +1061,7 @@ package body Sem_Util is\n       --  Create a new block label and set its attributes\n \n       else\n-         Id := New_Internal_Entity (E_Block, Current_Scope, Loc, 'B');\n+         Id := New_Internal_Entity (E_Block, Scope, Loc, 'B');\n          Set_Etype  (Id, Standard_Void_Type);\n          Set_Parent (Id, N);\n "}, {"sha": "88bfbfc2086071a8d0e4b1bf9e6f6ecb069628fd", "filename": "gcc/ada/sem_util.ads", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/12cfb2949754facc3624d70f6267a10b8b57df88/gcc%2Fada%2Fsem_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/12cfb2949754facc3624d70f6267a10b8b57df88/gcc%2Fada%2Fsem_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.ads?ref=12cfb2949754facc3624d70f6267a10b8b57df88", "patch": "@@ -88,11 +88,6 @@ package Sem_Util is\n    --  Add A to the list of access types to process when expanding the\n    --  freeze node of E.\n \n-   procedure Add_Block_Identifier (N : Node_Id; Id : out Entity_Id);\n-   --  Given a block statement N, generate an internal E_Block label and make\n-   --  it the identifier of the block. Id denotes the generated entity. If the\n-   --  block already has an identifier, Id returns the entity of its label.\n-\n    procedure Add_Global_Declaration (N : Node_Id);\n    --  These procedures adds a declaration N at the library level, to be\n    --  elaborated before any other code in the unit. It is used for example\n@@ -678,6 +673,15 @@ package Sem_Util is\n    function Current_Scope return Entity_Id;\n    --  Get entity representing current scope\n \n+   procedure Add_Block_Identifier\n+       (N : Node_Id;\n+        Id : out Entity_Id;\n+        Scope : Entity_Id := Current_Scope);\n+   --  Given a block statement N, generate an internal E_Block label and make\n+   --  it the identifier of the block. Scope denotes the scope in which the\n+   --  generated entity Id is created and defaults to the current scope. If the\n+   --  block already has an identifier, Id returns the entity of its label.\n+\n    function Current_Scope_No_Loops return Entity_Id;\n    --  Return the current scope ignoring internally generated loops\n "}]}