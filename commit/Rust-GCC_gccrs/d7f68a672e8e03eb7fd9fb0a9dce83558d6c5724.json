{"sha": "d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDdmNjhhNjcyZThlMDNlYjdmZDlmYjBhOWRjZTgzNTU4ZDZjNTcyNA==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2008-08-25T18:35:20Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2008-08-25T18:35:20Z"}, "message": "ffitarget.h (ffi_abi): Add FFI_LINUX and FFI_LINUX_SOFT_FLOAT to the POWERPC_FREEBSD enum.\n\n2008-08-25  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* src/powerpc/ffitarget.h (ffi_abi): Add FFI_LINUX and\n\tFFI_LINUX_SOFT_FLOAT to the POWERPC_FREEBSD enum.\n\tAdd note about flag bits used for FFI_SYSV_TYPE_SMALL_STRUCT.\n\tAdjust copyright notice.\n\t* src/powerpc/ffi.c: Add two new flags to indicate if we have one\n\tregister or two register to use for FFI_SYSV structs.\n\t(ffi_prep_cif_machdep): Pass the right register flag introduced above.\n\t(ffi_closure_helper_SYSV): Fix the return type for\n\tFFI_SYSV_TYPE_SMALL_STRUCT. Comment.\n\tAdjust copyright notice.\n\nFrom-SVN: r139567", "tree": {"sha": "1670836e3b4fb423f2035de9314739662d280b35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1670836e3b4fb423f2035de9314739662d280b35"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724/comments", "author": null, "committer": null, "parents": [{"sha": "9d1210f47f50fa5a1e397632792aa97668e56e0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d1210f47f50fa5a1e397632792aa97668e56e0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d1210f47f50fa5a1e397632792aa97668e56e0e"}], "stats": {"total": 40, "additions": 33, "deletions": 7}, "files": [{"sha": "cffc4d25ff583fefa1cabd134bfc281f27e8bf12", "filename": "libffi/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724", "patch": "@@ -1,3 +1,16 @@\n+2008-08-25  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* src/powerpc/ffitarget.h (ffi_abi): Add FFI_LINUX and\n+\tFFI_LINUX_SOFT_FLOAT to the POWERPC_FREEBSD enum.\n+\tAdd note about flag bits used for FFI_SYSV_TYPE_SMALL_STRUCT.\n+\tAdjust copyright notice.\n+\t* src/powerpc/ffi.c: Add two new flags to indicate if we have one\n+\tregister or two register to use for FFI_SYSV structs.\n+\t(ffi_prep_cif_machdep): Pass the right register flag introduced above.\n+\t(ffi_closure_helper_SYSV): Fix the return type for\n+\tFFI_SYSV_TYPE_SMALL_STRUCT. Comment.\n+\tAdjust copyright notice.\n+\n 2008-07-16  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* src/sh/ffi.c (ffi_prep_closure_loc): Turn INSN into an unsigned"}, {"sha": "73c1dd207669198c74f1602cc0b627c49053687f", "filename": "libffi/src/powerpc/ffi.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724/libffi%2Fsrc%2Fpowerpc%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffi.c?ref=d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724", "patch": "@@ -1,6 +1,6 @@\n /* -----------------------------------------------------------------------\n    ffi.c - Copyright (c) 1998 Geoffrey Keating\n-   Copyright (C) 2007 Free Software Foundation, Inc\n+   Copyright (C) 2007, 2008 Free Software Foundation, Inc\n \n    PowerPC Foreign Function Interface\n \n@@ -43,6 +43,10 @@ enum {\n \n   FLAG_RETURNS_128BITS  = 1 << (31-27), /* cr6  */\n \n+  FLAG_SYSV_SMST_R4     = 1 << (31-16), /* cr4, use r4 for FFI_SYSV 8 byte\n+\t\t\t\t\t   structs.  */\n+  FLAG_SYSV_SMST_R3     = 1 << (31-15), /* cr3, use r3 for FFI_SYSV 4 byte\n+\t\t\t\t\t   structs.  */\n   FLAG_ARG_NEEDS_COPY   = 1 << (31- 7),\n   FLAG_FP_ARGUMENTS     = 1 << (31- 6), /* cr1.eq; specified by ABI */\n   FLAG_4_GPR_ARGUMENTS  = 1 << (31- 5),\n@@ -679,14 +683,14 @@ ffi_prep_cif_machdep (ffi_cif *cif)\n \t\t The same applies for the structs returned in r3/r4.  */\n \t      if (size <= 4)\n \t\t{\n-\t\t  flags |= 1 << (31 - FFI_SYSV_TYPE_SMALL_STRUCT - 1);\n+\t\t  flags |= FLAG_SYSV_SMST_R3;\n \t\t  flags |= 8 * (4 - size) << 4;\n \t\t  break;\n \t\t}\n \t      /* These structs are returned in r3 and r4. See above.   */\n \t      if  (size <= 8)\n \t\t{\n-\t\t  flags |= 1 << (31 - FFI_SYSV_TYPE_SMALL_STRUCT - 2);\n+\t\t  flags |= FLAG_SYSV_SMST_R4;\n \t\t  flags |= 8 * (8 - size) << 4;\n \t\t  break;\n \t\t}\n@@ -1248,10 +1252,15 @@ ffi_closure_helper_SYSV (ffi_closure *closure, void *rvalue,\n \n   /* Tell ffi_closure_SYSV how to perform return type promotions.\n      Because the FFI_SYSV ABI returns the structures <= 8 bytes in r3/r4\n-     we have to tell ffi_closure_SYSV how to treat them.  */\n+     we have to tell ffi_closure_SYSV how to treat them. We combine the base\n+     type FFI_SYSV_TYPE_SMALL_STRUCT - 1  with the size of the struct.\n+     So a one byte struct gets the return type 16. Return type 1 to 15 are\n+     already used and we never have a struct with size zero. That is the reason\n+     for the subtraction of 1. See the comment in ffitarget.h about ordering.\n+  */\n   if (cif->abi == FFI_SYSV && cif->rtype->type == FFI_TYPE_STRUCT\n       && size <= 8)\n-    return FFI_SYSV_TYPE_SMALL_STRUCT + size;\n+    return (FFI_SYSV_TYPE_SMALL_STRUCT - 1) + size;\n #if FFI_TYPE_LONGDOUBLE != FFI_TYPE_DOUBLE\n   else if (cif->rtype->type == FFI_TYPE_LONGDOUBLE\n \t   && cif->abi != FFI_LINUX && cif->abi != FFI_LINUX_SOFT_FLOAT)"}, {"sha": "a39a62671661cdbf2b5a3772bb7023876b90cc85", "filename": "libffi/src/powerpc/ffitarget.h", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fffitarget.h?ref=d7f68a672e8e03eb7fd9fb0a9dce83558d6c5724", "patch": "@@ -1,6 +1,6 @@\n /* -----------------------------------------------------------------*-C-*-\n    ffitarget.h - Copyright (c) 1996-2003  Red Hat, Inc.\n-   Copyright (C) 2007 Free Software Foundation, Inc\n+   Copyright (C) 2007, 2008 Free Software Foundation, Inc\n    Target configuration macros for PowerPC.\n \n    Permission is hereby granted, free of charge, to any person obtaining\n@@ -77,6 +77,8 @@ typedef enum ffi_abi {\n   FFI_SYSV,\n   FFI_GCC_SYSV,\n   FFI_LINUX64,\n+  FFI_LINUX,\n+  FFI_LINUX_SOFT_FLOAT,\n   FFI_DEFAULT_ABI = FFI_SYSV,\n #endif\n \n@@ -95,7 +97,9 @@ typedef enum ffi_abi {\n /* Needed for soft-float long-double-128 support.  */\n #define FFI_TYPE_UINT128 (FFI_TYPE_LAST + 1)\n \n-/* Needed for FFI_SYSV small structure returns.  */\n+/* Needed for FFI_SYSV small structure returns.\n+   We use two flag bits, (FLAG_SYSV_SMST_R3, FLAG_SYSV_SMST_R4) which are\n+   defined in ffi.c, to determine the exact return type and its size.  */\n #define FFI_SYSV_TYPE_SMALL_STRUCT (FFI_TYPE_LAST + 2)\n \n #if defined(POWERPC64) || defined(POWERPC_AIX)"}]}