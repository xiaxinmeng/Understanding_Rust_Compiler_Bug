{"sha": "f6c2a93cc08ce7557bba4af7d67762ef5f7f2618", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZjMmE5M2NjMDhjZTc1NTdiYmE0YWY3ZDY3NzYyZWY1ZjdmMjYxOA==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-11-24T12:46:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-11-24T12:46:07Z"}, "message": "Makefile.in (HOST_AR): Define.\n\n\ufffd\n        * Makefile.in (HOST_AR): Define.\n        (HOST_AR_FLAGS, HOST_RANLIB, HOST_RANLIB_TEST): Similarly.\n        (libcpp.a): Use the host tools explicitly.\n        (STAGESTUFF): Add libcpp.a.\n\nFrom-SVN: r23828", "tree": {"sha": "8a73976bca86fefbab06d2bfcf3fa59a8924d517", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a73976bca86fefbab06d2bfcf3fa59a8924d517"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6c2a93cc08ce7557bba4af7d67762ef5f7f2618", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c2a93cc08ce7557bba4af7d67762ef5f7f2618", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6c2a93cc08ce7557bba4af7d67762ef5f7f2618", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6c2a93cc08ce7557bba4af7d67762ef5f7f2618/comments", "author": null, "committer": null, "parents": [{"sha": "6970d948d654068f83d93a0cdbca419f59be36fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6970d948d654068f83d93a0cdbca419f59be36fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6970d948d654068f83d93a0cdbca419f59be36fc"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "635f47501ebdffdfbf8cd9145325c78967d865d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c2a93cc08ce7557bba4af7d67762ef5f7f2618/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c2a93cc08ce7557bba4af7d67762ef5f7f2618/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6c2a93cc08ce7557bba4af7d67762ef5f7f2618", "patch": "@@ -1,3 +1,10 @@\n+Tue Nov 24 13:40:06 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* Makefile.in (HOST_AR): Define.\n+\t(HOST_AR_FLAGS, HOST_RANLIB, HOST_RANLIB_TEST): Similarly.\n+\t(libcpp.a): Use the host tools explicitly.\n+\t(STAGESTUFF): Add libcpp.a.\n+\n Tue Nov 24 09:33:49 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* config/m32r/m32r.md (movstrsi_internal): Describe changes made"}, {"sha": "bad2b17e91fd41e613a2710f8055c584cc904c5e", "filename": "gcc/Makefile.in", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6c2a93cc08ce7557bba4af7d67762ef5f7f2618/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6c2a93cc08ce7557bba4af7d67762ef5f7f2618/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f6c2a93cc08ce7557bba4af7d67762ef5f7f2618", "patch": "@@ -114,6 +114,11 @@ RANLIB = ranlib\n # Test to use to see whether ranlib exists on the system.\n RANLIB_TEST = [ -f /usr/bin/ranlib -o -f /bin/ranlib ]\n \n+HOST_AR = ar\n+HOST_AR_FLAGS = rc\n+HOST_RANLIB = ranlib\n+HOST_RANLIB_TEST = [ -f /usr/bin/ranlib -o -f /bin/ranlib ]\n+\n # Compiler to use for compiling libgcc1.a.\n # OLDCC should not be the GNU C compiler,\n # since that would compile typical libgcc1.a functions such as mulsi3\n@@ -677,7 +682,7 @@ STAGESTUFF = *$(objext) insn-flags.h insn-config.h insn-codes.h \\\n  gcov$(exeext) *.bp \\\n  *.greg *.lreg *.combine *.flow *.cse *.jump *.rtl *.tree *.loop \\\n  *.dbr *.jump2 *.sched *.cse2 *.sched2 *.stack *.gcse \\\n- *.[si] \\\n+ *.[si] libcpp.a \\\n  $(LANG_STAGESTUFF)\n \n # Members of libgcc1.a.\n@@ -1886,9 +1891,15 @@ cccp.o: cccp.c $(CONFIG_H) pcp.h version.c config.status system.h \\\n LIBCPP_OBJS =\tcpplib.o cpphash.o cppalloc.o cpperror.o cppexp.o cppfiles.o \\\n \t\tcppulp.o prefix.o version.o mbchar.o @extra_cpp_objs@\n \n+# All the other archives built/used by this makefile are for targets.  This\n+# one is strictly for the host.\n+#\n+# For various reasons AR, RANLIB, etc are all set to the target tools and\n+# must not be used here.  Instead explicitly use the host versions.\n+#\n libcpp.a: $(LIBCPP_OBJS)\n-\t$(AR) $(ARFLAGS) libcpp.a $(LIBCPP_OBJS)\n-\tif $(RANLIB_TEST) ; then $(RANLIB) libcpp.a ; else true ; fi\n+\t$(HOST_AR) $(HOST_AR_FLAGS) libcpp.a $(LIBCPP_OBJS)\n+\tif $(HOST_RANLIB_TEST) ; then $(HOST_RANLIB) libcpp.a ; else true ; fi\n \n cppmain$(exeext): cppmain.o libcpp.a $(LIBDEPS)\n \t$(CC) $(ALL_CFLAGS) $(LDFLAGS) -o cppmain$(exeext) cppmain.o \\"}]}