{"sha": "0bdcd33274e716b59392b85dba44f9f05f572277", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJkY2QzMzI3NGU3MTZiNTkzOTJiODVkYmE0NGY5ZjA1ZjU3MjI3Nw==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2005-04-15T10:24:13Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2005-04-15T10:24:13Z"}, "message": "invoke.texi: Fix typos.\n\n\t* doc/invoke.texi: Fix typos.\n\t* doc/md.texi: Likewise.\n\t* doc/rtl.texi: Likewise.\n\t* doc/sourcebuild.texi: Likewise.\n\t* doc/tm.texi: Likewise.\n\nFrom-SVN: r98179", "tree": {"sha": "668f4182098e142743c26327fa3b18d2cb77bd6a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/668f4182098e142743c26327fa3b18d2cb77bd6a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bdcd33274e716b59392b85dba44f9f05f572277", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bdcd33274e716b59392b85dba44f9f05f572277", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bdcd33274e716b59392b85dba44f9f05f572277", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bdcd33274e716b59392b85dba44f9f05f572277/comments", "author": null, "committer": null, "parents": [{"sha": "1c432a0c34a7f3ac56afca802e1dce1058be2db5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c432a0c34a7f3ac56afca802e1dce1058be2db5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c432a0c34a7f3ac56afca802e1dce1058be2db5"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "11c66114a695f4d4ad0fc09ec1e1f441f0e4c9c3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bdcd33274e716b59392b85dba44f9f05f572277", "patch": "@@ -1,3 +1,11 @@\n+2005-04-15  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* doc/invoke.texi: Fix typos.\n+\t* doc/md.texi: Likewise.\n+\t* doc/rtl.texi: Likewise.\n+\t* doc/sourcebuild.texi: Likewise.\n+\t* doc/tm.texi: Likewise.\n+\n 2005-04-15  Uros Bizjak  <uros@kss-loka.si>\n \n \tPR tree-optimization/21004"}, {"sha": "90f0c9ff101f7b0a0361b7c0ede7ffe5ba628ce1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=0bdcd33274e716b59392b85dba44f9f05f572277", "patch": "@@ -3159,7 +3159,7 @@ inline functions declared in system headers.\n \n The compiler uses a variety of heuristics to determine whether or not\n to inline a function.  For example, the compiler takes into account\n-the size of the function being inlined and the the amount of inlining\n+the size of the function being inlined and the amount of inlining\n that has already been done in the current function.  Therefore,\n seemingly insignificant changes in the source program can cause the\n warnings produced by @option{-Winline} to appear or disappear.\n@@ -3520,7 +3520,7 @@ conversion, to the file @file{@var{file}.18.ce2}.\n @opindex fdump-rtl-btl\n @opindex fdump-rtl-dbr\n @option{-dd} and @option{-fdump-rtl-btl} enable dumping after branch\n-target load optimization, to to @file{@var{file}.31.btl}.  @option{-dd}\n+target load optimization, to @file{@var{file}.31.btl}.  @option{-dd}\n and @option{-fdump-rtl-dbr} enable dumping after delayed branch\n scheduling, to @file{@var{file}.36.dbr}.\n \n@@ -12799,7 +12799,7 @@ for creating and using precompiled headers.\n Any macros defined before the precompiled header is included must\n either be defined in the same way as when the precompiled header was\n generated, or must not affect the precompiled header, which usually\n-means that the they don't appear in the precompiled header at all.\n+means that they don't appear in the precompiled header at all.\n \n The @option{-D} option is one way to define a macro before a\n precompiled header is included; using a @code{#define} can also do it."}, {"sha": "4293611607173e272b1266c325befe8c877b2c32", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=0bdcd33274e716b59392b85dba44f9f05f572277", "patch": "@@ -1681,7 +1681,7 @@ A memory reference suitable for VFP load/store insns (reg+constant offset)\n A memory reference suitable for iWMMXt load/store instructions.\n \n @item Uq\n-A memory reference suitable for for the ARMv4 ldrsb instruction.\n+A memory reference suitable for the ARMv4 ldrsb instruction.\n \n @item AVR family---@file{avr.h}\n @table @code\n@@ -6341,7 +6341,7 @@ can be used for @acronym{RISC} processors, too.\n separated by commas.\n \n @var{patterns} is a string giving patterns of functional units\n-separated by comma.  Currently pattern is is one unit or units\n+separated by comma.  Currently pattern is one unit or units\n separated by white-spaces.\n \n The first construction (@samp{exclusion_set}) means that each"}, {"sha": "9858e47c767bd99d455dcb59675f3f3c6a6b467f", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=0bdcd33274e716b59392b85dba44f9f05f572277", "patch": "@@ -3517,7 +3517,7 @@ on these machines should have a body which is a @code{parallel}\n that contains both the @code{call} expression and @code{clobber}\n expressions that indicate which registers are destroyed.  Similarly,\n if the call instruction requires some register other than the stack\n-pointer that is not explicitly mentioned it its RTL, a @code{use}\n+pointer that is not explicitly mentioned in its RTL, a @code{use}\n subexpression should mention that register.\n \n Functions that are called are assumed to modify all registers listed in"}, {"sha": "2d1e519c438156e50711385b51e789c17f17e21f", "filename": "gcc/doc/sourcebuild.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Fsourcebuild.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Fsourcebuild.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fsourcebuild.texi?ref=0bdcd33274e716b59392b85dba44f9f05f572277", "patch": "@@ -1291,7 +1291,7 @@ bugs in libgcj that had caused Mauve test failures.\n The @uref{http://sources.redhat.com/mauve/,,\n Jacks} project provides a testsuite for Java compilers that can be used\n to test changes that affect the GCJ front end.  This testsuite is run as\n-part of Java testing by placing the Jacks tree within the the libjava\n+part of Java testing by placing the Jacks tree within the libjava\n testsuite sources at @file{libjava/testsuite/libjava.jacks/jacks}.\n \n We encourage developers to contribute test cases to Mauve and Jacks."}, {"sha": "42c5b0f1c9cbf16bec30043e3fdf56a7cc2f8df1", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bdcd33274e716b59392b85dba44f9f05f572277/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=0bdcd33274e716b59392b85dba44f9f05f572277", "patch": "@@ -5566,7 +5566,7 @@ used to set a chunk of memory to a constant value, or whether some other\n mechanism will be used.  Used by @code{__builtin_memset} when storing\n values other than constant zero and by @code{__builtin_strcpy} when\n when called with a constant source string.\n-Defaults to to 1 if @code{move_by_pieces_ninsns} returns less\n+Defaults to 1 if @code{move_by_pieces_ninsns} returns less\n than @code{MOVE_RATIO}.\n @end defmac\n \n@@ -9261,7 +9261,7 @@ arguments of @samp{#pragma pack}.\n \n @defmac TARGET_DEFAULT_PACK_STRUCT\n If your target requires a structure packing default other than 0 (meaning\n-the machine default), define this macro the the necessary value (in bytes).\n+the machine default), define this macro to the necessary value (in bytes).\n This must be a value that would also valid to be used with\n @samp{#pragma pack()} (that is, a small power of two).\n @end defmac"}]}