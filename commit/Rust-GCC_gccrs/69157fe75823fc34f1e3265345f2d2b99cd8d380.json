{"sha": "69157fe75823fc34f1e3265345f2d2b99cd8d380", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkxNTdmZTc1ODIzZmMzNGYxZTMyNjUzNDVmMmQyYjk5Y2Q4ZDM4MA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-01T09:44:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-12-01T09:44:40Z"}, "message": "x86_64: Fix up -fpic -mcmodel=large -fno-plt [PR98063]\n\nOn the following testcase with -fpic -mcmodel=large -fno-plt we emit\ncall puts@GOTPCREL(%rip)\nbut that is not really appropriate for CM_LARGE_PIC, the .text can be larger\nthan 2GB in that case and the .got slot further away from %rip than what can\nfit into the signed 32-bit immediate.\n\nThe following patch computes the address of the .got slot the way it is\ncomputed for that model for function pointer loads, and calls that.\n\n2020-12-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/98063\n\t* config/i386/i386-expand.c (ix86_expand_call): Handle non-plt\n\tCM_LARGE_PIC calls.\n\n\t* gcc.target/i386/pr98063.c: New test.", "tree": {"sha": "5847d5a087f989264c63d24f34215e294ff8787c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5847d5a087f989264c63d24f34215e294ff8787c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69157fe75823fc34f1e3265345f2d2b99cd8d380", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69157fe75823fc34f1e3265345f2d2b99cd8d380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69157fe75823fc34f1e3265345f2d2b99cd8d380", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69157fe75823fc34f1e3265345f2d2b99cd8d380/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57fcbe579c2f2b0919486b658a5bec8f4e1ef42b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57fcbe579c2f2b0919486b658a5bec8f4e1ef42b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57fcbe579c2f2b0919486b658a5bec8f4e1ef42b"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "bf775a38fc3c2deeaa86f6779f949a5e94b64dba", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69157fe75823fc34f1e3265345f2d2b99cd8d380/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69157fe75823fc34f1e3265345f2d2b99cd8d380/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=69157fe75823fc34f1e3265345f2d2b99cd8d380", "patch": "@@ -8063,7 +8063,17 @@ ix86_expand_call (rtx retval, rtx fnaddr, rtx callarg1,\n \t    }\n \t  else if (!TARGET_PECOFF && !TARGET_MACHO)\n \t    {\n-\t      if (TARGET_64BIT)\n+\t      if (TARGET_64BIT\n+\t\t  && ix86_cmodel == CM_LARGE_PIC\n+\t\t  && DEFAULT_ABI != MS_ABI)\n+\t\t{\n+\t\t  fnaddr = gen_rtx_UNSPEC (Pmode, gen_rtvec (1, addr),\n+\t\t\t\t\t   UNSPEC_GOT);\n+\t\t  fnaddr = gen_rtx_CONST (Pmode, fnaddr);\n+\t\t  fnaddr = force_reg (Pmode, fnaddr);\n+\t\t  fnaddr = gen_rtx_PLUS (Pmode, pic_offset_table_rtx, fnaddr);\n+\t\t}\n+\t      else if (TARGET_64BIT)\n \t\t{\n \t\t  fnaddr = gen_rtx_UNSPEC (Pmode,\n \t\t\t\t\t   gen_rtvec (1, addr),"}, {"sha": "f76435a7194fcc3c87e4b4acc6a615ade74e15e6", "filename": "gcc/testsuite/gcc.target/i386/pr98063.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69157fe75823fc34f1e3265345f2d2b99cd8d380/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98063.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69157fe75823fc34f1e3265345f2d2b99cd8d380/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98063.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr98063.c?ref=69157fe75823fc34f1e3265345f2d2b99cd8d380", "patch": "@@ -0,0 +1,13 @@\n+/* PR target/98063 */\n+/* { dg-do run { target { i?86-*-linux* x86_64-*-linux* } } } */\n+/* { dg-require-effective-target lp64 } */\n+/* { dg-require-effective-target fpic } */\n+/* { dg-options \"-O2 -fpic -mcmodel=large -fno-plt -save-temps\" } */\n+/* { dg-final { scan-assembler-not \"puts@GOTPCREL\" } } */\n+\n+int\n+main ()\n+{\n+  __builtin_puts (\"Hello, world!\");\n+  return 0;\n+}"}]}