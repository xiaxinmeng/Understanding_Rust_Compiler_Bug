{"sha": "04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQxNjFlMmJkZTVkZWU3ZGJlOWM3ODYzZjNjYjZmMjYyYzhkMDU5Yw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-09-20T20:13:39Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-09-20T20:13:39Z"}, "message": "alpha.c (some_small_symbolic_operand_int): Rename from some_small_symbolic_operand_1; export.\n\n        * config/alpha/alpha.c (some_small_symbolic_operand_int): Rename\n        from some_small_symbolic_operand_1; export.\n        (some_small_symbolic_operand): Remove.\n        * config/alpha/alpha.md (some_small_symbolic_operand splitter): Remove\n        extra C check.\n        * config/alpha/predicates.md (some_small_symbolic_operand): New.\n\nFrom-SVN: r87769", "tree": {"sha": "e555e53fea5983df0a8d4e530fda2c6699639b63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e555e53fea5983df0a8d4e530fda2c6699639b63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/comments", "author": null, "committer": null, "parents": [{"sha": "bb033fd8060e36e8bafdebec388e5fa91d073d61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb033fd8060e36e8bafdebec388e5fa91d073d61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb033fd8060e36e8bafdebec388e5fa91d073d61"}], "stats": {"total": 45, "additions": 26, "deletions": 19}, "files": [{"sha": "d4902b7d078ca84378b81bf2288bb1261ad7e3d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "patch": "@@ -1,3 +1,12 @@\n+2004-09-20  Richard Henderson  <rth@redhat.com>\n+\n+\t* config/alpha/alpha.c (some_small_symbolic_operand_int): Rename\n+\tfrom some_small_symbolic_operand_1; export.\n+\t(some_small_symbolic_operand): Remove.\n+\t* config/alpha/alpha.md (some_small_symbolic_operand splitter): Remove\n+\textra C check.\n+\t* config/alpha/predicates.md (some_small_symbolic_operand): New.\n+\n 2004-09-20  Jan Hubicka  <jh@suse.cz>\n \n \t* predict.c (return_prediction): New function."}, {"sha": "22687ed12f79c3f7558c999d994f803ffeba315c", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "patch": "@@ -122,6 +122,6 @@ extern void unicosmk_output_common (FILE *, const char *, int, int);\n extern int unicosmk_initial_elimination_offset (int, int);\n #endif\n \n-extern int some_small_symbolic_operand (rtx, enum machine_mode);\n+extern int some_small_symbolic_operand_int (rtx *, void *);\n extern int tls_symbolic_operand_1 (rtx, int, int);\n extern rtx resolve_reload_operand (rtx);"}, {"sha": "122dea89822f0fe09f71569a76a8fa33eccdec40", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "patch": "@@ -1208,17 +1208,8 @@ alpha_function_ok_for_sibcall (tree decl, tree exp ATTRIBUTE_UNUSED)\n   return decl_has_samegp (decl);\n }\n \n-/* For TARGET_EXPLICIT_RELOCS, we don't obfuscate a SYMBOL_REF to a\n-   small symbolic operand until after reload.  At which point we need\n-   to replace (mem (symbol_ref)) with (mem (lo_sum $29 symbol_ref))\n-   so that sched2 has the proper dependency information.  */\n-/*\n-  {\"some_small_symbolic_operand\", {SET, PARALLEL, PREFETCH, UNSPEC,\t\\\n-\t\t\t\t   UNSPEC_VOLATILE}},\n-*/\n-\n-static int\n-some_small_symbolic_operand_1 (rtx *px, void *data ATTRIBUTE_UNUSED)\n+int\n+some_small_symbolic_operand_int (rtx *px, void *data ATTRIBUTE_UNUSED)\n {\n   rtx x = *px;\n \n@@ -1229,12 +1220,6 @@ some_small_symbolic_operand_1 (rtx *px, void *data ATTRIBUTE_UNUSED)\n   return small_symbolic_operand (x, Pmode) != 0;\n }\n \n-int\n-some_small_symbolic_operand (rtx x, enum machine_mode mode ATTRIBUTE_UNUSED)\n-{\n-  return for_each_rtx (&x, some_small_symbolic_operand_1, NULL);\n-}\n-\n static int\n split_small_symbolic_operand_1 (rtx *px, void *data ATTRIBUTE_UNUSED)\n {"}, {"sha": "09967b5841701bf28eba7fde5d88b2809fa5ad81", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "patch": "@@ -5348,7 +5348,7 @@\n \n (define_split\n   [(match_operand 0 \"some_small_symbolic_operand\" \"\")]\n-  \"TARGET_EXPLICIT_RELOCS && reload_completed\"\n+  \"\"\n   [(match_dup 0)]\n   \"operands[0] = split_small_symbolic_operand (operands[0]);\")\n "}, {"sha": "b060dd17741d7e5f3caabda5859ccb5fcdaa737f", "filename": "gcc/config/alpha/predicates.md", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2Fconfig%2Falpha%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04161e2bde5dee7dbe9c7863f3cb6f262c8d059c/gcc%2Fconfig%2Falpha%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fpredicates.md?ref=04161e2bde5dee7dbe9c7863f3cb6f262c8d059c", "patch": "@@ -550,3 +550,16 @@\n        (match_test \"register_operand (XEXP (op, 0), mode)\n \t\t    && GET_CODE (XEXP (op, 1)) == CONST_INT\n \t\t    && CONST_OK_FOR_LETTER_P (INTVAL (XEXP (op, 1)), 'K')\")))\n+\n+;; For TARGET_EXPLICIT_RELOCS, we don't obfuscate a SYMBOL_REF to a\n+;; small symbolic operand until after reload.  At which point we need\n+;; to replace (mem (symbol_ref)) with (mem (lo_sum $29 symbol_ref))\n+;; so that sched2 has the proper dependency information.  */\n+(define_predicate \"some_small_symbolic_operand\"\n+  (match_code \"set,parallel,prefetch,unspec,unspec_volatile\")\n+{\n+  /* Avoid search unless necessary.  */\n+  if (!TARGET_EXPLICIT_RELOCS || !reload_completed)\n+    return false;\n+  return for_each_rtx (&op, some_small_symbolic_operand_int, NULL);\n+})"}]}