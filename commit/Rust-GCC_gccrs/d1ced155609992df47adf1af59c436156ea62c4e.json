{"sha": "d1ced155609992df47adf1af59c436156ea62c4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFjZWQxNTU2MDk5OTJkZjQ3YWRmMWFmNTljNDM2MTU2ZWE2MmM0ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-03-02T23:35:12Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-03-02T23:35:12Z"}, "message": "config.gcc (sparc-*-linux*): Do not include sparc/gas.h.\n\n\t* config.gcc (sparc-*-linux*): Do not include sparc/gas.h.\n\t(sparc64-*-linux*): Likewise.\n\t(sparc64-*-solaris2*): Include assembler files before linker ones.\n\t(sparc-*-solaris2*): Simplify and reorder to match previous case.\n\t* config/sparc/gas.h: Delete.\n\t* config/sparc/sol2-64.h: Add copyright notice.\n\t* config/sparc/sol2-gas-bi.h: Likewise.\n\t* config/sparc/sol2-gld.h: Likewise.\n\t* config/sparc/sysv4.h (TARGET_ASM_NAMED_SECTION): Delete.\n\t* config/sparc/sol2.h (TARGET_ASM_NAMED_SECTION): Redefine.\n\t* config/sparc/sol2-gas.h (TARGET_ASM_NAMED_SECTION): Likewise.\n\t* config/sparc/sparc.c (TARGET_ASM_ALIGNED_SI_OP): Never redefine.\n\t(sparc_elf_asm_named_section): Rename into...\n\t(sparc_solaris_elf_asm_named_section): ...this.  Always define.\n\nFrom-SVN: r157181", "tree": {"sha": "affe7e2e519cadb2973b525c6a2f62b749b4bc62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/affe7e2e519cadb2973b525c6a2f62b749b4bc62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1ced155609992df47adf1af59c436156ea62c4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ced155609992df47adf1af59c436156ea62c4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1ced155609992df47adf1af59c436156ea62c4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1ced155609992df47adf1af59c436156ea62c4e/comments", "author": null, "committer": null, "parents": [{"sha": "ac4983563d9b1ae724334d4228b93facea4bb515", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4983563d9b1ae724334d4228b93facea4bb515", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4983563d9b1ae724334d4228b93facea4bb515"}], "stats": {"total": 151, "additions": 102, "deletions": 49}, "files": [{"sha": "07db7111dbc722745b62ff2f50b23d1e8974ed95", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -1,3 +1,20 @@\n+2010-03-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config.gcc (sparc-*-linux*): Do not include sparc/gas.h.\n+\t(sparc64-*-linux*): Likewise.\n+\t(sparc64-*-solaris2*): Include assembler files before linker ones.\n+\t(sparc-*-solaris2*): Simplify and reorder to match previous case.\n+\t* config/sparc/gas.h: Delete.\n+\t* config/sparc/sol2-64.h: Add copyright notice.\n+\t* config/sparc/sol2-gas-bi.h: Likewise.\n+\t* config/sparc/sol2-gld.h: Likewise.\n+\t* config/sparc/sysv4.h (TARGET_ASM_NAMED_SECTION): Delete.\n+\t* config/sparc/sol2.h (TARGET_ASM_NAMED_SECTION): Redefine.\n+\t* config/sparc/sol2-gas.h (TARGET_ASM_NAMED_SECTION): Likewise.\n+\t* config/sparc/sparc.c (TARGET_ASM_ALIGNED_SI_OP): Never redefine.\n+\t(sparc_elf_asm_named_section): Rename into...\n+\t(sparc_solaris_elf_asm_named_section): ...this.  Always define.\n+\n 2010-03-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c (override_options): Fix -mtune error message."}, {"sha": "c131b89d0b8d502849727cbb7404117f49b3d66d", "filename": "gcc/config.gcc", "status": "modified", "additions": 13, "deletions": 21, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -2362,7 +2362,7 @@ sparc-*-elf*)\n \textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n \t;;\n sparc-*-linux*)\t\t# SPARC's running GNU/Linux, libc6\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/gas.h linux.h glibc-stdint.h\"\n+\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h linux.h glibc-stdint.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \ttmake_file=\"${tmake_file} sparc/t-linux\"\n \tif test x$enable_targets = xall; then\n@@ -2390,12 +2390,12 @@ sparc64-*-solaris2* | sparcv9-*-solaris2*)\n \t\t;;\n \tesac\n \ttm_file=\"${tm_file} sparc/sol2.h sparc/sol2-64.h sparc/sol2-bi.h\"\n-\tif test x$gnu_ld = xyes; then\n-\t\ttm_file=\"${tm_file} sparc/sol2-gld.h sparc/sol2-gld-bi.h\"\n-\tfi\n \tif test x$gas = xyes; then\n \t\ttm_file=\"${tm_file} sparc/sol2-gas.h sparc/sol2-gas-bi.h\"\n \tfi\n+\tif test x$gnu_ld = xyes; then\n+\t\ttm_file=\"${tm_file} sparc/sol2-gld.h sparc/sol2-gld-bi.h\"\n+\tfi\n \ttm_file=\"${tm_file} tm-dwarf2.h\"\n \ttmake_file=\"t-sol2 sparc/t-sol2 sparc/t-sol2-64 sparc/t-crtfm\"\n \tif test x$gnu_ld = xyes; then\n@@ -2414,7 +2414,7 @@ sparc64-*-solaris2* | sparcv9-*-solaris2*)\n \tesac\n \t;;\n sparc-*-solaris2*)\n-\ttm_file=\"${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sol2.h\"\n+\ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sol2.h\"\n \tcase ${target} in\n \t*-*-solaris2.1[0-9]*)\n \t\ttm_file=\"${tm_file} sol2-10.h\"\n@@ -2424,28 +2424,20 @@ sparc-*-solaris2*)\n \t\tuse_gcc_stdint=provide\n \t\t;;\n \tesac\n-\ttm_file=\"${tm_file} sparc/sol2.h\"\n-\tif test x$gnu_ld = xyes; then\n-\t\ttm_file=\"${tm_file} sparc/sol2-gld.h\"\n-\tfi\n+\ttm_file=\"${tm_file} sparc/sol2.h sparc/sol2-bi.h\"\n \tif test x$gas = xyes; then\n-\t\ttm_file=\"${tm_file} sparc/sol2-gas.h\"\n+\t\ttm_file=\"${tm_file} sparc/sol2-gas.h sparc/sol2-gas-bi.h\"\n \tfi\n-\ttmake_file=\"t-sol2 sparc/t-sol2 sparc/t-crtfm\"\n+\tif test x$gnu_ld = xyes; then\n+\t\ttm_file=\"${tm_file} sparc/sol2-gld.h sparc/sol2-gld-bi.h\"\n+\tfi\n+\ttm_file=\"${tm_file} tm-dwarf2.h\"\n+\ttmake_file=\"t-sol2 sparc/t-sol2 sparc/t-sol2-64 sparc/t-crtfm\"\n \tif test x$gnu_ld = xyes; then\n \t\ttmake_file=\"$tmake_file t-slibgcc-elf-ver\"\n \telse\n \t\ttmake_file=\"$tmake_file t-slibgcc-sld\"\n \tfi\n-\ttm_file=\"sparc/biarch64.h ${tm_file} sparc/sol2-bi.h\"\n-\tif test x$gnu_ld = xyes; then\n-\t\ttm_file=\"${tm_file} sparc/sol2-gld-bi.h\"\n-\tfi\n-\tif test x$gas = xyes; then\n-\t\ttm_file=\"${tm_file} sparc/sol2-gas-bi.h\"\n-\tfi\n-\ttm_file=\"${tm_file} tm-dwarf2.h\"\n-\ttmake_file=\"$tmake_file sparc/t-sol2-64\"\n \ttest x$with_cpu != x || with_cpu=v9\n \tc_target_objs=\"sol2-c.o\"\n \tcxx_target_objs=\"sol2-c.o\"\n@@ -2482,7 +2474,7 @@ sparc64-*-freebsd*|ultrasparc-*-freebsd*)\n \tesac\n \t;;\n sparc64-*-linux*)\t\t# 64-bit SPARC's running GNU/Linux\n-\ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h sparc/gas.h linux.h glibc-stdint.h sparc/linux64.h\"\n+\ttm_file=\"sparc/biarch64.h ${tm_file} dbxelf.h elfos.h svr4.h sparc/sysv4.h linux.h glibc-stdint.h sparc/linux64.h\"\n \textra_options=\"${extra_options} sparc/long-double-switch.opt\"\n \ttmake_file=\"${tmake_file} sparc/t-linux sparc/t-linux64 sparc/t-crtfm\"\n \t;;"}, {"sha": "e3779293532d6cd4acfc9a796288879209da3942", "filename": "gcc/config/sparc/gas.h", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac4983563d9b1ae724334d4228b93facea4bb515/gcc%2Fconfig%2Fsparc%2Fgas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac4983563d9b1ae724334d4228b93facea4bb515/gcc%2Fconfig%2Fsparc%2Fgas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fgas.h?ref=ac4983563d9b1ae724334d4228b93facea4bb515", "patch": "@@ -1,6 +0,0 @@\n-/* Definitions of target machine for GCC, for SPARC\n-   using the GNU assembler.  */\n-\n-/* Switch into a generic section.  */\n-#undef TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION  default_elf_asm_named_section"}, {"sha": "cf0bbff1ec6b822283c1585ff69722c7b7b4e137", "filename": "gcc/config/sparc/sol2-64.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2-64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2-64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-64.h?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -1,5 +1,23 @@\n /* Definitions of target machine for GCC, for bi-arch SPARC\n-   running Solaris 2, defaulting to 64-bit code generation.  */\n+   running Solaris 2, defaulting to 64-bit code generation.\n+\n+   Copyright (C) 1999, 2010 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n \n #undef TARGET_DEFAULT\n #define TARGET_DEFAULT \\"}, {"sha": "001f978b889f8b1ad9641dd8fbd458ac358aedc9", "filename": "gcc/config/sparc/sol2-gas-bi.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2-gas-bi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2-gas-bi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-gas-bi.h?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -1,5 +1,23 @@\n /* Definitions of target machine for GCC, for bi-arch SPARC\n-   running Solaris 2 using the GNU assembler.  */\n+   running Solaris 2 using the GNU assembler.\n+\n+   Copyright (C) 2002, 2010 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n \n #undef  AS_SPARC64_FLAG\n #define AS_SPARC64_FLAG\t\"-TSO -64 -Av9\""}, {"sha": "e9f2490980f4a61f61e5d1a31244d6d80b356443", "filename": "gcc/config/sparc/sol2-gas.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2-gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2-gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-gas.h?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -34,3 +34,7 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_SUN_TLS 0\n #define TARGET_GNU_TLS 1\n #endif\n+\n+/* Use default ELF section syntax.  */\n+#undef TARGET_ASM_NAMED_SECTION\n+#define TARGET_ASM_NAMED_SECTION default_elf_asm_named_section"}, {"sha": "b63693c002fc60dd146f89af64e07d19084a96dd", "filename": "gcc/config/sparc/sol2-gld.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2-gld.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2-gld.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2-gld.h?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -1,5 +1,23 @@\n /* Definitions of target machine for GCC, for SPARC running Solaris 2\n-   using the GNU linker.  */\n+   using the GNU linker.\n+\n+   Copyright (C) 2002, 2010 Free Software Foundation, Inc.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n \n /* Undefine this so that attribute((init_priority)) works.  */\n #undef CTORS_SECTION_ASM_OP"}, {"sha": "21882ae206a56035fd6a14742f238ad915b6f07f", "filename": "gcc/config/sparc/sol2.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsol2.h?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -195,4 +195,8 @@ along with GCC; see the file COPYING3.  If not see\n     }\t\t\t\t\t\t\t\t\t\\\n   while (0)\n \n+/* Use Solaris ELF section syntax.  */\n+#undef TARGET_ASM_NAMED_SECTION\n+#define TARGET_ASM_NAMED_SECTION sparc_solaris_elf_asm_named_section\n+\n #define MD_UNWIND_SUPPORT \"config/sparc/sol2-unwind.h\""}, {"sha": "e4ef862c96d0c9f0b86134fa51cc0ae92f7e870b", "filename": "gcc/config/sparc/sparc.c", "status": "modified", "additions": 7, "deletions": 15, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsparc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.c?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -368,11 +368,8 @@ static int save_or_restore_regs (int, int, rtx, int, int);\n static void emit_save_or_restore_regs (int);\n static void sparc_asm_function_prologue (FILE *, HOST_WIDE_INT);\n static void sparc_asm_function_epilogue (FILE *, HOST_WIDE_INT);\n-#if defined (OBJECT_FORMAT_ELF)\n-static void sparc_elf_asm_named_section (const char *, unsigned int, tree)\n-    ATTRIBUTE_UNUSED;\n-#endif\n-\n+static void sparc_solaris_elf_asm_named_section (const char *, unsigned int,\n+\t\t\t\t\t\t tree) ATTRIBUTE_UNUSED;\n static int sparc_adjust_cost (rtx, rtx, rtx, int);\n static int sparc_issue_rate (void);\n static void sparc_sched_init (FILE *, int, int);\n@@ -464,14 +461,9 @@ static bool fpu_option_set = false;\n \n /* Initialize the GCC target structure.  */\n \n-/* The sparc default is to use .half rather than .short for aligned\n-   HI objects.  Use .word instead of .long on non-ELF systems.  */\n+/* The default is to use .half rather than .short for aligned HI objects.  */\n #undef TARGET_ASM_ALIGNED_HI_OP\n #define TARGET_ASM_ALIGNED_HI_OP \"\\t.half\\t\"\n-#ifndef OBJECT_FORMAT_ELF\n-#undef TARGET_ASM_ALIGNED_SI_OP\n-#define TARGET_ASM_ALIGNED_SI_OP \"\\t.word\\t\"\n-#endif\n \n #undef TARGET_ASM_UNALIGNED_HI_OP\n #define TARGET_ASM_UNALIGNED_HI_OP \"\\t.uahalf\\t\"\n@@ -8002,10 +7994,11 @@ sparc_profile_hook (int labelno)\n     }\n }\n \f\n-#if defined (OBJECT_FORMAT_ELF)\n+/* Solaris implementation of TARGET_ASM_NAMED_SECTION.  */\n+\n static void\n-sparc_elf_asm_named_section (const char *name, unsigned int flags,\n-\t\t\t     tree decl ATTRIBUTE_UNUSED)\n+sparc_solaris_elf_asm_named_section (const char *name, unsigned int flags,\n+\t\t\t\t     tree decl ATTRIBUTE_UNUSED)\n {\n   fprintf (asm_out_file, \"\\t.section\\t\\\"%s\\\"\", name);\n \n@@ -8022,7 +8015,6 @@ sparc_elf_asm_named_section (const char *name, unsigned int flags,\n \n   fputc ('\\n', asm_out_file);\n }\n-#endif /* OBJECT_FORMAT_ELF */\n \n /* We do not allow indirect calls to be optimized into sibling calls.\n "}, {"sha": "c78add484fe23c5292c7d28e846efac3ae1c4efd", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1ced155609992df47adf1af59c436156ea62c4e/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=d1ced155609992df47adf1af59c436156ea62c4e", "patch": "@@ -127,10 +127,6 @@ do { ASM_OUTPUT_ALIGN ((FILE), Pmode == SImode ? 2 : 3);\t\t\\\n #undef DTORS_SECTION_ASM_OP\n #define DTORS_SECTION_ASM_OP    \"\\t.section\\t\\\".dtors\\\",#alloc,#write\"\n \n-/* Switch into a generic section.  */\n-#undef TARGET_ASM_NAMED_SECTION\n-#define TARGET_ASM_NAMED_SECTION  sparc_elf_asm_named_section\n-\n #undef ASM_OUTPUT_ALIGNED_BSS\n #define ASM_OUTPUT_ALIGNED_BSS(FILE, DECL, NAME, SIZE, ALIGN) \\\n   asm_output_aligned_bss (FILE, DECL, NAME, SIZE, ALIGN)"}]}