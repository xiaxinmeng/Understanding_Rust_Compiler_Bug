{"sha": "e01a8140613da2a7aeab99362c38a0e7b2e1e9e6", "node_id": "C_kwDOANBUbNoAKGUwMWE4MTQwNjEzZGEyYTdhZWFiOTkzNjJjMzhhMGU3YjJlMWU5ZTY", "commit": {"author": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-05T10:11:34Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-04-12T12:20:28Z"}, "message": "privacy: reach: Rename ReachLevel enum", "tree": {"sha": "c6d7b981f9524e24ab72af6439244f82b92a7e3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c6d7b981f9524e24ab72af6439244f82b92a7e3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6/comments", "author": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8bf037fede04cd8539add51310464f121c7af613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bf037fede04cd8539add51310464f121c7af613", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bf037fede04cd8539add51310464f121c7af613"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "2a11b56f3ca89bd33018fcf654f263dc52f5d1b8", "filename": "gcc/rust/privacy/rust-privacy-ctx.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-privacy-ctx.h?ref=e01a8140613da2a7aeab99362c38a0e7b2e1e9e6", "patch": "@@ -28,8 +28,8 @@ namespace Privacy {\n  */\n enum ReachLevel\n {\n-  Private,\n-  Public,\n+  Unreachable,\n+  Reachable,\n };\n \n class PrivacyContext"}, {"sha": "5cab439739c225d85aecf4f25aee13720d22cc30", "filename": "gcc/rust/privacy/rust-reachability.cc", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6/gcc%2Frust%2Fprivacy%2Frust-reachability.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6/gcc%2Frust%2Fprivacy%2Frust-reachability.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-reachability.cc?ref=e01a8140613da2a7aeab99362c38a0e7b2e1e9e6", "patch": "@@ -56,16 +56,19 @@ ReachabilityVisitor::visit (HIR::TypeAlias &type_alias)\n void\n ReachabilityVisitor::visit (HIR::StructStruct &struct_item)\n {\n-  auto struct_reach = ReachLevel::Private;\n+  auto struct_reach = ReachLevel::Unreachable;\n   // FIXME: This feels very wrong. Should we check for `has_visibility`\n   // beforehand? Is it just private otherwise? Should the `HIR::Visibility` also\n   // keep variants for private items?\n   if (struct_item.get_visibility ().get_vis_type () == HIR::Visibility::NONE)\n-    struct_reach = ReachLevel::Public;\n+    struct_reach = ReachLevel::Reachable;\n \n   // FIXME: Here we want to update only if the visibility is higher\n   ctx.insert_reachability (struct_item.get_mappings (), struct_reach);\n \n+  // FIXME: We need to also visit the fields as they might have their own set\n+  // of reachability levels\n+\n   for (auto &field : struct_item.get_fields ())\n     ctx.insert_reachability (field.get_mappings (), struct_reach);\n "}, {"sha": "6d8edc409cc4d45c69f9386c55d23bf6762bfa1f", "filename": "gcc/rust/privacy/rust-reachability.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6/gcc%2Frust%2Fprivacy%2Frust-reachability.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e01a8140613da2a7aeab99362c38a0e7b2e1e9e6/gcc%2Frust%2Fprivacy%2Frust-reachability.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fprivacy%2Frust-reachability.h?ref=e01a8140613da2a7aeab99362c38a0e7b2e1e9e6", "patch": "@@ -37,7 +37,7 @@ class ReachabilityVisitor : public HIR::HIRVisItemVisitor\n {\n public:\n   ReachabilityVisitor (PrivacyContext &ctx)\n-    : current_level (ReachLevel::Private), ctx (ctx)\n+    : current_level (ReachLevel::Unreachable), ctx (ctx)\n   {}\n \n   virtual void visit (HIR::Module &mod);"}]}