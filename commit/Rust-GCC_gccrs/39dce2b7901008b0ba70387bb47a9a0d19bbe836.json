{"sha": "39dce2b7901008b0ba70387bb47a9a0d19bbe836", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlkY2UyYjc5MDEwMDhiMGJhNzAzODdiYjQ3YTlhMGQxOWJiZTgzNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-03-04T22:08:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-03-04T22:08:17Z"}, "message": "Fix constexpr handling of SAVE_EXPR in loops.\n\n\t* constexpr.c (struct constexpr_ctx): Add save_exprs field.\n\t(cxx_eval_loop_expr): Discard SAVE_EXPR values before looping.\n\t(cxx_eval_constant_expression) [SAVE_EXPR]: Add it to the set.\n\t(cxx_eval_outermost_constant_expr, is_sub_constant_expr): Initialize.\n\nFrom-SVN: r233981", "tree": {"sha": "7a6b28f37f7bbf989c2627fb453fe70b47529760", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a6b28f37f7bbf989c2627fb453fe70b47529760"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39dce2b7901008b0ba70387bb47a9a0d19bbe836", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dce2b7901008b0ba70387bb47a9a0d19bbe836", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39dce2b7901008b0ba70387bb47a9a0d19bbe836", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39dce2b7901008b0ba70387bb47a9a0d19bbe836/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "602045546463f33fb426f6f623ece65fb41b907e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/602045546463f33fb426f6f623ece65fb41b907e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/602045546463f33fb426f6f623ece65fb41b907e"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "08c25189649926414d0d5923901aee6d5e6165f0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dce2b7901008b0ba70387bb47a9a0d19bbe836/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dce2b7901008b0ba70387bb47a9a0d19bbe836/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=39dce2b7901008b0ba70387bb47a9a0d19bbe836", "patch": "@@ -1,5 +1,10 @@\n 2016-03-04  Jason Merrill  <jason@redhat.com>\n \n+\t* constexpr.c (struct constexpr_ctx): Add save_exprs field.\n+\t(cxx_eval_loop_expr): Discard SAVE_EXPR values before looping.\n+\t(cxx_eval_constant_expression) [SAVE_EXPR]: Add it to the set.\n+\t(cxx_eval_outermost_constant_expr, is_sub_constant_expr): Initialize.\n+\n \tPR c++/70067\n \t* tree.c (strip_typedefs): Handle TYPENAME_TYPE lookup finding the\n \tsame type."}, {"sha": "4fadc0fd5078dcfd99e090e1efa8beda4bbeb11d", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dce2b7901008b0ba70387bb47a9a0d19bbe836/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dce2b7901008b0ba70387bb47a9a0d19bbe836/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=39dce2b7901008b0ba70387bb47a9a0d19bbe836", "patch": "@@ -897,6 +897,9 @@ struct constexpr_ctx {\n   /* Values for any temporaries or local variables within the\n      constant-expression. */\n   hash_map<tree,tree> *values;\n+  /* SAVE_EXPRs that we've seen within the current LOOP_EXPR.  NULL if we\n+     aren't inside a loop.  */\n+  hash_set<tree> *save_exprs;\n   /* The CONSTRUCTOR we're currently building up for an aggregate\n      initializer.  */\n   tree ctor;\n@@ -3161,16 +3164,27 @@ cxx_eval_loop_expr (const constexpr_ctx *ctx, tree t,\n \t\t    bool *non_constant_p, bool *overflow_p,\n \t\t    tree *jump_target)\n {\n+  constexpr_ctx new_ctx = *ctx;\n+\n   tree body = TREE_OPERAND (t, 0);\n   while (true)\n     {\n-      cxx_eval_statement_list (ctx, body,\n+      hash_set<tree> save_exprs;\n+      new_ctx.save_exprs = &save_exprs;\n+\n+      cxx_eval_statement_list (&new_ctx, body,\n \t\t\t       non_constant_p, overflow_p, jump_target);\n       if (returns (jump_target) || breaks (jump_target) || *non_constant_p)\n \tbreak;\n+\n+      /* Forget saved values of SAVE_EXPRs.  */\n+      for (hash_set<tree>::iterator iter = save_exprs.begin();\n+\t   iter != save_exprs.end(); ++iter)\n+\tnew_ctx.values->remove (*iter);\n     }\n   if (breaks (jump_target))\n     *jump_target = NULL_TREE;\n+\n   return NULL_TREE;\n }\n \n@@ -3452,6 +3466,8 @@ cxx_eval_constant_expression (const constexpr_ctx *ctx, tree t,\n \t  r = cxx_eval_constant_expression (ctx, TREE_OPERAND (t, 0), false,\n \t\t\t\t\t    non_constant_p, overflow_p);\n \t  ctx->values->put (t, r);\n+\t  if (ctx->save_exprs)\n+\t    ctx->save_exprs->add (t);\n \t}\n       break;\n \n@@ -3875,7 +3891,10 @@ cxx_eval_outermost_constant_expr (tree t, bool allow_non_constant,\n   bool non_constant_p = false;\n   bool overflow_p = false;\n   hash_map<tree,tree> map;\n-  constexpr_ctx ctx = { NULL, &map, NULL, NULL, allow_non_constant, strict };\n+\n+  constexpr_ctx ctx = { NULL, &map, NULL, NULL, NULL,\n+\t\t\tallow_non_constant, strict };\n+\n   tree type = initialized_type (t);\n   tree r = t;\n   if (AGGREGATE_TYPE_P (type) || VECTOR_TYPE_P (type))\n@@ -3983,7 +4002,9 @@ is_sub_constant_expr (tree t)\n   bool non_constant_p = false;\n   bool overflow_p = false;\n   hash_map <tree, tree> map;\n-  constexpr_ctx ctx = { NULL, &map, NULL, NULL, true, true };\n+\n+  constexpr_ctx ctx = { NULL, &map, NULL, NULL, NULL, true, true };\n+\n   cxx_eval_constant_expression (&ctx, t, false, &non_constant_p,\n \t\t\t\t&overflow_p);\n   return !non_constant_p && !overflow_p;"}, {"sha": "5e7c3c97dc2dbe07f83390789607b88848cc4641", "filename": "gcc/testsuite/g++.dg/cpp1y/constexpr-loop3.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39dce2b7901008b0ba70387bb47a9a0d19bbe836/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-loop3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39dce2b7901008b0ba70387bb47a9a0d19bbe836/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-loop3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fconstexpr-loop3.C?ref=39dce2b7901008b0ba70387bb47a9a0d19bbe836", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile { target c++14 } }\n+\n+struct A\n+{\n+  int i;\n+};\n+\n+constexpr bool f()\n+{\n+  A ar[4] = { 1, 2, 3, 4 };\n+  A *ap = ar;\n+  int i = 0;\n+  do\n+    *ap++ = A{i};\n+  while (++i < 3);\n+  return (ar[0].i == 0\n+\t  && ar[1].i == 1\n+\t  && ar[2].i == 2\n+\t  && ar[3].i == 4);\n+}\n+\n+#define SA(X) static_assert((X),#X)\n+SA(f());"}]}