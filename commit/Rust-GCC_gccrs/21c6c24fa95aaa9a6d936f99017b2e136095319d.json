{"sha": "21c6c24fa95aaa9a6d936f99017b2e136095319d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjNmMyNGZhOTVhYWE5YTZkOTM2Zjk5MDE3YjJlMTM2MDk1MzE5ZA==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2014-11-25T20:20:10Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2014-11-25T20:20:10Z"}, "message": "re PR target/63527 (-fPIC uses 2 registers for GOT)\n\n2014-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR target/63527\n\t* ira-lives.c (process_bb_node_lives): Check and remove conflict\n\tof pic pseudo with pic hard reg.\n\nFrom-SVN: r218059", "tree": {"sha": "da4ef88a5e4243661576c12a6bcec4bc39fdc7e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da4ef88a5e4243661576c12a6bcec4bc39fdc7e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21c6c24fa95aaa9a6d936f99017b2e136095319d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c6c24fa95aaa9a6d936f99017b2e136095319d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c6c24fa95aaa9a6d936f99017b2e136095319d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c6c24fa95aaa9a6d936f99017b2e136095319d/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "70edbbaed6e55b884891a0c53ebd974e9e7246be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70edbbaed6e55b884891a0c53ebd974e9e7246be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70edbbaed6e55b884891a0c53ebd974e9e7246be"}], "stats": {"total": 41, "additions": 37, "deletions": 4}, "files": [{"sha": "849b70e2ce9dc3fb0b4c856cb0c07f656d8a9155", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c6c24fa95aaa9a6d936f99017b2e136095319d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c6c24fa95aaa9a6d936f99017b2e136095319d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=21c6c24fa95aaa9a6d936f99017b2e136095319d", "patch": "@@ -1,3 +1,9 @@\n+2014-11-25  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR target/63527\n+\t* ira-lives.c (process_bb_node_lives): Check and remove conflict\n+\tof pic pseudo with pic hard reg.\n+\n 2014-11-25  Rohit  <rohitarulraj@freescale.com>\n \n \tPR bootstrap/63703"}, {"sha": "368b1189db32a146ac986614eaf665598167f11b", "filename": "gcc/ira-lives.c", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c6c24fa95aaa9a6d936f99017b2e136095319d/gcc%2Fira-lives.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c6c24fa95aaa9a6d936f99017b2e136095319d/gcc%2Fira-lives.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-lives.c?ref=21c6c24fa95aaa9a6d936f99017b2e136095319d", "patch": "@@ -1123,8 +1123,10 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t pessimistic, but it probably doesn't matter much in practice.  */\n       FOR_BB_INSNS_REVERSE (bb, insn)\n \t{\n+\t  int regno;\n+\t  ira_allocno_t a;\n \t  df_ref def, use;\n-\t  bool call_p;\n+\t  bool call_p, clear_pic_use_conflict_p;\n \n \t  if (!NONDEBUG_INSN_P (insn))\n \t    continue;\n@@ -1134,6 +1136,21 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t\t     INSN_UID (insn), loop_tree_node->parent->loop_num,\n \t\t     curr_point);\n \n+\t  call_p = CALL_P (insn);\n+\t  clear_pic_use_conflict_p = false;\n+\t  /* Processing insn usage in call insn can create conflict\n+\t     with pic pseudo and pic hard reg and that is wrong.\n+\t     Check this situation and fix it at the end of the insn\n+\t     processing.  */\n+\t  if (call_p && pic_offset_table_rtx != NULL_RTX\n+\t      && (regno = REGNO (pic_offset_table_rtx)) >= FIRST_PSEUDO_REGISTER\n+\t      && (a = ira_curr_regno_allocno_map[regno]) != NULL)\n+\t    clear_pic_use_conflict_p\n+\t\t= (find_regno_fusage (insn, USE, REAL_PIC_OFFSET_TABLE_REGNUM)\n+\t\t   && ! TEST_HARD_REG_BIT (OBJECT_CONFLICT_HARD_REGS\n+\t\t\t\t\t   (ALLOCNO_OBJECT (a, 0)),\n+\t\t\t\t\t   REAL_PIC_OFFSET_TABLE_REGNUM));\n+\n \t  /* Mark each defined value as live.  We need to do this for\n \t     unused values because they still conflict with quantities\n \t     that are live at the time of the definition.\n@@ -1143,7 +1160,6 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t     on a call-clobbered register.  Marking the register as\n \t     live would stop us from allocating it to a call-crossing\n \t     allocno.  */\n-\t  call_p = CALL_P (insn);\n \t  FOR_EACH_INSN_DEF (def, insn)\n \t    if (!call_p || !DF_REF_FLAGS_IS_SET (def, DF_REF_MAY_CLOBBER))\n \t      mark_ref_live (def);\n@@ -1207,7 +1223,7 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t      EXECUTE_IF_SET_IN_SPARSESET (objects_live, i)\n \t        {\n \t\t  ira_object_t obj = ira_object_id_map[i];\n-\t\t  ira_allocno_t a = OBJECT_ALLOCNO (obj);\n+\t\t  a = OBJECT_ALLOCNO (obj);\n \t\t  int num = ALLOCNO_NUM (a);\n \t\t  HARD_REG_SET this_call_used_reg_set;\n \n@@ -1257,7 +1273,7 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t  make_early_clobber_and_input_conflicts ();\n \n \t  curr_point++;\n-\n+\t  \n \t  /* Mark each used value as live.  */\n \t  FOR_EACH_INSN_USE (use, insn)\n \t    mark_ref_live (use);\n@@ -1286,6 +1302,17 @@ process_bb_node_lives (ira_loop_tree_node_t loop_tree_node)\n \t\t}\n \t    }\n \n+\t  if (clear_pic_use_conflict_p)\n+\t    {\n+\t      regno = REGNO (pic_offset_table_rtx);\n+\t      a = ira_curr_regno_allocno_map[regno];\n+\t      CLEAR_HARD_REG_BIT (OBJECT_CONFLICT_HARD_REGS (ALLOCNO_OBJECT (a, 0)),\n+\t\t\t\t  REAL_PIC_OFFSET_TABLE_REGNUM);\n+\t      CLEAR_HARD_REG_BIT (OBJECT_TOTAL_CONFLICT_HARD_REGS\n+\t\t\t\t  (ALLOCNO_OBJECT (a, 0)),\n+\t\t\t\t  REAL_PIC_OFFSET_TABLE_REGNUM);\n+\t    }\n+\n \t  curr_point++;\n \t}\n "}]}