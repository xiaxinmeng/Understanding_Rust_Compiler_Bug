{"sha": "796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk2YTM1YjJiZDY2M2IxMDg2YTZkN2I0ZmVkMDNiYThlMWE2NTQ1Yw==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2021-03-02T10:43:30Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2021-03-02T10:58:31Z"}, "message": "IBM Z: arch14: Add command line options\n\nPrepare GCC for a future architecture extension.\n\ngcc/ChangeLog:\n\n\t* common/config/s390/s390-common.c (processor_flags_table): New entry.\n\t* config.gcc: Enable arch14 for --with-arch and --with-tune.\n\t* config/s390/driver-native.c (s390_host_detect_local_cpu): Pick\n\tarch14 for unknown CPU models.\n\t* config/s390/s390-opts.h (enum processor_type): Add PROCESSOR_ARCH14.\n\t* config/s390/s390.c (s390_issue_rate): Add case for PROCESSOR_ARCH14.\n\t(s390_get_sched_attrmask): Likewise.\n\t(s390_get_unit_mask): Likewise.\n\t* config/s390/s390.h (enum processor_flags): Add PF_NNPA and PF_ARCH14.\n\t(TARGET_CPU_ARCH14, TARGET_CPU_ARCH14_P, TARGET_CPU_NNPA)\n\t(TARGET_CPU_NNPA_P, TARGET_ARCH14, TARGET_ARCH14_P, TARGET_NNPA)\n\t(TARGET_NNPA_P): New macro definitions.\n\t* config/s390/s390.md (\"cpu_facility\", \"enabled\"): Add arch14 and nnpa.\n\t* config/s390/s390.opt: Add PROCESSOR_ARCH14.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/target-supports.exp: Add check for nnpa facility.", "tree": {"sha": "3924321d4fe0c8b560ab19cad3734c00e29dc780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3924321d4fe0c8b560ab19cad3734c00e29dc780"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff92ede8d269375f800e1b347a48f4698874b4a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff92ede8d269375f800e1b347a48f4698874b4a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff92ede8d269375f800e1b347a48f4698874b4a3"}], "stats": {"total": 64, "additions": 59, "deletions": 5}, "files": [{"sha": "b6bc8501742b4585b993f5b1bef16cf7cb54822b", "filename": "gcc/common/config/s390/s390-common.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fs390%2Fs390-common.c?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -48,8 +48,12 @@ EXPORTED_CONST int processor_flags_table[] =\n \t\t | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX\n \t\t | PF_Z13 | PF_VX | PF_VXE | PF_Z14,\n     /* z15 */    PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n+\t\t | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX\n+\t\t | PF_Z13 | PF_VX | PF_VXE | PF_Z14 | PF_VXE2 | PF_Z15,\n+    /* arch14 */ PF_IEEE_FLOAT | PF_ZARCH | PF_LONG_DISPLACEMENT\n \t\t | PF_EXTIMM | PF_DFP | PF_Z10 | PF_Z196 | PF_ZEC12 | PF_TX\n \t\t | PF_Z13 | PF_VX | PF_VXE | PF_Z14 | PF_VXE2 | PF_Z15\n+\t\t | PF_NNPA | PF_ARCH14\n   };\n \n /* Change optimizations to be performed, depending on the"}, {"sha": "966cbc888cb21f32ce3f5299a465bf286303a62b", "filename": "gcc/config.gcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -5122,7 +5122,7 @@ case \"${target}\" in\n \t\tfor which in arch tune; do\n \t\t\teval \"val=\\$with_$which\"\n \t\t\tcase ${val} in\n-\t\t\t\"\" | native | z900 | z990 | z9-109 | z9-ec | z10 | z196 | zEC12 | z13 | z14 | z15 | arch5 | arch6 | arch7 | arch8 | arch9 | arch10 | arch11 | arch12 | arch13 )\n+\t\t\t\"\" | native | z900 | z990 | z9-109 | z9-ec | z10 | z196 | zEC12 | z13 | z14 | z15 | arch5 | arch6 | arch7 | arch8 | arch9 | arch10 | arch11 | arch12 | arch13 | arch14 )\n \t\t\t\t# OK\n \t\t\t\t;;\n \t\t\t*)"}, {"sha": "c0247154c0bc6491a17a7fc8ebe10c919ca3c1a7", "filename": "gcc/config/s390/driver-native.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fdriver-native.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fdriver-native.c?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -124,7 +124,7 @@ s390_host_detect_local_cpu (int argc, const char **argv)\n \t      cpu = \"z15\";\n \t      break;\n \t    default:\n-\t      cpu = \"z15\";\n+\t      cpu = \"arch14\";\n \t      break;\n \t    }\n \t}"}, {"sha": "4141b4d36ddf4c5ad0e191deec57caf681cb9ea7", "filename": "gcc/config/s390/s390-opts.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390-opts.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390-opts.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-opts.h?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -38,6 +38,7 @@ enum processor_type\n   PROCESSOR_2964_Z13,\n   PROCESSOR_3906_Z14,\n   PROCESSOR_8561_Z15,\n+  PROCESSOR_ARCH14,\n   PROCESSOR_NATIVE,\n   PROCESSOR_max\n };"}, {"sha": "fcb26316632c02ca3e311bc921605f17c306aa9c", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -337,6 +337,7 @@ const struct s390_processor processor_table[] =\n   { \"z13\",    \"z13\",    PROCESSOR_2964_Z13,    &zEC12_cost,  11 },\n   { \"z14\",    \"arch12\", PROCESSOR_3906_Z14,    &zEC12_cost,  12 },\n   { \"z15\",    \"arch13\", PROCESSOR_8561_Z15,    &zEC12_cost,  13 },\n+  { \"arch14\", \"\",       PROCESSOR_ARCH14,      &zEC12_cost,  14 },\n   { \"native\", \"\",       PROCESSOR_NATIVE,      NULL,         0  }\n };\n \n@@ -8409,6 +8410,7 @@ s390_issue_rate (void)\n     case PROCESSOR_2827_ZEC12:\n     case PROCESSOR_2964_Z13:\n     case PROCESSOR_3906_Z14:\n+    case PROCESSOR_ARCH14:\n     default:\n       return 1;\n     }\n@@ -14768,6 +14770,7 @@ s390_get_sched_attrmask (rtx_insn *insn)\n \tmask |= S390_SCHED_ATTR_MASK_GROUPOFTWO;\n       break;\n     case PROCESSOR_8561_Z15:\n+    case PROCESSOR_ARCH14:\n       if (get_attr_z15_cracked (insn))\n \tmask |= S390_SCHED_ATTR_MASK_CRACKED;\n       if (get_attr_z15_expanded (insn))\n@@ -14815,6 +14818,7 @@ s390_get_unit_mask (rtx_insn *insn, int *units)\n \tmask |= 1 << 3;\n       break;\n     case PROCESSOR_8561_Z15:\n+    case PROCESSOR_ARCH14:\n       *units = 4;\n       if (get_attr_z15_unit_lsu (insn))\n \tmask |= 1 << 0;"}, {"sha": "991af969c87d058de9c88593fa39c1d372eef97c", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -41,7 +41,9 @@ enum processor_flags\n   PF_Z14 = 2048,\n   PF_VXE = 4096,\n   PF_VXE2 = 8192,\n-  PF_Z15 = 16384\n+  PF_Z15 = 16384,\n+  PF_NNPA = 32768,\n+  PF_ARCH14 = 65536\n };\n \n /* This is necessary to avoid a warning about comparing different enum\n@@ -108,6 +110,14 @@ enum processor_flags\n \t(s390_arch_flags & PF_VXE2)\n #define TARGET_CPU_VXE2_P(opts) \\\n \t(opts->x_s390_arch_flags & PF_VXE2)\n+#define TARGET_CPU_ARCH14 \\\n+\t(s390_arch_flags & PF_ARCH14)\n+#define TARGET_CPU_ARCH14_P(opts) \\\n+\t(opts->x_s390_arch_flags & PF_ARCH14)\n+#define TARGET_CPU_NNPA \\\n+\t(s390_arch_flags & PF_NNPA)\n+#define TARGET_CPU_NNPA_P(opts) \\\n+\t(opts->x_s390_arch_flags & PF_NNPA)\n \n #define TARGET_HARD_FLOAT_P(opts) (!TARGET_SOFT_FLOAT_P(opts))\n \n@@ -167,6 +177,14 @@ enum processor_flags\n \t(TARGET_VX && TARGET_CPU_VXE2)\n #define TARGET_VXE2_P(opts)\t\t\t\t\t\t\\\n \t(TARGET_VX_P (opts) && TARGET_CPU_VXE2_P (opts))\n+#define TARGET_ARCH14 (TARGET_ZARCH && TARGET_CPU_ARCH14)\n+#define TARGET_ARCH14_P(opts)\t\t\t\t\t\t\\\n+\t(TARGET_ZARCH_P (opts->x_target_flags) && TARGET_CPU_ARCH14_P (opts))\n+#define TARGET_NNPA\t\t\t\t\t\\\n+\t(TARGET_ZARCH && TARGET_CPU_NNPA)\n+#define TARGET_NNPA_P(opts)\t\t\t\t\t\t\\\n+\t(TARGET_ZARCH_P (opts) && TARGET_CPU_NNPA_P (opts))\n+\n #if defined(HAVE_AS_VECTOR_LOADSTORE_ALIGNMENT_HINTS_ON_Z13)\n #define TARGET_VECTOR_LOADSTORE_ALIGNMENT_HINTS TARGET_Z13\n #elif defined(HAVE_AS_VECTOR_LOADSTORE_ALIGNMENT_HINTS)"}, {"sha": "1e17a77cce60a800d2cc1ae8bb0ba1252e823b4c", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -518,7 +518,7 @@\n   (const (symbol_ref \"s390_tune_attr\")))\n \n (define_attr \"cpu_facility\"\n-  \"standard,ieee,zarch,cpu_zarch,longdisp,extimm,dfp,z10,z196,zEC12,vx,z13,z14,vxe,z15,vxe2\"\n+  \"standard,ieee,zarch,cpu_zarch,longdisp,extimm,dfp,z10,z196,zEC12,vx,z13,z14,vxe,z15,vxe2,arch14,nnpa\"\n   (const_string \"standard\"))\n \n (define_attr \"enabled\" \"\"\n@@ -583,7 +583,15 @@\n          (and (eq_attr \"cpu_facility\" \"vxe2\")\n \t      (match_test \"TARGET_VXE2\"))\n \t (const_int 1)\n-\t ]\n+\n+\t (and (eq_attr \"cpu_facility\" \"arch14\")\n+\t      (match_test \"TARGET_ARCH14\"))\n+\t (const_int 1)\n+\n+         (and (eq_attr \"cpu_facility\" \"nnpa\")\n+\t      (match_test \"TARGET_NNPA\"))\n+\t (const_int 1)\n+]\n \t(const_int 0)))\n \n ;; Whether an instruction supports relative long addressing."}, {"sha": "1027f6ab33dee877b887e69a2b221032098ba631", "filename": "gcc/config/s390/s390.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Fconfig%2Fs390%2Fs390.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.opt?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -115,6 +115,9 @@ Enum(processor_type) String(z15) Value(PROCESSOR_8561_Z15)\n EnumValue\n Enum(processor_type) String(arch13) Value(PROCESSOR_8561_Z15)\n \n+EnumValue\n+Enum(processor_type) String(arch14) Value(PROCESSOR_ARCH14)\n+\n EnumValue\n Enum(processor_type) String(native) Value(PROCESSOR_NATIVE) DriverOnly\n "}, {"sha": "c797db4654523cefd8dbcf336ba582788771fe5e", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/796a35b2bd663b1086a6d7b4fed03ba8e1a6545c/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=796a35b2bd663b1086a6d7b4fed03ba8e1a6545c", "patch": "@@ -10264,6 +10264,22 @@ proc check_effective_target_s390_vxe2 { } {\n     } \"-march=arch13 -mzarch\" ]\n }\n \n+# Same as above but for the arch14 NNPA facility.\n+proc check_effective_target_s390_nnpa { } {\n+    if ![istarget s390*-*-*] then {\n+\treturn 0;\n+    }\n+\n+    return [check_runtime s390_check_nnpa {\n+\tint main (void)\n+\t{\n+\t    asm (\"vzero %%v24\\n\\t\"\n+\t\t \"vcrnf %%v24,%%v24,%%v24,0,2\" : : : \"v24\");\n+\t    return 0;\n+\t}\n+    } \"-march=arch14 -mzarch\" ]\n+}\n+\n #For versions of ARM architectures that have hardware div insn,\n #disable the divmod transform\n "}]}