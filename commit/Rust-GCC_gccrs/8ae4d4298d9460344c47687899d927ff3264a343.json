{"sha": "8ae4d4298d9460344c47687899d927ff3264a343", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFlNGQ0Mjk4ZDk0NjAzNDRjNDc2ODc4OTlkOTI3ZmYzMjY0YTM0Mw==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-01-03T10:19:03Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-01-03T10:19:03Z"}, "message": "ipa-utils.c (scale_ipa_profile_for_fn): Break out from ...\n\n\t* ipa-utils.c (scale_ipa_profile_for_fn): Break out from ...\n\t(ipa_merge_profiles): ... here; do not ICE on thunks and aliases.\n\nFrom-SVN: r267549", "tree": {"sha": "0f874eba84099b42b7470f9a09b97a0f2aeb1cae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f874eba84099b42b7470f9a09b97a0f2aeb1cae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ae4d4298d9460344c47687899d927ff3264a343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae4d4298d9460344c47687899d927ff3264a343", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ae4d4298d9460344c47687899d927ff3264a343", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ae4d4298d9460344c47687899d927ff3264a343/comments", "author": null, "committer": null, "parents": [{"sha": "cc3dac976e2b61fcf3c0236255a6dcc99e3bafe8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc3dac976e2b61fcf3c0236255a6dcc99e3bafe8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc3dac976e2b61fcf3c0236255a6dcc99e3bafe8"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "d1b1876354d685464b170796e26ec2a43362b0b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae4d4298d9460344c47687899d927ff3264a343/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae4d4298d9460344c47687899d927ff3264a343/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8ae4d4298d9460344c47687899d927ff3264a343", "patch": "@@ -1,3 +1,8 @@\n+2019-01-03  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-utils.c (scale_ipa_profile_for_fn): Break out from ...\n+\t(ipa_merge_profiles): ... here; do not ICE on thunks and aliases.\n+\n 2019-01-02  Martin Sebor  <msebor@redhat.com>\n             Jeff Law  <law@redhat.com>\n "}, {"sha": "aebcb8ea91d440a9c0f86ab68f66cc518eeeea25", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 23, "deletions": 10, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ae4d4298d9460344c47687899d927ff3264a343/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ae4d4298d9460344c47687899d927ff3264a343/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=8ae4d4298d9460344c47687899d927ff3264a343", "patch": "@@ -375,6 +375,20 @@ get_base_var (tree t)\n   return t;\n }\n \n+/* Scale function of calls in NODE by ratio ORIG_COUNT/NODE->count.  */\n+\n+void\n+scale_ipa_profile_for_fn (struct cgraph_node *node, profile_count orig_count)\n+{\n+  profile_count to = node->count;\n+  profile_count::adjust_for_ipa_scaling (&to, &orig_count);\n+  struct cgraph_edge *e;\n+  \n+  for (e = node->callees; e; e = e->next_callee)\n+    e->count = e->count.apply_scale (to, orig_count);\n+  for (e = node->indirect_calls; e; e = e->next_callee)\n+    e->count = e->count.apply_scale (to, orig_count);\n+}\n \n /* SRC and DST are going to be merged.  Take SRC's profile and merge it into\n    DST so it is not going to be lost.  Possibly destroy SRC's body on the way\n@@ -424,6 +438,14 @@ ipa_merge_profiles (struct cgraph_node *dst,\n   else \n     dst->count = src->count.ipa ();\n \n+  /* First handle functions with no gimple body.  */\n+  if (dst->thunk.thunk_p || dst->alias\n+      || src->thunk.thunk_p || src->alias)\n+    {\n+      scale_ipa_profile_for_fn (dst, orig_count);\n+      return;\n+    }\n+\n   /* This is ugly.  We need to get both function bodies into memory.\n      If declaration is merged, we need to duplicate it to be able\n      to load body that is being replaced.  This makes symbol table\n@@ -652,16 +674,7 @@ ipa_merge_profiles (struct cgraph_node *dst,\n   /* We can't update CFG profile, but we can scale IPA profile. CFG\n      will be scaled according to dst->count after IPA passes.  */\n   else\n-    {\n-      profile_count to = dst->count;\n-      profile_count::adjust_for_ipa_scaling (&to, &orig_count);\n-      struct cgraph_edge *e;\n-      \n-      for (e = dst->callees; e; e = e->next_callee)\n-\te->count = e->count.apply_scale (to, orig_count);\n-      for (e = dst->indirect_calls; e; e = e->next_callee)\n-\te->count = e->count.apply_scale (to, orig_count);\n-    }\n+    scale_ipa_profile_for_fn (dst, orig_count);\n   src->decl = oldsrcdecl;\n }\n "}]}