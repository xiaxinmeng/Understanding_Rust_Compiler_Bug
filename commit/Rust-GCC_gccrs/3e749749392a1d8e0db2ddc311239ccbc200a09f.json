{"sha": "3e749749392a1d8e0db2ddc311239ccbc200a09f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U3NDk3NDkzOTJhMWQ4ZTBkYjJkZGMzMTEyMzljY2JjMjAwYTA5Zg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2013-11-22T19:37:00Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-11-22T19:37:00Z"}, "message": "re PR rtl-optimization/10474 (shrink wrapping for functions)\n\n\tPR rtl-optimization/10474\n\t* ira.c (interesting_dest_for_shprep_1): New function.\n\t(interesting_dest_for_shprep): Use interesting_dest_for_shprep_1,\n\talso check parallels.\n\ntestsuite/\n\t* gcc.dg/pr10474.c: Also test ppc64.\n\t* gcc.dg/ira-shrinkwrap-prep-1.c: Also tes ppc64, changed all ints\n        to longs.\n\t* gcc.dg/ira-shrinkwrap-prep-2.c: Likewise.\n\nFrom-SVN: r205281", "tree": {"sha": "04370e9177d4c1329d1c272aae76514f302647b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04370e9177d4c1329d1c272aae76514f302647b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e749749392a1d8e0db2ddc311239ccbc200a09f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e749749392a1d8e0db2ddc311239ccbc200a09f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e749749392a1d8e0db2ddc311239ccbc200a09f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e749749392a1d8e0db2ddc311239ccbc200a09f/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d4fdb4dfd1cf2a563f4caa4effc35bd896aaf8bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4fdb4dfd1cf2a563f4caa4effc35bd896aaf8bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4fdb4dfd1cf2a563f4caa4effc35bd896aaf8bd"}], "stats": {"total": 91, "additions": 68, "deletions": 23}, "files": [{"sha": "afc9664af771549866420d172fda7aae56d23bb1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e749749392a1d8e0db2ddc311239ccbc200a09f", "patch": "@@ -1,3 +1,10 @@\n+2013-11-22  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR rtl-optimization/10474\n+\t* ira.c (interesting_dest_for_shprep_1): New function.\n+\t(interesting_dest_for_shprep): Use interesting_dest_for_shprep_1,\n+\talso check parallels.\n+\n 2013-11-22  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadedge.c (record_temporary_equivalence): Handle"}, {"sha": "2902ebe0a8bed29171944593891f146ad938d639", "filename": "gcc/ira.c", "status": "modified", "additions": 39, "deletions": 8, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Fira.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Fira.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira.c?ref=3e749749392a1d8e0db2ddc311239ccbc200a09f", "patch": "@@ -4847,17 +4847,13 @@ find_moveable_pseudos (void)\n   free_dominance_info (CDI_DOMINATORS);\n }\n \n-\n-/* If insn is interesting for parameter range-splitting shring-wrapping\n-   preparation, i.e. it is a single set from a hard register to a pseudo, which\n-   is live at CALL_DOM, return the destination.  Otherwise return NULL.  */\n+/* If SET pattern SET is an assignment from a hard register to a pseudo which\n+   is live at CALL_DOM (if non-NULL, otherwise this check is omitted), return\n+   the destination.  Otherwise return NULL.  */\n \n static rtx\n-interesting_dest_for_shprep (rtx insn, basic_block call_dom)\n+interesting_dest_for_shprep_1 (rtx set, basic_block call_dom)\n {\n-  rtx set = single_set (insn);\n-  if (!set)\n-    return NULL;\n   rtx src = SET_SRC (set);\n   rtx dest = SET_DEST (set);\n   if (!REG_P (src) || !HARD_REGISTER_P (src)\n@@ -4867,6 +4863,41 @@ interesting_dest_for_shprep (rtx insn, basic_block call_dom)\n   return dest;\n }\n \n+/* If insn is interesting for parameter range-splitting shring-wrapping\n+   preparation, i.e. it is a single set from a hard register to a pseudo, which\n+   is live at CALL_DOM (if non-NULL, otherwise this check is omitted), or a\n+   parallel statement with only one such statement, return the destination.\n+   Otherwise return NULL.  */\n+\n+static rtx\n+interesting_dest_for_shprep (rtx insn, basic_block call_dom)\n+{\n+  if (!INSN_P (insn))\n+    return NULL;\n+  rtx pat = PATTERN (insn);\n+  if (GET_CODE (pat) == SET)\n+    return interesting_dest_for_shprep_1 (pat, call_dom);\n+\n+  if (GET_CODE (pat) != PARALLEL)\n+    return NULL;\n+  rtx ret = NULL;\n+  for (int i = 0; i < XVECLEN (pat, 0); i++)\n+    {\n+      rtx sub = XVECEXP (pat, 0, i);\n+      if (GET_CODE (sub) == USE || GET_CODE (sub) == CLOBBER)\n+\tcontinue;\n+      if (GET_CODE (sub) != SET\n+\t  || side_effects_p (sub))\n+\treturn NULL;\n+      rtx dest = interesting_dest_for_shprep_1 (sub, call_dom);\n+      if (dest && ret)\n+\treturn NULL;\n+      if (dest)\n+\tret = dest;\n+    }\n+  return ret;\n+}\n+\n /* Split live ranges of pseudos that are loaded from hard registers in the\n    first BB in a BB that dominates all non-sibling call if such a BB can be\n    found and is not in a loop.  Return true if the function has made any"}, {"sha": "7d895c5f6c264db216843f977763f5fae889a46a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3e749749392a1d8e0db2ddc311239ccbc200a09f", "patch": "@@ -1,3 +1,10 @@\n+2013-11-22  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* gcc.dg/pr10474.c: Also test ppc64.\n+\t* gcc.dg/ira-shrinkwrap-prep-1.c: Also tes ppc64, changed all ints\n+        to longs.\n+\t* gcc.dg/ira-shrinkwrap-prep-2.c: Likewise.\n+\n 2013-11-22  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \tPR target/59054"}, {"sha": "54d3e76157338653bb3b8cff31d3b58eae1c02f9", "filename": "gcc/testsuite/gcc.dg/ira-shrinkwrap-prep-1.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-1.c?ref=3e749749392a1d8e0db2ddc311239ccbc200a09f", "patch": "@@ -1,18 +1,18 @@\n-/* { dg-do compile { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do compile { target { { x86_64-*-* && lp64 } || { powerpc*-*-* && lp64 } } } } */\n /* { dg-options \"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue\"  } */\n \n-int __attribute__((noinline, noclone))\n-foo (int a)\n+long __attribute__((noinline, noclone))\n+foo (long a)\n {\n   return a + 5;\n }\n \n-static int g;\n+static long g;\n \n-int __attribute__((noinline, noclone))\n-bar (int a)\n+long __attribute__((noinline, noclone))\n+bar (long a)\n {\n-  int r;\n+  long r;\n \n   if (a)\n     {"}, {"sha": "ed08494cfa0d39a697c6b0ece6a3a71b76150730", "filename": "gcc/testsuite/gcc.dg/ira-shrinkwrap-prep-2.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fira-shrinkwrap-prep-2.c?ref=3e749749392a1d8e0db2ddc311239ccbc200a09f", "patch": "@@ -1,18 +1,18 @@\n-/* { dg-do compile { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do compile { target { { x86_64-*-* && lp64 } || { powerpc*-*-* && lp64 } } } } */\n /* { dg-options \"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue\"  } */\n \n-int __attribute__((noinline, noclone))\n-foo (int a)\n+long __attribute__((noinline, noclone))\n+foo (long a)\n {\n   return a + 5;\n }\n \n-static int g;\n+static long g;\n \n-int __attribute__((noinline, noclone))\n-bar (int a)\n+long __attribute__((noinline, noclone))\n+bar (long a)\n {\n-  int r;\n+  long r;\n \n   if (a)\n     {"}, {"sha": "77ccc4606ed26f428246b27db8df302cba30db3e", "filename": "gcc/testsuite/gcc.dg/pr10474.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e749749392a1d8e0db2ddc311239ccbc200a09f/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10474.c?ref=3e749749392a1d8e0db2ddc311239ccbc200a09f", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-do compile { target { x86_64-*-* && lp64 } } } */\n+/* { dg-do compile { target { { x86_64-*-* && lp64 } || { powerpc*-*-* && lp64 } } } } */\n /* { dg-options \"-O3 -fdump-rtl-pro_and_epilogue\"  } */\n \n void f(int *i)"}]}