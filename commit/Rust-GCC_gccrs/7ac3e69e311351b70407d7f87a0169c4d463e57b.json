{"sha": "7ac3e69e311351b70407d7f87a0169c4d463e57b", "node_id": "C_kwDOANBUbNoAKDdhYzNlNjllMzExMzUxYjcwNDA3ZDdmODdhMDE2OWM0ZDQ2M2U1N2I", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-30T08:25:23Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2023-01-30T09:50:52Z"}, "message": "tree-optimization/108574 - wrong-code with PRE PHI node processing\n\nThe PR108523 was too optimistic in replacing the same value with\nan equivalence from a possibly not taken edge.  The following\nrectifies this and instead refrains from using the equivalence in\nthe problematic cases.\n\n\tPR tree-optimization/108574\n\t* tree-ssa-sccvn.cc (visit_phi): Instead of swapping\n\tsameval and def, ignore the equivalence if there's the\n\tdanger of oscillating between two values.\n\n\t* gcc.dg/torture/pr108574-1.c: New testcase.\n\t* gcc.dg/torture/pr108574-2.c: Likewise.\n\t* gcc.dg/torture/pr108574-3.c: Likewise.", "tree": {"sha": "3435a90ad55baa9432ac21daaa9f636b25629661", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3435a90ad55baa9432ac21daaa9f636b25629661"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ac3e69e311351b70407d7f87a0169c4d463e57b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac3e69e311351b70407d7f87a0169c4d463e57b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ac3e69e311351b70407d7f87a0169c4d463e57b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac3e69e311351b70407d7f87a0169c4d463e57b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3cd08f7168c196d7a481b9ed9f4289fd1f14eea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd08f7168c196d7a481b9ed9f4289fd1f14eea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd08f7168c196d7a481b9ed9f4289fd1f14eea8"}], "stats": {"total": 82, "additions": 76, "deletions": 6}, "files": [{"sha": "7066b5ee2a2164ddbd752700d5f6e8341b8b9c7e", "filename": "gcc/testsuite/gcc.dg/torture/pr108574-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac3e69e311351b70407d7f87a0169c4d463e57b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac3e69e311351b70407d7f87a0169c4d463e57b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-1.c?ref=7ac3e69e311351b70407d7f87a0169c4d463e57b", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do run } */\n+\n+int a = 1, b, c = 2, d;\n+int main() {\n+  if (b)\n+    goto L2;\n+ L1:\n+  {\n+    int e = c;\n+    a = 1 % a;\n+    while (e && 1 <= d)\n+      ;\n+    d >= b;\n+  L2:\n+    if (1 >= e)\n+      goto L1;\n+  }\n+  return 0;\n+}"}, {"sha": "1e38d087646961dd7fc56a282d74678a404204dc", "filename": "gcc/testsuite/gcc.dg/torture/pr108574-2.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac3e69e311351b70407d7f87a0169c4d463e57b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac3e69e311351b70407d7f87a0169c4d463e57b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-2.c?ref=7ac3e69e311351b70407d7f87a0169c4d463e57b", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+\n+int a, b, c, d, e, f, g = -1, h;\n+void l() {\n+  if (!e)\n+    goto i;\n+  for (; g; g++) {\n+    b = ~d;\n+    int j = 0, k = 1;\n+    if (k && (b || f))\n+      j = b;\n+  i:\n+    a = ~j;\n+  }\n+}\n+int main() {\n+  h = 3;\n+  for (; h; h--) {\n+    e = 1;\n+    int m = ~a, n = 1 % m;\n+    c = n;\n+    l();\n+  }\n+  return 0;\n+}"}, {"sha": "3c9146e31ac86c67b2d38b733b72bfa9a8fea40d", "filename": "gcc/testsuite/gcc.dg/torture/pr108574-3.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac3e69e311351b70407d7f87a0169c4d463e57b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac3e69e311351b70407d7f87a0169c4d463e57b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr108574-3.c?ref=7ac3e69e311351b70407d7f87a0169c4d463e57b", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do run } */\n+\n+int a = 3557301289, d;\n+char b, f;\n+unsigned short c = 241;\n+short e, g;\n+static void h() {\n+  if (!a)\n+    goto i;\n+  b = a;\n+  for (; a < 2; a = b) {\n+    unsigned short j;\n+    if (c || !g) {\n+      j = c;\n+    i:\n+      e = j;\n+    }\n+    f = j;\n+    d = ~(f & ~2880764155);\n+    while (d > -2316069)\n+      ;\n+  }\n+}\n+int main() {\n+  h();\n+  return 0;\n+}"}, {"sha": "028bedbc9a0f292fd473b485a95e8b9ec41f255f", "filename": "gcc/tree-ssa-sccvn.cc", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac3e69e311351b70407d7f87a0169c4d463e57b/gcc%2Ftree-ssa-sccvn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac3e69e311351b70407d7f87a0169c4d463e57b/gcc%2Ftree-ssa-sccvn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.cc?ref=7ac3e69e311351b70407d7f87a0169c4d463e57b", "patch": "@@ -5908,7 +5908,8 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n \t\tif (! val && vnresult && vnresult->predicated_values)\n \t\t  {\n \t\t    val = vn_nary_op_get_predicated_value (vnresult, e->src);\n-\t\t    if (val && integer_truep (val))\n+\t\t    if (val && integer_truep (val)\n+\t\t\t&& !(sameval_e && (sameval_e->flags & EDGE_DFS_BACK)))\n \t\t      {\n \t\t\tif (dump_file && (dump_flags & TDF_DETAILS))\n \t\t\t  {\n@@ -5919,16 +5920,15 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n \t\t\t    fprintf (dump_file, \" are equal on edge %d -> %d\\n\",\n \t\t\t\t     e->src->index, e->dest->index);\n \t\t\t  }\n-\t\t\tif (sameval_e && (sameval_e->flags & EDGE_DFS_BACK))\n-\t\t\t  sameval = def;\n \t\t\tcontinue;\n \t\t      }\n \t\t    /* If on all previous edges the value was equal to def\n \t\t       we can change sameval to def.  */\n \t\t    if (EDGE_COUNT (bb->preds) == 2\n \t\t\t&& (val = vn_nary_op_get_predicated_value\n \t\t\t\t    (vnresult, EDGE_PRED (bb, 0)->src))\n-\t\t\t&& integer_truep (val))\n+\t\t\t&& integer_truep (val)\n+\t\t\t&& !(e->flags & EDGE_DFS_BACK))\n \t\t      {\n \t\t\tif (dump_file && (dump_flags & TDF_DETAILS))\n \t\t\t  {\n@@ -5940,8 +5940,7 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n \t\t\t\t     EDGE_PRED (bb, 0)->src->index,\n \t\t\t\t     EDGE_PRED (bb, 0)->dest->index);\n \t\t\t  }\n-\t\t\tif (!(e->flags & EDGE_DFS_BACK))\n-\t\t\t  sameval = def;\n+\t\t\tsameval = def;\n \t\t\tcontinue;\n \t\t      }\n \t\t  }"}]}