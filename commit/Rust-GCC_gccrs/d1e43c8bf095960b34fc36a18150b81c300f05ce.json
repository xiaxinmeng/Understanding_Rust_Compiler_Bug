{"sha": "d1e43c8bf095960b34fc36a18150b81c300f05ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFlNDNjOGJmMDk1OTYwYjM0ZmMzNmExODE1MGI4MWMzMDBmMDVjZQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@wolery.cumb.org", "date": "2000-06-29T19:55:26Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2000-06-29T19:55:26Z"}, "message": "Move the c-torture/noncompile tests to either gcc.dg/cpp or a new gcc.dg/noncompile directory...\n\n\tMove the c-torture/noncompile tests to either gcc.dg/cpp or a new\n\tgcc.dg/noncompile directory, depending on whether they're\n\tpreprocessor tests or not.  Annotate all the tests for the dg\n\tframework.\n\n\t* gcc.c-torture/noncompile/noncompile.exp: Delete.\n\t* gcc.dg/noncompile/noncompile.exp: New.\n\n\t* Moved files:\n\tOld name\t\t\t\tNew name\n\tgcc.c-torture/noncompile/920507-1.c\tgcc.dg/noncompile/920507-1.c\n\tgcc.c-torture/noncompile/920616-2.c\tgcc.dg/noncompile/920616-2.c\n\tgcc.c-torture/noncompile/920721-2.c\tgcc.dg/noncompile/920721-2.c\n\tgcc.c-torture/noncompile/920824-1.c\tgcc.dg/noncompile/920824-1.c\n\tgcc.c-torture/noncompile/920923-1.c\tgcc.dg/noncompile/920923-1.c\n\tgcc.c-torture/noncompile/921102-1.c\tgcc.dg/noncompile/921102-1.c\n\tgcc.c-torture/noncompile/921116-1.c\tgcc.dg/noncompile/921116-1.c\n\tgcc.c-torture/noncompile/930301-1.c\tgcc.dg/noncompile/930301-1.c\n\tgcc.c-torture/noncompile/930622-1.c\tgcc.dg/noncompile/930622-1.c\n\tgcc.c-torture/noncompile/930622-2.c\tgcc.dg/noncompile/930622-2.c\n\tgcc.c-torture/noncompile/930714-1.c\tgcc.dg/noncompile/930714-1.c\n\tgcc.c-torture/noncompile/931203-1.c\tgcc.dg/noncompile/931203-1.c\n\tgcc.c-torture/noncompile/940112-1.c\tgcc.dg/noncompile/940112-1.c\n\tgcc.c-torture/noncompile/940227-1.c\tgcc.dg/noncompile/940227-1.c\n\tgcc.c-torture/noncompile/940510-1.c\tgcc.dg/noncompile/940510-1.c\n\tgcc.c-torture/noncompile/950825-1.c\tgcc.dg/noncompile/950825-1.c\n\tgcc.c-torture/noncompile/950921-1.c\tgcc.dg/noncompile/950921-1.c\n\tgcc.c-torture/noncompile/951123-1.c\tgcc.dg/noncompile/951123-1.c\n\tgcc.c-torture/noncompile/971104-1.c\tgcc.dg/noncompile/971104-1.c\n\tgcc.c-torture/noncompile/990416-1.c\tgcc.dg/noncompile/990416-1.c\n\tgcc.c-torture/noncompile/init-1.c\tgcc.dg/noncompile/init-1.c\n\tgcc.c-torture/noncompile/init-2.c\tgcc.dg/noncompile/init-2.c\n\tgcc.c-torture/noncompile/invalid_asm.c\tgcc.dg/noncompile/invalid_asm.c\n\tgcc.c-torture/noncompile/va-arg-1.c\tgcc.dg/noncompile/va-arg-1.c\n\n\tgcc.c-torture/noncompile/940712-1.c\tgcc.dg/cpp/19940712-1.c\n\tgcc.c-torture/noncompile/940712-1.h\tgcc.dg/cpp/19940712-1.h\n\tgcc.c-torture/noncompile/940712-1a.h\tgcc.dg/cpp/19940712-1a.h\n\tgcc.c-torture/noncompile/940712-1b.h\tgcc.dg/cpp/19940712-1b.h\n\tgcc.c-torture/noncompile/951025-1.c\tgcc.dg/cpp/19951025-1.c\n\tgcc.c-torture/noncompile/951227-1.c\tgcc.dg/cpp/19951227-1.c\n\nFrom-SVN: r34791", "tree": {"sha": "0f585c9ef681e4c8258523a00fd2668646f3a4e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f585c9ef681e4c8258523a00fd2668646f3a4e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1e43c8bf095960b34fc36a18150b81c300f05ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e43c8bf095960b34fc36a18150b81c300f05ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1e43c8bf095960b34fc36a18150b81c300f05ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1e43c8bf095960b34fc36a18150b81c300f05ce/comments", "author": null, "committer": null, "parents": [{"sha": "122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce"}], "stats": {"total": 826, "additions": 363, "deletions": 463}, "files": [{"sha": "f7201e8d9276ad709eace2b72a9787afcfcf089c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -1,3 +1,48 @@\n+2000-06-29  Zack Weinberg  <zack@wolery.cumb.org>\n+\n+\n+\tMove the c-torture/noncompile tests to either gcc.dg/cpp or a new\n+\tgcc.dg/noncompile directory, depending on whether they're\n+\tpreprocessor tests or not.  Annotate all the tests for the dg\n+\tframework.\n+\n+\t* gcc.c-torture/noncompile/noncompile.exp: Delete.\n+\t* gcc.dg/noncompile/noncompile.exp: New.\n+\n+\t* Moved files:\n+\tOld name\t\t\t\tNew name\n+\tgcc.c-torture/noncompile/920507-1.c\tgcc.dg/noncompile/920507-1.c\n+\tgcc.c-torture/noncompile/920616-2.c\tgcc.dg/noncompile/920616-2.c\n+\tgcc.c-torture/noncompile/920721-2.c\tgcc.dg/noncompile/920721-2.c\n+\tgcc.c-torture/noncompile/920824-1.c\tgcc.dg/noncompile/920824-1.c\n+\tgcc.c-torture/noncompile/920923-1.c\tgcc.dg/noncompile/920923-1.c\n+\tgcc.c-torture/noncompile/921102-1.c\tgcc.dg/noncompile/921102-1.c\n+\tgcc.c-torture/noncompile/921116-1.c\tgcc.dg/noncompile/921116-1.c\n+\tgcc.c-torture/noncompile/930301-1.c\tgcc.dg/noncompile/930301-1.c\n+\tgcc.c-torture/noncompile/930622-1.c\tgcc.dg/noncompile/930622-1.c\n+\tgcc.c-torture/noncompile/930622-2.c\tgcc.dg/noncompile/930622-2.c\n+\tgcc.c-torture/noncompile/930714-1.c\tgcc.dg/noncompile/930714-1.c\n+\tgcc.c-torture/noncompile/931203-1.c\tgcc.dg/noncompile/931203-1.c\n+\tgcc.c-torture/noncompile/940112-1.c\tgcc.dg/noncompile/940112-1.c\n+\tgcc.c-torture/noncompile/940227-1.c\tgcc.dg/noncompile/940227-1.c\n+\tgcc.c-torture/noncompile/940510-1.c\tgcc.dg/noncompile/940510-1.c\n+\tgcc.c-torture/noncompile/950825-1.c\tgcc.dg/noncompile/950825-1.c\n+\tgcc.c-torture/noncompile/950921-1.c\tgcc.dg/noncompile/950921-1.c\n+\tgcc.c-torture/noncompile/951123-1.c\tgcc.dg/noncompile/951123-1.c\n+\tgcc.c-torture/noncompile/971104-1.c\tgcc.dg/noncompile/971104-1.c\n+\tgcc.c-torture/noncompile/990416-1.c\tgcc.dg/noncompile/990416-1.c\n+\tgcc.c-torture/noncompile/init-1.c\tgcc.dg/noncompile/init-1.c\n+\tgcc.c-torture/noncompile/init-2.c\tgcc.dg/noncompile/init-2.c\n+\tgcc.c-torture/noncompile/invalid_asm.c\tgcc.dg/noncompile/invalid_asm.c\n+\tgcc.c-torture/noncompile/va-arg-1.c\tgcc.dg/noncompile/va-arg-1.c\n+\n+\tgcc.c-torture/noncompile/940712-1.c\tgcc.dg/cpp/19940712-1.c\n+\tgcc.c-torture/noncompile/940712-1.h\tgcc.dg/cpp/19940712-1.h\n+\tgcc.c-torture/noncompile/940712-1a.h\tgcc.dg/cpp/19940712-1a.h\n+\tgcc.c-torture/noncompile/940712-1b.h\tgcc.dg/cpp/19940712-1b.h\n+\tgcc.c-torture/noncompile/951025-1.c\tgcc.dg/cpp/19951025-1.c\n+\tgcc.c-torture/noncompile/951227-1.c\tgcc.dg/cpp/19951227-1.c\n+\n 2000-06-29  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* gcc.dg/cpp/20000628-1a.h: On each of the first three inclusions,"}, {"sha": "07f2fd03a90ee2d008de225884d1b88ce60aa12b", "filename": "gcc/testsuite/gcc.c-torture/noncompile/920507-1.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920507-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920507-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920507-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-x(){register*a asm(\"unknown_register\");int*v[1]={a};}"}, {"sha": "ddfa0de1ba1b6f29d33248483e7ce06d1e0e799d", "filename": "gcc/testsuite/gcc.c-torture/noncompile/920616-2.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920616-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920616-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920616-2.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-f(void a,...){}"}, {"sha": "4621983e037b0cde3c7ea99676c3be93dd532d52", "filename": "gcc/testsuite/gcc.c-torture/noncompile/920721-2.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920721-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920721-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920721-2.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-f(int n){int s;for(s=0;s<n;s++)s==5?1 n=1;}"}, {"sha": "36661f63c178c6377a8c8ad4b48ec32423cdea5e", "filename": "gcc/testsuite/gcc.c-torture/noncompile/920824-1.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920824-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920824-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920824-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-struct s{struct s{int i;}x;};"}, {"sha": "52f8338abf329f32fce9975ffba7217d20b6f910", "filename": "gcc/testsuite/gcc.c-torture/noncompile/920923-1.c", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920923-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920923-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F920923-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,36 +0,0 @@\n-typedef BYTE unsigned char;typedef int item_n;typedef int perm_set;struct\n-PENT{caddr_t v_addr;};typedef struct PENT prec;typedef struct PENT*\n-prec_t;prec_t mem_hash;BYTE*mem_base;struct PTE{BYTE*p_page;perm_set\n-p_perms;};typedef struct PTE pte;struct PTP{union{struct*PTP\n-p_tablep;struct*PTE p_entry;}u;int valid;};typedef struct PTP\n-(u.p_tablep);int pfree=0;int pcount=0;void mmu_walk_find(va)caddr_t va;{\n-BYTE*page_addr;if(mmu_base[Level1(va)]->valid==0x0){l1_base=\n-mmu_base[Level1(va)]->(u.p_tablep)=p_alloc();mmu_base[Level1(va)]->valid=\n-0x3;for(idx=0;idx<LEVEL1_ENTRIES;idx++)l1_base[idx]->valid=0x0;goto\n-build_level2;}else l1_base=mmu_base[Level1(va)]->(u.p_tablep);if\n-(l1_base[Level2(va)]->valid==0x0){build_level2:l2_base=\n-l1_base[Level2(va)]->(u.p_tablep)=p_alloc();l1_base[Level2(va)]->valid=\n-0x3;for(idx=0;idx<LEVEL2_ENTRIES;idx++)l2_base[idx]->valid=0x0;goto\n-build_page;}else l2_base=mmu_base[Level2(va)]->(u.p_tablep);\n-page_addr=l2_base[Level2(va)]->valid;}void*a_translate(va_op,v_addr)int\n-va_op;caddr_t v_addr;{register prec_t bucket;register caddr_t p_addr;\n-bucket=mem_hash+((((v_addr)>>ITEMBITS))&hash_mask);do{if\n-(bucket->v_addr==((v_addr)>>ITEMBITS){if(!(bucket->perm_set&va_op))\n-goto prot_fault;return mem_base+v_addr;}}while((bucket++)->v_addr!=\n-((caddr_t)0));page_miss:p_addr=(--bucket)->p_addr;page_type:switch\n-(p_addr){case BUCKET_FULL:enlarge_hash_table(mem_hash);case((caddr_t)0):\n-p_addr=fill_item_entry(va_op,v_addr);goto page_type;case((caddr_t)1):\n-default:((void)(((0))?0:(__eprintf(\"Failed assertion`%s'at line%d\n-of`%s'.\\n\",\"FALSE\",327,\"b.c\"),0)));}}void flush_hash(hasht,\n-hash_size)prec_t hasht;int hash_size;{register prec_t bucket;register int\n-idx;bucket=hasht;for(idx=(hash_size*3)-1;idx>=0;idx--){\n-bucket->v_addr=((caddr_t)0);bucket->p_addr=((caddr_t)0);\n-bucket->perm_set=VA_EMPTY;}}void init_mem(){mem_base=(BYTE*)calloc(1024\n-,(1<<13));((void)((mem_base!=(BYTE*)0)?0:(__eprintf(\"Failed\n-assertion`%s'at line%d of`%s'.\\n\",\"mem_base!=(BYTE*)0\",366,\"b.c\"),\n-0)));hash_num=INIT_NUM_ENTRIES*3;mem_hash=(prec_t)calloc(hash_num,\n-sizeof(prec));((void)((mem_hash!=(prec_t)0)?0:(__eprintf(\"Failed\n-assertion`%s'at line%d of`%s'.\\n\",\"mem_hash!=(prec_t)0\",370,\"b.c\"),\n-0)));flush_hash(mem_hash,32);build_ptables(mem_base,1024*(1<<13));}\n-struct tm{int tm_sec;int tm_min;int tm_hour;int tm_mday;int tm_mon;int\n-tm_year;int tm_wday;int tm_yday;int tm_isdst;char*tm_zone;long tm_gmtoff;};"}, {"sha": "3fb42f19b56497f23290f0357c74cd6f6ee6d165", "filename": "gcc/testsuite/gcc.c-torture/noncompile/921102-1.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F921102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F921102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F921102-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-int x[]={[0.3 ... 4.6]9};"}, {"sha": "78a75ea8193eeb8a83f56111d25fed3589d9a21c", "filename": "gcc/testsuite/gcc.c-torture/noncompile/921116-1.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F921116-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F921116-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F921116-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-void a (void x) {}"}, {"sha": "de4271415e9a8641334d8997faef952c17a796c4", "filename": "gcc/testsuite/gcc.c-torture/noncompile/930301-1.c", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930301-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930301-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930301-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,5 +0,0 @@\n-struct a *q;\n-f()\n-{\n-  q++;\n-}"}, {"sha": "27bb9ebd2f2b93e980ff06885f1a61ce5811d930", "filename": "gcc/testsuite/gcc.c-torture/noncompile/930622-1.c", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930622-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930622-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930622-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,6 +0,0 @@\n-f ()\n-{\n-  double b;\n-  b = b * 10;\n-  goto c;\n-}"}, {"sha": "a75e0c43889ed21508ff40fc33539a3736cd723c", "filename": "gcc/testsuite/gcc.c-torture/noncompile/930622-2.c", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930622-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930622-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F930622-2.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,6 +0,0 @@\n-f ()\n-{\n-  int i;\n-  for (i--)\n-    ;\n-}"}, {"sha": "21bba6c9cfe5e602dd2a196a44197a531a931caf", "filename": "gcc/testsuite/gcc.c-torture/noncompile/940227-1.c", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940227-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940227-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940227-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,5 +0,0 @@\n-struct font {\n-  struct {\n-    char *line,*ulmask;\n-  } c[2];\n-} character[1] = { { {\"\", \"\"}, {\"\", \"\"} } };"}, {"sha": "9882d155e9731f18e9a1d6bb0870ce4bdf442254", "filename": "gcc/testsuite/gcc.c-torture/noncompile/940510-1.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940510-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940510-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940510-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-struct { int a[]; } x = { 0 };"}, {"sha": "b1b82347483526f0efbb7fcf455a62dcad393470", "filename": "gcc/testsuite/gcc.c-torture/noncompile/940712-1.c", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940712-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940712-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F940712-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,14 +0,0 @@\n-/* PR 4713 */\n-\n-#include \"940712-1.h\"\n-#include \"940712-1a.h\"\n-#include \"940712-1b.h\"\n-\n-/* comment start in comment error\n-/* in a .c file */\n-\n-int main ()\n-{\n-    return 0;\n-}\n-"}, {"sha": "6104444da3b885082eb0393cecd8be166a30b30f", "filename": "gcc/testsuite/gcc.c-torture/noncompile/950825-1.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F950825-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F950825-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F950825-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-main() { return (struct x) {{y: 0}}; }"}, {"sha": "bcf2f05e44f27b142675049c9043dd01a7d49f6c", "filename": "gcc/testsuite/gcc.c-torture/noncompile/950921-1.c", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F950921-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F950921-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F950921-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,10 +0,0 @@\n-typedef enum\n-{\n-  a = (X) 0,\n-  b\n-} c;\n-\n-typedef enum\n-{\n-  d = (X) 0\n-} e;"}, {"sha": "694887290dd1dec0fdb9ee8453cc02e80c820e50", "filename": "gcc/testsuite/gcc.c-torture/noncompile/951025-1.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951025-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951025-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951025-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-#include /\\"}, {"sha": "e9ed3dcd24683930f8e9a5f003fbadc1d7614407", "filename": "gcc/testsuite/gcc.c-torture/noncompile/951123-1.c", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951123-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951123-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951123-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,2 +0,0 @@\n-struct S { int a; int b[2]; };\n-struct S x = { 0, [0]; };"}, {"sha": "7c449c8579c220471d3e9f29ed211084fa681a9a", "filename": "gcc/testsuite/gcc.c-torture/noncompile/951227-1.c", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951227-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951227-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F951227-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,2 +0,0 @@\n-#if 0xe-1\n-#endif"}, {"sha": "9d4323ba1cd708491131a3a93f8d5c19ef33b94f", "filename": "gcc/testsuite/gcc.c-torture/noncompile/990416-1.c", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F990416-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F990416-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2F990416-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,10 +0,0 @@\n-typedef int word_type;\n-   \n-static void\n-copy_reg (unsigned int reg, frame_state *udata, frame_state *target_udata)\n-{  \n-  word_type *preg = get_reg_addr (reg, udata, 0);\n-  word_type *ptreg = get_reg_addr (reg, target_udata, 0);\n-   \n-  memcpy (ptreg, preg, __builtin_dwarf_reg_size (reg));\n-}"}, {"sha": "52f43e81a4f5cbe074ee83973c8f6ae77f96ad3e", "filename": "gcc/testsuite/gcc.c-torture/noncompile/init-1.c", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finit-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,17 +0,0 @@\n-struct a\n-{ double a, b, c; };\n-\n-struct b\n-{\n-  struct a arr[6];\n-};\n-\n-static struct b a_b =\n-{\n-  {0,0,0},\n-  {0,0,0},\n-  {0,0,0},\n-  {0,0,0},\n-  {0,0,0},\n-  {0,0,0},\n-};"}, {"sha": "52ee17b019f5e44fd679ef184b5c2ae95067163e", "filename": "gcc/testsuite/gcc.c-torture/noncompile/init-2.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finit-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finit-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finit-2.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-int d[][] = { {1}, {2}, {3} };"}, {"sha": "bb017f4315e5fff37358dbdb6e689e7b49cc273d", "filename": "gcc/testsuite/gcc.c-torture/noncompile/invalid_asm.c", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finvalid_asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finvalid_asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Finvalid_asm.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1 +0,0 @@\n-asm_invalid_register_name(){asm(\"\":::\"this_is_an_invalid_register_name\");}"}, {"sha": "44dcf2e156076114153e54648a616328a6cb6b97", "filename": "gcc/testsuite/gcc.c-torture/noncompile/noncompile.exp", "status": "removed", "additions": 0, "deletions": 325, "changes": 325, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Fnoncompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Fnoncompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Fnoncompile.exp?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,325 +0,0 @@\n-#   Copyright (C) 1988, 90-92, 1997, 1999 Free Software Foundation, Inc.\n-\n-# This program is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 2 of the License, or\n-# (at your option) any later version.\n-# \n-# This program is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-# \n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, write to the Free Software\n-# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.  \n-\n-# Please email any bugs, comments, and/or additions to this file to:\n-# bug-gcc@prep.ai.mit.edu\n-\n-# This file was written by Jeff Law. (law@cs.utah.edu)\n-\n-#\n-# These tests come from Torbjorn Granlund (tege@cygnus.com)\n-# C torture test suite.\n-#\n-\n-load_lib mike-gcc.exp\n-\n-# This is done just to set the value of TORTURE_OPTIONS.\n-load_lib c-torture.exp\n-\n-proc postbase_with_opts { src run groups } {\n-    global TORTURE_OPTIONS\n-    # loop through all the options\n-    foreach option $TORTURE_OPTIONS {\n-        postbase $src $run $groups $option\n-    }\n-}\n-\n-# Test 920507-1.c\n-prebase\n-\n-set src_code 920507-1.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 920616-2.c\n-prebase\n-\n-set src_code 920616-2.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 920721-2.c\n-prebase\n-\n-set src_code 920721-2.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 920824-1.c\n-prebase\n-\n-set src_code 920824-1.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 920923-1.c\n-prebase\n-\n-set src_code 920923-1.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 921102-1.c\n-prebase\n-\n-set src_code 921102-1.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 921116-1.c\n-prebase\n-\n-set src_code 921116-1.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 930301-1.c\n-prebase\n-\n-set src_code 930301-1.c\n-set compiler_output \".*:4:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 930622-1.c\n-prebase\n-\n-set src_code 930622-1.c\n-set compiler_output \".*:5:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 930622-2.c\n-prebase\n-\n-set src_code 930622-2.c\n-set compiler_output \".*:4:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 930714-1.c\n-prebase\n-\n-set src_code 930714-1.c\n-# Not really sure what the error should be here...\n-set compiler_output \".*:18.*:23\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-# Test 931203-1.c\n-prebase\n-\n-set src_code 931203-1.c\n-set compiler_output \".*:10\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 940112-1.c\n-prebase\n-\n-set src_code 940112-1.c\n-set compiler_output \".*:7\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 940227-1.c\n-prebase\n-\n-set src_code 940227-1.c\n-set compiler_output \".*:5.*:5\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 940510-1.c\n-prebase\n-\n-set src_code 940510-1.c\n-set compiler_output \".*:1\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 940712-1.c\n-prebase\n-\n-set src_code 940712-1.c\n-set compiler_output \".*:8.*:4\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 950825-1.c\n-prebase\n-set src_code 950825-1.c\n-set compiler_output \".*:1.*:1.*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 950921-1.c\n-prebase\n-set src_code 950921-1.c\n-set compiler_output \".*:3.*:3.*:9.*:9:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 951025-1.c\n-prebase\n-set src_code 951025-1.c\n-set compiler_output \".*:\\[12\\]:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 951123-1.c\n-prebase\n-set src_code 951123-1.c\n-set compiler_output \".*:2:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 951227-1.c\n-prebase\n-set src_code 951227-1.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test 971104-1.c\n-prebase\n-set src_code 971104-1.c\n-set compiler_output \".*:25:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-# Test 990416-1.c\n-prebase\n-set src_code 990416-1.c\n-set compiler_output \".*:4:.*:6:.*:6:.*:6:.*:6:.*:6:.*:7:.*:7:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-# Test init-1.c\n-prebase\n-set src_code init-1.c\n-set compiler_output \".*:12.*:12.*:13.*:13.*:14.*:14.*:15.*:15.*:16.*:16:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test init-2.c\n-prebase\n-set src_code init-2.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test invalid_asm.c\n-prebase\n-set src_code invalid_asm.c\n-set compiler_output \".*:1:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups\n-\n-\n-# Test va-arg-1.c\n-# It is debatable if this test should be included at all.\n-# varags may be implemented by macros, which may not actually\n-# reference the bogus argument.\n-prebase\n-\n-set src_code va-arg-1.c\n-set compiler_output \".*:6:\"\n-\n-set groups {passed gcc-noncompile}\n-\n-postbase_with_opts $src_code $run $groups"}, {"sha": "0285872860d5f4635ef678322f73efae1f21be36", "filename": "gcc/testsuite/gcc.c-torture/noncompile/va-arg-1.c", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Fva-arg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/122168d7b2905b6a7f57f43b3ca54bbc8ece5dce/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Fva-arg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fnoncompile%2Fva-arg-1.c?ref=122168d7b2905b6a7f57f43b3ca54bbc8ece5dce", "patch": "@@ -1,8 +0,0 @@\n-#include <stdarg.h>\n-\n-f (int x, ...)\n-{\n-  va_list args;\n-  va_start (args, bogus_variable);\n-  va_end (args);\n-}"}, {"sha": "5b4ac8b722c1d6539632aaf0cd36a25642fa4b65", "filename": "gcc/testsuite/gcc.dg/cpp/19940712-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do preprocess } */\n+/* PR 4713 */\n+\n+/* dg.exp doesn't read the header files for magic comments. */\n+/* { dg-error \"unterminated comment\" \"\" { target *-*-* } 4 } */\n+/* { dg-error \"unterminated comment\" \"\" { target *-*-* } 8 } */\n+\n+#include \"19940712-1.h\"\t  /* { dg-error \"\" }  // In file included from: */\n+#include \"19940712-1a.h\"  /* { dg-error \"\" }  // In file included from: */\n+#include \"19940712-1b.h\"\n+\n+/* comment start in comment error\n+/* in a .c file */\n+\n+int main ()\n+{\n+    return 0;\n+}\n+"}, {"sha": "183821334b149c8c4084af439504e18aa3b25ac2", "filename": "gcc/testsuite/gcc.dg/cpp/19940712-1.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1.h?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "previous_filename": "gcc/testsuite/gcc.c-torture/noncompile/940712-1.h"}, {"sha": "55ab6b844ecc08d9bece43d80ec294de13ae891e", "filename": "gcc/testsuite/gcc.dg/cpp/19940712-1a.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1a.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1a.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1a.h?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "previous_filename": "gcc/testsuite/gcc.c-torture/noncompile/940712-1a.h"}, {"sha": "d75156c04b978f0711cfda81ca28f48358b2637f", "filename": "gcc/testsuite/gcc.dg/cpp/19940712-1b.h", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1b.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1b.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19940712-1b.h?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "previous_filename": "gcc/testsuite/gcc.c-torture/noncompile/940712-1b.h"}, {"sha": "c243df028f2b50cae525809f40c04b0c6376b7be", "filename": "gcc/testsuite/gcc.dg/cpp/19951025-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951025-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951025-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951025-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,4 @@\n+/* { dg-do preprocess } */\n+/* { dg-error \"include expects\" \"\" { target *-*-* } 4 } */\n+/* { dg-warning \"no newline\" \"\" { target *-*-* } 5 } */\n+#include /\\"}, {"sha": "0d8fcfd8b51456082837e7dc1360952db03d26aa", "filename": "gcc/testsuite/gcc.dg/cpp/19951227-1.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951227-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951227-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19951227-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do preprocess } */\n+#if 0xe-1\t/* { dg-error \"invalid number\" } */\n+#endif"}, {"sha": "5f2ff4ee88eacc7eb0daa37609480981c6e1080d", "filename": "gcc/testsuite/gcc.dg/noncompile/920507-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920507-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920507-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920507-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,6 @@\n+int\n+x(void)\n+{\n+ register int *a asm(\"unknown_register\");  /* { dg-error \"invalid register\" } */\n+ int *v[1] = {a};\n+}"}, {"sha": "25f59434f73df4fd29d8a708163e1989d394dc6c", "filename": "gcc/testsuite/gcc.dg/noncompile/920616-2.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920616-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920616-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920616-2.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1 @@\n+f(void a,...){}\t\t/* { dg-error \"has incomplete type\" } */"}, {"sha": "2326b7efc6ba9c550ae90f25836fba30f0862746", "filename": "gcc/testsuite/gcc.dg/noncompile/920721-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920721-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920721-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920721-2.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,6 @@\n+int f(int n)\n+{\n+int s;\n+for(s=0;s<n;s++)\n+  s==5?1 n=1;\t\t/* { dg-error \"parse error\" } */\n+}"}, {"sha": "bc8b19c3c62be268b5e8a398ad9eae0453d6c51f", "filename": "gcc/testsuite/gcc.dg/noncompile/920824-1.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920824-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920824-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920824-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1 @@\n+struct s{struct s{int i;}x;};\t/* { dg-error \"nested redefinition\" } */"}, {"sha": "4f03b9fafbfda9b6e7150ae0aa9bb31b222f1d77", "filename": "gcc/testsuite/gcc.dg/noncompile/920923-1.c", "status": "added", "additions": 124, "deletions": 0, "changes": 124, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920923-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920923-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F920923-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,124 @@\n+typedef BYTE unsigned char;\t/* { dg-error \"syntax error|empty decl\" } */\n+typedef int item_n;\n+typedef int perm_set;\n+struct PENT { caddr_t v_addr; };/* { dg-error \"parse error|no semicolon\" } */\n+typedef struct PENT prec;\n+typedef struct PENT *prec_t;\n+prec_t mem_hash;\n+BYTE *mem_base;\t\t\t/* { dg-error \"parse error|no type\" } */\n+struct PTE {\n+     BYTE *p_page;\t\t/* { dg-error \"parse error|no semicolon\" } */\n+     perm_set p_perms;\n+};\t\t\t\t/* { dg-error \"parse error\" } */\n+typedef struct PTE pte;\n+struct PTP {\n+     union {\n+\t  struct *PTP p_tablep;\t/* { dg-error \"parse error|no semicolon\" } */\n+\t  struct *PTE p_entry;\n+     } u;\t\t\t/* { dg-warning \"no type or storage class\" } */\n+     int valid;\n+};\t\t\t\t/* { dg-error \"parse error\" } */\n+typedef struct PTP (u.p_tablep);/* { dg-error \"parse error\" } */\n+int pfree=0;\n+int pcount=0;\n+\n+void\n+mmu_walk_find(va)\n+caddr_t va;\t\t\t/* { dg-error \"parse error|no type\" } */\n+{\n+     BYTE *page_addr;\n+     if (mmu_base[Level1(va)]->valid==0x0) {\n+\t  l1_base = mmu_base[Level1(va)]->(u.p_tablep) = p_alloc();\n+\t  mmu_base[Level1(va)]->valid = 0x3;\t/* { dg-error \"parse error\" } */\n+\t  for (idx=0; idx<LEVEL1_ENTRIES; idx++)\n+\t       l1_base[idx]->valid = 0x0;\n+\t  goto build_level2;\n+     } else\n+\t  l1_base = mmu_base[Level1(va)]->(u.p_tablep);\n+\n+     if (l1_base[Level2(va)]->valid==0x0) {\n+     build_level2:\n+\t  l2_base = l1_base[Level2(va)]->(u.p_tablep) = p_alloc();\n+\t  l1_base[Level2(va)]->valid = 0x3;\t/* { dg-error \"parse error\" } */\n+\t  for (idx=0; idx<LEVEL2_ENTRIES; idx++)\n+\t       l2_base[idx]->valid=0x0;\n+\t  goto build_page;\n+     } else\n+\t  l2_base = mmu_base[Level2(va)]->(u.p_tablep);\n+\n+     page_addr = l2_base[Level2(va)]->valid;/* { dg-error \"undeclared|no type\" } */\n+}\t\t\t\t/* { dg-error \"parse error\" } */\n+\n+void *\n+a_translate(va_op, v_addr)\n+int va_op;\n+caddr_t v_addr;\t\t\t/* { dg-error \"parse error\" } */\n+{\n+     register prec_t bucket;\n+     register caddr_t p_addr;\t/* { dg-error \"syntax error\" } */\n+     bucket = mem_hash+((((v_addr)>>ITEMBITS))&hash_mask); /* { dg-error \"undeclared|for each function\" } */\n+     do {\n+\t  if (bucket->v_addr == ((v_addr)>>ITEMBITS) {\t/* { dg-error \"incomplete type|parse error\" } */\n+\t       if(!(bucket->perm_set&va_op))\n+\t\t    goto prot_fault;\n+\t       return mem_base + v_addr;\n+\t  }\n+     } while((bucket++)->v_addr != ((caddr_t)0));  /* { dg-error \"parse error\" } */\n+\n+ page_miss:\n+     p_addr = (--bucket)->p_addr;\t/* { dg-error \"undeclared|pointer to\" } */\n+ page_type:\n+     switch (p_addr) {\n+     case BUCKET_FULL:\t\t/* { dg-error \"undeclared\" } */\n+\t  enlarge_hash_table(mem_hash);\n+     case((caddr_t)0):\t\t/* { dg-error \"undeclared|parse error\" } */\n+\t  p_addr = fill_item_entry(va_op, v_addr);\n+\t  goto page_type;\n+     case((caddr_t)1):\t\t/* { dg-error \"parse error\" } */\n+     default:\t\t\t/* { dg-error \"default label\" } */\n+\t  ((void)(((0))?0:(__eprintf(\"Failed assertion`%s'at line%d of`%s'.\\n\",\n+\t\t\t\t     \"FALSE\", 327, \"b.c\"), 0)));\n+     }\n+}\n+\n+void\n+flush_hash(hasht, hash_size)\n+prec_t hasht;\n+int hash_size;\n+{\n+     register prec_t bucket;\n+     register int idx;\n+     bucket = hasht;\n+     for(idx=(hash_size*3)-1; idx>=0; idx--) {\n+\t  bucket->v_addr = ((caddr_t)0);/* { dg-error \"undeclared|pointer to|parse error\" } */\n+\t  bucket->p_addr = ((caddr_t)0);/* { dg-error \"pointer to|parse error\" } */\n+\t  bucket->perm_set = VA_EMPTY;\t/* { dg-error \"undeclared|pointer to\" } */\n+     }\n+}\n+\n+void\n+init_mem()\n+{\n+     mem_base = (BYTE *) calloc(1024, (1<<13)); /* { dg-error \"undeclared|parse error\" } */\n+     ((void)((mem_base != (BYTE *)0)\t/* { dg-error \"parse error\" } */\n+\t     ? 0\n+\t     : (__eprintf(\"Failed assertion`%s'at line%d of`%s'.\\n\",\n+\t\t\t  \"mem_base != (BYTE *)0\", 366, \"b.c\"),\n+\t\t0)));\n+     hash_num = INIT_NUM_ENTRIES * 3;\t/* { dg-error \"undeclared\" } */\n+     mem_hash = (prec_t) calloc(hash_num, sizeof(prec)); /* { dg-error \"incomplete type\" } */\n+     ((void)((mem_hash != (prec_t)0)\n+\t     ? 0\n+\t     : (__eprintf(\"Failed assertion`%s'at line%d of`%s'.\\n\",\n+\t\t\t  \"mem_hash != (prec_t)0\", 370, \"b.c\"),\n+\t\t0)));\n+     flush_hash(mem_hash, 32);\n+     build_ptables(mem_base, 1024*(1<<13));\n+}\n+\n+struct tm {\n+     int tm_sec; int tm_min; int tm_hour;\n+     int tm_mday;int tm_mon; int tm_year;\n+     int tm_wday;int tm_yday;int tm_isdst;\n+     char*tm_zone; long tm_gmtoff;\n+};"}, {"sha": "8b66f712ef727565a1b64f63922f6d3d3855ffef", "filename": "gcc/testsuite/gcc.dg/noncompile/921102-1.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F921102-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F921102-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F921102-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1 @@\n+int x[]={[0.3 ... 4.6]9}; /* { dg-error \"nonconstant array|near init\" } */"}, {"sha": "890bbb63404d6b9622fbf7cb113373dd25bcf54f", "filename": "gcc/testsuite/gcc.dg/noncompile/921116-1.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F921116-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F921116-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F921116-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1 @@\n+void a (void x) {}\t/* { dg-error \"has incomplete type\" } */"}, {"sha": "afabd1513dd6c0d5a9fea1cf1bfc530167e4bec1", "filename": "gcc/testsuite/gcc.dg/noncompile/930301-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930301-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930301-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930301-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,5 @@\n+struct a *q;\n+f()\n+{\n+  q++;\t/* { dg-error \"pointer to\" } */\n+}"}, {"sha": "835e072c655d0f8156f2a1d3aae028830cb5c9cd", "filename": "gcc/testsuite/gcc.dg/noncompile/930622-1.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930622-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930622-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930622-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,6 @@\n+f ()\n+{\n+  double b;\n+  b = b * 10;\n+  goto c;\t/* { dg-error \"used but not defined\" } */\n+}"}, {"sha": "b7e1b8e1dfe402d6863c6db18448ea77a4b66f84", "filename": "gcc/testsuite/gcc.dg/noncompile/930622-2.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930622-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930622-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930622-2.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,6 @@\n+f ()\n+{\n+  int i;\n+  for (i--)\t/* { dg-error \"syntax\" } */\n+    ;\n+}"}, {"sha": "bdbc13394b3cd0671ba6acd9347b93abdcfcd41d", "filename": "gcc/testsuite/gcc.dg/noncompile/930714-1.c", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930714-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930714-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F930714-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -15,11 +15,11 @@ void test()\n   int (*iptr)(int);\n   int foo[5];\n \n-  a = f1;\n+  a = f1;\t\t/* { dg-error \"incompatible types\" } */\n   a = (YYSTYPE)f1;\n   a = (YYSTYPE)foo;\n   a = (YYSTYPE)(int *)foo;\n   iptr = f1;\n-  a = iptr;\n+  a = iptr;\t\t/* { dg-error \"incompatible types\" } */\n   a = (YYSTYPE)iptr;\n }", "previous_filename": "gcc/testsuite/gcc.c-torture/noncompile/930714-1.c"}, {"sha": "0c6a9f2d385cb7d73774540db217cce16ffeb05b", "filename": "gcc/testsuite/gcc.dg/noncompile/931203-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F931203-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F931203-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F931203-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -7,5 +7,5 @@ typedef struct\n point_t\n f ()\n {\n-  return 0;\n+  return 0;\t/* { dg-error \"incompatible types\" } */\n }", "previous_filename": "gcc/testsuite/gcc.c-torture/noncompile/931203-1.c"}, {"sha": "24780df554e38a9f2ef1f502d8920c607e89ab2f", "filename": "gcc/testsuite/gcc.dg/noncompile/940112-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940112-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940112-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940112-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -4,4 +4,4 @@ f (int x)\n   double e = 1;\n   e = 1;\n   return (e)\n-}\n+}\t/* { dg-error \"parse error\" } */", "previous_filename": "gcc/testsuite/gcc.c-torture/noncompile/940112-1.c"}, {"sha": "2e6d913938743b766973592565172f64d353d1ae", "filename": "gcc/testsuite/gcc.dg/noncompile/940227-1.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940227-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940227-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940227-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,5 @@\n+struct font {\n+  struct {\n+    char *line,*ulmask;\n+  } c[2];\n+} character[1] = { { {\"\", \"\"}, {\"\", \"\"} } }; /* { dg-error \"extra|near|excess\" } */"}, {"sha": "485c3d2e0b721dae89e144790c6c2540a6bb5098", "filename": "gcc/testsuite/gcc.dg/noncompile/940510-1.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940510-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940510-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F940510-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1 @@\n+struct { int a[]; } x = { 0 };\t/* { dg-error \"array size missing\" } */"}, {"sha": "4f4c6fbb9e29f7980b8a4daaecd735791ef0879a", "filename": "gcc/testsuite/gcc.dg/noncompile/950825-1.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F950825-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F950825-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F950825-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,4 @@\n+main()\n+{\n+return (struct x) {{y: 0}};   /* { dg-error \"extra|near|excess|incompatible\" } */\n+}"}, {"sha": "ed44338fcd1a44ef4289343763f5d18deff70c05", "filename": "gcc/testsuite/gcc.dg/noncompile/950921-1.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F950921-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F950921-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F950921-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,10 @@\n+typedef enum\n+{\n+  a = (X) 0,\t/* { dg-error \"undeclared|not integer|parse error\" } */\n+  b\n+} c;\n+\n+typedef enum\n+{\n+  d = (X) 0\t/* { dg-error \"undeclared|not integer|parse error\" } */\n+} e;"}, {"sha": "9a5a3215ed6e874ab16c55292bb6659ffb8377a6", "filename": "gcc/testsuite/gcc.dg/noncompile/951123-1.c", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F951123-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F951123-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F951123-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,2 @@\n+struct S { int a; int b[2]; };\n+struct S x = { 0, [0]; };    /* { dg-error \"array index|near|parse\" } */"}, {"sha": "a20b17add58602cb41ac873bdab8a85dcd5d6950", "filename": "gcc/testsuite/gcc.dg/noncompile/971104-1.c", "status": "renamed", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F971104-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F971104-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F971104-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -21,6 +21,8 @@ static void up(int sem){\n   if(semop(semid, &sb, 1) == -1) error(\"up failure\");\n   if(semctl(semid, sb.sem_num, 12 , semctl_arg) == 0)\n     printf(\"%s had processes sleeping on it!\\n\",\n-    ({ \"MUTEX     \", \"BARB_SEM 1\", \"BARB_SEM 2\", \"CUST_SEM 1\", \"CUST_SEM 2\", \"WA\n-IT_SEM 1\", \"WAIT_SEM 2\", \"WAIT_SEM 3\", \"WAIT_SEM 4\"} [( sb.sem_num )]) );\n+    ({ \"MUTEX     \", \"BARB_SEM 1\", \"BARB_SEM 2\", \"CUST_SEM 1\",\n+       \"CUST_SEM 2\", \"WAIT_SEM 1\", \"WAIT_SEM 2\", \"WAIT_SEM 3\",\n+       \"WAIT_SEM 4\"}\t /* { dg-error \"parse error\" } */\n+\t[( sb.sem_num )]) );\n }", "previous_filename": "gcc/testsuite/gcc.c-torture/noncompile/971104-1.c"}, {"sha": "ae433ad65153c36460750bd23c566c76cbc2670f", "filename": "gcc/testsuite/gcc.dg/noncompile/990416-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F990416-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F990416-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F990416-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,11 @@\n+typedef int word_type;\n+   \n+static void\n+copy_reg (unsigned int reg, frame_state *udata,\t/* { dg-error \"parse\" } */\n+\t  frame_state *target_udata)\n+{  \n+  word_type *preg = get_reg_addr (reg, udata, 0);\t/* { dg-error \"undeclared|function|without a cast\" } */\n+  word_type *ptreg = get_reg_addr (reg, target_udata, 0); /* { dg-error \"undeclared|without a cast\" } */\n+   \n+  memcpy (ptreg, preg, __builtin_dwarf_reg_size (reg));\t/* { dg-warning \"implicit declaration\" } */\n+}"}, {"sha": "007991b6af705d95771d7beae3fa4aaaf4d58e1f", "filename": "gcc/testsuite/gcc.dg/noncompile/init-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finit-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finit-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finit-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,17 @@\n+struct a\n+{ double a, b, c; };\n+\n+struct b\n+{\n+  struct a arr[6];\n+};\n+\n+static struct b a_b =\n+{\n+  {0,0,0},\n+  {0,0,0},\t/* { dg-error \"extra brace|excess elements|near\" } */\n+  {0,0,0},\t/* { dg-error \"extra brace|excess elements|near\" } */\n+  {0,0,0},\t/* { dg-error \"extra brace|excess elements|near\" } */\n+  {0,0,0},\t/* { dg-error \"extra brace|excess elements|near\" } */\n+  {0,0,0},\t/* { dg-error \"extra brace|excess elements|near\" } */\n+};"}, {"sha": "462e33219a0a8a52f71c14b221d9c98ae9896d4f", "filename": "gcc/testsuite/gcc.dg/noncompile/init-2.c", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finit-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finit-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finit-2.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1 @@\n+int d[][] = { {1}, {2}, {3} };\t/* { dg-error \"incomplete type\" } */"}, {"sha": "0cb14799f3418aee724e13065146c28c8d9dff7c", "filename": "gcc/testsuite/gcc.dg/noncompile/invalid_asm.c", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finvalid_asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finvalid_asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Finvalid_asm.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,4 @@\n+asm_invalid_register_name()\n+{\n+  asm(\"\":::\"this_is_an_invalid_register_name\");\t/* { dg-error \"unknown register\" } */\n+}"}, {"sha": "f23dccad723610444f4b4d35d0d77a4bb84893dd", "filename": "gcc/testsuite/gcc.dg/noncompile/noncompile.exp", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fnoncompile.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fnoncompile.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fnoncompile.exp?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,64 @@\n+#   Copyright (C) 1997, 2000 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 2 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with this program; if not, write to the Free Software\n+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  \n+\n+# Please email any bugs, comments, and/or additions to this file to:\n+# bug-gcc@prep.ai.mit.edu\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+# Utility for scanning compiler result, invoked via dg-final.\n+# Call pass if pattern is present, otherwise fail.\n+proc scan-assembler { testcase pattern } {\n+    global subdir\n+\n+    set fd [open [file rootname $testcase].s r]\n+    set text [read $fd]\n+    close $fd\n+\n+    if [regexp -- $pattern $text] {\n+\tpass \"$subdir/$testcase scan-assembler\"\n+    } else {\n+\tfail \"$subdir/$testcase scan-assembler\"\n+    }\n+}\n+\n+# Call pass if pattern is not present, otherwise fail.\n+proc scan-assembler-not { testcase pattern } {\n+    global subdir\n+\n+    set fd [open [file rootname $testcase].s r]\n+    set text [read $fd]\n+    close $fd\n+\n+    if ![regexp -- $pattern $text] {\n+\tpass \"$subdir/$testcase scan-assembler-not\"\n+    } else {\n+\tfail \"$subdir/$testcase scan-assembler-not\"\n+    }\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+# Don't run this directory with any default CFLAGS.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \"\" \"\"\n+\n+# All done.\n+dg-finish"}, {"sha": "b8b7d3c31cfe426050f49c9c5b2ed879b2ae5d00", "filename": "gcc/testsuite/gcc.dg/noncompile/va-arg-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fva-arg-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1e43c8bf095960b34fc36a18150b81c300f05ce/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fva-arg-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fva-arg-1.c?ref=d1e43c8bf095960b34fc36a18150b81c300f05ce", "patch": "@@ -0,0 +1,8 @@\n+#include <stdarg.h>\n+\n+f (int x, ...)\n+{\n+  va_list args;\n+  va_start (args, bogus_variable);  /* { dg-error \"undeclared|for each function|not last named\" } */\n+  va_end (args);\n+}"}]}