{"sha": "a733b15e510bf45335f9b5dc345117d4741ae743", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTczM2IxNWU1MTBiZjQ1MzM1ZjliNWRjMzQ1MTE3ZDQ3NDFhZTc0Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2003-05-16T22:09:22Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2003-05-16T22:09:22Z"}, "message": "configure.in (HAVE_RO_EH_FRAME): Check whether .eh_frame section should be read-only.\n\n\t* configure.in (HAVE_RO_EH_FRAME): Check whether .eh_frame section\n\tshould be read-only.\n\t* configure: Rebuilt.\n\t* fficonfig.h.in: Rebuilt.\n\t* include/ffi.h.in (EH_FRAME_FLAGS): Define.\n\t* src/alpha/osf.S: Use EH_FRAME_FLAGS.\n\t* src/powerpc/linux64.S: Likewise.\n\t* src/powerpc/linux64_closure.S: Likewise.  Include ffi.h.\n\t* src/powerpc/sysv.S: Use EH_FRAME_FLAGS.  Use pcrel encoding\n\tif -fpic/-fPIC/-mrelocatable.\n\t* src/powerpc/powerpc_closure.S: Likewise.\n\t* src/sparc/v8.S: If HAVE_RO_EH_FRAME is defined, don't include\n\t#write in .eh_frame flags.\n\t* src/sparc/v9.S: Likewise.\n\t* src/x86/unix64.S: Use EH_FRAME_FLAGS.\n\t* src/x86/sysv.S: Likewise.  Use pcrel encoding if -fpic/-fPIC.\n\t* src/s390/sysv.S: Use EH_FRAME_FLAGS.  Include ffi.h.\n\nFrom-SVN: r66887", "tree": {"sha": "0263f96916c31cb329b80472caf4f2a3a0ffa797", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0263f96916c31cb329b80472caf4f2a3a0ffa797"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a733b15e510bf45335f9b5dc345117d4741ae743", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a733b15e510bf45335f9b5dc345117d4741ae743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a733b15e510bf45335f9b5dc345117d4741ae743", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a733b15e510bf45335f9b5dc345117d4741ae743/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f5a1c99c633d3cc9a3f3c4ee4c34094f0369bbac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5a1c99c633d3cc9a3f3c4ee4c34094f0369bbac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5a1c99c633d3cc9a3f3c4ee4c34094f0369bbac"}], "stats": {"total": 261, "additions": 198, "deletions": 63}, "files": [{"sha": "5da773a5667cfce3c66682d21334b90097de81e4", "filename": "libffi/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -1,3 +1,23 @@\n+2003-05-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* configure.in (HAVE_RO_EH_FRAME): Check whether .eh_frame section\n+\tshould be read-only.\n+\t* configure: Rebuilt.\n+\t* fficonfig.h.in: Rebuilt.\n+\t* include/ffi.h.in (EH_FRAME_FLAGS): Define.\n+\t* src/alpha/osf.S: Use EH_FRAME_FLAGS.\n+\t* src/powerpc/linux64.S: Likewise.\n+\t* src/powerpc/linux64_closure.S: Likewise.  Include ffi.h.\n+\t* src/powerpc/sysv.S: Use EH_FRAME_FLAGS.  Use pcrel encoding\n+\tif -fpic/-fPIC/-mrelocatable.\n+\t* src/powerpc/powerpc_closure.S: Likewise.\n+\t* src/sparc/v8.S: If HAVE_RO_EH_FRAME is defined, don't include\n+\t#write in .eh_frame flags.\n+\t* src/sparc/v9.S: Likewise.\n+\t* src/x86/unix64.S: Use EH_FRAME_FLAGS.\n+\t* src/x86/sysv.S: Likewise.  Use pcrel encoding if -fpic/-fPIC.\n+\t* src/s390/sysv.S: Use EH_FRAME_FLAGS.  Include ffi.h.\n+\n 2003-05-07  Jeff Sturm  <jsturm@one-point.com>\n \n \tFixes PR bootstrap/10656"}, {"sha": "9c2550d0ada057356a79fe8f51d1b367db5cd603", "filename": "libffi/configure", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -3638,6 +3638,34 @@ EOF\n     fi\n fi\n \n+echo $ac_n \"checking whether .eh_frame section should be read-only\"\"... $ac_c\" 1>&6\n+echo \"configure:3495: checking whether .eh_frame section should be read-only\" >&5\n+if eval \"test \\\"`echo '$''{'libffi_cv_ro_eh_frame'+set}'`\\\" = set\"; then\n+  echo $ac_n \"(cached) $ac_c\" 1>&6\n+else\n+  \n+\tlibffi_cv_ro_eh_frame=no\n+\techo 'extern void foo (void); void bar (void) { foo (); foo (); }' > conftest.c\n+\tif $CC $CFLAGS -S -fpic -fexceptions -o conftest.s conftest.c > /dev/null 2>&1; then\n+\t    if grep '.section.*eh_frame.*\"a\"' conftest.s > /dev/null; then\n+\t\tlibffi_cv_ro_eh_frame=yes\n+\t    elif grep '.section.*eh_frame.*#alloc' conftest.c \\\n+\t\t | grep -v '#write' > /dev/null; then\n+\t\tlibffi_cv_ro_eh_frame=yes\n+\t    fi\n+\tfi\n+\trm -f conftest.*\n+    \n+fi\n+\n+echo \"$ac_t\"\"$libffi_cv_ro_eh_frame\" 1>&6\n+if test \"x$libffi_cv_ro_eh_frame\" = xyes; then\n+    cat >> confdefs.h <<\\EOF\n+#define HAVE_RO_EH_FRAME 1\n+EOF\n+\n+fi\n+\n \n \n "}, {"sha": "0048439acff22a9e7cfd83500311b1410163af62", "filename": "libffi/configure.in", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fconfigure.in?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -149,6 +149,25 @@ if test x$TARGET = xSPARC; then\n     fi\n fi\n \n+AC_CACHE_CHECK([whether .eh_frame section should be read-only],\n+    libffi_cv_ro_eh_frame, [\n+\tlibffi_cv_ro_eh_frame=no\n+\techo 'extern void foo (void); void bar (void) { foo (); foo (); }' > conftest.c\n+\tif $CC $CFLAGS -S -fpic -fexceptions -o conftest.s conftest.c > /dev/null 2>&1; then\n+\t    if grep '.section.*eh_frame.*\"a\"' conftest.s > /dev/null; then\n+\t\tlibffi_cv_ro_eh_frame=yes\n+\t    elif grep '.section.*eh_frame.*#alloc' conftest.c \\\n+\t\t | grep -v '#write' > /dev/null; then\n+\t\tlibffi_cv_ro_eh_frame=yes\n+\t    fi\n+\tfi\n+\trm -f conftest.*\n+    ])\n+if test \"x$libffi_cv_ro_eh_frame\" = xyes; then\n+    AC_DEFINE(HAVE_RO_EH_FRAME, 1,\n+\t      [Define if .eh_frame sections should be read-only.])\n+fi\n+\n AC_SUBST(TARGET)\n AC_SUBST(TARGETDIR)\n "}, {"sha": "636110cd40a819122dff2744239ae39f88e99d27", "filename": "libffi/fficonfig.h.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Ffficonfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Ffficonfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Ffficonfig.h.in?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -77,3 +77,5 @@\n /* Define if your assembler supports .register. */\n #undef HAVE_AS_REGISTER_PSEUDO_OP\n \n+/* Define if .eh_frame sections should be read-only. */\n+#undef HAVE_RO_EH_FRAME"}, {"sha": "b37307c8f926196a4a168e9e3f340a096470b54f", "filename": "libffi/include/ffi.h.in", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Finclude%2Fffi.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Finclude%2Fffi.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Finclude%2Fffi.h.in?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -183,7 +183,15 @@ extern \"C\" {\n #endif\n #endif\n \n-#ifndef LIBFFI_ASM\n+#ifdef LIBFFI_ASM\n+\n+#ifdef HAVE_RO_EH_FRAME\n+#define EH_FRAME_FLAGS \"a\"\n+#else\n+#define EH_FRAME_FLAGS \"aw\"\n+#endif\n+\n+#else\n \n /* ---- Generic type definitions ----------------------------------------- */\n "}, {"sha": "1f6b4059c641848c998bb19cd99f581a3c9a2753", "filename": "libffi/src/alpha/osf.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Falpha%2Fosf.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Falpha%2Fosf.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Falpha%2Fosf.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -292,7 +292,7 @@ $load_table:\n #endif\n \n #ifdef __ELF__\n-\t.section\t.eh_frame,\"aw\",@progbits\n+\t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n __FRAME_BEGIN__:\n \t.4byte\t$LECIE1-$LSCIE1\t # Length of Common Information Entry\n $LSCIE1:"}, {"sha": "28727cd01f81de181ccaf17b31e16fc36c5eb90b", "filename": "libffi/src/powerpc/linux64.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fpowerpc%2Flinux64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -141,7 +141,7 @@ ffi_call_LINUX64:\n \t.byte\t0,12,0,1,128,4,0,0\n \t.size\t.ffi_call_LINUX64,.-.ffi_call_LINUX64\n \n-\t.section\t.eh_frame,\"aw\",@progbits\n+\t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n .Lframe1:\n \t.4byte\t.LECIE1-.LSCIE1\t # Length of Common Information Entry\n .LSCIE1:"}, {"sha": "1159c1e77a83f17a429f47427ec7d4d55684f630", "filename": "libffi/src/powerpc/linux64_closure.S", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Flinux64_closure.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -1,3 +1,6 @@\n+#define LIBFFI_ASM\n+#include <ffi.h>\n+\n \t.file\t\"linux64_closure.S\"\n \n #ifdef __powerpc64__\n@@ -174,7 +177,7 @@ ffi_closure_LINUX64:\n \t.byte\t0,12,0,1,128,0,0,0\n \t.size\t.ffi_closure_LINUX64,.-.ffi_closure_LINUX64\n \n-\t.section\t.eh_frame,\"aw\",@progbits\n+\t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n .Lframe1:\n \t.4byte\t.LECIE1-.LSCIE1\t # Length of Common Information Entry\n .LSCIE1:"}, {"sha": "391f318d199e413dfec24a17534c871e72183433", "filename": "libffi/src/powerpc/ppc_closure.S", "status": "modified", "additions": 25, "deletions": 10, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fppc_closure.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -197,36 +197,51 @@ ENTRY(ffi_closure_SYSV)\n \tblr\n END(ffi_closure_SYSV)\n \n-\t.section\t\".eh_frame\",\"aw\"\n-__FRAME_BEGIN__:\n+\t.section\t\".eh_frame\",EH_FRAME_FLAGS,@progbits\n+.Lframe1:\n \t.4byte\t.LECIE1-.LSCIE1\t # Length of Common Information Entry\n .LSCIE1:\n \t.4byte\t0x0\t # CIE Identifier Tag\n \t.byte\t0x1\t # CIE Version\n+#if defined _RELOCATABLE || defined __PIC__\n+\t.ascii \"zR\\0\"\t # CIE Augmentation\n+#else\n \t.ascii \"\\0\"\t # CIE Augmentation\n-\t.byte\t0x1\t # uleb128 0x1; CIE Code Alignment Factor\n-\t.byte\t0x7c\t # sleb128 -4; CIE Data Alignment Factor\n+#endif\n+\t.uleb128 0x1\t # CIE Code Alignment Factor\n+\t.sleb128 -4\t # CIE Data Alignment Factor\n \t.byte\t0x41\t # CIE RA Column\n+#if defined _RELOCATABLE || defined __PIC__\n+\t.uleb128 0x1\t # Augmentation size\n+\t.byte\t0x1b\t # FDE Encoding (pcrel sdata4)\n+#endif\n \t.byte\t0xc\t # DW_CFA_def_cfa\n-\t.byte\t0x1\t # uleb128 0x1\n-\t.byte\t0x0\t # uleb128 0x0\n+\t.uleb128 0x1\n+\t.uleb128 0x0\n \t.align 2\n .LECIE1:\n .LSFDE1:\n \t.4byte\t.LEFDE1-.LASFDE1\t # FDE Length\n .LASFDE1:\n-\t.4byte\t.LASFDE1-__FRAME_BEGIN__\t # FDE CIE offset\n+\t.4byte\t.LASFDE1-.Lframe1\t # FDE CIE offset\n+#if defined _RELOCATABLE || defined __PIC__\n+\t.4byte\t.LFB1-.\t # FDE initial location\n+#else\n \t.4byte\t.LFB1\t # FDE initial location\n+#endif\n \t.4byte\t.LFE1-.LFB1\t # FDE address range\n+#if defined _RELOCATABLE || defined __PIC__\n+\t.uleb128 0x0\t # Augmentation size\n+#endif\n \t.byte\t0x4\t # DW_CFA_advance_loc4\n \t.4byte\t.LCFI0-.LFB1\n \t.byte\t0xe\t # DW_CFA_def_cfa_offset\n-\t.byte\t144,1\t # uleb128 144\n+\t.uleb128 144\n \t.byte\t0x4\t # DW_CFA_advance_loc4\n \t.4byte\t.LCFI1-.LCFI0\n \t.byte\t0x2f\t # DW_CFA_GNU_negative_offset_extended\n-\t.byte\t0x41\t # uleb128 0x41\n-\t.byte\t0x1\t # uleb128 0x1\n+\t.uleb128 0x41\n+\t.uleb128 0x1\n \t.align 2\n .LEFDE1:\n "}, {"sha": "c045c779dfc2fc05a82fe76d43658e09a89d1a86", "filename": "libffi/src/powerpc/sysv.S", "status": "modified", "additions": 31, "deletions": 16, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fpowerpc%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fpowerpc%2Fsysv.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -128,48 +128,63 @@ L(float_return_value):\n .LFE1:\n END(ffi_call_SYSV)\n \n-      .section  \".eh_frame\",\"aw\"\n-__FRAME_BEGIN__:\n+      .section\t\".eh_frame\",EH_FRAME_FLAGS,@progbits\n+.Lframe1:\n       .4byte    .LECIE1-.LSCIE1  /*  Length of Common Information Entry */\n .LSCIE1:\n       .4byte    0x0      /*  CIE Identifier Tag */\n       .byte     0x1      /*  CIE Version */\n-      .ascii \"\\0\"        /*  CIE Augmentation */\n-      .byte     0x1      /*  uleb128 0x1; CIE Code Alignment Factor */\n-      .byte     0x7c     /*  sleb128 -4; CIE Data Alignment Factor */\n+#if defined _RELOCATABLE || defined __PIC__\n+      .ascii\t\"zR\\0\"   /*  CIE Augmentation */\n+#else\n+      .ascii\t\"\\0\"\t /*  CIE Augmentation */\n+#endif\n+      .uleb128  0x1      /*  CIE Code Alignment Factor */\n+      .sleb128  -4\t /*  CIE Data Alignment Factor */\n       .byte     0x41     /*  CIE RA Column */\n+#if defined _RELOCATABLE || defined __PIC__\n+      .uleb128  0x1      /*  Augmentation size */\n+      .byte\t0x1b\t /*  FDE Encoding (pcrel sdata4) */\n+#endif\n       .byte     0xc      /*  DW_CFA_def_cfa */\n-      .byte     0x1      /*  uleb128 0x1 */\n-      .byte     0x0      /*  uleb128 0x0 */\n+      .uleb128  0x1\n+      .uleb128  0x0\n       .align 2\n .LECIE1:\n .LSFDE1:\n       .4byte    .LEFDE1-.LASFDE1         /*  FDE Length */\n .LASFDE1:\n-      .4byte    .LASFDE1-__FRAME_BEGIN__         /*  FDE CIE offset */\n+      .4byte    .LASFDE1-.Lframe1         /*  FDE CIE offset */\n+#if defined _RELOCATABLE || defined __PIC__\n+      .4byte    .LFB1-.  /*  FDE initial location */\n+#else\n       .4byte    .LFB1    /*  FDE initial location */\n+#endif\n       .4byte    .LFE1-.LFB1      /*  FDE address range */\n+#if defined _RELOCATABLE || defined __PIC__\n+      .uleb128  0x0\t /*  Augmentation size */\n+#endif\n       .byte     0x4      /*  DW_CFA_advance_loc4 */\n       .4byte    .LCFI0-.LFB1\n       .byte     0xd      /*  DW_CFA_def_cfa_register */\n-      .byte     0x08     /*  uleb128 0x08 */\n+      .uleb128  0x08\n       .byte     0x4      /*  DW_CFA_advance_loc4 */\n       .4byte    .LCFI5-.LCFI0\n       .byte     0x2f     /*  DW_CFA_GNU_negative_offset_extended */\n-      .byte     0x41     /*  uleb128 0x41 */\n-      .byte     0x1      /*  uleb128 0x1 */\n+      .uleb128  0x41\n+      .uleb128  0x1\n       .byte     0x9f     /*  DW_CFA_offset, column 0x1f */\n-      .byte     0x1      /*  uleb128 0x1 */\n+      .uleb128  0x1\n       .byte     0x9e     /*  DW_CFA_offset, column 0x1e */\n-      .byte     0x2      /*  uleb128 0x2 */\n+      .uleb128  0x2\n       .byte     0x9d     /*  DW_CFA_offset, column 0x1d */\n-      .byte     0x3      /*  uleb128 0x3 */\n+      .uleb128  0x3\n       .byte     0x9c     /*  DW_CFA_offset, column 0x1c */\n-      .byte     0x4      /*  uleb128 0x4 */\n+      .uleb128  0x4\n       .byte     0x4      /*  DW_CFA_advance_loc4 */\n       .4byte    .LCFI6-.LCFI5\n       .byte     0xd      /*  DW_CFA_def_cfa_register */\n-      .byte     0x1c     /*  uleb128 0x1c */\n+      .uleb128  0x1c\n       .align 2\n .LEFDE1:\n #endif"}, {"sha": "ac14fa751afd8f39bf3f27bf858025550e13dcfe", "filename": "libffi/src/s390/sysv.S", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fs390%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fs390%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fs390%2Fsysv.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -23,6 +23,9 @@\n    OTHER DEALINGS IN THE SOFTWARE.\n    ----------------------------------------------------------------------- */\n \n+#define LIBFFI_ASM\n+#include <ffi.h>\n+\n #ifndef __s390x__\n  \n .text\n@@ -146,7 +149,7 @@ ffi_closure_SYSV:\n \t.size\t ffi_closure_SYSV,.ffi_closure_SYSV_end-ffi_closure_SYSV\n \n \n-\t.section\t.eh_frame,\"a\",@progbits\n+\t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n .Lframe1:\n \t.4byte\t.LECIE1-.LSCIE1\t# Length of Common Information Entry\n .LSCIE1:\n@@ -345,7 +348,7 @@ ffi_closure_SYSV:\n \n \n \n-\t.section\t.eh_frame,\"a\",@progbits\n+\t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n .Lframe1:\n \t.4byte\t.LECIE1-.LSCIE1\t# Length of Common Information Entry\n .LSCIE1:"}, {"sha": "e9db51b045668d046351cc177b81d8bfcedf0193", "filename": "libffi/src/sparc/v8.S", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fsparc%2Fv8.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fsparc%2Fv8.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv8.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -172,7 +172,11 @@ done1:\n #define uanword\tuaword\n #endif\n \n+#ifdef HAVE_RO_EH_FRAME\n+\t.section\t\".eh_frame\",#alloc\n+#else\n \t.section\t\".eh_frame\",#alloc,#write\n+#endif\n .LLframe1:\n \t.uaword\t.LLECIE1-.LLSCIE1\t! Length of Common Information Entry\n .LLSCIE1:"}, {"sha": "e2eeb439eedcadf1b065510013b85f2470d0c693", "filename": "libffi/src/sparc/v9.S", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fsparc%2Fv9.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fsparc%2Fv9.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsparc%2Fv9.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -207,7 +207,11 @@ longdouble1:\n .ffi_closure_v9_end:\n \t.size\tffi_closure_v9,.ffi_closure_v9_end-ffi_closure_v9\n \n+#ifdef HAVE_RO_EH_FRAME\n+\t.section\t\".eh_frame\",#alloc\n+#else\n \t.section\t\".eh_frame\",#alloc,#write\n+#endif\n .LLframe1:\n \t.uaword\t.LLECIE1-.LLSCIE1\t! Length of Common Information Entry\n .LLSCIE1:"}, {"sha": "b4bcbba180d4cf2cb3e94a380d847ae2968f2487", "filename": "libffi/src/x86/sysv.S", "status": "modified", "additions": 44, "deletions": 30, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fx86%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fx86%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Fsysv.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -129,41 +129,55 @@ epilogue:\n .ffi_call_SYSV_end:\n         .size    ffi_call_SYSV,.ffi_call_SYSV_end-ffi_call_SYSV\n \n-.section\t.eh_frame,\"aw\",@progbits\n-__FRAME_BEGIN__:\n-\t.4byte\t.LLCIE1\n+\t.section\t.eh_frame,EH_FRAME_FLAGS,@progbits\n+.Lframe1:\n+\t.long\t.LECIE1-.LSCIE1\t# Length of Common Information Entry\n .LSCIE1:\n-\t.4byte\t0x0\n-\t.byte\t0x1\n-\t.byte\t0x0\n-\t.byte\t0x1\n-\t.byte\t0x7c\n-\t.byte\t0x8\n-\t.byte\t0xc\n-\t.byte\t0x4\n-\t.byte\t0x4\n-\t.byte\t0x88\n-\t.byte\t0x1\n+\t.long\t0x0\t# CIE Identifier Tag\n+\t.byte\t0x1\t# CIE Version\n+#ifdef __PIC__\n+\t.ascii \"zR\\0\"\t# CIE Augmentation\n+#else\n+\t.ascii \"\\0\"\t# CIE Augmentation\n+#endif\n+\t.uleb128 0x1\t# CIE Code Alignment Factor\n+\t.sleb128 -4\t# CIE Data Alignment Factor\n+\t.byte\t0x8\t# CIE RA Column\n+#ifdef __PIC__\n+\t.uleb128 0x1\t# Augmentation size\n+\t.byte\t0x1b\t# FDE Encoding (pcrel sdata4)\n+#endif\n+\t.byte\t0xc\t# DW_CFA_def_cfa\n+\t.uleb128 0x4\n+\t.uleb128 0x4\n+\t.byte\t0x88\t# DW_CFA_offset, column 0x8\n+\t.uleb128 0x1\n \t.align 4\n .LECIE1:\n-\t.set\t.LLCIE1,.LECIE1-.LSCIE1\n-\t.4byte\t.LLFDE1\n .LSFDE1:\n-\t.4byte\t.LSFDE1-__FRAME_BEGIN__\n-\t.4byte\t.LFB1\n-\t.4byte\t.LFE1-.LFB1\n-\t.byte\t0x4\n-\t.4byte\t.LCFI0-.LFB1\n-\t.byte\t0xe\n-\t.byte\t0x8\n-\t.byte\t0x85\n-\t.byte\t0x2\n-\t.byte\t0x4\n-\t.4byte\t.LCFI1-.LCFI0\n-\t.byte\t0xd\n-\t.byte\t0x5\n+\t.long\t.LEFDE1-.LASFDE1\t# FDE Length\n+.LASFDE1:\n+\t.long\t.LASFDE1-.Lframe1\t# FDE CIE offset\n+#ifdef __PIC__\n+\t.long\t.LFB1-.\t# FDE initial location\n+#else\n+\t.long\t.LFB1\t# FDE initial location\n+#endif\n+\t.long\t.LFE1-.LFB1\t# FDE address range\n+#ifdef __PIC__\n+\t.uleb128 0x0\t# Augmentation size\n+#endif\n+\t.byte\t0x4\t# DW_CFA_advance_loc4\n+\t.long\t.LCFI0-.LFB1\n+\t.byte\t0xe\t# DW_CFA_def_cfa_offset\n+\t.uleb128 0x8\n+\t.byte\t0x85\t# DW_CFA_offset, column 0x5\n+\t.uleb128 0x2\n+\t.byte\t0x4\t# DW_CFA_advance_loc4\n+\t.long\t.LCFI1-.LCFI0\n+\t.byte\t0xd\t# DW_CFA_def_cfa_register\n+\t.uleb128 0x5\n \t.align 4\n .LEFDE1:\n-\t.set\t.LLFDE1,.LEFDE1-.LSFDE1\n \n #endif /* ifndef __x86_64__ */"}, {"sha": "e39d60415b607ec60f6e457c8fd92d550088e5a1", "filename": "libffi/src/x86/unix64.S", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fx86%2Funix64.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a733b15e510bf45335f9b5dc345117d4741ae743/libffi%2Fsrc%2Fx86%2Funix64.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fx86%2Funix64.S?ref=a733b15e510bf45335f9b5dc345117d4741ae743", "patch": "@@ -237,7 +237,7 @@ ffi_closure_UNIX64:\n \tret\n .LFE2:\t\n \t\t\n-        .section        .eh_frame,\"a\",@progbits\n+        .section        .eh_frame,EH_FRAME_FLAGS,@progbits\n .Lframe0:\n         .long   .LECIE1-.LSCIE1\n .LSCIE1:"}]}