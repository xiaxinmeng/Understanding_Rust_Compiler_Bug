{"sha": "ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQyM2Y1ZDQxMTc0Y2UxM2YyYjNkOTEyYTNmNjYzM2QxZDZiYzBmNQ==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2014-11-01T08:44:39Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2014-11-01T08:44:39Z"}, "message": "[Patch 3/7 arc] Deprecate *_BY_PIECES_P, move to hookized version\n\ngcc/\n\n\t* config/arc/arc.c (TARGET_USE_BY_PIECES_INFRASTRUCTURE_P): New.\n\t(arc_use_by_pieces_infrastructure_p): Likewise.\n\t* confir/arc/arc.h (MOVE_BY_PIECES_P): Delete.\n\t(CAN_MOVE_BY_PIECES): Likewise.\n\nFrom-SVN: r216999", "tree": {"sha": "203a2c03a7ac185bee70fbd7e085279134e49be5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/203a2c03a7ac185bee70fbd7e085279134e49be5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b5e3200c52733b209ce8b9309b32bf152627746e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5e3200c52733b209ce8b9309b32bf152627746e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5e3200c52733b209ce8b9309b32bf152627746e"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "daebba906bda314d88df2243071f98d3ae3438a0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "patch": "@@ -1,3 +1,10 @@\n+2014-11-01  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arc/arc.c (TARGET_USE_BY_PIECES_INFRASTRUCTURE_P): New.\n+\t(arc_use_by_pieces_infrastructure_p): Likewise.\n+\t* confir/arc/arc.h (MOVE_BY_PIECES_P): Delete.\n+\t(CAN_MOVE_BY_PIECES): Likewise.\n+\n 2014-11-01  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/s390/s390.c (s390_use_by_pieces_infrastructure_p): New."}, {"sha": "f3769dd59ed7e50044ff268886ee1a455c3d16ec", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "patch": "@@ -415,6 +415,11 @@ static void output_short_suffix (FILE *file);\n \n static bool arc_frame_pointer_required (void);\n \n+static bool arc_use_by_pieces_infrastructure_p (unsigned int,\n+\t\t\t\t\t\tunsigned int,\n+\t\t\t\t\t\tenum by_pieces_operation op,\n+\t\t\t\t\t\tbool);\n+\n /* Implements target hook vector_mode_supported_p.  */\n \n static bool\n@@ -530,6 +535,10 @@ static void arc_finalize_pic (void);\n #undef TARGET_DELEGITIMIZE_ADDRESS\n #define TARGET_DELEGITIMIZE_ADDRESS arc_delegitimize_address\n \n+#undef TARGET_USE_BY_PIECES_INFRASTRUCTURE_P\n+#define TARGET_USE_BY_PIECES_INFRASTRUCTURE_P \\\n+  arc_use_by_pieces_infrastructure_p\n+\n /* Usually, we will be able to scale anchor offsets.\n    When this fails, we want LEGITIMIZE_ADDRESS to kick in.  */\n #undef TARGET_MIN_ANCHOR_OFFSET\n@@ -9383,6 +9392,21 @@ arc_legitimize_reload_address (rtx *p, machine_mode mode, int opnum,\n   return false;\n }\n \n+/* Implement TARGET_USE_BY_PIECES_INFRASTRUCTURE_P.  */\n+\n+static bool\n+arc_use_by_pieces_infrastructure_p (unsigned int size,\n+\t\t\t\t    unsigned int align,\n+\t\t\t\t    enum by_pieces_operation op,\n+\t\t\t\t    bool speed_p)\n+{\n+  /* Let the movmem expander handle small block moves.  */\n+  if (op == MOVE_BY_PIECES)\n+    return false;\n+\n+  return default_use_by_pieces_infrastructure_p (size, align, op, speed_p);\n+}\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n #include \"gt-arc.h\""}, {"sha": "2d277872099b055a25a1df33725405c2c241107d", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=ad23f5d41174ce13f2b3d912a3f6633d1d6bc0f5", "patch": "@@ -1553,12 +1553,6 @@ extern int arc_return_address_regs[4];\n    in one reasonably fast instruction.  */\n #define MOVE_MAX 4\n \n-/* Let the movmem expander handle small block moves.  */\n-#define MOVE_BY_PIECES_P(LEN, ALIGN)  0\n-#define CAN_MOVE_BY_PIECES(SIZE, ALIGN) \\\n-  (move_by_pieces_ninsns (SIZE, ALIGN, MOVE_MAX_PIECES + 1) \\\n-   < (unsigned int) MOVE_RATIO (!optimize_size))\n-\n /* Undo the effects of the movmem pattern presence on STORE_BY_PIECES_P .  */\n #define MOVE_RATIO(SPEED) ((SPEED) ? 15 : 3)\n "}]}