{"sha": "f6ba0600ffc9a3035a121b50fffcf90754a342f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZiYTA2MDBmZmM5YTMwMzVhMTIxYjUwZmZmY2Y5MDc1NGEzNDJmNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-23T23:25:10Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-23T23:25:10Z"}, "message": "(movsf): Only generate stack temporary if used.\n\nFrom-SVN: r7552", "tree": {"sha": "d12e6ecc5dbc782290129d87c04511e019d02c09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d12e6ecc5dbc782290129d87c04511e019d02c09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6ba0600ffc9a3035a121b50fffcf90754a342f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ba0600ffc9a3035a121b50fffcf90754a342f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6ba0600ffc9a3035a121b50fffcf90754a342f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6ba0600ffc9a3035a121b50fffcf90754a342f5/comments", "author": null, "committer": null, "parents": [{"sha": "8c461ea15daf5e66325fe7ed7dd0f8848a585a3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c461ea15daf5e66325fe7ed7dd0f8848a585a3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c461ea15daf5e66325fe7ed7dd0f8848a585a3d"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "747355ade646d8c1c1c7a1a1368d579089b14210", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6ba0600ffc9a3035a121b50fffcf90754a342f5/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6ba0600ffc9a3035a121b50fffcf90754a342f5/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=f6ba0600ffc9a3035a121b50fffcf90754a342f5", "patch": "@@ -3763,8 +3763,6 @@\n \n   if (GET_CODE (operands[1]) == REG && REGNO (operands[1]) < 32)\n     {\n-      rtx stack_slot = assign_stack_temp (SFmode, 4, 0);\n-\n       /* If this is a store to memory or another integer register do the\n \t move directly.  Otherwise store to a temporary stack slot and\n \t load from there into a floating point register.  */\n@@ -3779,19 +3777,21 @@\n \t\t\t  operand_subword (operands[1], 0, 0, SFmode));\n \t  DONE;\n \t}\n+      else\n+\t{\n+\t  rtx stack_slot = assign_stack_temp (SFmode, 4, 0);\n \n-      emit_move_insn (stack_slot, operands[1]);\n-      emit_move_insn (operands[0], stack_slot);\n-      DONE;\n+\t  emit_move_insn (stack_slot, operands[1]);\n+\t  emit_move_insn (operands[0], stack_slot);\n+\t  DONE;\n+\t}\n     }\n \n   if (GET_CODE (operands[0]) == MEM)\n     operands[1] = force_reg (SFmode, operands[1]);\n \n   if (GET_CODE (operands[0]) == REG && REGNO (operands[0]) < 32)\n     {\n-      rtx stack_slot = assign_stack_temp (SFmode, 4, 0);\n-\n       if (GET_CODE (operands[1]) == MEM\n #if HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT && ! defined(REAL_IS_NOT_DOUBLE)\n \t  || GET_CODE (operands[1]) == CONST_DOUBLE\n@@ -3805,10 +3805,14 @@\n \t\t\t  operand_subword (operands[1], 0, 0, SFmode));\n \t  DONE;\n \t}\n+      else\n+\t{\n+\t  rtx stack_slot = assign_stack_temp (SFmode, 4, 0);\n \n-      emit_move_insn (stack_slot, operands[1]);\n-      emit_move_insn (operands[0], stack_slot);\n-      DONE;\n+\t  emit_move_insn (stack_slot, operands[1]);\n+\t  emit_move_insn (operands[0], stack_slot);\n+\t  DONE;\n+\t}\n     }\n \n   if (CONSTANT_P (operands[1]))"}]}