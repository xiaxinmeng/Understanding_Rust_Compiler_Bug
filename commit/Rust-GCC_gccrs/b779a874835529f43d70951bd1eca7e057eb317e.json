{"sha": "b779a874835529f43d70951bd1eca7e057eb317e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjc3OWE4NzQ4MzU1MjlmNDNkNzA5NTFiZDFlY2E3ZTA1N2ViMzE3ZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gmail.com", "date": "2006-12-15T15:48:10Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-12-15T15:48:10Z"}, "message": "re PR tree-optimization/30140 (inliner produces invalid gimple with promoted types)\n\n2006-12-15  Andrew Pinski  <pinski@gmail.com>\n\n        PR tree-opt/30140\n        * tree-inline.c (setup_one_parameter): Gimplify the statement if\n        the variable is not a gimple register variable.\n\nFrom-SVN: r119883", "tree": {"sha": "b7bdee32908b9644c336d231f2405f9e81d32dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7bdee32908b9644c336d231f2405f9e81d32dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b779a874835529f43d70951bd1eca7e057eb317e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b779a874835529f43d70951bd1eca7e057eb317e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b779a874835529f43d70951bd1eca7e057eb317e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b779a874835529f43d70951bd1eca7e057eb317e/comments", "author": {"login": "pinskia", "id": 8496799, "node_id": "MDQ6VXNlcjg0OTY3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8496799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pinskia", "html_url": "https://github.com/pinskia", "followers_url": "https://api.github.com/users/pinskia/followers", "following_url": "https://api.github.com/users/pinskia/following{/other_user}", "gists_url": "https://api.github.com/users/pinskia/gists{/gist_id}", "starred_url": "https://api.github.com/users/pinskia/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pinskia/subscriptions", "organizations_url": "https://api.github.com/users/pinskia/orgs", "repos_url": "https://api.github.com/users/pinskia/repos", "events_url": "https://api.github.com/users/pinskia/events{/privacy}", "received_events_url": "https://api.github.com/users/pinskia/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5db74c32303e26d80ecf7b0c14a71b0ee6b06b55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db74c32303e26d80ecf7b0c14a71b0ee6b06b55"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "70f82d9db8fc89bc877e76de818523307bfbcb55", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779a874835529f43d70951bd1eca7e057eb317e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779a874835529f43d70951bd1eca7e057eb317e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b779a874835529f43d70951bd1eca7e057eb317e", "patch": "@@ -1,3 +1,9 @@\n+2006-12-15  Andrew Pinski  <pinski@gmail.com>\n+\n+\tPR tree-opt/30140\n+\t* tree-inline.c (setup_one_parameter): Gimplify the statement if\n+\tthe variable is not a gimple register variable.\n+\n 2006-12-15  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* invoke.texi (mstringop-strategy): Add missing \"byte_loop\" value."}, {"sha": "39d9f11cc7db67aa5fd92e8d4e864d6131bc0290", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b779a874835529f43d70951bd1eca7e057eb317e/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b779a874835529f43d70951bd1eca7e057eb317e/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=b779a874835529f43d70951bd1eca7e057eb317e", "patch": "@@ -1106,9 +1106,10 @@ setup_one_parameter (copy_body_data *id, tree p, tree value, tree fn,\n \t at the end.  Note that is_gimple_cast only checks the outer\n \t tree code, not its operand.  Thus the explicit check that its\n \t operand is a gimple value.  */\n-      if (!is_gimple_val (rhs)\n+      if ((!is_gimple_val (rhs)\n \t  && (!is_gimple_cast (rhs)\n \t      || !is_gimple_val (TREE_OPERAND (rhs, 0))))\n+\t  || !is_gimple_reg (var))\n \tgimplify_stmt (&init_stmt);\n \n       /* If VAR represents a zero-sized variable, it's possible that the"}]}