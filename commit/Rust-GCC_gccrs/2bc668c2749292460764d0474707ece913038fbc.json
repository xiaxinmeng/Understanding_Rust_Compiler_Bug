{"sha": "2bc668c2749292460764d0474707ece913038fbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmJjNjY4YzI3NDkyOTI0NjA3NjRkMDQ3NDcwN2VjZTkxMzAzOGZiYw==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-09-21T17:19:16Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-09-21T17:19:16Z"}, "message": "PR c/81882 - attribute ifunc documentation uses invalid code\n\ngcc/ChangeLog:\n\n\tPR c/81882\n\t* doc/extend.texi (attribute ifunc): Avoid relying on ill-formed\n\tcode (in C++) or code that triggers warnings.\n\nFrom-SVN: r253076", "tree": {"sha": "1dfb12d2e90f9a20a2870325e76e2e65253f10cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1dfb12d2e90f9a20a2870325e76e2e65253f10cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2bc668c2749292460764d0474707ece913038fbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc668c2749292460764d0474707ece913038fbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bc668c2749292460764d0474707ece913038fbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bc668c2749292460764d0474707ece913038fbc/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7cd7dbdadf181dd79a933fee387364b24558058e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd7dbdadf181dd79a933fee387364b24558058e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd7dbdadf181dd79a933fee387364b24558058e"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "baaafa7327a25b195ac91f0424f27b79dd1e7195", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc668c2749292460764d0474707ece913038fbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc668c2749292460764d0474707ece913038fbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2bc668c2749292460764d0474707ece913038fbc", "patch": "@@ -1,3 +1,9 @@\n+2017-09-21  Martin Sebor  <msebor@redhat.com>\n+\n+\t* PR c/81882\n+\t* doc/extend.texi (attribute ifunc): Avoid relying on ill-formed\n+\tcode (in C++) or code that triggers warnings.\n+\n 2017-09-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* stor-layout.c (bit_from_pos): Do not distribute the conversion."}, {"sha": "3acba6001f7b6b0ba37e48aff73badb2e907b378", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2bc668c2749292460764d0474707ece913038fbc/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2bc668c2749292460764d0474707ece913038fbc/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=2bc668c2749292460764d0474707ece913038fbc", "patch": "@@ -2783,21 +2783,23 @@ The @code{ifunc} attribute is used to mark a function as an indirect\n function using the STT_GNU_IFUNC symbol type extension to the ELF\n standard.  This allows the resolution of the symbol value to be\n determined dynamically at load time, and an optimized version of the\n-routine can be selected for the particular processor or other system\n+routine to be selected for the particular processor or other system\n characteristics determined then.  To use this attribute, first define\n the implementation functions available, and a resolver function that\n returns a pointer to the selected implementation function.  The\n implementation functions' declarations must match the API of the\n-function being implemented, the resolver's declaration is be a\n-function returning pointer to void function returning void:\n+function being implemented.  The resolver should be declared to\n+be a function taking no arguments and returning a pointer to\n+a function of the same type as the implementation.  For example:\n \n @smallexample\n void *my_memcpy (void *dst, const void *src, size_t len)\n @{\n   @dots{}\n+  return dst;\n @}\n \n-static void (*resolve_memcpy (void)) (void)\n+static void * (*resolve_memcpy (void))(void *, const void *, size_t)\n @{\n   return my_memcpy; // we'll just always select this routine\n @}"}]}