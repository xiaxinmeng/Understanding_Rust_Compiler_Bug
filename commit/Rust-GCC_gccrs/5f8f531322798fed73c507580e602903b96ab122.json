{"sha": "5f8f531322798fed73c507580e602903b96ab122", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWY4ZjUzMTMyMjc5OGZlZDczYzUwNzU4MGU2MDI5MDNiOTZhYjEyMg==", "commit": {"author": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-02-08T20:54:14Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2006-02-08T20:54:14Z"}, "message": "re PR libfortran/25425 ([4.1 only] F95 and F2003 differ on list-directed output for 0.0)\n\n\tPR libfortran/25425\n\n\t* trans-decl.c (gfc_generate_function_code): Add new argument,\n\tpedantic, to set_std call.\n\n\t* libgfortran.h: Add pedantic field to compile_options struct.\n\t* io/write.c (calculate_G_format): Depending on the standard,\n\tchoose E or F format for list-directed output of 0.0.\n\t* runtime/error.c (notify_std): Make warning and error dependent\n\ton pedanticity.\n\t* runtime/compile_options.c (set_std): Use new pedantic argument.\n\nFrom-SVN: r110769", "tree": {"sha": "ff93abb380a7a9b32186abc7f83123e78202327a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff93abb380a7a9b32186abc7f83123e78202327a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f8f531322798fed73c507580e602903b96ab122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8f531322798fed73c507580e602903b96ab122", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f8f531322798fed73c507580e602903b96ab122", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f8f531322798fed73c507580e602903b96ab122/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cf94e58cbde0c5e906720768bd738588a1a075a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cf94e58cbde0c5e906720768bd738588a1a075a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cf94e58cbde0c5e906720768bd738588a1a075a"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "83dd30cdb7863bb37258111a73bbf0808d09867b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8f531322798fed73c507580e602903b96ab122/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8f531322798fed73c507580e602903b96ab122/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=5f8f531322798fed73c507580e602903b96ab122", "patch": "@@ -1,3 +1,9 @@\n+2006-02-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/25425\n+\t* trans-decl.c (gfc_generate_function_code): Add new argument,\n+\tpedantic, to set_std call.\n+\n 2005-02-06  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/23815"}, {"sha": "d1892b7fdd857579b33863adbc19564a5af59d6e", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8f531322798fed73c507580e602903b96ab122/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8f531322798fed73c507580e602903b96ab122/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=5f8f531322798fed73c507580e602903b96ab122", "patch": "@@ -2226,7 +2226,8 @@ gfc_build_builtin_function_decls (void)\n   gfor_fndecl_set_std =\n     gfc_build_library_function_decl (get_identifier (PREFIX(\"set_std\")),\n \t\t\t\t    void_type_node,\n-\t\t\t\t    2,\n+\t\t\t\t    3,\n+\t\t\t\t    gfc_int4_type_node,\n \t\t\t\t    gfc_int4_type_node,\n \t\t\t\t    gfc_int4_type_node);\n \n@@ -2817,10 +2818,10 @@ gfc_generate_function_code (gfc_namespace * ns)\n   /* Now generate the code for the body of this function.  */\n   gfc_init_block (&body);\n \n-  /* If this is the main program and we compile with -pedantic, add a call\n-     to set_std to set up the runtime library Fortran language standard\n-     parameters.  */\n-  if (sym->attr.is_main_program && pedantic)\n+  /* If this is the main program, add a call to set_std to set up the\n+     runtime library Fortran language standard parameters.  */\n+\n+  if (sym->attr.is_main_program)\n     {\n       tree arglist, gfc_int4_type_node;\n \n@@ -2831,6 +2832,9 @@ gfc_generate_function_code (gfc_namespace * ns)\n       arglist = gfc_chainon_list (arglist,\n \t\t\t\t  build_int_cst (gfc_int4_type_node,\n \t\t\t\t\t\t gfc_option.allow_std));\n+      arglist = gfc_chainon_list (arglist,\n+\t\t\t\t  build_int_cst (gfc_int4_type_node,\n+\t\t\t\t\t\t pedantic));\n       tmp = build_function_call_expr (gfor_fndecl_set_std, arglist);\n       gfc_add_expr_to_block (&body, tmp);\n     }"}, {"sha": "a8e881d45fae7f8b531160c5819a83d21e14853b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=5f8f531322798fed73c507580e602903b96ab122", "patch": "@@ -1,3 +1,13 @@\n+2006-02-08  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n+\n+\tPR libfortran/25425\n+\t* libgfortran.h: Add pedantic field to compile_options struct.\n+\t* io/write.c (calculate_G_format): Depending on the standard,\n+\tchoose E or F format for list-directed output of 0.0.\n+\t* runtime/error.c (notify_std): Make warning and error dependent\n+\ton pedanticity.\n+\t* runtime/compile_options.c (set_std): Use new pedantic argument.\n+\n 2006-02-07  Dale Ranta  <dir@lanl.gov>\n \n \tPR fortran/25577\n@@ -6,8 +16,8 @@\n 2006-02-07  Rainer Emrich <r.emrich@de.tecosim.com>\n \n \t* intrinsics/c99_functions.c: Work around incompatible\n-        declarations of cabs{,f,l} on pre-C99 IRIX systems.\n-                \n+\tdeclarations of cabs{,f,l} on pre-C99 IRIX systems.\n+\n 2005-02-06  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/23815"}, {"sha": "edd2933c3de1fc7ceae3266068f1d562bec49315", "filename": "libgfortran/io/write.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2Fio%2Fwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2Fio%2Fwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fwrite.c?ref=5f8f531322798fed73c507580e602903b96ab122", "patch": "@@ -302,7 +302,8 @@ calculate_G_format (st_parameter_dt *dtp, const fnode *f,\n   /* In case of the two data magnitude ranges,\n      generate E editing, Ew.d[Ee].  */\n   exp_d = calculate_exp (d);\n-  if ((m > 0.0 && m < 0.1 - 0.05 / exp_d) || (m >= exp_d - 0.5 ))\n+  if ((m > 0.0 && m < 0.1 - 0.05 / exp_d) || (m >= exp_d - 0.5 ) ||\n+      ((m == 0.0) && !(compile_options.allow_std & GFC_STD_F2003)))\n     {\n       newf->format = FMT_E;\n       newf->u.real.w = w;"}, {"sha": "f1a1a3e7e1c7df1aac5b3f81bbeb1aa16ef0751e", "filename": "libgfortran/libgfortran.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2Flibgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2Flibgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Flibgfortran.h?ref=5f8f531322798fed73c507580e602903b96ab122", "patch": "@@ -336,6 +336,7 @@ typedef struct\n {\n   int warn_std;\n   int allow_std;\n+  int pedantic;\n   int convert;\n }\n compile_options_t;"}, {"sha": "ce5e52a34da79ad7ac8835f2300364b17d5d39ec", "filename": "libgfortran/runtime/compile_options.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2Fruntime%2Fcompile_options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2Fruntime%2Fcompile_options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fcompile_options.c?ref=5f8f531322798fed73c507580e602903b96ab122", "patch": "@@ -37,13 +37,15 @@ compile_options_t compile_options;\n \n \n /* Prototypes */\n-extern void set_std (GFC_INTEGER_4, GFC_INTEGER_4);\n+extern void set_std (GFC_INTEGER_4, GFC_INTEGER_4, GFC_INTEGER_4);\n export_proto(set_std);\n \n \n void\n-set_std (GFC_INTEGER_4 warn_std, GFC_INTEGER_4 allow_std)\n+set_std (GFC_INTEGER_4 warn_std, GFC_INTEGER_4 allow_std,\n+\t GFC_INTEGER_4 pedantic)\n {\n+  compile_options.pedantic = pedantic;\n   compile_options.warn_std = warn_std;\n   compile_options.allow_std = allow_std;\n }\n@@ -58,6 +60,7 @@ init_compile_options (void)\n     | GFC_STD_F2003 | GFC_STD_LEGACY;\n   compile_options.allow_std = GFC_STD_F95_OBS | GFC_STD_F95_DEL\n     | GFC_STD_F2003 | GFC_STD_F95 | GFC_STD_F77 | GFC_STD_GNU | GFC_STD_LEGACY;\n+  compile_options.pedantic = 0;\n }\n \n /* Function called by the front-end to tell us the"}, {"sha": "b25cd0c8c160934e02308bbff6de54aa48dd0ee2", "filename": "libgfortran/runtime/error.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2Fruntime%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f8f531322798fed73c507580e602903b96ab122/libgfortran%2Fruntime%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Ferror.c?ref=5f8f531322798fed73c507580e602903b96ab122", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2002, 2003, 2005 Free Software Foundation, Inc.\n+/* Copyright (C) 2002, 2003, 2005, 2006 Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n \n This file is part of the GNU Fortran 95 runtime library (libgfortran).\n@@ -508,6 +508,9 @@ notify_std (int std, const char * message)\n {\n   int warning;\n \n+  if (!compile_options.pedantic)\n+    return SUCCESS;\n+\n   warning = compile_options.warn_std & std;\n   if ((compile_options.allow_std & std) != 0 && !warning)\n     return SUCCESS;"}]}