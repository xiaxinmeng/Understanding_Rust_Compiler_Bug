{"sha": "bf69edf8ce47ca618eff30df2308279a40b22096", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY2OWVkZjhjZTQ3Y2E2MThlZmYzMGRmMjMwODI3OWE0MGIyMjA5Ng==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-09-09T17:29:47Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-09-09T17:42:27Z"}, "message": "x32: Update gcc.target/i386/builtin_thread_pointer.c\n\nUpdate gcc.target/i386/builtin_thread_pointer.c for x32.  For\n\nint\nfoo3 (int i)\n{\n  int* p = (int*) __builtin_thread_pointer ();\n  return p[i];\n}\n\nwe can't generate:\n\n\tmovl\t%fs:0(,%edi,4), %eax\n\tret\n\nfor x32 since the address of %fs:0(,%edi,4) is %fs + zero-extended to 64\nbits of 0(,%edi,4).  Instead, we generate:\n\n\tmovl\t%fs:0, %eax\n\tmovl\t(%eax,%edi,4), %eax\n\n\tPR target/96955\n\t* gcc.target/i386/builtin_thread_pointer.c: Update scan-assembler\n\tfor x32.", "tree": {"sha": "0310ee372fb7395b9c8aca04d7fccc6f6ae21c31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0310ee372fb7395b9c8aca04d7fccc6f6ae21c31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf69edf8ce47ca618eff30df2308279a40b22096", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf69edf8ce47ca618eff30df2308279a40b22096", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf69edf8ce47ca618eff30df2308279a40b22096", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf69edf8ce47ca618eff30df2308279a40b22096/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6632dc9a8ee77ad66a8d62d736a9112de9e41c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6632dc9a8ee77ad66a8d62d736a9112de9e41c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6632dc9a8ee77ad66a8d62d736a9112de9e41c7"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "16a7ca49b9906d4afd5538653f5f3a7ee9fb74a6", "filename": "gcc/testsuite/gcc.target/i386/builtin_thread_pointer.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf69edf8ce47ca618eff30df2308279a40b22096/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_thread_pointer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf69edf8ce47ca618eff30df2308279a40b22096/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_thread_pointer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fbuiltin_thread_pointer.c?ref=bf69edf8ce47ca618eff30df2308279a40b22096", "patch": "@@ -25,4 +25,6 @@ foo3 (int i)\n   return p[i];\n }\n \n-/* { dg-final { scan-assembler \"movl\\[ \\t\\]*%\\[fg\\]s:0\\\\(,%\\[a-z0-9\\]*,4\\\\), %eax\" } }  */\n+/* { dg-final { scan-assembler \"movl\\[ \\t\\]*%\\[fg\\]s:0\\\\(,%\\[a-z0-9\\]*,4\\\\), %eax\" { target { ! x32 } } } }  */\n+/* { dg-final { scan-assembler-not \"movl\\[ \\t\\]*%fs:0\\\\(,%\\[a-z0-9\\]*,4\\\\), %eax\" { target x32 } } }  */\n+/* { dg-final { scan-assembler \"movl\\[ \\t\\]*\\\\(%eax,%edi,4\\\\), %eax\" { target x32 } } }  */"}]}