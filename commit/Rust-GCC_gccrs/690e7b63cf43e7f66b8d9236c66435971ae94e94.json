{"sha": "690e7b63cf43e7f66b8d9236c66435971ae94e94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkwZTdiNjNjZjQzZTdmNjZiOGQ5MjM2YzY2NDM1OTcxYWU5NGU5NA==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel1@de.ibm.com", "date": "2007-03-07T09:11:12Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2007-03-07T09:11:12Z"}, "message": "s390.c (override_options): Don't emit an error when -mstack-size is used without providing -mstack-guard.\n\n2007-03-07  Andreas Krebbel  <krebbel1@de.ibm.com>\n\n\t* config/s390/s390.c (override_options): Don't emit an error when\n\t-mstack-size is used without providing -mstack-guard.\n\t(s390_emit_prologue): Choose stack_guard value automatically if not\n\tprovided via command line.\n\t* doc/invoke.texi: Adjust description of -mstack-guard and -mstack-size.\n\nFrom-SVN: r122655", "tree": {"sha": "a65cd5341f2e89ae1e116ebb76244b7ee1ad56ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a65cd5341f2e89ae1e116ebb76244b7ee1ad56ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/690e7b63cf43e7f66b8d9236c66435971ae94e94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690e7b63cf43e7f66b8d9236c66435971ae94e94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/690e7b63cf43e7f66b8d9236c66435971ae94e94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/690e7b63cf43e7f66b8d9236c66435971ae94e94/comments", "author": null, "committer": null, "parents": [{"sha": "170bdabaa286a79f565a6e8c6a9bcc514e19a7c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/170bdabaa286a79f565a6e8c6a9bcc514e19a7c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/170bdabaa286a79f565a6e8c6a9bcc514e19a7c2"}], "stats": {"total": 82, "additions": 58, "deletions": 24}, "files": [{"sha": "5d702fd9cc63eeea4409ab38edeeadd3329fe908", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e7b63cf43e7f66b8d9236c66435971ae94e94/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e7b63cf43e7f66b8d9236c66435971ae94e94/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=690e7b63cf43e7f66b8d9236c66435971ae94e94", "patch": "@@ -1,3 +1,11 @@\n+2007-03-07  Andreas Krebbel  <krebbel1@de.ibm.com>\n+\n+\t* config/s390/s390.c (override_options): Don't emit an error when\n+\t-mstack-size is used without providing -mstack-guard.\n+\t(s390_emit_prologue): Choose stack_guard value automatically if not\n+\tprovided via command line.\n+\t* doc/invoke.texi: Adjust description of -mstack-guard and -mstack-size.\n+\n 2007-03-07  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/i386/i386.c (output_set_got): Add a GOT initialization"}, {"sha": "784b846f52132f3464dda39d4745f49bc7a0fd4b", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 39, "deletions": 15, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e7b63cf43e7f66b8d9236c66435971ae94e94/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e7b63cf43e7f66b8d9236c66435971ae94e94/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=690e7b63cf43e7f66b8d9236c66435971ae94e94", "patch": "@@ -1437,9 +1437,7 @@ override_options (void)\n \n   if (s390_stack_size)\n     {\n-      if (!s390_stack_guard)\n-\terror (\"-mstack-size implies use of -mstack-guard\");\n-      else if (s390_stack_guard >= s390_stack_size)\n+      if (s390_stack_guard >= s390_stack_size)\n \terror (\"stack size must be greater than the stack guard value\");\n       else if (s390_stack_size > 1 << 16)\n \terror (\"stack size must not be greater than 64k\");\n@@ -7245,21 +7243,47 @@ s390_emit_prologue (void)\n \n       if (s390_stack_size)\n   \t{\n-\t  HOST_WIDE_INT stack_check_mask = ((s390_stack_size - 1)\n-\t\t\t\t\t    & ~(s390_stack_guard - 1));\n-\t  rtx t = gen_rtx_AND (Pmode, stack_pointer_rtx,\n-\t\t\t       GEN_INT (stack_check_mask));\n+\t  HOST_WIDE_INT stack_guard;\n \n-\t  if (TARGET_64BIT)\n-\t    gen_cmpdi (t, const0_rtx);\n+\t  if (s390_stack_guard)\n+\t    stack_guard = s390_stack_guard;\n \t  else\n-\t    gen_cmpsi (t, const0_rtx);\n+\t    {\n+\t      /* If no value for stack guard is provided the smallest power of 2\n+\t\t larger than the current frame size is chosen.  */\n+\t      stack_guard = 1;\n+\t      while (stack_guard < cfun_frame_layout.frame_size)\n+\t\tstack_guard <<= 1;\n+\t    }\n \n-\t  emit_insn (gen_conditional_trap (gen_rtx_EQ (CCmode, \n-\t\t\t\t\t\t       gen_rtx_REG (CCmode, \n-\t\t\t\t\t\t\t\t    CC_REGNUM),\n-\t\t\t\t\t\t       const0_rtx),\n-\t\t\t\t\t   const0_rtx));\n+\t  if (cfun_frame_layout.frame_size >= s390_stack_size)\n+\t    {\n+\t      warning (0, \"frame size of function %qs is \"\n+\t\t       HOST_WIDE_INT_PRINT_DEC\n+\t\t       \" bytes exceeding user provided stack limit of \"\n+\t\t       HOST_WIDE_INT_PRINT_DEC \" bytes.  \"\n+\t\t       \"An unconditional trap is added.\",\n+\t\t       current_function_name(), cfun_frame_layout.frame_size,\n+\t\t       s390_stack_size);\n+\t      emit_insn (gen_trap ());\n+\t    }\n+\t  else\n+\t    {\n+\t      HOST_WIDE_INT stack_check_mask = ((s390_stack_size - 1)\n+\t\t\t\t\t\t& ~(stack_guard - 1));\n+\t      rtx t = gen_rtx_AND (Pmode, stack_pointer_rtx,\n+\t\t\t\t   GEN_INT (stack_check_mask));\n+\t      if (TARGET_64BIT)\n+\t\tgen_cmpdi (t, const0_rtx);\n+\t      else\n+\t\tgen_cmpsi (t, const0_rtx);\n+\n+\t      emit_insn (gen_conditional_trap (gen_rtx_EQ (CCmode,\n+\t\t\t\t\t\t\t   gen_rtx_REG (CCmode,\n+\t\t\t\t\t\t\t\t     CC_REGNUM),\n+\t\t\t\t\t\t\t   const0_rtx),\n+\t\t\t\t\t       const0_rtx));\n+\t    }\n   \t}\n \n       if (s390_warn_framesize > 0 "}, {"sha": "f09b9b16aaff08168898fdebdcbf510abf579723", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/690e7b63cf43e7f66b8d9236c66435971ae94e94/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/690e7b63cf43e7f66b8d9236c66435971ae94e94/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=690e7b63cf43e7f66b8d9236c66435971ae94e94", "patch": "@@ -12789,17 +12789,19 @@ sized arrays.  This is generally a bad idea with a limited stack size.\n @item -mstack-size=@var{stack-size}\n @opindex mstack-guard\n @opindex mstack-size\n-These arguments always have to be used in conjunction.  If they are present the s390\n-back end emits additional instructions in the function prologue which trigger a trap\n-if the stack size is @var{stack-guard} bytes above the @var{stack-size}\n-(remember that the stack on s390 grows downward).  These options are intended to\n-be used to help debugging stack overflow problems.  The additionally emitted code\n-causes only little overhead and hence can also be used in production like systems\n-without greater performance degradation.  The given values have to be exact\n-powers of 2 and @var{stack-size} has to be greater than @var{stack-guard} without\n-exceeding 64k.\n+If these options are provided the s390 back end emits additional instructions in\n+the function prologue which trigger a trap if the stack size is @var{stack-guard}\n+bytes above the @var{stack-size} (remember that the stack on s390 grows downward).\n+If the @var{stack-guard} option is omitted the smallest power of 2 larger than\n+the frame size of the compiled function is chosen.\n+These options are intended to be used to help debugging stack overflow problems.\n+The additionally emitted code causes only little overhead and hence can also be\n+used in production like systems without greater performance degradation.  The given\n+values have to be exact powers of 2 and @var{stack-size} has to be greater than\n+@var{stack-guard} without exceeding 64k.\n In order to be efficient the extra code makes the assumption that the stack starts\n at an address aligned to the value given by @var{stack-size}.\n+The @var{stack-guard} option can only be used in conjunction with @var{stack-size}.\n @end table\n \n @node Score Options"}]}