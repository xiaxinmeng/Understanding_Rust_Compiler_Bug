{"sha": "153668ec8625551f371dc34a31ec2d42ddbec03f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTUzNjY4ZWM4NjI1NTUxZjM3MWRjMzRhMzFlYzJkNDJkZGJlYzAzZg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2011-06-02T20:13:08Z"}, "committer": {"name": "Julian Brown", "email": "jules@gcc.gnu.org", "date": "2011-06-02T20:13:08Z"}, "message": "arm-protos.h (tune_params): Add branch_cost hook.\n\n\tgcc/\n\t* config/arm/arm-protos.h (tune_params): Add branch_cost hook.\n\t* config/arm/arm.c (arm_default_branch_cost): New.\n\t(arm_slowmul_tune, arm_fastmul_tune, arm_xscale_tune, arm_9e_tune)\n\t(arm_v6t2_tune, arm_cortex_tune, arm_cortex_a9_tune)\n\t(arm_fa726_tune): Set branch_cost field using\n\tarm_default_branch_cost.\n\t* config/arm/arm.h (BRANCH_COST): Use branch_cost hook from\n\tcurrent_tune structure.\n\t* dojump.c (tm_p.h): Include file.\n\nFrom-SVN: r174578", "tree": {"sha": "95553b682421937874e93703d48585f869e35c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95553b682421937874e93703d48585f869e35c27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/153668ec8625551f371dc34a31ec2d42ddbec03f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/153668ec8625551f371dc34a31ec2d42ddbec03f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/153668ec8625551f371dc34a31ec2d42ddbec03f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/153668ec8625551f371dc34a31ec2d42ddbec03f/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ec70105dd24c40d5eb60c2f1199cc7e0c3a6cd2"}], "stats": {"total": 55, "additions": 44, "deletions": 11}, "files": [{"sha": "37ca621949a0feb72081e73a2782ed870f658187", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=153668ec8625551f371dc34a31ec2d42ddbec03f", "patch": "@@ -1,6 +1,19 @@\n 2011-06-02  Julian Brown  <julian@codesourcery.com>\n \n-\t* arm-cores.def (arm1156t2-s, arm1156t2f-s): Use v6t2 tuning.\n+\t* config/arm/arm-protos.h (tune_params): Add branch_cost hook.\n+\t* config/arm/arm.c (arm_default_branch_cost): New.\n+\t(arm_slowmul_tune, arm_fastmul_tune, arm_xscale_tune, arm_9e_tune)\n+\t(arm_v6t2_tune, arm_cortex_tune, arm_cortex_a9_tune)\n+\t(arm_fa726_tune): Set branch_cost field using\n+\tarm_default_branch_cost.\n+\t* config/arm/arm.h (BRANCH_COST): Use branch_cost hook from\n+\tcurrent_tune structure.\n+\t* dojump.c (tm_p.h): Include file.\n+\n+2011-06-02  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/arm-cores.def (arm1156t2-s, arm1156t2f-s): Use v6t2\n+\ttuning.\n \t(cortex-a5, cortex-a8, cortex-a15, cortex-r4, cortex-r4f, cortex-m4)\n \t(cortex-m3, cortex-m1, cortex-m0): Use cortex tuning.\n \t* config/arm/arm-protos.h (tune_params): Add prefer_constant_pool"}, {"sha": "c104d741d772b82889569eecaa448b5262ed3536", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=153668ec8625551f371dc34a31ec2d42ddbec03f", "patch": "@@ -225,6 +225,7 @@ struct tune_params\n   int l1_cache_size;\n   int l1_cache_line_size;\n   bool prefer_constant_pool;\n+  int (*branch_cost) (bool, bool);\n };\n \n extern const struct tune_params *current_tune;"}, {"sha": "9519e0196e238babdfd34f6ea46f058a1a751731", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 26, "deletions": 8, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=153668ec8625551f371dc34a31ec2d42ddbec03f", "patch": "@@ -255,6 +255,7 @@ static bool arm_builtin_support_vector_misalignment (enum machine_mode mode,\n static void arm_conditional_register_usage (void);\n static reg_class_t arm_preferred_rename_class (reg_class_t rclass);\n static unsigned int arm_autovectorize_vector_sizes (void);\n+static int arm_default_branch_cost (bool, bool);\n \n \f\n /* Table of machine attributes.  */\n@@ -858,7 +859,8 @@ const struct tune_params arm_slowmul_tune =\n   NULL,\n   3,\t\t\t\t\t\t/* Constant limit.  */\n   ARM_PREFETCH_NOT_BENEFICIAL,\n-  true\t\t\t\t\t\t/* Prefer constant pool.  */\n+  true,\t\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost\n };\n \n const struct tune_params arm_fastmul_tune =\n@@ -867,7 +869,8 @@ const struct tune_params arm_fastmul_tune =\n   NULL,\n   1,\t\t\t\t\t\t/* Constant limit.  */\n   ARM_PREFETCH_NOT_BENEFICIAL,\n-  true\t\t\t\t\t\t/* Prefer constant pool.  */\n+  true,\t\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost\n };\n \n const struct tune_params arm_xscale_tune =\n@@ -876,7 +879,8 @@ const struct tune_params arm_xscale_tune =\n   xscale_sched_adjust_cost,\n   2,\t\t\t\t\t\t/* Constant limit.  */\n   ARM_PREFETCH_NOT_BENEFICIAL,\n-  true\t\t\t\t\t\t/* Prefer constant pool.  */\n+  true,\t\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost\n };\n \n const struct tune_params arm_9e_tune =\n@@ -885,7 +889,8 @@ const struct tune_params arm_9e_tune =\n   NULL,\n   1,\t\t\t\t\t\t/* Constant limit.  */\n   ARM_PREFETCH_NOT_BENEFICIAL,\n-  true\t\t\t\t\t\t/* Prefer constant pool.  */\n+  true,\t\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost\n };\n \n const struct tune_params arm_v6t2_tune =\n@@ -894,7 +899,8 @@ const struct tune_params arm_v6t2_tune =\n   NULL,\n   1,\t\t\t\t\t\t/* Constant limit.  */\n   ARM_PREFETCH_NOT_BENEFICIAL,\n-  false\t\t\t\t\t\t/* Prefer constant pool.  */\n+  false,\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost\n };\n \n /* Generic Cortex tuning.  Use more specific tunings if appropriate.  */\n@@ -904,7 +910,8 @@ const struct tune_params arm_cortex_tune =\n   NULL,\n   1,\t\t\t\t\t\t/* Constant limit.  */\n   ARM_PREFETCH_NOT_BENEFICIAL,\n-  false\t\t\t\t\t\t/* Prefer constant pool.  */\n+  false,\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost\n };\n \n const struct tune_params arm_cortex_a9_tune =\n@@ -913,7 +920,8 @@ const struct tune_params arm_cortex_a9_tune =\n   cortex_a9_sched_adjust_cost,\n   1,\t\t\t\t\t\t/* Constant limit.  */\n   ARM_PREFETCH_BENEFICIAL(4,32,32),\n-  false\t\t\t\t\t\t/* Prefer constant pool.  */\n+  false,\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost\n };\n \n const struct tune_params arm_fa726te_tune =\n@@ -922,7 +930,8 @@ const struct tune_params arm_fa726te_tune =\n   fa726te_sched_adjust_cost,\n   1,\t\t\t\t\t\t/* Constant limit.  */\n   ARM_PREFETCH_NOT_BENEFICIAL,\n-  true\t\t\t\t\t\t/* Prefer constant pool.  */\n+  true,\t\t\t\t\t\t/* Prefer constant pool.  */\n+  arm_default_branch_cost\n };\n \n \n@@ -8036,6 +8045,15 @@ arm_adjust_cost (rtx insn, rtx link, rtx dep, int cost)\n   return cost;\n }\n \n+static int\n+arm_default_branch_cost (bool speed_p, bool predictable_p ATTRIBUTE_UNUSED)\n+{\n+  if (TARGET_32BIT)\n+    return (TARGET_THUMB2 && !speed_p) ? 1 : 4;\n+  else\n+    return (optimize > 0) ? 2 : 0;\n+}\n+\n static int fp_consts_inited = 0;\n \n /* Only zero is valid for VFP.  Other values are also valid for FPA.  */"}, {"sha": "c32ef1ad030246f3b1963ef33fd854bc49d1ee7b", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=153668ec8625551f371dc34a31ec2d42ddbec03f", "patch": "@@ -1956,8 +1956,8 @@ typedef struct\n /* Try to generate sequences that don't involve branches, we can then use\n    conditional instructions */\n #define BRANCH_COST(speed_p, predictable_p) \\\n-  (TARGET_32BIT ? (TARGET_THUMB2 && !speed_p ? 1 : 4) \\\n-\t\t: (optimize > 0 ? 2 : 0))\n+  (current_tune->branch_cost (speed_p, predictable_p))\n+\n \f\n /* Position Independent Code.  */\n /* We decide which register to use based on the compilation options and"}, {"sha": "7606c15330dfe73491af5ae0f82ae94579b02244", "filename": "gcc/dojump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2Fdojump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/153668ec8625551f371dc34a31ec2d42ddbec03f/gcc%2Fdojump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdojump.c?ref=153668ec8625551f371dc34a31ec2d42ddbec03f", "patch": "@@ -36,6 +36,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ggc.h\"\n #include \"basic-block.h\"\n #include \"output.h\"\n+#include \"tm_p.h\"\n \n static bool prefer_and_bit_test (enum machine_mode, int);\n static void do_jump_by_parts_greater (tree, tree, int, rtx, rtx, int);"}]}