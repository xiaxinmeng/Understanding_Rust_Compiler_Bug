{"sha": "4860b874775e561a48ccc831b23ff3219351a561", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg2MGI4NzQ3NzVlNTYxYTQ4Y2NjODMxYjIzZmYzMjE5MzUxYTU2MQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2006-09-01T18:10:17Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2006-09-01T18:10:17Z"}, "message": "re PR c++/28705 (ICE: in type_dependent_expression_p, at cp/pt.c:12837)\n\ncp/\n\tPR c++/28705\n\t* semantics.c (finish_call_expr): Add assert.\n\t* name-lookup.c (lookup_arg_dependent): Check we found an overload\n\tor an object.\ntestsuite/\n\tPR c++/28705\n\t* g++.dg/lookup/koenig5.C: New.\n\t* g++.dg/template/crash56.C: New.\n\nFrom-SVN: r116638", "tree": {"sha": "ab34074aaf83251062553222ae454f8524bf7c3d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab34074aaf83251062553222ae454f8524bf7c3d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4860b874775e561a48ccc831b23ff3219351a561", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4860b874775e561a48ccc831b23ff3219351a561", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4860b874775e561a48ccc831b23ff3219351a561", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4860b874775e561a48ccc831b23ff3219351a561/comments", "author": null, "committer": null, "parents": [{"sha": "4832214af7070b43375bf34756334536024acdfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4832214af7070b43375bf34756334536024acdfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4832214af7070b43375bf34756334536024acdfb"}], "stats": {"total": 94, "additions": 90, "deletions": 4}, "files": [{"sha": "45597c33c752dd15d19a30ca7b255b268d655184", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=4860b874775e561a48ccc831b23ff3219351a561", "patch": "@@ -1,5 +1,10 @@\n 2006-09-01  Nathan Sidwell  <nathan@codesourcery.com>\n \n+\tPR c++/28705\n+\t* semantics.c (finish_call_expr): Add assert.\n+\t* name-lookup.c (lookup_arg_dependent): Check we found an overload\n+\tor an object.\n+\n \tPR c++/23287\n \t* parser.c (cp_parser_id_expression): Add member_p\n \targument. Update all callers."}, {"sha": "e794232131d3eba11cca73daddfd4dfdc97af93a", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=4860b874775e561a48ccc831b23ff3219351a561", "patch": "@@ -4668,7 +4668,19 @@ lookup_arg_dependent (tree name, tree fns, tree args)\n   k.namespaces = NULL_TREE;\n \n   arg_assoc_args (&k, args);\n-  POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, k.functions);\n+\n+  fns = k.functions;\n+  \n+  if (fns\n+      && TREE_CODE (fns) != VAR_DECL\n+      && !is_overloaded_fn (fns))\n+    {\n+      error (\"argument dependent lookup finds %q+D\", fns);\n+      error (\"  in call to %qD\", name);\n+      fns = error_mark_node;\n+    }\n+    \n+  POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, fns);\n }\n \n /* Add namespace to using_directives. Return NULL_TREE if nothing was"}, {"sha": "3ec0a1a1a95db48a712739cef0f2021b8d34c5d6", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=4860b874775e561a48ccc831b23ff3219351a561", "patch": "@@ -1754,6 +1754,7 @@ finish_call_expr (tree fn, tree args, bool disallow_virtual, bool koenig_p)\n \n   /* ARGS should be a list of arguments.  */\n   gcc_assert (!args || TREE_CODE (args) == TREE_LIST);\n+  gcc_assert (!TYPE_P (fn));\n \n   orig_fn = fn;\n   orig_args = args;"}, {"sha": "530c23e2aae2f34243f7a36b9e6a273346fe5ad2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4860b874775e561a48ccc831b23ff3219351a561", "patch": "@@ -1,9 +1,15 @@\n+2006-09-01  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/28705\n+\t* g++.dg/lookup/koenig5.C: New.\n+\t* g++.dg/template/crash56.C: New.\n+\n 2006-09-01  Josh Conner  <jconner@apple.com>\n \n \tPR c++/25505\n-\tgcc.dg/nrv3.c: New test.\n-\tgcc.dg/nrv4.c: New test.\n-\tgcc.dg/nrv5.c: New test.\n+\t* gcc.dg/nrv3.c: New test.\n+\t* gcc.dg/nrv4.c: New test.\n+\t* gcc.dg/nrv5.c: New test.\n \n 2006-09-01  Nathan Sidwell  <nathan@codesourcery.com>\n "}, {"sha": "139e3b8668456501f5936708b7818fd4a312a88e", "filename": "gcc/testsuite/g++.dg/lookup/koenig5.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fkoenig5.C?ref=4860b874775e561a48ccc831b23ff3219351a561", "patch": "@@ -0,0 +1,46 @@\n+// Koenig lookup is not defined as intended in the std.  DR 218 gives\n+// an indication of what is meant.  This test case encapsulates the\n+// current conservative behaviour\n+\n+// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 27 Aug 2006 <nathan@codesourcery.com>\n+\n+namespace N\n+{\n+  struct A {};\n+  void One (...);  // { dg-error \"conflict with\" \"\" }\n+  void (*Two) (...);  // { dg-error \"not a function\" \"\" }\n+  namespace Three {} // { dg-error \"lookup finds|not a function\" \"\" }\n+}\n+\n+namespace M\n+{\n+  struct B {};\n+  struct One {};  // { dg-error \"lookup finds|not a function\" \"\" }\n+  void (*Two) (...);  // { dg-error \"conflict with\" \"\" }\n+  void Three (...);  // { dg-error \"conflict with\" \"\" }\n+}\n+\n+namespace O \n+{\n+  struct C {};\n+  void Two (...); // { dg-error \"conflict with\" \"\" }\n+}\n+  \n+void g (N::A *a, M::B *b, O::C *c)\n+{\n+  One (a); // ok\n+  One (b); // { dg-error \"in call to\" \"\" }\n+  One (a, b); // { dg-error \"in call to\" \"\" }\n+\n+  Two (a); // ok\n+  Two (a, a); // ok\n+  Two (b); // ok\n+  Two (c); // ok\n+  Two (a, b); // { dg-error \"in call to\" \"\" }\n+  Two (a, c); // { dg-error \"in call to\" \"\" }\n+  \n+  Three (a); // { dg-error \"in call to\" \"\" }\n+  Three (b); // ok\n+  Three (a, b); // { dg-error \"in call to\" \"\" }\n+}"}, {"sha": "1efa3500d8aea6d04d5a9ce43c9d334f65416b8d", "filename": "gcc/testsuite/g++.dg/template/crash56.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4860b874775e561a48ccc831b23ff3219351a561/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash56.C?ref=4860b874775e561a48ccc831b23ff3219351a561", "patch": "@@ -0,0 +1,16 @@\n+// Origin: Wolfgang Bangerth <bangerth@dealii.org>\n+\n+// PR c++/28705\n+// DR 218 is debating whether this is well formed or not.  We've never\n+// accepted it (because we'd crash), so we continue to reject it, but\n+// without crashing.\n+\n+namespace N\n+{\n+  struct A { A (A*); }; // { dg-error \"lookup finds\" \"\" }\n+}\n+\n+template<typename T> void g (N::A *p)\n+{\n+  (void) A (p); // { dg-error \"in call\" \"\" }\n+}"}]}