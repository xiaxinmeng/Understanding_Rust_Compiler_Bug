{"sha": "1e78c638a7846b3c96c80b920ab38416abd35997", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU3OGM2MzhhNzg0NmIzYzk2YzgwYjkyMGFiMzg0MTZhYmQzNTk5Nw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2019-08-21T07:54:34Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gcc.gnu.org", "date": "2019-08-21T07:54:34Z"}, "message": "libphobos: Merge upstream druntime 5bb8ce19\n\nSynchronizes extern(C) bindings with latest release.\n\nReviewed-on: https://github.com/dlang/druntime/pull/2741\n\nlibphobos/ChangeLog:\n\n\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES_BIONIC): Add\n\tcore/sys/bionic/string.d.\n\t(DRUNTIME_DSOURCES_DARWIN): Add core/sys/darwin/string.d.\n\t(DRUNTIME_DSOURCES_DRAGONFLYBSD): Add core/sys/dragonflybsd/string.d,\n\tcore/sys/dragonflybsd/sys/socket.d.\n\t(DRUNTIME_DSOURCES_FREEBSD): Add core/sys/freebsd/string.d.\n\t(DRUNTIME_DSOURCES_LINUX): Add core/sys/linux/string.d.\n\t(DRUNTIME_DSOURCES_NETBSD): Add core/sys/netbsd/string.d,\n\tcore/sys/netbsd/sys/featuretest.d.\n\t* libdruntime/Makefile.in: Regenerate.\n\nFrom-SVN: r274773", "tree": {"sha": "03b4f473d5f5d172ddd13c4afb541bbabbe17a7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03b4f473d5f5d172ddd13c4afb541bbabbe17a7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e78c638a7846b3c96c80b920ab38416abd35997", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e78c638a7846b3c96c80b920ab38416abd35997", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e78c638a7846b3c96c80b920ab38416abd35997", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e78c638a7846b3c96c80b920ab38416abd35997/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0234a9176c7b4e7810f75eba5cbc060eae7b13a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0234a9176c7b4e7810f75eba5cbc060eae7b13a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0234a9176c7b4e7810f75eba5cbc060eae7b13a6"}], "stats": {"total": 5175, "additions": 4657, "deletions": 518}, "files": [{"sha": "76b13f49e693bd1db7298e758bd39c6881dab93a", "filename": "libphobos/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2FChangeLog?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -1,3 +1,16 @@\n+2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* libdruntime/Makefile.am (DRUNTIME_DSOURCES_BIONIC): Add\n+\tcore/sys/bionic/string.d.\n+\t(DRUNTIME_DSOURCES_DARWIN): Add core/sys/darwin/string.d.\n+\t(DRUNTIME_DSOURCES_DRAGONFLYBSD): Add core/sys/dragonflybsd/string.d,\n+\tcore/sys/dragonflybsd/sys/socket.d.\n+\t(DRUNTIME_DSOURCES_FREEBSD): Add core/sys/freebsd/string.d.\n+\t(DRUNTIME_DSOURCES_LINUX): Add core/sys/linux/string.d.\n+\t(DRUNTIME_DSOURCES_NETBSD): Add core/sys/netbsd/string.d,\n+\tcore/sys/netbsd/sys/featuretest.d.\n+\t* libdruntime/Makefile.in: Regenerate.\n+\n 2019-08-20  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* libdruntime/Makefile.am (DRUNTIME_DSOURCES_OPENBSD): Add"}, {"sha": "b8da026ba02f133ac27871d2daa2f637eacc7afe", "filename": "libphobos/libdruntime/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMERGE?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -1,4 +1,4 @@\n-94686651757294d608cfd5f053fda09dcf86695e\n+5bb8ce19fa495e5f794b3c513ae1bf7aabae93ff\n \n The first line of this file holds the git revision number of the last\n merge done from the dlang/druntime repository."}, {"sha": "d3fc347e2d0e4fb63f4a3d1967e0a3d25d757aca", "filename": "libphobos/libdruntime/Makefile.am", "status": "modified", "additions": 26, "deletions": 20, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.am?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -198,43 +198,47 @@ DRUNTIME_DSOURCES_GC = gc/bits.d gc/config.d gc/gcinterface.d \\\n DRUNTIME_DSOURCES_GCSTUB = gcstub/gc.d\n \n DRUNTIME_DSOURCES_BIONIC = core/sys/bionic/fcntl.d \\\n-\tcore/sys/bionic/unistd.d\n+\tcore/sys/bionic/string.d core/sys/bionic/unistd.d\n \n DRUNTIME_DSOURCES_DARWIN = core/sys/darwin/crt_externs.d \\\n \tcore/sys/darwin/dlfcn.d core/sys/darwin/execinfo.d \\\n \tcore/sys/darwin/mach/dyld.d core/sys/darwin/mach/getsect.d \\\n \tcore/sys/darwin/mach/kern_return.d core/sys/darwin/mach/loader.d \\\n \tcore/sys/darwin/mach/port.d core/sys/darwin/mach/semaphore.d \\\n \tcore/sys/darwin/mach/thread_act.d core/sys/darwin/netinet/in_.d \\\n-\tcore/sys/darwin/pthread.d core/sys/darwin/sys/cdefs.d \\\n-\tcore/sys/darwin/sys/event.d core/sys/darwin/sys/mman.d\n+\tcore/sys/darwin/pthread.d core/sys/darwin/string.d \\\n+\tcore/sys/darwin/sys/cdefs.d core/sys/darwin/sys/event.d \\\n+\tcore/sys/darwin/sys/mman.d\n \n DRUNTIME_DSOURCES_DRAGONFLYBSD = core/sys/dragonflybsd/dlfcn.d \\\n \tcore/sys/dragonflybsd/execinfo.d core/sys/dragonflybsd/netinet/in_.d \\\n-\tcore/sys/dragonflybsd/pthread_np.d core/sys/dragonflybsd/sys/_bitset.d \\\n+\tcore/sys/dragonflybsd/pthread_np.d core/sys/dragonflybsd/string.d \\\n+\tcore/sys/dragonflybsd/sys/_bitset.d \\\n \tcore/sys/dragonflybsd/sys/_cpuset.d core/sys/dragonflybsd/sys/cdefs.d \\\n \tcore/sys/dragonflybsd/sys/elf.d core/sys/dragonflybsd/sys/elf32.d \\\n \tcore/sys/dragonflybsd/sys/elf64.d \\\n \tcore/sys/dragonflybsd/sys/elf_common.d \\\n \tcore/sys/dragonflybsd/sys/event.d core/sys/dragonflybsd/sys/link_elf.d \\\n-\tcore/sys/dragonflybsd/sys/mman.d core/sys/dragonflybsd/time.d\n+\tcore/sys/dragonflybsd/sys/mman.d core/sys/dragonflybsd/sys/socket.d \\\n+\tcore/sys/dragonflybsd/time.d\n \n DRUNTIME_DSOURCES_FREEBSD = core/sys/freebsd/dlfcn.d \\\n \tcore/sys/freebsd/execinfo.d core/sys/freebsd/netinet/in_.d \\\n-\tcore/sys/freebsd/pthread_np.d core/sys/freebsd/sys/_bitset.d \\\n-\tcore/sys/freebsd/sys/_cpuset.d core/sys/freebsd/sys/cdefs.d \\\n-\tcore/sys/freebsd/sys/elf.d core/sys/freebsd/sys/elf32.d \\\n-\tcore/sys/freebsd/sys/elf64.d core/sys/freebsd/sys/elf_common.d \\\n-\tcore/sys/freebsd/sys/event.d core/sys/freebsd/sys/link_elf.d \\\n-\tcore/sys/freebsd/sys/mman.d core/sys/freebsd/sys/mount.d \\\n-\tcore/sys/freebsd/time.d core/sys/freebsd/unistd.d\n+\tcore/sys/freebsd/pthread_np.d core/sys/freebsd/string.d \\\n+\tcore/sys/freebsd/sys/_bitset.d core/sys/freebsd/sys/_cpuset.d \\\n+\tcore/sys/freebsd/sys/cdefs.d core/sys/freebsd/sys/elf.d \\\n+\tcore/sys/freebsd/sys/elf32.d core/sys/freebsd/sys/elf64.d \\\n+\tcore/sys/freebsd/sys/elf_common.d core/sys/freebsd/sys/event.d \\\n+\tcore/sys/freebsd/sys/link_elf.d core/sys/freebsd/sys/mman.d \\\n+\tcore/sys/freebsd/sys/mount.d core/sys/freebsd/time.d \\\n+\tcore/sys/freebsd/unistd.d\n \n DRUNTIME_DSOURCES_LINUX = core/sys/linux/config.d \\\n \tcore/sys/linux/dlfcn.d core/sys/linux/elf.d core/sys/linux/epoll.d \\\n \tcore/sys/linux/errno.d core/sys/linux/execinfo.d \\\n \tcore/sys/linux/fcntl.d core/sys/linux/ifaddrs.d core/sys/linux/link.d \\\n \tcore/sys/linux/netinet/in_.d core/sys/linux/netinet/tcp.d \\\n-\tcore/sys/linux/sched.d core/sys/linux/stdio.d \\\n+\tcore/sys/linux/sched.d core/sys/linux/stdio.d core/sys/linux/string.d \\\n \tcore/sys/linux/sys/auxv.d core/sys/linux/sys/eventfd.d \\\n \tcore/sys/linux/sys/file.d core/sys/linux/sys/inotify.d \\\n \tcore/sys/linux/sys/mman.d core/sys/linux/sys/netinet/tcp.d \\\n@@ -245,17 +249,19 @@ DRUNTIME_DSOURCES_LINUX = core/sys/linux/config.d \\\n \tcore/sys/linux/timerfd.d core/sys/linux/tipc.d core/sys/linux/unistd.d\n \n DRUNTIME_DSOURCES_NETBSD = core/sys/netbsd/dlfcn.d \\\n-\tcore/sys/netbsd/execinfo.d core/sys/netbsd/sys/elf.d \\\n-\tcore/sys/netbsd/sys/elf32.d core/sys/netbsd/sys/elf64.d \\\n-\tcore/sys/netbsd/sys/elf_common.d core/sys/netbsd/sys/event.d \\\n+\tcore/sys/netbsd/execinfo.d core/sys/netbsd/string.d \\\n+\tcore/sys/netbsd/sys/elf.d core/sys/netbsd/sys/elf32.d \\\n+\tcore/sys/netbsd/sys/elf64.d core/sys/netbsd/sys/elf_common.d \\\n+\tcore/sys/netbsd/sys/event.d core/sys/netbsd/sys/featuretest.d \\\n \tcore/sys/netbsd/sys/link_elf.d core/sys/netbsd/sys/mman.d \\\n \tcore/sys/netbsd/time.d\n \n DRUNTIME_DSOURCES_OPENBSD = core/sys/openbsd/dlfcn.d \\\n-\tcore/sys/openbsd/sys/cdefs.d core/sys/openbsd/sys/elf.d \\\n-\tcore/sys/openbsd/sys/elf32.d core/sys/openbsd/sys/elf64.d \\\n-\tcore/sys/openbsd/sys/elf_common.d core/sys/openbsd/sys/link_elf.d \\\n-\tcore/sys/openbsd/sys/mman.d core/sys/openbsd/time.d\n+\tcore/sys/openbsd/string.d core/sys/openbsd/sys/cdefs.d \\\n+\tcore/sys/openbsd/sys/elf.d core/sys/openbsd/sys/elf32.d \\\n+\tcore/sys/openbsd/sys/elf64.d core/sys/openbsd/sys/elf_common.d \\\n+\tcore/sys/openbsd/sys/link_elf.d core/sys/openbsd/sys/mman.d \\\n+\tcore/sys/openbsd/time.d\n \n DRUNTIME_DSOURCES_POSIX = core/sys/posix/aio.d \\\n \tcore/sys/posix/arpa/inet.d core/sys/posix/config.d \\"}, {"sha": "aaf05b534d8beedd8b930c62595a515cd765853f", "filename": "libphobos/libdruntime/Makefile.in", "status": "modified", "additions": 63, "deletions": 38, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2FMakefile.in?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -278,13 +278,14 @@ am__objects_9 = core/sys/darwin/crt_externs.lo \\\n \tcore/sys/darwin/mach/semaphore.lo \\\n \tcore/sys/darwin/mach/thread_act.lo \\\n \tcore/sys/darwin/netinet/in_.lo core/sys/darwin/pthread.lo \\\n-\tcore/sys/darwin/sys/cdefs.lo core/sys/darwin/sys/event.lo \\\n-\tcore/sys/darwin/sys/mman.lo\n+\tcore/sys/darwin/string.lo core/sys/darwin/sys/cdefs.lo \\\n+\tcore/sys/darwin/sys/event.lo core/sys/darwin/sys/mman.lo\n @DRUNTIME_OS_DARWIN_TRUE@am__objects_10 = $(am__objects_9)\n am__objects_11 = core/sys/dragonflybsd/dlfcn.lo \\\n \tcore/sys/dragonflybsd/execinfo.lo \\\n \tcore/sys/dragonflybsd/netinet/in_.lo \\\n \tcore/sys/dragonflybsd/pthread_np.lo \\\n+\tcore/sys/dragonflybsd/string.lo \\\n \tcore/sys/dragonflybsd/sys/_bitset.lo \\\n \tcore/sys/dragonflybsd/sys/_cpuset.lo \\\n \tcore/sys/dragonflybsd/sys/cdefs.lo \\\n@@ -295,13 +296,16 @@ am__objects_11 = core/sys/dragonflybsd/dlfcn.lo \\\n \tcore/sys/dragonflybsd/sys/event.lo \\\n \tcore/sys/dragonflybsd/sys/link_elf.lo \\\n \tcore/sys/dragonflybsd/sys/mman.lo \\\n+\tcore/sys/dragonflybsd/sys/socket.lo \\\n \tcore/sys/dragonflybsd/time.lo\n @DRUNTIME_OS_DRAGONFLYBSD_TRUE@am__objects_12 = $(am__objects_11)\n-am__objects_13 = core/sys/bionic/fcntl.lo core/sys/bionic/unistd.lo\n+am__objects_13 = core/sys/bionic/fcntl.lo core/sys/bionic/string.lo \\\n+\tcore/sys/bionic/unistd.lo\n @DRUNTIME_OS_ANDROID_TRUE@am__objects_14 = $(am__objects_13)\n am__objects_15 = core/sys/freebsd/dlfcn.lo \\\n \tcore/sys/freebsd/execinfo.lo core/sys/freebsd/netinet/in_.lo \\\n-\tcore/sys/freebsd/pthread_np.lo core/sys/freebsd/sys/_bitset.lo \\\n+\tcore/sys/freebsd/pthread_np.lo core/sys/freebsd/string.lo \\\n+\tcore/sys/freebsd/sys/_bitset.lo \\\n \tcore/sys/freebsd/sys/_cpuset.lo core/sys/freebsd/sys/cdefs.lo \\\n \tcore/sys/freebsd/sys/elf.lo core/sys/freebsd/sys/elf32.lo \\\n \tcore/sys/freebsd/sys/elf64.lo \\\n@@ -311,12 +315,14 @@ am__objects_15 = core/sys/freebsd/dlfcn.lo \\\n \tcore/sys/freebsd/time.lo core/sys/freebsd/unistd.lo\n @DRUNTIME_OS_FREEBSD_TRUE@am__objects_16 = $(am__objects_15)\n am__objects_17 = core/sys/netbsd/dlfcn.lo core/sys/netbsd/execinfo.lo \\\n-\tcore/sys/netbsd/sys/elf.lo core/sys/netbsd/sys/elf32.lo \\\n-\tcore/sys/netbsd/sys/elf64.lo core/sys/netbsd/sys/elf_common.lo \\\n-\tcore/sys/netbsd/sys/event.lo core/sys/netbsd/sys/link_elf.lo \\\n-\tcore/sys/netbsd/sys/mman.lo core/sys/netbsd/time.lo\n+\tcore/sys/netbsd/string.lo core/sys/netbsd/sys/elf.lo \\\n+\tcore/sys/netbsd/sys/elf32.lo core/sys/netbsd/sys/elf64.lo \\\n+\tcore/sys/netbsd/sys/elf_common.lo core/sys/netbsd/sys/event.lo \\\n+\tcore/sys/netbsd/sys/featuretest.lo \\\n+\tcore/sys/netbsd/sys/link_elf.lo core/sys/netbsd/sys/mman.lo \\\n+\tcore/sys/netbsd/time.lo\n @DRUNTIME_OS_NETBSD_TRUE@am__objects_18 = $(am__objects_17)\n-am__objects_19 = core/sys/openbsd/dlfcn.lo \\\n+am__objects_19 = core/sys/openbsd/dlfcn.lo core/sys/openbsd/string.lo \\\n \tcore/sys/openbsd/sys/cdefs.lo core/sys/openbsd/sys/elf.lo \\\n \tcore/sys/openbsd/sys/elf32.lo core/sys/openbsd/sys/elf64.lo \\\n \tcore/sys/openbsd/sys/elf_common.lo \\\n@@ -329,15 +335,16 @@ am__objects_21 = core/sys/linux/config.lo core/sys/linux/dlfcn.lo \\\n \tcore/sys/linux/fcntl.lo core/sys/linux/ifaddrs.lo \\\n \tcore/sys/linux/link.lo core/sys/linux/netinet/in_.lo \\\n \tcore/sys/linux/netinet/tcp.lo core/sys/linux/sched.lo \\\n-\tcore/sys/linux/stdio.lo core/sys/linux/sys/auxv.lo \\\n-\tcore/sys/linux/sys/eventfd.lo core/sys/linux/sys/file.lo \\\n-\tcore/sys/linux/sys/inotify.lo core/sys/linux/sys/mman.lo \\\n-\tcore/sys/linux/sys/netinet/tcp.lo core/sys/linux/sys/prctl.lo \\\n-\tcore/sys/linux/sys/signalfd.lo core/sys/linux/sys/socket.lo \\\n-\tcore/sys/linux/sys/sysinfo.lo core/sys/linux/sys/time.lo \\\n-\tcore/sys/linux/sys/xattr.lo core/sys/linux/termios.lo \\\n-\tcore/sys/linux/time.lo core/sys/linux/timerfd.lo \\\n-\tcore/sys/linux/tipc.lo core/sys/linux/unistd.lo\n+\tcore/sys/linux/stdio.lo core/sys/linux/string.lo \\\n+\tcore/sys/linux/sys/auxv.lo core/sys/linux/sys/eventfd.lo \\\n+\tcore/sys/linux/sys/file.lo core/sys/linux/sys/inotify.lo \\\n+\tcore/sys/linux/sys/mman.lo core/sys/linux/sys/netinet/tcp.lo \\\n+\tcore/sys/linux/sys/prctl.lo core/sys/linux/sys/signalfd.lo \\\n+\tcore/sys/linux/sys/socket.lo core/sys/linux/sys/sysinfo.lo \\\n+\tcore/sys/linux/sys/time.lo core/sys/linux/sys/xattr.lo \\\n+\tcore/sys/linux/termios.lo core/sys/linux/time.lo \\\n+\tcore/sys/linux/timerfd.lo core/sys/linux/tipc.lo \\\n+\tcore/sys/linux/unistd.lo\n @DRUNTIME_OS_LINUX_TRUE@am__objects_22 = $(am__objects_21)\n am__objects_23 = core/sys/windows/accctrl.lo \\\n \tcore/sys/windows/aclapi.lo core/sys/windows/aclui.lo \\\n@@ -798,43 +805,47 @@ DRUNTIME_DSOURCES_GC = gc/bits.d gc/config.d gc/gcinterface.d \\\n \n DRUNTIME_DSOURCES_GCSTUB = gcstub/gc.d\n DRUNTIME_DSOURCES_BIONIC = core/sys/bionic/fcntl.d \\\n-\tcore/sys/bionic/unistd.d\n+\tcore/sys/bionic/string.d core/sys/bionic/unistd.d\n \n DRUNTIME_DSOURCES_DARWIN = core/sys/darwin/crt_externs.d \\\n \tcore/sys/darwin/dlfcn.d core/sys/darwin/execinfo.d \\\n \tcore/sys/darwin/mach/dyld.d core/sys/darwin/mach/getsect.d \\\n \tcore/sys/darwin/mach/kern_return.d core/sys/darwin/mach/loader.d \\\n \tcore/sys/darwin/mach/port.d core/sys/darwin/mach/semaphore.d \\\n \tcore/sys/darwin/mach/thread_act.d core/sys/darwin/netinet/in_.d \\\n-\tcore/sys/darwin/pthread.d core/sys/darwin/sys/cdefs.d \\\n-\tcore/sys/darwin/sys/event.d core/sys/darwin/sys/mman.d\n+\tcore/sys/darwin/pthread.d core/sys/darwin/string.d \\\n+\tcore/sys/darwin/sys/cdefs.d core/sys/darwin/sys/event.d \\\n+\tcore/sys/darwin/sys/mman.d\n \n DRUNTIME_DSOURCES_DRAGONFLYBSD = core/sys/dragonflybsd/dlfcn.d \\\n \tcore/sys/dragonflybsd/execinfo.d core/sys/dragonflybsd/netinet/in_.d \\\n-\tcore/sys/dragonflybsd/pthread_np.d core/sys/dragonflybsd/sys/_bitset.d \\\n+\tcore/sys/dragonflybsd/pthread_np.d core/sys/dragonflybsd/string.d \\\n+\tcore/sys/dragonflybsd/sys/_bitset.d \\\n \tcore/sys/dragonflybsd/sys/_cpuset.d core/sys/dragonflybsd/sys/cdefs.d \\\n \tcore/sys/dragonflybsd/sys/elf.d core/sys/dragonflybsd/sys/elf32.d \\\n \tcore/sys/dragonflybsd/sys/elf64.d \\\n \tcore/sys/dragonflybsd/sys/elf_common.d \\\n \tcore/sys/dragonflybsd/sys/event.d core/sys/dragonflybsd/sys/link_elf.d \\\n-\tcore/sys/dragonflybsd/sys/mman.d core/sys/dragonflybsd/time.d\n+\tcore/sys/dragonflybsd/sys/mman.d core/sys/dragonflybsd/sys/socket.d \\\n+\tcore/sys/dragonflybsd/time.d\n \n DRUNTIME_DSOURCES_FREEBSD = core/sys/freebsd/dlfcn.d \\\n \tcore/sys/freebsd/execinfo.d core/sys/freebsd/netinet/in_.d \\\n-\tcore/sys/freebsd/pthread_np.d core/sys/freebsd/sys/_bitset.d \\\n-\tcore/sys/freebsd/sys/_cpuset.d core/sys/freebsd/sys/cdefs.d \\\n-\tcore/sys/freebsd/sys/elf.d core/sys/freebsd/sys/elf32.d \\\n-\tcore/sys/freebsd/sys/elf64.d core/sys/freebsd/sys/elf_common.d \\\n-\tcore/sys/freebsd/sys/event.d core/sys/freebsd/sys/link_elf.d \\\n-\tcore/sys/freebsd/sys/mman.d core/sys/freebsd/sys/mount.d \\\n-\tcore/sys/freebsd/time.d core/sys/freebsd/unistd.d\n+\tcore/sys/freebsd/pthread_np.d core/sys/freebsd/string.d \\\n+\tcore/sys/freebsd/sys/_bitset.d core/sys/freebsd/sys/_cpuset.d \\\n+\tcore/sys/freebsd/sys/cdefs.d core/sys/freebsd/sys/elf.d \\\n+\tcore/sys/freebsd/sys/elf32.d core/sys/freebsd/sys/elf64.d \\\n+\tcore/sys/freebsd/sys/elf_common.d core/sys/freebsd/sys/event.d \\\n+\tcore/sys/freebsd/sys/link_elf.d core/sys/freebsd/sys/mman.d \\\n+\tcore/sys/freebsd/sys/mount.d core/sys/freebsd/time.d \\\n+\tcore/sys/freebsd/unistd.d\n \n DRUNTIME_DSOURCES_LINUX = core/sys/linux/config.d \\\n \tcore/sys/linux/dlfcn.d core/sys/linux/elf.d core/sys/linux/epoll.d \\\n \tcore/sys/linux/errno.d core/sys/linux/execinfo.d \\\n \tcore/sys/linux/fcntl.d core/sys/linux/ifaddrs.d core/sys/linux/link.d \\\n \tcore/sys/linux/netinet/in_.d core/sys/linux/netinet/tcp.d \\\n-\tcore/sys/linux/sched.d core/sys/linux/stdio.d \\\n+\tcore/sys/linux/sched.d core/sys/linux/stdio.d core/sys/linux/string.d \\\n \tcore/sys/linux/sys/auxv.d core/sys/linux/sys/eventfd.d \\\n \tcore/sys/linux/sys/file.d core/sys/linux/sys/inotify.d \\\n \tcore/sys/linux/sys/mman.d core/sys/linux/sys/netinet/tcp.d \\\n@@ -845,17 +856,19 @@ DRUNTIME_DSOURCES_LINUX = core/sys/linux/config.d \\\n \tcore/sys/linux/timerfd.d core/sys/linux/tipc.d core/sys/linux/unistd.d\n \n DRUNTIME_DSOURCES_NETBSD = core/sys/netbsd/dlfcn.d \\\n-\tcore/sys/netbsd/execinfo.d core/sys/netbsd/sys/elf.d \\\n-\tcore/sys/netbsd/sys/elf32.d core/sys/netbsd/sys/elf64.d \\\n-\tcore/sys/netbsd/sys/elf_common.d core/sys/netbsd/sys/event.d \\\n+\tcore/sys/netbsd/execinfo.d core/sys/netbsd/string.d \\\n+\tcore/sys/netbsd/sys/elf.d core/sys/netbsd/sys/elf32.d \\\n+\tcore/sys/netbsd/sys/elf64.d core/sys/netbsd/sys/elf_common.d \\\n+\tcore/sys/netbsd/sys/event.d core/sys/netbsd/sys/featuretest.d \\\n \tcore/sys/netbsd/sys/link_elf.d core/sys/netbsd/sys/mman.d \\\n \tcore/sys/netbsd/time.d\n \n DRUNTIME_DSOURCES_OPENBSD = core/sys/openbsd/dlfcn.d \\\n-\tcore/sys/openbsd/sys/cdefs.d core/sys/openbsd/sys/elf.d \\\n-\tcore/sys/openbsd/sys/elf32.d core/sys/openbsd/sys/elf64.d \\\n-\tcore/sys/openbsd/sys/elf_common.d core/sys/openbsd/sys/link_elf.d \\\n-\tcore/sys/openbsd/sys/mman.d core/sys/openbsd/time.d\n+\tcore/sys/openbsd/string.d core/sys/openbsd/sys/cdefs.d \\\n+\tcore/sys/openbsd/sys/elf.d core/sys/openbsd/sys/elf32.d \\\n+\tcore/sys/openbsd/sys/elf64.d core/sys/openbsd/sys/elf_common.d \\\n+\tcore/sys/openbsd/sys/link_elf.d core/sys/openbsd/sys/mman.d \\\n+\tcore/sys/openbsd/time.d\n \n DRUNTIME_DSOURCES_POSIX = core/sys/posix/aio.d \\\n \tcore/sys/posix/arpa/inet.d core/sys/posix/config.d \\\n@@ -1326,6 +1339,7 @@ core/sys/darwin/netinet/$(am__dirstamp):\n core/sys/darwin/netinet/in_.lo:  \\\n \tcore/sys/darwin/netinet/$(am__dirstamp)\n core/sys/darwin/pthread.lo: core/sys/darwin/$(am__dirstamp)\n+core/sys/darwin/string.lo: core/sys/darwin/$(am__dirstamp)\n core/sys/darwin/sys/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/darwin/sys\n \t@: > core/sys/darwin/sys/$(am__dirstamp)\n@@ -1345,6 +1359,8 @@ core/sys/dragonflybsd/netinet/in_.lo:  \\\n \tcore/sys/dragonflybsd/netinet/$(am__dirstamp)\n core/sys/dragonflybsd/pthread_np.lo:  \\\n \tcore/sys/dragonflybsd/$(am__dirstamp)\n+core/sys/dragonflybsd/string.lo:  \\\n+\tcore/sys/dragonflybsd/$(am__dirstamp)\n core/sys/dragonflybsd/sys/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/dragonflybsd/sys\n \t@: > core/sys/dragonflybsd/sys/$(am__dirstamp)\n@@ -1368,11 +1384,14 @@ core/sys/dragonflybsd/sys/link_elf.lo:  \\\n \tcore/sys/dragonflybsd/sys/$(am__dirstamp)\n core/sys/dragonflybsd/sys/mman.lo:  \\\n \tcore/sys/dragonflybsd/sys/$(am__dirstamp)\n+core/sys/dragonflybsd/sys/socket.lo:  \\\n+\tcore/sys/dragonflybsd/sys/$(am__dirstamp)\n core/sys/dragonflybsd/time.lo: core/sys/dragonflybsd/$(am__dirstamp)\n core/sys/bionic/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/bionic\n \t@: > core/sys/bionic/$(am__dirstamp)\n core/sys/bionic/fcntl.lo: core/sys/bionic/$(am__dirstamp)\n+core/sys/bionic/string.lo: core/sys/bionic/$(am__dirstamp)\n core/sys/bionic/unistd.lo: core/sys/bionic/$(am__dirstamp)\n core/sys/freebsd/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/freebsd\n@@ -1385,6 +1404,7 @@ core/sys/freebsd/netinet/$(am__dirstamp):\n core/sys/freebsd/netinet/in_.lo:  \\\n \tcore/sys/freebsd/netinet/$(am__dirstamp)\n core/sys/freebsd/pthread_np.lo: core/sys/freebsd/$(am__dirstamp)\n+core/sys/freebsd/string.lo: core/sys/freebsd/$(am__dirstamp)\n core/sys/freebsd/sys/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/freebsd/sys\n \t@: > core/sys/freebsd/sys/$(am__dirstamp)\n@@ -1408,6 +1428,7 @@ core/sys/netbsd/$(am__dirstamp):\n \t@: > core/sys/netbsd/$(am__dirstamp)\n core/sys/netbsd/dlfcn.lo: core/sys/netbsd/$(am__dirstamp)\n core/sys/netbsd/execinfo.lo: core/sys/netbsd/$(am__dirstamp)\n+core/sys/netbsd/string.lo: core/sys/netbsd/$(am__dirstamp)\n core/sys/netbsd/sys/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/netbsd/sys\n \t@: > core/sys/netbsd/sys/$(am__dirstamp)\n@@ -1417,13 +1438,16 @@ core/sys/netbsd/sys/elf64.lo: core/sys/netbsd/sys/$(am__dirstamp)\n core/sys/netbsd/sys/elf_common.lo:  \\\n \tcore/sys/netbsd/sys/$(am__dirstamp)\n core/sys/netbsd/sys/event.lo: core/sys/netbsd/sys/$(am__dirstamp)\n+core/sys/netbsd/sys/featuretest.lo:  \\\n+\tcore/sys/netbsd/sys/$(am__dirstamp)\n core/sys/netbsd/sys/link_elf.lo: core/sys/netbsd/sys/$(am__dirstamp)\n core/sys/netbsd/sys/mman.lo: core/sys/netbsd/sys/$(am__dirstamp)\n core/sys/netbsd/time.lo: core/sys/netbsd/$(am__dirstamp)\n core/sys/openbsd/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/openbsd\n \t@: > core/sys/openbsd/$(am__dirstamp)\n core/sys/openbsd/dlfcn.lo: core/sys/openbsd/$(am__dirstamp)\n+core/sys/openbsd/string.lo: core/sys/openbsd/$(am__dirstamp)\n core/sys/openbsd/sys/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/openbsd/sys\n \t@: > core/sys/openbsd/sys/$(am__dirstamp)\n@@ -1456,6 +1480,7 @@ core/sys/linux/netinet/in_.lo: core/sys/linux/netinet/$(am__dirstamp)\n core/sys/linux/netinet/tcp.lo: core/sys/linux/netinet/$(am__dirstamp)\n core/sys/linux/sched.lo: core/sys/linux/$(am__dirstamp)\n core/sys/linux/stdio.lo: core/sys/linux/$(am__dirstamp)\n+core/sys/linux/string.lo: core/sys/linux/$(am__dirstamp)\n core/sys/linux/sys/$(am__dirstamp):\n \t@$(MKDIR_P) core/sys/linux/sys\n \t@: > core/sys/linux/sys/$(am__dirstamp)"}, {"sha": "18af7132e3898434a4fb07e339fa3b907639615b", "filename": "libphobos/libdruntime/core/stdc/assert_.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fassert_.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fassert_.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Fassert_.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -63,7 +63,7 @@ else version (NetBSD)\n else version (OpenBSD)\n {\n     /***\n-     * Assert failure function in the NetBSD C library.\n+     * Assert failure function in the OpenBSD C library.\n      */\n     void __assert(const(char)* file, int line, const(char)* exp);\n     ///"}, {"sha": "e101bb249fbf0e23ff7eb9a30d90b23f45ba1a6d", "filename": "libphobos/libdruntime/core/stdc/fenv.d", "status": "modified", "additions": 42, "deletions": 6, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fstdc%2Ffenv.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -249,16 +249,16 @@ else version (NetBSD)\n         {\n             struct _x87\n             {\n-                    ushort control;       /* Control word register */\n+                    ushort control;     /* Control word register */\n                     ushort unused1;\n-                    ushort status;        /* Status word register */\n+                    ushort status;      /* Status word register */\n                     ushort unused2;\n-                    ushort tag;           /* Tag word register */\n+                    ushort tag;         /* Tag word register */\n                     ushort unused3;\n                     uint[4] others;     /* EIP, Pointer Selector, etc */\n             };\n             _x87 x87;\n-            uint32_t mxcsr;                 /* Control and status register */\n+            uint mxcsr;                 /* Control and status register */\n         };\n \n     }\n@@ -375,7 +375,42 @@ else version (Solaris)\n }\n else version (CRuntime_Musl)\n {\n-    version (X86_64)\n+    version (AArch64)\n+    {\n+        struct fenv_t\n+        {\n+            uint __fpcr;\n+            uint __fpsr;\n+        }\n+        alias uint fexcept_t;\n+    }\n+    else version (ARM)\n+    {\n+        struct fenv_t\n+        {\n+            c_ulong __cw;\n+        }\n+        alias c_ulong fexcept_t;\n+    }\n+    else version (IBMZ_Any)\n+    {\n+        alias uint fenv_t;\n+        alias uint fexcept_t;\n+    }\n+    else version (MIPS_Any)\n+    {\n+        struct fenv_t\n+        {\n+            uint __cw;\n+        }\n+        alias ushort fexcept_t;\n+    }\n+    else version (PPC_Any)\n+    {\n+        alias double fenv_t;\n+        alias uint fexcept_t;\n+    }\n+    else version (X86_Any)\n     {\n         struct fenv_t\n         {\n@@ -391,7 +426,8 @@ else version (CRuntime_Musl)\n             uint   __data_offset;\n             ushort __data_selector;\n             ushort __unused5;\n-            uint   __mxcsr;\n+            version (X86_64)\n+                uint __mxcsr;\n         }\n         alias ushort fexcept_t;\n     }"}, {"sha": "cbee06c4efeb733e9a950bd7bb24df2bd3acca4c", "filename": "libphobos/libdruntime/core/sys/bionic/string.d", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fbionic%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fbionic%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fbionic%2Fstring.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,17 @@\n+/**\n+  * D header file for Bionic string.\n+  *\n+  * Copyright: Copyright \u00a9 2019, The D Language Foundation\n+  * License: <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\n+  * Authors: Ernesto Castellotti\n+  */\n+module core.sys.bionic.string;\n+\n+public import core.stdc.string;\n+\n+version (CRuntime_Bionic):\n+extern (C):\n+nothrow:\n+@nogc:\n+\n+pure void* memmem(return const void* haystack, size_t haystacklen, scope const void* needle, size_t needlelen);"}, {"sha": "5bf5609a2030e318c399c5bd6f7d82f303ba5175", "filename": "libphobos/libdruntime/core/sys/darwin/mach/dyld.d", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fdyld.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fdyld.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Fdyld.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -32,6 +32,7 @@ public import core.sys.darwin.mach.loader;\n uint         _dyld_image_count();\n const(char)* _dyld_get_image_name(uint image_index);\n mach_header* _dyld_get_image_header(uint image_index);\n+intptr_t     _dyld_get_image_vmaddr_slide(uint image_index);\n void         _dyld_register_func_for_add_image(void function(in mach_header* mh, intptr_t vmaddr_slide));\n void         _dyld_register_func_for_remove_image(void function(in mach_header* mh, intptr_t vmaddr_slide));\n "}, {"sha": "af42485fd8388e8d15beb3236b3fc07bb5c097dc", "filename": "libphobos/libdruntime/core/sys/darwin/mach/loader.d", "status": "modified", "additions": 3254, "deletions": 216, "changes": 3470, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Floader.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Floader.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fmach%2Floader.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997"}, {"sha": "bd65fde27bcb76c58ae108df2b94b420e475c231", "filename": "libphobos/libdruntime/core/sys/darwin/string.d", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdarwin%2Fstring.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,31 @@\n+/**\n+  * D header file for Darwin string.\n+  *\n+  * Copyright: Copyright \u00a9 2019, The D Language Foundation\n+  * License: <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\n+  * Authors: Ernesto Castellotti\n+  */\n+module core.sys.darwin.string;\n+\n+public import core.stdc.string;\n+import core.sys.darwin.sys.cdefs;\n+\n+version (OSX)\n+    version = Darwin;\n+else version (iOS)\n+    version = Darwin;\n+else version (TVOS)\n+    version = Darwin;\n+else version (WatchOS)\n+    version = Darwin;\n+\n+version (Darwin):\n+extern (C):\n+nothrow:\n+@nogc:\n+\n+static if (__DARWIN_C_LEVEL >= __DARWIN_C_FULL)\n+{\n+    // ^ __OSX_AVAILABLE_STARTING(__MAC_10_7, __IPHONE_4_3);\n+    pure void* memmem(return const void* haystack, size_t haystacklen, scope const void* needle, size_t needlelen);\n+}"}, {"sha": "b64178f65622d2ba9c022e74670b188779f17c21", "filename": "libphobos/libdruntime/core/sys/dragonflybsd/string.d", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fstring.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,22 @@\n+/**\n+  * D header file for DragonFlyBSD string.\n+  *\n+  * Copyright: Copyright \u00a9 2019, The D Language Foundation\n+  * License: <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\n+  * Authors: Ernesto Castellotti\n+  */\n+module core.sys.dragonflybsd.string;\n+\n+public import core.stdc.string;\n+import core.sys.dragonflybsd.sys.cdefs;\n+\n+version (DragonFlyBSD):\n+extern (C):\n+nothrow:\n+@nogc:\n+\n+static if (__BSD_VISIBLE)\n+{\n+    pure void* memmem(return const void* haystack, size_t haystacklen, scope const void* needle, size_t needlelen);\n+}\n+"}, {"sha": "8ac54e2a8c26132806fcae941b4d26e825318d61", "filename": "libphobos/libdruntime/core/sys/dragonflybsd/sys/socket.d", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Fsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Fsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fdragonflybsd%2Fsys%2Fsocket.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,86 @@\n+/**\n+ * D header file for DragonFlyBSD\n+ *\n+ * License:   $(LINK2 http://www.boost.org/LICENSE_1_0.txt, Boost License 1.0)\n+ */\n+module core.sys.dragonflybsd.sys.socket;\n+\n+public import core.sys.posix.sys.socket;\n+\n+version (DragonFlyBSD):\n+extern(C):\n+@nogc:\n+nothrow:\n+\n+enum\n+{\n+    AF_IMPLINK          = 3,\n+    AF_PUP              = 4,\n+    AF_CHAOS            = 5,\n+    AF_NETBIOS          = 6,\n+    AF_ISO              = 7,\n+    AF_OSI              = AF_ISO,\n+    AF_ECMA             = 8,\n+    AF_DATAKIT          = 9,\n+    AF_CCITT            = 10,\n+    AF_SNA              = 11,\n+    AF_DECnet           = 12,\n+    AF_DLI              = 13,\n+    AF_LAT              = 14,\n+    AF_HYLINK           = 15,\n+    AF_ROUTE            = 17,\n+    AF_LINK             = 18,\n+    pseudo_AF_XTP       = 19,\n+    AF_COIP             = 20,\n+    AF_CNT              = 21,\n+    pseudo_AF_RTIP      = 22,\n+    AF_SIP              = 24,\n+    pseudo_AF_PIP       = 25,\n+    AF_ISDN             = 26,\n+    AF_E164             = AF_ISDN,\n+    pseudo_AF_KEY       = 27,\n+    AF_NATM             = 29,\n+    AF_ATM              = 30,\n+    pseudo_AF_HDRCMPLT  = 31,\n+    AF_NETGRAPH         = 32,\n+    AF_BLUETOOTH        = 33,\n+    AF_MPLS             = 34,\n+    AF_IEEE80211        = 35,\n+}\n+\n+/* protocol families */\n+enum PF_UNSPEC          = AF_UNSPEC;\n+enum PF_LOCAL           = AF_LOCAL;\n+enum PF_UNIX            = PF_LOCAL;\n+enum PF_INET            = AF_INET;\n+enum PF_IMPLINK         = AF_IMPLINK;\n+enum PF_PUP             = AF_PUP;\n+enum PF_CHAOS           = AF_CHAOS;\n+enum PF_NETBIOS         = AF_NETBIOS;\n+enum PF_ISO             = AF_ISO;\n+enum PF_OSI             = AF_ISO;\n+enum PF_ECMA            = AF_ECMA;\n+enum PF_DATAKIT         = AF_DATAKIT;\n+enum PF_CCITT           = AF_CCITT;\n+enum PF_SNA             = AF_SNA;\n+enum PF_DECnet          = AF_DECnet;\n+enum PF_DLI             = AF_DLI;\n+enum PF_LAT             = AF_LAT;\n+enum PF_HYLINK          = AF_HYLINK;\n+enum PF_APPLETALK       = AF_APPLETALK;\n+enum PF_ROUTE           = AF_ROUTE;\n+enum PF_LINK            = AF_LINK;\n+enum PF_XTP             = pseudo_AF_XTP;\n+enum PF_COIP            = AF_COIP;\n+enum PF_CNT             = AF_CNT;\n+enum PF_SIP             = AF_SIP;\n+enum PF_IPX             = AF_IPX;\n+enum PF_RTIP            = pseudo_AF_RTIP;\n+enum PF_PIP             = pseudo_AF_PIP;\n+enum PF_ISDN            = AF_ISDN;\n+enum PF_KEY             = pseudo_AF_KEY;\n+enum PF_INET6           = AF_INET6;\n+enum PF_NATM            = AF_NATM;\n+enum PF_ATM             = AF_ATM;\n+enum PF_NETGRAPH        = AF_NETGRAPH;\n+enum PF_BLUETOOTH       = AF_BLUETOOTH;"}, {"sha": "3602ea8e86bd1ecc9bf04f56c7c664bbcf2d9ce0", "filename": "libphobos/libdruntime/core/sys/freebsd/string.d", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fstring.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,21 @@\n+/**\n+  * D header file for FreeBSD string.\n+  *\n+  * Copyright: Copyright \u00a9 2019, The D Language Foundation\n+  * License: <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\n+  * Authors: Ernesto Castellotti\n+  */\n+module core.sys.freebsd.string;\n+\n+public import core.stdc.string;\n+import core.sys.freebsd.sys.cdefs;\n+\n+version (FreeBSD):\n+extern (C):\n+nothrow:\n+@nogc:\n+\n+static if (__BSD_VISIBLE)\n+{\n+    pure void* memmem(return const void* haystack, size_t haystacklen, scope const void* needle, size_t needlelen);\n+}"}, {"sha": "f208b017758d0820835632c3fc01a9d3b3d1b1ae", "filename": "libphobos/libdruntime/core/sys/freebsd/sys/elf64.d", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf64.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -43,6 +43,15 @@ struct Elf64_Ehdr\n     Elf64_Half    e_shstrndx;\n }\n \n+struct Elf64_Lib\n+{\n+    Elf64_Word    l_name;\n+    Elf64_Word    l_time_stamp;\n+    Elf64_Word    l_checksum;\n+    Elf64_Word    l_version;\n+    Elf64_Word    l_flags;\n+}\n+\n struct Elf64_Shdr\n {\n     Elf64_Word    sh_name;"}, {"sha": "455de95afb3e9feae300ebaddccd19a1dcf1510f", "filename": "libphobos/libdruntime/core/sys/freebsd/sys/elf_common.d", "status": "modified", "additions": 102, "deletions": 0, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf_common.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf_common.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Ffreebsd%2Fsys%2Felf_common.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -852,3 +852,105 @@ enum R_X86_64_DTPOFF32 =        21;\n enum R_X86_64_GOTTPOFF =        22;\n enum R_X86_64_TPOFF32 =         23;\n enum R_X86_64_IRELATIVE =       37;\n+\n+version (PPC64)\n+{\n+enum __ELF_WORD_SIZE = 64;\n+enum ELF_ARCH = EM_PPC64;\n+enum ELF_MACHINE_OK(x) = ((x) == EM_PPC64);\n+}\n+version (PPC)\n+{\n+enum __ELF_WORD_SIZE = 32;\n+enum ELF_ARCH = EM_PPC;\n+enum ELF_ARCH32 = EM_PPC;\n+enum ELF_MACHINE_OK(x) = ((x) == EM_PPC);\n+}\n+\n+/**\n+ * Auxiliary vector entries for passing information to the interpreter.\n+ *\n+ * The PowerPC supplement to the SVR4 ABI specification names this \"auxv_t\",\n+ * but POSIX lays claim to all symbols ending with \"_t\".\n+ */\n+\n+struct Elf32_Auxinfo\n+{\n+    int a_type;\n+    union a_un\n+    {\n+        long    a_val;\n+        void    *a_ptr;\n+        void function(void* a) a_fcn;\n+    }\n+}\n+\n+struct Elf64_Auxinfo\n+{\n+    long a_type;\n+    union a_un\n+    {\n+        long    a_val;\n+        void    *a_ptr;\n+        void function(void* a) a_fcn;\n+    }\n+}\n+\n+// __ElfType(Auxinfo);\n+\n+/**\n+ * Values for a_type.\n+ */\n+\n+enum AT_NULL   = 0;\n+enum AT_IGNORE = 1;\n+enum AT_EXECFD = 2;\n+enum AT_PHDR  = 3;\n+enum AT_PHENT = 4;\n+enum AT_PHNUM = 5;\n+enum AT_PAGESZ = 6;\n+enum AT_BASE  = 7;\n+enum AT_FLAGS = 8;\n+enum AT_ENTRY = 9;\n+enum AT_DCACHEBSIZE = 10;\n+enum AT_ICACHEBSIZE = 11;\n+enum AT_UCACHEBSIZE = 12;\n+enum AT_EXECPATH  = 13;\n+enum AT_CANARY    = 14;\n+enum AT_CANARYLEN = 15;\n+enum AT_OSRELDATE = 16;\n+enum AT_NCPUS = 17;\n+enum AT_PAGESIZES = 18;\n+enum AT_PAGESIZESLEN = 19;\n+enum AT_STACKPROT = 21;\n+enum AT_TIMEKEEP  = 22;\n+enum AT_COUNT = 23;\n+\n+/**\n+ * Relocation types.\n+ */\n+\n+enum R_PPC_COUNT =  37;\n+enum R_PPC_EMB_COUNT =  (R_PPC_EMB_RELSDA - R_PPC_EMB_NADDR32 + 1);\n+\n+/**\n+ * Define \"machine\" characteristics\n+ */\n+\n+version (PPC64)\n+{\n+enum ELF_TARG_CLASS =   ELFCLASS64;\n+enum ELF_TARG_DATA =    ELFDATA2MSB;\n+enum ELF_TARG_MACH =    EM_PPC64;\n+enum ELF_TARG_VER =     1;\n+}\n+\n+version (PPC)\n+{\n+enum ELF_TARG_CLASS =   ELFCLASS32;\n+enum ELF_TARG_DATA =    ELFDATA2MSB;\n+enum ELF_TARG_MACH =    EM_PPC;\n+enum ELF_TARG_VER =     1;\n+}\n+\n+enum ET_DYN_LOAD_ADDR = 0x01010000;"}, {"sha": "53cd0ef68224250f01e251e2f881ae7230fbce54", "filename": "libphobos/libdruntime/core/sys/linux/sched.d", "status": "modified", "additions": 24, "deletions": 4, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsched.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsched.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fsched.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -1,9 +1,11 @@\n /*******************************************************************************\n \n-    D binding for Linux specific scheduler control methods.\n+    D binding for Linux specific scheduler control and thread spawning\n+    methods.\n \n-    Defines functions sched_setaffinity and sched_getaffinity  and the data\n-    types they operate on.\n+    Defines functions sched_setaffinity and sched_getaffinity and the data\n+    types they operate on, as well as clone and unshare and their related\n+    constants.\n \n     Copyright:  Copyright (c) 2016 Sociomantic Labs. All rights reserved.\n     License:    $(HTTP www.boost.org/LICENSE_1_0.txt, Boost License 1.0).\n@@ -100,6 +102,24 @@ int CPU_COUNT(cpu_set_t* cpusetp) pure\n     return __CPU_COUNT_S(cpu_set_t.sizeof, cpusetp);\n }\n \n-/* Functions */\n+/* Scheduler control functions */\n int sched_setaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask);\n int sched_getaffinity(pid_t pid, size_t cpusetsize, cpu_set_t *mask);\n+\n+/* Clone and related functions and constants */\n+int clone(int function(void*), void* child_stack, int flags, void* arg, ...);\n+int unshare(int flags) @trusted;\n+\n+enum CLONE_FILES = 0x400;\n+enum CLONE_FS = 0x200;\n+enum CLONE_NEWCGROUP = 0x2000000;\n+enum CLONE_NEWIPC = 0x8000000;\n+enum CLONE_NEWNET = 0x40000000;\n+enum CLONE_NEWNS = 0x20000;\n+enum CLONE_NEWPID = 0x20000000;\n+enum CLONE_NEWUSER = 0x10000000;\n+enum CLONE_NEWUTS = 0x4000000;\n+enum CLONE_SIGHAND = 0x800;\n+enum CLONE_SYSVSEM = 0x40000;\n+enum CLONE_THREAD = 0x10000;\n+enum CLONE_VM = 0x100;"}, {"sha": "a388c8ba1ae8816eef7c99a3f4b06eab90c78b21", "filename": "libphobos/libdruntime/core/sys/linux/string.d", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Flinux%2Fstring.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,21 @@\n+/**\n+  * D header file for Linux string.\n+  *\n+  * Copyright: Copyright \u00a9 2019, The D Language Foundation\n+  * License: <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\n+  * Authors: Ernesto Castellotti\n+  */\n+module core.sys.linux.string;\n+\n+public import core.stdc.string;\n+import core.sys.linux.config;\n+\n+version (linux):\n+extern (C):\n+nothrow:\n+@nogc:\n+\n+static if (__USE_GNU)\n+{\n+    pure void* memmem(return const void* haystack, size_t haystacklen, scope const void* needle, size_t needlelen);\n+}"}, {"sha": "ab9ced80cf14259ac29b5c4bcea48e6feaecb379", "filename": "libphobos/libdruntime/core/sys/netbsd/string.d", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fstring.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,21 @@\n+/**\n+  * D header file for NetBSD string.\n+  *\n+  * Copyright: Copyright \u00a9 2019, The D Language Foundation\n+  * License: <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\n+  * Authors: Ernesto Castellotti\n+  */\n+module core.sys.netbsd.string;\n+\n+public import core.stdc.string;\n+import core.sys.netbsd.sys.featuretest;\n+\n+version (NetBSD):\n+extern (C):\n+nothrow:\n+@nogc:\n+\n+static if (_NETBSD_SOURCE)\n+{\n+    pure void* memmem(return const void* haystack, size_t haystacklen, scope const void* needle, size_t needlelen);\n+}"}, {"sha": "3901ea9703ba123f45f5107b222a36c9886077e4", "filename": "libphobos/libdruntime/core/sys/netbsd/sys/featuretest.d", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Ffeaturetest.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Ffeaturetest.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fnetbsd%2Fsys%2Ffeaturetest.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,12 @@\n+/**\n+  * D header file for NetBSD featuretest;.\n+  *\n+  * Copyright: Copyright \u00a9 2019, The D Language Foundation\n+  * License: <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\n+  * Authors: Ernesto Castellotti\n+  */\n+module core.sys.netbsd.sys.featuretest;\n+\n+version (NetBSD):\n+\n+enum _NETBSD_SOURCE = true;"}, {"sha": "8d35b9c9c1295fd50e22ebecd13e0caf02368003", "filename": "libphobos/libdruntime/core/sys/openbsd/string.d", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fstring.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fstring.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fopenbsd%2Fstring.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -0,0 +1,21 @@\n+/**\n+  * D header file for OpenBSD string.\n+  *\n+  * Copyright: Copyright \u00a9 2019, The D Language Foundation\n+  * License: <a href=\"http://www.boost.org/LICENSE_1_0.txt\">Boost License 1.0</a>.\n+  * Authors: Ernesto Castellotti\n+  */\n+module core.sys.openbsd.string;\n+\n+public import core.stdc.string;\n+import core.sys.openbsd.sys.cdefs;\n+\n+version (OpenBSD):\n+extern (C):\n+nothrow:\n+@nogc:\n+\n+static if (__BSD_VISIBLE)\n+{\n+    pure void* memmem(return const void* haystack, size_t haystacklen, scope const void* needle, size_t needlelen);\n+}"}, {"sha": "1165446be5cadd6ce2819737969b970a95142569", "filename": "libphobos/libdruntime/core/sys/posix/aio.d", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Faio.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Faio.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Faio.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -72,6 +72,10 @@ version (CRuntime_Glibc)\n         }\n     }\n }\n+else version (CRuntime_Bionic)\n+{\n+    // Bionic does not define aiocb.\n+}\n else version (CRuntime_Musl)\n {\n     // https://git.musl-libc.org/cgit/musl/tree/include/aio.h\n@@ -446,6 +450,10 @@ version (CRuntime_Glibc)\n         int lio_listio(int mode, const(aiocb*)* aiocb_list, int nitems, sigevent* sevp);\n     }\n }\n+else version (CRuntime_Bionic)\n+{\n+    // Bionic does not implement aio.h\n+}\n else version (CRuntime_UClibc)\n {\n     static if (__USE_LARGEFILE64)\n@@ -517,7 +525,7 @@ version (CRuntime_Glibc)\n         void aio_init(const(aioinit)* init);\n     }\n }\n-version (CRuntime_UClibc)\n+else version (CRuntime_UClibc)\n {\n     static if (__USE_GNU)\n     {"}, {"sha": "cea22d21025715e1176f92b9ceaca8d281504612", "filename": "libphobos/libdruntime/core/sys/posix/dirent.d", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdirent.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdirent.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fdirent.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -506,7 +506,7 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-\n+    int readdir_r(DIR*, dirent*, dirent**);\n }\n else version (CRuntime_UClibc)\n {\n@@ -591,6 +591,8 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    void   seekdir(DIR*, c_long);\n+    c_long telldir(DIR*);\n }\n else version (CRuntime_UClibc)\n {"}, {"sha": "1d0d294f2513090f5180889a42a89776969011eb", "filename": "libphobos/libdruntime/core/sys/posix/pthread.d", "status": "modified", "additions": 72, "deletions": 4, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fpthread.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fpthread.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fpthread.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -854,7 +854,15 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    enum PTHREAD_BARRIER_SERIAL_THREAD = -1;\n \n+    int pthread_barrier_destroy(pthread_barrier_t*);\n+    int pthread_barrier_init(pthread_barrier_t*, in pthread_barrierattr_t*, uint);\n+    int pthread_barrier_wait(pthread_barrier_t*);\n+    int pthread_barrierattr_destroy(pthread_barrierattr_t*);\n+    int pthread_barrierattr_getpshared(in pthread_barrierattr_t*, int*);\n+    int pthread_barrierattr_init(pthread_barrierattr_t*);\n+    int pthread_barrierattr_setpshared(pthread_barrierattr_t*, int);\n }\n else version (CRuntime_UClibc)\n {\n@@ -880,6 +888,55 @@ else\n int pthread_condattr_getclock(in pthread_condattr_t*, clockid_t*);\n int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n */\n+version (CRuntime_Glibc)\n+{\n+    int pthread_condattr_getclock(in pthread_condattr_t*, clockid_t*);\n+    int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n+}\n+else version (FreeBSD)\n+{\n+    int pthread_condattr_getclock(in pthread_condattr_t*, clockid_t*);\n+    int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n+}\n+else version (DragonFlyBSD)\n+{\n+    int pthread_condattr_getclock(in pthread_condattr_t*, clockid_t*);\n+    int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n+}\n+else version (NetBSD)\n+{\n+    int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n+}\n+else version (OpenBSD)\n+{\n+    int pthread_condattr_getclock(in pthread_condattr_t*, clockid_t*);\n+    int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n+}\n+else version (Darwin)\n+{\n+}\n+else version (Solaris)\n+{\n+    int pthread_condattr_getclock(in pthread_condattr_t*, clockid_t*);\n+    int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n+}\n+else version (CRuntime_Bionic)\n+{\n+}\n+else version (CRuntime_Musl)\n+{\n+    int pthread_condattr_getclock(in pthread_condattr_t*, clockid_t*);\n+    int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n+}\n+else version (CRuntime_UClibc)\n+{\n+    int pthread_condattr_getclock(in pthread_condattr_t*, clockid_t*);\n+    int pthread_condattr_setclock(pthread_condattr_t*, clockid_t);\n+}\n+else\n+{\n+    static assert(false, \"Unsupported platform\");\n+}\n \n //\n // Spinlock (SPI)\n@@ -948,7 +1005,11 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-\n+    int pthread_spin_destroy(pthread_spinlock_t*);\n+    int pthread_spin_init(pthread_spinlock_t*, int);\n+    int pthread_spin_lock(pthread_spinlock_t*);\n+    int pthread_spin_trylock(pthread_spinlock_t*);\n+    int pthread_spin_unlock(pthread_spinlock_t*);\n }\n else version (CRuntime_UClibc)\n {\n@@ -1187,7 +1248,7 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-\n+    int pthread_getcpuclockid(pthread_t, clockid_t*);\n }\n else version (CRuntime_UClibc)\n {\n@@ -1256,7 +1317,9 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-\n+    int pthread_mutex_timedlock(pthread_mutex_t*, in timespec*);\n+    int pthread_rwlock_timedrdlock(pthread_rwlock_t*, in timespec*);\n+    int pthread_rwlock_timedwrlock(pthread_rwlock_t*, in timespec*);\n }\n else version (CRuntime_UClibc)\n {\n@@ -1693,7 +1756,12 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-\n+    int pthread_condattr_getpshared(pthread_condattr_t*, int*);\n+    int pthread_condattr_setpshared(pthread_condattr_t*, int);\n+    int pthread_mutexattr_getpshared(pthread_mutexattr_t*, int*);\n+    int pthread_mutexattr_setpshared(pthread_mutexattr_t*, int);\n+    int pthread_rwlockattr_getpshared(pthread_rwlockattr_t*, int*);\n+    int pthread_rwlockattr_setpshared(pthread_rwlockattr_t*, int);\n }\n else version (CRuntime_UClibc)\n {"}, {"sha": "9d9aaa3b361ff8cbf1c33f54726e0e392d9ad7e6", "filename": "libphobos/libdruntime/core/sys/posix/pwd.d", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fpwd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fpwd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fpwd.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -172,7 +172,8 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-    struct passwd {\n+    struct passwd\n+    {\n         char *pw_name;\n         char *pw_passwd;\n         uid_t pw_uid;\n@@ -257,6 +258,8 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    int getpwnam_r(in char*, passwd*, char*, size_t, passwd**);\n+    int getpwuid_r(uid_t, passwd*, char*, size_t, passwd**);\n }\n else version (CRuntime_UClibc)\n {\n@@ -325,8 +328,9 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-    int getpwnam_r(in char*, passwd*, char*, size_t, passwd**);\n-    int getpwuid_r(uid_t, passwd*, char*, size_t, passwd**);\n+    void    endpwent();\n+    passwd* getpwent();\n+    void    setpwent();\n }\n else version (CRuntime_UClibc)\n {"}, {"sha": "38d4f7086f2306669816986827373955abe96c4f", "filename": "libphobos/libdruntime/core/sys/posix/setjmp.d", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsetjmp.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -22,6 +22,8 @@ extern (C) nothrow @nogc:\n \n version (RISCV32) version = RISCV_Any;\n version (RISCV64) version = RISCV_Any;\n+version (PPC) version = PPC_Any;\n+version (PPC64) version = PPC_Any;\n \n //\n // Required\n@@ -210,6 +212,11 @@ else version (FreeBSD)\n         // __int128_t\n         struct _jmp_buf { long[2][_JBLEN + 1] _jb; };\n     }\n+    else version (PPC_Any)\n+    {\n+        enum _JBLEN = 100;\n+        struct _jmp_buf { long[_JBLEN + 1] _jb; }\n+    }\n     else\n         static assert(0);\n     alias _jmp_buf[1] jmp_buf;\n@@ -417,6 +424,10 @@ else version (FreeBSD)\n         // __int128_t\n         struct _sigjmp_buf { long[2][_JBLEN + 1] _jb; };\n     }\n+    else version (PPC_Any)\n+    {\n+        struct _sigjmp_buf { long[_JBLEN + 1] _sjb; }\n+    }\n     else\n         static assert(0);\n     alias _sigjmp_buf[1] sigjmp_buf;"}, {"sha": "ed3985eee4d91173f76604fa0309a0021af71e20", "filename": "libphobos/libdruntime/core/sys/posix/signal.d", "status": "modified", "additions": 271, "deletions": 65, "changes": 336, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsignal.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -1136,55 +1136,57 @@ else version (NetBSD)\n     enum SIG_UNBLOCK = 2;\n     enum SIG_SETMASK = 3;\n \n-    union sigval_t {\n-        int     sival_int;\n-        void    *sival_ptr;\n-    };\n-    struct _rt{\n-        pid_t   _pid;\n-        uid_t   _uid;\n-        sigval_t        _value;\n-    };\n-    struct _child{\n-        pid_t   _pid;\n-        uid_t   _uid;\n-        int     _status;\n-        clock_t _utime;\n-        clock_t _stime;\n-    };\n-   struct _fault{\n-        void   *_addr;\n-        int     _trap;\n-        int     _trap2;\n-        int     _trap3;\n-    };\n-    struct _poll{\n-        long    _band;\n-        int     _fd;\n-    };\n-    union _reason{\n-        _rt rt;\n-        _child child;\n-        _fault fault;\n-        _poll poll;\n-    };\n-    struct _ksiginfo {\n+    union sigval_t\n+    {\n+        int   sival_int;\n+        void* sival_ptr;\n+    }\n+\n+    struct _ksiginfo\n+    {\n         int     _signo;\n         int     _code;\n         int     _errno;\n-/+#ifdef _LP64\n-        /* In _LP64 the union starts on an 8-byte boundary. */\n-        int     _pad;\n-#endif+/\n-        _reason reason;\n-    };\n+        version (D_LP64)\n+            int _pad;\n \n+        union reason_t\n+        {\n+            struct rt_t\n+            {\n+                pid_t    _pid;\n+                uid_t    _uid;\n+                sigval_t _value;\n+            } rt_t _rt;\n+            struct child_t\n+            {\n+                pid_t   _pid;\n+                uid_t   _uid;\n+                int     _status;\n+                clock_t _utime;\n+                clock_t _stime;\n+            } child_t _child;\n+            struct fault_t\n+            {\n+                void* _addr;\n+                int   _trap;\n+                int   _trap2;\n+                int   _trap3;\n+            } fault_t fault;\n+            struct poll_t\n+            {\n+                c_long _band;\n+                int  _fd;\n+            } poll_t _poll;\n+        }\n+        reason_t _reason;\n+    }\n \n     union siginfo_t\n     {\n-        ubyte[128] si_pad;/* Total size; for future expansion */\n+        ubyte[128] si_pad;\n         _ksiginfo _info;\n-        @property ref c_long si_band() return { return _info.reason.poll._band; }\n+        @property ref c_long si_band() return { return _info._reason._poll._band; }\n     }\n \n     enum SI_USER    = 0;\n@@ -1589,51 +1591,83 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-    struct sigset_t {\n-        ulong[128/long.sizeof] __bits;\n+    struct sigset_t\n+    {\n+        c_ulong[128/c_long.sizeof] __bits;\n     }\n \n-    enum SIG_BLOCK      = 0;\n-    enum SIG_UNBLOCK    = 1;\n-    enum SIG_SETMASK    = 2;\n+    version (MIPS_Any)\n+    {\n+        enum SIG_BLOCK      = 1;\n+        enum SIG_UNBLOCK    = 2;\n+        enum SIG_SETMASK    = 3;\n+    }\n+    else\n+    {\n+        enum SIG_BLOCK      = 0;\n+        enum SIG_UNBLOCK    = 1;\n+        enum SIG_SETMASK    = 2;\n+    }\n \n-    struct siginfo_t {\n-        int si_signo, si_errno, si_code;\n-        union __si_fields_t {\n-            char[128 - 2*int.sizeof - long.sizeof] __pad = 0;\n-            struct __si_common_t {\n-                union __first_t {\n-                    struct __piduid_t {\n+    struct siginfo_t\n+    {\n+        int si_signo;\n+        version (MIPS_Any)  // __SI_SWAP_ERRNO_CODE\n+        {\n+            int si_code;\n+            int si_errno;\n+        }\n+        else\n+        {\n+            int si_errno;\n+            int si_code;\n+        }\n+        union __si_fields_t\n+        {\n+            char[128 - 2*int.sizeof - c_long.sizeof] __pad = 0;\n+            struct __si_common_t\n+            {\n+                union __first_t\n+                {\n+                    struct __piduid_t\n+                    {\n                         pid_t si_pid;\n                         uid_t si_uid;\n                     }\n                     __piduid_t __piduid;\n \n-                    struct __timer_t {\n+                    struct __timer_t\n+                    {\n                         int si_timerid;\n                         int si_overrun;\n                     }\n                     __timer_t __timer;\n                 }\n                 __first_t __first;\n \n-                union __second_t {\n+                union __second_t\n+                {\n                     sigval si_value;\n-                    struct __sigchld_t {\n+                    struct __sigchld_t\n+                    {\n                         int si_status;\n-                        clock_t si_utime, si_stime;\n+                        clock_t si_utime;\n+                        clock_t si_stime;\n                     }\n                     __sigchld_t __sigchld;\n                 }\n                 __second_t __second;\n             }\n             __si_common_t __si_common;\n \n-            struct __sigfault_t {\n+            struct __sigfault_t\n+            {\n                 void *si_addr;\n                 short si_addr_lsb;\n-                union __first_t {\n-                    struct __addr_bnd_t {\n+                union __first_t\n+                {\n+                    struct __addr_bnd_t\n+                    {\n                         void *si_lower;\n                         void *si_upper;\n                     }\n@@ -1644,13 +1678,15 @@ else version (CRuntime_Musl)\n             }\n             __sigfault_t __sigfault;\n \n-            struct __sigpoll_t {\n-                long si_band;\n+            struct __sigpoll_t\n+            {\n+                c_long si_band;\n                 int si_fd;\n             }\n             __sigpoll_t __sigpoll;\n \n-            struct __sigsys_t {\n+            struct __sigsys_t\n+            {\n                 void *si_call_addr;\n                 int si_syscall;\n                 uint si_arch;\n@@ -3030,7 +3066,177 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n-    enum SA_RESTART     = 0x10000000;\n+    version (MIPS_Any)\n+    {\n+        enum SIGPOLL   = 22;\n+        enum SIGPROF   = 29;\n+        enum SIGSYS    = 12;\n+        enum SIGTRAP   = 5;\n+        enum SIGVTALRM = 28;\n+        enum SIGXCPU   = 30;\n+        enum SIGXFSZ   = 31;\n+\n+        enum SA_ONSTACK   = 0x08000000;\n+        enum SA_RESETHAND = 0x80000000;\n+        enum SA_RESTART   = 0x10000000;\n+        enum SA_SIGINFO   = 8;\n+        enum SA_NOCLDWAIT = 0x10000;\n+        enum SA_NODEFER   = 0x40000000;\n+    }\n+    else\n+    {\n+        enum SIGPOLL   = 29;\n+        enum SIGPROF   = 27;\n+        enum SIGSYS    = 31;\n+        enum SIGTRAP   = 5;\n+        enum SIGVTALRM = 26;\n+        enum SIGXCPU   = 24;\n+        enum SIGXFSZ   = 25;\n+\n+        enum SA_ONSTACK   = 0x08000000;\n+        enum SA_RESETHAND = 0x80000000;\n+        enum SA_RESTART   = 0x10000000;\n+        enum SA_SIGINFO   = 4;\n+        enum SA_NOCLDWAIT = 2;\n+        enum SA_NODEFER   = 0x40000000;\n+    }\n+\n+    enum SS_ONSTACK = 1;\n+    enum SS_DISABLE = 2;\n+\n+    version (ARM)\n+    {\n+        enum MINSIGSTKSZ = 2048;\n+        enum SIGSTKSZ    = 8192;\n+    }\n+    else version (AArch64)\n+    {\n+        enum MINSIGSTKSZ = 6144;\n+        enum SIGSTKSZ    = 12288;\n+    }\n+    else version (IBMZ_Any)\n+    {\n+        enum MINSIGSTKSZ = 4096;\n+        enum SIGSTKSZ    = 10240;\n+    }\n+    else version (MIPS_Any)\n+    {\n+        enum MINSIGSTKSZ = 2048;\n+        enum SIGSTKSZ    = 8192;\n+    }\n+    else version (PPC_Any)\n+    {\n+        enum MINSIGSTKSZ = 4096;\n+        enum SIGSTKSZ    = 10240;\n+    }\n+    else version (X86_Any)\n+    {\n+        enum MINSIGSTKSZ = 2048;\n+        enum SIGSTKSZ    = 8192;\n+    }\n+    else\n+        static assert(0, \"unimplemented\");\n+\n+    //ucontext_t (defined in core.sys.posix.ucontext)\n+    //mcontext_t (defined in core.sys.posix.ucontext)\n+\n+    version (MIPS_Any)\n+    {\n+        struct stack_t\n+        {\n+            void*  ss_sp;\n+            size_t ss_size;\n+            int    ss_flags;\n+        }\n+    }\n+    else\n+    {\n+        struct stack_t\n+        {\n+            void*  ss_sp;\n+            int    ss_flags;\n+            size_t ss_size;\n+        }\n+    }\n+\n+    enum\n+    {\n+        ILL_ILLOPC = 1,\n+        ILL_ILLOPN,\n+        ILL_ILLADR,\n+        ILL_ILLTRP,\n+        ILL_PRVOPC,\n+        ILL_PRVREG,\n+        ILL_COPROC,\n+        ILL_BADSTK\n+    }\n+\n+    enum\n+    {\n+        FPE_INTDIV = 1,\n+        FPE_INTOVF,\n+        FPE_FLTDIV,\n+        FPE_FLTOVF,\n+        FPE_FLTUND,\n+        FPE_FLTRES,\n+        FPE_FLTINV,\n+        FPE_FLTSUB\n+    }\n+\n+    enum\n+    {\n+        SEGV_MAPERR = 1,\n+        SEGV_ACCERR\n+    }\n+\n+    enum\n+    {\n+        BUS_ADRALN = 1,\n+        BUS_ADRERR,\n+        BUS_OBJERR\n+    }\n+\n+    enum\n+    {\n+        TRAP_BRKPT = 1,\n+        TRAP_TRACE\n+    }\n+\n+    enum\n+    {\n+        CLD_EXITED = 1,\n+        CLD_KILLED,\n+        CLD_DUMPED,\n+        CLD_TRAPPED,\n+        CLD_STOPPED,\n+        CLD_CONTINUED\n+    }\n+\n+    enum\n+    {\n+        POLL_IN = 1,\n+        POLL_OUT,\n+        POLL_MSG,\n+        POLL_ERR,\n+        POLL_PRI,\n+        POLL_HUP\n+    }\n+\n+    sigfn_t bsd_signal(int sig, sigfn_t func);\n+    sigfn_t sigset(int sig, sigfn_t func);\n+\n+  nothrow:\n+  @nogc:\n+    sigfn_t2 bsd_signal(int sig, sigfn_t2 func);\n+    sigfn_t2 sigset(int sig, sigfn_t2 func);\n+\n+    int killpg(pid_t, int);\n+    int sigaltstack(const scope stack_t*, stack_t*);\n+    int sighold(int);\n+    int sigignore(int);\n+    int siginterrupt(int, int);\n+    int sigpause(int);\n+    int sigrelse(int);\n }\n else version (CRuntime_UClibc)\n {\n@@ -3485,7 +3691,7 @@ else version (CRuntime_Musl)\n         int sigev_notify;\n         void function(sigval) sigev_notify_function;\n         pthread_attr_t *sigev_notify_attributes;\n-        char[56 - 3 * long.sizeof] __pad = void;\n+        char[56 - 3 * c_long.sizeof] __pad = void;\n     }\n }\n else version (CRuntime_UClibc)"}, {"sha": "424c8a823077bea96da0d3436ab76b580f1c3b6b", "filename": "libphobos/libdruntime/core/sys/posix/sys/ioccom.d", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioccom.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioccom.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioccom.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -66,3 +66,64 @@ version (OSX)\n         return _IOC!(T)(IOC_INOUT, cast(uint)g, cast(uint)n, T.sizeof);\n     }\n }\n+else version (FreeBSD)\n+{\n+    /* FreeBSD ioctl's encode the command in the lower 16-bits\n+     * and the size of any in/out parameters in the lower 13 bits of the upper\n+     * 16-bits of a 32 bit unsigned integer. The high 3 bits of the upper\n+     * 16-bits encode the in/out status of the parameter.\n+     */\n+    enum uint IOCPARM_SHIFT = 13; // number of bits for ioctl size\n+    enum uint IOCPARM_MASK = ((1 << IOCPARM_SHIFT) - 1); // parameter length mask\n+    uint IOCPARM_LEN(uint x) // to extract the encoded parameter length\n+    {\n+        return ((x >> 16) & IOCPARM_MASK);\n+    }\n+    uint IOCBASECMD(uint x) // to extract the encoded command\n+    {\n+        return (x & ~(IOCPARM_MASK << 16));\n+    }\n+    uint IOCGROUP(uint x) // to extract the encoded group\n+    {\n+        return ((x >> 8) & 0xff);\n+    }\n+\n+    enum uint IOCPARM_MAX = (1 << IOCPARM_SHIFT); // max size of ioctl args\n+\n+    enum uint IOC_VOID = 0x20000000; // no parameters\n+    enum uint IOC_OUT = 0x40000000; // copy parameters back\n+    enum uint IOC_IN = 0x80000000; // copy parameters into\n+    enum uint IOC_INOUT = (IOC_IN | IOC_OUT);\n+    enum uint IOC_DIRMASK = (IOC_VOID|IOC_OUT|IOC_IN);\n+\n+    // encode the ioctl info into 32 bits\n+    uint _IOC(uint inorout, uint group, uint num, size_t len)\n+    {\n+        return (inorout | ((len & IOCPARM_MASK) << 16) | (group << 8) | num);\n+    }\n+\n+    // encode a command with no parameters\n+    uint _IO(char g, int n)\n+    {\n+        return _IOC(IOC_VOID, cast(uint)g, cast(uint)n, cast(size_t)0);\n+    }\n+    uint _IOWINT(char g, int n)\n+    {\n+        return _IOC(IOC_VOID, cast(uint)g, cast(uint)n, int.sizeof);\n+    }\n+    // encode a command that returns info\n+    uint _IOR(T)(char g, int n)\n+    {\n+        return _IOC(IOC_OUT, cast(uint)g, cast(uint)n, T.sizeof);\n+    }\n+    // encode a command that takes info\n+    uint _IOW(T)(char g, int n)\n+    {\n+        return _IOC(IOC_IN, cast(uint)g, cast(uint)n, T.sizeof);\n+    }\n+    // encode a command that takes info and returns info\n+    uint _IOWR(T)(char g, int n)\n+    {\n+        return _IOC(IOC_INOUT, cast(uint)g, cast(uint)n, T.sizeof);\n+    }\n+}"}, {"sha": "7c77e803ce959e64b42037b89d6497f7365ee07d", "filename": "libphobos/libdruntime/core/sys/posix/sys/ioctl.d", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioctl.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioctl.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fioctl.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -15,6 +15,7 @@\n module core.sys.posix.sys.ioctl;\n \n import core.stdc.config;\n+public import core.sys.posix.sys.ttycom;\n \n version (OSX)\n     version = Darwin;\n@@ -357,14 +358,6 @@ else version (FreeBSD)\n         void* buf;\n     }\n \n-    struct winsize\n-    {\n-        ushort ws_row;\n-        ushort ws_col;\n-        ushort ws_xpixel;\n-        ushort ws_ypixel;\n-    }\n-\n     int ioctl(int, c_ulong, ...);\n }\n else version (NetBSD)"}, {"sha": "f682320a359acd05df321884acd1b51688e158d0", "filename": "libphobos/libdruntime/core/sys/posix/sys/mman.d", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmman.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmman.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fmman.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -137,6 +137,15 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    enum\n+    {\n+        POSIX_MADV_NORMAL = 0,\n+        POSIX_MADV_RANDOM = 1,\n+        POSIX_MADV_SEQUENTIAL = 2,\n+        POSIX_MADV_WILLNEED = 3,\n+        POSIX_MADV_DONTNEED = 4,\n+    }\n+    int posix_madvise(void *, size_t, int);\n }\n else version (CRuntime_UClibc)\n {\n@@ -655,6 +664,14 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    enum\n+    {\n+        MCL_CURRENT = 1,\n+        MCL_FUTURE = 2,\n+    }\n+\n+    int mlockall(int);\n+    int munlockall();\n }\n else version (CRuntime_UClibc)\n {\n@@ -723,6 +740,8 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    int mlock(in void*, size_t);\n+    int munlock(in void*, size_t);\n }\n else version (CRuntime_UClibc)\n {\n@@ -834,6 +853,8 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    int shm_open(in char*, int, mode_t);\n+    int shm_unlink(in char*);\n }\n else version (CRuntime_UClibc)\n {"}, {"sha": "791a59328f770f8bbfdaf0af9e2b46eba71986b5", "filename": "libphobos/libdruntime/core/sys/posix/sys/socket.d", "status": "modified", "additions": 6, "deletions": 72, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fsocket.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -1359,41 +1359,8 @@ else version (DragonFlyBSD)\n         AF_LOCAL            = 1,\n         AF_UNIX             = AF_LOCAL,\n         AF_INET             = 2,\n-        AF_IMPLINK          = 3,\n-        AF_PUP              = 4,\n-        AF_CHAOS            = 5,\n-        AF_NETBIOS          = 6,\n-        AF_ISO              = 7,\n-        AF_OSI              = AF_ISO,\n-        AF_ECMA             = 8,\n-        AF_DATAKIT          = 9,\n-        AF_CCITT            = 10,\n-        AF_SNA              = 11,\n-        AF_DECnet           = 12,\n-        AF_DLI              = 13,\n-        AF_LAT              = 14,\n-        AF_HYLINK           = 15,\n         AF_APPLETALK        = 16,\n-        AF_ROUTE            = 17,\n-        AF_LINK             = 18,\n-        pseudo_AF_XTP       = 19,\n-        AF_COIP             = 20,\n-        AF_CNT              = 21,\n-        pseudo_AF_RTIP      = 22,\n         AF_IPX              = 23,\n-        AF_SIP              = 24,\n-        pseudo_AF_PIP       = 25,\n-        AF_ISDN             = 26,\n-        AF_E164             = AF_ISDN,\n-        pseudo_AF_KEY       = 27,\n-        //AF_INET6            = 28,   // defined below\n-        AF_NATM             = 29,\n-        AF_ATM              = 30,\n-        pseudo_AF_HDRCMPLT  = 31,\n-        AF_NETGRAPH         = 32,\n-        AF_BLUETOOTH        = 33,\n-        AF_MPLS             = 34,\n-        AF_IEEE80211        = 35,\n     }\n \n     struct sockaddr\n@@ -1427,43 +1394,6 @@ else version (DragonFlyBSD)\n         byte[_SS_PAD2SIZE] __ss_pad2;\n     }\n \n-    /* protocol families */\n-    enum PF_UNSPEC          = AF_UNSPEC;\n-    enum PF_LOCAL           = AF_LOCAL;\n-    enum PF_UNIX            = PF_LOCAL;\n-    enum PF_INET            = AF_INET;\n-    enum PF_IMPLINK         = AF_IMPLINK;\n-    enum PF_PUP             = AF_PUP;\n-    enum PF_CHAOS           = AF_CHAOS;\n-    enum PF_NETBIOS         = AF_NETBIOS;\n-    enum PF_ISO             = AF_ISO;\n-    enum PF_OSI             = AF_ISO;\n-    enum PF_ECMA            = AF_ECMA;\n-    enum PF_DATAKIT         = AF_DATAKIT;\n-    enum PF_CCITT           = AF_CCITT;\n-    enum PF_SNA             = AF_SNA;\n-    enum PF_DECnet          = AF_DECnet;\n-    enum PF_DLI             = AF_DLI;\n-    enum PF_LAT             = AF_LAT;\n-    enum PF_HYLINK          = AF_HYLINK;\n-    enum PF_APPLETALK       = AF_APPLETALK;\n-    enum PF_ROUTE           = AF_ROUTE;\n-    enum PF_LINK            = AF_LINK;\n-    enum PF_XTP             = pseudo_AF_XTP;\n-    enum PF_COIP            = AF_COIP;\n-    enum PF_CNT             = AF_CNT;\n-    enum PF_SIP             = AF_SIP;\n-    enum PF_IPX             = AF_IPX;\n-    enum PF_RTIP            = pseudo_AF_RTIP;\n-    enum PF_PIP             = pseudo_AF_PIP;\n-    enum PF_ISDN            = AF_ISDN;\n-    enum PF_KEY             = pseudo_AF_KEY;\n-    enum PF_INET6           = AF_INET6;\n-    enum PF_NATM            = AF_NATM;\n-    enum PF_ATM             = AF_ATM;\n-    enum PF_NETGRAPH        = AF_NETGRAPH;\n-    enum PF_BLUETOOTH       = AF_BLUETOOTH;\n-\n     struct msghdr\n     {\n         void*               msg_name;\n@@ -1928,10 +1858,10 @@ else version (CRuntime_Musl)\n         c_ulong     __ss_align;\n     }\n \n-    enum {\n+    enum\n+    {\n         SOCK_STREAM = 1,\n         SOCK_DGRAM = 2,\n-        SOCK_RAW = 3,\n         SOCK_RDM = 4,\n         SOCK_SEQPACKET = 5,\n         SOCK_DCCP = 6,\n@@ -2374,6 +2304,10 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    enum\n+    {\n+        SOCK_RAW    = 3\n+    }\n }\n else version (CRuntime_UClibc)\n {"}, {"sha": "d1530979cca65f793753bf3a6d1be16b60e01805", "filename": "libphobos/libdruntime/core/sys/posix/sys/ttycom.d", "status": "modified", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fttycom.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fttycom.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fttycom.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -108,3 +108,99 @@ version (OSX)\n     enum uint SLIPDISC = 4;       // serial IP discipline\n     enum uint PPPDISC  = 5;       // PPP discipline\n }\n+else version (FreeBSD)\n+{\n+    struct winsize {\n+        ushort  ws_row;     // rows, in characters\n+        ushort  ws_col;     // columns, in characters\n+        ushort  ws_xpixel;  // horizontal size, pixels\n+        ushort  ws_ypixel;  // vertical size, pixels\n+    }\n+\n+    // Serial/TTY ioctl's\n+                                               // 0-2 compat\n+                                               // 3-7 unused\n+                                               // 8-10 compat\n+                                               // 11-12 unused\n+    enum uint TIOCEXCL  = _IO('t', 13);        // set exclusive use of tty\n+    enum uint TIOCNXCL  = _IO('t', 14);        // reset exclusive use of tty\n+    enum uint TIOCGPTN  = _IOR!(int)('t', 15); // get pts number\n+    enum uint TIOCFLUSH = _IOW!(int)('t', 16); // flush buffers\n+                            // 17-18 compat\n+    enum uint TIOCGETA  = _IOR!(termios)('t', 19); // get termios struct\n+    enum uint TIOCSETA  = _IOW!(termios)('t', 20); // set termios struct\n+    enum uint TIOCSETAW = _IOW!(termios)('t', 21); // drain output, set\n+    enum uint TIOCSETAF = _IOW!(termios)('t', 22); // drn out, fls in, set\n+                            // 23-25 unused\n+    enum uint TIOCGETD  = _IOR!(int)('t', 26); // get line discipline\n+    enum uint TIOCSETD  = _IOW!(int)('t', 27); // set line discipline\n+    enum uint TIOCPTMASTER = _IO('t', 28);     // pts master validation\n+                            // 29-85 unused\n+    enum uint TIOCGDRAINWAIT = _IOR!(int)('t', 86); // get ttywait timeout\n+    enum uint TIOCSDRAINWAIT = _IOW!(int)('t', 87); // set ttywait timeout\n+                            // 88 unused\n+                            // 89-91 conflicts: tun and tap\n+    enum uint TIOCTIMESTAMP = _IOR!(timeval)('t', 89); // enable/get timestamp of last input event\n+    enum uint TIOCMGDTRWAIT = _IOR!(int)('t', 90); // modem: get wait on close\n+    enum uint TIOCMSDTRWAIT = _IOW!(int)('t', 91); // modem: set wait on close\n+                            // 92-93 tun and tap\n+                            // 94-97 conflicts: tun and tap\n+    enum uint TIOCDRAIN = _IO('t', 94); // wait till output drained\n+    enum uint TIOCSIG   = _IOWINT('t', 95); // pty: generate signal\n+    enum uint TIOCEXT   = _IOW!(int)('t', 96); // pty: external processing\n+    enum uint TIOCSCTTY = _IO('t', 97);        // become controlling tty\n+    enum uint TIOCCONS  = _IOW!(int)('t', 98); // become virtual console\n+    enum uint TIOCGSID  = _IOR!(int)('t', 99); // get session id\n+                            // 100 unused\n+    enum uint TIOCSTAT  = _IO('t', 101);       // simulate ^T status message\n+    enum uint TIOCUCNTL = _IOW!(int)('t', 102); // pty: set/clr usr cntl mode\n+    enum uint   UIOCCMD(n) = _IO('u', n);       // usr cntl op \"n\"\n+    enum uint TIOCSWINSZ = _IOW!(winsize)('t', 103); // set window size\n+    enum uint TIOCGWINSZ = _IOR!(winsize)('t', 104); // get window size\n+                            // 105 unused\n+    enum uint TIOCMGET  = _IOR!(int)('t', 106); // get all modem bits\n+    enum uint   TIOCM_LE  = 0x01;               // line enable\n+    enum uint   TIOCM_DTR = 0x02;               // data terminal ready\n+    enum uint   TIOCM_RTS = 0x04;               // request to send\n+    enum uint   TIOCM_ST  = 0x08;               // secondary transmit\n+    enum uint   TIOCM_SR  = 0x10;               // secondary receive\n+    enum uint   TIOCM_CTS = 0x20;               // clear to send\n+    enum uint   TIOCM_DCD = 0x40;               // data carrier detect\n+    enum uint   TIOCM_RI  = 0x80;               // ring indicate\n+    enum uint   TIOCM_DSR = 0x100;              // data set ready\n+    enum uint   TIOCM_CD  = TIOCM_DCD;\n+    enum uint   TIOCM_CAR = TIOCM_DCD;\n+    enum uint   TIOCM_RNG = TIOCM_RI;\n+    enum uint TIOCMBIC  = _IOW!(int)('t', 107); // bic modem bits\n+    enum uint TIOCMBIS  = _IOW!(int)('t', 108); // bis modem bits\n+    enum uint TIOCMSET  = _IOW!(int)('t', 109); // set all modem bits\n+    enum uint TIOCSTART = _IO('t', 110);        // start output like ^Q\n+    enum uint TIOCSTOP  = _IO('t', 111);        // stop output like ^S\n+    enum uint TIOCPKT   = _IOW!(int)('t', 112); // pty: set/clr packet mode\n+    enum uint TIOCPKT_DATA       = 0x00;        // data packet\n+    enum uint TIOCPKT_FLUSHREAD  = 0x01;        // flush packet\n+    enum uint TIOCPKT_FLUSHWRITE = 0x02;        // flush packet\n+    enum uint TIOCPKT_STOP       = 0x04;        // stop output\n+    enum uint TIOCPKT_START      = 0x08;        // start output\n+    enum uint TIOCPKT_NOSTOP     = 0x10;        // no more ^S, ^Q\n+    enum uint TIOCPKT_DOSTOP     = 0x20;        // now do ^S, ^Q\n+    enum uint TIOCPKT_IOCTL      = 0x40;        // state change of pty driver\n+    enum uint TIOCNOTTY = _IO('t', 113);        // void tty association\n+    enum uint TIOCSTI   = _IOW!(char)('t', 114); // simulate terminal input\n+    enum uint TIOCOUTQ  = _IOR!(int)('t', 115); // output queue size\n+                             // 116-117 compat\n+    enum uint TIOCSPGRP = _IOW!(int)('t', 118); // set pgrp of tty\n+    enum uint TIOCGPGRP = _IOR!(int)('t', 119); // get pgrp of tty\n+\n+    enum uint TIOCCDTR  = _IO('t', 120);       // clear data terminal ready\n+    enum uint TIOCSDTR  = _IO('t', 121);       // set data terminal ready\n+    enum uint TIOCCBRK  = _IO('t', 122);       // clear break bit\n+    enum uint TIOCSBRK  = _IO('t', 123);       // set break bit\n+                            // 124-127 compat\n+\n+    enum uint TTYDISC  = 0;       // termios tty line discipline\n+    enum uint SLIPDISC = 4;       // serial IP discipline\n+    enum uint PPPDISC  = 5;       // PPP discipline\n+    enum uint NETGRAPHDISC = 6;   // Netgraph tty node discipline\n+    enum uint H4DISC   = 7;       // Netgraph Blutooth H4 discipline\n+}"}, {"sha": "6188047cf0e4cb218bc8d97be7473f92ff6633ef", "filename": "libphobos/libdruntime/core/sys/posix/sys/types.d", "status": "modified", "additions": 94, "deletions": 24, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Ftypes.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -112,20 +112,25 @@ version (CRuntime_Glibc)\n }\n else version (CRuntime_Musl)\n {\n-    alias long      blksize_t;\n-    alias ulong     nlink_t;\n-    alias long      dev_t;\n-    alias long      blkcnt_t;\n-    alias ulong     ino_t;\n-    alias long      off_t;\n-    alias long      _Addr;\n-    alias int       pid_t;\n-    alias uint      uid_t;\n-    alias uint      gid_t;\n-    alias long      time_t;\n-    alias long      clock_t;\n-    alias ulong     pthread_t;\n-    alias _Addr     ssize_t;\n+    alias c_long     blksize_t;\n+    alias c_ulong    nlink_t;\n+    alias long       dev_t;\n+    alias long       blkcnt_t;\n+    alias ulong      ino_t;\n+    alias long       off_t;\n+    alias int        pid_t;\n+    alias uint       uid_t;\n+    alias uint       gid_t;\n+    version (D_X32)\n+        alias long   time_t;\n+    else\n+        alias c_long time_t;\n+    alias c_long     clock_t;\n+    alias c_ulong    pthread_t;\n+    version (D_LP64)\n+        alias c_long ssize_t;\n+    else\n+        alias int    ssize_t;\n }\n else version (Darwin)\n {\n@@ -447,7 +452,10 @@ else version (CRuntime_Musl)\n   }\n     alias uint mode_t;\n     alias uint id_t;\n-    alias long suseconds_t;\n+    version (D_X32)\n+        alias long susseconds_t;\n+    else\n+        alias c_long suseconds_t;\n }\n else version (CRuntime_UClibc)\n {\n@@ -750,40 +758,77 @@ version (CRuntime_Glibc)\n }\n else version (CRuntime_Musl)\n {\n-    version (X86_64) {\n+    version (D_LP64)\n+    {\n         union pthread_attr_t\n         {\n             int[14] __i;\n             ulong[7] __s;\n         }\n+\n         union pthread_cond_t\n         {\n             int[12] __i;\n             void*[6] __p;\n         }\n+\n         union pthread_mutex_t\n         {\n             int[10] __i;\n             void*[5] __p;\n         }\n+\n         union pthread_rwlock_t\n         {\n             int[14] __i;\n             void*[7] __p;\n         }\n-        struct pthread_rwlockattr_t\n+    }\n+    else\n+    {\n+        union pthread_attr_t\n+        {\n+            int[9] __i;\n+            uint[9] __s;\n+        }\n+\n+        union pthread_cond_t\n+        {\n+            int[12] __i;\n+            void*[12] __p;\n+        }\n+\n+        union pthread_mutex_t\n+        {\n+            int[6] __i;\n+            void*[6] __p;\n+        }\n+\n+        union pthread_rwlock_t\n         {\n-            uint[2] __attr;\n+            int[8] __i;\n+            void*[8] __p;\n         }\n-        alias uint pthread_key_t;\n-        alias uint pthread_condattr_t;\n-        alias uint pthread_mutexattr_t;\n-        alias int pthread_once_t;\n     }\n-    else\n+\n+    struct pthread_rwlockattr_t\n     {\n-        static assert (false, \"Architecture unsupported\");\n+        uint[2] __attr;\n+    }\n+\n+    alias uint pthread_key_t;\n+\n+    struct pthread_condattr_t\n+    {\n+        uint __attr;\n     }\n+\n+    struct pthread_mutexattr_t\n+    {\n+        uint __attr;\n+    }\n+\n+    alias int pthread_once_t;\n }\n else version (Darwin)\n {\n@@ -1352,6 +1397,27 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    version (D_LP64)\n+    {\n+        union pthread_barrier_t\n+        {\n+            int[8] __i;\n+            void*[4] __p;\n+        }\n+    }\n+    else\n+    {\n+        union pthread_barrier_t\n+        {\n+            int[5] __i;\n+            void*[5] __p;\n+        }\n+    }\n+\n+    struct pthread_barrierattr_t\n+    {\n+        uint __attr;\n+    }\n }\n else version (CRuntime_UClibc)\n {\n@@ -1407,6 +1473,10 @@ else version (CRuntime_UClibc)\n {\n     alias int pthread_spinlock_t; // volatile\n }\n+else version (CRuntime_Musl)\n+{\n+    alias int pthread_spinlock_t;\n+}\n \n //\n // Timer (TMR)"}, {"sha": "322326d990b47ac81f72e179b624df08388e14ee", "filename": "libphobos/libdruntime/core/sys/posix/sys/wait.d", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fwait.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fwait.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fsys%2Fwait.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -392,6 +392,19 @@ else version (CRuntime_Bionic)\n }\n else version (CRuntime_Musl)\n {\n+    enum WEXITED    = 4;\n+    enum WSTOPPED   = 2;\n+    enum WCONTINUED = 8;\n+    enum WNOWAIT    = 0x01000000;\n+\n+    enum idtype_t\n+    {\n+        P_ALL,\n+        P_PID,\n+        P_PGID\n+    }\n+\n+    int waitid(idtype_t, id_t, siginfo_t*, int);\n }\n else version (CRuntime_UClibc)\n {"}, {"sha": "2859558b2b96a8e70138093660f4117ef59392df", "filename": "libphobos/libdruntime/core/sys/posix/time.d", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ftime.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ftime.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Ftime.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -127,22 +127,10 @@ CLOCK_MONOTONIC\n version (linux)\n {\n     enum CLOCK_MONOTONIC          = 1;\n-    // To be removed in December 2015.\n-    static import core.sys.linux.time;\n-    deprecated(\"Please import it from core.sys.linux.time instead.\")\n-        alias CLOCK_MONOTONIC_RAW = core.sys.linux.time.CLOCK_MONOTONIC_RAW; // non-standard\n-    deprecated(\"Please import it from core.sys.linux.time instead.\")\n-        alias CLOCK_MONOTONIC_COARSE = core.sys.linux.time.CLOCK_MONOTONIC_COARSE; // non-standard\n }\n else version (FreeBSD)\n {   // time.h\n     enum CLOCK_MONOTONIC         = 4;\n-    // To be removed in December 2015.\n-    static import core.sys.freebsd.time;\n-    deprecated(\"Please import it from core.sys.freebsd.time instead.\")\n-        alias CLOCK_MONOTONIC_PRECISE = core.sys.freebsd.time.CLOCK_MONOTONIC_PRECISE;\n-    deprecated(\"Please import it from core.sys.freebsd.time instead.\")\n-        alias CLOCK_MONOTONIC_FAST = core.sys.freebsd.time.CLOCK_MONOTONIC_FAST;\n }\n else version (NetBSD)\n {\n@@ -157,12 +145,6 @@ else version (OpenBSD)\n else version (DragonFlyBSD)\n {   // time.h\n     enum CLOCK_MONOTONIC         = 4;\n-    // To be removed in December 2015.\n-    static import core.sys.dragonflybsd.time;\n-    deprecated(\"Please import it from core.sys.dragonflybsd.time instead.\")\n-        alias CLOCK_MONOTONIC_PRECISE = core.sys.dragonflybsd.time.CLOCK_MONOTONIC_PRECISE;\n-    deprecated(\"Please import it from core.sys.dragonflybsd.time instead.\")\n-        alias CLOCK_MONOTONIC_FAST = core.sys.dragonflybsd.time.CLOCK_MONOTONIC_FAST;\n }\n else version (Darwin)\n {\n@@ -236,10 +218,6 @@ version (CRuntime_Glibc)\n     }\n \n     enum CLOCK_REALTIME         = 0;\n-    // To be removed in December 2015.\n-    static import core.sys.linux.time;\n-    deprecated(\"Please import it from core.sys.linux.time instead.\")\n-        alias CLOCK_REALTIME_COARSE = core.sys.linux.time.CLOCK_REALTIME_COARSE; // non-standard\n     enum TIMER_ABSTIME          = 0x01;\n \n     alias int clockid_t;"}, {"sha": "49a7c3e389a0dc3325cfa46e7d583d907c2cc415", "filename": "libphobos/libdruntime/core/sys/posix/ucontext.d", "status": "modified", "additions": 200, "deletions": 31, "changes": 231, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Fucontext.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -23,6 +23,10 @@ extern (C):\n nothrow:\n @nogc:\n \n+version (MIPS32)  version = MIPS_Any;\n+version (MIPS64)  version = MIPS_Any;\n+version (PPC)     version = PPC_Any;\n+version (PPC64)   version = PPC_Any;\n version (RISCV32) version = RISCV_Any;\n version (RISCV64) version = RISCV_Any;\n version (S390)    version = IBMZ_Any;\n@@ -770,6 +774,139 @@ version (CRuntime_Glibc)\n     else\n         static assert(0, \"unimplemented\");\n }\n+else version (CRuntime_Musl)\n+{\n+    version (AArch64)\n+    {\n+        struct mcontext_t\n+        {\n+            real[18+256] __regs;\n+        }\n+\n+        struct ucontext_t\n+        {\n+            c_ulong     uc_flags;\n+            ucontext_t* uc_link;\n+            stack_t     uc_stack;\n+            sigset_t    uc_sigmask;\n+            mcontext_t  uc_mcontext;\n+        }\n+    }\n+    else version (ARM)\n+    {\n+        struct mcontext_t\n+        {\n+            c_ulong[21] __regs;\n+        }\n+\n+        struct ucontext_t\n+        {\n+            c_ulong     uc_flags;\n+            ucontext_t* uc_link;\n+            stack_t     uc_stack;\n+            mcontext_t  uc_mcontext;\n+            sigset_t    uc_sigmask;\n+            ulong[64]   uc_regspace;\n+        }\n+    }\n+    else version (IBMZ_Any)\n+    {\n+        struct mcontext_t\n+        {\n+            c_ulong[18] __regs1;\n+            uint[18]    __regs2;\n+            double[16]  __regs3;\n+        }\n+\n+        struct ucontext_t\n+        {\n+            c_ulong     uc_flags;\n+            ucontext_t* uc_link;\n+            stack_t     uc_stack;\n+            mcontext_t  uc_mcontext;\n+            sigset_t    uc_sigmask;\n+        }\n+    }\n+    else version (MIPS_Any)\n+    {\n+        version (MIPS_N32)\n+        {\n+            struct mcontext_t\n+            {\n+                ulong[32]  __mc1;\n+                double[32] __mc2;\n+                ulong[9]   __mc3;\n+                uint[4]    __mc4;\n+            }\n+        }\n+        else version (MIPS64)\n+        {\n+            struct mcontext_t\n+            {\n+                ulong[32]  __mc1;\n+                double[32] __mc2;\n+                ulong[9]   __mc3;\n+                uint[4]    __mc4;\n+            }\n+        }\n+        else\n+        {\n+            struct mcontext_t\n+            {\n+                uint[2]    __mc1;\n+                ulong[65]  __mc2;\n+                uint[5]    __mc3;\n+                ulong[2]   __mc4;\n+                uint[6]    __mc5;\n+            }\n+        }\n+\n+        struct ucontext_t\n+        {\n+            c_ulong     uc_flags;\n+            ucontext_t* uc_link;\n+            stack_t     uc_stack;\n+            mcontext_t  uc_mcontext;\n+            sigset_t    uc_sigmask;\n+        }\n+    }\n+    else version (X86)\n+    {\n+        struct mcontext_t\n+        {\n+            uint[22] __space;\n+        }\n+\n+        struct ucontext_t\n+        {\n+            c_ulong     uc_flags;\n+            ucontext_t* uc_link;\n+            stack_t     uc_stack;\n+            mcontext_t  uc_mcontext;\n+            sigset_t    uc_sigmask;\n+            c_ulong[28] __fpregs_mem;\n+        }\n+    }\n+    else version (X86_64)\n+    {\n+        struct mcontext_t\n+        {\n+            ulong[32] __space;\n+        }\n+\n+        struct ucontext_t\n+        {\n+            c_ulong     uc_flags;\n+            ucontext_t* uc_link;\n+            stack_t     uc_stack;\n+            mcontext_t  uc_mcontext;\n+            sigset_t    uc_sigmask;\n+            ulong[64]   __fpregs_mem;\n+        }\n+    }\n+    else\n+        static assert(0, \"unimplemented\");\n+}\n else version (FreeBSD)\n {\n     // <machine/ucontext.h>\n@@ -897,6 +1034,26 @@ else version (FreeBSD)\n             ulong[8]        mc_spare;\n         }\n     }\n+    else version (PPC_Any)\n+    {\n+        alias size_t __register_t;\n+        alias uint   __uint32_t;\n+        alias ulong  __uint64_t;\n+\n+        struct mcontext_t {\n+            int     mc_vers;\n+            int     mc_flags;\n+            enum _MC_FP_VALID = 0x01;\n+            enum _MC_AV_VALID = 0x02;\n+            int     mc_onstack;\n+            int     mc_len;\n+            __uint64_t[32 * 2]  mc_avec;\n+            __uint32_t[2]       mc_av;\n+            __register_t[42]    mc_frame;\n+            __uint64_t[33]      mc_fpreg;\n+            __uint64_t[32]      mc_vsxfpreg;\n+        }\n+    }\n \n     // <ucontext.h>\n     enum UCF_SWAPPED = 0x00000001;\n@@ -914,44 +1071,57 @@ else version (FreeBSD)\n }\n else version (NetBSD)\n {\n-\n     version (X86_64)\n     {\n-      enum { NGREG = 26 };\n-      alias __greg_t = ulong;\n-      alias __gregset_t = __greg_t[NGREG];\n-      alias __fpregset_t = align(8)ubyte[512];\n+        private\n+        {\n+            enum _NGREG = 26;\n+            alias __greg_t = c_ulong;\n+            alias __gregset_t = __greg_t[_NGREG];\n+            alias __fpregset_t = align(8) ubyte[512];\n+        }\n \n-      struct mcontext_t {\n-        __gregset_t     __gregs;\n-        __greg_t        _mc_tlsbase;\n-        __fpregset_t    __fpregs;\n-      }\n+        struct mcontext_t\n+        {\n+            __gregset_t  __gregs;\n+            __greg_t     _mc_tlsbase;\n+            __fpregset_t __fpregs;\n+        }\n     }\n     else version (X86)\n     {\n-      enum { NGREG = 19 };\n-      alias __greg_t = ulong;\n-      alias __gregset_t = __greg_t[_NGREG];\n-      struct __fpregset_t{\n-        union __fp_reg_set{\n-                struct __fpchip_state{\n-                        int[27]     __fp_state; /* Environment and registers */\n-                } ;       /* x87 regs in fsave format */\n-                struct __fp_xmm_state{\n+        private\n+        {\n+            enum _NGREG = 19;\n+            alias __greg_t = int;\n+            alias __gregset_t = __greg_t[_NGREG];\n+            struct __fpregset_t\n+            {\n+                union fp_reg_set_t\n+                {\n+                    struct fpchip_state_t\n+                    {\n+                        int[27] __fp_state;\n+                    }\n+                    struct fp_xmm_state_t\n+                    {\n                         ubyte[512]    __fp_xmm;\n-                } ;       /* x87 and xmm regs in fxsave format */\n-                int[128]     __fp_fpregs;\n-        };\n-        __fpregset_t __fp_reg_set;\n-        int[33]     __fp_pad;                   /* Historic padding */\n-      };\n+                    }\n+                    fpchip_state_t __fpchip_state;\n+                    fp_xmm_state_t __fp_xmm_state;\n+                    int[128]     __fp_fpregs;\n+                }\n+                fp_reg_set_t __fp_reg_set;\n+                int[33]     __fp_pad;\n+            }\n+        }\n \n-      struct mcontext_t {\n-        __gregset_t     __gregs;\n-        __fpregset_t    __fpregs;\n-        __greg_t        _mc_tlsbase;\n-      }\n+        struct mcontext_t\n+        {\n+            __gregset_t     __gregs;\n+            __fpregset_t    __fpregs;\n+            __greg_t        _mc_tlsbase;\n+        }\n     }\n \n     struct ucontext_t\n@@ -965,7 +1135,6 @@ else version (NetBSD)\n                 long            __uc_pad[_UC_MACHINE_PAD];\n         #endif\n         +/\n-\n     }\n }\n else version (OpenBSD)"}, {"sha": "6e035e545025eae4099ba2ad5580ec45ebd5bb5a", "filename": "libphobos/libdruntime/core/sys/posix/unistd.d", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Funistd.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Funistd.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fposix%2Funistd.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -2403,7 +2403,7 @@ else version (OpenBSD)\n {\n     char*      crypt(in char*, in char*);\n     //char*      ctermid(char*);\n-    //void       encrypt(ref char[64], int) @trusted;\n+    void       encrypt(ref char[64], int) @trusted;\n     int        fchdir(int) @trusted;\n     c_long     gethostid() @trusted;\n     pid_t      getpgid(pid_t) @trusted;"}, {"sha": "f378a17943dc0622ff78680c3c360b608c1cf096", "filename": "libphobos/libdruntime/core/sys/windows/winnt.d", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnt.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e78c638a7846b3c96c80b920ab38416abd35997/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnt.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libphobos%2Flibdruntime%2Fcore%2Fsys%2Fwindows%2Fwinnt.d?ref=1e78c638a7846b3c96c80b920ab38416abd35997", "patch": "@@ -49,6 +49,9 @@ alias void*  PVOID64;\n alias const(char)*  PCCH, LPCCH, PCSTR, LPCSTR;\n alias const(wchar)* LPCWCH, PCWCH, LPCWSTR, PCWSTR;\n \n+alias PSTR* PZPSTR;\n+alias PWSTR* PZPWSTR;\n+\n version (Unicode) {\n     alias WCHAR TCHAR, _TCHAR;\n } else {"}]}