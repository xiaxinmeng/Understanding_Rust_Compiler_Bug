{"sha": "9940b13ce7376801a0d05d409424cd851d363dc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk0MGIxM2NlNzM3NjgwMWEwZDA1ZDQwOTQyNGNkODUxZDM2M2RjMA==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2010-07-05T10:41:25Z"}, "committer": {"name": "Ira Rosen", "email": "irar@gcc.gnu.org", "date": "2010-07-05T10:41:25Z"}, "message": "tree-vect-loop.c (vect_get_single_scalar_iteraion_cost): Skip statements that are not vectorized.\n\n\n\t* tree-vect-loop.c (vect_get_single_scalar_iteraion_cost): Skip\n\tstatements that are not vectorized.\n\t* tree-vect-stmts.c (vect_get_load_cost): Update the value stored\n\tin INSIDE_COST.\n\nFrom-SVN: r161827", "tree": {"sha": "d734a85fd429090835af28ab289244738137244a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d734a85fd429090835af28ab289244738137244a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9940b13ce7376801a0d05d409424cd851d363dc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9940b13ce7376801a0d05d409424cd851d363dc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9940b13ce7376801a0d05d409424cd851d363dc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9940b13ce7376801a0d05d409424cd851d363dc0/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "394473ab8eb9ed62f0379ec4e3182314f16a93fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/394473ab8eb9ed62f0379ec4e3182314f16a93fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/394473ab8eb9ed62f0379ec4e3182314f16a93fc"}], "stats": {"total": 32, "additions": 27, "deletions": 5}, "files": [{"sha": "0a704316bdcaa425a532024fdcdcc4b5e7abb30b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9940b13ce7376801a0d05d409424cd851d363dc0", "patch": "@@ -1,3 +1,10 @@\n+2010-07-05  Ira Rosen  <irar@il.ibm.com>\n+\n+\t* tree-vect-loop.c (vect_get_single_scalar_iteraion_cost): Skip\n+\tstatements that are not vectorized.\n+\t* tree-vect-stmts.c (vect_get_load_cost): Update the value stored\n+\tin INSIDE_COST.\t\n+\n 2010-07-05  Mikael Pettersson  <mikpe@it.uu.se>\n \n \tPR bootstrap/44820"}, {"sha": "59ac23efc730dd7b6227d7ff3437bf5108e49e07", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9940b13ce7376801a0d05d409424cd851d363dc0", "patch": "@@ -1,3 +1,10 @@\n+2010-07-05  Ira Rosen  <irar@il.ibm.com>\n+\n+\t* gcc.dg/vect/costmodel/i386/costmodel-fast-math-vect-pr29925.c:\n+\tIncrease loop bound and array size.\n+\t* gcc.dg/vect/costmodel/x86_64/costmodel-fast-math-vect-pr29925.c:\n+\tLikewise.\n+\n 2010-07-05  Ira Rosen  <irar@il.ibm.com>\n \n \t* gcc.dg/vect/costmodel/ppc/costmodel-vect-31d.c: Remove."}, {"sha": "d5c0a1a13319d75965906bec18e695dd5b604a1e", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/i386/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fi386%2Fcostmodel-fast-math-vect-pr29925.c?ref=9940b13ce7376801a0d05d409424cd851d363dc0", "patch": "@@ -13,7 +13,7 @@ interp_pitch(float *exc, float *interp, int pitch, int len)\n    for (i=0;i<len;i++)\n    {\n       float tmp = 0;\n-      for (k=0;k<7;k++)\n+      for (k=0;k<12;k++)\n       {\n          tmp += exc[i-pitch+k+maxj-6];\n       }\n@@ -23,7 +23,7 @@ interp_pitch(float *exc, float *interp, int pitch, int len)\n \n int main()\n {\n-   float *exc = calloc(126,sizeof(float));\n+   float *exc = calloc(136,sizeof(float));\n    float *interp = calloc(80,sizeof(float));\n    int pitch = -35;\n "}, {"sha": "d5c0a1a13319d75965906bec18e695dd5b604a1e", "filename": "gcc/testsuite/gcc.dg/vect/costmodel/x86_64/costmodel-fast-math-vect-pr29925.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fcostmodel%2Fx86_64%2Fcostmodel-fast-math-vect-pr29925.c?ref=9940b13ce7376801a0d05d409424cd851d363dc0", "patch": "@@ -13,7 +13,7 @@ interp_pitch(float *exc, float *interp, int pitch, int len)\n    for (i=0;i<len;i++)\n    {\n       float tmp = 0;\n-      for (k=0;k<7;k++)\n+      for (k=0;k<12;k++)\n       {\n          tmp += exc[i-pitch+k+maxj-6];\n       }\n@@ -23,7 +23,7 @@ interp_pitch(float *exc, float *interp, int pitch, int len)\n \n int main()\n {\n-   float *exc = calloc(126,sizeof(float));\n+   float *exc = calloc(136,sizeof(float));\n    float *interp = calloc(80,sizeof(float));\n    int pitch = -35;\n "}, {"sha": "22b23a6e5239956905caadab36f3127097af9f42", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=9940b13ce7376801a0d05d409424cd851d363dc0", "patch": "@@ -2046,10 +2046,18 @@ vect_get_single_scalar_iteraion_cost (loop_vec_info loop_vinfo)\n       for (si = gsi_start_bb (bb); !gsi_end_p (si); gsi_next (&si))\n         {\n           gimple stmt = gsi_stmt (si);\n+          stmt_vec_info stmt_info = vinfo_for_stmt (stmt);\n \n           if (!is_gimple_assign (stmt) && !is_gimple_call (stmt))\n             continue;\n \n+          /* Skip stmts that are not vectorized inside the loop.  */\n+          if (stmt_info\n+              && !STMT_VINFO_RELEVANT_P (stmt_info)\n+              && (!STMT_VINFO_LIVE_P (stmt_info)\n+                  || STMT_VINFO_DEF_TYPE (stmt_info) != vect_reduction_def))\n+            continue;\n+\n           if (STMT_VINFO_DATA_REF (vinfo_for_stmt (stmt)))\n             {\n               if (DR_IS_READ (STMT_VINFO_DATA_REF (vinfo_for_stmt (stmt))))"}, {"sha": "8e921c671be52c129f9c2b1b5680ac0f2bf1e863", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9940b13ce7376801a0d05d409424cd851d363dc0/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=9940b13ce7376801a0d05d409424cd851d363dc0", "patch": "@@ -826,7 +826,7 @@ vect_get_load_cost (struct data_reference *dr, int ncopies,\n     {\n     case dr_aligned:\n       {\n-        inside_cost += ncopies * vect_get_stmt_cost (vector_load); \n+        *inside_cost += ncopies * vect_get_stmt_cost (vector_load); \n \n         if (vect_print_dump_info (REPORT_COST))\n           fprintf (vect_dump, \"vect_model_load_cost: aligned.\");"}]}