{"sha": "78542dee33b135825dab584ae041ed78fde0b118", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzg1NDJkZWUzM2IxMzU4MjVkYWI1ODRhZTA0MWVkNzhmZGUwYjExOA==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2010-01-01T12:50:08Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2010-01-01T12:50:08Z"}, "message": "Update README for libffi 3.0.9.\n\nFrom-SVN: r155553", "tree": {"sha": "9115b2faedf34457081d36e19be0a135b18d930e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9115b2faedf34457081d36e19be0a135b18d930e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78542dee33b135825dab584ae041ed78fde0b118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78542dee33b135825dab584ae041ed78fde0b118", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78542dee33b135825dab584ae041ed78fde0b118", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78542dee33b135825dab584ae041ed78fde0b118/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "50117ecbdb4127b71e071af0986c3cb51ceacd56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50117ecbdb4127b71e071af0986c3cb51ceacd56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50117ecbdb4127b71e071af0986c3cb51ceacd56"}], "stats": {"total": 147, "additions": 60, "deletions": 87}, "files": [{"sha": "becf7d4e857907851ef1e1a399f71f4f06c88d32", "filename": "libffi/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78542dee33b135825dab584ae041ed78fde0b118/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78542dee33b135825dab584ae041ed78fde0b118/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=78542dee33b135825dab584ae041ed78fde0b118", "patch": "@@ -1,3 +1,7 @@\n+2009-12-31  Anthony Green  <green@redhat.com>\n+\n+\t* README: Update for libffi 3.0.9.\n+\n 2009-12-27  Matthias Klose  <doko@ubuntu.com>\n \n \t* configure.ac (HAVE_LONG_DOUBLE): Define for mips when"}, {"sha": "48b59d216e6ac537a640f5a6de32c67fd22a6980", "filename": "libffi/README", "status": "modified", "additions": 56, "deletions": 87, "changes": 143, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78542dee33b135825dab584ae041ed78fde0b118/libffi%2FREADME", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78542dee33b135825dab584ae041ed78fde0b118/libffi%2FREADME", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FREADME?ref=78542dee33b135825dab584ae041ed78fde0b118", "patch": "@@ -4,7 +4,7 @@ shipped with GCC as convenience.\n Status\n ======\n \n-libffi-3.0.8 was released on December 19, 2008. Check the libffi web\n+libffi-3.0.9 was released on December 31, 2009. Check the libffi web\n page for updates: <URL:http://sourceware.org/libffi/>.\n \n \n@@ -42,41 +42,56 @@ between the two languages.\n Supported Platforms\n ===================\n \n-Libffi has been ported to many different platforms, although this\n-release was only tested on:\n-\n-     arm oabi linux\n-     arm eabi linux\n-     hppa linux\n-     mips o32 linux (little endian)\n-     powerpc darwin\n-     powerpc freebsd\n-     powerpc64 linux\n-     sparc solaris\n-     sparc64 freebsd\n-     sparc64 solaris\n-     x86 cygwin\n-     x86 darwin\n-     x86 freebsd\n-     x86 linux\n-     x86 openbsd\n-     x86 solaris\n-     x86-64 mingw\n-     x86-64 darwin\n-     x86-64 linux\n-     x86-64 OS X\n-     x86-64 freebsd\n-     x86-64 solaris\n-     \n+Libffi has been ported to many different platforms.\n+For specific configuration details and testing status, please\n+refer to the wiki page here:\n+\n+ http://www.moxielogic.org/wiki/index.php?title=Libffi_3.0.9\n+\n+At the time of release, the following basic configurations have been\n+tested:\n+\n+|--------------+------------------|\n+| Architecture | Operating System |\n+|--------------+------------------|\n+| Alpha        | Linux            |\n+| ARM          | Linux            |\n+| AVR32        | Linux            |\n+| HPPA         | HPUX             |\n+| IA-64        | Linux            |\n+| MIPS         | IRIX             |\n+| MIPS         | Linux            |\n+| MIPS64       | Linux            |\n+| PowerPC      | Linux            |\n+| PowerPC      | Mac OSX          |\n+| PowerPC      | FreeBSD          |\n+| PowerPC64    | Linux            |\n+| S390         | Linux            |\n+| S390X        | Linux            |\n+| SPARC        | Linux            |\n+| SPARC        | Solaris          |\n+| SPARC64      | Linux            |\n+| SPARC64      | FreeBSD          |\n+| X86          | FreeBSD          |\n+| X86          | kFreeBSD         |\n+| X86          | Linux            |\n+| X86          | Mac OSX          |\n+| X86          | OpenBSD          |\n+| X86          | Solaris          |\n+| X86          | Windows/Cygwin   |\n+| X86          | Windows/MingW    |\n+| X86-64       | FreeBSD          |\n+| X86-64       | Linux            |\n+| X86-64       | OpenBSD          |\n+|--------------+------------------|\n+\n Please send additional platform test results to\n-libffi-discuss@sourceware.org.\n+libffi-discuss@sourceware.org and feel free to update the wiki page\n+above.\n \n Installing libffi\n =================\n \n-[Note: before actually performing any of these installation steps,\n- you may wish to read the \"Platform Specific Notes\" below.]\n-\n First you must configure the distribution for your particular\n system. Go to the directory you wish to build libffi in and run the\n \"configure\" program found in the root directory of the libffi source\n@@ -106,65 +121,19 @@ This will require that you have DejaGNU installed.\n To install the library and header files, type \"make install\".\n \n \n-Platform Specific Notes\n-=======================\n-\n-\tMIPS - Irix 5.3 & 6.x\n-\t---------------------\n-\n-Irix 6.2 and better supports three different calling conventions: o32,\n-n32 and n64. Currently, libffi only supports both o32 and n32 under\n-Irix 6.x, but only o32 under Irix 5.3. Libffi will automatically be\n-configured for whichever calling convention it was built for.\n-\n-By default, the configure script will try to build libffi with the GNU\n-development tools. To build libffi with the SGI development tools, set\n-the environment variable CC to either \"cc -32\" or \"cc -n32\" before\n-running configure under Irix 6.x (depending on whether you want an o32\n-or n32 library), or just \"cc\" for Irix 5.3.\n-\n-With the n32 calling convention, when returning structures smaller\n-than 16 bytes, be sure to provide an RVALUE that is 8 byte aligned.\n-Here's one way of forcing this:\n-\n-\tdouble struct_storage[2];\n-\tmy_small_struct *s = (my_small_struct *) struct_storage;  \n-\t/* Use s for RVALUE */\n-\n-If you don't do this you are liable to get spurious bus errors. \n-\n-\"long long\" values are not supported yet.\n-\n-You must use GNU Make to build libffi on SGI platforms.\n-\n-\n-\tPowerPC System V ABI\n-\t--------------------\n-\n-There are two `System V ABI's which libffi implements for PowerPC.\n-They differ only in how small structures are returned from functions.\n-\n-In the FFI_SYSV version, structures that are 8 bytes or smaller are\n-returned in registers.  This is what GCC does when it is configured\n-for solaris, and is what the System V ABI I have (dated September\n-1995) says.\n-\n-In the FFI_GCC_SYSV version, all structures are returned the same way:\n-by passing a pointer as the first argument to the function.  This is\n-what GCC does when it is configured for linux or a generic sysv\n-target.\n+History\n+=======\n \n-EGCS 1.0.1 (and probably other versions of EGCS/GCC) also has a\n-inconsistency with the SysV ABI: When a procedure is called with many\n-floating-point arguments, some of them get put on the stack.  They are\n-all supposed to be stored in double-precision format, even if they are\n-only single-precision, but EGCS stores single-precision arguments as\n-single-precision anyway.  This causes one test to fail (the `many\n-arguments' test).\n+See the ChangeLog files for details.\n \n+3.0.9 Dec-31-09\n+        Add AVR32 and win64 ports.  Add ARM softfp support.\n+\tMany fixes for AIX, Solaris, HP-UX, *BSD.\n+\tSeveral PowerPC and x86-64 bug fixes.\n+\tBuild DLL for windows.\n \n-History\n-=======\n+3.0.8 Dec-19-08\n+        Add *BSD, BeOS, and PA-Linux support.\n \n 3.0.7 Nov-11-08\n         Fix for ppc FreeBSD."}]}