{"sha": "636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2Y2Y4YjFmOTNmNmUyZmU2NmU5YjI1ZWJlOTU1NWVkOTNkNTM4ZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "r.sandiford@uk.ibm.com", "date": "2010-01-16T12:14:09Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2010-01-16T12:14:09Z"}, "message": "configure.ac (HAVE_AS_REF): New C macro.\n\ngcc/\n\t* configure.ac (HAVE_AS_REF): New C macro.\n\t* configure: Regenerate.\n\t* config.in: Likewise.\n\t* collect2.c (main): Only postpone SCAN_DWEH to the second pass\n\tif HAVE_AS_REF.\n\t* config/rs6000/aix.h (ASM_OUTPUT_DWARF_TABLE_REF): Only define\n\tif HAVE_AS_REF.\n\nFrom-SVN: r155961", "tree": {"sha": "f346fc01f4a2485fda22909adcf915a88470d975", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f346fc01f4a2485fda22909adcf915a88470d975"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/comments", "author": null, "committer": null, "parents": [{"sha": "7647c8412acec7c838ad4e5a813e331e099451d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7647c8412acec7c838ad4e5a813e331e099451d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7647c8412acec7c838ad4e5a813e331e099451d7"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "7d3889ec7c28e096b5d63a197c3d37a899e02ac5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "patch": "@@ -1,3 +1,13 @@\n+2010-01-16  Richard Sandiford  <r.sandiford@uk.ibm.com>\n+\n+\t* configure.ac (HAVE_AS_REF): New C macro.\n+\t* configure: Regenerate.\n+\t* config.in: Likewise.\n+\t* collect2.c (main): Only postpone SCAN_DWEH to the second pass\n+\tif HAVE_AS_REF.\n+\t* config/rs6000/aix.h (ASM_OUTPUT_DWARF_TABLE_REF): Only define\n+\tif HAVE_AS_REF.\n+\n 2010-01-16  Joern Rennecke  <amylaar@spamcop.net>\n \n \t* doc/tm.texi (TARGET_USE_BLOCKS_FOR_CONSTANT_P): Fix argument types."}, {"sha": "914015f06f9f5a8e8ab043ec302e113331ae2e62", "filename": "gcc/collect2.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "patch": "@@ -1677,8 +1677,11 @@ main (int argc, char **argv)\n        control whether we need a first pass link later on or not, and what\n        will remain to be scanned there.  */\n \n-    scanfilter this_filter\n-      = shared_obj ? ld1_filter : (ld1_filter & ~SCAN_DWEH);\n+    scanfilter this_filter = ld1_filter;\n+#if HAVE_AS_REF\n+    if (!shared_obj)\n+      this_filter &= ~SCAN_DWEH;\n+#endif\n \n     while (export_object_lst < object)\n       scan_prog_file (*export_object_lst++, PASS_OBJ, this_filter);"}, {"sha": "a3744f99dcb51ee0ec20af878fa104c97604ca55", "filename": "gcc/config.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "patch": "@@ -393,6 +393,12 @@\n #endif\n \n \n+/* Define if your assembler supports .ref */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_REF\n+#endif\n+\n+\n /* Define if your assembler supports .register. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_REGISTER_PSEUDO_OP"}, {"sha": "380b0b8b532b92c5ef710ad18b06ac41425e861b", "filename": "gcc/config/rs6000/aix.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fconfig%2Frs6000%2Faix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fconfig%2Frs6000%2Faix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faix.h?ref=636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "patch": "@@ -43,11 +43,13 @@\n    collect has a chance to see them, so scan the object files directly.  */\n #define COLLECT_EXPORT_LIST\n \n+#if HAVE_AS_REF\n /* Issue assembly directives that create a reference to the given DWARF table\n    identifier label from the current function section.  This is defined to\n    ensure we drag frame frame tables associated with needed function bodies in\n    a link with garbage collection activated.  */\n #define ASM_OUTPUT_DWARF_TABLE_REF rs6000_aix_asm_output_dwarf_table_ref\n+#endif\n \n /* Handle #pragma weak and #pragma pack.  */\n #define HANDLE_SYSV_PRAGMA 1"}, {"sha": "d6c8dc481fd654852551f7494eeeeff78bb7d3c3", "filename": "gcc/configure", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "patch": "@@ -23630,6 +23630,50 @@ if test $gcc_cv_as_powerpc_tls_markers = yes; then\n $as_echo \"#define HAVE_AS_TLS_MARKERS 1\" >>confdefs.h\n \n fi\n+\n+    case $target in\n+      *-*-aix*)\n+\t{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for .ref support\" >&5\n+$as_echo_n \"checking assembler for .ref support... \" >&6; }\n+if test \"${gcc_cv_as_aix_ref+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_aix_ref=no\n+    if test $in_tree_gas = yes; then\n+    if test $gcc_cv_gas_vers -ge `expr \\( \\( 2.21.0 \\* 1000 \\) + gcc_cv_as_aix_ref=yes \\) \\* 1000 + `\n+  then :\n+fi\n+  elif test x$gcc_cv_as != x; then\n+    echo '\t.csect stuff[rw]\n+\t     stuff:\n+\t\t.long 1\n+\t\t.extern sym\n+\t\t.ref sym\n+\t  ' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_aix_ref=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_aix_ref\" >&5\n+$as_echo \"$gcc_cv_as_aix_ref\" >&6; }\n+if test $gcc_cv_as_aix_ref = yes; then\n+\n+$as_echo \"#define HAVE_AS_REF 1\" >>confdefs.h\n+\n+fi\n+\t;;\n+    esac\n     ;;\n \n   mips*-*-*)"}, {"sha": "6247d32ec0264d72e8621b13fb05d41ec38ec3d9", "filename": "gcc/configure.ac", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=636cf8b1f93f6e2fe66e9b25ebe9555ed93d538e", "patch": "@@ -3326,6 +3326,21 @@ LCF0:\n       [ bl __tls_get_addr(x@tlsgd)],,\n       [AC_DEFINE(HAVE_AS_TLS_MARKERS, 1,\n \t  [Define if your assembler supports arg info for __tls_get_addr.])])\n+\n+    case $target in\n+      *-*-aix*)\n+\tgcc_GAS_CHECK_FEATURE([.ref support],\n+\t  gcc_cv_as_aix_ref, [2.21.0],,\n+\t  [\t.csect stuff[[rw]]\n+\t     stuff:\n+\t\t.long 1\n+\t\t.extern sym\n+\t\t.ref sym\n+\t  ],,\n+\t  [AC_DEFINE(HAVE_AS_REF, 1,\n+\t    [Define if your assembler supports .ref])])\n+\t;;\n+    esac\n     ;;\n \n   mips*-*-*)"}]}