{"sha": "3a96c7ccd07206028739c296277f368886e4a9cb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E5NmM3Y2NkMDcyMDYwMjg3MzljMjk2Mjc3ZjM2ODg4NmU0YTljYg==", "commit": {"author": {"name": "David Wohlferd", "email": "dw@LimeGreenSocks.com", "date": "2014-06-29T21:21:59Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2014-06-29T21:21:59Z"}, "message": "extend.texi (Function Attributes): Update 'naked' attribute documentation.\n\n\t* doc/extend.texi (Function Attributes): Update 'naked' attribute\n\tdocumentation.\n\nFrom-SVN: r212128", "tree": {"sha": "427e49e9084d798c0abdf35b738554be43c9d104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/427e49e9084d798c0abdf35b738554be43c9d104"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a96c7ccd07206028739c296277f368886e4a9cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a96c7ccd07206028739c296277f368886e4a9cb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a96c7ccd07206028739c296277f368886e4a9cb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a96c7ccd07206028739c296277f368886e4a9cb/comments", "author": null, "committer": null, "parents": [{"sha": "dabb1a207e85853719eb251326b3d50026bd2b8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dabb1a207e85853719eb251326b3d50026bd2b8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dabb1a207e85853719eb251326b3d50026bd2b8d"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "a57eed524655577ca6d8a20b8d674b305383b51f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a96c7ccd07206028739c296277f368886e4a9cb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a96c7ccd07206028739c296277f368886e4a9cb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a96c7ccd07206028739c296277f368886e4a9cb", "patch": "@@ -1,3 +1,8 @@\n+2014-06-29  David Wohlferd <dw@LimeGreenSocks.com>\n+\n+\t* doc/extend.texi (Function Attributes): Update 'naked' attribute\n+\tdocumentation.\n+\n 2014-06-29  Tobias Grosser <tobias@grosser.es>\n \n \tPR bootstrap/61650"}, {"sha": "cdfcce77163ebd5cac0a615068958a89522b540b", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a96c7ccd07206028739c296277f368886e4a9cb/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a96c7ccd07206028739c296277f368886e4a9cb/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=3a96c7ccd07206028739c296277f368886e4a9cb", "patch": "@@ -3358,16 +3358,15 @@ allowed value is 1000000.\n \n @item naked\n @cindex function without a prologue/epilogue code\n-Use this attribute on the ARM, AVR, MCORE, MSP430, NDS32, RL78, RX and SPU\n-ports to indicate that the specified function does not need prologue/epilogue\n-sequences generated by the compiler.\n-It is up to the programmer to provide these sequences. The\n-only statements that can be safely included in naked functions are\n-@code{asm} statements that do not have operands.  All other statements,\n-including declarations of local variables, @code{if} statements, and so\n-forth, should be avoided.  Naked functions should be used to implement the\n-body of an assembly function, while allowing the compiler to construct\n-the requisite function declaration for the assembler.\n+This attribute is available on the ARM, AVR, MCORE, MSP430, NDS32,\n+RL78, RX and SPU ports.  It allows the compiler to construct the\n+requisite function declaration, while allowing the body of the\n+function to be assembly code. The specified function will not have\n+prologue/epilogue sequences generated by the compiler. Only Basic\n+@code{asm} statements can safely be included in naked functions\n+(@pxref{Basic Asm}). While using Extended @code{asm} or a mixture of\n+Basic @code{asm} and ``C'' code may appear to work, they cannot be\n+depended upon to work reliably and are not supported.\n \n @item near\n @cindex functions that do not handle memory bank switching on 68HC11/68HC12\n@@ -6304,6 +6303,8 @@ Using Extended @code{asm} will typically produce smaller, safer, and more\n efficient code, and in most cases it is a better solution. When writing \n inline assembly language outside of C functions, however, you must use Basic \n @code{asm}. Extended @code{asm} statements have to be inside a C function.\n+Functions declared with the @code{naked} attribute also require Basic \n+@code{asm} (@pxref{Function Attributes}).\n \n Under certain circumstances, GCC may duplicate (or remove duplicates of) your \n assembly code when optimizing. This can lead to unexpected duplicate \n@@ -6423,6 +6424,8 @@ programs.\n \n Note that Extended @code{asm} statements must be inside a function. Only \n Basic @code{asm} may be outside functions (@pxref{Basic Asm}).\n+Functions declared with the @code{naked} attribute also require Basic \n+@code{asm} (@pxref{Function Attributes}).\n \n While the uses of @code{asm} are many and varied, it may help to think of an \n @code{asm} statement as a series of low-level instructions that convert input "}]}