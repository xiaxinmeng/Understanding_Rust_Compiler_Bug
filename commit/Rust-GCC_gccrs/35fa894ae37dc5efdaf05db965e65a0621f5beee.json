{"sha": "35fa894ae37dc5efdaf05db965e65a0621f5beee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmYTg5NGFlMzdkYzVlZmRhZjA1ZGI5NjVlNjVhMDYyMWY1YmVlZQ==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2014-06-10T09:45:00Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2014-06-10T09:45:00Z"}, "message": "[PR lto/61334] Declare prototype for strnlen, if needed.\n\n\tinclude/\n\t* libiberty.h [defined (HAVE_DECL_STRNLEN) &&\n\t!HAVE_DECL_STRNLEN] (strnlen): New prototype.\n\tgcc/\n\t* configure.ac: Use gcc_AC_CHECK_DECLS to check for strnlen\n\tprototype.\n\t* config.in: Regenerate.\n\t* configure: Likewise.\n\nFrom-SVN: r211401", "tree": {"sha": "47693e80839cdf20848a33e1f839ec66894b68fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47693e80839cdf20848a33e1f839ec66894b68fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35fa894ae37dc5efdaf05db965e65a0621f5beee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fa894ae37dc5efdaf05db965e65a0621f5beee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35fa894ae37dc5efdaf05db965e65a0621f5beee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35fa894ae37dc5efdaf05db965e65a0621f5beee/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1685ecf3bf96cba4840ea4ef7b0f87b4f92b4898", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1685ecf3bf96cba4840ea4ef7b0f87b4f92b4898", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1685ecf3bf96cba4840ea4ef7b0f87b4f92b4898"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "5d55985ce1485206c3a0c2fbac0172be21f8be47", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fa894ae37dc5efdaf05db965e65a0621f5beee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fa894ae37dc5efdaf05db965e65a0621f5beee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35fa894ae37dc5efdaf05db965e65a0621f5beee", "patch": "@@ -1,3 +1,11 @@\n+2014-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR lto/61334\n+\t* configure.ac: Use gcc_AC_CHECK_DECLS to check for strnlen\n+\tprototype.\n+\t* config.in: Regenerate.\n+\t* configure: Likewise.\n+\n 2014-06-10  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-reference.c (is_proper_for_analysis): Exclude addressable and public"}, {"sha": "0897bd4045896a31f6005dd6bdcbd76a7c2a058d", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fa894ae37dc5efdaf05db965e65a0621f5beee/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fa894ae37dc5efdaf05db965e65a0621f5beee/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=35fa894ae37dc5efdaf05db965e65a0621f5beee", "patch": "@@ -888,6 +888,13 @@\n #endif\n \n \n+/* Define to 1 if we found a declaration for 'strnlen', otherwise define to 0.\n+   */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_DECL_STRNLEN\n+#endif\n+\n+\n /* Define to 1 if we found a declaration for 'strsignal', otherwise define to\n    0. */\n #ifndef USED_FOR_TARGET"}, {"sha": "9ece2437656a7126c53172cbcbc43d6a15472297", "filename": "gcc/configure", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fa894ae37dc5efdaf05db965e65a0621f5beee/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fa894ae37dc5efdaf05db965e65a0621f5beee/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=35fa894ae37dc5efdaf05db965e65a0621f5beee", "patch": "@@ -10525,7 +10525,7 @@ CFLAGS=\"$CFLAGS -I${srcdir} -I${srcdir}/../include $GMPINC\"\n saved_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS -I${srcdir} -I${srcdir}/../include $GMPINC\"\n for ac_func in getenv atol asprintf sbrk abort atof getcwd getwd \\\n-\tstrsignal strstr stpcpy strverscmp \\\n+\tstpcpy strnlen strsignal strstr strverscmp \\\n \terrno snprintf vsnprintf vasprintf malloc realloc calloc \\\n \tfree basename getopt clock getpagesize ffs clearerr_unlocked feof_unlocked   ferror_unlocked fflush_unlocked fgetc_unlocked fgets_unlocked   fileno_unlocked fprintf_unlocked fputc_unlocked fputs_unlocked   fread_unlocked fwrite_unlocked getchar_unlocked getc_unlocked   putchar_unlocked putc_unlocked\n do"}, {"sha": "a1cf9010474432bd20f48c83c70c42af0b37b1c1", "filename": "gcc/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fa894ae37dc5efdaf05db965e65a0621f5beee/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fa894ae37dc5efdaf05db965e65a0621f5beee/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=35fa894ae37dc5efdaf05db965e65a0621f5beee", "patch": "@@ -1170,7 +1170,7 @@ CFLAGS=\"$CFLAGS -I${srcdir} -I${srcdir}/../include $GMPINC\"\n saved_CXXFLAGS=\"$CXXFLAGS\"\n CXXFLAGS=\"$CXXFLAGS -I${srcdir} -I${srcdir}/../include $GMPINC\"\n gcc_AC_CHECK_DECLS(getenv atol asprintf sbrk abort atof getcwd getwd \\\n-\tstrsignal strstr stpcpy strverscmp \\\n+\tstpcpy strnlen strsignal strstr strverscmp \\\n \terrno snprintf vsnprintf vasprintf malloc realloc calloc \\\n \tfree basename getopt clock getpagesize ffs gcc_UNLOCKED_FUNCS, , ,[\n #include \"ansidecl.h\""}, {"sha": "1cda0dc02b11da86e90eea7f2edf9cd54a9fa1a6", "filename": "include/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fa894ae37dc5efdaf05db965e65a0621f5beee/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fa894ae37dc5efdaf05db965e65a0621f5beee/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=35fa894ae37dc5efdaf05db965e65a0621f5beee", "patch": "@@ -1,3 +1,9 @@\n+2014-06-10  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\tPR lto/61334\n+\t* libiberty.h [defined (HAVE_DECL_STRNLEN) &&\n+\t!HAVE_DECL_STRNLEN] (strnlen): New prototype.\n+\n 2014-05-21  John Marino  <gnugcc@marino.st>\n \n \t* liberty.h: Use basename function on DragonFly."}, {"sha": "56b8b43cb887a845141d99e218f8626a426d3bdc", "filename": "include/libiberty.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35fa894ae37dc5efdaf05db965e65a0621f5beee/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35fa894ae37dc5efdaf05db965e65a0621f5beee/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=35fa894ae37dc5efdaf05db965e65a0621f5beee", "patch": "@@ -636,6 +636,10 @@ extern int snprintf (char *, size_t, const char *, ...) ATTRIBUTE_PRINTF_3;\n extern int vsnprintf (char *, size_t, const char *, va_list) ATTRIBUTE_PRINTF(3,0);\n #endif\n \n+#if defined (HAVE_DECL_STRNLEN) && !HAVE_DECL_STRNLEN\n+extern size_t strnlen (const char *, size_t);\n+#endif\n+\n #if defined(HAVE_DECL_STRVERSCMP) && !HAVE_DECL_STRVERSCMP\n /* Compare version strings.  */\n extern int strverscmp (const char *, const char *);"}]}