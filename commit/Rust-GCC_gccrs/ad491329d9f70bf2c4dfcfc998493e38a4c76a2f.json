{"sha": "ad491329d9f70bf2c4dfcfc998493e38a4c76a2f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ0OTEzMjlkOWY3MGJmMmM0ZGZjZmM5OTg0OTNlMzhhNGM3NmEyZg==", "commit": {"author": {"name": "Sriraman Tallam", "email": "tmsriram@google.com", "date": "2012-04-25T02:04:22Z"}, "committer": {"name": "Sriraman Tallam", "email": "tmsriram@gcc.gnu.org", "date": "2012-04-25T02:04:22Z"}, "message": "i386-cpuinfo.c: Set __cpu_vendor always.\n\n2012-04-24  Sriraman Tallam  <tmsriram@google.com>\n\n\t* libgcc/config/i386/i386-cpuinfo.c: Set __cpu_vendor always.\n\nFrom-SVN: r186795", "tree": {"sha": "c3e804e4421074166c7d37df8d8e70e4d8fc161d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3e804e4421074166c7d37df8d8e70e4d8fc161d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad491329d9f70bf2c4dfcfc998493e38a4c76a2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad491329d9f70bf2c4dfcfc998493e38a4c76a2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad491329d9f70bf2c4dfcfc998493e38a4c76a2f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad491329d9f70bf2c4dfcfc998493e38a4c76a2f/comments", "author": {"login": "tmsri", "id": 38991943, "node_id": "MDQ6VXNlcjM4OTkxOTQz", "avatar_url": "https://avatars.githubusercontent.com/u/38991943?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmsri", "html_url": "https://github.com/tmsri", "followers_url": "https://api.github.com/users/tmsri/followers", "following_url": "https://api.github.com/users/tmsri/following{/other_user}", "gists_url": "https://api.github.com/users/tmsri/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmsri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmsri/subscriptions", "organizations_url": "https://api.github.com/users/tmsri/orgs", "repos_url": "https://api.github.com/users/tmsri/repos", "events_url": "https://api.github.com/users/tmsri/events{/privacy}", "received_events_url": "https://api.github.com/users/tmsri/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b34ddb8e0acc3bb6c103dae6ee1d1d1a7756229", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b34ddb8e0acc3bb6c103dae6ee1d1d1a7756229", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b34ddb8e0acc3bb6c103dae6ee1d1d1a7756229"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "638994aa3bcbbe1a6cf1d4816b011deb980cc753", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad491329d9f70bf2c4dfcfc998493e38a4c76a2f/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad491329d9f70bf2c4dfcfc998493e38a4c76a2f/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ad491329d9f70bf2c4dfcfc998493e38a4c76a2f", "patch": "@@ -1,3 +1,7 @@\n+2012-04-24  Sriraman Tallam  <tmsriram@google.com>\n+\n+\t* libgcc/config/i386/i386-cpuinfo.c: Set __cpu_vendor always.\n+\n 2012-04-24  Sriraman Tallam  <tmsriram@google.com>\n \n \t* libgcc/config/i386/i386-cpuinfo.c: New file."}, {"sha": "dccf1d58f27d6b2e01b240659640b56219b899df", "filename": "libgcc/config/i386/i386-cpuinfo.c", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad491329d9f70bf2c4dfcfc998493e38a4c76a2f/libgcc%2Fconfig%2Fi386%2Fi386-cpuinfo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad491329d9f70bf2c4dfcfc998493e38a4c76a2f/libgcc%2Fconfig%2Fi386%2Fi386-cpuinfo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fi386-cpuinfo.c?ref=ad491329d9f70bf2c4dfcfc998493e38a4c76a2f", "patch": "@@ -256,16 +256,25 @@ __cpu_indicator_init (void)\n \n   /* Assume cpuid insn present. Run in level 0 to get vendor id. */\n   if (!__get_cpuid_output (0, &eax, &ebx, &ecx, &edx))\n-    return -1;\n+    {\n+      __cpu_model.__cpu_vendor = VENDOR_OTHER;\n+      return -1;\n+    }\n \n   vendor = ebx;\n   max_level = eax;\n \n   if (max_level < 1)\n-    return -1;\n+    {\n+      __cpu_model.__cpu_vendor = VENDOR_OTHER;\n+      return -1;\n+    }\n \n   if (!__get_cpuid_output (1, &eax, &ebx, &ecx, &edx))\n-    return -1;\n+    {\n+      __cpu_model.__cpu_vendor = VENDOR_OTHER;\n+      return -1;\n+    }\n \n   model = (eax >> 4) & 0x0f;\n   family = (eax >> 8) & 0x0f;"}]}