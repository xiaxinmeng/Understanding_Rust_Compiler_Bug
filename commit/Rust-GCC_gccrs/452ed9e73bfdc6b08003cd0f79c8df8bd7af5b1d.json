{"sha": "452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUyZWQ5ZTczYmZkYzZiMDgwMDNjZDBmNzljOGRmOGJkN2FmNWIxZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-07-25T14:57:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-07-25T14:57:06Z"}, "message": "re PR c++/54086 (GCC should allow constexpr and const together)\n\n\tPR c++/54086\n\t* decl.c (grokdeclarator): Allow const and constexpr together.\n\nFrom-SVN: r189852", "tree": {"sha": "91d7df58abad71242d425eb5c528ecae150c113f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91d7df58abad71242d425eb5c528ecae150c113f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9155a6ddc40af0eed7079eac318e6dd864dcdbc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9155a6ddc40af0eed7079eac318e6dd864dcdbc9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9155a6ddc40af0eed7079eac318e6dd864dcdbc9"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "409e64d242c87ed34256dc2152a42800f25f308c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d", "patch": "@@ -1,5 +1,8 @@\n 2012-07-25  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54086\n+\t* decl.c (grokdeclarator): Allow const and constexpr together.\n+\n \tPR c++/54020\n \t* semantics.c (potential_constant_expression_1) [COND_EXPR]: Call\n \tmaybe_constant_value."}, {"sha": "047b2fea8b495caeaa766d10ecd6ca32b74d5cdb", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d", "patch": "@@ -9528,8 +9528,6 @@ grokdeclarator (const cp_declarator *declarator,\n      the object as `const'.  */\n   if (constexpr_p && innermost_code != cdk_function)\n     {\n-      if (type_quals & TYPE_QUAL_CONST)\n-        error (\"both %<const%> and %<constexpr%> cannot be used here\");\n       if (type_quals & TYPE_QUAL_VOLATILE)\n         error (\"both %<volatile%> and %<constexpr%> cannot be used here\");\n       if (TREE_CODE (type) != REFERENCE_TYPE)"}, {"sha": "6ee72256e24e5fad910a48ad06cd14894ea1c563", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-const1.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-const1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-const1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-const1.C?ref=452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/54086\n+// { dg-do compile { target c++11 } }\n+\n+static constexpr const char Data[] = {\n+  'D', 'A', 'T', 'A',\n+};\n+static constexpr const char *data_func() { return Data; }"}, {"sha": "6c9d46644182b3f54e824b28c0924bedd9dc5f0b", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-object1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C?ref=452ed9e73bfdc6b08003cd0f79c8df8bd7af5b1d", "patch": "@@ -18,8 +18,7 @@ extern constexpr int i2; // { dg-error \"definition\" }\n // error: missing initializer\n constexpr A1 a2; // { dg-error \"uninitialized const\" }\n \n-// error: duplicate cv\n-const constexpr A1 a3 = A1(); // { dg-error \"both .const. and .constexpr. cannot\" }\n+const constexpr A1 a3 = A1();\n \n volatile constexpr A1 a4 = A1(); // { dg-error \"both .volatile. and .constexpr. cannot\" }\n "}]}