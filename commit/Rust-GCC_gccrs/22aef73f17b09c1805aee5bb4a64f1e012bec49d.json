{"sha": "22aef73f17b09c1805aee5bb4a64f1e012bec49d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJhZWY3M2YxN2IwOWMxODA1YWVlNWJiNGE2NGYxZTAxMmJlYzQ5ZA==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-05-06T22:56:52Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-05-06T22:56:52Z"}, "message": "re PR fortran/31764 (NEW_LINE with array argument)\n\n\tPR fortran/31764\n\n\t* simplify.c (gfc_simplify_new_line): NEW_LINE can be simplified\n\teven for non constant arguments.\n\n\t* gfortran.dg/new_line.f90: Add new checks.\n\nFrom-SVN: r124482", "tree": {"sha": "2927bdf1c5e6166302a007c1ab8e0e1105334d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2927bdf1c5e6166302a007c1ab8e0e1105334d9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22aef73f17b09c1805aee5bb4a64f1e012bec49d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22aef73f17b09c1805aee5bb4a64f1e012bec49d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22aef73f17b09c1805aee5bb4a64f1e012bec49d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22aef73f17b09c1805aee5bb4a64f1e012bec49d/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28fe1c4032687045633a19b9a7746c4bc9f5474f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28fe1c4032687045633a19b9a7746c4bc9f5474f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28fe1c4032687045633a19b9a7746c4bc9f5474f"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "04220ab80a23c720e53758f4a141110690552c9f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22aef73f17b09c1805aee5bb4a64f1e012bec49d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22aef73f17b09c1805aee5bb4a64f1e012bec49d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=22aef73f17b09c1805aee5bb4a64f1e012bec49d", "patch": "@@ -1,3 +1,9 @@\n+2007-05-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/31764\n+\t* simplify.c (gfc_simplify_new_line): NEW_LINE can be simplified\n+\teven for non constant arguments.\n+\n 2007-05-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \t    Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n "}, {"sha": "ed62ee34da45fef4e2805d18f285de73e65a0208", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22aef73f17b09c1805aee5bb4a64f1e012bec49d/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22aef73f17b09c1805aee5bb4a64f1e012bec49d/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=22aef73f17b09c1805aee5bb4a64f1e012bec49d", "patch": "@@ -2641,13 +2641,8 @@ gfc_simplify_new_line (gfc_expr *e)\n {\n   gfc_expr *result;\n \n-  if (e->expr_type != EXPR_CONSTANT)\n-    return NULL;\n-\n   result = gfc_constant_result (BT_CHARACTER, e->ts.kind, &e->where);\n-\n   result->value.character.string = gfc_getmem (2);\n-\n   result->value.character.length = 1;\n   result->value.character.string[0] = '\\n';\n   result->value.character.string[1] = '\\0';     /* For debugger */"}, {"sha": "da85bb5cf46b08b909a6c17a1019436d737a76b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22aef73f17b09c1805aee5bb4a64f1e012bec49d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22aef73f17b09c1805aee5bb4a64f1e012bec49d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22aef73f17b09c1805aee5bb4a64f1e012bec49d", "patch": "@@ -1,3 +1,8 @@\n+2007-05-07  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/31764\n+\t* gfortran.dg/new_line.f90: Add new checks.\n+\n 2007-05-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR fortran/31201"}, {"sha": "aacabc69f6e16507f2ff9aaafc5418631b1fb1a1", "filename": "gcc/testsuite/gfortran.dg/new_line.f90", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22aef73f17b09c1805aee5bb4a64f1e012bec49d/gcc%2Ftestsuite%2Fgfortran.dg%2Fnew_line.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22aef73f17b09c1805aee5bb4a64f1e012bec49d/gcc%2Ftestsuite%2Fgfortran.dg%2Fnew_line.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnew_line.f90?ref=22aef73f17b09c1805aee5bb4a64f1e012bec49d", "patch": "@@ -2,6 +2,19 @@\n ! Checks Fortran 2003's new_line intrinsic function\n ! PR fortran/28585\n program new_line_check\n-    implicit none\n-    if(achar(10) /= new_line('a')) call abort()\n+  implicit none\n+  character(len=10) :: a1\n+  character(len=10) :: a2(2)\n+  character(len=10), parameter :: a3 = \"1234567890\"\n+  character(len=10), parameter :: a4(2) = \"1234567890\"\n+  character(len=10), parameter :: a5(2) = repeat(\"1234567890\",2)\n+\n+  if(achar(10) /= new_line('a')) call abort\n+\n+  if (iachar(new_line(a1)) /= 10) call abort\n+  if (iachar(new_line(a2)) /= 10) call abort\n+  if (iachar(new_line(a3)) /= 10) call abort\n+  if (iachar(new_line(a4)) /= 10) call abort\n+  if (iachar(new_line(a5)) /= 10) call abort\n+\n end program new_line_check"}]}