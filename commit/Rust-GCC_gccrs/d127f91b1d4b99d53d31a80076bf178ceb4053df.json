{"sha": "d127f91b1d4b99d53d31a80076bf178ceb4053df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDEyN2Y5MWIxZDRiOTlkNTNkMzFhODAwNzZiZjE3OGNlYjQwNTNkZg==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2005-03-29T16:13:49Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-03-29T16:13:49Z"}, "message": "a-tags.ads, a-tags.adb (Get_TSD): Subprogram removed.\n\n2005-03-29  Javier Miranda  <miranda@adacore.com>\n\n\t* a-tags.ads, a-tags.adb (Get_TSD): Subprogram removed.\n\t(Inherit_DT): The first formal has been redefined as a Tag.\n\tThis allows us the removal of the subprogram Get_TSD.\n\t(TSD): Replace the call to Get_TSD by the actual code.\n\n\t* exp_disp.ads, exp_disp.adb: Remove support to call Get_TSD.\n\t(Make_DT): Upgrade the call to Inherit_TSD according to the\n\tnew interface: the first formal is now a Tag.\n\n\t* i-cpp.ads, i-cpp.adb (CPP_Inherit_DT): The first formal has been\n\tredefined as a Tag.\n\tThis change allows us to remove the subprogram Get_TSD.\n\t(CPP_Get_TSD): Subprogram removed.\n\t(TSD): Replace the call to CPP_Get_TSD by the actual code.\n\n\t* rtsfind.ads: Remove support to call the run-time\n\tsubprogram Get_TSD\n\nFrom-SVN: r97168", "tree": {"sha": "e7c14b871e640a120c4aa0c9906cbbc68c1ad47d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7c14b871e640a120c4aa0c9906cbbc68c1ad47d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d127f91b1d4b99d53d31a80076bf178ceb4053df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d127f91b1d4b99d53d31a80076bf178ceb4053df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d127f91b1d4b99d53d31a80076bf178ceb4053df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d127f91b1d4b99d53d31a80076bf178ceb4053df/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "78dabc95d53fa3a6c41039456eeec9ac9763fea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78dabc95d53fa3a6c41039456eeec9ac9763fea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78dabc95d53fa3a6c41039456eeec9ac9763fea8"}], "stats": {"total": 121, "additions": 37, "deletions": 84}, "files": [{"sha": "df4e58e81f67983d285e547590b11cda24e6aa1d", "filename": "gcc/ada/a-tags.adb", "status": "modified", "additions": 9, "deletions": 19, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.adb?ref=d127f91b1d4b99d53d31a80076bf178ceb4053df", "patch": "@@ -342,18 +342,6 @@ package body Ada.Tags is\n       return TSD (T).Remotely_Callable = True;\n    end Get_Remotely_Callable;\n \n-   -------------\n-   -- Get_TSD --\n-   -------------\n-\n-   function Get_TSD  (T : Tag) return System.Address is\n-      use type System.Storage_Elements.Storage_Offset;\n-      TSD_Ptr : constant Addr_Ptr :=\n-                  To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n-   begin\n-      return TSD_Ptr.all;\n-   end Get_TSD;\n-\n    ----------------\n    -- Inherit_DT --\n    ----------------\n@@ -374,14 +362,13 @@ package body Ada.Tags is\n    -- Inherit_TSD --\n    -----------------\n \n-   procedure Inherit_TSD (Old_TSD : System.Address; New_Tag : Tag) is\n-      Old_TSD_Ptr  : constant Type_Specific_Data_Ptr :=\n-                       To_Type_Specific_Data_Ptr (Old_TSD);\n-      New_TSD_Ptr  : constant Type_Specific_Data_Ptr :=\n-                       TSD (New_Tag);\n+   procedure Inherit_TSD (Old_Tag : Tag; New_Tag : Tag) is\n+      New_TSD_Ptr : constant Type_Specific_Data_Ptr := TSD (New_Tag);\n+      Old_TSD_Ptr : Type_Specific_Data_Ptr;\n \n    begin\n-      if Old_TSD_Ptr /= null then\n+      if Old_Tag /= null then\n+         Old_TSD_Ptr        := TSD (Old_Tag);\n          New_TSD_Ptr.Idepth := Old_TSD_Ptr.Idepth + 1;\n          New_TSD_Ptr.Ancestor_Tags (1 .. New_TSD_Ptr.Idepth) :=\n            Old_TSD_Ptr.Ancestor_Tags (0 .. Old_TSD_Ptr.Idepth);\n@@ -577,8 +564,11 @@ package body Ada.Tags is\n    ---------\n \n    function TSD (T : Tag) return Type_Specific_Data_Ptr is\n+      use type System.Storage_Elements.Storage_Offset;\n+      TSD_Ptr : constant Addr_Ptr :=\n+                  To_Addr_Ptr (To_Address (T) - DT_Typeinfo_Ptr_Size);\n    begin\n-      return To_Type_Specific_Data_Ptr (Get_TSD (T));\n+      return To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n    end TSD;\n \n end Ada.Tags;"}, {"sha": "0d517a0ac07bd2e069401519960649a37cc020b1", "filename": "gcc/ada/a-tags.ads", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fa-tags.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fa-tags.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tags.ads?ref=d127f91b1d4b99d53d31a80076bf178ceb4053df", "patch": "@@ -114,10 +114,6 @@ private\n    function Get_Remotely_Callable (T : Tag) return Boolean;\n    --  Return the value previously set by Set_Remotely_Callable\n \n-   function  Get_TSD (T : Tag) return System.Address;\n-   --  Given a pointer T to a dispatch Table, retreives the address of the\n-   --  record containing the Type Specific Data generated by GNAT\n-\n    procedure Inherit_DT\n     (Old_T   : Tag;\n      New_T   : Tag;\n@@ -126,9 +122,8 @@ private\n    --  of the direct ancestor and the number of primitive ops that are\n    --  inherited (Entry_Count).\n \n-   procedure Inherit_TSD (Old_TSD : System.Address; New_Tag : Tag);\n-   --  Entry point used to initialize the TSD of a type knowing the\n-   --  TSD of the direct ancestor.\n+   procedure Inherit_TSD (Old_Tag : Tag; New_Tag : Tag);\n+   --  Initialize the TSD of a type knowing the tag of the direct ancestor\n \n    function Parent_Size\n      (Obj : System.Address;\n@@ -182,9 +177,8 @@ private\n    --  in E.4 (18).\n \n    function TSD (T : Tag) return Type_Specific_Data_Ptr;\n-   --  This function is conceptually equivalent to Get_TSD, but\n-   --  returning a Type_Specific_Data_Ptr type (rather than an Address)\n-   --  simplifies the implementation of the other subprograms.\n+   --  Given a pointer T to a dispatch Table, retreives the address of the\n+   --  record containing the Type Specific Data generated by GNAT\n \n    DT_Prologue_Size : constant SSE.Storage_Count :=\n                         SSE.Storage_Count\n@@ -237,7 +231,6 @@ private\n    pragma Inline_Always (Get_Prim_Op_Address);\n    pragma Inline_Always (Get_RC_Offset);\n    pragma Inline_Always (Get_Remotely_Callable);\n-   pragma Inline_Always (Get_TSD);\n    pragma Inline_Always (Inherit_DT);\n    pragma Inline_Always (Inherit_TSD);\n    pragma Inline_Always (Register_Tag);"}, {"sha": "8bb0cac38dbb63abe1261a0cd6de60b1ab68a77f", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=d127f91b1d4b99d53d31a80076bf178ceb4053df", "patch": "@@ -58,7 +58,6 @@ package body Exp_Disp is\n        Get_Prim_Op_Address     => RE_Get_Prim_Op_Address,\n        Get_RC_Offset           => RE_Get_RC_Offset,\n        Get_Remotely_Callable   => RE_Get_Remotely_Callable,\n-       Get_TSD                 => RE_Get_TSD,\n        Inherit_DT              => RE_Inherit_DT,\n        Inherit_TSD             => RE_Inherit_TSD,\n        Register_Tag            => RE_Register_Tag,\n@@ -79,7 +78,6 @@ package body Exp_Disp is\n        Get_Prim_Op_Address     => RE_CPP_Get_Prim_Op_Address,\n        Get_RC_Offset           => RE_CPP_Get_RC_Offset,\n        Get_Remotely_Callable   => RE_CPP_Get_Remotely_Callable,\n-       Get_TSD                 => RE_CPP_Get_TSD,\n        Inherit_DT              => RE_CPP_Inherit_DT,\n        Inherit_TSD             => RE_CPP_Inherit_TSD,\n        Register_Tag            => RE_CPP_Register_Tag,\n@@ -100,7 +98,6 @@ package body Exp_Disp is\n        Get_Prim_Op_Address     => False,\n        Get_Remotely_Callable   => False,\n        Get_RC_Offset           => False,\n-       Get_TSD                 => False,\n        Inherit_DT              => True,\n        Inherit_TSD             => True,\n        Register_Tag            => True,\n@@ -121,7 +118,6 @@ package body Exp_Disp is\n        Get_Prim_Op_Address     => 2,\n        Get_RC_Offset           => 1,\n        Get_Remotely_Callable   => 1,\n-       Get_TSD                 => 1,\n        Inherit_DT              => 3,\n        Inherit_TSD             => 2,\n        Register_Tag            => 1,\n@@ -640,8 +636,8 @@ package body Exp_Disp is\n       I_Depth         : Int;\n       Generalized_Tag : Entity_Id;\n       Size_Expr_Node  : Node_Id;\n-      Old_Tag         : Node_Id;\n-      Old_TSD         : Node_Id;\n+      Old_Tag1        : Node_Id;\n+      Old_Tag2        : Node_Id;\n \n    begin\n       if not RTE_Available (RE_Tag) then\n@@ -834,24 +830,20 @@ package body Exp_Disp is\n       if Typ = Etype (Typ)\n         or else Is_CPP_Class (Etype (Typ))\n       then\n-         Old_Tag :=\n+         Old_Tag1 :=\n            Unchecked_Convert_To (Generalized_Tag,\n              Make_Integer_Literal (Loc, 0));\n-\n-         Old_TSD :=\n-           Unchecked_Convert_To (RTE (RE_Address),\n+         Old_Tag2 :=\n+           Unchecked_Convert_To (Generalized_Tag,\n              Make_Integer_Literal (Loc, 0));\n \n       else\n-         Old_Tag :=\n+         Old_Tag1 :=\n+           New_Reference_To\n+             (Node (First_Elmt (Access_Disp_Table (Etype (Typ)))), Loc);\n+         Old_Tag2 :=\n            New_Reference_To\n              (Node (First_Elmt (Access_Disp_Table (Etype (Typ)))), Loc);\n-         Old_TSD :=\n-           Make_DT_Access_Action (Typ,\n-             Action => Get_TSD,\n-             Args   => New_List (\n-               New_Reference_To\n-                 (Node (First_Elmt (Access_Disp_Table (Etype (Typ)))), Loc)));\n       end if;\n \n       --  Generate: Inherit_DT (parent'tag, DT_Ptr, nb_prim of parent);\n@@ -860,18 +852,18 @@ package body Exp_Disp is\n         Make_DT_Access_Action (Typ,\n           Action => Inherit_DT,\n           Args   => New_List (\n-            Node1 => Old_Tag,\n+            Node1 => Old_Tag1,\n             Node2 => New_Reference_To (DT_Ptr, Loc),\n             Node3 => Make_Integer_Literal (Loc,\n                        DT_Entry_Count (First_Tag_Component (Etype (Typ)))))));\n \n-      --  Generate: Inherit_TSD (Get_TSD (parent), DT_Ptr);\n+      --  Generate: Inherit_TSD (parent'tag, DT_Ptr);\n \n       Append_To (Elab_Code,\n         Make_DT_Access_Action (Typ,\n           Action => Inherit_TSD,\n           Args   => New_List (\n-            Node1 => Old_TSD,\n+            Node1 => Old_Tag2,\n             Node2 => New_Reference_To (DT_Ptr, Loc))));\n \n       --  Generate: Exname : constant String := full_qualified_name (typ);"}, {"sha": "d942c3f514b8e5663ef5c3d50c559ccff835cf9c", "filename": "gcc/ada/exp_disp.ads", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fexp_disp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fexp_disp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.ads?ref=d127f91b1d4b99d53d31a80076bf178ceb4053df", "patch": "@@ -38,7 +38,6 @@ package Exp_Disp is\n        Get_Prim_Op_Address,\n        Get_RC_Offset,\n        Get_Remotely_Callable,\n-       Get_TSD,\n        Inherit_DT,\n        Inherit_TSD,\n        Register_Tag,"}, {"sha": "ca872c2544d0d9d0b4f341660c1a50544b051481", "filename": "gcc/ada/i-cpp.adb", "status": "modified", "additions": 9, "deletions": 20, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fi-cpp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fi-cpp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpp.adb?ref=d127f91b1d4b99d53d31a80076bf178ceb4053df", "patch": "@@ -187,18 +187,6 @@ package body Interfaces.CPP is\n       return True;\n    end CPP_Get_Remotely_Callable;\n \n-   -----------------\n-   -- CPP_Get_TSD --\n-   -----------------\n-\n-   function CPP_Get_TSD  (T : Vtable_Ptr) return Address is\n-      use type System.Storage_Elements.Storage_Offset;\n-      TSD_Ptr : constant Addr_Ptr :=\n-                  To_Addr_Ptr (To_Address (T) - CPP_DT_Typeinfo_Ptr_Size);\n-   begin\n-      return TSD_Ptr.all;\n-   end CPP_Get_TSD;\n-\n    --------------------\n    -- CPP_Inherit_DT --\n    --------------------\n@@ -220,17 +208,15 @@ package body Interfaces.CPP is\n    ---------------------\n \n    procedure CPP_Inherit_TSD\n-     (Old_TSD : Address;\n+     (Old_Tag : Vtable_Ptr;\n       New_Tag : Vtable_Ptr)\n    is\n-      Old_TSD_Ptr : constant Type_Specific_Data_Ptr :=\n-                      To_Type_Specific_Data_Ptr (Old_TSD);\n-\n-      New_TSD_Ptr : constant Type_Specific_Data_Ptr :=\n-                      TSD (New_Tag);\n+      New_TSD_Ptr : constant Type_Specific_Data_Ptr := TSD (New_Tag);\n+      Old_TSD_Ptr : Type_Specific_Data_Ptr;\n \n    begin\n-      if Old_TSD_Ptr /= null then\n+      if Old_Tag /= null then\n+         Old_TSD_Ptr        := TSD (Old_Tag);\n          New_TSD_Ptr.Idepth := Old_TSD_Ptr.Idepth + 1;\n          New_TSD_Ptr.Ancestor_Tags (1 .. New_TSD_Ptr.Idepth) :=\n            Old_TSD_Ptr.Ancestor_Tags (0 .. Old_TSD_Ptr.Idepth);\n@@ -391,8 +377,11 @@ package body Interfaces.CPP is\n    ---------\n \n    function TSD (T : Vtable_Ptr) return Type_Specific_Data_Ptr is\n+      use type System.Storage_Elements.Storage_Offset;\n+      TSD_Ptr : constant Addr_Ptr :=\n+                  To_Addr_Ptr (To_Address (T) - CPP_DT_Typeinfo_Ptr_Size);\n    begin\n-      return To_Type_Specific_Data_Ptr (CPP_Get_TSD (T));\n+      return To_Type_Specific_Data_Ptr (TSD_Ptr.all);\n    end TSD;\n \n end Interfaces.CPP;"}, {"sha": "99922cf56eecce4b29255dcaa75123a999e84cf5", "filename": "gcc/ada/i-cpp.ads", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fi-cpp.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Fi-cpp.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cpp.ads?ref=d127f91b1d4b99d53d31a80076bf178ceb4053df", "patch": "@@ -88,10 +88,6 @@ private\n    --  Given a pointer T to a dispatch Table, stores the address of the\n    --  record containing the Type Specific Data generated by GNAT\n \n-   function CPP_Get_TSD (T : Vtable_Ptr) return S.Address;\n-   --  Given a pointer T to a dispatch Table, retreives the address of the\n-   --  record containing the Type Specific Data generated by GNAT\n-\n    CPP_DT_Prologue_Size : constant SSE.Storage_Count :=\n                             SSE.Storage_Count\n                               (2 * (Standard'Address_Size / S.Storage_Unit));\n@@ -126,7 +122,7 @@ private\n    --  inherited (Entry_Count).\n \n    procedure CPP_Inherit_TSD\n-     (Old_TSD : S.Address;\n+     (Old_Tag : Vtable_Ptr;\n       New_Tag : Vtable_Ptr);\n    --  Entry point used to initialize the TSD of a type knowing the\n    --  TSD of the direct ancestor.\n@@ -172,9 +168,8 @@ private\n    --  (used for virtual function calls)\n \n    function TSD (T : Vtable_Ptr) return Type_Specific_Data_Ptr;\n-   --  This function is conceptually equivalent to Get_TSD, but\n-   --  returning a Type_Specific_Data_Ptr type (rather than an Address)\n-   --  simplifies the implementation of the other subprograms.\n+   --  Given a pointer T to a dispatch Table, retreives the address of the\n+   --  record containing the Type Specific Data generated by GNAT\n \n    type Addr_Ptr is access System.Address;\n \n@@ -190,7 +185,6 @@ private\n    pragma Inline (CPP_Set_Prim_Op_Address);\n    pragma Inline (CPP_Get_Prim_Op_Address);\n    pragma Inline (CPP_Set_TSD);\n-   pragma Inline (CPP_Get_TSD);\n    pragma Inline (CPP_Inherit_DT);\n    pragma Inline (CPP_CW_Membership);\n    pragma Inline (CPP_Set_External_Tag);"}, {"sha": "1697b359640eba0eab364bf22ff684cf5674b1da", "filename": "gcc/ada/rtsfind.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Frtsfind.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d127f91b1d4b99d53d31a80076bf178ceb4053df/gcc%2Fada%2Frtsfind.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtsfind.ads?ref=d127f91b1d4b99d53d31a80076bf178ceb4053df", "patch": "@@ -492,7 +492,6 @@ package Rtsfind is\n      RE_Get_Prim_Op_Address,             -- Ada.Tags\n      RE_Get_RC_Offset,                   -- Ada.Tags\n      RE_Get_Remotely_Callable,           -- Ada.Tags\n-     RE_Get_TSD,                         -- Ada.Tags\n      RE_Inherit_DT,                      -- Ada.Tags\n      RE_Inherit_TSD,                     -- Ada.Tags\n      RE_Internal_Tag,                    -- Ada.Tags\n@@ -539,7 +538,6 @@ package Rtsfind is\n      RE_CPP_Get_Prim_Op_Address,         -- Interfaces.CPP\n      RE_CPP_Get_RC_Offset,               -- Interfaces.CPP\n      RE_CPP_Get_Remotely_Callable,       -- Interfaces.CPP\n-     RE_CPP_Get_TSD,                     -- Interfaces.CPP\n      RE_CPP_Inherit_DT,                  -- Interfaces.CPP\n      RE_CPP_Inherit_TSD,                 -- Interfaces.CPP\n      RE_CPP_Register_Tag,                -- Interfaces.CPP\n@@ -1592,7 +1590,6 @@ package Rtsfind is\n      RE_Get_Prim_Op_Address              => Ada_Tags,\n      RE_Get_RC_Offset                    => Ada_Tags,\n      RE_Get_Remotely_Callable            => Ada_Tags,\n-     RE_Get_TSD                          => Ada_Tags,\n      RE_Inherit_DT                       => Ada_Tags,\n      RE_Inherit_TSD                      => Ada_Tags,\n      RE_Internal_Tag                     => Ada_Tags,\n@@ -1637,7 +1634,6 @@ package Rtsfind is\n      RE_CPP_Get_Prim_Op_Address          => Interfaces_CPP,\n      RE_CPP_Get_RC_Offset                => Interfaces_CPP,\n      RE_CPP_Get_Remotely_Callable        => Interfaces_CPP,\n-     RE_CPP_Get_TSD                      => Interfaces_CPP,\n      RE_CPP_Inherit_DT                   => Interfaces_CPP,\n      RE_CPP_Inherit_TSD                  => Interfaces_CPP,\n      RE_CPP_Register_Tag                 => Interfaces_CPP,"}]}