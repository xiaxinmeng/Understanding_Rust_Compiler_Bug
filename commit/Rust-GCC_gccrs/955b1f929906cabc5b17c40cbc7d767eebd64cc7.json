{"sha": "955b1f929906cabc5b17c40cbc7d767eebd64cc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU1YjFmOTI5OTA2Y2FiYzViMTdjNDBjYmM3ZDc2N2VlYmQ2NGNjNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-12T16:36:27Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-05-12T16:37:40Z"}, "message": "i386: Add V2SFmode FMA insn patterns [PR95046]\n\ngcc/ChangeLog:\n\n\tPR target/95046\n\t* config/i386/mmx.md (fmav2sf4): New insn pattern.\n\t(fmsv2sf4): Ditto.\n\t(fnmav2sf4): Ditto.\n\t(fnmsv2sf4): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/95046\n\t* gcc.target/i386/pr95046-3.c: New test.", "tree": {"sha": "15788167bde291349df9870a3079da26dd266a05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/15788167bde291349df9870a3079da26dd266a05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/955b1f929906cabc5b17c40cbc7d767eebd64cc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/955b1f929906cabc5b17c40cbc7d767eebd64cc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/955b1f929906cabc5b17c40cbc7d767eebd64cc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/955b1f929906cabc5b17c40cbc7d767eebd64cc7/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa31a3cdbf1571286671d8d3a83e31676862583e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa31a3cdbf1571286671d8d3a83e31676862583e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa31a3cdbf1571286671d8d3a83e31676862583e"}], "stats": {"total": 125, "additions": 125, "deletions": 0}, "files": [{"sha": "de4cbd42e168a87239eef2ccda9febb9d3691381", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/955b1f929906cabc5b17c40cbc7d767eebd64cc7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/955b1f929906cabc5b17c40cbc7d767eebd64cc7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=955b1f929906cabc5b17c40cbc7d767eebd64cc7", "patch": "@@ -1,3 +1,11 @@\n+2020-05-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95046\n+\t* config/i386/mmx.md (fmav2sf4): New insn pattern.\n+\t(fmsv2sf4): Ditto.\n+\t(fnmav2sf4): Ditto.\n+\t(fnmsv2sf4): Ditto.\n+\n 2020-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* Makefile.in (CET_HOST_FLAGS): New."}, {"sha": "f6f302eb7ff47ebaad8b46c590a06de611af7091", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/955b1f929906cabc5b17c40cbc7d767eebd64cc7/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/955b1f929906cabc5b17c40cbc7d767eebd64cc7/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=955b1f929906cabc5b17c40cbc7d767eebd64cc7", "patch": "@@ -660,6 +660,76 @@\n    (set_attr \"prefix\" \"orig,vex\")\n    (set_attr \"mode\" \"V4SF\")])\n \n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+;;\n+;; Parallel single-precision FMA multiply/accumulate instructions.\n+;;\n+;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n+\n+(define_insn \"fmav2sf4\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=v,v,x\")\n+\t(fma:V2SF\n+\t  (match_operand:V2SF 1 \"register_operand\" \"%0,v,x\")\n+\t  (match_operand:V2SF 2 \"register_operand\" \"v,v,x\")\n+\t  (match_operand:V2SF 3 \"register_operand\" \"v,0,x\")))]\n+  \"(TARGET_FMA || TARGET_FMA4) && TARGET_MMX_WITH_SSE\"\n+  \"@\n+   vfmadd132ps\\t{%2, %3, %0|%0, %3, %2}\n+   vfmadd231ps\\t{%2, %1, %0|%0, %1, %2}\n+   vfmaddps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"fma,fma,fma4\")\n+   (set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"fmsv2sf4\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=v,v,x\")\n+\t(fma:V2SF\n+\t  (match_operand:V2SF   1 \"register_operand\" \"%0,v,x\")\n+\t  (match_operand:V2SF   2 \"register_operand\" \"v,v,x\")\n+\t  (neg:V2SF\n+\t    (match_operand:V2SF 3 \"register_operand\" \"v,0,x\"))))]\n+  \"(TARGET_FMA || TARGET_FMA4) && TARGET_MMX_WITH_SSE\"\n+  \"@\n+   vfmsub132ps\\t{%2, %3, %0|%0, %3, %2}\n+   vfmsub231ps\\t{%2, %1, %0|%0, %1, %2}\n+   vfmsubps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"fma,fma,fma4\")\n+   (set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"fnmav2sf4\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=v,v,x\")\n+\t(fma:V2SF\n+\t  (neg:V2SF\n+\t    (match_operand:V2SF 1 \"register_operand\" \"%0,v,x\"))\n+\t  (match_operand:V2SF   2 \"register_operand\" \"v,v,x\")\n+\t  (match_operand:V2SF   3 \"register_operand\" \"v,0,x\")))]\n+  \"(TARGET_FMA || TARGET_FMA4) && TARGET_MMX_WITH_SSE\"\n+  \"@\n+   vfnmadd132ps\\t{%2, %3, %0|%0, %3, %2}\n+   vfnmadd231ps\\t{%2, %1, %0|%0, %1, %2}\n+   vfnmaddps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"fma,fma,fma4\")\n+   (set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n+(define_insn \"fnmsv2sf4\"\n+  [(set (match_operand:V2SF 0 \"register_operand\" \"=v,v,x\")\n+\t(fma:V2SF\n+\t  (neg:V2SF\n+\t    (match_operand:V2SF 1 \"register_operand\" \"%0,v,x\"))\n+\t  (match_operand:V2SF   2 \"register_operand\" \"v,v,x\")\n+\t  (neg:V2SF\n+\t    (match_operand:V2SF 3 \"register_operand\" \"v,0,x\"))))]\n+  \"(TARGET_FMA || TARGET_FMA4) && TARGET_MMX_WITH_SSE\"\n+  \"@\n+   vfnmsub132ps\\t{%2, %3, %0|%0, %3, %2}\n+   vfnmsub231ps\\t{%2, %1, %0|%0, %1, %2}\n+   vfnmsubps\\t{%3, %2, %1, %0|%0, %1, %2, %3}\"\n+  [(set_attr \"isa\" \"fma,fma,fma4\")\n+   (set_attr \"type\" \"ssemuladd\")\n+   (set_attr \"mode\" \"V4SF\")])\n+\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n ;;\n ;; Parallel single-precision floating point conversion operations"}, {"sha": "99ebf82025c4798d3977afcb8f4a444bb7819e2e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/955b1f929906cabc5b17c40cbc7d767eebd64cc7/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/955b1f929906cabc5b17c40cbc7d767eebd64cc7/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=955b1f929906cabc5b17c40cbc7d767eebd64cc7", "patch": "@@ -3,6 +3,11 @@\n \tPR c++/78752\n \t* g++.dg/cpp2a/concepts-pr78752-2.C: New test.\n \n+2020-05-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/95046\n+\t* gcc.target/i386/pr95046-3.c: New test.\n+\n 2020-05-12  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n \n \tPR target/95046"}, {"sha": "7d15b39e5af50f68cc845c086391221cb84aa0ea", "filename": "gcc/testsuite/gcc.target/i386/pr95046-3.c", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/955b1f929906cabc5b17c40cbc7d767eebd64cc7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/955b1f929906cabc5b17c40cbc7d767eebd64cc7/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95046-3.c?ref=955b1f929906cabc5b17c40cbc7d767eebd64cc7", "patch": "@@ -0,0 +1,42 @@\n+/* PR target/95046 */\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O3 -mfma\" } */\n+\n+\n+float r[2], a[2], b[2], c[2];\n+\n+void\n+test_fma (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    r[i] = a[i] * b[i] + c[i];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvfmadd\\[123\\]+ps\" } } */\n+\n+void\n+test_fms (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    r[i] = a[i] * b[i] - c[i];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvfmsub\\[123\\]+ps\" } } */\n+\n+void\n+test_fnma (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    r[i] = -(a[i] * b[i]) + c[i];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvfnmadd\\[123\\]+ps\" } } */\n+\n+void\n+test_fnms (void)\n+{\n+  for (int i = 0; i < 2; i++)\n+    r[i] = -(a[i] * b[i]) - c[i];\n+}\n+\n+/* { dg-final { scan-assembler \"\\tvfnmsub\\[123\\]+ps\" } } */"}]}