{"sha": "b6895597cd59f77077ccdecdacfdd34bf77b5a07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY4OTU1OTdjZDU5Zjc3MDc3Y2NkZWNkYWNmZGQzNGJmNzdiNWEwNw==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2018-09-21T11:25:39Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2018-09-21T11:25:39Z"}, "message": "Propagate address spaces to builtins.\n\nAt present, pointers passed to builtin functions, including atomic operators,\nare stripped of their address space properties.  This doesn't seem to be\ndeliberate, it just omits to copy them.\n\nNot only that, but it forces pointer sizes to Pmode, which isn't appropriate\nfor all address spaces.\n\nThis patch attempts to correct both issues.  It works for GCN atomics and\nGCN OpenACC gang-private variables.\n\n2018-09-21  Andrew Stubbs  <ams@codesourcery.com>\n\t    Julian Brown  <julian@codesourcery.com>\n\n\tgcc/\n\t* builtins.c (get_builtin_sync_mem): Handle address spaces.\n\nCo-Authored-By: Julian Brown <julian@codesourcery.com>\n\nFrom-SVN: r264467", "tree": {"sha": "740793b57e11715479275df79c102045b79d2820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/740793b57e11715479275df79c102045b79d2820"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6895597cd59f77077ccdecdacfdd34bf77b5a07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6895597cd59f77077ccdecdacfdd34bf77b5a07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6895597cd59f77077ccdecdacfdd34bf77b5a07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6895597cd59f77077ccdecdacfdd34bf77b5a07/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "518196cb3fce647789ff4c9f4679bb7087030158", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/518196cb3fce647789ff4c9f4679bb7087030158", "html_url": "https://github.com/Rust-GCC/gccrs/commit/518196cb3fce647789ff4c9f4679bb7087030158"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "1df077df6027fcb7266a571fd73224d9f31ae82c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6895597cd59f77077ccdecdacfdd34bf77b5a07/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6895597cd59f77077ccdecdacfdd34bf77b5a07/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b6895597cd59f77077ccdecdacfdd34bf77b5a07", "patch": "@@ -1,3 +1,8 @@\n+2018-09-21  Andrew Stubbs  <ams@codesourcery.com>\n+\t    Julian Brown  <julian@codesourcery.com>\n+\n+\t* builtins.c (get_builtin_sync_mem): Handle address spaces.\n+\n 2018-09-21  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/rs6000/rs6000.c (rs6000_function_ok_for_sibcall): Return false"}, {"sha": "1d4de099726a52479586fe1b7f3240ac4c3119a4", "filename": "gcc/builtins.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6895597cd59f77077ccdecdacfdd34bf77b5a07/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6895597cd59f77077ccdecdacfdd34bf77b5a07/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=b6895597cd59f77077ccdecdacfdd34bf77b5a07", "patch": "@@ -5863,14 +5863,21 @@ static rtx\n get_builtin_sync_mem (tree loc, machine_mode mode)\n {\n   rtx addr, mem;\n+  int addr_space = TYPE_ADDR_SPACE (POINTER_TYPE_P (TREE_TYPE (loc))\n+\t\t\t\t    ? TREE_TYPE (TREE_TYPE (loc))\n+\t\t\t\t    : TREE_TYPE (loc));\n+  scalar_int_mode addr_mode = targetm.addr_space.address_mode (addr_space);\n \n-  addr = expand_expr (loc, NULL_RTX, ptr_mode, EXPAND_SUM);\n-  addr = convert_memory_address (Pmode, addr);\n+  addr = expand_expr (loc, NULL_RTX, addr_mode, EXPAND_SUM);\n \n   /* Note that we explicitly do not want any alias information for this\n      memory, so that we kill all other live memories.  Otherwise we don't\n      satisfy the full barrier semantics of the intrinsic.  */\n-  mem = validize_mem (gen_rtx_MEM (mode, addr));\n+  mem = gen_rtx_MEM (mode, addr);\n+\n+  set_mem_addr_space (mem, addr_space);\n+\n+  mem = validize_mem (mem);\n \n   /* The alignment needs to be at least according to that of the mode.  */\n   set_mem_align (mem, MAX (GET_MODE_ALIGNMENT (mode),"}]}