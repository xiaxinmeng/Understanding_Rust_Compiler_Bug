{"sha": "78260b9a9c0bf5a4495320466e2cd1c259504905", "node_id": "C_kwDOANBUbNoAKDc4MjYwYjlhOWMwYmY1YTQ0OTUzMjA0NjZlMmNkMWMyNTk1MDQ5MDU", "commit": {"author": {"name": "konglin1", "email": "lingling.kong@intel.com", "date": "2022-09-16T07:59:19Z"}, "committer": {"name": "konglin1", "email": "lingling.kong@intel.com", "date": "2022-09-20T01:27:00Z"}, "message": "i386: Fixed vec_init_dup_v16bf [PR106887]\n\ngcc/ChangeLog:\n\n\tPR target/106887\n\t* config/i386/i386-expand.cc (ix86_expand_vector_init_duplicate):\n\tFixed V16BF mode case.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/106887\n\t* gcc.target/i386/vect-bfloat16-2c.c: New test.", "tree": {"sha": "e704a7bb986dbcd5d0e9984907ffb5a7ce547015", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e704a7bb986dbcd5d0e9984907ffb5a7ce547015"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78260b9a9c0bf5a4495320466e2cd1c259504905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78260b9a9c0bf5a4495320466e2cd1c259504905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78260b9a9c0bf5a4495320466e2cd1c259504905", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78260b9a9c0bf5a4495320466e2cd1c259504905/comments", "author": {"login": "konglingling7", "id": 86399175, "node_id": "MDQ6VXNlcjg2Mzk5MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/86399175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konglingling7", "html_url": "https://github.com/konglingling7", "followers_url": "https://api.github.com/users/konglingling7/followers", "following_url": "https://api.github.com/users/konglingling7/following{/other_user}", "gists_url": "https://api.github.com/users/konglingling7/gists{/gist_id}", "starred_url": "https://api.github.com/users/konglingling7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konglingling7/subscriptions", "organizations_url": "https://api.github.com/users/konglingling7/orgs", "repos_url": "https://api.github.com/users/konglingling7/repos", "events_url": "https://api.github.com/users/konglingling7/events{/privacy}", "received_events_url": "https://api.github.com/users/konglingling7/received_events", "type": "User", "site_admin": false}, "committer": {"login": "konglingling7", "id": 86399175, "node_id": "MDQ6VXNlcjg2Mzk5MTc1", "avatar_url": "https://avatars.githubusercontent.com/u/86399175?v=4", "gravatar_id": "", "url": "https://api.github.com/users/konglingling7", "html_url": "https://github.com/konglingling7", "followers_url": "https://api.github.com/users/konglingling7/followers", "following_url": "https://api.github.com/users/konglingling7/following{/other_user}", "gists_url": "https://api.github.com/users/konglingling7/gists{/gist_id}", "starred_url": "https://api.github.com/users/konglingling7/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/konglingling7/subscriptions", "organizations_url": "https://api.github.com/users/konglingling7/orgs", "repos_url": "https://api.github.com/users/konglingling7/repos", "events_url": "https://api.github.com/users/konglingling7/events{/privacy}", "received_events_url": "https://api.github.com/users/konglingling7/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43be56c4c6fb6b7f059df832eefb1cd049ff02de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43be56c4c6fb6b7f059df832eefb1cd049ff02de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43be56c4c6fb6b7f059df832eefb1cd049ff02de"}], "stats": {"total": 119, "additions": 112, "deletions": 7}, "files": [{"sha": "5334363e235bd37bd352edf11cbcdbd5363e8863", "filename": "gcc/config/i386/i386-expand.cc", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78260b9a9c0bf5a4495320466e2cd1c259504905/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78260b9a9c0bf5a4495320466e2cd1c259504905/gcc%2Fconfig%2Fi386%2Fi386-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.cc?ref=78260b9a9c0bf5a4495320466e2cd1c259504905", "patch": "@@ -15109,9 +15109,24 @@ ix86_expand_vector_init_duplicate (bool mmx_ok, machine_mode mode,\n \treturn ix86_vector_duplicate_value (mode, target, val);\n       else\n \t{\n-\t  machine_mode hvmode = (mode == V16HImode ? V8HImode\n-\t\t\t\t : mode == V16HFmode ? V8HFmode\n-\t\t\t\t : V16QImode);\n+\t  machine_mode hvmode;\n+\t  switch (mode)\n+\t    {\n+\t    case V16HImode:\n+\t      hvmode = V8HImode;\n+\t      break;\n+\t    case V16HFmode:\n+\t      hvmode = V8HFmode;\n+\t      break;\n+\t    case V16BFmode:\n+\t      hvmode = V8BFmode;\n+\t      break;\n+\t    case V32QImode:\n+\t      hvmode = V16QImode;\n+\t      break;\n+\t    default:\n+\t      gcc_unreachable ();\n+\t    }\n \t  rtx x = gen_reg_rtx (hvmode);\n \n \t  ok = ix86_expand_vector_init_duplicate (false, hvmode, x, val);\n@@ -15130,10 +15145,24 @@ ix86_expand_vector_init_duplicate (bool mmx_ok, machine_mode mode,\n \treturn ix86_vector_duplicate_value (mode, target, val);\n       else\n \t{\n-\t  machine_mode hvmode = (mode == V32HImode ? V16HImode\n-\t\t\t\t : mode == V32HFmode ? V16HFmode\n-\t\t\t\t : mode == V32BFmode ? V16BFmode\n-\t\t\t\t : V32QImode);\n+\t  machine_mode hvmode;\n+\t  switch (mode)\n+\t    {\n+\t    case V32HImode:\n+\t      hvmode = V16HImode;\n+\t      break;\n+\t    case V32HFmode:\n+\t      hvmode = V16HFmode;\n+\t      break;\n+\t    case V32BFmode:\n+\t      hvmode = V16BFmode;\n+\t      break;\n+\t    case V64QImode:\n+\t      hvmode = V32QImode;\n+\t      break;\n+\t    default:\n+\t      gcc_unreachable ();\n+\t    }\n \t  rtx x = gen_reg_rtx (hvmode);\n \n \t  ok = ix86_expand_vector_init_duplicate (false, hvmode, x, val);"}, {"sha": "bead94e46a177f0217da96bb01bd932221a8d551", "filename": "gcc/testsuite/gcc.target/i386/vect-bfloat16-2c.c", "status": "added", "additions": 76, "deletions": 0, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78260b9a9c0bf5a4495320466e2cd1c259504905/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-bfloat16-2c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78260b9a9c0bf5a4495320466e2cd1c259504905/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-bfloat16-2c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-bfloat16-2c.c?ref=78260b9a9c0bf5a4495320466e2cd1c259504905", "patch": "@@ -0,0 +1,76 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-mf16c -msse2 -mno-avx2 -O2\" } */\n+\n+typedef __bf16 v8bf __attribute__ ((__vector_size__ (16)));\n+typedef __bf16 v16bf __attribute__ ((__vector_size__ (32)));\n+\n+#define VEC_EXTRACT(V,S,IDX)\t\t\t\\\n+  S\t\t\t\t\t\t\\\n+  __attribute__((noipa))\t\t\t\\\n+  vec_extract_##V##_##IDX (V v)\t\t\t\\\n+  {\t\t\t\t\t\t\\\n+    return v[IDX];\t\t\t\t\\\n+  }\n+\n+#define VEC_SET(V,S,IDX)\t\t\t\\\n+  V\t\t\t\t\t\t\\\n+  __attribute__((noipa))\t\t\t\\\n+  vec_set_##V##_##IDX (V v, S s)\t\t\\\n+  {\t\t\t\t\t\t\\\n+    v[IDX] = s;\t\t\t\t\\\n+    return v;\t\t\t\t\t\\\n+  }\n+\n+v8bf\n+vec_init_v8bf (__bf16 a1, __bf16 a2, __bf16 a3, __bf16 a4,\n+\t       __bf16 a5,  __bf16 a6, __bf16 a7, __bf16 a8)\n+{\n+    return __extension__ (v8bf) {a1, a2, a3, a4, a5, a6, a7, a8};\n+}\n+\n+v16bf\n+vec_init_v16bf (__bf16 a1, __bf16 a2, __bf16 a3, __bf16 a4,\n+\t       __bf16 a5,  __bf16 a6, __bf16 a7, __bf16 a8,\n+\t       __bf16 a9,  __bf16 a10, __bf16 a11, __bf16 a12,\n+\t       __bf16 a13,  __bf16 a14, __bf16 a15, __bf16 a16)\n+{\n+    return __extension__ (v16bf) {a1, a2, a3, a4, a5, a6, a7, a8,\n+\t\t\t\t  a9, a10, a11, a12, a13, a14, a15, a16};\n+}\n+\n+v8bf\n+vec_init_dup_v8bf (__bf16 a1)\n+{\n+    return __extension__ (v8bf) {a1, a1, a1, a1, a1, a1, a1, a1};\n+}\n+\n+v16bf\n+vec_init_dup_v16bf (__bf16 a1)\n+{\n+    return __extension__ (v16bf) {a1, a1, a1, a1, a1, a1, a1, a1,\n+\t\t\t\t  a1, a1, a1, a1, a1, a1, a1, a1};\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpunpcklwd\" 12 } } */\n+/* { dg-final { scan-assembler-times \"vpunpckldq\" 6 } } */\n+/* { dg-final { scan-assembler-times \"vpunpcklqdq\" 3 } } */\n+\n+VEC_EXTRACT (v8bf, __bf16, 0);\n+VEC_EXTRACT (v8bf, __bf16, 4);\n+VEC_EXTRACT (v16bf, __bf16, 0);\n+VEC_EXTRACT (v16bf, __bf16, 3);\n+VEC_EXTRACT (v16bf, __bf16, 8);\n+VEC_EXTRACT (v16bf, __bf16, 15);\n+/* { dg-final { scan-assembler-times \"vpsrldq\\[\\t ]*\\\\\\$8\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrldq\\[\\t ]*\\\\\\$6\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vpsrldq\\[\\t ]*\\\\\\$14\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vextract\" 4 } } */\n+\n+VEC_SET (v8bf, __bf16, 4);\n+VEC_SET (v16bf, __bf16, 3);\n+VEC_SET (v16bf, __bf16, 8);\n+VEC_SET (v16bf, __bf16, 15);\n+/* { dg-final { scan-assembler-times \"vpblendw\" 3 { target { ! ia32 } } } } */\n+\n+/* { dg-final { scan-assembler-times \"vpinsrw\" 30 { target ia32 } } } */\n+"}]}