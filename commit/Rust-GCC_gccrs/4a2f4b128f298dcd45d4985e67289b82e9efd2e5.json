{"sha": "4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGEyZjRiMTI4ZjI5OGRjZDQ1ZDQ5ODVlNjcyODliODJlOWVmZDJlNQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@purist.soma.redhat.com", "date": "2000-06-30T00:38:09Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-06-30T00:38:09Z"}, "message": "ostream_manip.cc (test02): Add tests.\n\n\n2000-06-29  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n\n\t* testsuite/27_io/ostream_manip.cc (test02): Add tests.\n\t* bits/ostream.tcc: Tweak.\n\t* bits/std_fstream.h (basic_filebuf::setbuf): Reset\n\t_M_buf_size_opt too.\n\t* bits/std_streambuf.h (basic_streambuf::~basic_streambuf): Zero\n\tout _M_buf_size_opt.\n\t* bits/std_sstream.h (basic_stringbuf::_M_init_stringbuf): Zero\n\t_M_buf_size_opt out here.\n\t* bits/char_traits.h (char_traits::eos): Non standard member\n\tfunction, uglify to __eos. Return char_type().\n\t* bits/std_ostream.h: Change.\n\nFrom-SVN: r34797", "tree": {"sha": "a7427e5ee89eafaa12d67281487880451cc233b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a7427e5ee89eafaa12d67281487880451cc233b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/comments", "author": null, "committer": null, "parents": [{"sha": "ab76ca54bb48c62ce6d9faf6097344692baf0519", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab76ca54bb48c62ce6d9faf6097344692baf0519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab76ca54bb48c62ce6d9faf6097344692baf0519"}], "stats": {"total": 83, "additions": 68, "deletions": 15}, "files": [{"sha": "6f1b2277ad87b608536c93b750890ddcf932fa33", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -1,5 +1,13 @@\n-2000-06-29    <bkoz@purist.soma.redhat.com>\n+2000-06-29  Benjamin Kosnik  <bkoz@purist.soma.redhat.com>\n \n+\t* testsuite/27_io/ostream_manip.cc (test02): Add tests.\n+\t* bits/ostream.tcc: Tweak.\n+\t* bits/std_fstream.h (basic_filebuf::setbuf): Reset\n+\t_M_buf_size_opt too.\n+\t* bits/std_streambuf.h (basic_streambuf::~basic_streambuf): Zero\n+\tout _M_buf_size_opt.\n+\t* bits/std_sstream.h (basic_stringbuf::_M_init_stringbuf): Zero\n+\t_M_buf_size_opt out here.\n \t* bits/char_traits.h (char_traits::eos): Non standard member\n \tfunction, uglify to __eos. Return char_type().\n \t* bits/std_ostream.h: Change."}, {"sha": "7b9516667eb3e96fea35b6e490c0a5f419b97352", "filename": "libstdc++-v3/bits/char_traits.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fchar_traits.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fchar_traits.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fchar_traits.h?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -137,7 +137,7 @@ namespace std {\n       eof() { return static_cast<int_type>(-1); }\n \n       static int_type \n-      eos() { return int_type(); }\n+      __eos() { return char_type(); }\n \n       static int_type \n       not_eof(const int_type& __c)\n@@ -211,7 +211,7 @@ namespace std {\n       eof() { return static_cast<int_type>(EOF); }\n \n       static int_type \n-      eos() { return '\\0'; }\n+      __eos() { return char_type(); }\n \n       static int_type \n       not_eof(const int_type& __c)\n@@ -282,7 +282,7 @@ namespace std {\n       eof() { return static_cast<int_type>(WEOF); }\n \n       static int_type \n-      eos() { return int_type(); }\n+      __eos() { return char_type(); }\n \n       static int_type \n       not_eof(const int_type& __c)"}, {"sha": "ce683ef51ad7c3972d9539ff97adbcd2c84384ea", "filename": "libstdc++-v3/bits/ostream.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fostream.tcc?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -40,7 +40,7 @@ namespace std {\n     {\n       // XXX MT \n       if (_M_ok && __os.tie())\n-\t  __os.tie()->flush();  \n+\t__os.tie()->flush();  \n     }\n   \n   template<typename _CharT, typename _Traits>"}, {"sha": "4e8a640d870930c3ef0271cb8b0d1ea143767f7f", "filename": "libstdc++-v3/bits/sstream.tcc", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fsstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fsstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fsstream.tcc?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -85,11 +85,7 @@ namespace std {\n \t{\n \t  if (!__testeof)\n \t    {\n-\t      // NB: Start ostringstream buffers at 1024 bytes. This\n-\t      // is an experimental value (pronounced \"arbitrary\" in\n-\t      // some of the hipper english-speaking countries), and\n-\t      // can be changed to suite particular needs.\n-\t      __size_type __len = max(_M_buf_size, static_cast<int_type>(512));\n+\t      __size_type __len = max(_M_buf_size, _M_buf_size_opt);\n \t      __len *= 2;\n \n \t      if (__testwrite)"}, {"sha": "3efb70e9646acc1fee4e6922fe995f293152c37a", "filename": "libstdc++-v3/bits/std_fstream.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_fstream.h?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -141,7 +141,10 @@ namespace std {\n       setbuf(char_type* __s, streamsize __n)\n       {\n \tif (!this->is_open() && __s == 0 && __n == 0)\n-\t  _M_buf_size = 0;\n+\t  {\n+\t    _M_buf_size = 0;\n+\t    _M_buf_size_opt = 0;\n+\t  }\n \t_M_last_overflowed = false;\t\n \treturn this; \n       }"}, {"sha": "eca9d6b5d454d1d0077b61025c8139a57c641d3b", "filename": "libstdc++-v3/bits/std_ostream.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fstd_ostream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fstd_ostream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_ostream.h?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -1,6 +1,6 @@\n // Output streams -*- C++ -*-\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -262,7 +262,7 @@ namespace std {\n   template<typename _CharT, typename _Traits>\n     basic_ostream<_CharT, _Traits>& \n     ends(basic_ostream<_CharT, _Traits>& __os)\n-    { return __os.put(_Traits::eos()); }\n+    { return __os.put(_Traits::__eos()); }\n   \n   template<typename _CharT, typename _Traits>\n     basic_ostream<_CharT, _Traits>& "}, {"sha": "939d6c0b87fd636e4416e3107144b1bc5b73b49f", "filename": "libstdc++-v3/bits/std_sstream.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_sstream.h?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -108,6 +108,12 @@ namespace std {\n \t// streambufs having control of the allocation and\n \t// re-allocation of the internal string object, _M_string.\n \t_M_buf_size = _M_string.size();\n+\n+\t// NB: Start ostringstream buffers at 1024 bytes. This is an\n+\t// experimental value (pronounced \"arbitrary\" in some of the\n+\t// hipper english-speaking countries), and can be changed to\n+\t// suite particular needs.\n+\t_M_buf_size_opt = 512;\n \t_M_mode = __mode;\n \tif (_M_mode & ios_base::ate)\n \t  _M_really_sync(0, _M_buf_size); "}, {"sha": "5798ba1f6a6a7afe2a77e546400097478ee752c6", "filename": "libstdc++-v3/bits/std_streambuf.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -191,6 +191,7 @@ namespace std {\n       {\n \t_M_buf_unified = false;\n \t_M_buf_size = 0;\n+\t_M_buf_size_opt = 0;\n \t_M_mode = ios_base::openmode(0);\n \t_M_fctype_buf = NULL;\n \t_M_locale_set = false;"}, {"sha": "e9b30c13f2f3c32d441d12feed09fa2ba77e9a99", "filename": "libstdc++-v3/testsuite/27_io/ostream_manip.cc", "status": "modified", "additions": 41, "deletions": 2, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_manip.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a2f4b128f298dcd45d4985e67289b82e9efd2e5/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_manip.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fostream_manip.cc?ref=4a2f4b128f298dcd45d4985e67289b82e9efd2e5", "patch": "@@ -1,6 +1,6 @@\n // 1999-07-22 bkoz\n \n-// Copyright (C) 1994, 1999 Free Software Foundation, Inc.\n+// Copyright (C) 1994, 1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -20,7 +20,7 @@\n \n // 27.6.2.7 standard basic_ostream manipulators\n \n-#include <istream>\n+#include <ostream>\n #include <sstream>\n #include <stdexcept>\n #ifdef DEBUG_ASSERT\n@@ -81,6 +81,45 @@ bool test01(void)\n   return test;\n }\n \n+\n+// based vaguely on this:\n+// http://sourceware.cygnus.com/ml/libstdc++/2000-q2/msg00109.html\n+bool test02()\n+{\n+  using namespace std;\n+  typedef ostringstream::int_type int_type;\n+\n+  bool test = true;\n+  ostringstream osst_01;\n+  const string str_00(\"herbie_hancock\");\n+  int_type len1 = str_00.size();\n+  osst_01 << str_00;\n+  test &= osst_01.str().size() == len1;\n+\n+  osst_01 << ends;\n+\n+  const string str_01(\"speak like a child\");\n+  int_type len2 = str_01.size();\n+  osst_01 << str_01;\n+  int_type len3 = osst_01.str().size();\n+  test &= len1 < len3;\n+  test &= len3 == len1 + len2 + 1;\n+\n+  osst_01 << ends;\n+\n+  const string str_02(\"+ inventions and dimensions\");\n+  int_type len4 = str_02.size();\n+  osst_01 << str_02;\n+  int_type len5 = osst_01.str().size();\n+  test &= len3 < len5;\n+  test &= len5 == len3 + len4 + 1;\n+\n+#ifdef DEBUG_ASSERT\n+  assert(test);\n+#endif\n+  return test;\n+}\n+\n int main()\n { \n   test01();"}]}