{"sha": "75c9cbe3557ee9c4971140719dfce0a8dd4d1d52", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVjOWNiZTM1NTdlZTljNDk3MTE0MDcxOWRmY2UwYThkZDRkMWQ1Mg==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-09-02T18:43:30Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2008-09-02T18:43:30Z"}, "message": "configure.ac: Use m4_quote to quote the expansion of m4_do.\n\n* configure.ac: Use m4_quote to quote the expansion of m4_do.\n* configure: Regenerate.\n\nFrom-SVN: r139905", "tree": {"sha": "ae46fa9e2a3bdcd4ac707bf0ab9d7529767481cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ae46fa9e2a3bdcd4ac707bf0ab9d7529767481cc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52/comments", "author": null, "committer": null, "parents": [{"sha": "ef66fb294ad66a0b972968499754570393d3b1c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef66fb294ad66a0b972968499754570393d3b1c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef66fb294ad66a0b972968499754570393d3b1c6"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "0179e92f0d526636d0f6768e6d968d59ad484098", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=75c9cbe3557ee9c4971140719dfce0a8dd4d1d52", "patch": "@@ -1,3 +1,8 @@\n+2008-09-02  Andreas Schwab  <schwab@suse.de>\n+\n+\t* configure.ac: Use m4_quote to quote the expansion of m4_do.\n+\t* configure: Regenerate.\n+\n 2008-09-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* simplify-rtx.c (simplify_binary_operation_1): Check for CONST,\n@@ -41,7 +46,7 @@\n 2008-09-02  Alexander Monakov  <amonakov@ispras.ru>\n \n \tFixed typo in date of the 2008-09-01 MOVE_RATIO commit.\n-\t\n+\n \t* config/ia64/ia64.opt (msched-ar-data-spec): Default to 1.\n \t* config/ia64/ia64.c (ia64_set_sched_flags): Always initialize\n \tspec_info->mask.\n@@ -130,7 +135,7 @@\n \t* config/arm/arm.md: Include cortex-r4f.md.\n \t(attr fpu): Update type list.\n \t(attr type): Add fcpys, ffariths, ffarithd, fadds, faddd, fconsts,\n-\tfconstd, fcmps and fcmpd. \n+\tfconstd, fcmps and fcmpd.\n \t(attr tune_cortexr4): Define.\n \t(attr generic_sched, attr generic_vfp): Use tune_cortexr4.\n \t* config/arm/vfp.md: Document fcpys, ffariths, ffarithd, fadds, faddd,\n@@ -153,15 +158,15 @@\n \n 2008-09-01  Andrey Belevantsev  <abel@ispras.ru>\n \n-\t* sel-sched-ir.c (cmp_v_in_regset_pool): Surround with \n-\t#ifdef ENABLE_CHECKING. \n+\t* sel-sched-ir.c (cmp_v_in_regset_pool): Surround with\n+\t#ifdef ENABLE_CHECKING.\n \n 2008-09-01  Andrey Belevantsev  <abel@ispras.ru>\n-\t\n+\n \t* sel-sched-dump.c: Surround with #ifdef INSN_SCHEDULING.\n \t* sched-int.h (print_insn, print_pattern, print_value): Declare also\n \twhen !INSN_SCHEDULING.\n-\t\n+\n 2008-09-01  Andreas Schwab  <schwab@suse.de>\n \n \t* config/ia64/ia64.c (TARGET_ADDRESS_COST): Update."}, {"sha": "eb368c56faef4b7a8f163eb9ec02c1c56eda423f", "filename": "gcc/configure", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=75c9cbe3557ee9c4971140719dfce0a8dd4d1d52", "patch": "@@ -7169,7 +7169,7 @@ CFLAGS=\"$save_CFLAGS\"\n if test \"$GCC\" = yes; then\n   echo \"$as_me:$LINENO: checking whether $CC supports -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings\" >&5\n echo $ECHO_N \"checking whether $CC supports -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings... $ECHO_C\" >&6\n-if test \"${acx_cv_prog_cc_pedantic_m4_do__Wno_long_long__Wno_variadic_macros_____________Wno_overlength_strings_+set}\" = set; then\n+if test \"${acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n   save_CFLAGS=\"$CFLAGS\"\n@@ -7211,19 +7211,19 @@ if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   ac_status=$?\n   echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n   (exit $ac_status); }; }; then\n-  acx_cv_prog_cc_pedantic_m4_do__Wno_long_long__Wno_variadic_macros_____________Wno_overlength_strings_=yes\n+  acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings=yes\n else\n   echo \"$as_me: failed program was:\" >&5\n sed 's/^/| /' conftest.$ac_ext >&5\n \n-acx_cv_prog_cc_pedantic_m4_do__Wno_long_long__Wno_variadic_macros_____________Wno_overlength_strings_=no\n+acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings=no\n fi\n rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n CFLAGS=\"$save_CFLAGS\"\n fi\n-echo \"$as_me:$LINENO: result: $acx_cv_prog_cc_pedantic_m4_do__Wno_long_long__Wno_variadic_macros_____________Wno_overlength_strings_\" >&5\n-echo \"${ECHO_T}$acx_cv_prog_cc_pedantic_m4_do__Wno_long_long__Wno_variadic_macros_____________Wno_overlength_strings_\" >&6\n-if test $acx_cv_prog_cc_pedantic_m4_do__Wno_long_long__Wno_variadic_macros_____________Wno_overlength_strings_ = yes; then\n+echo \"$as_me:$LINENO: result: $acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings\" >&5\n+echo \"${ECHO_T}$acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings\" >&6\n+if test $acx_cv_prog_cc_pedantic__Wno_long_long__Wno_variadic_macros__Wno_overlength_strings = yes; then\n   strict_warn=\"$strict_warn${strict_warn:+ }-pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings\"\n fi\n "}, {"sha": "37ed6787064e14d2a16ec03604fcff5c4141f83e", "filename": "gcc/configure.ac", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75c9cbe3557ee9c4971140719dfce0a8dd4d1d52/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=75c9cbe3557ee9c4971140719dfce0a8dd4d1d52", "patch": "@@ -323,14 +323,14 @@ AC_CHECK_TYPES([__int64], [AC_CHECK_SIZEOF(__int64)])\n # So, we only use -pedantic if we can disable those warnings.\n \n ACX_PROG_CC_WARNING_OPTS(\n-\t[m4_do([-W -Wall -Wwrite-strings -Wstrict-prototypes ],\n-\t       [-Wmissing-prototypes -Wcast-qual])], [loose_warn])\n+\tm4_quote(m4_do([-W -Wall -Wwrite-strings -Wstrict-prototypes ],\n+\t\t       [-Wmissing-prototypes -Wcast-qual])), [loose_warn])\n ACX_PROG_CC_WARNING_OPTS(\n-\t[m4_do([-Wold-style-definition -Wc++-compat ], \n-\t       [-Wmissing-format-attribute])], [strict_warn])\n+\tm4_quote(m4_do([-Wold-style-definition -Wc++-compat ], \n+\t\t       [-Wmissing-format-attribute])), [strict_warn])\n ACX_PROG_CC_WARNING_ALMOST_PEDANTIC(\n-\t[m4_do([-Wno-long-long -Wno-variadic-macros ], \n-\t       [-Wno-overlength-strings])], [strict_warn])\n+\tm4_quote(m4_do([-Wno-long-long -Wno-variadic-macros ], \n+\t\t       [-Wno-overlength-strings])), [strict_warn])\n ACX_PROG_CC_WARNINGS_ARE_ERRORS([manual], [strict_warn])\n \n # The above macros do nothing if the compiler is not GCC.  However, the"}]}