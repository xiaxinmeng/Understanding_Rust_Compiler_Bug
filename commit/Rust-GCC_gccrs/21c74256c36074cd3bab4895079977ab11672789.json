{"sha": "21c74256c36074cd3bab4895079977ab11672789", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjFjNzQyNTZjMzYwNzRjZDNiYWI0ODk1MDc5OTc3YWIxMTY3Mjc4OQ==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-10-15T16:27:58Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-10-15T16:27:58Z"}, "message": "re PR libfortran/34670 (bounds checking for array intrinsics)\n\n2008-10-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/34670\n\t* intrinsics/reshape_generic.c:  Add bounds checking.\n\t* m4/reshape.m4:  Likewise.\n        * generated/reshape_c10.c: Regenerated.\n        * generated/reshape_c16.c: Regenerated.\n        * generated/reshape_c4.c: Regenerated.\n        * generated/reshape_c8.c: Regenerated.\n        * generated/reshape_i16.c: Regenerated.\n        * generated/reshape_i4.c: Regenerated.\n        * generated/reshape_i8.c: Regenerated.\n        * generated/reshape_r10.c: Regenerated.\n        * generated/reshape_r16.c: Regenerated.\n        * generated/reshape_r4.c: Regenerated.\n        * generated/reshape_r8.c: Regenerated.\n        * generated/spread_r4.c: Regenerated.\n\n2008-10-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR libfortran/34670\n\t* gfortran.dg/reshape_3.f90:  New test.\n\t* gfortran.dg/reshape_4.f90:  New test.\n\t* gfortran.dg/reshape_order_1.f90:  Use correct shape.\n\t* gfortran.dg/reshape_order_2.f90:  Likewise.\n\t* gfortran.dg/reshape_order_3.f90:  Likewise.\n\t* gfortran.dg/reshape_order_4.f90:  Likewise.\n\nFrom-SVN: r141144", "tree": {"sha": "39776d8541e7a723cf713a2f77af4ba4cf9d3ea0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39776d8541e7a723cf713a2f77af4ba4cf9d3ea0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/21c74256c36074cd3bab4895079977ab11672789", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c74256c36074cd3bab4895079977ab11672789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21c74256c36074cd3bab4895079977ab11672789", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21c74256c36074cd3bab4895079977ab11672789/comments", "author": null, "committer": null, "parents": [{"sha": "2c7a7f46d89be753c00b5b7d23d0d943eb0b2d29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c7a7f46d89be753c00b5b7d23d0d943eb0b2d29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c7a7f46d89be753c00b5b7d23d0d943eb0b2d29"}], "stats": {"total": 312, "additions": 307, "deletions": 5}, "files": [{"sha": "8cee6d05feb7bcdeaff656fcf35204b817a9f460", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -1,3 +1,13 @@\n+2008-10-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34670\n+\t* gfortran.dg/reshape_3.f90:  New test.\n+\t* gfortran.dg/reshape_4.f90:  New test.\n+\t* gfortran.dg/reshape_order_1.f90:  Use correct shape.\n+\t* gfortran.dg/reshape_order_2.f90:  Likewise.\n+\t* gfortran.dg/reshape_order_3.f90:  Likewise.\n+\t* gfortran.dg/reshape_order_4.f90:  Likewise.\n+\n 2008-10-15  Jan Sjodin  <jan.sjodin@amd.com>\n     \t    Harsha Jagasia  <harsha.jagasia@amd.com>\n "}, {"sha": "880d9d76b68232fa9c2892cc6be17d1b36166f2a", "filename": "gcc/testsuite/gfortran.dg/reshape_order_1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_1.f90?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -4,7 +4,7 @@\n program main\n   implicit none\n   integer(kind=1), dimension(6) :: source1 = (/ 1, 2, 3, 4, 5, 6 /)\n-  integer, dimension(2) :: shape1 = (/ 2, 5/)\n+  integer, dimension(2) :: shape1 = (/ 2, 3/)\n   integer(kind=1), dimension(2) :: pad1 = (/ 0, 0/)\n   character(len=200) :: l1, l2\n   integer :: i1, i2"}, {"sha": "20a6f19b958d19b284511a98687e36fbabc50856", "filename": "gcc/testsuite/gfortran.dg/reshape_order_2.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_2.f90?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -4,7 +4,7 @@\n program main\n   implicit none\n   integer(kind=1), dimension(6) :: source1 = (/ 1, 2, 3, 4, 5, 6 /)\n-  integer, dimension(2) :: shape1 = (/ 2, 5/)\n+  integer, dimension(2) :: shape1 = (/ 2, 3/)\n   integer(kind=1), dimension(2) :: pad1 = (/ 0, 0/)\n   character(len=200) :: l1, l2\n   integer :: i1, i2"}, {"sha": "4b757f81cb4ce1168c223ee15ba7daa7ab0cdbd4", "filename": "gcc/testsuite/gfortran.dg/reshape_order_3.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_3.f90?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -4,7 +4,7 @@\n program main\n   implicit none\n   integer(kind=4), dimension(6) :: source1 = (/ 1, 2, 3, 4, 5, 6 /)\n-  integer, dimension(2) :: shape1 = (/ 2, 5/)\n+  integer, dimension(2) :: shape1 = (/ 2, 3/)\n   integer(kind=4), dimension(2) :: pad1 = (/ 0, 0/)\n   character(len=200) :: l1, l2\n   integer :: i1, i2"}, {"sha": "c66df8e83d809cb971ecc38a4f2d2afe8e72fe6f", "filename": "gcc/testsuite/gfortran.dg/reshape_order_4.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Freshape_order_4.f90?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -4,7 +4,7 @@\n program main\n   implicit none\n   integer(kind=4), dimension(6) :: source1 = (/ 1, 2, 3, 4, 5, 6 /)\n-  integer, dimension(2) :: shape1 = (/ 2, 5/)\n+  integer, dimension(2) :: shape1 = (/ 2, 3/)\n   integer(kind=4), dimension(2) :: pad1 = (/ 0, 0/)\n   character(len=200) :: l1, l2\n   integer :: i1, i2"}, {"sha": "ae4e64e071a86b80fafde5e545e92a246fc819bf", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -1,3 +1,21 @@\n+2008-10-15  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR libfortran/34670\n+\t* intrinsics/reshape_generic.c:  Add bounds checking.\n+\t* m4/reshape.m4:  Likewise.\n+        * generated/reshape_c10.c: Regenerated.\n+        * generated/reshape_c16.c: Regenerated.\n+        * generated/reshape_c4.c: Regenerated.\n+        * generated/reshape_c8.c: Regenerated.\n+        * generated/reshape_i16.c: Regenerated.\n+        * generated/reshape_i4.c: Regenerated.\n+        * generated/reshape_i8.c: Regenerated.\n+        * generated/reshape_r10.c: Regenerated.\n+        * generated/reshape_r16.c: Regenerated.\n+        * generated/reshape_r4.c: Regenerated.\n+        * generated/reshape_r8.c: Regenerated.\n+        * generated/spread_r4.c: Regenerated.\n+\n 2008-10-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n \n \tPR libfortran/37083"}, {"sha": "567d5b40283e3f5efcd6399426d015666230f9ce", "filename": "libgfortran/generated/reshape_c10.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_c10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_c10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c10.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_c10 (gfc_array_c10 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "79745f2de5828fb9d19f799534b477efc6ae4f2b", "filename": "libgfortran/generated/reshape_c16.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_c16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_c16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c16.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_c16 (gfc_array_c16 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "90383adf922c98aa75edd95dc323302a4ea459e0", "filename": "libgfortran/generated/reshape_c4.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_c4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_c4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c4.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_c4 (gfc_array_c4 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "49178e5e09adff25df608613ad117e5ad124a245", "filename": "libgfortran/generated/reshape_c8.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_c8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_c8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_c8.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_c8 (gfc_array_c8 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "a626465136550fb2927370b05a8061d840d7f97d", "filename": "libgfortran/generated/reshape_i16.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_i16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_i16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i16.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_16 (gfc_array_i16 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "1d3aa49e9470ea6ab7cb9b7069d03bdf3a05bb32", "filename": "libgfortran/generated/reshape_i4.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_i4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_i4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i4.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_4 (gfc_array_i4 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "8c51795f1ff5c908ab933cdfc86cb23e693881e8", "filename": "libgfortran/generated/reshape_i8.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_i8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_i8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_i8.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_8 (gfc_array_i8 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "846d12f1f0826fff43c3fe76a6ee30c400e7cf76", "filename": "libgfortran/generated/reshape_r10.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_r10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_r10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r10.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_r10 (gfc_array_r10 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "286e374ff18d40b0a54716169dcef7f3e99524ac", "filename": "libgfortran/generated/reshape_r16.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_r16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_r16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r16.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_r16 (gfc_array_r16 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "cd16b24a9eb9c0744cfa4b79e15fabbd6e05fc3b", "filename": "libgfortran/generated/reshape_r4.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r4.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_r4 (gfc_array_r4 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "9da26d4c199413ec3ed27af5807cb65823f7f7ca", "filename": "libgfortran/generated/reshape_r8.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_r8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Freshape_r8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Freshape_r8.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -121,6 +121,27 @@ reshape_r8 (gfc_array_r8 * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "a9357afdc61b83cc958e3d6d1708777402f5faea", "filename": "libgfortran/generated/spread_r4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Fspread_r4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fgenerated%2Fspread_r4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgenerated%2Fspread_r4.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -131,7 +131,8 @@ spread_r4 (gfc_array_r4 *ret, const gfc_array_r4 *source,\n \t      if (n == along - 1)\n \t\t{\n \t\t  rdelta = ret->dim[n].stride;\n-\n+\t\t  printf(\"ret_extent = %ld, ncopies = %ld\\n\",\n+\t\t\t (long int) ret_extent, (long int) ncopies);\n \t\t  if (ret_extent != ncopies)\n \t\t    runtime_error(\"Incorrect extent in return value of SPREAD\"\n \t\t\t\t  \" intrinsic in dimension %ld: is %ld,\""}, {"sha": "2d8306cbe31c14607a1867ebccad06e2974d7a93", "filename": "libgfortran/intrinsics/reshape_generic.c", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fintrinsics%2Freshape_generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fintrinsics%2Freshape_generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Freshape_generic.c?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -110,6 +110,27 @@ reshape_internal (parray *ret, parray *source, shape_type *shape,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}, {"sha": "8d7ea728086b948e942654afae865d38793923ab", "filename": "libgfortran/m4/reshape.m4", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fm4%2Freshape.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/21c74256c36074cd3bab4895079977ab11672789/libgfortran%2Fm4%2Freshape.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fm4%2Freshape.m4?ref=21c74256c36074cd3bab4895079977ab11672789", "patch": "@@ -125,6 +125,27 @@ reshape_'rtype_ccode` ('rtype` * const restrict ret,\n \n   if (unlikely (compile_options.bounds_check))\n     {\n+      index_type ret_extent, source_extent;\n+\n+      rs = 1;\n+      for (n = 0; n < rdim; n++)\n+\t{\n+\t  rs *= shape_data[n];\n+\t  ret_extent = ret->dim[n].ubound + 1 - ret->dim[n].lbound;\n+\t  if (ret_extent != shape_data[n])\n+\t    runtime_error(\"Incorrect extent in return value of RESHAPE\"\n+\t\t\t  \" intrinsic in dimension %ld: is %ld,\"\n+\t\t\t  \" should be %ld\", (long int) n+1,\n+\t\t\t  (long int) ret_extent, (long int) shape_data[n]);\n+\t}\n+\n+      source_extent = source->dim[0].ubound + 1 - source->dim[0].lbound;\n+\n+      if (rs != source_extent)\n+\truntime_error(\"Incorrect size in SOURCE argument to RESHAPE\"\n+\t\t      \" intrinsic: is %ld, should be %ld\",\n+\t\t      (long int) source_extent, (long int) rs);\n+\n       if (order)\n \t{\n \t  int seen[GFC_MAX_DIMENSIONS];"}]}