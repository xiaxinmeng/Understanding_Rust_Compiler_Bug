{"sha": "1c91de89b88fa76d58c941c928c8e7edd682ecb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM5MWRlODliODhmYTc2ZDU4Yzk0MWM5MjhjOGU3ZWRkNjgyZWNiMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2005-04-28T02:25:22Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2005-04-28T02:25:22Z"}, "message": "modulo-sched.c, [...]: Use targetm.foo instead of (*targetm.foo).\n\n\t* modulo-sched.c, tree-stdarg.c: Use targetm.foo instead of\n\t(*targetm.foo).\n\nFrom-SVN: r98907", "tree": {"sha": "049c14d55aa55d915bbc9453b6e4bb5929b195ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/049c14d55aa55d915bbc9453b6e4bb5929b195ff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c91de89b88fa76d58c941c928c8e7edd682ecb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c91de89b88fa76d58c941c928c8e7edd682ecb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c91de89b88fa76d58c941c928c8e7edd682ecb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c91de89b88fa76d58c941c928c8e7edd682ecb0/comments", "author": null, "committer": null, "parents": [{"sha": "01a1e85a73a874b8921e2100437e6f32594afd93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01a1e85a73a874b8921e2100437e6f32594afd93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01a1e85a73a874b8921e2100437e6f32594afd93"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "2ff5d56ee41d98bba15bdf27492a6808d993fd45", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c91de89b88fa76d58c941c928c8e7edd682ecb0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c91de89b88fa76d58c941c928c8e7edd682ecb0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c91de89b88fa76d58c941c928c8e7edd682ecb0", "patch": "@@ -1,3 +1,8 @@\n+2005-04-28  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* modulo-sched.c, tree-stdarg.c: Use targetm.foo instead of\n+\t(*targetm.foo).\n+\n 2005-04-28  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* c-typeck.c (build_compound_expr): Correct logic in last change."}, {"sha": "2dffc3170a116f88c9dca2420e2022c8a60c043d", "filename": "gcc/modulo-sched.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c91de89b88fa76d58c941c928c8e7edd682ecb0/gcc%2Fmodulo-sched.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c91de89b88fa76d58c941c928c8e7edd682ecb0/gcc%2Fmodulo-sched.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmodulo-sched.c?ref=1c91de89b88fa76d58c941c928c8e7edd682ecb0", "patch": "@@ -1000,7 +1000,7 @@ sms_schedule (FILE *dump_file)\n       int temp = reload_completed;\n \n       reload_completed = 1;\n-      issue_rate = (*targetm.sched.issue_rate) ();\n+      issue_rate = targetm.sched.issue_rate ();\n       reload_completed = temp;\n     }\n   else\n@@ -2342,13 +2342,13 @@ advance_one_cycle (void)\n {\n   if (targetm.sched.dfa_pre_cycle_insn)\n     state_transition (curr_state,\n-\t\t      (*targetm.sched.dfa_pre_cycle_insn) ());\n+\t\t      targetm.sched.dfa_pre_cycle_insn ());\n \n   state_transition (curr_state, NULL);\n \n   if (targetm.sched.dfa_post_cycle_insn)\n     state_transition (curr_state,\n-\t\t      (*targetm.sched.dfa_post_cycle_insn) ());\n+\t\t      targetm.sched.dfa_post_cycle_insn ());\n }\n \n /* Given the kernel of a loop (from FIRST_INSN to LAST_INSN), finds\n@@ -2392,8 +2392,8 @@ kernel_number_of_cycles (rtx first_insn, rtx last_insn)\n \n       if (targetm.sched.variable_issue)\n \tcan_issue_more =\n-\t  (*targetm.sched.variable_issue) (sched_dump, sched_verbose,\n-\t\t\t\t\t   insn, can_issue_more);\n+\t  targetm.sched.variable_issue (sched_dump, sched_verbose,\n+\t\t\t\t\tinsn, can_issue_more);\n       /* A naked CLOBBER or USE generates no instruction, so don't\n \t let them consume issue slots.  */\n       else if (GET_CODE (PATTERN (insn)) != USE\n@@ -2440,8 +2440,8 @@ ps_has_conflicts (partial_schedule_ptr ps, int from, int to)\n \n \t  if (targetm.sched.variable_issue)\n \t    can_issue_more =\n-\t      (*targetm.sched.variable_issue) (sched_dump, sched_verbose,\n-\t\t\t\t\t       insn, can_issue_more);\n+\t      targetm.sched.variable_issue (sched_dump, sched_verbose,\n+\t\t\t\t\t    insn, can_issue_more);\n \t  /* A naked CLOBBER or USE generates no instruction, so don't\n \t     let them consume issue slots.  */\n \t  else if (GET_CODE (PATTERN (insn)) != USE"}, {"sha": "5c3b81b724a6874fcbacdf4aca4acb1609d35cb5", "filename": "gcc/tree-stdarg.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c91de89b88fa76d58c941c928c8e7edd682ecb0/gcc%2Ftree-stdarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c91de89b88fa76d58c941c928c8e7edd682ecb0/gcc%2Ftree-stdarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-stdarg.c?ref=1c91de89b88fa76d58c941c928c8e7edd682ecb0", "patch": "@@ -783,7 +783,7 @@ execute_optimize_stdarg (void)\n \n \t\t  /* Do any architecture specific checking.  */\n \t\t  else if (targetm.stdarg_optimize_hook\n-\t\t\t   && (*targetm.stdarg_optimize_hook) (&si, lhs, rhs))\n+\t\t\t   && targetm.stdarg_optimize_hook (&si, lhs, rhs))\n \t\t    continue;\n \t\t}\n \t    }"}]}