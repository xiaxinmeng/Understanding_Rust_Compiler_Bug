{"sha": "8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVmZWE3YTY3MzUzZDA2N2MwZDk0Y2Y0Y2Y3ZDdmMzc3YTMzN2NjMA==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-11-08T17:44:40Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-11-08T17:44:40Z"}, "message": "re PR target/46280 (Several testcases FAIL with 16byte alignment ABI warning on Solaris 8/9 x86)\n\n\tgcc:\n\t* config/i386/i386.c (ix86_function_arg_boundary): Fix warning\n\tmessage.\n\n\tgcc/testsuite:\n\t* gcc.dg/pr35442.c: Adapt warning.\n\n\tPR target/46280\n\t* g++.dg/eh/simd-2.C: Add -msse to dg-options, add\n\tdg-require-effective-target sse_runtime for for i?86-*-*, x86_64-*-*.\n\t* g++.dg/torture/pr36444.C: Add dg-options -msse for\n\ti?86-*-* x86_64-*-*.\n\t* g++.dg/torture/pr36445.C: Likewise.\n\t* gcc.c-torture/compile/pr34856.c: Likewise.\n\t* gcc.c-torture/compile/pr39928-1.c: Likewise.\n\t* gcc.c-torture/compile/vector-1.c: Likewise.\n\t* gcc.c-torture/compile/vector-2.c: Likewise.\n\t* gcc.dg/pr32912-1.c: Likewise.\n\t* gcc.c-torture/execute/va-arg-25.c: Move ...\n\t* gcc.dg/torture/va-arg-25.c: ... here.\n\tAdd dg-do run.\n\tAdd dg-options -msse, dg-require-effective-target sse_runtime for\n\tfor i?86-*-*, x86_64-*-*.\n\t* gcc.c-torture/execute/vector-1.c: Likewise.\n\t* gcc.c-torture/execute/vector-2.c: Likewise.\n\t* gcc.dg/tree-ssa/forwprop-5.c: Add -msse to dg-options for\n\ti?86-*-*, x86_64-*-*.\n\t* gcc.dg/tree-ssa/fre-vce-1.c: Likewise.\n\t* gcc.dg/tree-ssa/sra-4.c: Likewise.\n\t* gcc.dg/tree-ssa/vector-1.c: Likewise.\n\t* gcc.dg/tree-ssa/vector-2.c: Likewise.\n\t* gcc.target/i386/vect-args.c: Add -Wno-psabi to dg-options.\n\nFrom-SVN: r166444", "tree": {"sha": "34116f23addbb199120e064ce820d1d50f6a0db0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34116f23addbb199120e064ce820d1d50f6a0db0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90aa3e91ad41ed9c05ce967a1ae6b7c98e89bb5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90aa3e91ad41ed9c05ce967a1ae6b7c98e89bb5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90aa3e91ad41ed9c05ce967a1ae6b7c98e89bb5f"}], "stats": {"total": 71, "additions": 66, "deletions": 5}, "files": [{"sha": "ae81d678c70e9c7ccce5a8f2ef61f773aba491de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,3 +1,7 @@\n+2010-11-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* config/i386/i386.c (ix86_function_arg_boundary): Fix warning\n+\tmessage.\n \n 2010-11-08  Basile Starynkevitch  <basile@starynkevitch.net>\n "}, {"sha": "9efc0df689d07f0c16442df2df0ef8732d85f81d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -7147,7 +7147,7 @@ ix86_function_arg_boundary (enum machine_mode mode, const_tree type)\n \t{\n \t  warned = true;\n \t  inform (input_location,\n-\t\t  \"The ABI of passing parameter with %dbyte\"\n+\t\t  \"The ABI for passing parameters with %d-byte\"\n \t\t  \" alignment has changed in GCC 4.6\",\n \t\t  align / BITS_PER_UNIT);\n \t}"}, {"sha": "74d974b63cc365705d04f4585233b74db030e015", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,3 +1,33 @@\n+2010-11-08  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gcc.dg/pr35442.c: Adapt warning.\n+\n+\tPR target/46280\n+\t* g++.dg/eh/simd-2.C: Add -msse to dg-options, add\n+\tdg-require-effective-target sse_runtime for for i?86-*-*, x86_64-*-*.\n+\t* g++.dg/torture/pr36444.C: Add dg-options -msse for\n+\ti?86-*-* x86_64-*-*.\n+\t* g++.dg/torture/pr36445.C: Likewise.\n+\t* gcc.c-torture/compile/pr34856.c: Likewise.\n+\t* gcc.c-torture/compile/pr39928-1.c: Likewise.\n+\t* gcc.c-torture/compile/vector-1.c: Likewise.\n+\t* gcc.c-torture/compile/vector-2.c: Likewise.\n+\t* gcc.dg/pr32912-1.c: Likewise.\n+\t* gcc.c-torture/execute/va-arg-25.c: Move ...\n+\t* gcc.dg/torture/va-arg-25.c: ... here.\n+\tAdd dg-do run.\n+\tAdd dg-options -msse, dg-require-effective-target sse_runtime for\n+\tfor i?86-*-*, x86_64-*-*.\n+\t* gcc.c-torture/execute/vector-1.c: Likewise.\n+\t* gcc.c-torture/execute/vector-2.c: Likewise.\n+\t* gcc.dg/tree-ssa/forwprop-5.c: Add -msse to dg-options for\n+\ti?86-*-*, x86_64-*-*.\n+\t* gcc.dg/tree-ssa/fre-vce-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/sra-4.c: Likewise.\n+\t* gcc.dg/tree-ssa/vector-1.c: Likewise.\n+\t* gcc.dg/tree-ssa/vector-2.c: Likewise.\n+\t* gcc.target/i386/vect-args.c: Add -Wno-psabi to dg-options.\n+\n 2010-11-08  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/torture/pr45982.c: Add -std=c99"}, {"sha": "2761061c178aa7f8593052966b7e11991bfed398", "filename": "gcc/testsuite/g++.dg/eh/simd-2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsimd-2.C?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,10 +1,11 @@\n // Test EH when V4SI SIMD registers are involved.\n // Contributed by Aldy Hernandez (aldy@quesejoda.com).\n // { dg-options \"-O -Wno-abi\" }\n-// { dg-options \"-O -w\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n+// { dg-options \"-O -w -msse\" { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n // { dg-options \"-O -w\" { target powerpc*-*-* } }\n // { dg-options \"-O -w -maltivec\" { target { powerpc*-*-* && vmx_hw } } }\n // { dg-do run }\n+// { dg-require-effective-target sse_runtime { target { { i?86-*-* x86_64-*-* } && ilp32 } } }\n \n #include \"check-vect.h\"\n "}, {"sha": "ae639e25d2c5928d0c3b476cb0fcee19ee866b80", "filename": "gcc/testsuite/g++.dg/torture/pr36444.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36444.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36444.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36444.C?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n #define vector __attribute__((vector_size(16) ))\n struct struct1  {\n   union {}    vmx;"}, {"sha": "56642e9ec73969069e9e3fa940baf38467adcca1", "filename": "gcc/testsuite/g++.dg/torture/pr36445.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36445.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36445.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr36445.C?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,4 +1,5 @@\n /* { dg-do compile } */\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n // This used to fail as we would try to expand a VCE where one side had\n // a mode of BLKmode and the other side was a vector mode.\n #define vector __attribute__((vector_size(16) ))"}, {"sha": "7b0d5962a60d6ff117d07b429a70f8ea68db1e4c", "filename": "gcc/testsuite/gcc.c-torture/compile/pr34856.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34856.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34856.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr34856.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n #undef __vector\n #define __vector __attribute__((vector_size(16) ))\n typedef __vector signed char qword;"}, {"sha": "1abb5ccb505dcbc447aca86e1936eca35193ba13", "filename": "gcc/testsuite/gcc.c-torture/compile/pr39928-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr39928-1.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n typedef float __m128 __attribute__ ((__vector_size__ (16), __may_alias__));\n extern __m128 _mm_sub_ps (__m128 __A, __m128 __B);\n extern __m128 _mm_mul_ps (__m128 __A, __m128 __B);"}, {"sha": "9be0be19bcaabebfaa11daeac3464d7ecc38419a", "filename": "gcc/testsuite/gcc.c-torture/compile/vector-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-1.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n #define vector __attribute__((vector_size(16) ))\n struct ss\n {"}, {"sha": "e04d55588e5560ffbb82afc916b5257ffe81ae16", "filename": "gcc/testsuite/gcc.c-torture/compile/vector-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fvector-2.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,3 +1,4 @@\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n #define vector __attribute__((vector_size(16) ))\n struct ss\n {"}, {"sha": "4fcc29a9cc8b185490855d296df28ba27c6a09a8", "filename": "gcc/testsuite/gcc.dg/pr32912-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32912-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32912-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr32912-1.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -2,6 +2,8 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -w\" } */\n /* { dg-options \"-O2 -w -fno-common\" { target hppa*-*-hpux* } } */\n+/* { dg-options \"-O2 -w -msse\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-require-effective-target sse_runtime { target { i?86-*-* x86_64-*-* } } } */\n \n extern void abort (void);\n "}, {"sha": "206853b9ef044348f89a825264f97300c57735cc", "filename": "gcc/testsuite/gcc.dg/pr35442.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35442.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35442.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35442.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -11,4 +11,4 @@ foo (A a)\n }\n \n /* Ignore a warning that is irrelevant to the purpose of this test.  */\n-/* { dg-prune-output \"(.*GCC vector passed by reference.*|.*ABI of * passing parameter with.*)\" } */\n+/* { dg-prune-output \"(.*GCC vector passed by reference.*|.*ABI for * passing parameters with.*)\" } */"}, {"sha": "8496460d28c293ea68ad06ac14ebf59b66e522c1", "filename": "gcc/testsuite/gcc.dg/torture/va-arg-25.c", "status": "renamed", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fva-arg-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fva-arg-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fva-arg-25.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,6 +1,11 @@\n /* Varargs and vectors!  */\n \n+/* { dg-do run } */\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-require-effective-target sse_runtime { target { i?86-*-* x86_64-*-* } } } */\n+\n #include <stdarg.h>\n+#include <stdlib.h>\n #include <limits.h>\n \n #define vector __attribute__((vector_size(16)))", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/va-arg-25.c"}, {"sha": "9ab78aaf53e353e98ce16fc21c50324f2de89dd8", "filename": "gcc/testsuite/gcc.dg/torture/vector-1.c", "status": "renamed", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-1.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,5 +1,9 @@\n /* Check that vector extraction works correctly. */\n \n+/* { dg-do run } */\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-require-effective-target sse_runtime { target { i?86-*-* x86_64-*-* } } } */\n+\n #define vector __attribute__((vector_size(16) ))\n \n int f0(vector int t)", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/vector-1.c"}, {"sha": "bff9f82cdad26879f3bf3f5ccb27ac9d4840dae3", "filename": "gcc/testsuite/gcc.dg/torture/vector-2.c", "status": "renamed", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fvector-2.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,5 +1,9 @@\n /* Check that vector insertion works correctly. */\n \n+/* { dg-do run } */\n+/* { dg-options \"-msse\" { target { i?86-*-* x86_64-*-* } } } */\n+/* { dg-require-effective-target sse_runtime { target { i?86-*-* x86_64-*-* } } } */\n+\n #define vector __attribute__((vector_size(16) ))\n \n vector int f0(vector int t, int a)", "previous_filename": "gcc/testsuite/gcc.c-torture/execute/vector-2.c"}, {"sha": "033c60dae0a1e9e237f5de7383e0091339d78b67", "filename": "gcc/testsuite/gcc.dg/tree-ssa/forwprop-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fforwprop-5.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-optimized -w\" } */\n+/* { dg-options \"-O1 -fdump-tree-optimized -w -msse\" { target { i?86-*-* x86_64-*-* } } } */\n \n #define vector __attribute__((vector_size(16) ))\n struct VecClass"}, {"sha": "599d1f1efd50d125aaefc09d00d4f283f3948dfc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/fre-vce-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ffre-vce-1.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,4 +1,5 @@\n /* { dg-options \"-O2 -fdump-tree-fre -w\" } */\n+/* { dg-options \"-O2 -fdump-tree-fre -w -msse\" { target { i?86-*-* x86_64-*-* } } } */\n /* { dg-do compile } */\n #define vector __attribute__((vector_size(sizeof(int)*4) ))\n struct s { vector int i; };"}, {"sha": "e6ca7561f7f6ea4d4e51e3494930d2b22d89f8a8", "filename": "gcc/testsuite/gcc.dg/tree-ssa/sra-4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fsra-4.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-optimized -w\" } */\n-/* Check that SRA replaces strucutres containing vectors. */\n+/* { dg-options \"-O1 -fdump-tree-optimized -w -msse\" { target { i?86-*-* x86_64-*-* } } } */\n+/* Check that SRA replaces structures containing vectors. */\n \n #define vector __attribute__((vector_size(16)))\n "}, {"sha": "6fe0e872bb9845d70e043fc588055b6904c080c7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vector-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-1.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-w -O1 -fdump-tree-gimple\" } */\n+/* { dg-options \"-w -O1 -fdump-tree-gimple -msse\" { target { i?86-*-* x86_64-*-* } } } */\n \n \n /* We should be able to produce a BIT_FIELD_REF for each of these vector access. */"}, {"sha": "e34532d3faa5422abce3d1f9ade4a5a99fc140b6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/vector-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fvector-2.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-w -O1 -fdump-tree-optimized\" } */\n+/* { dg-options \"-w -O1 -fdump-tree-optimized -msse\" { target { i?86-*-* x86_64-*-* } } } */\n \n #define vector __attribute__(( vector_size(16) ))\n "}, {"sha": "fc458896ea1ad43fe4be78372e3530a2cfda39e6", "filename": "gcc/testsuite/gcc.target/i386/vect-args.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-args.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8efea7a67353d067c0d94cf4cf7d7f377a337cc0/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-args.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fvect-args.c?ref=8efea7a67353d067c0d94cf4cf7d7f377a337cc0", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-w\" } */\n+/* { dg-options \"-w -Wno-psabi\" } */\n \n /* SSE1 and SSE2 modes.  */\n typedef unsigned char V16QImode __attribute__((vector_size(16)));"}]}