{"sha": "ce6e914727336e47ee2d336d13b1fc787342215d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U2ZTkxNDcyNzMzNmU0N2VlMmQzMzZkMTNiMWZjNzg3MzQyMjE1ZA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-05-13T14:33:37Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-05-13T14:33:37Z"}, "message": "check-init.c (check_init): Removed code accepting to see things falling through default:, when doing xrefs.\n\nThu May 13 13:23:38 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* check-init.c (check_init): Removed code accepting to see things\n\tfalling through default:, when doing xrefs.\n\t* java-tree.h (do_not_fold): New global variable, declared.\n\t* parse.y (do_not_fold): New global variable, defined.\n\t(java_complete_expand_method): Set `do_not_fold' to the value of\n \t`flag_emit_xref'. When doing xrefs: copy the thrown exceptions,\n \tand reinstall them after them have been purged; do not check for\n \tinitializations; do not issue missing return errors.\n\t(java_complete_lhs): Do not attempt to patch INSTANCEOF_EXPR nodes\n \twhen doing xrefs.\n\t(patch_binop): Skip the fold part when doing xrefs.\n\t(build_string_concatenation): Skip the concatenation part when\n \tdoing xrefs.\n\t(patch_synchronized_statement): Do not generate a try-finally when\n \tdoing xrefs.\n\t(patch_throw_statement): When doing xrefs, do not call BUILD_THROW\n \tand keep the location where the throw was seen.\n\t* typeck.c (convert): When `do_not_fold' is set, do not attempt\n \tany treatment on the converted node an simply return a NOP_EXPR of\n \tthe targeted type.\n\t* xref.c (xref_get_data): New function, defined.\n\t* xref.h (xref_get_data): New function, declared.\n\t(XREF_GET_DATA): Use xref_get_data.\n\nFrom-SVN: r26926", "tree": {"sha": "8b33779181f3c705df69fddd4b380a96ae56cb2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b33779181f3c705df69fddd4b380a96ae56cb2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce6e914727336e47ee2d336d13b1fc787342215d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce6e914727336e47ee2d336d13b1fc787342215d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce6e914727336e47ee2d336d13b1fc787342215d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce6e914727336e47ee2d336d13b1fc787342215d/comments", "author": null, "committer": null, "parents": [{"sha": "19ba816140b04fd28edfb4d25c5618f4fdec89bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19ba816140b04fd28edfb4d25c5618f4fdec89bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19ba816140b04fd28edfb4d25c5618f4fdec89bc"}], "stats": {"total": 997, "additions": 555, "deletions": 442}, "files": [{"sha": "a589edab3b1150d0226a4dac3cf3aae6f5754982", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=ce6e914727336e47ee2d336d13b1fc787342215d", "patch": "@@ -1,3 +1,29 @@\n+Thu May 13 13:23:38 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* check-init.c (check_init): Removed code accepting to see things\n+\tfalling through default:, when doing xrefs.\n+\t* java-tree.h (do_not_fold): New global variable, declared.\n+\t* parse.y (do_not_fold): New global variable, defined.\n+\t(java_complete_expand_method): Set `do_not_fold' to the value of\n+ \t`flag_emit_xref'. When doing xrefs: copy the thrown exceptions,\n+ \tand reinstall them after them have been purged; do not check for\n+ \tinitializations; do not issue missing return errors.\n+\t(java_complete_lhs): Do not attempt to patch INSTANCEOF_EXPR nodes\n+ \twhen doing xrefs.\n+\t(patch_binop): Skip the fold part when doing xrefs.\n+\t(build_string_concatenation): Skip the concatenation part when\n+ \tdoing xrefs.\n+\t(patch_synchronized_statement): Do not generate a try-finally when\n+ \tdoing xrefs.\n+\t(patch_throw_statement): When doing xrefs, do not call BUILD_THROW\n+ \tand keep the location where the throw was seen.\n+\t* typeck.c (convert): When `do_not_fold' is set, do not attempt\n+ \tany treatment on the converted node an simply return a NOP_EXPR of\n+ \tthe targeted type.\n+\t* xref.c (xref_get_data): New function, defined.\n+\t* xref.h (xref_get_data): New function, declared.\n+\t(XREF_GET_DATA): Use xref_get_data.\n+\t\n 1999-05-13  Kaveh R. Ghazi  <ghazi@snafu.rutgers.edu>\n \n         * gjavah.c (print_include): Cast the result of `strlen' to int\n@@ -123,7 +149,7 @@ Fri Apr 30 17:54:40 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \t(resolve_qualified_expression_name): Check for illegal use of\n  \tstatic fields in a non static context. Call static_ref_err to\n  \treport error in various places.\n-\t(java_complete_tree): To not fold initialized static fields when\n+\t(java_complete_tree): Do not fold initialized static fields when\n  \tdoing xrefs.\n \t(java_complete_lhs): Likewise.\n "}, {"sha": "071faf74924c157f9f217e2ff0aa6cbecb32aaac", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=ce6e914727336e47ee2d336d13b1fc787342215d", "patch": "@@ -700,9 +700,6 @@ check_init (exp, before)\n       break;\n       \n     default:\n-      /* It's OK to see that when doing xrefs. */\n-      if (TREE_CODE (exp) == TYPE_DECL && flag_emit_xref)\n-\tbreak;\n       fatal (\"internal error in check-init: tree code not implemented: %s\",\n \t    tree_code_name [(int) TREE_CODE (exp)]);\n     }"}, {"sha": "be1f14375c0eb31d04cfbc5c7157cc0a3945dc41", "filename": "gcc/java/java-tree.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fjava-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fjava-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjava-tree.h?ref=ce6e914727336e47ee2d336d13b1fc787342215d", "patch": "@@ -132,6 +132,9 @@ extern int flag_emit_class_files;\n \n extern int flag_emit_xref;\n \n+/* When doing xrefs, tell when not to fold.   */\n+extern int do_not_fold;\n+\n /* Turned to 1 if -Wall was encountered. See lang.c for their meanings.  */\n extern int flag_wall;\n extern int flag_redundant;"}, {"sha": "56e30d3c2cf3fded470fd98481960e0c795b3512", "filename": "gcc/java/parse.c", "status": "modified", "additions": 470, "deletions": 432, "changes": 902, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.c?ref=ce6e914727336e47ee2d336d13b1fc787342215d", "patch": "@@ -323,6 +323,8 @@ static void static_ref_err PROTO ((tree, tree, tree));\n int java_error_count; \n /* Number of warning found so far. */\n int java_warning_count;\n+/* Tell when not to fold, when doing xrefs */\n+int do_not_fold;\n \n /* The current parser context */\n struct parser_ctxt *ctxp;\n@@ -373,7 +375,7 @@ static tree java_lang_cloneable = NULL_TREE;\n static tree current_static_block = NULL_TREE;\n \n \n-#line 301 \"./parse.y\"\n+#line 303 \"./parse.y\"\n typedef union {\n   tree node;\n   int sub_token;\n@@ -383,7 +385,7 @@ typedef union {\n   } operator;\n   int value;\n } YYSTYPE;\n-#line 311 \"./parse.y\"\n+#line 313 \"./parse.y\"\n \n #include \"lex.c\"\n #ifndef YYDEBUG\n@@ -680,56 +682,56 @@ static const short yyrhs[] = {   123,\n \n #if YYDEBUG != 0\n static const short yyrline[] = { 0,\n-   455,   461,   463,   464,   465,   466,   467,   471,   473,   476,\n-   478,   479,   482,   484,   487,   491,   495,   499,   505,   507,\n-   509,   511,   516,   518,   521,   525,   530,   535,   537,   538,\n-   539,   540,   541,   542,   543,   546,   551,   557,   559,   562,\n-   565,   567,   571,   573,   576,   603,   605,   609,   622,   624,\n-   628,   635,   640,   642,   652,   657,   672,   676,   679,   682,\n-   685,   687,   689,   694,   698,   700,   702,   704,   708,   710,\n-   712,   719,   725,   730,   734,   743,   753,   755,   758,   760,\n-   761,   762,   766,   768,   770,   771,   773,   778,   781,   791,\n-   794,   796,   800,   803,   810,   816,   824,   826,   828,   830,\n-   832,   836,   838,   842,   849,   850,   854,   857,   859,   861,\n-   863,   865,   867,   869,   871,   878,   881,   883,   892,   894,\n-   898,   903,   908,   912,   917,   919,   921,   928,   930,   932,\n-   936,   939,   941,   945,   947,   948,   953,   959,   966,   974,\n-   981,   984,   987,   991,   994,   998,  1007,  1009,  1011,  1016,\n-  1023,  1031,  1033,  1037,  1044,  1054,  1058,  1061,  1064,  1067,\n-  1070,  1073,  1076,  1079,  1081,  1085,  1091,  1096,  1098,  1102,\n-  1105,  1109,  1111,  1114,  1116,  1117,  1119,  1123,  1127,  1133,\n-  1138,  1141,  1143,  1147,  1153,  1157,  1162,  1171,  1175,  1180,\n-  1192,  1194,  1197,  1199,  1201,  1205,  1209,  1212,  1216,  1218,\n-  1219,  1220,  1221,  1222,  1226,  1228,  1229,  1230,  1231,  1234,\n-  1236,  1237,  1238,  1239,  1240,  1241,  1242,  1243,  1244,  1245,\n-  1248,  1253,  1264,  1267,  1271,  1278,  1288,  1294,  1300,  1306,\n-  1308,  1314,  1316,  1322,  1324,  1326,  1328,  1330,  1334,  1336,\n-  1337,  1338,  1339,  1340,  1341,  1344,  1350,  1352,  1354,  1358,\n-  1363,  1368,  1374,  1384,  1390,  1392,  1394,  1401,  1404,  1406,\n-  1408,  1412,  1414,  1417,  1421,  1423,  1426,  1433,  1439,  1441,\n-  1443,  1447,  1455,  1458,  1460,  1462,  1466,  1471,  1480,  1485,\n-  1488,  1495,  1497,  1499,  1503,  1506,  1515,  1522,  1524,  1528,\n-  1541,  1543,  1549,  1555,  1559,  1561,  1565,  1568,  1570,  1574,\n-  1577,  1579,  1581,  1585,  1588,  1590,  1592,  1596,  1599,  1601,\n-  1603,  1607,  1613,  1615,  1619,  1626,  1628,  1630,  1632,  1636,\n-  1644,  1647,  1649,  1654,  1658,  1660,  1667,  1675,  1692,  1694,\n-  1696,  1700,  1703,  1708,  1710,  1713,  1715,  1717,  1719,  1720,\n-  1721,  1722,  1726,  1728,  1730,  1735,  1737,  1739,  1741,  1743,\n-  1747,  1750,  1755,  1757,  1762,  1763,  1764,  1765,  1766,  1768,\n-  1770,  1772,  1774,  1776,  1780,  1782,  1785,  1791,  1796,  1800,\n-  1803,  1805,  1807,  1811,  1813,  1815,  1817,  1821,  1824,  1828,\n-  1834,  1836,  1844,  1871,  1873,  1877,  1882,  1889,  1893,  1896,\n-  1898,  1909,  1920,  1925,  1934,  1936,  1940,  1943,  1945,  1950,\n-  1955,  1960,  1967,  1969,  1970,  1971,  1974,  1979,  1984,  1986,\n-  1987,  1989,  1991,  1992,  1994,  1998,  2001,  2005,  2008,  2012,\n-  2014,  2016,  2018,  2019,  2021,  2025,  2034,  2036,  2038,  2051,\n-  2053,  2059,  2061,  2063,  2067,  2069,  2074,  2079,  2084,  2086,\n-  2088,  2092,  2094,  2099,  2104,  2106,  2110,  2112,  2117,  2122,\n-  2127,  2129,  2131,  2135,  2137,  2142,  2147,  2152,  2157,  2159,\n-  2161,  2163,  2165,  2167,  2171,  2173,  2178,  2183,  2185,  2189,\n-  2191,  2196,  2200,  2202,  2207,  2211,  2213,  2218,  2222,  2224,\n-  2229,  2233,  2235,  2240,  2244,  2246,  2251,  2257,  2259,  2263,\n-  2265,  2268,  2271,  2279,  2281,  2282,  2285,  2287,  2290,  2294\n+   457,   463,   465,   466,   467,   468,   469,   473,   475,   478,\n+   480,   481,   484,   486,   489,   493,   497,   501,   507,   509,\n+   511,   513,   518,   520,   523,   527,   532,   537,   539,   540,\n+   541,   542,   543,   544,   545,   548,   553,   559,   561,   564,\n+   567,   569,   573,   575,   578,   605,   607,   611,   624,   626,\n+   630,   637,   642,   644,   654,   659,   674,   678,   681,   684,\n+   687,   689,   691,   696,   700,   702,   704,   706,   710,   712,\n+   714,   721,   727,   732,   736,   745,   755,   757,   760,   762,\n+   763,   764,   768,   770,   772,   773,   775,   780,   783,   793,\n+   796,   798,   802,   805,   812,   818,   826,   828,   830,   832,\n+   834,   838,   840,   844,   851,   852,   856,   859,   861,   863,\n+   865,   867,   869,   871,   873,   880,   883,   885,   894,   896,\n+   900,   905,   910,   914,   919,   921,   923,   930,   932,   934,\n+   938,   941,   943,   947,   949,   950,   955,   961,   968,   976,\n+   983,   986,   989,   993,   996,  1000,  1009,  1011,  1013,  1018,\n+  1025,  1033,  1035,  1039,  1046,  1056,  1060,  1063,  1066,  1069,\n+  1072,  1075,  1078,  1081,  1083,  1087,  1093,  1098,  1100,  1104,\n+  1107,  1111,  1113,  1116,  1118,  1119,  1121,  1125,  1129,  1135,\n+  1140,  1143,  1145,  1149,  1155,  1159,  1164,  1173,  1177,  1182,\n+  1194,  1196,  1199,  1201,  1203,  1207,  1211,  1214,  1218,  1220,\n+  1221,  1222,  1223,  1224,  1228,  1230,  1231,  1232,  1233,  1236,\n+  1238,  1239,  1240,  1241,  1242,  1243,  1244,  1245,  1246,  1247,\n+  1250,  1255,  1266,  1269,  1273,  1280,  1290,  1296,  1302,  1308,\n+  1310,  1316,  1318,  1324,  1326,  1328,  1330,  1332,  1336,  1338,\n+  1339,  1340,  1341,  1342,  1343,  1346,  1352,  1354,  1356,  1360,\n+  1365,  1370,  1376,  1386,  1392,  1394,  1396,  1403,  1406,  1408,\n+  1410,  1414,  1416,  1419,  1423,  1425,  1428,  1435,  1441,  1443,\n+  1445,  1449,  1457,  1460,  1462,  1464,  1468,  1473,  1482,  1487,\n+  1490,  1497,  1499,  1501,  1505,  1508,  1517,  1524,  1526,  1530,\n+  1543,  1545,  1551,  1557,  1561,  1563,  1567,  1570,  1572,  1576,\n+  1579,  1581,  1583,  1587,  1590,  1592,  1594,  1598,  1601,  1603,\n+  1605,  1609,  1615,  1617,  1621,  1628,  1630,  1632,  1634,  1638,\n+  1646,  1649,  1651,  1656,  1660,  1662,  1669,  1677,  1694,  1696,\n+  1698,  1702,  1705,  1710,  1712,  1715,  1717,  1719,  1721,  1722,\n+  1723,  1724,  1728,  1730,  1732,  1737,  1739,  1741,  1743,  1745,\n+  1749,  1752,  1757,  1759,  1764,  1765,  1766,  1767,  1768,  1770,\n+  1772,  1774,  1776,  1778,  1782,  1784,  1787,  1793,  1798,  1802,\n+  1805,  1807,  1809,  1813,  1815,  1817,  1819,  1823,  1826,  1830,\n+  1836,  1838,  1846,  1873,  1875,  1879,  1884,  1891,  1895,  1898,\n+  1900,  1911,  1922,  1927,  1936,  1938,  1942,  1945,  1947,  1952,\n+  1957,  1962,  1969,  1971,  1972,  1973,  1976,  1981,  1986,  1988,\n+  1989,  1991,  1993,  1994,  1996,  2000,  2003,  2007,  2010,  2014,\n+  2016,  2018,  2020,  2021,  2023,  2027,  2036,  2038,  2040,  2053,\n+  2055,  2061,  2063,  2065,  2069,  2071,  2076,  2081,  2086,  2088,\n+  2090,  2094,  2096,  2101,  2106,  2108,  2112,  2114,  2119,  2124,\n+  2129,  2131,  2133,  2137,  2139,  2144,  2149,  2154,  2159,  2161,\n+  2163,  2165,  2167,  2169,  2173,  2175,  2180,  2185,  2187,  2191,\n+  2193,  2198,  2202,  2204,  2209,  2213,  2215,  2220,  2224,  2226,\n+  2231,  2235,  2237,  2242,  2246,  2248,  2253,  2259,  2261,  2265,\n+  2267,  2270,  2273,  2281,  2283,  2284,  2287,  2289,  2292,  2296\n };\n #endif\n \n@@ -2227,7 +2229,7 @@ static const short yycheck[] = {     3,\n #define YYPURE 1\n \n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/local/share/bison.simple\"\n+#line 3 \"/usr/lib/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -2420,7 +2422,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/local/share/bison.simple\"\n+#line 196 \"/usr/lib/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -2725,66 +2727,66 @@ yyparse(YYPARSE_PARAM_ARG)\n   switch (yyn) {\n \n case 1:\n-#line 457 \"./parse.y\"\n+#line 459 \"./parse.y\"\n {;\n     break;}\n case 18:\n-#line 501 \"./parse.y\"\n+#line 503 \"./parse.y\"\n { \n \t\t  yyval.node = build_java_array_type (yyvsp[-2].node, -1);\n \t\t  CLASS_LOADED_P (yyval.node) = 1;\n \t\t;\n     break;}\n case 19:\n-#line 506 \"./parse.y\"\n+#line 508 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 20:\n-#line 508 \"./parse.y\"\n+#line 510 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 21:\n-#line 510 \"./parse.y\"\n+#line 512 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 22:\n-#line 512 \"./parse.y\"\n+#line 514 \"./parse.y\"\n {RULE (\"']' expected\"); RECOVER;;\n     break;}\n case 26:\n-#line 527 \"./parse.y\"\n+#line 529 \"./parse.y\"\n { yyval.node = make_qualified_name (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 28:\n-#line 536 \"./parse.y\"\n+#line 538 \"./parse.y\"\n {yyval.node = NULL;;\n     break;}\n case 36:\n-#line 548 \"./parse.y\"\n+#line 550 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 37:\n-#line 552 \"./parse.y\"\n+#line 554 \"./parse.y\"\n {\n \t\t  yyval.node = NULL;\n \t\t;\n     break;}\n case 40:\n-#line 564 \"./parse.y\"\n+#line 566 \"./parse.y\"\n { ctxp->package = EXPR_WFL_NODE (yyvsp[-1].node); ;\n     break;}\n case 41:\n-#line 566 \"./parse.y\"\n+#line 568 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 42:\n-#line 568 \"./parse.y\"\n+#line 570 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 45:\n-#line 578 \"./parse.y\"\n+#line 580 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-1].node), node, last_name;\n \t\t  int   i = IDENTIFIER_LENGTH (name)-1;\n@@ -2812,15 +2814,15 @@ case 45:\n \t\t;\n     break;}\n case 46:\n-#line 604 \"./parse.y\"\n+#line 606 \"./parse.y\"\n {yyerror (\"Missing name\"); RECOVER;;\n     break;}\n case 47:\n-#line 606 \"./parse.y\"\n+#line 608 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 48:\n-#line 611 \"./parse.y\"\n+#line 613 \"./parse.y\"\n {\n \t\t  tree name = EXPR_WFL_NODE (yyvsp[-3].node);\n \t\t  /* Don't import java.lang.* twice. */\n@@ -2834,47 +2836,47 @@ case 48:\n \t\t;\n     break;}\n case 49:\n-#line 623 \"./parse.y\"\n+#line 625 \"./parse.y\"\n {yyerror (\"'*' expected\"); RECOVER;;\n     break;}\n case 50:\n-#line 625 \"./parse.y\"\n+#line 627 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 51:\n-#line 630 \"./parse.y\"\n+#line 632 \"./parse.y\"\n {\n \t\t  maybe_generate_finit ();\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 52:\n-#line 636 \"./parse.y\"\n+#line 638 \"./parse.y\"\n {\n \t\t  maybe_generate_clinit ();\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 53:\n-#line 641 \"./parse.y\"\n+#line 643 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 54:\n-#line 643 \"./parse.y\"\n+#line 645 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Class or interface declaration expected\");\n \t\t;\n     break;}\n case 55:\n-#line 654 \"./parse.y\"\n+#line 656 \"./parse.y\"\n {\n \t\t  yyval.value = (1 << yyvsp[0].value);\n \t\t;\n     break;}\n case 56:\n-#line 658 \"./parse.y\"\n+#line 660 \"./parse.y\"\n {\n \t\t  int acc = (1 << yyvsp[0].value);\n \t\t  if (yyval.value & acc)\n@@ -2888,95 +2890,95 @@ case 56:\n \t\t;\n     break;}\n case 57:\n-#line 674 \"./parse.y\"\n+#line 676 \"./parse.y\"\n { create_class (yyvsp[-4].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 58:\n-#line 676 \"./parse.y\"\n+#line 678 \"./parse.y\"\n { \n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 59:\n-#line 680 \"./parse.y\"\n+#line 682 \"./parse.y\"\n { create_class (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 60:\n-#line 682 \"./parse.y\"\n+#line 684 \"./parse.y\"\n { \t\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 61:\n-#line 686 \"./parse.y\"\n+#line 688 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 62:\n-#line 688 \"./parse.y\"\n+#line 690 \"./parse.y\"\n {yyerror (\"Missing class name\"); RECOVER;;\n     break;}\n case 63:\n-#line 690 \"./parse.y\"\n+#line 692 \"./parse.y\"\n {\n \t\t  if (!ctxp->class_err) yyerror (\"'{' expected\"); \n \t\t  DRECOVER(class1);\n \t\t;\n     break;}\n case 64:\n-#line 695 \"./parse.y\"\n+#line 697 \"./parse.y\"\n {if (!ctxp->class_err) yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 65:\n-#line 699 \"./parse.y\"\n+#line 701 \"./parse.y\"\n { yyval.node = NULL; ;\n     break;}\n case 66:\n-#line 701 \"./parse.y\"\n+#line 703 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 67:\n-#line 703 \"./parse.y\"\n+#line 705 \"./parse.y\"\n {yyerror (\"'{' expected\"); ctxp->class_err=1;;\n     break;}\n case 68:\n-#line 705 \"./parse.y\"\n+#line 707 \"./parse.y\"\n {yyerror (\"Missing super class name\"); ctxp->class_err=1;;\n     break;}\n case 69:\n-#line 709 \"./parse.y\"\n+#line 711 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 70:\n-#line 711 \"./parse.y\"\n+#line 713 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 71:\n-#line 713 \"./parse.y\"\n+#line 715 \"./parse.y\"\n {\n \t\t  ctxp->class_err=1;\n \t\t  yyerror (\"Missing interface name\"); \n \t\t;\n     break;}\n case 72:\n-#line 721 \"./parse.y\"\n+#line 723 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 73:\n-#line 726 \"./parse.y\"\n+#line 728 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 74:\n-#line 731 \"./parse.y\"\n+#line 733 \"./parse.y\"\n {yyerror (\"Missing interface name\"); RECOVER;;\n     break;}\n case 75:\n-#line 736 \"./parse.y\"\n+#line 738 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2986,7 +2988,7 @@ case 75:\n \t\t;\n     break;}\n case 76:\n-#line 744 \"./parse.y\"\n+#line 746 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (flag_emit_xref)\n@@ -2996,27 +2998,27 @@ case 76:\n \t\t;\n     break;}\n case 82:\n-#line 763 \"./parse.y\"\n+#line 765 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"instance initializer\"); ;\n     break;}\n case 84:\n-#line 769 \"./parse.y\"\n+#line 771 \"./parse.y\"\n { yyval.node = yyvsp[-1].node; ;\n     break;}\n case 86:\n-#line 772 \"./parse.y\"\n+#line 774 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner classe declaration\"); ;\n     break;}\n case 87:\n-#line 774 \"./parse.y\"\n+#line 776 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 88:\n-#line 780 \"./parse.y\"\n+#line 782 \"./parse.y\"\n { register_fields (0, yyvsp[-2].node, yyvsp[-1].node); ;\n     break;}\n case 89:\n-#line 782 \"./parse.y\"\n+#line 784 \"./parse.y\"\n {\n \t\t  check_modifiers \n \t\t    (\"Illegal modifier `%s' for field declaration\",\n@@ -3026,19 +3028,19 @@ case 89:\n \t\t;\n     break;}\n case 91:\n-#line 795 \"./parse.y\"\n+#line 797 \"./parse.y\"\n { yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 92:\n-#line 797 \"./parse.y\"\n+#line 799 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 93:\n-#line 802 \"./parse.y\"\n+#line 804 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 94:\n-#line 804 \"./parse.y\"\n+#line 806 \"./parse.y\"\n { \n \t\t  if (java_error_count)\n \t\t    yyvsp[0].node = NULL_TREE;\n@@ -3047,101 +3049,101 @@ case 94:\n \t\t;\n     break;}\n case 95:\n-#line 811 \"./parse.y\"\n+#line 813 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing variable initializer\");\n \t\t  yyval.node = build_tree_list (yyvsp[-2].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 96:\n-#line 817 \"./parse.y\"\n+#line 819 \"./parse.y\"\n {\n \t\t  yyerror (\"';' expected\");\n \t\t  yyval.node = build_tree_list (yyvsp[-3].node, NULL_TREE);\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 98:\n-#line 827 \"./parse.y\"\n+#line 829 \"./parse.y\"\n { yyval.node = build_unresolved_array_type (yyvsp[-2].node); ;\n     break;}\n case 99:\n-#line 829 \"./parse.y\"\n+#line 831 \"./parse.y\"\n {yyerror (\"Invalid declaration\"); DRECOVER(vdi);;\n     break;}\n case 100:\n-#line 831 \"./parse.y\"\n+#line 833 \"./parse.y\"\n {yyerror (\"']' expected\"); DRECOVER(vdi);;\n     break;}\n case 101:\n-#line 833 \"./parse.y\"\n+#line 835 \"./parse.y\"\n {yyerror (\"Unbalanced ']'\"); DRECOVER(vdi);;\n     break;}\n case 104:\n-#line 844 \"./parse.y\"\n+#line 846 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 105:\n-#line 849 \"./parse.y\"\n+#line 851 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 106:\n-#line 851 \"./parse.y\"\n+#line 853 \"./parse.y\"\n {YYNOT_TWICE yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 107:\n-#line 856 \"./parse.y\"\n+#line 858 \"./parse.y\"\n { yyval.node = method_header (0, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 108:\n-#line 858 \"./parse.y\"\n+#line 860 \"./parse.y\"\n { yyval.node = method_header (0, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 109:\n-#line 860 \"./parse.y\"\n+#line 862 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, yyvsp[-2].node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 110:\n-#line 862 \"./parse.y\"\n+#line 864 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-3].value, void_type_node, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 111:\n-#line 864 \"./parse.y\"\n+#line 866 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 112:\n-#line 866 \"./parse.y\"\n+#line 868 \"./parse.y\"\n {RECOVER;;\n     break;}\n case 113:\n-#line 868 \"./parse.y\"\n+#line 870 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 114:\n-#line 870 \"./parse.y\"\n+#line 872 \"./parse.y\"\n {yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 115:\n-#line 872 \"./parse.y\"\n+#line 874 \"./parse.y\"\n {\n \t\t  yyerror (\"Invalid method declaration, return type required\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 116:\n-#line 880 \"./parse.y\"\n+#line 882 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 117:\n-#line 882 \"./parse.y\"\n+#line 884 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 118:\n-#line 884 \"./parse.y\"\n+#line 886 \"./parse.y\"\n {\n \t\t  EXPR_WFL_LINECOL (wfl_operator) = yyvsp[-1].operator.location;\n \t\t  TREE_PURPOSE (yyvsp[-2].node) = \n@@ -3152,313 +3154,313 @@ case 118:\n \t\t;\n     break;}\n case 119:\n-#line 893 \"./parse.y\"\n+#line 895 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER(method_declarator);;\n     break;}\n case 120:\n-#line 895 \"./parse.y\"\n+#line 897 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 121:\n-#line 900 \"./parse.y\"\n+#line 902 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number = 1;\n \t\t;\n     break;}\n case 122:\n-#line 904 \"./parse.y\"\n+#line 906 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = chainon (yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 123:\n-#line 909 \"./parse.y\"\n+#line 911 \"./parse.y\"\n {yyerror (\"Missing formal parameter term\"); RECOVER;;\n     break;}\n case 124:\n-#line 914 \"./parse.y\"\n+#line 916 \"./parse.y\"\n {\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, yyvsp[-1].node);\n \t\t;\n     break;}\n case 125:\n-#line 918 \"./parse.y\"\n+#line 920 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"final parameters\"); ;\n     break;}\n case 126:\n-#line 920 \"./parse.y\"\n+#line 922 \"./parse.y\"\n {yyerror (\"Missing identifier\"); RECOVER;;\n     break;}\n case 127:\n-#line 922 \"./parse.y\"\n+#line 924 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[-2].value));\n \t\t  yyerror (\"Missing identifier\"); RECOVER;\n \t\t;\n     break;}\n case 128:\n-#line 929 \"./parse.y\"\n+#line 931 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 129:\n-#line 931 \"./parse.y\"\n+#line 933 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 130:\n-#line 933 \"./parse.y\"\n+#line 935 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 131:\n-#line 938 \"./parse.y\"\n+#line 940 \"./parse.y\"\n { yyval.node = build_tree_list (yyvsp[0].node, yyvsp[0].node); ;\n     break;}\n case 132:\n-#line 940 \"./parse.y\"\n+#line 942 \"./parse.y\"\n { yyval.node = tree_cons (yyvsp[0].node, yyvsp[0].node, yyvsp[-2].node); ;\n     break;}\n case 133:\n-#line 942 \"./parse.y\"\n+#line 944 \"./parse.y\"\n {yyerror (\"Missing class type term\"); RECOVER;;\n     break;}\n case 136:\n-#line 949 \"./parse.y\"\n+#line 951 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 137:\n-#line 955 \"./parse.y\"\n+#line 957 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[0].node;\n \t\t;\n     break;}\n case 138:\n-#line 960 \"./parse.y\"\n+#line 962 \"./parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[-1].node) = ctxp->static_initialized;\n \t\t  ctxp->static_initialized = yyvsp[-1].node;\n \t\t;\n     break;}\n case 139:\n-#line 968 \"./parse.y\"\n+#line 970 \"./parse.y\"\n {\n \t\t  SOURCE_FRONTEND_DEBUG ((\"Modifiers: %d\", yyvsp[0].value));\n \t\t;\n     break;}\n case 140:\n-#line 976 \"./parse.y\"\n+#line 978 \"./parse.y\"\n {\n \t\t  current_function_decl = yyvsp[0].node;\n \t\t  source_start_java_method (current_function_decl);\n \t\t;\n     break;}\n case 141:\n-#line 981 \"./parse.y\"\n+#line 983 \"./parse.y\"\n { finish_method_declaration (yyvsp[0].node); ;\n     break;}\n case 142:\n-#line 986 \"./parse.y\"\n+#line 988 \"./parse.y\"\n { yyval.node = method_header (0, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 143:\n-#line 988 \"./parse.y\"\n+#line 990 \"./parse.y\"\n { yyval.node = method_header (yyvsp[-2].value, NULL_TREE, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 144:\n-#line 993 \"./parse.y\"\n+#line 995 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 145:\n-#line 995 \"./parse.y\"\n+#line 997 \"./parse.y\"\n { yyval.node = method_declarator (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 146:\n-#line 1003 \"./parse.y\"\n+#line 1005 \"./parse.y\"\n { \n \t\t  BLOCK_EXPR_BODY (yyvsp[0].node) = empty_stmt_node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 147:\n-#line 1008 \"./parse.y\"\n+#line 1010 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 148:\n-#line 1010 \"./parse.y\"\n+#line 1012 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 149:\n-#line 1012 \"./parse.y\"\n+#line 1014 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 150:\n-#line 1018 \"./parse.y\"\n+#line 1020 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-3].node, NULL_TREE); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-3].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 151:\n-#line 1024 \"./parse.y\"\n+#line 1026 \"./parse.y\"\n { \n \t\t  yyval.node = build_method_invocation (yyvsp[-4].node, yyvsp[-2].node); \n \t\t  yyval.node = build_debugable_stmt (EXPR_WFL_LINECOL (yyvsp[-4].node), yyval.node);\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyval.node);\n \t\t;\n     break;}\n case 152:\n-#line 1032 \"./parse.y\"\n+#line 1034 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 153:\n-#line 1034 \"./parse.y\"\n+#line 1036 \"./parse.y\"\n {yyval.node = parse_jdk1_1_error (\"explicit constructor invocation\"); ;\n     break;}\n case 154:\n-#line 1039 \"./parse.y\"\n+#line 1041 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (this_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 155:\n-#line 1045 \"./parse.y\"\n+#line 1047 \"./parse.y\"\n {\n \t\t  tree wfl = build_wfl_node (super_identifier_node);\n \t\t  EXPR_WFL_LINECOL (wfl) = yyvsp[0].operator.location;\n \t\t  yyval.node = wfl;\n \t\t;\n     break;}\n case 156:\n-#line 1056 \"./parse.y\"\n+#line 1058 \"./parse.y\"\n { create_interface (0, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 157:\n-#line 1058 \"./parse.y\"\n+#line 1060 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 158:\n-#line 1062 \"./parse.y\"\n+#line 1064 \"./parse.y\"\n { create_interface (yyvsp[-2].value, yyvsp[0].node, NULL_TREE); ;\n     break;}\n case 159:\n-#line 1064 \"./parse.y\"\n+#line 1066 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 160:\n-#line 1068 \"./parse.y\"\n+#line 1070 \"./parse.y\"\n { create_interface (0, yyvsp[-1].node, yyvsp[0].node);\t;\n     break;}\n case 161:\n-#line 1070 \"./parse.y\"\n+#line 1072 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 162:\n-#line 1074 \"./parse.y\"\n+#line 1076 \"./parse.y\"\n { create_interface (yyvsp[-3].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 163:\n-#line 1076 \"./parse.y\"\n+#line 1078 \"./parse.y\"\n {\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 164:\n-#line 1080 \"./parse.y\"\n+#line 1082 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 165:\n-#line 1082 \"./parse.y\"\n+#line 1084 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 166:\n-#line 1087 \"./parse.y\"\n+#line 1089 \"./parse.y\"\n { \n \t\t  ctxp->interface_number = 1;\n \t\t  yyval.node = build_tree_list (yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 167:\n-#line 1092 \"./parse.y\"\n+#line 1094 \"./parse.y\"\n { \n \t\t  ctxp->interface_number++;\n \t\t  yyval.node = chainon (yyvsp[-2].node, build_tree_list (yyvsp[0].node, NULL_TREE));\n \t\t;\n     break;}\n case 168:\n-#line 1097 \"./parse.y\"\n+#line 1099 \"./parse.y\"\n {yyerror (\"Invalid interface type\"); RECOVER;;\n     break;}\n case 169:\n-#line 1099 \"./parse.y\"\n+#line 1101 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 170:\n-#line 1104 \"./parse.y\"\n+#line 1106 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 171:\n-#line 1106 \"./parse.y\"\n+#line 1108 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 176:\n-#line 1118 \"./parse.y\"\n+#line 1120 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 177:\n-#line 1120 \"./parse.y\"\n+#line 1122 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner interface declaration\"); ;\n     break;}\n case 179:\n-#line 1129 \"./parse.y\"\n+#line 1131 \"./parse.y\"\n { \n \t\t  check_abstract_method_header (yyvsp[-1].node);\n \t\t  current_function_decl = NULL_TREE; /* FIXME ? */\n \t\t;\n     break;}\n case 180:\n-#line 1134 \"./parse.y\"\n+#line 1136 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 181:\n-#line 1140 \"./parse.y\"\n+#line 1142 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 182:\n-#line 1142 \"./parse.y\"\n+#line 1144 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 183:\n-#line 1144 \"./parse.y\"\n+#line 1146 \"./parse.y\"\n { yyval.node = build_new_array_init (yyvsp[-3].operator.location, yyvsp[-2].node); ;\n     break;}\n case 184:\n-#line 1149 \"./parse.y\"\n+#line 1151 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), \n \t\t\t\t  yyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 185:\n-#line 1154 \"./parse.y\"\n+#line 1156 \"./parse.y\"\n {\n \t\t  yyval.node = tree_cons (maybe_build_array_element_wfl (yyvsp[0].node), yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 186:\n-#line 1158 \"./parse.y\"\n+#line 1160 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 187:\n-#line 1164 \"./parse.y\"\n+#line 1166 \"./parse.y\"\n { \n \t\t  /* Store the location of the `}' when doing xrefs */\n \t\t  if (current_function_decl && flag_emit_xref)\n@@ -3468,15 +3470,15 @@ case 187:\n \t\t;\n     break;}\n case 188:\n-#line 1172 \"./parse.y\"\n+#line 1174 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 189:\n-#line 1177 \"./parse.y\"\n+#line 1179 \"./parse.y\"\n { enter_block (); ;\n     break;}\n case 190:\n-#line 1182 \"./parse.y\"\n+#line 1184 \"./parse.y\"\n { \n \t\t  maybe_absorb_scoping_blocks ();\n \t\t  /* Store the location of the `}' when doing xrefs */\n@@ -3487,31 +3489,31 @@ case 190:\n \t\t;\n     break;}\n case 194:\n-#line 1200 \"./parse.y\"\n+#line 1202 \"./parse.y\"\n { java_method_add_stmt (current_function_decl, yyvsp[0].node); ;\n     break;}\n case 195:\n-#line 1202 \"./parse.y\"\n+#line 1204 \"./parse.y\"\n { parse_jdk1_1_error (\"inner class declaration\"); ;\n     break;}\n case 197:\n-#line 1211 \"./parse.y\"\n+#line 1213 \"./parse.y\"\n { declare_local_variables (0, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 198:\n-#line 1213 \"./parse.y\"\n+#line 1215 \"./parse.y\"\n { declare_local_variables (yyvsp[-2].value, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 204:\n-#line 1223 \"./parse.y\"\n+#line 1225 \"./parse.y\"\n { yyval.node = exit_block (); ;\n     break;}\n case 221:\n-#line 1250 \"./parse.y\"\n+#line 1252 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 222:\n-#line 1255 \"./parse.y\"\n+#line 1257 \"./parse.y\"\n {\n \t\t  yyval.node = build_labeled_block (EXPR_WFL_LINECOL (yyvsp[-1].node), \n \t\t\t\t\t    EXPR_WFL_NODE (yyvsp[-1].node));\n@@ -3521,19 +3523,19 @@ case 222:\n \t\t;\n     break;}\n case 223:\n-#line 1266 \"./parse.y\"\n+#line 1268 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 224:\n-#line 1268 \"./parse.y\"\n+#line 1270 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 225:\n-#line 1273 \"./parse.y\"\n+#line 1275 \"./parse.y\"\n { yyval.node = finish_labeled_statement (yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 226:\n-#line 1280 \"./parse.y\"\n+#line 1282 \"./parse.y\"\n {\n \t\t  /* We have a statement. Generate a WFL around it so\n \t\t     we can debug it */\n@@ -3544,108 +3546,108 @@ case 226:\n \t\t;\n     break;}\n case 227:\n-#line 1289 \"./parse.y\"\n+#line 1291 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 228:\n-#line 1295 \"./parse.y\"\n+#line 1297 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 229:\n-#line 1301 \"./parse.y\"\n+#line 1303 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid expression statement\");\n \t\t  DRECOVER (expr_stmt);\n \t\t;\n     break;}\n case 230:\n-#line 1307 \"./parse.y\"\n+#line 1309 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 231:\n-#line 1309 \"./parse.y\"\n+#line 1311 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 232:\n-#line 1315 \"./parse.y\"\n+#line 1317 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 233:\n-#line 1317 \"./parse.y\"\n+#line 1319 \"./parse.y\"\n {\n \t\t  yyerror (\"Constructor invocation must be first \"\n \t\t\t   \"thing in a constructor\"); \n \t\t  RECOVER;\n \t\t;\n     break;}\n case 234:\n-#line 1323 \"./parse.y\"\n+#line 1325 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 235:\n-#line 1325 \"./parse.y\"\n+#line 1327 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 236:\n-#line 1327 \"./parse.y\"\n+#line 1329 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 237:\n-#line 1329 \"./parse.y\"\n+#line 1331 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 238:\n-#line 1331 \"./parse.y\"\n+#line 1333 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 246:\n-#line 1346 \"./parse.y\"\n+#line 1348 \"./parse.y\"\n { \n \t\t  yyval.node = build_if_else_statement (yyvsp[-3].operator.location, yyvsp[-2].node, \n \t\t\t\t\t\tyyvsp[0].node, NULL_TREE);\n \t\t;\n     break;}\n case 247:\n-#line 1351 \"./parse.y\"\n+#line 1353 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 248:\n-#line 1353 \"./parse.y\"\n+#line 1355 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 249:\n-#line 1355 \"./parse.y\"\n+#line 1357 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 250:\n-#line 1360 \"./parse.y\"\n+#line 1362 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 251:\n-#line 1365 \"./parse.y\"\n+#line 1367 \"./parse.y\"\n { yyval.node = build_if_else_statement (yyvsp[-5].operator.location, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 252:\n-#line 1370 \"./parse.y\"\n+#line 1372 \"./parse.y\"\n {\n \t\t  enter_block ();\n \t\t;\n     break;}\n case 253:\n-#line 1374 \"./parse.y\"\n+#line 1376 \"./parse.y\"\n { \n \t\t  /* Make into \"proper list\" of COMPOUND_EXPRs.\n \t\t     I.e. make the last statment also have its own\n@@ -3656,112 +3658,112 @@ case 253:\n \t\t;\n     break;}\n case 254:\n-#line 1386 \"./parse.y\"\n+#line 1388 \"./parse.y\"\n { \n \t\t  yyval.node = build (SWITCH_EXPR, NULL_TREE, yyvsp[-1].node, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 255:\n-#line 1391 \"./parse.y\"\n+#line 1393 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 256:\n-#line 1393 \"./parse.y\"\n+#line 1395 \"./parse.y\"\n {yyerror (\"Missing term or ')'\"); DRECOVER(switch_statement);;\n     break;}\n case 257:\n-#line 1395 \"./parse.y\"\n+#line 1397 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 258:\n-#line 1403 \"./parse.y\"\n+#line 1405 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 259:\n-#line 1405 \"./parse.y\"\n+#line 1407 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 260:\n-#line 1407 \"./parse.y\"\n+#line 1409 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 261:\n-#line 1409 \"./parse.y\"\n+#line 1411 \"./parse.y\"\n { yyval.node = NULL_TREE; ;\n     break;}\n case 267:\n-#line 1428 \"./parse.y\"\n+#line 1430 \"./parse.y\"\n { \n \t\t  tree lab = build1 (CASE_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-2].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 268:\n-#line 1434 \"./parse.y\"\n+#line 1436 \"./parse.y\"\n { \n \t\t  tree lab = build1 (DEFAULT_EXPR, NULL_TREE, NULL_TREE);\n \t\t  EXPR_WFL_LINECOL (lab) = yyvsp[-1].operator.location;\n \t\t  java_method_add_stmt (current_function_decl, lab);\n \t\t;\n     break;}\n case 269:\n-#line 1440 \"./parse.y\"\n+#line 1442 \"./parse.y\"\n {yyerror (\"Missing or invalid constant expression\"); RECOVER;;\n     break;}\n case 270:\n-#line 1442 \"./parse.y\"\n+#line 1444 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 271:\n-#line 1444 \"./parse.y\"\n+#line 1446 \"./parse.y\"\n {yyerror (\"':' expected\"); RECOVER;;\n     break;}\n case 272:\n-#line 1449 \"./parse.y\"\n+#line 1451 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (yyvsp[-2].operator.location, yyvsp[-1].node, 0);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 273:\n-#line 1457 \"./parse.y\"\n+#line 1459 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 274:\n-#line 1459 \"./parse.y\"\n+#line 1461 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 275:\n-#line 1461 \"./parse.y\"\n+#line 1463 \"./parse.y\"\n {yyerror (\"Missing term and ')' expected\"); RECOVER;;\n     break;}\n case 276:\n-#line 1463 \"./parse.y\"\n+#line 1465 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 277:\n-#line 1468 \"./parse.y\"\n+#line 1470 \"./parse.y\"\n { yyval.node = finish_loop_body (0, NULL_TREE, yyvsp[0].node, 0); ;\n     break;}\n case 278:\n-#line 1473 \"./parse.y\"\n+#line 1475 \"./parse.y\"\n { \n \t\t  tree body = build_loop_body (0, NULL_TREE, 1);\n \t\t  yyval.node = build_new_loop (body);\n \t\t;\n     break;}\n case 279:\n-#line 1482 \"./parse.y\"\n+#line 1484 \"./parse.y\"\n { yyval.node = finish_loop_body (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[-5].node, 1); ;\n     break;}\n case 280:\n-#line 1487 \"./parse.y\"\n+#line 1489 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 281:\n-#line 1489 \"./parse.y\"\n+#line 1491 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3770,23 +3772,23 @@ case 281:\n \t\t;\n     break;}\n case 282:\n-#line 1496 \"./parse.y\"\n+#line 1498 \"./parse.y\"\n {yyerror (\"Invalid control expression\"); RECOVER;;\n     break;}\n case 283:\n-#line 1498 \"./parse.y\"\n+#line 1500 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 284:\n-#line 1500 \"./parse.y\"\n+#line 1502 \"./parse.y\"\n {yyerror (\"Invalid update expression\"); RECOVER;;\n     break;}\n case 285:\n-#line 1505 \"./parse.y\"\n+#line 1507 \"./parse.y\"\n { yyval.node = finish_for_loop (EXPR_WFL_LINECOL (yyvsp[-4].node), yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);;\n     break;}\n case 286:\n-#line 1507 \"./parse.y\"\n+#line 1509 \"./parse.y\"\n { \n \t\t  yyval.node = finish_for_loop (0, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  /* We have not condition, so we get rid of the EXIT_EXPR */\n@@ -3795,23 +3797,23 @@ case 286:\n \t\t;\n     break;}\n case 287:\n-#line 1517 \"./parse.y\"\n+#line 1519 \"./parse.y\"\n { \n \t\t  /* This scope defined for local variable that may be\n                      defined within the scope of the for loop */\n \t\t  enter_block (); \n \t\t;\n     break;}\n case 288:\n-#line 1523 \"./parse.y\"\n+#line 1525 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(for_1);;\n     break;}\n case 289:\n-#line 1525 \"./parse.y\"\n+#line 1527 \"./parse.y\"\n {yyerror (\"Invalid init statement\"); RECOVER;;\n     break;}\n case 290:\n-#line 1530 \"./parse.y\"\n+#line 1532 \"./parse.y\"\n { \n \t\t  /* We now declare the loop body. The loop is\n                      declared as a for loop. */\n@@ -3824,179 +3826,179 @@ case 290:\n \t\t;\n     break;}\n case 291:\n-#line 1542 \"./parse.y\"\n+#line 1544 \"./parse.y\"\n { yyval.node = empty_stmt_node; ;\n     break;}\n case 292:\n-#line 1544 \"./parse.y\"\n+#line 1546 \"./parse.y\"\n { \n \t\t  /* Init statement recorded within the previously\n                      defined block scope */\n \t\t  yyval.node = java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t;\n     break;}\n case 293:\n-#line 1550 \"./parse.y\"\n+#line 1552 \"./parse.y\"\n { \n \t\t  /* Local variable are recorded within the previously\n \t\t     defined block scope */\n \t\t  yyval.node = NULL_TREE;\n \t\t;\n     break;}\n case 294:\n-#line 1556 \"./parse.y\"\n+#line 1558 \"./parse.y\"\n {yyerror (\"';' expected\"); DRECOVER(for_init_1);;\n     break;}\n case 295:\n-#line 1560 \"./parse.y\"\n+#line 1562 \"./parse.y\"\n {yyval.node = empty_stmt_node;;\n     break;}\n case 296:\n-#line 1562 \"./parse.y\"\n+#line 1564 \"./parse.y\"\n { yyval.node = build_debugable_stmt (BUILD_LOCATION (), yyvsp[0].node); ;\n     break;}\n case 297:\n-#line 1567 \"./parse.y\"\n+#line 1569 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (NULL_TREE, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 298:\n-#line 1569 \"./parse.y\"\n+#line 1571 \"./parse.y\"\n { yyval.node = add_stmt_to_compound (yyvsp[-2].node, NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 299:\n-#line 1571 \"./parse.y\"\n+#line 1573 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 300:\n-#line 1576 \"./parse.y\"\n+#line 1578 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 1, NULL_TREE); ;\n     break;}\n case 301:\n-#line 1578 \"./parse.y\"\n+#line 1580 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 1, yyvsp[-1].node); ;\n     break;}\n case 302:\n-#line 1580 \"./parse.y\"\n+#line 1582 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 303:\n-#line 1582 \"./parse.y\"\n+#line 1584 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 304:\n-#line 1587 \"./parse.y\"\n+#line 1589 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-1].operator.location, 0, NULL_TREE); ;\n     break;}\n case 305:\n-#line 1589 \"./parse.y\"\n+#line 1591 \"./parse.y\"\n { yyval.node = build_bc_statement (yyvsp[-2].operator.location, 0, yyvsp[-1].node); ;\n     break;}\n case 306:\n-#line 1591 \"./parse.y\"\n+#line 1593 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 307:\n-#line 1593 \"./parse.y\"\n+#line 1595 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 308:\n-#line 1598 \"./parse.y\"\n+#line 1600 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-1].operator.location, NULL_TREE); ;\n     break;}\n case 309:\n-#line 1600 \"./parse.y\"\n+#line 1602 \"./parse.y\"\n { yyval.node = build_return (yyvsp[-2].operator.location, yyvsp[-1].node); ;\n     break;}\n case 310:\n-#line 1602 \"./parse.y\"\n+#line 1604 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 311:\n-#line 1604 \"./parse.y\"\n+#line 1606 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 312:\n-#line 1609 \"./parse.y\"\n+#line 1611 \"./parse.y\"\n { \n \t\t  yyval.node = build1 (THROW_EXPR, NULL_TREE, yyvsp[-1].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-2].operator.location;\n \t\t;\n     break;}\n case 313:\n-#line 1614 \"./parse.y\"\n+#line 1616 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 314:\n-#line 1616 \"./parse.y\"\n+#line 1618 \"./parse.y\"\n {yyerror (\"';' expected\"); RECOVER;;\n     break;}\n case 315:\n-#line 1621 \"./parse.y\"\n+#line 1623 \"./parse.y\"\n { \n \t\t  yyval.node = build (SYNCHRONIZED_EXPR, NULL_TREE, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = \n \t\t    EXPR_WFL_LINECOL (MODIFIER_WFL (SYNCHRONIZED_TK));\n \t\t;\n     break;}\n case 316:\n-#line 1627 \"./parse.y\"\n+#line 1629 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER;;\n     break;}\n case 317:\n-#line 1629 \"./parse.y\"\n+#line 1631 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 318:\n-#line 1631 \"./parse.y\"\n+#line 1633 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 319:\n-#line 1633 \"./parse.y\"\n+#line 1635 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 320:\n-#line 1638 \"./parse.y\"\n+#line 1640 \"./parse.y\"\n {\n \t\t  if ((1 << yyvsp[0].value) != ACC_SYNCHRONIZED)\n \t\t    fatal (\"synchronized was '%d' - yyparse\", (1 << yyvsp[0].value));\n \t\t;\n     break;}\n case 321:\n-#line 1646 \"./parse.y\"\n+#line 1648 \"./parse.y\"\n { yyval.node = build_try_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 322:\n-#line 1648 \"./parse.y\"\n+#line 1650 \"./parse.y\"\n { yyval.node = build_try_finally_statement (yyvsp[-2].operator.location, yyvsp[-1].node, yyvsp[0].node); ;\n     break;}\n case 323:\n-#line 1650 \"./parse.y\"\n+#line 1652 \"./parse.y\"\n { yyval.node = build_try_finally_statement \n \t\t    (yyvsp[-3].operator.location, build_try_statement (yyvsp[-3].operator.location,\n \t\t\t\t\t\t       yyvsp[-2].node, yyvsp[-1].node), yyvsp[0].node);\n \t\t;\n     break;}\n case 324:\n-#line 1655 \"./parse.y\"\n+#line 1657 \"./parse.y\"\n {yyerror (\"'{' expected\"); DRECOVER (try_statement);;\n     break;}\n case 326:\n-#line 1661 \"./parse.y\"\n+#line 1663 \"./parse.y\"\n { \n \t\t  TREE_CHAIN (yyvsp[0].node) = yyvsp[-1].node;\n \t\t  yyval.node = yyvsp[0].node;\n \t\t;\n     break;}\n case 327:\n-#line 1669 \"./parse.y\"\n+#line 1671 \"./parse.y\"\n { \n \t\t  java_method_add_stmt (current_function_decl, yyvsp[0].node);\n \t\t  exit_block ();\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 328:\n-#line 1677 \"./parse.y\"\n+#line 1679 \"./parse.y\"\n { \n \t\t  /* We add a block to define a scope for\n \t\t     formal_parameter (CCBP). The formal parameter is\n@@ -4014,184 +4016,184 @@ case 328:\n \t\t;\n     break;}\n case 329:\n-#line 1693 \"./parse.y\"\n+#line 1695 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 330:\n-#line 1695 \"./parse.y\"\n+#line 1697 \"./parse.y\"\n {yyerror (\"Missing term or ')' expected\"); DRECOVER (2);;\n     break;}\n case 331:\n-#line 1697 \"./parse.y\"\n+#line 1699 \"./parse.y\"\n {yyerror (\"')' expected\"); DRECOVER (1);;\n     break;}\n case 332:\n-#line 1702 \"./parse.y\"\n+#line 1704 \"./parse.y\"\n { yyval.node = yyvsp[0].node; ;\n     break;}\n case 333:\n-#line 1704 \"./parse.y\"\n+#line 1706 \"./parse.y\"\n {yyerror (\"'{' expected\"); RECOVER; ;\n     break;}\n case 337:\n-#line 1716 \"./parse.y\"\n+#line 1718 \"./parse.y\"\n { yyval.node = build_this (yyvsp[0].operator.location); ;\n     break;}\n case 338:\n-#line 1718 \"./parse.y\"\n+#line 1720 \"./parse.y\"\n {yyval.node = yyvsp[-1].node;;\n     break;}\n case 343:\n-#line 1727 \"./parse.y\"\n+#line 1729 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"named class literals\"); ;\n     break;}\n case 344:\n-#line 1729 \"./parse.y\"\n+#line 1731 \"./parse.y\"\n { yyval.node = build_class_ref (yyvsp[-2].node); ;\n     break;}\n case 345:\n-#line 1731 \"./parse.y\"\n+#line 1733 \"./parse.y\"\n { yyval.node = build_class_ref (void_type_node); ;\n     break;}\n case 346:\n-#line 1736 \"./parse.y\"\n+#line 1738 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"class literals\"); ;\n     break;}\n case 347:\n-#line 1738 \"./parse.y\"\n+#line 1740 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 348:\n-#line 1740 \"./parse.y\"\n+#line 1742 \"./parse.y\"\n {yyerror (\"'class' or 'this' expected\" ); RECOVER;;\n     break;}\n case 349:\n-#line 1742 \"./parse.y\"\n+#line 1744 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 350:\n-#line 1744 \"./parse.y\"\n+#line 1746 \"./parse.y\"\n {yyerror (\"'class' expected\" ); RECOVER;;\n     break;}\n case 351:\n-#line 1749 \"./parse.y\"\n+#line 1751 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 352:\n-#line 1751 \"./parse.y\"\n+#line 1753 \"./parse.y\"\n { yyval.node = build_new_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 353:\n-#line 1756 \"./parse.y\"\n+#line 1758 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 354:\n-#line 1758 \"./parse.y\"\n+#line 1760 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"inner class instance creation\"); ;\n     break;}\n case 359:\n-#line 1767 \"./parse.y\"\n+#line 1769 \"./parse.y\"\n {yyerror (\"'(' expected\"); DRECOVER(new_1);;\n     break;}\n case 360:\n-#line 1769 \"./parse.y\"\n+#line 1771 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 361:\n-#line 1771 \"./parse.y\"\n+#line 1773 \"./parse.y\"\n {yyerror (\"')' or term expected\"); RECOVER;;\n     break;}\n case 362:\n-#line 1773 \"./parse.y\"\n+#line 1775 \"./parse.y\"\n {yyerror (\"')' expected\"); RECOVER;;\n     break;}\n case 363:\n-#line 1775 \"./parse.y\"\n+#line 1777 \"./parse.y\"\n {YYERROR_NOW; yyerror (\"Identifier expected\"); RECOVER;;\n     break;}\n case 364:\n-#line 1777 \"./parse.y\"\n+#line 1779 \"./parse.y\"\n {yyerror (\"'(' expected\"); RECOVER;;\n     break;}\n case 367:\n-#line 1787 \"./parse.y\"\n+#line 1789 \"./parse.y\"\n { \n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, NULL_TREE);\n \t\t  ctxp->formal_parameter_number = 1; \n \t\t;\n     break;}\n case 368:\n-#line 1792 \"./parse.y\"\n+#line 1794 \"./parse.y\"\n {\n \t\t  ctxp->formal_parameter_number += 1;\n \t\t  yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyvsp[-2].node);\n \t\t;\n     break;}\n case 369:\n-#line 1797 \"./parse.y\"\n+#line 1799 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 370:\n-#line 1802 \"./parse.y\"\n+#line 1804 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 371:\n-#line 1804 \"./parse.y\"\n+#line 1806 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-1].node, yyvsp[0].node, 0); ;\n     break;}\n case 372:\n-#line 1806 \"./parse.y\"\n+#line 1808 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 373:\n-#line 1808 \"./parse.y\"\n+#line 1810 \"./parse.y\"\n { yyval.node = build_newarray_node (yyvsp[-2].node, yyvsp[-1].node, CURRENT_OSB (ctxp));;\n     break;}\n case 374:\n-#line 1812 \"./parse.y\"\n+#line 1814 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 375:\n-#line 1814 \"./parse.y\"\n+#line 1816 \"./parse.y\"\n { yyval.node = parse_jdk1_1_error (\"anonymous array\"); ;\n     break;}\n case 376:\n-#line 1816 \"./parse.y\"\n+#line 1818 \"./parse.y\"\n {yyerror (\"'[' expected\"); DRECOVER (\"]\");;\n     break;}\n case 377:\n-#line 1818 \"./parse.y\"\n+#line 1820 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 378:\n-#line 1823 \"./parse.y\"\n+#line 1825 \"./parse.y\"\n { yyval.node = build_tree_list (NULL_TREE, yyvsp[0].node); ;\n     break;}\n case 379:\n-#line 1825 \"./parse.y\"\n+#line 1827 \"./parse.y\"\n { yyval.node = tree_cons (NULL_TREE, yyvsp[0].node, yyval.node); ;\n     break;}\n case 380:\n-#line 1830 \"./parse.y\"\n+#line 1832 \"./parse.y\"\n { \n \t\t  EXPR_WFL_LINECOL (yyvsp[-1].node) = yyvsp[-2].operator.location;\n \t\t  yyval.node = yyvsp[-1].node;\n \t\t;\n     break;}\n case 381:\n-#line 1835 \"./parse.y\"\n+#line 1837 \"./parse.y\"\n {yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 382:\n-#line 1837 \"./parse.y\"\n+#line 1839 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term\");\n \t\t  yyerror (\"']' expected\");\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 383:\n-#line 1846 \"./parse.y\"\n+#line 1848 \"./parse.y\"\n { \n \t\t  int allocate = 0;\n \t\t  /* If not initialized, allocate memory for the osb\n@@ -4219,19 +4221,19 @@ case 383:\n \t\t;\n     break;}\n case 384:\n-#line 1872 \"./parse.y\"\n+#line 1874 \"./parse.y\"\n { CURRENT_OSB (ctxp)++; ;\n     break;}\n case 385:\n-#line 1874 \"./parse.y\"\n+#line 1876 \"./parse.y\"\n { yyerror (\"']' expected\"); RECOVER;;\n     break;}\n case 386:\n-#line 1879 \"./parse.y\"\n+#line 1881 \"./parse.y\"\n { yyval.node = make_qualified_primary (yyvsp[-2].node, yyvsp[0].node, yyvsp[-1].operator.location); ;\n     break;}\n case 387:\n-#line 1883 \"./parse.y\"\n+#line 1885 \"./parse.y\"\n {\n \t\t  tree super_wfl = \n \t\t    build_wfl_node (super_identifier_node);\n@@ -4240,19 +4242,19 @@ case 387:\n \t\t;\n     break;}\n case 388:\n-#line 1890 \"./parse.y\"\n+#line 1892 \"./parse.y\"\n {yyerror (\"Field expected\"); DRECOVER (super_field_acces);;\n     break;}\n case 389:\n-#line 1895 \"./parse.y\"\n+#line 1897 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-2].node, NULL_TREE); ;\n     break;}\n case 390:\n-#line 1897 \"./parse.y\"\n+#line 1899 \"./parse.y\"\n { yyval.node = build_method_invocation (yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 391:\n-#line 1899 \"./parse.y\"\n+#line 1901 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-4].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4265,7 +4267,7 @@ case 391:\n \t\t;\n     break;}\n case 392:\n-#line 1910 \"./parse.y\"\n+#line 1912 \"./parse.y\"\n { \n \t\t  if (TREE_CODE (yyvsp[-5].node) == THIS_EXPR)\n \t\t    yyval.node = build_this_super_qualified_invocation \n@@ -4278,121 +4280,121 @@ case 392:\n \t\t;\n     break;}\n case 393:\n-#line 1921 \"./parse.y\"\n+#line 1923 \"./parse.y\"\n { \n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-2].node, NULL_TREE, yyvsp[-4].operator.location, yyvsp[-3].operator.location);\n \t\t;\n     break;}\n case 394:\n-#line 1926 \"./parse.y\"\n+#line 1928 \"./parse.y\"\n {\n \t\t  yyval.node = build_this_super_qualified_invocation \n \t\t    (0, yyvsp[-3].node, yyvsp[-1].node, yyvsp[-5].operator.location, yyvsp[-4].operator.location);\n \t\t;\n     break;}\n case 395:\n-#line 1935 \"./parse.y\"\n+#line 1937 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 396:\n-#line 1937 \"./parse.y\"\n+#line 1939 \"./parse.y\"\n { yyerror (\"'(' expected\"); DRECOVER (method_invocation); ;\n     break;}\n case 397:\n-#line 1942 \"./parse.y\"\n+#line 1944 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 398:\n-#line 1944 \"./parse.y\"\n+#line 1946 \"./parse.y\"\n { yyval.node = build_array_ref (yyvsp[-2].operator.location, yyvsp[-3].node, yyvsp[-1].node); ;\n     break;}\n case 399:\n-#line 1946 \"./parse.y\"\n+#line 1948 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 400:\n-#line 1951 \"./parse.y\"\n+#line 1953 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 401:\n-#line 1956 \"./parse.y\"\n+#line 1958 \"./parse.y\"\n {\n \t\t  yyerror (\"Missing term and ']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 402:\n-#line 1961 \"./parse.y\"\n+#line 1963 \"./parse.y\"\n {\n \t\t  yyerror (\"']' expected\");\n \t\t  DRECOVER(array_access);\n \t\t;\n     break;}\n case 407:\n-#line 1976 \"./parse.y\"\n+#line 1978 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 408:\n-#line 1981 \"./parse.y\"\n+#line 1983 \"./parse.y\"\n { yyval.node = build_incdec (yyvsp[0].operator.token, yyvsp[0].operator.location, yyvsp[-1].node, 1); ;\n     break;}\n case 411:\n-#line 1988 \"./parse.y\"\n+#line 1990 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 412:\n-#line 1990 \"./parse.y\"\n+#line 1992 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 414:\n-#line 1993 \"./parse.y\"\n+#line 1995 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 415:\n-#line 1995 \"./parse.y\"\n+#line 1997 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 416:\n-#line 2000 \"./parse.y\"\n+#line 2002 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 417:\n-#line 2002 \"./parse.y\"\n+#line 2004 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 418:\n-#line 2007 \"./parse.y\"\n+#line 2009 \"./parse.y\"\n {yyval.node = build_incdec (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node, 0); ;\n     break;}\n case 419:\n-#line 2009 \"./parse.y\"\n+#line 2011 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 421:\n-#line 2015 \"./parse.y\"\n+#line 2017 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 422:\n-#line 2017 \"./parse.y\"\n+#line 2019 \"./parse.y\"\n {yyval.node = build_unaryop (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[0].node); ;\n     break;}\n case 424:\n-#line 2020 \"./parse.y\"\n+#line 2022 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 425:\n-#line 2022 \"./parse.y\"\n+#line 2024 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;\n     break;}\n case 426:\n-#line 2027 \"./parse.y\"\n+#line 2029 \"./parse.y\"\n { \n \t\t  tree type = yyvsp[-3].node;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4402,15 +4404,15 @@ case 426:\n \t\t;\n     break;}\n case 427:\n-#line 2035 \"./parse.y\"\n+#line 2037 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 428:\n-#line 2037 \"./parse.y\"\n+#line 2039 \"./parse.y\"\n { yyval.node = build_cast (yyvsp[-3].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 429:\n-#line 2039 \"./parse.y\"\n+#line 2041 \"./parse.y\"\n { \n \t\t  char *ptr;\n \t\t  while (CURRENT_OSB (ctxp)--)\n@@ -4425,275 +4427,275 @@ case 429:\n \t\t;\n     break;}\n case 430:\n-#line 2052 \"./parse.y\"\n+#line 2054 \"./parse.y\"\n {yyerror (\"']' expected, invalid type expression\");;\n     break;}\n case 431:\n-#line 2054 \"./parse.y\"\n+#line 2056 \"./parse.y\"\n {\n \t          if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Invalid type expression\"); RECOVER;\n \t\t  RECOVER;\n \t\t;\n     break;}\n case 432:\n-#line 2060 \"./parse.y\"\n+#line 2062 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 433:\n-#line 2062 \"./parse.y\"\n+#line 2064 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 434:\n-#line 2064 \"./parse.y\"\n+#line 2066 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 436:\n-#line 2070 \"./parse.y\"\n+#line 2072 \"./parse.y\"\n { \n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), \n \t\t\t\t    yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node);\n \t\t;\n     break;}\n case 437:\n-#line 2075 \"./parse.y\"\n+#line 2077 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 438:\n-#line 2080 \"./parse.y\"\n+#line 2082 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 439:\n-#line 2085 \"./parse.y\"\n+#line 2087 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 440:\n-#line 2087 \"./parse.y\"\n+#line 2089 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 441:\n-#line 2089 \"./parse.y\"\n+#line 2091 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 443:\n-#line 2095 \"./parse.y\"\n+#line 2097 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 444:\n-#line 2100 \"./parse.y\"\n+#line 2102 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 445:\n-#line 2105 \"./parse.y\"\n+#line 2107 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 446:\n-#line 2107 \"./parse.y\"\n+#line 2109 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 448:\n-#line 2113 \"./parse.y\"\n+#line 2115 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 449:\n-#line 2118 \"./parse.y\"\n+#line 2120 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 450:\n-#line 2123 \"./parse.y\"\n+#line 2125 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 451:\n-#line 2128 \"./parse.y\"\n+#line 2130 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 452:\n-#line 2130 \"./parse.y\"\n+#line 2132 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 453:\n-#line 2132 \"./parse.y\"\n+#line 2134 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 455:\n-#line 2138 \"./parse.y\"\n+#line 2140 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 456:\n-#line 2143 \"./parse.y\"\n+#line 2145 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 457:\n-#line 2148 \"./parse.y\"\n+#line 2150 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 458:\n-#line 2153 \"./parse.y\"\n+#line 2155 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 459:\n-#line 2158 \"./parse.y\"\n+#line 2160 \"./parse.y\"\n { yyval.node = build_binop (INSTANCEOF_EXPR, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 460:\n-#line 2160 \"./parse.y\"\n+#line 2162 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 461:\n-#line 2162 \"./parse.y\"\n+#line 2164 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 462:\n-#line 2164 \"./parse.y\"\n+#line 2166 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 463:\n-#line 2166 \"./parse.y\"\n+#line 2168 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 464:\n-#line 2168 \"./parse.y\"\n+#line 2170 \"./parse.y\"\n {yyerror (\"Invalid reference type\"); RECOVER;;\n     break;}\n case 466:\n-#line 2174 \"./parse.y\"\n+#line 2176 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 467:\n-#line 2179 \"./parse.y\"\n+#line 2181 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 468:\n-#line 2184 \"./parse.y\"\n+#line 2186 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 469:\n-#line 2186 \"./parse.y\"\n+#line 2188 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 471:\n-#line 2192 \"./parse.y\"\n+#line 2194 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 472:\n-#line 2197 \"./parse.y\"\n+#line 2199 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 474:\n-#line 2203 \"./parse.y\"\n+#line 2205 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 475:\n-#line 2208 \"./parse.y\"\n+#line 2210 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 477:\n-#line 2214 \"./parse.y\"\n+#line 2216 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 478:\n-#line 2219 \"./parse.y\"\n+#line 2221 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 480:\n-#line 2225 \"./parse.y\"\n+#line 2227 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 481:\n-#line 2230 \"./parse.y\"\n+#line 2232 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 483:\n-#line 2236 \"./parse.y\"\n+#line 2238 \"./parse.y\"\n {\n \t\t  yyval.node = build_binop (BINOP_LOOKUP (yyvsp[-1].operator.token), yyvsp[-1].operator.location,\n \t\t\t\t    yyvsp[-2].node, yyvsp[0].node); \n \t\t;\n     break;}\n case 484:\n-#line 2241 \"./parse.y\"\n+#line 2243 \"./parse.y\"\n {yyerror (\"Missing term\"); RECOVER;;\n     break;}\n case 486:\n-#line 2247 \"./parse.y\"\n+#line 2249 \"./parse.y\"\n {\n \t\t  yyval.node = build (CONDITIONAL_EXPR, NULL_TREE, yyvsp[-4].node, yyvsp[-2].node, yyvsp[0].node);\n \t\t  EXPR_WFL_LINECOL (yyval.node) = yyvsp[-3].operator.location;\n \t\t;\n     break;}\n case 487:\n-#line 2252 \"./parse.y\"\n+#line 2254 \"./parse.y\"\n {\n \t\t  YYERROR_NOW;\n \t\t  yyerror (\"Missing term\");\n \t\t  DRECOVER (1);\n \t\t;\n     break;}\n case 488:\n-#line 2258 \"./parse.y\"\n+#line 2260 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (2);;\n     break;}\n case 489:\n-#line 2260 \"./parse.y\"\n+#line 2262 \"./parse.y\"\n {yyerror (\"Missing term\"); DRECOVER (3);;\n     break;}\n case 492:\n-#line 2270 \"./parse.y\"\n+#line 2272 \"./parse.y\"\n { yyval.node = build_assignment (yyvsp[-1].operator.token, yyvsp[-1].operator.location, yyvsp[-2].node, yyvsp[0].node); ;\n     break;}\n case 493:\n-#line 2272 \"./parse.y\"\n+#line 2274 \"./parse.y\"\n {\n \t\t  if (ctxp->prevent_ese != lineno)\n \t\t    yyerror (\"Missing term\");\n@@ -4702,7 +4704,7 @@ case 493:\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/local/share/bison.simple\"\n+#line 498 \"/usr/lib/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -4898,7 +4900,7 @@ case 493:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 2298 \"./parse.y\"\n+#line 2300 \"./parse.y\"\n \n \f\n \n@@ -8310,6 +8312,8 @@ void\n java_complete_expand_methods ()\n {\n   tree current;\n+\n+  do_not_fold = flag_emit_xref;\n   \n   for (current = ctxp->class_list; current; current = TREE_CHAIN (current))\n     {\n@@ -8423,14 +8427,20 @@ java_complete_expand_method (mdecl)\n     {\n       tree fbody = DECL_FUNCTION_BODY (mdecl);\n       tree block_body = BLOCK_EXPR_BODY (fbody);\n+      tree exception_copy;\n       expand_start_java_method (mdecl);\n       build_result_decl (mdecl);\n \n       current_this \n \t= (!METHOD_STATIC (mdecl) ? \n \t   BLOCK_EXPR_DECLS (DECL_FUNCTION_BODY (mdecl)) : NULL_TREE);\n \n-      /* Purge the `throws' list of unchecked exceptions */\n+      /* Purge the `throws' list of unchecked exceptions. If we're\n+\t doing xref, save a copy of the list and re-install it\n+\t later. */\n+      if (flag_emit_xref)\n+\texception_copy = copy_list (DECL_FUNCTION_THROWS (mdecl));\n+\n       purge_unchecked_exceptions (mdecl);\n \n       /* Install exceptions thrown with `throws' */\n@@ -8439,13 +8449,15 @@ java_complete_expand_method (mdecl)\n       if (block_body != NULL_TREE)\n \t{\n \t  block_body = java_complete_tree (block_body);\n-\t  check_for_initialization (block_body);\n+\t  if (!flag_emit_xref)\n+\t    check_for_initialization (block_body);\n \t  ctxp->explicit_constructor_p = 0;\n \t}\n       BLOCK_EXPR_BODY (fbody) = block_body;\n \n       if ((block_body == NULL_TREE || CAN_COMPLETE_NORMALLY (block_body))\n-\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (mdecl))) != VOID_TYPE)\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (mdecl))) != VOID_TYPE\n+\t  && !flag_emit_xref)\n \tmissing_return_error (current_function_decl);\n \n       complete_start_java_method (mdecl); \n@@ -8464,6 +8476,9 @@ java_complete_expand_method (mdecl)\n       POP_EXCEPTIONS();\n       if (currently_caught_type_list)\n \tfatal (\"Exception list non empty - java_complete_expand_method\");\n+\n+      if (flag_emit_xref)\n+\tDECL_FUNCTION_THROWS (mdecl) = exception_copy;\n     }\n }\n \n@@ -10475,7 +10490,7 @@ java_complete_lhs (node)\n       /* First, the case expression must be constant */\n       cn = fold (cn);\n \n-      if (!TREE_CONSTANT (cn))\n+      if (!TREE_CONSTANT (cn) && !flag_emit_xref)\n \t{\n \t  EXPR_WFL_LINECOL (wfl_operator) = EXPR_WFL_LINECOL (node);\n \t  parse_error_context (node, \"Constant expression required\");\n@@ -10833,6 +10848,11 @@ java_complete_lhs (node)\n     case INSTANCEOF_EXPR:\n       wfl_op1 = TREE_OPERAND (node, 0);\n       COMPLETE_CHECK_OP_0 (node);\n+      if (flag_emit_xref)\n+\t{\n+\t  TREE_TYPE (node) = boolean_type_node;\n+\t  return node;\n+\t}\n       return patch_binop (node, wfl_op1, TREE_OPERAND (node, 1));\n \n     case UNARY_PLUS_EXPR:\n@@ -12112,6 +12132,9 @@ patch_binop (node, wfl_op1, wfl_op2)\n   TREE_TYPE (node) = prom_type;\n   TREE_SIDE_EFFECTS (node) = TREE_SIDE_EFFECTS (op1) | TREE_SIDE_EFFECTS (op2);\n   \n+  if (flag_emit_xref)\n+    return node;\n+\n   /* fold does not respect side-effect order as required for Java but not C.\n    * Also, it sometimes create SAVE_EXPRs which are bad when emitting\n    * bytecode.\n@@ -12239,6 +12262,9 @@ build_string_concatenation (op1, op2)\n {\n   tree result;\n   int side_effects = TREE_SIDE_EFFECTS (op1) | TREE_SIDE_EFFECTS (op2);\n+\n+  if (flag_emit_xref)\n+    return build (PLUS_EXPR, string_type_node, op1, op2);\n   \n   /* Try to do some static optimization */\n   if ((result = string_constant_concatenation (op1, op2)))\n@@ -13725,6 +13751,14 @@ patch_synchronized_statement (node, wfl_op1)\n       return error_mark_node;\n     }\n \n+  if (flag_emit_xref)\n+    {\n+      TREE_OPERAND (node, 0) = expr;\n+      TREE_OPERAND (node, 1) = java_complete_tree (block);\n+      CAN_COMPLETE_NORMALLY (node) = 1;\n+      return node;\n+    }\n+\n   /* Generate a try-finally for the synchronized statement, except\n      that the handler that catches all throw exception calls\n      _Jv_MonitorExit and then rethrow the exception.\n@@ -13838,8 +13872,12 @@ patch_throw_statement (node, wfl_op1)\n       return error_mark_node;\n     }\n \n-  if (! flag_emit_class_files)\n+  if (! flag_emit_class_files && ! flag_emit_xref)\n     BUILD_THROW (node, expr);\n+\n+  /* If doing xrefs, keep the location where the `throw' was seen. */\n+  if (flag_emit_xref)\n+    EXPR_WFL_LINECOL (node) = EXPR_WFL_LINECOL (wfl_op1);\n   return node;\n }\n "}, {"sha": "dbf7fe42d23f3adbf24efdeef8b66221ab7874ba", "filename": "gcc/java/parse.y", "status": "modified", "additions": 43, "deletions": 5, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=ce6e914727336e47ee2d336d13b1fc787342215d", "patch": "@@ -247,6 +247,8 @@ static void static_ref_err PROTO ((tree, tree, tree));\n int java_error_count; \n /* Number of warning found so far. */\n int java_warning_count;\n+/* Tell when not to fold, when doing xrefs */\n+int do_not_fold;\n \n /* The current parser context */\n struct parser_ctxt *ctxp;\n@@ -5706,6 +5708,8 @@ void\n java_complete_expand_methods ()\n {\n   tree current;\n+\n+  do_not_fold = flag_emit_xref;\n   \n   for (current = ctxp->class_list; current; current = TREE_CHAIN (current))\n     {\n@@ -5819,14 +5823,20 @@ java_complete_expand_method (mdecl)\n     {\n       tree fbody = DECL_FUNCTION_BODY (mdecl);\n       tree block_body = BLOCK_EXPR_BODY (fbody);\n+      tree exception_copy;\n       expand_start_java_method (mdecl);\n       build_result_decl (mdecl);\n \n       current_this \n \t= (!METHOD_STATIC (mdecl) ? \n \t   BLOCK_EXPR_DECLS (DECL_FUNCTION_BODY (mdecl)) : NULL_TREE);\n \n-      /* Purge the `throws' list of unchecked exceptions */\n+      /* Purge the `throws' list of unchecked exceptions. If we're\n+\t doing xref, save a copy of the list and re-install it\n+\t later. */\n+      if (flag_emit_xref)\n+\texception_copy = copy_list (DECL_FUNCTION_THROWS (mdecl));\n+\n       purge_unchecked_exceptions (mdecl);\n \n       /* Install exceptions thrown with `throws' */\n@@ -5835,13 +5845,15 @@ java_complete_expand_method (mdecl)\n       if (block_body != NULL_TREE)\n \t{\n \t  block_body = java_complete_tree (block_body);\n-\t  check_for_initialization (block_body);\n+\t  if (!flag_emit_xref)\n+\t    check_for_initialization (block_body);\n \t  ctxp->explicit_constructor_p = 0;\n \t}\n       BLOCK_EXPR_BODY (fbody) = block_body;\n \n       if ((block_body == NULL_TREE || CAN_COMPLETE_NORMALLY (block_body))\n-\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (mdecl))) != VOID_TYPE)\n+\t  && TREE_CODE (TREE_TYPE (TREE_TYPE (mdecl))) != VOID_TYPE\n+\t  && !flag_emit_xref)\n \tmissing_return_error (current_function_decl);\n \n       complete_start_java_method (mdecl); \n@@ -5860,6 +5872,9 @@ java_complete_expand_method (mdecl)\n       POP_EXCEPTIONS();\n       if (currently_caught_type_list)\n \tfatal (\"Exception list non empty - java_complete_expand_method\");\n+\n+      if (flag_emit_xref)\n+\tDECL_FUNCTION_THROWS (mdecl) = exception_copy;\n     }\n }\n \n@@ -7871,7 +7886,7 @@ java_complete_lhs (node)\n       /* First, the case expression must be constant */\n       cn = fold (cn);\n \n-      if (!TREE_CONSTANT (cn))\n+      if (!TREE_CONSTANT (cn) && !flag_emit_xref)\n \t{\n \t  EXPR_WFL_LINECOL (wfl_operator) = EXPR_WFL_LINECOL (node);\n \t  parse_error_context (node, \"Constant expression required\");\n@@ -8229,6 +8244,11 @@ java_complete_lhs (node)\n     case INSTANCEOF_EXPR:\n       wfl_op1 = TREE_OPERAND (node, 0);\n       COMPLETE_CHECK_OP_0 (node);\n+      if (flag_emit_xref)\n+\t{\n+\t  TREE_TYPE (node) = boolean_type_node;\n+\t  return node;\n+\t}\n       return patch_binop (node, wfl_op1, TREE_OPERAND (node, 1));\n \n     case UNARY_PLUS_EXPR:\n@@ -9508,6 +9528,9 @@ patch_binop (node, wfl_op1, wfl_op2)\n   TREE_TYPE (node) = prom_type;\n   TREE_SIDE_EFFECTS (node) = TREE_SIDE_EFFECTS (op1) | TREE_SIDE_EFFECTS (op2);\n   \n+  if (flag_emit_xref)\n+    return node;\n+\n   /* fold does not respect side-effect order as required for Java but not C.\n    * Also, it sometimes create SAVE_EXPRs which are bad when emitting\n    * bytecode.\n@@ -9635,6 +9658,9 @@ build_string_concatenation (op1, op2)\n {\n   tree result;\n   int side_effects = TREE_SIDE_EFFECTS (op1) | TREE_SIDE_EFFECTS (op2);\n+\n+  if (flag_emit_xref)\n+    return build (PLUS_EXPR, string_type_node, op1, op2);\n   \n   /* Try to do some static optimization */\n   if ((result = string_constant_concatenation (op1, op2)))\n@@ -11121,6 +11147,14 @@ patch_synchronized_statement (node, wfl_op1)\n       return error_mark_node;\n     }\n \n+  if (flag_emit_xref)\n+    {\n+      TREE_OPERAND (node, 0) = expr;\n+      TREE_OPERAND (node, 1) = java_complete_tree (block);\n+      CAN_COMPLETE_NORMALLY (node) = 1;\n+      return node;\n+    }\n+\n   /* Generate a try-finally for the synchronized statement, except\n      that the handler that catches all throw exception calls\n      _Jv_MonitorExit and then rethrow the exception.\n@@ -11234,8 +11268,12 @@ patch_throw_statement (node, wfl_op1)\n       return error_mark_node;\n     }\n \n-  if (! flag_emit_class_files)\n+  if (! flag_emit_class_files && ! flag_emit_xref)\n     BUILD_THROW (node, expr);\n+\n+  /* If doing xrefs, keep the location where the `throw' was seen. */\n+  if (flag_emit_xref)\n+    EXPR_WFL_LINECOL (node) = EXPR_WFL_LINECOL (wfl_op1);\n   return node;\n }\n "}, {"sha": "141624513eaa49ec593bd84768f2d0151a85ff74", "filename": "gcc/java/typeck.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Ftypeck.c?ref=ce6e914727336e47ee2d336d13b1fc787342215d", "patch": "@@ -86,6 +86,9 @@ convert (type, expr)\n {\n   register enum tree_code code = TREE_CODE (type);\n \n+  if (do_not_fold)\n+    return build1 (NOP_EXPR, type, expr);\n+\n   if (type == TREE_TYPE (expr)\n       || TREE_CODE (expr) == ERROR_MARK)\n     return expr;"}, {"sha": "0e269bf6b663fe66cbbe74200fb22b26ec9e30b9", "filename": "gcc/java/xref.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fxref.c?ref=ce6e914727336e47ee2d336d13b1fc787342215d", "patch": "@@ -59,6 +59,13 @@ xref_set_data (flag, data)\n   xref_table [flag-1].data = data;\n }\n \n+void *\n+xref_get_data (flag)\n+     int flag;\n+{\n+  return xref_table [flag-1].data;\n+}\n+\n /* Branch to the right xref \"back-end\".  */\n \n void"}, {"sha": "042122b4ec7ed03cfea79112f6636958a7d1685d", "filename": "gcc/java/xref.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fxref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce6e914727336e47ee2d336d13b1fc787342215d/gcc%2Fjava%2Fxref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fxref.h?ref=ce6e914727336e47ee2d336d13b1fc787342215d", "patch": "@@ -27,6 +27,7 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n int xref_flag_value PROTO ((char *));\n void expand_xref PROTO ((tree));\n void xref_set_data PROTO ((int, void *));\n+void *xref_get_data PROTO ((int));\n \n /* flag_emit_xref range of possible values. */\n \n@@ -43,4 +44,4 @@ typedef struct {\n   void *data;\t\t\t         /* Placeholder for additional data */\n } xref_flag_table;\n \n-#define XREF_GET_DATA(FLAG, T) ((T)xref_table [(FLAG)-1].data)\n+#define XREF_GET_DATA(FLAG, T) ((T)xref_get_data (FLAG))"}]}