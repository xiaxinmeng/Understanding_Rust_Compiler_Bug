{"sha": "49cc765db35a5a21cab2aece27a44983fa70b94b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDljYzc2NWRiMzVhNWEyMWNhYjJhZWNlMjdhNDQ5ODNmYTcwYjk0Yg==", "commit": {"author": {"name": "Daniel Cederman", "email": "cederman@gaisler.com", "date": "2014-07-19T10:41:03Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-07-19T10:41:03Z"}, "message": "sync.md (*membar_storeload_leon3): New insn.\n\n\t* config/sparc/sync.md (*membar_storeload_leon3): New insn.\n\t(*membar_storeload): Disable for LEON3.\n\nFrom-SVN: r212841", "tree": {"sha": "10d97dd8a149186db1d203a9bfb8786ed7439fba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10d97dd8a149186db1d203a9bfb8786ed7439fba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49cc765db35a5a21cab2aece27a44983fa70b94b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49cc765db35a5a21cab2aece27a44983fa70b94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49cc765db35a5a21cab2aece27a44983fa70b94b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49cc765db35a5a21cab2aece27a44983fa70b94b/comments", "author": {"login": "doac", "id": 2056695, "node_id": "MDQ6VXNlcjIwNTY2OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2056695?v=4", "gravatar_id": "", "url": "https://api.github.com/users/doac", "html_url": "https://github.com/doac", "followers_url": "https://api.github.com/users/doac/followers", "following_url": "https://api.github.com/users/doac/following{/other_user}", "gists_url": "https://api.github.com/users/doac/gists{/gist_id}", "starred_url": "https://api.github.com/users/doac/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/doac/subscriptions", "organizations_url": "https://api.github.com/users/doac/orgs", "repos_url": "https://api.github.com/users/doac/repos", "events_url": "https://api.github.com/users/doac/events{/privacy}", "received_events_url": "https://api.github.com/users/doac/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90fe3cc61f3cde37a082c78aaee6b0ce108b285e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90fe3cc61f3cde37a082c78aaee6b0ce108b285e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90fe3cc61f3cde37a082c78aaee6b0ce108b285e"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "e8c926a8e4eaa2726951bc51de86519ed273f549", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49cc765db35a5a21cab2aece27a44983fa70b94b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49cc765db35a5a21cab2aece27a44983fa70b94b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49cc765db35a5a21cab2aece27a44983fa70b94b", "patch": "@@ -1,3 +1,8 @@\n+2014-07-19  Daniel Cederman  <cederman@gaisler.com>\n+\n+\t* config/sparc/sync.md (*membar_storeload_leon3): New insn.\n+\t(*membar_storeload): Disable for LEON3.\n+\n 2014-07-18  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n \tPR rtl-optimization/61461"}, {"sha": "98ac0d3d66a0053971a7b475713070862be4a298", "filename": "gcc/config/sparc/sync.md", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49cc765db35a5a21cab2aece27a44983fa70b94b/gcc%2Fconfig%2Fsparc%2Fsync.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49cc765db35a5a21cab2aece27a44983fa70b94b/gcc%2Fconfig%2Fsparc%2Fsync.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsync.md?ref=49cc765db35a5a21cab2aece27a44983fa70b94b", "patch": "@@ -64,11 +64,19 @@\n   \"stbar\"\n   [(set_attr \"type\" \"multi\")])\n \n+;; For LEON3, STB has the effect of membar #StoreLoad.\n+(define_insn \"*membar_storeload_leon3\"\n+  [(set (match_operand:BLK 0 \"\" \"\")\n+\t(unspec:BLK [(match_dup 0) (const_int 2)] UNSPEC_MEMBAR))]\n+  \"TARGET_LEON3\"\n+  \"stb\\t%%g0, [%%sp-1]\"\n+  [(set_attr \"type\" \"store\")])\n+\n ;; For V8, LDSTUB has the effect of membar #StoreLoad.\n (define_insn \"*membar_storeload\"\n   [(set (match_operand:BLK 0 \"\" \"\")\n \t(unspec:BLK [(match_dup 0) (const_int 2)] UNSPEC_MEMBAR))]\n-  \"TARGET_V8\"\n+  \"TARGET_V8 && !TARGET_LEON3\"\n   \"ldstub\\t[%%sp-1], %%g0\"\n   [(set_attr \"type\" \"multi\")])\n "}]}