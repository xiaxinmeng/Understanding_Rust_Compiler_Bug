{"sha": "4e20bd42bc04959c4b2f845352046fcfd5313484", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGUyMGJkNDJiYzA0OTU5YzRiMmY4NDUzNTIwNDZmY2ZkNTMxMzQ4NA==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2019-06-15T00:25:18Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2019-06-15T00:25:18Z"}, "message": "rs6000: New iterator CCEITHER\n\nThis expands to both CC and CCUNS, it's useful for isel for example.\n\n\n\t* config/rs6000/rs6000.md (CCEITHER): New define_mode_iterator.\n\t(un): New define_mode_attr.\n\t(isel_signed_<mode>, isel_unsigned_<mode>): Delete, merge into ...\n\t(isel_<un>signed_<GPR:mode>): ... this.  New define_insn.\n\t(isel_reversed_signed_<mode>, isel_reversed_unsigned_<mode>): Delete,\n\tmerge into ...\n\t(isel_reversed_<un>signed_<GPR:mode>): ... this.  New define_insn.\n\nFrom-SVN: r272319", "tree": {"sha": "db47a81bc8e987836a52c2310bd5cfac726be636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/db47a81bc8e987836a52c2310bd5cfac726be636"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4e20bd42bc04959c4b2f845352046fcfd5313484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e20bd42bc04959c4b2f845352046fcfd5313484", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e20bd42bc04959c4b2f845352046fcfd5313484", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e20bd42bc04959c4b2f845352046fcfd5313484/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b2a678af7a6f55aac2664b9f067a373ea89d222b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a678af7a6f55aac2664b9f067a373ea89d222b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a678af7a6f55aac2664b9f067a373ea89d222b"}], "stats": {"total": 47, "additions": 16, "deletions": 31}, "files": [{"sha": "21b8e905eeb1748781cbb71c2456c7a8ada9cac3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e20bd42bc04959c4b2f845352046fcfd5313484/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e20bd42bc04959c4b2f845352046fcfd5313484/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4e20bd42bc04959c4b2f845352046fcfd5313484", "patch": "@@ -1,3 +1,13 @@\n+2019-06-14  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* config/rs6000/rs6000.md (CCEITHER): New define_mode_iterator.\n+\t(un): New define_mode_attr.\n+\t(isel_signed_<mode>, isel_unsigned_<mode>): Delete, merge into ...\n+\t(isel_<un>signed_<GPR:mode>): ... this.  New define_insn.\n+\t(isel_reversed_signed_<mode>, isel_reversed_unsigned_<mode>): Delete,\n+\tmerge into ...\n+\t(isel_reversed_<un>signed_<GPR:mode>): ... this.  New define_insn.\n+\n 2019-06-14  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* config/darwin.opt: Add RejectNegative where needed, reorder"}, {"sha": "eb03e4d4c1eaf2702844a729b1e5283393d507b1", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 6, "deletions": 31, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4e20bd42bc04959c4b2f845352046fcfd5313484/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4e20bd42bc04959c4b2f845352046fcfd5313484/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=4e20bd42bc04959c4b2f845352046fcfd5313484", "patch": "@@ -5055,23 +5055,13 @@\n ;; leave out the mode in operand 4 and use one pattern, but reload can\n ;; change the mode underneath our feet and then gets confused trying\n ;; to reload the value.\n-(define_insn \"isel_signed_<mode>\"\n+(define_mode_iterator CCEITHER [CC CCUNS])\n+(define_mode_attr un [(CC \"\") (CCUNS \"un\")])\n+(define_insn \"isel_<un>signed_<GPR:mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(if_then_else:GPR\n \t (match_operator 1 \"scc_comparison_operator\"\n-\t\t\t [(match_operand:CC 4 \"cc_reg_operand\" \"y,y\")\n-\t\t\t  (const_int 0)])\n-\t (match_operand:GPR 2 \"reg_or_zero_operand\" \"O,b\")\n-\t (match_operand:GPR 3 \"gpc_reg_operand\" \"r,r\")))]\n-  \"TARGET_ISEL\"\n-  \"isel %0,%2,%3,%j1\"\n-  [(set_attr \"type\" \"isel\")])\n-\n-(define_insn \"isel_unsigned_<mode>\"\n-  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(if_then_else:GPR\n-\t (match_operator 1 \"scc_comparison_operator\"\n-\t\t\t [(match_operand:CCUNS 4 \"cc_reg_operand\" \"y,y\")\n+\t\t\t [(match_operand:CCEITHER 4 \"cc_reg_operand\" \"y,y\")\n \t\t\t  (const_int 0)])\n \t (match_operand:GPR 2 \"reg_or_zero_operand\" \"O,b\")\n \t (match_operand:GPR 3 \"gpc_reg_operand\" \"r,r\")))]\n@@ -5083,26 +5073,11 @@\n ;; isel can handle reversed comparisons so long as the operands are\n ;; registers.\n \n-(define_insn \"*isel_reversed_signed_<mode>\"\n-  [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n-\t(if_then_else:GPR\n-\t (match_operator 1 \"scc_rev_comparison_operator\"\n-\t\t\t [(match_operand:CC 4 \"cc_reg_operand\" \"y,y\")\n-\t\t\t  (const_int 0)])\n-\t (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\")\n-\t (match_operand:GPR 3 \"reg_or_zero_operand\" \"O,b\")))]\n-  \"TARGET_ISEL\"\n-{\n-  PUT_CODE (operands[1], reverse_condition (GET_CODE (operands[1])));\n-  return \"isel %0,%3,%2,%j1\";\n-}\n-  [(set_attr \"type\" \"isel\")])\n-\n-(define_insn \"*isel_reversed_unsigned_<mode>\"\n+(define_insn \"*isel_reversed_<un>signed_<GPR:mode>\"\n   [(set (match_operand:GPR 0 \"gpc_reg_operand\" \"=r,r\")\n \t(if_then_else:GPR\n \t (match_operator 1 \"scc_rev_comparison_operator\"\n-\t\t\t [(match_operand:CCUNS 4 \"cc_reg_operand\" \"y,y\")\n+\t\t\t [(match_operand:CCEITHER 4 \"cc_reg_operand\" \"y,y\")\n \t\t\t  (const_int 0)])\n \t (match_operand:GPR 2 \"gpc_reg_operand\" \"r,r\")\n \t (match_operand:GPR 3 \"reg_or_zero_operand\" \"O,b\")))]"}]}