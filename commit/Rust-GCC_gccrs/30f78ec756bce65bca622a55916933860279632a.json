{"sha": "30f78ec756bce65bca622a55916933860279632a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmNzhlYzc1NmJjZTY1YmNhNjIyYTU1OTE2OTMzODYwMjc5NjMyYQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2019-05-30T15:17:40Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2019-05-30T15:17:40Z"}, "message": "rs6000-cpus.def (OTHER_FUSION_MASKS): New #define.\n\n2019-05-30  Bill Schmidt  <wschmidt@linux.ibm.com>\n\t    Michael Meissner  <meissner@linux.ibm.com>\n\n\t* rs6000-cpus.def (OTHER_FUSION_MASKS): New #define.\n\t(ISA_3_0_MASKS_SERVER): Mask off OTHER_FUSION_MASKS.\n\t(ISA_3_0_MASKS_IEEE): Remove OPTION_MASK_DIRECT_MOVE.\n\t(ISA_FUTURE_MASKS_SERVER): Add OPTION_MASK_PREFIXED_ADDR.\n\t(OTHER_FUTURE_MASKS): Likewise.\n\t(POWERPC_MASKS): Likewise.\n\t* rs6000.c (rs6000_option_override_internal): Error if -mpcrel is\n\tspecified without -mprefixed-addr or -mcpu=future.  Error if\n\t-mprefixed-addr is specified without -mcpu=future.\n\t(rs6000_opt_masks): Add entry for prefixed-addr.\n\t* rs6000.opt (mprefixed-addr): New option.\n\n\nCo-Authored-By: Michael Meissner <meissner@linux.ibm.com>\n\nFrom-SVN: r271781", "tree": {"sha": "1188edb8da9bcfe5414a5ecd10b2c20179ed38d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1188edb8da9bcfe5414a5ecd10b2c20179ed38d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30f78ec756bce65bca622a55916933860279632a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f78ec756bce65bca622a55916933860279632a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f78ec756bce65bca622a55916933860279632a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f78ec756bce65bca622a55916933860279632a/comments", "author": null, "committer": null, "parents": [{"sha": "0e2e15abd0765c1866f36f0312f77c9595e7fdec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e2e15abd0765c1866f36f0312f77c9595e7fdec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e2e15abd0765c1866f36f0312f77c9595e7fdec"}], "stats": {"total": 62, "additions": 49, "deletions": 13}, "files": [{"sha": "c912da6012080b7374a89645b32a66c75db9ffa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f78ec756bce65bca622a55916933860279632a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f78ec756bce65bca622a55916933860279632a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30f78ec756bce65bca622a55916933860279632a", "patch": "@@ -1,3 +1,18 @@\n+2019-05-30  Bill Schmidt  <wschmidt@linux.ibm.com>\n+\t    Michael Meissner  <meissner@linux.ibm.com>\n+\n+\t* rs6000-cpus.def (OTHER_FUSION_MASKS): New #define.\n+\t(ISA_3_0_MASKS_SERVER): Mask off OTHER_FUSION_MASKS.\n+\t(ISA_3_0_MASKS_IEEE): Remove OPTION_MASK_DIRECT_MOVE.\n+\t(ISA_FUTURE_MASKS_SERVER): Add OPTION_MASK_PREFIXED_ADDR.\n+\t(OTHER_FUTURE_MASKS): Likewise.\n+\t(POWERPC_MASKS): Likewise.\n+\t* rs6000.c (rs6000_option_override_internal): Error if -mpcrel is\n+\tspecified without -mprefixed-addr or -mcpu=future.  Error if\n+\t-mprefixed-addr is specified without -mcpu=future.\n+\t(rs6000_opt_masks): Add entry for prefixed-addr.\n+\t* rs6000.opt (mprefixed-addr): New option.\n+\n 2019-05-30  Sam Tebbs  <sam.tebbs@arm.com>\n \n \t* aarch64/aarch64.c (aarch64_post_cfi_startproc): Add "}, {"sha": "101efd541837a8c885748da0a03fe8877c24ece5", "filename": "gcc/config/rs6000/rs6000-cpus.def", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f78ec756bce65bca622a55916933860279632a/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f78ec756bce65bca622a55916933860279632a/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-cpus.def?ref=30f78ec756bce65bca622a55916933860279632a", "patch": "@@ -56,29 +56,35 @@\n \t\t\t\t | OPTION_MASK_QUAD_MEMORY\t\t\\\n \t\t\t\t | OPTION_MASK_QUAD_MEMORY_ATOMIC)\n \n+/* ISA masks setting fusion options.  */\n+#define OTHER_FUSION_MASKS\t(OPTION_MASK_P8_FUSION\t\t\t\\\n+\t\t\t\t | OPTION_MASK_P8_FUSION_SIGN)\n+\n /* Add ISEL back into ISA 3.0, since it is supposed to be a win.  Do not add\n    FLOAT128_HW here until we are ready to make -mfloat128 on by default.  */\n-#define ISA_3_0_MASKS_SERVER\t(ISA_2_7_MASKS_SERVER\t\t\t\\\n-\t\t\t\t | OPTION_MASK_ISEL\t\t\t\\\n-\t\t\t\t | OPTION_MASK_MODULO\t\t\t\\\n-\t\t\t\t | OPTION_MASK_P9_MINMAX\t\t\\\n-\t\t\t\t | OPTION_MASK_P9_MISC\t\t\t\\\n-\t\t\t\t | OPTION_MASK_P9_VECTOR)\n+#define ISA_3_0_MASKS_SERVER\t((ISA_2_7_MASKS_SERVER\t\t\t\\\n+\t\t\t\t  | OPTION_MASK_ISEL\t\t\t\\\n+\t\t\t\t  | OPTION_MASK_MODULO\t\t\t\\\n+\t\t\t\t  | OPTION_MASK_P9_MINMAX\t\t\\\n+\t\t\t\t  | OPTION_MASK_P9_MISC\t\t\t\\\n+\t\t\t\t  | OPTION_MASK_P9_VECTOR)\t\t\\\n+\t\t\t\t & ~OTHER_FUSION_MASKS)\n \n /* Support for the IEEE 128-bit floating point hardware requires a lot of the\n    VSX instructions that are part of ISA 3.0.  */\n #define ISA_3_0_MASKS_IEEE\t(OPTION_MASK_VSX\t\t\t\\\n \t\t\t\t | OPTION_MASK_P8_VECTOR\t\t\\\n-\t\t\t\t | OPTION_MASK_P9_VECTOR\t\t\\\n-\t\t\t\t | OPTION_MASK_DIRECT_MOVE)\n+\t\t\t\t | OPTION_MASK_P9_VECTOR)\n \n /* Support for a future processor's features.  */\n #define ISA_FUTURE_MASKS_SERVER\t(ISA_3_0_MASKS_SERVER\t\t\t\\\n \t\t\t\t | OPTION_MASK_FUTURE\t\t\t\\\n-\t\t\t\t | OPTION_MASK_PCREL)\n+\t\t\t\t | OPTION_MASK_PCREL\t\t\t\\\n+\t\t\t\t | OPTION_MASK_PREFIXED_ADDR)\n \n /* Flags that need to be turned off if -mno-future.  */\n-#define OTHER_FUTURE_MASKS\t(OPTION_MASK_PCREL)\n+#define OTHER_FUTURE_MASKS\t(OPTION_MASK_PCREL\t\t\t\\\n+\t\t\t\t | OPTION_MASK_PREFIXED_ADDR)\n \n /* Flags that need to be turned off if -mno-power9-vector.  */\n #define OTHER_P9_VECTOR_MASKS\t(OPTION_MASK_FLOAT128_HW\t\t\\\n@@ -139,6 +145,7 @@\n \t\t\t\t | OPTION_MASK_POWERPC64\t\t\\\n \t\t\t\t | OPTION_MASK_PPC_GFXOPT\t\t\\\n \t\t\t\t | OPTION_MASK_PPC_GPOPT\t\t\\\n+\t\t\t\t | OPTION_MASK_PREFIXED_ADDR\t\t\\\n \t\t\t\t | OPTION_MASK_QUAD_MEMORY\t\t\\\n \t\t\t\t | OPTION_MASK_QUAD_MEMORY_ATOMIC\t\\\n \t\t\t\t | OPTION_MASK_RECIP_PRECISION\t\t\\"}, {"sha": "fca8bdfc04c01ffe76e3b6ad0e89106bc4c02f01", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f78ec756bce65bca622a55916933860279632a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f78ec756bce65bca622a55916933860279632a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=30f78ec756bce65bca622a55916933860279632a", "patch": "@@ -4296,15 +4296,24 @@ rs6000_option_override_internal (bool global_init_p)\n       rs6000_isa_flags &= ~OPTION_MASK_FLOAT128_HW;\n     }\n \n-  /* -mpcrel requires the prefixed load/store support on FUTURE systems.  */\n-  if (!TARGET_FUTURE && TARGET_PCREL)\n+  /* -mpcrel requires prefixed load/store addressing.  */\n+  if (TARGET_PCREL && !TARGET_PREFIXED_ADDR)\n     {\n       if ((rs6000_isa_flags_explicit & OPTION_MASK_PCREL) != 0)\n-\terror (\"%qs requires %qs\", \"-mpcrel\", \"-mcpu=future\");\n+\terror (\"%qs requires %qs\", \"-mpcrel\", \"-mprefixed-addr\");\n \n       rs6000_isa_flags &= ~OPTION_MASK_PCREL;\n     }\n \n+  /* -mprefixed-addr (and hence -mpcrel) requires -mcpu=future.  */\n+  if (TARGET_PREFIXED_ADDR && !TARGET_FUTURE)\n+    {\n+      if ((rs6000_isa_flags_explicit & OPTION_MASK_PCREL) != 0)\n+\terror (\"%qs requires %qs\", \"-mprefixed-addr\", \"-mcpu=future\");\n+\n+      rs6000_isa_flags &= ~(OPTION_MASK_PCREL | OPTION_MASK_PREFIXED_ADDR);\n+    }\n+\n   /* Print the options after updating the defaults.  */\n   if (TARGET_DEBUG_REG || TARGET_DEBUG_TARGET)\n     rs6000_print_isa_options (stderr, 0, \"after defaults\", rs6000_isa_flags);\n@@ -36375,6 +36384,7 @@ static struct rs6000_opt_mask const rs6000_opt_masks[] =\n   { \"power9-vector\",\t\tOPTION_MASK_P9_VECTOR,\t\tfalse, true  },\n   { \"powerpc-gfxopt\",\t\tOPTION_MASK_PPC_GFXOPT,\t\tfalse, true  },\n   { \"powerpc-gpopt\",\t\tOPTION_MASK_PPC_GPOPT,\t\tfalse, true  },\n+  { \"prefixed-addr\",\t\tOPTION_MASK_PREFIXED_ADDR,\tfalse, true  },\n   { \"quad-memory\",\t\tOPTION_MASK_QUAD_MEMORY,\tfalse, true  },\n   { \"quad-memory-atomic\",\tOPTION_MASK_QUAD_MEMORY_ATOMIC,\tfalse, true  },\n   { \"recip-precision\",\t\tOPTION_MASK_RECIP_PRECISION,\tfalse, true  },"}, {"sha": "3a4353674b8f483af64245e8e38204adb19e2ec8", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f78ec756bce65bca622a55916933860279632a/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f78ec756bce65bca622a55916933860279632a/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=30f78ec756bce65bca622a55916933860279632a", "patch": "@@ -574,6 +574,10 @@ mfuture\n Target Report Mask(FUTURE) Var(rs6000_isa_flags)\n Use instructions for a future architecture.\n \n+mprefixed-addr\n+Target Undocumented Mask(PREFIXED_ADDR) Var(rs6000_isa_flags)\n+Generate (do not generate) prefixed memory instructions.\n+\n mpcrel\n Target Report Mask(PCREL) Var(rs6000_isa_flags)\n Generate (do not generate) pc-relative memory addressing."}]}