{"sha": "519f2506456ffcf79782f7be21a8463d1776b16c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE5ZjI1MDY0NTZmZmNmNzk3ODJmN2JlMjFhODQ2M2QxNzc2YjE2Yw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-05-26T14:22:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-05-26T15:45:58Z"}, "message": "gcc-changelog: handle entries with multi-line file lists\n\nThis extends the ChangeLog entries parsing machinery to handle entries\nthat cover multiple files spanning over multiple lines. For instance:\n\n    * first_file_patched.c, second_file_patched.c, third_file_patched.c,\n    fourth_file_patched.c: Do things.\n\ncontrib/\n\n\t* gcc-changelog/git_commit.py (ChangeLogEntry): Handle entries\n\twith multi-line file lists.\n\t* gcc-changelog/test_email.py: New testcase.\n\t* gcc-changelog/test_patches.txt: Likewise.", "tree": {"sha": "90436a9eadd8be6fecdba9fcc732376da01e7347", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90436a9eadd8be6fecdba9fcc732376da01e7347"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/519f2506456ffcf79782f7be21a8463d1776b16c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/519f2506456ffcf79782f7be21a8463d1776b16c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/519f2506456ffcf79782f7be21a8463d1776b16c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/519f2506456ffcf79782f7be21a8463d1776b16c/comments", "author": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb07057a316f7f8c3daa1a4dd67fd3c5d9d450c7"}], "stats": {"total": 117, "additions": 117, "deletions": 0}, "files": [{"sha": "a24a251d8f39260ef7b5c46551345da8c48fda37", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/519f2506456ffcf79782f7be21a8463d1776b16c/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/519f2506456ffcf79782f7be21a8463d1776b16c/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=519f2506456ffcf79782f7be21a8463d1776b16c", "patch": "@@ -185,14 +185,32 @@ def __init__(self, folder, authors, prs):\n     @property\n     def files(self):\n         files = []\n+\n+        # Whether the content currently processed is between a star prefix the\n+        # end of the file list: a colon or an open paren.\n+        in_location = False\n+\n         for line in self.lines:\n+            # If this line matches the star prefix, start the location\n+            # processing on the information that follows the star.\n             m = star_prefix_regex.match(line)\n             if m:\n+                in_location = True\n                 line = m.group('content')\n+\n+            if in_location:\n+                # Strip everything that is not a filename in \"line\": entities\n+                # \"(NAME)\", entry text (the colon, if present, and anything\n+                # that follows it).\n                 if '(' in line:\n                     line = line[:line.index('(')]\n+                    in_location = False\n                 if ':' in line:\n                     line = line[:line.index(':')]\n+                    in_location = False\n+\n+                # At this point, all that 's left is a list of filenames\n+                # separated by commas and whitespaces.\n                 for file in line.split(','):\n                     file = file.strip()\n                     if file:"}, {"sha": "3d2c8ff24121d33037251ef281fd850e7ffa51a4", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/519f2506456ffcf79782f7be21a8463d1776b16c/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/519f2506456ffcf79782f7be21a8463d1776b16c/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=519f2506456ffcf79782f7be21a8463d1776b16c", "patch": "@@ -286,3 +286,12 @@ def test_changelog_for_ignored_location(self):\n         email = self.from_patch_glob('0001-Update-merge.sh-to-reflect.patch')\n         assert (email.changelog_entries[0].lines[0]\n                 == '\\t* LOCAL_PATCHES: Use git hash instead of SVN id.')\n+\n+    def test_multiline_file_list(self):\n+        email = self.from_patch_glob(\n+            '0001-Ada-Reuse-Is_Package_Or_Generic_Package-where-possib.patch')\n+        assert (email.changelog_entries[0].files\n+                == ['contracts.adb', 'einfo.adb', 'exp_ch9.adb',\n+                    'sem_ch12.adb', 'sem_ch4.adb', 'sem_ch7.adb',\n+                    'sem_ch8.adb', 'sem_elab.adb', 'sem_type.adb',\n+                    'sem_util.adb'])"}, {"sha": "06869bff50447780da66db3c02ba042e1affe05a", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/519f2506456ffcf79782f7be21a8463d1776b16c/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/519f2506456ffcf79782f7be21a8463d1776b16c/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=519f2506456ffcf79782f7be21a8463d1776b16c", "patch": "@@ -2650,4 +2650,94 @@ index dfa7bf3d196..3f4f1629a22 100755\n  \n -- \n 2.26.2\n+=== 0001-Ada-Reuse-Is_Package_Or_Generic_Package-where-possib.patch ===\n+From 557b268fffffdeb0980a17411f458eee333f55c6 Mon Sep 17 00:00:00 2001\n+From: Piotr Trojanek <trojanek@adacore.com>\n+Date: Thu, 12 Dec 2019 11:45:24 +0100\n+Subject: [PATCH] [Ada] Reuse Is_Package_Or_Generic_Package where possible\n+\n+2020-05-26  Piotr Trojanek  <trojanek@adacore.com>\n+\n+gcc/ada/\n+\n+\t* contracts.adb, einfo.adb, exp_ch9.adb, sem_ch12.adb,\n+\tsem_ch4.adb, sem_ch7.adb, sem_ch8.adb, sem_elab.adb,\n+\tsem_type.adb, sem_util.adb: Reuse Is_Package_Or_Generic_Package\n+\twhere possible (similarly, reuse Is_Concurrent_Type if it was\n+\tpossible in the same expressions).\n+---\n+ gcc/ada/contracts.adb |  2 +-\n+ gcc/ada/einfo.adb     | 22 +++++++++++-----------\n+ gcc/ada/exp_ch9.adb   |  2 +-\n+ gcc/ada/sem_ch12.adb  |  2 +-\n+ gcc/ada/sem_ch4.adb   |  2 +-\n+ gcc/ada/sem_ch7.adb   |  6 +++---\n+ gcc/ada/sem_ch8.adb   |  6 +++---\n+ gcc/ada/sem_elab.adb  |  2 +-\n+ gcc/ada/sem_type.adb  |  2 +-\n+ gcc/ada/sem_util.adb  |  6 +++---\n+ 10 files changed, 26 insertions(+), 26 deletions(-)\n+\n+diff --git a/gcc/ada/contracts.adb b/gcc/ada/contracts.adb\n+index 981bb91..d58f136 100644\n+--- a/gcc/ada/contracts.adb\n++++ b/gcc/ada/contracts.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/einfo.adb b/gcc/ada/einfo.adb\n+index 98b508f..1df8ed0 100644\n+--- a/gcc/ada/einfo.adb\n++++ b/gcc/ada/einfo.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/exp_ch9.adb b/gcc/ada/exp_ch9.adb\n+index 64ac353..392a221 100644\n+--- a/gcc/ada/exp_ch9.adb\n++++ b/gcc/ada/exp_ch9.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/sem_ch12.adb b/gcc/ada/sem_ch12.adb\n+index dc3a3c2..209e060 100644\n+--- a/gcc/ada/sem_ch12.adb\n++++ b/gcc/ada/sem_ch12.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/sem_ch4.adb b/gcc/ada/sem_ch4.adb\n+index 5910112..702f265 100644\n+--- a/gcc/ada/sem_ch4.adb\n++++ b/gcc/ada/sem_ch4.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/sem_ch7.adb b/gcc/ada/sem_ch7.adb\n+index 6d9a1db..f217dfd 100644\n+--- a/gcc/ada/sem_ch7.adb\n++++ b/gcc/ada/sem_ch7.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/sem_ch8.adb b/gcc/ada/sem_ch8.adb\n+index f083f7c..7f50b40 100644\n+--- a/gcc/ada/sem_ch8.adb\n++++ b/gcc/ada/sem_ch8.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/sem_elab.adb b/gcc/ada/sem_elab.adb\n+index f3cac46..dbf3fac 100644\n+--- a/gcc/ada/sem_elab.adb\n++++ b/gcc/ada/sem_elab.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/sem_type.adb b/gcc/ada/sem_type.adb\n+index e5d01dd..1868568 100644\n+--- a/gcc/ada/sem_type.adb\n++++ b/gcc/ada/sem_type.adb\n+@@ -0,0 +1 @@\n++\n+diff --git a/gcc/ada/sem_util.adb b/gcc/ada/sem_util.adb\n+index b980b4c..c1b1d9e 100644\n+--- a/gcc/ada/sem_util.adb\n++++ b/gcc/ada/sem_util.adb\n+@@ -0,0 +1 @@\n++\n+-- \n+2.1.4\n "}]}