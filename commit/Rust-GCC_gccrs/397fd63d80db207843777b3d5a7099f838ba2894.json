{"sha": "397fd63d80db207843777b3d5a7099f838ba2894", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk3ZmQ2M2Q4MGRiMjA3ODQzNzc3YjNkNWE3MDk5ZjgzOGJhMjg5NA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-11-09T23:15:59Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-11-09T23:15:59Z"}, "message": "re PR testsuite/87965 (Test cases c-c++-common/pr60226.c and gcc.dg/pr39323-1.c fail starting with r265977)\n\ngcc/testsuite/ChangeLog:\n\n\tPR testsuite/87965\n\t* c-c++-common/pr60226.c: Adjust text of expected diagnostic.\n\t* gcc.dg/pr39323-1.c: Ditto.\n\nFrom-SVN: r265998", "tree": {"sha": "dc23e43f4f8861c57f30e5e43992d47a9eb33e06", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc23e43f4f8861c57f30e5e43992d47a9eb33e06"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/397fd63d80db207843777b3d5a7099f838ba2894", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/397fd63d80db207843777b3d5a7099f838ba2894", "html_url": "https://github.com/Rust-GCC/gccrs/commit/397fd63d80db207843777b3d5a7099f838ba2894", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/397fd63d80db207843777b3d5a7099f838ba2894/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1dbff00c02e63c5ced13bd5c5e7e1b9431c2ff15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1dbff00c02e63c5ced13bd5c5e7e1b9431c2ff15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1dbff00c02e63c5ced13bd5c5e7e1b9431c2ff15"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "562c4e2896edf1a3459bd8fcf6fd0cf36a2b8a3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397fd63d80db207843777b3d5a7099f838ba2894/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397fd63d80db207843777b3d5a7099f838ba2894/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=397fd63d80db207843777b3d5a7099f838ba2894", "patch": "@@ -1,3 +1,9 @@\n+2018-11-09  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR testsuite/87965\n+\t* c-c++-common/pr60226.c: Adjust text of expected diagnostic.\n+\t* gcc.dg/pr39323-1.c: Ditto.\n+\n 2018-11-09  Paul Koning  <ni1d@arrl.net>\n \n \t* gcc.dg/Walloca-16.c: Ignore conflicting types for built-in"}, {"sha": "930829bd488a952032d39591c7986c5cae5ff77d", "filename": "gcc/testsuite/c-c++-common/pr60226.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397fd63d80db207843777b3d5a7099f838ba2894/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60226.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397fd63d80db207843777b3d5a7099f838ba2894/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60226.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fpr60226.c?ref=397fd63d80db207843777b3d5a7099f838ba2894", "patch": "@@ -1,15 +1,15 @@\n-/* PR c/60226 */\n+/* PR c/60226 - ICE initializing array of elements with too large alignment */\n /* { dg-do compile } */\n /* { dg-options \"-Wno-c++-compat\" { target c } } */\n /* { dg-require-effective-target int32plus } */\n \n typedef int __attribute__ ((aligned (1 << 28))) int28;\n int28 foo[4] = {}; /* { dg-error \"alignment of array elements is greater than element size|maximum object file alignment\" } */\n-typedef int __attribute__ ((aligned (1 << 29))) int29; /* { dg-error \"requested alignment is too large|maximum object file alignment\" } */\n+typedef int __attribute__ ((aligned (1 << 29))) int29; /* { dg-error \"requested alignment|maximum object file alignment\" } */\n \n void\n f (void)\n {\n   struct { __attribute__((aligned (1 << 28))) double a; } x1;\n-  struct { __attribute__((aligned (1 << 29))) double a; } x2; /* { dg-error \"requested alignment is too large\" } */\n+  struct { __attribute__((aligned (1 << 29))) double a; } x2; /* { dg-error \"requested alignment\" } */\n }"}, {"sha": "7a7fd63a416866178d067815f036ffe8bb459a15", "filename": "gcc/testsuite/gcc.dg/pr39323-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397fd63d80db207843777b3d5a7099f838ba2894/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39323-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397fd63d80db207843777b3d5a7099f838ba2894/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39323-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr39323-1.c?ref=397fd63d80db207843777b3d5a7099f838ba2894", "patch": "@@ -1,5 +1,5 @@\n-/* PR c/39323 */\n+/* PR c/39323 - MAX_OFILE_ALIGNMENT in elfos.h is too big */\n /* { dg-do compile { target *-*-linux* *-*-gnu* } } */\n \n-int foo __attribute__ ((aligned(1 << 29))) =  20; /* { dg-error \"requested alignment is too large\" } */\n-typedef int __attribute__ ((aligned(1 << 29))) int29; /* { dg-error \"requested alignment is too large\" } */\n+int foo __attribute__ ((aligned(1 << 29))) =  20; /* { dg-error \"requested alignment\" } */\n+typedef int __attribute__ ((aligned(1 << 29))) int29; /* { dg-error \"requested alignment\" } */"}]}