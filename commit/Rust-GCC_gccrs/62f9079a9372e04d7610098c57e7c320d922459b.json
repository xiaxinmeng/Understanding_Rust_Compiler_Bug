{"sha": "62f9079a9372e04d7610098c57e7c320d922459b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjJmOTA3OWE5MzcyZTA0ZDc2MTAwOThjNTdlN2MzMjBkOTIyNDU5Yg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-06-25T16:26:05Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-06-25T16:26:05Z"}, "message": "cilk.c (extract_free_variables): Use is_global_var.\n\n\t* cilk.c (extract_free_variables): Use is_global_var.\n\n\t* c-decl.c: Use is_global_var throughout.\n\t* c-parser.c: Likewise.\n\t* c-typeck.c: Likewise.\n\nFrom-SVN: r224947", "tree": {"sha": "ee57812f3920d45a650fbc3892f19fba214ab28f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee57812f3920d45a650fbc3892f19fba214ab28f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62f9079a9372e04d7610098c57e7c320d922459b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f9079a9372e04d7610098c57e7c320d922459b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f9079a9372e04d7610098c57e7c320d922459b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f9079a9372e04d7610098c57e7c320d922459b/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88f554b4b93e260d8733c372f93e77c91c564e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88f554b4b93e260d8733c372f93e77c91c564e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88f554b4b93e260d8733c372f93e77c91c564e77"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "ecfb52c03e9281035660065094f83c4228040af0", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=62f9079a9372e04d7610098c57e7c320d922459b", "patch": "@@ -1,3 +1,7 @@\n+2015-06-25  Marek Polacek  <polacek@redhat.com>\n+\n+\t* cilk.c (extract_free_variables): Use is_global_var.\n+\n 2015-06-23  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* c-common.c: Don't include target-def.h."}, {"sha": "347e4b9f2a591059fdbc49ad3201a51b7ae254a0", "filename": "gcc/c-family/cilk.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc-family%2Fcilk.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc-family%2Fcilk.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fcilk.c?ref=62f9079a9372e04d7610098c57e7c320d922459b", "patch": "@@ -1063,7 +1063,7 @@ extract_free_variables (tree t, struct wrapper_data *wd,\n \tTREE_ADDRESSABLE (t) = 1;\n     case VAR_DECL:\n     case PARM_DECL:\n-      if (!TREE_STATIC (t) && !DECL_EXTERNAL (t))\n+      if (!is_global_var (t))\n \tadd_variable (wd, t, how);\n       return;\n "}, {"sha": "c8d1c24c064591244b9d9b3fbf8a6d0dcbc3b7c0", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=62f9079a9372e04d7610098c57e7c320d922459b", "patch": "@@ -1,3 +1,9 @@\n+2015-06-25  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-decl.c: Use is_global_var throughout.\n+\t* c-parser.c: Likewise.\n+\t* c-typeck.c: Likewise.\n+\n 2015-06-17  Andrew MacLeod  <amacleod@redhat.com>\n \n \t* c-array-notation.c: Do not include input.h, line-map.h or is-a.h."}, {"sha": "1aa2bd49669895ae5c2f1a882b0da8cc2f111a53", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=62f9079a9372e04d7610098c57e7c320d922459b", "patch": "@@ -4395,7 +4395,7 @@ c_decl_attributes (tree *node, tree attributes, int flags)\n   /* Add implicit \"omp declare target\" attribute if requested.  */\n   if (current_omp_declare_target_attribute\n       && ((TREE_CODE (*node) == VAR_DECL\n-\t   && (TREE_STATIC (*node) || DECL_EXTERNAL (*node)))\n+\t   && is_global_var (*node))\n \t  || TREE_CODE (*node) == FUNCTION_DECL))\n     {\n       if (TREE_CODE (*node) == VAR_DECL\n@@ -4794,8 +4794,7 @@ finish_decl (tree decl, location_t init_loc, tree init,\n \t   TREE_TYPE (decl) = error_mark_node;\n \t }\n \n-      if ((DECL_EXTERNAL (decl) || TREE_STATIC (decl))\n-\t  && DECL_SIZE (decl) != 0)\n+      if (is_global_var (decl) && DECL_SIZE (decl) != 0)\n \t{\n \t  if (TREE_CODE (DECL_SIZE (decl)) == INTEGER_CST)\n \t    constant_expression_warning (DECL_SIZE (decl));\n@@ -4911,8 +4910,7 @@ finish_decl (tree decl, location_t init_loc, tree init,\n \t{\n \t  /* Recompute the RTL of a local array now\n \t     if it used to be an incomplete type.  */\n-\t  if (was_incomplete\n-\t      && !TREE_STATIC (decl) && !DECL_EXTERNAL (decl))\n+\t  if (was_incomplete && !is_global_var (decl))\n \t    {\n \t      /* If we used it already as memory, it must stay in memory.  */\n \t      TREE_ADDRESSABLE (decl) = TREE_USED (decl);"}, {"sha": "f4d18bdaed22c903fb5d65143ff43c6c1797f21f", "filename": "gcc/c/c-parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-parser.c?ref=62f9079a9372e04d7610098c57e7c320d922459b", "patch": "@@ -14769,7 +14769,7 @@ c_parser_omp_threadprivate (c_parser *parser)\n \terror_at (loc, \"%qD is not a variable\", v);\n       else if (TREE_USED (v) && !C_DECL_THREADPRIVATE_P (v))\n \terror_at (loc, \"%qE declared %<threadprivate%> after first use\", v);\n-      else if (! TREE_STATIC (v) && ! DECL_EXTERNAL (v))\n+      else if (! is_global_var (v))\n \terror_at (loc, \"automatic variable %qE cannot be %<threadprivate%>\", v);\n       else if (TREE_TYPE (v) == error_mark_node)\n \t;"}, {"sha": "7ca6e6af7309004d12b5d1d5dfa01c9dbd1f82d4", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62f9079a9372e04d7610098c57e7c320d922459b/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=62f9079a9372e04d7610098c57e7c320d922459b", "patch": "@@ -4380,7 +4380,7 @@ c_mark_addressable (tree exp)\n \tif (C_DECL_REGISTER (x)\n \t    && DECL_NONLOCAL (x))\n \t  {\n-\t    if (TREE_PUBLIC (x) || TREE_STATIC (x) || DECL_EXTERNAL (x))\n+\t    if (TREE_PUBLIC (x) || is_global_var (x))\n \t      {\n \t\terror\n \t\t  (\"global register variable %qD used in nested function\", x);\n@@ -4390,7 +4390,7 @@ c_mark_addressable (tree exp)\n \t  }\n \telse if (C_DECL_REGISTER (x))\n \t  {\n-\t    if (TREE_PUBLIC (x) || TREE_STATIC (x) || DECL_EXTERNAL (x))\n+\t    if (TREE_PUBLIC (x) || is_global_var (x))\n \t      error (\"address of global register variable %qD requested\", x);\n \t    else\n \t      error (\"address of register variable %qD requested\", x);"}]}