{"sha": "99a28ee8c18fd1f452c002f0548c54eb0a7be817", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTlhMjhlZThjMThmZDFmNDUyYzAwMmYwNTQ4YzU0ZWIwYTdiZTgxNw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-09-17T17:22:18Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-09-17T17:22:18Z"}, "message": "reflect: unexport FFICallbackGo; use go:linkname instead\n    \n    The function was always intended to be internal-only, but was exported\n    so that C code could call it. Now that have go:linkname for that, use it.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/195857\n\nFrom-SVN: r275809", "tree": {"sha": "4fdc56912ae62acf461872d66576ead04cf8811a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fdc56912ae62acf461872d66576ead04cf8811a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99a28ee8c18fd1f452c002f0548c54eb0a7be817", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99a28ee8c18fd1f452c002f0548c54eb0a7be817", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99a28ee8c18fd1f452c002f0548c54eb0a7be817", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99a28ee8c18fd1f452c002f0548c54eb0a7be817/comments", "author": null, "committer": null, "parents": [{"sha": "d0bc0cb66bcb0e6a5a5a31a9e900e8ccc98e34e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0bc0cb66bcb0e6a5a5a31a9e900e8ccc98e34e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0bc0cb66bcb0e6a5a5a31a9e900e8ccc98e34e5"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "ab30040ce459eede96a722eeb0d14ab0dd664600", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99a28ee8c18fd1f452c002f0548c54eb0a7be817/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99a28ee8c18fd1f452c002f0548c54eb0a7be817/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=99a28ee8c18fd1f452c002f0548c54eb0a7be817", "patch": "@@ -1,4 +1,4 @@\n-722990deeede7801e4ed3ca5d53ce312a19fcd7a\n+ff18e041624b8c23ffcd747f51e9dda945777d2a\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "88ffca56ca033fd6474e11371d42bf313f3a4974", "filename": "libgo/go/reflect/makefunc_ffi.go", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99a28ee8c18fd1f452c002f0548c54eb0a7be817/libgo%2Fgo%2Freflect%2Fmakefunc_ffi.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99a28ee8c18fd1f452c002f0548c54eb0a7be817/libgo%2Fgo%2Freflect%2Fmakefunc_ffi.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefunc_ffi.go?ref=99a28ee8c18fd1f452c002f0548c54eb0a7be817", "patch": "@@ -15,19 +15,20 @@ func makeFuncFFI(cif unsafe.Pointer, impl unsafe.Pointer)\n // The makeCIF function, implemented in the runtime package, allocates a CIF.\n func makeCIF(ft *funcType) unsafe.Pointer\n \n-// FFICallbackGo implements the Go side of the libffi callback.\n-// It is exported so that C code can call it.\n+// Export ffiCallbackGo so that C code in makefunc_ffi_c.c can call it.\n+//go:linkname ffiCallbackGo\n+\n+// ffiCallbackGo implements the Go side of the libffi callback.\n //\n // The call chain arriving here looks like\n //   some_go_caller\n //   ->some_ffi_internals\n //     ->ffi_callback (in C)\n-//       ->FFICallbackGo\n+//       ->ffiCallbackGo\n //\n // The ffi_callback handles __go_makefunc_can_recover, and\n // then passes off the data as received from ffi here.\n-\n-func FFICallbackGo(results unsafe.Pointer, params unsafe.Pointer, impl *makeFuncImpl) {\n+func ffiCallbackGo(results unsafe.Pointer, params unsafe.Pointer, impl *makeFuncImpl) {\n \tftyp := impl.typ\n \tin := make([]Value, 0, len(ftyp.in))\n \tap := params"}, {"sha": "e57bd512e87062eff6d344ae75b7676ac1ffaf06", "filename": "libgo/go/reflect/makefunc_ffi_c.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99a28ee8c18fd1f452c002f0548c54eb0a7be817/libgo%2Fgo%2Freflect%2Fmakefunc_ffi_c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99a28ee8c18fd1f452c002f0548c54eb0a7be817/libgo%2Fgo%2Freflect%2Fmakefunc_ffi_c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Freflect%2Fmakefunc_ffi_c.c?ref=99a28ee8c18fd1f452c002f0548c54eb0a7be817", "patch": "@@ -25,8 +25,8 @@ void makeFuncFFI(void *cif, void *impl)\n    function ffiCall with the pointer to the arguments, the results area,\n    and the closure structure.  */\n \n-extern void FFICallbackGo(void *result, void **args, ffi_go_closure *closure)\n-  __asm__ (GOSYM_PREFIX \"reflect.FFICallbackGo\");\n+extern void ffiCallbackGo(void *result, void **args, ffi_go_closure *closure)\n+  __asm__ (GOSYM_PREFIX \"reflect.ffiCallbackGo\");\n \n extern void makefuncfficanrecover(Slice)\n   __asm__ (GOSYM_PREFIX \"runtime.makefuncfficanrecover\");\n@@ -72,7 +72,7 @@ ffi_callback (ffi_cif* cif __attribute__ ((unused)), void *results,\n       makefuncfficanrecover (s);\n     }\n \n-  FFICallbackGo(results, args, closure);\n+  ffiCallbackGo(results, args, closure);\n \n   if (i < n)\n     makefuncreturning ();"}]}