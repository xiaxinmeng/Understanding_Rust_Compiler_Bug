{"sha": "1c7836f0e86fe744581fb501700206c6b5cabff8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWM3ODM2ZjBlODZmZTc0NDU4MWZiNTAxNzAwMjA2YzZiNWNhYmZmOA==", "commit": {"author": {"name": "Paulo J. Matos", "email": "paulo.matos@csr.com", "date": "2011-08-10T09:38:52Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-08-10T09:38:52Z"}, "message": "tm.texi.in (CLASS_MAX_NREGS): Fix typo.\n\ngcc/\n2011-08-10  Paulo J. Matos  <paulo.matos@csr.com>\n\n\t* doc/tm.texi.in (CLASS_MAX_NREGS): Fix typo.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r177619", "tree": {"sha": "2259f5ec407e9d0e5dd12c64f94791f94aeb2c29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2259f5ec407e9d0e5dd12c64f94791f94aeb2c29"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1c7836f0e86fe744581fb501700206c6b5cabff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7836f0e86fe744581fb501700206c6b5cabff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1c7836f0e86fe744581fb501700206c6b5cabff8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1c7836f0e86fe744581fb501700206c6b5cabff8/comments", "author": null, "committer": null, "parents": [{"sha": "4ada410ba1cf7440e3cc4b57a55c53da63ae341c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ada410ba1cf7440e3cc4b57a55c53da63ae341c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ada410ba1cf7440e3cc4b57a55c53da63ae341c"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "9560f112cfb5015a18439e6bb21ffa4f576e688a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7836f0e86fe744581fb501700206c6b5cabff8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7836f0e86fe744581fb501700206c6b5cabff8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1c7836f0e86fe744581fb501700206c6b5cabff8", "patch": "@@ -1,3 +1,8 @@\n+2011-08-10  Paulo J. Matos  <paulo.matos@csr.com>\n+\n+\t* doc/tm.texi.in (CLASS_MAX_NREGS): Fix typo.\n+\t* doc/tm.texi: Regenerate.\n+\n 2011-08-10  Georg-Johann Lay  <avr@gjlay.de>\n \t\n \tPR target/29560"}, {"sha": "d383ecaa6b20352c52e6843ac8d6f43e46bea36b", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7836f0e86fe744581fb501700206c6b5cabff8/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7836f0e86fe744581fb501700206c6b5cabff8/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=1c7836f0e86fe744581fb501700206c6b5cabff8", "patch": "@@ -2851,7 +2851,7 @@ A target hook returns the maximum number of consecutive registers\n of class @var{rclass} needed to hold a value of mode @var{mode}.\n \n This is closely related to the macro @code{HARD_REGNO_NREGS}.  In fact,\n-the value returned by @code{TERGET_CLASS_MAX_NREGS (@var{rclass},\n+the value returned by @code{TARGET_CLASS_MAX_NREGS (@var{rclass},\n @var{mode})} target hook should be the maximum value of\n @code{HARD_REGNO_NREGS (@var{regno}, @var{mode})} for all @var{regno}\n values in the class @var{rclass}."}, {"sha": "9d10844d7871bef1a9265aa5fd73b5fcca8bb43d", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1c7836f0e86fe744581fb501700206c6b5cabff8/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1c7836f0e86fe744581fb501700206c6b5cabff8/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=1c7836f0e86fe744581fb501700206c6b5cabff8", "patch": "@@ -2837,7 +2837,7 @@ A target hook returns the maximum number of consecutive registers\n of class @var{rclass} needed to hold a value of mode @var{mode}.\n \n This is closely related to the macro @code{HARD_REGNO_NREGS}.  In fact,\n-the value returned by @code{TERGET_CLASS_MAX_NREGS (@var{rclass},\n+the value returned by @code{TARGET_CLASS_MAX_NREGS (@var{rclass},\n @var{mode})} target hook should be the maximum value of\n @code{HARD_REGNO_NREGS (@var{regno}, @var{mode})} for all @var{regno}\n values in the class @var{rclass}."}]}