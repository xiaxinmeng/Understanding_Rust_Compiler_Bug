{"sha": "431043bdd73c0697871aa0698a7839df5ad55fc1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDMxMDQzYmRkNzNjMDY5Nzg3MWFhMDY5OGE3ODM5ZGY1YWQ1NWZjMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-05-20T09:34:50Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-05-20T09:34:50Z"}, "message": "i386.exp (check_effective_target_3dnow): Fix test code.\n\n\t* gcc.target/i386/i386.exp (check_effective_target_3dnow):\n\tFix test code.\n\t(check_effective_target_xop): Remove __may_alias__ attribute.\n\nFrom-SVN: r159621", "tree": {"sha": "28dfcc62d243fc1934aebe7586ec7e1a4ace87c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28dfcc62d243fc1934aebe7586ec7e1a4ace87c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/431043bdd73c0697871aa0698a7839df5ad55fc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/431043bdd73c0697871aa0698a7839df5ad55fc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/431043bdd73c0697871aa0698a7839df5ad55fc1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/431043bdd73c0697871aa0698a7839df5ad55fc1/comments", "author": null, "committer": null, "parents": [{"sha": "feef2551ec8f4ce562348dac418d8aa4329a9f68", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feef2551ec8f4ce562348dac418d8aa4329a9f68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feef2551ec8f4ce562348dac418d8aa4329a9f68"}], "stats": {"total": 65, "additions": 37, "deletions": 28}, "files": [{"sha": "cde189eed40f8e76e607a28e4e19d453917d9540", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431043bdd73c0697871aa0698a7839df5ad55fc1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431043bdd73c0697871aa0698a7839df5ad55fc1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=431043bdd73c0697871aa0698a7839df5ad55fc1", "patch": "@@ -130,20 +130,20 @@\n \n 2010-05-19  Christian Borntraeger  <borntraeger@de.ibm.com>\n \n-        * tree-ssa-loop-prefetch.c (mem_ref_group, ar_data): Change step\n+\t* tree-ssa-loop-prefetch.c (mem_ref_group, ar_data): Change step\n \tto tree.\n-        (dump_mem_ref): Adopt debug code to handle a tree as step.  This\n+\t(dump_mem_ref): Adopt debug code to handle a tree as step.  This\n \talso checks for a constant int vs.  non-constant but\n \tloop-invariant steps.\n-        (find_or_create_group): Change the sort algorithm to only consider\n+\t(find_or_create_group): Change the sort algorithm to only consider\n \tsteps that are constant ints.\n-        (idx_analyze_ref): Adopt code to handle a tree instead of a\n+\t(idx_analyze_ref): Adopt code to handle a tree instead of a\n \tHOST_WIDE_INT for step.\n-        (gather_memory_references_ref): Handle tree instead of int and be\n+\t(gather_memory_references_ref): Handle tree instead of int and be\n \tprepared to see a NULL_TREE.\n-        (prune_ref_by_self_reuse, prune_ref_by_group_reuse): Do not prune\n+\t(prune_ref_by_self_reuse, prune_ref_by_group_reuse): Do not prune\n \tprefetches if the step cannot be calculated at compile time.\n-        (issue_prefetch_ref): Issue prefetches for non-constant but\n+\t(issue_prefetch_ref): Issue prefetches for non-constant but\n \tloop-invariant steps.\n \n 2010-05-18  Nathan Froyd  <froydnj@codesourcery.com>\n@@ -272,7 +272,7 @@\n \t* configure.ac (HAVE_AS_IX86_REP_LOCK_PREFIX): New test.\n \t* configure: Regenerate.\n \t* config.in: Regenerate.\n-\t* config/i386/i386.c (print_operand) <case ;>: Also print ; if\n+\t* config/i386/i386.c (print_operand) <case ;>: Also print \";\" if\n \t!HAVE_AS_IX86_REP_LOCK_PREFIX.\n \tDon't emit whitespace.\n \t* config/i386/i386.md (*rep_movdi_rex64): Use {%;} after rep.\n@@ -392,9 +392,9 @@\n \tadd BARRIER after previous bb if needed.\n \n 2010-05-17  Nathan Froyd  <froydnj@codesourcery.com>\n- \n+\n \t* tree.c (build_function_type_list_1): Remove bogus assert condition.\n- \n+\n 2010-05-17  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_allocate_stack): Delete\n@@ -430,9 +430,9 @@\n \n 2010-05-17  Christian Borntraeger  <borntraeger@de.ibm.com>\n \n-        * config/s390/s390.c: Define sane prefetch settings and activate\n-        flag_prefetch_loop_arrays on -O3.\n-        * config/s390/s390.h: Declare that read can use write prefetch.\n+\t* config/s390/s390.c: Define sane prefetch settings and activate\n+\tflag_prefetch_loop_arrays on -O3.\n+\t* config/s390/s390.h: Declare that read can use write prefetch.\n \n 2010-05-17  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "e5412e8a9901e8965f39498f814f8d4801603e4d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431043bdd73c0697871aa0698a7839df5ad55fc1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431043bdd73c0697871aa0698a7839df5ad55fc1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=431043bdd73c0697871aa0698a7839df5ad55fc1", "patch": "@@ -1,3 +1,9 @@\n+2010-05-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/i386.exp (check_effective_target_3dnow):\n+\tFix test code.\n+\t(check_effective_target_xop): Remove __may_alias__ attribute.\n+\n 2010-05-20  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/44202\n@@ -62,13 +68,13 @@\n \t* gcc.target/i386/3dnowA-2.c: Likewise.\n \t* gcc.target/i386/pr42549.c: Likewise.\n \n-\t* gcc.target/i386/sse3-addsubpd.c: Use dg-require-effective-target sse3.\n+\t* gcc.target/i386/sse3-lddqu.c: Use dg-require-effective-target sse3. \n+\t* gcc.target/i386/sse3-addsubpd.c: Likewise.\n \t* gcc.target/i386/sse3-addsubps.c: Likewise.\n \t* gcc.target/i386/sse3-haddpd.c: Likewise.\n \t* gcc.target/i386/sse3-haddps.c: Likewise.\n \t* gcc.target/i386/sse3-hsubpd.c: Likewise.\n \t* gcc.target/i386/sse3-hsubps.c: Likewise.\n-\t* gcc.target/i386/sse3-lddqu.c: Likewise.\n \t* gcc.target/i386/sse3-movddup.c: Likewise.\n \t* gcc.target/i386/sse3-movshdup.c: Likewise.\n \t* gcc.target/i386/sse3-movsldup.c: Likewise.\n@@ -492,13 +498,13 @@\n \n 2010-05-17  Christian Borntraeger  <borntraeger@de.ibm.com>\n \n-        PR 44078\n-        * gcc.dg/tree-ssa/prefetch-7.c: Change pattern to match only the old\n-        debug messages but not the newly introduced one.\n+\tPR 44078\n+\t* gcc.dg/tree-ssa/prefetch-7.c: Change pattern to match only the old\n+\tdebug messages but not the newly introduced one.\n \n 2010-05-16  Daniel Franke  <franke.daniel@gmail.com>\n \n-        PR fortran/35779\n+\tPR fortran/35779\n \t* gfortran.dg/initialization_25.f90: Commented testcase.\n \t* gfortran.dg/initialization_26.f90: New.\n \n@@ -624,8 +630,8 @@\n \n 2010-05-13  Daniel Franke  <franke.daniel@gmail.com>\n \n-        PR fortran/35779\n-        * gfortran.dg/initialization_25.f90: New.\n+\tPR fortran/35779\n+\t* gfortran.dg/initialization_25.f90: New.\n \n 2010-05-13  Martin Jambor  <mjambor@suse.cz>\n \n@@ -799,8 +805,8 @@\n \n 2010-05-11  Daniel Franke  <franke.daniel@gmail.com>\n \n-        PR fortran/43711\n-        * gfortran.dg/gomp/pr43711.f90: New.\n+\tPR fortran/43711\n+\t* gfortran.dg/gomp/pr43711.f90: New.\n \n 2010-05-11  Daniel Franke  <franke.daniel@gmail.com>\n \n@@ -1500,7 +1506,7 @@\n \t* gcc.target/arm/thumb-stackframe.c: New test.\n \n 2010-04-27  Shujing Zhao  <pearly.zhao@oracle.com>\n-\t\n+\n \t* gcc.dg/pr32207.c: Fix typo in expected warning messages.\n \t* gcc.dg/misc-column.c: Likewise.\n \t* gcc.dg/Walways-true-1.c: Likewise.\n@@ -1542,7 +1548,7 @@\n \t* obj-c++.dg/stubify-1.mm: Ditto.\n \t* lib/objc-torture.exp: Do not require link success for\n \t\"trivial.m\" in the runtime checks when dowhat = 'compile'.\n-\t* lib/dg-pch.exp: (dg-flags-pch): New Proc.\n+\t* lib/dg-pch.exp (dg-flags-pch): New Proc.\n \t* objc.dg/stubify-1.m:  Restrict to ilp32 targets.  Require\n \tDarwin8/OSX10.4 - compatible code generation.\n \t* objc.dg/stubify-2.m: Ditto."}, {"sha": "8b31231b61c341a60c8db4e4011679542e686799", "filename": "gcc/testsuite/gcc.target/i386/i386.exp", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/431043bdd73c0697871aa0698a7839df5ad55fc1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/431043bdd73c0697871aa0698a7839df5ad55fc1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fi386.exp?ref=431043bdd73c0697871aa0698a7839df5ad55fc1", "patch": "@@ -40,9 +40,12 @@ proc check_effective_target_ms_hook_prologue { } {\n # Return 1 if 3dnow instructions can be compiled.\n proc check_effective_target_3dnow { } {\n     return [check_no_compiler_messages 3dnow object {\n-\tvoid _m_pfadd (void)\n+\ttypedef int __m64 __attribute__ ((__vector_size__ (8)));\n+\ttypedef float __v2sf __attribute__ ((__vector_size__ (8)));\n+\n+\t__m64 _m_pfadd (__m64 __A, __m64 __B)\n \t{\n-\t    __builtin_ia32_pfadd();\n+\t    return (__m64) __builtin_ia32_pfadd ((__v2sf)__A, (__v2sf)__B);\n \t}\n     } \"-O2 -m3dnow\" ]\n }\n@@ -173,7 +176,7 @@ proc check_effective_target_fma4 { } {\n # Return 1 if xop instructions can be compiled.\n proc check_effective_target_xop { } {\n     return [check_no_compiler_messages xop object {\n-\ttypedef long long __m128i __attribute__ ((__vector_size__ (16), __may_alias__));\n+\ttypedef long long __m128i __attribute__ ((__vector_size__ (16)));\n \ttypedef short __v8hi __attribute__ ((__vector_size__ (16)));\n \t__m128i _mm_maccs_epi16(__m128i __A, __m128i __B, __m128i __C)\n \t{"}]}