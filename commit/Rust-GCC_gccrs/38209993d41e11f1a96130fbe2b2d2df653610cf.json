{"sha": "38209993d41e11f1a96130fbe2b2d2df653610cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzgyMDk5OTNkNDFlMTFmMWE5NjEzMGZiZTJiMmQyZGY2NTM2MTBjZg==", "commit": {"author": {"name": "Laurent Guerby", "email": "guerby@acm.org", "date": "2001-06-01T18:08:19Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2001-06-01T18:08:19Z"}, "message": "install.texi: Define srcdir when sources come from CVS.\n\n\t* doc/install.texi: Define srcdir when sources come from CVS.\n\tSignificantly improve markup.  Wrap overly long lines.\n\nCo-Authored-By: Gerald Pfeifer <pfeifer@dbai.tuwien.ac.at>\n\nFrom-SVN: r42783", "tree": {"sha": "f911185cc14204a208f6a839f07ad4362c79ae07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f911185cc14204a208f6a839f07ad4362c79ae07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38209993d41e11f1a96130fbe2b2d2df653610cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38209993d41e11f1a96130fbe2b2d2df653610cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38209993d41e11f1a96130fbe2b2d2df653610cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38209993d41e11f1a96130fbe2b2d2df653610cf/comments", "author": null, "committer": null, "parents": [{"sha": "c386f00fcce21ab5b0d838e12deaf5f09f3e045e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c386f00fcce21ab5b0d838e12deaf5f09f3e045e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c386f00fcce21ab5b0d838e12deaf5f09f3e045e"}], "stats": {"total": 406, "additions": 221, "deletions": 185}, "files": [{"sha": "9d790039231abbd0614936b1ac72af9346d81ad4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38209993d41e11f1a96130fbe2b2d2df653610cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38209993d41e11f1a96130fbe2b2d2df653610cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=38209993d41e11f1a96130fbe2b2d2df653610cf", "patch": "@@ -1,3 +1,9 @@\n+2001-06-01  Laurent Guerby  <guerby@acm.org>\n+            Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n+\n+\t* doc/install.texi: Define srcdir when sources come from CVS.\n+\tSignificantly improve markup.  Wrap overly long lines\n+\n 2001-06-01  DJ Delorie  <dj@redhat.com>\n \n \t* c-tree.texi, contrib.texi, cpp.texi, cppinternals.texi,"}, {"sha": "fc0cf526872ed218d9558917a3a32484b9ebf96b", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 215, "deletions": 185, "changes": 400, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38209993d41e11f1a96130fbe2b2d2df653610cf/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38209993d41e11f1a96130fbe2b2d2df653610cf/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=38209993d41e11f1a96130fbe2b2d2df653610cf", "patch": "@@ -33,7 +33,7 @@\n @settitle Installing GCC: Binaries\n @end ifset\n \n-@comment $Id: install.texi,v 1.8 2001/05/28 07:55:13 gerald Exp $\n+@comment $Id: install.texi,v 1.9 2001/05/31 08:15:15 gerald Exp $\n @c Copyright (C) 2001 Free Software Foundation, Inc.\n @c *** Converted to texinfo by Dean Wakerley, dean@wakerley.com\n \n@@ -146,10 +146,11 @@ The installation procedure itself is broken into five steps.\n @end enumerate\n @end ifnotinfo\n \n-Please note that GCC does not support `@code{make uninstall}' and probably\n+Please note that GCC does not support @samp{make uninstall} and probably\n won't do so in the near future as this would open a can of worms. Instead, \n we suggest that you install GCC into a directory of its own and simply\n-remove that directory when you do not need that specific version of GCC any longer. \n+remove that directory when you do not need that specific version of GCC\n+any longer. \n \n @html\n <hr>\n@@ -232,45 +233,49 @@ Like most GNU software, GCC must be configured before it can be built.\n This document describes the recommended configuration procedure\n for both native and cross targets.\n \n-We use @emph{srcdir} to refer to the toplevel source directory for\n-GCC; we use @emph{objdir} to refer to the toplevel build/object directory.\n+We use @var{srcdir} to refer to the toplevel source directory for\n+GCC; we use @var{objdir} to refer to the toplevel build/object directory.\n+\n+If you obtained the sources via CVS, @var{srcdir} must refer to the top\n+@file{gcc} directory, the one where the @file{MAINTAINERS} can be found,\n+and not its @file{gcc} subdirectory, otherwise the build will fail.\n \n First, we @strong{highly} recommend that GCC be built into a\n separate directory than the sources which does @strong{not} reside\n within the source tree.  This is how we generally build GCC; building\n-where @emph{srcdir} == @emph{objdir} should still work, but doesn't\n-get extensive testing; building where @emph{objdir} is a subdirectory\n-of @emph{srcdir} is unsupported.\n+where @var{srcdir} == @var{objdir} should still work, but doesn't\n+get extensive testing; building where @var{objdir} is a subdirectory\n+of @var{srcdir} is unsupported.\n \n-Second, when configuring a native system, either ``@command{cc}'' or\n-``@command{gcc}'' must be in your path or you must set @command{CC} in\n+Second, when configuring a native system, either @command{cc} or\n+@command{gcc} must be in your path or you must set @env{CC} in\n your environment before running configure.  Otherwise the configuration\n scripts may fail.\n \n To configure GCC:\n \n @example\n-   % mkdir @emph{objdir}\n-   % cd @emph{objdir}\n-   % @emph{srcdir}/configure @strong{[target] [options]}\n+   % mkdir @var{objdir}\n+   % cd @var{objdir}\n+   % @var{srcdir}/configure @strong{[target] [options]}\n @end example\n \n \n @strong{target specification}\n @itemize @bullet\n @item\n-GCC has code to correctly determine the correct value for @strong{target}\n+GCC has code to correctly determine the correct value for @var{target}\n for nearly all native systems.  Therefore, we highly recommend you not \n provide a configure target when configuring a native compiler.\n \n @item\n-@strong{target} must be specified as @option{--target=}@emph{target}\n+@var{target} must be specified as @option{--target=}@var{target}\n when configuring a cross compiler; examples of valid targets would be \n i960-rtems, m68k-coff, sh-elf, etc.\n \n @item\n-Specifying just @strong{target} instead of @option{--target=}@emph{target}\n-implies that the host defaults to @strong{target}.\n+Specifying just @var{target} instead of @option{--target=}@var{target}\n+implies that the host defaults to @var{target}.\n @end itemize\n \n \n@@ -281,107 +286,118 @@ GCC.  A partial list of supported @option{options}:\n \n @itemize @bullet\n @item\n-@option{--prefix=}@emph{dirname} @minus{}@minus{} Specify the toplevel installation\n+@option{--prefix=}@var{dirname} @minus{}@minus{} Specify the toplevel installation\n directory.  This is the recommended way to install the tools into a directory\n other than the default.  The toplevel installation directory defaults to\n @code{/usr/local}.\n \n-We @strong{highly} recommend against @emph{dirname} being the same or a\n-subdirectory of @emph{objdir} or vice versa.\n+We @strong{highly} recommend against @var{dirname} being the same or a\n+subdirectory of @var{objdir} or vice versa.\n \n These additional options control where certain parts of the distribution\n are installed.  Normally you should not need to use these options.\n @itemize @bullet\n @item\n-@option{--with-local-prefix=}@emph{dirname} @minus{}@minus{} Specify the installation\n-directory for local include files.  The default is @code{/usr/local}.\n+@option{--with-local-prefix=}@var{dirname} @minus{}@minus{} Specify the installation\n+directory for local include files.  The default is @file{/usr/local}.\n \n @item\n-@option{--with-gxx-include-dir=}@emph{dirname} @minus{}@minus{} Specify the installation\n-directory for g++ header files.  The default is @command{/usr/local/include/g++}.\n+@option{--with-gxx-include-dir=}@var{dirname} @minus{}@minus{} Specify\n+the installation directory for g++ header files.  The default is\n+@file{/usr/local/include/g++}.\n   \n @end itemize\n \n @item\n-@option{--enable-shared} @minus{}@minus{} Build shared versions of the C++ runtime\n-libraries if supported. This is the default on most systems. Use @option{--disable-shared} \n-for static libraries. Note that up to the gcc version 2.95.x series, static\n-libraries were the default on all systems.\n+@option{--enable-shared} @minus{}@minus{} Build shared versions of the\n+C++ runtime libraries if supported. This is the default on most\n+systems. Use @option{--disable-shared} for static libraries. Note that\n+up to the gcc version 2.95.x series, static libraries were the default\n+on all systems.\n \n @item\n @html\n <a name=\"with-gnu-as\">@option{--with-gnu-as}</a>\n @end html\n- @minus{}@minus{} Specify that the compiler should assume that the\n-assembler it finds is the GNU assembler. However, this does not modify the rules to find an\n-assembler and will result in confusion if found assembler is not actually the GNU assembler.\n-If you have more than one assembler installed on your system, you may want to use this option\n-in connection with @option{--with-as=/path/to/gas}.\n-\n-@item\n-@option{--with-as=@emph{/path/to/as}} @minus{}@minus{} Specify that the compiler should use the\n-assembler pointed to by @emph{pathname}, rather than the one found by the standard rules to\n-find an assembler, which are:\n+@minus{}@minus{} Specify that the compiler should assume that the\n+assembler it finds is the GNU assembler. However, this does not modify\n+the rules to find an assembler and will result in confusion if found\n+assembler is not actually the GNU assembler.  If you have more than one\n+assembler installed on your system, you may want to use this option in\n+connection with @option{--with-as=@file{/path/to/gas}}.\n+\n+@item\n+@option{--with-as=@file{/path/to/as}} @minus{}@minus{} Specify that the\n+compiler should use the assembler pointed to by @var{pathname}, rather\n+than the one found by the standard rules to find an assembler, which\n+are:\n @itemize @bullet\n @item\n-Check the @emph{$exec_prefix/lib/gcc-lib/$target/$version} directory, where @emph{$exec_prefix}\n-defaults to @emph{$prefix} which defaults to @file{/usr/local} unless overridden by the \n-@option{--prefix=/pathname} switch described above. @emph{$target} is the target system triple, \n-such as @emph{sparc-sun-solaris2.7}, and @emph{$version} denotes the GCC version, such as 2.95.2.\n+Check the\n+@file{@var{exec_prefix}/lib/gcc-lib/@var{target}/@var{version}}\n+directory, where @var{exec_prefix} defaults to @var{prefix} which\n+defaults to @file{/usr/local} unless overridden by the\n+@option{--prefix=/pathname} switch described above. @var{target} is the\n+target system triple, such as @var{sparc-sun-solaris2.7}, and\n+@var{version} denotes the GCC version, such as 2.95.2.\n @item\n-Check operating system specific directories (e.g. @file{/usr/ccs/bin} on Sun Solaris).\n+Check operating system specific directories (e.g. @file{/usr/ccs/bin} on\n+Sun Solaris).\n @end itemize\n-Note that these rules do not check for the value of @emph{$PATH}. You may want to use \n-@option{--with-as} if no assembler is installed in the directories listed above, or if you have\n-multiple assemblers installed and want to choose one that is not found by the above rules.\n+Note that these rules do not check for the value of @env{PATH}. You may\n+want to use @option{--with-as} if no assembler is installed in the\n+directories listed above, or if you have multiple assemblers installed\n+and want to choose one that is not found by the above rules.\n \n @item\n @html\n <a name=\"with-gnu-ld\">@option{--with-gnu-ld}</a>\n @end html\n- @minus{}@minus{} Same as @uref{#with-gnu-as,,@option{--with-gnu-as}} but for linker.\n+ @minus{}@minus{} Same as @uref{#with-gnu-as,,@option{--with-gnu-as}}\n+but for linker.\n \n \n @item\n-@option{--with-ld=@emph{/path/to/ld}} @minus{}@minus{} Same as @option{--with-as}, but for the\n-linker.\n+@option{--with-ld=@file{/path/to/ld}} @minus{}@minus{} Same as\n+@option{--with-as}, but for the linker.\n \n @item\n-@option{--with-stabs} @minus{}@minus{} Specify that stabs debugging information should be used\n-instead of whatever format the host normally uses.  Normally GCC uses the\n-same debug format as the host system. \n+@option{--with-stabs} @minus{}@minus{} Specify that stabs debugging\n+information should be used instead of whatever format the host normally\n+uses.  Normally GCC uses the same debug format as the host system.\n \n @item\n-@option{--enable-multilib} @minus{}@minus{} Specify that multiple target libraries\n-should be built to support different target variants, calling conventions,\n-etc.  This is the default. \n+@option{--enable-multilib} @minus{}@minus{} Specify that multiple target\n+libraries should be built to support different target variants, calling\n+conventions, etc.  This is the default.\n \n @item\n-@option{--enable-threads} @minus{}@minus{} Specify that the target supports threads.\n-This affects the Objective-C compiler and runtime library, and exception\n-handling for other languages like C++ and Java.\n+@option{--enable-threads} @minus{}@minus{} Specify that the target\n+supports threads.  This affects the Objective-C compiler and runtime\n+library, and exception handling for other languages like C++ and Java.\n \n @item\n-@option{--enable-threads=}@emph{lib} @minus{}@minus{} Specify that @emph{lib} is the thread\n-support library.  This affects the Objective-C compiler and runtime library,\n-and exception handling for other languages like C++ and Java.\n+@option{--enable-threads=}@var{lib} @minus{}@minus{} Specify that\n+@var{lib} is the thread support library.  This affects the Objective-C\n+compiler and runtime library, and exception handling for other languages\n+like C++ and Java.\n \n @item\n-@option{--with-cpu=}@emph{cpu} @minus{}@minus{} Specify which cpu variant the\n+@option{--with-cpu=}@var{cpu} @minus{}@minus{} Specify which cpu variant the\n compiler should generate code for by default.  This is currently\n only supported on the some ports, specifically arm, powerpc, and\n SPARC. If configure does not recognize the model name (e.g. arm700,\n 603e, or ultrasparc) you provide, please check the configure script\n for a complete list of supported models.\n \n @item\n-@option{--enable-target-optspace} @minus{}@minus{} Specify that target libraries\n-should  be optimized for code space instead of code speed.  This is the\n-default for the m32r platform.\n+@option{--enable-target-optspace} @minus{}@minus{} Specify that target\n+libraries should be optimized for code space instead of code speed.\n+This is the default for the m32r platform.\n \n @item\n-@option{--enable-cpp} @minus{}@minus{} Specify that a shell script which emulates\n-traditional cpp functionality should be installed.\n+@option{--enable-cpp} @minus{}@minus{} Specify that a shell script which\n+emulates traditional cpp functionality should be installed.\n \n @item\n @option{--enable-cpplib} @minus{}@minus{} Specify that the functionality of\n@@ -391,37 +407,38 @@ it is supported, it is not enabled by default, except for snapshots\n very close to November 2000.\n \n @item\n-@option{--without-fast-fixincludes} @minus{}@minus{} Specify that the old, slower\n-method of fixing the system header files should be used. \n+@option{--without-fast-fixincludes} @minus{}@minus{} Specify that the\n+old, slower method of fixing the system header files should be used.\n EGCS 1.1.x and older releases default to the slow version. GCC 2.95 and\n newer releases will default to the fast version.\n \n @item\n-@option{--enable-version-specific-runtime-libs} @minus{}@minus{} Specify that runtime\n-libraries should be installed in the compiler specific subdirectory\n-(@option{$@{libsubdir@}}) rather than the usual places.\n-In addition, libstdc++'s include files will be installed in\n-@option{$@{libsubdir@}/include/g++} unless you overruled it by using\n-@option{--with-gxx-include-dir=}@emph{dirname}.\n-Using this option is particularly useful if you intend to use several\n-versions of GCC in parallel. This is currently supported by @option{libf2c}\n-and @option{libstdc++}.\n-\n-@item\n-@option{--enable-languages=}@emph{lang1}@option{,}@emph{lang2}@option{,...}\n-@minus{}@minus{} Specify that only a particular subset of compilers and their runtime libraries\n-should be built. For a list of valid values for @emph{lang}@option{x} you can issue\n-the following command in the @option{gcc} directory of your GCC source tree:@*\n-@command{grep language= */config-lang.in}@*\n-Currently, you can use any of the following: @code{c++}, @code{f77}, @code{java} and @code{objc}.\n+@option{--enable-version-specific-runtime-libs} @minus{}@minus{} Specify\n+that runtime libraries should be installed in the compiler specific\n+subdirectory (@file{@var{libsubdir}}) rather than the usual places.  In\n+addition, libstdc++'s include files will be installed in\n+@file{@var{libsubdir}/include/g++} unless you overruled it by using\n+@option{--with-gxx-include-dir=}@var{dirname}.  Using this option is\n+particularly useful if you intend to use several versions of GCC in\n+parallel. This is currently supported by @option{libf2c} and\n+@option{libstdc++}.\n+\n+@item\n+@option{--enable-languages=}@var{lang1}@option{,}@var{lang2}@option{,...}\n+@minus{}@minus{} Specify that only a particular subset of compilers and\n+their runtime libraries should be built. For a list of valid values for\n+@var{lang}@option{x} you can issue the following command in the\n+@file{gcc} directory of your GCC source tree:@* @samp{grep language=\n+*/config-lang.in}@* Currently, you can use any of the following:\n+@code{c++}, @code{f77}, @code{java} and @code{objc}.\n @code{CHILL} is not currently maintained, and will almost\n certainly fail to compile.  Note that this switch does not work with\n EGCS 1.1.2 or older versions of egcs.  It is supported in GCC 2.95\n and newer versions.@*\n-If you do not pass this flag, all languages available in the @code{gcc} sub-tree\n-will be configured.  Re-defining LANGUAGES when calling @command{make bootstrap}\n-@strong{*does not*} work anymore, as those language sub-directories might not have been\n-configured!\n+If you do not pass this flag, all languages available in the @file{gcc}\n+sub-tree will be configured.  Re-defining LANGUAGES when calling\n+@samp{make bootstrap} @strong{*does not*} work anymore, as those\n+language sub-directories might not have been configured!\n \n @item\n @option{--disable-libgcj} @minus{}@minus{} Specify that the run-time libraries\n@@ -436,31 +453,35 @@ configure.in so that libgcj is enabled by default on this platform,\n you may use @option{--enable-libgcj} to override the default.\n \n @item\n-@option{--with-dwarf2} @minus{}@minus{} Specify that the compiler should use DWARF2\n-debugging information as the default.\n+@option{--with-dwarf2} @minus{}@minus{} Specify that the compiler should\n+use DWARF2 debugging information as the default.\n @end itemize\n \n Some options which only apply to building cross compilers:\n @itemize @bullet\n @item\n-@option{--with-headers=}@emph{dir} @minus{}@minus{} Specifies a directory which has\n-target include files.\n+@option{--with-headers=}@var{dir} @minus{}@minus{} Specifies a directory\n+which has target include files.\n @emph{This options is required} when building a cross\n-compiler, if @code{$@{prefix@}/$@{target@}/sys-include} doesn't pre-exist.\n-These include files will be copied into the @code{gcc} install directory.\n-Fixincludes will be run on these files to make them compatible with @command{gcc}.\n-@item\n-@option{--with-libs=}@emph{``dir1 dir2 ... dirN''} @minus{}@minus{} Specifies a list of\n-directories which contain the target runtime libraries.  These libraries will\n-be copied into the @code{gcc} install directory.\n-@item\n-@option{--with-newlib} @minus{}@minus{} Specifies that ``newlib'' is being used as the target\n-C library.   This causes @code{__eprintf} to be omitted from libgcc.a on the\n-assumption that it will be provided by newlib.\n+compiler, if @file{@var{prefix}/@var{target}/sys-include} doesn't pre-exist.\n+These include files will be copied into the @file{gcc} install directory.\n+Fixincludes will be run on these files to make them compatible with\n+@command{gcc}.\n+@item\n+@option{--with-libs=}@emph{``dir1 dir2 ... dirN''} @minus{}@minus{}\n+Specifies a list of directories which contain the target runtime\n+libraries.  These libraries will be copied into the @file{gcc} install\n+directory.\n+@item\n+@option{--with-newlib} @minus{}@minus{} Specifies that ``newlib'' is\n+being used as the target C library.  This causes @code{__eprintf} to be\n+omitted from libgcc.a on the assumption that it will be provided by\n+newlib.\n @end itemize\n  \n-Note that each @option{--enable} option has a corresponding @option{--disable} option and\n-that each @option{--with} option has a corresponding @option{--without} option.\n+Note that each @option{--enable} option has a corresponding\n+@option{--disable} option and that each @option{--with} option has a\n+corresponding @option{--without} option.\n \n @html\n <hr>\n@@ -492,12 +513,12 @@ We @strong{highly} recommend that GCC be built using GNU make;\n other versions may work, then again they might not.\n \n (For example, many broken versions of make will fail if you use the\n-recommended setup where @emph{objdir} is different from @emph{srcdir}.)\n+recommended setup where @var{objdir} is different from @var{srcdir}.)\n \n \n @section Building a native compiler\n \n-For a native build issue the command `@code{make bootstrap}'.  This \n+For a native build issue the command @samp{make bootstrap}.  This \n will build the entire GCC system, which includes the following steps:\n \n @itemize @bullet\n@@ -522,25 +543,25 @@ Build runtime libraries using the stage3 compiler from the previous step.\n  \n @end itemize\n \n-If you are short on disk space you might consider `@code{make\n-bootstrap-lean}' instead.  This is identical to `@code{make\n-bootstrap}' except that object files from the stage1 and\n+If you are short on disk space you might consider @samp{make\n+bootstrap-lean} instead.  This is identical to @samp{make\n+bootstrap} except that object files from the stage1 and\n stage2 of the 3-stage bootstrap of the compiler are deleted as\n soon as they are no longer needed.\n \n \n If you want to save additional space during the bootstrap and in\n the final installation as well, you can build the compiler binaries\n-without debugging information with ``@code{make CFLAGS='-O' LIBCFLAGS='-g\n--O2' LIBCXXFLAGS='-g -O2 -fno-implicit-templates' bootstrap}''.  This will save\n+without debugging information with @samp{make CFLAGS='-O' LIBCFLAGS='-g\n+-O2' LIBCXXFLAGS='-g -O2 -fno-implicit-templates' bootstrap}.  This will save\n roughly 40% of disk space both for the bootstrap and the final installation.\n (Libraries will still contain debugging information.)\n \n-If you used the flag @code{--enable-languages=...} to restrict\n+If you used the flag @option{--enable-languages=...} to restrict\n the compilers to be built, only those you've actually enabled will be\n built. This will of course only build those runtime libraries, for\n which the particular compiler has been built.  Please note,\n-that re-defining LANGUAGES when calling `@code{make bootstrap}'\n+that re-defining LANGUAGES when calling @samp{make bootstrap}\n @strong{*does not*} work anymore!\n \n \n@@ -559,7 +580,7 @@ native compiler.  You can then use the native GCC compiler to build the\n cross compiler.\n \n Assuming you have already installed a native copy of GCC and configured\n-your cross compiler, issue the command `@code{make}', which performs the\n+your cross compiler, issue the command @samp{make}, which performs the\n following steps:\n \n @itemize @bullet\n@@ -584,9 +605,9 @@ Note that if an error occurs in any step the make process will exit.\n \n @section Building in parallel\n \n-If you have a multiprocessor system you can use `@code{make bootstrap\n-MAKE=\"make -j 2\" -j 2}' or just `@code{make -j 2 bootstrap}'\n-for GNU Make 3.79 and above instead of just `@code{make bootstrap}'\n+If you have a multiprocessor system you can use @samp{make bootstrap\n+MAKE=\"make -j 2\" -j 2} or just @samp{make -j 2 bootstrap}\n+for GNU Make 3.79 and above instead of just @samp{make bootstrap}\n when building GCC.  You can use a bigger number instead of two if\n you like.  In most cases, it won't help to use a number bigger than\n the number of processors in your machine.\n@@ -666,7 +687,7 @@ well as the C++ runtime libraries.\n @section How can I run the test suite on selected tests?\n \n As a first possibility to cut down the number of tests that are run it is\n-possible to use `@code{make check-gcc}' or `@code{make check-g++}'\n+possible to use @samp{make check-gcc} or @samp{make check-g++}\n in the gcc subdirectory of the object directory. To further cut down the\n tests the following is possible:\n \n@@ -686,8 +707,8 @@ matches 9805*.\n The *.exp files are located in the testsuite directories of the GCC\n source, the most important ones being compile.exp, execute.exp, dg.exp\n and old-deja.exp. To get a list of the possible *.exp files, pipe the\n-output of `@code{make check}' into a file and look at the\n-\"@code{Running ...  .exp}\" lines.\n+output of @samp{make check} into a file and look at the\n+@samp{Running ...  .exp} lines.\n \n @section How to interpret test results\n \n@@ -714,9 +735,10 @@ ERROR: the testsuite detected an error\n WARNING: the testsuite detected a possible problem\n @end itemize\n \n-It is normal for some tests to report unexpected failures.  At the current time \n-our testing harness does not allow fine grained control over whether or not a \n-test is expected to fail.  We expect to fix this problem in future releases.\n+It is normal for some tests to report unexpected failures.  At the\n+current time our testing harness does not allow fine grained control\n+over whether or not a test is expected to fail.  We expect to fix this\n+problem in future releases.\n \n \n @section Submitting test results\n@@ -756,22 +778,23 @@ should look here first if you think your results are unreasonable.\n @end ifnothtml\n \n Now that GCC has been built and tested, you can install it with\n-`@command{cd @emph{objdir}; make install}' for a native compiler or\n-`@command{cd @emph{objdir}; make install LANGUAGES=\"c c++\"}' for \n+@samp{cd @emph{objdir}; make install} for a native compiler or\n+@samp{cd @emph{objdir}; make install LANGUAGES=\"c c++\"} for \n a cross compiler (note installing cross compilers will be easier in the \n next release!).\n \n That step completes the installation of GCC; user level binaries can\n-be found in @code{@emph{prefix}/bin} where @code{@emph{prefix}} is the value you specified\n-with the @option{--prefix} to configure (or @file{/usr/local} by default).\n+be found in @file{@var{prefix}/bin} where @var{prefix} is the value you\n+specified with the @option{--prefix} to configure (or @file{/usr/local}\n+by default).\n \n If you don't mind, please quickly review the \n @uref{http://gcc.gnu.org/gcc-2.95/buildstat.html,,build status page}.\n If your system is not listed, send a note to\n @uref{mailto:gcc@@gcc.gnu.org,,gcc@@gcc.gnu.org} indicating\n that you successfully built and installed GCC.\n \n-Include the output from running @code{@emph{srcdir}/config.guess}.  (Do not\n+Include the output from running @file{@var{srcdir}/config.guess}.  (Do not\n send us the config.guess file itself, just the output from running\n it!)\n \n@@ -816,7 +839,8 @@ contact their makers.\n AIX:\n @itemize\n @item\n-@uref{http://www-frec.bull.com/docs/download.htm,,Bull's Freeware and Shareware Archive for AIX};\n+@uref{http://www-frec.bull.com/docs/download.htm,,Bull's Freeware and\n+Shareware Archive for AIX};\n \n @item\n @uref{http://aixpdlib.seas.ucla.edu,,UCLA Software Library for AIX};\n@@ -829,7 +853,8 @@ DOS - @uref{http://www.delorie.com/djgpp/,,DJGPP};\n @uref{http://hpux.cae.wisc.edu/,,HP-UX Porting Center};\n \n @item\n-@uref{http://www.sco.com/skunkware/devtools/index.html#gcc,,SCO OpenServer/Unixware};\n+@uref{http://www.sco.com/skunkware/devtools/index.html#gcc,,SCO\n+OpenServer/Unixware};\n \n @item\n Solaris (SPARC, Intel) - @uref{http://www.sunfreeware.com/,,Sunfreeware};\n@@ -988,7 +1013,7 @@ the least of which is incorrect linking of shared libraries.\n @end html\n \n If you install a shared libstdc++ and, when you link a non-trivial C++\n-program (for example, @code{gcc/testsuite/g++.other/delete3.C}),\n+program (for example, @file{gcc/testsuite/g++.other/delete3.C}),\n the linker reports a couple of errors about multiply-defined symbols\n (for example, @code{nothrow}, @code{__throw} and\n @code{terminate(void)}), you've probably got a linker bug, for\n@@ -1008,24 +1033,24 @@ will have to be relinked.\n \n The magic spell is to add @code{-Wl,-all,-lgcc,-none} to the\n definition of macro @code{SHDEPS} in\n-@code{libstdc++/config/dec-osf.ml} @emph{before}\n-@code{alpha*-dec-osf*/libstdc++/Makefile} is created (a \n+@file{libstdc++/config/dec-osf.ml} @emph{before}\n+@file{alpha*-dec-osf*/libstdc++/Makefile} is created (a \n @uref{dec-osf-shlibstdc++.patch,,patch} \n that does just that is available).  If the Makefile already exists, run\n-@code{./config.status} within directory\n-@code{alpha*-dec-osf*/libstdc++} (and\n-@code{alpha*-dec-osf*/ieee/libstdc++}, if it also exists).\n-Remove any existing @code{libstdc++.so*} from such directories,\n-and run @code{make all-target-libstdc++} in the top-level\n-directory, then @code{make install-target-libstdc++}.\n+@file{./config.status} within directory\n+@file{alpha*-dec-osf*/libstdc++} (and\n+@file{alpha*-dec-osf*/ieee/libstdc++}, if it also exists).\n+Remove any existing @file{libstdc++.so*} from such directories,\n+and run @samp{make all-target-libstdc++} in the top-level\n+directory, then @samp{make install-target-libstdc++}.\n \n If you have already removed the build tree, you may just remove\n-@code{libstdc++.so.2.10.0} from the install tree and re-create\n+@file{libstdc++.so.2.10.0} from the install tree and re-create\n it with the command \n-@code{gcc -shared -o libstdc++.so.2.10.0 -Wl,-all,-lstdc++,-lgcc,-none -lm}.\n-If the @code{ieee}\n+@samp{gcc -shared -o libstdc++.so.2.10.0 -Wl,-all,-lstdc++,-lgcc,-none -lm}.\n+If the @file{ieee}\n sub-directory exists, repeat this command in it, with the additional\n-flag @code{-mieee}.\n+flag @option{-mieee}.\n \n @html\n </p>\n@@ -1041,7 +1066,7 @@ We require GNU binutils 2.10 or newer.\n <h3><a name=\"avr\">avr</a></h3>\n @end html\n \n-Use `@command{configure} @option{--target=avr} \n+Use @samp{configure --target=avr} \n @option{--enable-languages=\"c\"}' to configure GCC.\n \n Further installation notes and other useful information about AVR tools\n@@ -1091,8 +1116,9 @@ assembler.\n \n Specifically, @option{-g} does not work on HP-UX (since that system\n uses a peculiar debugging format which GCC does not know about), unless you\n-use GAS and GDB and configure GCC with the @uref{./configure.html#with-gnu-as,,@option{--with-gnu-as}}\n-and @option{--with-as=...} options.\n+use GAS and GDB and configure GCC with the\n+@uref{./configure.html#with-gnu-as,,@option{--with-gnu-as}} and\n+@option{--with-as=...} options.\n \n If you wish to use pa-risc 2.0 architecture support, you must use either\n the HP assembler, gas/binutils-2.11 or a recent\n@@ -1113,8 +1139,8 @@ shared libraries from working.  Use the GNU assembler to avoid these problems.\n \n \n The configuration scripts for GCC will also trigger a bug in the hpux9\n-shell.  To avoid this problem set CONFIG_SHELL to @file{/bin/ksh} and SHELL \n-to @file{/bin/ksh} in your environment.\n+shell.  To avoid this problem set @env{CONFIG_SHELL} to @file{/bin/ksh}\n+and @env{SHELL} to @file{/bin/ksh} in your environment.\n \n \n @html\n@@ -1144,9 +1170,9 @@ Latin-America\n The HP assembler on these systems is much better than the hpux9 assembler,\n but still has some problems.  Most notably the assembler inserts timestamps\n into each object file it creates, causing the 3-stage comparison test to fail\n-during a `@code{make bootstrap}'.  You should be able to continue by \n-saying `@code{make all}' after getting the failure from `@code{make \n-bootstrap}'.\n+during a @samp{make bootstrap}.  You should be able to continue by \n+saying @samp{make all} after getting the failure from @samp{make \n+bootstrap}.\n \n \n @html\n@@ -1199,13 +1225,13 @@ may use either the UDK debugger or GDB to debug programs built by this\n version of GCC.\n \n If you are building languages other than C, you must follow the instructions\n-about invoking `@code{make bootstrap}' because the native OpenServer\n-compiler will build a @code{cc1plus} that will not correctly parse many\n-valid C++ programs including those in @code{libgcc.a}.  \n-@strong{You must do a `@code{make bootstrap}' if you are building with the \n+about invoking @samp{make bootstrap} because the native OpenServer\n+compiler will build a @command{cc1plus} that will not correctly parse many\n+valid C++ programs including those in @file{libgcc.a}.  \n+@strong{You must do a @samp{make bootstrap} if you are building with the \n native compiler.}\n \n-Use of the `@option{-march-pentiumpro}' flag can result in\n+Use of the @option{-march-pentiumpro} flag can result in\n unrecognized opcodes when using the native assembler on OS versions before\n 5.0.6. (Support for P6 opcodes was added to the native ELF assembler in\n that version.)  While it's rather rare to see these emitted by GCC yet, \n@@ -1226,16 +1252,17 @@ The native SCO assembler that is provided with the OS at no\n charge is normally required.  If, however, you must be able to use\n the GNU assembler (perhaps you're compiling code with asms that\n require GAS syntax) you may configure this package using the flags\n-@uref{./configure.html#with-gnu-as,,@option{--with-gnu-as}}.  You must use a recent version of GNU\n-binutils; versions past 2.9.1 seem to work well.\n+@uref{./configure.html#with-gnu-as,,@option{--with-gnu-as}}.  You must\n+use a recent version of GNU binutils; versions past 2.9.1 seem to work\n+well.\n \n In general, the @option{--with-gnu-as} option isn't as well tested\n as the native assembler.\n \n Look in @file{gcc/config/i386/sco5.h} (search for \"messy\") for\n additional OpenServer-specific flags.\n \n-Systems based on OpenServer before 5.0.4 (`@code{uname -X}'\n+Systems based on OpenServer before 5.0.4 (@samp{uname -X}\n will tell you what you're running) require TLS597 from ftp.sco.com/TLS\n for C++ constructors and destructors to work right.\n \n@@ -1245,7 +1272,7 @@ code.  This can be seen as execution testsuite failures when using\n -fPIC on 921215-1.c, 931002-1.c, nestfunc-1.c, and gcov-1.c.\n For 5.0.5, an updated linker that will cure this problem is\n available.  You must install both \n-@uref{ftp://ftp.sco.com/Supplements/rs505a/,,ftp://ftp.sco.com/Supplements/rs505a/} \n+@uref{ftp://ftp.sco.com/Supplements/rs505a/,,ftp://ftp.sco.com/Supplements/rs505a/}\n and @uref{ftp://ftp.sco.com/SLS/,,OSS499A}.\n \n The dynamic linker in OpenServer 5.0.5 (earlier versions may show\n@@ -1255,11 +1282,11 @@ Although it's conceivable that the error could be triggered by other\n code, only G77-compiled code has been observed to cause this abort.\n If you are getting core dumps immediately upon execution of your\n g77 program - and especially if it's compiled with -fPIC - try applying\n-@uref{sco_osr5_g77.patch,,@code{`sco_osr5_g77.patch'}} to your libf2c and \n+@uref{sco_osr5_g77.patch,,@file{sco_osr5_g77.patch}} to your libf2c and \n rebuilding GCC.  \n Affected faults, when analyzed in a debugger, will show a stack\n backtrace with a fault occurring in @code{rtld()} and the program\n-running as @code{/usr/lib/ld.so.1}.  This problem has been reported to SCO \n+running as @file{/usr/lib/ld.so.1}.  This problem has been reported to SCO \n engineering and will hopefully be addressed in later releases.\n \n \n@@ -1273,7 +1300,7 @@ GCC 2.95.2, when configured to use the GNU assembler, would invoke\n it with the @code{-s} switch, that GNU as up to 2.9.5.0.12 does\n not support.  If you'd rather not use a newer GNU as nor the native\n assembler, you'll need the patch \n-@uref{x86-sol2-gas.patch,,@code{`x86-sol2-gas.patch'}}.\n+@uref{x86-sol2-gas.patch,,@file{x86-sol2-gas.patch}}.\n \n \n @html\n@@ -1301,17 +1328,18 @@ from the right place) while making the tools not think we're actually\n building a cross compiler.   The easiest way to do this is with a configure\n command like this:\n \n-@command{  CC=/udk/usr/ccs/bin/cc <i>/your/path/to/</i>gcc/configure \n+@samp{CC=/udk/usr/ccs/bin/cc <i>/your/path/to/</i>gcc/configure \n --host=i686-pc-udk --target=i686-pc-udk --program-prefix=udk-}\n \n @emph{You should substitute 'i686' in the above command with the appropriate\n processor for your host.}\n \n-You should follow this with a `@command{make bootstrap}'  then\n-`@command{make install}'.  You can then access the UDK-targeted GCC \n-tools by adding @code{udk-} before the commonly known name.  For example, to \n-invoke the C compiler, you would use `@code{udk-gcc}'.  They will coexist \n-peacefully with any native-target GCC tools you may have installed.\n+You should follow this with a @samp{make bootstrap}  then\n+@samp{make install}.  You can then access the UDK-targeted GCC \n+tools by adding @command{udk-} before the commonly known name.  For\n+example, to invoke the C compiler, you would use @command{udk-gcc}.\n+They will coexist peacefully with any native-target GCC tools you may\n+have installed.\n \n \n @html\n@@ -1325,18 +1353,19 @@ AIX Make frequently has problems with GCC makefiles.  GNU Make 3.76 or\n newer is recommended to build on this platform.\n \n Errors involving \"alloca\" when building GCC generally are due\n-to an incorrect definition of @command{CC} in the Makefile or mixing files\n+to an incorrect definition of @var{CC} in the Makefile or mixing files\n compiled with the native C compiler and GCC.  During the stage1 phase of\n the build, the native AIX compiler @strong{must} be invoked as \"cc\"\n (not \"xlc\").  Once @command{configure} has been informed of\n-\"xlc\", one needs to use \"make distclean\" to remove the\n-configure cache files and ensure that @command{CC} environment variable\n+\"xlc\", one needs to use @samp{make distclean} to remove the\n+configure cache files and ensure that @env{CC} environment variable\n does not provide a definition that will confuse @command{configure}.\n If this error occurs during stage2 or later, then the problem most likely\n is the version of Make (see above).\n \n Binutils 2.10 does not support AIX 4.3.  Binutils available from the\n-@uref{http://www-1.ibm.com/servers/aix/products/aixos/linux/,,AIX Toolbox for Linux: GNU and Open Source tools for AIX};\n+@uref{http://www-1.ibm.com/servers/aix/products/aixos/linux/,,AIX\n+Toolbox for Linux: GNU and Open Source tools for AIX};\n website does work.  Binutils 2.11 is expected to include AIX 4.3\n support.  The GNU Assembler is necessary for libstdc++ to build.  The\n AIX native ld still is recommended.  The native AIX tools do\n@@ -1384,7 +1413,7 @@ use NLS to support locale-specific representations of various data\n formats including floating-point numbers (e.g., \".\"  vs \",\" for\n separating decimal fractions).  There have been problems reported where\n GCC does not produce the same floating-point formats that the assembler\n-expects.  If one encouters this problem, set the @command{LANG}\n+expects.  If one encouters this problem, set the @env{LANG}\n environment variable to \"C\" or \"En_US\".\n \n \n@@ -1418,7 +1447,7 @@ replacement that does can be obtained at\n If you try to build the integrated C++ & C++ runtime libraries on this system\n you will run into trouble with include files.  The way to get around this is\n to use the following sequence.  Note you must have write permission to\n-the directory @emph{prefix} you specified in the configuration process of GCC\n+the directory @var{prefix} you specified in the configuration process of GCC\n for this sequence to work.\n \n @example\n@@ -1509,7 +1538,7 @@ If you see:\n @end example\n \n then your version of @command{cc} uses the O32 ABI default.  You\n-should set the environment variable @command{CC} to 'cc -n32'\n+should set the environment variable @env{CC} to @samp{cc -n32}\n before configuring GCC.\n \n GCC does not currently support generating O32 ABI binaries in the\n@@ -1694,7 +1723,7 @@ GCC version 2.95 is not able to compile code correctly for\n @code{sparc64} targets.  Users of the Linux kernel, at least,\n 12~can use the @code{sparc32} program to start up a new shell\n invocation with an environment that causes @command{configure} to\n-recognize (via @command{uname -a}) the system as @command{sparc-*-*} instead.\n+recognize (via @samp{uname -a}) the system as @var{sparc-*-*} instead.\n \n \n @html\n@@ -1755,8 +1784,8 @@ system, and using it to compile a more recent GCC, to avoid bugs in\n the vendor compiler.  Old releases of GCC 1 and GCC 2 are available in \n the old-releases directory on the \n @uref{../mirrors.html,,GCC mirror sites}.  Header bugs may generally \n-be avoided using @code{fixincludes}, but bugs or deficiencies in libraries and \n-the operating system may still cause problems.\n+be avoided using @command{fixincludes}, but bugs or deficiencies in\n+libraries and the operating system may still cause problems.\n  \n For some systems, old versions of GNU binutils may also be useful, \n and are available from pub/binutils/old-releases on \n@@ -1773,9 +1802,10 @@ current GCC) is to be found in the GCC texinfo manual.\n <h3><a name=\"elf_targets\">all ELF targets (SVR4, Solaris, etc.)</a></h3>\n @end html\n \n-C++ support is significantly better on ELF targets if you use the @uref{./configure.html#with-gnu-ld,,GNU\n-linker}; duplicate copies of inlines, vtables and template instantiations\n-will be discarded automatically.\n+C++ support is significantly better on ELF targets if you use the\n+@uref{./configure.html#with-gnu-ld,,GNU linker}; duplicate copies of\n+inlines, vtables and template instantiations will be discarded\n+automatically.\n \n \n @html"}]}