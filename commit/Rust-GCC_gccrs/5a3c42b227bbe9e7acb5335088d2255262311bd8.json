{"sha": "5a3c42b227bbe9e7acb5335088d2255262311bd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWEzYzQyYjIyN2JiZTllN2FjYjUzMzUwODhkMjI1NTI2MjMxMWJkOA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-03-16T10:48:55Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-03-16T10:49:12Z"}, "message": "i386: Use ix86_output_ssemov for SImode TYPE_SSEMOV\n\nThere is no need to set mode attribute to XImode since ix86_output_ssemov\ncan properly encode xmm16-xmm31 registers with and without AVX512VL.\n\nRemove ext_sse_reg_operand since it is no longer needed.\n\ngcc/\n\n\tPR target/89229\n\t* config/i386/i386.md (*movsi_internal): Call ix86_output_ssemov\n\tfor TYPE_SSEMOV.  Remove ext_sse_reg_operand and TARGET_AVX512VL\n\tcheck.\n\t* config/i386/predicates.md (ext_sse_reg_operand): Removed.\n\ngcc/testsuite/\n\n\tPR target/89229\n\t* gcc.target/i386/pr89229-7a.c: New test.\n\t* gcc.target/i386/pr89229-7b.c: Likewise.\n\t* gcc.target/i386/pr89229-7c.c: Likewise.", "tree": {"sha": "29e7304ba20dd7dc321ecd4e9eebf121592bddcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/29e7304ba20dd7dc321ecd4e9eebf121592bddcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a3c42b227bbe9e7acb5335088d2255262311bd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3c42b227bbe9e7acb5335088d2255262311bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a3c42b227bbe9e7acb5335088d2255262311bd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a3c42b227bbe9e7acb5335088d2255262311bd8/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e41d4a0a567f1091f646d076d8c9fad91422572b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e41d4a0a567f1091f646d076d8c9fad91422572b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e41d4a0a567f1091f646d076d8c9fad91422572b"}], "stats": {"total": 75, "additions": 47, "deletions": 28}, "files": [{"sha": "8ae1371c7185dece64f54641c905301b48a9a423", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a3c42b227bbe9e7acb5335088d2255262311bd8", "patch": "@@ -1,3 +1,11 @@\n+2020-03-16  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89229\n+\t* config/i386/i386.md (*movsi_internal): Call ix86_output_ssemov\n+\tfor TYPE_SSEMOV.  Remove ext_sse_reg_operand and TARGET_AVX512VL\n+\tcheck.\n+\t* config/i386/predicates.md (ext_sse_reg_operand): Removed.\n+\n 2020-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/94167"}, {"sha": "3051624d89fdaa01c4a95d7546a99df70723f350", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 23, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5a3c42b227bbe9e7acb5335088d2255262311bd8", "patch": "@@ -2261,25 +2261,7 @@\n       gcc_unreachable ();\n \n     case TYPE_SSEMOV:\n-      switch (get_attr_mode (insn))\n-\t{\n-\tcase MODE_SI:\n-          return \"%vmovd\\t{%1, %0|%0, %1}\";\n-\tcase MODE_TI:\n-\t  return \"%vmovdqa\\t{%1, %0|%0, %1}\";\n-\tcase MODE_XI:\n-\t  return \"vmovdqa32\\t{%g1, %g0|%g0, %g1}\";\n-\n-\tcase MODE_V4SF:\n-\t  return \"%vmovaps\\t{%1, %0|%0, %1}\";\n-\n-\tcase MODE_SF:\n-\t  gcc_assert (!TARGET_AVX);\n-          return \"movss\\t{%1, %0|%0, %1}\";\n-\n-\tdefault:\n-\t  gcc_unreachable ();\n-\t}\n+      return ix86_output_ssemov (insn, operands);\n \n     case TYPE_MMX:\n       return \"pxor\\t%0, %0\";\n@@ -2345,10 +2327,7 @@\n      (cond [(eq_attr \"alternative\" \"2,3\")\n \t      (const_string \"DI\")\n \t    (eq_attr \"alternative\" \"8,9\")\n-\t      (cond [(ior (match_operand 0 \"ext_sse_reg_operand\")\n-\t\t\t  (match_operand 1 \"ext_sse_reg_operand\"))\n-\t\t       (const_string \"XI\")\n-\t\t     (match_test \"TARGET_AVX\")\n+\t      (cond [(match_test \"TARGET_AVX\")\n \t\t       (const_string \"TI\")\n \t\t     (ior (not (match_test \"TARGET_SSE2\"))\n \t\t\t  (match_test \"optimize_function_for_size_p (cfun)\"))"}, {"sha": "71f4cb1193cdca6ed5a5a32a03e9dd024fbff68f", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=5a3c42b227bbe9e7acb5335088d2255262311bd8", "patch": "@@ -61,11 +61,6 @@\n   (and (match_code \"reg\")\n        (match_test \"SSE_REGNO_P (REGNO (op))\")))\n \n-;; True if the operand is an AVX-512 new register.\n-(define_predicate \"ext_sse_reg_operand\"\n-  (and (match_code \"reg\")\n-       (match_test \"EXT_REX_SSE_REGNO_P (REGNO (op))\")))\n-\n ;; Return true if op is a QImode register.\n (define_predicate \"any_QIreg_operand\"\n   (and (match_code \"reg\")"}, {"sha": "b133809a188d2a4a28783ca8ea8b9cfddcdd2f89", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5a3c42b227bbe9e7acb5335088d2255262311bd8", "patch": "@@ -1,3 +1,10 @@\n+2020-03-16  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/89229\n+\t* gcc.target/i386/pr89229-7a.c: New test.\n+\t* gcc.target/i386/pr89229-7b.c: Likewise.\n+\t* gcc.target/i386/pr89229-7c.c: Likewise.\n+\n 2020-03-16  Iain Buclaw  <ibuclaw@gdcproject.org>\n \n \t* gdc.dg/asm1.d: Add new test for ICE in asm parser."}, {"sha": "fd56f4470161ec71844ac5b3e25cbf1698b878b3", "filename": "gcc/testsuite/gcc.target/i386/pr89229-7a.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7a.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7a.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7a.c?ref=5a3c42b227bbe9e7acb5335088d2255262311bd8", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512\" } */\n+\n+extern int i;\n+\n+int\n+foo1 (void)\n+{\n+  register int xmm16 __asm (\"xmm16\") = i;\n+  asm volatile (\"\" : \"+v\" (xmm16));\n+  register int xmm17 __asm (\"xmm17\") = xmm16;\n+  asm volatile (\"\" : \"+v\" (xmm17));\n+  return xmm17;\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmovdqa32\\[^\\n\\r]*xmm1\\[67]\\[^\\n\\r]*xmm1\\[67]\" 1 } } */\n+/* { dg-final { scan-assembler-not \"%zmm\\[0-9\\]+\" } } */"}, {"sha": "d3a56e6e2b7ff276f54c7dd654f07e52acfb58cd", "filename": "gcc/testsuite/gcc.target/i386/pr89229-7b.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7b.c?ref=5a3c42b227bbe9e7acb5335088d2255262311bd8", "patch": "@@ -0,0 +1,6 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512 -mno-avx512vl\" } */\n+\n+#include \"pr89229-7a.c\"\n+\n+/* { dg-final { scan-assembler-times \"vmovdqa32\\[^\\n\\r]*zmm1\\[67]\\[^\\n\\r]*zmm1\\[67]\" 1 } } */"}, {"sha": "e14634e1edda899dd2bd0637baf5b82294535e8b", "filename": "gcc/testsuite/gcc.target/i386/pr89229-7c.c", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a3c42b227bbe9e7acb5335088d2255262311bd8/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr89229-7c.c?ref=5a3c42b227bbe9e7acb5335088d2255262311bd8", "patch": "@@ -0,0 +1,7 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512 -mprefer-vector-width=512\" } */\n+\n+#include \"pr89229-7a.c\"\n+\n+/* { dg-final { scan-assembler-times \"vmovdqa32\\[^\\n\\r]*xmm1\\[67]\\[^\\n\\r]*xmm1\\[67]\" 1 } } */\n+/* { dg-final { scan-assembler-not \"%zmm\\[0-9\\]+\" } } */"}]}