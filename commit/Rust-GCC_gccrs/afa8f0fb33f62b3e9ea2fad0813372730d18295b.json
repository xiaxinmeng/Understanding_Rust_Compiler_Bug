{"sha": "afa8f0fb33f62b3e9ea2fad0813372730d18295b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWZhOGYwZmIzM2Y2MmIzZTllYTJmYWQwODEzMzcyNzMwZDE4Mjk1Yg==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-11-12T01:10:56Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2006-11-12T01:10:56Z"}, "message": "re PR rtl-optimization/28812 (RTL aliasing vs may_alias and structs)\n\n2006-11-11  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR rtl-opt/28812\n        * alias.c (fixed_scalar_and_varying_struct_p): Don't return a\n        non null value if the struct memory access is in the 0th\n        aliasing set.\n\n2006-11-11  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR rtl-opt/28812\n        * gcc.c-torture/execute/mayalias-3.c: New test.\n\nFrom-SVN: r118716", "tree": {"sha": "c8284268269f7ffcd0974620bef89b17e3bd6242", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8284268269f7ffcd0974620bef89b17e3bd6242"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/afa8f0fb33f62b3e9ea2fad0813372730d18295b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa8f0fb33f62b3e9ea2fad0813372730d18295b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afa8f0fb33f62b3e9ea2fad0813372730d18295b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afa8f0fb33f62b3e9ea2fad0813372730d18295b/comments", "author": null, "committer": null, "parents": [{"sha": "a607b34fff050a8223e78f5ae1179a2e5bade795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a607b34fff050a8223e78f5ae1179a2e5bade795", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a607b34fff050a8223e78f5ae1179a2e5bade795"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "3cca0dcc2d364d757e952b6f62cc9530fd76fbdd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa8f0fb33f62b3e9ea2fad0813372730d18295b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa8f0fb33f62b3e9ea2fad0813372730d18295b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=afa8f0fb33f62b3e9ea2fad0813372730d18295b", "patch": "@@ -1,3 +1,10 @@\n+2006-11-11  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR rtl-opt/28812\n+\t* alias.c (fixed_scalar_and_varying_struct_p): Don't return a\n+\tnon null value if the struct memory access is in the 0th\n+\taliasing set.\n+\n 2006-11-12  Jie Zhang  <jie.zhang@analog.com>\n \n \tRevert"}, {"sha": "d027b79a053e9519f301f15ccba285bd83626c7d", "filename": "gcc/alias.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa8f0fb33f62b3e9ea2fad0813372730d18295b/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa8f0fb33f62b3e9ea2fad0813372730d18295b/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=afa8f0fb33f62b3e9ea2fad0813372730d18295b", "patch": "@@ -1857,13 +1857,15 @@ fixed_scalar_and_varying_struct_p (rtx mem1, rtx mem2, rtx mem1_addr,\n   if (! flag_strict_aliasing)\n     return NULL_RTX;\n \n-  if (MEM_SCALAR_P (mem1) && MEM_IN_STRUCT_P (mem2)\n+  if (MEM_ALIAS_SET (mem2)\n+      && MEM_SCALAR_P (mem1) && MEM_IN_STRUCT_P (mem2)\n       && !varies_p (mem1_addr, 1) && varies_p (mem2_addr, 1))\n     /* MEM1 is a scalar at a fixed address; MEM2 is a struct at a\n        varying address.  */\n     return mem1;\n \n-  if (MEM_IN_STRUCT_P (mem1) && MEM_SCALAR_P (mem2)\n+  if (MEM_ALIAS_SET (mem1)\n+      && MEM_IN_STRUCT_P (mem1) && MEM_SCALAR_P (mem2)\n       && varies_p (mem1_addr, 1) && !varies_p (mem2_addr, 1))\n     /* MEM2 is a scalar at a fixed address; MEM1 is a struct at a\n        varying address.  */"}, {"sha": "525ac64774bd6c07d11481a6a3484ada825794b4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa8f0fb33f62b3e9ea2fad0813372730d18295b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa8f0fb33f62b3e9ea2fad0813372730d18295b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=afa8f0fb33f62b3e9ea2fad0813372730d18295b", "patch": "@@ -1,3 +1,8 @@\n+2006-11-11  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR rtl-opt/28812\n+\t* gcc.c-torture/execute/mayalias-3.c: New test.\n+\n 2006-11-11  Richard Sandiford  <richard@codesourcery.com>\n \n \tPR middle-end/27528\n@@ -12,8 +17,8 @@\n \n 2006-11-10 Paul Thomas <pault@gcc.gnu.org>\n \n-   PR fortran/29758\n-   * gfortran.dg/reshape_source_size_1.f90: New test.\n+\tPR fortran/29758\n+\t* gfortran.dg/reshape_source_size_1.f90: New test.\n \n 2006-11-10 Paul Thomas <pault@gcc.gnu.org>\n \n@@ -23,7 +28,7 @@\n 2006-11-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/29777\n-        * lib/target-supports.exp (vect_widen_mult_hi_to_si): Add i?86-*-*\n+\t* lib/target-supports.exp (vect_widen_mult_hi_to_si): Add i?86-*-*\n \tand x86_64-*-* targets.\n \n 2006-11-09  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>"}, {"sha": "3d667911f4e059bbc65bdce20f6944845c5e84d7", "filename": "gcc/testsuite/gcc.c-torture/execute/mayalias-3.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/afa8f0fb33f62b3e9ea2fad0813372730d18295b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmayalias-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/afa8f0fb33f62b3e9ea2fad0813372730d18295b/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmayalias-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fmayalias-3.c?ref=afa8f0fb33f62b3e9ea2fad0813372730d18295b", "patch": "@@ -0,0 +1,27 @@\n+struct S { short x; };\n+typedef struct S __attribute__((__may_alias__)) test;\n+\n+test *p;\n+\n+int g(int *a)\n+{\n+ p = (test*)a;\n+}\n+\n+int f()\n+{\n+  int a;\n+  g(&a);\n+  a = 10;\n+  test s={1};\n+  *p=s;\n+  return a;\n+}\n+\n+int main() {\n+  if (f() == 10)\n+    __builtin_abort();\n+  return 0;\n+}\n+\n+"}]}