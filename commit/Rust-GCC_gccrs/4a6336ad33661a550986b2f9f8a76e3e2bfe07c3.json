{"sha": "4a6336ad33661a550986b2f9f8a76e3e2bfe07c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGE2MzM2YWQzMzY2MWE1NTA5ODZiMmY5ZjhhNzZlM2UyYmZlMDdjMw==", "commit": {"author": {"name": "Joern Rennecke", "email": "amylaar@spamcop.net", "date": "2010-11-12T17:11:06Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-11-12T17:11:06Z"}, "message": "re PR bootstrap/44756 ([meta-bug] --enable-werror-always issues)\n\n\tPR bootstrap/44756\n\tPR build/44767\n\t* doc/tm.texi.in (LOCAL_ALIGNMENT): State that the type, if any,\n\tshould be unsigned.\n\t(STACK_SLOT_ALIGNMENT, LOCAL_DECL_ALIGNMENT, PUSH_ROUNDING): Likewise.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r166660", "tree": {"sha": "433a896c02c74cfe60230e744f23d4dc76883c0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/433a896c02c74cfe60230e744f23d4dc76883c0c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3/comments", "author": null, "committer": null, "parents": [{"sha": "c8967d95e76a80c490308b9372437b18bfd01a31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c8967d95e76a80c490308b9372437b18bfd01a31", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c8967d95e76a80c490308b9372437b18bfd01a31"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "e4ca3aa2840c1f82d584fceeef954ea6c2f3df5d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4a6336ad33661a550986b2f9f8a76e3e2bfe07c3", "patch": "@@ -36,6 +36,13 @@\n \tPR rtl-optimization/46433\n \t* var-tracking.c: Include tm_p.h .\n \n+\tPR bootstrap/44756\n+\tPR build/44767\n+\t* doc/tm.texi.in (LOCAL_ALIGNMENT): State that the type, if any,\n+\tshould be unsigned.\n+\t(STACK_SLOT_ALIGNMENT, LOCAL_DECL_ALIGNMENT, PUSH_ROUNDING): Likewise.\n+\t* doc/tm.texi: Regenerate.\n+\n 2010-11-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR debug/46375"}, {"sha": "229916da8c04a1af14b6e8ab824caed455bfc016", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=4a6336ad33661a550986b2f9f8a76e3e2bfe07c3", "patch": "@@ -1114,6 +1114,8 @@ If this macro is not defined, then @var{basic-align} is used.\n \n One use of this macro is to increase alignment of medium-size data to\n make it all fit in fewer cache lines.\n+\n+It the value of this macro has a type, it should be an unsigned type.\n @end defmac\n \n @defmac STACK_SLOT_ALIGNMENT (@var{type}, @var{mode}, @var{basic-align})\n@@ -1129,6 +1131,8 @@ be used.\n \n This macro is to set alignment of stack slot to the maximum alignment\n of all possible modes which the slot may have.\n+\n+It the value of this macro has a type, it should be an unsigned type.\n @end defmac\n \n @defmac LOCAL_DECL_ALIGNMENT (@var{decl})\n@@ -1141,6 +1145,8 @@ is used.\n \n One use of this macro is to increase alignment of medium-size data to\n make it all fit in fewer cache lines.\n+\n+It the value of this macro has a type, it should be an unsigned type.\n @end defmac\n \n @defmac MINIMUM_ALIGNMENT (@var{exp}, @var{mode}, @var{align})\n@@ -3851,6 +3857,8 @@ alignment.  Then the definition should be\n @smallexample\n #define PUSH_ROUNDING(BYTES) (((BYTES) + 1) & ~1)\n @end smallexample\n+\n+It the value of this macro has a type, it should be an unsigned type.\n @end defmac\n \n @findex current_function_outgoing_args_size"}, {"sha": "a9bc6044571e2370afab0c652db6f91b107a0f40", "filename": "gcc/doc/tm.texi.in", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3/gcc%2Fdoc%2Ftm.texi.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4a6336ad33661a550986b2f9f8a76e3e2bfe07c3/gcc%2Fdoc%2Ftm.texi.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi.in?ref=4a6336ad33661a550986b2f9f8a76e3e2bfe07c3", "patch": "@@ -1104,6 +1104,8 @@ If this macro is not defined, then @var{basic-align} is used.\n \n One use of this macro is to increase alignment of medium-size data to\n make it all fit in fewer cache lines.\n+\n+It the value of this macro has a type, it should be an unsigned type.\n @end defmac\n \n @defmac STACK_SLOT_ALIGNMENT (@var{type}, @var{mode}, @var{basic-align})\n@@ -1119,6 +1121,8 @@ be used.\n \n This macro is to set alignment of stack slot to the maximum alignment\n of all possible modes which the slot may have.\n+\n+It the value of this macro has a type, it should be an unsigned type.\n @end defmac\n \n @defmac LOCAL_DECL_ALIGNMENT (@var{decl})\n@@ -1131,6 +1135,8 @@ is used.\n \n One use of this macro is to increase alignment of medium-size data to\n make it all fit in fewer cache lines.\n+\n+It the value of this macro has a type, it should be an unsigned type.\n @end defmac\n \n @defmac MINIMUM_ALIGNMENT (@var{exp}, @var{mode}, @var{align})\n@@ -3841,6 +3847,8 @@ alignment.  Then the definition should be\n @smallexample\n #define PUSH_ROUNDING(BYTES) (((BYTES) + 1) & ~1)\n @end smallexample\n+\n+It the value of this macro has a type, it should be an unsigned type.\n @end defmac\n \n @findex current_function_outgoing_args_size"}]}