{"sha": "945891207919f9486961857c5de8db42a4771687", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTQ1ODkxMjA3OTE5Zjk0ODY5NjE4NTdjNWRlOGRiNDJhNDc3MTY4Nw==", "commit": {"author": {"name": "Daniel Berlin", "email": "dberlin@dberlin.org", "date": "2005-04-11T20:15:33Z"}, "committer": {"name": "Daniel Berlin", "email": "dberlin@gcc.gnu.org", "date": "2005-04-11T20:15:33Z"}, "message": "re PR tree-optimization/20926 (ICE: tree check, in recent builds)\n\n\n2005-04-11  Daniel Berlin  <dberlin@dberlin.org>\n\n\tFix PR tree-optimization/20926\n\n\t* tree-ssa-alias.c (add_type_alias): Handle subvars.\n\nFrom-SVN: r97982", "tree": {"sha": "5d436d627d39db10a9dd78f74cca0af2b9c8c1da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d436d627d39db10a9dd78f74cca0af2b9c8c1da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/945891207919f9486961857c5de8db42a4771687", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945891207919f9486961857c5de8db42a4771687", "html_url": "https://github.com/Rust-GCC/gccrs/commit/945891207919f9486961857c5de8db42a4771687", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945891207919f9486961857c5de8db42a4771687/comments", "author": {"login": "dberlin", "id": 324715, "node_id": "MDQ6VXNlcjMyNDcxNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/324715?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dberlin", "html_url": "https://github.com/dberlin", "followers_url": "https://api.github.com/users/dberlin/followers", "following_url": "https://api.github.com/users/dberlin/following{/other_user}", "gists_url": "https://api.github.com/users/dberlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/dberlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dberlin/subscriptions", "organizations_url": "https://api.github.com/users/dberlin/orgs", "repos_url": "https://api.github.com/users/dberlin/repos", "events_url": "https://api.github.com/users/dberlin/events{/privacy}", "received_events_url": "https://api.github.com/users/dberlin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19f1ebc794e936ef25955c0404e6dac505e6e41e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19f1ebc794e936ef25955c0404e6dac505e6e41e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19f1ebc794e936ef25955c0404e6dac505e6e41e"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "beb69e756cb83f4efde5cadda4a418fd91581b0e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945891207919f9486961857c5de8db42a4771687/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945891207919f9486961857c5de8db42a4771687/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=945891207919f9486961857c5de8db42a4771687", "patch": "@@ -1,3 +1,9 @@\n+2005-04-11  Daniel Berlin  <dberlin@dberlin.org>\n+\n+\tFix PR tree-optimization/20926\n+\t\n+\t* tree-ssa-alias.c (add_type_alias): Handle subvars.\n+\t\n 2005-04-11  Devang Patel  <dpatel@apple.com>\n \n \t* config/rs6000.c (rs6000_emit_vector_select): Fix vector select"}, {"sha": "7d8e783174e8f68b4d2714d0855bb1ef3d128aca", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/945891207919f9486961857c5de8db42a4771687/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/945891207919f9486961857c5de8db42a4771687/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=945891207919f9486961857c5de8db42a4771687", "patch": "@@ -2704,6 +2704,7 @@ add_type_alias (tree ptr, tree var)\n   varray_type aliases;\n   tree tag;\n   var_ann_t ann = var_ann (ptr);\n+  subvar_t svars;\n \n   if (ann->type_mem_tag == NULL_TREE)\n     {\n@@ -2748,7 +2749,18 @@ add_type_alias (tree ptr, tree var)\n      for PTR's type tag.  */\n   gcc_assert (var_ann (var)->type_mem_tag == NOT_A_TAG);\n   tag = ann->type_mem_tag;\n-  add_may_alias (tag, var);\n+\n+  /* If VAR has subvars, add the subvars to the tag instead of the\n+     actual var.  */\n+  if (var_can_have_subvars (var)\n+      && (svars = get_subvars_for_var (var)))\n+    {\n+      subvar_t sv;      \n+      for (sv = svars; sv; sv = sv->next)\n+\tadd_may_alias (tag, sv->var);\n+    }\n+  else\n+    add_may_alias (tag, var);\n \n   /* TAG and its set of aliases need to be marked for renaming.  */\n   mark_sym_for_renaming (tag);"}]}