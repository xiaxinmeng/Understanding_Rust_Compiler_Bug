{"sha": "322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzIyYWU0MGIxYWJiN2I2MGI3MjRjNmVjYzdiY2I4YWZjNGEzNWJlNA==", "commit": {"author": {"name": "Ira Rosen", "email": "irar@il.ibm.com", "date": "2004-10-14T16:39:07Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2004-10-14T16:39:07Z"}, "message": "tree-vectorizer.c (vect_analyze_data_refs): Call vect_get_base_and_bit_offset to get memory tag for array ref.\n\n2004-10-14  Ira Rosen  <irar@il.ibm.com>\n\n        * tree-vectorizer.c (vect_analyze_data_refs): Call\n        vect_get_base_and_bit_offset to get memory tag for array ref.\n        (vect_create_addr_base_for_vector_ref): Remove redundant checks.\n\nFrom-SVN: r89038", "tree": {"sha": "8b9c70d4b1fcfe94a589397b404459bfaafe17cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b9c70d4b1fcfe94a589397b404459bfaafe17cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4/comments", "author": {"login": "irar2", "id": 16818592, "node_id": "MDQ6VXNlcjE2ODE4NTky", "avatar_url": "https://avatars.githubusercontent.com/u/16818592?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irar2", "html_url": "https://github.com/irar2", "followers_url": "https://api.github.com/users/irar2/followers", "following_url": "https://api.github.com/users/irar2/following{/other_user}", "gists_url": "https://api.github.com/users/irar2/gists{/gist_id}", "starred_url": "https://api.github.com/users/irar2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irar2/subscriptions", "organizations_url": "https://api.github.com/users/irar2/orgs", "repos_url": "https://api.github.com/users/irar2/repos", "events_url": "https://api.github.com/users/irar2/events{/privacy}", "received_events_url": "https://api.github.com/users/irar2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "180a373d0d5d4534d7393b1ad5537d9f9ab7e79e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/180a373d0d5d4534d7393b1ad5537d9f9ab7e79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/180a373d0d5d4534d7393b1ad5537d9f9ab7e79e"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "d38d84d071d3a1e35f12412b555b051394737aa3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4", "patch": "@@ -1,3 +1,9 @@\n+2004-10-14  Ira Rosen  <irar@il.ibm.com>\n+\n+\t* tree-vectorizer.c (vect_analyze_data_refs): Call\n+\tvect_get_base_and_bit_offset to get memory tag for array ref.\n+\t(vect_create_addr_base_for_vector_ref): Remove redundant checks.\n+\n 2004-10-14  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* configure.ac: Use $LN_S for creating symlinks (not $LN)."}, {"sha": "382139f4e357534f03c28098fb78eaf7fe9621de", "filename": "gcc/tree-vectorizer.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4/gcc%2Ftree-vectorizer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4/gcc%2Ftree-vectorizer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vectorizer.c?ref=322ae40b1abb7b60b724c6ecc7bcb8afc4a35be4", "patch": "@@ -750,10 +750,7 @@ vect_create_addr_base_for_vector_ref (tree stmt,\n \n   is_ptr_ref = TREE_CODE (data_ref_base_type) == POINTER_TYPE\n \t       && TREE_CODE (data_ref_base) == SSA_NAME;\n-  is_array_ref = TREE_CODE (data_ref_base_type) == ARRAY_TYPE\n-\t\t && (TREE_CODE (data_ref_base) == VAR_DECL\n-\t\t     || TREE_CODE (data_ref_base) == COMPONENT_REF\n-\t\t     || TREE_CODE (data_ref_base) == ARRAY_REF);\n+  is_array_ref = TREE_CODE (data_ref_base_type) == ARRAY_TYPE;\n   is_addr_expr = TREE_CODE (data_ref_base) == ADDR_EXPR\n                  || TREE_CODE (data_ref_base) == PLUS_EXPR\n                  || TREE_CODE (data_ref_base) == MINUS_EXPR;\n@@ -3456,6 +3453,8 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo)\n   struct data_reference *dr;\n   tree tag;\n   tree address_base;\n+  bool base_aligned_p;\n+  tree offset;\n \n   if (vect_debug_details (NULL))\n     fprintf (dump_file, \"\\n<<vect_analyze_data_refs>>\\n\");\n@@ -3565,7 +3564,10 @@ vect_analyze_data_refs (loop_vec_info loop_vinfo)\n \t\t{\n \t\tcase ARRAY_REF:\n \t\t  dr = analyze_array (stmt, TREE_OPERAND (symbl, 0), DR_IS_READ(dr));\n-\t\t  STMT_VINFO_MEMTAG (stmt_info) = DR_BASE_NAME (dr);\n+\t\t  STMT_VINFO_MEMTAG (stmt_info) = \n+\t\t     vect_get_base_and_bit_offset (dr, DR_BASE_NAME (dr), NULL_TREE,\n+\t\t\t\t\t\t   loop_vinfo, &offset, \n+\t\t\t\t\t\t   &base_aligned_p);\n \t\t  break;\n \t\t  \n \t\tcase VAR_DECL: "}]}