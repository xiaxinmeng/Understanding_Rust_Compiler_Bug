{"sha": "078c4a8c534aa3a22735cd0af4b168ed844b671a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc4YzRhOGM1MzRhYTNhMjI3MzVjZDBhZjRiMTY4ZWQ4NDRiNjcxYQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2015-08-27T16:15:45Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2015-08-27T16:15:45Z"}, "message": "* configure: Regenerate.\n\nFrom-SVN: r227266", "tree": {"sha": "d8dfd6fddbe378c8224d91231436a3943224a09a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8dfd6fddbe378c8224d91231436a3943224a09a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/078c4a8c534aa3a22735cd0af4b168ed844b671a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078c4a8c534aa3a22735cd0af4b168ed844b671a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/078c4a8c534aa3a22735cd0af4b168ed844b671a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/078c4a8c534aa3a22735cd0af4b168ed844b671a/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07ad3ec6b12dea788cd36b98eb7d26e353e29766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07ad3ec6b12dea788cd36b98eb7d26e353e29766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07ad3ec6b12dea788cd36b98eb7d26e353e29766"}], "stats": {"total": 105, "additions": 75, "deletions": 30}, "files": [{"sha": "6661c960101bdc06487bed6766e129aca091742f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078c4a8c534aa3a22735cd0af4b168ed844b671a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078c4a8c534aa3a22735cd0af4b168ed844b671a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=078c4a8c534aa3a22735cd0af4b168ed844b671a", "patch": "@@ -1,3 +1,7 @@\n+2015-08-27  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* configure: Regenerate.\n+\n 2015-08-27  Alan Lawrence  <alan.lawrence@arm.com>\n \n \tPR tree-optimization/67283"}, {"sha": "0d313831aac55bb013cfb7fc6ded63f20276a9c7", "filename": "gcc/configure", "status": "modified", "additions": 71, "deletions": 30, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/078c4a8c534aa3a22735cd0af4b168ed844b671a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/078c4a8c534aa3a22735cd0af4b168ed844b671a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=078c4a8c534aa3a22735cd0af4b168ed844b671a", "patch": "@@ -10614,31 +10614,6 @@ fi\n \n \n \n-          am_save_CPPFLAGS=\"$CPPFLAGS\"\n-\n-  for element in $INCICONV; do\n-    haveit=\n-    for x in $CPPFLAGS; do\n-\n-  acl_save_prefix=\"$prefix\"\n-  prefix=\"$acl_final_prefix\"\n-  acl_save_exec_prefix=\"$exec_prefix\"\n-  exec_prefix=\"$acl_final_exec_prefix\"\n-  eval x=\\\"$x\\\"\n-  exec_prefix=\"$acl_save_exec_prefix\"\n-  prefix=\"$acl_save_prefix\"\n-\n-      if test \"X$x\" = \"X$element\"; then\n-        haveit=yes\n-        break\n-      fi\n-    done\n-    if test -z \"$haveit\"; then\n-      CPPFLAGS=\"${CPPFLAGS}${CPPFLAGS:+ }$element\"\n-    fi\n-  done\n-\n-\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for iconv\" >&5\n $as_echo_n \"checking for iconv... \" >&6; }\n if test \"${am_cv_func_iconv+set}\" = set; then :\n@@ -10647,6 +10622,8 @@ else\n \n     am_cv_func_iconv=\"no, consider installing GNU libiconv\"\n     am_cv_lib_iconv=no\n+                    am_save_CPPFLAGS=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $INCICONV\"\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n #include <stdlib.h>\n@@ -10666,8 +10643,49 @@ if ac_fn_cxx_try_link \"$LINENO\"; then :\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n+    CPPFLAGS=\"$am_save_CPPFLAGS\"\n+\n+    if test \"$am_cv_func_iconv\" != yes && test -d ../libiconv; then\n+      for _libs in .libs _libs; do\n+        am_save_CPPFLAGS=\"$CPPFLAGS\"\n+        am_save_LIBS=\"$LIBS\"\n+        CPPFLAGS=\"$CPPFLAGS -I../libiconv/include\"\n+        LIBS=\"$LIBS ../libiconv/lib/$_libs/libiconv.a\"\n+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+#include <stdlib.h>\n+#include <iconv.h>\n+int\n+main ()\n+{\n+iconv_t cd = iconv_open(\"\",\"\");\n+           iconv(cd,NULL,NULL,NULL,NULL);\n+           iconv_close(cd);\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_cxx_try_link \"$LINENO\"; then :\n+  INCICONV=\"-I../libiconv/include\"\n+          LIBICONV='${top_builddir}'/../libiconv/lib/$_libs/libiconv.a\n+          LTLIBICONV='${top_builddir}'/../libiconv/lib/libiconv.la\n+          am_cv_lib_iconv=yes\n+          am_cv_func_iconv=yes\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+        CPPFLAGS=\"$am_save_CPPFLAGS\"\n+        LIBS=\"$am_save_LIBS\"\n+        if test \"$am_cv_func_iconv\" = \"yes\"; then\n+          break\n+        fi\n+      done\n+    fi\n+\n     if test \"$am_cv_func_iconv\" != yes; then\n+      am_save_CPPFLAGS=\"$CPPFLAGS\"\n       am_save_LIBS=\"$LIBS\"\n+      CPPFLAGS=\"$LIBS $INCICONV\"\n       LIBS=\"$LIBS $LIBICONV\"\n       cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n@@ -10689,6 +10707,7 @@ if ac_fn_cxx_try_link \"$LINENO\"; then :\n fi\n rm -f core conftest.err conftest.$ac_objext \\\n     conftest$ac_exeext conftest.$ac_ext\n+      CPPFLAGS=\"$am_save_CPPFLAGS\"\n       LIBS=\"$am_save_LIBS\"\n     fi\n \n@@ -10701,12 +10720,34 @@ $as_echo \"#define HAVE_ICONV 1\" >>confdefs.h\n \n   fi\n   if test \"$am_cv_lib_iconv\" = yes; then\n+\n+  for element in $INCICONV; do\n+    haveit=\n+    for x in $CPPFLAGS; do\n+\n+  acl_save_prefix=\"$prefix\"\n+  prefix=\"$acl_final_prefix\"\n+  acl_save_exec_prefix=\"$exec_prefix\"\n+  exec_prefix=\"$acl_final_exec_prefix\"\n+  eval x=\\\"$x\\\"\n+  exec_prefix=\"$acl_save_exec_prefix\"\n+  prefix=\"$acl_save_prefix\"\n+\n+      if test \"X$x\" = \"X$element\"; then\n+        haveit=yes\n+        break\n+      fi\n+    done\n+    if test -z \"$haveit\"; then\n+      CPPFLAGS=\"${CPPFLAGS}${CPPFLAGS:+ }$element\"\n+    fi\n+  done\n+\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to link with libiconv\" >&5\n $as_echo_n \"checking how to link with libiconv... \" >&6; }\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $LIBICONV\" >&5\n $as_echo \"$LIBICONV\" >&6; }\n   else\n-            CPPFLAGS=\"$am_save_CPPFLAGS\"\n     LIBICONV=\n     LTLIBICONV=\n   fi\n@@ -11909,7 +11950,7 @@ fi\n \n \n case $host_os in\n-  win32 | pe | cygwin* | mingw32* | uwin*)\n+  win32 | pe | cygwin* | mingw32*)\n     if test \"x$enable_win32_registry\" != xno; then\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for library containing RegOpenKeyExA\" >&5\n $as_echo_n \"checking for library containing RegOpenKeyExA... \" >&6; }\n@@ -18344,7 +18385,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18347 \"configure\"\n+#line 18388 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18450,7 +18491,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18453 \"configure\"\n+#line 18494 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -23156,7 +23197,7 @@ else\n   test $ac_status = 0; }; }\n     then\n \tcase $target_os in\n-  win32 | pe | cygwin* | mingw32* | uwin*)\n+  win32 | pe | cygwin* | mingw32*)\n     # Need to check that we generated the correct relocation for the\n     # .debug_frame section.  This was fixed for binutils 2.21.\n     gcc_cv_as_cfi_sections_directive=no"}]}