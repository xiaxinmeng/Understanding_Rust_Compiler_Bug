{"sha": "8cba7cb3202da8b83e4b90280bc42472e110c0d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNiYTdjYjMyMDJkYThiODNlNGI5MDI4MGJjNDI0NzJlMTEwYzBkNA==", "commit": {"author": {"name": "Stafford Horne", "email": "shorne@gmail.com", "date": "2019-10-14T06:14:20Z"}, "committer": {"name": "Stafford Horne", "email": "shorne@gmail.com", "date": "2021-01-13T23:45:00Z"}, "message": "or1k: Implement profile hook calling _mcount\n\nDefining this to not abort as found when working on running tests in\nthe glibc test suite.\n\nWe implement this with a call to _mcount with no arguments.  The required\nreturn address's will be pulled from the stack.  Passing the LR (r9) as\nan argument had problems as sometimes r9 is clobbered by the GOT logic\nin the prologue before the call to _mcount.\n\ngcc/ChangeLog:\n\n\t* config/or1k/or1k.h (NO_PROFILE_COUNTERS): Define as 1.\n\t(PROFILE_HOOK): Define to call _mcount.\n\t(FUNCTION_PROFILER): Change from abort to no-op.", "tree": {"sha": "cfa4f9c8e04e99957c3826f4897dde0be754acc3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cfa4f9c8e04e99957c3826f4897dde0be754acc3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cba7cb3202da8b83e4b90280bc42472e110c0d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cba7cb3202da8b83e4b90280bc42472e110c0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cba7cb3202da8b83e4b90280bc42472e110c0d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cba7cb3202da8b83e4b90280bc42472e110c0d4/comments", "author": {"login": "stffrdhrn", "id": 2404255, "node_id": "MDQ6VXNlcjI0MDQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stffrdhrn", "html_url": "https://github.com/stffrdhrn", "followers_url": "https://api.github.com/users/stffrdhrn/followers", "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}", "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions", "organizations_url": "https://api.github.com/users/stffrdhrn/orgs", "repos_url": "https://api.github.com/users/stffrdhrn/repos", "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}", "received_events_url": "https://api.github.com/users/stffrdhrn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "stffrdhrn", "id": 2404255, "node_id": "MDQ6VXNlcjI0MDQyNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/2404255?v=4", "gravatar_id": "", "url": "https://api.github.com/users/stffrdhrn", "html_url": "https://github.com/stffrdhrn", "followers_url": "https://api.github.com/users/stffrdhrn/followers", "following_url": "https://api.github.com/users/stffrdhrn/following{/other_user}", "gists_url": "https://api.github.com/users/stffrdhrn/gists{/gist_id}", "starred_url": "https://api.github.com/users/stffrdhrn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/stffrdhrn/subscriptions", "organizations_url": "https://api.github.com/users/stffrdhrn/orgs", "repos_url": "https://api.github.com/users/stffrdhrn/repos", "events_url": "https://api.github.com/users/stffrdhrn/events{/privacy}", "received_events_url": "https://api.github.com/users/stffrdhrn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "796ead19f85372e59217c9888db688a2fe11b54f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/796ead19f85372e59217c9888db688a2fe11b54f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/796ead19f85372e59217c9888db688a2fe11b54f"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "dc579e4a388ab5dc5c0fd4be0fe90a8ed9ee168c", "filename": "gcc/config/or1k/or1k.h", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cba7cb3202da8b83e4b90280bc42472e110c0d4/gcc%2Fconfig%2For1k%2For1k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cba7cb3202da8b83e4b90280bc42472e110c0d4/gcc%2Fconfig%2For1k%2For1k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2For1k%2For1k.h?ref=8cba7cb3202da8b83e4b90280bc42472e110c0d4", "patch": "@@ -379,8 +379,19 @@ do {                                                    \\\n /* Always pass the SYMBOL_REF for direct calls to the expanders.  */\n #define NO_FUNCTION_CSE 1\n \n-/* Profiling */\n-#define FUNCTION_PROFILER(FILE,LABELNO) (abort (), 0)\n+#define NO_PROFILE_COUNTERS 1\n+\n+/* Emit rtl for profiling.  Output assembler code to call \"_mcount\" for\n+   profiling a function entry.  */\n+#define PROFILE_HOOK(LABEL)\t\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    rtx fun;\t\t\t\t\t\t\t\t\\\n+    fun = gen_rtx_SYMBOL_REF (Pmode, \"_mcount\");\t\t\t\\\n+    emit_library_call (fun, LCT_NORMAL, VOIDmode);\t\t\t\\\n+  }\n+\n+/* All the work is done in PROFILE_HOOK, but this is still required.  */\n+#define FUNCTION_PROFILER(STREAM, LABELNO) do { } while (0)\n \n /* Dwarf 2 Support */\n #define DWARF2_DEBUGGING_INFO 1"}]}