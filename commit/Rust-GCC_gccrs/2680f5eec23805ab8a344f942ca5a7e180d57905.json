{"sha": "2680f5eec23805ab8a344f942ca5a7e180d57905", "node_id": "C_kwDOANBUbNoAKDI2ODBmNWVlYzIzODA1YWI4YTM0NGY5NDJjYTVhN2UxODBkNTc5MDU", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-05-03T15:59:40Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-05-03T16:00:25Z"}, "message": "i386: Optimize _mm_storeu_si16 w/o SSE4 [PR105079]\n\nOptimize _mm_storeu_si16 to use MOVD from a SSE to an integer register\ninstead of PEXTRW from a low word of the SSE register to an integer reg.\n\nAvoid the transformation when optimizing for size for targets without\nTARGET_INTER_UNIT_MOVES_FROM_VEC capability, where the transformation\nresults in two moves via a memory location.\n\n2022-05-03  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/ChangeLog:\n\n\tPR target/105079\n\t* config/i386/sse.md (*vec_extract<mode>_0_mem): New pre-reload\n\tdefine_insn_and_split pattern.\n\ngcc/testsuite/ChangeLog:\n\n\tPR target/105079\n\t* gcc.target/i386/pr105079.c: New test.\n\t* gcc.target/i386/pr95483-1.c (dg-options): Use -msse4.1.", "tree": {"sha": "da322d19f3197b7717c54c8d10310d3927ad51e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/da322d19f3197b7717c54c8d10310d3927ad51e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2680f5eec23805ab8a344f942ca5a7e180d57905", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2680f5eec23805ab8a344f942ca5a7e180d57905", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2680f5eec23805ab8a344f942ca5a7e180d57905", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2680f5eec23805ab8a344f942ca5a7e180d57905/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da6d834bc2188e36e876416f25a1aee528c3484d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da6d834bc2188e36e876416f25a1aee528c3484d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da6d834bc2188e36e876416f25a1aee528c3484d"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "7b791def54285b021b61eaee3632395cec5473e2", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2680f5eec23805ab8a344f942ca5a7e180d57905/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2680f5eec23805ab8a344f942ca5a7e180d57905/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=2680f5eec23805ab8a344f942ca5a7e180d57905", "patch": "@@ -19021,6 +19021,26 @@\n (define_mode_iterator PEXTR_MODE12\n   [(V16QI \"TARGET_SSE4_1\") V8HI])\n \n+(define_insn_and_split \"*vec_extract<mode>_0_mem\"\n+  [(set (match_operand:<ssescalarmode> 0 \"memory_operand\")\n+\t(vec_select:<ssescalarmode>\n+\t  (match_operand:PEXTR_MODE12 1 \"register_operand\")\n+\t  (parallel [(const_int 0)])))]\n+  \"TARGET_SSE2\n+   && !TARGET_SSE4_1\n+   && (TARGET_INTER_UNIT_MOVES_FROM_VEC\n+       || optimize_function_for_speed_p (cfun))\n+   && ix86_pre_reload_split ()\"\n+  \"#\"\n+  \"&& 1\"\n+  [(set (match_dup 2) (match_dup 3))\n+   (set (match_dup 0) (match_dup 4))]\n+{\n+  operands[2] = gen_reg_rtx (SImode);\n+  operands[3] = gen_lowpart (SImode, force_reg (<MODE>mode, operands[1]));\n+  operands[4] = gen_lowpart (<ssescalarmode>mode, operands[2]);\n+})\n+\n (define_insn \"*vec_extract<mode>\"\n   [(set (match_operand:<ssescalarmode> 0 \"register_sse4nonimm_operand\" \"=r,m\")\n \t(vec_select:<ssescalarmode>"}, {"sha": "4ecf864afdeb9cfb1a64a4bf1793bce3770eaec6", "filename": "gcc/testsuite/gcc.target/i386/pr105079.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2680f5eec23805ab8a344f942ca5a7e180d57905/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105079.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2680f5eec23805ab8a344f942ca5a7e180d57905/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105079.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr105079.c?ref=2680f5eec23805ab8a344f942ca5a7e180d57905", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/105079 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2 -mno-sse4.1\" } */\n+/* { dg-final { scan-assembler-not \"pextrw\" } } */\n+\n+#include <xmmintrin.h>\n+\n+void store16 (void *p, __m128i v)\n+{\n+  _mm_storeu_si16 (p, v);\n+}"}, {"sha": "26b2e8275eba157d0d783428fc4adf1158b55318", "filename": "gcc/testsuite/gcc.target/i386/pr95483-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2680f5eec23805ab8a344f942ca5a7e180d57905/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95483-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2680f5eec23805ab8a344f942ca5a7e180d57905/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95483-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95483-1.c?ref=2680f5eec23805ab8a344f942ca5a7e180d57905", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -msse2\" } */\n+/* { dg-options \"-O2 -msse4.1\" } */\n /* { dg-final { scan-assembler-times \"pxor\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"pinsrw\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]+(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */\n /* { dg-final { scan-assembler-times \"pextrw\\[ \\\\t\\]+\\[^\\n\\]*%xmm\\[0-9\\]+\\[^\\n\\]*(?:\\n|\\[ \\\\t\\]+#)\" 1 } } */"}]}