{"sha": "b62dcd16aa033968075f19631c757bb39a16ef92", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYyZGNkMTZhYTAzMzk2ODA3NWYxOTYzMWM3NTdiYjM5YTE2ZWY5Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-05-16T20:30:27Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-05-16T20:30:27Z"}, "message": "Changes to std::variant to reduce code size\n\n\t* include/std/variant (_Variant_storage<false, _Types...>::_M_reset):\n\tReplace raw visitation with a runtime check for the valueless state\n\tand a non-raw visitor.\n\t(_Variant_storage<false, _Types...>::_M_reset_impl): Remove.\n\t(variant::index()): Remove branch.\n\t(variant::swap(variant&)): Use valueless_by_exception() instead of\n\tcomparing the index to variant_npos, and add likelihood attribute.\n\nFrom-SVN: r271295", "tree": {"sha": "93b75bd835ebd1d7f85113f2a4f6334b4d87f0de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93b75bd835ebd1d7f85113f2a4f6334b4d87f0de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b62dcd16aa033968075f19631c757bb39a16ef92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b62dcd16aa033968075f19631c757bb39a16ef92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b62dcd16aa033968075f19631c757bb39a16ef92", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b62dcd16aa033968075f19631c757bb39a16ef92/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5120e0d8d48f4590a275e60565de6c5a4e772fc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5120e0d8d48f4590a275e60565de6c5a4e772fc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5120e0d8d48f4590a275e60565de6c5a4e772fc1"}], "stats": {"total": 34, "additions": 17, "deletions": 17}, "files": [{"sha": "997924e2c11dba425d66c457dea75a29dc2e5736", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62dcd16aa033968075f19631c757bb39a16ef92/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62dcd16aa033968075f19631c757bb39a16ef92/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=b62dcd16aa033968075f19631c757bb39a16ef92", "patch": "@@ -1,5 +1,13 @@\n 2019-05-16  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/variant (_Variant_storage<false, _Types...>::_M_reset):\n+\tReplace raw visitation with a runtime check for the valueless state\n+\tand a non-raw visitor.\n+\t(_Variant_storage<false, _Types...>::_M_reset_impl): Remove.\n+\t(variant::index()): Remove branch.\n+\t(variant::swap(variant&)): Use valueless_by_exception() instead of\n+\tcomparing the index to variant_npos, and add likelihood attribute.\n+\n \t* include/bits/hashtable_policy.h (_Equal_helper): Remove.\n \t(_Hashtable_base::_Equal_hash_code): Define new class template.\n \t(_Hashtable_base::_M_equals): Use _Equal_hash_code instead of"}, {"sha": "101b8945943126e87ec7c635557e9d27027123b8", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b62dcd16aa033968075f19631c757bb39a16ef92/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b62dcd16aa033968075f19631c757bb39a16ef92/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=b62dcd16aa033968075f19631c757bb39a16ef92", "patch": "@@ -396,19 +396,16 @@ namespace __variant\n \t_M_index(_Np)\n \t{ }\n \n-      constexpr void _M_reset_impl()\n+      void _M_reset()\n       {\n-\t__variant::__raw_visit([](auto&& __this_mem) mutable\n+\tif (!_M_valid()) [[unlikely]]\n+\t  return;\n+\n+\tstd::__do_visit<void>([](auto&& __this_mem) mutable\n \t  {\n-\t    if constexpr (!is_same_v<remove_reference_t<decltype(__this_mem)>,\n-\t\t\t  __variant_cookie>)\n-\t      std::_Destroy(std::__addressof(__this_mem));\n+\t    std::_Destroy(std::__addressof(__this_mem));\n \t  }, __variant_cast<_Types...>(*this));\n-      }\n \n-      void _M_reset()\n-      {\n-\t_M_reset_impl();\n \t_M_index = variant_npos;\n       }\n \n@@ -1485,12 +1482,7 @@ namespace __variant\n       { return !this->_M_valid(); }\n \n       constexpr size_t index() const noexcept\n-      {\n-\tif (this->_M_index ==\n-\t    typename _Base::__index_type(variant_npos))\n-\t  return variant_npos;\n-\treturn this->_M_index;\n-      }\n+      { return size_t(typename _Base::__index_type(this->_M_index + 1)) - 1; }\n \n       void\n       swap(variant& __rhs)\n@@ -1511,7 +1503,7 @@ namespace __variant\n \t\t  }\n \t\telse\n \t\t  {\n-\t\t    if (this->index() != variant_npos)\n+\t\t    if (!this->valueless_by_exception()) [[__likely__]]\n \t\t      {\n \t\t\tauto __tmp(std::move(__rhs_mem));\n \t\t\t__rhs = std::move(*this);\n@@ -1528,7 +1520,7 @@ namespace __variant\n \t      }\n \t    else\n \t      {\n-\t\tif (this->index() != variant_npos)\n+\t\tif (!this->valueless_by_exception()) [[__likely__]]\n \t\t  {\n \t\t    __rhs = std::move(*this);\n \t\t    this->_M_reset();"}]}