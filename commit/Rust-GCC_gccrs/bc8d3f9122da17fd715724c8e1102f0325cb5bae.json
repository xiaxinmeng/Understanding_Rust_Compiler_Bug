{"sha": "bc8d3f9122da17fd715724c8e1102f0325cb5bae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmM4ZDNmOTEyMmRhMTdmZDcxNTcyNGM4ZTExMDJmMDMyNWNiNWJhZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2001-07-20T11:30:13Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2001-07-20T11:30:13Z"}, "message": "integrate.c (copy_insn_list): handle NOTE_INSN_DELETED_LABEL, as if it were CODE_LABEL.\n\n\t* integrate.c (copy_insn_list): handle\n\tNOTE_INSN_DELETED_LABEL, as if it were CODE_LABEL.\n\t(copy_rtx_and_substitute): Likewise; behave to NOTE_INSN_DELETED_LABEL\n\tidentically as to CODE_LABEL.\n\n\t* fold-const (fold): Convert A/B/C to A/(B*C) and\n\tA/(B/C) to (A/B)*C\n\n\t* except.c (connect_post_landing_pads): Delete the RESX insns.\n\nFrom-SVN: r44193", "tree": {"sha": "68a78b6db80ae50443d9150291420d446bb9de23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68a78b6db80ae50443d9150291420d446bb9de23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc8d3f9122da17fd715724c8e1102f0325cb5bae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8d3f9122da17fd715724c8e1102f0325cb5bae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc8d3f9122da17fd715724c8e1102f0325cb5bae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc8d3f9122da17fd715724c8e1102f0325cb5bae/comments", "author": null, "committer": null, "parents": [{"sha": "08f66b04859024c4da60b2f9cbb1ae70bdf46c2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08f66b04859024c4da60b2f9cbb1ae70bdf46c2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08f66b04859024c4da60b2f9cbb1ae70bdf46c2a"}], "stats": {"total": 54, "additions": 45, "deletions": 9}, "files": [{"sha": "69fd6836c75ba70eb68214d6544b66928e8b393e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8d3f9122da17fd715724c8e1102f0325cb5bae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8d3f9122da17fd715724c8e1102f0325cb5bae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc8d3f9122da17fd715724c8e1102f0325cb5bae", "patch": "@@ -1,3 +1,15 @@\n+Fri Jul 20 13:24:16 CEST 2001  Jan Hubicka  <jh@suse.cz>\n+\n+\t* integrate.c (copy_insn_list): handle\n+\tNOTE_INSN_DELETED_LABEL, as if it were CODE_LABEL.\n+\t(copy_rtx_and_substitute): Likewise; behave to NOTE_INSN_DELETED_LABEL\n+\tidentically as to CODE_LABEL.\n+\n+\t* fold-const (fold): Convert A/B/C to A/(B*C) and\n+\tA/(B/C) to (A/B)*C\n+\n+\t* except.c (connect_post_landing_pads): Delete the RESX insns.\n+\n 2001-07-20  Aldy Hernandez  <aldyh@redhat.com>\n \n         * config/mips/mips.h (ISA_HAS_NMADD_NMSUB): New macro."}, {"sha": "01e83f0c4693fb5b7c4158d3579a096d7ec9fe04", "filename": "gcc/except.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8d3f9122da17fd715724c8e1102f0325cb5bae/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8d3f9122da17fd715724c8e1102f0325cb5bae/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=bc8d3f9122da17fd715724c8e1102f0325cb5bae", "patch": "@@ -1846,8 +1846,7 @@ connect_post_landing_pads ()\n       seq = get_insns ();\n       end_sequence ();\n       emit_insns_before (seq, region->resume);\n-\n-      /* Leave the RESX to be deleted by flow.  */\n+      flow_delete_insn (region->resume);\n     }\n }\n "}, {"sha": "55480d269f4891c54f56b90b0e7fcff54c6c0938", "filename": "gcc/fold-const.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8d3f9122da17fd715724c8e1102f0325cb5bae/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8d3f9122da17fd715724c8e1102f0325cb5bae/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=bc8d3f9122da17fd715724c8e1102f0325cb5bae", "patch": "@@ -5866,6 +5866,23 @@ fold (expr)\n \t\t}\n \t    }\n \t}\n+      /* Convert A/B/C to A/(B*C).  */\n+      if (flag_unsafe_math_optimizations\n+\t  && TREE_CODE (arg0) == RDIV_EXPR)\n+\t{\n+\t  return fold (build (RDIV_EXPR, type, TREE_OPERAND (arg0, 0),\n+\t\t\t      build (MULT_EXPR, type, TREE_OPERAND (arg0, 1),\n+\t\t\t\t     arg1)));\n+\t}\n+      /* Convert A/(B/C) to (A/B)*C.  */\n+      if (flag_unsafe_math_optimizations\n+\t  && TREE_CODE (arg1) == RDIV_EXPR)\n+\t{\n+\t  return fold (build (MULT_EXPR, type,\n+\t\t\t      build (RDIV_EXPR, type, arg0,\n+\t\t\t     \t     TREE_OPERAND (arg1, 0)),\n+\t \t\t      TREE_OPERAND (arg1, 1)));\n+\t}\n       goto binary;\n \n     case TRUNC_DIV_EXPR:"}, {"sha": "83d3819b832dab3752bd8f5421efcf4ff91afa42", "filename": "gcc/integrate.c", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc8d3f9122da17fd715724c8e1102f0325cb5bae/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc8d3f9122da17fd715724c8e1102f0325cb5bae/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=bc8d3f9122da17fd715724c8e1102f0325cb5bae", "patch": "@@ -1555,6 +1555,14 @@ copy_insn_list (insns, map, static_chain_value)\n \t  break;\n \n \tcase NOTE:\n+\t  if (NOTE_LINE_NUMBER (insn) == NOTE_INSN_DELETED_LABEL)\n+\t    {\n+\t      copy = emit_label (get_label_from_map (map,\n+\t\t\t\t\t\t    CODE_LABEL_NUMBER (insn)));\n+\t      map->const_age++;\n+\t      break;\n+\t    }\n+\n \t  /* NOTE_INSN_FUNCTION_END and NOTE_INSN_FUNCTION_BEG are\n \t     discarded because it is important to have only one of\n \t     each in the current function.\n@@ -1992,18 +2000,18 @@ copy_rtx_and_substitute (orig, map, for_lhs)\n \tcopy = SUBREG_REG (copy);\n       return gen_rtx_fmt_e (code, VOIDmode, copy);\n \n+    /* We need to handle \"deleted\" labels that appear in the DECL_RTL\n+       of a LABEL_DECL.  */\n+    case NOTE:\n+      if (NOTE_LINE_NUMBER (orig) != NOTE_INSN_DELETED_LABEL)\n+\tbreak;\n+\n+      /* ... FALLTHRU ... */\n     case CODE_LABEL:\n       LABEL_PRESERVE_P (get_label_from_map (map, CODE_LABEL_NUMBER (orig)))\n \t= LABEL_PRESERVE_P (orig);\n       return get_label_from_map (map, CODE_LABEL_NUMBER (orig));\n \n-    /* We need to handle \"deleted\" labels that appear in the DECL_RTL\n-       of a LABEL_DECL.  */\n-    case NOTE:\n-      if (NOTE_LINE_NUMBER (orig) == NOTE_INSN_DELETED_LABEL)\n-\treturn map->insn_map[INSN_UID (orig)];\n-      break;\n-\n     case LABEL_REF:\n       copy\n \t= gen_rtx_LABEL_REF"}]}