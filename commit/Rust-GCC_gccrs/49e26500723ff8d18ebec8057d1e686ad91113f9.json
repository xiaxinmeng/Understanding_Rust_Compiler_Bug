{"sha": "49e26500723ff8d18ebec8057d1e686ad91113f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDllMjY1MDA3MjNmZjhkMThlYmVjODA1N2QxZTY4NmFkOTExMTNmOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2019-11-21T08:15:47Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-11-21T08:15:47Z"}, "message": "Avoid quadratic behaviour of early inliner.\n\n\t* ipa-inline.c (want_early_inline_function_p): Do not estimate\n\tedge growth when callee function is very large.\n\t* ipa-inline.h (estimate_min_edge_growth): New.\n\nFrom-SVN: r278542", "tree": {"sha": "b3376b2e4fda39fd3b42de5e16b74341d785944b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3376b2e4fda39fd3b42de5e16b74341d785944b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49e26500723ff8d18ebec8057d1e686ad91113f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e26500723ff8d18ebec8057d1e686ad91113f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49e26500723ff8d18ebec8057d1e686ad91113f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49e26500723ff8d18ebec8057d1e686ad91113f9/comments", "author": null, "committer": null, "parents": [{"sha": "d2bcf46cd03bcc3ebdd9102e53022b6fb03202f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2bcf46cd03bcc3ebdd9102e53022b6fb03202f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2bcf46cd03bcc3ebdd9102e53022b6fb03202f7"}], "stats": {"total": 35, "additions": 33, "deletions": 2}, "files": [{"sha": "904b54c9ebe29cd25eced36b7592604fcc2d641a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e26500723ff8d18ebec8057d1e686ad91113f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e26500723ff8d18ebec8057d1e686ad91113f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49e26500723ff8d18ebec8057d1e686ad91113f9", "patch": "@@ -1,3 +1,9 @@\n+2019-11-20  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ipa-inline.c (want_early_inline_function_p): Do not estimate\n+\tedge growth when callee function is very large.\n+\t* ipa-inline.h (estimate_min_edge_growth): New.\n+\n 2019-11-20  Jan Hubicka  <jh@suse.cz>\n \n \t* ipa-fnsummary.c (ipa_fn_summary::account_size_time): Allow"}, {"sha": "6da3e96b45df69d41dcfc8d02856198526e9bf85", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e26500723ff8d18ebec8057d1e686ad91113f9/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e26500723ff8d18ebec8057d1e686ad91113f9/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=49e26500723ff8d18ebec8057d1e686ad91113f9", "patch": "@@ -672,14 +672,29 @@ want_early_inline_function_p (struct cgraph_edge *e)\n     }\n   else\n     {\n-      int growth = estimate_edge_growth (e);\n+      /* First take care of very large functions.  */\n+      int min_growth = estimate_min_edge_growth (e), growth = 0;\n       int n;\n       int early_inlining_insns = opt_for_fn (e->caller->decl, optimize) >= 3\n \t\t\t\t ? param_early_inlining_insns\n \t\t\t\t : param_early_inlining_insns_o2;\n \n+      if (min_growth > early_inlining_insns)\n+\t{\n+\t  if (dump_enabled_p ())\n+\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, e->call_stmt,\n+\t\t\t     \"  will not early inline: %C->%C, \"\n+\t\t\t     \"call is cold and code would grow \"\n+\t\t\t     \"at least by %i\\n\",\n+\t\t\t     e->caller, callee,\n+\t\t\t     min_growth);\n+\t  want_inline = false;\n+\t}\n+      else\n+        growth = estimate_edge_growth (e);\n \n-      if (growth <= param_max_inline_insns_size)\n+\n+      if (!want_inline || growth <= param_max_inline_insns_size)\n \t;\n       else if (!e->maybe_hot_p ())\n \t{"}, {"sha": "6273f0747f944e2994bf3d8b41adefb371a2c4dc", "filename": "gcc/ipa-inline.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49e26500723ff8d18ebec8057d1e686ad91113f9/gcc%2Fipa-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49e26500723ff8d18ebec8057d1e686ad91113f9/gcc%2Fipa-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.h?ref=49e26500723ff8d18ebec8057d1e686ad91113f9", "patch": "@@ -79,6 +79,16 @@ estimate_edge_size (struct cgraph_edge *edge)\n   return entry->size - (entry->size > 0);\n }\n \n+/* Return lower bound on estimated callee growth after inlining EDGE.  */\n+\n+static inline int\n+estimate_min_edge_growth (struct cgraph_edge *edge)\n+{\n+  ipa_call_summary *s = ipa_call_summaries->get (edge);\n+  struct cgraph_node *callee = edge->callee->ultimate_alias_target ();\n+  return (ipa_fn_summaries->get (callee)->min_size - s->call_stmt_size);\n+}\n+\n /* Return estimated callee growth after inlining EDGE.  */\n \n static inline int"}]}