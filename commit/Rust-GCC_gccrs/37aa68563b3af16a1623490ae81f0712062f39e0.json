{"sha": "37aa68563b3af16a1623490ae81f0712062f39e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhYTY4NTYzYjNhZjE2YTE2MjM0OTBhZTgxZjA3MTIwNjJmMzllMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2019-01-23T08:35:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2019-01-23T08:35:38Z"}, "message": "re PR tree-optimization/88964 (ICE in wide_int_to_tree_1, at tree.c:1561)\n\n\tPR tree-optimization/88964\n\t* gimple-loop-interchange.cc (loop_cand::analyze_induction_var): Use\n\tbuild_zero_cst instead of build_int_cst.  Return false for loop\n\tinvariants which honor signed zeros.\n\n\t* gfortran.dg/pr88964.f90: New test.\n\nFrom-SVN: r268179", "tree": {"sha": "93869e71f9b44de0864469f28a8179d033d501fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93869e71f9b44de0864469f28a8179d033d501fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37aa68563b3af16a1623490ae81f0712062f39e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37aa68563b3af16a1623490ae81f0712062f39e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37aa68563b3af16a1623490ae81f0712062f39e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37aa68563b3af16a1623490ae81f0712062f39e0/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4a75460b0099618b2d79ffda615a9516dcd5c224", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a75460b0099618b2d79ffda615a9516dcd5c224", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a75460b0099618b2d79ffda615a9516dcd5c224"}], "stats": {"total": 76, "additions": 75, "deletions": 1}, "files": [{"sha": "4a83a8aca4c4782c11bc12b3b37754c4562fbdec", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37aa68563b3af16a1623490ae81f0712062f39e0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37aa68563b3af16a1623490ae81f0712062f39e0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=37aa68563b3af16a1623490ae81f0712062f39e0", "patch": "@@ -1,3 +1,10 @@\n+2019-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/88964\n+\t* gimple-loop-interchange.cc (loop_cand::analyze_induction_var): Use\n+\tbuild_zero_cst instead of build_int_cst.  Return false for loop\n+\tinvariants which honor signed zeros.\n+\n 2019-01-22  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* doc/invoke.texi (-fsplit-paths): This is enabled by default at -O3."}, {"sha": "1f0e49d3a006ff0164e780b0d382b477aa63f6ab", "filename": "gcc/gimple-loop-interchange.cc", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37aa68563b3af16a1623490ae81f0712062f39e0/gcc%2Fgimple-loop-interchange.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37aa68563b3af16a1623490ae81f0712062f39e0/gcc%2Fgimple-loop-interchange.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-loop-interchange.cc?ref=37aa68563b3af16a1623490ae81f0712062f39e0", "patch": "@@ -688,11 +688,16 @@ loop_cand::analyze_induction_var (tree var, tree chrec)\n   /* Var is loop invariant, though it's unlikely to happen.  */\n   if (tree_does_not_contain_chrecs (chrec))\n     {\n+      /* Punt on floating point invariants if honoring signed zeros,\n+\t representing that as + 0.0 would change the result if init\n+\t is -0.0.  */\n+      if (HONOR_SIGNED_ZEROS (chrec))\n+\treturn false;\n       struct induction *iv = XCNEW (struct induction);\n       iv->var = var;\n       iv->init_val = init;\n       iv->init_expr = chrec;\n-      iv->step = build_int_cst (TREE_TYPE (chrec), 0);\n+      iv->step = build_zero_cst (TREE_TYPE (chrec));\n       m_inductions.safe_push (iv);\n       return true;\n     }"}, {"sha": "164c9bc395eec5a119c329a47abcc948543e6895", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37aa68563b3af16a1623490ae81f0712062f39e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37aa68563b3af16a1623490ae81f0712062f39e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=37aa68563b3af16a1623490ae81f0712062f39e0", "patch": "@@ -1,3 +1,8 @@\n+2019-01-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/88964\n+\t* gfortran.dg/pr88964.f90: New test.\n+\n 2019-01-22  Martin Sebor  <msebor@redhat.com>\n \n \t* c-c++-common/Warray-bounds-2.c: Include headers only if they exist."}, {"sha": "f3a8064bd165a58839657224e31613927ae9d3db", "filename": "gcc/testsuite/gfortran.dg/pr88964.f90", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37aa68563b3af16a1623490ae81f0712062f39e0/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88964.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37aa68563b3af16a1623490ae81f0712062f39e0/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88964.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr88964.f90?ref=37aa68563b3af16a1623490ae81f0712062f39e0", "patch": "@@ -0,0 +1,57 @@\n+! PR tree-optimization/88964\n+! { dg-do compile }\n+! { dg-options \"-O3 -fno-tree-forwprop --param sccvn-max-alias-queries-per-access=1\" }\n+\n+MODULE pr88964\n+  INTEGER, PARAMETER :: dp=8\n+  REAL(KIND=dp) :: p, q, o\n+CONTAINS\n+  SUBROUTINE foo(a,b,c,f,h)\n+    IMPLICIT NONE\n+    INTEGER :: a, b, c\n+    REAL(KIND=dp) :: f(b*c), h(a*c)\n+    CALL bar(h)\n+    CALL baz(f)\n+    CALL qux(h)\n+  END SUBROUTINE foo\n+  SUBROUTINE bar(h)\n+    IMPLICIT NONE\n+    REAL(KIND=dp) :: h(1*1)\n+    INTEGER :: r, s, t, u\n+    DO u = 1,3\n+      DO t = 1,1\n+        DO s = 1,3\n+          DO r = 1,1\n+            h((t-1)*1+r) = h((t-1)*1+r)-p*o\n+          END DO\n+        END DO\n+      END DO\n+    END DO\n+  END SUBROUTINE bar\n+  SUBROUTINE baz(f)\n+    IMPLICIT NONE\n+    REAL(KIND=dp) :: f(3*1)\n+    INTEGER :: s, t, u\n+    DO u = 1,4\n+      DO t = 1,1\n+        DO s = 1,3\n+          f((t-1)*3+s) = f((t-1)*3+s) - q\n+        END DO\n+      END DO\n+    END DO\n+  END SUBROUTINE baz\n+  SUBROUTINE qux(h)\n+    IMPLICIT NONE\n+    REAL(KIND=dp) :: h(1*1)\n+    INTEGER :: r, s, t, u\n+    DO u = 1,5\n+      DO t = 1,1\n+        DO s = 1,3\n+          DO r = 1,1\n+            h((t-1)*1+r) = h((t-1)*1+r)-p*o\n+          END DO\n+        END DO\n+      END DO\n+    END DO\n+  END SUBROUTINE qux\n+END MODULE pr88964"}]}