{"sha": "1107bd3829bb28e7529290b43ea0140699182c0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTEwN2JkMzgyOWJiMjhlNzUyOTI5MGI0M2VhMDE0MDY5OTE4MmMwZg==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-07-30T17:50:28Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2010-07-30T17:50:28Z"}, "message": "re PR fortran/44929 ([OOP] Parsing error of  derived type name starting with 'REAL')\n\n2010-07-30  Janus Weil  <janus@gcc.gnu.org>\n\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n\n\tPR fortran/44929\n\t* match.c (match_type_spec): Try to parse derived types before\n\tintrinsic types.\n\n\n2010-07-30  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/44929\n\t* gfortran.dg/allocate_derived_3.f90: New.\n\nCo-Authored-By: Steven G. Kargl <kargl@gcc.gnu.org>\n\nFrom-SVN: r162724", "tree": {"sha": "8e629d56148defeee01f6a45a110adf1bb6cdff2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e629d56148defeee01f6a45a110adf1bb6cdff2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1107bd3829bb28e7529290b43ea0140699182c0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1107bd3829bb28e7529290b43ea0140699182c0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1107bd3829bb28e7529290b43ea0140699182c0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1107bd3829bb28e7529290b43ea0140699182c0f/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34251c0ee6c80909aa2579dfdba34a132c10edf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34251c0ee6c80909aa2579dfdba34a132c10edf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34251c0ee6c80909aa2579dfdba34a132c10edf1"}], "stats": {"total": 72, "additions": 52, "deletions": 20}, "files": [{"sha": "bf7d4d19463e1c62dc9d6f00c051cf4106a2ac0b", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1107bd3829bb28e7529290b43ea0140699182c0f/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1107bd3829bb28e7529290b43ea0140699182c0f/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=1107bd3829bb28e7529290b43ea0140699182c0f", "patch": "@@ -1,3 +1,10 @@\n+2010-07-30  Janus Weil  <janus@gcc.gnu.org>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/44929\n+\t* match.c (match_type_spec): Try to parse derived types before\n+\tintrinsic types.\n+\n 2010-07-30  Mikael Morin  <mikael@gcc.gnu.org>\n \n \t* gfortran.h (gfc_release_symbol): New prototype."}, {"sha": "a37a6798a8450054bace0879445e0380194e584e", "filename": "gcc/fortran/match.c", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1107bd3829bb28e7529290b43ea0140699182c0f/gcc%2Ffortran%2Fmatch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1107bd3829bb28e7529290b43ea0140699182c0f/gcc%2Ffortran%2Fmatch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fmatch.c?ref=1107bd3829bb28e7529290b43ea0140699182c0f", "patch": "@@ -2709,7 +2709,7 @@ match_derived_type_spec (gfc_typespec *ts)\n    gfc_match_decl_type_spec() from decl.c, with the following exceptions:\n    It only includes the intrinsic types from the Fortran 2003 standard\n    (thus, neither BYTE nor forms like REAL*4 are allowed). Additionally,\n-   the implicit_flag is not needed, so it was removed.  Derived types are\n+   the implicit_flag is not needed, so it was removed. Derived types are\n    identified by their name alone.  */\n \n static match\n@@ -2719,8 +2719,30 @@ match_type_spec (gfc_typespec *ts)\n   locus old_locus;\n \n   gfc_clear_ts (ts);\n+  gfc_gobble_whitespace();\n   old_locus = gfc_current_locus;\n \n+  m = match_derived_type_spec (ts);\n+  if (m == MATCH_YES)\n+    {\n+      old_locus = gfc_current_locus;\n+      if (gfc_match (\" :: \") != MATCH_YES)\n+\treturn MATCH_ERROR;\n+      gfc_current_locus = old_locus;\n+      /* Enfore F03:C401.  */\n+      if (ts->u.derived->attr.abstract)\n+\t{\n+\t  gfc_error (\"Derived type '%s' at %L may not be ABSTRACT\",\n+\t\t     ts->u.derived->name, &old_locus);\n+\t  return MATCH_ERROR;\n+\t}\n+      return MATCH_YES;\n+    }\n+  else if (m == MATCH_ERROR && gfc_match (\" :: \") == MATCH_YES)\n+    return MATCH_ERROR;\n+\n+  gfc_current_locus = old_locus;\n+\n   if (gfc_match (\"integer\") == MATCH_YES)\n     {\n       ts->type = BT_INTEGER;\n@@ -2762,25 +2784,6 @@ match_type_spec (gfc_typespec *ts)\n       goto kind_selector;\n     }\n \n-  m = match_derived_type_spec (ts);\n-  if (m == MATCH_YES)\n-    {\n-      old_locus = gfc_current_locus;\n-      if (gfc_match (\" :: \") != MATCH_YES)\n-\treturn MATCH_ERROR;\n-      gfc_current_locus = old_locus;\n-      /* Enfore F03:C401.  */\n-      if (ts->u.derived->attr.abstract)\n-\t{\n-\t  gfc_error (\"Derived type '%s' at %L may not be ABSTRACT\",\n-\t\t     ts->u.derived->name, &old_locus);\n-\t  return MATCH_ERROR;\n-\t}\n-      return MATCH_YES;\n-    }\n-  else if (m == MATCH_ERROR && gfc_match (\" :: \") == MATCH_YES)\n-    return MATCH_ERROR;\n-\n   /* If a type is not matched, simply return MATCH_NO.  */\n   gfc_current_locus = old_locus;\n   return MATCH_NO;"}, {"sha": "0a181e8d4c9fd17aa23f52f2292221db56dea10d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1107bd3829bb28e7529290b43ea0140699182c0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1107bd3829bb28e7529290b43ea0140699182c0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1107bd3829bb28e7529290b43ea0140699182c0f", "patch": "@@ -1,3 +1,8 @@\n+2010-07-30  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/44929\n+\t* gfortran.dg/allocate_derived_3.f90: New.\n+\n 2010-07-30  Xinliang David Li  <davidxl@google.com>\n \tPR tree-optimization/45121\n \t* c-c++-common/uninit-17.c: Add -fno-ivops option."}, {"sha": "0cd15118e2c6ad4158b3db283bf0cd619b3250fe", "filename": "gcc/testsuite/gfortran.dg/allocate_derived_3.f90", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1107bd3829bb28e7529290b43ea0140699182c0f/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1107bd3829bb28e7529290b43ea0140699182c0f/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fallocate_derived_3.f90?ref=1107bd3829bb28e7529290b43ea0140699182c0f", "patch": "@@ -0,0 +1,17 @@\n+! { dg-do compile }\n+!\n+! PR 44929: [OOP] Parsing error of derived type name starting with 'REAL'\n+!\n+! Contributed by Satish.BD <bdsatish@gmail.com>\n+\n+ type :: real_type\n+ end type\n+ class(real_type), allocatable :: obj\n+ real(8), allocatable :: r8\n+\n+ allocate(real_type :: obj)\n+\n+ allocate( real(kind=8) :: r8)\n+ allocate(real(8)  :: r8 )\n+\n+end "}]}