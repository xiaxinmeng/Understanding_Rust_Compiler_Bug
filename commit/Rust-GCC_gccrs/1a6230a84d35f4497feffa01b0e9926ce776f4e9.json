{"sha": "1a6230a84d35f4497feffa01b0e9926ce776f4e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE2MjMwYTg0ZDM1ZjQ0OTdmZWZmYTAxYjBlOTkyNmNlNzc2ZjRlOQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-10-21T12:31:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-10-21T12:31:52Z"}, "message": "tree-ssa-phiopt.c (value_replacement): Properly verify we are the non-singleton PHI.\n\n2014-10-21  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-phiopt.c (value_replacement): Properly verify we\n\tare the non-singleton PHI.\n\nFrom-SVN: r216510", "tree": {"sha": "878d4b23934e9e5abb2c2f7133ebfae4820920c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/878d4b23934e9e5abb2c2f7133ebfae4820920c8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a6230a84d35f4497feffa01b0e9926ce776f4e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6230a84d35f4497feffa01b0e9926ce776f4e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a6230a84d35f4497feffa01b0e9926ce776f4e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a6230a84d35f4497feffa01b0e9926ce776f4e9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1994d041775c5735ab605c05a62d9276f67fa1fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1994d041775c5735ab605c05a62d9276f67fa1fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1994d041775c5735ab605c05a62d9276f67fa1fd"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "978d7dc57c73a19fb3df99553795bef25381c890", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6230a84d35f4497feffa01b0e9926ce776f4e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6230a84d35f4497feffa01b0e9926ce776f4e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a6230a84d35f4497feffa01b0e9926ce776f4e9", "patch": "@@ -1,3 +1,8 @@\n+2014-10-21  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-phiopt.c (value_replacement): Properly verify we\n+\tare the non-singleton PHI.\n+\n 2014-10-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/63563"}, {"sha": "cac3fd600e47898ea0b66dc795f04ad5a0b25ba9", "filename": "gcc/tree-ssa-phiopt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a6230a84d35f4497feffa01b0e9926ce776f4e9/gcc%2Ftree-ssa-phiopt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a6230a84d35f4497feffa01b0e9926ce776f4e9/gcc%2Ftree-ssa-phiopt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiopt.c?ref=1a6230a84d35f4497feffa01b0e9926ce776f4e9", "patch": "@@ -814,7 +814,7 @@ value_replacement (basic_block cond_bb, basic_block middle_bb,\n \t for the edges e0 and e1 then we can remove the middle basic block. */\n       if (emtpy_or_with_defined_p\n \t  && single_non_singleton_phi_for_edges (phi_nodes (gimple_bb (phi)),\n-\t\t\t\t\t\t\t    e0, e1))\n+\t\t\t\t\t\t e0, e1) == phi)\n \t{\n           replace_phi_edge_with_variable (cond_bb, e1, phi, arg);\n \t  /* Note that we optimized this PHI.  */"}]}