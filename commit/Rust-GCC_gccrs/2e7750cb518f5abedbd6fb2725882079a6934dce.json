{"sha": "2e7750cb518f5abedbd6fb2725882079a6934dce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU3NzUwY2I1MThmNWFiZWRiZDZmYjI3MjU4ODIwNzlhNjkzNGRjZQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-01-27T21:47:22Z"}, "committer": {"name": "David Edelsohn", "email": "dje.gcc@gmail.com", "date": "2021-01-30T17:08:00Z"}, "message": "aix: Permit use of AIX Vector extended ABI mode\n\nAIX only permits use of Altivec VSRs 20-31 in a Vector Extended ABI mode.\nThis patch explicitly enables use of the VSRs using the new -mabi=vec-extabi\ncommand line option also implemented in LLVM for AIX.\n\nBootstrapped on powerpc-ibm-aix7.2.3.0 and powerpc64le-linux-gnu.\n\ngcc/ChangeLog:\n\n\t* config/rs6000/rs6000.opt (mabi=vec-extabi): New.\n\t(mabi=vec-default): New.\n\t* config/rs6000/rs6000-c.c (rs6000_target_modify_macros): Define\n\t__EXTABI__ for AIX Vector extended ABI.\n\t* config/rs6000/rs6000.c (rs6000_debug_reg_global): Print AIX Vector\n\textabi info.\n\t(conditional_register_usage): If AIX vec_extabi enabled, vs20-vs31\n\tare non-volatile.\n\t* doc/invoke.texi (PowerPC mabi): Add AIX vec-extabi and vec-default.", "tree": {"sha": "3c2f26f33e101db09a2eebcdd6824214e9c96674", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3c2f26f33e101db09a2eebcdd6824214e9c96674"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e7750cb518f5abedbd6fb2725882079a6934dce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e7750cb518f5abedbd6fb2725882079a6934dce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e7750cb518f5abedbd6fb2725882079a6934dce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e7750cb518f5abedbd6fb2725882079a6934dce/comments", "author": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edelsohn", "id": 667700, "node_id": "MDQ6VXNlcjY2NzcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/667700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edelsohn", "html_url": "https://github.com/edelsohn", "followers_url": "https://api.github.com/users/edelsohn/followers", "following_url": "https://api.github.com/users/edelsohn/following{/other_user}", "gists_url": "https://api.github.com/users/edelsohn/gists{/gist_id}", "starred_url": "https://api.github.com/users/edelsohn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edelsohn/subscriptions", "organizations_url": "https://api.github.com/users/edelsohn/orgs", "repos_url": "https://api.github.com/users/edelsohn/repos", "events_url": "https://api.github.com/users/edelsohn/events{/privacy}", "received_events_url": "https://api.github.com/users/edelsohn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92dd3e71f957c7818f4ce4189bd187b59af20d9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92dd3e71f957c7818f4ce4189bd187b59af20d9b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92dd3e71f957c7818f4ce4189bd187b59af20d9b"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "06b3bc0df331c58d0d84b3abe83160fb51715470", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e7750cb518f5abedbd6fb2725882079a6934dce/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e7750cb518f5abedbd6fb2725882079a6934dce/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=2e7750cb518f5abedbd6fb2725882079a6934dce", "patch": "@@ -483,6 +483,8 @@ rs6000_target_modify_macros (bool define_p, HOST_WIDE_INT flags,\n \t  /* Define this when supporting context-sensitive keywords.  */\n       if (!flag_iso)\n \trs6000_define_or_undefine_macro (define_p, \"__APPLE_ALTIVEC__\");\n+      if (rs6000_aix_extabi)\n+\trs6000_define_or_undefine_macro (define_p, \"__EXTABI__\");\n     }\n   /* Note that the OPTION_MASK_VSX flag is automatically turned on in\n      the following conditions:"}, {"sha": "0d5ef38bd82b8f674aa7c5da03ae6da4e533e3b0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e7750cb518f5abedbd6fb2725882079a6934dce/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e7750cb518f5abedbd6fb2725882079a6934dce/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=2e7750cb518f5abedbd6fb2725882079a6934dce", "patch": "@@ -2512,6 +2512,9 @@ rs6000_debug_reg_global (void)\n   if (rs6000_altivec_abi)\n     fprintf (stderr, DEBUG_FMT_S, \"altivec_abi\", \"true\");\n \n+  if (rs6000_aix_extabi)\n+    fprintf (stderr, DEBUG_FMT_S, \"AIX vec-extabi\", \"true\");\n+\n   if (rs6000_darwin64_abi)\n     fprintf (stderr, DEBUG_FMT_S, \"darwin64_abi\", \"true\");\n \n@@ -9815,7 +9818,7 @@ rs6000_conditional_register_usage (void)\n \tcall_used_regs[i] = 1;\n \n       /* AIX reserves VR20:31 in non-extended ABI mode.  */\n-      if (TARGET_XCOFF)\n+      if (TARGET_XCOFF && !rs6000_aix_extabi)\n \tfor (i = FIRST_ALTIVEC_REGNO + 20; i < FIRST_ALTIVEC_REGNO + 32; ++i)\n \t  fixed_regs[i] = call_used_regs[i] = 1;\n     }"}, {"sha": "7aaabf39b25ee09f27b0751cc780660ffea9d0c2", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e7750cb518f5abedbd6fb2725882079a6934dce/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e7750cb518f5abedbd6fb2725882079a6934dce/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=2e7750cb518f5abedbd6fb2725882079a6934dce", "patch": "@@ -352,6 +352,7 @@ mdebug=\n Target RejectNegative Joined\n -mdebug=\tEnable debug output.\n \n+; Altivec ABI\n mabi=altivec\n Target RejectNegative Var(rs6000_altivec_abi) Save\n Use the AltiVec ABI extensions.\n@@ -360,6 +361,16 @@ mabi=no-altivec\n Target RejectNegative Var(rs6000_altivec_abi, 0)\n Do not use the AltiVec ABI extensions.\n \n+; AIX Extended vector ABI\n+mabi=vec-extabi\n+Target RejectNegative Var(rs6000_aix_extabi, 1) Save\n+Use the AIX Vector Extended ABI\n+\n+mabi=vec-default\n+Target RejectNegative Var(rs6000_aix_extabi, 0)\n+Do not use the AIX Vector Extended ABI\n+\n+; PPC64 Linux ELF ABI\n mabi=elfv1\n Target RejectNegative Var(rs6000_elf_abi, 1) Save\n Use the ELFv1 ABI."}, {"sha": "3751bc3ac7c56c5e198a01b3150ba6b15b6a9722", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e7750cb518f5abedbd6fb2725882079a6934dce/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e7750cb518f5abedbd6fb2725882079a6934dce/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=2e7750cb518f5abedbd6fb2725882079a6934dce", "patch": "@@ -27509,9 +27509,10 @@ SVR4 ABI)@.\n @item -mabi=@var{abi-type}\n @opindex mabi\n Extend the current ABI with a particular extension, or remove such extension.\n-Valid values are @samp{altivec}, @samp{no-altivec},\n+Valid values are: @samp{altivec}, @samp{no-altivec},\n @samp{ibmlongdouble}, @samp{ieeelongdouble},\n-@samp{elfv1}, @samp{elfv2}@.\n+@samp{elfv1}, @samp{elfv2},\n+and for AIX: @samp{vec-extabi}, @samp{vec-default}@.\n \n @item -mabi=ibmlongdouble\n @opindex mabi=ibmlongdouble"}]}