{"sha": "8afb62ac1cf65af126dc4566a05fff3143f76808", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGFmYjYyYWMxY2Y2NWFmMTI2ZGM0NTY2YTA1ZmZmMzE0M2Y3NjgwOA==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T11:17:34Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T11:17:34Z"}, "message": "[[ARM/AArch64][testsuite] 24/36] Add vmul_n tests.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmul_n.c: New file.\n\nFrom-SVN: r219941", "tree": {"sha": "e72e3538ff02e4d0f50109c77a97c6fb9d010fd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e72e3538ff02e4d0f50109c77a97c6fb9d010fd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8afb62ac1cf65af126dc4566a05fff3143f76808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afb62ac1cf65af126dc4566a05fff3143f76808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8afb62ac1cf65af126dc4566a05fff3143f76808", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afb62ac1cf65af126dc4566a05fff3143f76808/comments", "author": null, "committer": null, "parents": [{"sha": "ad9b853c306656782b7d7cda8f279a2ce8f3c6d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad9b853c306656782b7d7cda8f279a2ce8f3c6d8"}], "stats": {"total": 100, "additions": 100, "deletions": 0}, "files": [{"sha": "3944024779d52b33183f62c840cb47156f512409", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afb62ac1cf65af126dc4566a05fff3143f76808/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afb62ac1cf65af126dc4566a05fff3143f76808/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8afb62ac1cf65af126dc4566a05fff3143f76808", "patch": "@@ -1,3 +1,7 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmul_n.c: New file.\n+\n 2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vmul_lane.c: New file."}, {"sha": "be0ee65cc65b7c7e70a721f919da8cbbf89db473", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmul_n.c", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8afb62ac1cf65af126dc4566a05fff3143f76808/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul_n.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8afb62ac1cf65af126dc4566a05fff3143f76808/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul_n.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmul_n.c?ref=8afb62ac1cf65af126dc4566a05fff3143f76808", "patch": "@@ -0,0 +1,96 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,4) [] = { 0xfef0, 0xff01, 0xff12, 0xff23 };\n+VECT_VAR_DECL(expected,int,32,2) [] = { 0xfffffde0, 0xfffffe02 };\n+VECT_VAR_DECL(expected,uint,16,4) [] = { 0xfcd0, 0xfd03, 0xfd36, 0xfd69 };\n+VECT_VAR_DECL(expected,uint,32,2) [] = { 0xfffffbc0, 0xfffffc04 };\n+VECT_VAR_DECL(expected,hfloat,32,2) [] = { 0xc3b26666, 0xc3a74000 };\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0xfab0, 0xfb05, 0xfb5a, 0xfbaf,\n+\t\t\t\t\t0xfc04, 0xfc59, 0xfcae, 0xfd03 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xfffff9a0, 0xfffffa06,\n+\t\t\t\t\t0xfffffa6c, 0xfffffad2 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xf890, 0xf907, 0xf97e, 0xf9f5,\n+\t\t\t\t\t 0xfa6c, 0xfae3, 0xfb5a, 0xfbd1 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xfffff780, 0xfffff808,\n+\t\t\t\t\t 0xfffff890, 0xfffff918 };\n+VECT_VAR_DECL(expected,hfloat,32,4) [] = { 0xc4b1cccd, 0xc4a6b000,\n+\t\t\t\t\t   0xc49b9333, 0xc4907667 };\n+\n+#define INSN_NAME vmul_n\n+#define TEST_MSG \"VMUL_N\"\n+\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+#define DECL_VMUL(VAR)\t\t\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, float, 32, 2);\t\t\\\n+  DECL_VARIABLE(VAR, int, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, int, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 16, 8);\t\t\\\n+  DECL_VARIABLE(VAR, uint, 32, 4);\t\t\\\n+  DECL_VARIABLE(VAR, float, 32, 4)\n+\n+  /* vector_res = vmul_n(vector,val), then store the result.  */\n+#define TEST_VMUL_N(Q, T1, T2, W, N, L)\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =\t\t\t\t\t\\\n+    vmul##Q##_n_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\\\n+\t\t\tL);\t\t\t\t\t\t\\\n+  vst1##Q##_##T2##W(VECT_VAR(result, T1, W, N),\t\t\t\t\\\n+\t\t    VECT_VAR(vector_res, T1, W, N))\n+\n+  DECL_VMUL(vector);\n+  DECL_VMUL(vector_res);\n+\n+  clean_results ();\n+\n+  /* Initialize vector from pre-initialized values.  */\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+  VLOAD(vector, buffer, , float, f, 32, 2);\n+  VLOAD(vector, buffer, q, int, s, 16, 8);\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, uint, u, 16, 8);\n+  VLOAD(vector, buffer, q, uint, u, 32, 4);\n+  VLOAD(vector, buffer, q, float, f, 32, 4);\n+\n+  /* Choose multiplier arbitrarily.  */\n+  TEST_VMUL_N(, int, s, 16, 4, 0x11);\n+  TEST_VMUL_N(, int, s, 32, 2, 0x22);\n+  TEST_VMUL_N(, uint, u, 16, 4, 0x33);\n+  TEST_VMUL_N(, uint, u, 32, 2, 0x44);\n+  TEST_VMUL_N(, float, f, 32, 2, 22.3f);\n+  TEST_VMUL_N(q, int, s, 16, 8, 0x55);\n+  TEST_VMUL_N(q, int, s, 32, 4, 0x66);\n+  TEST_VMUL_N(q, uint, u, 16, 8, 0x77);\n+  TEST_VMUL_N(q, uint, u, 32, 4, 0x88);\n+  TEST_VMUL_N(q, float, f, 32, 4, 88.9f);\n+\n+  CHECK(TEST_MSG, int, 16, 4, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 4, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 2, PRIx32, expected, \"\");\n+  CHECK_FP(TEST_MSG, float, 32, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 16, 8, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK_FP(TEST_MSG, float, 32, 4, PRIx32, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+\n+  return 0;\n+}"}]}