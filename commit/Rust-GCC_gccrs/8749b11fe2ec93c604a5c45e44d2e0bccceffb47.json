{"sha": "8749b11fe2ec93c604a5c45e44d2e0bccceffb47", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODc0OWIxMWZlMmVjOTNjNjA0YTVjNDVlNDRkMmUwYmNjY2VmZmI0Nw==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-04-20T20:25:17Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-04-20T20:25:17Z"}, "message": "re PR target/79804 (ICE in print_reg, at config/i386/i386.c:17637)\n\n\tPR target/79804\n\t* config/i386/i386.c (print_reg): Remove assert for disalowed\n\tregno values, call output_operand_lossage instead.\n\ntestsuite/ChangeLog:\n\n\tPR target/79804\n\t* gcc.target/i386/pr79804.c: New test.\n\nFrom-SVN: r247037", "tree": {"sha": "cc3f98dc4606c2fdd51215e8fe3edf86b3cba8d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc3f98dc4606c2fdd51215e8fe3edf86b3cba8d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8749b11fe2ec93c604a5c45e44d2e0bccceffb47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8749b11fe2ec93c604a5c45e44d2e0bccceffb47", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8749b11fe2ec93c604a5c45e44d2e0bccceffb47", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "209173363403d9894743b76cff0d803186ce66a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/209173363403d9894743b76cff0d803186ce66a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/209173363403d9894743b76cff0d803186ce66a8"}], "stats": {"total": 37, "additions": 31, "deletions": 6}, "files": [{"sha": "9a94fe68ddc5e072cf739ff0f2dbe7d2ad58ef03", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8749b11fe2ec93c604a5c45e44d2e0bccceffb47", "patch": "@@ -1,3 +1,9 @@\n+2017-04-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/79804\n+\t* config/i386/i386.c (print_reg): Remove assert for disalowed\n+\tregno values, call output_operand_lossage instead.\n+\n 2017-04-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/78090"}, {"sha": "535181cb4a432a030b814ec21e378b2310ffe5ac", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8749b11fe2ec93c604a5c45e44d2e0bccceffb47", "patch": "@@ -17650,12 +17650,16 @@ print_reg (rtx x, int code, FILE *file)\n \n   regno = REGNO (x);\n \n-  gcc_assert (regno != ARG_POINTER_REGNUM\n-\t      && regno != FRAME_POINTER_REGNUM\n-\t      && regno != FPSR_REG\n-\t      && regno != FPCR_REG);\n-\n-  if (regno == FLAGS_REG)\n+  if (regno == ARG_POINTER_REGNUM\n+      || regno == FRAME_POINTER_REGNUM\n+      || regno == FPSR_REG\n+      || regno == FPCR_REG)\n+    {\n+      output_operand_lossage\n+\t(\"invalid use of register '%s'\", reg_names[regno]);\n+      return;\n+    }\n+  else if (regno == FLAGS_REG)\n     {\n       output_operand_lossage (\"invalid use of asm flag output\");\n       return;"}, {"sha": "f0a4f46967bf9ca1391ac4f6b07a2688cfc162bb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8749b11fe2ec93c604a5c45e44d2e0bccceffb47", "patch": "@@ -1,3 +1,8 @@\n+2017-04-20  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/79804\n+\t* gcc.target/i386/pr79804.c: New test.\n+\n 2017-04-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/78090"}, {"sha": "4325131ded6eb15be890eb67301910b837e9b868", "filename": "gcc/testsuite/gcc.target/i386/pr79804.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79804.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8749b11fe2ec93c604a5c45e44d2e0bccceffb47/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79804.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr79804.c?ref=8749b11fe2ec93c604a5c45e44d2e0bccceffb47", "patch": "@@ -0,0 +1,10 @@\n+/* PR target/79804 */\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+\n+void foo (void)\n+{\n+  register int r20 asm (\"20\");\n+\n+  asm volatile (\"# %0\" : \"=r\"(r20));  /* { dg-error \"invalid use of register\" } */\n+}"}]}