{"sha": "cf013e9fdbd98b7798cbd88f126000c72361c56c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YwMTNlOWZkYmQ5OGI3Nzk4Y2JkODhmMTI2MDAwYzcyMzYxYzU2Yw==", "commit": {"author": {"name": "Erik Edelmann", "email": "eedelman@gcc.gnu.org", "date": "2005-12-30T15:02:44Z"}, "committer": {"name": "Erik Edelmann", "email": "eedelman@gcc.gnu.org", "date": "2005-12-30T15:02:44Z"}, "message": "re PR fortran/22607 (Elemental character functions don't work)\n\nfortran/\n2005-12-30  Erik Edelmann  <eedelman@gcc.gnu.org>\n\n        PR fortran/22607\n        * trans-decl.c(gfc_get_extern_function_decl): Don't set\n        DECL_IS_PURE (fndecl) = 1 for return-by-reference\n        functions.\n\n        fortran/PR 25396\n        * interface.c (gfc_extend_expr): Initialize\n        e->value.function.name to NULL.\n\n\n\ntestsuite/\n2005-12-30  Erik Edelmann  <eedelman@gcc.gnu.org>\n\n        PR fortran/22607\n        * gfortran-dg/pure_byref_3.f90: New.\n\n        fortran/PR 25396\n        * gfortran.dg/userdef_operator_1.f90: New.\n\nFrom-SVN: r109171", "tree": {"sha": "b1309c080ace37470b0f763d098f2b1fed68196b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1309c080ace37470b0f763d098f2b1fed68196b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf013e9fdbd98b7798cbd88f126000c72361c56c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf013e9fdbd98b7798cbd88f126000c72361c56c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf013e9fdbd98b7798cbd88f126000c72361c56c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf013e9fdbd98b7798cbd88f126000c72361c56c/comments", "author": null, "committer": null, "parents": [{"sha": "ae21215e5c1d35711ff7a275bebb255525e83b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae21215e5c1d35711ff7a275bebb255525e83b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae21215e5c1d35711ff7a275bebb255525e83b5b"}], "stats": {"total": 90, "additions": 89, "deletions": 1}, "files": [{"sha": "4d7e648d6729de2ecd99c9db2cd4985505089738", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=cf013e9fdbd98b7798cbd88f126000c72361c56c", "patch": "@@ -1,3 +1,14 @@\n+2005-12-30  Erik Edelmann  <eedelman@gcc.gnu.org>\n+\n+\tPR fortran/22607\n+\t* trans-decl.c(gfc_get_extern_function_decl): Don't set\n+\tDECL_IS_PURE (fndecl) = 1 for return-by-reference\n+\tfunctions.\n+\n+\tfortran/PR 25396\n+\t* interface.c (gfc_extend_expr): Initialize\n+\te->value.function.name to NULL.\n+\n 2005-12-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/25532"}, {"sha": "e3a13f5d9e47883e39a50113fd954b7615d8fc37", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=cf013e9fdbd98b7798cbd88f126000c72361c56c", "patch": "@@ -1718,6 +1718,7 @@ gfc_extend_expr (gfc_expr * e)\n   e->value.function.actual = actual;\n   e->value.function.esym = NULL;\n   e->value.function.isym = NULL;\n+  e->value.function.name = NULL;\n \n   if (gfc_pure (NULL) && !gfc_pure (sym))\n     {"}, {"sha": "aa4a3b01e0490a19cafdf1520416723b6dfbdd04", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=cf013e9fdbd98b7798cbd88f126000c72361c56c", "patch": "@@ -1093,7 +1093,7 @@ gfc_get_extern_function_decl (gfc_symbol * sym)\n      sense.  */\n   if (sym->attr.pure || sym->attr.elemental)\n     {\n-      if (sym->attr.function)\n+      if (sym->attr.function && !gfc_return_by_reference (sym))\n \tDECL_IS_PURE (fndecl) = 1;\n       /* TODO: check if pure SUBROUTINEs don't have INTENT(OUT)\n \t parameters and don't use alternate returns (is this"}, {"sha": "9d8f60845adc4027a3cbdf66e4fcd6f3c14dbde7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cf013e9fdbd98b7798cbd88f126000c72361c56c", "patch": "@@ -1,3 +1,11 @@\n+2005-12-30  Erik Edelmann  <eedelman@gcc.gnu.org>\n+\n+\tPR fortran/22607\n+\t* gfortran-dg/pure_byref_3.f90: New.\n+\n+\tfortran/PR 25396\n+\t* gfortran.dg/userdef_operator_1.f90: New.\n+\n 2005-12-29  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.dg/abi/thunk3.C: New."}, {"sha": "cb2644ff8982dcda85ade7bbd4d3aa58cadc419e", "filename": "gcc/testsuite/gfortran.dg/pure_byref_3.f90", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_byref_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_byref_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpure_byref_3.f90?ref=cf013e9fdbd98b7798cbd88f126000c72361c56c", "patch": "@@ -0,0 +1,33 @@\n+! { dg-do run }\n+! PR 22607: External/module pure return-by-reference functions\n+\n+pure function hoj()\n+    integer :: hoj(3)\n+    hoj = (/1, 2, 3/)\n+end function hoj\n+\n+module huj_mod\n+contains\n+    pure function huj()\n+        integer :: huj(3)\n+        huj = (/1, 2, 3/)\n+    end function huj\n+end module huj_mod\n+\n+program pure_byref_3\n+    use huj_mod\n+    implicit none\n+\n+    interface\n+        pure function hoj()\n+            integer :: hoj(3)\n+        end function hoj\n+    end interface\n+    integer :: a(3)\n+\n+    a = huj()\n+    if (.not. all(a == (/1, 2, 3/))) call abort()\n+\n+    a = hoj()\n+    if (.not. all(a == (/1, 2, 3/))) call abort()\n+end program pure_byref_3"}, {"sha": "5bf99d04acda832ebfc374333aea28872c003019", "filename": "gcc/testsuite/gfortran.dg/userdef_operator_1.f90", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ftestsuite%2Fgfortran.dg%2Fuserdef_operator_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf013e9fdbd98b7798cbd88f126000c72361c56c/gcc%2Ftestsuite%2Fgfortran.dg%2Fuserdef_operator_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fuserdef_operator_1.f90?ref=cf013e9fdbd98b7798cbd88f126000c72361c56c", "patch": "@@ -0,0 +1,35 @@\n+! { dg-do compile }\n+! Testcase from PR 25396: User defined operators returning arrays.\n+module geometry\n+\n+  implicit none\n+\n+  interface operator(.cross.)\n+     module procedure cross\n+  end interface\n+\n+contains\n+\n+    ! Cross product between two 3d vectors.\n+    pure function cross(a, b)\n+      real, dimension(3), intent(in) :: a,b\n+      real, dimension(3) :: cross\n+\n+     cross = (/ a(2) * b(3) - a(3) * b(2), &\n+           a(3) * b(1) - a(1) * b(3), &\n+           a(1) * b(2) - a(2) * b(1) /)\n+    end function cross\n+\n+end module geometry\n+\n+program opshape\n+  use geometry\n+\n+  implicit none\n+\n+  real :: t(3,3), a\n+\n+  a = dot_product (t(:,1), t(:,2) .cross. t(:,3))\n+\n+end program opshape\n+"}]}