{"sha": "4d85ec3472d6149912717f657cc29f19fe059a91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ4NWVjMzQ3MmQ2MTQ5OTEyNzE3ZjY1N2NjMjlmMTlmZTA1OWE5MQ==", "commit": {"author": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2008-02-13T23:02:08Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2008-02-13T23:02:08Z"}, "message": "Fix compile on 64bit platforms.\n\nFrom-SVN: r132300", "tree": {"sha": "463ac12d6b75a173f3e442e862123e164ca0f406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/463ac12d6b75a173f3e442e862123e164ca0f406"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d85ec3472d6149912717f657cc29f19fe059a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d85ec3472d6149912717f657cc29f19fe059a91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d85ec3472d6149912717f657cc29f19fe059a91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d85ec3472d6149912717f657cc29f19fe059a91/comments", "author": null, "committer": null, "parents": [{"sha": "5586014a397175dfbcc883e64b7c376e4cd6c3d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5586014a397175dfbcc883e64b7c376e4cd6c3d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5586014a397175dfbcc883e64b7c376e4cd6c3d1"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "3ed46642ffc77a5b999c98a90873cb57fc123042", "filename": "gcc/testsuite/gcc.dg/pr35065.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d85ec3472d6149912717f657cc29f19fe059a91/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d85ec3472d6149912717f657cc29f19fe059a91/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr35065.c?ref=4d85ec3472d6149912717f657cc29f19fe059a91", "patch": "@@ -30,8 +30,11 @@ struct block_t {\n   size_t i_buffer;\n   uint8_t *p_buffer;\n };\n+block_t* block_New(void*, size_t);\n+block_t *nal_get_annexeb(decoder_t *, uint8_t *, int);\n+block_t *block_ChainGather (block_t *);\n static inline block_t *block_Duplicate( block_t *p_block ) {\n-  block_t *p_dup = (block_t*)block_New( ((void *)0), p_block->i_buffer );\n+  block_t *p_dup = block_New( ((void *)0), p_block->i_buffer );\n   p_dup->i_dts = p_block->i_dts;\n   p_dup->i_pts = p_block->i_pts;\n }\n@@ -136,7 +139,7 @@ int Open( vlc_object_t *p_this ) {\n \t i < i_sps;\n \t i++ ) {\n       int i_length = U16_AT( p );\n-      block_t *p_sps = (block_t*)nal_get_annexeb( p_dec, p + 2, i_length );\n+      block_t *p_sps = nal_get_annexeb( p_dec, p + 2, i_length );\n       ParseNALBlock( p_dec, p_sps );\n     }\n   }\n@@ -183,7 +186,7 @@ block_t *ParseNALBlock( decoder_t *p_dec, block_t *p_frag )\n \t      block_ChainAppend( &p_sps, p_pps );\n \t      block_ChainAppend( &p_sps, p_sys->p_frame );\n \t      p_sys->b_header = 1;\n-\t      p_pic = (block_t*)block_ChainGather( p_sps );\n+\t      p_pic = block_ChainGather( p_sps );\n \t    }\n \t  } while(0);\n   }\n@@ -212,7 +215,7 @@ block_t *ParseNALBlock( decoder_t *p_dec, block_t *p_frag )\n \t    p_sps->i_pts = p_sys->p_frame->i_pts;\n \t    block_ChainAppend( &p_sps, p_pps );\n \t    block_ChainAppend( &p_sps, p_sys->p_frame );\n-\t    p_pic = (block_t*)block_ChainGather( p_sps );\n+\t    p_pic = block_ChainGather( p_sps );\n \t  }\n \tp_pic->i_flags |= p_sys->slice.i_frame_type;\n       } while(0);"}]}