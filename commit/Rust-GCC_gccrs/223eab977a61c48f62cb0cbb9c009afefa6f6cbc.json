{"sha": "223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIzZWFiOTc3YTYxYzQ4ZjYyY2IwY2JiOWMwMDlhZmVmYTZmNmNiYw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T09:17:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-13T09:17:10Z"}, "message": "[multiple changes]\n\n2009-07-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socthi-vxworks.adb (C_Sendto): VxWorks does not support the\n\tstandard sendto(2) interface for connected sockets (passing a null\n\tdestination address). Use send(2) instead for that case.\n\n2009-07-13  Pascal Obry  <obry@adacore.com>\n\n\t* adaint.c: Fix __gnat_stat() with Win32 UNC paths.\n\nFrom-SVN: r149559", "tree": {"sha": "1857f720afceceaca3d3c5a224ab66303e3e682d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1857f720afceceaca3d3c5a224ab66303e3e682d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/223eab977a61c48f62cb0cbb9c009afefa6f6cbc/comments", "author": null, "committer": null, "parents": [{"sha": "fdd7e7bb1d01de50a07ba1b7f9bf6235b7e89da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdd7e7bb1d01de50a07ba1b7f9bf6235b7e89da3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdd7e7bb1d01de50a07ba1b7f9bf6235b7e89da3"}], "stats": {"total": 49, "additions": 45, "deletions": 4}, "files": [{"sha": "7fe051269f94b56f962e8159bbe4983160430b6f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/223eab977a61c48f62cb0cbb9c009afefa6f6cbc/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/223eab977a61c48f62cb0cbb9c009afefa6f6cbc/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "patch": "@@ -1,3 +1,13 @@\n+2009-07-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socthi-vxworks.adb (C_Sendto): VxWorks does not support the\n+\tstandard sendto(2) interface for connected sockets (passing a null\n+\tdestination address). Use send(2) instead for that case.\n+\n+2009-07-13  Pascal Obry  <obry@adacore.com>\n+\n+\t* adaint.c: Fix __gnat_stat() with Win32 UNC paths.\n+\n 2009-07-13  Emmanuel Briot  <briot@adacore.com>\n \n \t* prj-proc.adb, prj-proc.ads, prj.ads, prj-nmsc.adb, prj-nmsc.ads,"}, {"sha": "f8ef6b189a4f253a63ded0705fd17de85e74d148", "filename": "gcc/ada/adaint.c", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/223eab977a61c48f62cb0cbb9c009afefa6f6cbc/gcc%2Fada%2Fadaint.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/223eab977a61c48f62cb0cbb9c009afefa6f6cbc/gcc%2Fada%2Fadaint.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fadaint.c?ref=223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "patch": "@@ -1655,10 +1655,14 @@ __gnat_stat (char *name, STRUCT_STAT *statbuf)\n {\n #ifdef __MINGW32__\n   /* Under Windows the directory name for the stat function must not be\n-     terminated by a directory separator except if just after a drive name.  */\n+     terminated by a directory separator except if just after a drive name\n+     or with UNC path without directory (only the name of the shared\n+     resource), for example: \\\\computer\\share\\  */\n+\n   TCHAR wname [GNAT_MAX_PATH_LEN + 2];\n-  int name_len;\n+  int name_len, k;\n   TCHAR last_char;\n+  int dirsep_count = 0;\n \n   S2WSC (wname, name, GNAT_MAX_PATH_LEN + 2);\n   name_len = _tcslen (wname);\n@@ -1675,9 +1679,17 @@ __gnat_stat (char *name, STRUCT_STAT *statbuf)\n       last_char = wname[name_len - 1];\n     }\n \n+  /* Count back-slashes.  */\n+\n+  for (k=0; k<name_len; k++)\n+    if (wname[k] == _T('\\\\') || wname[k] == _T('/'))\n+      dirsep_count++;\n+\n   /* Only a drive letter followed by ':', we must add a directory separator\n      for the stat routine to work properly.  */\n-  if (name_len == 2 && wname[1] == _T(':'))\n+  if ((name_len == 2 && wname[1] == _T(':'))\n+      || (name_len > 3 && wname[0] == _T('\\\\') && wname[1] == _T('\\\\')\n+\t  && dirsep_count == 3))\n     _tcscat (wname, _T(\"\\\\\"));\n \n   return _tstat (wname, (struct _stat *)statbuf);"}, {"sha": "8a90056312bf045a8d353c2a90a26bbb7649958e", "filename": "gcc/ada/g-socthi-vxworks.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/223eab977a61c48f62cb0cbb9c009afefa6f6cbc/gcc%2Fada%2Fg-socthi-vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/223eab977a61c48f62cb0cbb9c009afefa6f6cbc/gcc%2Fada%2Fg-socthi-vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-vxworks.adb?ref=223eab977a61c48f62cb0cbb9c009afefa6f6cbc", "patch": "@@ -108,6 +108,13 @@ package body GNAT.Sockets.Thin is\n       Flags : C.int) return C.int;\n    pragma Import (C, Syscall_Sendmsg, \"sendmsg\");\n \n+   function Syscall_Send\n+     (S     : C.int;\n+      Msg   : System.Address;\n+      Len   : C.int;\n+      Flags : C.int) return C.int;\n+   pragma Import (C, Syscall_Send, \"send\");\n+\n    function Syscall_Sendto\n      (S     : C.int;\n       Msg   : System.Address;\n@@ -355,11 +362,23 @@ package body GNAT.Sockets.Thin is\n       To    : System.Address;\n       Tolen : C.int) return C.int\n    is\n+      use System;\n+\n       Res : C.int;\n \n    begin\n       loop\n-         Res := Syscall_Sendto (S, Msg, Len, Flags, To, Tolen);\n+         if To = Null_Address then\n+            --  In violation of the standard sockets API, VxWorks does not\n+            --  support sendto(2) calls on connected sockets with a null\n+            --  destination address, so use send(2) instead in that case.\n+\n+            Res := Syscall_Send (S, Msg, Len, Flags);\n+\n+         else\n+            Res := Syscall_Sendto (S, Msg, Len, Flags, To, Tolen);\n+         end if;\n+\n          exit when SOSC.Thread_Blocking_IO\n            or else Res /= Failure\n            or else Non_Blocking_Socket (S)"}]}