{"sha": "986e74d58eea13066c05f662ba87fdad4e20b4b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg2ZTc0ZDU4ZWVhMTMwNjZjMDVmNjYyYmE4N2ZkYWQ0ZTIwYjRiNg==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2007-01-12T09:23:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-01-12T09:23:35Z"}, "message": "200x-xx-xx Julian Brown <julian@codesourcery.com>\n\ngcc/\n200x-xx-xx  Julian Brown  <julian@codesourcery.com>\n\n\t* config/m68k/m68k.h (TARGET_ISAB): New macro.\n\t* config/m68k/m68k.c: Use TARGET_ISAB rather than TARGET_CFV4.\n\t* config/m68k/m68k.md: Likewise.\n\nFrom-SVN: r120709", "tree": {"sha": "02d17458a566c175a4451fe52f27797b4202078d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02d17458a566c175a4451fe52f27797b4202078d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/986e74d58eea13066c05f662ba87fdad4e20b4b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/986e74d58eea13066c05f662ba87fdad4e20b4b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/986e74d58eea13066c05f662ba87fdad4e20b4b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/986e74d58eea13066c05f662ba87fdad4e20b4b6/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb5bdf700e8c6a07615aaae02159889f93890ec3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb5bdf700e8c6a07615aaae02159889f93890ec3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb5bdf700e8c6a07615aaae02159889f93890ec3"}], "stats": {"total": 43, "additions": 27, "deletions": 16}, "files": [{"sha": "0c706cb408d6f337189b531302bfcb06e048fcac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/986e74d58eea13066c05f662ba87fdad4e20b4b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/986e74d58eea13066c05f662ba87fdad4e20b4b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=986e74d58eea13066c05f662ba87fdad4e20b4b6", "patch": "@@ -1,3 +1,9 @@\n+2007-01-12  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/m68k/m68k.h (TARGET_ISAB): New macro.\n+\t* config/m68k/m68k.c: Use TARGET_ISAB rather than TARGET_CFV4.\n+\t* config/m68k/m68k.md: Likewise.\n+\n 2007-01-12  Julian Brown  <julian@codesourcery.com>\n \n \t* config/m68k/m68k.h (LEGITIMATE_INDEX_P, LEGITIMIZE_ADDRESS): Use"}, {"sha": "1a2505c1f630d96ae7006cb808df3e7dc1db2fbb", "filename": "gcc/config/m68k/m68k.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/986e74d58eea13066c05f662ba87fdad4e20b4b6/gcc%2Fconfig%2Fm68k%2Fm68k.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/986e74d58eea13066c05f662ba87fdad4e20b4b6/gcc%2Fconfig%2Fm68k%2Fm68k.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.c?ref=986e74d58eea13066c05f662ba87fdad4e20b4b6", "patch": "@@ -1562,7 +1562,7 @@ const_method (rtx constant)\n   if (USE_MOVQ ((u >> 16) | (u << 16)))\n     return SWAP;\n \n-  if (TARGET_CFV4)\n+  if (TARGET_ISAB)\n     {\n       /* Try using MVZ/MVS with an immediate value to load constants.  */\n       if (i >= 0 && i <= 65535)\n@@ -1779,7 +1779,7 @@ valid_mov3q_const (rtx constant)\n {\n   int i;\n \n-  if (TARGET_CFV4 && GET_CODE (constant) == CONST_INT)\n+  if (TARGET_ISAB && GET_CODE (constant) == CONST_INT)\n     {\n       i = INTVAL (constant);\n       if (i == -1 || (i >= 1 && i <= 7))"}, {"sha": "41f305bb51f0ebbbd659ed273a6ff162e8aac618", "filename": "gcc/config/m68k/m68k.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/986e74d58eea13066c05f662ba87fdad4e20b4b6/gcc%2Fconfig%2Fm68k%2Fm68k.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/986e74d58eea13066c05f662ba87fdad4e20b4b6/gcc%2Fconfig%2Fm68k%2Fm68k.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.h?ref=986e74d58eea13066c05f662ba87fdad4e20b4b6", "patch": "@@ -126,6 +126,8 @@ Boston, MA 02110-1301, USA.  */\n /* Size (in bytes) of FPU registers.  */\n #define TARGET_FP_REG_SIZE\t(TARGET_COLDFIRE ? 8 : 12)\n \n+#define TARGET_ISAB\t\tTARGET_CFV4\n+\n #define TUNE_68000_10\t(!TARGET_68020 && !TARGET_COLDFIRE)\n #define TUNE_68030\tTARGET_68030\n #define TUNE_68040\tTARGET_68040"}, {"sha": "c312bfb27d1535724c5cf0b83b2545a925a39fd9", "filename": "gcc/config/m68k/m68k.md", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/986e74d58eea13066c05f662ba87fdad4e20b4b6/gcc%2Fconfig%2Fm68k%2Fm68k.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/986e74d58eea13066c05f662ba87fdad4e20b4b6/gcc%2Fconfig%2Fm68k%2Fm68k.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68k.md?ref=986e74d58eea13066c05f662ba87fdad4e20b4b6", "patch": "@@ -682,13 +682,13 @@\n (define_insn \"*movsi_cf\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r<Q>,g,U\")\n \t(match_operand:SI 1 \"general_operand\" \"g,r<Q>,U\"))]\n-  \"TARGET_COLDFIRE && !TARGET_CFV4\"\n+  \"TARGET_COLDFIRE && !TARGET_ISAB\"\n   \"* return output_move_simode (operands);\")\n \n (define_insn \"*movsi_cfv4\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=r<Q>,g,U\")\n \t(match_operand:SI 1 \"general_operand\" \"Rg,Rr<Q>,U\"))]\n-  \"TARGET_CFV4\"\n+  \"TARGET_ISAB\"\n   \"* return output_move_simode (operands);\")\n \n ;; Special case of fullword move, where we need to get a non-GOT PIC\n@@ -1389,7 +1389,7 @@\n (define_insn \"*zero_extendhisi2_cf\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(zero_extend:SI (match_operand:HI 1 \"nonimmediate_src_operand\" \"rmS\")))]\n-  \"TARGET_CFV4\"\n+  \"TARGET_ISAB\"\n   \"mvz%.w %1,%0\")\n \n (define_insn \"zero_extendhisi2\"\n@@ -1413,7 +1413,7 @@\n (define_insn \"*zero_extendqisi2_cfv4\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=d\")\n \t(zero_extend:SI (match_operand:QI 1 \"nonimmediate_src_operand\" \"dmS\")))]\n-  \"TARGET_CFV4\"\n+  \"TARGET_ISAB\"\n   \"mvz%.b %1,%0\")\n \n (define_insn \"zero_extendqisi2\"\n@@ -1427,7 +1427,9 @@\n (define_split\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(zero_extend (match_operand 1 \"nonimmediate_src_operand\" \"\")))]\n-  \"!TARGET_CFV4 && reload_completed && reg_mentioned_p (operands[0], operands[1])\"\n+  \"!TARGET_ISAB\n+   && reload_completed\n+   && reg_mentioned_p (operands[0], operands[1])\"\n   [(set (strict_low_part (match_dup 2))\n \t(match_dup 1))\n    (set (match_dup 0)\n@@ -1441,7 +1443,7 @@\n (define_split\n   [(set (match_operand 0 \"register_operand\" \"\")\n \t(zero_extend (match_operand 1 \"nonimmediate_src_operand\" \"\")))]\n-  \"!TARGET_CFV4 && reload_completed\"\n+  \"!TARGET_ISAB && reload_completed\"\n   [(set (match_dup 0)\n \t(const_int 0))\n    (set (strict_low_part (match_dup 2))\n@@ -1459,7 +1461,7 @@\n {\n   CC_STATUS_INIT;\n   operands[2] = gen_rtx_REG (SImode, REGNO (operands[0]) + 1);\n-  if (TARGET_CFV4)\n+  if (TARGET_ISAB)\n     return \"mvs%.b %1,%2\\;smi %0\\;extb%.l %0\";\n   if (TARGET_68020 || TARGET_COLDFIRE)\n     {\n@@ -1485,7 +1487,7 @@\n {\n   CC_STATUS_INIT;\n   operands[2] = gen_rtx_REG (SImode, REGNO (operands[0]) + 1);\n-  if (TARGET_CFV4)\n+  if (TARGET_ISAB)\n     return \"mvs%.w %1,%2\\;smi %0\\;extb%.l %0\";\n   if (TARGET_68020 || TARGET_COLDFIRE)\n     return \"move%.w %1,%2\\;ext%.l %2\\;smi %0\\;extb%.l %0\";\n@@ -1549,14 +1551,14 @@\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(sign_extend:SI\n \t (match_operand:HI 1 \"nonimmediate_src_operand\" \"rmS\")))]\n-  \"TARGET_CFV4\"\n+  \"TARGET_ISAB\"\n   \"mvs%.w %1,%0\")\n \n (define_insn \"*68k_extendhisi2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=*d,a\")\n \t(sign_extend:SI\n \t (match_operand:HI 1 \"nonimmediate_src_operand\" \"0,rmS\")))]\n-  \"!TARGET_CFV4\"\n+  \"!TARGET_ISAB\"\n {\n   if (ADDRESS_REG_P (operands[0]))\n     return \"move%.w %1,%0\";\n@@ -1578,13 +1580,13 @@\n (define_insn \"*cfv4_extendqisi2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(sign_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"rms\")))]\n-  \"TARGET_CFV4\"\n+  \"TARGET_ISAB\"\n   \"mvs%.b %1,%0\")\n \n (define_insn \"*68k_extendqisi2\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=d\")\n \t(sign_extend:SI (match_operand:QI 1 \"nonimmediate_operand\" \"0\")))]\n-  \"TARGET_68020 || (TARGET_COLDFIRE && !TARGET_CFV4)\"\n+  \"TARGET_68020 || (TARGET_COLDFIRE && !TARGET_ISAB)\"\n   \"extb%.l %0\")\n \f\n ;; Conversions between float and double.\n@@ -3094,7 +3096,7 @@\n \t(umod:HI (match_dup 1) (match_dup 2)))]\n   \"!TARGET_COLDFIRE || TARGET_CF_HWDIV\"\n {\n-  if (TARGET_CFV4)\n+  if (TARGET_ISAB)\n     output_asm_insn (MOTOROLA ?\n       \"mvz%.w %0,%0\\;divu%.w %2,%0\" :\n       \"mvz%.w %0,%0\\;divu %2,%0\",\n@@ -3218,7 +3220,8 @@\n \t\t(match_operand:SI 2 \"general_src_operand\" \"d,dmsK\")))]\n   \"TARGET_COLDFIRE\"\n {\n-  if (TARGET_CFV4 && DATA_REG_P (operands[0])\n+  if (TARGET_ISAB\n+      && DATA_REG_P (operands[0])\n       && GET_CODE (operands[2]) == CONST_INT)\n     {\n       if (INTVAL (operands[2]) == 0x000000ff)"}]}