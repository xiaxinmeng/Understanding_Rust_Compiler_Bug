{"sha": "5a657fc371aefb7648ad42cc9db9187032a80809", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWE2NTdmYzM3MWFlZmI3NjQ4YWQ0MmNjOWRiOTE4NzAzMmE4MDgwOQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-09-25T13:11:17Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-09-25T13:11:17Z"}, "message": "libiberty.h (make_temp_file): Add a prototype.\n\ninclude:\n\n        * libiberty.h (make_temp_file):  Add a prototype.\n\nlibiberty:\n\n        * choose-temp.c: Remove obsolete comment about gcc.\n        (make_temp_file): Constify a char*.\n\ngcc:\n\n        * collect2.c (make_temp_file): Don't prototype.\n\n        * gcc.c (make_temp_file): Likewise.\n\n        * mips.c (mips_make_temp_file): Renamed from `make_temp_file'.\n\nFrom-SVN: r29662", "tree": {"sha": "4c4f3626796f07f5c60165bd980cdfefe79f889c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c4f3626796f07f5c60165bd980cdfefe79f889c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5a657fc371aefb7648ad42cc9db9187032a80809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a657fc371aefb7648ad42cc9db9187032a80809", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a657fc371aefb7648ad42cc9db9187032a80809", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a657fc371aefb7648ad42cc9db9187032a80809/comments", "author": null, "committer": null, "parents": [{"sha": "b8694195959cd668ef6202158414f7fc648d8132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8694195959cd668ef6202158414f7fc648d8132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8694195959cd668ef6202158414f7fc648d8132"}], "stats": {"total": 36, "additions": 25, "deletions": 11}, "files": [{"sha": "258efbbe964b45f4bff845e90a0360790d54d6ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a657fc371aefb7648ad42cc9db9187032a80809/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a657fc371aefb7648ad42cc9db9187032a80809/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5a657fc371aefb7648ad42cc9db9187032a80809", "patch": "@@ -1,3 +1,11 @@\n+Sat Sep 25 09:03:17 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* collect2.c (make_temp_file): Don't prototype.\n+\n+\t* gcc.c (make_temp_file): Likewise.\n+\n+\t* mips.c (mips_make_temp_file): Renamed from `make_temp_file'.\n+\n Sat Sep 25 13:42:15 1999  Nick Clifton  <nickc@cygnus.com>\n \n \t* varasm.c (asm_emit_uninitialised): New function: Generate"}, {"sha": "2e3d3b1929acee54a06fff52f0a4dbd041a59e70", "filename": "gcc/collect2.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a657fc371aefb7648ad42cc9db9187032a80809/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a657fc371aefb7648ad42cc9db9187032a80809/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=5a657fc371aefb7648ad42cc9db9187032a80809", "patch": "@@ -52,8 +52,6 @@ Boston, MA 02111-1307, USA.  */\n /* Obstack allocation and deallocation routines.  */\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n-\n-extern char *make_temp_file PROTO ((const char *));\n \f\n /* On certain systems, we have code that works by scanning the object file\n    directly.  But this code uses system-specific header files and library"}, {"sha": "f24452b9fa95165801812db926251b936de550ce", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a657fc371aefb7648ad42cc9db9187032a80809/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a657fc371aefb7648ad42cc9db9187032a80809/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=5a657fc371aefb7648ad42cc9db9187032a80809", "patch": "@@ -93,7 +93,7 @@ static int m16_check_op\t\t\t\tPROTO ((rtx, int, int, int));\n static void block_move_loop\t\t\tPROTO ((rtx, rtx, int, int,\n \t\t\t\t\t\t\trtx, rtx));\n static void block_move_call\t\t\tPROTO ((rtx, rtx, rtx));\n-static FILE *make_temp_file\t\t\tPROTO ((void));\n+static FILE *mips_make_temp_file\t\tPROTO ((void));\n static void save_restore_insns\t\t\tPROTO ((int, rtx,\n \t\t\t\t\t\t\tlong, FILE *));\n static void mips16_output_gp_offset\t\tPROTO ((FILE *, rtx));\n@@ -5378,7 +5378,7 @@ mips_output_external_libcall (file, name)\n #endif\n \n static FILE *\n-make_temp_file ()\n+mips_make_temp_file ()\n {\n   FILE *stream;\n   const char *base = getenv (\"TMPDIR\");\n@@ -5597,7 +5597,7 @@ mips_asm_file_start (stream)\n   if (TARGET_FILE_SWITCHING && ! TARGET_MIPS16)\n     {\n       asm_out_data_file = stream;\n-      asm_out_text_file = make_temp_file ();\n+      asm_out_text_file = mips_make_temp_file ();\n     }\n \n   else"}, {"sha": "465f52202ffa0bedabc1d8e78f068bf595196bec", "filename": "gcc/gcc.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a657fc371aefb7648ad42cc9db9187032a80809/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a657fc371aefb7648ad42cc9db9187032a80809/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=5a657fc371aefb7648ad42cc9db9187032a80809", "patch": "@@ -1282,8 +1282,6 @@ static int argbuf_index;\n \n #ifdef MKTEMP_EACH_FILE\n \n-extern char *make_temp_file PROTO((const char *));\n-\n /* This is the list of suffixes and codes (%g/%u/%U) and the associated\n    temp file.  */\n "}, {"sha": "c9e21cea5e2b2b5cab7fd0a861198263451ab58d", "filename": "include/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a657fc371aefb7648ad42cc9db9187032a80809/include%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a657fc371aefb7648ad42cc9db9187032a80809/include%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2FChangeLog?ref=5a657fc371aefb7648ad42cc9db9187032a80809", "patch": "@@ -1,3 +1,7 @@\n+1999-09-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* libiberty.h (make_temp_file):  Add a prototype.\n+\n Tue Sep 14 00:35:02 1999  Marc Espie <espie@cvs.openbsd.org>\n \n \t* libiberty.h (basename):  OpenBSD has a correct prototype."}, {"sha": "9a32840f6676869eb01450d2a43f7252d833c34b", "filename": "include/libiberty.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a657fc371aefb7648ad42cc9db9187032a80809/include%2Flibiberty.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a657fc371aefb7648ad42cc9db9187032a80809/include%2Flibiberty.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/include%2Flibiberty.h?ref=5a657fc371aefb7648ad42cc9db9187032a80809", "patch": "@@ -64,6 +64,10 @@ extern long get_run_time PARAMS ((void));\n \n extern char *choose_temp_base PARAMS ((void));\n \n+/* Return a temporary file name or NULL if unable to create one.  */\n+\n+extern char *make_temp_file PARAMS ((const char *));\n+\n /* Allocate memory filled with spaces.  Allocates using malloc.  */\n \n extern const char *spaces PARAMS ((int count));"}, {"sha": "6b6a6434b9f799f5ea66a937c37b68e3b10652ad", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a657fc371aefb7648ad42cc9db9187032a80809/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a657fc371aefb7648ad42cc9db9187032a80809/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5a657fc371aefb7648ad42cc9db9187032a80809", "patch": "@@ -1,3 +1,8 @@\n+1999-09-25  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* choose-temp.c: Remove obsolete comment about gcc.\n+\t(make_temp_file): Constify a char*.\n+\n Wed Sep  8 20:03:28 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* xmemdup.c: Include sys/types.h."}, {"sha": "826d818ed62c3fa455d0a9ba433420f06933cac8", "filename": "libiberty/choose-temp.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5a657fc371aefb7648ad42cc9db9187032a80809/libiberty%2Fchoose-temp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5a657fc371aefb7648ad42cc9db9187032a80809/libiberty%2Fchoose-temp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fchoose-temp.c?ref=5a657fc371aefb7648ad42cc9db9187032a80809", "patch": "@@ -19,9 +19,6 @@ Boston, MA 02111-1307, USA.  */\n \n /* This file exports two functions: choose_temp_base and make_temp_file.  */\n \n-/* This file lives in at least two places: libiberty and gcc.\n-   Don't change one without the other.  */\n-\n #ifdef HAVE_CONFIG_H\n #include \"config.h\"\n #endif\n@@ -148,7 +145,7 @@ choose_temp_base ()\n \n char *\n make_temp_file (suffix)\n-     char *suffix;\n+     const char *suffix;\n {\n   char *base = 0;\n   char *temp_filename;"}]}