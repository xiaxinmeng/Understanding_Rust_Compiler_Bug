{"sha": "3a9fdf305842249b5a83e6866dd2b106b7e18946", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E5ZmRmMzA1ODQyMjQ5YjVhODNlNjg2NmRkMmIxMDZiN2UxODk0Ng==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-01-12T02:56:50Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2003-01-12T02:56:50Z"}, "message": "tables.html: Finished now.\n\n2003-01-11  Phil Edwards  <pme@gcc.gnu.org>\n\n\t* docs/doxygen/tables.html:  Finished now.\n\t* docs/doxygen/user.cfg.in:  Update to latest version of Doxygen.\n\t* include/bits/basic_ios.h (basic_ios::rdbuf):  Add example to\n\tcomments.\n\n\t* include/bits/deque.tcc, include/bits/stl_alloc.h,\n\tinclude/bits/stl_deque.h, include/bits/stl_list.h,\n\tinclude/bits/stl_vector.h:  Remove _GLIBCPP_DEPRECATED bits scheduled\n\tfor 3.4 removal.\n\nFrom-SVN: r61221", "tree": {"sha": "a44b4f1185a0de101d0bc864f35e45909e79dc1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a44b4f1185a0de101d0bc864f35e45909e79dc1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a9fdf305842249b5a83e6866dd2b106b7e18946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9fdf305842249b5a83e6866dd2b106b7e18946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a9fdf305842249b5a83e6866dd2b106b7e18946", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a9fdf305842249b5a83e6866dd2b106b7e18946/comments", "author": null, "committer": null, "parents": [{"sha": "b3504bc1260596b47a7f4bb6b004dfa02d723735", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3504bc1260596b47a7f4bb6b004dfa02d723735", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3504bc1260596b47a7f4bb6b004dfa02d723735"}], "stats": {"total": 11715, "additions": 5725, "deletions": 5990}, "files": [{"sha": "4111699cc7667d33bad97ff6c1cca5ab59f42d7d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 5591, "changes": 5603, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946"}, {"sha": "337056ec8cc70b216993549b5842588acf2c5805", "filename": "libstdc++-v3/ChangeLog-2002", "status": "added", "additions": 5590, "deletions": 0, "changes": 5590, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2FChangeLog-2002", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2FChangeLog-2002", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog-2002?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946"}, {"sha": "07e9f3e4b7b39c6437bb3420b4769324c924507e", "filename": "libstdc++-v3/docs/doxygen/tables.html", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Ftables.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Ftables.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Ftables.html?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946", "patch": "@@ -31,10 +31,6 @@ <h1>Tables</h1>\n    are also noted or incorporated.\n </p>\n \n-<p class=\"smallertext\">This will probably be incomplete for a while because\n-filling out the tables is mind-frothingly boring.  Also, the HTML table\n-rendering is ugly.  (Update:  mozilla 0.9.9 looks MUCH better.)</p>\n-\n <hr />\n \n <a name=\"65\"><p>"}, {"sha": "3d1f77ab9230e40c73a5542b55ca1c33958f6a89", "filename": "libstdc++-v3/docs/doxygen/user.cfg.in", "status": "modified", "additions": 114, "deletions": 70, "changes": 184, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fdoxygen%2Fuser.cfg.in?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946", "patch": "@@ -1,4 +1,4 @@\n-# Doxyfile 1.2.18\n+# Doxyfile 1.3-rc2\n \n # This file describes the settings to be used by the documentation system\n # doxygen (www.doxygen.org) for a project\n@@ -43,12 +43,11 @@ OUTPUT_DIRECTORY       = @outdir@\n # documentation generated by doxygen is written. Doxygen will use this \n # information to generate all constant output in the proper language. \n # The default language is English, other supported languages are: \n-# Brazilian, Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch,\n-# Finnish, French, German, Greek, Hungarian, Italian, Japanese, Japanese-en\n-# (Japanese with english messages), Korean, Norwegian, Polish, Portuguese,\n+# Brazilian, Catalan, Chinese, Chinese-Traditional, Croatian, Czech, Danish, Dutch, \n+# Finnish, French, German, Greek, Hungarian, Italian, Japanese, Japanese-en \n+# (Japanese with english messages), Korean, Norwegian, Polish, Portuguese, \n # Romanian, Russian, Serbian, Slovak, Slovene, Spanish, Swedish and Ukrainian.\n \n-\n OUTPUT_LANGUAGE        = English\n \n # If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in \n@@ -68,8 +67,8 @@ EXTRACT_PRIVATE        = YES\n \n EXTRACT_STATIC         = YES\n \n-# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)\n-# defined locally in source files will be included in the documentation.\n+# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) \n+# defined locally in source files will be included in the documentation. \n # If set to NO only classes defined in header files are included.\n \n EXTRACT_LOCAL_CLASSES  = NO\n@@ -89,13 +88,20 @@ HIDE_UNDOC_MEMBERS     = YES\n \n HIDE_UNDOC_CLASSES     = YES\n \n-# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all\n-# friend (class|struct|union) declarations.\n-# If set to NO (the default) these declarations will be included in the\n+# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all \n+# friend (class|struct|union) declarations. \n+# If set to NO (the default) these declarations will be included in the \n # documentation.\n \n HIDE_FRIEND_COMPOUNDS  = NO\n \n+# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any \n+# documentation blocks found inside the body of a function. \n+# If set to NO (the default) these blocks will be appended to the \n+# function's detailed documentation block.\n+\n+HIDE_IN_BODY_DOCS      = NO\n+\n # If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will \n # include brief member descriptions after the members that are listed in \n # the file and class documentation (similar to JavaDoc). \n@@ -104,7 +110,7 @@ HIDE_FRIEND_COMPOUNDS  = NO\n BRIEF_MEMBER_DESC      = YES\n \n # If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend \n-# the brief description of a member or function before the detailed description. \n+# the brief description of a member or function before the detailed description.\n # Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the \n # brief descriptions will be completely suppressed.\n \n@@ -116,9 +122,9 @@ REPEAT_BRIEF           = YES\n \n ALWAYS_DETAILED_SEC    = YES\n \n-# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all inherited\n-# members of a class in the documentation of that class as if those members were\n-# ordinary class members. Constructors, destructors and assignment operators of\n+# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all inherited \n+# members of a class in the documentation of that class as if those members were \n+# ordinary class members. Constructors, destructors and assignment operators of \n # the base classes will not be shown.\n \n INLINE_INHERITED_MEMB  = NO\n@@ -144,12 +150,6 @@ STRIP_FROM_PATH        =\n \n INTERNAL_DOCS          = NO\n \n-# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n-# doxygen to hide any special comment blocks from generated source code \n-# fragments. Normal C and C++ comments will always remain visible.\n-\n-STRIP_CODE_COMMENTS    = YES\n-\n # If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate \n # file names in lower case letters. If set to YES upper case letters are also \n # allowed. This is useful if you have classes or files whose names only differ \n@@ -190,17 +190,17 @@ SHOW_INCLUDE_FILES     = YES\n \n JAVADOC_AUTOBRIEF      = NO\n \n-# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen\n-# treat a multi-line C++ special comment block (i.e. a block of //! or ///\n-# comments) as a brief description. This used to be the default behaviour.\n-# The new default is to treat a multi-line C++ comment block as a detailed\n+# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen \n+# treat a multi-line C++ special comment block (i.e. a block of //! or /// \n+# comments) as a brief description. This used to be the default behaviour. \n+# The new default is to treat a multi-line C++ comment block as a detailed \n # description. Set this tag to YES if you prefer the old behaviour instead.\n \n MULTILINE_CPP_IS_BRIEF = YES\n \n-# If the DETAILS_AT_TOP tag is set to YES then Doxygen\n+# If the DETAILS_AT_TOP tag is set to YES then Doxygen \n # will output the detailed description near the top, like JavaDoc.\n-# If set to NO, the detailed description appears after the member\n+# If set to NO, the detailed description appears after the member \n # documentation.\n \n DETAILS_AT_TOP         = NO\n@@ -253,8 +253,8 @@ GENERATE_TESTLIST      = NO\n \n GENERATE_BUGLIST       = YES\n \n-# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or\n-# disable (NO) the deprecated list. This list is created by putting\n+# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or \n+# disable (NO) the deprecated list. This list is created by putting \n # \\deprecated commands in the documentation.\n \n GENERATE_DEPRECATEDLIST= YES\n@@ -267,7 +267,7 @@ GENERATE_DEPRECATEDLIST= YES\n # You can put \\n's in the value part of an alias to insert newlines.\n \n ALIASES                = \"doctodo=@todo\\nDoc me!  See docs/doxygen/TODO and http://gcc.gnu.org/ml/libstdc++/2002-02/msg00003.html for more.\" \\\n-\"isiosfwd=One of the @link s27_2_iosfwd I/O forward declarations @endlink\"\n+                         \"isiosfwd=One of the @link s27_2_iosfwd I/O forward declarations @endlink\"\n \n # The ENABLED_SECTIONS tag can be used to enable conditional \n # documentation sections, marked by \\if sectionname ... \\endif.\n@@ -291,9 +291,9 @@ MAX_INITIALIZER_LINES  = 0\n \n OPTIMIZE_OUTPUT_FOR_C  = NO\n \n-# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java sources\n-# only. Doxygen will then generate output that is more tailored for Java.\n-# For instance namespaces will be presented as packages, qualified scopes\n+# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java sources \n+# only. Doxygen will then generate output that is more tailored for Java. \n+# For instance namespaces will be presented as packages, qualified scopes \n # will look different, etc.\n \n OPTIMIZE_OUTPUT_JAVA   = NO\n@@ -325,6 +325,13 @@ WARNINGS               = NO\n \n WARN_IF_UNDOCUMENTED   = NO\n \n+# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for \n+# potential errors in the documentation, such as not documenting some \n+# parameters in a documented function, or documenting parameters that \n+# don't exist or using markup commands wrongly.\n+\n+WARN_IF_DOC_ERROR      = NO\n+\n # The WARN_FORMAT tag determines the format of the warning messages that \n # doxygen can produce. The string should contain the $file, $line, and $text \n # tags, which will be replaced by the file and line number from which the \n@@ -375,9 +382,10 @@ RECURSIVE              = YES\n # excluded from the INPUT source files. This way you can easily exclude a \n # subdirectory from a directory tree whose root is specified with the INPUT tag.\n \n-EXCLUDE                = Makefile CVS\n+EXCLUDE                = Makefile \\\n+                         CVS\n \n-# The EXCLUDE_SYMLINKS tag can be used select whether or not files or directories\n+# The EXCLUDE_SYMLINKS tag can be used select whether or not files or directories \n # that are symbolic links (a Unix filesystem feature) are excluded from the input.\n \n EXCLUDE_SYMLINKS       = NO\n@@ -387,8 +395,8 @@ EXCLUDE_SYMLINKS       = NO\n # certain files from those directories.\n \n EXCLUDE_PATTERNS       = CVS \\\n-                         stamp-*  \\\n-\t\t\t Makefile\n+                         stamp-* \\\n+                         Makefile\n \n # The EXAMPLE_PATH tag can be used to specify one or more files or \n # directories that contain example code fragments that are included (see \n@@ -445,6 +453,12 @@ SOURCE_BROWSER         = YES\n \n INLINE_SOURCES         = NO\n \n+# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct \n+# doxygen to hide any special comment blocks from generated source code \n+# fragments. Normal C and C++ comments will always remain visible.\n+\n+STRIP_CODE_COMMENTS    = YES\n+\n # If the REFERENCED_BY_RELATION tag is set to YES (the default) \n # then for each documented function all documented \n # functions referencing it will be listed.\n@@ -533,19 +547,19 @@ HTML_ALIGN_MEMBERS     = YES\n \n GENERATE_HTMLHELP      = NO\n \n-# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can\n-# be used to specify the file name of the resulting .chm file. You\n-# can add a path in front of the file if the result should not be\n+# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can \n+# be used to specify the file name of the resulting .chm file. You \n+# can add a path in front of the file if the result should not be \n # written to the html output dir.\n \n-CHM_FILE               =\n+CHM_FILE               = \n \n-# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can\n-# be used to specify the location (absolute path including file name) of\n-# the HTML help compiler (hhc.exe). If non empty doxygen will try to run\n+# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can \n+# be used to specify the location (absolute path including file name) of \n+# the HTML help compiler (hhc.exe). If non empty doxygen will try to run \n # the html help compiler on the generated index.hhp.\n \n-HHC_LOCATION           =\n+HHC_LOCATION           = \n \n # If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag \n # controls if a separate .chi index file is generated (YES) or that \n@@ -606,13 +620,13 @@ GENERATE_LATEX         = NO\n \n LATEX_OUTPUT           = latex\n \n-# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to\n-# be invoked. If left blank `latex' will be used as the default command name.\n+# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be \n+# invoked. If left blank `latex' will be used as the default command name.\n \n LATEX_CMD_NAME         = latex\n \n-# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to\n-# generate index for LaTeX. If left blank `makeindex' will be used as the\n+# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to \n+# generate index for LaTeX. If left blank `makeindex' will be used as the \n # default command name.\n \n MAKEINDEX_CMD_NAME     = makeindex\n@@ -723,10 +737,10 @@ MAN_OUTPUT             = man\n \n MAN_EXTENSION          = .3\n \n-# If the MAN_LINKS tag is set to YES and Doxygen generates man output,\n-# then it will generate one additional man file for each entity\n-# documented in the real man page(s). These additional files\n-# only source the real man page, but without them the man command\n+# If the MAN_LINKS tag is set to YES and Doxygen generates man output, \n+# then it will generate one additional man file for each entity \n+# documented in the real man page(s). These additional files \n+# only source the real man page, but without them the man command \n # would be unable to find the correct page. The default is NO.\n \n MAN_LINKS              = NO\n@@ -743,30 +757,63 @@ MAN_LINKS              = NO\n \n GENERATE_XML           = NO\n \n-# The XML_SCHEMA tag can be used to specify an XML schema,\n-# which can be used by a validating XML parser to check the\n+# The XML_SCHEMA tag can be used to specify an XML schema, \n+# which can be used by a validating XML parser to check the \n # syntax of the XML files.\n \n-XML_SCHEMA             =\n+XML_SCHEMA             = \n \n-# The XML_DTD tag can be used to specify an XML DTD,\n-# which can be used by a validating XML parser to check the\n+# The XML_DTD tag can be used to specify an XML DTD, \n+# which can be used by a validating XML parser to check the \n # syntax of the XML files.\n \n-XML_DTD                =\n+XML_DTD                = \n \n #---------------------------------------------------------------------------\n # configuration options for the AutoGen Definitions output\n #---------------------------------------------------------------------------\n \n-# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will\n-# generate an AutoGen Definitions (see autogen.sf.net) file\n-# that captures the structure of the code including all\n-# documentation. Note that this feature is still experimental\n+# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will \n+# generate an AutoGen Definitions (see autogen.sf.net) file \n+# that captures the structure of the code including all \n+# documentation. Note that this feature is still experimental \n # and incomplete at the moment.\n \n GENERATE_AUTOGEN_DEF   = NO\n \n+#---------------------------------------------------------------------------\n+# configuration options related to the Perl module output\n+#---------------------------------------------------------------------------\n+\n+# If the GENERATE_PERLMOD tag is set to YES Doxygen will \n+# generate a Perl module file that captures the structure of \n+# the code including all documentation. Note that this \n+# feature is still experimental and incomplete at the \n+# moment.\n+\n+GENERATE_PERLMOD       = NO\n+\n+# If the PERLMOD_LATEX tag is set to YES Doxygen will generate \n+# the necessary Makefile rules, Perl scripts and LaTeX code to be able \n+# to generate PDF and DVI output from the Perl module output.\n+\n+PERLMOD_LATEX          = NO\n+\n+# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be \n+# nicely formatted so it can be parsed by a human reader.  This is useful \n+# if you want to understand what is going on.  On the other hand, if this \n+# tag is set to NO the size of the Perl module output will be much smaller \n+# and Perl will parse it just the same.\n+\n+PERLMOD_PRETTY         = YES\n+\n+# The names of the make variables in the generated doxyrules.make file \n+# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX. \n+# This is useful so different doxyrules.make files included by the same \n+# Makefile don't overwrite each other's variables.\n+\n+PERLMOD_MAKEVAR_PREFIX = \n+\n #---------------------------------------------------------------------------\n # Configuration options related to the preprocessor   \n #---------------------------------------------------------------------------\n@@ -860,8 +907,8 @@ GENERATE_TAGFILE       =\n \n ALLEXTERNALS           = YES\n \n-# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed\n-# in the modules index. If set to NO, only the current project's groups will\n+# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed \n+# in the modules index. If set to NO, only the current project's groups will \n # be listed.\n \n EXTERNAL_GROUPS        = YES\n@@ -883,8 +930,8 @@ PERL_PATH              = /usr/bin/perl\n \n CLASS_DIAGRAMS         = YES\n \n-# If set to YES, the inheritance and collaboration graphs will hide\n-# inheritance and usage relations if the target is undocumented\n+# If set to YES, the inheritance and collaboration graphs will hide \n+# inheritance and usage relations if the target is undocumented \n # or is not a class.\n \n HIDE_UNDOC_RELATIONS   = YES\n@@ -934,7 +981,7 @@ INCLUDED_BY_GRAPH      = YES\n \n GRAPHICAL_HIERARCHY    = YES\n \n-# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images\n+# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images \n # generated by dot. Possible values are png, jpg, or gif\n # If left blank png will be used.\n \n@@ -1022,6 +1069,3 @@ BIN_ABSPATH            = /usr/local/bin/\n # the documentation for these projects as well.\n \n EXT_DOC_PATHS          = \n-\n-### End of file.\n-"}, {"sha": "7acf6787254f63f5665ededf4a89be952cb829c8", "filename": "libstdc++-v3/include/bits/basic_ios.h", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_ios.h?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946", "patch": "@@ -302,7 +302,14 @@ namespace std\n        *  in derived classes by overrides of the zero-argument @c rdbuf(),\n        *  which is non-virtual for hysterical raisins.  As a result, you\n        *  must use explicit qualifications to access this function via any\n-       *  derived class.\n+       *  derived class.  For example:\n+       *\n+       *  @code\n+       *  std::fstream     foo;         // or some other derived type\n+       *  std::streambuf*  p = .....;\n+       *\n+       *  foo.ios::rdbuf(p);            // ios == basic_ios<char>\n+       *  @endcode\n       */\n       basic_streambuf<_CharT, _Traits>* \n       rdbuf(basic_streambuf<_CharT, _Traits>* __sb);"}, {"sha": "347027f2aeb09fbb5d74d5ef1889da98217a812d", "filename": "libstdc++-v3/include/bits/deque.tcc", "status": "modified", "additions": 0, "deletions": 85, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fdeque.tcc?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946", "patch": "@@ -328,29 +328,6 @@ namespace std\n         }\n     }\n     \n-  #ifdef _GLIBCPP_DEPRECATED\n-  // Called only if _M_finish._M_cur == _M_finish._M_last - 1.\n-  template <typename _Tp, typename _Alloc>\n-    void\n-    deque<_Tp,_Alloc>::\n-    _M_push_back_aux()\n-    {\n-      _M_reserve_map_at_back();\n-      *(_M_finish._M_node + 1) = _M_allocate_node();\n-      try\n-        {\n-          _Construct(_M_finish._M_cur);\n-          _M_finish._M_set_node(_M_finish._M_node + 1);\n-          _M_finish._M_cur = _M_finish._M_first;\n-        }\n-      catch(...)\n-        {\n-          _M_deallocate_node(*(_M_finish._M_node + 1));\n-          __throw_exception_again;\n-        }\n-    }\n-  #endif\n-    \n   // Called only if _M_start._M_cur == _M_start._M_first.\n   template <typename _Tp, typename _Alloc>\n     void\n@@ -374,30 +351,6 @@ namespace std\n         }\n     } \n     \n-  #ifdef _GLIBCPP_DEPRECATED\n-  // Called only if _M_start._M_cur == _M_start._M_first.\n-  template <typename _Tp, typename _Alloc>\n-    void\n-    deque<_Tp,_Alloc>::\n-    _M_push_front_aux()\n-    {\n-      _M_reserve_map_at_front();\n-      *(_M_start._M_node - 1) = _M_allocate_node();\n-      try\n-        {\n-          _M_start._M_set_node(_M_start._M_node - 1);\n-          _M_start._M_cur = _M_start._M_last - 1;\n-          _Construct(_M_start._M_cur);\n-        }\n-      catch(...)\n-        {\n-          ++_M_start;\n-          _M_deallocate_node(*(_M_start._M_node - 1));\n-          __throw_exception_again;\n-        }\n-    } \n-  #endif\n-    \n   // Called only if _M_finish._M_cur == _M_finish._M_first.\n   template <typename _Tp, typename _Alloc>\n     void deque<_Tp,_Alloc>::\n@@ -508,44 +461,6 @@ namespace std\n       return __pos;\n     }\n     \n-  #ifdef _GLIBCPP_DEPRECATED\n-  // Nothing seems to actually use this.  According to the pattern followed by\n-  // the rest of the SGI code, it would be called by the deprecated insert(pos)\n-  // function, but that has been replaced.  We'll take our time removing this\n-  // anyhow; mark for 3.4.  -pme\n-  template <typename _Tp, typename _Alloc>\n-    typename deque<_Tp,_Alloc>::iterator \n-    deque<_Tp,_Alloc>::\n-    _M_insert_aux(iterator __pos)\n-    {\n-      difference_type __index = __pos - _M_start;\n-      if (static_cast<size_type>(__index) < size() / 2)\n-      {\n-        push_front(front());\n-        iterator __front1 = _M_start;\n-        ++__front1;\n-        iterator __front2 = __front1;\n-        ++__front2;\n-        __pos = _M_start + __index;\n-        iterator __pos1 = __pos;\n-        ++__pos1;\n-        copy(__front2, __pos1, __front1);\n-      }\n-      else\n-      {\n-        push_back(back());\n-        iterator __back1 = _M_finish;\n-        --__back1;\n-        iterator __back2 = __back1;\n-        --__back2;\n-        __pos = _M_start + __index;\n-        copy_backward(__pos, __back2, __back1);\n-      }\n-      *__pos = value_type();\n-      return __pos;\n-    }\n-  #endif\n-    \n   template <typename _Tp, typename _Alloc>\n     void\n     deque<_Tp,_Alloc>::"}, {"sha": "d05ff6e6db5ecc87e3bff6bfe7803f4e38a6d8f6", "filename": "libstdc++-v3/include/bits/stl_alloc.h", "status": "modified", "additions": 0, "deletions": 80, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_alloc.h?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946", "patch": "@@ -74,10 +74,6 @@\n  *  into a \"standard\" one.\n  *  @endif\n  *\n- *  @note The @c reallocate member functions have been deprecated for 3.2\n- *        and will be removed in 3.4.  You must define @c _GLIBCPP_DEPRECATED\n- *        to make this visible in 3.2; see c++config.h.\n- *\n  *  The canonical description of these classes is in docs/html/ext/howto.html\n  *  or online at http://gcc.gnu.org/onlinedocs/libstdc++/ext/howto.html#3\n */\n@@ -129,9 +125,6 @@ namespace std\n     {\n     private:\n       static void* _S_oom_malloc(size_t);\n-#ifdef _GLIBCPP_DEPRECATED\n-      static void* _S_oom_realloc(void*, size_t);\n-#endif\n       static void (* __malloc_alloc_oom_handler)();\n \n     public:\n@@ -148,17 +141,6 @@ namespace std\n       deallocate(void* __p, size_t /* __n */)\n       { free(__p); }\n \n-#ifdef _GLIBCPP_DEPRECATED\n-      static void*\n-      reallocate(void* __p, size_t /* old_sz */, size_t __new_sz)\n-      {\n-        void* __result = realloc(__p, __new_sz);\n-        if (__builtin_expect(__result == 0, 0))\n-          __result = _S_oom_realloc(__p, __new_sz);\n-        return __result;\n-      }\n-#endif\n-\n       static void (* __set_malloc_handler(void (*__f)()))()\n       {\n         void (* __old)() = __malloc_alloc_oom_handler;\n@@ -191,28 +173,6 @@ namespace std\n         }\n     }\n \n-#ifdef _GLIBCPP_DEPRECATED\n-  template<int __inst>\n-    void*\n-    __malloc_alloc_template<__inst>::\n-    _S_oom_realloc(void* __p, size_t __n)\n-    {\n-      void (* __my_malloc_handler)();\n-      void* __result;\n-\n-      for (;;)\n-        {\n-          __my_malloc_handler = __malloc_alloc_oom_handler;\n-          if (__builtin_expect(__my_malloc_handler == 0, 0))\n-            __throw_bad_alloc();\n-          (*__my_malloc_handler)();\n-          __result = realloc(__p, __n);\n-          if (__result)\n-            return __result;\n-        }\n-    }\n-#endif\n-\n   // Should not be referenced within the library anymore.\n   typedef __new_alloc                 __mem_interface;\n \n@@ -292,20 +252,6 @@ namespace std\n         assert(*(size_t*)__real_p == __n);\n         _Alloc::deallocate(__real_p, __n + (int) _S_extra);\n       }\n-\n-#ifdef _GLIBCPP_DEPRECATED\n-      static void*\n-      reallocate(void* __p, size_t __old_sz, size_t __new_sz)\n-      {\n-        char* __real_p = (char*)__p - (int) _S_extra;\n-        assert(*(size_t*)__real_p == __old_sz);\n-        char* __result = (char*) _Alloc::reallocate(__real_p, \n-\t\t\t\t\t\t    __old_sz + (int) _S_extra,\n-\t\t\t\t\t\t    __new_sz + (int) _S_extra);\n-        *(size_t*)__result = __new_sz;\n-        return __result + (int) _S_extra;\n-      }\n-#endif\n     };\n \n \n@@ -455,11 +401,6 @@ namespace std\n \t    *__my_free_list = __q;\n \t  }\n       }\n-\n-#ifdef _GLIBCPP_DEPRECATED\n-      static void*\n-      reallocate(void* __p, size_t __old_sz, size_t __new_sz);\n-#endif\n     };\n \n   template<bool __threads, int __inst> _Atomic_word\n@@ -591,27 +532,6 @@ namespace std\n     }\n \n \n-#ifdef _GLIBCPP_DEPRECATED\n-  template<bool threads, int inst>\n-    void*\n-    __default_alloc_template<threads, inst>::\n-    reallocate(void* __p, size_t __old_sz, size_t __new_sz)\n-    {\n-      void* __result;\n-      size_t __copy_sz;\n-\n-      if (__old_sz > (size_t) _MAX_BYTES && __new_sz > (size_t) _MAX_BYTES)\n-        return(realloc(__p, __new_sz));\n-      if (_S_round_up(__old_sz) == _S_round_up(__new_sz))\n-        return(__p);\n-      __result = allocate(__new_sz);\n-      __copy_sz = __new_sz > __old_sz? __old_sz : __new_sz;\n-      memcpy(__result, __p, __copy_sz);\n-      deallocate(__p, __old_sz);\n-      return __result;\n-    }\n-#endif\n-\n   template<bool __threads, int __inst>\n     _STL_mutex_lock\n     __default_alloc_template<__threads,__inst>::_S_node_allocator_lock"}, {"sha": "65e76b39a339594a5c57f548c7e188ab4455896e", "filename": "libstdc++-v3/include/bits/stl_deque.h", "status": "modified", "additions": 0, "deletions": 78, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_deque.h?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946", "patch": "@@ -1025,31 +1025,6 @@ namespace std\n         _M_push_front_aux(__x);\n     }\n   \n-  #ifdef _GLIBCPP_DEPRECATED\n-    /**\n-     *  @brief  Add data to the front of the %deque.\n-     *\n-     *  This is a typical stack operation.  The function creates a\n-     *  default-constructed element at the front of the %deque.  Due to the\n-     *  nature of a %deque this operation can be done in constant time.  You\n-     *  should consider using push_front(value_type()) instead.\n-     *\n-     *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must\n-     *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see\n-     *        c++config.h.\n-    */\n-    void\n-    push_front()\n-    {\n-      if (_M_start._M_cur != _M_start._M_first) {\n-        _Construct(_M_start._M_cur - 1);\n-        --_M_start._M_cur;\n-      }\n-      else\n-        _M_push_front_aux();\n-    }\n-  #endif\n-  \n     /**\n      *  @brief  Add data to the end of the %deque.\n      *  @param  x  Data to be added.\n@@ -1069,31 +1044,6 @@ namespace std\n         _M_push_back_aux(__x);\n     }\n   \n-  #ifdef _GLIBCPP_DEPRECATED\n-    /**\n-     *  @brief  Add data to the end of the %deque.\n-     *\n-     *  This is a typical stack operation.  The function creates a\n-     *  default-constructed element at the end of the %deque.  Due to the nature\n-     *  of a %deque this operation can be done in constant time.  You should\n-     *  consider using push_back(value_type()) instead.\n-     *\n-     *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must\n-     *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see\n-     *        c++config.h.\n-    */\n-    void\n-    push_back()\n-    {\n-      if (_M_finish._M_cur != _M_finish._M_last - 1) {\n-        _Construct(_M_finish._M_cur);\n-        ++_M_finish._M_cur;\n-      }\n-      else\n-        _M_push_back_aux();\n-    }\n-  #endif\n-  \n     /**\n      *  @brief  Removes first element.\n      *\n@@ -1144,25 +1094,6 @@ namespace std\n     iterator\n     insert(iterator position, const value_type& __x);\n   \n-  #ifdef _GLIBCPP_DEPRECATED\n-    /**\n-     *  @brief  Inserts an element into the %deque.\n-     *  @param  position  An iterator into the %deque.\n-     *  @return  An iterator that points to the inserted element.\n-     *\n-     *  This function will insert a default-constructed element before the\n-     *  specified location.  You should consider using\n-     *  insert(position,value_type()) instead.\n-     *\n-     *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must\n-     *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see\n-     *        c++config.h.\n-    */\n-    iterator\n-    insert(iterator __position)\n-    { return insert(__position, value_type()); }\n-  #endif\n-  \n     /**\n      *  @brief  Inserts a number of copies of given data into the %deque.\n      *  @param  position  An iterator into the %deque.\n@@ -1392,10 +1323,6 @@ namespace std\n     */\n     void _M_push_back_aux(const value_type&);\n     void _M_push_front_aux(const value_type&);\n-  #ifdef _GLIBCPP_DEPRECATED\n-    void _M_push_back_aux();\n-    void _M_push_front_aux();\n-  #endif\n     void _M_pop_back_aux();\n     void _M_pop_front_aux();\n     //@}\n@@ -1459,11 +1386,6 @@ namespace std\n                     _ForwardIterator __first, _ForwardIterator __last,\n                     size_type __n);\n   \n-  #ifdef _GLIBCPP_DEPRECATED\n-    // unused, see comment in implementation\n-    iterator _M_insert_aux(iterator __pos);\n-  #endif\n-  \n     //@{\n     /**\n      *  @if maint"}, {"sha": "abd176745d9c5ce1f4936d3815f63f9553aaa3ad", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 0, "deletions": 54, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946", "patch": "@@ -702,23 +702,6 @@ namespace std\n     void\n     push_front(const value_type& __x) { this->insert(begin(), __x); }\n   \n-  #ifdef _GLIBCPP_DEPRECATED\n-    /**\n-     *  @brief  Add data to the front of the %list.\n-     *\n-     *  This is a typical stack operation.  The function creates a\n-     *  default-constructed element at the front of the %list.  Due to the\n-     *  nature of a %list this operation can be done in constant time.  You\n-     *  should consider using push_front(value_type()) instead.\n-     *\n-     *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must\n-     *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see\n-     *        c++config.h.\n-    */\n-    void\n-    push_front() { this->insert(begin(), value_type()); }\n-  #endif\n-  \n     /**\n      *  @brief  Removes first element.\n      *\n@@ -745,23 +728,6 @@ namespace std\n     void\n     push_back(const value_type& __x) { this->insert(end(), __x); }\n   \n-  #ifdef _GLIBCPP_DEPRECATED\n-    /**\n-     *  @brief  Add data to the end of the %list.\n-     *\n-     *  This is a typical stack operation.  The function creates a\n-     *  default-constructed element at the end of the %list.  Due to the nature\n-     *  of a %list this operation can be done in constant time.  You should\n-     *  consider using push_back(value_type()) instead.\n-     *\n-     *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must\n-     *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see\n-     *        c++config.h.\n-    */\n-    void\n-    push_back() { this->insert(end(), value_type()); }\n-  #endif\n-  \n     /**\n      *  @brief  Removes last element.\n      *\n@@ -794,26 +760,6 @@ namespace std\n     iterator\n     insert(iterator __position, const value_type& __x);\n   \n-  #ifdef _GLIBCPP_DEPRECATED\n-    /**\n-     *  @brief  Inserts an element into the %list.\n-     *  @param  position  An iterator into the %list.\n-     *  @return  An iterator that points to the inserted element.\n-     *\n-     *  This function will insert a default-constructed element before the\n-     *  specified location.  You should consider using\n-     *  insert(position,value_type()) instead.\n-     *  Due to the nature of a %list this operation can be done in constant\n-     *  time, and does not invalidate iterators and references.\n-     *\n-     *  @note This was deprecated in 3.2 and will be removed in 3.4.  You must\n-     *        define @c _GLIBCPP_DEPRECATED to make this visible in 3.2; see\n-     *        c++config.h.\n-    */\n-    iterator\n-    insert(iterator __position) { return insert(__position, value_type()); }\n-  #endif\n-  \n     /**\n      *  @brief  Inserts a number of copies of given data into the %list.\n      *  @param  position  An iterator into the %list."}, {"sha": "eb092e087da7902eafe5f9a0165ce3cd37d292d0", "filename": "libstdc++-v3/include/bits/stl_vector.h", "status": "modified", "additions": 1, "deletions": 27, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a9fdf305842249b5a83e6866dd2b106b7e18946/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_vector.h?ref=3a9fdf305842249b5a83e6866dd2b106b7e18946", "patch": "@@ -631,28 +631,7 @@ namespace std\n        */\n       iterator\n       insert(iterator __position, const value_type& __x);\n-  \n-#ifdef _GLIBCPP_DEPRECATED\n-      /**\n-       *  @brief  Inserts an element into the %vector.\n-       *  @param  position  An iterator into the %vector.\n-       *  @return  An iterator that points to the inserted element.\n-       *\n-       *  This function will insert a default-constructed element\n-       *  before the specified location.  You should consider using\n-       *  insert(position,value_type()) instead.  Note that this kind\n-       *  of operation could be expensive for a vector and if it is\n-       *  frequently used the user should consider using std::list.\n-       *\n-       *  @note This was deprecated in 3.2 and will be removed in 3.4.\n-       *  You must define @c _GLIBCPP_DEPRECATED to make this visible\n-       *  in 3.2; see c++config.h.\n-       */\n-      iterator\n-      insert(iterator __position)\n-      { return insert(__position, value_type()); }\n-#endif\n-      \n+\n       /**\n        *  @brief  Inserts a number of copies of given data into the %vector.\n        *  @param  position  An iterator into the %vector.\n@@ -913,11 +892,6 @@ namespace std\n       // Called by insert(p,x)\n       void\n       _M_insert_aux(iterator __position, const value_type& __x);\n-      \n-#ifdef _GLIBCPP_DEPRECATED\n-      // Unused now (same situation as in deque)\n-      void _M_insert_aux(iterator __position);\n-#endif\n     };\n   \n   "}]}