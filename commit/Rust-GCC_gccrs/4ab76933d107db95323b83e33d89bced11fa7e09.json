{"sha": "4ab76933d107db95323b83e33d89bced11fa7e09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFiNzY5MzNkMTA3ZGI5NTMyM2I4M2UzM2Q4OWJjZWQxMWZhN2UwOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2016-09-29T18:55:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2016-09-29T18:55:26Z"}, "message": "adx-check.h (main): Simplify feature bit tests.\n\n\t* gcc.target/i386/adx-check.h (main): Simplify feature bit tests.\n\t* gcc.target/i386/avx2-check.h (main): Ditto.\n\t* gcc.target/i386/avx512bw-check.h (main): Ditto.\n\t* gcc.target/i386/avx512cd-check.h (main): Ditto.\n\t* gcc.target/i386/avx512dq-check.h (main): Ditto.\n\t* gcc.target/i386/avx512er-check.h (main): Ditto.\n\t* gcc.target/i386/avx512f-check.h (main): Ditto.\n\t* gcc.target/i386/avx512ifma-check.h (main): Ditto.\n\t* gcc.target/i386/avx512vbmi-check.h (main): Ditto.\n\t* gcc.target/i386/avx512vl-check.h (main): Ditto.\n\nFrom-SVN: r240631", "tree": {"sha": "b3a138bfb6d86fc0795871bc99312eaa950790dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3a138bfb6d86fc0795871bc99312eaa950790dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ab76933d107db95323b83e33d89bced11fa7e09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab76933d107db95323b83e33d89bced11fa7e09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ab76933d107db95323b83e33d89bced11fa7e09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ab76933d107db95323b83e33d89bced11fa7e09/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2488ebe5ef1788616c2fbc61e05af09f0749ebbe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2488ebe5ef1788616c2fbc61e05af09f0749ebbe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2488ebe5ef1788616c2fbc61e05af09f0749ebbe"}], "stats": {"total": 53, "additions": 32, "deletions": 21}, "files": [{"sha": "753b45b2a0f2f8a6fb4df48ecbcc1d2c16daffbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -1,3 +1,16 @@\n+2016-09-29  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/i386/adx-check.h (main): Simplify feature bit tests.\n+\t* gcc.target/i386/avx2-check.h (main): Ditto.\n+\t* gcc.target/i386/avx512bw-check.h (main): Ditto.\n+\t* gcc.target/i386/avx512cd-check.h (main): Ditto.\n+\t* gcc.target/i386/avx512dq-check.h (main): Ditto.\n+\t* gcc.target/i386/avx512er-check.h (main): Ditto.\n+\t* gcc.target/i386/avx512f-check.h (main): Ditto.\n+\t* gcc.target/i386/avx512ifma-check.h (main): Ditto.\n+\t* gcc.target/i386/avx512vbmi-check.h (main): Ditto.\n+\t* gcc.target/i386/avx512vl-check.h (main): Ditto.\n+\n 2016-09-29  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/77756"}, {"sha": "5e7ad9652516fb39888a69bd9e57430c650c1846", "filename": "gcc/testsuite/gcc.target/i386/adx-check.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fadx-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -23,7 +23,7 @@ main ()\n \n   __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-  if ((ebx & bit_ADX) == bit_ADX)\n+  if (ebx & bit_ADX)\n     {\n       do_test ();\n #ifdef DEBUG"}, {"sha": "021e1e6b8e80baeb183fa5bc3169784430a69d12", "filename": "gcc/testsuite/gcc.target/i386/avx2-check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx2-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -19,14 +19,14 @@ main ()\n     return 0;\n \n   /* Run AVX2 test only if host has AVX2 support.  */\n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx_os_support ()) && ((ebx & bit_AVX2) == bit_AVX2))\n+      if ((ebx & bit_AVX2) && avx_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}, {"sha": "d5288aaabd4614e6faac26a19ed89bd145a5d32b", "filename": "gcc/testsuite/gcc.target/i386/avx512bw-check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512bw-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -19,14 +19,14 @@ main ()\n     return 0;\n \n   /* Run AVX512BW test only if host has AVX512BW support.  */\n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx512f_os_support ()) && ((ebx & bit_AVX512BW) == bit_AVX512BW))\n+      if ((ebx & bit_AVX512BW) && avx512f_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}, {"sha": "fd0b9eb05d6151e02ac42d46d1300c6c0196411d", "filename": "gcc/testsuite/gcc.target/i386/avx512cd-check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512cd-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -18,14 +18,14 @@ main ()\n   if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n     return 0;\n \n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx512f_os_support ()) && ((ebx & (bit_AVX512CD)) == (bit_AVX512CD)))\n+      if ((ebx & bit_AVX512CD) && avx512f_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}, {"sha": "7955f48e912f694d0f7c958b6acb6a2cb38843fe", "filename": "gcc/testsuite/gcc.target/i386/avx512dq-check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512dq-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -19,14 +19,14 @@ main ()\n     return 0;\n \n   /* Run AVX512DQ test only if host has AVX512DQ support.  */\n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx512f_os_support ()) && ((ebx & bit_AVX512DQ) == bit_AVX512DQ))\n+      if ((ebx & bit_AVX512DQ) && avx512f_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}, {"sha": "06fc18a098bee4431bcdd3860c42f08d77cdd3d3", "filename": "gcc/testsuite/gcc.target/i386/avx512er-check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512er-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -18,14 +18,14 @@ main ()\n   if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n     return 0;\n \n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx512f_os_support ()) && ((ebx & bit_AVX512ER) == bit_AVX512ER))\n+      if ((ebx & bit_AVX512ER) && avx512f_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}, {"sha": "811184b2fd7c989c3ba400067defdd9935de2d2b", "filename": "gcc/testsuite/gcc.target/i386/avx512f-check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512f-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -19,14 +19,14 @@ main ()\n     return 0;\n \n   /* Run AVX512F test only if host has AVX512F support.  */\n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx512f_os_support ()) && ((ebx & bit_AVX512F) == bit_AVX512F))\n+      if ((ebx & bit_AVX512F) && avx512f_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}, {"sha": "b90a4d55103b35505ae1780161fe736d7d765ec6", "filename": "gcc/testsuite/gcc.target/i386/avx512ifma-check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512ifma-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512ifma-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512ifma-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -18,14 +18,14 @@ main ()\n   if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n     return 0;\n \n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx512f_os_support ()) && ((ebx & bit_AVX512IFMA) == bit_AVX512IFMA))\n+      if ((ebx & bit_AVX512IFMA) && avx512f_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}, {"sha": "2c1f6259401e50da0292fa6761fc06bf2fddd7f7", "filename": "gcc/testsuite/gcc.target/i386/avx512vbmi-check.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vbmi-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vbmi-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vbmi-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -18,14 +18,14 @@ main ()\n   if (!__get_cpuid (1, &eax, &ebx, &ecx, &edx))\n     return 0;\n \n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx512f_os_support ()) && ((ecx & bit_AVX512VBMI) == bit_AVX512VBMI))\n+      if ((ecx & bit_AVX512VBMI) && avx512f_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}, {"sha": "29d984d03dd44e1f1c8c53308e87ee5ecebaa54e", "filename": "gcc/testsuite/gcc.target/i386/avx512vl-check.h", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ab76933d107db95323b83e33d89bced11fa7e09/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512vl-check.h?ref=4ab76933d107db95323b83e33d89bced11fa7e09", "patch": "@@ -19,16 +19,14 @@ main ()\n     return 0;\n \n   /* Run avx512vl test only if host has avx512vl support.  */\n-  if ((ecx & bit_OSXSAVE) == (bit_OSXSAVE))\n+  if (ecx & bit_OSXSAVE)\n     {\n       if (__get_cpuid_max (0, NULL) < 7)\n \treturn 0;\n \n       __cpuid_count (7, 0, eax, ebx, ecx, edx);\n \n-      if ((avx512f_os_support ())\n-\t  && ((ebx & bit_AVX512F) == bit_AVX512F)\n-\t  && ((ebx & bit_AVX512VL) == bit_AVX512VL))\n+      if ((ebx & bit_AVX512VL) && avx512f_os_support ())\n \t{\n \t  do_test ();\n #ifdef DEBUG"}]}