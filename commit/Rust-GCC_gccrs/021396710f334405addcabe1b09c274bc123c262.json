{"sha": "021396710f334405addcabe1b09c274bc123c262", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDIxMzk2NzEwZjMzNDQwNWFkZGNhYmUxYjA5YzI3NGJjMTIzYzI2Mg==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2011-12-04T16:33:15Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2011-12-04T16:33:15Z"}, "message": "re PR fortran/51383 ([OOP] arrays of extended types break when associated)\n\n2011-12-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51383\n        * resolve.c (find_array_spec): Use ref->u.c.component\n        directly without starting from ts.u.derived.\n\n2011-12-04  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/51383\n        * gfortran.dg/associate_10.f90: New.\n\nFrom-SVN: r181992", "tree": {"sha": "10f115327210b8d210c20b20be9f6ad8a71d2809", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10f115327210b8d210c20b20be9f6ad8a71d2809"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/021396710f334405addcabe1b09c274bc123c262", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021396710f334405addcabe1b09c274bc123c262", "html_url": "https://github.com/Rust-GCC/gccrs/commit/021396710f334405addcabe1b09c274bc123c262", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/021396710f334405addcabe1b09c274bc123c262/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f90394af7c8ed289fed2ad86d7925e0a16df2bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f90394af7c8ed289fed2ad86d7925e0a16df2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f90394af7c8ed289fed2ad86d7925e0a16df2bf"}], "stats": {"total": 57, "additions": 35, "deletions": 22}, "files": [{"sha": "4b553db90113500f35dbbc59b096bbd5ea597513", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021396710f334405addcabe1b09c274bc123c262/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021396710f334405addcabe1b09c274bc123c262/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=021396710f334405addcabe1b09c274bc123c262", "patch": "@@ -1,3 +1,9 @@\n+2011-12-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51383\n+\t* resolve.c (find_array_spec): Use ref->u.c.component\n+\tdirectly without starting from ts.u.derived.\n+\n 2011-12-03  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/48887"}, {"sha": "2e50f04e5cd08ac63ab7a9455f00e808eb9edb2d", "filename": "gcc/fortran/resolve.c", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021396710f334405addcabe1b09c274bc123c262/gcc%2Ffortran%2Fresolve.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021396710f334405addcabe1b09c274bc123c262/gcc%2Ffortran%2Fresolve.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fresolve.c?ref=021396710f334405addcabe1b09c274bc123c262", "patch": "@@ -4515,14 +4515,12 @@ find_array_spec (gfc_expr *e)\n {\n   gfc_array_spec *as;\n   gfc_component *c;\n-  gfc_symbol *derived;\n   gfc_ref *ref;\n \n   if (e->symtree->n.sym->ts.type == BT_CLASS)\n     as = CLASS_DATA (e->symtree->n.sym)->as;\n   else\n     as = e->symtree->n.sym->as;\n-  derived = NULL;\n \n   for (ref = e->ref; ref; ref = ref->next)\n     switch (ref->type)\n@@ -4536,26 +4534,7 @@ find_array_spec (gfc_expr *e)\n \tbreak;\n \n       case REF_COMPONENT:\n-\tif (derived == NULL)\n-\t  derived = e->symtree->n.sym->ts.u.derived;\n-\n-\tif (derived->attr.is_class)\n-\t  derived = derived->components->ts.u.derived;\n-\n-\tc = derived->components;\n-\n-\tfor (; c; c = c->next)\n-\t  if (c == ref->u.c.component)\n-\t    {\n-\t      /* Track the sequence of component references.  */\n-\t      if (c->ts.type == BT_DERIVED)\n-\t\tderived = c->ts.u.derived;\n-\t      break;\n-\t    }\n-\n-\tif (c == NULL)\n-\t  gfc_internal_error (\"find_array_spec(): Component not found\");\n-\n+\tc = ref->u.c.component;\n \tif (c->attr.dimension)\n \t  {\n \t    if (as != NULL)"}, {"sha": "5691a032b739f81aab836457b1ea6d84e8592a6e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021396710f334405addcabe1b09c274bc123c262/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021396710f334405addcabe1b09c274bc123c262/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=021396710f334405addcabe1b09c274bc123c262", "patch": "@@ -1,3 +1,8 @@\n+2011-12-04  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/51383\n+\t* gfortran.dg/associate_10.f90: New.\n+\n 2011-12-04  Ira Rosen  <ira.rosen@linaro.org>\n \n \tPR middle-end/51285"}, {"sha": "53b055447b1fe7168ca3c61b3f573da347ea7dd1", "filename": "gcc/testsuite/gfortran.dg/associate_10.f90", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/021396710f334405addcabe1b09c274bc123c262/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_10.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/021396710f334405addcabe1b09c274bc123c262/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_10.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociate_10.f90?ref=021396710f334405addcabe1b09c274bc123c262", "patch": "@@ -0,0 +1,23 @@\n+! { dg-do compile }\n+!\n+! PR fortran/51383\n+!\n+! Contributed by kaiserkarl31@yahoo.com\n+!\n+! Was failing before at the ref resolution of y1(1)%i.\n+!\n+program extend\n+   type :: a\n+      integer :: i\n+   end type a\n+   type, extends (a) :: b\n+      integer :: j\n+   end type b\n+   type (a) :: x(2)\n+   type (b) :: y(2)\n+   associate (x1 => x, y1 => y)\n+      x1(1)%i = 1\n+      ! Commenting out the following line will avoid the error\n+      y1(1)%i = 2\n+   end associate\n+end program extend"}]}