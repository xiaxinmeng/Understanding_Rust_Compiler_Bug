{"sha": "de5ecc6c4d863c40259f28438018a62f61cc3c35", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU1ZWNjNmM0ZDg2M2M0MDI1OWYyODQzODAxOGE2MmY2MWNjM2MzNQ==", "commit": {"author": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-06-02T02:44:48Z"}, "committer": {"name": "Dave Love", "email": "fx@gcc.gnu.org", "date": "1998-06-02T02:44:48Z"}, "message": "Fix per JCB.  Add commentary.\n\nFrom-SVN: r20178", "tree": {"sha": "e2162250bf48bcaa21f2cab9dd29dc7a110f09d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2162250bf48bcaa21f2cab9dd29dc7a110f09d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de5ecc6c4d863c40259f28438018a62f61cc3c35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5ecc6c4d863c40259f28438018a62f61cc3c35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de5ecc6c4d863c40259f28438018a62f61cc3c35", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de5ecc6c4d863c40259f28438018a62f61cc3c35/comments", "author": null, "committer": null, "parents": [{"sha": "7eca79861812f0bf395721a8742d56a8d38dfd01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7eca79861812f0bf395721a8742d56a8d38dfd01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7eca79861812f0bf395721a8742d56a8d38dfd01"}], "stats": {"total": 53, "additions": 37, "deletions": 16}, "files": [{"sha": "cf6cca69b73a25b0932644913c5da508320fbd66", "filename": "gcc/testsuite/g77.f-torture/compile/970125-0.f", "status": "modified", "additions": 37, "deletions": 16, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de5ecc6c4d863c40259f28438018a62f61cc3c35/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970125-0.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de5ecc6c4d863c40259f28438018a62f61cc3c35/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970125-0.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fcompile%2F970125-0.f?ref=de5ecc6c4d863c40259f28438018a62f61cc3c35", "patch": "@@ -1,16 +1,37 @@\n-\tinteger*4 i4\n-\tinteger*8 i8\n-\tinteger*8 max4\n-\tdata max4/2147483647/\n-\ti4 = %loc(i4)\n-\ti8 = %loc(i8)\n-\tprint *, max4\n-\tprint *, i4, %loc(i4)\n-\tprint *, i8, %loc(i8)\n-\tcall foo(i4, %loc(i4), i8, %loc(i8))\n-\tend\n-\tsubroutine foo(i4, i4a, i8, i8a)\n-\tinteger*8 i8\n-\tprint *, i4, i4a\n-\tprint *, i8, i8a\n-\tend\n+C JCB comments:\n+C g77 doesn't accept the added line \"integer(kind=7) ...\" --\n+C it crashes!\n+C \n+C It's questionable that g77 DTRT with regarding to passing\n+C %LOC() as an argument (thus by reference) and the new global\n+C analysis.  I need to look into that further; my feeling is that\n+C passing %LOC() as an argument should be treated like passing an\n+C INTEGER(KIND=7) by reference, and no more specially than that\n+C (and that INTEGER(KIND=7) should be permitted as equivalent to\n+C INTEGER(KIND=1), INTEGER(KIND=2), or whatever, depending on the\n+C system's pointer size).\n+C \n+C The back end *still* has a bug here, which should be fixed,\n+C because, currently, what g77 is passing to it is, IMO, correct.\n+\n+C No options:\n+C ../../egcs/gcc/f/info.c:259: failed assertion `ffeinfo_types_[basictype][kindtype] != NULL'\n+C -fno-globals -O:\n+C ../../egcs/gcc/expr.c:7291: Internal compiler error in function expand_expr\n+        integer*4 i4\n+        integer*8 i8\n+        integer*8 max4\n+        data max4/2147483647/\n+        i4 = %loc(i4)\n+        i8 = %loc(i8)\n+        print *, max4\n+        print *, i4, %loc(i4)\n+        print *, i8, %loc(i8)\n+        call foo(i4, %loc(i4), i8, %loc(i8))\n+        end\n+        subroutine foo(i4, i4a, i8, i8a)\n+        integer(kind=7) i4a, i8a\n+        integer*8 i8\n+        print *, i4, i4a\n+        print *, i8, i8a\n+        end"}]}