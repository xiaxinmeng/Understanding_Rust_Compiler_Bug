{"sha": "f21bdd05bdbac16e29fbc663731f6dfacb74dbd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjIxYmRkMDViZGJhYzE2ZTI5ZmJjNjYzNzMxZjZkZmFjYjc0ZGJkOA==", "commit": {"author": {"name": "Roman Zippel", "email": "zippel@linux-m68k.org", "date": "2001-08-27T22:43:37Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-27T22:43:37Z"}, "message": "expmed.c (store_bit_field): Ignore adjustment to bitpos and use bitnum to decide about register move.\n\n        * expmed.c (store_bit_field): Ignore adjustment to bitpos\n        and use bitnum to decide about register move.\n\nFrom-SVN: r45215", "tree": {"sha": "4e1f4a225bb3680339d4e0a49ce1ce791bf90dc2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e1f4a225bb3680339d4e0a49ce1ce791bf90dc2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f21bdd05bdbac16e29fbc663731f6dfacb74dbd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f21bdd05bdbac16e29fbc663731f6dfacb74dbd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f21bdd05bdbac16e29fbc663731f6dfacb74dbd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f21bdd05bdbac16e29fbc663731f6dfacb74dbd8/comments", "author": null, "committer": null, "parents": [{"sha": "a224278b115a7a5324313185817f27ca21ee11f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a224278b115a7a5324313185817f27ca21ee11f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a224278b115a7a5324313185817f27ca21ee11f4"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "3d64ee7950a33e44ba521fab4b0e7dfc9f3aaadb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f21bdd05bdbac16e29fbc663731f6dfacb74dbd8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f21bdd05bdbac16e29fbc663731f6dfacb74dbd8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f21bdd05bdbac16e29fbc663731f6dfacb74dbd8", "patch": "@@ -1,3 +1,8 @@\n+2001-08-27  Roman Zippel  <zippel@linux-m68k.org>\n+\n+\t* expmed.c (store_bit_field): Ignore adjustment to bitpos\n+\tand use bitnum to decide about register move.\n+\n 2001-08-27  Richard Henderson  <rth@redhat.com>\n \n \t* genattr.c (main): Emit state_t even when not doing scheduling."}, {"sha": "af5e56fdd7578abd510da286501bab42404de844", "filename": "gcc/expmed.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f21bdd05bdbac16e29fbc663731f6dfacb74dbd8/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f21bdd05bdbac16e29fbc663731f6dfacb74dbd8/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=f21bdd05bdbac16e29fbc663731f6dfacb74dbd8", "patch": "@@ -350,14 +350,14 @@ store_bit_field (str_rtx, bitsize, bitnum, fieldmode, value, align, total_size)\n      done with a simple store.  For targets that support fast unaligned\n      memory, any naturally sized, unit aligned field can be done directly.  */\n      \n-  if (bitsize == GET_MODE_BITSIZE (fieldmode)\n+  if (bitnum == 0\n+      && bitsize == GET_MODE_BITSIZE (fieldmode)\n       && (GET_CODE (op0) != MEM\n \t  ? (GET_MODE_SIZE (fieldmode) >= UNITS_PER_WORD\n \t     || GET_MODE_SIZE (GET_MODE (op0)) == GET_MODE_SIZE (fieldmode))\n \t  : (! SLOW_UNALIGNED_ACCESS (fieldmode, align)\n \t     || (offset * BITS_PER_UNIT % bitsize == 0\n-\t\t && align % GET_MODE_BITSIZE (fieldmode) == 0)))\n-      && (BYTES_BIG_ENDIAN ? bitpos + bitsize == unit : bitpos == 0))\n+\t\t && align % GET_MODE_BITSIZE (fieldmode) == 0))))\n     {\n       if (GET_MODE (op0) != fieldmode)\n \t{"}]}