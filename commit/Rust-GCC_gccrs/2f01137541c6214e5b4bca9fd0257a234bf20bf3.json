{"sha": "2f01137541c6214e5b4bca9fd0257a234bf20bf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmYwMTEzNzU0MWM2MjE0ZTViNGJjYTlmZDAyNTdhMjM0YmYyMGJmMw==", "commit": {"author": {"name": "Julian Brown", "email": "julian@codesourcery.com", "date": "2012-07-10T13:15:26Z"}, "committer": {"name": "Alexander Monakov", "email": "amonakov@gcc.gnu.org", "date": "2012-07-10T13:15:26Z"}, "message": "arm.md (movsi): Don't split symbol refs here.\n\n2012-07-10  Julian Brown  <julian@codesourcery.com>\n\n\t* config/arm/arm.md (movsi): Don't split symbol refs here.\n\t(define_split): New.\n\nFrom-SVN: r189411", "tree": {"sha": "ef13393dd500299e54e1f86a52a0cf3083845fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef13393dd500299e54e1f86a52a0cf3083845fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f01137541c6214e5b4bca9fd0257a234bf20bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f01137541c6214e5b4bca9fd0257a234bf20bf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f01137541c6214e5b4bca9fd0257a234bf20bf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f01137541c6214e5b4bca9fd0257a234bf20bf3/comments", "author": {"login": "jtb20", "id": 6094880, "node_id": "MDQ6VXNlcjYwOTQ4ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6094880?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jtb20", "html_url": "https://github.com/jtb20", "followers_url": "https://api.github.com/users/jtb20/followers", "following_url": "https://api.github.com/users/jtb20/following{/other_user}", "gists_url": "https://api.github.com/users/jtb20/gists{/gist_id}", "starred_url": "https://api.github.com/users/jtb20/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jtb20/subscriptions", "organizations_url": "https://api.github.com/users/jtb20/orgs", "repos_url": "https://api.github.com/users/jtb20/repos", "events_url": "https://api.github.com/users/jtb20/events{/privacy}", "received_events_url": "https://api.github.com/users/jtb20/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "175aed004525c485193d7fed4991a4588846fd79", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/175aed004525c485193d7fed4991a4588846fd79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/175aed004525c485193d7fed4991a4588846fd79"}], "stats": {"total": 31, "additions": 23, "deletions": 8}, "files": [{"sha": "ddf70e1be30329118f003d719ea6beb876d2cccc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f01137541c6214e5b4bca9fd0257a234bf20bf3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f01137541c6214e5b4bca9fd0257a234bf20bf3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2f01137541c6214e5b4bca9fd0257a234bf20bf3", "patch": "@@ -1,3 +1,8 @@\n+2012-07-10  Julian Brown  <julian@codesourcery.com>\n+\n+\t* config/arm/arm.md (movsi): Don't split symbol refs here.\n+\t(define_split): New.\n+\n 2012-07-10  Andreas Schwab  <schwab@linux-m68k.org>\n \n \tPR bootstrap/53913"}, {"sha": "888838261b65b5378899d9f954113cb62ca68766", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f01137541c6214e5b4bca9fd0257a234bf20bf3/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f01137541c6214e5b4bca9fd0257a234bf20bf3/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=2f01137541c6214e5b4bca9fd0257a234bf20bf3", "patch": "@@ -5475,14 +5475,6 @@\n \t\t\t       optimize && can_create_pseudo_p ());\n           DONE;\n         }\n-\n-      if (TARGET_USE_MOVT && !target_word_relocations\n-\t  && GET_CODE (operands[1]) == SYMBOL_REF\n-\t  && !flag_pic && !arm_tls_referenced_p (operands[1]))\n-\t{\n-\t  arm_emit_movpair (operands[0], operands[1]);\n-\t  DONE;\n-\t}\n     }\n   else /* TARGET_THUMB1...  */\n     {\n@@ -5591,6 +5583,24 @@\n   \"\n )\n \n+;; Split symbol_refs at the later stage (after cprop), instead of generating\n+;; movt/movw pair directly at expand.  Otherwise corresponding high_sum\n+;; and lo_sum would be merged back into memory load at cprop.  However,\n+;; if the default is to prefer movt/movw rather than a load from the constant\n+;; pool, the performance is better.\n+(define_split\n+  [(set (match_operand:SI 0 \"arm_general_register_operand\" \"\")\n+       (match_operand:SI 1 \"general_operand\" \"\"))]\n+  \"TARGET_32BIT\n+   && TARGET_USE_MOVT && GET_CODE (operands[1]) == SYMBOL_REF\n+   && !flag_pic && !target_word_relocations\n+   && !arm_tls_referenced_p (operands[1])\"\n+  [(clobber (const_int 0))]\n+{\n+  arm_emit_movpair (operands[0], operands[1]);\n+  DONE;\n+})\n+\n (define_insn \"*thumb1_movsi_insn\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=l,l,l,l,l,>,l, m,*l*h*k\")\n \t(match_operand:SI 1 \"general_operand\"      \"l, I,J,K,>,l,mi,l,*l*h*k\"))]"}]}