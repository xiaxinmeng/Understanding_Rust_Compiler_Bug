{"sha": "b66c86cbee130c0467deb21188fe0b441160555e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY2Yzg2Y2JlZTEzMGMwNDY3ZGViMjExODhmZTBiNDQxMTYwNTU1ZQ==", "commit": {"author": {"name": "Daniel Kraft", "email": "d@domob.eu", "date": "2008-06-28T15:11:25Z"}, "committer": {"name": "Daniel Kraft", "email": "domob@gcc.gnu.org", "date": "2008-06-28T15:11:25Z"}, "message": "gfc-internals.texi (section gfc_code): Extended documentation about gfc_code in the internal datastructures chapter...\n\n2008-06-28  Daniel Kraft  <d@domob.eu>\n\n\t* gfc-internals.texi (section gfc_code):  Extended documentation about\n\tgfc_code in the internal datastructures chapter including details about\n\thow IF, DO and SELECT blocks look like and an example for how the\n\tblock-chaining works.\n\nFrom-SVN: r137226", "tree": {"sha": "c45a3c92bcc87763f715263c95f18645e7197c44", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c45a3c92bcc87763f715263c95f18645e7197c44"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b66c86cbee130c0467deb21188fe0b441160555e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66c86cbee130c0467deb21188fe0b441160555e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b66c86cbee130c0467deb21188fe0b441160555e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b66c86cbee130c0467deb21188fe0b441160555e/comments", "author": {"login": "domob1812", "id": 4943644, "node_id": "MDQ6VXNlcjQ5NDM2NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domob1812", "html_url": "https://github.com/domob1812", "followers_url": "https://api.github.com/users/domob1812/followers", "following_url": "https://api.github.com/users/domob1812/following{/other_user}", "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}", "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions", "organizations_url": "https://api.github.com/users/domob1812/orgs", "repos_url": "https://api.github.com/users/domob1812/repos", "events_url": "https://api.github.com/users/domob1812/events{/privacy}", "received_events_url": "https://api.github.com/users/domob1812/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f82c70cc8fe80267cc08b1d456949ac7438f1693", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f82c70cc8fe80267cc08b1d456949ac7438f1693", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f82c70cc8fe80267cc08b1d456949ac7438f1693"}], "stats": {"total": 108, "additions": 100, "deletions": 8}, "files": [{"sha": "c9d2d9a49b04240aefee9e3aa35ab28aad43fe99", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b66c86cbee130c0467deb21188fe0b441160555e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b66c86cbee130c0467deb21188fe0b441160555e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=b66c86cbee130c0467deb21188fe0b441160555e", "patch": "@@ -1,3 +1,10 @@\n+2008-06-28  Daniel Kraft  <d@domob.eu>\n+\n+\t* gfc-internals.texi (section gfc_code):  Extended documentation about\n+\tgfc_code in the internal datastructures chapter including details about\n+\thow IF, DO and SELECT blocks look like and an example for how the\n+\tblock-chaining works.\n+\n 2008-06-25  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/36526"}, {"sha": "dfe5d161842cb01c1b3bbee35be3a133b7b98316", "filename": "gcc/fortran/gfc-internals.texi", "status": "modified", "additions": 93, "deletions": 8, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b66c86cbee130c0467deb21188fe0b441160555e/gcc%2Ffortran%2Fgfc-internals.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b66c86cbee130c0467deb21188fe0b441160555e/gcc%2Ffortran%2Fgfc-internals.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfc-internals.texi?ref=b66c86cbee130c0467deb21188fe0b441160555e", "patch": "@@ -284,9 +284,12 @@ should exhaust all possible valid combinations of content for these\n structures.\n \n @menu\n-* gfc_code:: Representation of Executable Statements\n+* gfc_code:: Representation of Executable Statements.\n @end menu\n \n+@c gfc_code\n+@c --------\n+\n @node gfc_code\n @section @code{gfc_code}\n @cindex statement chaining\n@@ -309,13 +312,95 @@ current statement.\n If the current statement is one of @code{IF}, @code{DO}, @code{SELECT}\n it starts a block, i.e.@: a nested level in the program.  In order to\n represent this, the @code{block} member is set to point to a\n-@code{gfc_code} structure whose @code{block} member points to the\n-block in question.  The @code{SELECT} and @code{IF} statements may\n-contain various blocks (the chain of @code{ELSE IF} and @code{ELSE}\n-blocks or the various @code{CASE}s, respectively).\n-\n-@c What would be nice here would be an example program together with\n-@c an image that says more than the mythical thousand words.\n+@code{gfc_code} structure whose @code{next} member starts the chain of\n+statements inside the block; this structure's @code{op} member should be set to\n+the same value as the parent structure's @code{op} member.  The @code{SELECT}\n+and @code{IF} statements may contain various blocks (the chain of @code{ELSE IF}\n+and @code{ELSE} blocks or the various @code{CASE}s, respectively).  These chains\n+are linked-lists formed by the @code{block} members.\n+\n+Consider the following example code:\n+\n+@example\n+IF (foo < 20) THEN\n+  PRINT *, \"Too small\"\n+  foo = 20\n+ELSEIF (foo > 50) THEN\n+  PRINT *, \"Too large\"\n+  foo = 50\n+ELSE\n+  PRINT *, \"Good\"\n+END IF\n+@end example\n+\n+This statement-block will be represented in the internal gfortran tree as\n+follows, were the horizontal link-chains are those induced by the @code{next}\n+members and vertical links down are those of @code{block}. @samp{==|} and\n+@samp{--|} mean @code{NULL} pointers to mark the end of a chain:\n+\n+@example\n+... ==> IF ==> ...\n+        |\n+        +--> IF foo < 20 ==> PRINT *, \"Too small\" ==> foo = 20 ==|\n+             |\n+             +--> IF foo > 50 ==> PRINT *, \"Too large\" ==> foo = 50 ==|\n+                  |\n+                  +--> ELSE ==> PRINT *, \"Good\" ==|\n+                       |\n+                       +--|\n+@end example\n+\n+\n+@subsection IF Blocks\n+\n+Conditionals are represented by @code{gfc_code} structures with their\n+@code{op} member set to @code{EXEC_IF}.  This structure's @code{block}\n+member must point to another @code{gfc_code} node that is the header of the\n+if-block.  This header's @code{op} member must be set to @code{EXEC_IF}, too,\n+its @code{expr} member holds the condition to check for, and its @code{next}\n+should point to the code-chain of the statements to execute if the condition is\n+true.\n+\n+If in addition an @code{ELSEIF} or @code{ELSE} block is present, the\n+@code{block} member of the if-block-header node points to yet another\n+@code{gfc_code} structure that is the header of the elseif- or else-block.  Its\n+structure is identical to that of the if-block-header, except that in case of an\n+@code{ELSE} block without a new condition the @code{expr} member should be\n+@code{NULL}.  This block can itself have its @code{block} member point to the\n+next @code{ELSEIF} or @code{ELSE} block if there's a chain of them.\n+\n+\n+@subsection Loops\n+\n+@code{DO} loops are stored in the tree as @code{gfc_code} nodes with their\n+@code{op} set to @code{EXEC_DO} for a @code{DO} loop with iterator variable and\n+to @code{EXEC_DO_WHILE} for infinite @code{DO}s and @code{DO WHILE} blocks.\n+Their @code{block} member should point to a @code{gfc_code} structure heading\n+the code-chain of the loop body; its @code{op} member should be set to\n+@code{EXEC_DO} or @code{EXEC_DO_WHILE}, too, respectively.\n+\n+For @code{DO WHILE} loops, the loop condition is stored on the top\n+@code{gfc_code} structure's @code{expr} member; @code{DO} forever loops are\n+simply @code{DO WHILE} loops with a constant @code{.TRUE.} loop condition in\n+the internal representation.\n+\n+Similarly, @code{DO} loops with an iterator have instead of the condition their\n+@code{ext.iterator} member set to the correct values for the loop iterator\n+variable and its range.\n+\n+\n+@subsection @code{SELECT} Statements\n+\n+A @code{SELECT} block is introduced by a @code{gfc_code} structure with an\n+@code{op} member of @code{EXEC_SELECT} and @code{expr} containing the expression\n+to evaluate and test.  Its @code{block} member starts a list of @code{gfc_code}\n+structures linked together by their @code{block} members that stores the various\n+@code{CASE} parts.\n+\n+Each @code{CASE} node has its @code{op} member set to @code{EXEC_SELECT}, too,\n+its @code{next} member points to the code-chain to be executed in the current\n+case-block, and @code{extx.case_list} contains the case-values this block\n+corresponds to.  The @code{block} member links to the next case in the list.\n \n \n @c ---------------------------------------------------------------------"}]}