{"sha": "d14ff9bda2acd72c290a503e987fbae5a0f586fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDE0ZmY5YmRhMmFjZDcyYzI5MGE1MDNlOTg3ZmJhZTVhMGY1ODZmYg==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "1999-04-10T03:09:40Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-04-10T03:09:40Z"}, "message": "pdp11.h (TARGET_SWITCHES): Add option to vary assembler syntax.\n\n1999-04-09  Joseph S. Myers  <jsm28@cam.ac.uk>\n\t* pdp11.h (TARGET_SWITCHES): Add option to vary assembler syntax.\n\t(TARGET_DEFAULT): Possibly use UNIX syntax.\n\t(TARGET_UNIX_ASM, TARGET_UNIX_ASM_DEFAULT): New macros.\n\t(REGISTER_NAMES): Use \"r5\" instead of \"fp\".\n\t(ASM_OUTPUT_ALIGN): Use \".even\" directive, and abort for any\n\tgreater alignment.\n\t* 2bsd.h (TARGET_UNIX_ASM_DEFAULT): Default to UNIX assembler\n\tsyntax for 2BSD.\n\t* pdp11.c (output_ascii): Use working syntax for \".byte\".\n\t(print_operand_address): Use \"*\" instead of \"@\" when using UNIX\n\tassembler syntax.\n\nFrom-SVN: r26325", "tree": {"sha": "c35692217de9538f6569f1350ab385fbbd99afdf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c35692217de9538f6569f1350ab385fbbd99afdf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d14ff9bda2acd72c290a503e987fbae5a0f586fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14ff9bda2acd72c290a503e987fbae5a0f586fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d14ff9bda2acd72c290a503e987fbae5a0f586fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d14ff9bda2acd72c290a503e987fbae5a0f586fb/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f1b9b1b90632ed16bcc15a27547482be6020dfb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f1b9b1b90632ed16bcc15a27547482be6020dfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f1b9b1b90632ed16bcc15a27547482be6020dfb"}], "stats": {"total": 73, "additions": 50, "deletions": 23}, "files": [{"sha": "aa9d5c07e8ea30c3b06af994cf92ddca4b7ab4d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14ff9bda2acd72c290a503e987fbae5a0f586fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14ff9bda2acd72c290a503e987fbae5a0f586fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d14ff9bda2acd72c290a503e987fbae5a0f586fb", "patch": "@@ -1,3 +1,17 @@\n+1999-04-10  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* pdp11.h (TARGET_SWITCHES): Add option to vary assembler syntax.\n+\t(TARGET_DEFAULT): Possibly use UNIX syntax.\n+\t(TARGET_UNIX_ASM, TARGET_UNIX_ASM_DEFAULT): New macros.\n+\t(REGISTER_NAMES): Use \"r5\" instead of \"fp\".\n+\t(ASM_OUTPUT_ALIGN): Use \".even\" directive, and abort for any\n+\tgreater alignment.\n+\t* 2bsd.h (TARGET_UNIX_ASM_DEFAULT): Default to UNIX assembler\n+\tsyntax for 2BSD.\n+\t* pdp11.c (output_ascii): Use working syntax for \".byte\".\n+\t(print_operand_address): Use \"*\" instead of \"@\" when using UNIX\n+\tassembler syntax.\n+\n Sat Apr 10 03:50:12 1999  Jeffrey A Law  (law@cygnus.com)\n \n \t* rtl.h (local_alloc): Returns an integer now."}, {"sha": "4f9dafcc37af9daa4a665066be529a79435fbab1", "filename": "gcc/config/pdp11/2bsd.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14ff9bda2acd72c290a503e987fbae5a0f586fb/gcc%2Fconfig%2Fpdp11%2F2bsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14ff9bda2acd72c290a503e987fbae5a0f586fb/gcc%2Fconfig%2Fpdp11%2F2bsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2F2bsd.h?ref=d14ff9bda2acd72c290a503e987fbae5a0f586fb", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for GNU compiler, for a PDP with 2BSD\n-   Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1995, 1996, 1999 Free Software Foundation, Inc.\n    Contributed by Michael K. Gschwind (mike@vlsivie.tuwien.ac.at).\n \n This file is part of GNU CC.\n@@ -85,3 +85,6 @@ do {\t\t\t\t\t\t\t\\\n ASM_OUTPUT_LABEL (STREAM, NAME);\t\t\t\\\n fprintf (STREAM, \"~~%s:\\n\", NAME); \t\t\t\\\n } while (0)\n+\n+#undef TARGET_UNIX_ASM_DEFAULT\n+#define TARGET_UNIX_ASM_DEFAULT 2048"}, {"sha": "d4e00f4503df4d81e87928847d0ef9060e17d0e0", "filename": "gcc/config/pdp11/pdp11.c", "status": "modified", "additions": 13, "deletions": 18, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14ff9bda2acd72c290a503e987fbae5a0f586fb/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14ff9bda2acd72c290a503e987fbae5a0f586fb/gcc%2Fconfig%2Fpdp11%2Fpdp11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.c?ref=d14ff9bda2acd72c290a503e987fbae5a0f586fb", "patch": "@@ -741,28 +741,20 @@ output_ascii (file, p, size)\n {\n   int i;\n \n-  fprintf (file, \"\\t.byte \\\"\");\n+  /* This used to output .byte \"string\", which doesn't work with the UNIX\n+     assembler and I think not with DEC ones either.  */\n+  fprintf (file, \"\\t.byte \");\n \n   for (i = 0; i < size; i++)\n     {\n       register int c = p[i];\n-      if (c == '\\\"' || c == '\\\\')\n-\tputc ('\\\\', file);\n-      if (c >= ' ' && c < 0177)\n-\tputc (c, file);\n-      else\n-\t{\n-\t  fprintf (file, \"\\\\%03o\", c);\n-\t  /* After an octal-escape, if a digit follows,\n-\t     terminate one string constant and start another.\n-\t     The Vax assembler fails to stop reading the escape\n-\t     after three digits, so this is the only way we\n-\t     can get it to parse the data properly.  */\n-\t  if (i < size - 1 && p[i + 1] >= '0' && p[i + 1] <= '9')\n-\t    fprintf (file, \"\\\"\\n\\tstring \\\"\");\n-\t}\n+      if (c < 0)\n+\tc += 256;\n+      fprintf (file, \"%o\", c);\n+      if (i < size - 1)\n+\tputc (',', file);\n     }\n-  fprintf (file, \"\\\"\\n\");\n+  putc ('\\n', file);\n }\n \n \n@@ -781,7 +773,10 @@ print_operand_address (file, addr)\n   switch (GET_CODE (addr))\n     {\n     case MEM:\n-      fprintf (file, \"@\");\n+      if (TARGET_UNIX_ASM)\n+\tfprintf (file, \"*\");\n+      else\n+\tfprintf (file, \"@\");\n       addr = XEXP (addr, 0);\n       goto retry;\n "}, {"sha": "c61334a5ead1b27c57d3f7562b6c6d86fa03704d", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d14ff9bda2acd72c290a503e987fbae5a0f586fb/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d14ff9bda2acd72c290a503e987fbae5a0f586fb/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=d14ff9bda2acd72c290a503e987fbae5a0f586fb", "patch": "@@ -104,11 +104,14 @@ extern int target_flags;\n /* split instruction and data memory? */ \t\t\t\\\n     { \"split\", 1024, \"Target has split I&D\" },\t\t\t\\\n     { \"no-split\", -1024, \"Target does not have split I&D\" },\t\\\n+/* UNIX assembler syntax?  */\t\t\t\t\t\\\n+    { \"unix-asm\", 2048, \"Use UNIX assembler syntax\" },\t\t\\\n+    { \"dec-asm\", 2048, \"Use DEC assembler syntax\" },\t\t\\\n /* default */\t\t\t\\\n     { \"\", TARGET_DEFAULT, NULL}\t\\\n }\n \n-#define TARGET_DEFAULT (1 | 8 | 128)\n+#define TARGET_DEFAULT (1 | 8 | 128 | TARGET_UNIX_ASM_DEFAULT)\n \n #define TARGET_FPU \t\t(target_flags & 1)\n #define TARGET_SOFT_FLOAT \t(!TARGET_FPU)\n@@ -135,6 +138,10 @@ extern int target_flags;\n \n #define TARGET_SPLIT\t\t(target_flags & 1024)\n #define TARGET_NOSPLIT\t\t(! TARGET_SPLIT)\n+\n+#define TARGET_UNIX_ASM\t\t(target_flags & 2048)\n+#define TARGET_UNIX_ASM_DEFAULT\t0\n+\n \f\n \n /* TYPE SIZES */\n@@ -1070,7 +1077,7 @@ fprintf (FILE, \"$help$: . = .+8 ; space for tmp moves!\\n\")\t\\\n    This sequence is indexed by compiler's hard-register-number (see above).  */\n \n #define REGISTER_NAMES \\\n-{\"r0\", \"r1\", \"r2\", \"r3\", \"r4\", \"fp\", \"sp\", \"pc\",     \\\n+{\"r0\", \"r1\", \"r2\", \"r3\", \"r4\", \"r5\", \"sp\", \"pc\",     \\\n  \"ac0\", \"ac1\", \"ac2\", \"ac3\", \"ac4\", \"ac5\" }\n \n /* How to renumber registers for dbx and gdb.  */\n@@ -1169,8 +1176,16 @@ fprintf (FILE, \"$help$: . = .+8 ; space for tmp moves!\\n\")\t\\\n */\n \n #define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n-  if ((LOG) != 0)\t\t\t\\\n-    fprintf (FILE, \"\\t.align %d\\n\", 1<<(LOG))\n+  switch (LOG)\t\t\t\t\\\n+    {\t\t\t\t\t\\\n+      case 0:\t\t\t\t\\\n+\tbreak;\t\t\t\t\\\n+      case 1:\t\t\t\t\\\n+\tfprintf (FILE, \"\\t.even\\n\");\t\\\n+\tbreak;\t\t\t\t\\\n+      default:\t\t\t\t\\\n+\tabort ();\t\t\t\\\n+    }\n \n #define ASM_OUTPUT_SKIP(FILE,SIZE)  \\\n   fprintf (FILE, \"\\t.=.+ %d\\n\", (SIZE))"}]}