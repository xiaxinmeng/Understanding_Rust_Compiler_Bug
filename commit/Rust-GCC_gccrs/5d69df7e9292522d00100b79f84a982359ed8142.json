{"sha": "5d69df7e9292522d00100b79f84a982359ed8142", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQ2OWRmN2U5MjkyNTIyZDAwMTAwYjc5Zjg0YTk4MjM1OWVkODE0Mg==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2019-08-30T17:42:57Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2019-08-30T17:42:57Z"}, "message": "PR middle-end/91584 - Bogus warning from -Warray-bounds during string assignment\n\ngcc/ChangeLog:\n\n\tPR middle-end/91584\n\t* tree-vrp.c (vrp_prop::check_mem_ref): Normalize type domain bounds\n\tbefore using them to validate MEM_REF offset.\n\ngcc/testsuite/ChangeLog:\n\t* gfortran.dg/char_array_constructor_4.f90: New test.\n\nFrom-SVN: r275210", "tree": {"sha": "a657da3d6c4925872955670e1b22d00b7f31c902", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a657da3d6c4925872955670e1b22d00b7f31c902"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d69df7e9292522d00100b79f84a982359ed8142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d69df7e9292522d00100b79f84a982359ed8142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d69df7e9292522d00100b79f84a982359ed8142", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d69df7e9292522d00100b79f84a982359ed8142/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7259a9d577b05735ccbb8bf808d14a702bf6d8c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7259a9d577b05735ccbb8bf808d14a702bf6d8c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7259a9d577b05735ccbb8bf808d14a702bf6d8c2"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "45dd3a28012b27b86311ce0459ff6dde59e4eacf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69df7e9292522d00100b79f84a982359ed8142/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69df7e9292522d00100b79f84a982359ed8142/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5d69df7e9292522d00100b79f84a982359ed8142", "patch": "@@ -1,3 +1,9 @@\n+2019-08-30  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/91584\n+\t* tree-vrp.c (vrp_prop::check_mem_ref): Normalize type domain bounds\n+\tbefore using them to validate MEM_REF offset.\n+\n 2019-08-30  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/invoke.texi (-Wvolatile): Use @code for volatile."}, {"sha": "420ddd49b1f1153229e5fc34a0b6a92bbba70146", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69df7e9292522d00100b79f84a982359ed8142/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69df7e9292522d00100b79f84a982359ed8142/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5d69df7e9292522d00100b79f84a982359ed8142", "patch": "@@ -1,3 +1,8 @@\n+2019-08-30  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR middle-end/91584\n+\t* gfortran.dg/char_array_constructor_4.f90: New test.\n+\n 2019-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/pack24.adb: New test."}, {"sha": "e7c68f970e3843cdd1b6a45f0bc9f50dcbe292d2", "filename": "gcc/testsuite/gfortran.dg/char_array_constructor_4.f90", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69df7e9292522d00100b79f84a982359ed8142/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_array_constructor_4.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69df7e9292522d00100b79f84a982359ed8142/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_array_constructor_4.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fchar_array_constructor_4.f90?ref=5d69df7e9292522d00100b79f84a982359ed8142", "patch": "@@ -0,0 +1,13 @@\n+! PR 30319 - Bogus warning from -Warray-bounds during string assignment\n+! { dg-do compile }\n+! { dg-options \"-O2 -Warray-bounds\" }\n+\n+program test_bounds\n+\n+  character(256) :: foo\n+\n+  foo = '1234'                 ! { dg-bogus \"\\\\\\[-Warray-bounds\" }\n+\n+  print *, foo\n+\n+end program test_bounds"}, {"sha": "bc0648080db62189d42ee25d56a5cfd9cf80a25a", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 7, "deletions": 16, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d69df7e9292522d00100b79f84a982359ed8142/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d69df7e9292522d00100b79f84a982359ed8142/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=5d69df7e9292522d00100b79f84a982359ed8142", "patch": "@@ -4703,31 +4703,23 @@ vrp_prop::check_mem_ref (location_t location, tree ref,\n       || RECORD_OR_UNION_TYPE_P (reftype))\n     return false;\n \n+  arrbounds[0] = 0;\n+\n   offset_int eltsize;\n   if (TREE_CODE (reftype) == ARRAY_TYPE)\n     {\n       eltsize = wi::to_offset (TYPE_SIZE_UNIT (TREE_TYPE (reftype)));\n-\n       if (tree dom = TYPE_DOMAIN (reftype))\n \t{\n \t  tree bnds[] = { TYPE_MIN_VALUE (dom), TYPE_MAX_VALUE (dom) };\n-\t  if (array_at_struct_end_p (arg)\n-\t      || !bnds[0] || !bnds[1])\n-\t    {\n-\t      arrbounds[0] = 0;\n-\t      arrbounds[1] = wi::lrshift (maxobjsize, wi::floor_log2 (eltsize));\n-\t    }\n+\t  if (array_at_struct_end_p (arg) || !bnds[0] || !bnds[1])\n+\t    arrbounds[1] = wi::lrshift (maxobjsize, wi::floor_log2 (eltsize));\n \t  else\n-\t    {\n-\t      arrbounds[0] = wi::to_offset (bnds[0]) * eltsize;\n-\t      arrbounds[1] = (wi::to_offset (bnds[1]) + 1) * eltsize;\n-\t    }\n+\t    arrbounds[1] = (wi::to_offset (bnds[1]) - wi::to_offset (bnds[0])\n+\t\t\t    + 1) * eltsize;\n \t}\n       else\n-\t{\n-\t  arrbounds[0] = 0;\n-\t  arrbounds[1] = wi::lrshift (maxobjsize, wi::floor_log2 (eltsize));\n-\t}\n+\tarrbounds[1] = wi::lrshift (maxobjsize, wi::floor_log2 (eltsize));\n \n       if (TREE_CODE (ref) == MEM_REF)\n \t{\n@@ -4742,7 +4734,6 @@ vrp_prop::check_mem_ref (location_t location, tree ref,\n   else\n     {\n       eltsize = 1;\n-      arrbounds[0] = 0;\n       arrbounds[1] = wi::to_offset (TYPE_SIZE_UNIT (reftype));\n     }\n "}]}