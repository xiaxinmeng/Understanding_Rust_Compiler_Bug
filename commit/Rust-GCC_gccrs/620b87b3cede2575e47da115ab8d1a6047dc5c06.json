{"sha": "620b87b3cede2575e47da115ab8d1a6047dc5c06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIwYjg3YjNjZWRlMjU3NWU0N2RhMTE1YWI4ZDFhNjA0N2RjNWMwNg==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2006-03-16T23:58:00Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2006-03-16T23:58:00Z"}, "message": "config.gcc (tm_defines): Always add to previous value rather than replacing it.\n\n\t* config.gcc (tm_defines): Always add to previous value rather\n\tthan replacing it.\n\nFrom-SVN: r112160", "tree": {"sha": "0fc98797270e7d99f162549da6c7f6bfa620378d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0fc98797270e7d99f162549da6c7f6bfa620378d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/620b87b3cede2575e47da115ab8d1a6047dc5c06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/620b87b3cede2575e47da115ab8d1a6047dc5c06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/620b87b3cede2575e47da115ab8d1a6047dc5c06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/620b87b3cede2575e47da115ab8d1a6047dc5c06/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea462dd06fa40bc09069b7d9f72951708a3700a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea462dd06fa40bc09069b7d9f72951708a3700a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea462dd06fa40bc09069b7d9f72951708a3700a2"}], "stats": {"total": 43, "additions": 24, "deletions": 19}, "files": [{"sha": "ad8021cc2d08f03abf01f0a0a97b068a84a277d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/620b87b3cede2575e47da115ab8d1a6047dc5c06/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/620b87b3cede2575e47da115ab8d1a6047dc5c06/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=620b87b3cede2575e47da115ab8d1a6047dc5c06", "patch": "@@ -1,3 +1,8 @@\n+2006-03-16  Joseph S. Myers  <joseph@codesourcery.com>\n+\n+\t* config.gcc (tm_defines): Always add to previous value rather\n+\tthan replacing it.\n+\n 2006-03-16  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/mips/predicates.md (splittable_const_int_operand): New,"}, {"sha": "0af55a57ad0e148686b28e2157e59be4740908d8", "filename": "gcc/config.gcc", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/620b87b3cede2575e47da115ab8d1a6047dc5c06/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/620b87b3cede2575e47da115ab8d1a6047dc5c06/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=620b87b3cede2575e47da115ab8d1a6047dc5c06", "patch": "@@ -608,7 +608,7 @@ alpha*-*-netbsd*)\n \ttmake_file=\"${tmake_file} alpha/t-alpha alpha/t-ieee\"\n \t;;\n alpha*-*-openbsd*)\n-\ttm_defines=\"OBSD_NO_DYNAMIC_LIBRARIES OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_FUNCTION_SIZE OBSD_HAS_DECLARE_OBJECT\"\n+\ttm_defines=\"${tm_defines} OBSD_NO_DYNAMIC_LIBRARIES OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_FUNCTION_SIZE OBSD_HAS_DECLARE_OBJECT\"\n \ttm_file=\"alpha/alpha.h openbsd.h alpha/openbsd.h\"\n \t# default x-alpha is only appropriate for dec-osf.\n \ttarget_cpu_default=\"MASK_GAS\"\n@@ -632,12 +632,12 @@ alpha*-dec-osf[45]*)\n \t    # Define TARGET_SUPPORT_ARCH except on 4.0a.\n \t    case ${target} in\n \t\t*-*-osf4.0a) ;;\n-\t\t*) tm_defines=\"TARGET_SUPPORT_ARCH=1\"\n+\t\t*) tm_defines=\"${tm_defines} TARGET_SUPPORT_ARCH=1\"\n \t    esac\n \t    ;;\n \t  *-*-osf5*)\n \t    tm_file=\"${tm_file} alpha/osf5.h\"\n-\t    tm_defines=\"TARGET_SUPPORT_ARCH=1\"\n+\t    tm_defines=\"${tm_defines} TARGET_SUPPORT_ARCH=1\"\n \t    ;;\n \tesac\n \tcase ${enable_threads} in\n@@ -1402,19 +1402,19 @@ m68k-*-aout*)\n \t;;\n m68k-*-coff*)\n \ttmake_file=m68k/t-m68kbare\n-\ttm_defines=\"MOTOROLA USE_GAS\"\n+\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n \ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kemb.h dbxcoff.h m68k/coff.h dbx.h\"\n \tuse_fixproto=yes\n \t;;\n m68020-*-elf* | m68k-*-elf*)\n \ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h\"\n-\ttm_defines=\"MOTOROLA USE_GAS\"\n+\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n \ttmake_file=m68k/t-m68kelf\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n m68010-*-netbsdelf* | m68k*-*-netbsdelf*)\n \ttm_file=\"${tm_file} dbxelf.h elfos.h netbsd.h netbsd-elf.h m68k/netbsd-elf.h\"\n-\ttm_defines=\"MOTOROLA USE_GAS\"\n+\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n \tcase ${target} in\n \tm68010*)\n \t\ttarget_cpu_default=\"0\"\n@@ -1426,15 +1426,15 @@ m68010-*-netbsdelf* | m68k*-*-netbsdelf*)\n \t;;\n m68k*-*-openbsd*)\n \t# needed to unconfuse gdb\n-\ttm_defines=\"OBSD_OLD_GAS TARGET_DEFAULT=(MASK_68020|MASK_68881|MASK_BITFIELD)\"\n+\ttm_defines=\"${tm_defines} OBSD_OLD_GAS TARGET_DEFAULT=(MASK_68020|MASK_68881|MASK_BITFIELD)\"\n \ttm_file=\"m68k/m68k.h openbsd.h m68k/openbsd.h\"\n \ttmake_file=\"t-libc-ok t-openbsd m68k/t-openbsd\"\n \t# we need collect2 until our bug is fixed...\n \tuse_collect2=yes\n \t;;\n m68k-*-uclinux*)\t\t# Motorola m68k/ColdFire running uClinux with uClibc\n \ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/uclinux.h\"\n- \ttm_defines=\"MOTOROLA USE_GAS\"\n+ \ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n \ttmake_file=m68k/t-uclinux\n \tuse_fixproto=no\n \t;;\n@@ -1443,7 +1443,7 @@ m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n \t\t\t\t# aka the GNU/Linux C library 6.\n \ttm_file=\"m68k/m68k.h dbxelf.h elfos.h svr4.h linux.h m68k/linux.h\"\n \textra_options=\"${extra_options} m68k/ieee.opt\"\n-\ttm_defines=\"MOTOROLA USE_GAS\"\n+\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n \t# if not configured with --enable-sjlj-exceptions, bump the\n \t# libgcc version number\n \tif test x$sjlj != x1; then\n@@ -1453,7 +1453,7 @@ m68k-*-linux*)\t\t# Motorola m68k's running GNU/Linux\n m68k-*-rtems*)\n \ttmake_file=\"m68k/t-m68kbare m68k/t-crtstuff t-rtems m68k/t-rtems\"\n \ttm_file=\"m68k/m68k.h m68k/m68k-none.h m68k/m68kelf.h dbxelf.h elfos.h m68k/m68kemb.h m68k/m68020-elf.h m68k/rtemself.h rtems.h\"\n-\ttm_defines=\"MOTOROLA USE_GAS\"\n+\ttm_defines=\"${tm_defines} MOTOROLA USE_GAS\"\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n mcore-*-elf)\n@@ -1478,7 +1478,7 @@ mips-sgi-irix[56]*)\n \t*-*-irix6*)\n \t\ttm_file=\"${tm_file} mips/iris6.h\"\n \t\ttmake_file=\"${tmake_file} mips/t-iris6\"\n-\t\ttm_defines=\"MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n+\t\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_N32\"\n \t\t;;\n \tesac\n \tif test \"x$stabs\" = xyes\n@@ -1515,7 +1515,7 @@ mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n         esac\n \t;;\n mips*-*-openbsd*)\n-\ttm_defines=\"OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_OBJECT OBSD_HAS_CORRECT_SPECS\"\n+\ttm_defines=\"${tm_defines} OBSD_HAS_DECLARE_FUNCTION_NAME OBSD_HAS_DECLARE_OBJECT OBSD_HAS_CORRECT_SPECS\"\n \ttarget_cpu_default=\"MASK_ABICALLS\"\n \ttm_file=\"mips/mips.h openbsd.h mips/openbsd.h mips/sdb.h\"\n \tcase ${target} in\n@@ -1527,34 +1527,34 @@ mips*-*-openbsd*)\n mipsisa32-*-elf* | mipsisa32el-*-elf*)\n \ttm_file=\"elfos.h ${tm_file} mips/elf.h\"\n \ttmake_file=mips/t-isa3264\n-\ttm_defines=\"MIPS_ISA_DEFAULT=32 MIPS_ABI_DEFAULT=ABI_EABI\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=32 MIPS_ABI_DEFAULT=ABI_EABI\"\n \tuse_fixproto=yes\n \t;;\n mipsisa32r2-*-elf* | mipsisa32r2el-*-elf*)\n \ttm_file=\"elfos.h ${tm_file} mips/elf.h\"\n \ttmake_file=mips/t-isa3264\n-\ttm_defines=\"MIPS_ISA_DEFAULT=33 MIPS_ABI_DEFAULT=ABI_EABI\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=33 MIPS_ABI_DEFAULT=ABI_EABI\"\n \tuse_fixproto=yes\n \t;;\n mipsisa64-*-elf* | mipsisa64el-*-elf*)\n \ttm_file=\"elfos.h ${tm_file} mips/elf.h\"\n \ttmake_file=mips/t-isa3264\n \ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n-\ttm_defines=\"MIPS_ISA_DEFAULT=64 MIPS_ABI_DEFAULT=ABI_EABI\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64 MIPS_ABI_DEFAULT=ABI_EABI\"\n \tuse_fixproto=yes\n \t;;\n mipsisa64sr71k-*-elf*)\n         tm_file=\"elfos.h ${tm_file} mips/elf.h\"\n         tmake_file=mips/t-sr71k\n \ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n-\ttm_defines=\"MIPS_ISA_DEFAULT=64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sr71000\\\\\\\" MIPS_ABI_DEFAULT=ABI_EABI\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sr71000\\\\\\\" MIPS_ABI_DEFAULT=ABI_EABI\"\n \tuse_fixproto=yes\n         ;;\n mipsisa64sb1-*-elf* | mipsisa64sb1el-*-elf*)\n \ttm_file=\"elfos.h ${tm_file} mips/elf.h\"\n \ttmake_file=mips/t-elf\n \ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n-\ttm_defines=\"MIPS_ISA_DEFAULT=64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sb1\\\\\\\" MIPS_ABI_DEFAULT=ABI_O64\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=64 MIPS_CPU_STRING_DEFAULT=\\\\\\\"sb1\\\\\\\" MIPS_ABI_DEFAULT=ABI_O64\"\n \tuse_fixproto=yes\n \t;;\n mips-*-elf* | mipsel-*-elf*)\n@@ -1566,7 +1566,7 @@ mips64-*-elf* | mips64el-*-elf*)\n \ttm_file=\"elfos.h ${tm_file} mips/elf.h\"\n \ttmake_file=mips/t-elf\n \ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n-\ttm_defines=\"MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_O64\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_O64\"\n \tuse_fixproto=yes\n \t;;\n mips64vr-*-elf* | mips64vrel-*-elf*)\n@@ -1578,7 +1578,7 @@ mips64orion-*-elf* | mips64orionel-*-elf*)\n \ttm_file=\"elfos.h ${tm_file} mips/elforion.h mips/elf.h\"\n \ttmake_file=mips/t-elf\n \ttarget_cpu_default=\"MASK_64BIT|MASK_FLOAT64\"\n-\ttm_defines=\"MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_O64\"\n+\ttm_defines=\"${tm_defines} MIPS_ISA_DEFAULT=3 MIPS_ABI_DEFAULT=ABI_O64\"\n \tuse_fixproto=yes\n \t;;\n mips*-*-rtems*)"}]}