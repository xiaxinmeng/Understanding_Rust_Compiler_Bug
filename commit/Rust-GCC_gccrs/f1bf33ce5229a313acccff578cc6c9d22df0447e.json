{"sha": "f1bf33ce5229a313acccff578cc6c9d22df0447e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFiZjMzY2U1MjI5YTMxM2FjY2NmZjU3OGNjNmM5ZDIyZGYwNDQ3ZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-01-05T11:52:39Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-01-05T11:52:39Z"}, "message": "re PR target/34673 (ICE in extract_insn, at recog.c:1990)\n\n        PR target/34673\n        * config/i386/i386.c (ix86_emit_swsqrtsf): Swap input operands\n        in the call to gen_rtx_NE.  Remove unneeded VECTOR_MODE_P check.\n        Update copyright year.\n\n        * config/i386/i386.md (rsqrtsf2): Enable for TARGET_SSE_MATH.\n        Update copyright year.\n        * config/i386/sse.md (rsqrtv4sf2): Ditto. Unconditionally expand\n        using NR fixup.\n\nFrom-SVN: r131335", "tree": {"sha": "1bd00e18f0c858200960580aa41a6e9c7e623395", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1bd00e18f0c858200960580aa41a6e9c7e623395"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1bf33ce5229a313acccff578cc6c9d22df0447e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1bf33ce5229a313acccff578cc6c9d22df0447e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1bf33ce5229a313acccff578cc6c9d22df0447e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1bf33ce5229a313acccff578cc6c9d22df0447e/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12a6309e7e4fec57b7f0b431fc5da6a7400c00d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12a6309e7e4fec57b7f0b431fc5da6a7400c00d6"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "f750a853c73b5b6db5985202536406edd81abd5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1bf33ce5229a313acccff578cc6c9d22df0447e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1bf33ce5229a313acccff578cc6c9d22df0447e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1bf33ce5229a313acccff578cc6c9d22df0447e", "patch": "@@ -1,3 +1,15 @@\n+2008-01-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/34673\n+\t* config/i386/i386.c (ix86_emit_swsqrtsf): Swap input operands\n+\tin the call to gen_rtx_NE.  Remove unneeded VECTOR_MODE_P check.\n+\tUpdate copyright year.\n+\n+\t* config/i386/i386.md (rsqrtsf2): Enable for TARGET_SSE_MATH.\n+\tUpdate copyright year.\n+\t* config/i386/sse.md (rsqrtv4sf2): Ditto. Unconditionally expand\n+\tusing NR fixup.\n+\n 2008-01-05  Zhouyi Zhou  <zhouzhouyi@FreeBSD.org>\n \n \t* tree-vrp.c (find_conditional_asserts): Remove redundant check that"}, {"sha": "f29df8d5550867cd5c7bae9f54c0d9966e4b8b6f", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1bf33ce5229a313acccff578cc6c9d22df0447e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1bf33ce5229a313acccff578cc6c9d22df0447e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=f1bf33ce5229a313acccff578cc6c9d22df0447e", "patch": "@@ -1,6 +1,7 @@\n /* Subroutines used for code generation on IA-32.\n    Copyright (C) 1988, 1992, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001,\n-   2002, 2003, 2004, 2005, 2006, 2007 Free Software Foundation, Inc.\n+   2002, 2003, 2004, 2005, 2006, 2007, 2008\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -24239,22 +24240,15 @@ void ix86_emit_swsqrtsf (rtx res, rtx a, enum machine_mode mode,\n \n   /* Compare a to zero.  */\n   emit_insn (gen_rtx_SET (VOIDmode, mask,\n-\t\t\t  gen_rtx_NE (mode, a, zero)));\n+\t\t\t  gen_rtx_NE (mode, zero, a)));\n \n   /* x0 = 1./sqrt(a) estimate */\n   emit_insn (gen_rtx_SET (VOIDmode, x0,\n \t\t\t  gen_rtx_UNSPEC (mode, gen_rtvec (1, a),\n \t\t\t\t\t  UNSPEC_RSQRT)));\n   /* Filter out infinity.  */\n-  if (VECTOR_MODE_P (mode))\n-    emit_insn (gen_rtx_SET (VOIDmode, gen_lowpart (V4SFmode, x0),\n-\t\t\t    gen_rtx_AND (mode,\n-\t\t\t\t\t gen_lowpart (V4SFmode, x0),\n-\t\t\t\t\t gen_lowpart (V4SFmode, mask))));\n-  else\n-    emit_insn (gen_rtx_SET (VOIDmode, x0,\n-\t\t\t    gen_rtx_AND (mode, x0, mask)));\n-\n+  emit_insn (gen_rtx_SET (VOIDmode, x0,\n+\t\t\t  gen_rtx_AND (mode, x0, mask)));\n   /* e0 = x0 * a */\n   emit_insn (gen_rtx_SET (VOIDmode, e0,\n \t\t\t  gen_rtx_MULT (mode, x0, a)));"}, {"sha": "cff39d84fbabb5fc5a6d24b86d4f3c27baf46dec", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1bf33ce5229a313acccff578cc6c9d22df0447e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1bf33ce5229a313acccff578cc6c9d22df0447e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=f1bf33ce5229a313acccff578cc6c9d22df0447e", "patch": "@@ -1,6 +1,6 @@\n ;; GCC machine description for IA-32 and x86-64.\n ;; Copyright (C) 1988, 1994, 1995, 1996, 1997, 1998, 1999, 2000,\n-;; 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+;; 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n ;; Free Software Foundation, Inc.\n ;; Mostly by William Schelter.\n ;; x86_64 support added by Jan Hubicka\n@@ -16635,9 +16635,7 @@\n   [(set (match_operand:SF 0 \"register_operand\" \"\")\n \t(unspec:SF [(match_operand:SF 1 \"nonimmediate_operand\" \"\")]\n \t\t   UNSPEC_RSQRT))]\n-  \"TARGET_SSE_MATH && TARGET_RECIP && !optimize_size\n-   && flag_finite_math_only && !flag_trapping_math\n-   && flag_unsafe_math_optimizations\"\n+  \"TARGET_SSE_MATH\"\n {\n   ix86_emit_swsqrtsf (operands[0], operands[1], SFmode, 1);\n   DONE;"}, {"sha": "16c85a08b3864740918b3c73d799201bb212229f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1bf33ce5229a313acccff578cc6c9d22df0447e/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1bf33ce5229a313acccff578cc6c9d22df0447e/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=f1bf33ce5229a313acccff578cc6c9d22df0447e", "patch": "@@ -1,5 +1,5 @@\n ;; GCC machine description for SSE instructions\n-;; Copyright (C) 2005, 2006, 2007\n+;; Copyright (C) 2005, 2006, 2007, 2008\n ;; Free Software Foundation, Inc.\n ;;\n ;; This file is part of GCC.\n@@ -536,15 +536,10 @@\n   [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n \t(unspec:V4SF\n \t  [(match_operand:V4SF 1 \"nonimmediate_operand\" \"\")] UNSPEC_RSQRT))]\n-  \"TARGET_SSE\"\n+  \"TARGET_SSE_MATH\"\n {\n-  if (TARGET_SSE_MATH && TARGET_RECIP && !optimize_size\n-      && flag_finite_math_only && !flag_trapping_math\n-      && flag_unsafe_math_optimizations)\n-    {\n-      ix86_emit_swsqrtsf (operands[0], operands[1], V4SFmode, 1);\n-      DONE;\n-    }\n+  ix86_emit_swsqrtsf (operands[0], operands[1], V4SFmode, 1);\n+  DONE;\n })\n \n (define_insn \"sse_rsqrtv4sf2\"\n@@ -569,7 +564,7 @@\n    (set_attr \"mode\" \"SF\")])\n \n (define_expand \"sqrtv4sf2\"\n-  [(set (match_operand:V4SF 0 \"register_operand\" \"=\")\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n \t(sqrt:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"\")))]\n   \"TARGET_SSE\"\n {"}]}