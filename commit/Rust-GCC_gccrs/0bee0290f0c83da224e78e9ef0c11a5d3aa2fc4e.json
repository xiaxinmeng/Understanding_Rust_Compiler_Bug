{"sha": "0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJlZTAyOTBmMGM4M2RhMjI0ZTc4ZTllZjBjMTFhNWQzYWEyZmM0ZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2000-01-19T23:14:17Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2000-01-19T23:14:17Z"}, "message": "recog.h (OUT_FCN): Delete.\n\n        * recog.h (OUT_FCN): Delete.\n\n        * vax.md: Call `get_insn_template' instead of OUT_FCN.\n\nFrom-SVN: r31524", "tree": {"sha": "49488967feab3008ad67e0ab7de0b261fc81826b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/49488967feab3008ad67e0ab7de0b261fc81826b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e/comments", "author": null, "committer": null, "parents": [{"sha": "dda482c1e47a4657af480ff6acd66b17a12b9c60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dda482c1e47a4657af480ff6acd66b17a12b9c60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dda482c1e47a4657af480ff6acd66b17a12b9c60"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "b5604e01f360bfdff31b4831d02b337439c4f4dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e", "patch": "@@ -1,3 +1,9 @@\n+2000-01-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* recog.h (OUT_FCN): Delete.\n+\n+\t* vax.md: Call `get_insn_template' instead of OUT_FCN.\n+\n 2000-01-19  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \t\n \t* cppalloc.c: PROTO -> PARAMS."}, {"sha": "c7869ea2109389f74033034fd57e3b677025b8f3", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e", "patch": "@@ -688,7 +688,7 @@\n     output_asm_insn (pattern, low);\n   if (!carry)\n     /* If CARRY is 0, we don't have any carry value to worry about.  */\n-    return OUT_FCN (CODE_FOR_addsi3) (operands, insn);\n+    return get_insn_template (CODE_FOR_addsi3, insn);\n   /* %0 = C + %1 + %2 */\n   if (!rtx_equal_p (operands[0], operands[1]))\n     output_asm_insn ((operands[1] == const0_rtx\n@@ -772,7 +772,7 @@\n       if (low[2] == constm1_rtx)\n \tpattern = \\\"decl %0\\\";\n       else if (low[2] == const0_rtx)\n-\tpattern = OUT_FCN (CODE_FOR_movsi) (low, insn), carry = 0;\n+\tpattern = get_insn_template (CODE_FOR_movsi, insn), carry = 0;\n       else\n \tpattern = \\\"subl3 %2,%1,%0\\\";\n     }\n@@ -785,7 +785,7 @@\n       return \\\"sbwc %2,%0\\\";\n       /* %0 = %2 - %1 - C */\n     }\n-  return OUT_FCN (CODE_FOR_subsi3) (operands, insn);\n+  return get_insn_template (CODE_FOR_subsi3, insn);\n }\")\n \f\n ;;- Multiply instructions."}, {"sha": "a19e6a636a361c44dd0fc8a4e7af16cacdf64855", "filename": "gcc/recog.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e/gcc%2Frecog.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e/gcc%2Frecog.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.h?ref=0bee0290f0c83da224e78e9ef0c11a5d3aa2fc4e", "patch": "@@ -185,10 +185,6 @@ extern struct recog_data recog_data;\n    Set up by preprocess_constraints.  */\n extern struct operand_alternative recog_op_alt[MAX_RECOG_OPERANDS][MAX_RECOG_ALTERNATIVES];\n \n-/* Access the output function for CODE.  */\n-\n-#define OUT_FCN(CODE) (*insn_data[(int) (CODE)].outfun)\n-\n /* A table defined in insn-output.c that give information about\n    each insn-code value.  */\n "}]}