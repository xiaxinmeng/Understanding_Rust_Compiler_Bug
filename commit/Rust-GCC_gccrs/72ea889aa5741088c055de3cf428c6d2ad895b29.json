{"sha": "72ea889aa5741088c055de3cf428c6d2ad895b29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJlYTg4OWFhNTc0MTA4OGMwNTVkZTNjZjQyOGM2ZDJhZDg5NWIyOQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2001-07-04T18:33:53Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2001-07-04T18:33:53Z"}, "message": "Modified from patch by Julian Hall <jules@acris.co.uk>:\n\n\t* jartool.c (errno): Conditionally declare.\n\t(O_BINARY): Conditionally define.\n\t(main): Use open, not creat.  Use O_BINARY everywhere.\n\t(make_manifest): Use O_BINARY.\n\t(add_to_jar): Likewise.\n\nFrom-SVN: r43766", "tree": {"sha": "be285726d9525aba995523a95cf2043841ae3839", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/be285726d9525aba995523a95cf2043841ae3839"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72ea889aa5741088c055de3cf428c6d2ad895b29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ea889aa5741088c055de3cf428c6d2ad895b29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72ea889aa5741088c055de3cf428c6d2ad895b29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72ea889aa5741088c055de3cf428c6d2ad895b29/comments", "author": null, "committer": null, "parents": [{"sha": "2b1b6bf903b908e98ea861317289a3c15e0bd0df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b1b6bf903b908e98ea861317289a3c15e0bd0df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b1b6bf903b908e98ea861317289a3c15e0bd0df"}], "stats": {"total": 34, "additions": 27, "deletions": 7}, "files": [{"sha": "d46ec26c14fa67926ae65fd7bb04da3c470bd530", "filename": "fastjar/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72ea889aa5741088c055de3cf428c6d2ad895b29/fastjar%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72ea889aa5741088c055de3cf428c6d2ad895b29/fastjar%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2FChangeLog?ref=72ea889aa5741088c055de3cf428c6d2ad895b29", "patch": "@@ -1,3 +1,12 @@\n+2001-07-04  Tom Tromey  <tromey@redhat.com>\n+\n+\tModified from patch by Julian Hall <jules@acris.co.uk>:\n+\t* jartool.c (errno): Conditionally declare.\n+\t(O_BINARY): Conditionally define.\n+\t(main): Use open, not creat.  Use O_BINARY everywhere.\n+\t(make_manifest): Use O_BINARY.\n+\t(add_to_jar): Likewise.\n+\n 2001-06-28  Tom Tromey  <tromey@redhat.com>\n \n \t* configure: Rebuilt."}, {"sha": "0f65d1288e4a156e5b63aaa7c1801ffe096f2f4d", "filename": "fastjar/jartool.c", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72ea889aa5741088c055de3cf428c6d2ad895b29/fastjar%2Fjartool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72ea889aa5741088c055de3cf428c6d2ad895b29/fastjar%2Fjartool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fastjar%2Fjartool.c?ref=72ea889aa5741088c055de3cf428c6d2ad895b29", "patch": "@@ -17,9 +17,13 @@\n   Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\n */\n \n-/* $Id: jartool.c,v 1.4 2000/12/28 21:47:37 robertl Exp $\n+/* $Id: jartool.c,v 1.5 2001/05/03 21:40:47 danglin Exp $\n \n    $Log: jartool.c,v $\n+   Revision 1.5  2001/05/03 21:40:47  danglin\n+   \t* jartool.c (jt_strdup): New function.\n+   \t(get_next_arg): Use jt_strdup instead of strdup.\n+\n    Revision 1.4  2000/12/28 21:47:37  robertl\n    2000-12-28  Robert Lipe <robertl@sco.com>\n \n@@ -208,7 +212,13 @@\n \n static char version_string[] = VERSION;\n \n+#ifndef errno\n extern int errno;\n+#endif\n+\n+#ifndef O_BINARY\n+#define O_BINARY 0\n+#endif\n \n void usage(const char*);\n void add_entry(struct zipentry *);\n@@ -366,8 +376,9 @@ int main(int argc, char **argv){\n   /* create the jarfile */\n   if(action == ACTION_CREATE){\n     if(file){\n-      jarfd = creat(jarfile, S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);\n-      \n+      jarfd = open(jarfile, O_CREAT | O_BINARY | O_WRONLY | O_TRUNC,\n+\t\t   S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);\n+\n       if(jarfd < 0){\n         fprintf(stderr, \"Error opening %s for writing!\\n\", jarfile);\n         perror(jarfile);\n@@ -391,7 +402,7 @@ int main(int argc, char **argv){\n   } else if(action == ACTION_LIST || action == ACTION_EXTRACT){\n \n     if(file){\n-      jarfd = open(jarfile, O_RDONLY);\n+      jarfd = open(jarfile, O_RDONLY | O_BINARY);\n \n       if(jarfd < 0){\n         fprintf(stderr, \"Error opening %s for reading!\\n\", jarfile);\n@@ -413,7 +424,7 @@ int main(int argc, char **argv){\n     init_headers();\n \n    if((action == ACTION_UPDATE) && file) {\n-      if((jarfd = open(jarfile, O_RDWR)) < 0) {\n+      if((jarfd = open(jarfile, O_RDWR | O_BINARY)) < 0) {\n \tfprintf(stderr, \"Error opening %s for reading!\\n\", jarfile);\n         perror(jarfile);\n         exit(1);\n@@ -724,7 +735,7 @@ int make_manifest(int jfd, const char *mf_name){\n       exit(1);\n     }\n   \n-    mfd = open(mf_name, O_RDONLY);\n+    mfd = open(mf_name, O_RDONLY | O_BINARY);\n \n     if(mfd < 0){\n       fprintf(stderr, \"Error opening %s.\\n\", mf_name);\n@@ -870,7 +881,7 @@ int add_to_jar(int fd, const char *new_dir, const char *file){\n   } else if(S_ISREG(statbuf.st_mode)){\n     int add_fd;\n \n-    add_fd = open(file, O_RDONLY);\n+    add_fd = open(file, O_RDONLY | O_BINARY);\n     if(add_fd < 0){\n       fprintf(stderr, \"Error opening %s.\\n\", file);\n       return 0;"}]}