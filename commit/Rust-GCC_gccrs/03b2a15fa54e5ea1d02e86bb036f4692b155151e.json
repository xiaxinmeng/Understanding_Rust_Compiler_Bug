{"sha": "03b2a15fa54e5ea1d02e86bb036f4692b155151e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDNiMmExNWZhNTRlNWVhMWQwMmU4NmJiMDM2ZjQ2OTJiMTU1MTUxZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2016-05-21T09:46:22Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2016-05-21T09:46:22Z"}, "message": "* tree.c (array_at_struct_end_p): Look through MEM_REF.\n\nFrom-SVN: r236557", "tree": {"sha": "7b83f7a1a6cef15449724d6edf6ce71a7de5d2f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b83f7a1a6cef15449724d6edf6ce71a7de5d2f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03b2a15fa54e5ea1d02e86bb036f4692b155151e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b2a15fa54e5ea1d02e86bb036f4692b155151e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03b2a15fa54e5ea1d02e86bb036f4692b155151e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03b2a15fa54e5ea1d02e86bb036f4692b155151e/comments", "author": null, "committer": null, "parents": [{"sha": "88aea79f3cd5933088c99f0ebe3e34285c2b201d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88aea79f3cd5933088c99f0ebe3e34285c2b201d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88aea79f3cd5933088c99f0ebe3e34285c2b201d"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "a4cdb4e1052ac848f7441591394673bec5d894b8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b2a15fa54e5ea1d02e86bb036f4692b155151e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b2a15fa54e5ea1d02e86bb036f4692b155151e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=03b2a15fa54e5ea1d02e86bb036f4692b155151e", "patch": "@@ -1,3 +1,7 @@\n+2016-05-21  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* tree.c (array_at_struct_end_p): Look through MEM_REF.\n+\n 2016-05-21  Kugan Vivekanandarajah  <kuganv@linaro.org>\n \n \tPR middle-end/71179"}, {"sha": "83dc7d8bc900dab744157517b7b2a664c70a76ff", "filename": "gcc/tree.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03b2a15fa54e5ea1d02e86bb036f4692b155151e/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03b2a15fa54e5ea1d02e86bb036f4692b155151e/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=03b2a15fa54e5ea1d02e86bb036f4692b155151e", "patch": "@@ -13076,9 +13076,28 @@ array_at_struct_end_p (tree ref)\n       ref = TREE_OPERAND (ref, 0);\n     }\n \n+  tree size = NULL;\n+\n+  if (TREE_CODE (ref) == MEM_REF\n+      && TREE_CODE (TREE_OPERAND (ref, 0)) == ADDR_EXPR)\n+    {\n+      size = TYPE_SIZE (TREE_TYPE (ref));\n+      ref = TREE_OPERAND (TREE_OPERAND (ref, 0), 0);\n+    }\n+\n   /* If the reference is based on a declared entity, the size of the array\n      is constrained by its given domain.  (Do not trust commons PR/69368).  */\n   if (DECL_P (ref)\n+      /* Be sure the size of MEM_REF target match.  For example:\n+\n+\t   char buf[10];\n+\t   struct foo *str = (struct foo *)&buf;\n+\n+\t   str->trailin_array[2] = 1;\n+\n+\t is valid because BUF allocate enough space.  */\n+\n+      && (!size || operand_equal_p (DECL_SIZE (ref), size, 0))\n       && !(flag_unconstrained_commons\n \t   && TREE_CODE (ref) == VAR_DECL && DECL_COMMON (ref)))\n     return false;"}]}