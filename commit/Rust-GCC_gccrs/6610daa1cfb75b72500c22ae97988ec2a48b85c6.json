{"sha": "6610daa1cfb75b72500c22ae97988ec2a48b85c6", "node_id": "C_kwDOANBUbNoAKDY2MTBkYWExY2ZiNzViNzI1MDBjMjJhZTk3OTg4ZWMyYTQ4Yjg1YzY", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2022-11-25T13:35:11Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@arm.com", "date": "2023-01-12T13:43:41Z"}, "message": "aarch64: Fix bit-field alignment in param passing [PR105549]\n\nWhile working on enabling DFP for AArch64, I noticed new failures in\ngcc.dg/compat/struct-layout-1.exp (t028) which were not actually\ncaused by DFP types handling. These tests are generated during 'make\ncheck' and enabling DFP made generation different (not sure if new\nnon-DFP tests are generated, or if existing ones are generated\ndifferently, the tests in question are huge and difficult to compare).\n\nAnyway, I reduced the problem to what I attach at the end of the new\ngcc.target/aarch64/aapcs64/va_arg-17.c test and rewrote it in the same\nscheme as other va_arg* AArch64 tests.  Richard Sandiford further\nreduced this to a non-vararg function, added as a second testcase.\n\nThis is a tough case mixing bit-fields and alignment, where\naarch64_function_arg_alignment did not follow what its descriptive\ncomment says: we want to use the natural alignment of the bit-field\ntype only if the user didn't reduce the alignment for the bit-field\nitself.\n\nThe patch also adds a comment and assert that would help someone who\nhas to look at this area again.\n\nThe fix would be very small, except that this introduces a new ABI\nbreak, and we have to warn about that.  Since this actually fixes a\nproblem introduced in GCC 9.1, we keep the old computation to detect\nwhen we now behave differently.\n\nThis patch adds two new tests (va_arg-17.c and\npr105549.c). va_arg-17.c contains the reduced offending testcase from\nstruct-layout-1.exp for reference.  We update some tests introduced by\nthe previous patch, where parameters with bit-fields and packed\nattribute now emit a different warning.\n\n2022-11-28  Christophe Lyon  <christophe.lyon@arm.com>\n\t    Richard Sandiford  <richard.sandiford@arm.com>\n\n\tgcc/\n\tPR target/105549\n\t* config/aarch64/aarch64.cc (aarch64_function_arg_alignment):\n\tCheck DECL_PACKED for bitfield.\n\t(aarch64_layout_arg): Warn when parameter passing ABI changes.\n\t(aarch64_function_arg_boundary): Do not warn here.\n\t(aarch64_gimplify_va_arg_expr): Warn when parameter passing ABI\n\tchanges.\n\n\tgcc/testsuite/\n\tPR target/105549\n\t* gcc.target/aarch64/bitfield-abi-warning-align16-O2.c: Update.\n\t* gcc.target/aarch64/bitfield-abi-warning-align16-O2-extra.c: Update.\n\t* gcc.target/aarch64/bitfield-abi-warning-align32-O2.c: Update.\n\t* gcc.target/aarch64/bitfield-abi-warning-align32-O2-extra.c: Update.\n\t* gcc.target/aarch64/aapcs64/va_arg-17.c: New test.\n\t* gcc.target/aarch64/pr105549.c: New test.\n\t* g++.target/aarch64/bitfield-abi-warning-align16-O2.C: Update.\n\t* g++.target/aarch64/bitfield-abi-warning-align16-O2-extra.C: Update.\n\t* g++.target/aarch64/bitfield-abi-warning-align32-O2.C: Update.\n\t* g++.target/aarch64/bitfield-abi-warning-align32-O2-extra.C: Update.", "tree": {"sha": "01635beb7f50e6b5a0b5401c3c6d82bea7deb865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01635beb7f50e6b5a0b5401c3c6d82bea7deb865"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6610daa1cfb75b72500c22ae97988ec2a48b85c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6610daa1cfb75b72500c22ae97988ec2a48b85c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6610daa1cfb75b72500c22ae97988ec2a48b85c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6610daa1cfb75b72500c22ae97988ec2a48b85c6/comments", "author": null, "committer": null, "parents": [{"sha": "3df1a115be22caeab3ffe7afb12e71adb54ff132", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3df1a115be22caeab3ffe7afb12e71adb54ff132", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3df1a115be22caeab3ffe7afb12e71adb54ff132"}], "stats": {"total": 1011, "additions": 585, "deletions": 426}, "files": [{"sha": "c8335e7def7ce6c520a4968868f477d09f55bcc7", "filename": "gcc/config/aarch64/aarch64.cc", "status": "modified", "additions": 120, "deletions": 28, "changes": 148, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Fconfig%2Faarch64%2Faarch64.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.cc?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -7537,14 +7537,18 @@ aarch64_vfp_is_call_candidate (cumulative_args_t pcum_v, machine_mode mode,\n    bits.  The idea is to suppress any stronger alignment requested by\n    the user and opt for the natural alignment (specified in AAPCS64 \\S\n    4.1).  ABI_BREAK is set to the old alignment if the alignment was\n-   incorrectly calculated in versions of GCC prior to GCC-9.  This is\n-   a helper function for local use only.  */\n+   incorrectly calculated in versions of GCC prior to GCC-9.\n+   ABI_BREAK_PACKED is set to the old alignment if it was incorrectly\n+   calculated in versions between GCC-9 and GCC-13.  This is a helper\n+   function for local use only.  */\n \n static unsigned int\n aarch64_function_arg_alignment (machine_mode mode, const_tree type,\n-\t\t\t\tunsigned int *abi_break)\n+\t\t\t\tunsigned int *abi_break,\n+\t\t\t\tunsigned int *abi_break_packed)\n {\n   *abi_break = 0;\n+  *abi_break_packed = 0;\n   if (!type)\n     return GET_MODE_ALIGNMENT (mode);\n \n@@ -7560,6 +7564,7 @@ aarch64_function_arg_alignment (machine_mode mode, const_tree type,\n     return TYPE_ALIGN (TREE_TYPE (type));\n \n   unsigned int alignment = 0;\n+  unsigned int bitfield_alignment_with_packed = 0;\n   unsigned int bitfield_alignment = 0;\n   for (tree field = TYPE_FIELDS (type); field; field = DECL_CHAIN (field))\n     if (TREE_CODE (field) == FIELD_DECL)\n@@ -7579,11 +7584,30 @@ aarch64_function_arg_alignment (machine_mode mode, const_tree type,\n \t   but gains 8-byte alignment and size thanks to \"e\".  */\n \talignment = std::max (alignment, DECL_ALIGN (field));\n \tif (DECL_BIT_FIELD_TYPE (field))\n-\t  bitfield_alignment\n-\t    = std::max (bitfield_alignment,\n-\t\t\tTYPE_ALIGN (DECL_BIT_FIELD_TYPE (field)));\n+\t  {\n+\t    /* Take the bit-field type's alignment into account only\n+\t       if the user didn't reduce this field's alignment with\n+\t       the packed attribute.  */\n+\t    if (!DECL_PACKED (field))\n+\t      bitfield_alignment\n+\t\t= std::max (bitfield_alignment,\n+\t\t\t    TYPE_ALIGN (DECL_BIT_FIELD_TYPE (field)));\n+\n+\t    /* Compute the alignment even if the bit-field is\n+\t       packed, so that we can emit a warning in case the\n+\t       alignment changed between GCC versions.  */\n+\t    bitfield_alignment_with_packed\n+\t      = std::max (bitfield_alignment_with_packed,\n+\t\t\t  TYPE_ALIGN (DECL_BIT_FIELD_TYPE (field)));\n+\t  }\n       }\n \n+  /* Emit a warning if the alignment is different when taking the\n+     'packed' attribute into account.  */\n+  if (bitfield_alignment != bitfield_alignment_with_packed\n+      && bitfield_alignment_with_packed > alignment)\n+    *abi_break_packed = bitfield_alignment_with_packed;\n+\n   if (bitfield_alignment > alignment)\n     {\n       *abi_break = alignment;\n@@ -7609,6 +7633,7 @@ aarch64_layout_arg (cumulative_args_t pcum_v, const function_arg_info &arg)\n   bool allocate_ncrn, allocate_nvrn;\n   HOST_WIDE_INT size;\n   unsigned int abi_break;\n+  unsigned int abi_break_packed;\n \n   /* We need to do this once per argument.  */\n   if (pcum->aapcs_arg_processed)\n@@ -7620,9 +7645,57 @@ aarch64_layout_arg (cumulative_args_t pcum_v, const function_arg_info &arg)\n        && (currently_expanding_function_start\n \t   || currently_expanding_gimple_stmt));\n \n+  /* There are several things to note here:\n+\n+     - Both the C and AAPCS64 interpretations of a type's alignment should\n+       give a value that is no greater than the type's size.\n+\n+     - Types bigger than 16 bytes are passed indirectly.\n+\n+     - If an argument of type T is passed indirectly, TYPE and MODE describe\n+       a pointer to T rather than T iself.\n+\n+     It follows that the AAPCS64 alignment of TYPE must be no greater\n+     than 16 bytes.\n+\n+     Versions prior to GCC 9.1 ignored a bitfield's underlying type\n+     and so could calculate an alignment that was too small.  If this\n+     happened for TYPE then ABI_BREAK is this older, too-small alignment.\n+\n+     Although GCC 9.1 fixed that bug, it introduced a different one:\n+     it would consider the alignment of a bitfield's underlying type even\n+     if the field was packed (which should have the effect of overriding\n+     the alignment of the underlying type).  This was fixed in GCC 13.1.\n+\n+     As a result of this bug, GCC 9 to GCC 12 could calculate an alignment\n+     that was too big.  If this happened for TYPE, ABI_BREAK_PACKED is\n+     this older, too-big alignment.\n+\n+     Also, the fact that GCC 9 to GCC 12 considered irrelevant\n+     alignments meant they could calculate type alignments that were\n+     bigger than the type's size, contrary to the assumption above.\n+     The handling of register arguments was nevertheless (and justifiably)\n+     written to follow the assumption that the alignment can never be\n+     greater than the size.  The same was not true for stack arguments;\n+     their alignment was instead handled by MIN bounds in\n+     aarch64_function_arg_boundary.\n+\n+     The net effect is that, if GCC 9 to GCC 12 incorrectly calculated\n+     an alignment of more than 16 bytes for TYPE then:\n+\n+     - If the argument was passed in registers, these GCC versions\n+       would treat the alignment as though it was *less than* 16 bytes.\n+\n+     - If the argument was passed on the stack, these GCC versions\n+       would treat the alignment as though it was *equal to* 16 bytes.\n+\n+     Both behaviors were wrong, but in different cases.  */\n   unsigned int alignment\n-    = aarch64_function_arg_alignment (mode, type, &abi_break);\n-  gcc_assert (!alignment || abi_break < alignment);\n+    = aarch64_function_arg_alignment (mode, type, &abi_break,\n+\t\t\t\t      &abi_break_packed);\n+  gcc_assert (alignment <= 16 * BITS_PER_UNIT\n+\t      && (!alignment || abi_break < alignment)\n+\t      && (!abi_break_packed || alignment < abi_break_packed));\n \n   pcum->aapcs_arg_processed = true;\n \n@@ -7760,19 +7833,29 @@ aarch64_layout_arg (cumulative_args_t pcum_v, const function_arg_info &arg)\n       /* C.8 if the argument has an alignment of 16 then the NGRN is\n \t rounded up to the next even number.  */\n       if (nregs == 2\n-\t  && ncrn % 2\n+\t  && ncrn % 2)\n+\t{\n+\t  /* Emit a warning if the alignment changed when taking the\n+\t     'packed' attribute into account.  */\n+\t  if (warn_pcs_change\n+\t      && abi_break_packed\n+\t      && ((abi_break_packed == 16 * BITS_PER_UNIT)\n+\t\t  != (alignment == 16 * BITS_PER_UNIT)))\n+\t    inform (input_location, \"parameter passing for argument of type \"\n+\t\t    \"%qT changed in GCC 13.1\", type);\n+\n \t  /* The == 16 * BITS_PER_UNIT instead of >= 16 * BITS_PER_UNIT\n \t     comparison is there because for > 16 * BITS_PER_UNIT\n \t     alignment nregs should be > 2 and therefore it should be\n \t     passed by reference rather than value.  */\n-\t  && (aarch64_function_arg_alignment (mode, type, &abi_break)\n-\t      == 16 * BITS_PER_UNIT))\n-\t{\n-\t  if (warn_pcs_change && abi_break)\n-\t    inform (input_location, \"parameter passing for argument of type \"\n-\t\t    \"%qT changed in GCC 9.1\", type);\n-\t  ++ncrn;\n-\t  gcc_assert (ncrn + nregs <= NUM_ARG_REGS);\n+\t  if (alignment == 16 * BITS_PER_UNIT)\n+\t    {\n+\t      if (warn_pcs_change && abi_break)\n+\t\tinform (input_location, \"parameter passing for argument of type \"\n+\t\t\t\"%qT changed in GCC 9.1\", type);\n+\t      ++ncrn;\n+\t      gcc_assert (ncrn + nregs <= NUM_ARG_REGS);\n+\t    }\n \t}\n \n       /* If an argument with an SVE mode needs to be shifted up to the\n@@ -7825,8 +7908,14 @@ aarch64_layout_arg (cumulative_args_t pcum_v, const function_arg_info &arg)\n on_stack:\n   pcum->aapcs_stack_words = size / UNITS_PER_WORD;\n \n-  if (aarch64_function_arg_alignment (mode, type, &abi_break)\n-      == 16 * BITS_PER_UNIT)\n+  if (warn_pcs_change\n+      && abi_break_packed\n+      && ((abi_break_packed >= 16 * BITS_PER_UNIT)\n+\t  != (alignment >= 16 * BITS_PER_UNIT)))\n+    inform (input_location, \"parameter passing for argument of type \"\n+\t    \"%qT changed in GCC 13.1\", type);\n+\n+  if (alignment == 16 * BITS_PER_UNIT)\n     {\n       int new_size = ROUND_UP (pcum->aapcs_stack_size, 16 / UNITS_PER_WORD);\n       if (pcum->aapcs_stack_size != new_size)\n@@ -7948,16 +8037,13 @@ static unsigned int\n aarch64_function_arg_boundary (machine_mode mode, const_tree type)\n {\n   unsigned int abi_break;\n+  unsigned int abi_break_packed;\n   unsigned int alignment = aarch64_function_arg_alignment (mode, type,\n-\t\t\t\t\t\t\t   &abi_break);\n+\t\t\t\t\t\t\t   &abi_break,\n+\t\t\t\t\t\t\t   &abi_break_packed);\n+  /* We rely on aarch64_layout_arg and aarch64_gimplify_va_arg_expr\n+     to emit warnings about ABI incompatibility.  */\n   alignment = MIN (MAX (alignment, PARM_BOUNDARY), STACK_BOUNDARY);\n-  if (abi_break && warn_psabi)\n-    {\n-      abi_break = MIN (MAX (abi_break, PARM_BOUNDARY), STACK_BOUNDARY);\n-      if (alignment != abi_break)\n-\tinform (input_location, \"parameter passing for argument of type \"\n-\t\t\"%qT changed in GCC 9.1\", type);\n-    }\n   return alignment;\n }\n \n@@ -19706,8 +19792,10 @@ aarch64_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p,\n   size = int_size_in_bytes (type);\n \n   unsigned int abi_break;\n+  unsigned int abi_break_packed;\n   align\n-    = aarch64_function_arg_alignment (mode, type, &abi_break) / BITS_PER_UNIT;\n+    = aarch64_function_arg_alignment (mode, type, &abi_break, &abi_break_packed)\n+    / BITS_PER_UNIT;\n \n   dw_align = false;\n   adjust = 0;\n@@ -19750,6 +19838,10 @@ aarch64_gimplify_va_arg_expr (tree valist, tree type, gimple_seq *pre_p,\n       rsize = ROUND_UP (size, UNITS_PER_WORD);\n       nregs = rsize / UNITS_PER_WORD;\n \n+      if (align <= 8 && abi_break_packed && warn_psabi)\n+\tinform (input_location, \"parameter passing for argument of type \"\n+\t\t\"%qT changed in GCC 13.1\", type);\n+\n       if (align > 8)\n \t{\n \t  if (abi_break && warn_psabi)"}, {"sha": "443cd458b4c0ae7915ac4d12aee88cb8e2aa5840", "filename": "gcc/testsuite/g++.target/aarch64/bitfield-abi-warning-align16-O2-extra.C", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align16-O2-extra.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align16-O2-extra.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align16-O2-extra.C?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -7,33 +7,33 @@\n #include \"bitfield-abi-warning.h\"\n \n /* In f1, f2, f4, f8, f16, f16p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 12 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 12 } } */\n /* In fp, f1p, f2p, f4p, f8p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 } } */\n \n /* Bitfield parameter in registers.  */\n /* { dg-note {parameter passing for argument of type 'S1' changed in GCC 9.1} \"\" { target *-*-* } 47 } f1 */\n /* { dg-note {parameter passing for argument of type 'S2' changed in GCC 9.1} \"\" { target *-*-* } 48 } f2 */\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\" { target *-*-* } 49 } f4 */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\" { target *-*-* } 50 } f8 */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 53 }  fp */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 54 } f1p */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 55 } f2p */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 56 } f4p */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 57 } f8p */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 53 }  fp */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 54 } f1p */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 55 } f2p */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 56 } f4p */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 57 } f8p */\n \n /* Bitfield call argument in registers.  */\n /* { dg-note {parameter passing for argument of type 'S1' changed in GCC 9.1} \"\"  { target *-*-* } 60 } g1 */\n /* { dg-note {parameter passing for argument of type 'S2' changed in GCC 9.1} \"\"  { target *-*-* } 61 } g2 */\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\"  { target *-*-* } 62 } g4 */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\"  { target *-*-* } 63 } g8 */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 66 }  gp */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 67 } g1p */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 68 } g2p */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 69 } g4p */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 70 } g8p */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 66 }  gp */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 67 } g1p */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 68 } g2p */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 69 } g4p */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 70 } g8p */\n \n \n /* Bitfield parameter in stack.  */\n@@ -42,23 +42,23 @@\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\" { target *-*-* } 76 } f4_stack */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\" { target *-*-* } 77 } f8_stack */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 80 }  fp_stack */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 81 } f1p_stack */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 82 } f2p_stack */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 83 } f4p_stack */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 84 } f8p_stack */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 80 }  fp_stack */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 81 } f1p_stack */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 82 } f2p_stack */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 83 } f4p_stack */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 84 } f8p_stack */\n \n /* Bitfield call argument in stack.  */\n /* { dg-note {parameter passing for argument of type 'S1' changed in GCC 9.1} \"\"  { target *-*-* } 87 } g1_stack */\n /* { dg-note {parameter passing for argument of type 'S2' changed in GCC 9.1} \"\"  { target *-*-* } 88 } g2_stack */\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\"  { target *-*-* } 89 } g4_stack */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\"  { target *-*-* } 90 } g8_stack */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 93 }  gp_stack */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 94 } g1p_stack */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 95 } g2p_stack */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 96 } g4p_stack */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 97 } g8p_stack */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 93 }  gp_stack */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 94 } g1p_stack */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 95 } g2p_stack */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 96 } g4p_stack */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 97 } g8p_stack */\n \n \n /* Bitfield parameter in stdarg.  */\n@@ -67,20 +67,20 @@\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\" { target *-*-* } 103 } f4_stdarg */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\" { target *-*-* } 104 } f8_stdarg */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 107 }  fp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 108 } f1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 109 } f2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 110 } f4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 111 } f8p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 107 }  fp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 108 } f1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 109 } f2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 110 } f4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 111 } f8p_stdarg */\n \n /* Bitfield call argument in stdarg.  */\n /* { dg-note {parameter passing for argument of type 'S1' changed in GCC 9.1} \"\"  { target *-*-* } 114 } g1_stdarg */\n /* { dg-note {parameter passing for argument of type 'S2' changed in GCC 9.1} \"\"  { target *-*-* } 115 } g2_stdarg */\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\"  { target *-*-* } 116 } g4_stdarg */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\"  { target *-*-* } 117 } g8_stdarg */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 120 }  gp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 121 } g1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 122 } g2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 123 } g4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 124 } g8p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 120 }  gp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 121 } g1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 122 } g2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 123 } g4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 124 } g8p_stdarg */"}, {"sha": "76a7e3d0ad4b98a492545b8d42d412517d76104b", "filename": "gcc/testsuite/g++.target/aarch64/bitfield-abi-warning-align16-O2.C", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align16-O2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align16-O2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align16-O2.C?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -7,25 +7,19 @@\n #include \"bitfield-abi-warning.h\"\n \n /* In f1, f2, f4, f8, f16, f16p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 12 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 12 } } */\n /* In fp, f1p, f2p, f4p, f8p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 } } */\n \n /* Bitfield parameter in registers.  */\n /* { dg-note {parameter passing for argument of type 'S1' changed in GCC 9.1} \"\" { target *-*-* } 47 } f1 */\n /* { dg-note {parameter passing for argument of type 'S2' changed in GCC 9.1} \"\" { target *-*-* } 48 } f2 */\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\" { target *-*-* } 49 } f4 */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\" { target *-*-* } 50 } f8 */\n \n-/* No change in parameter passing in GCC 9.1 for lines 53-57 (fp, f1p, f2p,\n-   f4p, f8p) (because the argument fits in a single register).  Should not\n-   warn, but aarch64_function_arg_boundary would need to take the argument size\n-   into account as well as whether it's passed via registers or the stack.  */\n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 53 }  fp */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 54 } f1p */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 55 } f2p */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 56 } f4p */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 57 } f8p */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 53-57 (fp,\n+   f1p, f2p, f4p, f8p) because the argument fits in a single register.\n+   No warning expected.  */\n \n /* Bitfield call argument in registers.  */\n /* { dg-note {parameter passing for argument of type 'S1' changed in GCC 9.1} \"\"  { target *-*-* } 60 } g1 */\n@@ -43,23 +37,23 @@\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\" { target *-*-* } 76 } f4_stack */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\" { target *-*-* } 77 } f8_stack */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 80 }  fp_stack */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 81 } f1p_stack */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 82 } f2p_stack */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 83 } f4p_stack */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 84 } f8p_stack */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 80 }  fp_stack */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 81 } f1p_stack */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 82 } f2p_stack */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 83 } f4p_stack */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 84 } f8p_stack */\n \n /* Bitfield call argument in stack.  */\n /* { dg-note {parameter passing for argument of type 'S1' changed in GCC 9.1} \"\"  { target *-*-* } 87 } g1_stack */\n /* { dg-note {parameter passing for argument of type 'S2' changed in GCC 9.1} \"\"  { target *-*-* } 88 } g2_stack */\n /* { dg-note {parameter passing for argument of type 'S4' changed in GCC 9.1} \"\"  { target *-*-* } 89 } g4_stack */\n /* { dg-note {parameter passing for argument of type 'S8' changed in GCC 9.1} \"\"  { target *-*-* } 90 } g8_stack */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 93 }  gp_stack */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 94 } g1p_stack */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 95 } g2p_stack */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 96 } g4p_stack */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 97 } g8p_stack */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 93 }  gp_stack */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 94 } g1p_stack */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 95 } g2p_stack */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 96 } g4p_stack */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 97 } g8p_stack */\n \n \n /* Bitfield parameter in stdarg.  */\n@@ -71,11 +65,11 @@\n /* Parameter passing for these should not have changed in GCC 9.1 (PR 105549).\n    Fortunately we warn. Note the discrepancy with lines 120-124 below: we warn\n    in the callee, but not in the caller.  */\n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1} \"\" { target *-*-* } 107 }  fp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 108 } f1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 109 } f2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 110 } f4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 111 } f8p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1} \"\" { target *-*-* } 107 }  fp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 108 } f1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 109 } f2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 110 } f4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 111 } f8p_stdarg */\n \n /* Bitfield call argument in stdarg.  */\n /* { dg-note {parameter passing for argument of type 'S1' changed in GCC 9.1} \"\"  { target *-*-* } 114 } g1_stdarg */"}, {"sha": "6f8f54f41ff080672e10e18188b371fc88cc0694", "filename": "gcc/testsuite/g++.target/aarch64/bitfield-abi-warning-align32-O2-extra.C", "status": "modified", "additions": 59, "deletions": 72, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align32-O2-extra.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align32-O2-extra.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align32-O2-extra.C?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -11,109 +11,96 @@\n /* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[x1\\\\\\]\" 10 } } */\n \n /* In fp, f1p, f2p, f4p, f8p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 } } */\n \n /* In f16p (and stdarg version):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 2 } } */\n \n-/* In f1_stack, f2_stack, f4_stack, f8_stack, f16_stack, f8p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 8\\\\\\]\" 6 { xfail *-*-* } } } */\n-\n-/* In fp_stack, f1p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldrb\\tw0, \\\\\\[sp, 8\\\\\\]\" 2 { xfail *-*-* } } } */\n-\n-/* In f2p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldrh\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 { xfail *-*-* } } } */\n-\n-/* In f4p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* In f1_stack, f2_stack, f4_stack, f8_stack, f16_stack, fp_stack,\n+   f1p_stack, f2p_stack, f4p_stack, f8p_stack:  */\n+/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 8\\\\\\]\" 10 } } */\n \n /* In f16p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[sp, 16\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 16\\\\\\]\" 1 } } */\n \n /* Bitfield parameter in registers.  */\n-/* No change in parameter passing in GCC 9.1 for lines 47-51 (f1, f2, f4, f8, f16)\n-   because the overall alignment is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 47-51 (f1,\n+   f2, f4, f8, f16) because the overall alignment is > 16.  No warning\n+   expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 53-57 (fp, f1p, f2p,\n-   f4p, f8p) because the argument fits in a single register.  Should not warn,\n-   but aarch64_function_arg_boundary would need to take the argument size into\n-   account as well as whether it's passed via registers or the stack.  */\n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1}  \"\" { target *-*-* } 53 } fp */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 54 } f1p */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 55 } f2p */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 56 } f4p */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 57 } f8p */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 53-57 (fp,\n+   f1p, f2p, f4p, f8p) because the alignment that GCC 9.1 calculated for the\n+   underlying type was 32 bytes (above the maximum expected of 16).  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning since GCC 11 (was OK with GCC 9).  */\n-/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 58 } f16p */\n+/* Changed again in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 13.1} \"\" { target *-*-* } 58 } f16p */\n \n \n /* Bitfield call argument in registers.  */\n-/* No change in parameter passing in GCC 9.1 for lines 60-64 (g1, g2, g4, g8, g16)\n-   because the overall alignment is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 60-64 (g1,\n+   g2, g4, g8, g16) because the overall alignment is > 16.  No warning\n+   expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 66-70 (gp, g1p, g2p,\n-   g4p, g8p), no warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 66-70 (gp,\n+   g1p, g2p, g4p, g8p), no warning expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning.  */\n-/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 71 } g16p */\n+/* Changed again in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 13.1} \"\" { target *-*-* } 71 } g16p */\n \n \n /* Bitfield parameter in stack.  */\n-/* No change in parameter passing in GCC 9.1 for lines 74-78 (f1_stack,\n-   f2_stack, f4_stack, f8_stack, f16_stack) because the overall alignment is >\n-   16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 74-78\n+   (f1_stack, f2_stack, f4_stack, f8_stack, f16_stack) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* Changed in GCC 9.1.  */\n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1}  \"\" { target *-*-* } 80 } fp_stack */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 81 } f1p_stack */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 82 } f2p_stack */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 83 } f4p_stack */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 84 } f8p_stack */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1}  \"\" { target *-*-* } 80 } fp_stack */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 81 } f1p_stack */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 82 } f2p_stack */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 83 } f4p_stack */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 84 } f8p_stack */\n \n-/* No change in parameter passing in GCC 9.1 for line 85 (f16p_stack) because\n-   the overall alignment is >= 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 85\n+   (f16p_stack).  No warning expected.  */\n \n \n /* Bitfield call argument in stack.  */\n-/* No change in parameter passing in GCC 9.1 for lines 87-91 (g1_stack,\n-   g2_stack, g4_stack, g8_stack, g16_stack) because the overall alignment is >\n-   16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC13.1 for lines 87-91\n+   (g1_stack, g2_stack, g4_stack, g8_stack, g16_stack) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1}  \"\" { target *-*-* } 93 } gp_stack */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 94 } g1p_stack */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 95 } g2p_stack */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 96 } g4p_stack */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 97 } g8p_stack */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1}  \"\" { target *-*-* } 93 } gp_stack */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 94 } g1p_stack */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 95 } g2p_stack */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 96 } g4p_stack */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 97 } g8p_stack */\n \n \n-/* No change in parameter passing in GCC 9.1 for line 98 (g16p_stack).  No\n-   warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 98\n+   (g16p_stack).  No warning expected.  */\n \n \n /* Bitfield parameter in stdarg.  */\n-/* No change in parameter passing in GCC 9.1 for lines 101-105 (f1_stdarg,\n-   f2_stdarg, f4_stdarg, f8_stdarg, f16_stdarg) because the overall alignment\n-   is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 101-105\n+   (f1_stdarg, f2_stdarg, f4_stdarg, f8_stdarg, f16_stdarg) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1}   \"\" { target *-*-* } 107 } fp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1}  \"\" { target *-*-* } 108 } f1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1}  \"\" { target *-*-* } 109 } f2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1}  \"\" { target *-*-* } 110 } f4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1}  \"\" { target *-*-* } 111 } f8p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1}   \"\" { target *-*-* } 107 } fp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1}  \"\" { target *-*-* } 108 } f1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1}  \"\" { target *-*-* } 109 } f2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1}  \"\" { target *-*-* } 110 } f4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1}  \"\" { target *-*-* } 111 } f8p_stdarg */\n \n-/* No change in parameter passing in GCC 9.1 for line 112 (f16p_stdarg).\n-   Should not warn.  */\n-/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 9.1} \"\" { target *-*-* } 112 } f16p_stdarg */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 112 (f16p_stdarg).\n+   No warning expected.  */\n \n /* Bitfield call argument in stdarg.  */\n-/* No change in parameter passing in GCC 9.1 for lines 114-118 (g1_stdarg,\n-   g2_stdarg, g4_stdarg, g8_stdarg, g16_stdarg) because the overall alignment\n-   is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 114-118\n+   (g1_stdarg, g2_stdarg, g4_stdarg, g8_stdarg, g16_stdarg) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 120-124 (gp_stdarg,\n-   g1p_stdarg, g2p_stdarg, g4p_stdarg, g8p_stdarg), no warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 120-124\n+   (gp_stdarg, g1p_stdarg, g2p_stdarg, g4p_stdarg, g8p_stdarg), no warning\n+   expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning.  */\n-/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 125 } g16p_stdarg */\n+/* Changed again in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 13.1} \"\" { target *-*-* } 125 } g16p_stdarg */"}, {"sha": "6b8ad5fbea186ffded4c4ffe24b47b41b7926032", "filename": "gcc/testsuite/g++.target/aarch64/bitfield-abi-warning-align32-O2.C", "status": "modified", "additions": 63, "deletions": 69, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align32-O2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align32-O2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.target%2Faarch64%2Fbitfield-abi-warning-align32-O2.C?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -10,110 +10,104 @@\n /* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[x1\\\\\\]\" 10 } } */\n \n /* In fp, f1p, f2p, f4p, f8p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 } } */\n \n /* In f16p (and stdarg version):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 2 } } */\n \n /* In f1_stack, f2_stack, f4_stack, f8_stack, f16_stack, f8p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 8\\\\\\]\" 6 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 8\\\\\\]\" 6 } } */\n \n /* In fp_stack, f1p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldrb\\tw0, \\\\\\[sp, 8\\\\\\]\" 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldrb\\tw0, \\\\\\[sp, 8\\\\\\]\" 2 } } */\n \n /* In f2p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldrh\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldrh\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 } } */\n \n /* In f4p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 } } */\n \n /* In f16p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[sp, 16\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[sp, 16\\\\\\]\" 1 } } */\n \n /* Bitfield parameter in registers.  */\n-/* No change in parameter passing in GCC 9.1 for lines 47-51 (f1, f2, f4, f8, f16)\n-   because the overall alignment is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 47-51 (f1,\n+   f2, f4, f8, f16) because the overall alignment is > 16.  No warning\n+   expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 53-57 (fp, f1p, f2p,\n-   f4p, f8p) because the argument fits in a single register.  Should not warn,\n-   but aarch64_function_arg_boundary would need to take the argument size into\n-   account as well as whether it's passed via registers or the stack.  */\n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1}  \"\" { target *-*-* } 53 } fp */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 54 } f1p */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 55 } f2p */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 56 } f4p */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 57 } f8p */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 53-57 (fp,\n+   f1p, f2p, f4p, f8p) because the argument fits in a single register.\n+   No warning expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning since GCC 11 (was OK with GCC 9).  */\n-/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 58 } f16p */\n+/* Changes in GCC 13.1, we restore the same codegen as before GCC 9.1 .  */\n+/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 13.1} \"\" { target *-*-* } 58 } f16p */\n \n \n /* Bitfield call argument in registers.  */\n-/* No change in parameter passing in GCC 9.1 for lines 60-64 (g1, g2, g4, g8, g16)\n-   because the overall alignment is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 60-64 (g1,\n+   g2, g4, g8, g16) because the overall alignment is > 16.  No warning\n+   expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 66-70 (gp, g1p, g2p,\n-   g4p, g8p), no warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 66-70 (gp,\n+   g1p, g2p, g4p, g8p), no warning expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning.  */\n-/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 71 } g16p */\n+/* Changed in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 13.1} \"\" { target *-*-* } 71 } g16p */\n \n \n /* Bitfield parameter in stack.  */\n-/* No change in parameter passing in GCC 9.1 for lines 74-78 (f1_stack,\n-   f2_stack, f4_stack, f8_stack, f16_stack) because the overall alignment is >\n-   16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 74-78\n+   (f1_stack, f2_stack, f4_stack, f8_stack, f16_stack) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1}  \"\" { target *-*-* } 80 } fp_stack */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 81 } f1p_stack */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 82 } f2p_stack */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 83 } f4p_stack */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 84 } f8p_stack */\n+/* Changed in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1}  \"\" { target *-*-* } 80 } fp_stack */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 81 } f1p_stack */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 82 } f2p_stack */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 83 } f4p_stack */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 84 } f8p_stack */\n \n-/* No change in parameter passing in GCC 9.1 for line 85 (f16p_stack) because\n-   the overall alignment is >= 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 85\n+   (f16p_stack).  No warning expected.  */\n \n /* Bitfield call argument in stack.  */\n-/* No change in parameter passing in GCC 9.1 for lines 87-91 (g1_stack,\n-   g2_stack, g4_stack, g8_stack, g16_stack) because the overall alignment is >\n-   16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 87-91\n+   (g1_stack, g2_stack, g4_stack, g8_stack, g16_stack) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1}  \"\" { target *-*-* } 93 } gp_stack */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1} \"\" { target *-*-* } 94 } g1p_stack */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1} \"\" { target *-*-* } 95 } g2p_stack */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1} \"\" { target *-*-* } 96 } g4p_stack */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1} \"\" { target *-*-* } 97 } g8p_stack */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1}  \"\" { target *-*-* } 93 } gp_stack */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1} \"\" { target *-*-* } 94 } g1p_stack */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1} \"\" { target *-*-* } 95 } g2p_stack */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1} \"\" { target *-*-* } 96 } g4p_stack */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1} \"\" { target *-*-* } 97 } g8p_stack */\n \n \n-/* No change in parameter passing in GCC 9.1 for line 98 (g16p_stack).  No\n-   warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 98\n+   (g16p_stack).  No warning expected.  */\n \n \n /* Bitfield parameter in stdarg.  */\n-/* No change in parameter passing in GCC 9.1 for lines 101-105 (f1_stdarg,\n-   f2_stdarg, f4_stdarg, f8_stdarg, f16_stdarg) because the overall alignment\n-   is > 16.  No warning expected.  */\n-\n-/* Parameter passing for these should not have changed in GCC 9.1 (PR 105549).\n-   Fortunately we warn. Note the discrepancy with lines 120-124 below: we warn\n-   in the callee, but not in the caller.  */\n-/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 9.1}   \"\" { target *-*-* } 107 } fp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 9.1}  \"\" { target *-*-* } 108 } f1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 9.1}  \"\" { target *-*-* } 109 } f2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 9.1}  \"\" { target *-*-* } 110 } f4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 9.1}  \"\" { target *-*-* } 111 } f8p_stdarg */\n-\n-/* No change in parameter passing in GCC 9.1 for line 112 (f16p_stdarg).\n-   Should not warn.  */\n-/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 9.1} \"\" { target *-*-* } 112 } f16p_stdarg */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 101-105\n+   (f1_stdarg, f2_stdarg, f4_stdarg, f8_stdarg, f16_stdarg) because the overall\n+   alignment is > 16.  No warning expected.  */\n+\n+/* Changed in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'Sp' changed in GCC 13.1}   \"\" { target *-*-* } 107 } fp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S1p' changed in GCC 13.1}  \"\" { target *-*-* } 108 } f1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S2p' changed in GCC 13.1}  \"\" { target *-*-* } 109 } f2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S4p' changed in GCC 13.1}  \"\" { target *-*-* } 110 } f4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'S8p' changed in GCC 13.1}  \"\" { target *-*-* } 111 } f8p_stdarg */\n+\n+/* No change for line 112 (f16p_stdarg), no warning.  */\n \n /* Bitfield call argument in stdarg.  */\n-/* No change in parameter passing in GCC 9.1 for lines 114-118 (g1_stdarg,\n-   g2_stdarg, g4_stdarg, g8_stdarg, g16_stdarg) because the overall alignment\n-   is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 114-118\n+   (g1_stdarg, g2_stdarg, g4_stdarg, g8_stdarg, g16_stdarg) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 120-124 (gp_stdarg,\n-   g1p_stdarg, g2p_stdarg, g4p_stdarg, g8p_stdarg), no warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 120-124\n+   (gp_stdarg, g1p_stdarg, g2p_stdarg, g4p_stdarg, g8p_stdarg), no warning\n+   expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning.  */\n-/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 125 } g16p_stdarg */\n+/* Changed in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'S16p' changed in GCC 13.1} \"\" { target *-*-* } 125 } g16p_stdarg */"}, {"sha": "24895c3ab48309b601f6f22c176f1e52350c2257", "filename": "gcc/testsuite/gcc.target/aarch64/aapcs64/va_arg-17.c", "status": "added", "additions": 105, "deletions": 0, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Faapcs64%2Fva_arg-17.c?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -0,0 +1,105 @@\n+/* Test AAPCS64 layout and __builtin_va_arg.\n+\n+   This test covers a corner case where a composite type parameter fits in one\n+   register: we do not need a double-word alignment when accessing it in the\n+   va_arg stack area.  */\n+\n+/* { dg-do run { target aarch64*-*-* } } */\n+\n+#ifndef IN_FRAMEWORK\n+#define AAPCS64_TEST_STDARG\n+#define TESTFILE \"va_arg-17.c\"\n+#include \"type-def.h\"\n+\n+enum E6 { e6_0, e6_1, e6_2, e6_3, e6_65533 = 65533, e6_65534, e6_65535 };\n+typedef enum E6 Tal16E6 __attribute__((aligned (16)));\n+typedef unsigned int Tuint;\n+\n+int fails;\n+\n+union S2844 {\n+  Tuint a:((((10) - 1) & 31) + 1);\n+  Tal16E6 __attribute__((aligned (2), packed)) b:31;\n+  struct{}c[0];\n+} ;\n+union S2844 s2844;\n+union S2844 a2844[5];\n+\n+#define HAS_DATA_INIT_FUNC\n+void init_data ()\n+{\n+  memset (&s2844, '\\0', sizeof (s2844));\n+  memset (a2844, '\\0', sizeof (a2844));\n+  s2844.a = 799U;\n+  a2844[2].a = 586U;\n+}\n+\n+#include \"abitest.h\"\n+#else\n+  ARG       (int          , 1        , W0 , LAST_NAMED_ARG_ID)\n+  DOTS\n+  ANON_PROMOTED  (float   , 1.0f, double, 1.0, D0, 1)\n+  ANON      (union S2844  , s2844    , X1 , 2)\n+  ANON      (long long    , 2LL      , X2 , 3)\n+  ANON      (union  S2844 , a2844[2] , X3 , 4)\n+  LAST_ANON (union  S2844 , a2844[2] , X4 , 5)\n+#endif\n+\n+#if 0\n+  /* This test is derived from a case generated by struct-layout-1.exp:  */\n+\n+enum E6 { e6_0, e6_1, e6_2, e6_3, e6_65533 = 65533, e6_65534, e6_65535 };\n+typedef enum E6 Tal16E6 __attribute__((aligned (16)));\n+typedef unsigned int Tuint;\n+\n+int fails;\n+\n+union S2844 {\n+  Tuint a:((((10) - 1) & 31) + 1);\n+  Tal16E6 __attribute__((aligned (2), packed)) b:31;\n+  struct{}c[0];\n+} ;\n+union S2844 s2844;\n+union S2844 a2844[5];\n+\n+typedef __builtin_va_list __gnuc_va_list;\n+typedef __gnuc_va_list va_list;\n+\n+void check2844va (int z, ...) {\n+  union S2844 arg, *p;\n+  va_list ap;\n+\n+  __builtin_va_start(ap,z);\n+  if (__builtin_va_arg(ap,double) != 1.0)\n+    printf (\"fail %d.%d\\n\", 2844, 0), ++fails;\n+\n+  p = &s2844;\n+  arg = __builtin_va_arg(ap,union S2844);  /* This would fail.  */\n+  if (p->a != arg.a)\n+    printf (\"fail %d.%d\\n\", 2844, 1), ++fails;\n+\n+  if (__builtin_va_arg(ap,long long) != 3LL)\n+    printf (\"fail %d.%d\\n\", 2844, 2), ++fails;\n+\n+  p = &a2844[2];\n+  arg = __builtin_va_arg(ap,union S2844);  /* This would fail.  */\n+  if (p->a != arg.a)\n+    printf (\"fail %d.%d\\n\", 2844, 3), ++fails;\n+\n+  arg = __builtin_va_arg(ap,union S2844);  /* This would fail.  */\n+  if (p->a != arg.a)\n+    printf (\"fail %d.%d\\n\", 2844, 4), ++fails;\n+\n+  __builtin_va_end(ap);\n+}\n+\n+int main (void) {\n+  int i, j;\n+  memset (&s2844, '\\0', sizeof (s2844));\n+  memset (a2844, '\\0', sizeof (a2844));\n+  s2844.a = 799U;\n+  a2844[2].a = 586U;\n+  check2844va (1, 1.0, s2844, 2LL, a2844[2], a2844[2]);\n+  exit (fails != 0);\n+}\n+#endif /* 0 */"}, {"sha": "f248a12950980762f4a6f38b45054378c2da1b9f", "filename": "gcc/testsuite/gcc.target/aarch64/bitfield-abi-warning-align16-O2-extra.c", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align16-O2-extra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align16-O2-extra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align16-O2-extra.c?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -7,33 +7,33 @@\n #include \"bitfield-abi-warning.h\"\n \n /* In f1, f2, f4, f8, f16, f16p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 12 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 12 } } */\n /* In fp, f1p, f2p, f4p, f8p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 } } */\n \n /* Bitfield parameter in registers.  */\n /* { dg-note {parameter passing for argument of type 'struct S1' changed in GCC 9.1} \"\" { target *-*-* } 47 } f1 */\n /* { dg-note {parameter passing for argument of type 'struct S2' changed in GCC 9.1} \"\" { target *-*-* } 48 } f2 */\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\" { target *-*-* } 49 } f4 */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\" { target *-*-* } 50 } f8 */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 53 }  fp */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 54 } f1p */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 55 } f2p */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 56 } f4p */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 57 } f8p */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 53 }  fp */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 54 } f1p */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 55 } f2p */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 56 } f4p */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 57 } f8p */\n \n /* Bitfield call argument in registers.  */\n /* { dg-note {parameter passing for argument of type 'struct S1' changed in GCC 9.1} \"\"  { target *-*-* } 60 } g1 */\n /* { dg-note {parameter passing for argument of type 'struct S2' changed in GCC 9.1} \"\"  { target *-*-* } 61 } g2 */\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\"  { target *-*-* } 62 } g4 */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\"  { target *-*-* } 63 } g8 */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 66 }  gp */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 67 } g1p */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 68 } g2p */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 69 } g4p */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 70 } g8p */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 66 }  gp */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 67 } g1p */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 68 } g2p */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 69 } g4p */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 70 } g8p */\n \n \n /* Bitfield parameter in stack.  */\n@@ -42,23 +42,23 @@\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\" { target *-*-* } 76 } f4_stack */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\" { target *-*-* } 77 } f8_stack */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 80 }  fp_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 81 } f1p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 82 } f2p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 83 } f4p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 84 } f8p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 80 }  fp_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 81 } f1p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 82 } f2p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 83 } f4p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 84 } f8p_stack */\n \n /* Bitfield call argument in stack.  */\n /* { dg-note {parameter passing for argument of type 'struct S1' changed in GCC 9.1} \"\"  { target *-*-* } 87 } g1_stack */\n /* { dg-note {parameter passing for argument of type 'struct S2' changed in GCC 9.1} \"\"  { target *-*-* } 88 } g2_stack */\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\"  { target *-*-* } 89 } g4_stack */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\"  { target *-*-* } 90 } g8_stack */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 93 }  gp_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 94 } g1p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 95 } g2p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 96 } g4p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 97 } g8p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 93 }  gp_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 94 } g1p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 95 } g2p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 96 } g4p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 97 } g8p_stack */\n \n \n /* Bitfield parameter in stdarg.  */\n@@ -67,20 +67,20 @@\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\" { target *-*-* } 103 } f4_stdarg */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\" { target *-*-* } 104 } f8_stdarg */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 107 }  fp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 108 } f1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 109 } f2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 110 } f4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 111 } f8p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 107 }  fp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 108 } f1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 109 } f2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 110 } f4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 111 } f8p_stdarg */\n \n /* Bitfield call argument in stdarg.  */\n /* { dg-note {parameter passing for argument of type 'struct S1' changed in GCC 9.1} \"\"  { target *-*-* } 114 } g1_stdarg */\n /* { dg-note {parameter passing for argument of type 'struct S2' changed in GCC 9.1} \"\"  { target *-*-* } 115 } g2_stdarg */\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\"  { target *-*-* } 116 } g4_stdarg */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\"  { target *-*-* } 117 } g8_stdarg */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 120 }  gp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 121 } g1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 122 } g2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 123 } g4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 124 } g8p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 120 }  gp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 121 } g1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 122 } g2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 123 } g4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 124 } g8p_stdarg */"}, {"sha": "22ee5ec4c92314ec1ac5a6bd0ba608fe35841b8b", "filename": "gcc/testsuite/gcc.target/aarch64/bitfield-abi-warning-align16-O2.c", "status": "modified", "additions": 20, "deletions": 26, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align16-O2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align16-O2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align16-O2.c?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -7,25 +7,19 @@\n #include \"bitfield-abi-warning.h\"\n \n /* In f1, f2, f4, f8, f16, f16p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 12 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 12 } } */\n /* In fp, f1p, f2p, f4p, f8p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 } } */\n \n /* Bitfield parameter in registers.  */\n /* { dg-note {parameter passing for argument of type 'struct S1' changed in GCC 9.1} \"\" { target *-*-* } 47 } f1 */\n /* { dg-note {parameter passing for argument of type 'struct S2' changed in GCC 9.1} \"\" { target *-*-* } 48 } f2 */\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\" { target *-*-* } 49 } f4 */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\" { target *-*-* } 50 } f8 */\n \n-/* No change in parameter passing in GCC 9.1 for lines 53-57 (fp, f1p, f2p,\n-   f4p, f8p) (because the argument fits in a single register).  Should not\n-   warn, but aarch64_function_arg_boundary would need to take the argument size\n-   into account as well as whether it's passed via registers or the stack.  */\n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 53 }  fp */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 54 } f1p */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 55 } f2p */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 56 } f4p */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 57 } f8p */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 53-57 (fp,\n+   f1p, f2p, f4p, f8p) because the argument fits in a single register.\n+   No warning expected.  */\n \n /* Bitfield call argument in registers.  */\n /* { dg-note {parameter passing for argument of type 'struct S1' changed in GCC 9.1} \"\"  { target *-*-* } 60 } g1 */\n@@ -43,23 +37,23 @@\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\" { target *-*-* } 76 } f4_stack */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\" { target *-*-* } 77 } f8_stack */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 80 }  fp_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 81 } f1p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 82 } f2p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 83 } f4p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 84 } f8p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 80 }  fp_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 81 } f1p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 82 } f2p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 83 } f4p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 84 } f8p_stack */\n \n /* Bitfield call argument in stack.  */\n /* { dg-note {parameter passing for argument of type 'struct S1' changed in GCC 9.1} \"\"  { target *-*-* } 87 } g1_stack */\n /* { dg-note {parameter passing for argument of type 'struct S2' changed in GCC 9.1} \"\"  { target *-*-* } 88 } g2_stack */\n /* { dg-note {parameter passing for argument of type 'struct S4' changed in GCC 9.1} \"\"  { target *-*-* } 89 } g4_stack */\n /* { dg-note {parameter passing for argument of type 'struct S8' changed in GCC 9.1} \"\"  { target *-*-* } 90 } g8_stack */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 93 }  gp_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 94 } g1p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 95 } g2p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 96 } g4p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 97 } g8p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 93 }  gp_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 94 } g1p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 95 } g2p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 96 } g4p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 97 } g8p_stack */\n \n \n /* Bitfield parameter in stdarg.  */\n@@ -71,11 +65,11 @@\n /* Parameter passing for these should not have changed in GCC 9.1 (PR 105549).\n    Fortunately we warn. Note the discrepancy with lines 120-124 below: we warn\n    in the callee, but not in the caller.  */\n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1} \"\" { target *-*-* } 107 }  fp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 108 } f1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 109 } f2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 110 } f4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 111 } f8p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1} \"\" { target *-*-* } 107 }  fp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 108 } f1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 109 } f2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 110 } f4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 111 } f8p_stdarg */\n \n /* Bitfield call argument in stdarg.  */\n /* { dg-note {parameter passing for argument of type 'struct S1' changed in GCC 9.1} \"\"  { target *-*-* } 114 } g1_stdarg */"}, {"sha": "a8a50b35e8efcbd4a4e391001a5e4b45cdf8d0fe", "filename": "gcc/testsuite/gcc.target/aarch64/bitfield-abi-warning-align32-O2-extra.c", "status": "modified", "additions": 59, "deletions": 72, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align32-O2-extra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align32-O2-extra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align32-O2-extra.c?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -11,109 +11,96 @@\n /* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[x1\\\\\\]\" 10 } } */\n \n /* In fp, f1p, f2p, f4p, f8p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 } } */\n \n /* In f16p (and stdarg version):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 2 } } */\n \n-/* In f1_stack, f2_stack, f4_stack, f8_stack, f16_stack, f8p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 8\\\\\\]\" 6 { xfail *-*-* } } } */\n-\n-/* In fp_stack, f1p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldrb\\tw0, \\\\\\[sp, 8\\\\\\]\" 2 { xfail *-*-* } } } */\n-\n-/* In f2p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldrh\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 { xfail *-*-* } } } */\n-\n-/* In f4p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* In f1_stack, f2_stack, f4_stack, f8_stack, f16_stack, fp_stack,\n+   f1p_stack, f2p_stack, f4p_stack, f8p_stack:  */\n+/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 8\\\\\\]\" 10 } } */\n \n /* In f16p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[sp, 16\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 16\\\\\\]\" 1 } } */\n \n /* Bitfield parameter in registers.  */\n-/* No change in parameter passing in GCC 9.1 for lines 47-51 (f1, f2, f4, f8, f16)\n-   because the overall alignment is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 47-51 (f1,\n+   f2, f4, f8, f16) because the overall alignment is > 16.  No warning\n+   expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 53-57 (fp, f1p, f2p,\n-   f4p, f8p) because the argument fits in a single register.  Should not warn,\n-   but aarch64_function_arg_boundary would need to take the argument size into\n-   account as well as whether it's passed via registers or the stack.  */\n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1}  \"\" { target *-*-* } 53 } fp */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 54 } f1p */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 55 } f2p */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 56 } f4p */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 57 } f8p */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 53-57 (fp,\n+   f1p, f2p, f4p, f8p) because the alignment that GCC 9.1 calculated for the\n+   underlying type was 32 bytes (above the maximum expected of 16).  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning since GCC 11 (was OK with GCC 9).  */\n-/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 58 } f16p */\n+/* Changed again in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 13.1} \"\" { target *-*-* } 58 } f16p */\n \n \n /* Bitfield call argument in registers.  */\n-/* No change in parameter passing in GCC 9.1 for lines 60-64 (g1, g2, g4, g8, g16)\n-   because the overall alignment is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 60-64 (g1,\n+   g2, g4, g8, g16) because the overall alignment is > 16.  No warning\n+   expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 66-70 (gp, g1p, g2p,\n-   g4p, g8p), no warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 66-70 (gp,\n+   g1p, g2p, g4p, g8p), no warning expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning.  */\n-/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 71 } g16p */\n+/* Changed again in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 13.1} \"\" { target *-*-* } 71 } g16p */\n \n \n /* Bitfield parameter in stack.  */\n-/* No change in parameter passing in GCC 9.1 for lines 74-78 (f1_stack,\n-   f2_stack, f4_stack, f8_stack, f16_stack) because the overall alignment is >\n-   16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 74-78\n+   (f1_stack, f2_stack, f4_stack, f8_stack, f16_stack) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* Changed in GCC 9.1.  */\n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1}  \"\" { target *-*-* } 80 } fp_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 81 } f1p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 82 } f2p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 83 } f4p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 84 } f8p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1}  \"\" { target *-*-* } 80 } fp_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 81 } f1p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 82 } f2p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 83 } f4p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 84 } f8p_stack */\n \n-/* No change in parameter passing in GCC 9.1 for line 85 (f16p_stack) because\n-   the overall alignment is >= 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 85\n+   (f16p_stack).  No warning expected.  */\n \n \n /* Bitfield call argument in stack.  */\n-/* No change in parameter passing in GCC 9.1 for lines 87-91 (g1_stack,\n-   g2_stack, g4_stack, g8_stack, g16_stack) because the overall alignment is >\n-   16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC13.1 for lines 87-91\n+   (g1_stack, g2_stack, g4_stack, g8_stack, g16_stack) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1}  \"\" { target *-*-* } 93 } gp_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 94 } g1p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 95 } g2p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 96 } g4p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 97 } g8p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1}  \"\" { target *-*-* } 93 } gp_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 94 } g1p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 95 } g2p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 96 } g4p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 97 } g8p_stack */\n \n \n-/* No change in parameter passing in GCC 9.1 for line 98 (g16p_stack).  No\n-   warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 98\n+   (g16p_stack).  No warning expected.  */\n \n \n /* Bitfield parameter in stdarg.  */\n-/* No change in parameter passing in GCC 9.1 for lines 101-105 (f1_stdarg,\n-   f2_stdarg, f4_stdarg, f8_stdarg, f16_stdarg) because the overall alignment\n-   is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 101-105\n+   (f1_stdarg, f2_stdarg, f4_stdarg, f8_stdarg, f16_stdarg) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1}   \"\" { target *-*-* } 107 } fp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1}  \"\" { target *-*-* } 108 } f1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1}  \"\" { target *-*-* } 109 } f2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1}  \"\" { target *-*-* } 110 } f4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1}  \"\" { target *-*-* } 111 } f8p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1}   \"\" { target *-*-* } 107 } fp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1}  \"\" { target *-*-* } 108 } f1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1}  \"\" { target *-*-* } 109 } f2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1}  \"\" { target *-*-* } 110 } f4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1}  \"\" { target *-*-* } 111 } f8p_stdarg */\n \n-/* No change in parameter passing in GCC 9.1 for line 112 (f16p_stdarg).\n-   Should not warn.  */\n-/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 9.1} \"\" { target *-*-* } 112 } f16p_stdarg */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 112 (f16p_stdarg).\n+   No warning expected.  */\n \n /* Bitfield call argument in stdarg.  */\n-/* No change in parameter passing in GCC 9.1 for lines 114-118 (g1_stdarg,\n-   g2_stdarg, g4_stdarg, g8_stdarg, g16_stdarg) because the overall alignment\n-   is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 114-118\n+   (g1_stdarg, g2_stdarg, g4_stdarg, g8_stdarg, g16_stdarg) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 120-124 (gp_stdarg,\n-   g1p_stdarg, g2p_stdarg, g4p_stdarg, g8p_stdarg), no warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 120-124\n+   (gp_stdarg, g1p_stdarg, g2p_stdarg, g4p_stdarg, g8p_stdarg), no warning\n+   expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning.  */\n-/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 125 } g16p_stdarg */\n+/* Changed again in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 13.1} \"\" { target *-*-* } 125 } g16p_stdarg */"}, {"sha": "e872de3dbe0a506798296e5971602b4d7183b4fc", "filename": "gcc/testsuite/gcc.target/aarch64/bitfield-abi-warning-align32-O2.c", "status": "modified", "additions": 63, "deletions": 69, "changes": 132, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align32-O2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align32-O2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fbitfield-abi-warning-align32-O2.c?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -10,110 +10,104 @@\n /* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[x1\\\\\\]\" 10 } } */\n \n /* In fp, f1p, f2p, f4p, f8p (and stdarg versions):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w1, 1\" 10 } } */\n \n /* In f16p (and stdarg version):  */\n-/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"and\\tw0, w2, 1\" 2 } } */\n \n /* In f1_stack, f2_stack, f4_stack, f8_stack, f16_stack, f8p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 8\\\\\\]\" 6 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx\\[0-9\\]+, \\\\\\[sp, 8\\\\\\]\" 6 } } */\n \n /* In fp_stack, f1p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldrb\\tw0, \\\\\\[sp, 8\\\\\\]\" 2 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldrb\\tw0, \\\\\\[sp, 8\\\\\\]\" 2 } } */\n \n /* In f2p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldrh\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldrh\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 } } */\n \n /* In f4p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tw0, \\\\\\[sp, 8\\\\\\]\" 1 } } */\n \n /* In f16p_stack:  */\n-/* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[sp, 16\\\\\\]\" 1 { xfail *-*-* } } } */\n+/* { dg-final { scan-assembler-times \"ldr\\tx0, \\\\\\[sp, 16\\\\\\]\" 1 } } */\n \n /* Bitfield parameter in registers.  */\n-/* No change in parameter passing in GCC 9.1 for lines 47-51 (f1, f2, f4, f8, f16)\n-   because the overall alignment is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 47-51 (f1,\n+   f2, f4, f8, f16) because the overall alignment is > 16.  No warning\n+   expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 53-57 (fp, f1p, f2p,\n-   f4p, f8p) because the argument fits in a single register.  Should not warn,\n-   but aarch64_function_arg_boundary would need to take the argument size into\n-   account as well as whether it's passed via registers or the stack.  */\n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1}  \"\" { target *-*-* } 53 } fp */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 54 } f1p */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 55 } f2p */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 56 } f4p */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 57 } f8p */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 53-57 (fp,\n+   f1p, f2p, f4p, f8p) because the argument fits in a single register.\n+   No warning expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning since GCC 11 (was OK with GCC 9).  */\n-/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 58 } f16p */\n+/* Changes in GCC 13.1, we restore the same codegen as before GCC 9.1 .  */\n+/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 13.1} \"\" { target *-*-* } 58 } f16p */\n \n \n /* Bitfield call argument in registers.  */\n-/* No change in parameter passing in GCC 9.1 for lines 60-64 (g1, g2, g4, g8, g16)\n-   because the overall alignment is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 60-64 (g1,\n+   g2, g4, g8, g16) because the overall alignment is > 16.  No warning\n+   expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 66-70 (gp, g1p, g2p,\n-   g4p, g8p), no warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 66-70 (gp,\n+   g1p, g2p, g4p, g8p), no warning expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning.  */\n-/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 71 } g16p */\n+/* Changed in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 13.1} \"\" { target *-*-* } 71 } g16p */\n \n \n /* Bitfield parameter in stack.  */\n-/* No change in parameter passing in GCC 9.1 for lines 74-78 (f1_stack,\n-   f2_stack, f4_stack, f8_stack, f16_stack) because the overall alignment is >\n-   16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 74-78\n+   (f1_stack, f2_stack, f4_stack, f8_stack, f16_stack) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1}  \"\" { target *-*-* } 80 } fp_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 81 } f1p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 82 } f2p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 83 } f4p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 84 } f8p_stack */\n+/* Changed in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1}  \"\" { target *-*-* } 80 } fp_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 81 } f1p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 82 } f2p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 83 } f4p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 84 } f8p_stack */\n \n-/* No change in parameter passing in GCC 9.1 for line 85 (f16p_stack) because\n-   the overall alignment is >= 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 85\n+   (f16p_stack).  No warning expected.  */\n \n /* Bitfield call argument in stack.  */\n-/* No change in parameter passing in GCC 9.1 for lines 87-91 (g1_stack,\n-   g2_stack, g4_stack, g8_stack, g16_stack) because the overall alignment is >\n-   16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 87-91\n+   (g1_stack, g2_stack, g4_stack, g8_stack, g16_stack) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1}  \"\" { target *-*-* } 93 } gp_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1} \"\" { target *-*-* } 94 } g1p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1} \"\" { target *-*-* } 95 } g2p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1} \"\" { target *-*-* } 96 } g4p_stack */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1} \"\" { target *-*-* } 97 } g8p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1}  \"\" { target *-*-* } 93 } gp_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1} \"\" { target *-*-* } 94 } g1p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1} \"\" { target *-*-* } 95 } g2p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1} \"\" { target *-*-* } 96 } g4p_stack */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1} \"\" { target *-*-* } 97 } g8p_stack */\n \n \n-/* No change in parameter passing in GCC 9.1 for line 98 (g16p_stack).  No\n-   warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for line 98\n+   (g16p_stack).  No warning expected.  */\n \n \n /* Bitfield parameter in stdarg.  */\n-/* No change in parameter passing in GCC 9.1 for lines 101-105 (f1_stdarg,\n-   f2_stdarg, f4_stdarg, f8_stdarg, f16_stdarg) because the overall alignment\n-   is > 16.  No warning expected.  */\n-\n-/* Parameter passing for these should not have changed in GCC 9.1 (PR 105549).\n-   Fortunately we warn. Note the discrepancy with lines 120-124 below: we warn\n-   in the callee, but not in the caller.  */\n-/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 9.1}   \"\" { target *-*-* } 107 } fp_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 9.1}  \"\" { target *-*-* } 108 } f1p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 9.1}  \"\" { target *-*-* } 109 } f2p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 9.1}  \"\" { target *-*-* } 110 } f4p_stdarg */\n-/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 9.1}  \"\" { target *-*-* } 111 } f8p_stdarg */\n-\n-/* No change in parameter passing in GCC 9.1 for line 112 (f16p_stdarg).\n-   Should not warn.  */\n-/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 9.1} \"\" { target *-*-* } 112 } f16p_stdarg */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 101-105\n+   (f1_stdarg, f2_stdarg, f4_stdarg, f8_stdarg, f16_stdarg) because the overall\n+   alignment is > 16.  No warning expected.  */\n+\n+/* Changed in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'struct Sp' changed in GCC 13.1}   \"\" { target *-*-* } 107 } fp_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S1p' changed in GCC 13.1}  \"\" { target *-*-* } 108 } f1p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S2p' changed in GCC 13.1}  \"\" { target *-*-* } 109 } f2p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S4p' changed in GCC 13.1}  \"\" { target *-*-* } 110 } f4p_stdarg */\n+/* { dg-note {parameter passing for argument of type 'struct S8p' changed in GCC 13.1}  \"\" { target *-*-* } 111 } f8p_stdarg */\n+\n+/* No change for line 112 (f16p_stdarg), no warning.  */\n \n /* Bitfield call argument in stdarg.  */\n-/* No change in parameter passing in GCC 9.1 for lines 114-118 (g1_stdarg,\n-   g2_stdarg, g4_stdarg, g8_stdarg, g16_stdarg) because the overall alignment\n-   is > 16.  No warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 114-118\n+   (g1_stdarg, g2_stdarg, g4_stdarg, g8_stdarg, g16_stdarg) because the overall\n+   alignment is > 16.  No warning expected.  */\n \n-/* No change in parameter passing in GCC 9.1 for lines 120-124 (gp_stdarg,\n-   g1p_stdarg, g2p_stdarg, g4p_stdarg, g8p_stdarg), no warning expected.  */\n+/* No change in parameter passing in GCC 9.1 nor GCC 13.1 for lines 120-124\n+   (gp_stdarg, g1p_stdarg, g2p_stdarg, g4p_stdarg, g8p_stdarg), no warning\n+   expected.  */\n \n-/* Changed in GCC 9.1, but we fail to emit a warning.  */\n-/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 9.1} \"\" { xfail *-*-* } 125 } g16p_stdarg */\n+/* Changed in GCC 13.1.  */\n+/* { dg-note {parameter passing for argument of type 'struct S16p' changed in GCC 13.1} \"\" { target *-*-* } 125 } g16p_stdarg */"}, {"sha": "55a91ed6bc48b56eed61d668971e890dbd3250ef", "filename": "gcc/testsuite/gcc.target/aarch64/pr105549.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr105549.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6610daa1cfb75b72500c22ae97988ec2a48b85c6/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr105549.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr105549.c?ref=6610daa1cfb75b72500c22ae97988ec2a48b85c6", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-save-temps\" } */\n+\n+enum e { E1 };\n+typedef enum e e __attribute__((aligned(16)));\n+union u {\n+    __attribute__((aligned(2), packed)) e a : 1;\n+    int x[4];\n+};\n+union u g(int a, union u u2) { return u2; }\n+\n+/* { dg-final { scan-assembler \"stp\\tx1, x2, \\\\\\[sp, 8\\\\\\]\" } } */"}]}