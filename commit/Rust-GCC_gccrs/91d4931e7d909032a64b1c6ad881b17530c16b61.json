{"sha": "91d4931e7d909032a64b1c6ad881b17530c16b61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFkNDkzMWU3ZDkwOTAzMmE2NGIxYzZhZDg4MWIxNzUzMGMxNmI2MQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-03-21T21:29:57Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1993-03-21T21:29:57Z"}, "message": "Fix recent change for prototypes.\n\nFrom-SVN: r3815", "tree": {"sha": "ed11ffd049eebae1e86d27a8a289deac005f3f55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed11ffd049eebae1e86d27a8a289deac005f3f55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91d4931e7d909032a64b1c6ad881b17530c16b61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d4931e7d909032a64b1c6ad881b17530c16b61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91d4931e7d909032a64b1c6ad881b17530c16b61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91d4931e7d909032a64b1c6ad881b17530c16b61/comments", "author": null, "committer": null, "parents": [{"sha": "d632e927760f2fad2c3a0f5072d376beb9e1f701", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d632e927760f2fad2c3a0f5072d376beb9e1f701", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d632e927760f2fad2c3a0f5072d376beb9e1f701"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "5e834dc91e2ac7db2ba9080ac2838bf7956fcfa4", "filename": "gcc/halfpic.h", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91d4931e7d909032a64b1c6ad881b17530c16b61/gcc%2Fhalfpic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91d4931e7d909032a64b1c6ad881b17530c16b61/gcc%2Fhalfpic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhalfpic.h?ref=91d4931e7d909032a64b1c6ad881b17530c16b61", "patch": "@@ -17,6 +17,28 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n+/* Add prototype support.  */\n+#ifndef PROTO\n+#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n+#define PROTO(ARGS) ARGS\n+#else\n+#define PROTO(ARGS) ()\n+#endif\n+#endif\n+\n+#ifndef STDIO_PROTO\n+#ifdef BUFSIZ\n+#define STDIO_PROTO(ARGS) PROTO(ARGS)\n+#else\n+#define STDIO_PROTO(ARGS) ()\n+#endif\n+#endif\n+\n+#if defined (USE_PROTOTYPES) ? USE_PROTOTYPES : defined (__STDC__)\n+union tree_node;\t\t/* forward reference */\n+struct rtx_def;\n+#endif\n+\n /* Declare the variable flag_half_pic as 'int' instead of 'extern\n    int', so that BSS variables are created (even though this is not\n    strict ANSI).  This is because rtl.c now refers to the\n@@ -29,14 +51,14 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n int flag_half_pic;\t\t\t/* Global half-pic flag.  */\n int (*ptr_half_pic_address_p) ();\t/* ptr to half_pic_address_p () */\n \n-extern int  half_pic_number_ptrs;\t/* # distinct pointers found */\n-extern int  half_pic_number_refs;\t/* # half-pic references */\n-extern void half_pic_encode PROTO((tree));\t/* encode whether half-pic */\n-extern void half_pic_declare PROTO((char *));\t/* declare object local */\n-extern void half_pic_init PROTO((void));\t/* half_pic initialization */\n-extern void half_pic_finish PROTO((FILE *));\t/* half_pic termination */\n-extern int  half_pic_address_p PROTO((rtx));\t/* true if an address is half-pic */\n-extern struct rtx_def *half_pic_ptr PROTO((rtx));\t/* return RTX for half-pic pointer */\n+extern int  half_pic_number_ptrs;\t\t\t\t/* # distinct pointers found */\n+extern int  half_pic_number_refs;\t\t\t\t/* # half-pic references */\n+extern void half_pic_encode PROTO((union tree_node *));\t\t/* encode whether half-pic */\n+extern void half_pic_declare PROTO((char *));\t\t\t/* declare object local */\n+extern void half_pic_init PROTO((void));\t\t\t/* half_pic initialization */\n+extern void half_pic_finish STDIO_PROTO((FILE *));\t\t/* half_pic termination */\n+extern int  half_pic_address_p PROTO((struct rtx_def *));\t/* true if an address is half-pic */\n+extern struct rtx_def *half_pic_ptr PROTO((struct rtx_def *));\t/* return RTX for half-pic pointer */\n \n /* Macros to provide access to the half-pic stuff (so they can easily\n    be stubbed out.  */"}]}