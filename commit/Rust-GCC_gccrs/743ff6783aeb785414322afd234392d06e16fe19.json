{"sha": "743ff6783aeb785414322afd234392d06e16fe19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQzZmY2NzgzYWViNzg1NDE0MzIyYWZkMjM0MzkyZDA2ZTE2ZmUxOQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-09-02T17:45:11Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1992-09-02T17:45:11Z"}, "message": "(HANDLE_PRAGMA): Delete.\n\nFrom-SVN: r2033", "tree": {"sha": "090ccfb538551b5eb0b638c030fd4b8c4f52091b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/090ccfb538551b5eb0b638c030fd4b8c4f52091b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/743ff6783aeb785414322afd234392d06e16fe19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743ff6783aeb785414322afd234392d06e16fe19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/743ff6783aeb785414322afd234392d06e16fe19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743ff6783aeb785414322afd234392d06e16fe19/comments", "author": null, "committer": null, "parents": [{"sha": "80d0abe9ad24ace31b3b0163cfd7ca97c0f05f41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d0abe9ad24ace31b3b0163cfd7ca97c0f05f41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d0abe9ad24ace31b3b0163cfd7ca97c0f05f41"}], "stats": {"total": 29, "additions": 0, "deletions": 29}, "files": [{"sha": "2e6df4485bc1490659b57726e2dc54c79a5e7cc0", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743ff6783aeb785414322afd234392d06e16fe19/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743ff6783aeb785414322afd234392d06e16fe19/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=743ff6783aeb785414322afd234392d06e16fe19", "patch": "@@ -152,35 +152,6 @@ do { ASM_OUTPUT_ALIGN ((FILE), 2);\t\t\t\t\t\\\n #define CTORS_SECTION_ASM_OP    \".section\\t\\\".ctors\\\",#alloc\"\n #define DTORS_SECTION_ASM_OP    \".section\\t\\\".dtors\\\",#alloc\"\n \n-/* Code to handle #pragma directives.  The interface is a bit messy,\n-   but there's no simpler way to do this while still using yylex.  */\n-#define HANDLE_PRAGMA(FILE)\t\t\t\t\t\\\n-  do {\t\t\t\t\t\t\t\t\\\n-    while (c == ' ' || c == '\\t')\t\t\t\t\\\n-      c = getc (FILE);\t\t\t\t\t\t\\\n-    if (c == '\\n' || c == EOF)\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-\thandle_pragma_token (0, 0);\t\t\t\t\\\n-\treturn c;\t\t\t\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    ungetc (c, FILE);\t\t\t\t\t\t\\\n-    switch (yylex ())\t\t\t\t\t\t\\\n-      {\t\t\t\t\t\t\t\t\\\n-      case IDENTIFIER:\t\t\t\t\t\t\\\n-      case TYPENAME:\t\t\t\t\t\t\\\n-      case STRING:\t\t\t\t\t\t\\\n-      case CONSTANT:\t\t\t\t\t\t\\\n-\thandle_pragma_token (token_buffer, yylval.ttype);\t\\\n-\tbreak;\t\t\t\t\t\t\t\\\n-      default:\t\t\t\t\t\t\t\\\n-\thandle_pragma_token (token_buffer, 0);\t\t\t\\\n-      }\t\t\t\t\t\t\t\t\\\n-    if (nextchar >= 0)\t\t\t\t\t\t\\\n-      c = nextchar, nextchar = -1;\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\\\n-      c = getc (FILE);\t\t\t\t\t\t\\\n-  } while (1)\n-\n /* If the host and target formats match, output the floats as hex.  */\n #if HOST_FLOAT_FORMAT == TARGET_FLOAT_FORMAT\n #if defined (HOST_WORDS_BIG_ENDIAN) == WORDS_BIG_ENDIAN"}]}