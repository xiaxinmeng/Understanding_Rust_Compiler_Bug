{"sha": "a480e8269bca6bffb4782475d5b5c6ef555ec78b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ4MGU4MjY5YmNhNmJmZmI0NzgyNDc1ZDViNWM2ZWY1NTVlYzc4Yg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2007-09-12T04:34:34Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2007-09-12T04:34:34Z"}, "message": "defaults.h (DWARF2_UNWIND_INFO): Don't define if TARGET_UNWIND_INFO is defined.\n\n2007-09-11  James E. Wilson  <wilson@specifix.com>\n\n\t* defaults.h (DWARF2_UNWIND_INFO): Don't define if\n\tTARGET_UNWIND_INFO is defined.\n\t* config/ia64/ia64.h (INCOMING_RETURN_ADDR_RTX): Delete undef\n\tafter definition.\n\nFrom-SVN: r128409", "tree": {"sha": "4412d3554dfe6acc2883354ecf40c4c63f5e6298", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4412d3554dfe6acc2883354ecf40c4c63f5e6298"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a480e8269bca6bffb4782475d5b5c6ef555ec78b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a480e8269bca6bffb4782475d5b5c6ef555ec78b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a480e8269bca6bffb4782475d5b5c6ef555ec78b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a480e8269bca6bffb4782475d5b5c6ef555ec78b/comments", "author": null, "committer": null, "parents": [{"sha": "6ac9cbc5e873546f17db896f8110367376f69c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ac9cbc5e873546f17db896f8110367376f69c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ac9cbc5e873546f17db896f8110367376f69c52"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "1d83d9d02c5ae6b9ac16c884b001b2e5af8bd096", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a480e8269bca6bffb4782475d5b5c6ef555ec78b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a480e8269bca6bffb4782475d5b5c6ef555ec78b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a480e8269bca6bffb4782475d5b5c6ef555ec78b", "patch": "@@ -1,3 +1,10 @@\n+2007-09-11  James E. Wilson  <wilson@specifix.com>\n+\n+\t* defaults.h (DWARF2_UNWIND_INFO): Don't define if\n+\tTARGET_UNWIND_INFO is defined.\n+\t* config/ia64/ia64.h (INCOMING_RETURN_ADDR_RTX): Delete undef\n+\tafter definition.\n+\n 2007-09-12  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n \t* config/sh/sh.c (calc_live_regs): Use"}, {"sha": "5d32b702538282590f7325cfe7954492f785b98d", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a480e8269bca6bffb4782475d5b5c6ef555ec78b/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a480e8269bca6bffb4782475d5b5c6ef555ec78b/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=a480e8269bca6bffb4782475d5b5c6ef555ec78b", "patch": "@@ -936,18 +936,6 @@ enum reg_class\n    unwind info for C++ EH.  */\n #define INCOMING_RETURN_ADDR_RTX gen_rtx_REG (VOIDmode, BR_REG (0))\n \n-/* ??? This is not defined because of three problems.\n-   1) dwarf2out.c assumes that DWARF_FRAME_RETURN_COLUMN fits in one byte.\n-   The default value is FIRST_PSEUDO_REGISTER which doesn't.  This can be\n-   worked around by setting PC_REGNUM to FR_REG (0) which is an otherwise\n-   unused register number.\n-   2) dwarf2out_frame_debug core dumps while processing prologue insns.  We\n-   need to refine which insns have RTX_FRAME_RELATED_P set and which don't.\n-   3) It isn't possible to turn off EH frame info by defining DWARF2_UNIND_INFO\n-   to zero, despite what the documentation implies, because it is tested in\n-   a few places with #ifdef instead of #if.  */\n-#undef INCOMING_RETURN_ADDR_RTX\n-\n /* A C expression whose value is an integer giving the offset, in bytes, from\n    the value of the stack pointer register to the top of the stack frame at the\n    beginning of any function, before the prologue.  The top of the frame is"}, {"sha": "a217276746c7fdb75cc710c90f63508e4bcd3ba2", "filename": "gcc/defaults.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a480e8269bca6bffb4782475d5b5c6ef555ec78b/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a480e8269bca6bffb4782475d5b5c6ef555ec78b/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=a480e8269bca6bffb4782475d5b5c6ef555ec78b", "patch": "@@ -321,7 +321,8 @@ along with GCC; see the file COPYING3.  If not see\n \n /* If we have a definition of INCOMING_RETURN_ADDR_RTX, assume that\n    the rest of the DWARF 2 frame unwind support is also provided.  */\n-#if !defined (DWARF2_UNWIND_INFO) && defined (INCOMING_RETURN_ADDR_RTX)\n+#if !defined (DWARF2_UNWIND_INFO) && defined (INCOMING_RETURN_ADDR_RTX) \\\n+    && !defined (TARGET_UNWIND_INFO)\n #define DWARF2_UNWIND_INFO 1\n #endif\n "}]}