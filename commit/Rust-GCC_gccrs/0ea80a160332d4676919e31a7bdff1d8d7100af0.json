{"sha": "0ea80a160332d4676919e31a7bdff1d8d7100af0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVhODBhMTYwMzMyZDQ2NzY5MTllMzFhN2JkZmYxZDhkNzEwMGFmMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-05-20T09:35:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-05-20T09:35:44Z"}, "message": "re PR middle-end/48849 (SPEC CPU 2000/2006 failed to build with LTO)\n\n2011-05-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/48849\n\t* gimple.c (gimple_register_canonical_type): Compute TYPE_CANONICAL\n\tof pointer types the same way the middle-end does.\n\nFrom-SVN: r173939", "tree": {"sha": "1ca1ea014fa59c5fb0c6b4ef9a6e23a39a9201f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ca1ea014fa59c5fb0c6b4ef9a6e23a39a9201f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ea80a160332d4676919e31a7bdff1d8d7100af0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea80a160332d4676919e31a7bdff1d8d7100af0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea80a160332d4676919e31a7bdff1d8d7100af0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea80a160332d4676919e31a7bdff1d8d7100af0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fb291a1ea7ed34478ee7a3c3ce7a0bd87915e79e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb291a1ea7ed34478ee7a3c3ce7a0bd87915e79e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb291a1ea7ed34478ee7a3c3ce7a0bd87915e79e"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "3bd18b854b8fe078e4ca6af38c4a305e4f68b2f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea80a160332d4676919e31a7bdff1d8d7100af0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea80a160332d4676919e31a7bdff1d8d7100af0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0ea80a160332d4676919e31a7bdff1d8d7100af0", "patch": "@@ -1,3 +1,9 @@\n+2011-05-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/48849\n+\t* gimple.c (gimple_register_canonical_type): Compute TYPE_CANONICAL\n+\tof pointer types the same way the middle-end does.\n+\n 2011-05-20  Richard Guenther  <rguenther@suse.de>\n \n \t* gimple.c (gimple_register_type_1): Do not fiddle with"}, {"sha": "4c7fbfc8235efb65d431f90e2b5ede7699bd4051", "filename": "gcc/gimple.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea80a160332d4676919e31a7bdff1d8d7100af0/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea80a160332d4676919e31a7bdff1d8d7100af0/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=0ea80a160332d4676919e31a7bdff1d8d7100af0", "patch": "@@ -4801,6 +4801,25 @@ gimple_register_canonical_type (tree t)\n   if (TYPE_CANONICAL (t))\n     return TYPE_CANONICAL (t);\n \n+  /* For pointer and reference types do as the middle-end does - the\n+     canonical type is a pointer to the canonical pointed-to type.  */\n+  if (TREE_CODE (t) == POINTER_TYPE)\n+    {\n+      TYPE_CANONICAL (t)\n+\t  = build_pointer_type_for_mode\n+\t  (gimple_register_canonical_type (TREE_TYPE (t)),\n+\t   TYPE_MODE (t), TYPE_REF_CAN_ALIAS_ALL (t));\n+      return TYPE_CANONICAL (t);\n+    }\n+  else if (TREE_CODE (t) == REFERENCE_TYPE)\n+    {\n+      TYPE_CANONICAL (t)\n+\t  = build_reference_type_for_mode\n+\t  (gimple_register_canonical_type (TREE_TYPE (t)),\n+\t   TYPE_MODE (t), TYPE_REF_CAN_ALIAS_ALL (t));\n+      return TYPE_CANONICAL (t);\n+    }\n+\n   if (gimple_canonical_types == NULL)\n     gimple_canonical_types = htab_create_ggc (16381, gimple_canonical_type_hash,\n \t\t\t\t\t      gimple_canonical_type_eq, 0);"}]}