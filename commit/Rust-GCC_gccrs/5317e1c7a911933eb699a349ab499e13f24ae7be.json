{"sha": "5317e1c7a911933eb699a349ab499e13f24ae7be", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMxN2UxYzdhOTExOTMzZWI2OTlhMzQ5YWI0OTllMTNmMjRhZTdiZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2006-08-27T23:50:30Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2006-08-27T23:50:30Z"}, "message": "re PR driver/27622 (gcc hang when compiling with -pipe)\n\n\tPR driver/27622\n\t* pex-common.h (struct pex_funcs): Add toclose parameter to\n\texec_child field.\n\t* pex-common.c (pex_run_in_environment): Pass toclose to\n\texec_child.\n\t* pex-djgpp.c (pex_djgpp_exec_child): Add toclose parameter.\n\t* pex-unix.c (pex_unix_exec_child): Likewise.\n\t* pex-msdos.c (pex_msdos_exec_child): Likewise.\n\t* pex-win32.c (pex_win32_exec_child): Likewise.\n\nFrom-SVN: r116494", "tree": {"sha": "605a7786db7fb3a02245d989ed8b13db7d8bdb92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/605a7786db7fb3a02245d989ed8b13db7d8bdb92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5317e1c7a911933eb699a349ab499e13f24ae7be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5317e1c7a911933eb699a349ab499e13f24ae7be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5317e1c7a911933eb699a349ab499e13f24ae7be", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5317e1c7a911933eb699a349ab499e13f24ae7be/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "022d41663ddcc03460e411e390eeb0ccada393d5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022d41663ddcc03460e411e390eeb0ccada393d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/022d41663ddcc03460e411e390eeb0ccada393d5"}], "stats": {"total": 59, "additions": 46, "deletions": 13}, "files": [{"sha": "727b98761761302d56bcb3fbd97ae3da2d3811af", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=5317e1c7a911933eb699a349ab499e13f24ae7be", "patch": "@@ -1,5 +1,15 @@\n 2006-08-27  Ian Lance Taylor  <ian@airs.com>\n \n+\tPR driver/27622\n+\t* pex-common.h (struct pex_funcs): Add toclose parameter to\n+\texec_child field.\n+\t* pex-common.c (pex_run_in_environment): Pass toclose to\n+\texec_child.\n+\t* pex-djgpp.c (pex_djgpp_exec_child): Add toclose parameter.\n+\t* pex-unix.c (pex_unix_exec_child): Likewise.\n+\t* pex-msdos.c (pex_msdos_exec_child): Likewise.\n+\t* pex-win32.c (pex_win32_exec_child): Likewise.\n+\n \tPR other/28797\n \t* cp-demangle.c (d_pointer_to_member_type): Do add a substitution\n \tfor a qualified member which is not a function."}, {"sha": "bb127f2ed77f7853e7a791e86191e9780135beae", "filename": "libiberty/pex-common.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-common.c?ref=5317e1c7a911933eb699a349ab499e13f24ae7be", "patch": "@@ -157,6 +157,7 @@ pex_run_in_environment (struct pex_obj *obj, int flags, const char *executable,\n   char *outname;\n   int outname_allocated;\n   int p[2];\n+  int toclose;\n   long pid;\n \n   in = -1;\n@@ -297,10 +298,18 @@ pex_run_in_environment (struct pex_obj *obj, int flags, const char *executable,\n \t}\n     }\n \n+  /* If we are using pipes, the child process has to close the next\n+     input pipe.  */\n+\n+  if ((obj->flags & PEX_USE_PIPES) == 0)\n+    toclose = -1;\n+  else\n+    toclose = obj->next_input;\n+\n   /* Run the program.  */\n \n   pid = obj->funcs->exec_child (obj, flags, executable, argv, env,\n-                                in, out, errdes, &errmsg, err);\n+\t\t\t\tin, out, errdes, toclose, &errmsg, err);\n   if (pid < 0)\n     goto error_exit;\n "}, {"sha": "0e88c355ffc1abd80e97c4617fd6e216e0629582", "filename": "libiberty/pex-common.h", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-common.h?ref=5317e1c7a911933eb699a349ab499e13f24ae7be", "patch": "@@ -96,17 +96,20 @@ struct pex_funcs\n   int (*open_write) (struct pex_obj *, const char */* name */,\n                      int /* binary */);\n   /* Execute a child process.  FLAGS, EXECUTABLE, ARGV, ERR are from\n-     pex_run.  IN, OUT, ERRDES are each a descriptor, from open_read,\n-     open_write, or pipe, or they are one of STDIN_FILE_NO,\n-     STDOUT_FILE_NO or STDERR_FILE_NO; if not STD*_FILE_NO, they\n-     should be closed.  The function should handle the\n+     pex_run.  IN, OUT, ERRDES, TOCLOSE are all descriptors, from\n+     open_read, open_write, or pipe, or they are one of STDIN_FILE_NO,\n+     STDOUT_FILE_NO or STDERR_FILE_NO; if IN, OUT, and ERRDES are not\n+     STD*_FILE_NO, they should be closed.  If the descriptor TOCLOSE\n+     is not -1, and the system supports pipes, TOCLOSE should be\n+     closed in the child process.  The function should handle the\n      PEX_STDERR_TO_STDOUT flag.  Return >= 0 on success, or -1 on\n      error and set *ERRMSG and *ERR.  */\n   long (*exec_child) (struct pex_obj *, int /* flags */,\n                       const char */* executable */, char * const * /* argv */,\n                       char * const * /* env */,\n                       int /* in */, int /* out */, int /* errdes */,\n-\t\t      const char **/* errmsg */, int */* err */);\n+\t\t      int /* toclose */, const char **/* errmsg */,\n+\t\t      int */* err */);\n   /* Close a descriptor.  Return 0 on success, -1 on error.  */\n   int (*close) (struct pex_obj *, int);\n   /* Wait for a child to complete, returning exit status in *STATUS"}, {"sha": "ac5a4f97ba76a33681bb6aef991f3a1d20aecb5e", "filename": "libiberty/pex-djgpp.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-djgpp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-djgpp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-djgpp.c?ref=5317e1c7a911933eb699a349ab499e13f24ae7be", "patch": "@@ -46,7 +46,7 @@ static int pex_djgpp_open_read (struct pex_obj *, const char *, int);\n static int pex_djgpp_open_write (struct pex_obj *, const char *, int);\n static long pex_djgpp_exec_child (struct pex_obj *, int, const char *,\n \t\t\t\t  char * const *, char * const *,\n-                                  int, int, int,\n+\t\t\t\t  int, int, int, int,\n \t\t\t\t  const char **, int *);\n static int pex_djgpp_close (struct pex_obj *, int);\n static int pex_djgpp_wait (struct pex_obj *, long, int *, struct pex_time *,\n@@ -114,7 +114,8 @@ static long\n pex_djgpp_exec_child (struct pex_obj *obj, int flags, const char *executable,\n \t\t      char * const * argv, char * const * env,\n                       int in, int out, int errdes,\n-\t\t      const char **errmsg, int *err)\n+\t\t      int toclose ATTRIBUTE_UNUSED, const char **errmsg,\n+\t\t      int *err)\n {\n   int org_in, org_out, org_errdes;\n   int status;"}, {"sha": "b5acd86b0f5febf4c2ba6fc314d665d6631f03bb", "filename": "libiberty/pex-msdos.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-msdos.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-msdos.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-msdos.c?ref=5317e1c7a911933eb699a349ab499e13f24ae7be", "patch": "@@ -56,7 +56,8 @@ static int pex_msdos_open (struct pex_obj *, const char *, int);\n static int pex_msdos_fdindex (struct pex_msdos *, int);\n static long pex_msdos_exec_child (struct pex_obj *, int, const char *,\n \t\t\t\t  char * const *, char * const *,\n-                                  int, int, int, const char **, int *);\n+\t\t\t\t  int, int, int, int,\n+\t\t\t\t  int, const char **, int *);\n static int pex_msdos_close (struct pex_obj *, int);\n static int pex_msdos_wait (struct pex_obj *, long, int *, struct pex_time *,\n \t\t\t   int, const char **, int *);\n@@ -154,6 +155,7 @@ pex_msdos_close (struct pex_obj *obj, int fd)\n static long\n pex_msdos_exec_child (struct pex_obj *obj, int flags, const char *executable,\n \t\t      char * const * argv, char * const * env, int in, int out,\n+\t\t      int toclose ATTRIBUTE_UNUSED,\n \t\t      int errdes ATTRIBUTE_UNUSED, const char **errmsg,\n \t\t      int *err)\n {"}, {"sha": "c5fa984817e7582a5fd6dc6dc5326ffe9eaf6495", "filename": "libiberty/pex-unix.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-unix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-unix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-unix.c?ref=5317e1c7a911933eb699a349ab499e13f24ae7be", "patch": "@@ -271,7 +271,8 @@ static int pex_unix_open_read (struct pex_obj *, const char *, int);\n static int pex_unix_open_write (struct pex_obj *, const char *, int);\n static long pex_unix_exec_child (struct pex_obj *, int, const char *,\n \t\t\t\t char * const *, char * const *,\n-                                 int, int, int, const char **, int *);\n+\t\t\t\t int, int, int, int,\n+\t\t\t\t const char **, int *);\n static int pex_unix_close (struct pex_obj *, int);\n static int pex_unix_wait (struct pex_obj *, long, int *, struct pex_time *,\n \t\t\t  int, const char **, int *);\n@@ -358,7 +359,7 @@ static long\n pex_unix_exec_child (struct pex_obj *obj, int flags, const char *executable,\n \t\t     char * const * argv, char * const * env,\n                      int in, int out, int errdes,\n-\t\t     const char **errmsg, int *err)\n+\t\t     int toclose, const char **errmsg, int *err)\n {\n   pid_t pid;\n \n@@ -408,6 +409,11 @@ pex_unix_exec_child (struct pex_obj *obj, int flags, const char *executable,\n \t  if (close (errdes) < 0)\n \t    pex_child_error (obj, executable, \"close\", errno);\n \t}\n+      if (toclose >= 0)\n+\t{\n+\t  if (close (toclose) < 0)\n+\t    pex_child_error (obj, executable, \"close\", errno);\n+\t}\n       if ((flags & PEX_STDERR_TO_STDOUT) != 0)\n \t{\n \t  if (dup2 (STDOUT_FILE_NO, STDERR_FILE_NO) < 0)"}, {"sha": "aef386d3cc2e0e868c5cdd9ef9aa6730a8cdb4ac", "filename": "libiberty/pex-win32.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-win32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5317e1c7a911933eb699a349ab499e13f24ae7be/libiberty%2Fpex-win32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fpex-win32.c?ref=5317e1c7a911933eb699a349ab499e13f24ae7be", "patch": "@@ -81,7 +81,7 @@ static int pex_win32_open_read (struct pex_obj *, const char *, int);\n static int pex_win32_open_write (struct pex_obj *, const char *, int);\n static long pex_win32_exec_child (struct pex_obj *, int, const char *,\n \t\t\t\t  char * const *, char * const *,\n-                                  int, int, int,\n+                                  int, int, int, int,\n \t\t\t\t  const char **, int *);\n static int pex_win32_close (struct pex_obj *, int);\n static int pex_win32_wait (struct pex_obj *, long, int *,\n@@ -699,7 +699,9 @@ static long\n pex_win32_exec_child (struct pex_obj *obj ATTRIBUTE_UNUSED, int flags,\n \t\t      const char *executable, char * const * argv,\n                       char* const* env,\n-\t\t      int in, int out, int errdes, const char **errmsg,\n+\t\t      int in, int out, int errdes,\n+\t\t      int toclose ATTRIBUTE_UNUSED,\n+\t\t      const char **errmsg,\n \t\t      int *err)\n {\n   long pid;"}]}