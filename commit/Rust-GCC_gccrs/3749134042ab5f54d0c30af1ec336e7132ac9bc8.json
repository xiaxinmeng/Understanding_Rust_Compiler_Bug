{"sha": "3749134042ab5f54d0c30af1ec336e7132ac9bc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0OTEzNDA0MmFiNWY1NGQwYzMwYWYxZWMzMzZlNzEzMmFjOWJjOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2014-08-25T12:48:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2014-08-25T12:48:22Z"}, "message": "decl.c (start_decl): Look through member variable template.\n\n\t* decl.c (start_decl): Look through member variable template.\n\t* pt.c (tsubst_decl) [VAR_DECL]: Handle member variable templates.\n\t* decl2.c (grokfield): Set DECL_CONTEXT earlier on\n\tvariables.\n\nFrom-SVN: r214420", "tree": {"sha": "914ada4956cb315718830d69e63396294e3709e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/914ada4956cb315718830d69e63396294e3709e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3749134042ab5f54d0c30af1ec336e7132ac9bc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3749134042ab5f54d0c30af1ec336e7132ac9bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3749134042ab5f54d0c30af1ec336e7132ac9bc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3749134042ab5f54d0c30af1ec336e7132ac9bc8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2167dc924b20c492fcf1d47a45de0dd8b25c3cae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2167dc924b20c492fcf1d47a45de0dd8b25c3cae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2167dc924b20c492fcf1d47a45de0dd8b25c3cae"}], "stats": {"total": 87, "additions": 75, "deletions": 12}, "files": [{"sha": "d9bf9058f7e6b4b74e3cbc294f431a30448c0520", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3749134042ab5f54d0c30af1ec336e7132ac9bc8", "patch": "@@ -1,3 +1,10 @@\n+2014-08-25  Jason Merrill  <jason@redhat.com>\n+\n+\t* decl.c (start_decl): Look through member variable template.\n+\t* pt.c (tsubst_decl) [VAR_DECL]: Handle member variable templates.\n+\t* decl2.c (grokfield): Set DECL_CONTEXT earlier on\n+\tvariables.\n+\n 2014-08-25  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/34938"}, {"sha": "80696ddb21651b4d34b7c8807c87aed880169471", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 27, "deletions": 4, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=3749134042ab5f54d0c30af1ec336e7132ac9bc8", "patch": "@@ -4650,13 +4650,37 @@ start_decl (const cp_declarator *declarator,\n \n   if (TYPE_P (context) && COMPLETE_TYPE_P (complete_type (context)))\n     {\n+      bool this_tmpl = (processing_template_decl\n+\t\t\t> template_class_depth (context));\n       if (VAR_P (decl))\n \t{\n \t  tree field = lookup_field (context, DECL_NAME (decl), 0, false);\n-\t  if (field == NULL_TREE || !VAR_P (field))\n-\t    error (\"%q#D is not a static member of %q#T\", decl, context);\n+\t  if (field == NULL_TREE\n+\t      || !(VAR_P (field) || variable_template_p (field)))\n+\t    error (\"%q+#D is not a static data member of %q#T\", decl, context);\n \t  else\n \t    {\n+\t      if (variable_template_p (field))\n+\t\t{\n+\t\t  if (!this_tmpl)\n+\t\t    {\n+\t\t      error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\t\t\"non-member-template declaration of %qD\", decl);\n+\t\t      inform (DECL_SOURCE_LOCATION (field), \"does not match \"\n+\t\t\t      \"member template declaration here\");\n+\t\t      return error_mark_node;\n+\t\t    }\n+\t\t  field = DECL_TEMPLATE_RESULT (field);\n+\t\t}\n+\t      else if (this_tmpl)\n+\t\t{\n+\t\t  error_at (DECL_SOURCE_LOCATION (decl),\n+\t\t\t    \"member template declaration of %qD\", decl);\n+\t\t  inform (DECL_SOURCE_LOCATION (field), \"does not match \"\n+\t\t\t  \"non-member-template declaration here\");\n+\t\t  return error_mark_node;\n+\t\t}\n+\n \t      if (DECL_CONTEXT (field) != context)\n \t\t{\n \t\t  if (!same_type_p (DECL_CONTEXT (field), context))\n@@ -4683,8 +4707,7 @@ start_decl (const cp_declarator *declarator,\n       else\n \t{\n \t  tree field = check_classfn (context, decl,\n-\t\t\t\t      (processing_template_decl\n-\t\t\t\t       > template_class_depth (context))\n+\t\t\t\t      this_tmpl\n \t\t\t\t      ? current_template_parms\n \t\t\t\t      : NULL_TREE);\n \t  if (field && field != error_mark_node"}, {"sha": "5b1313efa2623625cc8a31fc8348d1df5704cfbe", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=3749134042ab5f54d0c30af1ec336e7132ac9bc8", "patch": "@@ -994,6 +994,10 @@ grokfield (const cp_declarator *declarator,\n       && DECL_CONTEXT (value) != current_class_type)\n     return value;\n \n+  /* Need to set this before push_template_decl.  */\n+  if (TREE_CODE (value) == VAR_DECL)\n+    DECL_CONTEXT (value) = current_class_type;\n+\n   if (processing_template_decl && VAR_OR_FUNCTION_DECL_P (value))\n     {\n       value = push_template_decl (value);"}, {"sha": "3e6d777e72de0ba5d61a967d130f6abf539e648d", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=3749134042ab5f54d0c30af1ec336e7132ac9bc8", "patch": "@@ -11127,13 +11127,12 @@ tsubst_decl (tree t, tree args, tsubst_flags_t complain)\n \t\t   same_type_p, because DECL_CONTEXT is always\n \t\t   canonical...  */\n \t\tif (ctx == DECL_CONTEXT (t)\n-\t\t    && (TREE_CODE (t) != TYPE_DECL\n-\t\t\t/* ... unless T is a member template; in which\n-\t\t\t   case our caller can be willing to create a\n-\t\t\t   specialization of that template represented\n-\t\t\t   by T.  */\n-\t\t\t|| !(DECL_TI_TEMPLATE (t)\n-\t\t\t     && DECL_MEMBER_TEMPLATE_P (DECL_TI_TEMPLATE (t)))))\n+\t\t    /* ... unless T is a member template; in which\n+\t\t       case our caller can be willing to create a\n+\t\t       specialization of that template represented\n+\t\t       by T.  */\n+\t\t    && !(DECL_TI_TEMPLATE (t)\n+\t\t\t && DECL_MEMBER_TEMPLATE_P (DECL_TI_TEMPLATE (t))))\n \t\t  spec = t;\n \t      }\n "}, {"sha": "311464472daef6d4d314c265681e1a5a5e8fc9b5", "filename": "gcc/testsuite/g++.dg/cpp1y/pr60626.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60626.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60626.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr60626.C?ref=3749134042ab5f54d0c30af1ec336e7132ac9bc8", "patch": "@@ -4,4 +4,4 @@\n \n struct A {};\n \n-void (*A::p)(auto) = 0;  // { dg-error \"static member|template\" }\n+void (*A::p)(auto) = 0;  // { dg-error \"static data member|template\" }"}, {"sha": "8e3d34a7b8f926212a6294bbece3e9726c2076b8", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ8.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ8.C?ref=3749134042ab5f54d0c30af1ec336e7132ac9bc8", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target c++14 } }\n+// { dg-final { scan-assembler \"_ZN1X1xIiEE\" } }\n+\n+struct X\n+{\n+  template <class T> static T x;\n+};\n+\n+template <class T>\n+T X::x = T();\n+\n+int main()\n+{\n+  int x = X::x<int>;\n+}"}, {"sha": "2ffb007addc78bf62e4153220b6c6883416dbaff", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ9.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3749134042ab5f54d0c30af1ec336e7132ac9bc8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ9.C?ref=3749134042ab5f54d0c30af1ec336e7132ac9bc8", "patch": "@@ -0,0 +1,15 @@\n+// { dg-do compile { target c++14 } }\n+\n+struct X\n+{\n+  template <class T> static int x;\n+};\n+\n+int X::x = 42;\t\t\t// { dg-error \"template\" }\n+\n+struct Y\n+{\n+  static int y;\n+};\n+\n+template <class T> int Y::y = 42; // { dg-error \"template\" }"}]}