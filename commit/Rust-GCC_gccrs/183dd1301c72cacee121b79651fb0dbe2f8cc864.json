{"sha": "183dd1301c72cacee121b79651fb0dbe2f8cc864", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTgzZGQxMzAxYzcyY2FjZWUxMjFiNzk2NTFmYjBkYmUyZjhjYzg2NA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2012-01-27T22:25:02Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-01-27T22:25:02Z"}, "message": "compiler: Use new __builtin_init_heap_trampoline.\n\n\tPR go/47656\n\t* builtins.def (BUILT_IN_INIT_HEAP_TRAMPOLINE): Define.\n\t* builtins.c (expand_builtin_init_trampoline): Add onstack\n\tparameter.  Change caller.\n\t(expand_builtin): Handle BUILT_IN_INIT_HEAP_TRAMPOLINE.\n\t* tree.c (build_common_builtin_nodes): Declare\n\t__builtin_init_heap_trampoline.\n\nFrom-SVN: r183650", "tree": {"sha": "d398842589b29ac849e11574620ca087d812c8b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d398842589b29ac849e11574620ca087d812c8b1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/183dd1301c72cacee121b79651fb0dbe2f8cc864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183dd1301c72cacee121b79651fb0dbe2f8cc864", "html_url": "https://github.com/Rust-GCC/gccrs/commit/183dd1301c72cacee121b79651fb0dbe2f8cc864", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/183dd1301c72cacee121b79651fb0dbe2f8cc864/comments", "author": null, "committer": null, "parents": [{"sha": "a6bc04232912152fff06106d082c8f04a6d6fa91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6bc04232912152fff06106d082c8f04a6d6fa91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6bc04232912152fff06106d082c8f04a6d6fa91"}], "stats": {"total": 51, "additions": 37, "deletions": 14}, "files": [{"sha": "b9e77915696f8afededbe5cd50975261555ad66e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=183dd1301c72cacee121b79651fb0dbe2f8cc864", "patch": "@@ -1,3 +1,13 @@\n+2012-01-27  Ian Lance Taylor  <iant@google.com>\n+\n+\tPR go/47656\n+\t* builtins.def (BUILT_IN_INIT_HEAP_TRAMPOLINE): Define.\n+\t* builtins.c (expand_builtin_init_trampoline): Add onstack\n+\tparameter.  Change caller.\n+\t(expand_builtin): Handle BUILT_IN_INIT_HEAP_TRAMPOLINE.\n+\t* tree.c (build_common_builtin_nodes): Declare\n+\t__builtin_init_heap_trampoline.\n+\n 2012-01-27  Georg-Johann Lay  <avr@gjlay.de>\n \n \t* config/avr/avr-protos.h (lpm_reg_rtx, lpm_addr_reg_rtx,"}, {"sha": "74be5522681a0cd41064bc3e3b4e8b9d8157b791", "filename": "gcc/builtins.c", "status": "modified", "additions": 18, "deletions": 10, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=183dd1301c72cacee121b79651fb0dbe2f8cc864", "patch": "@@ -1,7 +1,7 @@\n /* Expand builtin functions.\n    Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n-   Free Software Foundation, Inc.\n+   2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011,\n+   2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -4854,7 +4854,7 @@ round_trampoline_addr (rtx tramp)\n }\n \n static rtx\n-expand_builtin_init_trampoline (tree exp)\n+expand_builtin_init_trampoline (tree exp, bool onstack)\n {\n   tree t_tramp, t_func, t_chain;\n   rtx m_tramp, r_tramp, r_chain, tmp;\n@@ -4871,13 +4871,16 @@ expand_builtin_init_trampoline (tree exp)\n   m_tramp = gen_rtx_MEM (BLKmode, r_tramp);\n   MEM_NOTRAP_P (m_tramp) = 1;\n \n-  /* The TRAMP argument should be the address of a field within the\n-     local function's FRAME decl.  Let's see if we can fill in the\n-     to fill in the MEM_ATTRs for this memory.  */\n+  /* If ONSTACK, the TRAMP argument should be the address of a field\n+     within the local function's FRAME decl.  Either way, let's see if\n+     we can fill in the MEM_ATTRs for this memory.  */\n   if (TREE_CODE (t_tramp) == ADDR_EXPR)\n     set_mem_attributes_minus_bitpos (m_tramp, TREE_OPERAND (t_tramp, 0),\n \t\t\t\t     true, 0);\n \n+  /* Creator of a heap trampoline is responsible for making sure the\n+     address is aligned to at least STACK_BOUNDARY.  Normally malloc\n+     will ensure this anyhow.  */\n   tmp = round_trampoline_addr (r_tramp);\n   if (tmp != r_tramp)\n     {\n@@ -4897,10 +4900,13 @@ expand_builtin_init_trampoline (tree exp)\n   /* Generate insns to initialize the trampoline.  */\n   targetm.calls.trampoline_init (m_tramp, t_func, r_chain);\n \n-  trampolines_created = 1;\n+  if (onstack)\n+    {\n+      trampolines_created = 1;\n \n-  warning_at (DECL_SOURCE_LOCATION (t_func), OPT_Wtrampolines,\n-              \"trampoline generated for nested function %qD\", t_func);\n+      warning_at (DECL_SOURCE_LOCATION (t_func), OPT_Wtrampolines,\n+\t\t  \"trampoline generated for nested function %qD\", t_func);\n+    }\n \n   return const0_rtx;\n }\n@@ -6325,7 +6331,9 @@ expand_builtin (tree exp, rtx target, rtx subtarget, enum machine_mode mode,\n       return const0_rtx;\n \n     case BUILT_IN_INIT_TRAMPOLINE:\n-      return expand_builtin_init_trampoline (exp);\n+      return expand_builtin_init_trampoline (exp, true);\n+    case BUILT_IN_INIT_HEAP_TRAMPOLINE:\n+      return expand_builtin_init_trampoline (exp, false);\n     case BUILT_IN_ADJUST_TRAMPOLINE:\n       return expand_builtin_adjust_trampoline (exp);\n "}, {"sha": "0cba2feea63d0d6896ce70fcf6da825ea8c8e8a5", "filename": "gcc/builtins.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2Fbuiltins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2Fbuiltins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.def?ref=183dd1301c72cacee121b79651fb0dbe2f8cc864", "patch": "@@ -1,7 +1,7 @@\n /* This file contains the definitions and documentation for the\n    builtins used in the GNU compiler.\n    Copyright (C) 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009,\n-   2010, 2011 Free Software Foundation, Inc.\n+   2010, 2011, 2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -740,6 +740,7 @@ DEF_C99_BUILTIN        (BUILT_IN__EXIT2, \"_Exit\", BT_FN_VOID_INT, ATTR_NORETURN_\n \n /* Implementing nested functions.  */\n DEF_BUILTIN_STUB (BUILT_IN_INIT_TRAMPOLINE, \"__builtin_init_trampoline\")\n+DEF_BUILTIN_STUB (BUILT_IN_INIT_HEAP_TRAMPOLINE, \"__builtin_init_heap_trampoline\")\n DEF_BUILTIN_STUB (BUILT_IN_ADJUST_TRAMPOLINE, \"__builtin_adjust_trampoline\")\n DEF_BUILTIN_STUB (BUILT_IN_NONLOCAL_GOTO, \"__builtin_nonlocal_goto\")\n "}, {"sha": "352179df02ab0dc8a6ddf82290f26c5d05d2cc8b", "filename": "gcc/go/gofrontend/gogo-tree.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgogo-tree.cc?ref=183dd1301c72cacee121b79651fb0dbe2f8cc864", "patch": "@@ -2422,8 +2422,8 @@ Gogo::make_trampoline(tree fnaddr, tree closure, Location location)\n   x = save_expr(x);\n \n   // Initialize the trampoline.\n-  tree ini = build_call_expr(builtin_decl_implicit(BUILT_IN_INIT_TRAMPOLINE),\n-\t\t\t     3, x, fnaddr, closure);\n+  tree calldecl = builtin_decl_implicit(BUILT_IN_INIT_HEAP_TRAMPOLINE);\n+  tree ini = build_call_expr(calldecl, 3, x, fnaddr, closure);\n \n   // On some targets the trampoline address needs to be adjusted.  For\n   // example, when compiling in Thumb mode on the ARM, the address"}, {"sha": "22f9d007826b325ef0e4e48716f819a15a142066", "filename": "gcc/tree.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/183dd1301c72cacee121b79651fb0dbe2f8cc864/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=183dd1301c72cacee121b79651fb0dbe2f8cc864", "patch": "@@ -1,7 +1,7 @@\n /* Language-independent node constructors for parse phase of GNU compiler.\n    Copyright (C) 1987, 1988, 1992, 1993, 1994, 1995, 1996, 1997, 1998,\n    1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010,\n-   2011 Free Software Foundation, Inc.\n+   2011, 2012 Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -9527,6 +9527,10 @@ build_common_builtin_nodes (void)\n   local_define_builtin (\"__builtin_init_trampoline\", ftype,\n \t\t\tBUILT_IN_INIT_TRAMPOLINE,\n \t\t\t\"__builtin_init_trampoline\", ECF_NOTHROW | ECF_LEAF);\n+  local_define_builtin (\"__builtin_init_heap_trampoline\", ftype,\n+\t\t\tBUILT_IN_INIT_HEAP_TRAMPOLINE,\n+\t\t\t\"__builtin_init_heap_trampoline\",\n+\t\t\tECF_NOTHROW | ECF_LEAF);\n \n   ftype = build_function_type_list (ptr_type_node, ptr_type_node, NULL_TREE);\n   local_define_builtin (\"__builtin_adjust_trampoline\", ftype,"}]}