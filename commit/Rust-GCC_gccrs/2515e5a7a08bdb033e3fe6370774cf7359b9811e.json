{"sha": "2515e5a7a08bdb033e3fe6370774cf7359b9811e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxNWU1YTdhMDhiZGIwMzNlM2ZlNjM3MDc3NGNmNzM1OWI5ODExZQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-15T14:52:46Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-09-15T14:52:46Z"}, "message": "re PR libfortran/21185 (Improve testsuite results on newlib targets)\n\n\tPR libfortran/21185\n\t* runtime/compile_options.c (set_options): Fix typo.\n\t* runtime/main.c (store_exe_path): If getcwd is not available,\n\tdon't use it.\n\t* intrinsics/getcwd.c: Same thing here.\n\t* io/unix.c (fallback_access): New fallback function for access.\n\t(fix_fd): Don't use dup if it's not available.\n\t* configure.ac: Check for dup and getcwd.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\nFrom-SVN: r128512", "tree": {"sha": "0048e16af72d2eef9bf9f9e8ac0d78574ea4bf40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0048e16af72d2eef9bf9f9e8ac0d78574ea4bf40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2515e5a7a08bdb033e3fe6370774cf7359b9811e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2515e5a7a08bdb033e3fe6370774cf7359b9811e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2515e5a7a08bdb033e3fe6370774cf7359b9811e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2515e5a7a08bdb033e3fe6370774cf7359b9811e/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c4d947f29a565331ef92c4f0a15624b4821269a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c4d947f29a565331ef92c4f0a15624b4821269a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c4d947f29a565331ef92c4f0a15624b4821269a"}], "stats": {"total": 70, "additions": 65, "deletions": 5}, "files": [{"sha": "58943ae3ba3e6ba52e63e575d5c1252bbcb0e684", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=2515e5a7a08bdb033e3fe6370774cf7359b9811e", "patch": "@@ -1,3 +1,16 @@\n+2007-09-15  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR libfortran/21185\n+\t* runtime/compile_options.c (set_options): Fix typo.\n+\t* runtime/main.c (store_exe_path): If getcwd is not available,\n+\tdon't use it.\n+\t* intrinsics/getcwd.c: Same thing here.\n+\t* io/unix.c (fallback_access): New fallback function for access.\n+\t(fix_fd): Don't use dup if it's not available.\n+\t* configure.ac: Check for dup and getcwd.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n 2007-09-12  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \t* io/io.h: Include libgfortran.h first."}, {"sha": "f805c437695b1c6df77c3e0809457edac06a3de9", "filename": "libgfortran/config.h.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfig.h.in?ref=2515e5a7a08bdb033e3fe6370774cf7359b9811e", "patch": "@@ -273,6 +273,9 @@\n /* Define to 1 if you have the <dlfcn.h> header file. */\n #undef HAVE_DLFCN_H\n \n+/* Define to 1 if you have the `dup' function. */\n+#undef HAVE_DUP\n+\n /* Define to 1 if you have the `dup2' function. */\n #undef HAVE_DUP2\n \n@@ -384,6 +387,9 @@\n /* Define to 1 if you have the `ftruncate' function. */\n #undef HAVE_FTRUNCATE\n \n+/* Define to 1 if you have the `getcwd' function. */\n+#undef HAVE_GETCWD\n+\n /* libc includes geteuid */\n #undef HAVE_GETEUID\n "}, {"sha": "be685a43f186937c79ac21751a8048a4ff05aa0d", "filename": "libgfortran/configure", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure?ref=2515e5a7a08bdb033e3fe6370774cf7359b9811e", "patch": "@@ -18481,7 +18481,9 @@ done\n \n \n \n-for ac_func in gettimeofday stat fstat lstat getpwuid vsnprintf\n+\n+\n+for ac_func in gettimeofday stat fstat lstat getpwuid vsnprintf dup getcwd\n do\n as_ac_var=`echo \"ac_cv_func_$ac_func\" | $as_tr_sh`\n echo \"$as_me:$LINENO: checking for $ac_func\" >&5"}, {"sha": "a4588e17a7a04aa7290a4fb2ba919cbcad723c92", "filename": "libgfortran/configure.ac", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fconfigure.ac?ref=2515e5a7a08bdb033e3fe6370774cf7359b9811e", "patch": "@@ -192,7 +192,7 @@ AC_CHECK_FUNCS(getrusage times mkstemp strtof strtold snprintf ftruncate chsize)\n AC_CHECK_FUNCS(chdir strerror getlogin gethostname kill link symlink perror)\n AC_CHECK_FUNCS(sleep time ttyname signal alarm ctime clock access fork execl)\n AC_CHECK_FUNCS(wait setmode execvp pipe dup2 close fdopen strcasestr getrlimit)\n-AC_CHECK_FUNCS(gettimeofday stat fstat lstat getpwuid vsnprintf)\n+AC_CHECK_FUNCS(gettimeofday stat fstat lstat getpwuid vsnprintf dup getcwd)\n \n # Check for glibc backtrace functions\n AC_CHECK_FUNCS(backtrace backtrace_symbols)"}, {"sha": "60ec6feb1fe44db438e4a6f97a6978a11826ffa7", "filename": "libgfortran/intrinsics/getcwd.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fintrinsics%2Fgetcwd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fintrinsics%2Fgetcwd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fgetcwd.c?ref=2515e5a7a08bdb033e3fe6370774cf7359b9811e", "patch": "@@ -37,6 +37,8 @@ Boston, MA 02110-1301, USA.  */\n #include <unistd.h>\n #endif\n \n+#ifdef HAVE_GETCWD\n+\n extern void getcwd_i4_sub (char *, GFC_INTEGER_4 *, gfc_charlen_type);\n iexport_proto(getcwd_i4_sub);\n \n@@ -82,3 +84,5 @@ PREFIX(getcwd) (char *cwd, gfc_charlen_type cwd_len)\n   getcwd_i4_sub (cwd, &status, cwd_len);\n   return status;\n }\n+\n+#endif"}, {"sha": "6cb578f1cc02f8bb663e06b511dea61869ea4096", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=2515e5a7a08bdb033e3fe6370774cf7359b9811e", "patch": "@@ -211,13 +211,13 @@ move_pos_offset (stream* st, int pos_off)\n static int\n fix_fd (int fd)\n {\n+#ifdef HAVE_DUP\n   int input, output, error;\n \n   input = output = error = 0;\n \n   /* Unix allocates the lowest descriptors first, so a loop is not\n      required, but this order is. */\n-\n   if (fd == STDIN_FILENO)\n     {\n       fd = dup (fd);\n@@ -240,6 +240,7 @@ fix_fd (int fd)\n     close (STDOUT_FILENO);\n   if (error)\n     close (STDERR_FILENO);\n+#endif\n \n   return fd;\n }\n@@ -1775,6 +1776,36 @@ inquire_unformatted (const char *string, int len)\n }\n \n \n+#ifndef HAVE_ACCESS\n+\n+#ifndef W_OK\n+#define W_OK 2\n+#endif\n+\n+#ifndef R_OK\n+#define R_OK 4\n+#endif\n+\n+/* Fallback implementation of access() on systems that don't have it.\n+   Only modes R_OK and W_OK are used in this file.  */\n+\n+static int\n+fallback_access (const char *path, int mode)\n+{\n+  if ((mode & R_OK) && open (path, O_RDONLY) < 0)\n+    return -1;\n+\n+  if ((mode & W_OK) && open (path, O_WRONLY) < 0)\n+    return -1;\n+\n+  return 0;\n+}\n+\n+#undef access\n+#define access fallback_access\n+#endif\n+\n+\n /* inquire_access()-- Given a fortran string, determine if the file is\n  * suitable for access. */\n "}, {"sha": "8e0a3fe30ceddad6979afb7ed7cfa324996c585d", "filename": "libgfortran/runtime/compile_options.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fruntime%2Fcompile_options.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fruntime%2Fcompile_options.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fcompile_options.c?ref=2515e5a7a08bdb033e3fe6370774cf7359b9811e", "patch": "@@ -108,8 +108,8 @@ set_options (int num, int options[])\n \n   /* If backtrace is required, we set signal handlers on most common\n      signals.  */\n-#if defined(HAVE_SIGNAL_H) && (defined(SIGSEGV) || defined(SIGBUS) \\\n-\t\t\t       || defined(SIGILL) || defined(SIGFPE))\n+#if defined(HAVE_SIGNAL) && (defined(SIGSEGV) || defined(SIGBUS) \\\n+\t\t\t     || defined(SIGILL) || defined(SIGFPE))\n   if (compile_options.backtrace)\n     {\n #if defined(SIGSEGV)"}, {"sha": "86777d9c70e34ea8911c52a2ad503d46e7f09fd9", "filename": "libgfortran/runtime/main.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fruntime%2Fmain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2515e5a7a08bdb033e3fe6370774cf7359b9811e/libgfortran%2Fruntime%2Fmain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fruntime%2Fmain.c?ref=2515e5a7a08bdb033e3fe6370774cf7359b9811e", "patch": "@@ -120,7 +120,11 @@ store_exe_path (const char * argv0)\n     }\n \n   memset (buf, 0, sizeof (buf));\n+#ifdef HAVE_GETCWD\n   cwd = getcwd (buf, sizeof (buf));\n+#else\n+  cwd = \"\";\n+#endif\n \n   /* exe_path will be cwd + \"/\" + argv[0] + \"\\0\" */\n   path = malloc (strlen (cwd) + 1 + strlen (argv0) + 1);"}]}