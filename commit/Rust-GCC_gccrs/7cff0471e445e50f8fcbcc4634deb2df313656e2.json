{"sha": "7cff0471e445e50f8fcbcc4634deb2df313656e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NmZjA0NzFlNDQ1ZTUwZjhmY2JjYzQ2MzRkZWIyZGYzMTM2NTZlMg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-08-24T11:13:16Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-08-24T11:13:16Z"}, "message": "target-insns.def (movstr): New pattern.\n\ngcc/\n\t* target-insns.def (movstr): New pattern.\n\t* builtins.c (HAVE_movstr, CODE_FOR_movstr): Delete.\n\t(expand_movstr): Use targetm rather than HAVE_movstr/\n\tCODE_FOR_movstr.\n\nFrom-SVN: r227121", "tree": {"sha": "43f876021016911b4c60aa39ad81c8db8aade75a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43f876021016911b4c60aa39ad81c8db8aade75a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cff0471e445e50f8fcbcc4634deb2df313656e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cff0471e445e50f8fcbcc4634deb2df313656e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cff0471e445e50f8fcbcc4634deb2df313656e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cff0471e445e50f8fcbcc4634deb2df313656e2/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d26ed7fa6780bca5c44f3da75cab196ea5c09100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d26ed7fa6780bca5c44f3da75cab196ea5c09100", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d26ed7fa6780bca5c44f3da75cab196ea5c09100"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "4c2267fd9f8ec7d5139ac6906d17a336f7232f59", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cff0471e445e50f8fcbcc4634deb2df313656e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cff0471e445e50f8fcbcc4634deb2df313656e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cff0471e445e50f8fcbcc4634deb2df313656e2", "patch": "@@ -1,3 +1,10 @@\n+2015-08-24  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* target-insns.def (movstr): New pattern.\n+\t* builtins.c (HAVE_movstr, CODE_FOR_movstr): Delete.\n+\t(expand_movstr): Use targetm rather than HAVE_movstr/\n+\tCODE_FOR_movstr.\n+\n 2015-08-24  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/microblaze/microblaze.c (microblaze_classify_unspec): Fix"}, {"sha": "76c16fa394095a2935040a1cc1b9f82322b1c8b4", "filename": "gcc/builtins.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cff0471e445e50f8fcbcc4634deb2df313656e2/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cff0471e445e50f8fcbcc4634deb2df313656e2/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=7cff0471e445e50f8fcbcc4634deb2df313656e2", "patch": "@@ -3438,11 +3438,6 @@ expand_builtin_mempcpy_args (tree dest, tree src, tree len,\n     }\n }\n \n-#ifndef HAVE_movstr\n-# define HAVE_movstr 0\n-# define CODE_FOR_movstr CODE_FOR_nothing\n-#endif\n-\n /* Expand into a movstr instruction, if one is available.  Return NULL_RTX if\n    we failed, the caller should emit a normal call, otherwise try to\n    get the result in TARGET, if convenient.  If ENDP is 0 return the\n@@ -3457,7 +3452,7 @@ expand_movstr (tree dest, tree src, rtx target, int endp)\n   rtx dest_mem;\n   rtx src_mem;\n \n-  if (!HAVE_movstr)\n+  if (!targetm.have_movstr ())\n     return NULL_RTX;\n \n   dest_mem = get_memory_rtx (dest, NULL);\n@@ -3471,7 +3466,7 @@ expand_movstr (tree dest, tree src, rtx target, int endp)\n   create_output_operand (&ops[0], endp ? target : NULL_RTX, Pmode);\n   create_fixed_operand (&ops[1], dest_mem);\n   create_fixed_operand (&ops[2], src_mem);\n-  if (!maybe_expand_insn (CODE_FOR_movstr, 3, ops))\n+  if (!maybe_expand_insn (targetm.code_for_movstr, 3, ops))\n     return NULL_RTX;\n \n   if (endp && target != const0_rtx)"}, {"sha": "d2041050ccf72eb4ad133cf7d6fc21922c64da9f", "filename": "gcc/target-insns.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cff0471e445e50f8fcbcc4634deb2df313656e2/gcc%2Ftarget-insns.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cff0471e445e50f8fcbcc4634deb2df313656e2/gcc%2Ftarget-insns.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-insns.def?ref=7cff0471e445e50f8fcbcc4634deb2df313656e2", "patch": "@@ -53,6 +53,7 @@ DEF_TARGET_INSN (load_multiple, (rtx x0, rtx x1, rtx x2))\n DEF_TARGET_INSN (mem_signal_fence, (rtx x0))\n DEF_TARGET_INSN (mem_thread_fence, (rtx x0))\n DEF_TARGET_INSN (memory_barrier, (void))\n+DEF_TARGET_INSN (movstr, (rtx x0, rtx x1, rtx x2))\n DEF_TARGET_INSN (nonlocal_goto, (rtx x0, rtx x1, rtx x2, rtx x3))\n DEF_TARGET_INSN (nonlocal_goto_receiver, (void))\n DEF_TARGET_INSN (prefetch, (rtx x0, rtx x1, rtx x2))"}]}