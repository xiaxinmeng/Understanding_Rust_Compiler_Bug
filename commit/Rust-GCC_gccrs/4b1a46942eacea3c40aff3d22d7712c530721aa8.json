{"sha": "4b1a46942eacea3c40aff3d22d7712c530721aa8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIxYTQ2OTQyZWFjZWEzYzQwYWZmM2QyMmQ3NzEyYzUzMDcyMWFhOA==", "commit": {"author": {"name": "Nathan Froyd", "email": "froydnj@codesourcery.com", "date": "2011-04-13T20:32:30Z"}, "committer": {"name": "Nathan Froyd", "email": "froydnj@gcc.gnu.org", "date": "2011-04-13T20:32:30Z"}, "message": "tree-flow.h (struct gimple_df): Make free_ssanames a VEC.\n\n\t* tree-flow.h (struct gimple_df): Make free_ssanames a VEC.\n\t* tree-ssanames.c (fini_ssanames): VEC_free it.\n\t(make_ssa_name_fn): Update for VECness of free_ssanames.\n\t(release_ssa_name, release_dead_ssa_names): Likewise.\n\t* tree.h (struct tree_ssa_name): Include tree_typed instead of\n\ttree_common.\n\t* tree.c (initialize_tree_contains_struct): Mark TS_SSA_NAME as\n\tTS_TYPED instead of TS_COMMON.\n\nFrom-SVN: r172393", "tree": {"sha": "bc8427c223524a9268882af9b40e71455cd04d65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc8427c223524a9268882af9b40e71455cd04d65"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b1a46942eacea3c40aff3d22d7712c530721aa8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1a46942eacea3c40aff3d22d7712c530721aa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b1a46942eacea3c40aff3d22d7712c530721aa8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b1a46942eacea3c40aff3d22d7712c530721aa8/comments", "author": null, "committer": null, "parents": [{"sha": "4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4da3b811f9f7456dacd2c5e6fdc0ba2cf4ca39e1"}], "stats": {"total": 45, "additions": 22, "deletions": 23}, "files": [{"sha": "1ec1c4c70f3dccc7cadaac828ece8a2b472e7a43", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4b1a46942eacea3c40aff3d22d7712c530721aa8", "patch": "@@ -1,3 +1,14 @@\n+2011-04-13  Nathan Froyd  <froydnj@codesourcery.com>\n+\n+\t* tree-flow.h (struct gimple_df): Make free_ssanames a VEC.\n+\t* tree-ssanames.c (fini_ssanames): VEC_free it.\n+\t(make_ssa_name_fn): Update for VECness of free_ssanames.\n+\t(release_ssa_name, release_dead_ssa_names): Likewise.\n+\t* tree.h (struct tree_ssa_name): Include tree_typed instead of\n+\ttree_common.\n+\t* tree.c (initialize_tree_contains_struct): Mark TS_SSA_NAME as\n+\tTS_TYPED instead of TS_COMMON.\n+\n 2011-04-13  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* postreload-gcse.c (gcse_after_reload_main): Add calls to"}, {"sha": "a2fa425d2f4c887f7ad5318371d06700dd223644", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=4b1a46942eacea3c40aff3d22d7712c530721aa8", "patch": "@@ -61,7 +61,7 @@ struct GTY(()) gimple_df {\n   struct pointer_map_t * GTY((skip(\"\"))) decls_to_pointers;\n \n   /* Free list of SSA_NAMEs.  */\n-  tree free_ssanames;\n+  VEC(tree,gc) *free_ssanames;\n \n   /* Hashtable holding definition for symbol.  If this field is not NULL, it\n      means that the first reference to this variable in the function is a"}, {"sha": "06cdbee2c603347e069cf1732a5127d075f923f8", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 8, "deletions": 20, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=4b1a46942eacea3c40aff3d22d7712c530721aa8", "patch": "@@ -96,7 +96,7 @@ void\n fini_ssanames (void)\n {\n   VEC_free (tree, gc, SSANAMES (cfun));\n-  FREE_SSANAMES (cfun) = NULL;\n+  VEC_free (tree, gc, FREE_SSANAMES (cfun));\n }\n \n /* Dump some simple statistics regarding the re-use of SSA_NAME nodes.  */\n@@ -124,10 +124,9 @@ make_ssa_name_fn (struct function *fn, tree var, gimple stmt)\n   gcc_assert (DECL_P (var));\n \n   /* If our free list has an element, then use it.  */\n-  if (FREE_SSANAMES (fn))\n+  if (!VEC_empty (tree, FREE_SSANAMES (fn)))\n     {\n-      t = FREE_SSANAMES (fn);\n-      FREE_SSANAMES (fn) = TREE_CHAIN (FREE_SSANAMES (fn));\n+      t = VEC_pop (tree, FREE_SSANAMES (fn));\n #ifdef GATHER_STATISTICS\n       ssa_name_nodes_reused++;\n #endif\n@@ -234,9 +233,8 @@ release_ssa_name (tree var)\n       /* Note this SSA_NAME is now in the first list.  */\n       SSA_NAME_IN_FREE_LIST (var) = 1;\n \n-      /* And finally link it into the free list.  */\n-      TREE_CHAIN (var) = FREE_SSANAMES (cfun);\n-      FREE_SSANAMES (cfun) = var;\n+      /* And finally put it on the free list.  */\n+      VEC_safe_push (tree, gc, FREE_SSANAMES (cfun), var);\n     }\n }\n \n@@ -334,26 +332,16 @@ replace_ssa_name_symbol (tree ssa_name, tree sym)\n static unsigned int\n release_dead_ssa_names (void)\n {\n-  tree t, next;\n-  int n = 0;\n+  tree t;\n+  int n = VEC_length (tree, FREE_SSANAMES (cfun));\n   referenced_var_iterator rvi;\n \n   /* Current defs point to various dead SSA names that in turn point to\n      eventually dead variables so a bunch of memory is held live.  */\n   FOR_EACH_REFERENCED_VAR (cfun, t, rvi)\n     set_current_def (t, NULL);\n   /* Now release the freelist.  */\n-  for (t = FREE_SSANAMES (cfun); t; t = next)\n-    {\n-      next = TREE_CHAIN (t);\n-      /* Dangling pointers might make GGC to still see dead SSA names, so it is\n- \t important to unlink the list and avoid GGC from seeing all subsequent\n-\t SSA names.  In longer run we want to have all dangling pointers here\n-\t removed (since they usually go through dead statements that consume\n-\t considerable amounts of memory).  */\n-      TREE_CHAIN (t) = NULL_TREE;\n-      n++;\n-    }\n+  VEC_free (tree, gc, FREE_SSANAMES (cfun));\n   FREE_SSANAMES (cfun) = NULL;\n \n   statistics_counter_event (cfun, \"SSA names released\", n);"}, {"sha": "bb8d2e646e2ff3a4739ae2f0425474a2bde00860", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=4b1a46942eacea3c40aff3d22d7712c530721aa8", "patch": "@@ -377,6 +377,7 @@ initialize_tree_contains_struct (void)\n \tcase TS_VECTOR:\n \tcase TS_STRING:\n \tcase TS_COMPLEX:\n+\tcase TS_SSA_NAME:\n \t  MARK_TS_TYPED (code);\n \t  break;\n \n@@ -386,7 +387,6 @@ initialize_tree_contains_struct (void)\n \tcase TS_LIST:\n \tcase TS_VEC:\n \tcase TS_EXP:\n-\tcase TS_SSA_NAME:\n \tcase TS_BLOCK:\n \tcase TS_BINFO:\n \tcase TS_STATEMENT_LIST:"}, {"sha": "d4ad5620f3f4ab18734cbad83b9abdc530908cff", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b1a46942eacea3c40aff3d22d7712c530721aa8/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=4b1a46942eacea3c40aff3d22d7712c530721aa8", "patch": "@@ -1970,7 +1970,7 @@ typedef struct GTY(()) ssa_use_operand_d {\n #define SSA_NAME_IMM_USE_NODE(NODE) SSA_NAME_CHECK (NODE)->ssa_name.imm_uses\n \n struct GTY(()) tree_ssa_name {\n-  struct tree_common common;\n+  struct tree_typed typed;\n \n   /* _DECL wrapped by this SSA name.  */\n   tree var;"}]}