{"sha": "572070efe35a919dc526dd7972dc7d3b3015a4f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTcyMDcwZWZlMzVhOTE5ZGM1MjZkZDc5NzJkYzdkM2IzMDE1YTRmNQ==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2011-06-01T14:18:29Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2011-06-01T14:18:29Z"}, "message": "arm-cores.def: Add cortex-r5.\n\n2011-06-01  Paul Brook  <paul@cpodesourcery.com>\n\n\tgcc/\n\t* config/arm/arm-cores.def: Add cortex-r5.  Add DIV flags to\n\tCortex-A15.\n\t* config/arm/arm-tune.md: Regenerate.\n\t* config/arm/arm-tables.opt: Regenerate.\n\t* config/arm/arm.c (FL_DIV): Rename...\n\t(FL_THUMB_DIV): ... to this.\n\t(FL_ARM_DIV): Define.\n\t(FL_FOR_ARCH7R, FL_FOR_ARCH7M): Use FL_THUMB_DIV.\n\t(arm_arch_hwdiv): Remove.\n\t(arm_arch_thumb_hwdiv, arm_arch_arm_hwdiv): New variables.\n\t(arm_issue_rate): Add cortexr5.\n\t* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Set\n\t__ARM_ARCH_EXT_IDIV__.\n\t(TARGET_IDIV): Define.\n\t(arm_arch_hwdiv): Remove.\n\t(arm_arch_arm_hwdiv, arm_arch_thumb_hwdiv): New prototypes.\n\t* config/arm/arm.md (tune_cortexr4): Add cortexr5.\n\t(divsi3, udivsi3): New patterns.\n\t* config/arm/thumb2.md (divsi3, udivsi3): Remove.\n\t* doc/invoke.texi: Document ARM -mcpu=cortex-r5\n\nFrom-SVN: r174526", "tree": {"sha": "2370f9479fb803e77953dba9d08324027e0a4828", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2370f9479fb803e77953dba9d08324027e0a4828"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/572070efe35a919dc526dd7972dc7d3b3015a4f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572070efe35a919dc526dd7972dc7d3b3015a4f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/572070efe35a919dc526dd7972dc7d3b3015a4f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/572070efe35a919dc526dd7972dc7d3b3015a4f5/comments", "author": null, "committer": null, "parents": [{"sha": "6f59ea252b0e75a34e4e3c4ecd92d306addf2da2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f59ea252b0e75a34e4e3c4ecd92d306addf2da2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f59ea252b0e75a34e4e3c4ecd92d306addf2da2"}], "stats": {"total": 105, "additions": 74, "deletions": 31}, "files": [{"sha": "888c7e247f16a4355fdc71f198612f72cf7f52d2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -1,3 +1,26 @@\n+2011-06-01  Paul Brook  <paul@cpodesourcery.com>\n+\n+\t* config/arm/arm-cores.def: Add cortex-r5.  Add DIV flags to\n+\tCortex-A15.\n+\t* config/arm/arm-tune.md: Regenerate.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm.c (FL_DIV): Rename...\n+\t(FL_THUMB_DIV): ... to this.\n+\t(FL_ARM_DIV): Define.\n+\t(FL_FOR_ARCH7R, FL_FOR_ARCH7M): Use FL_THUMB_DIV.\n+\t(arm_arch_hwdiv): Remove.\n+\t(arm_arch_thumb_hwdiv, arm_arch_arm_hwdiv): New variables.\n+\t(arm_issue_rate): Add cortexr5.\n+\t* config/arm/arm.h (TARGET_CPU_CPP_BUILTINS): Set\n+\t__ARM_ARCH_EXT_IDIV__.\n+\t(TARGET_IDIV): Define.\n+\t(arm_arch_hwdiv): Remove.\n+\t(arm_arch_arm_hwdiv, arm_arch_thumb_hwdiv): New prototypes.\n+\t* config/arm/arm.md (tune_cortexr4): Add cortexr5.\n+\t(divsi3, udivsi3): New patterns.\n+\t* config/arm/thumb2.md (divsi3, udivsi3): Remove.\n+\t* doc/invoke.texi: Document ARM -mcpu=cortex-r5\n+\n 2011-06-01  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-utils.c (ipa_dfs_info): New field scc_no."}, {"sha": "af0dbb49cc9244c2f9dcee4c4eeaa62d375f92d8", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -127,9 +127,10 @@ ARM_CORE(\"arm1156t2f-s\",  arm1156t2fs,  6T2,\t\t\t\t FL_LDSCHED | FL_VFPV2, 9e)\n ARM_CORE(\"cortex-a5\",\t  cortexa5,\t7A,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"cortex-a8\",\t  cortexa8,\t7A,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"cortex-a9\",\t  cortexa9,\t7A,\t\t\t\t FL_LDSCHED, cortex_a9)\n-ARM_CORE(\"cortex-a15\",\t  cortexa15,\t7A,\t\t\t\t FL_LDSCHED, 9e)\n+ARM_CORE(\"cortex-a15\",\t  cortexa15,\t7A,\t\t\t\t FL_LDSCHED | FL_THUMB_DIV | FL_ARM_DIV, 9e)\n ARM_CORE(\"cortex-r4\",\t  cortexr4,\t7R,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"cortex-r4f\",\t  cortexr4f,\t7R,\t\t\t\t FL_LDSCHED, 9e)\n+ARM_CORE(\"cortex-r5\",\t  cortexr5,\t7R,\t\t\t\t FL_LDSCHED | FL_ARM_DIV, 9e)\n ARM_CORE(\"cortex-m4\",\t  cortexm4,\t7EM,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"cortex-m3\",\t  cortexm3,\t7M,\t\t\t\t FL_LDSCHED, 9e)\n ARM_CORE(\"cortex-m1\",\t  cortexm1,\t6M,\t\t\t\t FL_LDSCHED, 9e)"}, {"sha": "9b3ced651b5f31ba8a4d7937923cc3aaf84357c2", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -249,6 +249,9 @@ Enum(processor_type) String(cortex-r4) Value(cortexr4)\n EnumValue\n Enum(processor_type) String(cortex-r4f) Value(cortexr4f)\n \n+EnumValue\n+Enum(processor_type) String(cortex-r5) Value(cortexr5)\n+\n EnumValue\n Enum(processor_type) String(cortex-m4) Value(cortexm4)\n "}, {"sha": "bd1083315ca4af93216d8850b528fcd60b81318f", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from arm-cores.def\n (define_attr \"tune\"\n-\t\"arm2,arm250,arm3,arm6,arm60,arm600,arm610,arm620,arm7,arm7d,arm7di,arm70,arm700,arm700i,arm710,arm720,arm710c,arm7100,arm7500,arm7500fe,arm7m,arm7dm,arm7dmi,arm8,arm810,strongarm,strongarm110,strongarm1100,strongarm1110,fa526,fa626,arm7tdmi,arm7tdmis,arm710t,arm720t,arm740t,arm9,arm9tdmi,arm920,arm920t,arm922t,arm940t,ep9312,arm10tdmi,arm1020t,arm9e,arm946es,arm966es,arm968es,arm10e,arm1020e,arm1022e,xscale,iwmmxt,iwmmxt2,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1026ejs,arm1136js,arm1136jfs,arm1176jzs,arm1176jzfs,mpcorenovfp,mpcore,arm1156t2s,arm1156t2fs,cortexa5,cortexa8,cortexa9,cortexa15,cortexr4,cortexr4f,cortexm4,cortexm3,cortexm1,cortexm0\"\n+\t\"arm2,arm250,arm3,arm6,arm60,arm600,arm610,arm620,arm7,arm7d,arm7di,arm70,arm700,arm700i,arm710,arm720,arm710c,arm7100,arm7500,arm7500fe,arm7m,arm7dm,arm7dmi,arm8,arm810,strongarm,strongarm110,strongarm1100,strongarm1110,fa526,fa626,arm7tdmi,arm7tdmis,arm710t,arm720t,arm740t,arm9,arm9tdmi,arm920,arm920t,arm922t,arm940t,ep9312,arm10tdmi,arm1020t,arm9e,arm946es,arm966es,arm968es,arm10e,arm1020e,arm1022e,xscale,iwmmxt,iwmmxt2,fa606te,fa626te,fmp626,fa726te,arm926ejs,arm1026ejs,arm1136js,arm1136jfs,arm1176jzs,arm1176jzfs,mpcorenovfp,mpcore,arm1156t2s,arm1156t2fs,cortexa5,cortexa8,cortexa9,cortexa15,cortexr4,cortexr4f,cortexr5,cortexm4,cortexm3,cortexm1,cortexm0\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "7b8fe4254cd62a0cb80419e451b0d84be26bf197", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -662,12 +662,13 @@ static int thumb_call_reg_needed;\n #define FL_THUMB2     (1 << 16)\t      /* Thumb-2.  */\n #define FL_NOTM\t      (1 << 17)\t      /* Instructions not present in the 'M'\n \t\t\t\t\t profile.  */\n-#define FL_DIV\t      (1 << 18)\t      /* Hardware divide.  */\n+#define FL_THUMB_DIV  (1 << 18)\t      /* Hardware divide (Thumb mode).  */\n #define FL_VFPV3      (1 << 19)       /* Vector Floating Point V3.  */\n #define FL_NEON       (1 << 20)       /* Neon instructions.  */\n #define FL_ARCH7EM    (1 << 21)\t      /* Instructions present in the ARMv7E-M\n \t\t\t\t\t architecture.  */\n #define FL_ARCH7      (1 << 22)       /* Architecture 7.  */\n+#define FL_ARM_DIV    (1 << 23)\t      /* Hardware divide (ARM mode).  */\n \n #define FL_IWMMXT     (1 << 29)\t      /* XScale v2 or \"Intel Wireless MMX technology\".  */\n \n@@ -694,8 +695,8 @@ static int thumb_call_reg_needed;\n #define FL_FOR_ARCH6M\t(FL_FOR_ARCH6 & ~FL_NOTM)\n #define FL_FOR_ARCH7\t((FL_FOR_ARCH6T2 & ~FL_NOTM) | FL_ARCH7)\n #define FL_FOR_ARCH7A\t(FL_FOR_ARCH7 | FL_NOTM | FL_ARCH6K)\n-#define FL_FOR_ARCH7R\t(FL_FOR_ARCH7A | FL_DIV)\n-#define FL_FOR_ARCH7M\t(FL_FOR_ARCH7 | FL_DIV)\n+#define FL_FOR_ARCH7R\t(FL_FOR_ARCH7A | FL_THUMB_DIV)\n+#define FL_FOR_ARCH7M\t(FL_FOR_ARCH7 | FL_THUMB_DIV)\n #define FL_FOR_ARCH7EM  (FL_FOR_ARCH7M | FL_ARCH7EM)\n \n /* The bits in this mask specify which\n@@ -781,7 +782,8 @@ int arm_cpp_interwork = 0;\n int arm_arch_thumb2;\n \n /* Nonzero if chip supports integer division instruction.  */\n-int arm_arch_hwdiv;\n+int arm_arch_arm_hwdiv;\n+int arm_arch_thumb_hwdiv;\n \n /* In case of a PRE_INC, POST_INC, PRE_DEC, POST_DEC memory reference,\n    we must report the mode of the memory reference from\n@@ -1449,7 +1451,8 @@ arm_option_override (void)\n   arm_tune_wbuf = (tune_flags & FL_WBUF) != 0;\n   arm_tune_xscale = (tune_flags & FL_XSCALE) != 0;\n   arm_arch_iwmmxt = (insn_flags & FL_IWMMXT) != 0;\n-  arm_arch_hwdiv = (insn_flags & FL_DIV) != 0;\n+  arm_arch_thumb_hwdiv = (insn_flags & FL_THUMB_DIV) != 0;\n+  arm_arch_arm_hwdiv = (insn_flags & FL_ARM_DIV) != 0;\n   arm_tune_cortex_a9 = (arm_tune == cortexa9) != 0;\n \n   /* If we are not using the default (ARM mode) section anchor offset\n@@ -23019,6 +23022,7 @@ arm_issue_rate (void)\n     {\n     case cortexr4:\n     case cortexr4f:\n+    case cortexr5:\n     case cortexa5:\n     case cortexa8:\n     case cortexa9:"}, {"sha": "3b90201ad232a07fbbcf002e7182bf00ef8d90c0", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -101,6 +101,8 @@ extern char arm_arch_name[];\n \t      builtin_define (\"__ARM_PCS\");\t\t\\\n \t    builtin_define (\"__ARM_EABI__\");\t\t\\\n \t  }\t\t\t\t\t\t\\\n+\tif (TARGET_IDIV)\t\t\t\t\\\n+\t  builtin_define (\"__ARM_ARCH_EXT_IDIV__\");\t\\\n     } while (0)\n \n #include \"config/arm/arm-opts.h\"\n@@ -290,6 +292,10 @@ extern void (*arm_lang_output_object_attributes_hook)(void);\n /* Nonzero if this chip supports ldrex{bhd} and strex{bhd}.  */\n #define TARGET_HAVE_LDREXBHD\t((arm_arch6k && TARGET_ARM) || arm_arch7)\n \n+/* Nonzero if integer division instructions supported.  */\n+#define TARGET_IDIV\t\t((TARGET_ARM && arm_arch_arm_hwdiv) \\\n+\t\t\t\t || (TARGET_THUMB2 && arm_arch_thumb_hwdiv))\n+\n /* True iff the full BPABI is being used.  If TARGET_BPABI is true,\n    then TARGET_AAPCS_BASED must be true -- but the converse does not\n    hold.  TARGET_BPABI implies the use of the BPABI runtime library,\n@@ -430,8 +436,11 @@ extern int arm_cpp_interwork;\n /* Nonzero if chip supports Thumb 2.  */\n extern int arm_arch_thumb2;\n \n-/* Nonzero if chip supports integer division instruction.  */\n-extern int arm_arch_hwdiv;\n+/* Nonzero if chip supports integer division instruction in ARM mode.  */\n+extern int arm_arch_arm_hwdiv;\n+\n+/* Nonzero if chip supports integer division instruction in Thumb mode.  */\n+extern int arm_arch_thumb_hwdiv;\n \n #ifndef TARGET_DEFAULT\n #define TARGET_DEFAULT  (MASK_APCS_FRAME)"}, {"sha": "f5b97f65c23d7c24e2101b86c2eb6c74f97fe2fa", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -496,7 +496,7 @@\n \n (define_attr \"tune_cortexr4\" \"yes,no\"\n   (const (if_then_else\n-\t  (eq_attr \"tune\" \"cortexr4,cortexr4f\")\n+\t  (eq_attr \"tune\" \"cortexr4,cortexr4f,cortexr5\")\n \t  (const_string \"yes\")\n \t  (const_string \"no\"))))\n \n@@ -3681,6 +3681,28 @@\n    (set_attr \"predicable\" \"yes\")]\n )\n \n+\n+;; Division instructions\n+(define_insn \"divsi3\"\n+  [(set (match_operand:SI\t  0 \"s_register_operand\" \"=r\")\n+\t(div:SI (match_operand:SI 1 \"s_register_operand\"  \"r\")\n+\t\t(match_operand:SI 2 \"s_register_operand\"  \"r\")))]\n+  \"TARGET_IDIV\"\n+  \"sdiv%?\\t%0, %1, %2\"\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"insn\" \"sdiv\")]\n+)\n+\n+(define_insn \"udivsi3\"\n+  [(set (match_operand:SI\t   0 \"s_register_operand\" \"=r\")\n+\t(udiv:SI (match_operand:SI 1 \"s_register_operand\"  \"r\")\n+\t\t (match_operand:SI 2 \"s_register_operand\"  \"r\")))]\n+  \"TARGET_IDIV\"\n+  \"udiv%?\\t%0, %1, %2\"\n+  [(set_attr \"predicable\" \"yes\")\n+   (set_attr \"insn\" \"udiv\")]\n+)\n+\n \f\n ;; Unary arithmetic insns\n "}, {"sha": "26dcbdde83e3d689caeb2912191e3f4b33edfe43", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -779,26 +779,6 @@\n    (set_attr \"length\" \"2\")]\n )\n \n-(define_insn \"divsi3\"\n-  [(set (match_operand:SI\t  0 \"s_register_operand\" \"=r\")\n-\t(div:SI (match_operand:SI 1 \"s_register_operand\"  \"r\")\n-\t\t(match_operand:SI 2 \"s_register_operand\"  \"r\")))]\n-  \"TARGET_THUMB2 && arm_arch_hwdiv\"\n-  \"sdiv%?\\t%0, %1, %2\"\n-  [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"insn\" \"sdiv\")]\n-)\n-\n-(define_insn \"udivsi3\"\n-  [(set (match_operand:SI\t   0 \"s_register_operand\" \"=r\")\n-\t(udiv:SI (match_operand:SI 1 \"s_register_operand\"  \"r\")\n-\t\t (match_operand:SI 2 \"s_register_operand\"  \"r\")))]\n-  \"TARGET_THUMB2 && arm_arch_hwdiv\"\n-  \"udiv%?\\t%0, %1, %2\"\n-  [(set_attr \"predicable\" \"yes\")\n-   (set_attr \"insn\" \"udiv\")]\n-)\n-\n (define_insn \"*thumb2_subsi_short\"\n   [(set (match_operand:SI 0 \"low_register_operand\" \"=l\")\n \t(minus:SI (match_operand:SI 1 \"low_register_operand\" \"l\")"}, {"sha": "585901e29dac98ceee235c92321f41878fabe544", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/572070efe35a919dc526dd7972dc7d3b3015a4f5/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=572070efe35a919dc526dd7972dc7d3b3015a4f5", "patch": "@@ -10241,7 +10241,8 @@ assembly code.  Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{arm1136j-s}, @samp{arm1136jf-s}, @samp{mpcore}, @samp{mpcorenovfp},\n @samp{arm1156t2-s}, @samp{arm1156t2f-s}, @samp{arm1176jz-s}, @samp{arm1176jzf-s},\n @samp{cortex-a5}, @samp{cortex-a8}, @samp{cortex-a9}, @samp{cortex-a15},\n-@samp{cortex-r4}, @samp{cortex-r4f}, @samp{cortex-m4}, @samp{cortex-m3},\n+@samp{cortex-r4}, @samp{cortex-r4f}, @samp{cortex-r5},\n+@samp{cortex-m4}, @samp{cortex-m3},\n @samp{cortex-m1},\n @samp{cortex-m0},\n @samp{xscale}, @samp{iwmmxt}, @samp{iwmmxt2}, @samp{ep9312}."}]}