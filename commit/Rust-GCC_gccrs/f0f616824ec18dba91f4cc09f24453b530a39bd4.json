{"sha": "f0f616824ec18dba91f4cc09f24453b530a39bd4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjBmNjE2ODI0ZWMxOGRiYTkxZjRjYzA5ZjI0NDUzYjUzMGEzOWJkNA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@cygnus.co.uk", "date": "1999-10-10T11:52:53Z"}, "committer": {"name": "Bernd Schmidt", "email": "crux@gcc.gnu.org", "date": "1999-10-10T11:52:53Z"}, "message": "Fix docs for ADDRESS rtx\n\nFrom-SVN: r29888", "tree": {"sha": "3d895a7c21d234a10661bf3e239255ce7dda1984", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d895a7c21d234a10661bf3e239255ce7dda1984"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f0f616824ec18dba91f4cc09f24453b530a39bd4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f616824ec18dba91f4cc09f24453b530a39bd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f0f616824ec18dba91f4cc09f24453b530a39bd4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f0f616824ec18dba91f4cc09f24453b530a39bd4/comments", "author": null, "committer": null, "parents": [{"sha": "17bec8eee76776352741422eb69c48788c2ddf1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17bec8eee76776352741422eb69c48788c2ddf1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17bec8eee76776352741422eb69c48788c2ddf1c"}], "stats": {"total": 37, "additions": 8, "deletions": 29}, "files": [{"sha": "7bbd26bc85c92530230622d9f3697fbcd155d2ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f616824ec18dba91f4cc09f24453b530a39bd4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f616824ec18dba91f4cc09f24453b530a39bd4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f0f616824ec18dba91f4cc09f24453b530a39bd4", "patch": "@@ -3,6 +3,11 @@ Sun Oct 10 13:28:48 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \t* loop.c (find_and_verify_loops): When looking for a BARRIER, don't\n \tuse one before a jump table.\n \n+\t* rtl.def (ADDRESS): Change documentation to match reality.\n+\t* md.texi: Don't document it.\n+\t* gmicro.md (load address pattern): Use 'p' constraint, delete use\n+\tof ADDRESS rtx.\n+\n Sun Oct 10 02:41:41 1999  Richard Henderson  <rth@cygnus.com>\n \n \t* genrecog.c (add_to_sequence): Move allow_const_int test outside"}, {"sha": "ff448cf33187fbe906b2a2a3545f028edfb47aa7", "filename": "gcc/config/gmicro/gmicro.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f616824ec18dba91f4cc09f24453b530a39bd4/gcc%2Fconfig%2Fgmicro%2Fgmicro.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f616824ec18dba91f4cc09f24453b530a39bd4/gcc%2Fconfig%2Fgmicro%2Fgmicro.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgmicro%2Fgmicro.md?ref=f0f616824ec18dba91f4cc09f24453b530a39bd4", "patch": "@@ -2624,7 +2624,7 @@\n /* mova.[whq] 89.08.11 for test M.Yuhara */\n ;(define_insn \"\"\n ;  [(set (match_operand:SI 0 \"general_operand\" \"=rm\")\n-;\t(address (match_operand:SI 1 \"address_operand\" \"p\")))]\n+;\t(match_operand:SI 1 \"address_operand\" \"p\"))]\n ;  \"\"\n ;  \"*\n ;{\n@@ -2645,7 +2645,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:SI 0 \"general_operand\" \"=rm\")\n-\t(address (match_operand:HI 1 \"address_operand\" \"\")))]\n+\t(match_operand:HI 1 \"address_operand\" \"p\"))]\n   \"\"\n   \"*\n {"}, {"sha": "2910473de026a8f9fe4816bd42ac96856b7ef584", "filename": "gcc/md.texi", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f616824ec18dba91f4cc09f24453b530a39bd4/gcc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f616824ec18dba91f4cc09f24453b530a39bd4/gcc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmd.texi?ref=f0f616824ec18dba91f4cc09f24453b530a39bd4", "patch": "@@ -420,29 +420,6 @@ The machine mode @var{m} of @code{match_insn2} works like that of\n predicate function, and that function is solely responsible for\n deciding whether the expression to be matched ``has'' that mode.\n \n-@findex address\n-@item (address (match_operand:@var{m} @var{n} \"address_operand\" \"\"))\n-This complex of expressions is a placeholder for an operand number\n-@var{n} in a ``load address'' instruction: an operand which specifies\n-a memory location in the usual way, but for which the actual operand\n-value used is the address of the location, not the contents of the\n-location.\n-\n-@code{address} expressions never appear in RTL code, only in machine\n-descriptions.  And they are used only in machine descriptions that do\n-not use the operand constraint feature.  When operand constraints are\n-in use, the letter @samp{p} in the constraint serves this purpose.\n-\n-@var{m} is the machine mode of the @emph{memory location being\n-addressed}, not the machine mode of the address itself.  That mode is\n-always the same on a given target machine (it is @code{Pmode}, which\n-normally is @code{SImode}), so there is no point in mentioning it;\n-thus, no machine mode is written in the @code{address} expression.  If\n-some day support is added for machines in which addresses of different\n-kinds of objects appear differently or are used differently (such as\n-the PDP-10), different formats would perhaps need different machine\n-modes and these modes might be written in the @code{address}\n-expression.\n @end table\n \n @node Output Template"}, {"sha": "bb7c5bc09bb779a6e6a1bc930735f8ea77a332f7", "filename": "gcc/rtl.def", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f0f616824ec18dba91f4cc09f24453b530a39bd4/gcc%2Frtl.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f0f616824ec18dba91f4cc09f24453b530a39bd4/gcc%2Frtl.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.def?ref=f0f616824ec18dba91f4cc09f24453b530a39bd4", "patch": "@@ -289,10 +289,7 @@ DEF_RTL_EXPR(DEFINE_ASM_ATTRIBUTES, \"define_asm_attributes\", \"V\", 'x' )\n    `emit_insn' takes the SEQUENCE apart and makes separate insns.  */\n DEF_RTL_EXPR(SEQUENCE, \"sequence\", \"E\", 'x')\n \n-/* Refers to the address of its argument.\n-   This appears only in machine descriptions, indicating that\n-   any expression that would be acceptable as the operand of MEM\n-   should be matched.  */\n+/* Refers to the address of its argument.  This is only used in alias.c.  */\n DEF_RTL_EXPR(ADDRESS, \"address\", \"e\", 'm')\n \n /* ----------------------------------------------------------------------"}]}