{"sha": "a26495282ef7adf3dd8ee3f5fc18149883e52e68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTI2NDk1MjgyZWY3YWRmM2RkOGVlM2Y1ZmMxODE0OTg4M2U1MmU2OA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2008-09-09T23:57:41Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2008-09-09T23:57:41Z"}, "message": "re PR other/37265 (mt_allocator.cc:646: ICE: in gt_ggc_m_S, at ggc-page.c:1281)\n\n\tPR other/37265\n\t* dwarf2asm.c (dw2_force_const_mem): Use unstripped symbol name for\n\tsplay tree lookup.\n\t(dw2_output_indirect_constant_1): Use unstripped name in symbol\n\treference.\n\nFrom-SVN: r140183", "tree": {"sha": "78c9d9a49b46d8a9f3fe052907848735b90187cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78c9d9a49b46d8a9f3fe052907848735b90187cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a26495282ef7adf3dd8ee3f5fc18149883e52e68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26495282ef7adf3dd8ee3f5fc18149883e52e68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a26495282ef7adf3dd8ee3f5fc18149883e52e68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a26495282ef7adf3dd8ee3f5fc18149883e52e68/comments", "author": null, "committer": null, "parents": [{"sha": "05665c0620a279b1558d4b6a4ae2e45b80d8cf15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05665c0620a279b1558d4b6a4ae2e45b80d8cf15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05665c0620a279b1558d4b6a4ae2e45b80d8cf15"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "7178941e146312da07cbaedac1d34ba23b66427a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26495282ef7adf3dd8ee3f5fc18149883e52e68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26495282ef7adf3dd8ee3f5fc18149883e52e68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a26495282ef7adf3dd8ee3f5fc18149883e52e68", "patch": "@@ -1,3 +1,11 @@\n+2008-09-09  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR other/37265\n+\t* dwarf2asm.c (dw2_force_const_mem): Use unstripped symbol name for\n+\tsplay tree lookup.\n+\t(dw2_output_indirect_constant_1): Use unstripped name in symbol\n+\treference.\n+\n 2008-09-09  Sandra Loosemore  <sandra@codesourcery.com>\n \n \t* doc/invoke.texi (ARM Options): Correct errors in discussion "}, {"sha": "e490b34a10a055906c1708b3a880c6c415876598", "filename": "gcc/dwarf2asm.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a26495282ef7adf3dd8ee3f5fc18149883e52e68/gcc%2Fdwarf2asm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a26495282ef7adf3dd8ee3f5fc18149883e52e68/gcc%2Fdwarf2asm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2asm.c?ref=a26495282ef7adf3dd8ee3f5fc18149883e52e68", "patch": "@@ -807,7 +807,7 @@ rtx\n dw2_force_const_mem (rtx x, bool is_public)\n {\n   splay_tree_node node;\n-  const char *str;\n+  const char *key;\n   tree decl;\n \n   if (! indirect_pool)\n@@ -817,13 +817,14 @@ dw2_force_const_mem (rtx x, bool is_public)\n \n   gcc_assert (GET_CODE (x) == SYMBOL_REF);\n \n-  str = targetm.strip_name_encoding (XSTR (x, 0));\n-  node = splay_tree_lookup (indirect_pool, (splay_tree_key) str);\n+  key = XSTR (x, 0);\n+  node = splay_tree_lookup (indirect_pool, (splay_tree_key) key);\n   if (node)\n     decl = (tree) node->value;\n   else\n     {\n       tree id;\n+      const char *str = targetm.strip_name_encoding (key);\n \n       if (is_public && USE_LINKONCE_INDIRECT)\n \t{\n@@ -856,7 +857,7 @@ dw2_force_const_mem (rtx x, bool is_public)\n       if (id)\n \tTREE_SYMBOL_REFERENCED (id) = 1;\n \n-      splay_tree_insert (indirect_pool, (splay_tree_key) str,\n+      splay_tree_insert (indirect_pool, (splay_tree_key) key,\n \t\t\t (splay_tree_value) decl);\n     }\n \n@@ -877,6 +878,7 @@ dw2_output_indirect_constant_1 (splay_tree_node node,\n   sym = (const char *) node->key;\n   decl = (tree) node->value;\n   sym_ref = gen_rtx_SYMBOL_REF (Pmode, sym);\n+  sym = targetm.strip_name_encoding (sym);\n   if (TREE_PUBLIC (decl) && USE_LINKONCE_INDIRECT)\n     fprintf (asm_out_file, \"\\t.hidden %sDW.ref.%s\\n\", user_label_prefix, sym);\n   assemble_variable (decl, 1, 1, 1);"}]}