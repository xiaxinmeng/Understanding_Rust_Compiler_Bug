{"sha": "a23644f23da672210ea6a443cefb7cd17111b160", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIzNjQ0ZjIzZGE2NzIyMTBlYTZhNDQzY2VmYjdjZDE3MTExYjE2MA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2018-01-03T07:16:35Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2018-01-03T07:16:35Z"}, "message": "poly_int: vect_get_constant_vectors\n\nFor now, vect_get_constant_vectors can only cope with constant-length\nvectors, although a patch after the main SVE submission relaxes this.\nThis patch adds an appropriate guard for variable-length vectors.\nThe TYPE_VECTOR_SUBPARTS use in vect_get_constant_vectors will then\nhave a to_constant call when TYPE_VECTOR_SUBPARTS becomes a poly_int.\n\n2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Alan Hayward  <alan.hayward@arm.com>\n\t    David Sherwood  <david.sherwood@arm.com>\n\ngcc/\n\t* tree-vect-slp.c (vect_get_and_check_slp_defs): Reject\n\tconstant and extern definitions for variable-length vectors.\n\t(vect_get_constant_vectors): Note that the number of units\n\tis known to be constant.\n\nCo-Authored-By: Alan Hayward <alan.hayward@arm.com>\nCo-Authored-By: David Sherwood <david.sherwood@arm.com>\n\nFrom-SVN: r256140", "tree": {"sha": "38ba2c3436c87fbfe2689af647dde5be2eea06fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38ba2c3436c87fbfe2689af647dde5be2eea06fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a23644f23da672210ea6a443cefb7cd17111b160", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23644f23da672210ea6a443cefb7cd17111b160", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a23644f23da672210ea6a443cefb7cd17111b160", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a23644f23da672210ea6a443cefb7cd17111b160/comments", "author": null, "committer": null, "parents": [{"sha": "062d5ccc1180aa6bca717309d26408a029af1fd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062d5ccc1180aa6bca717309d26408a029af1fd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062d5ccc1180aa6bca717309d26408a029af1fd7"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "c25eb15242cb6f84e06e040df3fb02d48bac7b46", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23644f23da672210ea6a443cefb7cd17111b160/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23644f23da672210ea6a443cefb7cd17111b160/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a23644f23da672210ea6a443cefb7cd17111b160", "patch": "@@ -1,3 +1,12 @@\n+2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Alan Hayward  <alan.hayward@arm.com>\n+\t    David Sherwood  <david.sherwood@arm.com>\n+\n+\t* tree-vect-slp.c (vect_get_and_check_slp_defs): Reject\n+\tconstant and extern definitions for variable-length vectors.\n+\t(vect_get_constant_vectors): Note that the number of units\n+\tis known to be constant.\n+\n 2018-01-03  Richard Sandiford  <richard.sandiford@linaro.org>\n \t    Alan Hayward  <alan.hayward@arm.com>\n \t    David Sherwood  <david.sherwood@arm.com>"}, {"sha": "4aa816f7886305e103c7807219003ce38613c5f3", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a23644f23da672210ea6a443cefb7cd17111b160/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a23644f23da672210ea6a443cefb7cd17111b160/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=a23644f23da672210ea6a443cefb7cd17111b160", "patch": "@@ -405,6 +405,20 @@ vect_get_and_check_slp_defs (vec_info *vinfo, unsigned char *swap,\n \t{\n \tcase vect_constant_def:\n \tcase vect_external_def:\n+\t  /* We must already have set a vector size by now.  */\n+\t  gcc_checking_assert (maybe_ne (current_vector_size, 0U));\n+\t  if (!current_vector_size.is_constant ())\n+\t    {\n+\t      if (dump_enabled_p ())\n+\t\t{\n+\t\t  dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n+\t\t\t\t   \"Build SLP failed: invalid type of def \"\n+\t\t\t\t   \"for variable-length SLP \");\n+\t\t  dump_generic_expr (MSG_MISSED_OPTIMIZATION, TDF_SLIM, oprnd);\n+\t\t  dump_printf (MSG_MISSED_OPTIMIZATION, \"\\n\");\n+\t\t}\n+\t      return -1;\n+\t    }\n \t  break;\n \n \tcase vect_reduction_def:\n@@ -3233,6 +3247,7 @@ vect_get_constant_vectors (tree op, slp_tree slp_node,\n       = build_same_sized_truth_vector_type (STMT_VINFO_VECTYPE (stmt_vinfo));\n   else\n     vector_type = get_vectype_for_scalar_type (TREE_TYPE (op));\n+  /* Enforced by vect_get_and_check_slp_defs.  */\n   nunits = TYPE_VECTOR_SUBPARTS (vector_type);\n \n   if (STMT_VINFO_DATA_REF (stmt_vinfo))"}]}