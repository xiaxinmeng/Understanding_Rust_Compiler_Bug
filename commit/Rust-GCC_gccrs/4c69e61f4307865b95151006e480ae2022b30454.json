{"sha": "4c69e61f4307865b95151006e480ae2022b30454", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGM2OWU2MWY0MzA3ODY1Yjk1MTUxMDA2ZTQ4MGFlMjAyMmIzMDQ1NA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-01T09:44:09Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2020-10-01T23:06:25Z"}, "message": "[RS6000] ICE in decompose, at rtl.h:2282\n\nduring RTL pass: fwprop1\ngcc.dg/pr82596.c: In function 'test_cststring':\ngcc.dg/pr82596.c:27:1: internal compiler error: in decompose, at rtl.h:2282\n\n-m32 gcc/testsuite/gcc.dg/pr82596.c fails along with other tests after\napplying rtx_cost patches, which exposed a backend bug.\nlegitimize_address when presented with the following address\n\t(plus (reg) (const_int 0x7ffffffff))\nattempts to rewrite it as a high/low sum.  The low part is 0xffff, or\n-1, making the high part 0x80000000.  But this is no longer canonical\nfor SImode.\n\n\t* config/rs6000/rs6000.c (rs6000_legitimize_address): Use\n\tgen_int_mode for high part of address constant.", "tree": {"sha": "efcf3a1081fe6d6ad8d3080f989a7148e8e04dad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efcf3a1081fe6d6ad8d3080f989a7148e8e04dad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c69e61f4307865b95151006e480ae2022b30454", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c69e61f4307865b95151006e480ae2022b30454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c69e61f4307865b95151006e480ae2022b30454", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c69e61f4307865b95151006e480ae2022b30454/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d26cc5885a491dedad0bdf3468a7b91c1f75a868", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d26cc5885a491dedad0bdf3468a7b91c1f75a868", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d26cc5885a491dedad0bdf3468a7b91c1f75a868"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "69c4f368efb8edbdf7348ca43f8adfbecbed0c05", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c69e61f4307865b95151006e480ae2022b30454/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c69e61f4307865b95151006e480ae2022b30454/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=4c69e61f4307865b95151006e480ae2022b30454", "patch": "@@ -8455,7 +8455,7 @@ rs6000_legitimize_address (rtx x, rtx oldx ATTRIBUTE_UNUSED,\n \tlow_int = 0;\n       high_int = INTVAL (XEXP (x, 1)) - low_int;\n       sum = force_operand (gen_rtx_PLUS (Pmode, XEXP (x, 0),\n-\t\t\t\t\t GEN_INT (high_int)), 0);\n+\t\t\t\t\t gen_int_mode (high_int, Pmode)), 0);\n       return plus_constant (Pmode, sum, low_int);\n     }\n   else if (GET_CODE (x) == PLUS"}]}