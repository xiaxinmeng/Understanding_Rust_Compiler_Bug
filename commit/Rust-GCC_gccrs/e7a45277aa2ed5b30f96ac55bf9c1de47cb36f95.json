{"sha": "e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdhNDUyNzdhYTJlZDViMzBmOTZhYzU1YmY5YzFkZTQ3Y2IzNmY5NQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2014-08-04T10:06:28Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2014-08-04T10:06:28Z"}, "message": "[doc] Document clrsb optab and fix some inconsistencies.\n\n\t* doc/md.texi (clrsb): Document.\n\t(clz): Change reference to x into operand 1.\n\t(ctz): Likewise.\n\t(popcount): Likewise.\n\nCo-Authored-By: James Greenhalgh <james.greenhalgh@arm.com>\n\nFrom-SVN: r213557", "tree": {"sha": "d43087527edd7bf3ca97c48b0e11cf87bcc14945", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d43087527edd7bf3ca97c48b0e11cf87bcc14945"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97334291c223eea459531b1c0691da465387b6a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97334291c223eea459531b1c0691da465387b6a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97334291c223eea459531b1c0691da465387b6a2"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "336c9ba74cd79f4313c67e5a093726392cb54209", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95", "patch": "@@ -1,3 +1,11 @@\n+2014-08-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+            James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* doc/md.texi (clrsb): Document.\n+\t(clz): Change reference to x into operand 1.\n+\t(ctz): Likewise.\n+\t(popcount): Likewise.\n+\n 2014-08-04  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR target/61713"}, {"sha": "dd7861188afb8afd01971f9f75f0e32da9f9f826", "filename": "gcc/doc/md.texi", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95/gcc%2Fdoc%2Fmd.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95/gcc%2Fdoc%2Fmd.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmd.texi?ref=e7a45277aa2ed5b30f96ac55bf9c1de47cb36f95", "patch": "@@ -5316,10 +5316,18 @@ generating the instruction.\n The @code{ffs} built-in function of C always uses the mode which\n corresponds to the C data type @code{int}.\n \n+@cindex @code{clrsb@var{m}2} instruction pattern\n+@item @samp{clrsb@var{m}2}\n+Count leading redundant sign bits.\n+Store into operand 0 the number of redundant sign bits in operand 1, starting\n+at the most significant bit position.\n+A redundant sign bit is defined as any sign bit after the first. As such,\n+this count will be one less than the count of leading sign bits.\n+\n @cindex @code{clz@var{m}2} instruction pattern\n @item @samp{clz@var{m}2}\n-Store into operand 0 the number of leading 0-bits in @var{x}, starting\n-at the most significant bit position.  If @var{x} is 0, the\n+Store into operand 0 the number of leading 0-bits in operand 1, starting\n+at the most significant bit position.  If operand 1 is 0, the\n @code{CLZ_DEFINED_VALUE_AT_ZERO} (@pxref{Misc}) macro defines if\n the result is undefined or has a useful value.\n @var{m} is the mode of operand 0; operand 1's mode is\n@@ -5328,8 +5336,8 @@ operand to that mode before generating the instruction.\n \n @cindex @code{ctz@var{m}2} instruction pattern\n @item @samp{ctz@var{m}2}\n-Store into operand 0 the number of trailing 0-bits in @var{x}, starting\n-at the least significant bit position.  If @var{x} is 0, the\n+Store into operand 0 the number of trailing 0-bits in operand 1, starting\n+at the least significant bit position.  If operand 1 is 0, the\n @code{CTZ_DEFINED_VALUE_AT_ZERO} (@pxref{Misc}) macro defines if\n the result is undefined or has a useful value.\n @var{m} is the mode of operand 0; operand 1's mode is\n@@ -5338,15 +5346,15 @@ operand to that mode before generating the instruction.\n \n @cindex @code{popcount@var{m}2} instruction pattern\n @item @samp{popcount@var{m}2}\n-Store into operand 0 the number of 1-bits in @var{x}.  @var{m} is the\n+Store into operand 0 the number of 1-bits in operand 1.  @var{m} is the\n mode of operand 0; operand 1's mode is specified by the instruction\n pattern, and the compiler will convert the operand to that mode before\n generating the instruction.\n \n @cindex @code{parity@var{m}2} instruction pattern\n @item @samp{parity@var{m}2}\n-Store into operand 0 the parity of @var{x}, i.e.@: the number of 1-bits\n-in @var{x} modulo 2.  @var{m} is the mode of operand 0; operand 1's mode\n+Store into operand 0 the parity of operand 1, i.e.@: the number of 1-bits\n+in operand 1 modulo 2.  @var{m} is the mode of operand 0; operand 1's mode\n is specified by the instruction pattern, and the compiler will convert\n the operand to that mode before generating the instruction.\n "}]}