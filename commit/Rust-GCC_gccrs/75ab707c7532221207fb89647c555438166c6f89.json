{"sha": "75ab707c7532221207fb89647c555438166c6f89", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVhYjcwN2M3NTMyMjIxMjA3ZmI4OTY0N2M1NTU0MzgxNjZjNmY4OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2012-10-03T14:21:20Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2012-10-03T14:21:20Z"}, "message": "re PR c++/54777 ([C++11] Comma operator in constexpr environment can cause ICE)\n\n\tPR c++/54777\n\t* semantics.c (cxx_eval_constant_expression) <case COMPOUND_EXPR>: If\n\tnot ignoring the second operand, pass the original second operand\n\tand not one with stripped nops to cxx_eval_constant_expression.\n\n\t* g++.dg/cpp0x/constexpr-ref4.C: New test.\n\nFrom-SVN: r192036", "tree": {"sha": "a25c4a048d2a1b6eb4bf140ffce41e529962fb69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a25c4a048d2a1b6eb4bf140ffce41e529962fb69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75ab707c7532221207fb89647c555438166c6f89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ab707c7532221207fb89647c555438166c6f89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75ab707c7532221207fb89647c555438166c6f89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75ab707c7532221207fb89647c555438166c6f89/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2352eadb81e329fad9adbead81db9203610aa19a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2352eadb81e329fad9adbead81db9203610aa19a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2352eadb81e329fad9adbead81db9203610aa19a"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "223e42a0d4c9f434ecbdba7935a9f013645cc831", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ab707c7532221207fb89647c555438166c6f89/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ab707c7532221207fb89647c555438166c6f89/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=75ab707c7532221207fb89647c555438166c6f89", "patch": "@@ -1,3 +1,10 @@\n+2012-10-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/54777\n+\t* semantics.c (cxx_eval_constant_expression) <case COMPOUND_EXPR>: If\n+\tnot ignoring the second operand, pass the original second operand\n+\tand not one with stripped nops to cxx_eval_constant_expression.\n+\n 2012-10-01  Jason Merrill  <jason@redhat.com>\n \n \t* decl.c (check_initializer): Set DECL_NONTRIVIALLY_INITIALIZED_P"}, {"sha": "68cbb4ba8c408ac978cbded38a1b975fdc44fbf7", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ab707c7532221207fb89647c555438166c6f89/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ab707c7532221207fb89647c555438166c6f89/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=75ab707c7532221207fb89647c555438166c6f89", "patch": "@@ -7740,6 +7740,7 @@ cxx_eval_constant_expression (const constexpr_call *call, tree t,\n \t    /* Check that the LHS is constant and then discard it.  */\n \t    cxx_eval_constant_expression (call, op0, allow_non_constant,\n \t\t\t\t\t  false, non_constant_p);\n+\t    op1 = TREE_OPERAND (t, 1);\n \t    r = cxx_eval_constant_expression (call, op1, allow_non_constant,\n \t\t\t\t\t      addr, non_constant_p);\n \t  }"}, {"sha": "659fa534d9f5dd34df4561716ca8335d7d9a7fd9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ab707c7532221207fb89647c555438166c6f89/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ab707c7532221207fb89647c555438166c6f89/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75ab707c7532221207fb89647c555438166c6f89", "patch": "@@ -1,3 +1,8 @@\n+2012-10-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/54777\n+\t* g++.dg/cpp0x/constexpr-ref4.C: New test.\n+\n 2012-10-02  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/54778"}, {"sha": "6ae355a273f546ff2487eed64ca118cbdccbe9ba", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-ref4.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75ab707c7532221207fb89647c555438166c6f89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75ab707c7532221207fb89647c555438166c6f89/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-ref4.C?ref=75ab707c7532221207fb89647c555438166c6f89", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/54777\n+// { dg-options -std=c++0x }\n+\n+struct S\n+{\n+  int s[1];\n+  constexpr const int &foo (unsigned i) { return (i < 1 ? 0 : throw 1), s[i]; }\n+  constexpr const int &bar (unsigned i) { return i < 1 ? s[i] : (throw 0, s[i]); }\n+};\n+\n+int\n+main ()\n+{\n+  constexpr S a {};\n+  constexpr int i = a.foo (0);\n+  constexpr int j = a.bar (0);\n+  static_assert (i == j, \"Ouch\");\n+}"}]}