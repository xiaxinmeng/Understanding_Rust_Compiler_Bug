{"sha": "7fb90b988559af41c85e474aea29ba8f8b4c82f7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2ZiOTBiOTg4NTU5YWY0MWM4NWU0NzRhZWEyOWJhOGY4YjRjODJmNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-30T20:14:26Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-30T20:14:26Z"}, "message": "(convert_arguments): If PROMOTE_PROTOTYPE, promote all integral types\nshorter than int, including short enums.\n\nFrom-SVN: r5229", "tree": {"sha": "79bab6ec12cdc8dc51815f30f5aa37ccdc6b69d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/79bab6ec12cdc8dc51815f30f5aa37ccdc6b69d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7fb90b988559af41c85e474aea29ba8f8b4c82f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb90b988559af41c85e474aea29ba8f8b4c82f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7fb90b988559af41c85e474aea29ba8f8b4c82f7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7fb90b988559af41c85e474aea29ba8f8b4c82f7/comments", "author": null, "committer": null, "parents": [{"sha": "fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd48df3e75dbf1e7ab370d8d1aecbf522cfc893c"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "3cea85d62e3d82bc3465429ba748b68c00496a98", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7fb90b988559af41c85e474aea29ba8f8b4c82f7/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7fb90b988559af41c85e474aea29ba8f8b4c82f7/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=7fb90b988559af41c85e474aea29ba8f8b4c82f7", "patch": "@@ -2042,7 +2042,8 @@ convert_arguments (typelist, values, name, fundecl)\n \t      /* Rather than truncating and then reextending,\n \t\t convert directly to int, if that's the type we will want.  */\n \t      if (! flag_traditional\n-\t\t  && TREE_CODE (type) == INTEGER_TYPE\n+\t\t  && (TREE_CODE (type) == INTEGER_TYPE\n+\t\t      || TREE_CODE (type) == ENUMERAL_TYPE)\n \t\t  && (TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)))\n \t\ttype = integer_type_node;\n #endif\n@@ -2145,7 +2146,8 @@ convert_arguments (typelist, values, name, fundecl)\n \t\t\t\t\t\tfundecl, name, parmnum + 1);\n \t      \n #ifdef PROMOTE_PROTOTYPES\n-\t      if (TREE_CODE (type) == INTEGER_TYPE\n+\t      if ((TREE_CODE (type) == INTEGER_TYPE\n+\t\t   || TREE_CODE (type) == ENUMERAL_TYPE)\n \t\t  && (TYPE_PRECISION (type) < TYPE_PRECISION (integer_type_node)))\n \t\tparmval = default_conversion (parmval);\n #endif"}]}