{"sha": "44b84cc9182bffe8b7d751fe4ca1d90ebcce512d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRiODRjYzkxODJiZmZlOGI3ZDc1MWZlNGNhMWQ5MGViY2NlNTEyZA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-04-28T22:15:58Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-04-28T22:15:58Z"}, "message": "streambuf.tcc (__copy_streambufs): Don't use _M_buf_size (synced input is now correctly dealt with elsewhere)...\n\n2003-04-28  Paolo Carlini  <pcarlini@unitus.it>\n\n\t* include/bits/streambuf.tcc (__copy_streambufs): Don't use\n\t_M_buf_size (synced input is now correctly dealt with\n\telsewhere); when the output buffer is full don't fall back\n\tto a snextc-sputc loop, call overflow instead.\n\nFrom-SVN: r66190", "tree": {"sha": "b1851108b34e4e71b0c332de99d9c680050362b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1851108b34e4e71b0c332de99d9c680050362b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44b84cc9182bffe8b7d751fe4ca1d90ebcce512d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b84cc9182bffe8b7d751fe4ca1d90ebcce512d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44b84cc9182bffe8b7d751fe4ca1d90ebcce512d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44b84cc9182bffe8b7d751fe4ca1d90ebcce512d/comments", "author": null, "committer": null, "parents": [{"sha": "ca78f36ae3b7b61eb78dc8e7d624add10e8718df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca78f36ae3b7b61eb78dc8e7d624add10e8718df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca78f36ae3b7b61eb78dc8e7d624add10e8718df"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "853b8ace7b43256eee58306fe2f0dd16feed2ab1", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44b84cc9182bffe8b7d751fe4ca1d90ebcce512d/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44b84cc9182bffe8b7d751fe4ca1d90ebcce512d/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=44b84cc9182bffe8b7d751fe4ca1d90ebcce512d", "patch": "@@ -1,3 +1,10 @@\n+2003-04-28  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\t* include/bits/streambuf.tcc (__copy_streambufs): Don't use\n+\t_M_buf_size (synced input is now correctly dealt with\n+\telsewhere); when the output buffer is full don't fall back\n+\tto a snextc-sputc loop, call overflow instead.\n+\n 2003-04-28  Paolo Carlini  <pcarlini@unitus.it>\n \n \t* include/bits/sstream.tcc (pbackfail): Shorten a bit (6 lines)"}, {"sha": "1d1843f5eef4daf3b634075cd3a5634c3ecf999f", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44b84cc9182bffe8b7d751fe4ca1d90ebcce512d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44b84cc9182bffe8b7d751fe4ca1d90ebcce512d/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=44b84cc9182bffe8b7d751fe4ca1d90ebcce512d", "patch": "@@ -188,8 +188,6 @@ namespace std\n       typedef typename _Traits::off_type\toff_type;\n \n       streamsize __ret = 0;\n-      const off_type __buf_size =\n-\t__sbin->_M_buf_size > 0 ? __sbin->_M_buf_size : 1;\n       try \n \t{\n \t  for (;;)\n@@ -208,10 +206,9 @@ namespace std\n  \t      else \n \t\t{\n \t\t  streamsize __charsread;\n-\t\t  const off_type __size = std::min(__buf_size,\n-\t\t\t\t\t\t   off_type(__sbout->_M_out_end\n-\t\t\t\t\t\t   - __sbout->_M_out_cur));\n-\t\t  if (__size > 1)\n+\t\t  const off_type __size = __sbout->_M_out_end\n+\t\t                          - __sbout->_M_out_cur;\n+\t\t  if (__size)\n \t\t    {\n \t\t      _CharT* __buf =\n \t\t\tstatic_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)\n@@ -224,15 +221,15 @@ namespace std\n \t\t  else\n \t\t    {\n \t\t      __xtrct = __charsread = 0;\n-\t\t      int_type __c = __sbin->sgetc();\n-\t\t      while (!_Traits::eq_int_type(__c, _Traits::eof()))\n+\t\t      const int_type __c = __sbin->sgetc();\n+\t\t      if (!_Traits::eq_int_type(__c, _Traits::eof()))\n \t\t\t{\n \t\t\t  ++__charsread;\n-\t\t\t  if (_Traits::eq_int_type(__sbout->sputc(_Traits::to_char_type(__c)),\n+\t\t\t  if (_Traits::eq_int_type(__sbout->overflow(__c),\n \t\t\t\t\t\t   _Traits::eof()))\n \t\t\t    break;\n \t\t\t  ++__xtrct;\n-\t\t\t  __c = __sbin->snextc();\n+\t\t\t  __sbin->sbumpc();\n \t\t\t}\n \t\t    }\t\t      \n \t\t  __ret += __xtrct;"}]}