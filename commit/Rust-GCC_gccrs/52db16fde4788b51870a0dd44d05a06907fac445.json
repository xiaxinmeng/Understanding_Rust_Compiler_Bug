{"sha": "52db16fde4788b51870a0dd44d05a06907fac445", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJkYjE2ZmRlNDc4OGI1MTg3MGEwZGQ0NGQwNWEwNjkwN2ZhYzQ0NQ==", "commit": {"author": {"name": "Ken Raeburn", "email": "raeburn@cygnus.com", "date": "1998-10-07T18:26:06Z"}, "committer": {"name": "Ken Raeburn", "email": "raeburn@gcc.gnu.org", "date": "1998-10-07T18:26:06Z"}, "message": "981006-1.c: New test.\n\n* special/981006-1.c: New test.  Make sure gcc doesn't lose track of the\npossible targets of tablejump insns.\n* special/special.exp: Run it.\n\nFrom-SVN: r22899", "tree": {"sha": "fbffce8176edf31a169ac97ae8951f7617db870a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbffce8176edf31a169ac97ae8951f7617db870a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52db16fde4788b51870a0dd44d05a06907fac445", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52db16fde4788b51870a0dd44d05a06907fac445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52db16fde4788b51870a0dd44d05a06907fac445", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52db16fde4788b51870a0dd44d05a06907fac445/comments", "author": null, "committer": null, "parents": [{"sha": "5924eecfbcaf4606d1a8093d7de5a229a3c76ffb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5924eecfbcaf4606d1a8093d7de5a229a3c76ffb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5924eecfbcaf4606d1a8093d7de5a229a3c76ffb"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "6663d8a8dbb57cdc478e3e132e0f7de0e39aed86", "filename": "gcc/testsuite/gcc.c-torture/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52db16fde4788b51870a0dd44d05a06907fac445/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52db16fde4788b51870a0dd44d05a06907fac445/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2FChangeLog?ref=52db16fde4788b51870a0dd44d05a06907fac445", "patch": "@@ -1,3 +1,9 @@\n+1998-10-06  Ken Raeburn  <raeburn@cygnus.com>\n+\n+\t* special/981006-1.c: New test.  Make sure gcc doesn't lose track\n+\tof the possible targets of tablejump insns.\n+\t* special/special.exp: Run it.\n+\n Thu Oct  1 17:15:26 1998  Nick Clifton  <nickc@cygnus.com>\n \n \t* compile/981001-1.c: New test."}, {"sha": "6af6d9a8ea5afc93bd3aed600bda5822ecebb6c6", "filename": "gcc/testsuite/gcc.c-torture/special/981006-1.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52db16fde4788b51870a0dd44d05a06907fac445/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F981006-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52db16fde4788b51870a0dd44d05a06907fac445/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F981006-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2F981006-1.c?ref=52db16fde4788b51870a0dd44d05a06907fac445", "patch": "@@ -0,0 +1,50 @@\n+/* Test that tablejump insns are correctly handled.  If the compiler\n+   loses track of the jump targets, it will report that x and y can be\n+   used uninitialized.\n+\n+   This is broken in egcs 1998/10/06 for mips in pic mode.  */\n+/* { dg-do compile } */\n+\n+int foo (int a, int b)\n+{\n+  __label__ z;\n+  int x; /* { dg-bogus \"warning: `.' might be used uninitialized in this function\" } */\n+  int y; /* { dg-bogus \"warning: `.' might be used uninitialized in this function\" } */\n+  static void *p;\n+\n+  switch (a) {\n+  case 2:\n+    x = 4;\n+    break;\n+  case 4:\n+    x = 6;\n+    break;\n+  case 8: case 10: case 13: case 11: case 17: case 19:\n+    x = 7;\n+    break;\n+  default:\n+    x = -1;\n+    break;\n+  }\n+  switch (b) {\n+  case 2:\n+    y = 4;\n+    break;\n+  case 4:\n+    y = 6;\n+    break;\n+  case 8: case 10: case 13: case 11: case 17: case 19:\n+    y = 7;\n+    break;\n+  default:\n+    y = -1;\n+    break;\n+  }\n+ z:\n+  p = &&z;\n+  return x * y;\n+}\n+int main (int argc, char *argv[])\n+{\n+  return 1 == foo (argc, argc + 1);\n+}"}, {"sha": "d37d18c8a1dbcc0d85d94fa1a03e5f9d0f600aa0", "filename": "gcc/testsuite/gcc.c-torture/special/special.exp", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52db16fde4788b51870a0dd44d05a06907fac445/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2Fspecial.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52db16fde4788b51870a0dd44d05a06907fac445/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2Fspecial.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fspecial%2Fspecial.exp?ref=52db16fde4788b51870a0dd44d05a06907fac445", "patch": "@@ -34,6 +34,20 @@ load_lib gcc-dg.exp\n \n ################## ADD NEXT CASE HERE (NOT AT THE END) ##################\n \n+# 981006-1\n+# For MIPS at least, pic is needed to trigger the problem.\n+dg-init\n+if { [istarget rs6000-*-aix*]\n+     || [istarget powerpc*-*-aix*]\n+     || [istarget arm*-*-*]\n+} {\n+    set extra_flags \"\"\n+} else {\n+    set extra_flags \"-fpic\"\n+}\n+dg-runtest $srcdir/$subdir/981006-1.c \"-Wuninitialized -O2 $extra_flags\" \"\"\n+dg-finish\n+\n # 921210-1\n set lines [gcc_target_compile $srcdir/$subdir/921210-1.c \"\" preprocess \"\"]\n set lines [prune [split [prune_warnings [prune_gcc_output $lines]] \"\\n\"] \"\"]"}]}