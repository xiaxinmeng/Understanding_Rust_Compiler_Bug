{"sha": "a9410b4fe946b3f82ff2254b46ef53573897d68e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk0MTBiNGZlOTQ2YjNmODJmZjIyNTRiNDZlZjUzNTczODk3ZDY4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-12-21T19:38:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-12-21T19:38:35Z"}, "message": "Check that a partial specialization is more specialized.\n\n\t* pt.c (process_partial_specialization): Use\n\tget_partial_spec_bindings to check that the partial specialization\n\tis more specialized than the primary template.\n\nFrom-SVN: r243868", "tree": {"sha": "fcffa3b5c7642405863b779e6991c5dfc2a1ff09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fcffa3b5c7642405863b779e6991c5dfc2a1ff09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9410b4fe946b3f82ff2254b46ef53573897d68e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9410b4fe946b3f82ff2254b46ef53573897d68e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9410b4fe946b3f82ff2254b46ef53573897d68e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9410b4fe946b3f82ff2254b46ef53573897d68e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a93634ba09c4b33d95233e48d9c452a529555d05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a93634ba09c4b33d95233e48d9c452a529555d05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a93634ba09c4b33d95233e48d9c452a529555d05"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "7faac155e3408dc100275134575c8639bdc1c61b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a9410b4fe946b3f82ff2254b46ef53573897d68e", "patch": "@@ -1,5 +1,9 @@\n 2016-12-21  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (process_partial_specialization): Use\n+\tget_partial_spec_bindings to check that the partial specialization\n+\tis more specialized than the primary template.\n+\n \t* pt.c (convert_template_argument): Pass args to do_auto_deduction.\n \t(mark_template_parm): Handle deducibility from type of non-type\n \targument here."}, {"sha": "8abbcfb6f43f135b637aeb59aab6e53116c86c64", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=a9410b4fe946b3f82ff2254b46ef53573897d68e", "patch": "@@ -4606,9 +4606,20 @@ process_partial_specialization (tree decl)\n \t     \"primary template because it replaces multiple parameters \"\n \t     \"with a pack expansion\");\n       inform (DECL_SOURCE_LOCATION (maintmpl), \"primary template here\");\n+      /* Avoid crash in process_partial_specialization.  */\n       return decl;\n     }\n \n+  /* If we aren't in a dependent class, we can actually try deduction.  */\n+  else if (tpd.level == 1\n+\t   && !get_partial_spec_bindings (maintmpl, maintmpl, specargs))\n+    {\n+      if (permerror (input_location, \"partial specialization %qD is not \"\n+\t\t     \"more specialized than\", decl))\n+\tinform (DECL_SOURCE_LOCATION (maintmpl), \"primary template %qD\",\n+\t\tmaintmpl);\n+    }\n+\n   /* [temp.class.spec]\n \n      A partially specialized non-type argument expression shall not"}, {"sha": "898102167de83a35a34c64c3d3ef88fb0fe311bc", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-data2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-data2.C?ref=a9410b4fe946b3f82ff2254b46ef53573897d68e", "patch": "@@ -12,7 +12,7 @@ template<typename _Tp, _Tp v>\n   };\n \n // Partial specialization.\n-template<typename _Tp, _Tp v>\n+template<typename _Tp, _Tp* v>\n   struct A3<_Tp*, v>\n   {\n     typedef _Tp* value_type;"}, {"sha": "9ac59cd5f4109b22bf92e5db1463ffb73967999f", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic82.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic82.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic82.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic82.C?ref=a9410b4fe946b3f82ff2254b46ef53573897d68e", "patch": "@@ -3,9 +3,9 @@\n \n template<typename> struct A;\n \n-template<typename... T> struct A<T*...> // { dg-bogus \"cannot expand\" \"\" }\n+template<typename... T> struct A<T*...> // { dg-error \"\" }\n {\n   struct B;\n };\n \n-A<void*> a; // { dg-bogus \"incomplete type\" \"\" }\n+A<void*> a;"}, {"sha": "c751e7327ca9977600051f570269bd505d8c5db1", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic83.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic83.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic83.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic83.C?ref=a9410b4fe946b3f82ff2254b46ef53573897d68e", "patch": "@@ -3,6 +3,6 @@\n \n template<typename> struct A;\n \n-template<typename... T> struct A<T...> { }; // { dg-bogus \"cannot expand\" \"\" }\n+template<typename... T> struct A<T...> { }; // { dg-error \"\" }\n \n-A<int> a; // { dg-bogus \"incomplete type\" \"\" }\n+A<int> a;"}, {"sha": "1b56fb39fa1f64289906d514b1138ffcef96ce91", "filename": "gcc/testsuite/g++.dg/template/partial5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9410b4fe946b3f82ff2254b46ef53573897d68e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpartial5.C?ref=a9410b4fe946b3f82ff2254b46ef53573897d68e", "patch": "@@ -14,7 +14,7 @@ template<typename T, typename T::foo V>\n struct Y { };\n \n template<typename T, typename U, U v>\n-struct Y<T, v> { }; // { dg-error \"not deducible|U\" \"\" { target { ! c++1z } } }\n+struct Y<T, v> { }; // { dg-error \"\" }\n \n \n template<typename T, T V>"}]}