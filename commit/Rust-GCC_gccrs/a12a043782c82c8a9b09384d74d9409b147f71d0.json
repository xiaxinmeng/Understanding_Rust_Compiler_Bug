{"sha": "a12a043782c82c8a9b09384d74d9409b147f71d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTEyYTA0Mzc4MmM4MmM4YTliMDkzODRkNzRkOTQwOWIxNDdmNzFkMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2015-09-29T19:45:47Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-09-29T19:45:47Z"}, "message": "plugin-nvptx.c (ARRAYSIZE): Delete.\n\n\t* plugin/plugin-nvptx.c (ARRAYSIZE): Delete.\n\t(cuda_errlist): Delete.\n\t(cuda_error): Reimplement.\n\nFrom-SVN: r228265", "tree": {"sha": "8b9a5410a886f03dae4165705ac378a3934e562f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b9a5410a886f03dae4165705ac378a3934e562f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a12a043782c82c8a9b09384d74d9409b147f71d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a12a043782c82c8a9b09384d74d9409b147f71d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a12a043782c82c8a9b09384d74d9409b147f71d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a12a043782c82c8a9b09384d74d9409b147f71d0/comments", "author": null, "committer": null, "parents": [{"sha": "2a43063e824ab9229e96a1c31d0bdec050506418", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a43063e824ab9229e96a1c31d0bdec050506418", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a43063e824ab9229e96a1c31d0bdec050506418"}], "stats": {"total": 89, "additions": 16, "deletions": 73}, "files": [{"sha": "88a25fcb8bf915878bb38f2b552640e4855a9792", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a12a043782c82c8a9b09384d74d9409b147f71d0/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a12a043782c82c8a9b09384d74d9409b147f71d0/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=a12a043782c82c8a9b09384d74d9409b147f71d0", "patch": "@@ -1,3 +1,9 @@\n+2015-09-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* plugin/plugin-nvptx.c (ARRAYSIZE): Delete.\n+\t(cuda_errlist): Delete.\n+\t(cuda_error): Reimplement.\n+\n 2015-09-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* libgomp.h (acc_dispatch_t): Replace separate geometry args with"}, {"sha": "41fd9b454ebda1ad80e144ab6bd4d1d73aee11b0", "filename": "libgomp/plugin/plugin-nvptx.c", "status": "modified", "additions": 10, "deletions": 73, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a12a043782c82c8a9b09384d74d9409b147f71d0/libgomp%2Fplugin%2Fplugin-nvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a12a043782c82c8a9b09384d74d9409b147f71d0/libgomp%2Fplugin%2Fplugin-nvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fplugin%2Fplugin-nvptx.c?ref=a12a043782c82c8a9b09384d74d9409b147f71d0", "patch": "@@ -47,84 +47,21 @@\n #include <unistd.h>\n #include <assert.h>\n \n-#define\tARRAYSIZE(X) (sizeof (X) / sizeof ((X)[0]))\n-\n-static const struct\n-{\n-  CUresult r;\n-  const char *m;\n-} cuda_errlist[]=\n-{\n-  { CUDA_ERROR_INVALID_VALUE, \"invalid value\" },\n-  { CUDA_ERROR_OUT_OF_MEMORY, \"out of memory\" },\n-  { CUDA_ERROR_NOT_INITIALIZED, \"not initialized\" },\n-  { CUDA_ERROR_DEINITIALIZED, \"deinitialized\" },\n-  { CUDA_ERROR_PROFILER_DISABLED, \"profiler disabled\" },\n-  { CUDA_ERROR_PROFILER_NOT_INITIALIZED, \"profiler not initialized\" },\n-  { CUDA_ERROR_PROFILER_ALREADY_STARTED, \"already started\" },\n-  { CUDA_ERROR_PROFILER_ALREADY_STOPPED, \"already stopped\" },\n-  { CUDA_ERROR_NO_DEVICE, \"no device\" },\n-  { CUDA_ERROR_INVALID_DEVICE, \"invalid device\" },\n-  { CUDA_ERROR_INVALID_IMAGE, \"invalid image\" },\n-  { CUDA_ERROR_INVALID_CONTEXT, \"invalid context\" },\n-  { CUDA_ERROR_CONTEXT_ALREADY_CURRENT, \"context already current\" },\n-  { CUDA_ERROR_MAP_FAILED, \"map error\" },\n-  { CUDA_ERROR_UNMAP_FAILED, \"unmap error\" },\n-  { CUDA_ERROR_ARRAY_IS_MAPPED, \"array is mapped\" },\n-  { CUDA_ERROR_ALREADY_MAPPED, \"already mapped\" },\n-  { CUDA_ERROR_NO_BINARY_FOR_GPU, \"no binary for gpu\" },\n-  { CUDA_ERROR_ALREADY_ACQUIRED, \"already acquired\" },\n-  { CUDA_ERROR_NOT_MAPPED, \"not mapped\" },\n-  { CUDA_ERROR_NOT_MAPPED_AS_ARRAY, \"not mapped as array\" },\n-  { CUDA_ERROR_NOT_MAPPED_AS_POINTER, \"not mapped as pointer\" },\n-  { CUDA_ERROR_ECC_UNCORRECTABLE, \"ecc uncorrectable\" },\n-  { CUDA_ERROR_UNSUPPORTED_LIMIT, \"unsupported limit\" },\n-  { CUDA_ERROR_CONTEXT_ALREADY_IN_USE, \"context already in use\" },\n-  { CUDA_ERROR_PEER_ACCESS_UNSUPPORTED, \"peer access unsupported\" },\n-  { CUDA_ERROR_INVALID_SOURCE, \"invalid source\" },\n-  { CUDA_ERROR_FILE_NOT_FOUND, \"file not found\" },\n-  { CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,\n-                                           \"shared object symbol not found\" },\n-  { CUDA_ERROR_SHARED_OBJECT_INIT_FAILED, \"shared object init error\" },\n-  { CUDA_ERROR_OPERATING_SYSTEM, \"operating system\" },\n-  { CUDA_ERROR_INVALID_HANDLE, \"invalid handle\" },\n-  { CUDA_ERROR_NOT_FOUND, \"not found\" },\n-  { CUDA_ERROR_NOT_READY, \"not ready\" },\n-  { CUDA_ERROR_LAUNCH_FAILED, \"launch error\" },\n-  { CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES, \"launch out of resources\" },\n-  { CUDA_ERROR_LAUNCH_TIMEOUT, \"launch timeout\" },\n-  { CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,\n-                                             \"launch incompatibe texturing\" },\n-  { CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED, \"peer access already enabled\" },\n-  { CUDA_ERROR_PEER_ACCESS_NOT_ENABLED, \"peer access not enabled \" },\n-  { CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE, \"primary cotext active\" },\n-  { CUDA_ERROR_CONTEXT_IS_DESTROYED, \"context is destroyed\" },\n-  { CUDA_ERROR_ASSERT, \"assert\" },\n-  { CUDA_ERROR_TOO_MANY_PEERS, \"too many peers\" },\n-  { CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,\n-                                           \"host memory already registered\" },\n-  { CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED, \"host memory not registered\" },\n-  { CUDA_ERROR_NOT_PERMITTED, \"not permitted\" },\n-  { CUDA_ERROR_NOT_SUPPORTED, \"not supported\" },\n-  { CUDA_ERROR_UNKNOWN, \"unknown\" }\n-};\n-\n static const char *\n cuda_error (CUresult r)\n {\n-  int i;\n-\n-  for (i = 0; i < ARRAYSIZE (cuda_errlist); i++)\n-    {\n-      if (cuda_errlist[i].r == r)\n-\treturn cuda_errlist[i].m;\n-    }\n-\n-  static char errmsg[30];\n+#if CUDA_VERSION < 7000\n+  /* Specified in documentation and present in library from at least\n+     5.5.  Not declared in header file prior to 7.0.  */\n+  extern CUresult cuGetErrorString (CUresult, const char **);\n+#endif\n+  const char *desc;\n \n-  snprintf (errmsg, sizeof (errmsg), \"unknown error code: %d\", r);\n+  r = cuGetErrorString (r, &desc);\n+  if (r != CUDA_SUCCESS)\n+    desc = \"unknown cuda error\";\n \n-  return errmsg;\n+  return desc;\n }\n \n static unsigned int instantiated_devices = 0;"}]}