{"sha": "3a3362620167fd31b30aa391bf6d84c45a3d6af2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2EzMzYyNjIwMTY3ZmQzMWIzMGFhMzkxYmY2ZDg0YzQ1YTNkNmFmMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-15T09:47:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-07-15T09:47:20Z"}, "message": "[multiple changes]\n\n2009-07-15  Sergey Rybin  <rybin@adacore.com>\n\n\t* tree_in.ads, tree_io.ads: Add pragma Warnings Off/On for with clause\n\tto System.OS_Lib to avoid warnings.\n\n2009-07-15  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.ads, make.adb, par.ads, par.adb, sem_warn.adb: Minor\n\treformatting.\n\n2009-07-15  Thomas Quinot  <quinot@adacore.com>\n\n\t* g-socthi-mingw.adb: Minor comment addition\n\n\t* g-socthi-mingw.ads (WSAStartup): First argument is a WORD not an int.\n\nFrom-SVN: r149668", "tree": {"sha": "ec0a6bfcd2f3ac952bad0f4a3783f18eda07756a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec0a6bfcd2f3ac952bad0f4a3783f18eda07756a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a3362620167fd31b30aa391bf6d84c45a3d6af2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3362620167fd31b30aa391bf6d84c45a3d6af2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a3362620167fd31b30aa391bf6d84c45a3d6af2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a3362620167fd31b30aa391bf6d84c45a3d6af2/comments", "author": null, "committer": null, "parents": [{"sha": "1b73fbc42fcde549e0c94d2c7c69206d7c3cb0fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b73fbc42fcde549e0c94d2c7c69206d7c3cb0fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b73fbc42fcde549e0c94d2c7c69206d7c3cb0fc"}], "stats": {"total": 93, "additions": 61, "deletions": 32}, "files": [{"sha": "3c63782fd40f5bbee5f52540adf70f05418f2abb", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -1,3 +1,19 @@\n+2009-07-15  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* tree_in.ads, tree_io.ads: Add pragma Warnings Off/On for with clause\n+\tto System.OS_Lib to avoid warnings.\n+\n+2009-07-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.ads, make.adb, par.ads, par.adb, sem_warn.adb: Minor\n+\treformatting.\n+\n+2009-07-15  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* g-socthi-mingw.adb: Minor comment addition\n+\n+\t* g-socthi-mingw.ads (WSAStartup): First argument is a WORD not an int.\n+\n 2009-07-15  Robert Dewar  <dewar@adacore.com>\n \n \t* g-htable.ads, s-htable.ads: Minor reformatting"}, {"sha": "49df16363b3b71d309e1f5b19d7a31db4bcd9c00", "filename": "gcc/ada/g-socthi-mingw.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fg-socthi-mingw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fg-socthi-mingw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.adb?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -47,7 +47,9 @@ package body GNAT.Sockets.Thin is\n \n    WSAData_Dummy : array (1 .. 512) of C.int;\n \n-   WS_Version  : constant := 16#0202#;\n+   WS_Version : constant := 16#0202#;\n+   --  Winsock 2.2\n+\n    Initialized : Boolean := False;\n \n    function Standard_Connect"}, {"sha": "8ec056148f10688b13cbbef61f41f42772519372", "filename": "gcc/ada/g-socthi-mingw.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fg-socthi-mingw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fg-socthi-mingw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-socthi-mingw.ads?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -191,7 +191,7 @@ package GNAT.Sockets.Thin is\n      (Command : System.Address) return C.int;\n \n    function WSAStartup\n-     (WS_Version     : Interfaces.C.int;\n+     (WS_Version     : Interfaces.C.unsigned_short;\n       WSADataAddress : System.Address) return Interfaces.C.int;\n \n    -------------------------------------------------------"}, {"sha": "1d96af98189565d9040142a26897826158b762fb", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -2979,7 +2979,9 @@ package body Make is\n          Comp_Next := Comp_Next + 1;\n \n          --  Optimize the simple case where the gcc command line looks like\n-         --     gcc -c -I. ... -I- file.adb  --into->  gcc -c ... file.adb\n+         --     gcc -c -I. ... -I- file.adb\n+         --  into\n+         --     gcc -c ... file.adb\n \n          if Args (Args'First).all = \"-I\" & Normalized_CWD\n            and then Args (Args'Last).all = \"-I-\""}, {"sha": "51029d6b3f4f9e5a039b046e4aab081cce962e39", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -50,9 +50,7 @@ with Tbuild;   use Tbuild;\n -- Par --\n ---------\n \n-function Par\n-  (Configuration_Pragmas : Boolean) return List_Id\n-is\n+function Par (Configuration_Pragmas : Boolean) return List_Id is\n    Num_Library_Units : Natural := 0;\n    --  Count number of units parsed (relevant only in syntax check only mode,\n    --  since in semantics check mode only a single unit is permitted anyway)\n@@ -1345,33 +1343,33 @@ begin\n                Operating_Mode := Save_Operating_Mode;\n                Style_Check := Save_Style_Check;\n \n-               --  If we are at an end of file, and not yet at the right\n-               --  unit, then we have a fatal error. The unit is missing.\n+               --  If we are at an end of file, and not yet at the right unit,\n+               --  then we have a fatal error. The unit is missing.\n \n                if Token = Tok_EOF then\n                   Error_Msg_SC (\"file has too few compilation units\");\n                   raise Unrecoverable_Error;\n                end if;\n             end;\n \n-         --  Here if we are not skipping a file in multiple unit per file\n-         --  mode. Parse the unit that we are interested in. Note that in\n-         --  check syntax mode we are interested in all units in the file.\n+         --  Here if we are not skipping a file in multiple unit per file mode.\n+         --  Parse the unit that we are interested in. Note that in check\n+         --  syntax mode we are interested in all units in the file.\n \n          else\n             declare\n                Comp_Unit_Node : constant Node_Id := P_Compilation_Unit;\n \n             begin\n                --  If parsing was successful and we are not in check syntax\n-               --  mode, check that language defined units are compiled in\n-               --  GNAT mode. For this purpose we do NOT consider renamings\n-               --  in annex J as predefined. That allows users to compile\n-               --  their own versions of these files, and in particular,\n-               --  in the VMS implementation, the DEC versions can be\n-               --  substituted for the standard Ada 95 versions. Another\n-               --  exception is System.RPC and its children. This allows\n-               --  a user to supply their own communication layer.\n+               --  mode, check that language defined units are compiled in GNAT\n+               --  mode. For this purpose we do NOT consider renamings in annex\n+               --  J as predefined. That allows users to compile their own\n+               --  versions of these files, and in particular, in the VMS\n+               --  implementation, the DEC versions can be substituted for the\n+               --  standard Ada 95 versions. Another exception is System.RPC\n+               --  and its children. This allows a user to supply their own\n+               --  communication layer.\n \n                if Comp_Unit_Node /= Error\n                  and then Operating_Mode = Generate_Code\n@@ -1385,9 +1383,8 @@ begin\n                      Name  : String (1 .. Uname'Length - 2);\n \n                   begin\n-                     --  Because Unit_Name includes \"%s\" or \"%b\", we need to\n-                     --  strip the last two characters to get the real unit\n-                     --  name.\n+                     --  Because Unit_Name includes \"%s\"/\"%b\", we need to strip\n+                     --  the last two characters to get the real unit name.\n \n                      Name := Uname (Uname'First .. Uname'Last - 2);\n \n@@ -1447,8 +1444,8 @@ begin\n          Restore_Opt_Config_Switches (Save_Config_Switches);\n       end loop;\n \n-      --  Now that we have completely parsed the source file, we can\n-      --  complete the source file table entry.\n+      --  Now that we have completely parsed the source file, we can complete\n+      --  the source file table entry.\n \n       Complete_Source_File_Entry;\n "}, {"sha": "d3fc0e7303f8d8b9e4afdfb0a0820069a215cc82", "filename": "gcc/ada/par.ads", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fpar.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fpar.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.ads?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,8 +28,7 @@\n \n with Types; use Types;\n \n-function Par\n-  (Configuration_Pragmas : Boolean) return List_Id;\n+function Par (Configuration_Pragmas : Boolean) return List_Id;\n --  Top level parsing routine. There are two cases:\n --\n --  If Configuration_Pragmas is False, Par parses a compilation unit in the"}, {"sha": "7ca0b864b4eefd25d427cc7f5d5dc9dad0b036b9", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -3356,8 +3356,8 @@ package body Sem_Warn is\n    --  Start of processing for Warn_On_Known_Condition\n \n    begin\n-      --   Argument replacement in an inlined body can make conditions static.\n-      --   Do not emit warnings in this case.\n+      --  Argument replacement in an inlined body can make conditions static.\n+      --  Do not emit warnings in this case.\n \n       if In_Inlined_Body then\n          return;"}, {"sha": "5ba4571f0b843bb16afc40c39f503fb5d1f3f76b", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -2175,7 +2175,7 @@ package Sinfo is\n       --  Aliased_Present (Flag4) set if ALIASED appears\n       --  Constant_Present (Flag17) set if CONSTANT appears\n       --  Null_Exclusion_Present (Flag11)\n-      --  Object_Definition (Node4) subtype indic./array type def./ access def.\n+      --  Object_Definition (Node4) subtype indic./array type def./access def.\n       --  Expression (Node3) (set to Empty if not present)\n       --  Handler_List_Entry (Node2-Sem)\n       --  Corresponding_Generic_Association (Node5-Sem)"}, {"sha": "5fa0735d0e51f810757d1f1b0e4f94906cec670f", "filename": "gcc/ada/tree_in.ads", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Ftree_in.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Ftree_in.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_in.ads?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009  Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,7 +34,13 @@\n --  tools that need to read the tree to the tree reading routines, and is\n --  thus bound as part of such tools.\n \n+--  Note: the pragma Warnings (Off) here is because ASIS compiles this unit\n+--  without -gnatg, and System.OS_Lib is an implementation unit. This is a\n+--  temporary kludge which will be better resolved later on ???\n+\n+pragma Warnings (Off);\n with System.OS_Lib; use System.OS_Lib;\n+pragma Warnings (On);\n \n procedure Tree_In (Desc : File_Descriptor);\n --  Desc is the file descriptor for the file containing the tree, as written"}, {"sha": "c347b4f68faed9fe9f90817be93c3e6f01334bb0", "filename": "gcc/ada/tree_io.ads", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Ftree_io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a3362620167fd31b30aa391bf6d84c45a3d6af2/gcc%2Fada%2Ftree_io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_io.ads?ref=3a3362620167fd31b30aa391bf6d84c45a3d6af2", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009  Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -37,7 +37,14 @@\n with Types; use Types;\n \n with System;        use System;\n+\n+--  Note: the pragma Warnings (Off) here is because ASIS compiles this unit\n+--  without -gnatg, and System.OS_Lib is an implementation unit. This is a\n+--  temporary kludge which will be better resolved later on ???\n+\n+pragma Warnings (Off);\n with System.OS_Lib; use System.OS_Lib;\n+pragma Warnings (On);\n \n package Tree_IO is\n "}]}