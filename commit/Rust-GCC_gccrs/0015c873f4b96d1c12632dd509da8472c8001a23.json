{"sha": "0015c873f4b96d1c12632dd509da8472c8001a23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDAxNWM4NzNmNGI5NmQxYzEyNjMyZGQ1MDlkYTg0NzJjODAwMWEyMw==", "commit": {"author": {"name": "Sandra Loosemore", "email": "sandra@codesourcery.com", "date": "2007-07-16T17:57:40Z"}, "committer": {"name": "Sandra Loosemore", "email": "sandra@gcc.gnu.org", "date": "2007-07-16T17:57:40Z"}, "message": "mips.md: Include 20kc.md.\n\n2007-07-16  Sandra Loosemore  <sandra@codesourcery.com>\n\t    Nigel Stephens  <nigel@mips.com>\n\n        gcc/\n\n\t* config/mips/mips.md:  Include 20kc.md.\n\t* config/mips/20kc.md: New file.\n\t* config/mips/mips.c (mips_rtx_cost_data): Fill in 20Kc costs.\n\t(mips_adjust_cost): Tweak for 20Kc.\n\t(mips_issue_rate): Likewise.\n\t* config/mips/mips.h (TUNE_20KC): Define.\n\nCo-Authored-By: Nigel Stephens <nigel@mips.com>\n\nFrom-SVN: r126687", "tree": {"sha": "4027edd00b1ac4d00a80367e331788a7acde0b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4027edd00b1ac4d00a80367e331788a7acde0b6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0015c873f4b96d1c12632dd509da8472c8001a23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0015c873f4b96d1c12632dd509da8472c8001a23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0015c873f4b96d1c12632dd509da8472c8001a23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0015c873f4b96d1c12632dd509da8472c8001a23/comments", "author": {"login": "SandraLoosemore", "id": 104087111, "node_id": "U_kgDOBjQ-Rw", "avatar_url": "https://avatars.githubusercontent.com/u/104087111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SandraLoosemore", "html_url": "https://github.com/SandraLoosemore", "followers_url": "https://api.github.com/users/SandraLoosemore/followers", "following_url": "https://api.github.com/users/SandraLoosemore/following{/other_user}", "gists_url": "https://api.github.com/users/SandraLoosemore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SandraLoosemore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SandraLoosemore/subscriptions", "organizations_url": "https://api.github.com/users/SandraLoosemore/orgs", "repos_url": "https://api.github.com/users/SandraLoosemore/repos", "events_url": "https://api.github.com/users/SandraLoosemore/events{/privacy}", "received_events_url": "https://api.github.com/users/SandraLoosemore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0b11da67078007050cfa665c741ea11b1d7d20b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b11da67078007050cfa665c741ea11b1d7d20b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b11da67078007050cfa665c741ea11b1d7d20b0"}], "stats": {"total": 297, "additions": 295, "deletions": 2}, "files": [{"sha": "31ae6a1416a07db4f2bba2c7a4396a48a6993ce1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0015c873f4b96d1c12632dd509da8472c8001a23", "patch": "@@ -1,3 +1,13 @@\n+2007-07-16  Sandra Loosemore  <sandra@codesourcery.com>\n+\t    Nigel Stephens  <nigel@mips.com>\n+\n+\t* config/mips/mips.md:  Include 20kc.md.\n+\t* config/mips/20kc.md: New file.\n+\t* config/mips/mips.c (mips_rtx_cost_data): Fill in 20Kc costs.\n+\t(mips_adjust_cost): Tweak for 20Kc.\n+\t(mips_issue_rate): Likewise.\n+\t* config/mips/mips.h (TUNE_20KC): Define.\n+\n 2007-07-16  David Edelsohn  <edelsohn@gnu.og>\n \n \t* config/rs6000/rs6000.c (struct processor_cost): Add"}, {"sha": "32442393632a215f774e15b032730f2bb2935bde", "filename": "gcc/config/mips/20kc.md", "status": "added", "additions": 266, "deletions": 0, "changes": 266, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2Fconfig%2Fmips%2F20kc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2Fconfig%2Fmips%2F20kc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2F20kc.md?ref=0015c873f4b96d1c12632dd509da8472c8001a23", "patch": "@@ -0,0 +1,266 @@\n+;; .........................\n+;;\n+;; DFA-based pipeline description for MIPS64 model R20Kc.\n+;; Contributed by Jason Eckhardt (jle@cygnus.com).\n+;;\n+;; The R20Kc is a dual-issue processor that can generally bundle\n+;; instructions as follows:\n+;;   1. integer with integer\n+;;   2. integer with fp\n+;;   3. fp with fpload/fpstore \n+;;\n+;; Of course, there are various restrictions.\n+;; Reference:\n+;;   \"Ruby (R20K) Technical Specification Rev. 1.2, December 28, 1999.\"\n+;;\n+;; .........................\n+\n+;; Use three automata to isolate long latency operations, reducing space.\n+(define_automaton \"r20kc_other, r20kc_fdiv, r20kc_idiv\")\n+\n+;;\n+;; Describe the resources.\n+;;\n+\n+;; Global.\n+(define_cpu_unit \"r20kc_iss0, r20kc_iss1\" \"r20kc_other\")\n+\n+;; Integer execution unit (pipeline A).\n+(define_cpu_unit \"r20kc_ixua_addsub_agen\" \"r20kc_other\")\n+(define_cpu_unit \"r20kc_ixua_shift\"\t  \"r20kc_other\")\n+\n+(exclusion_set \"r20kc_ixua_addsub_agen\" \"r20kc_ixua_shift\")\n+\n+;; Integer execution unit (pipeline B).\n+(define_cpu_unit \"r20kc_ixub_addsub\"\t  \"r20kc_other\")\n+(define_cpu_unit \"r20kc_ixub_branch\"\t  \"r20kc_other\")\n+(define_cpu_unit \"r20kc_ixub_mpydiv\"\t  \"r20kc_other\")\n+(define_cpu_unit \"r20kc_ixub_mpydiv_iter\" \"r20kc_idiv\")\n+\n+(exclusion_set \"r20kc_ixub_addsub\" \"r20kc_ixub_branch, r20kc_ixub_mpydiv\")\n+(exclusion_set \"r20kc_ixub_branch\" \"r20kc_ixub_mpydiv\")\n+\n+;; Cache / memory interface.\n+(define_cpu_unit \"r20kc_cache\"\t    \"r20kc_other\")\n+\n+;; Floating-point unit.\n+(define_cpu_unit \"r20kc_fpu_add\"\t  \"r20kc_other\")\n+(define_cpu_unit \"r20kc_fpu_mpy\"\t  \"r20kc_other\")\n+(define_cpu_unit \"r20kc_fpu_mpy_iter\"\t  \"r20kc_fdiv\")\n+(define_cpu_unit \"r20kc_fpu_divsqrt\"\t  \"r20kc_other\")\n+(define_cpu_unit \"r20kc_fpu_divsqrt_iter\" \"r20kc_fdiv\")\n+\n+(exclusion_set \"r20kc_fpu_add\" \"r20kc_fpu_mpy, r20kc_fpu_divsqrt\")\n+(exclusion_set \"r20kc_fpu_mpy\" \"r20kc_fpu_divsqrt\")\n+\n+;; After branch any insn can not be issued.\n+(absence_set \"r20kc_iss0,r20kc_iss1\" \"r20kc_ixub_branch\")\n+\n+;;\n+;; Define reservations for unit name mnemonics or combinations.\n+;;\n+\n+(define_reservation \"r20kc_iss\"\n+  \"r20kc_iss0|r20kc_iss1\")\n+(define_reservation \"r20kc_single_dispatch\"\n+  \"r20kc_iss0+r20kc_iss1\")\n+(define_reservation \"r20kc_iaddsub\"\n+  \"r20kc_iss+(r20kc_ixua_addsub_agen|r20kc_ixub_addsub)\")\n+(define_reservation \"r20kc_ishift\"\n+  \"r20kc_iss+r20kc_ixua_shift\")\n+(define_reservation \"r20kc_fpmove\"\n+  \"r20kc_iss+r20kc_ixua_addsub_agen\")\n+(define_reservation \"r20kc_imem\"\n+  \"r20kc_iss+r20kc_ixua_addsub_agen+r20kc_cache\")\n+(define_reservation \"r20kc_icache\"\n+  \"r20kc_cache\")\n+(define_reservation \"r20kc_impydiv\"\n+  \"r20kc_iss+r20kc_ixub_mpydiv\")\n+(define_reservation \"r20kc_impydiv_iter\"\n+  \"r20kc_ixub_mpydiv_iter\")\n+(define_reservation \"r20kc_ibranch\"\n+  \"r20kc_iss+r20kc_ixub_branch\")\n+\n+(define_reservation \"r20kc_fpadd\"\n+  \"r20kc_iss+r20kc_fpu_add\")\n+(define_reservation \"r20kc_fpmpy\"\n+  \"r20kc_iss+r20kc_fpu_mpy\")\n+(define_reservation \"r20kc_fpmpy_iter\"\n+  \"r20kc_fpu_mpy_iter\")\n+(define_reservation \"r20kc_fpdivsqrt\"\n+  \"r20kc_iss+r20kc_fpu_divsqrt\")\n+(define_reservation \"r20kc_fpdivsqrt_iter\"\n+  \"r20kc_fpu_divsqrt_iter\")\n+\n+;;\n+;; Describe instruction reservations for integer operations.\n+;;\n+\n+;; Conditional moves always force single-dispatch.\n+(define_insn_reservation \"r20kc_cond_move_int\" 1 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"condmove\")\n+\t\t\t\t   (eq_attr \"mode\" \"!SF,DF\")))\n+\t\t\t \"r20kc_single_dispatch\")\n+\n+(define_insn_reservation \"r20kc_cond_move_fp\" 4 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"condmove\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF,DF\")))\n+\t\t\t \"r20kc_single_dispatch\")\n+\n+(define_insn_reservation \"r20kc_int_other\" 1\n+\t\t\t  (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t       (eq_attr \"type\" \"move,arith,const,nop\"))\n+\t\t\t  \"r20kc_iaddsub\")\n+\n+;; Shifts can only execute on ixu pipeline A.\n+(define_insn_reservation \"r20kc_int_shift\" 1\n+\t\t\t  (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t       (eq_attr \"type\" \"shift\"))\n+\t\t\t  \"r20kc_ishift\")\n+\n+(define_insn_reservation \"r20kc_ld\" 2 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"load,prefetch,prefetchx\"))\n+\t\t\t \"r20kc_imem\")\n+\n+\n+;; A load immediately following a store will stall, so\n+;; say that a store uses the cache for an extra cycle.\n+(define_insn_reservation \"r20kc_st\" 2 \n+\t\t\t  (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t       (eq_attr \"type\" \"store\"))\n+\t\t\t  \"r20kc_imem,r20kc_icache\")\n+\n+(define_insn_reservation \"r20kc_fld\" 3 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"fpload\"))\n+\t\t\t \"r20kc_imem\")\n+\n+(define_insn_reservation \"r20kc_ffst\" 3 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"fpstore\"))\n+\t\t\t \"r20kc_imem,r20kc_icache*2\")\n+\n+;; Integer divide latency is between 13 and 42 cycles for DIV[U] and between\n+;; 13 and 72 cycles for DDIV[U]. This depends on the value of the inputs\n+;; so we just choose the worst case latency.\n+(define_insn_reservation \"r20kc_idiv_si\" 42 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (eq_attr \"mode\" \"SI\")))\n+\t\t\t \"r20kc_impydiv+(r20kc_impydiv_iter*42)\")\n+\n+(define_insn_reservation \"r20kc_idiv_di\" 72 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"idiv\")\n+\t\t\t\t   (eq_attr \"mode\" \"DI\")))\n+\t\t\t \"r20kc_impydiv+(r20kc_impydiv_iter*72)\")\n+\n+;; Integer multiply latency is 4 or 7 cycles for word and double-word\n+;; respectively.\n+(define_insn_reservation \"r20kc_impy_si\" 4 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"imadd,imul,imul3\")\n+\t\t\t\t   (eq_attr \"mode\" \"SI\")))\n+\t\t\t \"r20kc_impydiv+(r20kc_impydiv_iter*2)\")\n+\n+(define_insn_reservation \"r20kc_impy_di\" 7 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"imadd,imul,imul3\")\n+\t\t\t\t   (eq_attr \"mode\" \"DI\")))\n+\t\t\t \"r20kc_impydiv+(r20kc_impydiv_iter*7)\")\n+\n+;; Move to/from HI/LO.\n+;; Moving to HI/LO has a 3 cycle latency while moving from only has a 1\n+;; cycle latency.  Repeat rate is 3 for both.\n+(define_insn_reservation \"r20kc_imthilo\" 3 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"mthilo\"))\n+\t\t\t \"r20kc_impydiv+(r20kc_impydiv_iter*3)\")\n+\n+(define_insn_reservation \"r20kc_imfhilo\" 1\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"mfhilo\"))\n+\t\t\t \"r20kc_impydiv+(r20kc_impydiv_iter*3)\")\n+\n+;; Move to fp coprocessor.\n+(define_insn_reservation \"r20kc_ixfer_mt\" 3 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"mtc\"))\n+\t\t\t \"r20kc_fpmove\")\n+\n+;; Move from fp coprocessor.\n+(define_insn_reservation \"r20kc_ixfer_mf\" 2 \n+\t\t\t  (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t       (eq_attr \"type\" \"mfc\"))\n+\t\t\t\"r20kc_fpmove\")\n+\n+;; Assume branch predicted correctly.\n+(define_insn_reservation \"r20kc_ibr\" 1 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"branch,jump,call\"))\n+\t\t\t \"r20kc_ibranch\")\n+\n+;;\n+;; Describe instruction reservations for the floating-point operations.\n+;;\n+(define_insn_reservation \"r20kc_fp_other\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"fmove,fadd,fabs,fneg,fcmp\"))\n+\t\t\t \"r20kc_fpadd\")\n+\n+(define_insn_reservation \"r20kc_fp_cvt_a\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"fcvt\")\n+\t\t\t\t   (eq_attr \"cnv_mode\" \"I2S,I2D,S2D\")))\n+\t\t\t \"r20kc_fpadd\")\n+\n+(define_insn_reservation \"r20kc_fp_cvt_b\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"fcvt\")\n+\t\t\t\t   (eq_attr \"cnv_mode\" \"D2S,S2I\")))\n+\t\t\t \"r20kc_fpadd\")\n+\n+(define_insn_reservation \"r20kc_fp_divsqrt_df\" 32\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"fdiv,fsqrt\")\n+\t\t\t\t   (eq_attr \"mode\" \"DF\")))\n+\t\t\t \"r20kc_fpdivsqrt+(r20kc_fpdivsqrt_iter*32)\")\n+\n+(define_insn_reservation \"r20kc_fp_divsqrt_sf\" 17\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"fdiv,fsqrt\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF\")))\n+\t\t\t \"r20kc_fpdivsqrt+(r20kc_fpdivsqrt_iter*17)\")\n+\n+(define_insn_reservation \"r20kc_fp_rsqrt_df\" 35 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"frsqrt\")\n+\t\t\t\t   (eq_attr \"mode\" \"DF\")))\n+\t\t\t \"r20kc_fpdivsqrt+(r20kc_fpdivsqrt_iter*35)\")\n+\n+(define_insn_reservation \"r20kc_fp_rsqrt_sf\" 17\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"frsqrt\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF\")))\n+\t\t\t \"r20kc_fpdivsqrt+(r20kc_fpdivsqrt_iter*17)\")\n+\n+(define_insn_reservation \"r20kc_fp_mpy_sf\" 4\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t\t\t\t   (eq_attr \"mode\" \"SF\")))\n+\t\t\t \"r20kc_fpmpy+r20kc_fpmpy_iter\")\n+\n+(define_insn_reservation \"r20kc_fp_mpy_df\" 5\n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (and (eq_attr \"type\" \"fmul,fmadd\")\n+\t\t\t\t   (eq_attr \"mode\" \"DF\")))\n+\t\t\t \"r20kc_fpmpy+(r20kc_fpmpy_iter*2)\")\n+\n+;; Force single-dispatch for unknown or multi.\n+(define_insn_reservation \"r20kc_unknown\" 1 \n+\t\t\t (and (eq_attr \"cpu\" \"20kc\")\n+\t\t\t      (eq_attr \"type\" \"unknown,multi\"))\n+\t\t\t \"r20kc_single_dispatch\")"}, {"sha": "b47f59fed2a5bf3f460ef808ed2167f161457933", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=0015c873f4b96d1c12632dd509da8472c8001a23", "patch": "@@ -911,7 +911,17 @@ static struct mips_rtx_cost_data const mips_rtx_cost_data[PROCESSOR_MAX] =\n                        4            /* memory_latency */\n     },\n     { /* 20KC */\n-      DEFAULT_COSTS\n+      COSTS_N_INSNS (4),            /* fp_add */\n+      COSTS_N_INSNS (4),            /* fp_mult_sf */\n+      COSTS_N_INSNS (5),            /* fp_mult_df */\n+      COSTS_N_INSNS (17),           /* fp_div_sf */\n+      COSTS_N_INSNS (32),           /* fp_div_df */\n+      COSTS_N_INSNS (4),            /* int_mult_si */\n+      COSTS_N_INSNS (7),            /* int_mult_di */\n+      COSTS_N_INSNS (42),           /* int_div_si */\n+      COSTS_N_INSNS (72),           /* int_div_di */\n+                       1,           /* branch_cost */\n+                       4            /* memory_latency */\n     },\n     { /* 24KC */\n       SOFT_FP_COSTS,\n@@ -10866,12 +10876,16 @@ mips_variable_issue (FILE *file ATTRIBUTE_UNUSED, int verbose ATTRIBUTE_UNUSED,\n }\n \f\n /* Implement TARGET_SCHED_ADJUST_COST.  We assume that anti and output\n-   dependencies have no cost.  */\n+   dependencies have no cost, except on the 20Kc where output-dependence\n+   is treated like input-dependence.  */\n \n static int\n mips_adjust_cost (rtx insn ATTRIBUTE_UNUSED, rtx link,\n \t\t  rtx dep ATTRIBUTE_UNUSED, int cost)\n {\n+  if (REG_NOTE_KIND (link) == REG_DEP_OUTPUT\n+      && TUNE_20KC)\n+    return cost;\n   if (REG_NOTE_KIND (link) != 0)\n     return 0;\n   return cost;\n@@ -10894,6 +10908,7 @@ mips_issue_rate (void)\n \t floating point load/stores also require a slot in the AGEN pipe.  */\n      return 4;\n \n+    case PROCESSOR_20KC:\n     case PROCESSOR_R4130:\n     case PROCESSOR_R5400:\n     case PROCESSOR_R5500:"}, {"sha": "0539221852794dd711045f6025b126d34b30aba7", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=0015c873f4b96d1c12632dd509da8472c8001a23", "patch": "@@ -254,6 +254,7 @@ extern const struct mips_rtx_cost_data *mips_cost;\n \t\t\t\t     || mips_tune == PROCESSOR_74KF2_1\t\\\n \t\t\t\t     || mips_tune == PROCESSOR_74KF1_1  \\\n \t\t\t\t     || mips_tune == PROCESSOR_74KF3_2)\n+#define TUNE_20KC\t\t    (mips_tune == PROCESSOR_20KC)\n \n /* True if the pre-reload scheduler should try to create chains of\n    multiply-add or multiply-subtract instructions.  For example,"}, {"sha": "5d679083a31dbb25cdf7fdbf6c207fd9c92cde1d", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0015c873f4b96d1c12632dd509da8472c8001a23/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=0015c873f4b96d1c12632dd509da8472c8001a23", "patch": "@@ -640,6 +640,7 @@\n \n (include \"4k.md\")\n (include \"5k.md\")\n+(include \"20kc.md\")\n (include \"24k.md\")\n (include \"74k.md\")\n (include \"3000.md\")"}]}