{"sha": "9c376d1c166e7c8b10bba6f1675d2471ffe8447f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMzNzZkMWMxNjZlN2M4YjEwYmJhNmYxNjc1ZDI0NzFmZmU4NDQ3Zg==", "commit": {"author": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2020-08-06T15:03:03Z"}, "committer": {"name": "Peter Bergner", "email": "bergner@linux.ibm.com", "date": "2020-08-06T15:10:15Z"}, "message": "rs6000: Don't ICE when spilling an MMA accumulator\n\nWhen we spill an accumulator that has a known zero value, LRA will emit\na new (set (reg:PXI ...) 0) insn, but it does not use the mma_xxsetaccz\npattern to do it, leading to an unrecognized insn ICE.  The solution here\nis to move the xxsetaccz instruction into the movpxi pattern and have the\nxxsetaccz pattern call the move pattern.\n\n2020-08-06  Peter Bergner  <bergner@linux.ibm.com>\n\ngcc/\n\tPR target/96446\n\t* config/rs6000/mma.md (*movpxi): Add xxsetaccz generation.\n\tDisable split for zero constant source operand.\n\t(mma_xxsetaccz): Change to define_expand.  Call gen_movpxi.\n\ngcc/testsuite/\n\tPR target/96446\n\t* gcc.target/powerpc/pr96446.c: New test.", "tree": {"sha": "dc05478324d86a8a2c7669ee83b0f1f6e3109002", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc05478324d86a8a2c7669ee83b0f1f6e3109002"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c376d1c166e7c8b10bba6f1675d2471ffe8447f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c376d1c166e7c8b10bba6f1675d2471ffe8447f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c376d1c166e7c8b10bba6f1675d2471ffe8447f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c376d1c166e7c8b10bba6f1675d2471ffe8447f/comments", "author": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "peter-bergner", "id": 17504345, "node_id": "MDQ6VXNlcjE3NTA0MzQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17504345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/peter-bergner", "html_url": "https://github.com/peter-bergner", "followers_url": "https://api.github.com/users/peter-bergner/followers", "following_url": "https://api.github.com/users/peter-bergner/following{/other_user}", "gists_url": "https://api.github.com/users/peter-bergner/gists{/gist_id}", "starred_url": "https://api.github.com/users/peter-bergner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/peter-bergner/subscriptions", "organizations_url": "https://api.github.com/users/peter-bergner/orgs", "repos_url": "https://api.github.com/users/peter-bergner/repos", "events_url": "https://api.github.com/users/peter-bergner/events{/privacy}", "received_events_url": "https://api.github.com/users/peter-bergner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "165843ac435166ac4ad200f185e15ee2d46dc2bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/165843ac435166ac4ad200f185e15ee2d46dc2bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/165843ac435166ac4ad200f185e15ee2d46dc2bb"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "a3fd28bdd0afc824b23b7e47781d248cdd8d1258", "filename": "gcc/config/rs6000/mma.md", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c376d1c166e7c8b10bba6f1675d2471ffe8447f/gcc%2Fconfig%2Frs6000%2Fmma.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c376d1c166e7c8b10bba6f1675d2471ffe8447f/gcc%2Fconfig%2Frs6000%2Fmma.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fmma.md?ref=9c376d1c166e7c8b10bba6f1675d2471ffe8447f", "patch": "@@ -328,11 +328,15 @@\n   [(set (match_operand:PXI 0 \"nonimmediate_operand\" \"=d,m,d,d\")\n \t(match_operand:PXI 1 \"input_operand\" \"m,d,d,O\"))]\n   \"TARGET_MMA\n-   && ((gpc_reg_operand (operands[0], PXImode)\n-\t&& !(CONST_INT_P (operands[1]) && INTVAL (operands[1]) == 0))\n+   && (gpc_reg_operand (operands[0], PXImode)\n        || gpc_reg_operand (operands[1], PXImode))\"\n-  \"#\"\n-  \"&& reload_completed\"\n+  \"@\n+   #\n+   #\n+   #\n+   xxsetaccz %A0\"\n+  \"&& reload_completed\n+   && !(fpr_reg_operand (operands[0], PXImode) && operands[1] == const0_rtx)\"\n   [(const_int 0)]\n {\n   rs6000_split_multireg_move (operands[0], operands[1]);\n@@ -409,12 +413,14 @@\n   \"<acc> %A0\"\n   [(set_attr \"type\" \"mma\")])\n \n-(define_insn \"mma_xxsetaccz\"\n-  [(set (match_operand:PXI 0 \"fpr_reg_operand\" \"=d\")\n+(define_expand \"mma_xxsetaccz\"\n+  [(set (match_operand:PXI 0 \"fpr_reg_operand\")\n \t(const_int 0))]\n   \"TARGET_MMA\"\n-  \"xxsetaccz %A0\"\n-  [(set_attr \"type\" \"mma\")])\n+{\n+  emit_insn (gen_movpxi (operands[0], const0_rtx));\n+  DONE;\n+})\n \n (define_insn \"mma_<vv>\"\n   [(set (match_operand:PXI 0 \"fpr_reg_operand\" \"=&d\")"}, {"sha": "2083bf4a76a06afed949b355a7423328bef593a0", "filename": "gcc/testsuite/gcc.target/powerpc/pr96446.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c376d1c166e7c8b10bba6f1675d2471ffe8447f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr96446.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c376d1c166e7c8b10bba6f1675d2471ffe8447f/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr96446.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr96446.c?ref=9c376d1c166e7c8b10bba6f1675d2471ffe8447f", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/96466 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target power10_ok } */\n+/* { dg-options \"-mdejagnu-cpu=power10 -O2\" } */\n+\n+/* Verify we do not ICE on the following.  */\n+\n+extern void bar0 (void);\n+void\n+foo0 (__vector_quad *dst)\n+{\n+  __vector_quad acc;\n+  __builtin_mma_xxsetaccz (&acc);\n+  bar0 ();\n+  *dst = acc;\n+}"}]}