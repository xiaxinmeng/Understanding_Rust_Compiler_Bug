{"sha": "4b3bb3f347116edf9a2badd3ad3f461686583b33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGIzYmIzZjM0NzExNmVkZjlhMmJhZGQzYWQzZjQ2MTY4NjU4M2IzMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-28T20:36:47Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-28T20:36:47Z"}, "message": "re PR c++/56481 (endless loop compiling a C++ file)\n\n\tPR c++/56481\n\t* g++.dg/cpp0x/constexpr-and.C: New.\n\nFrom-SVN: r196359", "tree": {"sha": "d2f9f38e97342a8610d60abc5d2c9064e524f566", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2f9f38e97342a8610d60abc5d2c9064e524f566"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b3bb3f347116edf9a2badd3ad3f461686583b33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3bb3f347116edf9a2badd3ad3f461686583b33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b3bb3f347116edf9a2badd3ad3f461686583b33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b3bb3f347116edf9a2badd3ad3f461686583b33/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "728761beb09e1d14952d08ffe18cf1494e05c782", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/728761beb09e1d14952d08ffe18cf1494e05c782", "html_url": "https://github.com/Rust-GCC/gccrs/commit/728761beb09e1d14952d08ffe18cf1494e05c782"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "7c6afc2239ba5a879f9dd8385358bcd9c3d92f87", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3bb3f347116edf9a2badd3ad3f461686583b33/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3bb3f347116edf9a2badd3ad3f461686583b33/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4b3bb3f347116edf9a2badd3ad3f461686583b33", "patch": "@@ -1,3 +1,8 @@\n+2013-02-28  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56481\n+\t* g++.dg/cpp0x/constexpr-and.C: New.\n+\n 2013-02-28  Martin Jambor  <mjambor@suse.cz>\n \n \tPR tree-optimization/56294"}, {"sha": "15ad25246940c291c91ee8e78cf599d7246bf116", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-and.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b3bb3f347116edf9a2badd3ad3f461686583b33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-and.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b3bb3f347116edf9a2badd3ad3f461686583b33/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-and.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-and.C?ref=4b3bb3f347116edf9a2badd3ad3f461686583b33", "patch": "@@ -0,0 +1,20 @@\n+// PR c++/56481\n+// Non-linearity in potential_constant_expression_1\n+// { dg-options -std=c++11 }\n+\n+struct S\n+{\n+  constexpr bool foo ();\n+#define A(n) , f##n##0, f##n##1, f##n##2, f##n##3\n+#define B(n) A(n##0) A(n##1) A(n##2) A(n##3)\n+#define C B(0) B(1) B(2) B(3)\n+  bool f C;\n+};\n+\n+constexpr bool\n+S::foo ()\n+{\n+#undef A\n+#define A(n) && f##n##0 && f##n##1 && f##n##2 && f##n##3\n+  return f C;\n+}"}]}