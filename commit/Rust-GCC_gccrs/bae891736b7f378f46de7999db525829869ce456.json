{"sha": "bae891736b7f378f46de7999db525829869ce456", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFlODkxNzM2YjdmMzc4ZjQ2ZGU3OTk5ZGI1MjU4Mjk4NjljZTQ1Ng==", "commit": {"author": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-29T15:16:00Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2007-08-29T15:16:00Z"}, "message": "re PR fortran/33105 (F2003: Support is_iostat_end & is_iostat_eor intrinsics)\n\n\tPR fortran/33105\n\n\t* intrinsic.c (add_functions): Add IS_IOSTAT_END and\n\tIS_IOSTAT_EOR intrinsics.\n\t* gfortran.h (gfc_isym_id): Add GFC_ISYM_IS_IOSTAT_END and\n\tGFC_ISYM_IS_IOSTAT_EOR.\n\t* trans-intrinsic.c (gfc_conv_has_intvalue): New function.\n\t(gfc_conv_intrinsic_function): Call gfc_conv_has_intvalue for\n\tGFC_ISYM_IS_IOSTAT_END and GFC_ISYM_IS_IOSTAT_EOR.\n\t* intrinsic.texi: Add IS_IOSTAT_END and IS_IOSTAT_EOR.\n\n\t* gfortran.dg/is_iostat_end_eor_1.f90: New test.\n\nFrom-SVN: r127903", "tree": {"sha": "21cc1f9e1673b06b91097845939911003a7f0063", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21cc1f9e1673b06b91097845939911003a7f0063"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bae891736b7f378f46de7999db525829869ce456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae891736b7f378f46de7999db525829869ce456", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bae891736b7f378f46de7999db525829869ce456", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bae891736b7f378f46de7999db525829869ce456/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3743c639c758aec63f1bbb3cc2da36fd35ee844f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3743c639c758aec63f1bbb3cc2da36fd35ee844f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3743c639c758aec63f1bbb3cc2da36fd35ee844f"}], "stats": {"total": 157, "additions": 157, "deletions": 0}, "files": [{"sha": "8d5e19fe7a2083fe0c357756c4692a1aa5b14c70", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=bae891736b7f378f46de7999db525829869ce456", "patch": "@@ -1,3 +1,16 @@\n+2007-08-29  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\t    Tobias Burnus  <burnus@gcc.gnu.org>\n+\n+\tPR fortran/33105\n+\t* intrinsic.c (add_functions): Add IS_IOSTAT_END and\n+\tIS_IOSTAT_EOR intrinsics.\n+\t* gfortran.h (gfc_isym_id): Add GFC_ISYM_IS_IOSTAT_END and\n+\tGFC_ISYM_IS_IOSTAT_EOR.\n+\t* trans-intrinsic.c (gfc_conv_has_intvalue): New function.\n+\t(gfc_conv_intrinsic_function): Call gfc_conv_has_intvalue for\n+\tGFC_ISYM_IS_IOSTAT_END and GFC_ISYM_IS_IOSTAT_EOR.\n+\t* intrinsic.texi: Add IS_IOSTAT_END and IS_IOSTAT_EOR.\n+\n 2007-08-28  Christopher D. Rickett  <crickett@lanl.gov>\n \n \tPR fortran/33215"}, {"sha": "358055ae490ffb22bafbd4624579aba6baf2d8c6", "filename": "gcc/fortran/gfortran.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2Fgfortran.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2Fgfortran.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fgfortran.h?ref=bae891736b7f378f46de7999db525829869ce456", "patch": "@@ -419,6 +419,8 @@ enum gfc_isym_id\n   GFC_ISYM_IOR,\n   GFC_ISYM_IRAND,\n   GFC_ISYM_ISATTY,\n+  GFC_ISYM_IS_IOSTAT_END,\n+  GFC_ISYM_IS_IOSTAT_EOR,\n   GFC_ISYM_ISNAN,\n   GFC_ISYM_ISHFT,\n   GFC_ISYM_ISHFTC,"}, {"sha": "2bc8781de3453c6b9e9973c1e02ea713e5ba309e", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=bae891736b7f378f46de7999db525829869ce456", "patch": "@@ -1633,6 +1633,18 @@ add_functions (void)\n \n   make_generic (\"isatty\", GFC_ISYM_ISATTY, GFC_STD_GNU);\n \n+  add_sym_1 (\"is_iostat_end\", GFC_ISYM_IS_IOSTAT_END,\n+\t     CLASS_ELEMENTAL, ACTUAL_NO, BT_LOGICAL, dl, GFC_STD_F2003,\n+\t     gfc_check_i, NULL, NULL, i, BT_INTEGER, 0, REQUIRED);\n+\n+  make_generic (\"is_iostat_end\", GFC_ISYM_IS_IOSTAT_END, GFC_STD_F2003);\n+\n+  add_sym_1 (\"is_iostat_eor\", GFC_ISYM_IS_IOSTAT_EOR,\n+\t     CLASS_ELEMENTAL, ACTUAL_NO, BT_LOGICAL, dl, GFC_STD_F2003,\n+\t     gfc_check_i, NULL, NULL, i, BT_INTEGER, 0, REQUIRED);\n+\n+  make_generic (\"is_iostat_eor\", GFC_ISYM_IS_IOSTAT_EOR, GFC_STD_F2003);\n+\n   add_sym_1 (\"isnan\", GFC_ISYM_ISNAN, CLASS_ELEMENTAL, ACTUAL_NO, BT_LOGICAL,\n \t     dl, GFC_STD_GNU, gfc_check_isnan, NULL, NULL,\n \t     x, BT_REAL, 0, REQUIRED);"}, {"sha": "d70e819c45f2560bc80f55f7b5d33487aee288e1", "filename": "gcc/fortran/intrinsic.texi", "status": "modified", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2Fintrinsic.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2Fintrinsic.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.texi?ref=bae891736b7f378f46de7999db525829869ce456", "patch": "@@ -152,6 +152,8 @@ Some basic guidelines for editing this document:\n * @code{INT8}:          INT8,      Convert to 64-bit integer type\n * @code{IOR}:           IOR,       Bitwise logical or\n * @code{IRAND}:         IRAND,     Integer pseudo-random number\n+* @code{IS_IOSTAT_END}:  IS_IOSTAT_END, Test for end-of-file value\n+* @code{IS_IOSTAT_EOR}:  IS_IOSTAT_EOR, Test for end-of-record value\n * @code{ISATTY}:        ISATTY,    Whether a unit is a terminal device\n * @code{ISHFT}:         ISHFT,     Shift bits\n * @code{ISHFTC}:        ISHFTC,    Shift bits circularly\n@@ -5878,6 +5880,96 @@ end program test_irand\n \n \n \n+@node IS_IOSTAT_END\n+@section @code{IS_IOSTAT_END} --- Test for end-of-file value\n+@fnindex IS_IOSTAT_END\n+@cindex IOSTAT, end of file\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{IS_IOSTAT_END} tests whether an variable has the value of the I/O\n+status ``end of file''. The function is equivalent to comparing the variable\n+with the @code{IOSTAT_END} parameter of the intrinsic module\n+@code{ISO_FORTRAN_ENV}.\n+\n+@item @emph{Standard}:\n+Fortran 2003.\n+\n+@item @emph{Class}:\n+Elemental function\n+\n+@item @emph{Syntax}:\n+@code{RESULT = IS_IOSTAT_END(I)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{I} @tab Shall be of the type @code{INTEGER}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+Returns a @code{LOGICAL} of the default kind, which @code{.TRUE.} if\n+@var{I} has the value which indicates an end of file condition for\n+IOSTAT= specifiers, and is @code{.FALSE.} otherwise.\n+\n+@item @emph{Example}:\n+@smallexample\n+PROGRAM iostat\n+  IMPLICIT NONE\n+  INTEGER :: stat, i\n+  OPEN(88, FILE='test.dat')\n+  READ(88, *, IOSTAT=stat) i\n+  IF(IS_IOSTAT_END(stat)) STOP 'END OF FILE'\n+END PROGRAM\n+@end smallexample\n+@end table\n+\n+\n+\n+@node IS_IOSTAT_EOR\n+@section @code{IS_IOSTAT_EOR} --- Test for end-of-record value\n+@fnindex IS_IOSTAT_EOR\n+@cindex IOSTAT, end of record\n+\n+@table @asis\n+@item @emph{Description}:\n+@code{IS_IOSTAT_EOR} tests whether an variable has the value of the I/O\n+status ``end of record''. The function is equivalent to comparing the\n+variable with the @code{IOSTAT_EOR} parameter of the intrinsic module\n+@code{ISO_FORTRAN_ENV}.\n+\n+@item @emph{Standard}:\n+Fortran 2003.\n+\n+@item @emph{Class}:\n+Elemental function\n+\n+@item @emph{Syntax}:\n+@code{RESULT = IS_IOSTAT_EOR(I)}\n+\n+@item @emph{Arguments}:\n+@multitable @columnfractions .15 .70\n+@item @var{I} @tab Shall be of the type @code{INTEGER}.\n+@end multitable\n+\n+@item @emph{Return value}:\n+Returns a @code{LOGICAL} of the default kind, which @code{.TRUE.} if\n+@var{I} has the value which indicates an end of file condition for\n+IOSTAT= specifiers, and is @code{.FALSE.} otherwise.\n+\n+@item @emph{Example}:\n+@smallexample\n+PROGRAM iostat\n+  IMPLICIT NONE\n+  INTEGER :: stat, i(50)\n+  OPEN(88, FILE='test.dat', FORM='UNFORMATTED')\n+  READ(88, IOSTAT=stat) i\n+  IF(IS_IOSTAT_EOR(stat)) STOP 'END OF RECORD'\n+END PROGRAM\n+@end smallexample\n+@end table\n+\n+\n+\n @node ISATTY\n @section @code{ISATTY} --- Whether a unit is a terminal device.\n @fnindex ISATTY"}, {"sha": "3c43a8432b0b7b22b370bf2dbc7512e27e0314a7", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae891736b7f378f46de7999db525829869ce456/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=bae891736b7f378f46de7999db525829869ce456", "patch": "@@ -2759,6 +2759,22 @@ gfc_conv_intrinsic_isnan (gfc_se * se, gfc_expr * expr)\n   se->expr = fold_convert (gfc_typenode_for_spec (&expr->ts), se->expr);\n }\n \n+\n+/* Intrinsics IS_IOSTAT_END and IS_IOSTAT_EOR just need to compare\n+   their argument against a constant integer value.  */\n+\n+static void\n+gfc_conv_has_intvalue (gfc_se * se, gfc_expr * expr, const int value)\n+{\n+  tree arg;\n+\n+  gfc_conv_intrinsic_function_args (se, expr, &arg, 1);\n+  se->expr = fold_build2 (EQ_EXPR, gfc_typenode_for_spec (&expr->ts),\n+\t\t\t  arg, build_int_cst (TREE_TYPE (arg), value));\n+}\n+\n+\n+\n /* MERGE (tsource, fsource, mask) = mask ? tsource : fsource.  */\n \n static void\n@@ -3911,6 +3927,14 @@ gfc_conv_intrinsic_function (gfc_se * se, gfc_expr * expr)\n       gfc_conv_intrinsic_bitop (se, expr, BIT_IOR_EXPR);\n       break;\n \n+    case GFC_ISYM_IS_IOSTAT_END:\n+      gfc_conv_has_intvalue (se, expr, -1);\n+      break;\n+\n+    case GFC_ISYM_IS_IOSTAT_EOR:\n+      gfc_conv_has_intvalue (se, expr, -2);\n+      break;\n+\n     case GFC_ISYM_ISNAN:\n       gfc_conv_intrinsic_isnan (se, expr);\n       break;"}, {"sha": "3c0ce8931d0ba27e12ed789cf965da92120820b0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae891736b7f378f46de7999db525829869ce456/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae891736b7f378f46de7999db525829869ce456/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bae891736b7f378f46de7999db525829869ce456", "patch": "@@ -1,3 +1,8 @@\n+2007-08-29  Tobias Burnus  <burnus@gcc.gnu.org>\n+\n+\tPR fortran/33105\n+\t* gfortran.dg/is_iostat_end_eor_1.f90: New test.\n+\n 2007-08-29  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/h8300-ice2.c: Remove target selector."}, {"sha": "dfa3a5c03c972ea07bb074ccdc36540924bde977", "filename": "gcc/testsuite/gfortran.dg/is_iostat_end_eor_1.f90", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bae891736b7f378f46de7999db525829869ce456/gcc%2Ftestsuite%2Fgfortran.dg%2Fis_iostat_end_eor_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bae891736b7f378f46de7999db525829869ce456/gcc%2Ftestsuite%2Fgfortran.dg%2Fis_iostat_end_eor_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fis_iostat_end_eor_1.f90?ref=bae891736b7f378f46de7999db525829869ce456", "patch": "@@ -0,0 +1,9 @@\n+! { dg-do run }\n+! Test for the Fortran 2003 intrinsics is_iostat_end & is_iostat_eor\n+!\n+program test\n+  use iso_fortran_env\n+  implicit none\n+  if ((.not. is_iostat_end(IOSTAT_END)) .or. is_iostat_end(0)) call abort()\n+  if ((.not. is_iostat_eor(IOSTAT_EOR)) .or. is_iostat_end(0)) call abort()\n+end program test"}]}