{"sha": "b6b011dd38da56a04dbf7d27833d015f2789a6f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjZiMDExZGQzOGRhNTZhMDRkYmY3ZDI3ODMzZDAxNWYyNzg5YTZmNQ==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-08-20T09:50:00Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-08-20T09:50:00Z"}, "message": "[Ada] Crash on Loop_Entry for while_loop involving substrings\n\nWhen expanding a loop entry attribute for a while_loop we construct a\nfunction that incorporates the expanded condition of the loop. The\nitypes that may be generated in that expansion must carry the scope of\nthe constructed function for proper handling in the backend.\n\n2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_attr.adb (Expand_Loop_Entry_Attribute): When expanding a\n\tloop entry attribute for a while_loop we construct a function\n\tthat incorporates the expanded condition of the loop. The itypes\n\tthat may be generated in that expansion must carry the scope of\n\tthe constructed function for proper handling in gigi.\n\ngcc/testsuite/\n\n\t* gnat.dg/loop_entry2.adb: New testcase.\n\nFrom-SVN: r274734", "tree": {"sha": "9c05a43e1234080f351d8318fad0884467a8d662", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9c05a43e1234080f351d8318fad0884467a8d662"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b6b011dd38da56a04dbf7d27833d015f2789a6f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6b011dd38da56a04dbf7d27833d015f2789a6f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6b011dd38da56a04dbf7d27833d015f2789a6f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6b011dd38da56a04dbf7d27833d015f2789a6f5/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1233757a2dd3bf314aa308e51cbaeb6a512d59db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1233757a2dd3bf314aa308e51cbaeb6a512d59db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1233757a2dd3bf314aa308e51cbaeb6a512d59db"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "238df0fe174bd2ae2a96935477c61b3d949448a2", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6b011dd38da56a04dbf7d27833d015f2789a6f5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6b011dd38da56a04dbf7d27833d015f2789a6f5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b6b011dd38da56a04dbf7d27833d015f2789a6f5", "patch": "@@ -1,3 +1,11 @@\n+2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb (Expand_Loop_Entry_Attribute): When expanding a\n+\tloop entry attribute for a while_loop we construct a function\n+\tthat incorporates the expanded condition of the loop. The itypes\n+\tthat may be generated in that expansion must carry the scope of\n+\tthe constructed function for proper handling in gigi.\n+\n 2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_disp.adb (Build_Class_Wide_Check, Replace_Formals): When a"}, {"sha": "c7d1647b42e554bd8b8b23f948f2b7c201af659a", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6b011dd38da56a04dbf7d27833d015f2789a6f5/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6b011dd38da56a04dbf7d27833d015f2789a6f5/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=b6b011dd38da56a04dbf7d27833d015f2789a6f5", "patch": "@@ -1436,6 +1436,25 @@ package body Exp_Attr is\n                Insert_Action (Loop_Stmt, Func_Decl);\n                Pop_Scope;\n \n+               --  The analysis of the condition may have generated itypes\n+               --  that are now used within the function: Adjust their\n+               --  scopes accordingly so that their use appears in their\n+               --  scope of definition.\n+\n+               declare\n+                  Ityp : Entity_Id;\n+\n+               begin\n+                  Ityp := First_Entity (Loop_Id);\n+\n+                  while Present (Ityp) loop\n+                     if Is_Itype (Ityp) then\n+                        Set_Scope (Ityp, Func_Id);\n+                     end if;\n+                     Next_Entity (Ityp);\n+                  end loop;\n+               end;\n+\n                --  Transform the original while loop into an infinite loop\n                --  where the last statement checks the negated condition. This\n                --  placement ensures that the condition will not be evaluated"}, {"sha": "b330c78955a99416401926dc724787a530cdb193", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6b011dd38da56a04dbf7d27833d015f2789a6f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6b011dd38da56a04dbf7d27833d015f2789a6f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b6b011dd38da56a04dbf7d27833d015f2789a6f5", "patch": "@@ -1,3 +1,7 @@\n+2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/loop_entry2.adb: New testcase.\n+\n 2019-08-20  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/tagged5.adb, gnat.dg/tagged5.ads: New testcase."}, {"sha": "1708e731527f00ae1e27cf5d9b00280f30b47dc8", "filename": "gcc/testsuite/gnat.dg/loop_entry2.adb", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b6b011dd38da56a04dbf7d27833d015f2789a6f5/gcc%2Ftestsuite%2Fgnat.dg%2Floop_entry2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b6b011dd38da56a04dbf7d27833d015f2789a6f5/gcc%2Ftestsuite%2Fgnat.dg%2Floop_entry2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Floop_entry2.adb?ref=b6b011dd38da56a04dbf7d27833d015f2789a6f5", "patch": "@@ -0,0 +1,11 @@\n+--  { dg-do compile }\n+--  { dg-options \"-gnata\" }\n+\n+procedure Loop_Entry2 (S : String) is\n+   J : Integer := S'First;\n+begin\n+   while S(J..J+1) = S(J..J+1) loop\n+      pragma Loop_Invariant (for all K in J'Loop_Entry .. J => K <= J);\n+      J := J + 1;\n+   end loop;\n+end;"}]}