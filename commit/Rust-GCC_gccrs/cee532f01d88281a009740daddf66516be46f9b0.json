{"sha": "cee532f01d88281a009740daddf66516be46f9b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VlNTMyZjAxZDg4MjgxYTAwOTc0MGRhZGRmNjY1MTZiZTQ2ZjliMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-11-30T08:24:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-11-30T08:24:06Z"}, "message": "re PR c/68162 (Incompatible pointer type using a typedef)\n\n2015-11-30  Richard Biener  <rguenther@suse.de>\n\n\tPR c/68162\n\t* dwarf2out.c (gen_type_die_with_usage): Keep variant types\n\tof arrays.\n\nFrom-SVN: r231058", "tree": {"sha": "bd246b1579386997064d6d95219f8a92c6c733a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd246b1579386997064d6d95219f8a92c6c733a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cee532f01d88281a009740daddf66516be46f9b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cee532f01d88281a009740daddf66516be46f9b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cee532f01d88281a009740daddf66516be46f9b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cee532f01d88281a009740daddf66516be46f9b0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b8320bc8bff1f2d0aa8229b7a44c7a713fd8ad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b8320bc8bff1f2d0aa8229b7a44c7a713fd8ad4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b8320bc8bff1f2d0aa8229b7a44c7a713fd8ad4"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "cbd30008e54a87a08df5dce97dba74435e21c4cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cee532f01d88281a009740daddf66516be46f9b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cee532f01d88281a009740daddf66516be46f9b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cee532f01d88281a009740daddf66516be46f9b0", "patch": "@@ -1,3 +1,9 @@\n+2015-11-30  Richard Biener  <rguenther@suse.de>\n+\n+\tPR c/68162\n+\t* dwarf2out.c (gen_type_die_with_usage): Keep variant types\n+\tof arrays.\n+\n 2015-11-30  Venkataramanan Kumar  <Venkataramanan.Kumar@amd.com>\n \n \t* tree-if-conv.c (struct ifc_dr): Add new tree"}, {"sha": "357f1148ede648626adf588c9da0b18e40b9f099", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cee532f01d88281a009740daddf66516be46f9b0/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cee532f01d88281a009740daddf66516be46f9b0/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=cee532f01d88281a009740daddf66516be46f9b0", "patch": "@@ -20798,9 +20798,10 @@ gen_type_die_with_usage (tree type, dw_die_ref context_die,\n   /* We are going to output a DIE to represent the unqualified version\n      of this type (i.e. without any const or volatile qualifiers) so\n      get the main variant (i.e. the unqualified version) of this type\n-     now.  (Vectors are special because the debugging info is in the\n+     now.  (Vectors and arrays are special because the debugging info is in the\n      cloned type itself).  */\n-  if (TREE_CODE (type) != VECTOR_TYPE)\n+  if (TREE_CODE (type) != VECTOR_TYPE\n+      && TREE_CODE (type) != ARRAY_TYPE)\n     type = type_main_variant (type);\n \n   /* If this is an array type with hidden descriptor, handle it first.  */"}]}