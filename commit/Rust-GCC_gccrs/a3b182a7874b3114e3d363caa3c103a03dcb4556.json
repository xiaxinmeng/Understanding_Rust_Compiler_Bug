{"sha": "a3b182a7874b3114e3d363caa3c103a03dcb4556", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNiMTgyYTc4NzRiMzExNGUzZDM2M2NhYTNjMTAzYTAzZGNiNDU1Ng==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-19T10:53:13Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-19T10:53:13Z"}, "message": "* loop.c (all_sets_invariant_p): Remove.\n\nFrom-SVN: r78090", "tree": {"sha": "8f5a658fb9fd9f708e787acc6e147df2b3a0b8b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f5a658fb9fd9f708e787acc6e147df2b3a0b8b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3b182a7874b3114e3d363caa3c103a03dcb4556", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b182a7874b3114e3d363caa3c103a03dcb4556", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b182a7874b3114e3d363caa3c103a03dcb4556", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b182a7874b3114e3d363caa3c103a03dcb4556/comments", "author": null, "committer": null, "parents": [{"sha": "ca6b7cecf68ef7ff90916a3ff3deca8e71a14c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca6b7cecf68ef7ff90916a3ff3deca8e71a14c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca6b7cecf68ef7ff90916a3ff3deca8e71a14c30"}], "stats": {"total": 35, "additions": 4, "deletions": 31}, "files": [{"sha": "300dfac82a04cd8cb4d0d357148e1dec85e81a58", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b182a7874b3114e3d363caa3c103a03dcb4556/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b182a7874b3114e3d363caa3c103a03dcb4556/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3b182a7874b3114e3d363caa3c103a03dcb4556", "patch": "@@ -1,3 +1,7 @@\n+2004-02-19  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* loop.c (all_sets_invariant_p): Remove.\n+\n 2004-02-19  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR target/12916"}, {"sha": "a51a34cb6047f66906711213f26ba14cc38e0525", "filename": "gcc/loop.c", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3b182a7874b3114e3d363caa3c103a03dcb4556/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3b182a7874b3114e3d363caa3c103a03dcb4556/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=a3b182a7874b3114e3d363caa3c103a03dcb4556", "patch": "@@ -3499,37 +3499,6 @@ consec_sets_invariant_p (const struct loop *loop, rtx reg, int n_sets,\n   /* If loop_invariant_p ever returned 2, we return 2.  */\n   return 1 + (value & 2);\n }\n-\n-#if 0\n-/* I don't think this condition is sufficient to allow INSN\n-   to be moved, so we no longer test it.  */\n-\n-/* Return 1 if all insns in the basic block of INSN and following INSN\n-   that set REG are invariant according to TABLE.  */\n-\n-static int\n-all_sets_invariant_p (rtx reg, rtx insn, short *table)\n-{\n-  rtx p = insn;\n-  int regno = REGNO (reg);\n-\n-  while (1)\n-    {\n-      enum rtx_code code;\n-      p = NEXT_INSN (p);\n-      code = GET_CODE (p);\n-      if (code == CODE_LABEL || code == JUMP_INSN)\n-\treturn 1;\n-      if (code == INSN && GET_CODE (PATTERN (p)) == SET\n-\t  && GET_CODE (SET_DEST (PATTERN (p))) == REG\n-\t  && REGNO (SET_DEST (PATTERN (p))) == regno)\n-\t{\n-\t  if (! loop_invariant_p (loop, SET_SRC (PATTERN (p)), table))\n-\t    return 0;\n-\t}\n-    }\n-}\n-#endif /* 0 */\n \f\n /* Look at all uses (not sets) of registers in X.  For each, if it is\n    the single use, set USAGE[REGNO] to INSN; if there was a previous use in"}]}