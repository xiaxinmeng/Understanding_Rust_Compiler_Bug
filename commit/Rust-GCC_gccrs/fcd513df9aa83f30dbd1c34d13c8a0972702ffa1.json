{"sha": "fcd513df9aa83f30dbd1c34d13c8a0972702ffa1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNkNTEzZGY5YWE4M2YzMGRiZDFjMzRkMTNjOGEwOTcyNzAyZmZhMQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-11-17T11:51:40Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-11-17T11:51:40Z"}, "message": "PR97693: Specify required vectype in vectorizable_call\n\nThe vectorizable_call part of r11-1143 dropped the required\nvectype when moving from vect_get_vec_def_for_operand to\nvect_get_vec_defs_for_operand.  This caused an ICE on the\ntestcase for SVE, because we ended up with a non-predicate\nvalue being passed to a predicate input.\n\nAFAICT this was the only instance of that happening.  The types\nseemed to get carried forward for all the other converted calls.\n\ngcc/\n\tPR tree-optimization/97693\n\t* tree-vect-stmts.c (vectorizable_call): Pass the required vectype\n\tto vect_get_vec_defs_for_operand.\n\ngcc/testsuite/\n\tPR tree-optimization/97693\n\t* gcc.dg/vect/pr97693.c: New test.", "tree": {"sha": "9aaaa1efe74624d302c4b128d8fa3fc30a03f80c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9aaaa1efe74624d302c4b128d8fa3fc30a03f80c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcd513df9aa83f30dbd1c34d13c8a0972702ffa1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcd513df9aa83f30dbd1c34d13c8a0972702ffa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcd513df9aa83f30dbd1c34d13c8a0972702ffa1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcd513df9aa83f30dbd1c34d13c8a0972702ffa1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6da5ecb058cbdcbf8f8efc2d7dcdf9b7bc3a4fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6da5ecb058cbdcbf8f8efc2d7dcdf9b7bc3a4fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6da5ecb058cbdcbf8f8efc2d7dcdf9b7bc3a4fa"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "4da44c7055539d018f7135424cce2ecece8a7f3a", "filename": "gcc/testsuite/gcc.dg/vect/pr97693.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcd513df9aa83f30dbd1c34d13c8a0972702ffa1/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97693.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcd513df9aa83f30dbd1c34d13c8a0972702ffa1/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97693.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr97693.c?ref=fcd513df9aa83f30dbd1c34d13c8a0972702ffa1", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+\n+extern short a[];\n+int b;\n+short c, d;\n+unsigned e() {\n+  if (c)\n+    return c;\n+  return d;\n+}\n+void f() {\n+  for (unsigned g = b; g; g += 6)\n+    for (_Bool h = 0; h < (_Bool)e(); h = 1)\n+      a[g] = 1 / b;\n+}"}, {"sha": "4e535fec9ca523e717076fabb3c9be6961af2c26", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcd513df9aa83f30dbd1c34d13c8a0972702ffa1/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcd513df9aa83f30dbd1c34d13c8a0972702ffa1/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=fcd513df9aa83f30dbd1c34d13c8a0972702ffa1", "patch": "@@ -3427,7 +3427,8 @@ vectorizable_call (vec_info *vinfo,\n \t\t{\n \t\t  vec_defs.quick_push (vNULL);\n \t\t  vect_get_vec_defs_for_operand (vinfo, stmt_info, ncopies,\n-\t\t\t\t\t\t op, &vec_defs[i]);\n+\t\t\t\t\t\t op, &vec_defs[i],\n+\t\t\t\t\t\t vectypes[i]);\n \t\t}\n \t      orig_vargs[i] = vargs[i] = vec_defs[i][j];\n \t    }"}]}