{"sha": "53efeb8d0b17b21daeefc77ac53ef2e9876921c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTNlZmViOGQwYjE3YjIxZGFlZWZjNzdhYzUzZWYyZTk4NzY5MjFjNg==", "commit": {"author": {"name": "Steven Bosscher", "email": "stevenb@suse.de", "date": "2004-01-11T23:05:49Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2004-01-11T23:05:49Z"}, "message": "re PR fortran/9972 (Failure of g77.f-torture/execute/980520-1.f)\n\n\tPR fortran/9972\n\t* toplev.c (rest_of_handle_inlining): Also consider functions\n\tfor deferral if the language is GNU F77.\n\ntestsuite:\n\t* 980520-1.x: Removed.\n\nFrom-SVN: r75692", "tree": {"sha": "3f32a25a3339b44675d391be35196638125e0b72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f32a25a3339b44675d391be35196638125e0b72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53efeb8d0b17b21daeefc77ac53ef2e9876921c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53efeb8d0b17b21daeefc77ac53ef2e9876921c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53efeb8d0b17b21daeefc77ac53ef2e9876921c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53efeb8d0b17b21daeefc77ac53ef2e9876921c6/comments", "author": null, "committer": null, "parents": [{"sha": "d4968a11164de7144bdded316a2126197661adf1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4968a11164de7144bdded316a2126197661adf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4968a11164de7144bdded316a2126197661adf1"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "030417dd8bea2402eb754c71c0cb0ea7a7e495eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53efeb8d0b17b21daeefc77ac53ef2e9876921c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53efeb8d0b17b21daeefc77ac53ef2e9876921c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=53efeb8d0b17b21daeefc77ac53ef2e9876921c6", "patch": "@@ -1,3 +1,8 @@\n+2004-01-11  Steven Bosscher  <stevenb@suse.de>\n+\n+\t* toplev.c (rest_of_handle_inline): Also consider functions\n+\tfor deferral if the language is GNU F77.\n+\n 2004-01-11  Zack Weinberg  <zack@codesourcery.com>\n \n \t* c-decl.c (diagnose_arglist_conflict): Add missing space to"}, {"sha": "595de5e19118ddef29d5053ec763bf73e6cdf89b", "filename": "gcc/testsuite/g77.f-torture/execute/980520-1.x", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d4968a11164de7144bdded316a2126197661adf1/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980520-1.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d4968a11164de7144bdded316a2126197661adf1/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980520-1.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg77.f-torture%2Fexecute%2F980520-1.x?ref=d4968a11164de7144bdded316a2126197661adf1", "patch": "@@ -1,11 +0,0 @@\n-set torture_eval_before_compile {\n-\n-    set compiler_conditional_xfail_data {\n-\t\"PR fortran/9972\" \\\n-\t{ \"*-*-*\" } \\\n-\t{ \"-O0\" } \\\n-\t{ \"\" }\n-\t}\n-}\n-\n-return 0"}, {"sha": "3ac7d7373935646e3a1d8719fd505b36ce34ac07", "filename": "gcc/toplev.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53efeb8d0b17b21daeefc77ac53ef2e9876921c6/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53efeb8d0b17b21daeefc77ac53ef2e9876921c6/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=53efeb8d0b17b21daeefc77ac53ef2e9876921c6", "patch": "@@ -2678,7 +2678,13 @@ rest_of_handle_inlining (tree decl)\n \n   if (inlinable\n       || (DECL_INLINE (decl)\n-\t  && flag_inline_functions\n+\t  /* Egad.  This RTL deferral test conflicts with Fortran assumptions\n+\t     for unreferenced symbols.  See g77.f-torture/execute/980520-1.f.\n+\t     But removing this line from the check breaks all languages that\n+\t     use the call graph to output symbols.  This hard-coded check is\n+\t     the least invasive work-around.  */\n+\t  && (flag_inline_functions\n+\t      || strcmp (lang_hooks.name, \"GNU F77\") == 0)\n \t  && ((! TREE_PUBLIC (decl) && ! TREE_ADDRESSABLE (decl)\n \t       && ! TREE_SYMBOL_REFERENCED (DECL_ASSEMBLER_NAME (decl))\n \t       && ! flag_keep_inline_functions)"}]}