{"sha": "dc5c3188aa4570a39f45540a5e2c823aebb38ff3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGM1YzMxODhhYTQ1NzBhMzlmNDU1NDBhNWUyYzgyM2FlYmIzOGZmMw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2003-08-25T21:11:46Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2003-08-25T21:11:46Z"}, "message": "combine.c (simplify_comparison): Re-enable widening of comparisons with non-paradoxical subregs of non-REG...\n\n\t* combine.c (simplify_comparison): Re-enable widening of comparisons\n\twith non-paradoxical subregs of non-REG expressions.\n\nFrom-SVN: r70785", "tree": {"sha": "260e724a6feef7912abb6417fced519a0095722d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/260e724a6feef7912abb6417fced519a0095722d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc5c3188aa4570a39f45540a5e2c823aebb38ff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5c3188aa4570a39f45540a5e2c823aebb38ff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc5c3188aa4570a39f45540a5e2c823aebb38ff3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc5c3188aa4570a39f45540a5e2c823aebb38ff3/comments", "author": null, "committer": null, "parents": [{"sha": "ff619040add5835e96b9d39a6c5c3e4cfdb14e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff619040add5835e96b9d39a6c5c3e4cfdb14e77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff619040add5835e96b9d39a6c5c3e4cfdb14e77"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "e23a0e2e6c0fb0ffff321b2c6769418dd31c377d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5c3188aa4570a39f45540a5e2c823aebb38ff3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5c3188aa4570a39f45540a5e2c823aebb38ff3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc5c3188aa4570a39f45540a5e2c823aebb38ff3", "patch": "@@ -1,3 +1,8 @@\n+2003-08-25  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* combine.c (simplify_comparison): Re-enable widening of comparisons\n+\twith non-paradoxical subregs of non-REG expressions.\n+\n 2003-08-25  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* combine.c (distribute_notes): Handle REG_ALWAYS_RETURN."}, {"sha": "cc7c7de156e2dad313220e871bbb808fd174334a", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc5c3188aa4570a39f45540a5e2c823aebb38ff3/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc5c3188aa4570a39f45540a5e2c823aebb38ff3/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=dc5c3188aa4570a39f45540a5e2c823aebb38ff3", "patch": "@@ -11277,18 +11277,20 @@ simplify_comparison (enum rtx_code code, rtx *pop0, rtx *pop1)\n   op1 = make_compound_operation (op1, SET);\n \n   if (GET_CODE (op0) == SUBREG && subreg_lowpart_p (op0)\n-      /* Case 3 above, to sometimes allow (subreg (mem x)), isn't\n-\t implemented.  */\n-      && GET_CODE (SUBREG_REG (op0)) == REG\n       && GET_MODE_CLASS (GET_MODE (op0)) == MODE_INT\n       && GET_MODE_CLASS (GET_MODE (SUBREG_REG (op0))) == MODE_INT\n       && (code == NE || code == EQ))\n     {\n       if (GET_MODE_SIZE (GET_MODE (op0))\n \t  > GET_MODE_SIZE (GET_MODE (SUBREG_REG (op0))))\n \t{\n-\t  op0 = SUBREG_REG (op0);\n-\t  op1 = gen_lowpart_for_combine (GET_MODE (op0), op1);\n+\t  /* For paradoxical subregs, allow case 1 as above.  Case 3 isn't\n+\t     implemented.  */\n+          if (GET_CODE (SUBREG_REG (op0)) == REG)\n+\t    {\n+\t      op0 = SUBREG_REG (op0);\n+\t      op1 = gen_lowpart_for_combine (GET_MODE (op0), op1);\n+\t    }\n \t}\n       else if ((GET_MODE_BITSIZE (GET_MODE (SUBREG_REG (op0)))\n \t\t<= HOST_BITS_PER_WIDE_INT)"}]}