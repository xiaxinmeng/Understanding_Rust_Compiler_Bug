{"sha": "cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2NDRhZTJiYzBjZTYyYjg4Zjc4NmNlNWE2OGFkMGJhMjUwOWVjNg==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-29T15:33:23Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-09-29T15:33:23Z"}, "message": "[multiple changes]\n\n2017-09-29  Bob Duff  <duff@adacore.com>\n\n\t* exp_ch6.adb (Expand_Call_Helper): Replace with code more similar to\n\twhat we had before.\n\t(Make_Build_In_Place_Call_In_Object_Declaration): Back out previous\n\tchange. Set the Etype in the class-wide case. This fixes a regression\n\tin the libadalang test suite.\n\n2017-09-29  Joel Brobecker  <brobecker@adacore.com>\n\n\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst,\n\tdoc/gnat_ugn/the_gnat_compilation_model.rst: Avoid use of single colon\n\tin comment markup.\n\t* gnat_ugn.texi:\u00a0Regenerate.\n\n2017-09-29  Justin Squirek  <squirek@adacore.com>\n\n\t* ali-util.adb, comperr.adb, cprint.adb, errout.adb, fmap.adb,\n\tfname-sf.adb, frontend.adb, lib-xref-spark_specific.adb, gnat1drv.adb,\n\tgnatls.adb, lib.adb, lib-load.adb, lib-writ.adb, prepcomp.adb,\n\tsinput-d.adb, sinput-l.adb, sprint.adb, targparm.adb: Update comparison\n\tfor checking source file status and error message and/or call to\n\tRead_Source_File.\n\t* libgnat/s-os_lib.ads: Add new potential value constant for\n\tuninitialized file descriptors.\n\t* osint.adb, osint.ads (Read_Source_File): Add extra parameter to\n\treturn result of IO to encompass a read access failure in addition to a\n\tfile-not-found error.\n\nFrom-SVN: r253294", "tree": {"sha": "5b626698ecdaf41e2a8f95028be8c76b863eaed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b626698ecdaf41e2a8f95028be8c76b863eaed6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/comments", "author": null, "committer": null, "parents": [{"sha": "e75210d645630f12bf149043cf6ae51829f5ed78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e75210d645630f12bf149043cf6ae51829f5ed78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e75210d645630f12bf149043cf6ae51829f5ed78"}], "stats": {"total": 230, "additions": 159, "deletions": 71}, "files": [{"sha": "4e931f9a6ff10cb600d7caec2bc47b9876a31a31", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -1,3 +1,32 @@\n+2017-09-29  Bob Duff  <duff@adacore.com>\n+\n+\t* exp_ch6.adb (Expand_Call_Helper): Replace with code more similar to\n+\twhat we had before.\n+\t(Make_Build_In_Place_Call_In_Object_Declaration): Back out previous\n+\tchange. Set the Etype in the class-wide case. This fixes a regression\n+\tin the libadalang test suite.\n+\n+2017-09-29  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* doc/gnat_ugn/building_executable_programs_with_gnat.rst,\n+\tdoc/gnat_ugn/the_gnat_compilation_model.rst: Avoid use of single colon\n+\tin comment markup.\n+\t* gnat_ugn.texi:\u00a0Regenerate.\n+\n+2017-09-29  Justin Squirek  <squirek@adacore.com>\n+\n+\t* ali-util.adb, comperr.adb, cprint.adb, errout.adb, fmap.adb,\n+\tfname-sf.adb, frontend.adb, lib-xref-spark_specific.adb, gnat1drv.adb,\n+\tgnatls.adb, lib.adb, lib-load.adb, lib-writ.adb, prepcomp.adb,\n+\tsinput-d.adb, sinput-l.adb, sprint.adb, targparm.adb: Update comparison\n+\tfor checking source file status and error message and/or call to\n+\tRead_Source_File.\n+\t* libgnat/s-os_lib.ads: Add new potential value constant for\n+\tuninitialized file descriptors.\n+\t* osint.adb, osint.ads (Read_Source_File): Add extra parameter to\n+\treturn result of IO to encompass a read access failure in addition to a\n+\tfile-not-found error.\n+\n 2017-09-29  Bob Duff  <duff@adacore.com>\n \n \t* exp_ch6.adb (Expand_Call_Helper): Handle case of build-in-place"}, {"sha": "ea4e8567f94852a4610c5d90568035c2c18291e8", "filename": "gcc/ada/ali-util.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fali-util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fali-util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fali-util.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -148,7 +148,7 @@ package body ALI.Util is\n \n       Source_Index := Sinput.C.Load_File (Get_Name_String (Full_Name));\n \n-      if Source_Index = No_Source_File then\n+      if Source_Index <= No_Source_File then\n          return Checksum_Error;\n       end if;\n "}, {"sha": "e76081c2ed0a5ab9a14dec141027d73f5a54e07c", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -253,6 +253,7 @@ package body Comperr is\n          --  we use the contents of this file at this point.\n \n          declare\n+            FD  : File_Descriptor;\n             Lo  : Source_Ptr;\n             Hi  : Source_Ptr;\n             Src : Source_Buffer_Ptr;\n@@ -261,7 +262,7 @@ package body Comperr is\n             Namet.Unlock;\n             Name_Buffer (1 .. 12) := \"gnat_bug.box\";\n             Name_Len := 12;\n-            Read_Source_File (Name_Enter, 0, Hi, Src);\n+            Read_Source_File (Name_Enter, 0, Hi, Src, FD);\n \n             --  If we get a Src file, we use it\n \n@@ -457,7 +458,7 @@ package body Comperr is\n       --  If parsing was not successful, no Main_Unit is available, so return\n       --  immediately.\n \n-      if Main_Source_File = No_Source_File then\n+      if Main_Source_File <= No_Source_File then\n          return;\n       end if;\n "}, {"sha": "046fe35a825bd3b3be8218fb0dcc469fb33e90fb", "filename": "gcc/ada/doc/gnat_ugn/building_executable_programs_with_gnat.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fbuilding_executable_programs_with_gnat.rst?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -559,7 +559,7 @@ You may specify any of the following switches to ``gnatmake``:\n   -f, it is equivalent to calling the compiler directly. Note that using\n   -u with a project file and no main has a special meaning.\n \n-.. --Comment:\n+.. --Comment\n   (See :ref:`Project_Files_and_Main_Subprograms`.)\n \n "}, {"sha": "248bf8ef97fb29793937e36ac069209d57c0f3d8", "filename": "gcc/ada/doc/gnat_ugn/the_gnat_compilation_model.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -1569,7 +1569,7 @@ depend on a file that no longer exists. Such tools include\n If you are using project file, a separate mechanism is provided using\n project attributes.\n \n-.. --Comment:\n+.. --Comment\n    See :ref:`Specifying_Configuration_Pragmas` for more details.\n \n "}, {"sha": "a402c684101e909f976bdf879442e72ff42c3821", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -1813,7 +1813,7 @@ package body Errout is\n          --  the Main_Source line is unknown (this happens in error situations,\n          --  e.g. when integrated preprocessing fails).\n \n-         if Main_Source_File /= No_Source_File then\n+         if Main_Source_File > No_Source_File then\n             Write_Str (\" \");\n             Write_Int (Num_Source_Lines (Main_Source_File));\n \n@@ -1938,7 +1938,7 @@ package body Errout is\n       --  Source_Reference. This ensures outputting the proper name of\n       --  the source file in this situation.\n \n-      if Main_Source_File = No_Source_File\n+      if Main_Source_File <= No_Source_File\n         or else Num_SRef_Pragmas (Main_Source_File) /= 0\n       then\n          Current_Error_Source_File := No_Source_File;\n@@ -2045,7 +2045,7 @@ package body Errout is\n \n                   --  Only write the header if Sfile is known\n \n-                  if Sfile /= No_Source_File then\n+                  if Sfile > No_Source_File then\n                      Write_Header (Sfile);\n                      Write_Eol;\n                   end if;\n@@ -2066,7 +2066,7 @@ package body Errout is\n                   --  Only output the listing if Sfile is known, to avoid\n                   --  crashing the compiler.\n \n-                  if Sfile /= No_Source_File then\n+                  if Sfile > No_Source_File then\n                      for N in 1 .. Last_Source_Line (Sfile) loop\n                         while E /= No_Error_Msg\n                           and then Errors.Table (E).Deleted\n@@ -2141,7 +2141,7 @@ package body Errout is\n \n          --  Output the header only when Main_Source_File is known\n \n-         if Main_Source_File /= No_Source_File then\n+         if Main_Source_File > No_Source_File then\n             Write_Header (Main_Source_File);\n          end if;\n "}, {"sha": "715e74cfebeda1d7249d682757910eaf507c52cb", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 24, "deletions": 12, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -4330,11 +4330,19 @@ package body Exp_Ch6 is\n       --  result from the secondary stack.\n \n       if Needs_Finalization (Etype (Subp)) then\n+         if not Is_Build_In_Place_Function_Call (Call_Node)\n+           and then\n+             (No (First_Formal (Subp))\n+                or else\n+                  not Is_Concurrent_Record_Type (Etype (First_Formal (Subp))))\n+         then\n+            Expand_Ctrl_Function_Call (Call_Node);\n+\n          --  Build-in-place function calls which appear in anonymous contexts\n          --  need a transient scope to ensure the proper finalization of the\n          --  intermediate result after its use.\n \n-         if Is_Build_In_Place_Function_Call (Call_Node)\n+         elsif Is_Build_In_Place_Function_Call (Call_Node)\n            and then\n              Nkind_In (Parent (Unqual_Conv (Call_Node)),\n                        N_Attribute_Reference,\n@@ -4346,14 +4354,6 @@ package body Exp_Ch6 is\n                        N_Slice)\n          then\n             Establish_Transient_Scope (Call_Node, Sec_Stack => True);\n-\n-         elsif not Is_Build_In_Place_Function_Call (Call_Node)\n-           and then\n-             (No (First_Formal (Subp))\n-                or else\n-                  not Is_Concurrent_Record_Type (Etype (First_Formal (Subp))))\n-         then\n-            Expand_Ctrl_Function_Call (Call_Node);\n          end if;\n       end if;\n    end Expand_Call_Helper;\n@@ -6393,9 +6393,9 @@ package body Exp_Ch6 is\n          end if;\n       end if;\n \n-      --  For the case of a simple return that does not come from an extended\n-      --  return, in the case of build-in-place, we rewrite \"return\n-      --  <expression>;\" to be:\n+      --  For the case of a simple return that does not come from an\n+      --  extended return, in the case of build-in-place, we rewrite\n+      --  \"return <expression>;\" to be:\n \n       --    return _anon_ : <return_subtype> := <expression>\n \n@@ -8518,6 +8518,18 @@ package body Exp_Ch6 is\n               (Obj_Decl, Original_Node (Obj_Decl));\n          end if;\n       end;\n+\n+      --  If the object entity has a class-wide Etype, then we need to change\n+      --  it to the result subtype of the function call, because otherwise the\n+      --  object will be class-wide without an explicit initialization and\n+      --  won't be allocated properly by the back end. It seems unclean to make\n+      --  such a revision to the type at this point, and we should try to\n+      --  improve this treatment when build-in-place functions with class-wide\n+      --  results are implemented. ???\n+\n+      if Is_Class_Wide_Type (Etype (Defining_Identifier (Obj_Decl))) then\n+         Set_Etype (Defining_Identifier (Obj_Decl), Result_Subt);\n+      end if;\n    end Make_Build_In_Place_Call_In_Object_Declaration;\n \n    -------------------------------------------------"}, {"sha": "4345dfa8005375496f9ace2ab1b7b5b766027797", "filename": "gcc/ada/fmap.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ffmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ffmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffmap.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -175,6 +175,7 @@ package body Fmap is\n    ----------------\n \n    procedure Initialize (File_Name : String) is\n+      FD  : File_Descriptor;\n       Src : Source_Buffer_Ptr;\n       Hi  : Source_Ptr;\n \n@@ -297,10 +298,14 @@ package body Fmap is\n \n    begin\n       Empty_Tables;\n-      Read_Source_File (Name_Enter (File_Name), 1, Hi, Src, Config);\n+      Read_Source_File (Name_Enter (File_Name), 1, Hi, Src, FD, Config);\n \n       if Null_Source_Buffer_Ptr (Src) then\n-         Write_Str (\"warning: could not read mapping file \"\"\");\n+         if FD = Null_FD then\n+            Write_Str (\"warning: could not locate mapping file \"\"\");\n+         else\n+            Write_Str (\"warning: no read access for mapping file \"\"\");\n+         end if;\n          Write_Str (File_Name);\n          Write_Line (\"\"\"\");\n          No_Mapping_File := True;"}, {"sha": "53cc9d19f1cf027d46d518640b47d474b88d84a7", "filename": "gcc/ada/fname-sf.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ffname-sf.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ffname-sf.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname-sf.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -23,12 +23,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Casing;   use Casing;\n-with Fname;    use Fname;\n-with Fname.UF; use Fname.UF;\n-with SFN_Scan; use SFN_Scan;\n-with Osint;    use Osint;\n-with Types;    use Types;\n+with Casing;        use Casing;\n+with Fname;         use Fname;\n+with Fname.UF;      use Fname.UF;\n+with SFN_Scan;      use SFN_Scan;\n+with Osint;         use Osint;\n+with Types;         use Types;\n+with System.OS_Lib; use System.OS_Lib;\n \n with Unchecked_Conversion;\n \n@@ -61,11 +62,12 @@ package body Fname.SF is\n    -----------------------------------\n \n    procedure Read_Source_File_Name_Pragmas is\n+      FD  : File_Descriptor;\n       Src : Source_Buffer_Ptr;\n       Hi  : Source_Ptr;\n \n    begin\n-      Read_Source_File (Name_Enter (\"gnat.adc\"), 1, Hi, Src);\n+      Read_Source_File (Name_Enter (\"gnat.adc\"), 1, Hi, Src, FD);\n \n       if not Null_Source_Buffer_Ptr (Src) then\n          --  We need to strip off the trailing EOF that was added by"}, {"sha": "bb28eae1192e057af7ec3deedf1ef57963d1d4e5", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -126,7 +126,7 @@ begin\n \n    --  Return immediately if the main source could not be found\n \n-   if Sinput.Main_Source_File = No_Source_File then\n+   if Sinput.Main_Source_File <= No_Source_File then\n       return;\n    end if;\n \n@@ -167,7 +167,7 @@ begin\n \n          --  Case of gnat.adc file present\n \n-         if Source_gnat_adc /= No_Source_File then\n+         if Source_gnat_adc > No_Source_File then\n             --  Parse the gnat.adc file for configuration pragmas\n \n             Initialize_Scanner (No_Unit, Source_gnat_adc);\n@@ -213,7 +213,7 @@ begin\n \n                   Source_Config_File := Load_Config_File (Config_Name);\n \n-                  if Source_Config_File = No_Source_File then\n+                  if Source_Config_File <= No_Source_File then\n                      Osint.Fail\n                        (\"cannot find configuration pragmas file \"\n                         & Config_File_Names (Index).all);"}, {"sha": "882631f9beee91802f32491d628c68b0aa750e09", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -852,7 +852,7 @@ procedure Gnat1drv is\n          --  pragma, to be used this way and to cause the body file to be\n          --  ignored in this context).\n \n-         if Src_Ind /= No_Source_File\n+         if Src_Ind > No_Source_File\n            and then Source_File_Is_Body (Src_Ind)\n          then\n             Errout.Finalize (Last_Call => False);\n@@ -1065,6 +1065,11 @@ begin\n                  (\"fatal error, run-time library not installed correctly\");\n                Write_Line (\"cannot locate file system.ads\");\n                raise Unrecoverable_Error;\n+            elsif S = No_Access_To_Source_File then\n+               Write_Line\n+                 (\"fatal error, run-time library not installed correctly\");\n+               Write_Line (\"no read access for file system.ads\");\n+               raise Unrecoverable_Error;\n \n             --  Read system.ads successfully, remember its source index\n \n@@ -1141,7 +1146,7 @@ begin\n \n       --  Exit with errors if the main source could not be parsed\n \n-      if Sinput.Main_Source_File = No_Source_File then\n+      if Sinput.Main_Source_File <= No_Source_File then\n          Errout.Finalize (Last_Call => True);\n          Errout.Output_Messages;\n          Exit_Program (E_Errors);"}, {"sha": "49abd462265c0202668ab5691f5320460248aa99", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -3193,7 +3193,7 @@ depend on a file that no longer exists. Such tools include\n If you are using project file, a separate mechanism is provided using\n project attributes.\n \n-@c --Comment:\n+@c --Comment\n @c See :ref:`Specifying_Configuration_Pragmas` for more details.\n \n @node Generating Object Files,Source Dependencies,Configuration Pragmas,The GNAT Compilation Model\n@@ -7925,7 +7925,7 @@ Unique. Recompile at most the main files. It implies -c. Combined with\n -u with a project file and no main has a special meaning.\n @end table\n \n-@c --Comment:\n+@c --Comment\n @c (See :ref:`Project_Files_and_Main_Subprograms`.)\n \n @geindex -U (gnatmake)"}, {"sha": "f45305f9e819adac9308131025327feaca6f27dd", "filename": "gcc/ada/gnatls.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fgnatls.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fgnatls.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatls.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -2097,14 +2097,15 @@ begin\n \n    if RTS_Specified = null then\n       declare\n+         FD   : File_Descriptor;\n          Text : Source_Buffer_Ptr;\n          Hi   : Source_Ptr;\n \n       begin\n          Name_Buffer (1 .. 10) := \"system.ads\";\n          Name_Len := 10;\n \n-         Read_Source_File (Name_Find, Lo => 0, Hi => Hi, Src => Text);\n+         Read_Source_File (Name_Find, 0, Hi, Text, FD);\n \n          if Null_Source_Buffer_Ptr (Text) then\n             No_Runtime := True;"}, {"sha": "1419422887f8ffff8464ebf9d1356fc2c3c78768", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 21, "deletions": 7, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -122,7 +122,7 @@ package body Lib.Load is\n \n       --  No change if we did not find the spec\n \n-      if X = No_Source_File then\n+      if X <= No_Source_File then\n          return;\n       end if;\n \n@@ -326,15 +326,21 @@ package body Lib.Load is\n          Main_Source_File := Load_Source_File (Fname);\n          Current_Error_Source_File := Main_Source_File;\n \n-         if Main_Source_File /= No_Source_File then\n+         if Main_Source_File > No_Source_File then\n             Version := Source_Checksum (Main_Source_File);\n          else\n             --  To avoid emitting a source location (since there is no file),\n             --  we write a custom error message instead of using the machinery\n             --  in errout.adb.\n \n             Set_Standard_Error;\n-            Write_Str (\"file \"\"\" & Get_Name_String (Fname) & \"\"\" not found\");\n+            if Main_Source_File = No_Access_To_Source_File then\n+               Write_Str (\"no read access for file \"\"\"\n+                          & Get_Name_String (Fname) & \"\"\"\");\n+            else\n+               Write_Str (\"file \"\"\"\n+                          & Get_Name_String (Fname) & \"\"\" not found\");\n+            end if;\n             Write_Eol;\n             Set_Standard_Output;\n          end if;\n@@ -716,7 +722,7 @@ package body Lib.Load is\n \n          --  File was found\n \n-         if Src_Ind /= No_Source_File then\n+         if Src_Ind > No_Source_File then\n             Units.Table (Unum) :=\n               (Cunit             => Empty,\n                Cunit_Entity      => Empty,\n@@ -824,7 +830,11 @@ package body Lib.Load is\n \n          else\n             if Debug_Flag_L then\n-               Write_Str (\"  file was not found, load failed\");\n+               if Src_Ind = No_Access_To_Source_File then\n+                  Write_Str (\"  no read access to file, load failed\");\n+               else\n+                  Write_Str (\"  file was not found, load failed\");\n+               end if;\n                Write_Eol;\n             end if;\n \n@@ -857,7 +867,11 @@ package body Lib.Load is\n \n                else\n                   Error_Msg_File_1 := Fname;\n-                  Error_Msg (\"file{ not found\", Load_Msg_Sloc);\n+                  if Src_Ind = No_Access_To_Source_File then\n+                     Error_Msg (\"no read access to file{\", Load_Msg_Sloc);\n+                  else\n+                     Error_Msg (\"file{ not found\", Load_Msg_Sloc);\n+                  end if;\n                end if;\n \n                Write_Dependency_Chain;\n@@ -983,7 +997,7 @@ package body Lib.Load is\n       Unum  : constant Unit_Number_Type := Get_Cunit_Unit_Number (U);\n       Fnum  : constant Unit_Number_Type := Get_Cunit_Unit_Number (From);\n    begin\n-      if Source_Index (Fnum) /= No_Source_File then\n+      if Source_Index (Fnum) > No_Source_File then\n          Units.Table (Unum).Version :=\n            Units.Table (Unum).Version\n              xor"}, {"sha": "d263b05dc1c553afeb0d932f58f191ba59f6a5c1", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -1464,7 +1464,7 @@ package body Lib.Writ is\n \n             --  Normal case of a unit entry with a source index\n \n-            if Sind /= No_Source_File then\n+            if Sind > No_Source_File then\n                Fname := File_Name (Sind);\n \n                --  Ensure that on platforms where the file names are not case"}, {"sha": "4d221749907a141be59b46eac8adcadd6aa12a35", "filename": "gcc/ada/lib-xref-spark_specific.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flib-xref-spark_specific.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flib-xref-spark_specific.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref-spark_specific.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -249,7 +249,7 @@ package body SPARK_Specific is\n       --  Source file could be inexistant as a result of an error, if option\n       --  gnatQ is used.\n \n-      if File = No_Source_File then\n+      if File <= No_Source_File then\n          return;\n       end if;\n "}, {"sha": "9373f9519e73c76d7298dc1f60a844c977c99293", "filename": "gcc/ada/lib.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -626,7 +626,7 @@ package body Lib is\n             Source_File := Get_Source_File_Index (S);\n \n             if Unwind_Instances then\n-               while Template (Source_File) /= No_Source_File loop\n+               while Template (Source_File) > No_Source_File loop\n                   Source_File := Template (Source_File);\n                end loop;\n             end if;"}, {"sha": "813ed1a9730387fbda07c6f796514191cabd4b99", "filename": "gcc/ada/libgnat/s-os_lib.ads", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flibgnat%2Fs-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Flibgnat%2Fs-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-os_lib.ads?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -191,6 +191,9 @@ package System.OS_Lib is\n    Invalid_FD : constant File_Descriptor := -1;\n    --  File descriptor returned when error in opening/creating file\n \n+   Null_FD : constant File_Descriptor := -2;\n+   --  Uninitialized file descriptor\n+\n    procedure Close (FD : File_Descriptor; Status : out Boolean);\n    --  Close file referenced by FD. Status is False if the underlying service\n    --  failed. Reasons for failure include: disk full, disk quotas exceeded"}, {"sha": "781db47d0afc96261e612eb467cd848cebd74f03", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -2565,9 +2565,10 @@ package body Osint is\n       Lo  : Source_Ptr;\n       Hi  : out Source_Ptr;\n       Src : out Source_Buffer_Ptr;\n+      FD  : out File_Descriptor;\n       T   : File_Type := Source)\n    is\n-      Source_File_FD : File_Descriptor;\n+      --  Source_File_FD : File_Descriptor;\n       --  The file descriptor for the current source file. A negative value\n       --  indicates failure to open the specified source file.\n \n@@ -2594,6 +2595,7 @@ package body Osint is\n             Fail (\"Cannot find: \" & Name_Buffer (1 .. Name_Len));\n          end if;\n \n+         FD  := Null_FD;\n          Src := null;\n          Hi  := No_Location;\n          return;\n@@ -2607,9 +2609,9 @@ package body Osint is\n       --  DOS or Unix mode files, and there is no point in wasting time on\n       --  text translation when it is not required.\n \n-      Source_File_FD := Open_Read (Name_Buffer'Address, Binary);\n+      FD := Open_Read (Name_Buffer'Address, Binary);\n \n-      if Source_File_FD = Invalid_FD then\n+      if FD = Invalid_FD then\n          Src := null;\n          Hi  := No_Location;\n          return;\n@@ -2645,7 +2647,7 @@ package body Osint is\n \n       --  Prepare to read data from the file\n \n-      Len := Integer (File_Length (Source_File_FD));\n+      Len := Integer (File_Length (FD));\n \n       --  Set Hi so that length is one more than the physical length,\n       --  allowing for the extra EOF character at the end of the buffer\n@@ -2665,7 +2667,7 @@ package body Osint is\n \n          Hi := Lo;\n          loop\n-            Actual_Len := Read (Source_File_FD, Var_Ptr (Hi)'Address, Len);\n+            Actual_Len := Read (FD, Var_Ptr (Hi)'Address, Len);\n             Hi := Hi + Source_Ptr (Actual_Len);\n             exit when Actual_Len = Len or else Actual_Len <= 0;\n          end loop;\n@@ -2676,7 +2678,7 @@ package body Osint is\n \n       --  Read is complete, get time stamp and close file and we are done\n \n-      Close (Source_File_FD, Status);\n+      Close (FD, Status);\n \n       --  The status should never be False. But, if it is, what can we do?\n       --  So, we don't test it."}, {"sha": "4d6a4a4d8cd5c3b93665487fc1fb6543b00121cc", "filename": "gcc/ada/osint.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fosint.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fosint.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.ads?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -401,6 +401,7 @@ package Osint is\n       Lo  : Source_Ptr;\n       Hi  : out Source_Ptr;\n       Src : out Source_Buffer_Ptr;\n+      FD  : out File_Descriptor;\n       T   : File_Type := Source);\n    --  Allocates a Source_Buffer of appropriate length and then reads the\n    --  entire contents of the source file N into the buffer. The address of"}, {"sha": "7c56130c113ab327a52753fe1325c20179034066", "filename": "gcc/ada/prepcomp.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fprepcomp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fprepcomp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprepcomp.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2003-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2003-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -637,7 +637,7 @@ package body Prepcomp is\n             T           : constant Nat               := Total_Errors_Detected;\n \n          begin\n-            if Deffile = No_Source_File then\n+            if Deffile <= No_Source_File then\n                Fail (\"definition file \"\"\"\n                      & Get_Name_String (N)\n                      & \"\"\" not found\");"}, {"sha": "f8c4cb0ce14f9bb3d07c2026e6f9f7c7b32c4dd1", "filename": "gcc/ada/sinput-d.adb", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fsinput-d.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fsinput-d.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-d.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -23,10 +23,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Debug;   use Debug;\n-with Osint;   use Osint;\n-with Osint.C; use Osint.C;\n-with Output;  use Output;\n+with Debug;         use Debug;\n+with Osint;         use Osint;\n+with Osint.C;       use Osint.C;\n+with Output;        use Output;\n+with System.OS_Lib; use System.OS_Lib;\n \n package body Sinput.D is\n \n@@ -38,6 +39,7 @@ package body Sinput.D is\n    ------------------------\n \n    procedure Close_Debug_Source is\n+      FD   : File_Descriptor;\n       SFR  : Source_File_Record renames Source_File.Table (Dfile);\n       Src  : Source_Buffer_Ptr;\n    begin\n@@ -48,7 +50,7 @@ package body Sinput.D is\n       --  subsequent access.\n \n       Read_Source_File\n-        (SFR.Full_Debug_Name, SFR.Source_First, SFR.Source_Last, Src);\n+        (SFR.Full_Debug_Name, SFR.Source_First, SFR.Source_Last, Src, FD);\n       SFR.Source_Text := Src;\n       pragma Assert (SFR.Source_Text'First = SFR.Source_First);\n       pragma Assert (SFR.Source_Text'Last = SFR.Source_Last);"}, {"sha": "48061238659099c241f8c34db0ad547de3d3354b", "filename": "gcc/ada/sinput-l.adb", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fsinput-l.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fsinput-l.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput-l.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -354,6 +354,7 @@ package body Sinput.L is\n      (N : File_Name_Type;\n       T : Osint.File_Type) return Source_File_Index\n    is\n+      FD  : File_Descriptor;\n       Src : Source_Buffer_Ptr;\n       X   : Source_File_Index;\n       Lo  : Source_Ptr;\n@@ -411,12 +412,16 @@ package body Sinput.L is\n                   Source_Align) * Source_Align;\n       end if;\n \n-      Osint.Read_Source_File (N, Lo, Hi, Src, T);\n+      Osint.Read_Source_File (N, Lo, Hi, Src, FD, T);\n \n       if Null_Source_Buffer_Ptr (Src) then\n          Source_File.Decrement_Last;\n-         return No_Source_File;\n \n+         if FD = Null_FD then\n+            return No_Source_File;\n+         else\n+            return No_Access_To_Source_File;\n+         end if;\n       else\n          if Debug_Flag_L then\n             Write_Eol;"}, {"sha": "0052409b552536c1fefa73fb20183f9cccf7208e", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -3752,7 +3752,7 @@ package body Sprint is\n       --  Ignore if there is no current source file, or we're not in dump\n       --  source text mode, or if in freeze actions.\n \n-      if Current_Source_File /= No_Source_File\n+      if Current_Source_File > No_Source_File\n         and then Dump_Source_Text\n         and then Freeze_Indent = 0\n       then"}, {"sha": "725bb4c2867eb98ac83591ab3cb2de2c123dab1e", "filename": "gcc/ada/targparm.adb", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ftargparm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6/gcc%2Fada%2Ftargparm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftargparm.adb?ref=cd644ae2bc0ce62b88f786ce5a68ad0ba2509ec6", "patch": "@@ -23,10 +23,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Csets;    use Csets;\n+with Csets;         use Csets;\n with Opt;\n-with Osint;    use Osint;\n-with Output;   use Output;\n+with Osint;         use Osint;\n+with Output;        use Output;\n+with System.OS_Lib; use System.OS_Lib;\n \n package body Targparm is\n    use ASCII;\n@@ -156,6 +157,7 @@ package body Targparm is\n       Set_NUA : Set_NUA_Type := null;\n       Set_NUP : Set_NUP_Type := null)\n    is\n+      FD   : File_Descriptor;\n       Text : Source_Buffer_Ptr;\n       Hi   : Source_Ptr;\n \n@@ -167,11 +169,15 @@ package body Targparm is\n       Name_Buffer (1 .. 10) := \"system.ads\";\n       Name_Len := 10;\n \n-      Read_Source_File (Name_Find, Lo => 0, Hi => Hi, Src => Text);\n+      Read_Source_File (Name_Find, 0, Hi, Text, FD);\n \n       if Null_Source_Buffer_Ptr (Text) then\n          Write_Line (\"fatal error, run-time library not installed correctly\");\n-         Write_Line (\"cannot locate file system.ads\");\n+         if FD = Null_FD then\n+            Write_Line (\"cannot locate file system.ads\");\n+         else\n+            Write_Line (\"no read access for file system.ads\");\n+         end if;\n          raise Unrecoverable_Error;\n       end if;\n "}]}