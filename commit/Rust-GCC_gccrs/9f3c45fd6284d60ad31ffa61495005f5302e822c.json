{"sha": "9f3c45fd6284d60ad31ffa61495005f5302e822c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYzYzQ1ZmQ2Mjg0ZDYwYWQzMWZmYTYxNDk1MDA1ZjUzMDJlODIyYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T23:29:21Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-12-07T23:29:21Z"}, "message": "(handle_braces): Rework last change.\n\nFrom-SVN: r13241", "tree": {"sha": "f6eed56d7dbf64b003da78856f478f3125d29f5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6eed56d7dbf64b003da78856f478f3125d29f5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f3c45fd6284d60ad31ffa61495005f5302e822c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3c45fd6284d60ad31ffa61495005f5302e822c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f3c45fd6284d60ad31ffa61495005f5302e822c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f3c45fd6284d60ad31ffa61495005f5302e822c/comments", "author": null, "committer": null, "parents": [{"sha": "00523ef24d46ca62f57821d8b5ff15e1abe57b2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00523ef24d46ca62f57821d8b5ff15e1abe57b2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00523ef24d46ca62f57821d8b5ff15e1abe57b2e"}], "stats": {"total": 23, "additions": 8, "deletions": 15}, "files": [{"sha": "488a29147a56444effdf74b46fe99e4081b160ab", "filename": "gcc/gcc.c", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f3c45fd6284d60ad31ffa61495005f5302e822c/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f3c45fd6284d60ad31ffa61495005f5302e822c/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=9f3c45fd6284d60ad31ffa61495005f5302e822c", "patch": "@@ -362,7 +362,7 @@ or with constant text in a single argument.\n \targuments.  CC considers `-o foo' as being one switch whose\n \tname starts with `o'.  %{o*} would substitute this text,\n \tincluding the space; thus, two arguments would be generated.\n- %{S*^} likewise, but don't put a blank between a switch and any args.\n+ %{^S*} likewise, but don't put a blank between a switch and any args.\n  %{S*:X} substitutes X if one or more switches whose names start with -S are\n \tspecified to CC.  Note that the tail part of the -S option\n \t(i.e. the part matched by the `*') will be substituted for each\n@@ -3749,6 +3749,11 @@ handle_braces (p)\n   int pipe_p = 0;\n   int negate = 0;\n   int suffix = 0;\n+  int include_blanks = 1;\n+\n+  if (*p == '^')\n+    /* A '^' after the open-brace means to not give blanks before args.  */\n+    include_blanks = 0, ++p;\n \n   if (*p == '|')\n     /* A `|' after the open-brace means,\n@@ -3814,19 +3819,7 @@ handle_braces (p)\n       for (i = 0; i < n_switches; i++)\n \tif (!strncmp (switches[i].part1, filter, p - filter)\n \t    && check_live_switch (i, p - filter))\n-\t  give_switch (i, 0, 1);\n-    }\n-  else if (p[-1] == '*' && p[0] == '^' && p[1] == '}')\n-    {\n-      /* Substitute all matching switches as separate args, but don't\n-\t write a blank between the first part and any args, even if they\n-\t were present.  */\n-      register int i;\n-      --p;\n-      for (i = 0; i < n_switches; i++)\n-\tif (!strncmp (switches[i].part1, filter, p - filter)\n-\t    && check_live_switch (i, p - filter))\n-\t  give_switch (i, 0, 0);\n+\t  give_switch (i, 0, include_blanks);\n     }\n   else\n     {\n@@ -3909,7 +3902,7 @@ handle_braces (p)\n \t{\n \t  if (*p == '}')\n \t    {\n-\t      give_switch (i, 0, 1);\n+\t      give_switch (i, 0, include_blanks);\n \t    }\n \t  else\n \t    {"}]}