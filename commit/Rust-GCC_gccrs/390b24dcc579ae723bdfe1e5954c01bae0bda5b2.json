{"sha": "390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkwYjI0ZGNjNTc5YWU3MjNiZGZlMWU1OTU0YzAxYmFlMGJkYTViMg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-01-10T09:14:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-01-10T09:14:51Z"}, "message": "re PR tree-optimization/50913 (ICE in scan_tree_for_params_right_scev, at graphite-sese-to-poly.c:633 compiling libgfortran with -floop-interchange -m32)\n\n2012-01-10  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/50913\n\t* graphite-scop-detection.c (stmt_has_simple_data_refs_p):\n\tRequire data-refs to be representable by Graphite with respect\n\tto any loop nest.\n\n\t* gcc.dg/graphite/interchange-16.c: New testcase.\n\t* gcc.dg/graphite/scop-20.c: XFAIL.\n\t* gfortran.dg/graphite/interchange-1.f: Likewise.\n\t* gfortran.dg/graphite/block-1.f90: Likewise.\n\t* gfortran.dg/graphite/block-2.f: Likewise.\n\nFrom-SVN: r183055", "tree": {"sha": "4e9eb878be42284e75db29e96c58802dd7c87793", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4e9eb878be42284e75db29e96c58802dd7c87793"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f148a434f6a8e22a3db9176cc787aa2fc8aac4c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f148a434f6a8e22a3db9176cc787aa2fc8aac4c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f148a434f6a8e22a3db9176cc787aa2fc8aac4c7"}], "stats": {"total": 78, "additions": 62, "deletions": 16}, "files": [{"sha": "771c337ecf89ada965c79e7a1151e95d9c6ff751", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "patch": "@@ -1,3 +1,10 @@\n+2012-01-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50913\n+\t* graphite-scop-detection.c (stmt_has_simple_data_refs_p):\n+\tRequire data-refs to be representable by Graphite with respect\n+\tto any loop nest.\n+\n 2012-01-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/constraints.md (\"L\"): Return true for 0xffffffff."}, {"sha": "0a3680b1fa1268d4f22ef5738a103ab24e440dc0", "filename": "gcc/graphite-scop-detection.c", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Fgraphite-scop-detection.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Fgraphite-scop-detection.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-scop-detection.c?ref=390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "patch": "@@ -258,25 +258,33 @@ graphite_can_represent_expr (basic_block scop_entry, loop_p loop,\n    Graphite.  */\n \n static bool\n-stmt_has_simple_data_refs_p (loop_p outermost_loop, gimple stmt)\n+stmt_has_simple_data_refs_p (loop_p outermost_loop ATTRIBUTE_UNUSED,\n+\t\t\t     gimple stmt)\n {\n   data_reference_p dr;\n   unsigned i;\n   int j;\n   bool res = true;\n-  VEC (data_reference_p, heap) *drs = VEC_alloc (data_reference_p, heap, 5);\n+  VEC (data_reference_p, heap) *drs = NULL;\n+  loop_p outer;\n \n-  graphite_find_data_references_in_stmt (outermost_loop,\n-\t\t\t\t\t loop_containing_stmt (stmt),\n-\t\t\t\t\t stmt, &drs);\n+  for (outer = loop_containing_stmt (stmt); outer; outer = loop_outer (outer))\n+    {\n+      graphite_find_data_references_in_stmt (outer,\n+\t\t\t\t\t     loop_containing_stmt (stmt),\n+\t\t\t\t\t     stmt, &drs);\n \n-  FOR_EACH_VEC_ELT (data_reference_p, drs, j, dr)\n-    for (i = 0; i < DR_NUM_DIMENSIONS (dr); i++)\n-      if (!graphite_can_represent_scev (DR_ACCESS_FN (dr, i)))\n-\t{\n-\t  res = false;\n-\t  goto done;\n-\t}\n+      FOR_EACH_VEC_ELT (data_reference_p, drs, j, dr)\n+\tfor (i = 0; i < DR_NUM_DIMENSIONS (dr); i++)\n+\t  if (!graphite_can_represent_scev (DR_ACCESS_FN (dr, i)))\n+\t    {\n+\t      res = false;\n+\t      goto done;\n+\t    }\n+\n+      free_data_refs (drs);\n+      drs = NULL;\n+    }\n \n  done:\n   free_data_refs (drs);"}, {"sha": "02e8b55f75881530e9a9276e48bba905f718bb27", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "patch": "@@ -1,3 +1,12 @@\n+2012-01-10  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/50913\n+\t* gcc.dg/graphite/interchange-16.c: New testcase.\n+\t* gcc.dg/graphite/scop-20.c: XFAIL.\n+\t* gfortran.dg/graphite/interchange-1.f: Likewise.\n+\t* gfortran.dg/graphite/block-1.f90: Likewise.\n+\t* gfortran.dg/graphite/block-2.f: Likewise.\n+\n 2012-01-10  Richard Henderson  <rth@redhat.com>\n \n \t* lib/target-supports.exp (check_effective_target_vect_perm,"}, {"sha": "0d07d8118bf484d8bf52285e21f5a43fe258299c", "filename": "gcc/testsuite/gcc.dg/graphite/interchange-16.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Finterchange-16.c?ref=390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "patch": "@@ -0,0 +1,22 @@\n+void spread_i1 (int *rptr, int *sptr, int ncopies, int *extent, int rdelta, int m)\n+{\n+  int *dest;\n+  int n;\n+\n+  while (m--)\n+    {\n+      dest = rptr;\n+      for (n = 0; n < ncopies; n ++)\n+\t{\n+\t  *dest = *sptr;\n+\t  dest += rdelta;\n+\t}\n+      if (extent [n])\n+\tif (n)\n+\t  rptr ++;\n+    }\n+}\n+\n+int main() { return 0; }\n+\n+/* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "f90b1746b4ee8c69401c968a645aa98811c1ed97", "filename": "gcc/testsuite/gcc.dg/graphite/scop-20.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fscop-20.c?ref=390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "patch": "@@ -23,5 +23,5 @@ int toto()\n   return a[3][5] + b[1];\n }\n \n-/* { dg-final { scan-tree-dump-times \"number of SCoPs: 2\" 1 \"graphite\"} } */\n+/* { dg-final { scan-tree-dump-times \"number of SCoPs: 2\" 1 \"graphite\" { xfail *-*-* } } } */\n /* { dg-final { cleanup-tree-dump \"graphite\" } } */"}, {"sha": "115549bb4dc6cd8b7cc4fdbfd6a15d57f9bbf59d", "filename": "gcc/testsuite/gfortran.dg/graphite/block-1.f90", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fblock-1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fblock-1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fblock-1.f90?ref=390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "patch": "@@ -7,7 +7,7 @@ subroutine matrix_multiply(a,b,c,n)\n \n end subroutine matrix_multiply\n \n-! { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\" } }\n+! { dg-final { scan-tree-dump-times \"number of SCoPs: 1\" 1 \"graphite\" { xfail *-*-* } } }\n ! { dg-final { scan-tree-dump-times \"will be loop blocked\" 1 \"graphite\" { xfail *-*-* } } }\n ! { dg-final { cleanup-tree-dump \"graphite\" } }\n "}, {"sha": "047d47897d69be6fd491dd7aadc1195a7196438e", "filename": "gcc/testsuite/gfortran.dg/graphite/block-2.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fblock-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fblock-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fblock-2.f?ref=390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "patch": "@@ -16,6 +16,6 @@ SUBROUTINE MATRIX_MUL_UNROLLED (A, B, C, L, M, N)\n       RETURN\n       END\n \n-! { dg-final { scan-tree-dump-times \"number of SCoPs: 2\" 1 \"graphite\" } }\n+! { dg-final { scan-tree-dump-times \"number of SCoPs: 2\" 1 \"graphite\" { xfail *-*-* } } }\n ! { dg-final { scan-tree-dump-times \"will be loop blocked\" 2 \"graphite\" { xfail *-*-* } } }\n ! { dg-final { cleanup-tree-dump \"graphite\" } }"}, {"sha": "334fbd8246a75802a9bf37e3f47c1b4a302d1d2d", "filename": "gcc/testsuite/gfortran.dg/graphite/interchange-1.f", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-1.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/390b24dcc579ae723bdfe1e5954c01bae0bda5b2/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-1.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Finterchange-1.f?ref=390b24dcc579ae723bdfe1e5954c01bae0bda5b2", "patch": "@@ -41,5 +41,5 @@ subroutine foo(f1,f2,f3,f4,f5,f6,f7,f8,f9,f0,g1,g2,g3)\n ! known to be 4 in the inner two loops.  See interchange-2.f for the\n ! kernel from bwaves.\n \n-! { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" } }\n+! { dg-final { scan-tree-dump-times \"will be interchanged\" 1 \"graphite\" { xfail *-*-* } } }\n ! { dg-final { cleanup-tree-dump \"graphite\" } }"}]}