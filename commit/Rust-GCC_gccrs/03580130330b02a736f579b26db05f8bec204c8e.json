{"sha": "03580130330b02a736f579b26db05f8bec204c8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM1ODAxMzAzMzBiMDJhNzM2ZjU3OWIyNmRiMDVmOGJlYzIwNGM4ZQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2013-03-26T14:51:56Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-03-26T14:51:56Z"}, "message": "re PR fortran/56649 (ICE gfc_conv_structure with MERGE)\n\n2013-03-26  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/56649\n        * simplify.c (gfc_simplify_merge): Simplify more.\n\n2013-03-26  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/56649\n        * gfortran.dg/merge_init_expr_2.f90: New.\n        * gfortran.dg/merge_char_1.f90: Modify test to\n        stay a run-time test.\n        * gfortran.dg/merge_char_3.f90: Ditto.\n\nFrom-SVN: r197109", "tree": {"sha": "a12a62d2bce2b18dae2fe81e0c3e3d6fd692d0c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a12a62d2bce2b18dae2fe81e0c3e3d6fd692d0c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/03580130330b02a736f579b26db05f8bec204c8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03580130330b02a736f579b26db05f8bec204c8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03580130330b02a736f579b26db05f8bec204c8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03580130330b02a736f579b26db05f8bec204c8e/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "795175513e9978d3141e8729da8dbff875e2d46c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/795175513e9978d3141e8729da8dbff875e2d46c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/795175513e9978d3141e8729da8dbff875e2d46c"}], "stats": {"total": 124, "additions": 119, "deletions": 5}, "files": [{"sha": "e11523cfad67389c20fb6a273c1637dd20690a01", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=03580130330b02a736f579b26db05f8bec204c8e", "patch": "@@ -1,3 +1,8 @@\n+2013-03-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56649\n+\t* simplify.c (gfc_simplify_merge): Simplify more.\n+\n 2013-03-25  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/38536"}, {"sha": "dc5dad294aab88c5d56833d25a95bb927693c6d9", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=03580130330b02a736f579b26db05f8bec204c8e", "patch": "@@ -3976,12 +3976,47 @@ gfc_simplify_maskl (gfc_expr *i, gfc_expr *kind_arg)\n gfc_expr *\n gfc_simplify_merge (gfc_expr *tsource, gfc_expr *fsource, gfc_expr *mask)\n {\n-  if (tsource->expr_type != EXPR_CONSTANT\n-      || fsource->expr_type != EXPR_CONSTANT\n-      || mask->expr_type != EXPR_CONSTANT)\n+  gfc_expr * result;\n+  gfc_constructor *tsource_ctor, *fsource_ctor, *mask_ctor;\n+\n+  if (mask->expr_type == EXPR_CONSTANT)\n+    return gfc_get_parentheses (gfc_copy_expr (mask->value.logical\n+\t\t\t\t\t       ? tsource : fsource));\n+\n+  if (!mask->rank || !is_constant_array_expr (mask)\n+      || !is_constant_array_expr (tsource) || !is_constant_array_expr (fsource))\n     return NULL;\n \n-  return gfc_copy_expr (mask->value.logical ? tsource : fsource);\n+  result = gfc_get_array_expr (tsource->ts.type, tsource->ts.kind,\n+\t\t\t       &tsource->where);\n+  if (tsource->ts.type == BT_DERIVED)\n+    result->ts.u.derived = tsource->ts.u.derived;\n+  else if (tsource->ts.type == BT_CHARACTER)\n+    result->ts.u.cl = tsource->ts.u.cl;\n+\n+  tsource_ctor = gfc_constructor_first (tsource->value.constructor);\n+  fsource_ctor = gfc_constructor_first (fsource->value.constructor);\n+  mask_ctor = gfc_constructor_first (mask->value.constructor);\n+\n+  while (mask_ctor)\n+    {\n+      if (mask_ctor->expr->value.logical)\n+\tgfc_constructor_append_expr (&result->value.constructor,\n+\t\t\t\t     gfc_copy_expr (tsource_ctor->expr),\n+\t\t\t\t     NULL);\n+      else\n+\tgfc_constructor_append_expr (&result->value.constructor,\n+\t\t\t\t     gfc_copy_expr (fsource_ctor->expr),\n+\t\t\t\t     NULL);\n+      tsource_ctor = gfc_constructor_next (tsource_ctor);\n+      fsource_ctor = gfc_constructor_next (fsource_ctor);\n+      mask_ctor = gfc_constructor_next (mask_ctor);\n+    }\n+\n+  result->shape = gfc_get_shape (1);\n+  gfc_array_size (result, &result->shape[0]);\n+\n+  return result;\n }\n \n "}, {"sha": "c1117941e631fd403191c928b2b30f9e11de0e57", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=03580130330b02a736f579b26db05f8bec204c8e", "patch": "@@ -1,3 +1,11 @@\n+2013-03-26  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/56649\n+\t* gfortran.dg/merge_init_expr_2.f90: New.\n+\t* gfortran.dg/merge_char_1.f90: Modify test to\n+\tstay a run-time test.\n+\t* gfortran.dg/merge_char_3.f90: Ditto.\n+\n 2013-03-26  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* g++.dg/cpp0x/constexpr-friend-2.C: New."}, {"sha": "ece939eea06d36ac5bc8481665c260d8c9e5bc71", "filename": "gcc/testsuite/gfortran.dg/merge_char_1.f90", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_1.f90?ref=03580130330b02a736f579b26db05f8bec204c8e", "patch": "@@ -4,6 +4,13 @@\n ! PR 15327\n ! The merge intrinsic didn't work for strings\n character*2 :: c(2)\n+logical :: ll(2)\n+\n+ll = (/ .TRUE., .FALSE. /)\n+c = merge( (/ \"AA\", \"BB\" /), (/ \"CC\", \"DD\" /), ll )\n+if (c(1).ne.\"AA\" .or. c(2).ne.\"DD\") call abort ()\n+\n+c = \"\"\n c = merge( (/ \"AA\", \"BB\" /), (/ \"CC\", \"DD\" /), (/ .TRUE., .FALSE. /) )\n if (c(1).ne.\"AA\" .or. c(2).ne.\"DD\") call abort ()\n end"}, {"sha": "114214136e21b50d12952057581adc9e1a1797af", "filename": "gcc/testsuite/gfortran.dg/merge_char_3.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_3.f90?ref=03580130330b02a736f579b26db05f8bec204c8e", "patch": "@@ -12,7 +12,8 @@ subroutine foo(a)\n implicit none\n character(len=*) :: a\n character(len=3) :: b\n-print *, merge(a,b,.true.)  ! Unequal character lengths\n+logical :: ll = .true.\n+print *, merge(a,b,ll)  ! Unequal character lengths\n end subroutine foo\n \n call foo(\"ab\")"}, {"sha": "9b20310caf583c5f92dbbadbfec60fd632327414", "filename": "gcc/testsuite/gfortran.dg/merge_init_expr_2.f90", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_init_expr_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/03580130330b02a736f579b26db05f8bec204c8e/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_init_expr_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_init_expr_2.f90?ref=03580130330b02a736f579b26db05f8bec204c8e", "patch": "@@ -0,0 +1,58 @@\n+! { dg-do compile }\n+! { dg-options \"-fdump-tree-original\" }\n+!\n+! PR fortran/56649\n+! MERGE was not properly compile-time simplified\n+!\n+! Contributed by Bill Long\n+!\n+module m\n+  implicit none\n+\n+  integer, parameter :: int32 = 4\n+  type MPI_Datatype\n+    integer :: i\n+  end type MPI_Datatype\n+\n+  integer,private,parameter :: dik = kind(0)\n+  type(MPI_Datatype),parameter,private :: MPIx_I4 = MPI_Datatype( 1275069467)\n+  type(MPI_Datatype),parameter,private :: MPIx_I8 = MPI_Datatype( 1275070491)\n+  type(MPI_Datatype),parameter :: MPI_INTEGER = merge(MPIx_I4, MPIx_I8, &\n+                                                      dik==int32)\n+contains\n+  subroutine foo\n+    integer :: check1\n+    check1 = MPI_INTEGER%i\n+  end subroutine foo\n+end module m\n+\n+module m2\n+  implicit none\n+  integer, parameter :: int32 = 4\n+  type MPI_Datatype\n+    integer :: i\n+  end type MPI_Datatype\n+\n+  integer,private,parameter :: dik = kind(0)\n+  type(MPI_Datatype),parameter,private :: MPIx_I4 = MPI_Datatype( 1275069467)\n+  type(MPI_Datatype),parameter,private :: MPIx_I8 = MPI_Datatype( 1275070491)\n+  type(MPI_Datatype),parameter :: MPI_INTEGER(1) = merge([MPIx_I4], [MPIx_I8], &\n+                                                      [dik==int32])\n+contains\n+  subroutine foo\n+    logical :: check2\n+    check2 = MPI_INTEGER(1)%i == 1275069467\n+  end subroutine foo\n+end module m2\n+\n+\n+subroutine test\n+  character(len=3) :: one, two, three\n+  logical, parameter :: true = .true.\n+  three = merge (one, two, true)\n+end subroutine test\n+\n+! { dg-final { scan-tree-dump-times \"check1 = 1275069467;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"check2 = 1;\" 1 \"original\" } }\n+! { dg-final { scan-tree-dump-times \"__builtin_memmove ..void .. &three, .void .. &one, 3.;\" 1 \"original\" } }\n+! { dg-final { cleanup-tree-dump \"original\" } }"}]}