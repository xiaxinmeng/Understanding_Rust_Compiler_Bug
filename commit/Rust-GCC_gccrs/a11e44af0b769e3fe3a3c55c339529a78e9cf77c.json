{"sha": "a11e44af0b769e3fe3a3c55c339529a78e9cf77c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTExZTQ0YWYwYjc2OWUzZmUzYTNjNTVjMzM5NTI5YTc4ZTljZjc3Yw==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-08-26T21:57:10Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1993-08-26T21:57:10Z"}, "message": "Initial revision\n\nFrom-SVN: r5216", "tree": {"sha": "3b5d65a0c93081a7425822a6d0df4b8a33c15ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b5d65a0c93081a7425822a6d0df4b8a33c15ecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a11e44af0b769e3fe3a3c55c339529a78e9cf77c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a11e44af0b769e3fe3a3c55c339529a78e9cf77c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a11e44af0b769e3fe3a3c55c339529a78e9cf77c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a11e44af0b769e3fe3a3c55c339529a78e9cf77c/comments", "author": null, "committer": null, "parents": [{"sha": "0b2c1648095d9f3a79ca2d3f04ca24c7e0501937", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b2c1648095d9f3a79ca2d3f04ca24c7e0501937", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b2c1648095d9f3a79ca2d3f04ca24c7e0501937"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "38dd491fc4527238ca911bd33dceea3dd487e425", "filename": "gcc/ginclude/va-h8300.h", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a11e44af0b769e3fe3a3c55c339529a78e9cf77c/gcc%2Fginclude%2Fva-h8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a11e44af0b769e3fe3a3c55c339529a78e9cf77c/gcc%2Fginclude%2Fva-h8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-h8300.h?ref=a11e44af0b769e3fe3a3c55c339529a78e9cf77c", "patch": "@@ -0,0 +1,52 @@\n+/* stdarg/vararg support for the Hitachi h8/300 and h8/300h */\n+\n+/* Define __gnuc_va_list. */\n+\n+#ifndef __GNUC_VA_LIST\n+#define __GNUC_VA_LIST\n+typedef void *__gnuc_va_list;\n+#endif\n+\n+/* If this is for internal libc use, don't define anything but\n+   __gnuc_va_list.  */\n+#if defined (_STDARG_H) || defined (_VARARGS_H)\n+\n+/* In GCC version 2, we want an ellipsis at the end of the declaration\n+   of the argument list.  GCC version 1 can't parse it.  */\n+\n+#if __GNUC__ > 1\n+#define __va_ellipsis ...\n+#else\n+#define __va_ellipsis\n+#endif\n+\n+#ifdef __h8300__\n+#define __va_rounded_size(TYPE)  \\\n+  (((sizeof (TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n+#else\n+#define __va_rounded_size(TYPE)  \\\n+  (((sizeof (TYPE) + sizeof (long) - 1) / sizeof (long)) * sizeof (long))\n+#endif\n+\n+#ifdef _STDARG_H\n+\n+#define va_start(AP,LASTARG) (AP = ((__gnuc_va_list) __builtin_next_arg ()))\n+\n+#else /* _VARARGS_H */\n+\n+#define va_alist  __builtin_va_alist\n+/* The ... causes current_function_varargs to be set in cc1.  */\n+#define va_dcl    int __builtin_va_alist; __va_ellipsis\n+#define va_start(AP)  AP = (void *) &__builtin_va_alist\n+\n+#endif /* _VARARGS_H */\n+\n+#define va_arg(AP, TYPE)\t\t\t\t\t\t\\\n+ (AP = (__gnuc_va_list) ((char *) (AP) + __va_rounded_size (TYPE)),\t\\\n+  *((TYPE *) (void *) ((char *) (AP) - ((sizeof (TYPE) < 4\t\t\\\n+\t\t\t\t\t ? sizeof (TYPE)\t\t\\\n+\t\t\t\t\t : __va_rounded_size (TYPE))))))\n+\n+#define va_end(AP)\n+\n+#endif /* defined (_STDARG_H) || defined (_VARARGS_H) */"}]}