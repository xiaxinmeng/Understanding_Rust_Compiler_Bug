{"sha": "6f83861cc1c4d09425aa6539877bfa50ef90f183", "node_id": "C_kwDOANBUbNoAKDZmODM4NjFjYzFjNGQwOTQyNWFhNjUzOTg3N2JmYTUwZWY5MGYxODM", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-16T13:24:01Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2022-11-16T13:25:28Z"}, "message": "gcn: Add __builtin_gcn_kernarg_ptr\n\nAdd __builtin_gcn_kernarg_ptr to avoid using hard-coded register values\nand permit future ABI changes while keeping the API.\n\ngcc/ChangeLog:\n\n\t* config/gcn/gcn-builtins.def (KERNARG_PTR): Add.\n\t* config/gcn/gcn.cc (gcn_init_builtin_types): Change siptr_type_node,\n\tsfptr_type_node and voidptr_type_node from FLAT to ADDR_SPACE_DEFAULT.\n\t(gcn_expand_builtin_1): Handle GCN_BUILTIN_KERNARG_PTR.\n\t(gcn_oacc_dim_size): Return in ADDR_SPACE_FLAT.\n\nlibgomp/ChangeLog:\n\n\t* config/gcn/team.c (gomp_gcn_enter_kernel): Use\n\t__builtin_gcn_kernarg_ptr instead of asm (\"s8\").\n\nCo-Authored-By: Andrew Stubbs <ams@codesourcery.com>", "tree": {"sha": "bc48fe578030835e3ccd38d6def7b421d4757fbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc48fe578030835e3ccd38d6def7b421d4757fbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f83861cc1c4d09425aa6539877bfa50ef90f183", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f83861cc1c4d09425aa6539877bfa50ef90f183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f83861cc1c4d09425aa6539877bfa50ef90f183", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f83861cc1c4d09425aa6539877bfa50ef90f183/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21501ec751c102ce06ff3483375eb922c5c9cee3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/21501ec751c102ce06ff3483375eb922c5c9cee3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/21501ec751c102ce06ff3483375eb922c5c9cee3"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "eeeaebf9013256afaf8c17b56efc6eaab0edbf61", "filename": "gcc/config/gcn/gcn-builtins.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f83861cc1c4d09425aa6539877bfa50ef90f183/gcc%2Fconfig%2Fgcn%2Fgcn-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f83861cc1c4d09425aa6539877bfa50ef90f183/gcc%2Fconfig%2Fgcn%2Fgcn-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn-builtins.def?ref=6f83861cc1c4d09425aa6539877bfa50ef90f183", "patch": "@@ -158,6 +158,10 @@ DEF_BUILTIN (ACC_SINGLE_COPY_END, -1, \"single_copy_end\", B_INSN,\n DEF_BUILTIN (ACC_BARRIER, -1, \"acc_barrier\", B_INSN, _A1 (GCN_BTI_VOID),\n \t     gcn_expand_builtin_1)\n \n+/* Kernel inputs.  */\n+\n+DEF_BUILTIN (KERNARG_PTR, -1, \"kernarg_ptr\", B_INSN, _A1 (GCN_BTI_VOIDPTR),\n+\t     gcn_expand_builtin_1)\n \n #undef _A1\n #undef _A2"}, {"sha": "b3814c2e7c6d868bfb9834d656a04408c38df8b4", "filename": "gcc/config/gcn/gcn.cc", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f83861cc1c4d09425aa6539877bfa50ef90f183/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f83861cc1c4d09425aa6539877bfa50ef90f183/gcc%2Fconfig%2Fgcn%2Fgcn.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fgcn%2Fgcn.cc?ref=6f83861cc1c4d09425aa6539877bfa50ef90f183", "patch": "@@ -4058,15 +4058,15 @@ gcn_init_builtin_types (void)\n \t\t\t\t\t  (integer_type_node) */\n \t\t\t\t\t, 64);\n   tree tmp = build_distinct_type_copy (intSI_type_node);\n-  TYPE_ADDR_SPACE (tmp) = ADDR_SPACE_FLAT;\n+  TYPE_ADDR_SPACE (tmp) = ADDR_SPACE_DEFAULT;\n   siptr_type_node = build_pointer_type (tmp);\n \n   tmp = build_distinct_type_copy (float_type_node);\n-  TYPE_ADDR_SPACE (tmp) = ADDR_SPACE_FLAT;\n+  TYPE_ADDR_SPACE (tmp) = ADDR_SPACE_DEFAULT;\n   sfptr_type_node = build_pointer_type (tmp);\n \n   tmp = build_distinct_type_copy (void_type_node);\n-  TYPE_ADDR_SPACE (tmp) = ADDR_SPACE_FLAT;\n+  TYPE_ADDR_SPACE (tmp) = ADDR_SPACE_DEFAULT;\n   voidptr_type_node = build_pointer_type (tmp);\n \n   tmp = build_distinct_type_copy (void_type_node);\n@@ -4493,6 +4493,20 @@ gcn_expand_builtin_1 (tree exp, rtx target, rtx /*subtarget */ ,\n       emit_insn (gen_gcn_wavefront_barrier ());\n       return target;\n \n+    case GCN_BUILTIN_KERNARG_PTR:\n+      {\n+\trtx ptr;\n+\tif (cfun->machine->args.reg[KERNARG_SEGMENT_PTR_ARG] >= 0)\n+\t   ptr = gen_rtx_REG (DImode,\n+\t\t\t      cfun->machine->args.reg[KERNARG_SEGMENT_PTR_ARG]);\n+\telse\n+\t  {\n+\t    ptr = gen_reg_rtx (DImode);\n+\t    emit_move_insn (ptr, const0_rtx);\n+\t  }\n+\treturn ptr;\n+      }\n+\n     default:\n       gcc_unreachable ();\n     }\n@@ -5700,7 +5714,9 @@ gcn_oacc_dim_size (int dim)\n \t\t\t\t\tcfun->machine->args.\n \t\t\t\t\treg[DISPATCH_PTR_ARG]),\n \t\t\t   GEN_INT (offset[dim]));\n-  return gen_rtx_MEM (SImode, addr);\n+  rtx mem = gen_rtx_MEM (SImode, addr);\n+  set_mem_addr_space (mem, ADDR_SPACE_SCALAR_FLAT);\n+  return mem;\n }\n \n /* Helper function for oacc_dim_pos instruction."}, {"sha": "4fc7b62a0989587a0f13389ccc56cdf82df39d03", "filename": "libgomp/config/gcn/team.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f83861cc1c4d09425aa6539877bfa50ef90f183/libgomp%2Fconfig%2Fgcn%2Fteam.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f83861cc1c4d09425aa6539877bfa50ef90f183/libgomp%2Fconfig%2Fgcn%2Fteam.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fgcn%2Fteam.c?ref=6f83861cc1c4d09425aa6539877bfa50ef90f183", "patch": "@@ -60,7 +60,7 @@ gomp_gcn_enter_kernel (void)\n       /* Initialize the team arena for optimized memory allocation.\n          The arena has been allocated on the host side, and the address\n          passed in via the kernargs.  Each team takes a small slice of it.  */\n-      register void **kernargs asm(\"s8\");\n+      void **kernargs = (void**) __builtin_gcn_kernarg_ptr ();\n       void *team_arena = (kernargs[4] + TEAM_ARENA_SIZE*teamid);\n       void * __lds *arena_start = (void * __lds *)TEAM_ARENA_START;\n       void * __lds *arena_free = (void * __lds *)TEAM_ARENA_FREE;"}]}