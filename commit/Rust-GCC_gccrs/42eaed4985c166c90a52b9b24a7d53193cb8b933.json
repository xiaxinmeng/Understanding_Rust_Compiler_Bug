{"sha": "42eaed4985c166c90a52b9b24a7d53193cb8b933", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJlYWVkNDk4NWMxNjZjOTBhNTJiOWIyNGE3ZDUzMTkzY2I4YjkzMw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-07-25T16:45:34Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-07-25T16:45:34Z"}, "message": "cp-tree.h (enum tsubst_flags_t): Add tf_user.\n\n\t* cp-tree.h (enum tsubst_flags_t): Add tf_user.\n\t* decl.c (make_typename_type): Pass it.\n\t* pt.c (lookup_template_class): Use it.\n\t(resolve_typename_type): Pass it.\n\t* semantics.c (finish_template_type): Pass it.\n\nFrom-SVN: r69793", "tree": {"sha": "5ce31364e9c54f69c348f58b432c5b909c19ff2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ce31364e9c54f69c348f58b432c5b909c19ff2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42eaed4985c166c90a52b9b24a7d53193cb8b933", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42eaed4985c166c90a52b9b24a7d53193cb8b933", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42eaed4985c166c90a52b9b24a7d53193cb8b933", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42eaed4985c166c90a52b9b24a7d53193cb8b933/comments", "author": null, "committer": null, "parents": [{"sha": "e884d397fb6d47de6cca73cd3d7d034a3847dd9d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e884d397fb6d47de6cca73cd3d7d034a3847dd9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e884d397fb6d47de6cca73cd3d7d034a3847dd9d"}], "stats": {"total": 39, "additions": 26, "deletions": 13}, "files": [{"sha": "e163f2360edda9d0eea524d4ec16dfe1dc1e4ae6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=42eaed4985c166c90a52b9b24a7d53193cb8b933", "patch": "@@ -1,3 +1,11 @@\n+2003-07-25  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* cp-tree.h (enum tsubst_flags_t): Add tf_user.\n+\t* decl.c (make_typename_type): Pass it.\n+\t* pt.c (lookup_template_class): Use it.\n+\t(resolve_typename_type): Pass it.\n+\t* semantics.c (finish_template_type): Pass it.\n+\n 2003-07-25  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/11617"}, {"sha": "eb7933687c85839988204f6761d6d8baf8a2a263", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=42eaed4985c166c90a52b9b24a7d53193cb8b933", "patch": "@@ -3054,8 +3054,10 @@ typedef enum tsubst_flags_t {\n   tf_ignore_bad_quals = 1 << 2, /* ignore bad cvr qualifiers */\n   tf_keep_type_decl = 1 << 3,\t/* retain typedef type decls\n \t\t\t\t   (make_typename_type use) */\n-  tf_ptrmem_ok = 1 << 4      /* pointers to member ok (internal\n-\t\t\t\tinstantiate_type use) */\n+  tf_ptrmem_ok = 1 << 4,        /* pointers to member ok (internal\n+\t\t\t\t   instantiate_type use) */\n+  tf_user = 1 << 5\t\t/* Found template must be a user template\n+\t\t\t\t   (lookup_template_class use) */\n } tsubst_flags_t;\n \n /* The kind of checking we can do looking in a class hierarchy.  */"}, {"sha": "27cb784913ac871bc040eafea16cd24f24ebcf80", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=42eaed4985c166c90a52b9b24a7d53193cb8b933", "patch": "@@ -5523,7 +5523,7 @@ make_typename_type (tree context, tree name, tsubst_flags_t complain)\n \t\t\t\t\tTREE_OPERAND (fullname, 1),\n \t\t\t\t\tNULL_TREE, context,\n \t\t\t\t\t/*entering_scope=*/0,\n-\t                                tf_error | tf_warning);\n+\t                                tf_error | tf_warning | tf_user);\n \t}\n       else\n \t{"}, {"sha": "66703723178712220d222ece30d76bf20db60f63", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=42eaed4985c166c90a52b9b24a7d53193cb8b933", "patch": "@@ -3957,8 +3957,11 @@ lookup_template_class (tree d1,\n {\n   tree template = NULL_TREE, parmlist;\n   tree t;\n-\n+  \n   timevar_push (TV_NAME_LOOKUP);\n+  my_friendly_assert ((!arglist || TREE_CODE (arglist) == TREE_LIST)\n+\t\t      == ((complain & tf_user) != 0), 20030724);\n+  \n   if (TREE_CODE (d1) == IDENTIFIER_NODE)\n     {\n       if (IDENTIFIER_VALUE (d1) \n@@ -4018,11 +4021,10 @@ lookup_template_class (tree d1,\n     }\n \n   if (TREE_CODE (template) != TEMPLATE_DECL\n-         /* If we're called from the parser, make sure it's a user visible\n-            template.  */\n-      || ((!arglist || TREE_CODE (arglist) == TREE_LIST)\n-          && !DECL_TEMPLATE_PARM_P (template)\n-          && !PRIMARY_TEMPLATE_P (template)))\n+         /* Make sure it's a user visible template, if it was named by\n+\t    the user.  */\n+      || ((complain & tf_user) && !DECL_TEMPLATE_PARM_P (template)\n+\t  && !PRIMARY_TEMPLATE_P (template)))\n     {\n       if (complain & tf_error)\n         {\n@@ -4033,6 +4035,8 @@ lookup_template_class (tree d1,\n       POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, error_mark_node);\n     }\n \n+  complain &= ~tf_user;\n+  \n   if (DECL_TEMPLATE_TEMPLATE_PARM_P (template))\n     {\n       /* Create a new TEMPLATE_DECL and TEMPLATE_TEMPLATE_PARM node to store\n@@ -11795,8 +11799,7 @@ resolve_typename_type (tree type, bool only_current_p)\n       args = TREE_OPERAND (TYPENAME_TYPE_FULLNAME (type), 1);\n       /* Instantiate the template.  */\n       type = lookup_template_class (tmpl, args, NULL_TREE, NULL_TREE,\n-\t\t\t\t    /*entering_scope=*/0, \n-\t\t\t\t    tf_error);\n+\t\t\t\t    /*entering_scope=*/0, tf_error | tf_user);\n     }\n   else\n     type = error_mark_node;"}, {"sha": "da34da293336c57d53c49b016fd59275313ddb17", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42eaed4985c166c90a52b9b24a7d53193cb8b933/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=42eaed4985c166c90a52b9b24a7d53193cb8b933", "patch": "@@ -2183,8 +2183,8 @@ finish_template_type (tree name, tree args, int entering_scope)\n   tree decl;\n \n   decl = lookup_template_class (name, args,\n-\t\t\t\tNULL_TREE, NULL_TREE,\n-\t                        entering_scope, /*complain=*/1);\n+\t\t\t\tNULL_TREE, NULL_TREE, entering_scope,\n+\t\t\t\ttf_error | tf_warning | tf_user);\n   if (decl != error_mark_node)\n     decl = TYPE_STUB_DECL (decl);\n "}]}