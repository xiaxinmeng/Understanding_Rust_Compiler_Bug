{"sha": "88b34661f73e9da8032d20a37299223b39db4ef9", "node_id": "C_kwDOANBUbNoAKDg4YjM0NjYxZjczZTlkYTgwMzJkMjBhMzcyOTkyMjNiMzlkYjRlZjk", "commit": {"author": {"name": "Arsen Arsenovi\u0107", "email": "arsen@aarsen.me", "date": "2022-10-12T19:47:35Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-10-21T09:41:12Z"}, "message": "libstdc++: respect with-{headers, newlib} for default hosted value\n\nThis saves us a build flag when building for freestanding targets.\n\nlibstdc++-v3/ChangeLog:\n\n\t* acinclude.m4: Default hosted to off if building without\n\theaders and without newlib.\n\t* configure: Regenerate.", "tree": {"sha": "98c187d655576e68a21d2268c90e738e7863ef6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98c187d655576e68a21d2268c90e738e7863ef6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88b34661f73e9da8032d20a37299223b39db4ef9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b34661f73e9da8032d20a37299223b39db4ef9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b34661f73e9da8032d20a37299223b39db4ef9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b34661f73e9da8032d20a37299223b39db4ef9/comments", "author": {"login": "ArsenArsen", "id": 7805050, "node_id": "MDQ6VXNlcjc4MDUwNTA=", "avatar_url": "https://avatars.githubusercontent.com/u/7805050?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArsenArsen", "html_url": "https://github.com/ArsenArsen", "followers_url": "https://api.github.com/users/ArsenArsen/followers", "following_url": "https://api.github.com/users/ArsenArsen/following{/other_user}", "gists_url": "https://api.github.com/users/ArsenArsen/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArsenArsen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArsenArsen/subscriptions", "organizations_url": "https://api.github.com/users/ArsenArsen/orgs", "repos_url": "https://api.github.com/users/ArsenArsen/repos", "events_url": "https://api.github.com/users/ArsenArsen/events{/privacy}", "received_events_url": "https://api.github.com/users/ArsenArsen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33de0ffcf050e581eb931eb4f1c5ad9c0cdc6bf6"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "6f672924a73a28cec26950235affae1bdf526ec4", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b34661f73e9da8032d20a37299223b39db4ef9/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b34661f73e9da8032d20a37299223b39db4ef9/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=88b34661f73e9da8032d20a37299223b39db4ef9", "patch": "@@ -2982,7 +2982,10 @@ AC_DEFUN([GLIBCXX_ENABLE_HOSTED], [\n \t    enable_hosted_libstdcxx=no\n \t    ;;\n \t*)\n-\t    enable_hosted_libstdcxx=yes\n+\t    case \"${with_newlib}-${with_headers}\" in\n+\t    no-no) enable_hosted_libstdcxx=no ;;\n+\t    *) enable_hosted_libstdcxx=yes ;;\n+\t    esac\n \t    ;;\n      esac])\n "}, {"sha": "9159ffb766b68bd2cd10378bb07b15fb0a3f6c2a", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b34661f73e9da8032d20a37299223b39db4ef9/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b34661f73e9da8032d20a37299223b39db4ef9/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=88b34661f73e9da8032d20a37299223b39db4ef9", "patch": "@@ -15698,7 +15698,10 @@ else\n \t    enable_hosted_libstdcxx=no\n \t    ;;\n \t*)\n-\t    enable_hosted_libstdcxx=yes\n+\t    case \"${with_newlib}-${with_headers}\" in\n+\t    no-no) enable_hosted_libstdcxx=no ;;\n+\t    *) enable_hosted_libstdcxx=yes ;;\n+\t    esac\n \t    ;;\n      esac\n fi\n@@ -16063,7 +16066,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16066 \"configure\"\n+#line 16069 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -16098,7 +16101,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16101 \"configure\"\n+#line 16104 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -16133,7 +16136,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16136 \"configure\"\n+#line 16139 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -16169,7 +16172,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 16172 \"configure\"\n+#line 16175 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -16325,7 +16328,7 @@ $as_echo \"mutex\" >&6; }\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 16328 \"configure\"\n+#line 16331 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -16367,7 +16370,7 @@ ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n   # unnecessary for this test.\n \n   cat > conftest.$ac_ext << EOF\n-#line 16370 \"configure\"\n+#line 16373 \"configure\"\n template<typename T1, typename T2>\n   struct same\n   { typedef T2 type; };"}]}