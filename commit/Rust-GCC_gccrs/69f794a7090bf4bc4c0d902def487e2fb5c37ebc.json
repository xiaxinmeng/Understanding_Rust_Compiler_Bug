{"sha": "69f794a7090bf4bc4c0d902def487e2fb5c37ebc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlmNzk0YTcwOTBiZjRiYzRjMGQ5MDJkZWY0ODdlMmZiNWMzN2ViYw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2003-01-07T01:38:24Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2003-01-07T01:38:24Z"}, "message": "pt.c (retrieve_local_specialization): Revert 2003-01-05 change.\n\n\t* pt.c (retrieve_local_specialization): Revert 2003-01-05 change.\n\t(hash_local_specialization): New function.\n\t(register_local_specialization): Revert 2003-01-05 change.\n\t(instantiate_decl): Use hash_local_specialization when creating\n\tthe local_specializations table.\n\nFrom-SVN: r60971", "tree": {"sha": "3f0fe00cae4569db3f7052e31734efcc4d4f4cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f0fe00cae4569db3f7052e31734efcc4d4f4cf7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69f794a7090bf4bc4c0d902def487e2fb5c37ebc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f794a7090bf4bc4c0d902def487e2fb5c37ebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69f794a7090bf4bc4c0d902def487e2fb5c37ebc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69f794a7090bf4bc4c0d902def487e2fb5c37ebc/comments", "author": null, "committer": null, "parents": [{"sha": "86143814f63be748d5e79c04a2599041c42a32c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86143814f63be748d5e79c04a2599041c42a32c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86143814f63be748d5e79c04a2599041c42a32c8"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "6e5e223d9050115fd5acda1f5d37413fb8dbe927", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69f794a7090bf4bc4c0d902def487e2fb5c37ebc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69f794a7090bf4bc4c0d902def487e2fb5c37ebc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=69f794a7090bf4bc4c0d902def487e2fb5c37ebc", "patch": "@@ -1,5 +1,11 @@\n 2003-01-06  Mark Mitchell  <mark@codesourcery.com>\n \n+\t* pt.c (retrieve_local_specialization): Revert 2003-01-05 change.\n+\t(hash_local_specialization): New function.\n+\t(register_local_specialization): Revert 2003-01-05 change.\n+\t(instantiate_decl): Use hash_local_specialization when creating\n+\tthe local_specializations table.\n+\t\n \t* decl2.c (mark_used): Do not synthesize thunks.\n \n \t* class.c (layout_class_type): Correct handling of unnamed"}, {"sha": "f7a9114d7a81d450c48b28b955aa39bfce37ce57", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69f794a7090bf4bc4c0d902def487e2fb5c37ebc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69f794a7090bf4bc4c0d902def487e2fb5c37ebc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=69f794a7090bf4bc4c0d902def487e2fb5c37ebc", "patch": "@@ -745,7 +745,9 @@ static tree\n retrieve_local_specialization (tmpl)\n      tree tmpl;\n {\n-  tree spec = (tree) htab_find (local_specializations, tmpl);\n+  tree spec = \n+    (tree) htab_find_with_hash (local_specializations, tmpl,\n+\t\t\t\thtab_hash_pointer (tmpl));\n   return spec ? TREE_PURPOSE (spec) : NULL_TREE;\n }\n \n@@ -922,6 +924,14 @@ eq_local_specializations (const void *p1, const void *p2)\n   return TREE_VALUE ((tree) p1) == (tree) p2;\n }\n \n+/* Hash P1, an entry in the local specializations table.  */\n+\n+static hashval_t\n+hash_local_specialization (const void* p1)\n+{\n+  return htab_hash_pointer (TREE_VALUE ((tree) p1));\n+}\n+\n /* Like register_specialization, but for local declarations.  We are\n    registering SPEC, an instantiation of TMPL.  */\n \n@@ -932,7 +942,8 @@ register_local_specialization (spec, tmpl)\n {\n   void **slot;\n \n-  slot = htab_find_slot (local_specializations, tmpl, INSERT);\n+  slot = htab_find_slot_with_hash (local_specializations, tmpl, \n+\t\t\t\t   htab_hash_pointer (tmpl), INSERT);\n   *slot = build_tree_list (spec, tmpl);\n }\n \n@@ -10308,7 +10319,7 @@ instantiate_decl (d, defer_ok)\n \n       /* Set up the list of local specializations.  */\n       local_specializations = htab_create (37, \n-\t\t\t\t\t   htab_hash_pointer,\n+\t\t\t\t\t   hash_local_specialization,\n \t\t\t\t\t   eq_local_specializations,\n \t\t\t\t\t   NULL);\n "}]}