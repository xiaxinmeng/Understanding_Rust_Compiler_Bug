{"sha": "16e93e4b0b1e9ab40689a755c64948b3716ad0c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTZlOTNlNGIwYjFlOWFiNDA2ODlhNzU1YzY0OTQ4YjM3MTZhZDBjMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-03-13T11:58:15Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-03-13T11:58:15Z"}, "message": "PR c++/79393 DR 1658 workaround\n\n\tPR c++/79393 DR 1658 workaround\n\t* method.c (synthesized_method_walk): Check vbases of abstract\n\tclasses for dtor walk.\n\nFrom-SVN: r246085", "tree": {"sha": "7c6abf8490e8e006d587f368981ed00fc3af9d91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7c6abf8490e8e006d587f368981ed00fc3af9d91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/16e93e4b0b1e9ab40689a755c64948b3716ad0c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e93e4b0b1e9ab40689a755c64948b3716ad0c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e93e4b0b1e9ab40689a755c64948b3716ad0c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e93e4b0b1e9ab40689a755c64948b3716ad0c0/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b8c3660369aba863d8149c046863d4974f8c9f56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8c3660369aba863d8149c046863d4974f8c9f56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8c3660369aba863d8149c046863d4974f8c9f56"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "00fb3651959b8b43ea0c4b92432f0a972ef9b7da", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16e93e4b0b1e9ab40689a755c64948b3716ad0c0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16e93e4b0b1e9ab40689a755c64948b3716ad0c0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=16e93e4b0b1e9ab40689a755c64948b3716ad0c0", "patch": "@@ -1,3 +1,9 @@\n+2017-03-13  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/79393 DR 1658 workaround\n+\t* method.c (synthesized_method_walk): Check vbases of abstract\n+\tclasses for dtor walk.\n+\n 2017-03-10  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR translation/79848"}, {"sha": "772a6638c60de89862528d86d5cd8a53fea97803", "filename": "gcc/cp/method.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16e93e4b0b1e9ab40689a755c64948b3716ad0c0/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16e93e4b0b1e9ab40689a755c64948b3716ad0c0/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=16e93e4b0b1e9ab40689a755c64948b3716ad0c0", "patch": "@@ -1664,19 +1664,35 @@ synthesized_method_walk (tree ctype, special_function_kind sfk, bool const_p,\n     /* Already examined vbases above.  */;\n   else if (vec_safe_is_empty (vbases))\n     /* No virtual bases to worry about.  */;\n-  else if (ABSTRACT_CLASS_TYPE_P (ctype) && cxx_dialect >= cxx14)\n+  else if (ABSTRACT_CLASS_TYPE_P (ctype) && cxx_dialect >= cxx14\n+\t   /* DR 1658 specifies that vbases of abstract classes are\n+\t      ignored for both ctors and dtors.  However, that breaks\n+\t      virtual dtor overriding when the ignored base has a\n+\t      throwing destructor.  So, ignore that piece of 1658.  A\n+\t      defect has been filed (no number yet).  */\n+\t   && sfk != sfk_destructor)\n     /* Vbase cdtors are not relevant.  */;\n   else\n     {\n       if (constexpr_p)\n \t*constexpr_p = false;\n+\n+      /* To be conservative, ignore access to the base dtor that\n+\t DR1658 instructs us to ignore.  */\n+      bool no_access_check = (cxx_dialect >= cxx14\n+\t\t\t      && ABSTRACT_CLASS_TYPE_P (ctype));\n+\n+      if (no_access_check)\n+\tpush_deferring_access_checks (dk_no_check);\n       FOR_EACH_VEC_ELT (*vbases, i, base_binfo)\n \tsynthesized_method_base_walk (binfo, base_binfo, quals,\n \t\t\t\t      copy_arg_p, move_p, ctor_p,\n \t\t\t\t      inheriting_ctor, inherited_parms,\n \t\t\t\t      fnname, flags, diag,\n \t\t\t\t      spec_p, trivial_p,\n \t\t\t\t      deleted_p, constexpr_p);\n+      if (no_access_check)\n+\tpop_deferring_access_checks ();\n     }\n \n   /* Now handle the non-static data members.  */"}, {"sha": "a9e07d1cfdc23b2e0bbd5e69c7f4627572c0325f", "filename": "gcc/testsuite/g++.dg/cpp1y/pr79393.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/16e93e4b0b1e9ab40689a755c64948b3716ad0c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr79393.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/16e93e4b0b1e9ab40689a755c64948b3716ad0c0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr79393.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fpr79393.C?ref=16e93e4b0b1e9ab40689a755c64948b3716ad0c0", "patch": "@@ -0,0 +1,21 @@\n+// { dg-do compile { target c++14 } }\n+// PR c++/79393 deduced eh spec, deleted dtors and vbases\n+\n+struct A3;\n+\n+struct VDT {\n+  virtual ~VDT () noexcept (false);\n+};\n+\n+struct A1 : virtual VDT {\n+  virtual void abstract () = 0;\n+};\n+\n+struct A2 : A1 {  };\n+\n+struct A3 : A2 \n+{\n+  virtual void abstract ();\n+};\n+\n+A3 a3;"}]}