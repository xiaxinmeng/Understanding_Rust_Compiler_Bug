{"sha": "8d052bc70c4265754427c106f325eb4150b048c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQwNTJiYzcwYzQyNjU3NTQ0MjdjMTA2ZjMyNWViNDE1MGIwNDhjOQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1998-03-31T13:25:46Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-03-31T13:25:46Z"}, "message": "call.c: Include system.h.\n\n        * call.c: Include system.h.  Remove includes, declarations and\n        defines provided by system.h.\n        * class.c, cvt.c, decl.c, decl2.c, errfn.c error.c: Likewise.\n        * except.c, expr.c friend.c, g++spec.c, init.c, input.c: Likewise.\n        * lex.c, parse.y, pt.c, ptree.c repo.c rtti.c, search.c: Likewise.\n        * semantics.c, sig.c, spew.c, tree.c, typeck.c: Likewise.\n        * typeck2.c, xref.c: Likewise.\n        * Makefile.in: Dependencies updated as appropriate.\n        * Make-lang.in: Likewise.\nsystem.h cutover from the cp subdir\n\nFrom-SVN: r18917", "tree": {"sha": "5c98b8869e1b55dd06ca73126add91d270941f31", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c98b8869e1b55dd06ca73126add91d270941f31"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d052bc70c4265754427c106f325eb4150b048c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d052bc70c4265754427c106f325eb4150b048c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d052bc70c4265754427c106f325eb4150b048c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d052bc70c4265754427c106f325eb4150b048c9/comments", "author": null, "committer": null, "parents": [{"sha": "97be8f06eb37d07c53c7aded3a1852a39c926f33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97be8f06eb37d07c53c7aded3a1852a39c926f33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97be8f06eb37d07c53c7aded3a1852a39c926f33"}], "stats": {"total": 1817, "additions": 861, "deletions": 956}, "files": [{"sha": "06f1bb034ca625c79a429ba30ef1ffbd3d224c65", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -1,3 +1,15 @@\n+Tue Mar 31 13:43:57 1998  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* call.c: Include system.h.  Remove includes, declarations and\n+\tdefines provided by system.h.\n+\t* class.c, cvt.c, decl.c, decl2.c, errfn.c error.c: Likewise.\n+\t* except.c, expr.c friend.c, g++spec.c, init.c, input.c: Likewise.\n+\t* lex.c, parse.y, pt.c, ptree.c repo.c rtti.c, search.c: Likewise.\n+\t* semantics.c, sig.c, spew.c, tree.c, typeck.c: Likewise.\n+\t* typeck2.c, xref.c: Likewise.\n+\t* Makefile.in: Dependencies updated as appropriate.\n+\t* Make-lang.in: Likewise.\n+\n Mon Mar 30 12:15:00 1998  Mark Mitchell  <mmitchell@usa.net>\n \n  \t* pt.c (fn_type_unification): Allow incomplete unification without "}, {"sha": "bf2b3526ec72270a300b3f9f29035f95dedd880d", "filename": "gcc/cp/Make-lang.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMake-lang.in?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -86,7 +86,8 @@ g++spec.o: $(srcdir)/cp/g++spec.c\n # It'd be nice if we could find an easier way to do this---rather than have\n # to track changes to the toplevel gcc Makefile as well.\n # We depend on g++.c last, to make it obvious where it came from.\n-g++.o: $(CONFIG_H) multilib.h config.status $(lang_specs_files) g++.c\n+g++.o: $(CONFIG_H) multilib.h config.status $(lang_specs_files) g++.c \\\n+       system.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t$(DRIVER_DEFINES) \\\n \t-DLANG_SPECIFIC_DRIVER \\"}, {"sha": "fd279cabcdee82157122425408036a8170716c4f", "filename": "gcc/cp/Makefile.in", "status": "modified", "additions": 39, "deletions": 25, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FMakefile.in?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -198,7 +198,7 @@ PARSE_H = $(srcdir)/parse.h\n PARSE_C = $(srcdir)/parse.c\n \n parse.o : $(PARSE_C) $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h lex.h \\\n-\t$(srcdir)/../except.h $(srcdir)/../output.h\n+\t$(srcdir)/../except.h $(srcdir)/../output.h $(srcdir)/../system.h\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(BIG_SWITCHFLAG) \\\n   `echo $(PARSE_C) | sed 's,^\\./,,'`\n \n@@ -227,39 +227,53 @@ $(srcdir)/hash.h:\n \t\t$(srcdir)/gxx.gperf >$(srcdir)/hash.h\n \n spew.o : spew.c $(CONFIG_H) $(CXX_TREE_H) \\\n-  $(PARSE_H) $(srcdir)/../flags.h lex.h\n+  $(PARSE_H) $(srcdir)/../flags.h lex.h $(srcdir)/../system.h\n lex.o : lex.c $(CONFIG_H) $(CXX_TREE_H) \\\n-  $(PARSE_H) input.c $(srcdir)/../flags.h hash.h lex.h $(srcdir)/../c-pragma.h\n+  $(PARSE_H) input.c $(srcdir)/../flags.h hash.h lex.h \\\n+  $(srcdir)/../c-pragma.h $(srcdir)/../system.h\n decl.o : decl.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\\n   lex.h decl.h $(srcdir)/../stack.h $(srcdir)/../output.h  \\\n-  $(srcdir)/../except.h\n+  $(srcdir)/../except.h $(srcdir)/../system.h\n decl2.o : decl2.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\\n   lex.h decl.h $(srcdir)/../expr.h ../insn-codes.h $(srcdir)/../except.h \\\n-  $(srcdir)/../output.h $(srcdir)/../except.h\n-typeck2.o : typeck2.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h\n+  $(srcdir)/../output.h $(srcdir)/../except.h $(srcdir)/../system.h\n+typeck2.o : typeck2.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\\n+  $(srcdir)/../system.h\n typeck.o : typeck.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\\n-  $(srcdir)/../expr.h ../insn-codes.h\n-class.o : class.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h\n-call.o : call.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h\n-friend.o : friend.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H)\n+  $(srcdir)/../expr.h ../insn-codes.h $(srcdir)/../system.h\n+class.o : class.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\\n+  $(srcdir)/../system.h\n+call.o : call.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\\n+  $(srcdir)/../system.h\n+friend.o : friend.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\\n+  $(srcdir)/../system.h\n init.o : init.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\\n-  $(srcdir)/../expr.h ../insn-codes.h\n+  $(srcdir)/../expr.h ../insn-codes.h $(srcdir)/../system.h\n method.o : method.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h\n-cvt.o : cvt.c $(CONFIG_H) $(CXX_TREE_H)\n-search.o : search.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../stack.h $(srcdir)/../flags.h\n-tree.o : tree.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h\n-ptree.o : ptree.c $(CONFIG_H) $(CXX_TREE_H)\n-rtti.o : rtti.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h\n-except.o : except.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) $(srcdir)/../except.h\n+cvt.o : cvt.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h\n+search.o : search.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../stack.h \\\n+  $(srcdir)/../flags.h $(srcdir)/../system.h\n+tree.o : tree.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\\n+  $(srcdir)/../system.h\n+ptree.o : ptree.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h\n+rtti.o : rtti.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\\n+  $(srcdir)/../system.h\n+except.o : except.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h $(RTL_H) \\\n+  $(srcdir)/../except.h $(srcdir)/../system.h\n expr.o : expr.c $(CONFIG_H) $(CXX_TREE_H) $(RTL_H) $(srcdir)/../flags.h \\\n-  $(srcdir)/../expr.h ../insn-codes.h\n-xref.o : xref.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../input.h\n-pt.o : pt.c $(CONFIG_H) $(CXX_TREE_H) decl.h $(PARSE_H) lex.h\n-error.o : error.c $(CONFIG_H) $(CXX_TREE_H)\n-errfn.o : errfn.c $(CONFIG_H) $(CXX_TREE_H)\n-sig.o : sig.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h\n-repo.o : repo.c $(CONFIG_H) $(CXX_TREE_H)\n-semantics.o: semantics.c $(CONFIG_H) $(CXX_TREE_H) lex.h $(srcdir)/../except.h\n+  $(srcdir)/../expr.h ../insn-codes.h $(srcdir)/../system.h\n+xref.o : xref.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../input.h \\\n+  $(srcdir)/../system.h\n+pt.o : pt.c $(CONFIG_H) $(CXX_TREE_H) decl.h $(PARSE_H) lex.h \\\n+  $(srcdir)/../system.h\n+error.o : error.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h\n+errfn.o : errfn.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h\n+sig.o : sig.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../flags.h \\\n+  $(srcdir)/../system.h\n+repo.o : repo.c $(CONFIG_H) $(CXX_TREE_H) $(srcdir)/../system.h\n+semantics.o: semantics.c $(CONFIG_H) $(CXX_TREE_H) lex.h \\\n+  $(srcdir)/../except.h $(srcdir)/../system.h\n+  \n \n #\f\n # These exist for maintenance purposes."}, {"sha": "2959fc26611432b668b975959aaca6773564059f", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -25,15 +25,11 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"tree.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"cp-tree.h\"\n #include \"output.h\"\n #include \"flags.h\"\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n #include \"obstack.h\"\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free"}, {"sha": "d7251240d72197eac65cafd51ce62c4c70d20c0d", "filename": "gcc/cp/class.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -24,7 +24,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"tree.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"rtl.h\""}, {"sha": "e4f802dadbad1a4d103e9ad547d3834bd88a00ae", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -26,16 +26,12 @@ Boston, MA 02111-1307, USA.  */\n    but what kind of conversions it does will depend on the language.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"convert.h\"\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n extern tree static_aggregates;\n \n static tree cp_convert_to_pointer PROTO((tree, tree));"}, {"sha": "bb916e5c308f9b3e1f3fda61179dcdd0bde74365", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -28,28 +28,20 @@ Boston, MA 02111-1307, USA.  */\n    line numbers.  For example, the CONST_DECLs for enum values.  */\n \n #include \"config.h\"\n+#include \"system.h\"\n #include <stdio.h>\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n #include \"cp-tree.h\"\n #include \"decl.h\"\n #include \"lex.h\"\n-#include <sys/types.h>\n #include <signal.h>\n #include \"obstack.h\"\n #include \"defaults.h\"\n #include \"output.h\"\n #include \"except.h\"\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef NEED_DECLARATION_FREE\n-extern void free\tPROTO((void *));\n-#endif\n-\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n "}, {"sha": "7e3994b641b6fa6c7dea6aad5268dae9c1e059a1", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -28,7 +28,7 @@ Boston, MA 02111-1307, USA.  */\n    line numbers.  For example, the CONST_DECLs for enum values.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"flags.h\"\n@@ -40,14 +40,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"expr.h\"\n #include \"defaults.h\"\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#endif\n-\n static tree get_sentry PROTO((tree));\n static void mark_vtable_entries PROTO((tree));\n static void import_export_template PROTO((tree));"}, {"sha": "30cbfe56aa4c88f9291bbc6769bcf9a6e9933723", "filename": "gcc/cp/errfn.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ferrfn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ferrfn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferrfn.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -21,8 +21,7 @@ Boston, MA 02111-1307, USA.  */\n    \n #include \"config.h\"\n #include \"tree.h\"\n-#include <stdio.h>\n-#include <ctype.h>\n+#include \"system.h\"\n \n /* cp_printer is the type of a function which converts an argument into\n    a string for digestion by printf.  The cp_printer function should deal"}, {"sha": "7e9b06cad8b6ca6f68f55cd9c53f1ea3cf697048", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -20,15 +20,10 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n-#include <sys/types.h>\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"obstack.h\"\n-#include <ctype.h>\n \n typedef char* cp_printer ();\n "}, {"sha": "230769c949b51ca459eee33f23b06450c58465af", "filename": "gcc/cp/except.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -23,7 +23,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"cp-tree.h\""}, {"sha": "c8617dace0fa5bf96af44baa5d9729e54e7dac5e", "filename": "gcc/cp/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexpr.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -21,7 +21,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"rtl.h\"\n #include \"tree.h\"\n #include \"flags.h\""}, {"sha": "b1f1285b3da5999d2f16fd2cbc44d3ecae3a23b7", "filename": "gcc/cp/friend.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ffriend.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ffriend.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ffriend.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -19,17 +19,13 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n \n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#endif\n-\n static void add_friend PROTO((tree, tree));\n static void add_friends PROTO((tree, tree, tree));\n "}, {"sha": "105e03c885f350b515cc53e7a6aaa08d4f70aa68", "filename": "gcc/cp/g++spec.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fg%2B%2Bspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fg%2B%2Bspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fg%2B%2Bspec.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -20,19 +20,10 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n \n-#include <sys/types.h>\n-#include <stdio.h>\n+#include \"system.h\"\n \n #include \"gansidecl.h\"\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#endif\n-\n /* This bit is set if we saw a `-xfoo' language specification.  */\n #define LANGSPEC\t(1<<1)\n /* This bit is set if they did `-lm' or `-lmath'.  */"}, {"sha": "9a9c2a5f28d893f091b10db0889293a17b8fcd49", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -22,7 +22,7 @@ Boston, MA 02111-1307, USA.  */\n /* High-level class interface.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"cp-tree.h\""}, {"sha": "5e4fd5fca55ec8bfc0d8358a98fa356e3cb03c81", "filename": "gcc/cp/input.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Finput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Finput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finput.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -29,7 +29,7 @@ Boston, MA 02111-1307, USA.  */\n    lex.c for very minor efficiency gains (primarily in function\n    inlining).  */\n \n-#include <stdio.h>\n+#include \"system.h\"\n \n extern FILE *finput;\n "}, {"sha": "04021aea50afbb8794b53c7e3e8b9ac7bd1dd147", "filename": "gcc/cp/lex.c", "status": "modified", "additions": 1, "deletions": 23, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flex.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -26,9 +26,7 @@ Boston, MA 02111-1307, USA.  */\n #define YYDEBUG 1\n \n #include \"config.h\"\n-#include <sys/types.h>\n-#include <stdio.h>\n-#include <errno.h>\n+#include \"system.h\"\n #include <setjmp.h>\n #include \"input.h\"\n #include \"tree.h\"\n@@ -59,26 +57,6 @@ Boston, MA 02111-1307, USA.  */\n extern double atof ();\n #endif\n \n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#else\n-#ifdef HAVE_STRINGS_H\n-#include <strings.h>\n-#endif\n-#endif\n-\n-#ifdef NEED_DECLARATION_INDEX\n-extern char *index ();\n-#endif\n-\n-#ifdef NEED_DECLARATION_RINDEX\n-extern char *rindex ();\n-#endif\n-\n-#ifndef errno\n-extern int errno;\t\t/* needed for VAX.  */\n-#endif\n-\n #define obstack_chunk_alloc xmalloc\n #define obstack_chunk_free free\n "}, {"sha": "4247a9e6a80091fd0ebeeed29aaacc9c79685b65", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 781, "deletions": 782, "changes": 1563, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=8d052bc70c4265754427c106f325eb4150b048c9"}, {"sha": "8729cc6444c6ed35690f5e49eccb4185ec00ae20", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -32,8 +32,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n \n-#include <stdio.h>\n-#include <errno.h>\n+#include \"system.h\"\n \n #include \"tree.h\"\n #include \"input.h\""}, {"sha": "640d8e7ef04ba0479bd06155109c7a15cd2c0503", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -26,7 +26,7 @@ Boston, MA 02111-1307, USA.  */\n      file that contains only the method templates and \"just win\".  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"obstack.h\"\n \n #include \"tree.h\"\n@@ -39,10 +39,6 @@ Boston, MA 02111-1307, USA.  */\n #include \"defaults.h\"\n #include \"except.h\"\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n /* The type of functions taking a tree, and some additional data, and\n    returning an int.  */\n typedef int (*tree_fn_t) PROTO((tree, void*));"}, {"sha": "6b7e6a4131750904f2e1657a38bb6b95024c6311", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -22,7 +22,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"tree.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"cp-tree.h\"\n \n void"}, {"sha": "ed68233151503073deaff22175e4a3e9170c98e1", "filename": "gcc/cp/repo.c", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Frepo.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Frepo.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frepo.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -26,28 +26,15 @@ Boston, MA 02111-1307, USA.  */\n    explicit code.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"input.h\"\n #include \"obstack.h\"\n \n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#endif\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#else\n-extern char * getenv ();\n-#endif\n-\n-#ifdef NEED_DECLARATION_RINDEX\n-extern char *rindex ();\n-#endif\n extern char *getpwd PROTO((void));\n \n static tree repo_get_id PROTO((tree));\n-static char *save_string PROTO((char *, int));\n static char *extract_string PROTO((char **));\n static char *get_base_filename PROTO((char *));\n static void open_repo_file PROTO((char *));\n@@ -210,14 +197,6 @@ repo_template_instantiated (t, extern_p)\n     }\n }\n \n-static char *\n-save_string (s, len)\n-     char *s;\n-     int len;\n-{\n-  return obstack_copy0 (&temporary_obstack, s, len);\n-}\n-\n /* Parse a reasonable subset of shell quoting syntax.  */\n \n static char *"}, {"sha": "8b9b31510399fff457e3f40c70851dc617397dd5", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -21,7 +21,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\""}, {"sha": "ed55e3c47ffb7799f6b1afdfdd74e0d09d18be2c", "filename": "gcc/cp/search.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -24,7 +24,7 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"tree.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"cp-tree.h\"\n #include \"obstack.h\"\n #include \"flags.h\""}, {"sha": "d43e6117761a4ecfb796d756f77c3a34d64ac0de", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -25,7 +25,7 @@\n    02111-1307, USA.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"except.h\""}, {"sha": "c83c20a8be9d1d377eb9f08ef45d26cb63613910", "filename": "gcc/cp/sig.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fsig.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fsig.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsig.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -21,7 +21,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\""}, {"sha": "084467929012e482c39344e9c2b2e3486e3cabfb", "filename": "gcc/cp/spew.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fspew.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fspew.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fspew.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -24,7 +24,7 @@ Boston, MA 02111-1307, USA.  */\n    when compiling parse.c and spew.c.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"input.h\"\n #include \"tree.h\"\n #include \"lex.h\""}, {"sha": "edd3d03627244593d6ad2afc733873689ce31a80", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -20,7 +20,7 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"obstack.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n@@ -32,14 +32,6 @@ Boston, MA 02111-1307, USA.  */\n #include <varargs.h>\n #endif\n \n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef NEED_DECLARATION_FREE\n-extern void free\tPROTO((void *));\n-#endif\n-\n extern void compiler_error ();\n \n static tree get_identifier_list PROTO((tree));"}, {"sha": "c39bbb956ac6b3013b3ad0103d1933f6493d3fd7", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -30,18 +30,14 @@ Boston, MA 02111-1307, USA.  */\n    like a strange sort of assignment).  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"rtl.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\"\n #include \"output.h\"\n #include \"expr.h\"\n \n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#endif\n-\n extern void compiler_error ();\n \n static tree convert_for_assignment PROTO((tree, tree, char*, tree,"}, {"sha": "3bfe54e639020efff072242abe29a34e2cf3dbc2", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -31,7 +31,7 @@ Boston, MA 02111-1307, USA.  */\n    like a strange sort of assignment).  */\n \n #include \"config.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"tree.h\"\n #include \"cp-tree.h\"\n #include \"flags.h\""}, {"sha": "04330899da0cdd537e6f39af9e8039add55bf9fb", "filename": "gcc/cp/xref.c", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d052bc70c4265754427c106f325eb4150b048c9/gcc%2Fcp%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fxref.c?ref=8d052bc70c4265754427c106f325eb4150b048c9", "patch": "@@ -22,30 +22,12 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"config.h\"\n #include \"tree.h\"\n-#include <stdio.h>\n+#include \"system.h\"\n #include \"cp-tree.h\"\n #include \"input.h\"\n \n-#include <ctype.h>\n-\n-#ifdef HAVE_STDLIB_H\n-#include <stdlib.h>\n-#endif\n-\n-#ifdef HAVE_UNISTD_H\n-#include <unistd.h>\n-#endif\n-\n extern char *getpwd PROTO((void));\n \n-#ifdef HAVE_STRING_H\n-#include <string.h>\n-#endif\n-\n-#ifdef NEED_DECLARATION_RINDEX\n-extern char *rindex ();\n-#endif\n-\n /* The character(s) used to join a directory specification (obtained with\n    getwd or equivalent) with a non-absolute file name.  */\n "}]}