{"sha": "6a248fce5694ba4304f692a5ebeff0bb965e40a2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmEyNDhmY2U1Njk0YmE0MzA0ZjY5MmE1ZWJlZmYwYmI5NjVlNDBhMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-11-24T09:40:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-11-24T09:40:40Z"}, "message": "re PR tree-optimization/83128 (Unable to optimize {m,c}alloc when strings builtin are used)\n\n2017-11-24  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/83128\n\t* tree-ssa-sccvn.c (fully_constant_vn_reference_p): Handle STRING_CSTs.\n\t(vn_reference_lookup_3): Likewise.\n\n\t* gcc.dg/tree-ssa/ssa-fre-62.c: New testcase.\n\nFrom-SVN: r255136", "tree": {"sha": "df42271519e4d9837d766d5e0ce881abc165e6f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df42271519e4d9837d766d5e0ce881abc165e6f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a248fce5694ba4304f692a5ebeff0bb965e40a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a248fce5694ba4304f692a5ebeff0bb965e40a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a248fce5694ba4304f692a5ebeff0bb965e40a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a248fce5694ba4304f692a5ebeff0bb965e40a2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "97e1c8786bdb4e54520d9135f8ec378237872dbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97e1c8786bdb4e54520d9135f8ec378237872dbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97e1c8786bdb4e54520d9135f8ec378237872dbb"}], "stats": {"total": 33, "additions": 30, "deletions": 3}, "files": [{"sha": "cb6c0510535f2a9603b421af7af2ba3724e623a7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a248fce5694ba4304f692a5ebeff0bb965e40a2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a248fce5694ba4304f692a5ebeff0bb965e40a2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a248fce5694ba4304f692a5ebeff0bb965e40a2", "patch": "@@ -1,3 +1,9 @@\n+2017-11-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83128\n+\t* tree-ssa-sccvn.c (fully_constant_vn_reference_p): Handle STRING_CSTs.\n+\t(vn_reference_lookup_3): Likewise.\n+\n 2017-11-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/83014"}, {"sha": "019ff2afc2bca36c6c4bbe7233653112dadfa089", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a248fce5694ba4304f692a5ebeff0bb965e40a2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a248fce5694ba4304f692a5ebeff0bb965e40a2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6a248fce5694ba4304f692a5ebeff0bb965e40a2", "patch": "@@ -1,3 +1,8 @@\n+2017-11-24  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/83128\n+\t* gcc.dg/tree-ssa/ssa-fre-62.c: New testcase.\n+\n 2017-11-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/83014"}, {"sha": "f02dfe2fa14e5b83ff59aa4b9a16faa6fb1e0d0e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-fre-62.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a248fce5694ba4304f692a5ebeff0bb965e40a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-62.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a248fce5694ba4304f692a5ebeff0bb965e40a2/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-62.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-fre-62.c?ref=6a248fce5694ba4304f692a5ebeff0bb965e40a2", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fdump-tree-fre1\" } */\n+\n+char f()\n+{\n+  char *i = (char*)__builtin_malloc(100);\n+  __builtin_memcpy(i, \"a\", 1);\n+  return i[0];\n+}\n+\n+/* { dg-final { scan-tree-dump \"return 97;\" \"fre1\" } } */"}, {"sha": "63a3db99d03fd9c332a3a875048cb4da7c76816e", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a248fce5694ba4304f692a5ebeff0bb965e40a2/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a248fce5694ba4304f692a5ebeff0bb965e40a2/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=6a248fce5694ba4304f692a5ebeff0bb965e40a2", "patch": "@@ -1388,10 +1388,14 @@ fully_constant_vn_reference_p (vn_reference_t ref)\n       else if (base->opcode == MEM_REF\n \t       && base[1].opcode == ADDR_EXPR\n \t       && (TREE_CODE (TREE_OPERAND (base[1].op0, 0)) == VAR_DECL\n-\t\t   || TREE_CODE (TREE_OPERAND (base[1].op0, 0)) == CONST_DECL))\n+\t\t   || TREE_CODE (TREE_OPERAND (base[1].op0, 0)) == CONST_DECL\n+\t\t   || TREE_CODE (TREE_OPERAND (base[1].op0, 0)) == STRING_CST))\n \t{\n \t  decl = TREE_OPERAND (base[1].op0, 0);\n-\t  ctor = ctor_for_folding (decl);\n+\t  if (TREE_CODE (decl) == STRING_CST)\n+\t    ctor = decl;\n+\t  else\n+\t    ctor = ctor_for_folding (decl);\n \t}\n       if (ctor == NULL_TREE)\n \treturn build_zero_cst (ref->type);\n@@ -2331,7 +2335,8 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *vr_,\n \t      rhs = TREE_OPERAND (tem, 0);\n \t      rhs_offset += tree_to_uhwi (TREE_OPERAND (tem, 1));\n \t    }\n-\t  else if (DECL_P (tem))\n+\t  else if (DECL_P (tem)\n+\t\t   || TREE_CODE (tem) == STRING_CST)\n \t    rhs = build_fold_addr_expr (tem);\n \t  else\n \t    return (void *)-1;"}]}