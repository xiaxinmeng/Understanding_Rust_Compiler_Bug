{"sha": "f619dcab0c25b63b139e174adc3152cb8af244c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYxOWRjYWIwYzI1YjYzYjEzOWUxNzRhZGMzMTUyY2I4YWYyNDRjOQ==", "commit": {"author": {"name": "Ranjit Mathew", "email": "rmathew@hotmail.com", "date": "2005-02-01T18:38:12Z"}, "committer": {"name": "Ranjit Mathew", "email": "rmathew@gcc.gnu.org", "date": "2005-02-01T18:38:12Z"}, "message": "re PR java/19738 (gcjh generates invalid class member floating-point initialisers)\n\n\tPR java/19738\n\t* gjavah.c (jni_print_float): Do not emit floating-point\n\tinitialiser for a static final field.\n\t(jni_print_double): Likewise.\n\nFrom-SVN: r94553", "tree": {"sha": "e38fe0622979bbd752ba983b3b6543b0eafdf504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e38fe0622979bbd752ba983b3b6543b0eafdf504"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f619dcab0c25b63b139e174adc3152cb8af244c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f619dcab0c25b63b139e174adc3152cb8af244c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f619dcab0c25b63b139e174adc3152cb8af244c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f619dcab0c25b63b139e174adc3152cb8af244c9/comments", "author": null, "committer": null, "parents": [{"sha": "cc95a84509d3322010f4a1d3306fd8df7d14036a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc95a84509d3322010f4a1d3306fd8df7d14036a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc95a84509d3322010f4a1d3306fd8df7d14036a"}], "stats": {"total": 67, "additions": 40, "deletions": 27}, "files": [{"sha": "64e12fe61339c24427728619bfaeb82648b2910b", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f619dcab0c25b63b139e174adc3152cb8af244c9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f619dcab0c25b63b139e174adc3152cb8af244c9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=f619dcab0c25b63b139e174adc3152cb8af244c9", "patch": "@@ -1,3 +1,10 @@\n+2005-02-02  Ranjit Mathew  <rmathew@hotmail.com>\n+\n+\tPR java/19738\n+\t* gjavah.c (jni_print_float): Do not emit floating-point\n+\tinitialiser for a static final field.\n+\t(jni_print_double): Likewise.\n+\n 2005-02-01  Mark Mitchell  <mark@codesourcery.com>\n \n \tRevert:"}, {"sha": "e232a168d142b1f02045fc18112b836be8936aaa", "filename": "gcc/java/gjavah.c", "status": "modified", "additions": 33, "deletions": 27, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f619dcab0c25b63b139e174adc3152cb8af244c9/gcc%2Fjava%2Fgjavah.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f619dcab0c25b63b139e174adc3152cb8af244c9/gcc%2Fjava%2Fgjavah.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fgjavah.c?ref=f619dcab0c25b63b139e174adc3152cb8af244c9", "patch": "@@ -1,7 +1,7 @@\n /* Program to write C++-suitable header files from a Java(TM) .class\n    file.  This is similar to SUN's javah.\n \n-Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+Copyright (C) 1996, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -281,19 +281,22 @@ jni_print_float (FILE *stream, jfloat f)\n      work in data initializers.  FIXME.  */\n   if (JFLOAT_FINITE (f))\n     {\n-      fputs (flag_jni ? \" \" : \" = \", out);\n-      if (f.negative)\n-\tputc ('-', stream);\n-      if (f.exponent)\n-\tfprintf (stream, \"0x1.%.6xp%+df\",\n-\t\t ((unsigned int)f.mantissa) << 1,\n-\t\t f.exponent - JFLOAT_EXP_BIAS);\n-      else\n-\t/* Exponent of 0x01 is -125; exponent of 0x00 is *also* -125,\n-\t   because the implicit leading 1 bit is no longer present.  */\n-\tfprintf (stream, \"0x0.%.6xp%+df\",\n-\t\t ((unsigned int)f.mantissa) << 1,\n-\t\t f.exponent + 1 - JFLOAT_EXP_BIAS);\n+      if (flag_jni)\n+        {\n+          fputs (\" \", out);\n+          if (f.negative)\n+            putc ('-', stream);\n+          if (f.exponent)\n+            fprintf (stream, \"0x1.%.6xp%+df\",\n+                     ((unsigned int)f.mantissa) << 1,\n+                     f.exponent - JFLOAT_EXP_BIAS);\n+          else\n+            /* Exponent of 0x01 is -125; exponent of 0x00 is *also* -125,\n+               because the implicit leading 1 bit is no longer present.  */\n+            fprintf (stream, \"0x0.%.6xp%+df\",\n+                     ((unsigned int)f.mantissa) << 1,\n+                     f.exponent + 1 - JFLOAT_EXP_BIAS);\n+        }\n     }\n   if (! flag_jni)\n     fputs (\";\\n\", stream);\n@@ -307,19 +310,22 @@ jni_print_double (FILE *stream, jdouble f)\n      work in data initializers.  FIXME.  */\n   if (JDOUBLE_FINITE (f))\n     {\n-      fputs (flag_jni ? \" \" : \" = \", out);\n-      if (f.negative)\n-\tputc ('-', stream);\n-      if (f.exponent)\n-\tfprintf (stream, \"0x1.%.5x%.8xp%+d\",\n-\t\t f.mantissa0, f.mantissa1,\n-\t\t f.exponent - JDOUBLE_EXP_BIAS);\n-      else\n-\t/* Exponent of 0x001 is -1022; exponent of 0x000 is *also* -1022,\n-\t   because the implicit leading 1 bit is no longer present.  */\n-\tfprintf (stream, \"0x0.%.5x%.8xp%+d\",\n-\t\t f.mantissa0, f.mantissa1,\n-\t\t f.exponent + 1 - JDOUBLE_EXP_BIAS);\n+      if (flag_jni)\n+        {\n+          fputs (\" \", out);\n+          if (f.negative)\n+            putc ('-', stream);\n+          if (f.exponent)\n+            fprintf (stream, \"0x1.%.5x%.8xp%+d\",\n+                     f.mantissa0, f.mantissa1,\n+                     f.exponent - JDOUBLE_EXP_BIAS);\n+          else\n+            /* Exponent of 0x001 is -1022; exponent of 0x000 is *also* -1022,\n+               because the implicit leading 1 bit is no longer present.  */\n+            fprintf (stream, \"0x0.%.5x%.8xp%+d\",\n+                     f.mantissa0, f.mantissa1,\n+                     f.exponent + 1 - JDOUBLE_EXP_BIAS);\n+        }\n     }\n   fputs (flag_jni ? \"\\n\" : \";\\n\", stream);\n }"}]}