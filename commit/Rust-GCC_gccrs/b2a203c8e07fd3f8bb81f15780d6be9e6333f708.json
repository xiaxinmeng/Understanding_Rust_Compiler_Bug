{"sha": "b2a203c8e07fd3f8bb81f15780d6be9e6333f708", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJhMjAzYzhlMDdmZDNmOGJiODFmMTU3ODBkNmJlOWU2MzMzZjcwOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2006-05-23T19:29:36Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2006-05-23T19:29:36Z"}, "message": "libgcc2.c (LIBGCC2_MAX_UNITS_PER_WORD): New macro.\n\n\t* libgcc2.c (LIBGCC2_MAX_UNITS_PER_WORD): New macro.\n\t(LIBGCC2_UNITS_PER_WORD): Use LIBGCC2_MAX_UNITS_PER_WORD rather than\n\tMIN_UNITS_PER_WORD to set the default.  Also use it in the guard.\n\nFrom-SVN: r114022", "tree": {"sha": "45df1f817aceb17a9a8345af8607433bd5cbddea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45df1f817aceb17a9a8345af8607433bd5cbddea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2a203c8e07fd3f8bb81f15780d6be9e6333f708", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a203c8e07fd3f8bb81f15780d6be9e6333f708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2a203c8e07fd3f8bb81f15780d6be9e6333f708", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2a203c8e07fd3f8bb81f15780d6be9e6333f708/comments", "author": null, "committer": null, "parents": [{"sha": "550ab0c644e22dd5521ed75a5da8f73b15d274df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/550ab0c644e22dd5521ed75a5da8f73b15d274df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/550ab0c644e22dd5521ed75a5da8f73b15d274df"}], "stats": {"total": 29, "additions": 20, "deletions": 9}, "files": [{"sha": "36612a34cd9a68332000641ed3d3d988cee02791", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a203c8e07fd3f8bb81f15780d6be9e6333f708/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a203c8e07fd3f8bb81f15780d6be9e6333f708/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2a203c8e07fd3f8bb81f15780d6be9e6333f708", "patch": "@@ -1,3 +1,9 @@\n+2006-05-23  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* libgcc2.c (LIBGCC2_MAX_UNITS_PER_WORD): New macro.\n+\t(LIBGCC2_UNITS_PER_WORD): Use LIBGCC2_MAX_UNITS_PER_WORD rather than\n+\tMIN_UNITS_PER_WORD to set the default.  Also use it in the guard.\n+\n 2006-05-23  Joseph Myers  <joseph@codesourcery.com>\n \n \t* expr.c (undefined_operand_subword_p): New."}, {"sha": "d093616fe50534a9812d716490c05a7adf181db5", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2a203c8e07fd3f8bb81f15780d6be9e6333f708/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2a203c8e07fd3f8bb81f15780d6be9e6333f708/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=b2a203c8e07fd3f8bb81f15780d6be9e6333f708", "patch": "@@ -44,18 +44,23 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n #define MIN_UNITS_PER_WORD UNITS_PER_WORD\n #endif\n \n+/* Work out the largest \"word\" size that we can deal with on this target.  */\n+#if MIN_UNITS_PER_WORD > 4\n+# define LIBGCC2_MAX_UNITS_PER_WORD 8\n+#elif (MIN_UNITS_PER_WORD > 2 \\\n+       || (MIN_UNITS_PER_WORD > 1 && LONG_LONG_TYPE_SIZE > 32))\n+# define LIBGCC2_MAX_UNITS_PER_WORD 4\n+#else\n+# define LIBGCC2_MAX_UNITS_PER_WORD MIN_UNITS_PER_WORD\n+#endif\n+\n+/* Work out what word size we are using for this compilation.\n+   The value can be set on the command line.  */\n #ifndef LIBGCC2_UNITS_PER_WORD\n-# if MIN_UNITS_PER_WORD > 4\n-#  define LIBGCC2_UNITS_PER_WORD 8\n-# elif (MIN_UNITS_PER_WORD > 2 \\\n-        || (MIN_UNITS_PER_WORD > 1 && LONG_LONG_TYPE_SIZE > 32))\n-#  define LIBGCC2_UNITS_PER_WORD 4\n-# else\n-#  define LIBGCC2_UNITS_PER_WORD MIN_UNITS_PER_WORD\n-# endif\n+#define LIBGCC2_UNITS_PER_WORD LIBGCC2_MAX_UNITS_PER_WORD\n #endif\n \n-#if LIBGCC2_UNITS_PER_WORD <= MIN_UNITS_PER_WORD\n+#if LIBGCC2_UNITS_PER_WORD <= LIBGCC2_MAX_UNITS_PER_WORD\n \n #include \"libgcc2.h\"\n \f"}]}