{"sha": "d60004eecf62e69a63dae2a66f4688e003ca3a62", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDYwMDA0ZWVjZjYyZTY5YTYzZGFlMmE2NmY0Njg4ZTAwM2NhM2E2Mg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-10-12T20:49:45Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-10-12T20:49:45Z"}, "message": "h8300.c (WORD_REG_USED): Use SP_REG instead of a literal.\n\n\t* config/h8300/h8300.c (WORD_REG_USED): Use SP_REG instead of\n\ta literal.\n\t* config/h8300/h8300.h (REGNO_OK_FOR_BASE_P): Use MAC_REG\n\tinstead of a literal.\n\nFrom-SVN: r72407", "tree": {"sha": "9405eeec527c210743941354e9a36a6166627af4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9405eeec527c210743941354e9a36a6166627af4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d60004eecf62e69a63dae2a66f4688e003ca3a62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60004eecf62e69a63dae2a66f4688e003ca3a62", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d60004eecf62e69a63dae2a66f4688e003ca3a62", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d60004eecf62e69a63dae2a66f4688e003ca3a62/comments", "author": null, "committer": null, "parents": [{"sha": "0606ef8525b9bd5cf737507725f5f64dfcf568c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0606ef8525b9bd5cf737507725f5f64dfcf568c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0606ef8525b9bd5cf737507725f5f64dfcf568c4"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "be5de235254b1fe608952a5df6c5dbd0a8605bf8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60004eecf62e69a63dae2a66f4688e003ca3a62/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60004eecf62e69a63dae2a66f4688e003ca3a62/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d60004eecf62e69a63dae2a66f4688e003ca3a62", "patch": "@@ -1,3 +1,10 @@\n+2003-10-12  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.c (WORD_REG_USED): Use SP_REG instead of\n+\ta literal.\n+\t* config/h8300/h8300.h (REGNO_OK_FOR_BASE_P): Use MAC_REG\n+\tinstead of a literal.\n+\n 2003-10-12  Nathanael Nerode  <neroden@gcc.gnu.org>\n \n \t* config.gcc (*-*-freebsd*): Use tm_defines instead of tiny"}, {"sha": "18ee4c6e0036bafaf5bfc2da431962866d088ccc", "filename": "gcc/config/h8300/h8300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60004eecf62e69a63dae2a66f4688e003ca3a62/gcc%2Fconfig%2Fh8300%2Fh8300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60004eecf62e69a63dae2a66f4688e003ca3a62/gcc%2Fconfig%2Fh8300%2Fh8300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.c?ref=d60004eecf62e69a63dae2a66f4688e003ca3a62", "patch": "@@ -343,7 +343,7 @@ byte_reg (rtx x, int b)\n /* REGNO must be saved/restored across calls if this macro is true.  */\n \n #define WORD_REG_USED(regno)\t\t\t\t\t\t\\\n-  (regno < 7\t\t\t\t\t\t\t\t\\\n+  (regno < SP_REG\t\t\t\t\t\t\t\\\n    /* No need to save registers if this function will not return.  */\t\\\n    && ! TREE_THIS_VOLATILE (current_function_decl)\t\t\t\\\n    && (pragma_saveall\t\t\t\t\t\t\t\\"}, {"sha": "055a32542e16352e611077313cfa1cc3eb962e48", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d60004eecf62e69a63dae2a66f4688e003ca3a62/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d60004eecf62e69a63dae2a66f4688e003ca3a62/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=d60004eecf62e69a63dae2a66f4688e003ca3a62", "patch": "@@ -785,8 +785,9 @@ struct cum_arg\n \n #define REGNO_OK_FOR_INDEX_P(regno) 0\n \n-#define REGNO_OK_FOR_BASE_P(regno) \\\n-  (((regno) < FIRST_PSEUDO_REGISTER && regno != 8) || reg_renumber[regno] >= 0)\n+#define REGNO_OK_FOR_BASE_P(regno)\t\t\t\t\\\n+  (((regno) < FIRST_PSEUDO_REGISTER && regno != MAC_REG)\t\\\n+   || reg_renumber[regno] >= 0)\n \f\n /* Maximum number of registers that can appear in a valid memory address.  */\n "}]}