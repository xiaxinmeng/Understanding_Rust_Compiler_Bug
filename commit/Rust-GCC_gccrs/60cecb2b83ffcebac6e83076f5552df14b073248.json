{"sha": "60cecb2b83ffcebac6e83076f5552df14b073248", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBjZWNiMmI4M2ZmY2ViYWM2ZTgzMDc2ZjU1NTJkZjE0YjA3MzI0OA==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-12-18T18:01:49Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-12-18T18:01:49Z"}, "message": "libstdc++: Fix mistake in PR98374 change [PR98377]\n\nThe #ifdef RADIXCHAR directive should be moved one line up so that it\nalso guards the outer if statement, or else when RADIXCHAR is not\ndefined the outer if statement will end up nonsensically guarding the\ndeclaration of output_length_upper_bound a few lines below it.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/98377\n\t* src/c++17/floating_to_chars.cc (__floating_to_chars_precision):\n\tFix mistake.", "tree": {"sha": "0211425fac878950d188e2ea795eefac78e8e138", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0211425fac878950d188e2ea795eefac78e8e138"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60cecb2b83ffcebac6e83076f5552df14b073248", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60cecb2b83ffcebac6e83076f5552df14b073248", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60cecb2b83ffcebac6e83076f5552df14b073248", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60cecb2b83ffcebac6e83076f5552df14b073248/comments", "author": null, "committer": null, "parents": [{"sha": "22a7e82c200d01d12e34e757e86dc9796a9bf085", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a7e82c200d01d12e34e757e86dc9796a9bf085", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a7e82c200d01d12e34e757e86dc9796a9bf085"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b7c31c746cce0c516bfc1dc18410b4706c3e2ee3", "filename": "libstdc++-v3/src/c++17/floating_to_chars.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60cecb2b83ffcebac6e83076f5552df14b073248/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60cecb2b83ffcebac6e83076f5552df14b073248/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B17%2Ffloating_to_chars.cc?ref=60cecb2b83ffcebac6e83076f5552df14b073248", "patch": "@@ -1114,8 +1114,8 @@ template<typename T>\n \t// Since the output of printf is locale-sensitive, we need to be able\n \t// to handle a radix point that's different from '.'.\n \tchar radix[6] = {'.', '\\0', '\\0', '\\0', '\\0', '\\0'};\n-\tif (effective_precision > 0)\n #ifdef RADIXCHAR\n+\tif (effective_precision > 0)\n \t  // ???: Can nl_langinfo() ever return null?\n \t  if (const char* const radix_ptr = nl_langinfo(RADIXCHAR))\n \t    {"}]}