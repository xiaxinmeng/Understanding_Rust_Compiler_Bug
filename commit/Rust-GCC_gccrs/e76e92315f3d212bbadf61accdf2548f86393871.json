{"sha": "e76e92315f3d212bbadf61accdf2548f86393871", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTc2ZTkyMzE1ZjNkMjEyYmJhZGY2MWFjY2RmMjU0OGY4NjM5Mzg3MQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2010-02-09T17:04:57Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2010-02-09T17:04:57Z"}, "message": "re PR libfortran/42996 (Incorrect length returned from get_command_argument intrinsic)\n\n2010-02-09  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/42996\n        * intrinsics/args.c (get_command_argument_i4): Always return\n        commandline-argument length for length parameter.\n\nFrom-SVN: r156630", "tree": {"sha": "71189d7060b7e8fe01a8d99f1451299c2074d200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71189d7060b7e8fe01a8d99f1451299c2074d200"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e76e92315f3d212bbadf61accdf2548f86393871", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76e92315f3d212bbadf61accdf2548f86393871", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e76e92315f3d212bbadf61accdf2548f86393871", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e76e92315f3d212bbadf61accdf2548f86393871/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57257f0dd5ce62ad42b9a5ca7d87f8b470f6a474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57257f0dd5ce62ad42b9a5ca7d87f8b470f6a474", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57257f0dd5ce62ad42b9a5ca7d87f8b470f6a474"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "cd99c41a3e44961dc9bdf700c2424afbd78a2891", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76e92315f3d212bbadf61accdf2548f86393871/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76e92315f3d212bbadf61accdf2548f86393871/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e76e92315f3d212bbadf61accdf2548f86393871", "patch": "@@ -1,3 +1,9 @@\n+2010-02-09  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/42996\n+\t* intrinsics/args.c (get_command_argument_i4): Always return\n+\tcommandline-argument length for length parameter.\n+\n 2010-02-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran/42742"}, {"sha": "83a0502fe15fc8413bdee7996e27911b055ffeb1", "filename": "libgfortran/intrinsics/args.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e76e92315f3d212bbadf61accdf2548f86393871/libgfortran%2Fintrinsics%2Fargs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e76e92315f3d212bbadf61accdf2548f86393871/libgfortran%2Fintrinsics%2Fargs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fargs.c?ref=e76e92315f3d212bbadf61accdf2548f86393871", "patch": "@@ -147,11 +147,9 @@ get_command_argument_i4 (GFC_INTEGER_4 *number, char *value,\n   if (value != NULL && stat_flag != GFC_GC_FAILURE)\n     {\n       if (arglen > value_len)\n-       {\n-\t arglen = value_len;\n \t stat_flag = GFC_GC_VALUE_TOO_SHORT;\n-       }\n-      memcpy (value, argv[*number], arglen);\n+\n+      memcpy (value, argv[*number], arglen <= value_len ? arglen : value_len);\n     }\n \n   if (length != NULL)"}]}