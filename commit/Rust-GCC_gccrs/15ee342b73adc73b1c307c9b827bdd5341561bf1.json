{"sha": "15ee342b73adc73b1c307c9b827bdd5341561bf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTVlZTM0MmI3M2FkYzczYjFjMzA3YzliODI3YmRkNTM0MTU2MWJmMQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2004-09-21T05:57:55Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2004-09-21T05:57:55Z"}, "message": "re PR rtl-optimization/17266 (Libgfortran doesn't build)\n\n\tPR rtl-optimization/17266\n\t* regmove.c (optimize_reg_copy_3): Make a new SUBREG for each insn.\n\nFrom-SVN: r87793", "tree": {"sha": "a2c3fb7f2b93b3b69ca5c7d0ec6c6e827461601e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2c3fb7f2b93b3b69ca5c7d0ec6c6e827461601e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15ee342b73adc73b1c307c9b827bdd5341561bf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ee342b73adc73b1c307c9b827bdd5341561bf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ee342b73adc73b1c307c9b827bdd5341561bf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ee342b73adc73b1c307c9b827bdd5341561bf1/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b60dfd716eda005cfc592129da66acdb210ee22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b60dfd716eda005cfc592129da66acdb210ee22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b60dfd716eda005cfc592129da66acdb210ee22"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "4e4d19ad394754126f644d062b5fcf2d81aa2f5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ee342b73adc73b1c307c9b827bdd5341561bf1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ee342b73adc73b1c307c9b827bdd5341561bf1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=15ee342b73adc73b1c307c9b827bdd5341561bf1", "patch": "@@ -1,3 +1,8 @@\n+2004-09-21  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\tPR rtl-optimization/17266\n+\t* regmove.c (optimize_reg_copy_3): Make a new SUBREG for each insn.\n+\n 2004-09-21  Uros Bizjak  <uros@kss-loka.si>\n \n \tPR rtl-optimization/14851"}, {"sha": "c08a72058b336c6a24f189e410fc0dfc5431e630", "filename": "gcc/regmove.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15ee342b73adc73b1c307c9b827bdd5341561bf1/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15ee342b73adc73b1c307c9b827bdd5341561bf1/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=15ee342b73adc73b1c307c9b827bdd5341561bf1", "patch": "@@ -655,7 +655,7 @@ optimize_reg_copy_3 (rtx insn, rtx dest, rtx src)\n   rtx src_reg = XEXP (src, 0);\n   int src_no = REGNO (src_reg);\n   int dst_no = REGNO (dest);\n-  rtx p, set, subreg;\n+  rtx p, set;\n   enum machine_mode old_mode;\n \n   if (src_no < FIRST_PSEUDO_REGISTER\n@@ -703,14 +703,15 @@ optimize_reg_copy_3 (rtx insn, rtx dest, rtx src)\n \n   /* Now walk forward making additional replacements.  We want to be able\n      to undo all the changes if a later substitution fails.  */\n-  subreg = gen_lowpart_SUBREG (old_mode, src_reg);\n   while (p = NEXT_INSN (p), p != insn)\n     {\n       if (! INSN_P (p))\n \tcontinue;\n \n       /* Make a tentative change.  */\n-      validate_replace_rtx_group (src_reg, subreg, p);\n+      validate_replace_rtx_group (src_reg,\n+\t\t\t\t  gen_lowpart_SUBREG (old_mode, src_reg),\n+\t\t\t\t  p);\n     }\n \n   validate_replace_rtx_group (src, src_reg, insn);"}]}