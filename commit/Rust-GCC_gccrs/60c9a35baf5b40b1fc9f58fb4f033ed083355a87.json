{"sha": "60c9a35baf5b40b1fc9f58fb4f033ed083355a87", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjBjOWEzNWJhZjViNDBiMWZjOWY1OGZiNGYwMzNlZDA4MzM1NWE4Nw==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-07-08T19:42:26Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-07-08T19:42:26Z"}, "message": "intrinsic.c (add_sym_4s): New function.\n\n\t* intrinsic.c (add_sym_4s): New function.\n\t(add_subroutines): Change gfc_add_sym_? to gfc_add_sym_?s.\n\nFrom-SVN: r84304", "tree": {"sha": "47a5cf9b496d38b881451ff109ae47718d222aa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47a5cf9b496d38b881451ff109ae47718d222aa3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/60c9a35baf5b40b1fc9f58fb4f033ed083355a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c9a35baf5b40b1fc9f58fb4f033ed083355a87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60c9a35baf5b40b1fc9f58fb4f033ed083355a87", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60c9a35baf5b40b1fc9f58fb4f033ed083355a87/comments", "author": null, "committer": null, "parents": [{"sha": "00dcddaaa05a2f435aec718b012d11a3bbdde2bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00dcddaaa05a2f435aec718b012d11a3bbdde2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00dcddaaa05a2f435aec718b012d11a3bbdde2bf"}], "stats": {"total": 69, "additions": 51, "deletions": 18}, "files": [{"sha": "baba7be46ed80158617bdb881155358689664f83", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c9a35baf5b40b1fc9f58fb4f033ed083355a87/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c9a35baf5b40b1fc9f58fb4f033ed083355a87/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=60c9a35baf5b40b1fc9f58fb4f033ed083355a87", "patch": "@@ -1,3 +1,8 @@\n+2004-07-08  Paul Brook  <paul@codesourcery.com>\n+\n+\t* intrinsic.c (add_sym_4s): New function.\n+\t(add_subroutines): Change gfc_add_sym_? to gfc_add_sym_?s.\n+\n 2004-07-04  Janne Blomqvist  <jblomqvi@cc.hut.fi>\n \tPaul Brook  <paul@codesourcery.com>\n "}, {"sha": "022f1044e8e5399a5e164a97b60a0dde14fd63e6", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 46, "deletions": 18, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/60c9a35baf5b40b1fc9f58fb4f033ed083355a87/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/60c9a35baf5b40b1fc9f58fb4f033ed083355a87/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=60c9a35baf5b40b1fc9f58fb4f033ed083355a87", "patch": "@@ -561,6 +561,33 @@ static void add_sym_4 (const char *name, int elemental, int actual_ok, bt type,\n }\n \n \n+static void add_sym_4s (const char *name, int elemental, int actual_ok,\n+    bt type, int kind,\n+    try (*check)(gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *),\n+    gfc_expr *(*simplify)(gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *),\n+    void (*resolve)(gfc_code *),\n+    const char* a1, bt type1, int kind1, int optional1,\n+    const char* a2, bt type2, int kind2, int optional2,\n+    const char* a3, bt type3, int kind3, int optional3,\n+    const char* a4, bt type4, int kind4, int optional4)\n+{\n+  gfc_check_f cf;\n+  gfc_simplify_f sf;\n+  gfc_resolve_f rf;\n+\n+  cf.f4 = check;\n+  sf.f4 = simplify;\n+  rf.s1 = resolve;\n+\n+  add_sym (name, elemental, actual_ok, type, kind, cf, sf, rf,\n+\t   a1, type1, kind1, optional1,\n+\t   a2, type2, kind2, optional2,\n+\t   a3, type3, kind3, optional3,\n+\t   a4, type4, kind4, optional4,\n+\t   (void*)0);\n+}\n+\n+\n static void add_sym_5 (const char *name, int elemental, int actual_ok, bt type,\n \t\t       int kind,\n \t\t       try (*check)(gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *,gfc_expr *),\n@@ -1729,10 +1756,10 @@ add_subroutines (void)\n \t      gfc_check_second_sub, NULL, gfc_resolve_second_sub,\n \t      tm, BT_REAL, dr, 0);\n \n-  add_sym_4 (\"date_and_time\", 0, 1, BT_UNKNOWN, 0,\n-\t     gfc_check_date_and_time, NULL, NULL,\n-\t     dt, BT_CHARACTER, dc, 1, tm, BT_CHARACTER, dc, 1,\n-\t     zn, BT_CHARACTER, dc, 1, vl, BT_INTEGER, di, 1);\n+  add_sym_4s (\"date_and_time\", 0, 1, BT_UNKNOWN, 0,\n+\t      gfc_check_date_and_time, NULL, NULL,\n+\t      dt, BT_CHARACTER, dc, 1, tm, BT_CHARACTER, dc, 1,\n+\t      zn, BT_CHARACTER, dc, 1, vl, BT_INTEGER, di, 1);\n \n   /* More G77 compatibility garbage. */\n   add_sym_2s (\"etime\", 0, 1, BT_UNKNOWN, 0,\n@@ -1743,27 +1770,28 @@ add_subroutines (void)\n \t     gfc_check_etime_sub, NULL, gfc_resolve_etime_sub,\n \t     vl, BT_REAL, 4, 0, tm, BT_REAL, 4, 0);\n \n-  add_sym_2 (\"getarg\", 0, 1, BT_UNKNOWN, 0,\n-\t     NULL, NULL, gfc_resolve_getarg,\n-\t     c, BT_INTEGER, di, 0, vl, BT_CHARACTER, dc, 0);\n+  add_sym_2s (\"getarg\", 0, 1, BT_UNKNOWN, 0,\n+\t      NULL, NULL, gfc_resolve_getarg,\n+\t      c, BT_INTEGER, di, 0, vl, BT_CHARACTER, dc, 0);\n \n   /* F2003 commandline routines.  */\n \n   add_sym_3s (\"get_command\", 0, 1, BT_UNKNOWN, 0,\n-\t     NULL, NULL, gfc_resolve_get_command,\n-\t     com, BT_CHARACTER, dc, 1,\n-\t     length, BT_INTEGER, di, 1,\n-\t     st, BT_INTEGER, di, 1);\n-\n-  add_sym_4 (\"get_command_argument\", 0, 1, BT_UNKNOWN, 0,\n-\t     NULL, NULL, gfc_resolve_get_command_argument,\n-\t     num, BT_INTEGER, di, 0,\n-\t     val, BT_CHARACTER, dc, 1,\n-\t     length, BT_INTEGER, di, 1,\n-\t     st, BT_INTEGER, di, 1);\n+\t      NULL, NULL, gfc_resolve_get_command,\n+\t      com, BT_CHARACTER, dc, 1,\n+\t      length, BT_INTEGER, di, 1,\n+\t      st, BT_INTEGER, di, 1);\n+\n+  add_sym_4s (\"get_command_argument\", 0, 1, BT_UNKNOWN, 0,\n+\t      NULL, NULL, gfc_resolve_get_command_argument,\n+\t      num, BT_INTEGER, di, 0,\n+\t      val, BT_CHARACTER, dc, 1,\n+\t      length, BT_INTEGER, di, 1,\n+\t      st, BT_INTEGER, di, 1);\n \t     \n   /* Extension */\n \n+  /* This needs changing to add_sym_5s if it gets a resolution function.  */\n   add_sym_5 (\"mvbits\", 1, 1, BT_UNKNOWN, 0,\n \t     gfc_check_mvbits, gfc_simplify_mvbits, NULL,\n \t     f, BT_INTEGER, di, 0, fp, BT_INTEGER, di, 0,"}]}