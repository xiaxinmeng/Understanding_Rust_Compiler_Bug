{"sha": "af8b342afe49fbdca4673f95cda3fca92891e054", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWY4YjM0MmFmZTQ5ZmJkY2E0NjczZjk1Y2RhM2ZjYTkyODkxZTA1NA==", "commit": {"author": {"name": "Alexandre Petit-Bianco", "email": "apbianco@cygnus.com", "date": "1999-05-14T13:44:11Z"}, "committer": {"name": "Alexandre Petit-Bianco", "email": "apbianco@gcc.gnu.org", "date": "1999-05-14T13:44:11Z"}, "message": "[multiple changes]\n\nFri May 14 12:31:08 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* xref.c (xref_set_current_fp): New function, defined.\n\t* xref.h (xref_set_current_fp): New function, prototyped.\nFri May 14 11:57:54 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n\t* check-init.c (check_init): Take into account that\n \tLABELED_BLOCK_STMT can be empty.\n\nFrom-SVN: r26935", "tree": {"sha": "aeb2b02f82b5fb61f83f6de55a92a5cd53d09b08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aeb2b02f82b5fb61f83f6de55a92a5cd53d09b08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af8b342afe49fbdca4673f95cda3fca92891e054", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8b342afe49fbdca4673f95cda3fca92891e054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af8b342afe49fbdca4673f95cda3fca92891e054", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af8b342afe49fbdca4673f95cda3fca92891e054/comments", "author": null, "committer": null, "parents": [{"sha": "62dab29cd24953c065bc717e013d2926f9e56901", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62dab29cd24953c065bc717e013d2926f9e56901", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62dab29cd24953c065bc717e013d2926f9e56901"}], "stats": {"total": 34, "additions": 22, "deletions": 12}, "files": [{"sha": "61ccfe6b3f980d96f758f4016efb1c5ead914021", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=af8b342afe49fbdca4673f95cda3fca92891e054", "patch": "@@ -1,10 +1,21 @@\n+Fri May 14 12:31:08 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* xref.c (xref_set_current_fp): New function, defined.\n+\t* xref.h (xref_set_current_fp): New function, prototyped.\n+\n+Fri May 14 11:57:54 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n+\n+\t* check-init.c (check_init): Take into account that\n+ \tLABELED_BLOCK_STMT can be empty.\n+\n Thu May 13 18:30:48 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n \n \t* parse.y (java_check_regular_methods): Warning check on not\n  \toverriding methods with default access in other packages does not\n  \tapply to `<clinit>'.\n \t(java_complete_lhs): If block body is an empty_stmt_node, replace\n- \tit by NULL_TREE. This avoid gcc generating an irrelevant warning.\n+ \tit by NULL_TREE. This prevents gcc from generating an irrelevant\n+ \twarning.\n \n Thu May 13 13:23:38 1999  Alexandre Petit-Bianco  <apbianco@cygnus.com>\n "}, {"sha": "67e2524cf9b43712961509685956b9dd8841489f", "filename": "gcc/java/check-init.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2Fcheck-init.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2Fcheck-init.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fcheck-init.c?ref=af8b342afe49fbdca4673f95cda3fca92891e054", "patch": "@@ -475,7 +475,8 @@ check_init (exp, before)\n \tstruct alternatives alt;\n \tBEGIN_ALTERNATIVES (before, alt);\n \talt.block = exp;\n-\tcheck_init (LABELED_BLOCK_BODY (exp), before);\n+\tif (LABELED_BLOCK_BODY (exp))\n+\t  check_init (LABELED_BLOCK_BODY (exp), before);\n \tdone_alternative (before, &alt);\n \tEND_ALTERNATIVES (before, alt);\n \treturn;"}, {"sha": "cd6fb3bd569d47f894b15ed8e59bfb8e073b1c1e", "filename": "gcc/java/lang.c", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2Flang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2Flang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flang.c?ref=af8b342afe49fbdca4673f95cda3fca92891e054", "patch": "@@ -173,16 +173,6 @@ lang_decode_option (argc, argv)\n     }\n #undef ARG\n \n-#define XARG \"-fxref=\"\n-  if (strncmp (p, XARG, sizeof (XARG) - 1) == 0)\n-    {\n-      if (!(flag_emit_xref = xref_flag_value (p + sizeof (XARG) - 1)))\n-\terror (\"Unkown xref format `%s'\", p + sizeof (XARG) - 1);\n-      else\n-\treturn 1;\n-    }\n-#undef XARG\n-\n   if (p[0] == '-' && p[1] == 'f')\n     {\n       /* Some kind of -f option."}, {"sha": "8835e8dfcace169608b1b54dda34d17315ea8543", "filename": "gcc/java/xref.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fxref.c?ref=af8b342afe49fbdca4673f95cda3fca92891e054", "patch": "@@ -66,6 +66,13 @@ xref_get_data (flag)\n   return xref_table [flag-1].data;\n }\n \n+void\n+xref_set_current_fp (fp)\n+     FILE *fp;\n+{\n+  xref_table [flag_emit_xref-1].fp = fp;\n+}\n+\n /* Branch to the right xref \"back-end\".  */\n \n void"}, {"sha": "7a98834c2db11b4b79254658d2e3b3ba695448d1", "filename": "gcc/java/xref.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2Fxref.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af8b342afe49fbdca4673f95cda3fca92891e054/gcc%2Fjava%2Fxref.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fxref.h?ref=af8b342afe49fbdca4673f95cda3fca92891e054", "patch": "@@ -28,6 +28,7 @@ int xref_flag_value PROTO ((char *));\n void expand_xref PROTO ((tree));\n void xref_set_data PROTO ((int, void *));\n void *xref_get_data PROTO ((int));\n+void xref_set_current_fp PROTO ((FILE *));\n \n /* flag_emit_xref range of possible values. */\n "}]}