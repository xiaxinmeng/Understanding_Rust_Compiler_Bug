{"sha": "7498239e97b1cb7c049e0f39481af7c812f894ab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ5ODIzOWU5N2IxY2I3YzA0OWUwZjM5NDgxYWY3YzgxMmY4OTRhYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-26T20:33:46Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-26T20:33:46Z"}, "message": "re PR c++/66255 (ice in retrieve_specialization)\n\n\tPR c++/66255\n\t* pt.c (check_unstripped_args): Split out from...\n\t(retrieve_specialization): ...here.  Allow typedefs in the type of\n\ta non-type argument.\n\nFrom-SVN: r225084", "tree": {"sha": "e60c9ea5e8be3fce911e80dc50a2dc62a07c04ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e60c9ea5e8be3fce911e80dc50a2dc62a07c04ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7498239e97b1cb7c049e0f39481af7c812f894ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7498239e97b1cb7c049e0f39481af7c812f894ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7498239e97b1cb7c049e0f39481af7c812f894ab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7498239e97b1cb7c049e0f39481af7c812f894ab/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d15364ce85d30212914ad79f624e9d2236a9be64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d15364ce85d30212914ad79f624e9d2236a9be64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d15364ce85d30212914ad79f624e9d2236a9be64"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "e9030a7de22d6c8c7b44db9c755f22d0903c773d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7498239e97b1cb7c049e0f39481af7c812f894ab/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7498239e97b1cb7c049e0f39481af7c812f894ab/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7498239e97b1cb7c049e0f39481af7c812f894ab", "patch": "@@ -1,5 +1,10 @@\n 2015-06-26  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/66255\n+\t* pt.c (check_unstripped_args): Split out from...\n+\t(retrieve_specialization): ...here.  Allow typedefs in the type of\n+\ta non-type argument.\n+\n \tPR c++/66067\n \t* mangle.c (write_nested_name): Limit TYPENAME_TYPE handling to\n \tTYPE_DECLs."}, {"sha": "082e04c4a80f094d9390b3be8d503f1bf6ed959b", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 30, "deletions": 7, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7498239e97b1cb7c049e0f39481af7c812f894ab/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7498239e97b1cb7c049e0f39481af7c812f894ab/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=7498239e97b1cb7c049e0f39481af7c812f894ab", "patch": "@@ -1019,6 +1019,35 @@ optimize_specialization_lookup_p (tree tmpl)\n \t  && !DECL_FRIEND_P (DECL_TEMPLATE_RESULT (tmpl)));\n }\n \n+/* Make sure ARGS doesn't use any inappropriate typedefs; we should have\n+   gone through coerce_template_parms by now.  */\n+\n+static void\n+check_unstripped_args (tree args)\n+{\n+#ifdef ENABLE_CHECKING\n+  ++processing_template_decl;\n+  if (!any_dependent_template_arguments_p (args))\n+    {\n+      tree inner = INNERMOST_TEMPLATE_ARGS (args);\n+      for (int i = 0; i < TREE_VEC_LENGTH (inner); ++i)\n+\t{\n+\t  tree arg = TREE_VEC_ELT (inner, i);\n+\t  if (TREE_CODE (arg) == TEMPLATE_DECL)\n+\t    /* OK */;\n+\t  else if (TYPE_P (arg))\n+\t    gcc_assert (strip_typedefs (arg, NULL) == arg);\n+\t  else if (strip_typedefs (TREE_TYPE (arg), NULL) != TREE_TYPE (arg))\n+\t    /* Allow typedefs on the type of a non-type argument, since a\n+\t       parameter can have them.  */;\n+\t  else\n+\t    gcc_assert (strip_typedefs_expr (arg, NULL) == arg);\n+\t}\n+    }\n+  --processing_template_decl;\n+#endif\n+}\n+\n /* Retrieve the specialization (in the sense of [temp.spec] - a\n    specialization is either an instantiation or an explicit\n    specialization) of TMPL for the given template ARGS.  If there is\n@@ -1052,13 +1081,7 @@ retrieve_specialization (tree tmpl, tree args, hashval_t hash)\n \t\t  ? TMPL_PARMS_DEPTH (DECL_TEMPLATE_PARMS (tmpl))\n \t\t  : template_class_depth (DECL_CONTEXT (tmpl))));\n \n-#ifdef ENABLE_CHECKING\n-  /* We should have gone through coerce_template_parms by now.  */\n-  ++processing_template_decl;\n-  if (!any_dependent_template_arguments_p (args))\n-    gcc_assert (strip_typedefs_expr (args, NULL) == args);\n-  --processing_template_decl;\n-#endif\n+  check_unstripped_args (args);\n \n   if (optimize_specialization_lookup_p (tmpl))\n     {"}, {"sha": "956e5e408bbf76ff2683770ecb9d1b223be85d57", "filename": "gcc/testsuite/g++.dg/template/nontype27.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7498239e97b1cb7c049e0f39481af7c812f894ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7498239e97b1cb7c049e0f39481af7c812f894ab/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype27.C?ref=7498239e97b1cb7c049e0f39481af7c812f894ab", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/66255\n+\n+typedef int int_t;\n+\n+template <int_t &>\n+struct S { };\n+\n+int_t a;\n+S <a> b;"}]}