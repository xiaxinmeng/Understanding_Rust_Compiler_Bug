{"sha": "d1d81616ecc0fe14487a862ad25b64a83da6173b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDFkODE2MTZlY2MwZmUxNDQ4N2E4NjJhZDI1YjY0YTgzZGE2MTczYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T12:35:51Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-14T12:35:51Z"}, "message": "[multiple changes]\n\n2013-10-14  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Analyze_Global_Item): Allow\n\treferences to enclosing formal parameters.\n\n2013-10-14  Thomas Quinot  <quinot@adacore.com>\n\n\t* einfo.adb (Equivalent_Type): Add missing case\n\tE_Access_Subprogram_Type in guard (for remote access to\n\tsubprograms) * sem_ch8.adb (Find_Direct_Name, Find_Expanded_Name):\n\tAdd missing guards to account for the presence of RAS types\n\tthat have already been replaced with the corresponding fat\n\tpointer type.\n\nFrom-SVN: r203523", "tree": {"sha": "b0d13bbdbbe63efe8b881da9304449259c6a75ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0d13bbdbbe63efe8b881da9304449259c6a75ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d1d81616ecc0fe14487a862ad25b64a83da6173b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1d81616ecc0fe14487a862ad25b64a83da6173b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1d81616ecc0fe14487a862ad25b64a83da6173b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1d81616ecc0fe14487a862ad25b64a83da6173b/comments", "author": null, "committer": null, "parents": [{"sha": "54e28df21a7c44d4643353a1a3c9b042eabdfc20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e28df21a7c44d4643353a1a3c9b042eabdfc20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e28df21a7c44d4643353a1a3c9b042eabdfc20"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "1c86e5ccf188dc4b383015d01659d32bef561433", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1d81616ecc0fe14487a862ad25b64a83da6173b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1d81616ecc0fe14487a862ad25b64a83da6173b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d1d81616ecc0fe14487a862ad25b64a83da6173b", "patch": "@@ -1,3 +1,17 @@\n+2013-10-14  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Global_Item): Allow\n+\treferences to enclosing formal parameters.\n+\n+2013-10-14  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* einfo.adb (Equivalent_Type): Add missing case\n+\tE_Access_Subprogram_Type in guard (for remote access to\n+\tsubprograms) * sem_ch8.adb (Find_Direct_Name, Find_Expanded_Name):\n+\tAdd missing guards to account for the presence of RAS types\n+\tthat have already been replaced with the corresponding fat\n+\tpointer type.\n+\n 2013-10-14  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* aspects.adb: Add an entry in table Canonical_Aspect for"}, {"sha": "10b4aac2cd6c21508318590b48eaadd6535a3c23", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1d81616ecc0fe14487a862ad25b64a83da6173b/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1d81616ecc0fe14487a862ad25b64a83da6173b/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=d1d81616ecc0fe14487a862ad25b64a83da6173b", "patch": "@@ -1112,6 +1112,7 @@ package body Einfo is\n       pragma Assert\n         (Ekind_In (Id, E_Class_Wide_Type,\n                        E_Class_Wide_Subtype,\n+                       E_Access_Subprogram_Type,\n                        E_Access_Protected_Subprogram_Type,\n                        E_Anonymous_Access_Protected_Subprogram_Type,\n                        E_Access_Subprogram_Type,"}, {"sha": "c970192bfc49b8d91f0a965b6ec088df84e3b52e", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1d81616ecc0fe14487a862ad25b64a83da6173b/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1d81616ecc0fe14487a862ad25b64a83da6173b/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=d1d81616ecc0fe14487a862ad25b64a83da6173b", "patch": "@@ -4987,6 +4987,7 @@ package body Sem_Ch8 is\n \n          if Comes_From_Source (N)\n            and then Is_Remote_Access_To_Subprogram_Type (E)\n+           and then Ekind (E) = E_Access_Subprogram_Type\n            and then Expander_Active\n            and then Get_PCS_Name /= Name_No_DSA\n          then\n@@ -5488,6 +5489,7 @@ package body Sem_Ch8 is\n       <<Found>>\n       if Comes_From_Source (N)\n         and then Is_Remote_Access_To_Subprogram_Type (Id)\n+        and then Ekind (Id) = E_Access_Subprogram_Type\n         and then Present (Equivalent_Type (Id))\n       then\n          --  If we are not actually generating distribution code (i.e. the"}, {"sha": "09c0473cc7bcba901bdc4a3ca89579a11c9776fa", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d1d81616ecc0fe14487a862ad25b64a83da6173b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d1d81616ecc0fe14487a862ad25b64a83da6173b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d1d81616ecc0fe14487a862ad25b64a83da6173b", "patch": "@@ -1428,13 +1428,16 @@ package body Sem_Prag is\n \n             if Present (Item_Id) then\n \n-               --  A global item cannot reference a formal parameter. Do this\n-               --  check first to provide a better error diagnostic.\n+               --  A global item may denote a formal parameter of an enclosing\n+               --  subprogram. Do this check first to provide a better error\n+               --  diagnostic.\n \n                if Is_Formal (Item_Id) then\n-                  Error_Msg_N\n-                    (\"global item cannot reference formal parameter\", Item);\n-                  return;\n+                  if Scope (Item_Id) = Subp_Id then\n+                     Error_Msg_N\n+                       (\"global item cannot reference formal parameter\", Item);\n+                     return;\n+                  end if;\n \n                --  The only legal references are those to abstract states and\n                --  variables."}]}