{"sha": "5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM1YTY3ZTYxYmI4Yjk3ZjQ2ZWM2NTgxYTdkMTg3ZDg5ZmZjMmQ4OA==", "commit": {"author": {"name": "Wilco Dijkstra", "email": "wilco.dijkstra@arm.com", "date": "2020-11-19T16:14:11Z"}, "committer": {"name": "Wilco Dijkstra", "email": "wdijkstr@arm.com", "date": "2020-11-19T16:14:11Z"}, "message": "AArch64: Add cost table for Cortex-A76\n\nAdd an initial cost table for Cortex-A76 - this is copied from\ncotexa57_extra_costs but updated based on the Optimization Guide.\nUse the new cost table on all Neoverse tunings and ensure the tunings\nare consistent for all.  As a result more compact code is generated\nwith more combined shift+alu operations. Eg. -mcpu=cortex-a76 will now\nmerge the shifts in:\n\nint f(int x, int y) { return (x & y << 3) * (x | y << 3); }\n\nand  w2, w0, w1, lsl 3\norr  w0, w0, w1, lsl 3\nmul  w0, w2, w0\nret\n\nSPEC2017 codesize improves by 0.02% and SPECINT2017 shows 0.24% gain.\n\n2020-11-18  Wilco Dijkstra  <wdijkstr@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64.c (neoversen1_tunings): Use new\n\tcortexa76_extra_costs.\n\t(neoversev1_tunings): Likewise.\n\t(neoversen2_tunines): Likewise.\n\t* config/arm/aarch-cost-tables.h (cortexa76_extra_costs):\n\tadd new costs.", "tree": {"sha": "00dc4488dc3b41bae13d811ca808320a0d10e170", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00dc4488dc3b41bae13d811ca808320a0d10e170"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88/comments", "author": {"login": "Wilco1", "id": 58446312, "node_id": "MDQ6VXNlcjU4NDQ2MzEy", "avatar_url": "https://avatars.githubusercontent.com/u/58446312?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wilco1", "html_url": "https://github.com/Wilco1", "followers_url": "https://api.github.com/users/Wilco1/followers", "following_url": "https://api.github.com/users/Wilco1/following{/other_user}", "gists_url": "https://api.github.com/users/Wilco1/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wilco1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wilco1/subscriptions", "organizations_url": "https://api.github.com/users/Wilco1/orgs", "repos_url": "https://api.github.com/users/Wilco1/repos", "events_url": "https://api.github.com/users/Wilco1/events{/privacy}", "received_events_url": "https://api.github.com/users/Wilco1/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d77928fc49b4f2487fd78db26bbebd00f881414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d77928fc49b4f2487fd78db26bbebd00f881414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d77928fc49b4f2487fd78db26bbebd00f881414"}], "stats": {"total": 109, "additions": 106, "deletions": 3}, "files": [{"sha": "67c25878779c96657f37b1d342407deeaec9250c", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88", "patch": "@@ -1312,7 +1312,7 @@ static const struct tune_params thunderx3t110_tunings =\n \n static const struct tune_params neoversen1_tunings =\n {\n-  &cortexa57_extra_costs,\n+  &cortexa76_extra_costs,\n   &generic_addrcost_table,\n   &generic_regmove_cost,\n   &cortexa57_vector_cost,\n@@ -1338,7 +1338,7 @@ static const struct tune_params neoversen1_tunings =\n \n static const struct tune_params neoversev1_tunings =\n {\n-  &cortexa57_extra_costs,\n+  &cortexa76_extra_costs,\n   &generic_addrcost_table,\n   &generic_regmove_cost,\n   &cortexa57_vector_cost,\n@@ -1364,7 +1364,7 @@ static const struct tune_params neoversev1_tunings =\n \n static const struct tune_params neoversen2_tunings =\n {\n-  &cortexa57_extra_costs,\n+  &cortexa76_extra_costs,\n   &generic_addrcost_table,\n   &generic_regmove_cost,\n   &cortexa57_vector_cost,"}, {"sha": "1b9d53d07b54bddf1767121236b06d2b4581631c", "filename": "gcc/config/arm/aarch-cost-tables.h", "status": "modified", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faarch-cost-tables.h?ref=5c5a67e61bb8b97f46ec6581a7d187d89ffc2d88", "patch": "@@ -331,6 +331,109 @@ const struct cpu_cost_table cortexa57_extra_costs =\n   }\n };\n \n+const struct cpu_cost_table cortexa76_extra_costs =\n+{\n+  /* ALU */\n+  {\n+    0,                 /* arith.  */\n+    0,                 /* logical.  */\n+    0,                 /* shift.  */\n+    0,                  /* shift_reg.  */\n+    COSTS_N_INSNS (1), /* arith_shift.  */\n+    COSTS_N_INSNS (1), /* arith_shift_reg.  */\n+    0,\t\t       /* log_shift.  */\n+    COSTS_N_INSNS (1), /* log_shift_reg.  */\n+    0,                 /* extend.  */\n+    COSTS_N_INSNS (1), /* extend_arith.  */\n+    COSTS_N_INSNS (1), /* bfi.  */\n+    0,                 /* bfx.  */\n+    0,                 /* clz.  */\n+    0,                  /* rev.  */\n+    0,                 /* non_exec.  */\n+    true               /* non_exec_costs_exec.  */\n+  },\n+  {\n+    /* MULT SImode */\n+    {\n+      COSTS_N_INSNS (1),       /* simple.  */\n+      COSTS_N_INSNS (2),       /* flag_setting.  */\n+      COSTS_N_INSNS (1),       /* extend.  */\n+      COSTS_N_INSNS (1),       /* add.  */\n+      COSTS_N_INSNS (1),       /* extend_add.  */\n+      COSTS_N_INSNS (6)\t       /* idiv.  */\n+    },\n+    /* MULT DImode */\n+    {\n+      COSTS_N_INSNS (3),       /* simple.  */\n+      0,                       /* flag_setting (N/A).  */\n+      COSTS_N_INSNS (1),       /* extend.  */\n+      COSTS_N_INSNS (3),       /* add.  */\n+      COSTS_N_INSNS (1),       /* extend_add.  */\n+      COSTS_N_INSNS (10)       /* idiv.  */\n+    }\n+  },\n+  /* LD/ST */\n+  {\n+    COSTS_N_INSNS (3),         /* load.  */\n+    COSTS_N_INSNS (3),         /* load_sign_extend.  */\n+    COSTS_N_INSNS (3),         /* ldrd.  */\n+    COSTS_N_INSNS (2),         /* ldm_1st.  */\n+    1,                         /* ldm_regs_per_insn_1st.  */\n+    2,                         /* ldm_regs_per_insn_subsequent.  */\n+    COSTS_N_INSNS (4),         /* loadf.  */\n+    COSTS_N_INSNS (4),         /* loadd.  */\n+    COSTS_N_INSNS (5),         /* load_unaligned.  */\n+    0,                         /* store.  */\n+    0,                         /* strd.  */\n+    0,                         /* stm_1st.  */\n+    1,                         /* stm_regs_per_insn_1st.  */\n+    2,                         /* stm_regs_per_insn_subsequent.  */\n+    0,                         /* storef.  */\n+    0,                         /* stored.  */\n+    COSTS_N_INSNS (1),         /* store_unaligned.  */\n+    COSTS_N_INSNS (1),         /* loadv.  */\n+    COSTS_N_INSNS (1)          /* storev.  */\n+  },\n+  {\n+    /* FP SFmode */\n+    {\n+      COSTS_N_INSNS (10),      /* div.  */\n+      COSTS_N_INSNS (2),       /* mult.  */\n+      COSTS_N_INSNS (3),       /* mult_addsub.  */\n+      COSTS_N_INSNS (3),       /* fma.  */\n+      COSTS_N_INSNS (1),       /* addsub.  */\n+      0,                       /* fpconst.  */\n+      0,                       /* neg.  */\n+      0,                       /* compare.  */\n+      COSTS_N_INSNS (1),       /* widen.  */\n+      COSTS_N_INSNS (1),       /* narrow.  */\n+      COSTS_N_INSNS (1),       /* toint.  */\n+      COSTS_N_INSNS (1),       /* fromint.  */\n+      COSTS_N_INSNS (1)        /* roundint.  */\n+    },\n+    /* FP DFmode */\n+    {\n+      COSTS_N_INSNS (15),      /* div.  */\n+      COSTS_N_INSNS (2),       /* mult.  */\n+      COSTS_N_INSNS (3),       /* mult_addsub.  */\n+      COSTS_N_INSNS (3),       /* fma.  */\n+      COSTS_N_INSNS (1),       /* addsub.  */\n+      0,                       /* fpconst.  */\n+      0,                       /* neg.  */\n+      0,                       /* compare.  */\n+      COSTS_N_INSNS (1),       /* widen.  */\n+      COSTS_N_INSNS (1),       /* narrow.  */\n+      COSTS_N_INSNS (1),       /* toint.  */\n+      COSTS_N_INSNS (1),       /* fromint.  */\n+      COSTS_N_INSNS (1)        /* roundint.  */\n+    }\n+  },\n+  /* Vector */\n+  {\n+    COSTS_N_INSNS (1)  /* alu.  */\n+  }\n+};\n+\n const struct cpu_cost_table exynosm1_extra_costs =\n {\n   /* ALU */"}]}