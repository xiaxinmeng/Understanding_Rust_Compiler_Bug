{"sha": "a713e7bb72617e88e9b2b64cecaffae7499146fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTcxM2U3YmI3MjYxN2U4OGU5YjJiNjRjZWNhZmZhZTc0OTkxNDZmYg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2017-09-09T12:48:41Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2017-09-09T12:48:41Z"}, "message": "decl.c (components_to_record): Do not reorder in non- packed record types if...\n\n\t* gcc-interface/decl.c (components_to_record): Do not reorder in non-\n\tpacked record types if pragma Optimize_Alignment (Space) is enabled.\n\nFrom-SVN: r251936", "tree": {"sha": "6d468691713b6d0709526d1f49beecc5af7f9704", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d468691713b6d0709526d1f49beecc5af7f9704"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a713e7bb72617e88e9b2b64cecaffae7499146fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a713e7bb72617e88e9b2b64cecaffae7499146fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a713e7bb72617e88e9b2b64cecaffae7499146fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a713e7bb72617e88e9b2b64cecaffae7499146fb/comments", "author": null, "committer": null, "parents": [{"sha": "3d25b3ba49e73ea62920786f1785db6cfc4daa85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d25b3ba49e73ea62920786f1785db6cfc4daa85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d25b3ba49e73ea62920786f1785db6cfc4daa85"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "e929eff15fa18ef0f96867621e43390c6a43934f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a713e7bb72617e88e9b2b64cecaffae7499146fb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a713e7bb72617e88e9b2b64cecaffae7499146fb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a713e7bb72617e88e9b2b64cecaffae7499146fb", "patch": "@@ -1,3 +1,8 @@\n+2017-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/decl.c (components_to_record): Do not reorder in non-\n+\tpacked record types if pragma Optimize_Alignment (Space) is enabled.\n+\n 2017-09-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/trans.c (Subprogram_Body_to_gnu): Disregard inlining"}, {"sha": "569e64db626a0983b2d40d0653d979897d9a6d5a", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a713e7bb72617e88e9b2b64cecaffae7499146fb/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a713e7bb72617e88e9b2b64cecaffae7499146fb/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=a713e7bb72617e88e9b2b64cecaffae7499146fb", "patch": "@@ -7683,7 +7683,9 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n      of a byte, so that they don't cause the regular fields to be either at\n      self-referential/variable offset or misaligned.  Note, in the latter\n      case, that this can only happen in packed record types so the alignment\n-     is effectively capped to the byte for the whole record.\n+     is effectively capped to the byte for the whole record.  But we don't\n+     do it for non-packed record types if pragma Optimize_Alignment (Space)\n+     is specified because this can prevent alignment gaps from being filled.\n \n      Optionally, if the layout warning is enabled, keep track of the above 4\n      different kinds of fields and issue a warning if some of them would be\n@@ -7694,6 +7696,8 @@ components_to_record (Node_Id gnat_component_list, Entity_Id gnat_record_type,\n   const bool do_reorder\n     = (Convention (gnat_record_type) == Convention_Ada\n        && !No_Reordering (gnat_record_type)\n+       && (!Optimize_Alignment_Space (gnat_record_type)\n+\t   || Is_Packed (gnat_record_type))\n        && !debug__debug_flag_dot_r);\n   const bool w_reorder\n     = (Convention (gnat_record_type) == Convention_Ada"}]}