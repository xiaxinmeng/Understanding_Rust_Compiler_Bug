{"sha": "5c64181d62bb816b8c2c91e251cee7e2b597f244", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM2NDE4MWQ2MmJiODE2YjhjMmM5MWUyNTFjZWU3ZTJiNTk3ZjI0NA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-09-30T16:20:56Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-09-30T16:20:56Z"}, "message": "Remove global call sets: loop-iv.c\n\nSimilar idea to the combine.c and gcse.c patches.\n\n2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* loop-iv.c: Include regs.h and function-abi.h.\n\t(simplify_using_initial_values): Use insn_callee_abi to get the\n\tABI of the call insn target.  Conservatively assume that\n\tpartially-clobbered registers are altered.\n\nFrom-SVN: r276326", "tree": {"sha": "ea59ccb17df7d0341fee51fa3f2ded631a6881ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea59ccb17df7d0341fee51fa3f2ded631a6881ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c64181d62bb816b8c2c91e251cee7e2b597f244", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c64181d62bb816b8c2c91e251cee7e2b597f244", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c64181d62bb816b8c2c91e251cee7e2b597f244", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c64181d62bb816b8c2c91e251cee7e2b597f244/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c47622219d6386807b26890dcdc84f192499d33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c47622219d6386807b26890dcdc84f192499d33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c47622219d6386807b26890dcdc84f192499d33"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "1129ec5daeef0ba0a0b65a422c9c079fcafb2ae6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c64181d62bb816b8c2c91e251cee7e2b597f244/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c64181d62bb816b8c2c91e251cee7e2b597f244/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c64181d62bb816b8c2c91e251cee7e2b597f244", "patch": "@@ -1,3 +1,10 @@\n+2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* loop-iv.c: Include regs.h and function-abi.h.\n+\t(simplify_using_initial_values): Use insn_callee_abi to get the\n+\tABI of the call insn target.  Conservatively assume that\n+\tpartially-clobbered registers are altered.\n+\n 2019-09-30  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* function-abi.h (call_clobbers_in_region): Declare."}, {"sha": "d0e69940c723c46f8b78103c87c9595c370e3958", "filename": "gcc/loop-iv.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c64181d62bb816b8c2c91e251cee7e2b597f244/gcc%2Floop-iv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c64181d62bb816b8c2c91e251cee7e2b597f244/gcc%2Floop-iv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-iv.c?ref=5c64181d62bb816b8c2c91e251cee7e2b597f244", "patch": "@@ -62,6 +62,8 @@ along with GCC; see the file COPYING3.  If not see\n #include \"dumpfile.h\"\n #include \"rtl-iter.h\"\n #include \"tree-ssa-loop-niter.h\"\n+#include \"regs.h\"\n+#include \"function-abi.h\"\n \n /* Possible return values of iv_get_reaching_def.  */\n \n@@ -1972,8 +1974,14 @@ simplify_using_initial_values (class loop *loop, enum rtx_code op, rtx *expr)\n \t  CLEAR_REG_SET (this_altered);\n \t  note_stores (insn, mark_altered, this_altered);\n \t  if (CALL_P (insn))\n-\t    /* Kill all call clobbered registers.  */\n-\t    IOR_REG_SET_HRS (this_altered, regs_invalidated_by_call);\n+\t    {\n+\t      /* Kill all registers that might be clobbered by the call.\n+\t\t We don't track modes of hard registers, so we need to be\n+\t\t conservative and assume that partial kills are full kills.  */\n+\t      function_abi callee_abi = insn_callee_abi (insn);\n+\t      IOR_REG_SET_HRS (this_altered,\n+\t\t\t       callee_abi.full_and_partial_reg_clobbers ());\n+\t    }\n \n \t  if (suitable_set_for_replacement (insn, &dest, &src))\n \t    {"}]}