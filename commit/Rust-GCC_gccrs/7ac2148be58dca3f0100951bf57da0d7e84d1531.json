{"sha": "7ac2148be58dca3f0100951bf57da0d7e84d1531", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FjMjE0OGJlNThkY2EzZjAxMDA5NTFiZjU3ZGEwZDdlODRkMTUzMQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@cygnus.com", "date": "1998-09-17T13:55:51Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1998-09-17T13:55:51Z"}, "message": "[multiple changes]\n\nThu Sep 17 16:42:16 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n        * except.c (start_catch_handler): Issue 'fatal' instead of 'error' and\n        re-align some code.\n        * libgcc2.c (__eh_rtime_match): fprintf a runtime error. Use <stdio.h>.\n1998-09-17  Andrew MacLeod  <amacleod@cygnus.com>\n        * exception.cc (__cplus_type_matcher): realign some code.\n\nFrom-SVN: r22462", "tree": {"sha": "295181099ed36b8734ecb3f2417fcaaccc96a9be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/295181099ed36b8734ecb3f2417fcaaccc96a9be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ac2148be58dca3f0100951bf57da0d7e84d1531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac2148be58dca3f0100951bf57da0d7e84d1531", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ac2148be58dca3f0100951bf57da0d7e84d1531", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ac2148be58dca3f0100951bf57da0d7e84d1531/comments", "author": null, "committer": null, "parents": [{"sha": "005dda25ff98c6762242f1eaa20eb8795f30a766", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/005dda25ff98c6762242f1eaa20eb8795f30a766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/005dda25ff98c6762242f1eaa20eb8795f30a766"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "82f31f561f5f76ab7328a894f73d6cc9803bc3de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ac2148be58dca3f0100951bf57da0d7e84d1531", "patch": "@@ -1,3 +1,9 @@\n+Thu Sep 17 16:42:16 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n+\n+\t* except.c (start_catch_handler): Issue 'fatal' instead of 'error' and\n+\tre-align some code.\n+\t* libgcc2.c (__eh_rtime_match): fprintf a runtime error. Use <stdio.h>.\n+\n Thu Sep 17 12:24:33 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* regmove.c (copy_src_to_dest): Check that modes match."}, {"sha": "06cb294004ea5eb7ad4fa4f086c285f1bf9c28ce", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=7ac2148be58dca3f0100951bf57da0d7e84d1531", "patch": "@@ -1,3 +1,7 @@\n+1998-09-17  Andrew MacLeod  <amacleod@cygnus.com>\n+\n+\t* exception.cc (__cplus_type_matcher): realign some code.\n+\n 1998-09-16  Mark Mitchell  <mark@markmitchell.com>\n \n \t* Make-lang.in (tinfo.o): Use CXXFLAGS when compiling."}, {"sha": "05b431521ccb1ee2fd9128bc9a137a5313dfbc13", "filename": "gcc/cp/exception.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2Fcp%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2Fcp%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexception.cc?ref=7ac2148be58dca3f0100951bf57da0d7e84d1531", "patch": "@@ -158,8 +158,8 @@ __cplus_type_matcher (cp_eh_info *info, rtimetype match_info,\n   void *ret;\n \n   /* No exception table implies the old style mechanism, so don't check. */\n-  if (exception_table != NULL && \n-                        exception_table->lang.language != EH_LANG_C_plus_plus)\n+  if (exception_table != NULL \n+      && exception_table->lang.language != EH_LANG_C_plus_plus)\n     return NULL;\n \n   if (match_info == CATCH_ALL_TYPE)"}, {"sha": "2ac0217e26358f0512ba7d0cf256639b339ed33b", "filename": "gcc/except.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=7ac2148be58dca3f0100951bf57da0d7e84d1531", "patch": "@@ -1622,16 +1622,16 @@ start_catch_handler (rtime)\n       rtx call_rtx, rtime_address;\n \n       if (catchstack.top->entry->false_label != NULL_RTX)\n-        error (\"never issued previous false_label\");\n+        fatal (\"Compiler Bug: Never issued previous false_label\");\n       catchstack.top->entry->false_label = gen_exception_label ();\n \n       rtime_address = expand_expr (rtime, NULL_RTX, Pmode, EXPAND_INITIALIZER);\n       rtime_address = force_reg (Pmode, rtime_address);\n \n       /* Now issue the call, and branch around handler if needed */\n-      call_rtx = emit_library_call_value (\n-        gen_rtx_SYMBOL_REF (Pmode, \"__eh_rtime_match\"), NULL_RTX, \n-                                        0, SImode, 1, rtime_address, Pmode);\n+      call_rtx = emit_library_call_value \n+        (gen_rtx_SYMBOL_REF (Pmode, \"__eh_rtime_match\"), NULL_RTX, \n+         0, SImode, 1, rtime_address, Pmode);\n \n       /* Did the function return true? */\n       emit_cmp_insn (call_rtx, const0_rtx, EQ, NULL_RTX,"}, {"sha": "1e5947bb5e3c0fa0f6a4f1d302fe63b9b511a838", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ac2148be58dca3f0100951bf57da0d7e84d1531/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=7ac2148be58dca3f0100951bf57da0d7e84d1531", "patch": "@@ -3058,6 +3058,7 @@ __empty ()\n /* Include definitions of EH context and table layout */\n \n #include \"eh-common.h\"\n+#include <stdio.h>\n \n /* This is a safeguard for dynamic handler chain. */\n \n@@ -3364,10 +3365,15 @@ __eh_rtime_match (void *rtime)\n \n   info = *(__get_eh_info ());\n   matcher = ((__eh_info *)info)->match_function;\n-  if (!matcher)\n-    perror (\"No runtime type matcher available\");\n+#ifndef inhibit_libc\n+  if (! matcher)\n+    {\n+      fprintf (stderr, \"Internal Compiler Bug: No runtime type matcher.\");\n+      return 0;\n+    }\n+#endif\n   ret = (*matcher) (info, rtime, (void *)0);\n-  return ((int)ret);\n+  return (ret != NULL);\n }\n \n /* This value identifies the place from which an exception is being"}]}