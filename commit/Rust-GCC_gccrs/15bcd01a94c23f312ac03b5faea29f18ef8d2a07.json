{"sha": "15bcd01a94c23f312ac03b5faea29f18ef8d2a07", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTViY2QwMWE5NGMyM2YzMTJhYzAzYjVmYWVhMjlmMThlZjhkMmEwNw==", "commit": {"author": {"name": "Kewen Lin", "email": "linkw@linux.ibm.com", "date": "2020-11-06T13:45:06Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2020-11-06T13:47:44Z"}, "message": "testsuite: fix malloc alignment in test\n\ngcc/testsuite/ChangeLog:\n\n\tPR gcov-profile/97461\n\t* gcc.dg/tree-prof/pr97461.c: Return aligned memory.", "tree": {"sha": "fb2822770cea64bc1356a93efbf8da3cc05ba820", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb2822770cea64bc1356a93efbf8da3cc05ba820"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/15bcd01a94c23f312ac03b5faea29f18ef8d2a07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15bcd01a94c23f312ac03b5faea29f18ef8d2a07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15bcd01a94c23f312ac03b5faea29f18ef8d2a07", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15bcd01a94c23f312ac03b5faea29f18ef8d2a07/comments", "author": {"login": "jedilyn", "id": 38515402, "node_id": "MDQ6VXNlcjM4NTE1NDAy", "avatar_url": "https://avatars.githubusercontent.com/u/38515402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jedilyn", "html_url": "https://github.com/jedilyn", "followers_url": "https://api.github.com/users/jedilyn/followers", "following_url": "https://api.github.com/users/jedilyn/following{/other_user}", "gists_url": "https://api.github.com/users/jedilyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/jedilyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jedilyn/subscriptions", "organizations_url": "https://api.github.com/users/jedilyn/orgs", "repos_url": "https://api.github.com/users/jedilyn/repos", "events_url": "https://api.github.com/users/jedilyn/events{/privacy}", "received_events_url": "https://api.github.com/users/jedilyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c27f900950ed0ecb2897a8931c5cc348b1980be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c27f900950ed0ecb2897a8931c5cc348b1980be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c27f900950ed0ecb2897a8931c5cc348b1980be"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "213fac9af042203eb5509efdcc740f53cab62c45", "filename": "gcc/testsuite/gcc.dg/tree-prof/pr97461.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/15bcd01a94c23f312ac03b5faea29f18ef8d2a07/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr97461.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/15bcd01a94c23f312ac03b5faea29f18ef8d2a07/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr97461.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-prof%2Fpr97461.c?ref=15bcd01a94c23f312ac03b5faea29f18ef8d2a07", "patch": "@@ -20,7 +20,13 @@ static const fun_t funs[2] = { f1, f2, };\n \n static void * malloc_impl(size_t size) {\n     void * r = &memory[memory_p];\n-    memory_p += size;\n+    /* The malloc() and calloc() functions return a pointer to the allocated\n+     * memory, which is suitably aligned for any built-in type.  Use 16\n+     * bytes here as the basic alignment requirement for user-defined malloc\n+     * and calloc.  See PR97594 for the details.  */\n+    #define ROUND_UP_FOR_16B_ALIGNMENT(x) ((x + 15) & (-16))\n+\n+    memory_p += ROUND_UP_FOR_16B_ALIGNMENT(size);\n \n     // force TOPN profile\n     funs[size % 2]();"}]}