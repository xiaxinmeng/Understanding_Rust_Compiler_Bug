{"sha": "338f21bef385f3d242fe9b00776eddded605df3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzM4ZjIxYmVmMzg1ZjNkMjQyZmU5YjAwNzc2ZWRkZGVkNjA1ZGYzZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-08T01:06:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-03-08T01:06:13Z"}, "message": "(print_symbol): The index field of a global symbol is the symbol table index of the corresponding local symbol...\n\n(print_symbol): The index field of a global symbol\nis the symbol table index of the corresponding local symbol, not\nan index into the aux table.\n(print_file_desc): Print out size of line number\ninformation rather than repeating line number count.\n(print_file_desc): The cbLineOffset field of a PDR\nis relative to the cbLineOffset field of the FDR.  Also, when\ncomputing line_end of the last PDR, use cbLineOffset, not\nilineBase.\n\nFrom-SVN: r6711", "tree": {"sha": "457a104922a40edafb5adfa136dcc8b9459418c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/457a104922a40edafb5adfa136dcc8b9459418c0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/338f21bef385f3d242fe9b00776eddded605df3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338f21bef385f3d242fe9b00776eddded605df3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/338f21bef385f3d242fe9b00776eddded605df3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/338f21bef385f3d242fe9b00776eddded605df3e/comments", "author": null, "committer": null, "parents": [{"sha": "d71cf0ca692224ab69c88f2979b8c5ecb6aae3a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d71cf0ca692224ab69c88f2979b8c5ecb6aae3a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d71cf0ca692224ab69c88f2979b8c5ecb6aae3a7"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "843aa937c6e021e07e85bef37ebb58eebf18c60c", "filename": "gcc/mips-tdump.c", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/338f21bef385f3d242fe9b00776eddded605df3e/gcc%2Fmips-tdump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/338f21bef385f3d242fe9b00776eddded605df3e/gcc%2Fmips-tdump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmips-tdump.c?ref=338f21bef385f3d242fe9b00776eddded605df3e", "patch": "@@ -957,11 +957,7 @@ print_symbol (sym_ptr, number, strbase, aux_base, ifd)\n \t\t    aux_base[index].isym, type_to_string (aux_base, index+1));\n \t  }\n \telse\t\t\t/* global symbol */\n-\t  {\n-\t    used_ptr[index] = 1;\n-\t    printf (\"      Type: %s\\n\",\n-\t\t    type_to_string (aux_base, index));\n-\t  }\n+\t  printf (\"      Local symbol: %d\\n\", index);\n \n \tif (want_scope)\n \t  {\n@@ -1161,7 +1157,7 @@ print_file_desc (fdp, number)\n \t width, \"Line numbers\",\n \t (ulong) fdp->cbLineOffset,\n \t (ulong) fdp->cline,\n-\t (ulong) fdp->cline,\n+\t (ulong) fdp->cbLine,\n \t (ulong) (fdp->cbLineOffset + sym_hdr.cbLineOffset));\n \n   printf(\"    %-*s %11lu %11lu %11lu %11lu\\n\",\n@@ -1294,14 +1290,15 @@ print_file_desc (fdp, number)\n \t{\n \t  int delta, count;\n \t  long cur_line = proc_ptr->lnLow;\n-\t  uchar *line_ptr = ((uchar *)lines) + proc_ptr->cbLineOffset;\n+\t  uchar *line_ptr = (((uchar *)lines) + proc_ptr->cbLineOffset\n+\t\t\t     + fdp->cbLineOffset);\n \t  uchar *line_end;\n \n \t  if (pdi == fdp->cpd + fdp->ipdFirst - 1)\t/* last procedure */\n-\t    line_end = ((uchar *)lines) + fdp->cbLine + fdp->ilineBase;\n+\t    line_end = ((uchar *)lines) + fdp->cbLine + fdp->cbLineOffset;\n \t  else\t\t\t\t\t\t/* not last proc. */\n-\t    line_end = ((uchar *)lines) + proc_desc[pdi+1].cbLineOffset;\n-\n+\t    line_end = (((uchar *)lines) + proc_desc[pdi+1].cbLineOffset\n+\t\t\t+ fdp->cbLineOffset);\n \n \t  printf (\"\\n\\tThere are %lu bytes holding line numbers, starting at %lu.\\n\",\n \t\t  (ulong) (line_end - line_ptr),"}]}