{"sha": "74eda121a8933438065df8444ea5b3cdb53ad6f0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRlZGExMjFhODkzMzQzODA2NWRmODQ0NGVhNWIzY2RiNTNhZDZmMA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2003-06-04T17:33:51Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2003-06-04T17:33:51Z"}, "message": "alpha.c (print_operand_address): Fix format specifier warnings.\n\n\t* alpha.c (print_operand_address): Fix format specifier warnings.\n\t* alpha/elf.h (ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n\t* alpha/vms.h (ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n\t* arm/aof.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL): Likewise.\n\t* arm/pe.h (ASM_OUTPUT_COMMON): Likewise.\n\t* avr.h (ASM_OUTPUT_COMMON, ASM_GENERATE_INTERNAL_LABEL,\n\tASM_OUTPUT_SKIP): Likewise.\n\t* c4x.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t* dsp16xx.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t* h8300.h (ASM_GENERATE_INTERNAL_LABEL, ASM_OUTPUT_COMMON):\n\tLikewise.\n\t* i370.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t* i386/cygming.h (ASM_OUTPUT_COMMON): Likewise.\n\t* i386/darwin.h (ASM_OUTPUT_COMMON): Likewise.\n\t* i960.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t* m68k/hp320.h (PRINT_OPERAND_ADDRESS): Likewise.\n\t* mcore.h (ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n\t* pdp11.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t* ptx4.h (ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n\t* sparc/freebsd.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t* svr3.h (ASM_OUTPUT_COMMON): Likewise.\n\nFrom-SVN: r67453", "tree": {"sha": "3e46cc5c5f8807b11792938088c11bb162404dbb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e46cc5c5f8807b11792938088c11bb162404dbb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74eda121a8933438065df8444ea5b3cdb53ad6f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74eda121a8933438065df8444ea5b3cdb53ad6f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74eda121a8933438065df8444ea5b3cdb53ad6f0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74eda121a8933438065df8444ea5b3cdb53ad6f0/comments", "author": null, "committer": null, "parents": [{"sha": "e3091a5f95cfd2130771ebf7cc8535c573d50875", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3091a5f95cfd2130771ebf7cc8535c573d50875", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3091a5f95cfd2130771ebf7cc8535c573d50875"}], "stats": {"total": 70, "additions": 47, "deletions": 23}, "files": [{"sha": "7de4ca482bd1805097cab0b84c3101c3b6abaf20", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1,3 +1,27 @@\n+2003-06-04  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* alpha.c (print_operand_address): Fix format specifier warnings.\n+\t* alpha/elf.h (ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n+\t* alpha/vms.h (ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n+\t* arm/aof.h (ASM_OUTPUT_COMMON, ASM_OUTPUT_LOCAL): Likewise.\n+\t* arm/pe.h (ASM_OUTPUT_COMMON): Likewise.\n+\t* avr.h (ASM_OUTPUT_COMMON, ASM_GENERATE_INTERNAL_LABEL,\n+\tASM_OUTPUT_SKIP): Likewise. \n+\t* c4x.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* dsp16xx.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* h8300.h (ASM_GENERATE_INTERNAL_LABEL, ASM_OUTPUT_COMMON):\n+\tLikewise.\n+\t* i370.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* i386/cygming.h (ASM_OUTPUT_COMMON): Likewise.\n+\t* i386/darwin.h (ASM_OUTPUT_COMMON): Likewise.\n+\t* i960.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* m68k/hp320.h (PRINT_OPERAND_ADDRESS): Likewise.\n+\t* mcore.h (ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n+\t* pdp11.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* ptx4.h (ASM_OUTPUT_ALIGNED_COMMON): Likewise.\n+\t* sparc/freebsd.h (ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t* svr3.h (ASM_OUTPUT_COMMON): Likewise.\n+\n 2003-06-04  J\"orn Rennecke <joern.rennecke@superh.com>\n \n \t* c-decl.c (c_init_decl_processing): Clear input_file_name"}, {"sha": "eef95ba05e94d06329441ba37785801092aa3e47", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -6146,7 +6146,7 @@ print_operand_address (file, addr)\n \t   && GET_CODE (XEXP (addr, 0)) == PLUS\n \t   && GET_CODE (XEXP (XEXP (addr, 0), 0)) == SYMBOL_REF)\n     {\n-      fprintf (file, \"%s+%d\",\n+      fprintf (file, \"%s+\" HOST_WIDE_INT_PRINT_DEC,\n \t       XSTR (XEXP (XEXP (addr, 0), 0), 0),\n \t       INTVAL (XEXP (XEXP (addr, 0), 1)));\n       return;"}, {"sha": "2ee0f071b4aa5d748b484686f145fcf8d48947e8", "filename": "gcc/config/alpha/elf.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Falpha%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Falpha%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Felf.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -132,7 +132,7 @@ do {\t\t\t\t\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n   assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-  fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n+  fprintf ((FILE), \",\" HOST_WIDE_INT_PRINT_UNSIGNED \",%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n } while (0)\n \n /* This says how to output assembler code to declare an"}, {"sha": "698e24941aec82038cd3075e1c95fb07f6ef9498", "filename": "gcc/config/alpha/vms.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Falpha%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Falpha%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Fvms.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -315,7 +315,7 @@ extern void literals_section\tPARAMS ((void));\n do {\t\t\t\t\t\t\t\t\t\\\n   fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n   assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-  fprintf ((FILE), \",%u,%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n+  fprintf ((FILE), \",\" HOST_WIDE_INT_PRINT_UNSIGNED \",%u\\n\", (SIZE), (ALIGN) / BITS_PER_UNIT);\t\\\n } while (0)\n \n \f"}, {"sha": "ef0a6faa186dfa8ab922282285cfbadac4dfd0b4", "filename": "gcc/config/arm/aof.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Farm%2Faof.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Farm%2Faof.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Faof.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -207,14 +207,14 @@ do\t\t\t\t\t\\\n    fprintf ((STREAM), \"\\tAREA \"),\t\t\t\t\\\n    assemble_name ((STREAM), (NAME)),\t\t\t\t\\\n    fprintf ((STREAM), \", DATA, COMMON\\n\\t%% %d\\t%s size=%d\\n\",\t\\\n-\t    (ROUNDED), ASM_COMMENT_START, (int)SIZE))\n+\t    (int)(ROUNDED), ASM_COMMENT_START, (int)(SIZE)))\n \n #define ASM_OUTPUT_LOCAL(STREAM,NAME,SIZE,ROUNDED)\t\\\n    (zero_init_section (),\t\t\t\t\\\n     assemble_name ((STREAM), (NAME)),\t\t\t\\\n     fprintf ((STREAM), \"\\n\"),\t\t\t\t\\\n     fprintf ((STREAM), \"\\t%% %d\\t%s size=%d\\n\",\t\t\\\n-\t     (ROUNDED), ASM_COMMENT_START, (int)SIZE))\n+\t     (int)(ROUNDED), ASM_COMMENT_START, (int)(SIZE)))\n \n /* Output and Generation of Labels */\n "}, {"sha": "471676ee03543e130317ba32942de2cbaf648c14", "filename": "gcc/config/arm/pe.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Farm%2Fpe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Farm%2Fpe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fpe.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -147,7 +147,7 @@\n \t  fprintf ((STREAM), \"\\t.comm\\t\"); \t\t\\\n \t  assemble_name ((STREAM), (NAME));\t\t\\\n \t  asm_fprintf ((STREAM), \", %d\\t%@ %d\\n\",\t\\\n-\t\t   (ROUNDED), (SIZE));\t\t\t\\\n+ \t\t   (int)(ROUNDED), (int)(SIZE));\t\\\n \t}\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\\\n   while (0)"}, {"sha": "0d82c139d02dd826d07cbbc758384ec49b33a5d2", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1771,7 +1771,7 @@ progmem_section ()\t\t\t\t\t\t\t      \\\n do {\t\t\t\t\t\t\t\t\t   \\\n      fputs (\"\\t.comm \", (STREAM));\t\t\t\t\t   \\\n      assemble_name ((STREAM), (NAME));\t\t\t\t\t   \\\n-     fprintf ((STREAM), \",%d,1\\n\", (SIZE));\t\t\t\t   \\\n+     fprintf ((STREAM), \",%lu,1\\n\", (unsigned long)(SIZE));\t\t   \\\n } while (0)\n /* A C statement (sans semicolon) to output to the stdio stream\n    STREAM the assembler definition of a common-label named NAME whose\n@@ -2000,7 +2000,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n    be emitted as one-only.  */\n \n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM)\t\\\n-sprintf (STRING, \"*.%s%d\", PREFIX, NUM)\n+sprintf (STRING, \"*.%s%lu\", PREFIX, (unsigned long)(NUM))\n /* A C statement to store into the string STRING a label whose name\n    is made from the string PREFIX and the number NUM.\n \n@@ -2193,7 +2193,7 @@ sprintf (STRING, \"*.%s%d\", PREFIX, NUM)\n    of the jump-table.  */\n \n #define ASM_OUTPUT_SKIP(STREAM, N)\t\t\\\n-fprintf (STREAM, \"\\t.skip %d,0\\n\", (int)N)\n+fprintf (STREAM, \"\\t.skip %lu,0\\n\", (unsigned long)(N))\n /* A C statement to output to the stdio stream STREAM an assembler\n    instruction to advance the location counter by NBYTES bytes.\n    Those bytes should be zero when loaded.  NBYTES will be a C"}, {"sha": "70c2afcdbc80287485ec25ea78da69a683813645", "filename": "gcc/config/c4x/c4x.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fc4x%2Fc4x.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fc4x%2Fc4x.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fc4x%2Fc4x.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1615,7 +1615,7 @@ c4x_file_end (FILE)\n    This is suitable for output with `assemble_name'.  */\n \n #define ASM_GENERATE_INTERNAL_LABEL(BUFFER, PREFIX, NUM) \\\n-    sprintf (BUFFER, \"*%s%d\", PREFIX, NUM)\n+    sprintf (BUFFER, \"*%s%lu\", PREFIX, (unsigned long)(NUM))\n \n /* A C statement to output to the stdio stream STREAM assembler code which\n    defines (equates) the symbol NAME to have the value VALUE.  */"}, {"sha": "5f2a63a3c89939a16ddfef60daabcae633e664f7", "filename": "gcc/config/dsp16xx/dsp16xx.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdsp16xx%2Fdsp16xx.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1615,7 +1615,7 @@ extern struct dsp16xx_frame_info current_frame_info;\n    PREFIX is the class of label and NUM is the number within the class.\n    This is suitable for output with `assemble_name'.  */\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n-  sprintf (LABEL, \"*%s%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*%s%lu\", PREFIX, (unsigned long)(NUM))\n \n \f\n /* OUTPUT OF ASSEMBLER INSTRUCTIONS */"}, {"sha": "3225b2cce277d2c907c9dd090d50fdcbe5245672", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1140,7 +1140,7 @@ struct cum_arg\n    N.B.: The h8300.md branch_true and branch_false patterns also know\n    how to generate internal labels.  */\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\\\n-  sprintf (LABEL, \"*.%s%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*.%s%lu\", PREFIX, (unsigned long)(NUM))\n \n /* This is how to output an insn to push a register on the stack.\n    It need not be very fast code.  */\n@@ -1187,7 +1187,7 @@ struct cum_arg\n #define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)\t\\\n ( fputs (\"\\t.comm \", (FILE)),\t\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\t\\\n-  fprintf ((FILE), \",%d\\n\", (SIZE)))\n+  fprintf ((FILE), \",%lu\\n\", (unsigned long)(SIZE)))\n \n /* This says how to output the assembler to define a global\n    uninitialized but not common symbol."}, {"sha": "6dedc04ad3322c6d4c0ef84070c3e9217307f3c7", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1074,7 +1074,7 @@ enum reg_class\n }\n \n #define ASM_GENERATE_INTERNAL_LABEL(LABEL, PREFIX, NUM)\t\t\t\\\n-  sprintf (LABEL, \"*%s%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*%s%lu\", PREFIX, (unsigned long)(NUM))\n \n /* Generate case label.  For HLASM we can change to the data CSECT\n    and put the vectors out of the code body. The assembler just"}, {"sha": "d6f2a85319b78123124e1948265e641c497b56ec", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -206,7 +206,7 @@ do {\t\t\t\t\t\t\t\\\n       fprintf ((STREAM), \"\\t.comm\\t\"); \t\t\t\\\n       assemble_name ((STREAM), (NAME));\t\t\t\\\n       fprintf ((STREAM), \", %d\\t%s %d\\n\",\t\t\\\n-\t       (ROUNDED), ASM_COMMENT_START, (SIZE));\t\\\n+\t       (int)(ROUNDED), ASM_COMMENT_START, (int)(SIZE));\t\\\n     }\t\t\t\t\t\t\t\\\n } while (0)\n "}, {"sha": "2e68be81c6f6282116dc6d47f191ff00c1d2fa9d", "filename": "gcc/config/i386/darwin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fi386%2Fdarwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fi386%2Fdarwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdarwin.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -101,7 +101,7 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)  \\\n ( fputs (\".comm \", (FILE)),\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\\\n-  fprintf ((FILE), \",%u\\n\", (ROUNDED)))\n+  fprintf ((FILE), \",%lu\\n\", (unsigned long)(ROUNDED)))\n \n /* This says how to output an assembler line\n    to define a local common symbol.  */"}, {"sha": "230cb5d3e2527fe2be4a3e7e281a14afb9a8dce4", "filename": "gcc/config/i960/i960.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fi960%2Fi960.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fi960%2Fi960.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi960%2Fi960.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1233,7 +1233,7 @@ extern struct rtx_def *i960_compare_op0, *i960_compare_op1;\n    This is suitable for output with `assemble_name'.  */\n \n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n-  sprintf (LABEL, \"*%s%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*%s%lu\", PREFIX, (unsigned long)(NUM))\n \n #define ASM_OUTPUT_REG_PUSH(FILE,REGNO)  \\\n   fprintf (FILE, \"\\tst\\t%s,(sp)\\n\\taddo\\t4,sp,sp\\n\", reg_names[REGNO])"}, {"sha": "a63f36438314e917fd096aef7f5e187d0bfc3712", "filename": "gcc/config/m68k/hp320.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fm68k%2Fhp320.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fm68k%2Fhp320.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fhp320.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -488,7 +488,7 @@ do {\t\t\t\t\t\\\n       if (GET_CODE (addr) == CONST_INT\t\t\t\t\t\\\n \t  && INTVAL (addr) < 0x8000\t\t\t\t\t\\\n \t  && INTVAL (addr) >= -0x8000)\t\t\t\t\t\\\n-\tfprintf (FILE, \"%d.w\", INTVAL (addr));\t\t\t\t\\\n+\tfprintf (FILE, \"%d.w\", (int) INTVAL (addr));\t\t\t\\\n       else\t\t\t\t\t\t\t\t\\\n         output_addr_const (FILE, addr);\t\t\t\t\t\\\n     }}"}, {"sha": "796e9f34360b8d07440a9ce6351d6147c82ec9ff", "filename": "gcc/config/mcore/mcore.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fmcore%2Fmcore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fmcore%2Fmcore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1178,7 +1178,7 @@ extern long mcore_current_compilation_timestamp;\n         {\t\t\t\t\t\t\t\\\n           fputs (\"\\t.comm\\t\", FILE);\t\t\t\t\\\n           assemble_name (FILE, NAME);\t\t\t\t\\\n-          fprintf (FILE, \",%d\\n\", SIZE);\t\t\t\\\n+          fprintf (FILE, \",%lu\\n\", (unsigned long)(SIZE));\t\\\n         }\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n   while (0)"}, {"sha": "ebad33511414db2bc27ada03b044049758d2cc91", "filename": "gcc/config/pdp11/pdp11.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fpdp11%2Fpdp11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpdp11%2Fpdp11.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -1047,7 +1047,7 @@ fprintf (FILE, \"$help$: . = .+8 ; space for tmp moves!\\n\")\t\\\n    This is suitable for output with `assemble_name'.  */\n \n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\\\n-  sprintf (LABEL, \"*%s_%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*%s_%lu\", PREFIX, (unsigned long)(NUM))\n \n #define ASM_OUTPUT_ASCII(FILE, P, SIZE)  \\\n   output_ascii (FILE, P, SIZE)"}, {"sha": "f3ccb02a116e15a3703df47716bdbc3b585f888b", "filename": "gcc/config/ptx4.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fptx4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fptx4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fptx4.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -231,5 +231,5 @@ while (0)\n do {\t\t\t\t\t\t\t\t\t\\\n   fprintf ((FILE), \"%s\", COMMON_ASM_OP);\t\t\t\t\\\n   assemble_name ((FILE), (NAME));\t\t\t\t\t\\\n-  fprintf ((FILE), \",%u\\n\", (SIZE));\t\t\t\t\t\\\n+  fprintf ((FILE), \",%lu\\n\", (unsigned long)(SIZE)); \\\n } while (0)"}, {"sha": "4d3e0a639944af1c90d30001672945369643ec85", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -142,7 +142,7 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #undef  ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\t\t\\\n-  sprintf (LABEL, \"*.L%s%d\", PREFIX, NUM)\n+  sprintf (LABEL, \"*.L%s%lu\", PREFIX, (unsigned long)(NUM))\n \n \n /************************[  Debugger stuff  ]*********************************/"}, {"sha": "a398069f8045ff2aa0479b687ee5357cc1da1179", "filename": "gcc/config/svr3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fsvr3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74eda121a8933438065df8444ea5b3cdb53ad6f0/gcc%2Fconfig%2Fsvr3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr3.h?ref=74eda121a8933438065df8444ea5b3cdb53ad6f0", "patch": "@@ -64,7 +64,7 @@ Boston, MA 02111-1307, USA.\n #define ASM_OUTPUT_COMMON(FILE, NAME, SIZE, ROUNDED)  \\\n ( fputs (\".comm \", (FILE)),\t\t\t\\\n   assemble_name ((FILE), (NAME)),\t\t\\\n-  fprintf ((FILE), \",%u\\n\", (SIZE)))\n+  fprintf ((FILE), \",%lu\\n\", (unsigned long)(SIZE)))\n \n /* This says how to output an assembler line\n    to define a local common symbol.  */"}]}