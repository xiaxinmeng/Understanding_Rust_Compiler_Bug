{"sha": "e8de8feae81be89bbde76711b222af9df693a9e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThkZThmZWFlODFiZTg5YmJkZTc2NzExYjIyMmFmOWRmNjkzYTllMg==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2010-04-15T16:30:32Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2010-04-15T16:30:32Z"}, "message": "s390.c (s390_call_save_register_used): Switch back to HARD_REGNO_NREGS.\n\n2010-04-15  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* config/s390/s390.c (s390_call_save_register_used): Switch back\n\tto HARD_REGNO_NREGS.\n\nFrom-SVN: r158384", "tree": {"sha": "a5d104c89c2b3224549229a5f892104491336430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a5d104c89c2b3224549229a5f892104491336430"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8de8feae81be89bbde76711b222af9df693a9e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8de8feae81be89bbde76711b222af9df693a9e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8de8feae81be89bbde76711b222af9df693a9e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8de8feae81be89bbde76711b222af9df693a9e2/comments", "author": null, "committer": null, "parents": [{"sha": "8c709695980d7b9fbc19bee9fafc5182346b8bff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c709695980d7b9fbc19bee9fafc5182346b8bff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c709695980d7b9fbc19bee9fafc5182346b8bff"}], "stats": {"total": 33, "additions": 12, "deletions": 21}, "files": [{"sha": "ba332d14d7e1751f2f8c0defac06679546b9e4f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8de8feae81be89bbde76711b222af9df693a9e2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8de8feae81be89bbde76711b222af9df693a9e2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8de8feae81be89bbde76711b222af9df693a9e2", "patch": "@@ -1,3 +1,8 @@\n+2010-04-15  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_call_save_register_used): Switch back\n+\tto HARD_REGNO_NREGS.\n+\n 2010-04-15  Richard Guenther  <rguenther@suse.de>\n \n \t* alias.c (alias_set_subset_of): Handle alias-set zero"}, {"sha": "c3820e580123eb19b9ffd3f7f6dc82c1edede06f", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 7, "deletions": 21, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8de8feae81be89bbde76711b222af9df693a9e2/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8de8feae81be89bbde76711b222af9df693a9e2/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=e8de8feae81be89bbde76711b222af9df693a9e2", "patch": "@@ -9449,40 +9449,26 @@ s390_call_saved_register_used (tree call_expr)\n \n        if (REG_P (parm_rtx))\n   \t {\n-\t   int n_regs;\n-\n-\t   /* Only integer registers (r6) are call saved and used for\n-\t      parameter passing.  */\n-\t   if (REGNO_REG_CLASS (REGNO (parm_rtx)) == FP_REGS)\n-\t     continue;\n-\n-\t   n_regs = ((GET_MODE_SIZE (GET_MODE (parm_rtx)) + UNITS_PER_LONG - 1)\n-\t\t     / UNITS_PER_LONG);\n-\n-\t   for (reg = 0; reg < n_regs; reg++)\n+\t   for (reg = 0;\n+\t\treg < HARD_REGNO_NREGS (REGNO (parm_rtx), GET_MODE (parm_rtx));\n+\t\treg++)\n \t     if (!call_used_regs[reg + REGNO (parm_rtx)])\n  \t       return true;\n \t }\n \n        if (GET_CODE (parm_rtx) == PARALLEL)\n \t {\n \t   int i;\n+\n \t   for (i = 0; i < XVECLEN (parm_rtx, 0); i++)\n \t     {\n \t       rtx r = XEXP (XVECEXP (parm_rtx, 0, i), 0);\n-\t       int n_regs;\n \n \t       gcc_assert (REG_P (r));\n \n-\t       /* Only integer registers (r6) are call saved and used\n-\t\t  for parameter passing.  */\n-\t       if (REGNO_REG_CLASS (REGNO (r)) == FP_REGS)\n-\t\t continue;\n-\n-\t       n_regs = ((GET_MODE_SIZE (GET_MODE (r)) + UNITS_PER_LONG - 1)\n-\t\t\t / UNITS_PER_LONG);\n-\n-\t       for (reg = 0; reg < n_regs; reg++)\n+\t       for (reg = 0;\n+\t\t    reg < HARD_REGNO_NREGS (REGNO (r), GET_MODE (r));\n+\t\t    reg++)\n \t\t if (!call_used_regs[reg + REGNO (r)])\n \t\t   return true;\n \t     }"}]}