{"sha": "7a03cad76c1d2d7f156424f0bd9290dfcb1d4488", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2EwM2NhZDc2YzFkMmQ3ZjE1NjQyNGYwYmQ5MjkwZGZjYjFkNDQ4OA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2019-03-26T05:16:14Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2019-03-26T05:16:14Z"}, "message": "[RS6000] Fix typos\n\n\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Correct\n\trs6000_vector_mem init.  Correct wI and wJ comment\n\nFrom-SVN: r269932", "tree": {"sha": "bdb9c1983d50c5cd81e980142315f795f1eabed7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdb9c1983d50c5cd81e980142315f795f1eabed7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a03cad76c1d2d7f156424f0bd9290dfcb1d4488", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a03cad76c1d2d7f156424f0bd9290dfcb1d4488", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a03cad76c1d2d7f156424f0bd9290dfcb1d4488", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a03cad76c1d2d7f156424f0bd9290dfcb1d4488/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4d7e3ed93d1850b038fe74757a98f163ad0d0f78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d7e3ed93d1850b038fe74757a98f163ad0d0f78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d7e3ed93d1850b038fe74757a98f163ad0d0f78"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "4af4550c824cdb6aa0d1a12cbbf79de34d7ffdf3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a03cad76c1d2d7f156424f0bd9290dfcb1d4488/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a03cad76c1d2d7f156424f0bd9290dfcb1d4488/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a03cad76c1d2d7f156424f0bd9290dfcb1d4488", "patch": "@@ -1,3 +1,8 @@\n+2019-03-26  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Correct\n+\trs6000_vector_mem init.  Correct wI and wJ comment.\n+\n 2019-03-25  Alexander Monakov  <amonakov@ispras.ru>\n \n \tPR rtl-optimization/88347"}, {"sha": "a7590db013e542c9cb18020a591896fd1e317031", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a03cad76c1d2d7f156424f0bd9290dfcb1d4488/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a03cad76c1d2d7f156424f0bd9290dfcb1d4488/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=7a03cad76c1d2d7f156424f0bd9290dfcb1d4488", "patch": "@@ -3050,7 +3050,7 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n      below.  */\n   gcc_assert ((int)VECTOR_NONE == 0);\n   memset ((void *) &rs6000_vector_unit[0], '\\0', sizeof (rs6000_vector_unit));\n-  memset ((void *) &rs6000_vector_mem[0], '\\0', sizeof (rs6000_vector_unit));\n+  memset ((void *) &rs6000_vector_mem[0], '\\0', sizeof (rs6000_vector_mem));\n \n   gcc_assert ((int)CODE_FOR_nothing == 0);\n   memset ((void *) &reg_addr[0], '\\0', sizeof (reg_addr));\n@@ -3204,8 +3204,8 @@ rs6000_init_hard_regno_mode_ok (bool global_init_p)\n \twy - Register class to do ISA 2.07 SF operations.\n \twz - Float register if we can do 32-bit unsigned int loads.\n \twH - Altivec register if SImode is allowed in VSX registers.\n-\twI - VSX register if SImode is allowed in VSX registers.\n-\twJ - VSX register if QImode/HImode are allowed in VSX registers.\n+\twI - Float register if SImode is allowed in VSX registers.\n+\twJ - Float register if QImode/HImode are allowed in VSX registers.\n \twK - Altivec register if QImode/HImode are allowed in VSX registers.  */\n \n   if (TARGET_HARD_FLOAT)"}]}