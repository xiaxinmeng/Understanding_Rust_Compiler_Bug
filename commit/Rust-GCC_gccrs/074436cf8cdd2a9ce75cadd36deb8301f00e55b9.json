{"sha": "074436cf8cdd2a9ce75cadd36deb8301f00e55b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc0NDM2Y2Y4Y2RkMmE5Y2U3NWNhZGQzNmRlYjgzMDFmMDBlNTViOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-24T15:10:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-08-24T15:10:07Z"}, "message": "libstdc++: Make variant_npos conversions explicit [PR 96766]\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/96766\n\t* include/std/variant (_Variant_storage): Replace implicit\n\tconversions from size_t to __index_type with explicit casts.", "tree": {"sha": "7144e42732361a85e70cd2b1d23503d41099b308", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7144e42732361a85e70cd2b1d23503d41099b308"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/074436cf8cdd2a9ce75cadd36deb8301f00e55b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/074436cf8cdd2a9ce75cadd36deb8301f00e55b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/074436cf8cdd2a9ce75cadd36deb8301f00e55b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/074436cf8cdd2a9ce75cadd36deb8301f00e55b9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac4e9090fce653ba7a43ea5333efdd9bbe5c71a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac4e9090fce653ba7a43ea5333efdd9bbe5c71a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac4e9090fce653ba7a43ea5333efdd9bbe5c71a3"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "dd8847cf82923b0e8c2d58899f7e314d861b9140", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/074436cf8cdd2a9ce75cadd36deb8301f00e55b9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/074436cf8cdd2a9ce75cadd36deb8301f00e55b9/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=074436cf8cdd2a9ce75cadd36deb8301f00e55b9", "patch": "@@ -385,12 +385,16 @@ namespace __variant\n   template<typename... _Types>\n     struct _Variant_storage<false, _Types...>\n     {\n-      constexpr _Variant_storage() : _M_index(variant_npos) { }\n+      constexpr\n+      _Variant_storage()\n+      : _M_index(static_cast<__index_type>(variant_npos))\n+      { }\n \n       template<size_t _Np, typename... _Args>\n-\tconstexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)\n+\tconstexpr\n+\t_Variant_storage(in_place_index_t<_Np>, _Args&&... __args)\n \t: _M_u(in_place_index<_Np>, std::forward<_Args>(__args)...),\n-\t_M_index(_Np)\n+\t_M_index{_Np}\n \t{ }\n \n       void _M_reset()\n@@ -403,7 +407,7 @@ namespace __variant\n \t    std::_Destroy(std::__addressof(__this_mem));\n \t  }, __variant_cast<_Types...>(*this));\n \n-\t_M_index = variant_npos;\n+\t_M_index = static_cast<__index_type>(variant_npos);\n       }\n \n       ~_Variant_storage()\n@@ -432,16 +436,20 @@ namespace __variant\n   template<typename... _Types>\n     struct _Variant_storage<true, _Types...>\n     {\n-      constexpr _Variant_storage() : _M_index(variant_npos) { }\n+      constexpr\n+      _Variant_storage()\n+      : _M_index(static_cast<__index_type>(variant_npos))\n+      { }\n \n       template<size_t _Np, typename... _Args>\n-\tconstexpr _Variant_storage(in_place_index_t<_Np>, _Args&&... __args)\n+\tconstexpr\n+\t_Variant_storage(in_place_index_t<_Np>, _Args&&... __args)\n \t: _M_u(in_place_index<_Np>, std::forward<_Args>(__args)...),\n-\t_M_index(_Np)\n+\t_M_index{_Np}\n \t{ }\n \n       void _M_reset() noexcept\n-      { _M_index = variant_npos; }\n+      { _M_index = static_cast<__index_type>(variant_npos); }\n \n       void*\n       _M_storage() const noexcept\n@@ -455,7 +463,7 @@ namespace __variant\n       {\n \tif constexpr (__variant::__never_valueless<_Types...>())\n \t  return true;\n-\treturn this->_M_index != __index_type(variant_npos);\n+\treturn this->_M_index != static_cast<__index_type>(variant_npos);\n       }\n \n       _Variadic_union<_Types...> _M_u;"}]}