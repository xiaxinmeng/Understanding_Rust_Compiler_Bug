{"sha": "c35971c82b1ae4ae02ca118b5b14c01c179774d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzM1OTcxYzgyYjFhZTRhZTAyY2ExMThiNWIxNGMwMWMxNzk3NzRkMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-04-19T12:51:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2000-04-19T12:51:42Z"}, "message": "Even more lossage, sorry.\n\nFrom-SVN: r33256", "tree": {"sha": "e037f6ae41ff45a1790b0f8203b2ee5b15fac56f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e037f6ae41ff45a1790b0f8203b2ee5b15fac56f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c35971c82b1ae4ae02ca118b5b14c01c179774d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c35971c82b1ae4ae02ca118b5b14c01c179774d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c35971c82b1ae4ae02ca118b5b14c01c179774d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c35971c82b1ae4ae02ca118b5b14c01c179774d0/comments", "author": null, "committer": null, "parents": [{"sha": "ef8b01f3d979cfea88da6add1c4d096b4355849a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef8b01f3d979cfea88da6add1c4d096b4355849a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef8b01f3d979cfea88da6add1c4d096b4355849a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1ff6a8ce4fb3a353557506315532303758955694", "filename": "gcc/loop.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c35971c82b1ae4ae02ca118b5b14c01c179774d0/gcc%2Floop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c35971c82b1ae4ae02ca118b5b14c01c179774d0/gcc%2Floop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop.c?ref=c35971c82b1ae4ae02ca118b5b14c01c179774d0", "patch": "@@ -3730,7 +3730,7 @@ for_each_insn_in_loop (loop, fncall)\n        p != NULL_RTX;\n        p = next_insn_in_loop (loop, p))\n     {\n-      p = fncall (loop, p, not_every_iteration, not_every_iteration);\n+      p = fncall (loop, p, not_every_iteration, maybe_multiple);\n \n       /* Past CODE_LABEL, we get to insns that may be executed multiple\n          times.  The only way we can be sure that they can't is if every"}]}