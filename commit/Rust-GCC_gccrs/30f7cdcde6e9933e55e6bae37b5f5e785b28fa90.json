{"sha": "30f7cdcde6e9933e55e6bae37b5f5e785b28fa90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmN2NkY2RlNmU5OTMzZTU1ZTZiYWUzN2I1ZjVlNzg1YjI4ZmE5MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-03-11T14:44:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-03-11T14:44:49Z"}, "message": "re PR c++/48069 (FAIL: g++.old-deja/g++.pt/spec26.C)\n\n\tPR c++/48069\n\t* tree.c (type_hash_eq): Use COMPLETE_TYPE_P, not\n\tCOMPLETE_OR_UNBOUND_ARRAY_TYPE_P.\n\nFrom-SVN: r170872", "tree": {"sha": "f79a5c6eb2e0dfd998ddccb000bdf2007781b72e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f79a5c6eb2e0dfd998ddccb000bdf2007781b72e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30f7cdcde6e9933e55e6bae37b5f5e785b28fa90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f7cdcde6e9933e55e6bae37b5f5e785b28fa90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30f7cdcde6e9933e55e6bae37b5f5e785b28fa90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30f7cdcde6e9933e55e6bae37b5f5e785b28fa90/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f2a6198d15b6bec1fd9f4dd411a04bb200945d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f2a6198d15b6bec1fd9f4dd411a04bb200945d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f2a6198d15b6bec1fd9f4dd411a04bb200945d9"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "4eb10249beb1d318002121d474bf9721556161d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f7cdcde6e9933e55e6bae37b5f5e785b28fa90/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f7cdcde6e9933e55e6bae37b5f5e785b28fa90/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=30f7cdcde6e9933e55e6bae37b5f5e785b28fa90", "patch": "@@ -1,3 +1,9 @@\n+2011-03-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/48069\n+\t* tree.c (type_hash_eq): Use COMPLETE_TYPE_P, not\n+\tCOMPLETE_OR_UNBOUND_ARRAY_TYPE_P.\n+\n 2011-03-11  Martin Jambor  <mjambor@suse.cz>\n \n \t* cgraphunit.c (verify_cgraph_node): Call cgraph_get_node instead of"}, {"sha": "d923ac89a766146369c8957efa1ad8d587e0fee6", "filename": "gcc/tree.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30f7cdcde6e9933e55e6bae37b5f5e785b28fa90/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30f7cdcde6e9933e55e6bae37b5f5e785b28fa90/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=30f7cdcde6e9933e55e6bae37b5f5e785b28fa90", "patch": "@@ -5988,8 +5988,7 @@ type_hash_eq (const void *va, const void *vb)\n   /* Be careful about comparing arrays before and after the element type\n      has been completed; don't compare TYPE_ALIGN unless both types are\n      complete.  */\n-  if (COMPLETE_OR_UNBOUND_ARRAY_TYPE_P (a->type)\n-      && COMPLETE_OR_UNBOUND_ARRAY_TYPE_P (b->type)\n+  if (COMPLETE_TYPE_P (a->type) && COMPLETE_TYPE_P (b->type)\n       && (TYPE_ALIGN (a->type) != TYPE_ALIGN (b->type)\n \t  || TYPE_MODE (a->type) != TYPE_MODE (b->type)))\n     return 0;"}]}