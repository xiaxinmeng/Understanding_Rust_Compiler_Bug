{"sha": "2fa9c1f65f59e893064937c35a46c804b924cb55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZhOWMxZjY1ZjU5ZTg5MzA2NDkzN2MzNWE0NmM4MDRiOTI0Y2I1NQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2019-04-17T11:09:59Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2019-04-17T11:09:59Z"}, "message": "[ARC][COMMITTED] Fix diagnostic messages.\n\nApply upper/dot rule on diagnostic messages.\n\ngcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc.c (arc_init): Format diagnostic string.\n\t(arc_override_options): Likewise.\n\t(check_if_valid_regno_const): Likewise.\n\t(arc_reorg): Likewise.\n\nFrom-SVN: r270408", "tree": {"sha": "e87dd11bd43f0367cde0549de2221b49447dd795", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e87dd11bd43f0367cde0549de2221b49447dd795"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fa9c1f65f59e893064937c35a46c804b924cb55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa9c1f65f59e893064937c35a46c804b924cb55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fa9c1f65f59e893064937c35a46c804b924cb55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fa9c1f65f59e893064937c35a46c804b924cb55/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "61943f94a0acfe2f61ed9c320a45a654d6baa780", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61943f94a0acfe2f61ed9c320a45a654d6baa780", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61943f94a0acfe2f61ed9c320a45a654d6baa780"}], "stats": {"total": 29, "additions": 19, "deletions": 10}, "files": [{"sha": "3820fae8ee7523c02c39cc6dc889aff80f7048da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa9c1f65f59e893064937c35a46c804b924cb55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa9c1f65f59e893064937c35a46c804b924cb55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2fa9c1f65f59e893064937c35a46c804b924cb55", "patch": "@@ -1,3 +1,10 @@\n+2019-04-17  Claudiu Zissulescu  <claziss@synopsys.com>\n+\n+\t* config/arc/arc.c (arc_init): Format diagnostic string.\n+\t(arc_override_options): Likewise.\n+\t(check_if_valid_regno_const): Likewise.\n+\t(arc_reorg): Likewise.\n+\n 2019-04-17  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \tPR target/17108"}, {"sha": "1a04f9ef79397546066c609880ffe20d2bc15273", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fa9c1f65f59e893064937c35a46c804b924cb55/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fa9c1f65f59e893064937c35a46c804b924cb55/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=2fa9c1f65f59e893064937c35a46c804b924cb55", "patch": "@@ -950,13 +950,13 @@ arc_init (void)\n   /* FPX-4.  No FPX extensions mixed with FPU extensions.  */\n   if ((TARGET_DPFP_FAST_SET || TARGET_DPFP_COMPACT_SET || TARGET_SPFP)\n       && TARGET_HARD_FLOAT)\n-    error (\"No FPX/FPU mixing allowed\");\n+    error (\"no FPX/FPU mixing allowed\");\n \n   /* Warn for unimplemented PIC in pre-ARC700 cores, and disable flag_pic.  */\n   if (flag_pic && TARGET_ARC600_FAMILY)\n     {\n       warning (0,\n-\t       \"PIC is not supported for %s. Generating non-PIC code only..\",\n+\t       \"PIC is not supported for %s.  Generating non-PIC code only\",\n \t       arc_cpu_string);\n       flag_pic = 0;\n     }\n@@ -1222,26 +1222,26 @@ arc_override_options (void)\n   do {\t\t\t\t\t\t\t\t\\\n     if ((!(arc_selected_cpu->arch_info->flags & CODE))\t\t\\\n \t&& (VAR == VAL))\t\t\t\t\t\\\n-      error (\"Option %s=%s is not available for %s CPU.\",\t\\\n+      error (\"option %s=%s is not available for %s CPU\",\t\\\n \t     DOC0, DOC1, arc_selected_cpu->name);\t\t\\\n     if ((arc_selected_cpu->arch_info->dflags & CODE)\t\t\\\n \t&& (VAR != DEFAULT_##VAR)\t\t\t\t\\\n \t&& (VAR != VAL))\t\t\t\t\t\\\n-      warning (0, \"Option %s is ignored, the default value %s\"\t\\\n-\t       \" is considered for %s CPU.\", DOC0, DOC1,\t\\\n+      warning (0, \"option %s is ignored, the default value %s\"\t\\\n+\t       \" is considered for %s CPU\", DOC0, DOC1,\t\t\\\n \t       arc_selected_cpu->name);\t\t\t\t\\\n  } while (0);\n #define ARC_OPT(NAME, CODE, MASK, DOC)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n     if ((!(arc_selected_cpu->arch_info->flags & CODE))\t\t\\\n \t&& (target_flags & MASK))\t\t\t\t\\\n-      error (\"Option %s is not available for %s CPU\",\t\t\\\n+      error (\"option %s is not available for %s CPU\",\t\t\\\n \t     DOC, arc_selected_cpu->name);\t\t\t\\\n     if ((arc_selected_cpu->arch_info->dflags & CODE)\t\t\\\n \t&& (target_flags_explicit & MASK)\t\t\t\\\n \t&& (!(target_flags & MASK)))\t\t\t\t\\\n-      warning (0, \"Unset option %s is ignored, it is always\"\t\\\n-\t       \" enabled for %s CPU.\", DOC,\t\t\t\\\n+      warning (0, \"unset option %s is ignored, it is always\"\t\\\n+\t       \" enabled for %s CPU\", DOC,\t\t\t\\\n \t       arc_selected_cpu->name);\t\t\t\t\\\n   } while (0);\n \n@@ -7268,7 +7268,8 @@ check_if_valid_regno_const (rtx *operands, int opno)\n     case CONST_INT :\n       return true;\n     default:\n-\terror (\"register number must be a compile-time constant. Try giving higher optimization levels\");\n+\terror (\"register number must be a compile-time constant.  \"\n+\t       \"Try giving higher optimization levels\");\n \tbreak;\n     }\n   return false;\n@@ -8261,7 +8262,8 @@ arc_reorg (void)\n       cfun->machine->ccfsm_current_insn = NULL_RTX;\n \n       if (!INSN_ADDRESSES_SET_P())\n-\t  fatal_error (input_location, \"Insn addresses not set after shorten_branches\");\n+\t  fatal_error (input_location,\n+\t\t       \"insn addresses not set after shorten_branches\");\n \n       for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n \t{"}]}