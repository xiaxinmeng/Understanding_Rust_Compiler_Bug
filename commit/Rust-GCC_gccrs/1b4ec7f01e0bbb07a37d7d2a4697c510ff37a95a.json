{"sha": "1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI0ZWM3ZjAxZTBiYmIwN2EzN2Q3ZDJhNDY5N2M1MTBmZjM3YTk1YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-11-10T11:19:21Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-11-10T11:19:21Z"}, "message": "hashtable.h (_Hashtable<>::_Insert_Conv_Type, [...]): Change to private.\n\n2010-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/hashtable.h (_Hashtable<>::_Insert_Conv_Type,\n\t_Hashtable<>::_Insert_Return_Type): Change to private.\n\nFrom-SVN: r166528", "tree": {"sha": "6e63e3b92fc1800a01331e4669924b48dd8a5826", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e63e3b92fc1800a01331e4669924b48dd8a5826"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a/comments", "author": null, "committer": null, "parents": [{"sha": "72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72a07d9b66fd77ddbd1cfc12501e0722d67d509a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72a07d9b66fd77ddbd1cfc12501e0722d67d509a"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "c4d9c8f96d50a27383e757c5074053d45039cce6", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a", "patch": "@@ -1,3 +1,8 @@\n+2010-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/hashtable.h (_Hashtable<>::_Insert_Conv_Type,\n+\t_Hashtable<>::_Insert_Return_Type): Change to private.\n+\n 2010-11-10  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* include/bits/unique_ptr.h: Use static_assert in constexpr"}, {"sha": "9fa57fc01bdc563671683058cf4df419c8607b1d", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=1b4ec7f01e0bbb07a37d7d2a4697c510ff37a95a", "patch": "@@ -362,7 +362,7 @@ namespace std\n       equal_range(const key_type& __k) const;\n \n     private:\n-      // Find, insert and erase helper functions\n+      // Find and insert helper functions and types\n       _Node*\n       _M_find_node(_Node*, const key_type&,\n \t\t   typename _Hashtable::_Hash_code_type) const;\n@@ -380,8 +380,6 @@ namespace std\n         iterator\n         _M_insert(_Pair&&, std::false_type);\n \n-    public:\n-      // Insert and erase\n       typedef typename std::conditional<__unique_keys,\n \t\t\t\t\tstd::pair<iterator, bool>,\n \t\t\t\t\titerator>::type\n@@ -393,6 +391,8 @@ namespace std\n                                    >::type\n         _Insert_Conv_Type;\n \n+    public:\n+      // Insert and erase\n       _Insert_Return_Type\n       insert(const value_type& __v)\n       { return _M_insert(__v, std::integral_constant<bool, __unique_keys>()); }"}]}