{"sha": "0d0a1710d97a7eff97667caa55f83cc7bbe948de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQwYTE3MTBkOTdhN2VmZjk3NjY3Y2FhNTVmODNjYzdiYmU5NDhkZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2003-07-01T12:01:44Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-07-01T12:01:44Z"}, "message": "vbase1.C: Fix comment typos.\n\n\t* g++.old-deja/g++.abi/vbase1.C: Fix comment typos.\n\t* g++.old-deja/g++.abi/vtable3.h: Likewise.\n\t* g++.old-deja/g++.law/code-gen5.C: Likewise.\n\t* g++.old-deja/g++.other/union2.C: Likewise.\n\t* gcc.dg/c90-const-expr-2.c: Likewise.\n\t* gcc.dg/c90-const-expr-3.c: Likewise.\n\t* gcc.dg/c99-const-expr-2.c: Likewise.\n\t* gcc.dg/c99-const-expr-3.c: Likewise.\n\t* gcc.dg/concat.c: Likewise.\n\nFrom-SVN: r68769", "tree": {"sha": "55f89dcc79360d81b4cda6bd3fd1dce080704b09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55f89dcc79360d81b4cda6bd3fd1dce080704b09"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d0a1710d97a7eff97667caa55f83cc7bbe948de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0a1710d97a7eff97667caa55f83cc7bbe948de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0a1710d97a7eff97667caa55f83cc7bbe948de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0a1710d97a7eff97667caa55f83cc7bbe948de/comments", "author": null, "committer": null, "parents": [{"sha": "6344b1f122ef61eb765445d0a7bdccc3331ed28c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6344b1f122ef61eb765445d0a7bdccc3331ed28c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6344b1f122ef61eb765445d0a7bdccc3331ed28c"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "271f4617730d32c43c0b52277d538baa8414c09c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -1,3 +1,15 @@\n+2003-07-01  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* g++.old-deja/g++.abi/vbase1.C: Fix comment typos.\n+\t* g++.old-deja/g++.abi/vtable3.h: Likewise.\n+\t* g++.old-deja/g++.law/code-gen5.C: Likewise.\n+\t* g++.old-deja/g++.other/union2.C: Likewise.\n+\t* gcc.dg/c90-const-expr-2.c: Likewise.\n+\t* gcc.dg/c90-const-expr-3.c: Likewise.\n+\t* gcc.dg/c99-const-expr-2.c: Likewise.\n+\t* gcc.dg/c99-const-expr-3.c: Likewise.\n+\t* gcc.dg/concat.c: Likewise.\n+\n 2003-07-01  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/9559"}, {"sha": "680bec7378a3d89ab31567c00f4213767370937b", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vbase1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvbase1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvbase1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvbase1.C?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -2,7 +2,7 @@\n // Copyright (C) 2000 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 16 Jan 2001 <nathan@codesourcery.com>\n \n-// Bug 1611. Under the new ABI, the vtable can be clobered during dtoring our\n+// Bug 1611. Under the new ABI, the vtable can be clobbered during dtoring our\n // primary vbase. We mustn't use the vtable after that to locate our vbases.\n \n #if defined (__GXX_ABI_VERSION) && __GXX_ABI_VERSION >= 100"}, {"sha": "ef02456f20bed93ebbc3ad8076a74caaf0fd4ddc", "filename": "gcc/testsuite/g++.old-deja/g++.abi/vtable3.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.abi%2Fvtable3.h?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -2,7 +2,7 @@\n // Contributed by Nathan Sidwell 4 February 2001 <nathan@codesourcery.com>\n \n // Check constructor vtables work. This is included from numerous test\n-// files, which set the #defines necessary to specify the heirarchy.\n+// files, which set the #defines necessary to specify the hierarchy.\n \n #include <typeinfo>\n #include <stdio.h>"}, {"sha": "9ac3060173bf6c148fe138982c060a1a264f60be", "filename": "gcc/testsuite/g++.old-deja/g++.law/code-gen5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fcode-gen5.C?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -34,7 +34,7 @@ class VectorInt\n \n \tVectorInt *refer();\n \tvoid unrefer();\n-\tint count;\t\t\t\t/* Number of Vector's refering to me */\n+\tint count;\t\t\t\t/* Number of Vector's referring to me */\n \n \tVEC *vec;\n "}, {"sha": "5c2d7dcac7236599359b7c7621b7f7258a34b2bb", "filename": "gcc/testsuite/g++.old-deja/g++.other/union2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funion2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funion2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Funion2.C?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -1,5 +1,5 @@\n // { dg-do run  }\n-// Bug: g++ crashed on empty intializers for unions.\n+// Bug: g++ crashed on empty initializers for unions.\n // Bug: gcc and g++ didn't zero unions with empty initializers.\n // Submitted by J\"orn Rennecke <amylaar@cygnus.co.uk>\n "}, {"sha": "746093bebcf130bbe29e39284dcc5274f985d9b7", "filename": "gcc/testsuite/gcc.dg/c90-const-expr-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-2.c?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -19,7 +19,7 @@ long *c;\n */\n #define ASSERT_NPC(n)\t(b = *(1 ? a : (n)))\n /* Assertion that n is not a null pointer constant: so the conditional\n-   expresions has type 'void *' instead of 'int *'.\n+   expressions has type 'void *' instead of 'int *'.\n */\n #define ASSERT_NOT_NPC(n)\t(c = (1 ? a : (n)))\n "}, {"sha": "84c662c62a7f83e1da2d43a0549d354d72cec02c", "filename": "gcc/testsuite/gcc.dg/c90-const-expr-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc90-const-expr-3.c?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -17,7 +17,7 @@ long *c;\n */\n #define ASSERT_NPC(n)\t(b = *(1 ? a : (n)))\n /* Assertion that n is not a constant zero: so the conditional\n-   expresions has type 'void *' instead of 'int *'.\n+   expressions has type 'void *' instead of 'int *'.\n */\n #define ASSERT_NOT_NPC(n)\t(c = (1 ? a : (void *)(__SIZE_TYPE__)(n)))\n "}, {"sha": "c9f8e0ffbc8c424b469838f8c4fec9f941f50291", "filename": "gcc/testsuite/gcc.dg/c99-const-expr-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-2.c?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -19,7 +19,7 @@ long *c;\n */\n #define ASSERT_NPC(n)\t(b = *(1 ? a : (n)))\n /* Assertion that n is not a null pointer constant: so the conditional\n-   expresions has type 'void *' instead of 'int *'.\n+   expressions has type 'void *' instead of 'int *'.\n */\n #define ASSERT_NOT_NPC(n)\t(c = (1 ? a : (n)))\n "}, {"sha": "f230603332be3256fc0be6c26d08d12dc1e0c8ed", "filename": "gcc/testsuite/gcc.dg/c99-const-expr-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fc99-const-expr-3.c?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -17,7 +17,7 @@ long *c;\n */\n #define ASSERT_NPC(n)\t(b = *(1 ? a : (n)))\n /* Assertion that n is not a constant zero: so the conditional\n-   expresions has type 'void *' instead of 'int *'.\n+   expressions has type 'void *' instead of 'int *'.\n */\n #define ASSERT_NOT_NPC(n)\t(c = (1 ? a : (void *)(__SIZE_TYPE__)(n)))\n "}, {"sha": "0a77b99bb1f6b9d7d2072be8cc9bd0b0538b87e1", "filename": "gcc/testsuite/gcc.dg/concat.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fconcat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0a1710d97a7eff97667caa55f83cc7bbe948de/gcc%2Ftestsuite%2Fgcc.dg%2Fconcat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconcat.c?ref=0d0a1710d97a7eff97667caa55f83cc7bbe948de", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-do compile } */\n \n-/* Test we output a warning for concatenation of artifical strings.\n+/* Test we output a warning for concatenation of artificial strings.\n \n    Neil Booth, 10 Dec 2001.  */\n "}]}