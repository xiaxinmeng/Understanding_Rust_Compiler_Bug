{"sha": "a31becca488b537cfc24bba7c0f48b2c44726240", "node_id": "C_kwDOANBUbNoAKGEzMWJlY2NhNDg4YjUzN2NmYzI0YmJhN2MwZjQ4YjJjNDQ3MjYyNDA", "commit": {"author": {"name": "Andrew Carlotti", "email": "andrew.carlotti@arm.com", "date": "2022-12-22T02:09:51Z"}, "committer": {"name": "Andrew Carlotti", "email": "andrew.carlotti@arm.com", "date": "2023-01-16T10:40:52Z"}, "message": "Allow build_popcount_expr to use an IFN\n\ngcc/ChangeLog:\n\n\t* tree-ssa-loop-niter.cc (build_popcount_expr): Add IFN support.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/tree-ssa/pr86544.C: Add .POPCOUNT to tree scan regex.\n\t* gcc.dg/tree-ssa/popcount.c: Likewise.\n\t* gcc.dg/tree-ssa/popcount2.c: Likewise.\n\t* gcc.dg/tree-ssa/popcount3.c: Likewise.\n\t* gcc.target/aarch64/popcount4.c: Likewise.\n\t* gcc.target/i386/pr95771.c: Likewise, and...\n\t* gcc.target/i386/pr95771-2.c: ...split int128 test from above,\n\tsince this would emit just a single IFN if a TI optab is added.", "tree": {"sha": "73cab3ab5b6c6ee1714b40f3df70e8ebc74ea187", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/73cab3ab5b6c6ee1714b40f3df70e8ebc74ea187"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a31becca488b537cfc24bba7c0f48b2c44726240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31becca488b537cfc24bba7c0f48b2c44726240", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a31becca488b537cfc24bba7c0f48b2c44726240", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a31becca488b537cfc24bba7c0f48b2c44726240/comments", "author": {"login": "andrewcarlotti", "id": 11681428, "node_id": "MDQ6VXNlcjExNjgxNDI4", "avatar_url": "https://avatars.githubusercontent.com/u/11681428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewcarlotti", "html_url": "https://github.com/andrewcarlotti", "followers_url": "https://api.github.com/users/andrewcarlotti/followers", "following_url": "https://api.github.com/users/andrewcarlotti/following{/other_user}", "gists_url": "https://api.github.com/users/andrewcarlotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewcarlotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewcarlotti/subscriptions", "organizations_url": "https://api.github.com/users/andrewcarlotti/orgs", "repos_url": "https://api.github.com/users/andrewcarlotti/repos", "events_url": "https://api.github.com/users/andrewcarlotti/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewcarlotti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andrewcarlotti", "id": 11681428, "node_id": "MDQ6VXNlcjExNjgxNDI4", "avatar_url": "https://avatars.githubusercontent.com/u/11681428?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andrewcarlotti", "html_url": "https://github.com/andrewcarlotti", "followers_url": "https://api.github.com/users/andrewcarlotti/followers", "following_url": "https://api.github.com/users/andrewcarlotti/following{/other_user}", "gists_url": "https://api.github.com/users/andrewcarlotti/gists{/gist_id}", "starred_url": "https://api.github.com/users/andrewcarlotti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andrewcarlotti/subscriptions", "organizations_url": "https://api.github.com/users/andrewcarlotti/orgs", "repos_url": "https://api.github.com/users/andrewcarlotti/repos", "events_url": "https://api.github.com/users/andrewcarlotti/events{/privacy}", "received_events_url": "https://api.github.com/users/andrewcarlotti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4798080d4a3530d985efef68aa2e04ec7549b3c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4798080d4a3530d985efef68aa2e04ec7549b3c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4798080d4a3530d985efef68aa2e04ec7549b3c1"}], "stats": {"total": 69, "additions": 41, "deletions": 28}, "files": [{"sha": "50befb36bac75de1cfa282e38358278b3288bd1c", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr86544.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr86544.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr86544.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr86544.C?ref=a31becca488b537cfc24bba7c0f48b2c44726240", "patch": "@@ -12,5 +12,5 @@ int PopCount (long b) {\n     return c;\n }\n \n-/* { dg-final { scan-tree-dump-times \"__builtin_popcount\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"__builtin_popcount|\\\\.POPCOUNT\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"if\" 0 \"phiopt4\" } } */"}, {"sha": "efd906a0f5447f0beb3752eded3756999b02e6e6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/popcount.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount.c?ref=a31becca488b537cfc24bba7c0f48b2c44726240", "patch": "@@ -39,4 +39,4 @@ void PopCount3 (long b1) {\n       }\n }\n \n-/* { dg-final { scan-tree-dump-times \"__builtin_popcount\" 3 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"__builtin_popcount|\\\\.POPCOUNT\" 3 \"optimized\" } } */"}, {"sha": "ae38a329bd4d868a762300d3218d68864c0fc4be", "filename": "gcc/testsuite/gcc.dg/tree-ssa/popcount2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount2.c?ref=a31becca488b537cfc24bba7c0f48b2c44726240", "patch": "@@ -26,4 +26,4 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"__builtin_popcount\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"__builtin_popcount|\\\\.POPCOUNT\" 1 \"optimized\" } } */"}, {"sha": "50befb36bac75de1cfa282e38358278b3288bd1c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/popcount3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpopcount3.c?ref=a31becca488b537cfc24bba7c0f48b2c44726240", "patch": "@@ -12,5 +12,5 @@ int PopCount (long b) {\n     return c;\n }\n \n-/* { dg-final { scan-tree-dump-times \"__builtin_popcount\" 1 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"__builtin_popcount|\\\\.POPCOUNT\" 1 \"optimized\" } } */\n /* { dg-final { scan-tree-dump-times \"if\" 0 \"phiopt4\" } } */"}, {"sha": "8aa15ff018d4b5fc6bb59e52af20d5c33cea2ee0", "filename": "gcc/testsuite/gcc.target/aarch64/popcount4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpopcount4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpopcount4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpopcount4.c?ref=a31becca488b537cfc24bba7c0f48b2c44726240", "patch": "@@ -11,4 +11,4 @@ int PopCount (long b) {\n     return c;\n }\n \n-/* { dg-final { scan-tree-dump-times \"__builtin_popcount\" 0 \"optimized\" } } */\n+/* { dg-final { scan-tree-dump-times \"__builtin_popcount|\\\\.POPCOUNT\" 0 \"optimized\" } } */"}, {"sha": "1db9dc94d0b66477667624012221d6844c141a26", "filename": "gcc/testsuite/gcc.target/i386/pr95771-2.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95771-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95771-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95771-2.c?ref=a31becca488b537cfc24bba7c0f48b2c44726240", "patch": "@@ -0,0 +1,17 @@\n+/* PR tree-optimization/95771 */\n+/* { dg-do compile } */\n+/* { dg-require-effective-target int128 } */\n+/* { dg-options \"-O2 -mpopcnt -fdump-tree-optimized\" } */\n+/* { dg-final { scan-tree-dump \" = __builtin_popcount| = \\\\.POPCOUNT\" \"optimized\" } } */\n+\n+int\n+corge (unsigned __int128 x)\n+{\n+  int i = 0;\n+  while (x)\n+    {\n+      x &= x - 1;\n+      ++i;\n+    }\n+  return i;\n+}"}, {"sha": "d41be445f4a68613a082b8956fea3ceaf33d7e0f", "filename": "gcc/testsuite/gcc.target/i386/pr95771.c", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95771.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95771.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr95771.c?ref=a31becca488b537cfc24bba7c0f48b2c44726240", "patch": "@@ -1,8 +1,7 @@\n /* PR tree-optimization/95771 */\n /* { dg-do compile } */\n /* { dg-options \"-O2 -mpopcnt -fdump-tree-optimized\" } */\n-/* { dg-final { scan-tree-dump-times \" = __builtin_popcount\" 6 \"optimized\" { target int128 } } } */\n-/* { dg-final { scan-tree-dump-times \" = __builtin_popcount\" 4 \"optimized\" { target { ! int128 } } } } */\n+/* { dg-final { scan-tree-dump-times \" = __builtin_popcount| = \\\\.POPCOUNT\" 4 \"optimized\" } } */\n \n int\n foo (unsigned char x)\n@@ -51,17 +50,3 @@ qux (unsigned long long x)\n     }\n   return i;\n }\n-\n-#ifdef __SIZEOF_INT128__\n-int\n-corge (unsigned __int128 x)\n-{\n-  int i = 0;\n-  while (x)\n-    {\n-      x &= x - 1;\n-      ++i;\n-    }\n-  return i;\n-}\n-#endif"}, {"sha": "65b960461aefa38243beb5a96339a9cbb07d02c8", "filename": "gcc/tree-ssa-loop-niter.cc", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftree-ssa-loop-niter.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a31becca488b537cfc24bba7c0f48b2c44726240/gcc%2Ftree-ssa-loop-niter.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-niter.cc?ref=a31becca488b537cfc24bba7c0f48b2c44726240", "patch": "@@ -2033,11 +2033,18 @@ static tree\n build_popcount_expr (tree src)\n {\n   tree fn;\n+  bool use_ifn = false;\n   int prec = TYPE_PRECISION (TREE_TYPE (src));\n   int i_prec = TYPE_PRECISION (integer_type_node);\n   int li_prec = TYPE_PRECISION (long_integer_type_node);\n   int lli_prec = TYPE_PRECISION (long_long_integer_type_node);\n-  if (prec <= i_prec)\n+\n+  tree utype = unsigned_type_for (TREE_TYPE (src));\n+  src = fold_convert (utype, src);\n+\n+  if (direct_internal_fn_supported_p (IFN_POPCOUNT, utype, OPTIMIZE_FOR_BOTH))\n+    use_ifn = true;\n+  else if (prec <= i_prec)\n     fn = builtin_decl_implicit (BUILT_IN_POPCOUNT);\n   else if (prec == li_prec)\n     fn = builtin_decl_implicit (BUILT_IN_POPCOUNTL);\n@@ -2046,12 +2053,11 @@ build_popcount_expr (tree src)\n   else\n     return NULL_TREE;\n \n-  tree utype = unsigned_type_for (TREE_TYPE (src));\n-  src = fold_convert (utype, src);\n-  if (prec < i_prec)\n-    src = fold_convert (unsigned_type_node, src);\n   tree call;\n-  if (prec == 2 * lli_prec)\n+  if (use_ifn)\n+      call = build_call_expr_internal_loc (UNKNOWN_LOCATION, IFN_POPCOUNT,\n+\t\t\t\t\t   integer_type_node, 1, src);\n+  else if (prec == 2 * lli_prec)\n     {\n       tree src1 = fold_convert (long_long_unsigned_type_node,\n \t\t\t\tfold_build2 (RSHIFT_EXPR, TREE_TYPE (src),\n@@ -2064,7 +2070,12 @@ build_popcount_expr (tree src)\n       call = fold_build2 (PLUS_EXPR, integer_type_node, call1, call2);\n     }\n   else\n-    call = build_call_expr (fn, 1, src);\n+    {\n+      if (prec < i_prec)\n+\tsrc = fold_convert (unsigned_type_node, src);\n+\n+      call = build_call_expr (fn, 1, src);\n+    }\n \n   return call;\n }"}]}