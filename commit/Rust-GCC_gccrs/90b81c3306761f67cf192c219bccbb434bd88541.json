{"sha": "90b81c3306761f67cf192c219bccbb434bd88541", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBiODFjMzMwNjc2MWY2N2NmMTkyYzIxOWJjY2JiNDM0YmQ4ODU0MQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2007-11-18T18:05:42Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2007-11-18T18:05:42Z"}, "message": "type_traits (is_reference, [...]): Declare.\n\n2007-11-18  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/tr1_impl/type_traits (is_reference, is_function,\n\tremove_cv, is_member_pointer, remove_reference): Declare.\n\t* include/tr1_impl/type_traitsfwd.h: Remove.\n\t* include/Makefile.am: Adjust.\n\t* include/Makefile.in: Regenerate.\n\nFrom-SVN: r130272", "tree": {"sha": "c7f7d284b06d9b071dc2d86b7783555602025ba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7f7d284b06d9b071dc2d86b7783555602025ba1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90b81c3306761f67cf192c219bccbb434bd88541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b81c3306761f67cf192c219bccbb434bd88541", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90b81c3306761f67cf192c219bccbb434bd88541", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90b81c3306761f67cf192c219bccbb434bd88541/comments", "author": null, "committer": null, "parents": [{"sha": "129c14bd4c1b3a043bc2bb2c80b1c2030ea72713", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/129c14bd4c1b3a043bc2bb2c80b1c2030ea72713", "html_url": "https://github.com/Rust-GCC/gccrs/commit/129c14bd4c1b3a043bc2bb2c80b1c2030ea72713"}], "stats": {"total": 208, "additions": 28, "deletions": 180}, "files": [{"sha": "da1204de6181843b9bf0c6c76372bf98ee4683d4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b81c3306761f67cf192c219bccbb434bd88541/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b81c3306761f67cf192c219bccbb434bd88541/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=90b81c3306761f67cf192c219bccbb434bd88541", "patch": "@@ -1,3 +1,11 @@\n+2007-11-18  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/tr1_impl/type_traits (is_reference, is_function,\n+\tremove_cv, is_member_pointer, remove_reference): Declare.\n+\t* include/tr1_impl/type_traitsfwd.h: Remove.\n+\t* include/Makefile.am: Adjust.\n+\t* include/Makefile.in: Regenerate.\n+\n 2007-11-17  Jonathan Wakely  <jwakely.gcc@gmail.com>\n \n \t* docs/html/17_intro/howto.html, docs/html/21_strings/howto.html,"}, {"sha": "9eee09016f5d292f47c4ddea00b8b86f0cf63236", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b81c3306761f67cf192c219bccbb434bd88541/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b81c3306761f67cf192c219bccbb434bd88541/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=90b81c3306761f67cf192c219bccbb434bd88541", "patch": "@@ -594,7 +594,6 @@ tr1_impl_headers = \\\n \t${tr1_impl_srcdir}/regex \\\n \t${tr1_impl_srcdir}/tuple \\\n \t${tr1_impl_srcdir}/type_traits \\\n-\t${tr1_impl_srcdir}/type_traitsfwd.h \\\n \t${tr1_impl_srcdir}/unordered_map \\\n \t${tr1_impl_srcdir}/unordered_set \\\n \t${tr1_impl_srcdir}/utility"}, {"sha": "9b2fb033dbe7f8e5a8dd0b6f6fc61b2791f81207", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b81c3306761f67cf192c219bccbb434bd88541/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b81c3306761f67cf192c219bccbb434bd88541/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=90b81c3306761f67cf192c219bccbb434bd88541", "patch": "@@ -840,7 +840,6 @@ tr1_impl_headers = \\\n \t${tr1_impl_srcdir}/regex \\\n \t${tr1_impl_srcdir}/tuple \\\n \t${tr1_impl_srcdir}/type_traits \\\n-\t${tr1_impl_srcdir}/type_traitsfwd.h \\\n \t${tr1_impl_srcdir}/unordered_map \\\n \t${tr1_impl_srcdir}/unordered_set \\\n \t${tr1_impl_srcdir}/utility"}, {"sha": "2a6227b7c9765c69dc9178e3c807c9d11c172218", "filename": "libstdc++-v3/include/tr1_impl/type_traits", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90b81c3306761f67cf192c219bccbb434bd88541/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90b81c3306761f67cf192c219bccbb434bd88541/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traits?ref=90b81c3306761f67cf192c219bccbb434bd88541", "patch": "@@ -32,8 +32,6 @@\n *  You should not attempt to use it directly.\n */\n \n-#include <tr1_impl/type_traitsfwd.h>\n-\n namespace std\n {\n _GLIBCXX_BEGIN_NAMESPACE_TR1\n@@ -131,7 +129,13 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct is_pointer\n     : public false_type { };\n   _DEFINE_SPEC(1, is_pointer, _Tp*, true)\n- \n+\n+  template<typename _Tp>\n+    struct is_reference;\n+\n+  template<typename _Tp>\n+    struct is_function;\n+\n   template<typename>\n     struct is_member_object_pointer\n     : public false_type { };\n@@ -171,6 +175,9 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct __is_function_helper<_Res(_ArgTypes......)>\n     : public true_type { };\n \n+  template<typename _Tp>\n+    struct remove_cv;\n+\n   template<typename _Tp>\n     struct is_function\n     : public integral_constant<bool, (__is_function_helper<typename\n@@ -197,6 +204,9 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t\t\t\t       || is_void<_Tp>::value)>\n     { };\n \n+  template<typename _Tp>\n+    struct is_member_pointer;\n+\n   template<typename _Tp>\n     struct is_scalar\n     : public integral_constant<bool, (is_arithmetic<_Tp>::value\n@@ -268,8 +278,8 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n   template<typename _Tp>\n     struct rank<_Tp[]>\n     : public integral_constant<std::size_t, 1 + rank<_Tp>::value> { };\n-   \n-  template<typename, unsigned>\n+\n+  template<typename, unsigned _Uint = 0>\n     struct extent\n     : public integral_constant<std::size_t, 0> { };\n   \n@@ -286,7 +296,7 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n \t\t\t       _Uint == 0 ? 0 : extent<_Tp,\n \t\t\t\t\t\t       _Uint - 1>::value>\n     { };\n-  \n+\n   /// @brief  relationships between types [4.6].\n   template<typename, typename>\n     struct is_same\n@@ -369,7 +379,10 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n     struct remove_pointer\n     { typedef _Tp     type; };\n   _DEFINE_SPEC(1, remove_pointer, _Tp*, false)\n-  \n+\n+  template<typename _Tp>\n+    struct remove_reference;\n+\n   template<typename _Tp>\n     struct add_pointer\n     { typedef typename remove_reference<_Tp>::type*     type; };"}, {"sha": "558f110dc4a993c1e1cf5b8ab92469cdb48705d1", "filename": "libstdc++-v3/include/tr1_impl/type_traitsfwd.h", "status": "removed", "additions": 0, "deletions": 171, "changes": 171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/129c14bd4c1b3a043bc2bb2c80b1c2030ea72713/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traitsfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/129c14bd4c1b3a043bc2bb2c80b1c2030ea72713/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traitsfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Ftype_traitsfwd.h?ref=129c14bd4c1b3a043bc2bb2c80b1c2030ea72713", "patch": "@@ -1,171 +0,0 @@\n-// TR1 type_traitsfwd.h -*- C++ -*-\n-\n-// Copyright (C) 2007 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 2, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING.  If not, write to the Free\n-// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n-// USA.\n-\n-// As a special exception, you may use this file as part of a free software\n-// library without restriction.  Specifically, if other files instantiate\n-// templates or use macros or inline functions from this file, or you compile\n-// this file and link it with other files to produce an executable, this\n-// file does not by itself cause the resulting executable to be covered by\n-// the GNU General Public License.  This exception does not however\n-// invalidate any other reasons why the executable file might be covered by\n-// the GNU General Public License.\n-\n-/** @file tr1_impl/type_traitsfwd.h\n- *  This is an internal header file, included by other library headers.\n- *  You should not attempt to use it directly.\n- */\n-\n-namespace std\n-{\n-_GLIBCXX_BEGIN_NAMESPACE_TR1\n-\n-  /// @brief  helper classes [4.3].\n-  template<typename _Tp, _Tp __v>\n-    struct integral_constant;\n-  typedef integral_constant<bool, true>     true_type;\n-  typedef integral_constant<bool, false>    false_type;\n-\n-  /// @brief  primary type categories [4.5.1].\n-  template<typename _Tp>\n-    struct is_void;\n-\n-  template<typename _Tp>\n-    struct is_integral;\n-\n-  template<typename _Tp>\n-    struct is_floating_point;\n-\n-  template<typename _Tp>\n-    struct is_array;\n-  \n-  template<typename _Tp>\n-    struct is_pointer;\n- \n-  template<typename _Tp>\n-    struct is_reference;\n-\n-  template<typename _Tp>\n-    struct is_member_object_pointer;\n-  \n-  template<typename _Tp>\n-    struct is_member_function_pointer;   \n-\n-  template<typename _Tp>\n-    struct is_enum;\n-  \n-  template<typename _Tp>\n-    struct is_union;\n-  \n-  template<typename _Tp>\n-    struct is_class;\n-\n-  template<typename _Tp>\n-    struct is_function;\n-\n-  /// @brief  composite type traits [4.5.2].\n-  template<typename _Tp>\n-    struct is_arithmetic;\n-\n-  template<typename _Tp>\n-    struct is_fundamental;\n-\n-  template<typename _Tp>\n-    struct is_object;\n-\n-  template<typename _Tp>\n-    struct is_scalar;\n-\n-  template<typename _Tp>\n-    struct is_compound;\n-\n-  template<typename _Tp>\n-    struct is_member_pointer;\n-\n-  /// @brief  type properties [4.5.3].\n-  template<typename _Tp>\n-    struct is_const;\n-  \n-  template<typename _Tp>\n-    struct is_volatile;\n-\n-  template<typename _Tp>\n-    struct is_empty;\n-  \n-  template<typename _Tp>\n-    struct is_polymorphic;\n-  \n-  template<typename _Tp>\n-    struct is_abstract;\n-  \n-  template<typename _Tp>\n-    struct has_virtual_destructor;\n-  \n-  template<typename _Tp>\n-    struct alignment_of;\n-  \n-  template<typename _Tp>\n-    struct rank;\n-  \n-  template<typename _Tp, unsigned _Uint = 0>\n-    struct extent;\n-  \n-  /// @brief  relationships between types [4.6].\n-  template<typename _Tp, typename _Up>\n-    struct is_same;\n-\n-  /// @brief  const-volatile modifications [4.7.1].\n-  template<typename _Tp>\n-    struct remove_const;\n-  \n-  template<typename _Tp>\n-    struct remove_volatile;\n-  \n-  template<typename _Tp>\n-    struct remove_cv;\n-  \n-  template<typename _Tp>\n-    struct add_const;\n-   \n-  template<typename _Tp>\n-    struct add_volatile;\n-  \n-  template<typename _Tp>\n-    struct add_cv;\n-\n-  /// @brief  reference modifications [4.7.2].\n-  template<typename _Tp>\n-    struct remove_reference;\n-  \n-  /// @brief  array modifications [4.7.3].\n-  template<typename _Tp>\n-    struct remove_extent;\n-\n-  template<typename _Tp>\n-    struct remove_all_extents;\n-\n-  /// @brief  pointer modifications [4.7.4].\n-  template<typename _Tp>\n-    struct remove_pointer;\n-  \n-  template<typename _Tp>\n-    struct add_pointer;\n-\n-_GLIBCXX_END_NAMESPACE_TR1\n-}"}]}