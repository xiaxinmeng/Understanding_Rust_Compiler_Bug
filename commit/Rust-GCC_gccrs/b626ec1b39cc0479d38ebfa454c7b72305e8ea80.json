{"sha": "b626ec1b39cc0479d38ebfa454c7b72305e8ea80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYyNmVjMWIzOWNjMDQ3OWQzOGViZmE0NTRjN2I3MjMwNWU4ZWE4MA==", "commit": {"author": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-12-29T21:28:25Z"}, "committer": {"name": "Gabriel Dos Reis", "email": "gdr@gcc.gnu.org", "date": "2002-12-29T21:28:25Z"}, "message": "New test.\n\nFrom-SVN: r60610", "tree": {"sha": "500f37fa6ead91b15f81ed479625644c217f0226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/500f37fa6ead91b15f81ed479625644c217f0226"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b626ec1b39cc0479d38ebfa454c7b72305e8ea80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b626ec1b39cc0479d38ebfa454c7b72305e8ea80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b626ec1b39cc0479d38ebfa454c7b72305e8ea80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b626ec1b39cc0479d38ebfa454c7b72305e8ea80/comments", "author": null, "committer": null, "parents": [{"sha": "17db6bcc2930f8e4a913fdf1356855194d62feeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17db6bcc2930f8e4a913fdf1356855194d62feeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17db6bcc2930f8e4a913fdf1356855194d62feeb"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "931ecd88a2f95b1b7a15b381fae1722166affa76", "filename": "gcc/testsuite/g++.dg/parse/primary-expression-1.C", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b626ec1b39cc0479d38ebfa454c7b72305e8ea80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fprimary-expression-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b626ec1b39cc0479d38ebfa454c7b72305e8ea80/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fprimary-expression-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fprimary-expression-1.C?ref=b626ec1b39cc0479d38ebfa454c7b72305e8ea80", "patch": "@@ -0,0 +1,58 @@\n+// Copyright (C) 2002 Free Software Foundation\n+// Origin: C++/717\n+// Contributed by Gabriel Dos Reis <gdr@integrable-solutions.net\n+// { dg-do compile }\n+\n+class _eAny\n+{\n+public:\n+   _eAny(){}\n+};\n+\n+template <class X>\n+class _eSeq\n+{\n+public:\n+   _eSeq(const X thing){}\n+   int _oHash() {return 0;}\n+   _eSeq<X > _oPlusPlus(const _eSeq<X > other) const\n+   {\n+      return *this;\n+   }\n+   _eSeq<X > take(const _eSeq<X > other) const\n+   {\n+      return *this;\n+   }\n+};\n+\n+\n+template <class X>\n+class _eHndl\n+{\n+public:\n+   _eHndl(const _eAny *obj){}\n+};\n+\n+class VarInstances : public _eAny\n+{\n+public:\n+   VarInstances() : _eAny() {}\n+};\n+\n+void testFunc(const VarInstances *testInstance)\n+{\n+   const _eSeq<_eHndl<VarInstances> > temp1 =\n+      _eSeq<_eHndl<VarInstances> >(_eHndl<VarInstances>(testInstance));\n+\n+   if((_eSeq<_eHndl<VarInstances>\n+       >(_eHndl<VarInstances>(testInstance))._oPlusPlus(temp1)._oHash() ==\n+       7))\n+      {\n+         return;\n+      }\n+}\n+\n+int main(int argc, char** argv)\n+{\n+   testFunc(new VarInstances());\n+}"}]}