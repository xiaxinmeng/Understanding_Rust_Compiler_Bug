{"sha": "d78c6ad5e1c9ae5a11bc308e39db85353eb1d3ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc4YzZhZDVlMWM5YWU1YTExYmMzMDhlMzlkYjg1MzUzZWIxZDNlZg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-05T20:11:43Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-10-05T20:11:43Z"}, "message": "(error and its kin): Use #defines for the argument lists for ease of\nadding arguments and add one arg.\n\nFrom-SVN: r5612", "tree": {"sha": "03285210519de93ea43a3cd0b0a0ba201f6ddd25", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03285210519de93ea43a3cd0b0a0ba201f6ddd25"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d78c6ad5e1c9ae5a11bc308e39db85353eb1d3ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78c6ad5e1c9ae5a11bc308e39db85353eb1d3ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d78c6ad5e1c9ae5a11bc308e39db85353eb1d3ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d78c6ad5e1c9ae5a11bc308e39db85353eb1d3ef/comments", "author": null, "committer": null, "parents": [{"sha": "9e92edb4fb04f8584a4900857bd86758e62f3099", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e92edb4fb04f8584a4900857bd86758e62f3099", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e92edb4fb04f8584a4900857bd86758e62f3099"}], "stats": {"total": 108, "additions": 53, "deletions": 55}, "files": [{"sha": "e7d630b6c3ddad6cfd38d8dfe99fefbd289f53be", "filename": "gcc/toplev.c", "status": "modified", "additions": 53, "deletions": 55, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d78c6ad5e1c9ae5a11bc308e39db85353eb1d3ef/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d78c6ad5e1c9ae5a11bc308e39db85353eb1d3ef/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=d78c6ad5e1c9ae5a11bc308e39db85353eb1d3ef", "patch": "@@ -879,15 +879,6 @@ fatal_io_error (name)\n   exit (35);\n }\n \n-void\n-fatal (s, v)\n-     char *s;\n-     int v;\n-{\n-  error (s, v);\n-  exit (34);\n-}\n-\n /* Called to give a better error message when we don't have an insn to match\n    what we are looking for or if the insn's constraints aren't satisfied,\n    rather than just calling abort().  */\n@@ -1030,30 +1021,31 @@ report_error_function (file)\n }\n \n /* Report an error at the current line number.\n-   S is a string and V and V2 are args for `printf'.  We use HOST_WIDE_INT\n+   S is a string and ARGLIST are args for `printf'.  We use HOST_WIDE_INT\n    as the type for these args assuming it is wide enough to hold a\n    pointer.  This isn't terribly portable, but is the best we can do\n    without vprintf universally available.  */\n \n+#define arglist a1, a2, a3\n+#define arglist_dcl HOST_WIDE_INT a1, a2, a3;\n+\n void\n-error (s, v, v2)\n+error (s, arglist)\n      char *s;\n-     HOST_WIDE_INT v;\t\t/* Also used as pointer */\n-     HOST_WIDE_INT v2;\t\t/* Also used as pointer */\n+     arglist_dcl\n {\n-  error_with_file_and_line (input_filename, lineno, s, v, v2);\n+  error_with_file_and_line (input_filename, lineno, s, arglist);\n }\n \n /* Report an error at line LINE of file FILE.\n-   S and V are a string and an arg for `printf'.  */\n+   S and ARGLIST are a string and args for `printf'.  */\n \n void\n-error_with_file_and_line (file, line, s, v, v2)\n+error_with_file_and_line (file, line, s, arglist)\n      char *file;\n      int line;\n      char *s;\n-     HOST_WIDE_INT v;\n-     HOST_WIDE_INT v2;\n+     arglist_dcl\n {\n   count_error (0);\n \n@@ -1063,7 +1055,8 @@ error_with_file_and_line (file, line, s, v, v2)\n     fprintf (stderr, \"%s:%d: \", file, line);\n   else\n     fprintf (stderr, \"%s: \", progname);\n-  fprintf (stderr, s, v, v2);\n+  fprintf (stderr, s, arglist);\n+\n   fprintf (stderr, \"\\n\");\n }\n \n@@ -1093,16 +1086,15 @@ error_with_decl (decl, s, v)\n }\n \n /* Report an error at the line number of the insn INSN.\n-   S and V are a string and an arg for `printf'.\n+   S and ARGLIST are a string and args for `printf'.\n    This is used only when INSN is an `asm' with operands,\n    and each ASM_OPERANDS records its own source file and line.  */\n \n void\n-error_for_asm (insn, s, v, v2)\n+error_for_asm (insn, s, arglist)\n      rtx insn;\n      char *s;\n-     HOST_WIDE_INT v;\t\t/* Also used as pointer */\n-     HOST_WIDE_INT v2;\t\t/* Also used as pointer */\n+     arglist_dcl\n {\n   char *filename;\n   int line;\n@@ -1124,18 +1116,27 @@ error_for_asm (insn, s, v, v2)\n   filename = ASM_OPERANDS_SOURCE_FILE (asmop);\n   line = ASM_OPERANDS_SOURCE_LINE (asmop);\n \n-  error_with_file_and_line (filename, line, s, v, v2);\n+  error_with_file_and_line (filename, line, s, arglist);\n+}\n+\n+void\n+fatal (s, arglist)\n+     char *s;\n+     arglist_dcl\n+{\n+  error (s, arglist);\n+  exit (34);\n }\n \n /* Report a warning at line LINE.\n-   S and V are a string and an arg for `printf'.  */\n+   S and ARGLIST are a string and args for `printf'.  */\n \n void\n-warning_with_file_and_line (file, line, s, v, v2, v3)\n+warning_with_file_and_line (file, line, s, arglist)\n      char *file;\n      int line;\n      char *s;\n-     HOST_WIDE_INT v, v2, v3;\n+     arglist_dcl\n {\n   if (count_error (1) == 0)\n     return;\n@@ -1148,19 +1149,19 @@ warning_with_file_and_line (file, line, s, v, v2, v3)\n     fprintf (stderr, \"%s: \", progname);\n \n   fprintf (stderr, \"warning: \");\n-  fprintf (stderr, s, v, v2, v3);\n+  fprintf (stderr, s, arglist);\n   fprintf (stderr, \"\\n\");\n }\n \n /* Report a warning at the current line number.\n-   S and V are a string and an arg for `printf'.  */\n+   S and ARGLIST are a string and args for `printf'.  */\n \n void\n-warning (s, v, v2, v3)\n+warning (s, arglist)\n      char *s;\n-     HOST_WIDE_INT v, v2, v3;\t/* Also used as pointer */\n+     arglist_dcl\n {\n-  warning_with_file_and_line (input_filename, lineno, s, v, v2, v3);\n+  warning_with_file_and_line (input_filename, lineno, s, arglist);\n }\n \n /* Report a warning at the declaration DECL.\n@@ -1192,16 +1193,15 @@ warning_with_decl (decl, s, v)\n }\n \n /* Report a warning at the line number of the insn INSN.\n-   S and V are a string and an arg for `printf'.\n+   S and ARGLIST are a string and args for `printf'.\n    This is used only when INSN is an `asm' with operands,\n    and each ASM_OPERANDS records its own source file and line.  */\n \n void\n-warning_for_asm (insn, s, v, v2)\n+warning_for_asm (insn, s, arglist)\n      rtx insn;\n      char *s;\n-     HOST_WIDE_INT v;\t\t/* Also used as pointer */\n-     HOST_WIDE_INT v2;\t\t/* Also used as pointer */\n+     arglist_dcl\n {\n   char *filename;\n   int line;\n@@ -1223,22 +1223,21 @@ warning_for_asm (insn, s, v, v2)\n   filename = ASM_OPERANDS_SOURCE_FILE (asmop);\n   line = ASM_OPERANDS_SOURCE_LINE (asmop);\n \n-  warning_with_file_and_line (filename, line, s, v, v2);\n+  warning_with_file_and_line (filename, line, s, arglist);\n }\n \f\n /* These functions issue either warnings or errors depending on\n    -pedantic-errors.  */\n \n void\n-pedwarn (s, v, v2)\n+pedwarn (s, arglist)\n      char *s;\n-     HOST_WIDE_INT v;\t\t/* Also used as pointer */\n-     HOST_WIDE_INT v2;\n+     arglist_dcl\n {\n   if (flag_pedantic_errors)\n-    error (s, v, v2);\n+    error (s, arglist);\n   else\n-    warning (s, v, v2);\n+    warning (s, arglist);\n }\n \n void\n@@ -1254,26 +1253,25 @@ pedwarn_with_decl (decl, s, v)\n }\n \n void\n-pedwarn_with_file_and_line (file, line, s, v, v2)\n+pedwarn_with_file_and_line (file, line, s, arglist)\n      char *file;\n      int line;\n      char *s;\n-     HOST_WIDE_INT v;\n-     HOST_WIDE_INT v2;\n+     arglist_dcl\n {\n   if (flag_pedantic_errors)\n-    error_with_file_and_line (file, line, s, v, v2);\n+    error_with_file_and_line (file, line, s, arglist);\n   else\n-    warning_with_file_and_line (file, line, s, v, v2);\n+    warning_with_file_and_line (file, line, s, arglist);\n }\n \n /* Apologize for not implementing some feature.\n-   S, V, and V2 are a string and args for `printf'.  */\n+   S and ARGLIST are a string and args for `printf'.  */\n \n void\n-sorry (s, v, v2)\n+sorry (s, arglist)\n      char *s;\n-     HOST_WIDE_INT v, v2;\n+     arglist_dcl\n {\n   sorrycount++;\n   if (input_filename)\n@@ -1282,25 +1280,25 @@ sorry (s, v, v2)\n     fprintf (stderr, \"%s: \", progname);\n \n   fprintf (stderr, \"sorry, not implemented: \");\n-  fprintf (stderr, s, v, v2);\n+  fprintf (stderr, s, arglist);\n   fprintf (stderr, \"\\n\");\n }\n \n /* Apologize for not implementing some feature, then quit.\n-   S, V, and V2 are a string and args for `printf'.  */\n+   S and ARGLIST are a string and args for `printf'.  */\n \n void\n-really_sorry (s, v, v2)\n+really_sorry (s, arglist)\n      char *s;\n-     HOST_WIDE_INT v, v2;\n+     arglist_dcl\n {\n   if (input_filename)\n     fprintf (stderr, \"%s:%d: \", input_filename, lineno);\n   else\n     fprintf (stderr, \"%s: \", progname);\n \n   fprintf (stderr, \"sorry, not implemented: \");\n-  fprintf (stderr, s, v, v2);\n+  fprintf (stderr, s, arglist);\n   fatal (\" (fatal)\\n\");\n }\n \f"}]}