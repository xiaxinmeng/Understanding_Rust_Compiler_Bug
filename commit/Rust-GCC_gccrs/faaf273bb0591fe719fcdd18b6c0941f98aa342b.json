{"sha": "faaf273bb0591fe719fcdd18b6c0941f98aa342b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmFhZjI3M2JiMDU5MWZlNzE5ZmNkZDE4YjZjMDk0MWY5OGFhMzQyYg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-04-20T11:56:33Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-04-20T11:56:33Z"}, "message": "tree-ssa-copy.c (propagate_tree_value_into_stmt): Use update_call_from_tree when propagating into a call.\n\n2012-04-20  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-ssa-copy.c (propagate_tree_value_into_stmt): Use\n\tupdate_call_from_tree when propagating into a call.\n\n\t* g++.dg/torture/20120420-1.C: New testcase.\n\nFrom-SVN: r186622", "tree": {"sha": "a2a8d5dd0382fc2ff6797df59b983cf18127cd13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2a8d5dd0382fc2ff6797df59b983cf18127cd13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/faaf273bb0591fe719fcdd18b6c0941f98aa342b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faaf273bb0591fe719fcdd18b6c0941f98aa342b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faaf273bb0591fe719fcdd18b6c0941f98aa342b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faaf273bb0591fe719fcdd18b6c0941f98aa342b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a51e5fa2c28e88b936ca246a74bf2cba30c5a40d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a51e5fa2c28e88b936ca246a74bf2cba30c5a40d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a51e5fa2c28e88b936ca246a74bf2cba30c5a40d"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "68593c90b8c200a8c307a30b02b3b5a00b05253f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faaf273bb0591fe719fcdd18b6c0941f98aa342b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faaf273bb0591fe719fcdd18b6c0941f98aa342b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=faaf273bb0591fe719fcdd18b6c0941f98aa342b", "patch": "@@ -1,3 +1,8 @@\n+2012-04-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-ssa-copy.c (propagate_tree_value_into_stmt): Use\n+\tupdate_call_from_tree when propagating into a call.\n+\n 2012-04-20  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_emit_savres_rtx): Formatting."}, {"sha": "1cfffd8e7f7ae9bf632fe869d2aaa8d9bf7754f6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faaf273bb0591fe719fcdd18b6c0941f98aa342b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faaf273bb0591fe719fcdd18b6c0941f98aa342b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=faaf273bb0591fe719fcdd18b6c0941f98aa342b", "patch": "@@ -1,3 +1,7 @@\n+2012-04-20  Richard Guenther  <rguenther@suse.de>\n+\n+\t* g++.dg/torture/20120420-1.C: New testcase.\n+\n 2012-04-19  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* gcc.target/i386/pr45830.c: Update scan-tree-dump."}, {"sha": "ada0ab67e939a51ca819376b0951187f889103ed", "filename": "gcc/testsuite/g++.dg/torture/20120420-1.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faaf273bb0591fe719fcdd18b6c0941f98aa342b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20120420-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faaf273bb0591fe719fcdd18b6c0941f98aa342b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20120420-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2F20120420-1.C?ref=faaf273bb0591fe719fcdd18b6c0941f98aa342b", "patch": "@@ -0,0 +1,29 @@\n+// { dg-do compile }\n+\n+int g, *gp[100];\n+struct V {\n+    int* x;\n+    int y;\n+};\n+\n+void foo (V **p, V* end, int i)\n+{\n+  *p = 0;\n+  V* pp = *p;\n+  int s = 100;\n+  for (; pp < end; )\n+    {\n+      pp++;\n+      (pp-1)->x = &g;\n+      if (g)\n+\t{\n+\t  if (g>10)\n+\t    g++;\n+\t  int *t = (int*) operator new (100);\n+\t  (pp-1)->x = t;\n+\t}\n+      else\n+\ts--;\n+      gp[end-pp] = (pp-1)->x + s;\n+    }\n+}"}, {"sha": "45b5c92c99973075c24c0ff119a213c67155a84c", "filename": "gcc/tree-ssa-copy.c", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/faaf273bb0591fe719fcdd18b6c0941f98aa342b/gcc%2Ftree-ssa-copy.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/faaf273bb0591fe719fcdd18b6c0941f98aa342b/gcc%2Ftree-ssa-copy.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-copy.c?ref=faaf273bb0591fe719fcdd18b6c0941f98aa342b", "patch": "@@ -257,13 +257,11 @@ propagate_tree_value_into_stmt (gimple_stmt_iterator *gsi, tree val)\n   else if (is_gimple_call (stmt)\n            && gimple_call_lhs (stmt) != NULL_TREE)\n     {\n-      gimple new_stmt;\n-\n       tree expr = NULL_TREE;\n+      bool res;\n       propagate_tree_value (&expr, val);\n-      new_stmt = gimple_build_assign (gimple_call_lhs (stmt), expr);\n-      move_ssa_defining_stmt_for_defs (new_stmt, stmt);\n-      gsi_replace (gsi, new_stmt, false);\n+      res = update_call_from_tree (gsi, expr);\n+      gcc_assert (res);\n     }\n   else if (gimple_code (stmt) == GIMPLE_SWITCH)\n     propagate_tree_value (gimple_switch_index_ptr (stmt), val);"}]}