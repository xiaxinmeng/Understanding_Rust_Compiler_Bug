{"sha": "88743d3a8a58f119524f808d11bb3f7f0d0982e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODg3NDNkM2E4YTU4ZjExOTUyNGY4MDhkMTFiYjNmN2YwZDA5ODJlOQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-01-09T19:19:40Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-01-09T19:19:40Z"}, "message": "re PR tree-optimization/34708 (Inlining heuristics issue)\n\n\n\tPR tree-optimization/34708\n\t* tree-inline.c (estimate_num_insns_1): Compute cost of SWITCH_EXPR\n\tbased on number of case labels.\n\t(init_inline_once): Remove switch_cost.\n\t* tree-inline.h (eni_weights_d): Remove switch_cost.\n\nFrom-SVN: r131433", "tree": {"sha": "1e0d0defe7e6cc65d0b83210c13086a8e138a25b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e0d0defe7e6cc65d0b83210c13086a8e138a25b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88743d3a8a58f119524f808d11bb3f7f0d0982e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88743d3a8a58f119524f808d11bb3f7f0d0982e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88743d3a8a58f119524f808d11bb3f7f0d0982e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88743d3a8a58f119524f808d11bb3f7f0d0982e9/comments", "author": null, "committer": null, "parents": [{"sha": "d4b7e62e443c269e1c50653a763a61a8ce7cc676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4b7e62e443c269e1c50653a763a61a8ce7cc676", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4b7e62e443c269e1c50653a763a61a8ce7cc676"}], "stats": {"total": 23, "additions": 14, "deletions": 9}, "files": [{"sha": "9f03fe3696b371adf24bfcef6accf7893fe3ceb7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88743d3a8a58f119524f808d11bb3f7f0d0982e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88743d3a8a58f119524f808d11bb3f7f0d0982e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=88743d3a8a58f119524f808d11bb3f7f0d0982e9", "patch": "@@ -1,3 +1,11 @@\n+2008-01-09  Jan Hubicka  <jh@suse.cz>\n+\n+\tPR tree-optimization/34708\n+\t* tree-inline.c (estimate_num_insns_1): Compute cost of SWITCH_EXPR\n+\tbased on number of case labels.\n+\t(init_inline_once): Remove switch_cost.\n+\t* tree-inline.h (eni_weights_d): Remove switch_cost.\n+\n 2008-01-09  Richard Guenther  <rguenther@suse.de>\n \tAndrew Pinski  <andrew_pinski@playstation.sony.com>\n "}, {"sha": "f825c5d88fba29ab4ffb4cb22e2dcac0de01caf5", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88743d3a8a58f119524f808d11bb3f7f0d0982e9/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88743d3a8a58f119524f808d11bb3f7f0d0982e9/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=88743d3a8a58f119524f808d11bb3f7f0d0982e9", "patch": "@@ -2387,9 +2387,12 @@ estimate_num_insns_1 (tree *tp, int *walk_subtrees, void *data)\n       break;\n \n     case SWITCH_EXPR:\n-      /* TODO: Cost of a switch should be derived from the number of\n-\t branches.  */\n-      d->count += d->weights->switch_cost;\n+      /* Take into account cost of the switch + guess 2 conditional jumps for\n+         each case label.  \n+\n+\t TODO: once the switch expansion logic is sufficiently separated, we can\n+\t do better job on estimating cost of the switch.  */\n+      d->count += TREE_VEC_LENGTH (SWITCH_LABELS (x)) * 2;\n       break;\n \n     /* Few special cases of expensive operations.  This is useful\n@@ -2518,13 +2521,11 @@ init_inline_once (void)\n   eni_inlining_weights.call_cost = PARAM_VALUE (PARAM_INLINE_CALL_COST);\n   eni_inlining_weights.target_builtin_call_cost = 1;\n   eni_inlining_weights.div_mod_cost = 10;\n-  eni_inlining_weights.switch_cost = 1;\n   eni_inlining_weights.omp_cost = 40;\n \n   eni_size_weights.call_cost = 1;\n   eni_size_weights.target_builtin_call_cost = 1;\n   eni_size_weights.div_mod_cost = 1;\n-  eni_size_weights.switch_cost = 10;\n   eni_size_weights.omp_cost = 40;\n \n   /* Estimating time for call is difficult, since we have no idea what the\n@@ -2534,7 +2535,6 @@ init_inline_once (void)\n   eni_time_weights.call_cost = 10;\n   eni_time_weights.target_builtin_call_cost = 10;\n   eni_time_weights.div_mod_cost = 10;\n-  eni_time_weights.switch_cost = 4;\n   eni_time_weights.omp_cost = 40;\n }\n "}, {"sha": "893b9c9d0ce3f55458b8b89b75d411f58ea2abc1", "filename": "gcc/tree-inline.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88743d3a8a58f119524f808d11bb3f7f0d0982e9/gcc%2Ftree-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88743d3a8a58f119524f808d11bb3f7f0d0982e9/gcc%2Ftree-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.h?ref=88743d3a8a58f119524f808d11bb3f7f0d0982e9", "patch": "@@ -115,9 +115,6 @@ typedef struct eni_weights_d\n   /* Cost of \"expensive\" div and mod operations.  */\n   unsigned div_mod_cost;\n \n-  /* Cost of switch statement.  */\n-  unsigned switch_cost;\n-\n   /* Cost for omp construct.  */\n   unsigned omp_cost;\n } eni_weights;"}]}