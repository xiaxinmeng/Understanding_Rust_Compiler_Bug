{"sha": "3cedc655c2928707612da663211c0802a8ec9319", "node_id": "C_kwDOANBUbNoAKDNjZWRjNjU1YzI5Mjg3MDc2MTJkYTY2MzIxMWMwODAyYThlYzkzMTk", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-10-19T17:45:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-19T17:45:47Z"}, "message": "Merge #1596\n\n1596: Add more implementations for TARGET_RUST_OS_INFO r=philberty a=ibuclaw\n\nPretty much all follow the same template as how darwin was added in the first commit, so mostly uninteresting.\r\n\r\nThe only slight deviation is with `*-*-linux*`, where rather than putting it in a common `glibc-rust.cc` file, I've instead opted to force each platform have their own source file. So Linux gets a `linux-rust.cc` file, and anyone who wants to add Hurd, kFreeBSD, or kOpenSolaris later can do so by adding a case to this switch with the appropriately named file (i.e: `gnu-rust.cc` for Hurd).\r\n\r\nThe same can also be said for MinGW targets - `winnt-rust.cc` is explicitly _not_ set for Cygwin, and I'd prefer that whoever does add Cygwin support will create a separate file for it - otherwise you've either got to modify the target headers to add whatever defines you need in order to abstract the two away, or start adding some defines to `tm_rust.h` to expose hints about the target known at configure time.\r\n\r\nLinux is also the only implementation that has an `#ifndef` condition, as not all Linux targets include `linux-android.{h,opt}`.\r\n\r\nChecked dumps of target_options on a plethora of target configurations, though this list is by no means exhaustive.\r\n\r\n---\r\n\r\n<details>\r\n  <summary>i686-dragonflybsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"dragonfly\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\n<details>\r\n  <summary>x86_64-dragonflybsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"dragonfly\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>aarch64-freebsd12, ia64-freebsd6, riscv64-freebsd12</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>arm-freebsd12</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>i486-freebsd4, i686-freebsd6</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\n<details>\r\n  <summary>powerpc-freebsd6</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>sparc64-freebsd6</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>x86_64-freebsd6</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>aarch64-fuchsia</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"fushsia\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>x86_64-fuchsia</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"fushsia\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>i686-kfreebsd-gnu</summary>\r\n\r\n```\r\ntarget_endian: \"little\"\r\ntarget_pointer_width: \"32\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details> \r\n<details>\r\n  <summary>arm-linux-androideabi</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"android\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>aarch64-linux-gnu, alpha-linux-gnu, ia64-linux, riscv64-unknown-linux-gnu</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>am33_2.0-linux-gnu, csky-linux-gnu, mips64el-st-linux-gnu, nios2-linux-gnu, powerpcle-linux, riscv32-unknown-linux-gnu, rx-linux, shle-linux, vax-linux-gnu</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>arc-linux-uclibc, bfin-linux-uclibc</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"uclibc\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>arceb-linux-uclibc, or1k-linux-uclibc</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"uclibc\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>frv-linux, h8300-linux, hppa-linux-gnu, m68k-linux, microblaze-linux, mips64octeon-linux, mipsisa32r2-linux-gnu, mipsisa64r2-linux, mips-linux, mips-mti-linux, powerpc64-linux_altivec, powerpc-linux, s390-linux-gnu, sparc-leon3-linux-gnu, sparc-linux-gnu, xtensa-linux</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>hppa64-linux-gnu, s390x-linux-gnu, sparc64-linux</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>i686-pc-linux-gnu, i686-pc-linux</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>or1k-linux-musl</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"musl\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>i686-mingw32crt</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"pc\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"windows\"\r\ntarget_family: \"windows\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>x86_64-mingw32, x86_64-w64-mingw32</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"pc\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"windows\"\r\ntarget_family: \"windows\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>aarch64-netbsd, alpha-netbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>arm-netbsdelf, vax-netbsdelf</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>hppa-netbsd, m68k-netbsdelf, mips-netbsd, powerpc-netbsd, sh-netbsdelf, sparc-netbsdelf</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>i686-netbsdelf9</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\n<details>\r\n  <summary>sparc64-netbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details> \r\n<details>\r\n  <summary>x86_64-netbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>alpha-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>bfin-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>i686-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>sparc64-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>x86_64-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>aarch64-wrs-vxworks</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"wrs\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"vxworks\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>arm-wrs-vxworks7</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"wrs\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"vxworks\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\r\n<details>\r\n  <summary>i686-wrs-vxworks, i686-wrs-vxworksae</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"wrs\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"vxworks\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\n<details>\r\n  <summary>mips-wrs-vxworks, powerpc-wrs-vxworksae, powerpc-wrs-vxworks, powerpc-wrs-vxworksmils, sh-wrs-vxworks, sparc-wrs-vxworks</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"wrs\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"vxworks\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>arm-uclinux_eabi, bfin-uclinux, c6x-uclinux</summary>\r\n\r\n```\r\ntarget_endian: \"little\"\r\ntarget_pointer_width: \"32\"\r\n```\r\n</details>\r\r\n<details>\r\n  <summary>lm32-uclinux, m68k-uclinux, moxie-uclinux, xtensa-uclinux</summary>\r\n\r\n```\r\ntarget_endian: \"big\"\r\ntarget_pointer_width: \"32\"\r\n```\r\n</details>\n\nCo-authored-by: Iain Buclaw <ibuclaw@gdcproject.org>", "tree": {"sha": "0408311595ac82a176b6e51030f69126d7269caa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0408311595ac82a176b6e51030f69126d7269caa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cedc655c2928707612da663211c0802a8ec9319", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjUDfLCRBK7hj4Ov3rIwAAMDMIAE+igNPMQ0DKv07Lpnja/pTU\nOrNNSW54VKUBnW0L/D5wFer9DXQM+iLviInWsS+YoEhSNfYoICWCmWUwj21ijlA5\n/FsJ7+FyCAJju8vzySbD2Tdmdzv2Wi+21tGLpD75Rkd54kGoyJv9j7oOxvJjK+Dt\nanp+A4Os+cs3iqwvIbDzK4w/iZb09gD6alZ2zh1EuHtD2d+TpJa0QCNNj6yu+t8h\nfWffm+ayX4R+hEwe91CLXsRu9HJBnoLThTjqyDxmRe0bC7aPj+HFGU8Fa2Hsnotz\nFCgpo7C79Q6nfbE4WUhg+NtQQsMSFJa55s1Afw3yP45OxjoyqamF2HXI8qn9dEI=\n=vEwW\n-----END PGP SIGNATURE-----\n", "payload": "tree 0408311595ac82a176b6e51030f69126d7269caa\nparent 9ecbc9008748672b1a47fab6d40ebe5a31507969\nparent a02750e8dd5e400f990dff1c6e8911f713af6cf2\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1666201547 +0000\ncommitter GitHub <noreply@github.com> 1666201547 +0000\n\nMerge #1596\n\n1596: Add more implementations for TARGET_RUST_OS_INFO r=philberty a=ibuclaw\n\nPretty much all follow the same template as how darwin was added in the first commit, so mostly uninteresting.\r\n\r\nThe only slight deviation is with `*-*-linux*`, where rather than putting it in a common `glibc-rust.cc` file, I've instead opted to force each platform have their own source file. So Linux gets a `linux-rust.cc` file, and anyone who wants to add Hurd, kFreeBSD, or kOpenSolaris later can do so by adding a case to this switch with the appropriately named file (i.e: `gnu-rust.cc` for Hurd).\r\n\r\nThe same can also be said for MinGW targets - `winnt-rust.cc` is explicitly _not_ set for Cygwin, and I'd prefer that whoever does add Cygwin support will create a separate file for it - otherwise you've either got to modify the target headers to add whatever defines you need in order to abstract the two away, or start adding some defines to `tm_rust.h` to expose hints about the target known at configure time.\r\n\r\nLinux is also the only implementation that has an `#ifndef` condition, as not all Linux targets include `linux-android.{h,opt}`.\r\n\r\nChecked dumps of target_options on a plethora of target configurations, though this list is by no means exhaustive.\r\n\r\n---\r\n\r\n<details>\r\n  <summary>i686-dragonflybsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"dragonfly\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\n<details>\r\n  <summary>x86_64-dragonflybsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"dragonfly\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>aarch64-freebsd12, ia64-freebsd6, riscv64-freebsd12</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>arm-freebsd12</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>i486-freebsd4, i686-freebsd6</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\n<details>\r\n  <summary>powerpc-freebsd6</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>sparc64-freebsd6</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>x86_64-freebsd6</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"freebsd\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>aarch64-fuchsia</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"fushsia\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>x86_64-fuchsia</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"fushsia\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>i686-kfreebsd-gnu</summary>\r\n\r\n```\r\ntarget_endian: \"little\"\r\ntarget_pointer_width: \"32\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details> \r\n<details>\r\n  <summary>arm-linux-androideabi</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"android\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>aarch64-linux-gnu, alpha-linux-gnu, ia64-linux, riscv64-unknown-linux-gnu</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>am33_2.0-linux-gnu, csky-linux-gnu, mips64el-st-linux-gnu, nios2-linux-gnu, powerpcle-linux, riscv32-unknown-linux-gnu, rx-linux, shle-linux, vax-linux-gnu</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>arc-linux-uclibc, bfin-linux-uclibc</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"uclibc\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>arceb-linux-uclibc, or1k-linux-uclibc</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"uclibc\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>frv-linux, h8300-linux, hppa-linux-gnu, m68k-linux, microblaze-linux, mips64octeon-linux, mipsisa32r2-linux-gnu, mipsisa64r2-linux, mips-linux, mips-mti-linux, powerpc64-linux_altivec, powerpc-linux, s390-linux-gnu, sparc-leon3-linux-gnu, sparc-linux-gnu, xtensa-linux</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>hppa64-linux-gnu, s390x-linux-gnu, sparc64-linux</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>i686-pc-linux-gnu, i686-pc-linux</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>or1k-linux-musl</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"musl\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"linux\"\r\ntarget_vendor: \"unknown\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>i686-mingw32crt</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"pc\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"windows\"\r\ntarget_family: \"windows\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>x86_64-mingw32, x86_64-w64-mingw32</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"pc\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"windows\"\r\ntarget_family: \"windows\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>aarch64-netbsd, alpha-netbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>arm-netbsdelf, vax-netbsdelf</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>hppa-netbsd, m68k-netbsdelf, mips-netbsd, powerpc-netbsd, sh-netbsdelf, sparc-netbsdelf</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>i686-netbsdelf9</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\n<details>\r\n  <summary>sparc64-netbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details> \r\n<details>\r\n  <summary>x86_64-netbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"netbsd\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>alpha-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>bfin-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\n<details>\r\n  <summary>i686-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>sparc64-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>x86_64-openbsd</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"\"\r\ntarget_vendor: \"unknown\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"openbsd\"\r\ntarget_family: \"unix\"\r\ntarget_feature: \"fxsr\"\r\ntarget_feature: \"sse\"\r\ntarget_feature: \"sse2\"\r\ntarget_feature: \"mmx\"\r\ntarget_arch: \"x86_64\"\r\n```\r\n</details>\n<details>\r\n  <summary>aarch64-wrs-vxworks</summary>\r\n\r\n```\r\ntarget_pointer_width: \"64\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"wrs\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"vxworks\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>arm-wrs-vxworks7</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"wrs\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"vxworks\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\r\n<details>\r\n  <summary>i686-wrs-vxworks, i686-wrs-vxworksae</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"wrs\"\r\ntarget_endian: \"little\"\r\ntarget_os: \"vxworks\"\r\ntarget_family: \"unix\"\r\ntarget_arch: \"x86\"\r\n```\r\n</details>\n<details>\r\n  <summary>mips-wrs-vxworks, powerpc-wrs-vxworksae, powerpc-wrs-vxworks, powerpc-wrs-vxworksmils, sh-wrs-vxworks, sparc-wrs-vxworks</summary>\r\n\r\n```\r\ntarget_pointer_width: \"32\"\r\ntarget_env: \"gnu\"\r\ntarget_vendor: \"wrs\"\r\ntarget_endian: \"big\"\r\ntarget_os: \"vxworks\"\r\ntarget_family: \"unix\"\r\n```\r\n</details>\r\n<details>\r\n  <summary>arm-uclinux_eabi, bfin-uclinux, c6x-uclinux</summary>\r\n\r\n```\r\ntarget_endian: \"little\"\r\ntarget_pointer_width: \"32\"\r\n```\r\n</details>\r\r\n<details>\r\n  <summary>lm32-uclinux, m68k-uclinux, moxie-uclinux, xtensa-uclinux</summary>\r\n\r\n```\r\ntarget_endian: \"big\"\r\ntarget_pointer_width: \"32\"\r\n```\r\n</details>\n\nCo-authored-by: Iain Buclaw <ibuclaw@gdcproject.org>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cedc655c2928707612da663211c0802a8ec9319", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cedc655c2928707612da663211c0802a8ec9319", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cedc655c2928707612da663211c0802a8ec9319/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ecbc9008748672b1a47fab6d40ebe5a31507969", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ecbc9008748672b1a47fab6d40ebe5a31507969", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ecbc9008748672b1a47fab6d40ebe5a31507969"}, {"sha": "a02750e8dd5e400f990dff1c6e8911f713af6cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a02750e8dd5e400f990dff1c6e8911f713af6cf2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a02750e8dd5e400f990dff1c6e8911f713af6cf2"}], "stats": {"total": 456, "additions": 456, "deletions": 0}, "files": [{"sha": "7a2daa98b9359aff8aa82c5a48abc252abf36067", "filename": "gcc/config.gcc", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -790,6 +790,8 @@ case ${target} in\n   d_target_objs=\"${d_target_objs} dragonfly-d.o\"\n   tmake_file=\"${tmake_file} t-dragonfly\"\n   target_has_targetdm=yes\n+  rust_target_objs=\"${rust_target_objs} dragonfly-rust.o\"\n+  target_has_targetrustm=yes\n   ;;\n *-*-freebsd*)\n   # This is the generic ELF configuration of FreeBSD.  Later\n@@ -841,9 +843,14 @@ case ${target} in\n   d_target_objs=\"${d_target_objs} freebsd-d.o\"\n   tmake_file=\"${tmake_file} t-freebsd\"\n   target_has_targetdm=yes\n+  rust_target_objs=\"${rust_target_objs} freebsd-rust.o\"\n+  target_has_targetrustm=yes\n   ;;\n *-*-fuchsia*)\n   native_system_header_dir=/include\n+  tmake_file=\"t-fuchsia\"\n+  rust_target_objs=\"${rust_target_objs} fuchsia-rust.o\"\n+  target_has_targetrustm=yes\n   ;;\n *-*-linux* | frv-*-*linux* | *-*-kfreebsd*-gnu | *-*-gnu* | *-*-kopensolaris*-gnu | *-*-uclinuxfdpiceabi)\n   extra_options=\"$extra_options gnu-user.opt\"\n@@ -912,6 +919,12 @@ case ${target} in\n       gcc_cv_initfini_array=yes\n       ;;\n   esac\n+  case $target in\n+    *linux*)\n+      rust_target_objs=\"${rust_target_objs} linux-rust.o\"\n+      target_has_targetrustm=yes\n+      ;;\n+  esac\n   ;;\n *-*-netbsd*)\n   tm_p_file=\"${tm_p_file} netbsd-protos.h\"\n@@ -932,6 +945,8 @@ case ${target} in\n       default_gnu_indirect_function=yes\n       ;;\n   esac\n+  rust_target_objs=\"${rust_target_objs} netbsd-rust.o\"\n+  target_has_targetrustm=yes\n   ;;\n *-*-openbsd*)\n   tmake_file=\"t-openbsd\"\n@@ -947,6 +962,8 @@ case ${target} in\n   esac\n   d_target_objs=\"${d_target_objs} openbsd-d.o\"\n   target_has_targetdm=yes\n+  rust_target_objs=\"${rust_target_objs} openbsd-rust.o\"\n+  target_has_targetrustm=yes\n   ;;\n *-*-phoenix*)\n   gas=yes\n@@ -1011,6 +1028,8 @@ case ${target} in\n       ;;\n   esac\n   target_has_targetdm=yes\n+  rust_target_objs=\"${rust_target_objs} sol2-rust.o\"\n+  target_has_targetrustm=yes\n   ;;\n *-*-*vms*)\n   extra_options=\"${extra_options} vms/vms.opt\"\n@@ -1043,6 +1062,9 @@ case ${target} in\n   extra_headers=\"${extra_headers} ../vxworks/vxworks-predef.h\"\n   target_has_targetcm=\"yes\"\n \n+  rust_target_objs=\"${rust_target_objs} vxworks-rust.o\"\n+  target_has_targetrustm=yes\n+\n   # This private header exposes a consistent interface for checks on\n   # the VxWorks version our runtime header files need to perform, based on\n   # what the system headers adverstise:\n@@ -2100,6 +2122,8 @@ i[34567]86-*-mingw* | x86_64-*-mingw*)\n \td_target_objs=\"${d_target_objs} winnt-d.o\"\n \ttarget_has_targetcm=\"yes\"\n \ttarget_has_targetdm=\"yes\"\n+\trust_target_objs=\"${rust_target_objs} winnt-rust.o\"\n+\ttarget_has_targetrustm=\"yes\"\n \tcase ${target} in\n \t\tx86_64-*-* | *-w64-*)\n \t\t\tneed_64bit_isa=yes"}, {"sha": "ce501d1b6fd4e02466d4e01e81b41b5f0103e2c7", "filename": "gcc/config/dragonfly-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fdragonfly-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fdragonfly-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fdragonfly-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,40 @@\n+/* DragonFly support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for DragonFly targets.  */\n+\n+static void\n+dragonfly_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_os\", \"dragonfly\");\n+  rust_add_target_info (\"target_vendor\", \"unknown\");\n+  rust_add_target_info (\"target_env\", \"\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO dragonfly_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}, {"sha": "1dbf2ed8ef964de6f21df31e9fc6e19cb4fd2c69", "filename": "gcc/config/freebsd-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ffreebsd-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ffreebsd-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffreebsd-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,40 @@\n+/* FreeBSD support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for FreeBSD targets.  */\n+\n+static void\n+freebsd_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_os\", \"freebsd\");\n+  rust_add_target_info (\"target_vendor\", \"unknown\");\n+  rust_add_target_info (\"target_env\", \"\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO freebsd_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}, {"sha": "86262504ac2c42e8fe84048f93b301d5723abfe9", "filename": "gcc/config/fuchsia-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ffuchsia-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ffuchsia-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffuchsia-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,40 @@\n+/* Fuchsia support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for Fuchsia targets.  */\n+\n+static void\n+fushsia_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_os\", \"fushsia\");\n+  rust_add_target_info (\"target_vendor\", \"unknown\");\n+  rust_add_target_info (\"target_env\", \"\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO fushsia_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}, {"sha": "3eaa91818ff4fdd1e45234697a2c1947720037e2", "filename": "gcc/config/linux-rust.cc", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Flinux-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Flinux-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,57 @@\n+/* Linux support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* `-mandroid' is not available as an command-line option.  */\n+#ifndef TARGET_ANDROID\n+#define TARGET_ANDROID 0\n+#endif\n+\n+/* Implement TARGET_RUST_OS_INFO for Linux targets.  */\n+\n+static void\n+linux_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_vendor\", \"unknown\");\n+\n+  if (TARGET_ANDROID)\n+    rust_add_target_info (\"target_os\", \"android\");\n+  else\n+    rust_add_target_info (\"target_os\", \"linux\");\n+\n+  if (OPTION_GLIBC)\n+    rust_add_target_info (\"target_env\", \"gnu\");\n+  else if (OPTION_MUSL)\n+    rust_add_target_info (\"target_env\", \"musl\");\n+  else if (OPTION_UCLIBC)\n+    rust_add_target_info (\"target_env\", \"uclibc\");\n+  else\n+    rust_add_target_info (\"target_env\", \"\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO linux_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}, {"sha": "9395466cbbeeea79f41efef50604d90f96c1094e", "filename": "gcc/config/netbsd-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fnetbsd-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fnetbsd-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetbsd-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,40 @@\n+/* NetBSD support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for NetBSD targets.  */\n+\n+static void\n+netbsd_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_os\", \"netbsd\");\n+  rust_add_target_info (\"target_vendor\", \"unknown\");\n+  rust_add_target_info (\"target_env\", \"\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO netbsd_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}, {"sha": "c4721ea18e9ecbd78fc575d64f1366cb9a3d4d19", "filename": "gcc/config/openbsd-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fopenbsd-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fopenbsd-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fopenbsd-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,40 @@\n+/* OpenBSD support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for OpenBSD targets.  */\n+\n+static void\n+openbsd_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_os\", \"openbsd\");\n+  rust_add_target_info (\"target_vendor\", \"unknown\");\n+  rust_add_target_info (\"target_env\", \"\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO openbsd_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}, {"sha": "e36bd450bccf568d3fed79e60986c38351c21374", "filename": "gcc/config/sol2-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fsol2-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fsol2-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsol2-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,40 @@\n+/* Solaris support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for Solaris targets.  */\n+\n+static void\n+solaris_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_os\", \"solaris\");\n+  rust_add_target_info (\"target_vendor\", \"sun\");\n+  rust_add_target_info (\"target_env\", \"\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO solaris_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}, {"sha": "1eee293ca4847754bb9d17680d3d0692c493f21d", "filename": "gcc/config/t-dragonfly", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-dragonfly", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-dragonfly", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-dragonfly?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -19,3 +19,7 @@\n dragonfly-d.o: $(srcdir)/config/dragonfly-d.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n+\n+dragonfly-rust.o: $(srcdir)/config/dragonfly-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "dd5dfddd9e38dc17c637c69eebb6ce852cddbff6", "filename": "gcc/config/t-freebsd", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-freebsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-freebsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-freebsd?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -19,3 +19,7 @@\n freebsd-d.o: $(srcdir)/config/freebsd-d.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n+\n+freebsd-rust.o: $(srcdir)/config/freebsd-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "55c884bcb2e2b917f3d25d73da6b86084cdb4250", "filename": "gcc/config/t-fuchsia", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-fuchsia", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-fuchsia", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-fuchsia?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,21 @@\n+# Copyright (C) 2022 Free Software Foundation, Inc.\n+#\n+# This file is part of GCC.\n+#\n+# GCC is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3, or (at your option)\n+# any later version.\n+#\n+# GCC is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+fuchsia-rust.o: $(srcdir)/config/fuchsia-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "8404e14ba49242f6b6c546d9c3b621a6d50e3c61", "filename": "gcc/config/t-linux", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-linux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-linux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-linux?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -19,3 +19,7 @@\n linux.o: $(srcdir)/config/linux.cc\n \t  $(COMPILE) $<\n \t  $(POSTCOMPILE)\n+\n+linux-rust.o: $(srcdir)/config/linux-rust.cc\n+\t  $(COMPILE) $<\n+\t  $(POSTCOMPILE)"}, {"sha": "b9546daed45506a77f7c2e10bf18d7142de6eea9", "filename": "gcc/config/t-netbsd", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-netbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-netbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-netbsd?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -23,3 +23,7 @@ netbsd.o: $(srcdir)/config/netbsd.cc\n netbsd-d.o: $(srcdir)/config/netbsd-d.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n+\n+netbsd-rust.o: $(srcdir)/config/netbsd-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "3b625d62b30d70a423e52db1891ef44f588fceaf", "filename": "gcc/config/t-openbsd", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-openbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-openbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-openbsd?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -5,3 +5,8 @@ USER_H = $(EXTRA_HEADERS)\n openbsd-d.o: $(srcdir)/config/openbsd-d.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n+\n+# OpenBSD-specific Rust support.\n+openbsd-rust.o: $(srcdir)/config/openbsd-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "e207534993ac09e460bd5bf4f2d3bd3001a26e3e", "filename": "gcc/config/t-sol2", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-sol2", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-sol2", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-sol2?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -31,6 +31,11 @@ sol2-d.o: $(srcdir)/config/sol2-d.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n+# Solaris-specific Rust support.\n+sol2-rust.o: $(srcdir)/config/sol2-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n # Corresponding stub routines.\n sol2-stubs.o: $(srcdir)/config/sol2-stubs.cc\n \t$(COMPILE) $<"}, {"sha": "7fb2adf2b95da6372532e2c081e5c07f901a2d08", "filename": "gcc/config/t-vxworks", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-vxworks", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-vxworks", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-vxworks?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -24,6 +24,10 @@ vxworks-c.o: $(srcdir)/config/vxworks-c.cc\n \t$(COMPILE) $<\n \t$(POSTCOMPILE)\n \n+vxworks-rust.o: $(srcdir)/config/vxworks-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)\n+\n # We leverage $sysroot to find target system headers only, distributed\n # in a VxWorks (a)typical fashion with a different set of headers for\n # rtp vs kernel mode.  We setup SYSROOT_HEADERS_SUFFIX_SPEC to handle"}, {"sha": "3c7c953f5c166153b8be44e3ef93a0c17b7403a5", "filename": "gcc/config/t-winnt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-winnt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Ft-winnt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-winnt?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -20,3 +20,7 @@ winnt-c.o: config/winnt-c.cc $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n   $(C_TARGET_H) $(C_TARGET_DEF_H)\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n \t  $< $(OUTPUT_OPTION)\n+\n+winnt-rust.o: $(srcdir)/config/winnt-rust.cc\n+\t$(COMPILE) $<\n+\t$(POSTCOMPILE)"}, {"sha": "76d618cdcd1ba632d3b82e0bdd50f3d66fa8cdc2", "filename": "gcc/config/vxworks-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fvxworks-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fvxworks-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,40 @@\n+/* VxWorks support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for VxWorks targets.  */\n+\n+static void\n+vxworks_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"unix\");\n+  rust_add_target_info (\"target_os\", \"vxworks\");\n+  rust_add_target_info (\"target_vendor\", \"wrs\");\n+  rust_add_target_info (\"target_env\", \"gnu\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO vxworks_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}, {"sha": "190584d3961b924aff4e623007293e7fec86f268", "filename": "gcc/config/winnt-rust.cc", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fwinnt-rust.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cedc655c2928707612da663211c0802a8ec9319/gcc%2Fconfig%2Fwinnt-rust.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fwinnt-rust.cc?ref=3cedc655c2928707612da663211c0802a8ec9319", "patch": "@@ -0,0 +1,40 @@\n+/* Windows support needed only by Rust front-end.\n+   Copyright (C) 2022 Free Software Foundation, Inc.\n+\n+GCC is free software; you can redistribute it and/or modify it under\n+the terms of the GNU General Public License as published by the Free\n+Software Foundation; either version 3, or (at your option) any later\n+version.\n+\n+GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n+WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tm.h\"\n+#include \"tm_rust.h\"\n+#include \"rust/rust-target.h\"\n+#include \"rust/rust-target-def.h\"\n+\n+/* Implement TARGET_RUST_OS_INFO for Windows targets.  */\n+\n+static void\n+winnt_rust_target_os_info (void)\n+{\n+  rust_add_target_info (\"target_family\", \"windows\");\n+  rust_add_target_info (\"target_os\", \"windows\");\n+  rust_add_target_info (\"target_vendor\", \"pc\");\n+  rust_add_target_info (\"target_env\", \"gnu\");\n+}\n+\n+#undef TARGET_RUST_OS_INFO\n+#define TARGET_RUST_OS_INFO winnt_rust_target_os_info\n+\n+struct gcc_targetrustm targetrustm = TARGETRUSTM_INITIALIZER;"}]}