{"sha": "eaec4980e139903ae9b274d1abcf3a13946603a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFlYzQ5ODBlMTM5OTAzYWU5YjI3NGQxYWJjZjNhMTM5NDY2MDNhOA==", "commit": {"author": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2006-05-18T13:19:27Z"}, "committer": {"name": "Michael Matz", "email": "matz@gcc.gnu.org", "date": "2006-05-18T13:19:27Z"}, "message": "re PR target/27599 (build failure on mingw)\n\n\tPR target/27599\n\t* config.host: Make assignments to host_xmake_file cumulative.\n\t* config.host (*-darwin*): Test $host, not $target.\n\nFrom-SVN: r113886", "tree": {"sha": "3d9a6cd49bb328b3a5729c4478ca9b923e0a395c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d9a6cd49bb328b3a5729c4478ca9b923e0a395c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eaec4980e139903ae9b274d1abcf3a13946603a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaec4980e139903ae9b274d1abcf3a13946603a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eaec4980e139903ae9b274d1abcf3a13946603a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eaec4980e139903ae9b274d1abcf3a13946603a8/comments", "author": null, "committer": null, "parents": [{"sha": "293235bc2ade501ed78f7ed1d44491a8b2d1cc0d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/293235bc2ade501ed78f7ed1d44491a8b2d1cc0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/293235bc2ade501ed78f7ed1d44491a8b2d1cc0d"}], "stats": {"total": 38, "additions": 22, "deletions": 16}, "files": [{"sha": "8465db33d04d902083c03d0bfb8ecab4c1e71412", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaec4980e139903ae9b274d1abcf3a13946603a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaec4980e139903ae9b274d1abcf3a13946603a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eaec4980e139903ae9b274d1abcf3a13946603a8", "patch": "@@ -1,6 +1,12 @@\n+2006-05-18  Michael Matz  <matz@suse.de>\n+\n+\tPR target/27599\n+\t* config.host: Make assignments to host_xmake_file cumulative.\n+\t* config.host (*-darwin*): Test $host, not $target.\n+\n 2006-05-12  Stuart Hastings  <stuart@apple.com>\n \n-        * gcc/config/i386/i386.opt (-mstackrealign): New flag.  *\n+\t* gcc/config/i386/i386.opt (-mstackrealign): New flag.  *\n \tgcc/config/i386/i386.c (force_align_arg_pointer): New attribute.\n \t(ix86_handle_cconv_attribute): Emit error when\n \tforce_align_arg_pointer attribute collides with too many regparms.\n@@ -190,7 +196,7 @@\n \n 2006-05-16  Danny Smith  <dannysmith@users.sourceforge.net>\n \n-        PR target/27599\n+\tPR target/27599\n \t* config.host (i[34567]86-*-mingw*): Append i386/x-mingw32 to\n \thost_xmake_file.\n "}, {"sha": "b36066f44e5bbcc292ee4f83f0d89f5f8a3782c3", "filename": "gcc/config.host", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eaec4980e139903ae9b274d1abcf3a13946603a8/gcc%2Fconfig.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eaec4980e139903ae9b274d1abcf3a13946603a8/gcc%2Fconfig.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.host?ref=eaec4980e139903ae9b274d1abcf3a13946603a8", "patch": "@@ -86,11 +86,11 @@ case ${host} in\n esac\n \n # Common parts for widely ported systems.\n-case ${target} in\n+case ${host} in\n   *-darwin*)\n     # Generic darwin host support.\n     out_host_hook_obj=host-darwin.o\n-    host_xmake_file=x-darwin\n+    host_xmake_file=\"${host_xmake_file} x-darwin\"\n     ;;\n esac\n \n@@ -109,7 +109,7 @@ esac\n case ${host} in\n   alpha*-dec-*vms*)\n     host_xm_file=alpha/xm-vms.h\n-    host_xmake_file=alpha/x-vms\n+    host_xmake_file=\"${host_xmake_file} alpha/x-vms\"\n     host_exeext=.exe\n     host_can_use_collect2=no\n     # This removes the cpu type and manufacturer components and\n@@ -119,36 +119,36 @@ case ${host} in\n     local_prefix=/gnu\n     ;;\n   hppa1.1-*-pro*)\n-    host_xmake_file=\"pa/x-ada\"\n+    host_xmake_file=\"${host_xmake_file} pa/x-ada\"\n     ;;\n   hppa1.1-*-osf*)\n-    host_xmake_file=\"pa/x-ada\"\n+    host_xmake_file=\"${host_xmake_file} pa/x-ada\"\n     ;;\n   hppa1.1-*-rtems*)\n-    host_xmake_file=\"pa/x-ada\"\n+    host_xmake_file=\"${host_xmake_file} pa/x-ada\"\n     ;;\n   hppa1.1-*-bsd*)\n-    host_xmake_file=\"pa/x-ada\"\n+    host_xmake_file=\"${host_xmake_file} pa/x-ada\"\n     ;;\n   hppa1.0-*-hpux10* | hppa1.1-*-hpux10* | hppa2*-*-hpux10*)\n     out_host_hook_obj=host-hpux.o\n-    host_xmake_file=\"pa/x-ada-hpux10 x-hpux\"\n+    host_xmake_file=\"${host_xmake_file} pa/x-ada-hpux10 x-hpux\"\n     ;;\n   hppa1.0-*-hpux11* | hppa1.1-*-hpux11* | hppa2*-*-hpux11* | \\\n   hppa*64*-*-hpux11*)\n     out_host_hook_obj=host-hpux.o\n-    host_xmake_file=\"pa/x-ada x-hpux\"\n+    host_xmake_file=\"${host_xmake_file} pa/x-ada x-hpux\"\n     ;;\n   hppa*-*-linux*)\n     out_host_hook_obj=host-hpux.o\n-    host_xmake_file=x-hpux\n+    host_xmake_file=\"${host_xmake_file} x-hpux\"\n     ;;\n   i370-*-opened* | i370-*-mvs* ) # IBM 360/370/390 Architecture\n     host_xm_defines='FATAL_EXIT_CODE=12'\n     ;;\n   i[34567]86-*-solaris2*)\n     out_host_hook_obj=host-solaris.o\n-    host_xmake_file=x-solaris\n+    host_xmake_file=\"${host_xmake_file} x-solaris\"\n     ;;\n   i[34567]86-pc-msdosdjgpp*)\n     host_xm_file=i386/xm-djgpp.h\n@@ -178,7 +178,7 @@ case ${host} in\n     exit 1\n     ;;\n   i[34567]86-*-interix3*)\n-    host_xmake_file=\"x-interix\"\n+    host_xmake_file=\"${host_xmake_file} x-interix\"\n     ;;\n   i[34567]86-*-darwin*)\n     out_host_hook_obj=\"${out_host_hook_obj} host-i386-darwin.o\"\n@@ -193,7 +193,7 @@ case ${host} in\n     ;;\n   *-*-solaris2*)\n     out_host_hook_obj=host-solaris.o\n-    host_xmake_file=x-solaris\n+    host_xmake_file=\"${host_xmake_file} x-solaris\"\n     ;;\n   *-*-linux*)\n     out_host_hook_obj=host-linux.o\n@@ -202,6 +202,6 @@ case ${host} in\n   ia64-*-hpux*)\n     use_long_long_for_widest_fast_int=yes\n     out_host_hook_obj=host-hpux.o\n-    host_xmake_file=x-hpux\n+    host_xmake_file=\"${host_xmake_file} x-hpux\"\n     ;;\n esac"}]}