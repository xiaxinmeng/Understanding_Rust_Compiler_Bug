{"sha": "fb8e35819dada2d120817c9dae95703c0bb5841b", "node_id": "C_kwDOANBUbNoAKGZiOGUzNTgxOWRhZGEyZDEyMDgxN2M5ZGFlOTU3MDNjMGJiNTg0MWI", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-12-27T18:42:51Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-01-11T13:24:46Z"}, "message": "[Ada] Remove extra space in single object declarations\n\ngcc/ada/\n\n\t* exp_aggr.adb, exp_attr.adb, exp_ch3.adb, exp_ch7.adb,\n\texp_dist.adb, exp_util.adb, freeze.adb, frontend.adb,\n\tinline.adb, itypes.adb, lib-load.adb, lib-xref.adb,\n\tlibgnat/a-cfhase.adb, libgnat/a-cforse.adb,\n\tlibgnat/a-chtgbo.adb, libgnat/a-crdlli.adb,\n\tlibgnat/a-except.adb, libgnat/a-strfix.adb,\n\tlibgnat/a-textio.adb, libgnat/a-tienau.adb,\n\tlibgnat/a-tigeau.adb, libgnat/a-witeio.adb,\n\tlibgnat/a-wtenau.adb, libgnat/a-wtgeau.adb,\n\tlibgnat/a-ztenau.adb, libgnat/a-ztexio.adb,\n\tlibgnat/a-ztgeau.adb, libgnat/g-comlin.adb,\n\tlibgnat/g-debpoo.adb, libgnat/g-expect.adb,\n\tlibgnat/s-fileio.adb, libgnat/s-memory.adb, libgnat/s-mmap.adb,\n\tlibgnat/s-objrea.adb, libgnat/s-pehage.adb,\n\tlibgnat/s-regpat.adb, libgnat/s-shasto.adb,\n\tlibgnat/s-valued.adb, libgnat/s-valuef.adb, par-ch11.adb,\n\tpar-ch4.adb, par-ch6.adb, par-ch9.adb, par_sco.adb,\n\trepinfo-input.adb, sem_cat.adb, sem_ch10.adb, sem_ch12.adb,\n\tsem_ch13.adb, sem_ch4.adb, sem_eval.adb, sem_prag.adb,\n\tsem_res.adb, sem_util.adb, sinput.adb, switch-c.adb: Fix style.", "tree": {"sha": "9684449abd284d5638c52ae30aa25b6bbbd17204", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9684449abd284d5638c52ae30aa25b6bbbd17204"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb8e35819dada2d120817c9dae95703c0bb5841b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8e35819dada2d120817c9dae95703c0bb5841b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8e35819dada2d120817c9dae95703c0bb5841b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8e35819dada2d120817c9dae95703c0bb5841b/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9cdce4a71a4ea04d9669631cfd951fbd70d5b7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9cdce4a71a4ea04d9669631cfd951fbd70d5b7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9cdce4a71a4ea04d9669631cfd951fbd70d5b7c"}], "stats": {"total": 152, "additions": 76, "deletions": 76}, "files": [{"sha": "e360baa6683af4ba8a1233e59a2b0ef9c98a0856", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -9375,7 +9375,7 @@ package body Exp_Aggr is\n          -----------------------\n \n          function Get_Component_Val (N : Node_Id) return Uint is\n-            Val  : Uint;\n+            Val : Uint;\n \n          begin\n             --  We have to analyze the expression here before doing any further"}, {"sha": "5374dd4d7e9ded5d4fcb0fe5ec73271857f4d9cd", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -3784,7 +3784,7 @@ package body Exp_Attr is\n       --------------\n \n       when Attribute_From_Any => From_Any : declare\n-         Decls  : constant List_Id   := New_List;\n+         Decls : constant List_Id := New_List;\n \n       begin\n          Rewrite (N,"}, {"sha": "50f46fb479eb5b11b2a3a75bebf5514f2a70a72c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -4139,7 +4139,7 @@ package body Exp_Ch3 is\n                Set_Static_Initialization (Proc_Id, Agg);\n \n                declare\n-                  Comp  : Node_Id;\n+                  Comp : Node_Id;\n                begin\n                   Comp := First (Component_Associations (Agg));\n                   while Present (Comp) loop"}, {"sha": "8c74808e5945c9a0433d15f9a6e0c5531418c9b2", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -4702,7 +4702,7 @@ package body Exp_Ch7 is\n      (N   : Node_Id;\n       Ref : Node_Id) return Node_Id\n    is\n-      Loc  : constant Source_Ptr := Sloc (N);\n+      Loc : constant Source_Ptr := Sloc (N);\n \n    begin\n       --  For restricted run-time libraries (Ravenscar), tasks are"}, {"sha": "e1df9d271df53c65e252b12046be9022425476b6", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -2908,7 +2908,7 @@ package body Exp_Dist is\n    ---------------------------------\n \n    procedure Expand_Calling_Stubs_Bodies (Unit_Node : Node_Id) is\n-      Spec  : constant Node_Id := Specification (Unit_Node);\n+      Spec : constant Node_Id := Specification (Unit_Node);\n    begin\n       Add_Calling_Stubs_To_Declarations (Spec);\n    end Expand_Calling_Stubs_Bodies;"}, {"sha": "e1b462ac05fbae592905deb8bbaf923e4139eb39", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -8780,7 +8780,7 @@ package body Exp_Util is\n    ----------------------------------\n \n    function Is_Possibly_Unaligned_Object (N : Node_Id) return Boolean is\n-      T  : constant Entity_Id := Etype (N);\n+      T : constant Entity_Id := Etype (N);\n \n    begin\n       --  If renamed object, apply test to underlying object"}, {"sha": "7ed44f591fc207867c9fecf75196536c26a802af", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -2124,7 +2124,7 @@ package body Freeze is\n    ----------------------------\n \n    procedure Check_Strict_Alignment (E : Entity_Id) is\n-      Comp  : Entity_Id;\n+      Comp : Entity_Id;\n \n    begin\n       --  Bit-packed array types do not require strict alignment, even if they"}, {"sha": "c60234dc11d78b796f2f44fb41a7039200c1b130", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -539,7 +539,7 @@ begin\n    --  Initialize_Scalars, but others should be checked: as well???\n \n    declare\n-      Item  : Node_Id;\n+      Item : Node_Id;\n \n    begin\n       Item := First (Context_Items (Cunit (Main_Unit)));"}, {"sha": "49d034de32268300cbffc82d71a96e5aa063e762", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -2377,7 +2377,7 @@ package body Inline is\n       ------------------------\n \n       function Copy_Return_Object (Obj_Decl : Node_Id) return Node_Id is\n-         Obj_Id  : constant Entity_Id := Defining_Entity (Obj_Decl);\n+         Obj_Id : constant Entity_Id := Defining_Entity (Obj_Decl);\n \n       begin\n          --  The use of New_Copy_Tree ensures that global references are\n@@ -3264,7 +3264,7 @@ package body Inline is\n          ------------------\n \n          function Process_Loop (N : Node_Id) return Traverse_Result is\n-            Id  : Entity_Id;\n+            Id : Entity_Id;\n \n          begin\n             if Nkind (N) = N_Loop_Statement\n@@ -3676,7 +3676,7 @@ package body Inline is\n       ----------------------------\n \n       procedure Rewrite_Procedure_Call (N : Node_Id; Blk : Node_Id) is\n-         HSS  : constant Node_Id := Handled_Statement_Sequence (Blk);\n+         HSS : constant Node_Id := Handled_Statement_Sequence (Blk);\n \n       begin\n          Make_Loop_Labels_Unique (HSS);"}, {"sha": "f7e8dd66e125e6b9ad92f837bb0ef197c20a7ab9", "filename": "gcc/ada/itypes.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fitypes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fitypes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fitypes.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -89,7 +89,7 @@ package body Itypes is\n        Related_Nod : Node_Id;\n        Scope_Id    : Entity_Id := Current_Scope) return Entity_Id\n    is\n-      I_Typ        : Entity_Id;\n+      I_Typ : Entity_Id;\n \n    begin\n       pragma Assert (Is_Access_Type (T));"}, {"sha": "cab72c0ef557c15edd80ab39de297103e7264af0", "filename": "gcc/ada/lib-load.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flib-load.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flib-load.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-load.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -958,7 +958,7 @@ package body Lib.Load is\n    --  code will have to be generated for it.\n \n    procedure Make_Instance_Unit (N : Node_Id; In_Main : Boolean) is\n-      Sind  : constant Source_File_Index := Source_Index (Main_Unit);\n+      Sind : constant Source_File_Index := Source_Index (Main_Unit);\n \n    begin\n       Units.Increment_Last;"}, {"sha": "359e0069984c2349ed8df8ec53ca5459f9a13bca", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1677,7 +1677,7 @@ package body Lib.Xref is\n       --  declared in the main unit.\n \n       Handle_Prim_Ops : declare\n-         Ent  : Entity_Id;\n+         Ent : Entity_Id;\n \n       begin\n          for J in 1 .. Xrefs.Last loop"}, {"sha": "6e289e42df5923c31cf0ab1e3ad8f46309a22eba", "filename": "gcc/ada/libgnat/a-cfhase.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-cfhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-cfhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cfhase.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -949,7 +949,7 @@ is\n            (Vet (Container, Position), \"bad cursor in function Key\");\n \n          declare\n-            N  : Node_Type renames Container.Content.Nodes (Position.Node);\n+            N : Node_Type renames Container.Content.Nodes (Position.Node);\n          begin\n             return Key (N.Element);\n          end;"}, {"sha": "3b64511f52ef80d09edffe8dbc85258db1d2105a", "filename": "gcc/ada/libgnat/a-cforse.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-cforse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-cforse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cforse.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -429,7 +429,7 @@ is\n    ------------------\n \n    procedure Delete_First (Container : in out Set) is\n-      X    : constant Count_Type := Container.Content.First;\n+      X : constant Count_Type := Container.Content.First;\n    begin\n       if X /= 0 then\n          Tree_Operations.Delete_Node_Sans_Free (Container.Content, X);\n@@ -442,7 +442,7 @@ is\n    -----------------\n \n    procedure Delete_Last (Container : in out Set) is\n-      X    : constant Count_Type := Container.Content.Last;\n+      X : constant Count_Type := Container.Content.Last;\n    begin\n       if X /= 0 then\n          Tree_Operations.Delete_Node_Sans_Free (Container.Content, X);\n@@ -1741,7 +1741,7 @@ is\n       --------------\n \n       function New_Node return Count_Type is\n-         N  : Node_Type renames NN (Node);\n+         N : Node_Type renames NN (Node);\n       begin\n          N.Element := Item;\n          N.Color   := Red;"}, {"sha": "2ffc923bf97997eb985687fd3f4963433a66a149", "filename": "gcc/ada/libgnat/a-chtgbo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-chtgbo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-chtgbo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-chtgbo.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -439,7 +439,7 @@ package body Ada.Containers.Hash_Tables.Generic_Bounded_Operations is\n      (Stream : not null access Root_Stream_Type'Class;\n       HT     : out Hash_Table_Type'Class)\n    is\n-      N  : Count_Type'Base;\n+      N : Count_Type'Base;\n \n    begin\n       Clear (HT);"}, {"sha": "a5fe43124133d591d06c24628be003980e7469b2", "filename": "gcc/ada/libgnat/a-crdlli.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-crdlli.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-crdlli.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-crdlli.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1316,7 +1316,7 @@ package body Ada.Containers.Restricted_Doubly_Linked_Lists is\n       pragma Assert (Vet (Position), \"bad cursor in Update_Element\");\n \n       declare\n-         N  : Node_Type renames Container.Nodes (Position.Node);\n+         N : Node_Type renames Container.Nodes (Position.Node);\n \n       begin\n          Process (N.Element);"}, {"sha": "3cf77126b765259d5c779da358cca0a693bbca6d", "filename": "gcc/ada/libgnat/a-except.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-except.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1110,7 +1110,7 @@ package body Ada.Exceptions is\n \n       else\n          declare\n-            New_Msg  : constant String := Prefix & Exception_Name (X);\n+            New_Msg : constant String := Prefix & Exception_Name (X);\n \n          begin\n             --  No message present, just provide our own"}, {"sha": "255738a229bdb612b8a6f8e8b4c49804c63382f5", "filename": "gcc/ada/libgnat/a-strfix.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-strfix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-strfix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-strfix.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -370,7 +370,7 @@ package body Ada.Strings.Fixed with SPARK_Mode is\n       Before   : Positive;\n       New_Item : String) return String\n    is\n-      Front  : constant Integer := Before - Source'First;\n+      Front : constant Integer := Before - Source'First;\n \n    begin\n       if Before - 1 not in Source'First - 1 .. Source'Last then"}, {"sha": "bd76caa3c0ca714d0735f63b2983dd286daf797e", "filename": "gcc/ada/libgnat/a-textio.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-textio.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -403,7 +403,7 @@ is\n    -----------------\n \n    function End_Of_Page (File : File_Type) return Boolean is\n-      ch  : int;\n+      ch : int;\n \n    begin\n       FIO.Check_Read_Status (AP (File));\n@@ -598,7 +598,7 @@ is\n      (File : File_Type;\n       Item : out Character)\n    is\n-      ch          : int;\n+      ch : int;\n \n    begin\n       FIO.Check_Read_Status (AP (File));"}, {"sha": "2e3fbcca8bedfbeabd48a281114f62ba57a594b7", "filename": "gcc/ada/libgnat/a-tienau.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-tienau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-tienau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tienau.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -213,7 +213,7 @@ package body Ada.Text_IO.Enumeration_Aux is\n       Start : out Natural;\n       Stop  : out Natural)\n    is\n-      C  : Character;\n+      C : Character;\n \n    --  Processing for Scan_Enum_Lit\n "}, {"sha": "0ca5a03cf94e3f350b143d5ddc2fbf35f7025e10", "filename": "gcc/ada/libgnat/a-tigeau.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-tigeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-tigeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tigeau.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -384,7 +384,7 @@ package body Ada.Text_IO.Generic_Aux is\n       Buf  : out String;\n       Ptr  : in out Natural)\n    is\n-      Loaded   : Boolean;\n+      Loaded : Boolean;\n \n    begin\n       --  Skip initial blanks, and load possible sign"}, {"sha": "39203dbd1bc7b8683bf3d8b614607be1c46154fd", "filename": "gcc/ada/libgnat/a-witeio.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-witeio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-witeio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-witeio.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -274,7 +274,7 @@ package body Ada.Wide_Text_IO is\n    -----------------\n \n    function End_Of_File (File : File_Type) return Boolean is\n-      ch  : int;\n+      ch : int;\n \n    begin\n       FIO.Check_Read_Status (AP (File));\n@@ -368,7 +368,7 @@ package body Ada.Wide_Text_IO is\n    -----------------\n \n    function End_Of_Page (File : File_Type) return Boolean is\n-      ch  : int;\n+      ch : int;\n \n    begin\n       FIO.Check_Read_Status (AP (File));\n@@ -444,7 +444,7 @@ package body Ada.Wide_Text_IO is\n      (File : File_Type;\n       Item : out Wide_Character)\n    is\n-      C  : Character;\n+      C : Character;\n \n    begin\n       FIO.Check_Read_Status (AP (File));"}, {"sha": "5c102bcac7d2011158e5250b9beb409ca0b3e72c", "filename": "gcc/ada/libgnat/a-wtenau.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-wtenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-wtenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtenau.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -227,7 +227,7 @@ package body Ada.Wide_Text_IO.Enumeration_Aux is\n       Start : out Natural;\n       Stop  : out Natural)\n    is\n-      WC  : Wide_Character;\n+      WC : Wide_Character;\n \n    --  Processing for Scan_Enum_Lit\n "}, {"sha": "0831c3a0aa46cf6b387c6db4c272e9ebf924c645", "filename": "gcc/ada/libgnat/a-wtgeau.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-wtgeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-wtgeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtgeau.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -410,7 +410,7 @@ package body Ada.Wide_Text_IO.Generic_Aux is\n       Buf  : out String;\n       Ptr  : in out Natural)\n    is\n-      Loaded   : Boolean;\n+      Loaded : Boolean;\n \n    begin\n       --  Skip initial blanks and load possible sign"}, {"sha": "b03ad8fcd995ce8c92af42f0d23fc9a07b801546", "filename": "gcc/ada/libgnat/a-ztenau.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-ztenau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-ztenau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztenau.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -229,7 +229,7 @@ package body Ada.Wide_Wide_Text_IO.Enumeration_Aux is\n       Start : out Natural;\n       Stop  : out Natural)\n    is\n-      WC  : Wide_Wide_Character;\n+      WC : Wide_Wide_Character;\n \n    --  Processing for Scan_Enum_Lit\n "}, {"sha": "db0017ee052573f241d25fc208d4830cbc175731", "filename": "gcc/ada/libgnat/a-ztexio.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-ztexio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-ztexio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztexio.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -274,7 +274,7 @@ package body Ada.Wide_Wide_Text_IO is\n    -----------------\n \n    function End_Of_File (File : File_Type) return Boolean is\n-      ch  : int;\n+      ch : int;\n \n    begin\n       FIO.Check_Read_Status (AP (File));\n@@ -368,7 +368,7 @@ package body Ada.Wide_Wide_Text_IO is\n    -----------------\n \n    function End_Of_Page (File : File_Type) return Boolean is\n-      ch  : int;\n+      ch : int;\n \n    begin\n       FIO.Check_Read_Status (AP (File));\n@@ -444,7 +444,7 @@ package body Ada.Wide_Wide_Text_IO is\n      (File : File_Type;\n       Item : out Wide_Wide_Character)\n    is\n-      C  : Character;\n+      C : Character;\n \n    begin\n       FIO.Check_Read_Status (AP (File));"}, {"sha": "42e4daf4db6b6ee794b92880d943daec423479fe", "filename": "gcc/ada/libgnat/a-ztgeau.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-ztgeau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fa-ztgeau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztgeau.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -410,7 +410,7 @@ package body Ada.Wide_Wide_Text_IO.Generic_Aux is\n       Buf  : out String;\n       Ptr  : in out Natural)\n    is\n-      Loaded   : Boolean;\n+      Loaded : Boolean;\n \n    begin\n       --  Skip initial blanks and load possible sign"}, {"sha": "e583c2775e84520af4d9739e1b9c7f69ac1edfdb", "filename": "gcc/ada/libgnat/g-comlin.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-comlin.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -465,8 +465,8 @@ package body GNAT.Command_Line is\n \n       if Do_Expansion then\n          declare\n-            Arg   : constant String :=\n-                      Argument (Parser, Parser.Current_Argument - 1);\n+            Arg : constant String :=\n+                    Argument (Parser, Parser.Current_Argument - 1);\n          begin\n             for Index in Arg'Range loop\n                if Arg (Index) in '*' | '?' | '[' then\n@@ -1257,7 +1257,7 @@ package body GNAT.Command_Line is\n       Expanded : String;\n       Section  : String := \"\")\n    is\n-      Def    : Alias_Definition;\n+      Def : Alias_Definition;\n \n    begin\n       if Config = null then"}, {"sha": "ecab282f14b6d09b2f9ef73a305d820df9c53d7e", "filename": "gcc/ada/libgnat/g-debpoo.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-debpoo.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -777,7 +777,7 @@ package body GNAT.Debug_Pools is\n       function Is_Valid_Or_Handled\n         (Storage : System.Address;\n          Valid   : Boolean) return Boolean is\n-         Int_Storage  : constant Integer_Address := To_Integer (Storage);\n+         Int_Storage : constant Integer_Address := To_Integer (Storage);\n \n       begin\n          --  The pool only returns addresses aligned on Storage_Alignment so"}, {"sha": "e43ef4f352df5c2943d2cac7b8f4602f01d0a408", "filename": "gcc/ada/libgnat/g-expect.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fg-expect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fg-expect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fg-expect.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -193,7 +193,7 @@ package body GNAT.Expect is\n       Str       : String;\n       Filter_On : Filter_Type)\n    is\n-      Current_Filter  : Filter_List;\n+      Current_Filter : Filter_List;\n \n    begin\n       if Pid.Filters_Lock = 0 then"}, {"sha": "3fdb29730a5458207633c4dae2e6e402fe77417c", "filename": "gcc/ada/libgnat/s-fileio.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-fileio.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -244,7 +244,7 @@ package body System.File_IO is\n \n          if File.Shared_Status = Yes then\n             declare\n-               P   : AFCB_Ptr;\n+               P : AFCB_Ptr;\n \n             begin\n                P := Open_Files;"}, {"sha": "965ef1578cad73d5e29ed908c3bd11af8ba4ed88", "filename": "gcc/ada/libgnat/s-memory.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-memory.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-memory.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-memory.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -134,7 +134,7 @@ package body System.Memory is\n       Size : size_t)\n       return System.Address\n    is\n-      Result      : System.Address;\n+      Result : System.Address;\n    begin\n       if Size = size_t'Last then\n          raise Storage_Error with \"object too large\";"}, {"sha": "3c526e8386081300a139f067ad25b42725d59819", "filename": "gcc/ada/libgnat/s-mmap.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-mmap.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-mmap.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-mmap.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -367,7 +367,7 @@ package body System.Mmap is\n       Length  : File_Size := 0;\n       Mutable : Boolean := False) return Mapped_Region\n    is\n-      Region  : Mapped_Region := Invalid_Mapped_Region;\n+      Region : Mapped_Region := Invalid_Mapped_Region;\n    begin\n       Read (File, Region, Offset, Length, Mutable);\n       return Region;"}, {"sha": "854bbb290e4b52d30c745e5ff250714f717314b8", "filename": "gcc/ada/libgnat/s-objrea.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-objrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-objrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-objrea.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1472,7 +1472,7 @@ package body System.Object_Reader is\n         (Obj : in out XCOFF32_Object_File;\n          Sym : Object_Symbol) return String_Ptr_Len\n       is\n-         Symbol  : Symbol_Entry;\n+         Symbol : Symbol_Entry;\n \n       begin\n          Seek (Obj.Symtab_Stream, Sym.Off);\n@@ -1820,7 +1820,7 @@ package body System.Object_Reader is\n      (S : in out Mapped_Stream;\n       Off : Offset) return String\n    is\n-      Buf     : Buffer;\n+      Buf : Buffer;\n \n    begin\n       Seek (S, Off);"}, {"sha": "1468628562155bfec7c70d9d0fb10875a6cc9acf", "filename": "gcc/ada/libgnat/s-pehage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-pehage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-pehage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-pehage.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1233,7 +1233,7 @@ package body System.Perfect_Hash_Generators is\n    ------------\n \n    procedure Insert (Value : String) is\n-      Len  : constant Natural := Value'Length;\n+      Len : constant Natural := Value'Length;\n \n    begin\n       if Verbose then"}, {"sha": "4f758f96d3ede492075ca5a7bea45e5c9e9abfdb", "filename": "gcc/ada/libgnat/s-regpat.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-regpat.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -664,7 +664,7 @@ package body System.Regpat is\n          Operand : Pointer;\n          Greedy  : Boolean := True)\n       is\n-         Old    : Pointer;\n+         Old : Pointer;\n       begin\n          Old := Insert_Operator_Before (Op, Operand, Greedy, Opsize => 7);\n          Emit_Natural (Old + Next_Pointer_Bytes, Min);\n@@ -2108,7 +2108,7 @@ package body System.Regpat is\n \n          if Do_Print then\n             declare\n-               Point   : constant String := Pointer'Image (Index);\n+               Point : constant String := Pointer'Image (Index);\n             begin\n                Put ([1 .. 4 - Point'Length => ' ']\n                     & Point & \":\""}, {"sha": "c383878602c546bd3a11d1a24550f35ccfc52044", "filename": "gcc/ada/libgnat/s-shasto.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-shasto.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-shasto.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-shasto.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -440,7 +440,7 @@ package body System.Shared_Storage is\n \n       if SFE = null then\n          declare\n-            S  : aliased constant String := Dir.all & Var;\n+            S : aliased constant String := Dir.all & Var;\n \n          begin\n             SFE := new Shared_Var_File_Entry;\n@@ -521,7 +521,7 @@ package body System.Shared_Storage is\n \n       if SFE = null then\n          declare\n-            S  : aliased constant String := Dir.all & Var;\n+            S : aliased constant String := Dir.all & Var;\n \n          begin\n             SFE := new Shared_Var_File_Entry;"}, {"sha": "c4a78a2ac874908f5055dfaba06740019b6d5eb4", "filename": "gcc/ada/libgnat/s-valued.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-valued.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-valued.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valued.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -186,7 +186,7 @@ package body System.Value_D is\n \n             elsif S > 0 then\n                declare\n-                  LS  : Integer := S;\n+                  LS : Integer := S;\n \n                begin\n                   Y := Safe_Expont (B, LS, 10 ** Integer'Max (0, Scale));"}, {"sha": "e252a285364621fa00fbd905ed0534bc49c01dfd", "filename": "gcc/ada/libgnat/s-valuef.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-valuef.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Flibgnat%2Fs-valuef.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-valuef.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -255,7 +255,7 @@ package body System.Value_F is\n \n       elsif ScaleB > 0 then\n          declare\n-            LS  : Integer := ScaleB;\n+            LS : Integer := ScaleB;\n \n          begin\n             Y := Safe_Expont (B, LS, Den);"}, {"sha": "cc10ba7aa1e859b2e2733c2a27e957103cf94d2e", "filename": "gcc/ada/par-ch11.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar-ch11.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar-ch11.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch11.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -56,7 +56,7 @@ package body Ch11 is\n    --  Error_Recovery : Cannot raise Error_Resync\n \n    function P_Handled_Sequence_Of_Statements return Node_Id is\n-      Handled_Stmt_Seq_Node  : Node_Id;\n+      Handled_Stmt_Seq_Node : Node_Id;\n    begin\n       Handled_Stmt_Seq_Node :=\n         New_Node (N_Handled_Sequence_Of_Statements, Token_Ptr);"}, {"sha": "0895be10655953efc5b4907ef0fdbb2406a58395", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1194,7 +1194,7 @@ package body Ch4 is\n      (Prefix_Node : Node_Id)\n       return        Node_Id\n    is\n-      Attr_Node  : Node_Id;\n+      Attr_Node : Node_Id;\n \n    begin\n       Attr_Node := New_Node (N_Attribute_Reference, Token_Ptr);"}, {"sha": "1b3cf94af5cc1556ca9e2d721509700f9cae7d92", "filename": "gcc/ada/par-ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar-ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar-ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch6.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1144,7 +1144,7 @@ package body Ch6 is\n       --------------\n \n       function Real_Dot return Boolean is\n-         Scan_State  : Saved_Scan_State;\n+         Scan_State : Saved_Scan_State;\n \n       begin\n          if Token /= Tok_Dot then"}, {"sha": "7d4ea622e22f619e273933ea714b9807ca882bd7", "filename": "gcc/ada/par-ch9.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar-ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar-ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch9.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -283,7 +283,7 @@ package body Ch9 is\n    --  Error recovery:  cannot raise Error_Resync\n \n    function P_Task_Definition return Node_Id is\n-      Def_Node  : Node_Id;\n+      Def_Node : Node_Id;\n \n    begin\n       Def_Node := New_Node (N_Task_Definition, Token_Ptr);"}, {"sha": "aba863dfeb2337cc1d6987d4505f861fb6eaaa3f", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -922,8 +922,8 @@ package body Par_SCO is\n    ---------------------\n \n    procedure Record_Instance (Id : Instance_Id; Inst_Sloc : Source_Ptr) is\n-      Inst_Src  : constant Source_File_Index :=\n-                    Get_Source_File_Index (Inst_Sloc);\n+      Inst_Src : constant Source_File_Index :=\n+                   Get_Source_File_Index (Inst_Sloc);\n    begin\n       SCO_Instance_Table.Append\n         ((Inst_Dep_Num       => Dependency_Num (Unit (Inst_Src)),"}, {"sha": "845da1247403a5d4e71e93bc1cedddb2501a78f7", "filename": "gcc/ada/repinfo-input.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Frepinfo-input.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Frepinfo-input.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo-input.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -288,7 +288,7 @@ package body Repinfo.Input is\n       ----------------------\n \n       function Decode_Integer (Lo, Hi : Text_Ptr) return Uint is\n-         Len  : constant Nat := Int (Hi) - Int (Lo) + 1;\n+         Len : constant Nat := Int (Hi) - Int (Lo) + 1;\n \n       begin\n          --  Decode up to 9 characters manually, otherwise call into Uint"}, {"sha": "71395ec68300321726c195b60f175d5a631d2e24", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -526,8 +526,8 @@ package body Sem_Cat is\n    ----------------------------\n \n    function In_Package_Declaration return Boolean is\n-      Unit_Kind   : constant Node_Kind :=\n-                      Nkind (Unit (Cunit (Current_Sem_Unit)));\n+      Unit_Kind  : constant Node_Kind :=\n+                     Nkind (Unit (Cunit (Current_Sem_Unit)));\n \n    begin\n       --  There are no restrictions on the body of an RCI or RT unit"}, {"sha": "9dbb87100a8addb9f1efb5d8c30bdb651e624c7c", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -2279,7 +2279,7 @@ package body Sem_Ch10 is\n       ----------------------------\n \n       procedure Re_Install_Use_Clauses is\n-         U  : Node_Id;\n+         U : Node_Id;\n       begin\n          for J in reverse 1 .. Num_Scopes loop\n             U := Use_Clauses (J);"}, {"sha": "5eeaf3d252f08c44fccbabed11d344baec1e20e8", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -2394,7 +2394,7 @@ package body Sem_Ch12 is\n       T   : Entity_Id;\n       Def : Node_Id)\n    is\n-      Loc   : constant Source_Ptr := Sloc (Def);\n+      Loc : constant Source_Ptr := Sloc (Def);\n \n    begin\n       --  Rewrite as a type declaration of a derived type. This ensures that\n@@ -10348,7 +10348,7 @@ package body Sem_Ch12 is\n          Formal_Ent  : Entity_Id;\n          Actual_Ent  : Entity_Id)\n       is\n-         Act_Pkg   : Entity_Id;\n+         Act_Pkg : Entity_Id;\n \n       begin\n          Set_Instance_Of (Formal_Ent, Actual_Ent);"}, {"sha": "52f3df0b1f7694cf291f12f8bb831f5116b351b5", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -593,7 +593,7 @@ package body Sem_Ch13 is\n          Comp   := First_Component_Or_Discriminant (R);\n          while Present (Comp) loop\n             declare\n-               CC   : constant Node_Id := Component_Clause (Comp);\n+               CC : constant Node_Id := Component_Clause (Comp);\n \n             begin\n                --  Collect only component clauses whose last bit is less than"}, {"sha": "42547e3b2741b42b8c2b2bcd4bebb508f6f5de1a", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -8263,7 +8263,7 @@ package body Sem_Ch4 is\n               and then Is_Entity_Name (Name (Parent (Par)))\n             then\n                declare\n-                  Proc   : Entity_Id;\n+                  Proc : Entity_Id;\n \n                begin\n                   --  We should look for an interpretation with the proper"}, {"sha": "2a6ca78e9194690d0b0a1aad6f622645a7b79db2", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -4727,7 +4727,7 @@ package body Sem_Eval is\n    ------------------\n \n    function Expr_Value_E (N : Node_Id) return Entity_Id is\n-      Ent  : constant Entity_Id := Entity (N);\n+      Ent : constant Entity_Id := Entity (N);\n    begin\n       if Ekind (Ent) = E_Enumeration_Literal then\n          return Ent;"}, {"sha": "f9169eeedd7de415e11ec6cc71035d6e64332241", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -32677,7 +32677,7 @@ package body Sem_Prag is\n    --------------------------------------------\n \n    procedure Defer_Compile_Time_Warning_Error_To_BE (N : Node_Id) is\n-      Arg1  : constant Node_Id := First (Pragma_Argument_Associations (N));\n+      Arg1 : constant Node_Id := First (Pragma_Argument_Associations (N));\n    begin\n       Compile_Time_Warnings_Errors.Append\n         (New_Val => CTWE_Entry'(Eloc  => Sloc (Arg1),"}, {"sha": "4f66b7157789e6a59453bb6ba1fefa347d1453e4", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -9774,7 +9774,7 @@ package body Sem_Res is\n       ----------------------------\n \n       procedure Resolve_Set_Membership is\n-         Alt  : Node_Id;\n+         Alt : Node_Id;\n \n       begin\n          --  If the left operand is overloaded, find type compatible with not"}, {"sha": "3534e83c6a98ae9a783bf01c7a2ca65367e0adba", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1659,7 +1659,7 @@ package body Sem_Util is\n       Typ            : Entity_Id;\n       Suggest_Static : Boolean := False)\n    is\n-      Gen            : Entity_Id;\n+      Gen : Entity_Id;\n \n    begin\n       --  Avoid cascaded errors\n@@ -10729,7 +10729,7 @@ package body Sem_Util is\n    -------------------------------------\n \n    function Get_Actual_Subtype_If_Available (N : Node_Id) return Entity_Id is\n-      Typ  : constant Entity_Id := Etype (N);\n+      Typ : constant Entity_Id := Etype (N);\n \n    begin\n       --  If what we have is an identifier that references a subprogram\n@@ -21951,7 +21951,7 @@ package body Sem_Util is\n       ------------------------------------\n \n       function Prefix_Has_Volatile_Components (P : Node_Id) return Boolean is\n-         Typ  : constant Entity_Id := Etype (P);\n+         Typ : constant Entity_Id := Etype (P);\n \n       begin\n          if Is_Access_Type (Typ) then"}, {"sha": "4df735c2ccf25e66ada1c6d8b7364e790927d98b", "filename": "gcc/ada/sinput.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsinput.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fsinput.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinput.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -329,7 +329,7 @@ package body Sinput is\n    begin\n       for X in 1 .. Source_File.Last loop\n          declare\n-            S  : Source_File_Record renames Source_File.Table (X);\n+            S : Source_File_Record renames Source_File.Table (X);\n          begin\n             if S.Instance = No_Instance_Id then\n                Free_Source_Buffer (S.Source_Text);"}, {"sha": "a34e8410be87fe56405620786a8ca80713c238aa", "filename": "gcc/ada/switch-c.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fswitch-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8e35819dada2d120817c9dae95703c0bb5841b/gcc%2Fada%2Fswitch-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-c.adb?ref=fb8e35819dada2d120817c9dae95703c0bb5841b", "patch": "@@ -1285,7 +1285,7 @@ package body Switch.C is\n \n                else\n                   declare\n-                     OK  : Boolean;\n+                     OK : Boolean;\n \n                   begin\n                      Set_Validity_Check_Options\n@@ -1408,7 +1408,7 @@ package body Switch.C is\n                   Store_Switch := False;\n \n                   declare\n-                     OK  : Boolean;\n+                     OK : Boolean;\n \n                   begin\n                      Set_Style_Check_Options"}]}