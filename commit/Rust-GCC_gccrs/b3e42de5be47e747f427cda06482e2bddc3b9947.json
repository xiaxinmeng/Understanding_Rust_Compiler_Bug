{"sha": "b3e42de5be47e747f427cda06482e2bddc3b9947", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjNlNDJkZTViZTQ3ZTc0N2Y0MjdjZGEwNjQ4MmUyYmRkYzNiOTk0Nw==", "commit": {"author": {"name": "Vincent Pucci", "email": "pucci@adacore.com", "date": "2012-03-15T09:11:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-03-15T09:11:57Z"}, "message": "sem.ads, sem.adb (Preanalyze): New routine.\n\n2012-03-15  Vincent Pucci  <pucci@adacore.com>\n\n\t* sem.ads, sem.adb (Preanalyze): New routine.\n\t* sem_ch4.adb (Analyze_Quantified_Expression): Call to the\n\tPreanalyze routine in Sem added.  Renaming of Needs_Expansion\n\tinto Need_Preanalysis.\n\t* sem_ch6.adb (Preanalyze): Removed.\n\nFrom-SVN: r185421", "tree": {"sha": "5df50424df7a99df4de4e32954b6f54cc9a79869", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5df50424df7a99df4de4e32954b6f54cc9a79869"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b3e42de5be47e747f427cda06482e2bddc3b9947", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e42de5be47e747f427cda06482e2bddc3b9947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e42de5be47e747f427cda06482e2bddc3b9947", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e42de5be47e747f427cda06482e2bddc3b9947/comments", "author": null, "committer": null, "parents": [{"sha": "2a1b208c0c0ff053d205c576c34377ce0c948b52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a1b208c0c0ff053d205c576c34377ce0c948b52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a1b208c0c0ff053d205c576c34377ce0c948b52"}], "stats": {"total": 105, "additions": 63, "deletions": 42}, "files": [{"sha": "1617c1a3e097c0662b92446b142a0e0749fdeb0d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b3e42de5be47e747f427cda06482e2bddc3b9947", "patch": "@@ -1,3 +1,11 @@\n+2012-03-15  Vincent Pucci  <pucci@adacore.com>\n+\n+\t* sem.ads, sem.adb (Preanalyze): New routine.\n+\t* sem_ch4.adb (Analyze_Quantified_Expression): Call to the\n+\tPreanalyze routine in Sem added.  Renaming of Needs_Expansion\n+\tinto Need_Preanalysis.\n+\t* sem_ch6.adb (Preanalyze): Removed.\n+\n 2012-03-15  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_ch4.adb (Analyze_Quantified_Expression): Add comment."}, {"sha": "6966f45a8e9919df97ea98c88228d9f5fb97229e", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=b3e42de5be47e747f427cda06482e2bddc3b9947", "patch": "@@ -1288,6 +1288,23 @@ package body Sem is\n       Scope_Stack.Release;\n    end Lock;\n \n+   ----------------\n+   -- Preanalyze --\n+   ----------------\n+\n+   procedure Preanalyze (N : Node_Id) is\n+      Save_Full_Analysis : constant Boolean := Full_Analysis;\n+\n+   begin\n+      Full_Analysis := False;\n+      Expander_Mode_Save_And_Set (False);\n+\n+      Analyze (N);\n+\n+      Expander_Mode_Restore;\n+      Full_Analysis := Save_Full_Analysis;\n+   end Preanalyze;\n+\n    --------------------------------------\n    -- Push_Global_Suppress_Stack_Entry --\n    --------------------------------------"}, {"sha": "3fa25f90f97e1e7d36cff2ac97ad068a7444957a", "filename": "gcc/ada/sem.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2Fsem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2Fsem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.ads?ref=b3e42de5be47e747f427cda06482e2bddc3b9947", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -644,6 +644,11 @@ package Sem is\n    --  is False, then the status of the check can be determined simply by\n    --  examining Scope_Checks (C), so this routine is not called in that case.\n \n+   procedure Preanalyze (N : Node_Id);\n+   --  Performs a pre-analysis of node N. During pre-analysis no expansion is\n+   --  carried out for N or its children. For more info on pre-analysis read\n+   --  the spec of Sem.\n+\n    generic\n       with procedure Action (Item : Node_Id);\n    procedure Walk_Library_Items;"}, {"sha": "ffc3a271c63824a25a48303237964f1819a3955e", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 32, "deletions": 19, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=b3e42de5be47e747f427cda06482e2bddc3b9947", "patch": "@@ -29,7 +29,6 @@ with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n with Errout;   use Errout;\n-with Expander; use Expander;\n with Exp_Util; use Exp_Util;\n with Fname;    use Fname;\n with Itypes;   use Itypes;\n@@ -3391,22 +3390,33 @@ package body Sem_Ch4 is\n    -----------------------------------\n \n    procedure Analyze_Quantified_Expression (N : Node_Id) is\n-      Loc             : constant Source_Ptr := Sloc (N);\n-      Ent             : constant Entity_Id :=\n-                          New_Internal_Entity\n-                            (E_Loop, Current_Scope, Sloc (N), 'L');\n-      Needs_Expansion : constant Boolean :=\n-                          Operating_Mode /= Check_Semantics\n-                            and then not Alfa_Mode;\n+      Loc : constant Source_Ptr := Sloc (N);\n+      Ent : constant Entity_Id :=\n+             New_Internal_Entity (E_Loop, Current_Scope, Sloc (N), 'L');\n+\n+      Need_Preanalysis : constant Boolean :=\n+                           Operating_Mode /= Check_Semantics\n+                             and then not Alfa_Mode;\n \n       Iterator   : Node_Id;\n       Original_N : Node_Id;\n \n    begin\n+      --  The approach in this procedure is very non-standard and at the\n+      --  very least, extensive comments are required saying why this very\n+      --  non-standard approach is needed???\n+\n+      --  Also general comments are needed in any case saying what is going\n+      --  on here, since tree rewriting of this kind should normally be done\n+      --  by the expander and not by the analyzer ??? Probably Ent, Iterator,\n+      --  and Original_N, and Needs_Preanalysis, all need comments above ???\n+\n       --  Preserve the original node used for the expansion of the quantified\n       --  expression.\n \n-      if Needs_Expansion then\n+      --  This is a very unusual use of Copy_Separate_Tree, needs looking at???\n+\n+      if Need_Preanalysis then\n          Original_N := Copy_Separate_Tree (N);\n       end if;\n \n@@ -3416,6 +3426,9 @@ package body Sem_Ch4 is\n \n       Check_SPARK_Restriction (\"quantified expression is not allowed\", N);\n \n+      --  The following seems like expansion activity done at analysis\n+      --  time, which seems weird ???\n+\n       if Present (Loop_Parameter_Specification (N)) then\n          Iterator :=\n            Make_Iteration_Scheme (Loc,\n@@ -3443,21 +3456,21 @@ package body Sem_Ch4 is\n          Set_Parent (Iterator_Specification (Iterator), Iterator);\n       end if;\n \n-      if Needs_Expansion then\n+      if Need_Preanalysis then\n \n          --  The full analysis will be performed during the expansion of the\n          --  quantified expression, only a preanalysis of the condition needs\n          --  to be done.\n \n-         --  This is weird and irregular code for several reasons. First, doing\n-         --  an Analyze with no Resolve is very suspicious, how can this be\n-         --  right for the overloaded case ??? Second, doing two calls to\n-         --  analyze on the same node is peculiar ??? Why can't we use the\n-         --  normal Preanalyze calls here ???\n+         --  This is strange for two reasons\n \n-         Expander_Mode_Save_And_Set (False);\n-         Analyze (Condition (N));\n-         Expander_Mode_Restore;\n+         --  First, there is almost no situation in which Preanalyze vs\n+         --  Analyze should be conditioned on -gnatc mode (since error msgs\n+         --  must be 100% unaffected by -gnatc). Seconed doing a Preanalyze\n+         --  with no resolution almost certainly means that some messages are\n+         --  either missed, or flagged differently in the two cases.\n+\n+         Preanalyze (Condition (N));\n       else\n          Analyze (Condition (N));\n       end if;\n@@ -3468,7 +3481,7 @@ package body Sem_Ch4 is\n \n       --  Attach the original node to the iteration scheme created above\n \n-      if Needs_Expansion then\n+      if Need_Preanalysis then\n          Set_Etype (Original_N, Standard_Boolean);\n          Set_Parent (Iterator, Original_N);\n       end if;"}, {"sha": "d9be307600d274edd9c4c8c706db94577ee150a0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b3e42de5be47e747f427cda06482e2bddc3b9947/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=b3e42de5be47e747f427cda06482e2bddc3b9947", "patch": "@@ -4280,11 +4280,6 @@ package body Sem_Ch6 is\n       --  analysis of the non-inlined body will handle these pragmas properly).\n       --  A new internal name is associated with Body_To_Inline.\n \n-      procedure Preanalyze (N : Node_Id);\n-      --  Performs a pre-analysis of node N. During pre-analysis no expansion\n-      --  is carried out for N or its children. For more info on pre-analysis\n-      --  read the spec of Sem.\n-\n       procedure Split_Unconstrained_Function\n         (N       : Node_Id;\n          Spec_Id : Entity_Id);\n@@ -5059,23 +5054,6 @@ package body Sem_Ch6 is\n          Set_Corresponding_Spec (Body_To_Inline, Empty);\n       end Generate_Body_To_Inline;\n \n-      ----------------\n-      -- Preanalyze --\n-      ----------------\n-\n-      procedure Preanalyze (N : Node_Id) is\n-         Save_Full_Analysis : constant Boolean := Full_Analysis;\n-\n-      begin\n-         Full_Analysis := False;\n-         Expander_Mode_Save_And_Set (False);\n-\n-         Analyze (N);\n-\n-         Expander_Mode_Restore;\n-         Full_Analysis := Save_Full_Analysis;\n-      end Preanalyze;\n-\n       ----------------------------------\n       -- Split_Unconstrained_Function --\n       ----------------------------------"}]}