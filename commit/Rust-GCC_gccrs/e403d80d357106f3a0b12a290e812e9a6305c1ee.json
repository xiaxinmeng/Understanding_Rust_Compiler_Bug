{"sha": "e403d80d357106f3a0b12a290e812e9a6305c1ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQwM2Q4MGQzNTcxMDZmM2EwYjEyYTI5MGU4MTJlOWE2MzA1YzFlZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2002-06-02T14:34:31Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2002-06-02T14:34:31Z"}, "message": "dfe.c (s_rdfe, s_wdfe): Wrap parentheses around assignment used as truth value.\n\n\t* libI77/dfe.c (s_rdfe, s_wdfe): Wrap parentheses around\n\tassignment used as truth value.\n\t* libI77/due.c (s_rdue, s_wdue): Likewise.\n\t* libI77/endfile.c (f_end): Likewise.\n\t* libI77/iio.c (s_rsfi, s_wsfi): Likewise.\n\t* libI77/lread.c (ERR, l_C, nmL_getc, s_rsle): Likewise.\n\t* libI77/lwrite.c (l_g, l_put): Likewise.\n\t* libI77/open.c (f_open): Likewise.\n\t* libI77/rdfmt.c (rd_Z): Likewise.\n\t* libI77/rsfe.c (s_rsfe): Likewise.\n\t* libI77/rsne.c (hash, mk_hashtab, nl_init, getname, getdimen,\n\tx_rsne, s_rsne): Likewise.\n\t* libI77/sue.c (s_rsue, s_wsue): Likewise.\n\t* libI77/wref.c (wrt_E, wrt_F): Likewise.\n\t* libI77/wsfe.c (s_wsfe): Likewise.\n\t* libI77/wsle.c (s_wsle): Likewise.\n\t* libI77/wsne.c (s_wsne): Likewise.\n\nFrom-SVN: r54172", "tree": {"sha": "caccf8de27b0a4a5d5413fbef03acc9c7e79ee24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/caccf8de27b0a4a5d5413fbef03acc9c7e79ee24"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e403d80d357106f3a0b12a290e812e9a6305c1ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e403d80d357106f3a0b12a290e812e9a6305c1ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e403d80d357106f3a0b12a290e812e9a6305c1ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e403d80d357106f3a0b12a290e812e9a6305c1ee/comments", "author": null, "committer": null, "parents": [{"sha": "9eb404a0d9f85fc6960aab441ac129dcc93dc348", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9eb404a0d9f85fc6960aab441ac129dcc93dc348", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9eb404a0d9f85fc6960aab441ac129dcc93dc348"}], "stats": {"total": 112, "additions": 66, "deletions": 46}, "files": [{"sha": "6d0499cb20d92d4ba685f16217507d929ba013ad", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -1,3 +1,23 @@\n+Sun Jun  2 10:32:35 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* libI77/dfe.c (s_rdfe, s_wdfe): Wrap parentheses around\n+\tassignment used as truth value.\n+\t* libI77/due.c (s_rdue, s_wdue): Likewise.\n+\t* libI77/endfile.c (f_end): Likewise.\n+\t* libI77/iio.c (s_rsfi, s_wsfi): Likewise.\n+\t* libI77/lread.c (ERR, l_C, nmL_getc, s_rsle): Likewise.\n+\t* libI77/lwrite.c (l_g, l_put): Likewise.\n+\t* libI77/open.c (f_open): Likewise.\n+\t* libI77/rdfmt.c (rd_Z): Likewise.\n+\t* libI77/rsfe.c (s_rsfe): Likewise.\n+\t* libI77/rsne.c (hash, mk_hashtab, nl_init, getname, getdimen,\n+\tx_rsne, s_rsne): Likewise.\n+\t* libI77/sue.c (s_rsue, s_wsue): Likewise.\n+\t* libI77/wref.c (wrt_E, wrt_F): Likewise.\n+\t* libI77/wsfe.c (s_wsfe): Likewise.\n+\t* libI77/wsle.c (s_wsle): Likewise.\n+\t* libI77/wsne.c (s_wsne): Likewise.\n+\n Sun Jun  2 08:59:50 2002  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* libF77/main.c (main): Avoid implicit int."}, {"sha": "5ce0b4cd661541853f794ba4eb86f6d3749b70ee", "filename": "libf2c/libI77/dfe.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fdfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fdfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdfe.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -101,7 +101,7 @@ s_rdfe (cilist * a)\n     f_init ();\n   f__init = 3;\n   f__reading = 1;\n-  if (n = c_dfe (a))\n+  if ((n = c_dfe (a)))\n     return (n);\n   if (f__curunit->uwrt && f__nowreading (f__curunit))\n     err (a->cierr, errno, \"read start\");\n@@ -124,7 +124,7 @@ s_wdfe (cilist * a)\n     f_init ();\n   f__init = 3;\n   f__reading = 0;\n-  if (n = c_dfe (a))\n+  if ((n = c_dfe (a)))\n     return (n);\n   if (f__curunit->uwrt != 1 && f__nowwriting (f__curunit))\n     err (a->cierr, errno, \"startwrt\");"}, {"sha": "7c6a801e0f9bc9830eb07f537f986eed65b53e8b", "filename": "libf2c/libI77/due.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fdue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fdue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fdue.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -37,7 +37,7 @@ s_rdue (cilist * a)\n {\n   int n;\n   f__reading = 1;\n-  if (n = c_due (a))\n+  if ((n = c_due (a)))\n     return (n);\n   if (f__curunit->uwrt && f__nowreading (f__curunit))\n     err (a->cierr, errno, \"read start\");\n@@ -49,7 +49,7 @@ s_wdue (cilist * a)\n {\n   int n;\n   f__reading = 0;\n-  if (n = c_due (a))\n+  if ((n = c_due (a)))\n     return (n);\n   if (f__curunit->uwrt != 1 && f__nowwriting (f__curunit))\n     err (a->cierr, errno, \"write start\");"}, {"sha": "513f2107ef79dd5d373f12163674323eb489e30b", "filename": "libf2c/libI77/endfile.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fendfile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fendfile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fendfile.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -28,7 +28,7 @@ f_end (alist * a)\n     {\n       char nbuf[10];\n       sprintf (nbuf, \"fort.%ld\", (long) a->aunit);\n-      if (tf = fopen (nbuf, f__w_mode[0]))\n+      if ((tf = fopen (nbuf, f__w_mode[0])))\n \tfclose (tf);\n       return (0);\n     }"}, {"sha": "69f215425db18c0e909dbfd0e4b486373f544168", "filename": "libf2c/libI77/iio.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fiio.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fiio.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fiio.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -79,7 +79,7 @@ integer\n s_rsfi (icilist * a)\n {\n   int n;\n-  if (n = c_si (a))\n+  if ((n = c_si (a)))\n     return (n);\n   f__reading = 1;\n   f__doed = rd_ed;\n@@ -112,7 +112,7 @@ integer\n s_wsfi (icilist * a)\n {\n   int n;\n-  if (n = c_si (a))\n+  if ((n = c_si (a)))\n     return (n);\n   f__reading = 0;\n   f__doed = w_ed;"}, {"sha": "f8ec7dc0e90d838b8205d11a7b5883382d1c0f8d", "filename": "libf2c/libI77/lread.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Flread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Flread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flread.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -99,7 +99,7 @@ flag f__lquit;\n int f__lcount, f__ltype, nml_read;\n char *f__lchar;\n double f__lx, f__ly;\n-#define ERR(x) if(n=(x)) {f__init &= ~2; return(n);}\n+#define ERR(x) if((n=(x))) {f__init &= ~2; return(n);}\n #define GETC(x) (x=(*l_getc)())\n #define Ungetc(x,y) (*l_ungetc)(x,y)\n \n@@ -330,7 +330,7 @@ l_C (void)\n   Ungetc (ch, f__cf);\n   nml_save = nml_read;\n   nml_read = 0;\n-  if (ch = l_R (1, 0))\n+  if ((ch = l_R (1, 0)))\n     return ch;\n   if (!f__ltype)\n     errfl (f__elist->cierr, 112, \"no real part\");\n@@ -343,7 +343,7 @@ l_C (void)\n     }\n   while (iswhit (GETC (ch)));\n   (void) Ungetc (ch, f__cf);\n-  if (ch = l_R (1, 0))\n+  if ((ch = l_R (1, 0)))\n     return ch;\n   if (!f__ltype)\n     errfl (f__elist->cierr, 112, \"no imaginary part\");\n@@ -367,7 +367,7 @@ static int\n nmL_getc (void)\n {\n   int rv;\n-  if (rv = *nmL_next++)\n+  if ((rv = *nmL_next++))\n     return rv;\n   l_getc = nmL_getc_save;\n   l_ungetc = nmL_ungetc_save;\n@@ -829,7 +829,7 @@ s_rsle (cilist * a)\n   f__reading = 1;\n   f__external = 1;\n   f__formatted = 1;\n-  if (n = c_le (a))\n+  if ((n = c_le (a)))\n     return (n);\n   f__lioproc = l_read;\n   f__lquit = 0;"}, {"sha": "b910ab198723036a6fe391a7e741abf98277ce1f", "filename": "libf2c/libI77/lwrite.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Flwrite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Flwrite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flwrite.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -148,7 +148,7 @@ l_g (char *buf, double n)\n \t    while (*++b);\n \t    goto f__ret;\n \t  case 'E':\n-\t    for (c1 = '.', c = 'E'; *b = c1; c1 = c, c = *++b);\n+\t    for (c1 = '.', c = 'E'; (*b = c1); c1 = c, c = *++b);\n \t    goto f__ret;\n \t  }\n     }\n@@ -163,7 +163,7 @@ l_put (register char *s)\n   register void (*pn) (int) = f__putn;\n   register int c;\n \n-  while (c = *s++)\n+  while ((c = *s++))\n     (*pn) (c);\n }\n "}, {"sha": "29e9fde282e5fb61e81b4b92807c40c6fed5eaa4", "filename": "libf2c/libI77/open.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fopen.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fopen.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fopen.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -239,7 +239,7 @@ f_open (olist * a)\n     case 'r':\t\t\t/* Fortran 90 replace option */\n     case 'R':\n     replace:\n-      if (tf = fopen (buf, f__w_mode[0]))\n+      if ((tf = fopen (buf, f__w_mode[0])))\n \tfclose (tf);\n     }\n \n@@ -251,9 +251,9 @@ f_open (olist * a)\n     ufmt = 0;\n   if (!(tf = fopen (buf, f__w_mode[ufmt | 2])))\n     {\n-      if (tf = fopen (buf, f__r_mode[ufmt]))\n+      if ((tf = fopen (buf, f__r_mode[ufmt])))\n \tb->urw = 1;\n-      else if (tf = fopen (buf, f__w_mode[ufmt]))\n+      else if ((tf = fopen (buf, f__w_mode[ufmt])))\n \t{\n \t  b->uwrt = 1;\n \t  b->urw = 2;"}, {"sha": "5088f714f6fd0d8ca974ced3259190bbf2786209", "filename": "libf2c/libI77/rdfmt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Frdfmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Frdfmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frdfmt.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -25,10 +25,10 @@ rd_Z (Uint * n, int w, ftnlen len)\n   if (!hex['0'])\n     {\n       s = \"0123456789\";\n-      while (ch = *s++)\n+      while ((ch = *s++))\n \thex[ch] = ch - '0' + 1;\n       s = \"ABCDEF\";\n-      while (ch = *s++)\n+      while ((ch = *s++))\n \thex[ch] = hex[ch + 'a' - 'A'] = ch - 'A' + 11;\n     }\n   s = s0 = (char *) x;"}, {"sha": "0dcda392ce0ae952d0139f1f670752de24f1f016", "filename": "libf2c/libI77/rsfe.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Frsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Frsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsfe.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -70,7 +70,7 @@ s_rsfe (cilist * a)\t\t/* start */\n   f__sequential = 1;\n   f__formatted = 1;\n   f__external = 1;\n-  if (n = c_sfe (a))\n+  if ((n = c_sfe (a)))\n     return (n);\n   f__elist = a;\n   f__cursor = f__recpos = 0;"}, {"sha": "4b521344dd48dff724f873cc0a1eaa0abdef0102", "filename": "libf2c/libI77/rsne.c", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Frsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Frsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsne.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -66,7 +66,7 @@ hash (hashtab * ht, register char *s)\n   register hashentry *h;\n   char *s0 = s;\n \n-  for (x = 0; c = *s++; x = x & 0x4000 ? ((x << 1) & 0x7fff) + 1 : x << 1)\n+  for (x = 0; (c = *s++); x = x & 0x4000 ? ((x << 1) & 0x7fff) + 1 : x << 1)\n     x += c;\n   for (h = *(zot = ht->tab + x % ht->htsize); h; h = h->next)\n     if (!strcmp (s0, h->name))\n@@ -83,7 +83,7 @@ mk_hashtab (Namelist * nl)\n   hashentry *he;\n \n   hashtab **x, **x0, *y;\n-  for (x = &nl_cache; y = *x; x0 = x, x = &y->next)\n+  for (x = &nl_cache; (y = *x); x0 = x, x = &y->next)\n     if (nl == y->nl)\n       return y;\n   if (n_nlcache >= MAX_NL_CACHE)\n@@ -138,10 +138,10 @@ nl_init (void)\n   register char *s;\n   register int c;\n \n-  for (s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; c = *s++;)\n+  for (s = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"; (c = *s++);)\n     Alpha[c]\n       = Alphanum[c] = Alpha[c + 'a' - 'A'] = Alphanum[c + 'a' - 'A'] = c;\n-  for (s = \"0123456789_\"; c = *s++;)\n+  for (s = \"0123456789_\"; (c = *s++);)\n     Alphanum[c] = c;\n }\n \n@@ -161,7 +161,7 @@ getname (register char *s, int slen)\n \tch = 115;\n       errfl (f__elist->cierr, ch, \"namelist read\");\n     }\n-  while (*s = Alphanum[GETC (ch) & 0xff])\n+  while ((*s = Alphanum[GETC (ch) & 0xff]))\n     if (s < se)\n       s++;\n   if (ch == EOF)\n@@ -209,17 +209,17 @@ getdimen (int *chp, dimen * d, ftnlen delta, ftnlen extent, ftnlen * x1)\n   register int k;\n   ftnlen x2, x3;\n \n-  if (k = getnum (chp, x1))\n+  if ((k = getnum (chp, x1)))\n     return k;\n   x3 = 1;\n   if (*chp == ':')\n     {\n-      if (k = getnum (chp, &x2))\n+      if ((k = getnum (chp, &x2)))\n \treturn k;\n       x2 -= *x1;\n       if (*chp == ':')\n \t{\n-\t  if (k = getnum (chp, &x3))\n+\t  if ((k = getnum (chp, &x3)))\n \t    return k;\n \t  if (!x3)\n \t    return 123;\n@@ -311,7 +311,7 @@ x_rsne (cilist * a)\n #endif\n       }\n have_amp:\n-  if (ch = getname (buf, sizeof (buf)))\n+  if ((ch = getname (buf, sizeof (buf))))\n     return ch;\n   nl = (Namelist *) a->cifmt;\n   if (strcmp (buf, nl->name))\n@@ -371,7 +371,7 @@ x_rsne (cilist * a)\n \t    if (ch <= ' ' && ch >= 0 || ch == ',')\n \t      continue;\n \t    Ungetc (ch, f__cf);\n-\t    if (ch = getname (buf, sizeof (buf)))\n+\t    if ((ch = getname (buf, sizeof (buf))))\n \t      return ch;\n \t    goto havename;\n \t  }\n@@ -398,7 +398,7 @@ x_rsne (cilist * a)\n \t    {\n \t      if (type != TYCHAR)\n \t\terrfl (a->cierr, 122, where);\n-\t      if (k = getdimen (&ch, dn, (ftnlen) size, (ftnlen) size, &b))\n+\t      if ((k = getdimen (&ch, dn, (ftnlen) size, (ftnlen) size, &b)))\n \t\terrfl (a->cierr, k, where);\n \t      if (ch != ')')\n \t\terrfl (a->cierr, 115, where);\n@@ -414,7 +414,7 @@ x_rsne (cilist * a)\n \t  nomax = span = dims[1];\n \t  ivae = iva + size * nomax;\n \t  colonseen = 0;\n-\t  if (k = getdimen (&ch, dn, size, nomax, &b))\n+\t  if ((k = getdimen (&ch, dn, size, nomax, &b)))\n \t    errfl (a->cierr, k, where);\n \t  no = dn->extent;\n \t  b0 = dims[2];\n@@ -426,7 +426,7 @@ x_rsne (cilist * a)\n \t\terrfl (a->cierr, 115, where);\n \t      dn1 = dn + 1;\n \t      span /= *dims;\n-\t      if (k = getdimen (&ch, dn1, dn->delta ** dims, span, &b1))\n+\t      if ((k = getdimen (&ch, dn1, dn->delta ** dims, span, &b1)))\n \t\terrfl (a->cierr, k, where);\n \t      ex *= *dims;\n \t      b += b1 * ex;\n@@ -446,7 +446,7 @@ x_rsne (cilist * a)\n \t  dn0 = dimens;\n \t  if (type == TYCHAR && ch == '(' /*) */ )\n \t    {\n-\t      if (k = getdimen (&ch, &substr, size, size, &b))\n+\t      if ((k = getdimen (&ch, &substr, size, size, &b)))\n \t\terrfl (a->cierr, k, where);\n \t      if (ch != ')')\n \t\terrfl (a->cierr, 115, where);\n@@ -483,7 +483,7 @@ x_rsne (cilist * a)\n \t      dn1->delta -= ex;\n \t    }\n \t}\n-      else if (dims = v->dims)\n+      else if ((dims = v->dims))\n \t{\n \t  no = no1 = dims[1];\n \t  ivae = iva + no * size;\n@@ -506,7 +506,7 @@ x_rsne (cilist * a)\n \t  else if (iva + no1 * size > ivae)\n \t    no1 = (ivae - iva) / size;\n \t  f__lquit = 0;\n-\t  if (k = l_read (&no1, vaddr + iva, size, type))\n+\t  if ((k = l_read (&no1, vaddr + iva, size, type)))\n \t    return k;\n \t  if (f__lquit == 1)\n \t    return 0;\n@@ -518,7 +518,7 @@ x_rsne (cilist * a)\n \t\t  no1 = (ivae - iva) / size;\n \t\t  if (no1 > f__lcount)\n \t\t    no1 = f__lcount;\n-\t\t  if (k = l_read (&no1, vaddr + iva, size, type))\n+\t\t  if ((k = l_read (&no1, vaddr + iva, size, type)))\n \t\t    return k;\n \t\t  iva += no1 * dn0->delta;\n \t\t}\n@@ -584,7 +584,7 @@ s_rsne (cilist * a)\n \n   f__external = 1;\n   l_eof = 0;\n-  if (n = c_le (a))\n+  if ((n = c_le (a)))\n     return n;\n   if (f__curunit->uwrt && f__nowreading (f__curunit))\n     err (a->cierr, errno, where0);"}, {"sha": "a20df66d31ffab7258fef845003734c15fb7173b", "filename": "libf2c/libI77/sue.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fsue.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fsue.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fsue.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -31,7 +31,7 @@ s_rsue (cilist * a)\n     f_init ();\n   f__init = 3;\n   f__reading = 1;\n-  if (n = c_sue (a))\n+  if ((n = c_sue (a)))\n     return (n);\n   f__recpos = 0;\n   if (f__curunit->uwrt && f__nowreading (f__curunit))\n@@ -56,7 +56,7 @@ s_wsue (cilist * a)\n   if (f__init != 1)\n     f_init ();\n   f__init = 3;\n-  if (n = c_sue (a))\n+  if ((n = c_sue (a)))\n     return (n);\n   f__reading = 0;\n   f__reclen = 0;"}, {"sha": "f3c490c4fdfce8fe2165c3d4537941b6b51828a8", "filename": "libf2c/libI77/wref.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fwref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fwref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwref.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -134,7 +134,7 @@ wrt_E (ufloat * p, int w, int d, int e, ftnlen len)\n #else\n       if (!e0)\n \t{\n-\t  for (s -= 2, e1 = 2; s[0] = s[1]; s++)\n+\t  for (s -= 2, e1 = 2; (s[0] = s[1]); s++)\n #ifdef CRAY\n \t    delta--;\n \t  if ((delta += 4) < 0)\n@@ -233,7 +233,7 @@ wrt_F (ufloat * p, int w, int d, ftnlen len)\n #endif\n     }\n \n-  if (n = f__scale)\n+  if ((n = f__scale))\n     {\n       if (n > 0)\n \tdo\n@@ -298,7 +298,7 @@ wrt_F (ufloat * p, int w, int d, ftnlen len)\n     PUT ('-');\n   else if (f__cplus)\n     PUT ('+');\n-  while (n = *b++)\n+  while ((n = *b++))\n     PUT (n);\n   while (--d1 >= 0)\n     PUT ('0');"}, {"sha": "46f7a8ffef00544079886b32ce0cff2a3d7a7c04", "filename": "libf2c/libI77/wsfe.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fwsfe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fwsfe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwsfe.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -53,7 +53,7 @@ s_wsfe (cilist * a)\t\t/*start */\n   f__sequential = 1;\n   f__formatted = 1;\n   f__external = 1;\n-  if (n = c_sfe (a))\n+  if ((n = c_sfe (a)))\n     return (n);\n   f__elist = a;\n   f__hiwater = f__cursor = f__recpos = 0;"}, {"sha": "e9ef172d5919b87c17fc700ee82a1fb373aa2947", "filename": "libf2c/libI77/wsle.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fwsle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fwsle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwsle.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -9,7 +9,7 @@ integer\n s_wsle (cilist * a)\n {\n   int n;\n-  if (n = c_le (a))\n+  if ((n = c_le (a)))\n     return (n);\n   f__reading = 0;\n   f__external = 1;"}, {"sha": "bcf08262de133cda4549ac398aa929d2a7577d95", "filename": "libf2c/libI77/wsne.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fwsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e403d80d357106f3a0b12a290e812e9a6305c1ee/libf2c%2FlibI77%2Fwsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fwsne.c?ref=e403d80d357106f3a0b12a290e812e9a6305c1ee", "patch": "@@ -7,7 +7,7 @@ s_wsne (cilist * a)\n {\n   int n;\n \n-  if (n = c_le (a))\n+  if ((n = c_le (a)))\n     return (n);\n   f__reading = 0;\n   f__external = 1;"}]}