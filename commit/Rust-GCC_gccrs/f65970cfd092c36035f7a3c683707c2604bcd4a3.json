{"sha": "f65970cfd092c36035f7a3c683707c2604bcd4a3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY1OTcwY2ZkMDkyYzM2MDM1ZjdhM2M2ODM3MDdjMjYwNGJjZDRhMw==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-05-19T13:54:31Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-05-19T13:54:31Z"}, "message": "[ARM] Fix costing of sign-extending load in rtx costs\n\n\t* config/arm/arm.c (arm_new_rtx_costs, SIGN_EXTEND case):\n\tDon't add cost of inner memory when handling sign-extended\n\tloads.\n\nFrom-SVN: r236461", "tree": {"sha": "3583ad117f5f60599f47e0fe5ed9302d1865c5d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3583ad117f5f60599f47e0fe5ed9302d1865c5d2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f65970cfd092c36035f7a3c683707c2604bcd4a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65970cfd092c36035f7a3c683707c2604bcd4a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f65970cfd092c36035f7a3c683707c2604bcd4a3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f65970cfd092c36035f7a3c683707c2604bcd4a3/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "afb7243286fdf0ffdc965027e5d382604fe191f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afb7243286fdf0ffdc965027e5d382604fe191f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afb7243286fdf0ffdc965027e5d382604fe191f8"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "42e6224c4a0cc228ba714203d3d73822c68062fa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65970cfd092c36035f7a3c683707c2604bcd4a3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65970cfd092c36035f7a3c683707c2604bcd4a3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f65970cfd092c36035f7a3c683707c2604bcd4a3", "patch": "@@ -1,3 +1,9 @@\n+2016-05-19  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_new_rtx_costs, SIGN_EXTEND case):\n+\tDon't add cost of inner memory when handling sign-extended\n+\tloads.\n+\n 2016-05-19  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR rtl-optimization/71148"}, {"sha": "12060ba569f99e4447ec5705fdeee7cd081ab6f1", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f65970cfd092c36035f7a3c683707c2604bcd4a3/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f65970cfd092c36035f7a3c683707c2604bcd4a3/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f65970cfd092c36035f7a3c683707c2604bcd4a3", "patch": "@@ -10762,8 +10762,6 @@ arm_new_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer_code,\n       if ((arm_arch4 || GET_MODE (XEXP (x, 0)) == SImode)\n \t  && MEM_P (XEXP (x, 0)))\n \t{\n-\t  *cost = rtx_cost (XEXP (x, 0), VOIDmode, code, 0, speed_p);\n-\n \t  if (mode == DImode)\n \t    *cost += COSTS_N_INSNS (1);\n "}]}