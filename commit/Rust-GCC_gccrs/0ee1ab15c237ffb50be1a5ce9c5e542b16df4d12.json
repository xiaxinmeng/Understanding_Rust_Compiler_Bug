{"sha": "0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12", "node_id": "C_kwDOANBUbNoAKDBlZTFhYjE1YzIzN2ZmYjUwYmUxYTVjZTljNWU1NDJiMTZkZjRkMTI", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-10-02T11:44:01Z"}, "committer": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2021-10-03T19:41:59Z"}, "message": "coroutines: Look through NOPs for awaiter variables [PR 99575].\n\nThere was a missing STRIP_NOPS which meant that, in some cases,\nan awaiter variable could be hidden by a view-convert-expr.\n\nSigned-off-by: Iain Sandoe <iain@sandoe.co.uk>\n\n\tPR c++/99575\n\ngcc/cp/ChangeLog:\n\n\t* coroutines.cc (build_co_await): Strip NOPs from\n\tcandidate awaiter expressions before testing to see\n\tif they need a temporary.\n\ngcc/testsuite/ChangeLog:\n\n\t* g++.dg/coroutines/pr99575.C: New test.", "tree": {"sha": "dc2bda9d2a7656bff68d73c083446387ea3befaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc2bda9d2a7656bff68d73c083446387ea3befaa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fbe1b18ed090a026d08f0b0e5f8cd56d652125d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fbe1b18ed090a026d08f0b0e5f8cd56d652125d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fbe1b18ed090a026d08f0b0e5f8cd56d652125d"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "876a14606f8332f055f9925d9661365a53ce174b", "filename": "gcc/cp/coroutines.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12/gcc%2Fcp%2Fcoroutines.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12/gcc%2Fcp%2Fcoroutines.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcoroutines.cc?ref=0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12", "patch": "@@ -1008,6 +1008,7 @@ build_co_await (location_t loc, tree a, suspend_point_kind suspend_kind)\n     }\n \n   /* Only build a temporary if we need it.  */\n+  STRIP_NOPS (e_proxy);\n   if (TREE_CODE (e_proxy) == PARM_DECL\n       || (VAR_P (e_proxy) && !is_local_temp (e_proxy)))\n     {"}, {"sha": "d5f86c1812eec8ecdccaad83b11c4da7b9206332", "filename": "gcc/testsuite/g++.dg/coroutines/pr99575.C", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr99575.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr99575.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcoroutines%2Fpr99575.C?ref=0ee1ab15c237ffb50be1a5ce9c5e542b16df4d12", "patch": "@@ -0,0 +1,35 @@\n+\n+#include <coroutine>\n+\n+class Task {\n+ public:\n+  struct promise_type {\n+    Task get_return_object() { return Task{}; }\n+    std::suspend_always initial_suspend() { return {}; }\n+    std::suspend_always final_suspend() noexcept { return {}; }\n+    void unhandled_exception() {}\n+    void return_void() {}\n+  };\n+\n+  bool await_ready() const { return false; }\n+  void await_suspend(std::coroutine_handle<void> continuation) {}\n+  void await_resume() {}\n+};\n+\n+class NonMoveableTask {\n+ public:\n+  NonMoveableTask() = default;\n+  NonMoveableTask(const NonMoveableTask&) = delete;\n+  NonMoveableTask(NonMoveableTask&&) = delete;\n+\n+  NonMoveableTask& operator=(const NonMoveableTask&) = delete;\n+  NonMoveableTask& operator=(NonMoveableTask&& other) = delete;\n+\n+  bool await_ready() const { return false; }\n+  void await_suspend(std::coroutine_handle<void>) {}\n+  void await_resume() {}\n+};\n+\n+Task Foo(NonMoveableTask* task) { co_await* task; }\n+\n+int main() {}"}]}