{"sha": "b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI1YTIzYmQ1YTE2ZTVlNmQ5ZjlmYmNkMDI3M2ZmZTkwMGIwNzJlOQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2003-03-19T17:02:43Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2003-03-19T17:02:43Z"}, "message": "lex.c (do_java_lex): Renamed from java_lex.\n\n\t* lex.c (do_java_lex): Renamed from java_lex.\n\t(java_lex): New function.\n\tInclude timevar.h.\n\nFrom-SVN: r64586", "tree": {"sha": "d525f8ee9b347c5b49819e3fc8cd25529523e7f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d525f8ee9b347c5b49819e3fc8cd25529523e7f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9/comments", "author": null, "committer": null, "parents": [{"sha": "8b5642e02581a5bb68b0bcbc7e28ed8b695cf2bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b5642e02581a5bb68b0bcbc7e28ed8b695cf2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b5642e02581a5bb68b0bcbc7e28ed8b695cf2bf"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "8f0c3be7261dbe6aa6ea19b1ba8011d688fe4c7d", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9", "patch": "@@ -1,3 +1,9 @@\n+2003-03-19  Tom Tromey  <tromey@redhat.com>\n+\n+\t* lex.c (do_java_lex): Renamed from java_lex.\n+\t(java_lex): New function.\n+\tInclude timevar.h.\n+\n 2003-03-13  Tom Tromey  <tromey@redhat.com>\n \n \t* parse.y (resolve_inner_class): Error if qualifier is a primitive"}, {"sha": "d18aa1b9954f39de5f8f0a6edc4a82a70577996b", "filename": "gcc/java/lex.c", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9/gcc%2Fjava%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9/gcc%2Fjava%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Flex.c?ref=b25a23bd5a16e5e6d9f9fbcd0273ffe900b072e9", "patch": "@@ -38,12 +38,17 @@ The Free Software Foundation is independent of Sun Microsystems, Inc.  */\n #include \"keyword.h\"\n #include \"flags.h\"\n #include \"chartables.h\"\n+#ifndef JC1_LITE\n+#include \"timevar.h\"\n+#endif\n \n /* Function declarations.  */\n static char *java_sprint_unicode (struct java_line *, int);\n static void java_unicode_2_utf8 (unicode_t);\n static void java_lex_error (const char *, int);\n #ifndef JC1_LITE\n+static int do_java_lex (YYSTYPE *);\n+static int java_lex (YYSTYPE *);\n static int java_is_eol (FILE *, int);\n static tree build_wfl_node (tree);\n #endif\n@@ -937,7 +942,7 @@ static int\n #ifdef JC1_LITE\n yylex (YYSTYPE *java_lval)\n #else\n-java_lex (YYSTYPE *java_lval)\n+do_java_lex (YYSTYPE *java_lval)\n #endif\n {\n   int c;\n@@ -1699,6 +1704,19 @@ java_lex (YYSTYPE *java_lval)\n }\n \n #ifndef JC1_LITE\n+\n+/* The exported interface to the lexer.  */\n+static int\n+java_lex (YYSTYPE *java_lval)\n+{\n+  int r;\n+\n+  timevar_push (TV_LEX);\n+  r = do_java_lex (java_lval);\n+  timevar_pop (TV_LEX);\n+  return r;\n+}\n+\n /* This is called by the parser to see if an error should be generated\n    due to numeric overflow.  This function only handles the particular\n    case of the largest negative value, and is only called in the case\n@@ -1716,6 +1734,7 @@ error_if_numeric_overflow (tree value)\n \tjava_lex_error (\"Numeric overflow for `int' literal\", 0);\n     }\n }\n+\n #endif /* JC1_LITE */\n \n static void"}]}