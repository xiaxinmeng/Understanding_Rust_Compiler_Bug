{"sha": "332d6c4189218b06a22260beae02fa40d1ec3286", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzMyZDZjNDE4OTIxOGIwNmEyMjI2MGJlYWUwMmZhNDBkMWVjMzI4Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-06-25T10:59:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-06-25T10:59:48Z"}, "message": "re PR tree-optimization/90930 (Excessive memory consumption)\n\n2019-06-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/90930\n\t* tree-ssa-reassoc.c (reassociate_bb): Only rewrite expression\n\tinto parallel form in the last pass instance.\n\n\t* gcc.dg/tree-ssa/reassoc-24.c: Adjust.\n\t* gcc.dg/tree-ssa/reassoc-25.c: Likewise.\n\nFrom-SVN: r272644", "tree": {"sha": "4d4d8719b8314ce129b6ca0fc0ad743fbda2a041", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d4d8719b8314ce129b6ca0fc0ad743fbda2a041"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/332d6c4189218b06a22260beae02fa40d1ec3286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/332d6c4189218b06a22260beae02fa40d1ec3286", "html_url": "https://github.com/Rust-GCC/gccrs/commit/332d6c4189218b06a22260beae02fa40d1ec3286", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/332d6c4189218b06a22260beae02fa40d1ec3286/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "673f01b856e7006194874fef2e70866ec3dd07d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673f01b856e7006194874fef2e70866ec3dd07d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/673f01b856e7006194874fef2e70866ec3dd07d9"}], "stats": {"total": 46, "additions": 32, "deletions": 14}, "files": [{"sha": "9814b5b85f8fb1e3650644d5a44978b82856c79a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=332d6c4189218b06a22260beae02fa40d1ec3286", "patch": "@@ -1,3 +1,9 @@\n+2019-06-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90930\n+\t* tree-ssa-reassoc.c (reassociate_bb): Only rewrite expression\n+\tinto parallel form in the last pass instance.\n+\n 2019-06-25  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc.c (arc_symbol_binds_local_p): New function."}, {"sha": "b147b6766eef4cc265927c199a1d140f5d695fbf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=332d6c4189218b06a22260beae02fa40d1ec3286", "patch": "@@ -1,3 +1,9 @@\n+2019-06-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/90930\n+\t* gcc.dg/tree-ssa/reassoc-24.c: Adjust.\n+\t* gcc.dg/tree-ssa/reassoc-25.c: Likewise.\n+\n 2019-06-25  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* gcc.target/arc/pr89838.c: New file."}, {"sha": "c320d1cb71b103d9e86bd5538c66df3cf8d5d3a6", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-24.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-24.c?ref=332d6c4189218b06a22260beae02fa40d1ec3286", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 --param tree-reassoc-width=2 -fdump-tree-reassoc1\" } */\n+/* { dg-options \"-O2 --param tree-reassoc-width=2 -fdump-tree-reassoc2\" } */\n \n unsigned int\n foo (void)\n@@ -21,4 +21,4 @@ foo (void)\n \n /* Verify there are two pairs of __asm__ statements with no\n    intervening stmts.  */\n-/* { dg-final { scan-tree-dump-times \"__asm__\\[^;\\n]*;\\n *__asm__\" 2 \"reassoc1\"} } */\n+/* { dg-final { scan-tree-dump-times \"__asm__\\[^;\\n]*;\\n *__asm__\" 2 \"reassoc2\"} } */"}, {"sha": "dbb02683778b08b2199e2cb4a9d356f7e8a0fd18", "filename": "gcc/testsuite/gcc.dg/tree-ssa/reassoc-25.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Freassoc-25.c?ref=332d6c4189218b06a22260beae02fa40d1ec3286", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 --param tree-reassoc-width=3 -fdump-tree-reassoc1-details\" } */\n+/* { dg-options \"-O2 --param tree-reassoc-width=3 -fdump-tree-reassoc2-details\" } */\n \n unsigned int\n foo (int a, int b, int c, int d)\n@@ -15,4 +15,4 @@ foo (int a, int b, int c, int d)\n }\n \n /* Verify reassociation width was chosen to be 2.  */\n-/* { dg-final { scan-tree-dump-times \"Width = 2\" 1 \"reassoc1\"} } */\n+/* { dg-final { scan-tree-dump-times \"Width = 2\" 1 \"reassoc2\"} } */"}, {"sha": "6794fbde29e68781f73a434dba2d37db2f742c3d", "filename": "gcc/tree-ssa-reassoc.c", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2Ftree-ssa-reassoc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/332d6c4189218b06a22260beae02fa40d1ec3286/gcc%2Ftree-ssa-reassoc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-reassoc.c?ref=332d6c4189218b06a22260beae02fa40d1ec3286", "patch": "@@ -6013,12 +6013,7 @@ reassociate_bb (basic_block bb)\n \t\t{\n \t\t  machine_mode mode = TYPE_MODE (TREE_TYPE (lhs));\n \t\t  int ops_num = ops.length ();\n-\t\t  int width = get_reassociation_width (ops_num, rhs_code, mode);\n-\n-\t\t  if (dump_file && (dump_flags & TDF_DETAILS))\n-\t\t    fprintf (dump_file,\n-\t\t\t     \"Width = %d was chosen for reassociation\\n\", width);\n-\n+\t\t  int width;\n \n \t\t  /* For binary bit operations, if there are at least 3\n \t\t     operands and the last last operand in OPS is a constant,\n@@ -6032,10 +6027,21 @@ reassociate_bb (basic_block bb)\n \t\t      && TREE_CODE (ops.last ()->op) == INTEGER_CST)\n \t\t    std::swap (*ops[0], *ops[ops_num - 1]);\n \n-\t\t  if (width > 1\n-\t\t      && ops.length () > 3)\n-\t\t    rewrite_expr_tree_parallel (as_a <gassign *> (stmt),\n-\t\t\t\t\t\twidth, ops);\n+\t\t  /* Only rewrite the expression tree to parallel in the\n+\t\t     last reassoc pass to avoid useless work back-and-forth\n+\t\t     with initial linearization.  */\n+\t\t  if (!reassoc_insert_powi_p\n+\t\t      && ops.length () > 3\n+\t\t      && (width = get_reassociation_width (ops_num, rhs_code,\n+\t\t\t\t\t\t\t   mode)) > 1)\n+\t\t    {\n+\t\t      if (dump_file && (dump_flags & TDF_DETAILS))\n+\t\t\tfprintf (dump_file,\n+\t\t\t\t \"Width = %d was chosen for reassociation\\n\",\n+\t\t\t\t width);\n+\t\t      rewrite_expr_tree_parallel (as_a <gassign *> (stmt),\n+\t\t\t\t\t\t  width, ops);\n+\t\t    }\n \t\t  else\n                     {\n                       /* When there are three operands left, we want"}]}