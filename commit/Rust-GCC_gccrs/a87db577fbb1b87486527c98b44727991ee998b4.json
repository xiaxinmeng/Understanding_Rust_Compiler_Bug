{"sha": "a87db577fbb1b87486527c98b44727991ee998b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTg3ZGI1NzdmYmIxYjg3NDg2NTI3Yzk4YjQ0NzI3OTkxZWU5OThiNA==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-05-29T00:25:25Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-05-29T00:25:25Z"}, "message": "[multiple changes]\n\n2007-05-28  Andrew Pinski  <Andrew_pinski@playstation.sony.com>\n\n        PR c/31339\n        * c-typeck.c (build_unary_op <case PREINCREMENT_EXPR,\n        case POSTINCREMENT_EXPR, case PREDECREMENT_EXPR,\n        case POSTDECREMENT_EXPR>): Return the error_mark_node\n        if either the real or imaginary parts would an\n        error_mark_node.\n\n2007-05-28  Andrew Pinski  <Andrew_pinski@playstation.sony.com>\n\n        PR c++/31339\n        * typeck.c (build_unary_op <case PREINCREMENT_EXPR,\n        case POSTINCREMENT_EXPR, case PREDECREMENT_EXPR,\n        case POSTDECREMENT_EXPR>): Return the error_mark_node\n        if either the real or imaginary parts would an\n        error_mark_node.\n\n2007-05-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR c/31339\n        * gcc.dg/boolcomplex-1.c: New test.\n\n        PR c++/31339\n        * g++.dg/ext/boolcomplex-1.c: New test\n\nFrom-SVN: r125156", "tree": {"sha": "cf32829ced2c56d0078e6325871e873883706429", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cf32829ced2c56d0078e6325871e873883706429"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a87db577fbb1b87486527c98b44727991ee998b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87db577fbb1b87486527c98b44727991ee998b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a87db577fbb1b87486527c98b44727991ee998b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a87db577fbb1b87486527c98b44727991ee998b4/comments", "author": null, "committer": null, "parents": [{"sha": "8d9016fcd33941f1542f0e6c8abb6373bd2cfbe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d9016fcd33941f1542f0e6c8abb6373bd2cfbe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d9016fcd33941f1542f0e6c8abb6373bd2cfbe0"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "1ca63349ec5b70a34cadd1c5ebad51b9d32b4ea2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a87db577fbb1b87486527c98b44727991ee998b4", "patch": "@@ -1,3 +1,12 @@\n+2007-05-28  Andrew Pinski  <Andrew_pinski@playstation.sony.com>\n+\n+\tPR c/31339\n+\t* c-typeck.c (build_unary_op <case PREINCREMENT_EXPR,\n+\tcase POSTINCREMENT_EXPR, case PREDECREMENT_EXPR,\n+\tcase POSTDECREMENT_EXPR>): Return the error_mark_node\n+\tif either the real or imaginary parts would an\n+\terror_mark_node.\n+\n 2007-05-28  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-dce.c (eliminate_unnecessary_stmts): Release LHS SSA"}, {"sha": "a4eed3fe36964613b275f1f5eebcb0eb50716359", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=a87db577fbb1b87486527c98b44727991ee998b4", "patch": "@@ -2908,8 +2908,11 @@ build_unary_op (enum tree_code code, tree xarg, int flag)\n \t  arg = stabilize_reference (arg);\n \t  real = build_unary_op (REALPART_EXPR, arg, 1);\n \t  imag = build_unary_op (IMAGPART_EXPR, arg, 1);\n+\t  real = build_unary_op (code, real, 1);\n+\t  if (real == error_mark_node || imag == error_mark_node)\n+\t    return error_mark_node;\n \t  return build2 (COMPLEX_EXPR, TREE_TYPE (arg),\n-\t\t\t build_unary_op (code, real, 1), imag);\n+\t\t\t real, imag);\n \t}\n \n       /* Report invalid types.  */"}, {"sha": "9dca96afcad6977971c5f0172914ccc88870a302", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a87db577fbb1b87486527c98b44727991ee998b4", "patch": "@@ -1,3 +1,12 @@\n+2007-05-28  Andrew Pinski  <Andrew_pinski@playstation.sony.com>\n+\n+        PR c++/31339\n+\t* typeck.c (build_unary_op <case PREINCREMENT_EXPR,\n+\tcase POSTINCREMENT_EXPR, case PREDECREMENT_EXPR,\n+\tcase POSTDECREMENT_EXPR>): Return the error_mark_node\n+\tif either the real or imaginary parts would an\n+\terror_mark_node.\n+\t\n 2007-05-25  Simon Martin  <simartin@users.sourceforge.net>\n \t    Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n "}, {"sha": "af2133085eda507a3e6190b4181517d745ab38ea", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=a87db577fbb1b87486527c98b44727991ee998b4", "patch": "@@ -4221,8 +4221,11 @@ build_unary_op (enum tree_code code, tree xarg, int noconvert)\n \t  arg = stabilize_reference (arg);\n \t  real = build_unary_op (REALPART_EXPR, arg, 1);\n \t  imag = build_unary_op (IMAGPART_EXPR, arg, 1);\n+\t  real = build_unary_op (code, real, 1);\n+\t  if (real == error_mark_node || imag == error_mark_node)\n+\t    return error_mark_node;\n \t  return build2 (COMPLEX_EXPR, TREE_TYPE (arg),\n-\t\t\t build_unary_op (code, real, 1), imag);\n+\t\t\t real, imag);\n \t}\n \n       /* Report invalid types.  */"}, {"sha": "6697e0dfa7c2d9d1d4084cddf3da50e219a46a66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a87db577fbb1b87486527c98b44727991ee998b4", "patch": "@@ -1,3 +1,11 @@\n+2007-05-28  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR c/31339\n+\t* gcc.dg/boolcomplex-1.c: New test.\n+\n+\tPR c++/31339\n+\t* g++.dg/ext/boolcomplex-1.c: New test.\n+\n 2007-05-28  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/32124"}, {"sha": "d05d9bbd88f6a87b4edf0ac52fe5e46aac918a7e", "filename": "gcc/testsuite/g++.dg/ext/boolcomplex-1.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fboolcomplex-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fboolcomplex-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fboolcomplex-1.c?ref=a87db577fbb1b87486527c98b44727991ee998b4", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+bool b = --0i == 0; /* { dg-error \"lvalue required as decrement operand\" } */"}, {"sha": "c34da04d6a10bfce91ca0c9f7a91f5b86d8a1631", "filename": "gcc/testsuite/gcc.dg/boolcomplex-1.c", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Ftestsuite%2Fgcc.dg%2Fboolcomplex-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a87db577fbb1b87486527c98b44727991ee998b4/gcc%2Ftestsuite%2Fgcc.dg%2Fboolcomplex-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fboolcomplex-1.c?ref=a87db577fbb1b87486527c98b44727991ee998b4", "patch": "@@ -0,0 +1,3 @@\n+/* { dg-do compile } */\n+/* { dg-options \"\" } */\n+_Bool b = --0i == 0; /* { dg-error \"lvalue required as decrement operand\" } */"}]}