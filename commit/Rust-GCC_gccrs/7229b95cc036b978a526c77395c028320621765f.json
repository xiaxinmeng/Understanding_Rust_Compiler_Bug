{"sha": "7229b95cc036b978a526c77395c028320621765f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIyOWI5NWNjMDM2Yjk3OGE1MjZjNzczOTVjMDI4MzIwNjIxNzY1Zg==", "commit": {"author": {"name": "Gary Benson", "email": "gbenson@redhat.com", "date": "2006-09-01T10:06:13Z"}, "committer": {"name": "Gary Benson", "email": "gary@gcc.gnu.org", "date": "2006-09-01T10:06:13Z"}, "message": "InetAddress.java (getByName, [...]): Only perform security check when DNS lookups are required.\n\n2006-09-01  Gary Benson  <gbenson@redhat.com>\n\n\t* java/net/InetAddress.java (getByName, getAllByName):\n\tOnly perform security check when DNS lookups are required.\n\nFrom-SVN: r116621", "tree": {"sha": "42d792ab7f0c8487eb362426abe4308125d23950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42d792ab7f0c8487eb362426abe4308125d23950"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7229b95cc036b978a526c77395c028320621765f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7229b95cc036b978a526c77395c028320621765f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7229b95cc036b978a526c77395c028320621765f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7229b95cc036b978a526c77395c028320621765f/comments", "author": null, "committer": null, "parents": [{"sha": "c9e4c7b5c4cd6a22bccadf61941aff97413e75fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9e4c7b5c4cd6a22bccadf61941aff97413e75fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9e4c7b5c4cd6a22bccadf61941aff97413e75fb"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "833ae3f2f95304112a4324e7cc57b8d52df61548", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7229b95cc036b978a526c77395c028320621765f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7229b95cc036b978a526c77395c028320621765f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=7229b95cc036b978a526c77395c028320621765f", "patch": "@@ -1,3 +1,8 @@\n+2006-09-01  Gary Benson  <gbenson@redhat.com>\n+\n+\t* java/net/InetAddress.java (getByName, getAllByName):\n+\tOnly perform security check when DNS lookups are required.\n+\n 2006-08-31  Keith Seitz  <keiths@redhat.com>\n \n \t* include/jvmti_md.h: New file."}, {"sha": "1c312940c83f707ab19114c3fe222f6d1bc26dbb", "filename": "libjava/java/net/InetAddress.java", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7229b95cc036b978a526c77395c028320621765f/libjava%2Fjava%2Fnet%2FInetAddress.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7229b95cc036b978a526c77395c028320621765f/libjava%2Fjava%2Fnet%2FInetAddress.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnet%2FInetAddress.java?ref=7229b95cc036b978a526c77395c028320621765f", "patch": "@@ -592,14 +592,10 @@ public static InetAddress getByName(String hostname)\n     throws UnknownHostException\n   {\n     // If null or the empty string is supplied, the loopback address\n-    // is returned. Note that this is permitted without a security check.\n+    // is returned.\n     if (hostname == null || hostname.length() == 0)\n       return loopback;\n \n-    SecurityManager s = System.getSecurityManager();\n-    if (s != null)\n-      s.checkConnect(hostname, -1);\n-\n     // Assume that the host string is an IP address\n     byte[] address = aton(hostname);\n     if (address != null)\n@@ -623,6 +619,11 @@ else if (address.length == 16)\n           throw new UnknownHostException (\"Address has invalid length\");\n       }\n \n+    // Perform security check before resolving\n+    SecurityManager s = System.getSecurityManager();\n+    if (s != null)\n+      s.checkConnect(hostname, -1);\n+\n     // Try to resolve the host by DNS\n     InetAddress result = new InetAddress(null, null);\n     lookup (hostname, result, false);\n@@ -650,14 +651,10 @@ public static InetAddress[] getAllByName(String hostname)\n     throws UnknownHostException\n   {\n     // If null or the empty string is supplied, the loopback address\n-    // is returned. Note that this is permitted without a security check.\n+    // is returned.\n     if (hostname == null || hostname.length() == 0)\n       return new InetAddress[] {loopback};\n \n-    SecurityManager s = System.getSecurityManager();\n-    if (s != null)\n-      s.checkConnect(hostname, -1);\n-\n     // Check if hostname is an IP address\n     byte[] address = aton (hostname);\n     if (address != null)\n@@ -667,6 +664,11 @@ public static InetAddress[] getAllByName(String hostname)\n \treturn result;\n       }\n \n+    // Perform security check before resolving\n+    SecurityManager s = System.getSecurityManager();\n+    if (s != null)\n+      s.checkConnect(hostname, -1);\n+\n     // Try to resolve the hostname by DNS\n     return lookup (hostname, null, true);\n   }"}]}