{"sha": "77395be632139b8dcba8b3491ed4f91350721e19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzczOTViZTYzMjEzOWI4ZGNiYThiMzQ5MWVkNGY5MTM1MDcyMWUxOQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-30T02:25:19Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-30T02:25:19Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r631", "tree": {"sha": "b219ba732f5f49d049481e53fe4bef8ce9c3b22b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b219ba732f5f49d049481e53fe4bef8ce9c3b22b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/77395be632139b8dcba8b3491ed4f91350721e19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77395be632139b8dcba8b3491ed4f91350721e19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77395be632139b8dcba8b3491ed4f91350721e19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77395be632139b8dcba8b3491ed4f91350721e19/comments", "author": null, "committer": null, "parents": [{"sha": "25f75d8a319356351f9133b6bf31167cfc248d30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/25f75d8a319356351f9133b6bf31167cfc248d30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/25f75d8a319356351f9133b6bf31167cfc248d30"}], "stats": {"total": 40, "additions": 37, "deletions": 3}, "files": [{"sha": "73d471543b07a6dd6377b63c3bc07cfa26efc80f", "filename": "gcc/ginclude/stddef.h", "status": "modified", "additions": 37, "deletions": 3, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/77395be632139b8dcba8b3491ed4f91350721e19/gcc%2Fginclude%2Fstddef.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/77395be632139b8dcba8b3491ed4f91350721e19/gcc%2Fginclude%2Fstddef.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fstddef.h?ref=77395be632139b8dcba8b3491ed4f91350721e19", "patch": "@@ -1,7 +1,14 @@\n #ifndef _STDDEF_H\n #ifndef _STDDEF_H_\n+\n+/* Any one of these symbols __need_* means that GNU libc\n+   wants us just to define one data type.  So don't define\n+   the symbols that indicate this file's entire job has been done.  */\n+#if (!defined(__need_wchar_t) && !defined(__need_size_t)\t\\\n+     && !defined(__need_ptrdiff_t) && !defined(__need_NULL))\n #define _STDDEF_H\n #define _STDDEF_H_\n+#endif\n \n #ifndef __sys_stdtypes_h\n /* This avoids lossage on Sunos but only if stdtypes.h comes first.\n@@ -32,7 +39,11 @@\n #ifndef __PTRDIFF_TYPE__\n #define __PTRDIFF_TYPE__ long int\n #endif\n+/* Define this type if we are doing the whole job,\n+   or if we want this type in particular.  */\n+#if defined (_STDDEF_H) || defined (__need_ptrdiff_t)\n typedef __PTRDIFF_TYPE__ ptrdiff_t;\n+#endif /* <stddef.h> or __need_ptrdiff_t.  */\n #endif /* _GCC_PTRDIFF_T */\n #endif /* ___int_ptrdiff_t_h */\n #endif /* _PTRDIFF_T_ */\n@@ -41,6 +52,9 @@ typedef __PTRDIFF_TYPE__ ptrdiff_t;\n #endif /* _T_PTRDIFF_ */\n #endif /* _PTRDIFF_T */\n \n+/* If this symbol has done its job, get rid of it.  */\n+#undef\t__need_ptrdiff_t\n+\n /* Unsigned type of `sizeof' something.  */\n \n #ifndef _SIZE_T\t/* in case <sys/types.h> has defined it. */\n@@ -62,7 +76,11 @@ typedef __PTRDIFF_TYPE__ ptrdiff_t;\n #ifndef __SIZE_TYPE__\n #define __SIZE_TYPE__ long unsigned int\n #endif\n+/* Define this type if we are doing the whole job,\n+   or if we want this type in particular.  */\n+#if defined (_STDDEF_H) || defined (__need_size_t)\n typedef __SIZE_TYPE__ size_t;\n+#endif /* <stddef.h> or __need_size_t.  */\n #endif /* _SIZET_ */\n #endif /* _GCC_SIZE_T */\n #endif /* ___int_size_t_h */\n@@ -71,8 +89,13 @@ typedef __SIZE_TYPE__ size_t;\n #endif /* _T_SIZE */\n #endif /* _T_SIZE_ */\n #endif /* _SIZE_T */\n+#undef\t__need_size_t\n \n-/* Data type for wide chars.  */\n+\n+/* Wide character type.\n+   Locale-writers should change this as necessary to\n+   be big enough to hold unique values not between 0 and 127,\n+   and not (wchar_t) -1, for each defined multibyte character.  */\n \n #ifndef _WCHAR_T\n #ifndef _T_WCHAR_\n@@ -91,25 +114,36 @@ typedef __SIZE_TYPE__ size_t;\n #ifndef __WCHAR_TYPE__\n #define __WCHAR_TYPE__ int\n #endif\n+/* Define this type if we are doing the whole job,\n+   or if we want this type in particular.  */\n+#if defined (_STDDEF_H) || defined (__need_wchar_t)\n typedef __WCHAR_TYPE__ wchar_t;\n+#endif /* <stddef.h> or __need_wchar_t.  */\n #endif\n #endif\n #endif\n #endif\n #endif\n #endif\n #endif\n+#undef\t__need_wchat_t\n \n #endif /* __sys_stdtypes_h */\n \n /* A null pointer constant.  */\n \n+#if defined (_STDDEF_H) || defined (__need_NULL)\n #undef NULL\t\t/* in case <stdio.h> has defined it. */\n #define NULL ((void *)0)\n+#endif\t/* NULL not defined and <stddef.h> or need NULL.  */\n+#undef\t__need_NULL\n+\n+#ifdef _STDDEF_H\n \n /* Offset of member MEMBER in a struct of type TYPE.  */\n \n #define offsetof(TYPE, MEMBER) ((size_t) &((TYPE *)0)->MEMBER)\n \n-#endif /* _STDDEF_H_ */\n-#endif /* _STDDEF_H */\n+#endif /* _STDDEF_H was defined this time */\n+#endif /* _STDDEF_H_ was not defined before */\n+#endif /* _STDDEF_H was not defined before */"}]}