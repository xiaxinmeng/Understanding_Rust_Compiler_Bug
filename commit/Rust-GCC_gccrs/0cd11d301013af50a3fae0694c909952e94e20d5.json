{"sha": "0cd11d301013af50a3fae0694c909952e94e20d5", "node_id": "C_kwDOANBUbNoAKDBjZDExZDMwMTAxM2FmNTBhM2ZhZTA2OTRjOTA5OTUyZTk0ZTIwZDU", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-10-14T09:34:02Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2022-10-26T00:59:45Z"}, "message": "RISC-V: Add h extension support\n\n`h` was the prefix of multi-letter extension name, but it become a\nextension in later RISC-V isa spec.\n\nFortunately we don't have any extension really defined is prefixed\nwith `h`, so we can just change that.\n\ngcc/ChangeLog:\n\n\t* common/config/riscv/riscv-common.cc (riscv_ext_version_table):\n\tAdd `h`.\n\t(riscv_supported_std_ext): Ditto.\n\t(multi_letter_subset_rank): Remove `h`.\n\t(riscv_subset_list::parse_std_ext): Handle `h` as single letter\n\textension.\n\t(riscv_subset_list::parse): Ditto.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/arch-18.c: New.\n\t* gcc.target/riscv/arch-5.c: Remove test for prefixed\n\twith `h`.\n\t* gcc.target/riscv/predef-23.c: New.", "tree": {"sha": "308a8f19b2c6ee58a6bc27e1ddeaeb4e58fc0ad9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/308a8f19b2c6ee58a6bc27e1ddeaeb4e58fc0ad9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cd11d301013af50a3fae0694c909952e94e20d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd11d301013af50a3fae0694c909952e94e20d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cd11d301013af50a3fae0694c909952e94e20d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cd11d301013af50a3fae0694c909952e94e20d5/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9f339d86f8e26e3a4b3ad169e1937a254d19cf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f339d86f8e26e3a4b3ad169e1937a254d19cf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9f339d86f8e26e3a4b3ad169e1937a254d19cf7"}], "stats": {"total": 93, "additions": 77, "deletions": 16}, "files": [{"sha": "d77020bb6db3bcb509bf75054bf81d8b53aa32e9", "filename": "gcc/common/config/riscv/riscv-common.cc", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd11d301013af50a3fae0694c909952e94e20d5/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd11d301013af50a3fae0694c909952e94e20d5/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Friscv%2Friscv-common.cc?ref=0cd11d301013af50a3fae0694c909952e94e20d5", "patch": "@@ -145,6 +145,8 @@ static const struct riscv_ext_version riscv_ext_version_table[] =\n   {\"c\", ISA_SPEC_CLASS_20190608, 2, 0},\n   {\"c\", ISA_SPEC_CLASS_2P2,      2, 0},\n \n+  {\"h\",       ISA_SPEC_CLASS_NONE, 1, 0},\n+\n   {\"v\",       ISA_SPEC_CLASS_NONE, 1, 0},\n \n   {\"zicsr\", ISA_SPEC_CLASS_20191213, 2, 0},\n@@ -361,21 +363,18 @@ multi_letter_subset_rank (const std::string &subset)\n   gcc_assert (subset.length () >= 2);\n   int high_order = -1;\n   int low_order = 0;\n-  /* The order between multi-char extensions: s -> h -> z -> x.  */\n+  /* The order between multi-char extensions: s -> z -> x.  */\n   char multiletter_class = subset[0];\n   switch (multiletter_class)\n     {\n     case 's':\n       high_order = 0;\n       break;\n-    case 'h':\n-      high_order = 1;\n-      break;\n     case 'z':\n-      high_order = 2;\n+      high_order = 1;\n       break;\n     case 'x':\n-      high_order = 3;\n+      high_order = 2;\n       break;\n     default:\n       gcc_unreachable ();\n@@ -671,7 +670,7 @@ riscv_subset_list::lookup (const char *subset, int major_version,\n static const char *\n riscv_supported_std_ext (void)\n {\n-  return \"mafdqlcbkjtpvn\";\n+  return \"mafdqlcbkjtpvnh\";\n }\n \n /* Parsing subset version.\n@@ -830,7 +829,7 @@ riscv_subset_list::parse_std_ext (const char *p)\n     {\n       char subset[2] = {0, 0};\n \n-      if (*p == 'x' || *p == 's' || *p == 'h' || *p == 'z')\n+      if (*p == 'x' || *p == 's' || *p == 'z')\n \tbreak;\n \n       if (*p == '_')\n@@ -955,7 +954,7 @@ riscv_subset_list::handle_combine_ext ()\n \n    Arguments:\n      `p`: Current parsing position.\n-     `ext_type`: What kind of extensions, 's', 'h', 'z' or 'x'.\n+     `ext_type`: What kind of extensions, 's', 'z' or 'x'.\n      `ext_type_str`: Full name for kind of extension.  */\n \n const char *\n@@ -1094,12 +1093,6 @@ riscv_subset_list::parse (const char *arch, location_t loc)\n   /* Parsing supervisor extension.  */\n   p = subset_list->parse_multiletter_ext (p, \"s\", \"supervisor extension\");\n \n-  if (p == NULL)\n-    goto fail;\n-\n-  /* Parsing hypervisor extension.  */\n-  p = subset_list->parse_multiletter_ext (p, \"h\", \"hypervisor extension\");\n-\n   if (p == NULL)\n     goto fail;\n "}, {"sha": "bb045360ce1c51e7184dd86f66d73e74f6f9b0a0", "filename": "gcc/testsuite/gcc.target/riscv/arch-18.c", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd11d301013af50a3fae0694c909952e94e20d5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd11d301013af50a3fae0694c909952e94e20d5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-18.c?ref=0cd11d301013af50a3fae0694c909952e94e20d5", "patch": "@@ -0,0 +1,5 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv32gcvh -mabi=ilp32 -mcmodel=medlow\" } */\n+int foo()\n+{\n+}"}, {"sha": "b945a643cc15c88f788c34d14df64dd71a04ad78", "filename": "gcc/testsuite/gcc.target/riscv/arch-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd11d301013af50a3fae0694c909952e94e20d5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd11d301013af50a3fae0694c909952e94e20d5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Farch-5.c?ref=0cd11d301013af50a3fae0694c909952e94e20d5", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-march=rv32isabc_hghi_zfoo_xbar -mabi=ilp32\" } */\n+/* { dg-options \"-march=rv32isabc_zfoo_xbar -mabi=ilp32\" } */\n int foo()\n {\n }"}, {"sha": "676023f2a7500226dd5dbac6ea24c3b869897a32", "filename": "gcc/testsuite/gcc.target/riscv/predef-23.c", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cd11d301013af50a3fae0694c909952e94e20d5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cd11d301013af50a3fae0694c909952e94e20d5/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Fpredef-23.c?ref=0cd11d301013af50a3fae0694c909952e94e20d5", "patch": "@@ -0,0 +1,63 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=rv64ih_zfhmin -mabi=lp64f -mcmodel=medlow -misa-spec=20191213\" } */\n+\n+int main () {\n+\n+#ifndef __riscv_arch_test\n+#error \"__riscv_arch_test\"\n+#endif\n+\n+#if __riscv_xlen != 64\n+#error \"__riscv_xlen\"\n+#endif\n+\n+#if !defined(__riscv_i)\n+#error \"__riscv_i\"\n+#endif\n+\n+#if defined(__riscv_c)\n+#error \"__riscv_c\"\n+#endif\n+\n+#if defined(__riscv_e)\n+#error \"__riscv_e\"\n+#endif\n+\n+#if defined(__riscv_a)\n+#error \"__riscv_a\"\n+#endif\n+\n+#if defined(__riscv_m)\n+#error \"__riscv_m\"\n+#endif\n+\n+#if !defined(__riscv_f)\n+#error \"__riscv_f\"\n+#endif\n+\n+#if defined(__riscv_d)\n+#error \"__riscv_d\"\n+#endif\n+\n+#if defined(__riscv_v)\n+#error \"__riscv_v\"\n+#endif\n+\n+#if defined(__riscv_zfh)\n+#error \"__riscv_zfh\"\n+#endif\n+\n+#if !defined(__riscv_zfhmin)\n+#error \"__riscv_zfhmin\"\n+#endif\n+\n+#if !defined(__riscv_zicsr)\n+#error \"__riscv_zicsr\"\n+#endif\n+\n+#if !defined(__riscv_h)\n+#error \"__riscv_h\"\n+#endif\n+\n+  return 0;\n+}"}]}