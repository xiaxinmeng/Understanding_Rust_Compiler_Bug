{"sha": "d759e96dc14e97cea6d4ded004e17446b3fd9c1c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc1OWU5NmRjMTRlOTdjZWE2ZDRkZWQwMDRlMTc0NDZiM2ZkOWMxYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-07-31T22:26:19Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2003-07-31T22:26:19Z"}, "message": "* dwarf2out.c (loc_descriptor_from_tree, case CONSTRUCTOR): Fix error.\n\nFrom-SVN: r70019", "tree": {"sha": "a8d287874b6951b1150ab44bea823aa7714c22bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8d287874b6951b1150ab44bea823aa7714c22bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d759e96dc14e97cea6d4ded004e17446b3fd9c1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d759e96dc14e97cea6d4ded004e17446b3fd9c1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d759e96dc14e97cea6d4ded004e17446b3fd9c1c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d759e96dc14e97cea6d4ded004e17446b3fd9c1c/comments", "author": null, "committer": null, "parents": [{"sha": "e64a227a8d4483025f0c21269798f33338e013e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e64a227a8d4483025f0c21269798f33338e013e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e64a227a8d4483025f0c21269798f33338e013e5"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "91336a12d2860cc93189e8dfb2eb98dd88e17c5a", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d759e96dc14e97cea6d4ded004e17446b3fd9c1c/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d759e96dc14e97cea6d4ded004e17446b3fd9c1c/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=d759e96dc14e97cea6d4ded004e17446b3fd9c1c", "patch": "@@ -8560,19 +8560,15 @@ loc_descriptor_from_tree (tree loc, int addressp)\n \n     case CONSTRUCTOR:\n       {\n-\t/* If this is already in memory and at a constant address, we can\n-\t   support it.  */\n-\trtx rtl = TREE_CST_RTL (loc);\n+\t/* Get an RTL for this, which will may have the effect of outputting\n+\t   it.  This may violates the principle of not having -g affect\n+\t   the generated code, but it's in the data segment and it's hard\n+\t   to see a case where it won't already have been output.  */\n+\trtx rtl = output_constant_def (loc, 0);\n \n #ifdef ASM_SIMPLIFY_DWARF_ADDR\n-\tif (rtl)\n-\t  rtl = ASM_SIMPLIFY_DWARF_ADDR (rtl);\n+\trtl = ASM_SIMPLIFY_DWARF_ADDR (rtl);\n #endif\n-\n-\tif (rtl == NULL_RTX ||  GET_CODE (rtl) != MEM\n-\t    || !CONSTANT_P (XEXP (rtl, 0)))\n-\t  return 0;\n-\n \tindirect_p = 1;\n \tret = mem_loc_descriptor (XEXP (rtl, 0), GET_MODE (rtl));\n \tbreak;"}]}