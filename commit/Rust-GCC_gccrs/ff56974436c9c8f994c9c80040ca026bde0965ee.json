{"sha": "ff56974436c9c8f994c9c80040ca026bde0965ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY1Njk3NDQzNmM5YzhmOTk0YzljODAwNDBjYTAyNmJkZTA5NjVlZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-11-06T13:45:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-11-06T13:45:54Z"}, "message": "tree-ssa-sccvn.c (class sccvn_dom_walker): Add destructor.\n\n2015-11-06  Richard Biener  <rguenther@suse.de>\n\n\t* tree-ssa-sccvn.c (class sccvn_dom_walker): Add destructor.\n\t* lra.c (init_reg_info): Truncate copy_vec instead of\n\tre-allocating a new one and leaking the old.\n\t* ipa-inline-analysis.c (estimate_function_body_sizes): Free\n\tbb_infos vec.\n\t* sched-deps.c (sched_deps_finish): Free the dn/dl pools.\n\t* postreload-gcse.c (free_mem): Free modify_mem_list and\n\tcanon_modify_mem_list.\n\nFrom-SVN: r229850", "tree": {"sha": "d738bba0e7750a3ba6762e5e246a67da6f3a6ddd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d738bba0e7750a3ba6762e5e246a67da6f3a6ddd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff56974436c9c8f994c9c80040ca026bde0965ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff56974436c9c8f994c9c80040ca026bde0965ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff56974436c9c8f994c9c80040ca026bde0965ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff56974436c9c8f994c9c80040ca026bde0965ee/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c047b6943474ab93147434cf9c61c168103e955f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c047b6943474ab93147434cf9c61c168103e955f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c047b6943474ab93147434cf9c61c168103e955f"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "f83d760354eb1869afdf7bbc367f18d461014342", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff56974436c9c8f994c9c80040ca026bde0965ee", "patch": "@@ -1,3 +1,14 @@\n+2015-11-06  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-ssa-sccvn.c (class sccvn_dom_walker): Add destructor.\n+\t* lra.c (init_reg_info): Truncate copy_vec instead of\n+\tre-allocating a new one and leaking the old.\n+\t* ipa-inline-analysis.c (estimate_function_body_sizes): Free\n+\tbb_infos vec.\n+\t* sched-deps.c (sched_deps_finish): Free the dn/dl pools.\n+\t* postreload-gcse.c (free_mem): Free modify_mem_list and\n+\tcanon_modify_mem_list.\n+\n 2015-11-06  Ilya Enkovich  <enkovich.gnu@gmail.com>\n \n \tPR tree-optimization/68145"}, {"sha": "c07b0da9007ece1c778862d9f895afe02bc67ebf", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=ff56974436c9c8f994c9c80040ca026bde0965ee", "patch": "@@ -2853,6 +2853,7 @@ estimate_function_body_sizes (struct cgraph_node *node, bool early)\n   inline_summaries->get (node)->self_time = time;\n   inline_summaries->get (node)->self_size = size;\n   nonconstant_names.release ();\n+  fbi.bb_infos.release ();\n   if (opt_for_fn (node->decl, optimize))\n     {\n       if (!early)"}, {"sha": "0995c54aee446a49adbd67db1ec4c4beabb6788b", "filename": "gcc/lra.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Flra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Flra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra.c?ref=ff56974436c9c8f994c9c80040ca026bde0965ee", "patch": "@@ -1293,7 +1293,7 @@ init_reg_info (void)\n   lra_reg_info = XNEWVEC (struct lra_reg, reg_info_size);\n   for (i = 0; i < reg_info_size; i++)\n     initialize_lra_reg_info_element (i);\n-  copy_vec.create (100);\n+  copy_vec.truncate (0);\n }\n \n "}, {"sha": "f8a770e25f2872d60c58cafb2622f49a3edc67f1", "filename": "gcc/postreload-gcse.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Fpostreload-gcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Fpostreload-gcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload-gcse.c?ref=ff56974436c9c8f994c9c80040ca026bde0965ee", "patch": "@@ -348,6 +348,8 @@ free_mem (void)\n   BITMAP_FREE (blocks_with_calls);\n   BITMAP_FREE (modify_mem_list_set);\n   free (reg_avail_info);\n+  free (modify_mem_list);\n+  free (canon_modify_mem_list);\n }\n \f\n "}, {"sha": "4f64fa9d78df060a624022101ee2fa547530ae5a", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=ff56974436c9c8f994c9c80040ca026bde0965ee", "patch": "@@ -4092,9 +4092,9 @@ void\n sched_deps_finish (void)\n {\n   gcc_assert (deps_pools_are_empty_p ());\n-  dn_pool->release_if_empty ();\n+  delete dn_pool;\n+  delete dl_pool;\n   dn_pool = NULL;\n-  dl_pool->release_if_empty ();\n   dl_pool = NULL;\n \n   h_d_i_d.release ();"}, {"sha": "c5f5b2760d0266b5a03dcf56b9ed21a9ec8db088", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff56974436c9c8f994c9c80040ca026bde0965ee/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=ff56974436c9c8f994c9c80040ca026bde0965ee", "patch": "@@ -4154,6 +4154,7 @@ class sccvn_dom_walker : public dom_walker\n public:\n   sccvn_dom_walker ()\n     : dom_walker (CDI_DOMINATORS), fail (false), cond_stack (vNULL) {}\n+  ~sccvn_dom_walker ();\n \n   virtual void before_dom_children (basic_block);\n   virtual void after_dom_children (basic_block);\n@@ -4168,6 +4169,11 @@ class sccvn_dom_walker : public dom_walker\n     cond_stack;\n };\n \n+sccvn_dom_walker::~sccvn_dom_walker ()\n+{\n+  cond_stack.release ();\n+}\n+\n /* Record a temporary condition for the BB and its dominated blocks.  */\n \n void"}]}