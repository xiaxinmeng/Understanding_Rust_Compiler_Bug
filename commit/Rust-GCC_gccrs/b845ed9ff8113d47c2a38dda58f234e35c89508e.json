{"sha": "b845ed9ff8113d47c2a38dda58f234e35c89508e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg0NWVkOWZmODExM2Q0N2MyYTM4ZGRhNThmMjM0ZTM1Yzg5NTA4ZQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "mckinlay@redhat.com", "date": "2004-07-15T00:58:41Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2004-07-15T00:58:41Z"}, "message": "re PR libgcj/16204 (File I/O fails on files >= 2^31 bytes (2GB))\n\n2004-07-14  Bryce McKinlay  <mckinlay@redhat.com>\n\n\tPR libgcj/16204\n\t* Makefile.am (AM_CXXFLAGS): Add -D_FILE_OFFSET_BITS=64 to enable\n\tlarge file support.\n\t* Makefile.in: Rebuilt.\n\t* testsuite/libjava.lang/LargeFile.java: New test case.\n\t* testsuite/libjava.lang/LargeFile.out: New file.\n\nFrom-SVN: r84733", "tree": {"sha": "f575402da639d9a031536021ae9a3b419a674da1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f575402da639d9a031536021ae9a3b419a674da1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b845ed9ff8113d47c2a38dda58f234e35c89508e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b845ed9ff8113d47c2a38dda58f234e35c89508e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b845ed9ff8113d47c2a38dda58f234e35c89508e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b845ed9ff8113d47c2a38dda58f234e35c89508e/comments", "author": null, "committer": null, "parents": [{"sha": "018479fbada08df57b9978ec7f01c06d81e08554", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018479fbada08df57b9978ec7f01c06d81e08554", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018479fbada08df57b9978ec7f01c06d81e08554"}], "stats": {"total": 51, "additions": 50, "deletions": 1}, "files": [{"sha": "7b36105f32b1c528ccc21915189033a8a25fd1a1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b845ed9ff8113d47c2a38dda58f234e35c89508e", "patch": "@@ -1,3 +1,12 @@\n+2004-07-14  Bryce McKinlay  <mckinlay@redhat.com>\n+\n+\tPR libgcj/16204\n+\t* Makefile.am (AM_CXXFLAGS): Add -D_FILE_OFFSET_BITS=64 to enable\n+\tlarge file support.\n+\t* Makefile.in: Rebuilt.\n+\t* testsuite/libjava.lang/LargeFile.java: New test case.\n+\t* testsuite/libjava.lang/LargeFile.out: New file.\n+\n 2004-07-14  Jerry Quinn  <jlquinn@optonline.net>\n \n \t* java/beans/EventHandler.java: Remove debugging statements."}, {"sha": "7e5f6af001a905bd56ed33badfa576b81120dc8a", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=b845ed9ff8113d47c2a38dda58f234e35c89508e", "patch": "@@ -111,6 +111,8 @@ AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions $(THREADCXXFLAGS) \\\n \t-fdollars-in-identifiers \\\n ## Detect bugs in the verifier implementation, and maybe other places.\n \t-Wswitch-enum \\\n+## Some systems, including Linux, need this to enable > 2GB file support.\n+\t-D_FILE_OFFSET_BITS=64 \\\n \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \\\n \t-DPREFIX=\"\\\"$(prefix)\\\"\" -DLIBDIR=\"\\\"$(libdir)\\\"\" \\\n \t-DBOOT_CLASS_PATH=\"\\\"$(jardir)/$(jar_DATA)\\\"\" \\"}, {"sha": "f6da90894a94d43be59c64322994212fa23625c1", "filename": "libjava/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=b845ed9ff8113d47c2a38dda58f234e35c89508e", "patch": "@@ -215,6 +215,7 @@ WARNINGS = -Wextra -Wall\n AM_CXXFLAGS = -fno-rtti -fnon-call-exceptions $(THREADCXXFLAGS) \\\n \t-fdollars-in-identifiers \\\n \t-Wswitch-enum \\\n+\t-D_FILE_OFFSET_BITS=64 \\\n \t@LIBGCJ_CXXFLAGS@ @X_CFLAGS@ $(WARNINGS) -D_GNU_SOURCE \\\n \t-DPREFIX=\"\\\"$(prefix)\\\"\" -DLIBDIR=\"\\\"$(libdir)\\\"\" \\\n \t-DBOOT_CLASS_PATH=\"\\\"$(jardir)/$(jar_DATA)\\\"\" \\\n@@ -3076,7 +3077,7 @@ libgcj-test.spec.in libgcj.pc.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\"}, {"sha": "1bb8aec8c2674b557d9297f172276b9ed3d69462", "filename": "libjava/testsuite/libjava.lang/LargeFile.java", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2Ftestsuite%2Flibjava.lang%2FLargeFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2Ftestsuite%2Flibjava.lang%2FLargeFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FLargeFile.java?ref=b845ed9ff8113d47c2a38dda58f234e35c89508e", "patch": "@@ -0,0 +1,36 @@\n+/* Test to ensure files >= 2^31 bytes are supported. */\n+\n+import java.io.*;\n+\n+public class LargeFile\n+{\n+  public static void main(String[] args) throws IOException\n+  {\n+    File file = new File(\"LargeFile.tmp\");\n+\n+    try\n+      {\n+\tRandomAccessFile rfile = new RandomAccessFile(file, \"rw\");\n+\n+\tlong pos = (long) Math.pow(2, 31);\n+\n+\trfile.seek(pos);\n+\trfile.write('O');\n+\trfile.write('K');\n+\trfile.close();\n+\n+\t// Re-open, read byte back using FileInputStream and clean up.\n+\n+\tFileInputStream fis = new FileInputStream(file);\n+\tfis.skip(pos);\n+\tSystem.out.print((char) fis.read());\n+\tSystem.out.println((char) fis.read());\n+\tfis.close();\n+      }\n+    finally\n+      {\n+        if (file.exists())\n+\t  file.delete();\n+      }\n+  }\n+}"}, {"sha": "d86bac9de59abcc26bc7956c1e842237c7581859", "filename": "libjava/testsuite/libjava.lang/LargeFile.out", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2Ftestsuite%2Flibjava.lang%2FLargeFile.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b845ed9ff8113d47c2a38dda58f234e35c89508e/libjava%2Ftestsuite%2Flibjava.lang%2FLargeFile.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2FLargeFile.out?ref=b845ed9ff8113d47c2a38dda58f234e35c89508e", "patch": "@@ -0,0 +1 @@\n+OK"}]}