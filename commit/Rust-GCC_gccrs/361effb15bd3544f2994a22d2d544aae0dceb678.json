{"sha": "361effb15bd3544f2994a22d2d544aae0dceb678", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYxZWZmYjE1YmQzNTQ0ZjI5OTRhMjJkMmQ1NDRhYWUwZGNlYjY3OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-15T09:37:59Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-15T09:37:59Z"}, "message": "[multiple changes]\n\n2009-04-15  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_prag.adb: Minor reformatting.\n\n\t* sem_type.adb: Minor reformatting\n\n2009-04-15  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_ch6.adb (Analyze_Abstract_Subprogram_Declaration): Add missing\n\tsupport to check eliminated subprograms.\n\n\t* sem_elim.ads (Eliminate_Error_Msg): Update documentation.\n\n\t* sem_elim.adb (Set_Eliminated): Add support for elimination of\n\tdispatching subprograms.\n\n\t* exp_disp.adb (Make_DT): Minor code cleanup when freezing primitive\n\toperations. Initialize with \"null\" the slots of eliminated dispaching\n\tprimitives.\n\t(Write_DT): Add output for eliminated primitives.\n\n\t* sem_disp.adb (Check_Dispatching_Call): Check eliminated primitives.\n\nFrom-SVN: r146093", "tree": {"sha": "38bc90b9dd8f35bf9fd91bf6f030403ca57a17c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38bc90b9dd8f35bf9fd91bf6f030403ca57a17c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/361effb15bd3544f2994a22d2d544aae0dceb678", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/361effb15bd3544f2994a22d2d544aae0dceb678", "html_url": "https://github.com/Rust-GCC/gccrs/commit/361effb15bd3544f2994a22d2d544aae0dceb678", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/361effb15bd3544f2994a22d2d544aae0dceb678/comments", "author": null, "committer": null, "parents": [{"sha": "5afaa917dac97e43afb9f2b6a590b30973d85e21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5afaa917dac97e43afb9f2b6a590b30973d85e21", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5afaa917dac97e43afb9f2b6a590b30973d85e21"}], "stats": {"total": 96, "additions": 71, "deletions": 25}, "files": [{"sha": "0d4a01e24eb6a3520400b98c232708cb90d3cc81", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=361effb15bd3544f2994a22d2d544aae0dceb678", "patch": "@@ -1,3 +1,26 @@\n+2009-04-15  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_prag.adb: Minor reformatting.\n+\n+\t* sem_type.adb: Minor reformatting\n+\n+2009-04-15  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_ch6.adb (Analyze_Abstract_Subprogram_Declaration): Add missing\n+\tsupport to check eliminated subprograms.\n+\n+\t* sem_elim.ads (Eliminate_Error_Msg): Update documentation.\n+\n+\t* sem_elim.adb (Set_Eliminated): Add support for elimination of\n+\tdispatching subprograms.\n+\n+\t* exp_disp.adb (Make_DT): Minor code cleanup when freezing primitive\n+\toperations. Initialize with \"null\" the slots of eliminated dispaching\n+\tprimitives.\n+\t(Write_DT): Add output for eliminated primitives.\n+\n+\t* sem_disp.adb (Check_Dispatching_Call): Check eliminated primitives.\n+\n 2009-04-15  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch8.adb (Use_One_Type): If both clauses appear on the same unit,"}, {"sha": "72131c4f68baea36a99abca0fff3ca2d5fb30903", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=361effb15bd3544f2994a22d2d544aae0dceb678", "patch": "@@ -3941,27 +3941,29 @@ package body Exp_Disp is\n       then\n          declare\n             Save      : constant Boolean := Freezing_Library_Level_Tagged_Type;\n+            Prim      : Entity_Id;\n             Prim_Elmt : Elmt_Id;\n             Frnodes   : List_Id;\n \n          begin\n             Freezing_Library_Level_Tagged_Type := True;\n+\n             Prim_Elmt := First_Elmt (Primitive_Operations (Typ));\n             while Present (Prim_Elmt) loop\n-               Frnodes := Freeze_Entity (Node (Prim_Elmt), Loc);\n+               Prim    := Node (Prim_Elmt);\n+               Frnodes := Freeze_Entity (Prim, Loc);\n \n                declare\n-                  Subp : constant Entity_Id := Node (Prim_Elmt);\n                   F : Entity_Id;\n \n                begin\n-                  F := First_Formal (Subp);\n+                  F := First_Formal (Prim);\n                   while Present (F) loop\n-                     Check_Premature_Freezing (Subp, Etype (F));\n+                     Check_Premature_Freezing (Prim, Etype (F));\n                      Next_Formal (F);\n                   end loop;\n \n-                  Check_Premature_Freezing (Subp, Etype (Subp));\n+                  Check_Premature_Freezing (Prim, Etype (Prim));\n                end;\n \n                if Present (Frnodes) then\n@@ -3970,6 +3972,7 @@ package body Exp_Disp is\n \n                Next_Elmt (Prim_Elmt);\n             end loop;\n+\n             Freezing_Library_Level_Tagged_Type := Save;\n          end;\n       end if;\n@@ -5145,6 +5148,7 @@ package body Exp_Disp is\n                   if Is_Imported (Prim)\n                     or else Present (Interface_Alias (Prim))\n                     or else Is_Predefined_Dispatching_Operation (Prim)\n+                    or else Is_Eliminated (Prim)\n                   then\n                      null;\n \n@@ -7180,6 +7184,10 @@ package body Exp_Disp is\n             Write_Str (\" is null;\");\n          end if;\n \n+         if Is_Eliminated (Ultimate_Alias (Prim)) then\n+            Write_Str (\" (eliminated)\");\n+         end if;\n+\n          Write_Eol;\n \n          Next_Elmt (Elmt);"}, {"sha": "c206c4b3ebae231c4656699e349cdf5456d6eaa0", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=361effb15bd3544f2994a22d2d544aae0dceb678", "patch": "@@ -367,6 +367,7 @@ package body Sem_Ch6 is\n       end if;\n \n       Generate_Reference_To_Formals (Designator);\n+      Check_Eliminated (Designator);\n    end Analyze_Abstract_Subprogram_Declaration;\n \n    ----------------------------------------"}, {"sha": "96e6bc1fb34d2606fe88d066ad002dd544800e7e", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=361effb15bd3544f2994a22d2d544aae0dceb678", "patch": "@@ -42,6 +42,7 @@ with Rident;   use Rident;\n with Sem;      use Sem;\n with Sem_Aux;  use Sem_Aux;\n with Sem_Ch6;  use Sem_Ch6;\n+with Sem_Elim; use Sem_Elim;\n with Sem_Eval; use Sem_Eval;\n with Sem_Type; use Sem_Type;\n with Sem_Util; use Sem_Util;\n@@ -483,6 +484,10 @@ package body Sem_Disp is\n             Set_Controlling_Argument (N, Control);\n             Check_Restriction (No_Dispatching_Calls, N);\n \n+            if Is_Eliminated (Ultimate_Alias (Subp_Entity)) then\n+               Eliminate_Error_Msg (N, Ultimate_Alias (Subp_Entity));\n+            end if;\n+\n          --  If there is a statically tagged actual and a tag-indeterminate\n          --  call to a function of the ancestor (such as that provided by a\n          --  default), then treat this as a dispatching call and propagate"}, {"sha": "bdf6d57e0131e342040c56b1d1d12d90fe1f4fd7", "filename": "gcc/ada/sem_elim.adb", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_elim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_elim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.adb?ref=361effb15bd3544f2994a22d2d544aae0dceb678", "patch": "@@ -269,7 +269,7 @@ package body Sem_Elim is\n \n       Elmt := Elim_Hash_Table.Get (Chars (E));\n       while Elmt /= null loop\n-         declare\n+         Check_Homonyms : declare\n             procedure Set_Eliminated;\n             --  Set current subprogram entity as eliminated\n \n@@ -279,16 +279,26 @@ package body Sem_Elim is\n \n             procedure Set_Eliminated is\n             begin\n-               --  Never try to eliminate dispatching operation, since we\n-               --  can't properly process the eliminated result. This could\n-               --  be fixed, but is not worth it.\n+               if Is_Dispatching_Operation (E) then\n \n-               if not Is_Dispatching_Operation (E) then\n-                  Set_Is_Eliminated (E);\n-                  Elim_Entities.Append ((Prag => Elmt.Prag, Subp => E));\n+                  --  If an overriding dispatching primitive is eliminated then\n+                  --  its parent must have been eliminated\n+\n+                  if Is_Overriding_Operation (E)\n+                    and then not Is_Eliminated (Overridden_Operation (E))\n+                  then\n+                     Error_Msg_Name_1 := Chars (E);\n+                     Error_Msg_N (\"cannot eliminate subprogram %\", E);\n+                     return;\n+                  end if;\n                end if;\n+\n+               Set_Is_Eliminated (E);\n+               Elim_Entities.Append ((Prag => Elmt.Prag, Subp => E));\n             end Set_Eliminated;\n \n+         --  Start of processing for Check_Homonyms\n+\n          begin\n             --  First we check that the name of the entity matches\n \n@@ -643,7 +653,7 @@ package body Sem_Elim is\n                Set_Eliminated;\n                return;\n             end if;\n-         end;\n+         end Check_Homonyms;\n \n       <<Continue>>\n          Elmt := Elmt.Homonym;"}, {"sha": "53f0de0c9c0fe9486053cab7ec447eaf6481e8c9", "filename": "gcc/ada/sem_elim.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_elim.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_elim.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elim.ads?ref=361effb15bd3544f2994a22d2d544aae0dceb678", "patch": "@@ -53,8 +53,8 @@ package Sem_Elim is\n    --  flag on the given entity.\n \n    procedure Eliminate_Error_Msg (N : Node_Id; E : Entity_Id);\n-   --  Called by the back end on encountering a call to an eliminated\n-   --  subprogram. N is the node for the call, and E is the entity of\n-   --  the subprogram being eliminated.\n+   --  Called by the front-end and back-end on encountering a call to an\n+   --  eliminated subprogram. N is the node for the call, and E is the\n+   --  entity of the subprogram being eliminated.\n \n end Sem_Elim;"}, {"sha": "e8cd0a04b649a68df34450cd45512de20d9978c2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=361effb15bd3544f2994a22d2d544aae0dceb678", "patch": "@@ -9226,7 +9226,7 @@ package body Sem_Prag is\n             --  Cases where we must follow a declaration\n \n             else\n-               if Nkind (Decl) not in N_Declaration\n+               if         Nkind (Decl) not in N_Declaration\n                  and then Nkind (Decl) not in N_Later_Decl_Item\n                  and then Nkind (Decl) not in N_Generic_Declaration\n                  and then Nkind (Decl) not in N_Renaming_Declaration"}, {"sha": "bc9dbdbc95306be1baf7c7b605c63f9b1443de67", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/361effb15bd3544f2994a22d2d544aae0dceb678/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=361effb15bd3544f2994a22d2d544aae0dceb678", "patch": "@@ -1425,30 +1425,29 @@ package body Sem_Type is\n                elsif Is_Numeric_Type (Etype (F1))\n                  and then Has_Abstract_Interpretation (Act1)\n                then\n-\n-                  --  Current interpretation is not the right one because\n-                  --  it expects a numeric operand. Examine all the other\n-                  --  ones.\n+                  --  Current interpretation is not the right one because it\n+                  --  expects a numeric operand. Examine all the other ones.\n \n                   declare\n-                     I : Interp_Index;\n+                     I  : Interp_Index;\n                      It : Interp;\n \n                   begin\n                      Get_First_Interp (N, I, It);\n-\n                      while Present (It.Typ) loop\n                         if\n                           not Is_Numeric_Type (Etype (First_Formal (It.Nam)))\n                         then\n                            if No (Act2)\n                              or else not Has_Abstract_Interpretation (Act2)\n-                             or else not Is_Numeric_Type\n-                               (Etype (Next_Formal (First_Formal (It.Nam))))\n+                             or else not\n+                               Is_Numeric_Type\n+                                 (Etype (Next_Formal (First_Formal (It.Nam))))\n                            then\n                               return It;\n                            end if;\n                         end if;\n+\n                         Get_Next_Interp (I, It);\n                      end loop;\n "}]}