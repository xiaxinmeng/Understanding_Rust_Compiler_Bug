{"sha": "822a3443ec9bf4bc2d8cc424d837cb89ce8504b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODIyYTM0NDNlYzliZjRiYzJkOGNjNDI0ZDgzN2NiODljZTg1MDRiNA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1998-07-01T04:13:55Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1998-07-01T04:13:55Z"}, "message": "expr.c (expand_assignment, [...]): Use convert_memory_address instead of convert_to_mode when possible.\n\n        * expr.c (expand_assignment, store_constructor, expand_expr): Use\n        convert_memory_address instead of convert_to_mode when possible.\n\nFrom-SVN: r20865", "tree": {"sha": "e266e4dd73353d29ed398e6bbcc09ff07d9fc816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e266e4dd73353d29ed398e6bbcc09ff07d9fc816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4/comments", "author": null, "committer": null, "parents": [{"sha": "c714f03d304611def7fd70e3b623e1969d8ac947", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c714f03d304611def7fd70e3b623e1969d8ac947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c714f03d304611def7fd70e3b623e1969d8ac947"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "7fba7a8d1f99e09fc5c7a700ba18b3416d6ee503", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=822a3443ec9bf4bc2d8cc424d837cb89ce8504b4", "patch": "@@ -1,3 +1,8 @@\n+Wed Jul  1 04:10:35 1998  Richard Henderson  <rth@cygnus.com>\n+\n+\t* expr.c (expand_assignment, store_constructor, expand_expr): Use\n+\tconvert_memory_address instead of convert_to_mode when possible.\n+\n Wed Jul  1 03:48:00 1998  Richard Henderson  <rth@cygnus.com>\n \n \t* alpha.c (alpha_initialize_trampoline): Take arguments describing"}, {"sha": "e01f08a69c8ef4b8634b6f1ae8038877523670c8", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/822a3443ec9bf4bc2d8cc424d837cb89ce8504b4/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=822a3443ec9bf4bc2d8cc424d837cb89ce8504b4", "patch": "@@ -2938,7 +2938,7 @@ expand_assignment (to, from, want_value, suggest_reg)\n \t  if (GET_MODE (offset_rtx) != ptr_mode)\n \t    {\n #ifdef POINTERS_EXTEND_UNSIGNED\n-\t      offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 1);\n+\t      offset_rtx = convert_memory_address (ptr_mode, offset_rtx);\n #else\n \t      offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n #endif\n@@ -3737,7 +3737,7 @@ store_constructor (exp, target, cleared)\n               if (GET_MODE (offset_rtx) != ptr_mode)\n                 {\n #ifdef POINTERS_EXTEND_UNSIGNED\n-                  offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 1);\n+                  offset_rtx = convert_memory_address (ptr_mode, offset_rtx);\n #else\n                   offset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n #endif\n@@ -5974,7 +5974,7 @@ expand_expr (exp, target, tmode, modifier)\n \t    if (GET_MODE (offset_rtx) != ptr_mode)\n \t      {\n #ifdef POINTERS_EXTEND_UNSIGNED\n-\t\toffset_rtx = convert_to_mode (ptr_mode, offset_rtx, 1);\n+\t\toffset_rtx = convert_memory_address (ptr_mode, offset_rtx);\n #else\n \t\toffset_rtx = convert_to_mode (ptr_mode, offset_rtx, 0);\n #endif"}]}