{"sha": "5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWIzMWJiYWJlOWExYmYyMmFlNGQ2YzNjZDI2ZmQ4NzYwMDRmN2VhOA==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2008-11-03T20:01:11Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2008-11-03T20:01:11Z"}, "message": "re PR rtl-optimization/37782 (Stage2 ada compiler miscompiled)\n\n2008-11-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR rtl-opt/37782\n        * loop-doloop.c (doloop_modify): Add from_mode argument that says what\n        mode count is in.\n        (doloop_optimize): Update call to doloop_modify.\n\nFrom-SVN: r141558", "tree": {"sha": "c8ab09c6904c340aa47a4de712cf27d753b2ada0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8ab09c6904c340aa47a4de712cf27d753b2ada0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8/comments", "author": null, "committer": null, "parents": [{"sha": "2d8d91a8404e26f124d16cc91ff08291bd700c1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d8d91a8404e26f124d16cc91ff08291bd700c1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d8d91a8404e26f124d16cc91ff08291bd700c1b"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "caf616a4784f961221cee11a5d206546289be208", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8", "patch": "@@ -1,3 +1,10 @@\n+2008-11-03  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR rtl-opt/37782\n+\t* loop-doloop.c (doloop_modify): Add from_mode argument that says what\n+\tmode count is in.\n+\t(doloop_optimize): Update call to doloop_modify.\n+\n 2008-11-03  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* tree-sra.c (bitfield_overlaps_p): Fix oversight."}, {"sha": "1f5856f581b24da02f4ffb281e19393c3ddcdecb", "filename": "gcc/loop-doloop.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8/gcc%2Floop-doloop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8/gcc%2Floop-doloop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Floop-doloop.c?ref=5b31bbabe9a1bf22ae4d6c3cd26fd876004f7ea8", "patch": "@@ -335,11 +335,12 @@ add_test (rtx cond, edge *e, basic_block dest)\n    end of the loop.  CONDITION is the condition separated from the\n    DOLOOP_SEQ.  COUNT is the number of iterations of the LOOP.\n    ZERO_EXTEND_P says to zero extend COUNT after the increment of it to\n-   word_mode.  */\n+   word_mode from FROM_MODE.  */\n \n static void\n doloop_modify (struct loop *loop, struct niter_desc *desc,\n-\t       rtx doloop_seq, rtx condition, rtx count, bool zero_extend_p)\n+\t       rtx doloop_seq, rtx condition, rtx count,\n+\t       bool zero_extend_p, enum machine_mode from_mode)\n {\n   rtx counter_reg;\n   rtx tmp, noloop = NULL_RTX;\n@@ -413,11 +414,11 @@ doloop_modify (struct loop *loop, struct niter_desc *desc,\n     }\n \n   if (increment_count)\n-    count = simplify_gen_binary (PLUS, mode, count, const1_rtx);\n+    count = simplify_gen_binary (PLUS, from_mode, count, const1_rtx);\n \n   if (zero_extend_p)\n     count = simplify_gen_unary (ZERO_EXTEND, word_mode,\n-\t\t\t\tcount, mode);\n+\t\t\t\tcount, from_mode);\n \n   /* Insert initialization of the count register into the loop header.  */\n   start_sequence ();\n@@ -672,7 +673,8 @@ doloop_optimize (struct loop *loop)\n       return false;\n     }\n \n-  doloop_modify (loop, desc, doloop_seq, condition, count, zero_extend_p);\n+  doloop_modify (loop, desc, doloop_seq, condition, count,\n+\t\t zero_extend_p, mode);\n   return true;\n }\n "}]}