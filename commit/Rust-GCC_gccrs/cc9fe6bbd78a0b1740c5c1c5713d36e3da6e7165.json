{"sha": "cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M5ZmU2YmJkNzhhMGIxNzQwYzVjMWM1NzEzZDM2ZTNkYTZlNzE2NQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2017-10-17T17:35:54Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2017-10-17T17:35:54Z"}, "message": "target.h (enum vect_cost_for_stmt): Add vec_gather_load and vec_scatter_store\n\n\n\t* target.h (enum vect_cost_for_stmt): Add vec_gather_load and\n\tvec_scatter_store\n\t* tree-vect-stmts.c (record_stmt_cost): Make difference between normal\n\tand scatter/gather ops.\n\n\t* aarch64/aarch64.c (aarch64_builtin_vectorization_cost): Add\n\tvec_gather_load and vec_scatter_store.\n\t* arm/arm.c (arm_builtin_vectorization_cost): Likewise.\n\t* powerpcspe/powerpcspe.c (rs6000_builtin_vectorization_cost): Likewise.\n\t* rs6000/rs6000.c (rs6000_builtin_vectorization_cost): Likewise.\n\t* s390/s390.c (s390_builtin_vectorization_cost): Likewise.\n\t* spu/spu.c (spu_builtin_vectorization_cost): Likewise.\n\nFrom-SVN: r253823", "tree": {"sha": "e78cd4c746e37e3704a970e517a94b3df6a8bdee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e78cd4c746e37e3704a970e517a94b3df6a8bdee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/comments", "author": null, "committer": null, "parents": [{"sha": "7061821d4aa300b600f689cadb994d7658600414", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7061821d4aa300b600f689cadb994d7658600414", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7061821d4aa300b600f689cadb994d7658600414"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "6b9a62eac2f27b814326b408959ca975e58a4c5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -1,3 +1,18 @@\n+2017-10-17  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* target.h (enum vect_cost_for_stmt): Add vec_gather_load and\n+\tvec_scatter_store\n+\t* tree-vect-stmts.c (record_stmt_cost): Make difference between normal\n+\tand scatter/gather ops.\n+\n+\t* aarch64/aarch64.c (aarch64_builtin_vectorization_cost): Add\n+\tvec_gather_load and vec_scatter_store.\n+\t* arm/arm.c (arm_builtin_vectorization_cost): Likewise.\n+\t* powerpcspe/powerpcspe.c (rs6000_builtin_vectorization_cost): Likewise.\n+\t* rs6000/rs6000.c (rs6000_builtin_vectorization_cost): Likewise.\n+\t* s390/s390.c (s390_builtin_vectorization_cost): Likewise.\n+\t* spu/spu.c (spu_builtin_vectorization_cost): Likewise.\n+\n 2017-10-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* reg-stack.c (compare_for_stack_reg): Add bool argument."}, {"sha": "ed30b8c5858a746415e1f666a2e7b1bfda623e5d", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -8559,9 +8559,11 @@ aarch64_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n \treturn costs->scalar_to_vec_cost;\n \n       case unaligned_load:\n+      case vector_gather_load:\n \treturn costs->vec_unalign_load_cost;\n \n       case unaligned_store:\n+      case vector_scatter_store:\n \treturn costs->vec_unalign_store_cost;\n \n       case cond_branch_taken:"}, {"sha": "013e7d91df001549c86b6d1a986590e9f5428f41", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -11253,9 +11253,11 @@ arm_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n         return current_tune->vec_costs->scalar_to_vec_cost;\n \n       case unaligned_load:\n+      case vector_gather_load:\n         return current_tune->vec_costs->vec_unalign_load_cost;\n \n       case unaligned_store:\n+      case vector_scatter_store:\n         return current_tune->vec_costs->vec_unalign_store_cost;\n \n       case cond_branch_taken:"}, {"sha": "0f90e95f1e0ae38914c5c44132b20152f130fc1e", "filename": "gcc/config/powerpcspe/powerpcspe.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpowerpcspe%2Fpowerpcspe.c?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -5855,6 +5855,7 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n         return 3;\n \n       case unaligned_load:\n+      case vector_gather_load:\n \tif (TARGET_P9_VECTOR)\n \t  return 3;\n \n@@ -5896,6 +5897,7 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n         return 2;\n \n       case unaligned_store:\n+      case vector_scatter_store:\n \tif (TARGET_EFFICIENT_UNALIGNED_VSX)\n \t  return 1;\n "}, {"sha": "4837e14a0e62d7408cf515e80051ebba610df244", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -5419,6 +5419,7 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n         return 3;\n \n       case unaligned_load:\n+      case vector_gather_load:\n \tif (TARGET_EFFICIENT_UNALIGNED_VSX)\n \t  return 1;\n \n@@ -5457,6 +5458,7 @@ rs6000_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n         return 2;\n \n       case unaligned_store:\n+      case vector_scatter_store:\n \tif (TARGET_EFFICIENT_UNALIGNED_VSX)\n \t  return 1;\n "}, {"sha": "6e3ac3b7d0f96dac56df0f8fa7573cdcc1b87ea3", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -3717,6 +3717,8 @@ s390_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n       case vector_stmt:\n       case vector_load:\n       case vector_store:\n+      case vector_gather_load:\n+      case vector_scatter_store:\n       case vec_to_scalar:\n       case scalar_to_vec:\n       case cond_branch_not_taken:"}, {"sha": "eda7fcaaeb9ec21eea51a95403a982a4c5fcdee9", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -6640,6 +6640,8 @@ spu_builtin_vectorization_cost (enum vect_cost_for_stmt type_of_cost,\n         return 2;\n \n       case unaligned_load:\n+      case vector_gather_load:\n+      case vector_scatter_store:\n         return 2;\n \n       case cond_branch_taken:"}, {"sha": "62601933338497837948744c50fc9859ef05d82a", "filename": "gcc/target.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -171,9 +171,11 @@ enum vect_cost_for_stmt\n   scalar_store,\n   vector_stmt,\n   vector_load,\n+  vector_gather_load,\n   unaligned_load,\n   unaligned_store,\n   vector_store,\n+  vector_scatter_store,\n   vec_to_scalar,\n   scalar_to_vec,\n   cond_branch_not_taken,"}, {"sha": "7e5fe4c7cadcfc95d600be0c875a38b60896bf45", "filename": "gcc/tree-vect-stmts.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Ftree-vect-stmts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165/gcc%2Ftree-vect-stmts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-stmts.c?ref=cc9fe6bbd78a0b1740c5c1c5713d36e3da6e7165", "patch": "@@ -95,6 +95,12 @@ record_stmt_cost (stmt_vector_for_cost *body_cost_vec, int count,\n \t\t  enum vect_cost_for_stmt kind, stmt_vec_info stmt_info,\n \t\t  int misalign, enum vect_cost_model_location where)\n {\n+  if ((kind == vector_load || kind == unaligned_load)\n+      && STMT_VINFO_GATHER_SCATTER_P (stmt_info))\n+    kind = vector_gather_load;\n+  if ((kind == vector_store || kind == unaligned_store)\n+      && STMT_VINFO_GATHER_SCATTER_P (stmt_info))\n+    kind = vector_scatter_store;\n   if (body_cost_vec)\n     {\n       tree vectype = stmt_info ? stmt_vectype (stmt_info) : NULL_TREE;"}]}