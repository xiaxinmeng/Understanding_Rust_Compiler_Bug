{"sha": "04681fca936b5bca1dd374dfb0fbca7ccb028994", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQ2ODFmY2E5MzZiNWJjYTFkZDM3NGRmYjBmYmNhN2NjYjAyODk5NA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-23T14:02:32Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-01-23T14:02:32Z"}, "message": "libstdc++: Simplify makefile rule for largefile-config.h (PR91947)\n\nThe previous rule could leave an incomplete file if the build was\ninterrupted, which would then not be remade if make was run again.\n\nThis makes the rule more robust by writing to a temporary file and only\nmoving it into place as the final step. It also simplifies the rule so\nthat only the essential macro definitions are written to the file, not\nthe explanatory comments and commented out #undef lines.\n\nAlso, the macro for enabling LFS on Mac OS X 10.5 is now set\nunconditionally, which is a bug fix from upstream autoconf.\n\n\tPR libstdc++/91947\n\t* include/Makefile.am (${host_builddir}/largefile-config.h): Simplify\n\trule.\n\t* include/Makefile.in: Regenerate.", "tree": {"sha": "e7dacb2c661dd7d8bbb0885d0227eb9ab02c5df4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7dacb2c661dd7d8bbb0885d0227eb9ab02c5df4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/04681fca936b5bca1dd374dfb0fbca7ccb028994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04681fca936b5bca1dd374dfb0fbca7ccb028994", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04681fca936b5bca1dd374dfb0fbca7ccb028994", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04681fca936b5bca1dd374dfb0fbca7ccb028994/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2214053f9d9cdf66a4f3a657dbae43d293fd0387", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2214053f9d9cdf66a4f3a657dbae43d293fd0387", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2214053f9d9cdf66a4f3a657dbae43d293fd0387"}], "stats": {"total": 51, "additions": 19, "deletions": 32}, "files": [{"sha": "539b0f6e593dbea3e4a09ecd83a49083ba8cdfbd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04681fca936b5bca1dd374dfb0fbca7ccb028994/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04681fca936b5bca1dd374dfb0fbca7ccb028994/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=04681fca936b5bca1dd374dfb0fbca7ccb028994", "patch": "@@ -1,3 +1,10 @@\n+2020-01-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/91947\n+\t* include/Makefile.am (${host_builddir}/largefile-config.h): Simplify\n+\trule.\n+\t* include/Makefile.in: Regenerate.\n+\n 2020-01-20  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/faq.xml: Fix grammar."}, {"sha": "89835759069dbbdbb5b1f7f918dcf7782c7e4b83", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04681fca936b5bca1dd374dfb0fbca7ccb028994/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04681fca936b5bca1dd374dfb0fbca7ccb028994/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=04681fca936b5bca1dd374dfb0fbca7ccb028994", "patch": "@@ -1245,22 +1245,12 @@ stamp-float128:\n endif\n \n # This header is not installed, it's only used to build libstdc++ itself.\n-${host_builddir}/largefile-config.h: ${CONFIG_HEADER} \\\n-\t\t\t\t     ${glibcxx_srcdir}/include/bits/c++config\n-\t@echo '#if defined _GLIBCXX_CXX_CONFIG_H || defined _FEATURES_H' > $@\n-\t@echo '# error \"This file must be included before any others\"' >> $@\n-\t@echo '#endif' >> $@\n-\t@echo >> $@\n-\t@echo '/* Enable large inode numbers on Mac OS X 10.5.  */' >> $@\n-\t@echo '#ifndef _DARWIN_USE_64_BIT_INODE' >> $@\n-\t@echo '# define _DARWIN_USE_64_BIT_INODE 1' >> $@\n-\t@echo '#endif' >> $@\n-\t@echo >> $@\n-\t@echo '/* Number of bits in a file offset, on hosts where this is settable. */' >> $@\n-\t@grep '_FILE_OFFSET_BITS' ${CONFIG_HEADER} >> $@\n-\t@echo >> $@\n-\t@echo '/* Define for large files, on AIX-style hosts. */' >> $@\n-\t@grep '_LARGE_FILES' ${CONFIG_HEADER} >> $@\n+${host_builddir}/largefile-config.h: ${CONFIG_HEADER}\n+\t@rm -f $@.tmp\n+\t@-grep 'define _DARWIN_USE_64_BIT_INODE' ${CONFIG_HEADER} >> $@.tmp\n+\t@-grep 'define _FILE_OFFSET_BITS' ${CONFIG_HEADER} >> $@.tmp\n+\t@-grep 'define _LARGE_FILES' ${CONFIG_HEADER} >> $@.tmp\n+\t@mv $@.tmp $@\n \n # NB: The non-empty default ldbl_compat works around an AIX sed\n # oddity, see libstdc++/31957 for details."}, {"sha": "57574c307a57ccb4051a5f603110d1948492bd5b", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 6, "deletions": 16, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/04681fca936b5bca1dd374dfb0fbca7ccb028994/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/04681fca936b5bca1dd374dfb0fbca7ccb028994/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=04681fca936b5bca1dd374dfb0fbca7ccb028994", "patch": "@@ -1725,22 +1725,12 @@ stamp-host: ${host_headers} ${bits_host_headers} ${ext_host_headers} ${host_head\n @ENABLE_FLOAT128_FALSE@\techo 'undef _GLIBCXX_USE_FLOAT128' > stamp-float128\n \n # This header is not installed, it's only used to build libstdc++ itself.\n-${host_builddir}/largefile-config.h: ${CONFIG_HEADER} \\\n-\t\t\t\t     ${glibcxx_srcdir}/include/bits/c++config\n-\t@echo '#if defined _GLIBCXX_CXX_CONFIG_H || defined _FEATURES_H' > $@\n-\t@echo '# error \"This file must be included before any others\"' >> $@\n-\t@echo '#endif' >> $@\n-\t@echo >> $@\n-\t@echo '/* Enable large inode numbers on Mac OS X 10.5.  */' >> $@\n-\t@echo '#ifndef _DARWIN_USE_64_BIT_INODE' >> $@\n-\t@echo '# define _DARWIN_USE_64_BIT_INODE 1' >> $@\n-\t@echo '#endif' >> $@\n-\t@echo >> $@\n-\t@echo '/* Number of bits in a file offset, on hosts where this is settable. */' >> $@\n-\t@grep '_FILE_OFFSET_BITS' ${CONFIG_HEADER} >> $@\n-\t@echo >> $@\n-\t@echo '/* Define for large files, on AIX-style hosts. */' >> $@\n-\t@grep '_LARGE_FILES' ${CONFIG_HEADER} >> $@\n+${host_builddir}/largefile-config.h: ${CONFIG_HEADER}\n+\t@rm -f $@.tmp\n+\t@-grep 'define _DARWIN_USE_64_BIT_INODE' ${CONFIG_HEADER} >> $@.tmp\n+\t@-grep 'define _FILE_OFFSET_BITS' ${CONFIG_HEADER} >> $@.tmp\n+\t@-grep 'define _LARGE_FILES' ${CONFIG_HEADER} >> $@.tmp\n+\t@mv $@.tmp $@\n \n # NB: The non-empty default ldbl_compat works around an AIX sed\n # oddity, see libstdc++/31957 for details."}]}