{"sha": "d252a5155117a6bf89ef57722f839777395fdb8c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI1MmE1MTU1MTE3YTZiZjg5ZWY1NzcyMmY4Mzk3NzczOTVmZGI4Yw==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-10-23T14:43:33Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-10-23T14:43:33Z"}, "message": "c-tree.texi: Improve documentation for IF_STMTs and related conditional statements.\n\n\t* c-tree.texi: Improve documentation for IF_STMTs and related\n\tconditional statements.\n\nFrom-SVN: r37015", "tree": {"sha": "e5642130bd06ea5a33b1fe6f794dc2b93bd3975c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5642130bd06ea5a33b1fe6f794dc2b93bd3975c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d252a5155117a6bf89ef57722f839777395fdb8c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d252a5155117a6bf89ef57722f839777395fdb8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d252a5155117a6bf89ef57722f839777395fdb8c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d252a5155117a6bf89ef57722f839777395fdb8c/comments", "author": null, "committer": null, "parents": [{"sha": "69881ed7b4a43c631c8852783afa17451345a83c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69881ed7b4a43c631c8852783afa17451345a83c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69881ed7b4a43c631c8852783afa17451345a83c"}], "stats": {"total": 35, "additions": 26, "deletions": 9}, "files": [{"sha": "c3941b4442b911073bd7e2449c5f0d030640791e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d252a5155117a6bf89ef57722f839777395fdb8c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d252a5155117a6bf89ef57722f839777395fdb8c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d252a5155117a6bf89ef57722f839777395fdb8c", "patch": "@@ -1,3 +1,8 @@\n+2000-10-23  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* c-tree.texi: Improve documentation for IF_STMTs and related\n+\tconditional statements.\n+\n 2000-10-22  Mark Mitchell  <mark@codesourcery.com>\n \n \t* expr.c (do_preexpand_calls): Remove."}, {"sha": "8af1429546b502d9ee4193a42a89dffb7bc2fb7b", "filename": "gcc/c-tree.texi", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d252a5155117a6bf89ef57722f839777395fdb8c/gcc%2Fc-tree.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d252a5155117a6bf89ef57722f839777395fdb8c/gcc%2Fc-tree.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-tree.texi?ref=d252a5155117a6bf89ef57722f839777395fdb8c", "patch": "@@ -1574,9 +1574,20 @@ always have pointer type.\n @item IF_STMT\n \n Used to represent an @code{if} statement.  The @code{IF_COND} is the\n-expression or statement used as the condition.  If the condition is a\n-statement, it will always be a @code{DECL_STMT}; the variable will then\n-be used as the condition.\n+expression. \n+\n+If the condition is a @code{TREE_LIST}, then the @code{TREE_PURPOSE} is\n+a statement (usually a @code{DECL_STMT}).  Each time the coondition is\n+evaluated, the statement should be executed.  Then, the\n+@code{TREE_VALUE} should be used as the conditional expression itself.\n+This representation is used to handle C++ code like this:\n+\n+@example\n+if (int i = 7) ...\n+@end example\n+\n+where there is a new local variable (or variables) declared within the\n+condition.\n \n The @code{THEN_CLAUSE} represents the statement given by the @code{then}\n condition, while the @code{ELSE_CLAUSE} represents the statement given\n@@ -1643,9 +1654,10 @@ cleanups must be executed in the reverse order in which they appear.\n @item SWITCH_STMT\n \n Used to represent a @code{switch} statement.  The @code{SWITCH_COND} is\n-the expression on which the switch is occurring.  (It may be either a\n-statement, or an expression.)  The @code{SWITCH_BODY} is the body of the\n-switch statement.\n+the expression on which the switch is occurring.  See the documentation\n+for an @code{IF_STMT} for more information on the representation used\n+for the condition.  The @code{SWITCH_BODY} is the body of the switch\n+statement.\n \n @item TRY_BLOCK\n Used to represent a @code{try} block.  The body of the try block is\n@@ -1665,9 +1677,9 @@ And, if an exception is thrown while the expression is executing,\n @item WHILE_STMT\n \n Used to represent a @code{while} loop.  The @code{WHILE_COND} is the\n-termination condition for the loop.  This condition may be either a\n-statement or an expression.  If the condition is a statement, it will\n-always be a @code{DECL_STMT}; see @code{IF_STMT} for more information.\n+termination condition for the loop.  See the documentation for an\n+@code{IF_STMT} for more information on the representation used for the\n+condition.\n \n The @code{WHILE_BODY} is the body of the loop.\n "}]}