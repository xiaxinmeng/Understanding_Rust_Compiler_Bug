{"sha": "7376f39723c7cbcc0112245964801670f15a12f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM3NmYzOTcyM2M3Y2JjYzAxMTIyNDU5NjQ4MDE2NzBmMTVhMTJmOA==", "commit": {"author": {"name": "Jan-Benedict Glaw", "email": "jbglaw@lug-owl.de", "date": "2013-12-06T04:34:34Z"}, "committer": {"name": "Jan-Benedict Glaw", "email": "jbglaw@gcc.gnu.org", "date": "2013-12-06T04:34:34Z"}, "message": "score.c (score_force_temporary): Delete function.\n\n2013-12-05  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n\n\t* config/score/score.c (score_force_temporary): Delete function.\n\t(score_split_symbol): Ditto.\n\t* config/score/score.h (ASM_OUTPUT_ADDR_DIFF_ELT): Add extra\n\tparentheses to silence ambiguity warning and reindent.\n\nFrom-SVN: r205727", "tree": {"sha": "5c554ec5316b1d31aecca65eb09d5b43903bd2e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c554ec5316b1d31aecca65eb09d5b43903bd2e8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7376f39723c7cbcc0112245964801670f15a12f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7376f39723c7cbcc0112245964801670f15a12f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7376f39723c7cbcc0112245964801670f15a12f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7376f39723c7cbcc0112245964801670f15a12f8/comments", "author": {"login": "jbglaw", "id": 7965297, "node_id": "MDQ6VXNlcjc5NjUyOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/7965297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbglaw", "html_url": "https://github.com/jbglaw", "followers_url": "https://api.github.com/users/jbglaw/followers", "following_url": "https://api.github.com/users/jbglaw/following{/other_user}", "gists_url": "https://api.github.com/users/jbglaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbglaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbglaw/subscriptions", "organizations_url": "https://api.github.com/users/jbglaw/orgs", "repos_url": "https://api.github.com/users/jbglaw/repos", "events_url": "https://api.github.com/users/jbglaw/events{/privacy}", "received_events_url": "https://api.github.com/users/jbglaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46ba9c210e1827f4e239e128301717884c787dd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46ba9c210e1827f4e239e128301717884c787dd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46ba9c210e1827f4e239e128301717884c787dd4"}], "stats": {"total": 47, "additions": 16, "deletions": 31}, "files": [{"sha": "03e03d702bbc3484b94c43a1af96e96022509383", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7376f39723c7cbcc0112245964801670f15a12f8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7376f39723c7cbcc0112245964801670f15a12f8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7376f39723c7cbcc0112245964801670f15a12f8", "patch": "@@ -1,3 +1,10 @@\n+2013-12-05  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n+\n+\t* config/score/score.c (score_force_temporary): Delete function.\n+\t(score_split_symbol): Ditto.\n+\t* config/score/score.h (ASM_OUTPUT_ADDR_DIFF_ELT): Add extra\n+\tparentheses to silence ambiguity warning and reindent.\n+\n 2013-12-05  Marek Polacek  <polacek@redhat.com>\n \n \t* doc/invoke.texi: Document -fsanitize=signed-integer-overflow."}, {"sha": "30b49edb8c3fbaf0e0c82589d2577c3f9f62c5c6", "filename": "gcc/config/score/score.c", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7376f39723c7cbcc0112245964801670f15a12f8/gcc%2Fconfig%2Fscore%2Fscore.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7376f39723c7cbcc0112245964801670f15a12f8/gcc%2Fconfig%2Fscore%2Fscore.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.c?ref=7376f39723c7cbcc0112245964801670f15a12f8", "patch": "@@ -516,30 +516,6 @@ score_output_mi_thunk (FILE *file, tree thunk_fndecl ATTRIBUTE_UNUSED,\n   reload_completed = 0;\n }\n \n-/* Copy VALUE to a register and return that register.  If new psuedos\n-   are allowed, copy it into a new register, otherwise use DEST.  */\n-static rtx\n-score_force_temporary (rtx dest, rtx value)\n-{\n-  if (can_create_pseudo_p ())\n-    return force_reg (Pmode, value);\n-  else\n-    {\n-      emit_move_insn (copy_rtx (dest), value);\n-      return dest;\n-    }\n-}\n-\n-/* Return a LO_SUM expression for ADDR.  TEMP is as for score_force_temporary\n-   and is used to load the high part into a register.  */\n-static rtx\n-score_split_symbol (rtx temp, rtx addr)\n-{\n-  rtx high = score_force_temporary (temp,\n-                                     gen_rtx_HIGH (Pmode, copy_rtx (addr)));\n-  return gen_rtx_LO_SUM (Pmode, high, addr);\n-}\n-\n /* Fill INFO with information about a single argument.  CUM is the\n    cumulative state for earlier arguments.  MODE is the mode of this\n    argument and TYPE is its type (if known).  NAMED is true if this"}, {"sha": "ca73401fc594e0cd9379a71fafe4bd794fcbd174", "filename": "gcc/config/score/score.h", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7376f39723c7cbcc0112245964801670f15a12f8/gcc%2Fconfig%2Fscore%2Fscore.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7376f39723c7cbcc0112245964801670f15a12f8/gcc%2Fconfig%2Fscore%2Fscore.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fscore%2Fscore.h?ref=7376f39723c7cbcc0112245964801670f15a12f8", "patch": "@@ -755,13 +755,15 @@ typedef struct score_args\n /* Output of Dispatch Tables.  */\n /* This is how to output an element of a case-vector.  We can make the\n    entries PC-relative in GP-relative when .gp(d)word is supported.  */\n-#define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM, BODY, VALUE, REL)                \\\n-  do {                                                                    \\\n-    if (TARGET_SCORE7)                                                    \\\n-      if (flag_pic)                                                       \\\n-        fprintf (STREAM, \"\\t.gpword %sL%d\\n\", LOCAL_LABEL_PREFIX, VALUE); \\\n-      else                                                                \\\n-        fprintf (STREAM, \"\\t.word %sL%d\\n\", LOCAL_LABEL_PREFIX, VALUE);   \\\n+#define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM, BODY, VALUE, REL)\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\t\\\n+    if (TARGET_SCORE7)\t\t\t\t\t\t\t\t\\\n+      {\t\t\t\t\t\t\t\t\t\t\\\n+\tif (flag_pic)\t\t\t\t\t\t\t\t\\\n+\t  fprintf (STREAM, \"\\t.gpword %sL%d\\n\", LOCAL_LABEL_PREFIX, VALUE);\t\\\n+\telse\t\t\t\t\t\t\t\t\t\\\n+\t  fprintf (STREAM, \"\\t.word %sL%d\\n\", LOCAL_LABEL_PREFIX, VALUE);\t\\\n+      }\t\t\t\t\t\t\t\t\t\t\\\n   } while (0)\n \n /* Jump table alignment is explicit in ASM_OUTPUT_CASE_LABEL.  */"}]}