{"sha": "dbb04e883d918fe83fd95f595bb28d25042f316f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiMDRlODgzZDkxOGZlODNmZDk1ZjU5NWJiMjhkMjUwNDJmMzE2Zg==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-12-18T01:00:23Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-12-18T01:00:23Z"}, "message": "natInflater.cc (inflate): Treat Z_BUF_ERROR as end-of-stream if avail_in is 0.\n\n        * java/util/zip/natInflater.cc (inflate): Treat Z_BUF_ERROR as\n        end-of-stream if avail_in is 0.\n\nFrom-SVN: r38338", "tree": {"sha": "2c89124ad90aef0b64a24158bf0d3bd96f0d669f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c89124ad90aef0b64a24158bf0d3bd96f0d669f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb04e883d918fe83fd95f595bb28d25042f316f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb04e883d918fe83fd95f595bb28d25042f316f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb04e883d918fe83fd95f595bb28d25042f316f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb04e883d918fe83fd95f595bb28d25042f316f/comments", "author": null, "committer": null, "parents": [{"sha": "f2aca1970f34a502c0a4f7e3dd6011caf22ea509", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2aca1970f34a502c0a4f7e3dd6011caf22ea509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2aca1970f34a502c0a4f7e3dd6011caf22ea509"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "1bbb6faec236c1c1cda5189e2e37fd934e2de0d3", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb04e883d918fe83fd95f595bb28d25042f316f/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb04e883d918fe83fd95f595bb28d25042f316f/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=dbb04e883d918fe83fd95f595bb28d25042f316f", "patch": "@@ -1,3 +1,8 @@\n+2000-12-18  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* java/util/zip/natInflater.cc (inflate): Treat Z_BUF_ERROR as \n+\tend-of-stream if avail_in is 0.\n+\n 2000-12-17  Bryce McKinlay  <bryce@albatross.co.nz>\n \n \t* java/util/ArrayList.java (data): Declare transient."}, {"sha": "a9768fce77df1922de9585a944e63c800e4c5ba9", "filename": "libjava/java/util/zip/natInflater.cc", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb04e883d918fe83fd95f595bb28d25042f316f/libjava%2Fjava%2Futil%2Fzip%2FnatInflater.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb04e883d918fe83fd95f595bb28d25042f316f/libjava%2Fjava%2Futil%2Fzip%2FnatInflater.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FnatInflater.cc?ref=dbb04e883d918fe83fd95f595bb28d25042f316f", "patch": "@@ -106,6 +106,16 @@ java::util::zip::Inflater::inflate (jbyteArray buf, jint off, jint len)\n \n   switch (::inflate (s, Z_SYNC_FLUSH))\n     {\n+    case Z_BUF_ERROR:\n+      /* Using the no_header option, zlib requires an extra padding byte at the\n+      end of the stream in order to successfully complete decompression (see\n+      zlib/contrib/minizip/unzip.c). We don't do this, so can end up with a \n+      Z_BUF_ERROR at the end of a stream when zlib has completed inflation\n+      and there's no more input. Thats not a problem. */\n+      if (s->avail_in != 0)\n+        throw new java::lang::InternalError;\n+      // Fall through.\n+      \n     case Z_STREAM_END:\n       is_finished = true;\n       if (s->avail_out == (unsigned int) len)\n@@ -125,11 +135,6 @@ java::util::zip::Inflater::inflate (jbyteArray buf, jint off, jint len)\n       _Jv_Throw (new java::lang::OutOfMemoryError);\n       break;\n \n-    case Z_BUF_ERROR:\n-      // FIXME?\n-      _Jv_Throw (new java::lang::InternalError);\n-      break;\n-\n     case Z_OK:\n       break;\n     }"}]}