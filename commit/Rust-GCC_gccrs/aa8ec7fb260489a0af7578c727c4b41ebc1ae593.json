{"sha": "aa8ec7fb260489a0af7578c727c4b41ebc1ae593", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWE4ZWM3ZmIyNjA0ODlhMGFmNzU3OGM3MjdjNGI0MWViYzFhZTU5Mw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2017-12-18T20:16:19Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2017-12-18T20:16:19Z"}, "message": "rtlanal: dead_or_set_regno_p should handle CLOBBER (PR83424)\n\nIn PR83424 combine's move_deaths puts a REG_DEAD note in the wrong place\nbecause dead_or_set_regno_p does not account for CLOBBER insns.  This\nfixes it.\n\n\n\tPR rtl-optimization/83424\n\t* rtlanal.c (dead_or_set_regno_p): Handle CLOBBER just like SET.\n\ngcc/testsuite/\n\tPR rtl-optimization/83424\n\t* gcc.dg/pr83424.c: New testsuite.\n\nFrom-SVN: r255787", "tree": {"sha": "bc3a5180cbac1a4b320897ff68c2487a50a04b1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc3a5180cbac1a4b320897ff68c2487a50a04b1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa8ec7fb260489a0af7578c727c4b41ebc1ae593", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa8ec7fb260489a0af7578c727c4b41ebc1ae593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa8ec7fb260489a0af7578c727c4b41ebc1ae593", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab6e54a684f6fcbf9eed989d170905fd889e19cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab6e54a684f6fcbf9eed989d170905fd889e19cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab6e54a684f6fcbf9eed989d170905fd889e19cc"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "948271e28e6b50078d7c705d41324d48c4d86b76", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa8ec7fb260489a0af7578c727c4b41ebc1ae593", "patch": "@@ -1,3 +1,8 @@\n+2017-12-18  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/83424\n+\t* rtlanal.c (dead_or_set_regno_p): Handle CLOBBER just like SET.\n+\n 2017-12-18  Marek Polacek  <polacek@redhat.com>\n \n \tPR middle-end/83463"}, {"sha": "9f6988bc8c56ad5e945ea78c9b5dd739a5d75fa4", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=aa8ec7fb260489a0af7578c727c4b41ebc1ae593", "patch": "@@ -2082,7 +2082,7 @@ dead_or_set_regno_p (const rtx_insn *insn, unsigned int test_regno)\n   if (GET_CODE (pattern) == COND_EXEC)\n     return 0;\n \n-  if (GET_CODE (pattern) == SET)\n+  if (GET_CODE (pattern) == SET || GET_CODE (pattern) == CLOBBER)\n     return covers_regno_p (SET_DEST (pattern), test_regno);\n   else if (GET_CODE (pattern) == PARALLEL)\n     {"}, {"sha": "da078f123304d99ff8f2395e6d0fce0bad73ece6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aa8ec7fb260489a0af7578c727c4b41ebc1ae593", "patch": "@@ -1,3 +1,8 @@\n+2017-12-18  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/83424\n+\t* gcc.dg/pr83424.c: New testcase.\n+\n 2017-12-18  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR tree-optimization/83336"}, {"sha": "5a304f5029234f209166787d07eb076d79f6ec24", "filename": "gcc/testsuite/gcc.dg/pr83424.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83424.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa8ec7fb260489a0af7578c727c4b41ebc1ae593/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83424.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr83424.c?ref=aa8ec7fb260489a0af7578c727c4b41ebc1ae593", "patch": "@@ -0,0 +1,30 @@\n+/* PR rtl-optimization/83424 */\n+/* { dg-do run { target int128 } } */\n+/* { dg-options \"-O -fno-tree-ccp -fno-tree-coalesce-vars\" } */\n+\n+typedef unsigned char u8;\n+typedef unsigned int u32;\n+typedef unsigned __int128 u128;\n+\n+u32 a, c;\n+u8 b;\n+\n+static u128 __attribute__ ((noinline, noclone))\n+foo (u128 p)\n+{\n+  u8 x = ~b;\n+  p &= c;\n+  x *= -p;\n+  x &= a == 0;\n+  x >>= 1;\n+  return p + x;\n+}\n+\n+int\n+main (void)\n+{\n+  u128 x = foo (0);\n+  if (x != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}