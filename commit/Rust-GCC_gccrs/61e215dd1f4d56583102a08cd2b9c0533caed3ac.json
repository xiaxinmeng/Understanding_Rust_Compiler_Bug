{"sha": "61e215dd1f4d56583102a08cd2b9c0533caed3ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjFlMjE1ZGQxZjRkNTY1ODMxMDJhMDhjZDJiOWMwNTMzY2FlZDNhYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-31T20:13:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-07-31T20:13:36Z"}, "message": "(process_init_element): Treat string constants specially\nonly for arrays of integers.\n\nFrom-SVN: r5048", "tree": {"sha": "583bd6c413dbe9e5c7caca635721b987d2bce16d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/583bd6c413dbe9e5c7caca635721b987d2bce16d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61e215dd1f4d56583102a08cd2b9c0533caed3ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e215dd1f4d56583102a08cd2b9c0533caed3ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61e215dd1f4d56583102a08cd2b9c0533caed3ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61e215dd1f4d56583102a08cd2b9c0533caed3ac/comments", "author": null, "committer": null, "parents": [{"sha": "97093ccaa2ae09ca65c72557785325f086936bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97093ccaa2ae09ca65c72557785325f086936bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97093ccaa2ae09ca65c72557785325f086936bc8"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "9f2a8bc82eee993abfe3b12d827f87e0746bcb24", "filename": "gcc/c-typeck.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61e215dd1f4d56583102a08cd2b9c0533caed3ac/gcc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61e215dd1f4d56583102a08cd2b9c0533caed3ac/gcc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-typeck.c?ref=61e215dd1f4d56583102a08cd2b9c0533caed3ac", "patch": "@@ -6005,6 +6005,7 @@ process_init_element (value)\n      char x[] = {\"foo\"}; */\n   if (string_flag\n       && TREE_CODE (constructor_type) == ARRAY_TYPE\n+      && TREE_CODE (TREE_TYPE (constructor_type)) == INTEGER_TYPE\n       && integer_zerop (constructor_unfilled_index))\n     {\n       constructor_stack->replacement_value = value;"}]}