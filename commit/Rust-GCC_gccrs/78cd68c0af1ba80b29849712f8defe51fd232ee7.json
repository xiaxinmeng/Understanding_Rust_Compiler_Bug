{"sha": "78cd68c0af1ba80b29849712f8defe51fd232ee7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzhjZDY4YzBhZjFiYTgwYjI5ODQ5NzEyZjhkZWZlNTFmZDIzMmVlNw==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-10-29T13:52:42Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-10-29T13:52:42Z"}, "message": "Release function and edge summaries allocated with GGC.\n\n2019-10-29  Martin Liska  <mliska@suse.cz>\n\n\t* ggc.h (ggc_alloc_no_dtor): New function.\n\t* ipa-fnsummary.c (ipa_free_fn_summary): Call\n\tdestructor and ggc_free.\n\t(ipa_free_size_summary): Call delete instead\n\tof release.\n\t* ipa-fnsummary.h: Use new function ggc_alloc_no_dtor.\n\t* ipa-prop.c (ipa_check_create_edge_args): Likewise.\n\t(ipa_free_all_edge_args): Call destructor and ggc_free.\n\t(ipa_free_all_node_params): Likewise.\n\t(ipcp_free_transformation_sum): Likewise.\n\t* ipa-prop.h (ipa_check_create_node_params):\n\tCall new ggc_alloc_no_dtor.\n\t* ipa-sra.c (ipa_sra_generate_summary): Likewise.\n\t(ipa_sra_analysis): Call destructor and ggc_free.\n\tReplace release with delete operator.\n\t* symbol-summary.h (release): Remove ..\n\t(V>::~fast_function_summary): and move logic here.\n\tLikewise for other classes.\n\nFrom-SVN: r277572", "tree": {"sha": "610d5431c2e3c5f0a8416e42ba955c1b1ce294b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/610d5431c2e3c5f0a8416e42ba955c1b1ce294b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/78cd68c0af1ba80b29849712f8defe51fd232ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78cd68c0af1ba80b29849712f8defe51fd232ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78cd68c0af1ba80b29849712f8defe51fd232ee7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78cd68c0af1ba80b29849712f8defe51fd232ee7/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "318bd8c60d83ca294b237559908dd9f88ee7c300", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/318bd8c60d83ca294b237559908dd9f88ee7c300", "html_url": "https://github.com/Rust-GCC/gccrs/commit/318bd8c60d83ca294b237559908dd9f88ee7c300"}], "stats": {"total": 145, "additions": 62, "deletions": 83}, "files": [{"sha": "8e729b3de51193f43618d13d6061195e28e7009e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=78cd68c0af1ba80b29849712f8defe51fd232ee7", "patch": "@@ -1,3 +1,24 @@\n+2019-10-29  Martin Liska  <mliska@suse.cz>\n+\n+\t* ggc.h (ggc_alloc_no_dtor): New function.\n+\t* ipa-fnsummary.c (ipa_free_fn_summary): Call\n+\tdestructor and ggc_free.\n+\t(ipa_free_size_summary): Call delete instead\n+\tof release.\n+\t* ipa-fnsummary.h: Use new function ggc_alloc_no_dtor.\n+\t* ipa-prop.c (ipa_check_create_edge_args): Likewise.\n+\t(ipa_free_all_edge_args): Call destructor and ggc_free.\n+\t(ipa_free_all_node_params): Likewise.\n+\t(ipcp_free_transformation_sum): Likewise.\n+\t* ipa-prop.h (ipa_check_create_node_params):\n+\tCall new ggc_alloc_no_dtor.\n+\t* ipa-sra.c (ipa_sra_generate_summary): Likewise.\n+\t(ipa_sra_analysis): Call destructor and ggc_free.\n+\tReplace release with delete operator.\n+\t* symbol-summary.h (release): Remove ..\n+\t(V>::~fast_function_summary): and move logic here.\n+\tLikewise for other classes.\n+\n 2019-10-29  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/92260"}, {"sha": "d5735d09ced08b5cbd6c26c420737b5e57561b69", "filename": "gcc/ggc.h", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fggc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fggc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fggc.h?ref=78cd68c0af1ba80b29849712f8defe51fd232ee7", "patch": "@@ -185,6 +185,18 @@ ggc_alloc (ALONE_CXX_MEM_STAT_INFO)\n \t\t\t\t\t\t PASS_MEM_STAT));\n }\n \n+/* GGC allocation function that does not call finalizer for type\n+   that have need_finalization_p equal to true.  User is responsible\n+   for calling of the destructor.  */\n+\n+template<typename T>\n+inline T *\n+ggc_alloc_no_dtor (ALONE_CXX_MEM_STAT_INFO)\n+{\n+  return static_cast<T *> (ggc_internal_alloc (sizeof (T), NULL, 0, 1\n+\t\t\t\t\t       PASS_MEM_STAT));\n+}\n+\n template<typename T>\n inline T *\n ggc_cleared_alloc (ALONE_CXX_MEM_STAT_INFO)"}, {"sha": "f01709caf28a343e636879cc97814b5494302ca9", "filename": "gcc/ipa-fnsummary.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-fnsummary.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-fnsummary.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.c?ref=78cd68c0af1ba80b29849712f8defe51fd232ee7", "patch": "@@ -3873,9 +3873,9 @@ ipa_free_fn_summary (void)\n {\n   if (!ipa_call_summaries)\n     return;\n-  ipa_fn_summaries->release ();\n+  ipa_fn_summaries->~fast_function_summary <ipa_fn_summary *, va_gc> ();\n+  ggc_free (ipa_fn_summaries);\n   ipa_fn_summaries = NULL;\n-  ipa_call_summaries->release ();\n   delete ipa_call_summaries;\n   ipa_call_summaries = NULL;\n   edge_predicate_pool.release ();\n@@ -3891,7 +3891,7 @@ ipa_free_size_summary (void)\n {\n   if (!ipa_size_summaries)\n     return;\n-  ipa_size_summaries->release ();\n+  delete ipa_size_summaries;\n   ipa_size_summaries = NULL;\n }\n "}, {"sha": "525d4b702073b90bbad6bc8f3cc0b42d5f971cb8", "filename": "gcc/ipa-fnsummary.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-fnsummary.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-fnsummary.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-fnsummary.h?ref=78cd68c0af1ba80b29849712f8defe51fd232ee7", "patch": "@@ -194,8 +194,8 @@ class GTY((user)) ipa_fn_summary_t:\n \n   static ipa_fn_summary_t *create_ggc (symbol_table *symtab)\n   {\n-    class ipa_fn_summary_t *summary = new (ggc_alloc <ipa_fn_summary_t> ())\n-      ipa_fn_summary_t (symtab);\n+    class ipa_fn_summary_t *summary\n+      = new (ggc_alloc_no_dtor<ipa_fn_summary_t> ()) ipa_fn_summary_t (symtab);\n     summary->disable_insertion_hook ();\n     return summary;\n   }"}, {"sha": "9dfbe1a12d6ee7dd667078c7a4e57e65a2347175", "filename": "gcc/ipa-prop.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-prop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-prop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.c?ref=78cd68c0af1ba80b29849712f8defe51fd232ee7", "patch": "@@ -3719,7 +3719,7 @@ ipa_check_create_edge_args (void)\n {\n   if (!ipa_edge_args_sum)\n     ipa_edge_args_sum\n-      = (new (ggc_cleared_alloc <ipa_edge_args_sum_t> ())\n+      = (new (ggc_alloc_no_dtor<ipa_edge_args_sum_t> ())\n \t ipa_edge_args_sum_t (symtab, true));\n   if (!ipa_bits_hash_table)\n     ipa_bits_hash_table = hash_table<ipa_bit_ggc_hash_traits>::create_ggc (37);\n@@ -3735,7 +3735,8 @@ ipa_free_all_edge_args (void)\n   if (!ipa_edge_args_sum)\n     return;\n \n-  ipa_edge_args_sum->release ();\n+  ipa_edge_args_sum->~ipa_edge_args_sum_t ();\n+  ggc_free (ipa_edge_args_sum);\n   ipa_edge_args_sum = NULL;\n }\n \n@@ -3744,7 +3745,8 @@ ipa_free_all_edge_args (void)\n void\n ipa_free_all_node_params (void)\n {\n-  ipa_node_params_sum->release ();\n+  ipa_node_params_sum->~ipa_node_params_t ();\n+  ggc_free (ipa_node_params_sum);\n   ipa_node_params_sum = NULL;\n }\n \n@@ -3770,7 +3772,8 @@ ipcp_free_transformation_sum (void)\n   if (!ipcp_transformation_sum)\n     return;\n \n-  ipcp_transformation_sum->release ();\n+  ipcp_transformation_sum->~function_summary<ipcp_transformation *> ();\n+  ggc_free (ipcp_transformation_sum);\n   ipcp_transformation_sum = NULL;\n }\n "}, {"sha": "07a7eea9249110b347bef11f11b50d7502a4ab22", "filename": "gcc/ipa-prop.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-prop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-prop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-prop.h?ref=78cd68c0af1ba80b29849712f8defe51fd232ee7", "patch": "@@ -672,7 +672,7 @@ class ipcp_transformation_t\n   static ipcp_transformation_t *create_ggc (symbol_table *symtab)\n   {\n     ipcp_transformation_t *summary\n-      = new (ggc_cleared_alloc <ipcp_transformation_t> ())\n+      = new (ggc_alloc_no_dtor <ipcp_transformation_t> ())\n       ipcp_transformation_t (symtab, true);\n     return summary;\n   }\n@@ -710,7 +710,7 @@ ipa_check_create_node_params (void)\n {\n   if (!ipa_node_params_sum)\n     ipa_node_params_sum\n-      = (new (ggc_cleared_alloc <ipa_node_params_t> ())\n+      = (new (ggc_alloc_no_dtor <ipa_node_params_t> ())\n \t ipa_node_params_t (symtab, true));\n }\n "}, {"sha": "038f38b912a59b1b1083c553f999df29ba9f3118", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=78cd68c0af1ba80b29849712f8defe51fd232ee7", "patch": "@@ -2546,7 +2546,7 @@ ipa_sra_generate_summary (void)\n   gcc_checking_assert (!func_sums);\n   gcc_checking_assert (!call_sums);\n   func_sums\n-    = (new (ggc_cleared_alloc <ipa_sra_function_summaries> ())\n+    = (new (ggc_alloc_no_dtor <ipa_sra_function_summaries> ())\n        ipa_sra_function_summaries (symtab, true));\n   call_sums = new ipa_sra_call_summaries (symtab);\n \n@@ -2805,7 +2805,7 @@ ipa_sra_read_summary (void)\n   gcc_checking_assert (!func_sums);\n   gcc_checking_assert (!call_sums);\n   func_sums\n-    = (new (ggc_cleared_alloc <ipa_sra_function_summaries> ())\n+    = (new (ggc_alloc_no_dtor <ipa_sra_function_summaries> ())\n        ipa_sra_function_summaries (symtab, true));\n   call_sums = new ipa_sra_call_summaries (symtab);\n \n@@ -3989,9 +3989,10 @@ ipa_sra_analysis (void)\n     process_isra_node_results (node, clone_num_suffixes);\n \n   delete clone_num_suffixes;\n-  func_sums->release ();\n+  func_sums->~ipa_sra_function_summaries ();\n+  ggc_free (func_sums);\n   func_sums = NULL;\n-  call_sums->release ();\n+  delete call_sums;\n   call_sums = NULL;\n \n   if (dump_file)"}, {"sha": "6b26b604b380c4b5f679c99b9fd1d4e13a94fcac", "filename": "gcc/symbol-summary.h", "status": "modified", "additions": 10, "deletions": 68, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fsymbol-summary.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/78cd68c0af1ba80b29849712f8defe51fd232ee7/gcc%2Fsymbol-summary.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsymbol-summary.h?ref=78cd68c0af1ba80b29849712f8defe51fd232ee7", "patch": "@@ -29,7 +29,7 @@ class function_summary_base\n public:\n   /* Default construction takes SYMTAB as an argument.  */\n   function_summary_base (symbol_table *symtab): m_symtab (symtab),\n-  m_insertion_enabled (true), m_released (false)\n+  m_insertion_enabled (true)\n   {}\n \n   /* Basic implementation of insert operation.  */\n@@ -88,8 +88,6 @@ class function_summary_base\n \n   /* Indicates if insertion hook is enabled.  */\n   bool m_insertion_enabled;\n-  /* Indicates if the summary is released.  */\n-  bool m_released;\n \n private:\n   /* Return true when the summary uses GGC memory for allocation.  */\n@@ -134,14 +132,7 @@ class GTY((user)) function_summary <T *>: public function_summary_base<T>\n   function_summary (symbol_table *symtab, bool ggc = false);\n \n   /* Destructor.  */\n-  virtual ~function_summary ()\n-  {\n-    release ();\n-  }\n-\n-  /* Destruction method that can be called for GGC purpose.  */\n-  using function_summary_base<T>::release;\n-  void release ();\n+  virtual ~function_summary ();\n \n   /* Traverses all summarys with a function F called with\n      ARG as argument.  */\n@@ -237,20 +228,14 @@ function_summary<T *>::function_summary (symbol_table *symtab, bool ggc):\n }\n \n template <typename T>\n-void\n-function_summary<T *>::release ()\n+function_summary<T *>::~function_summary ()\n {\n-  if (this->m_released)\n-    return;\n-\n   this->unregister_hooks ();\n \n   /* Release all summaries.  */\n   typedef typename hash_map <map_hash, T *>::iterator map_iterator;\n   for (map_iterator it = m_map.begin (); it != m_map.end (); ++it)\n     this->release ((*it).second);\n-\n-  this->m_released = true;\n }\n \n template <typename T>\n@@ -343,14 +328,7 @@ class GTY((user)) fast_function_summary <T *, V>\n   fast_function_summary (symbol_table *symtab);\n \n   /* Destructor.  */\n-  virtual ~fast_function_summary ()\n-  {\n-    release ();\n-  }\n-\n-  /* Destruction method that can be called for GGC purpose.  */\n-  using function_summary_base<T>::release;\n-  void release ();\n+  virtual ~fast_function_summary ();\n \n   /* Traverses all summarys with a function F called with\n      ARG as argument.  */\n@@ -445,22 +423,15 @@ fast_function_summary<T *, V>::fast_function_summary (symbol_table *symtab):\n }\n \n template <typename T, typename V>\n-void\n-fast_function_summary<T *, V>::release ()\n+fast_function_summary<T *, V>::~fast_function_summary ()\n {\n-  if (this->m_released)\n-    return;\n-\n   this->unregister_hooks ();\n \n   /* Release all summaries.  */\n   for (unsigned i = 0; i < m_vector->length (); i++)\n     if ((*m_vector)[i] != NULL)\n       this->release ((*m_vector)[i]);\n-\n   vec_free (m_vector);\n- \n-  this->m_released = true;\n }\n \n template <typename T, typename V>\n@@ -558,7 +529,7 @@ class call_summary_base\n public:\n   /* Default construction takes SYMTAB as an argument.  */\n   call_summary_base (symbol_table *symtab): m_symtab (symtab),\n-  m_initialize_when_cloning (true), m_released (false)\n+  m_initialize_when_cloning (true)\n   {}\n \n   /* Basic implementation of removal operation.  */\n@@ -600,8 +571,6 @@ class call_summary_base\n   cgraph_2edge_hook_list *m_symtab_duplication_hook;\n   /* Initialize summary for an edge that is cloned.  */\n   bool m_initialize_when_cloning;\n-  /* Indicates if the summary is released.  */\n-  bool m_released;\n \n private:\n   /* Return true when the summary uses GGC memory for allocation.  */\n@@ -645,14 +614,7 @@ class GTY((user)) call_summary <T *>: public call_summary_base<T>\n   }\n \n   /* Destructor.  */\n-  virtual ~call_summary ()\n-  {\n-    release ();\n-  }\n-\n-  /* Destruction method that can be called for GGC purpose.  */\n-  using call_summary_base<T>::release;\n-  void release ();\n+  virtual ~call_summary ();\n \n   /* Traverses all summarys with an edge E called with\n      ARG as argument.  */\n@@ -730,20 +692,14 @@ class GTY((user)) call_summary <T *>: public call_summary_base<T>\n };\n \n template <typename T>\n-void\n-call_summary<T *>::release ()\n+call_summary<T *>::~call_summary ()\n {\n-  if (this->m_released)\n-    return;\n-\n   this->unregister_hooks ();\n \n   /* Release all summaries.  */\n   typedef typename hash_map <map_hash, T *>::iterator map_iterator;\n   for (map_iterator it = m_map.begin (); it != m_map.end (); ++it)\n     this->release ((*it).second);\n-\n-  this->m_released = true;\n }\n \n template <typename T>\n@@ -825,14 +781,7 @@ class GTY((user)) fast_call_summary <T *, V>: public call_summary_base<T>\n   }\n \n   /* Destructor.  */\n-  virtual ~fast_call_summary ()\n-  {\n-    release ();\n-  }\n-\n-  /* Destruction method that can be called for GGC purpose.  */\n-  using call_summary_base<T>::release;\n-  void release ();\n+  virtual ~fast_call_summary ();\n \n   /* Traverses all summarys with an edge F called with\n      ARG as argument.  */\n@@ -908,22 +857,15 @@ class GTY((user)) fast_call_summary <T *, V>: public call_summary_base<T>\n };\n \n template <typename T, typename V>\n-void\n-fast_call_summary<T *, V>::release ()\n+fast_call_summary<T *, V>::~fast_call_summary ()\n {\n-  if (this->m_released)\n-    return;\n-\n   this->unregister_hooks ();\n \n   /* Release all summaries.  */\n   for (unsigned i = 0; i < m_vector->length (); i++)\n     if ((*m_vector)[i] != NULL)\n       this->release ((*m_vector)[i]);\n-\n   vec_free (m_vector);\n-\n-  this->m_released = true;\n }\n \n template <typename T, typename V>"}]}