{"sha": "4f99f3d0e5aa2db0879a8719143354d00ba693a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY5OWYzZDBlNWFhMmRiMDg3OWE4NzE5MTQzMzU0ZDAwYmE2OTNhOQ==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2007-09-26T17:04:06Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2007-09-26T17:04:06Z"}, "message": "stl_algo.h: Add return type information to comments.\n\n2007-09-26  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* include/bits/stl_algo.h: Add return type information to comments.\n\t* include/bits/algorithmfwd.h: Formatting.\n\t* testsuite/util/testsuite_hooks.h (NonDefaultConstructible): Move..\n\t* testsuite/util/testsuite_api.h: ...here. Add necessary operators\n\tfor use in testing chapters 25 and 26.\n\t* testsuite/util/testsuite_character.h: Same.\n\n\t* testsuite/25_algorithms/*/requirements/explicit_instantiation/\n\t2.cc, pod.cc: New.\n\n\t* testsuite/26_numerics/accumulate, adjacent_difference, inner_product,\n\tpartial_sum/requirements/explicit_instantiation/2.cc, pod.cc: New.\n\t\n\t* testsuite/26_numerics/numeric_arrays/*: Move contents into\n\ttestsuite/26_numerics.\n\n\t* testsuite/26_numerics/numeric_operations: Same.\n\t\n\t* testsuite/23_containers/*/requirements/explicit_instantiation/2.cc:\n\tAdjust includes from testsuite_eh.h to testsuite_api.h.\n\n\nCo-Authored-By: Chalathip Thumkanon <chalathip@gmail.com>\n\nFrom-SVN: r128822", "tree": {"sha": "24be13c59d5aebac9ae986eef126d8820974d94c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24be13c59d5aebac9ae986eef126d8820974d94c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f99f3d0e5aa2db0879a8719143354d00ba693a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f99f3d0e5aa2db0879a8719143354d00ba693a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f99f3d0e5aa2db0879a8719143354d00ba693a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f99f3d0e5aa2db0879a8719143354d00ba693a9/comments", "author": null, "committer": null, "parents": [{"sha": "01fdb4cf5d52bd94ee85e8eef63279cdc1e46928", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01fdb4cf5d52bd94ee85e8eef63279cdc1e46928", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01fdb4cf5d52bd94ee85e8eef63279cdc1e46928"}], "stats": {"total": 6520, "additions": 6487, "deletions": 33}, "files": [{"sha": "f491bda9dafdc40aec6ebd2b9f20e00dffd0c79c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -1,8 +1,31 @@\n+2007-09-26  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* include/bits/stl_algo.h: Add return type information to comments.\n+\t* include/bits/algorithmfwd.h: Formatting.\n+\t* testsuite/util/testsuite_hooks.h (NonDefaultConstructible): Move..\n+\t* testsuite/util/testsuite_api.h: ...here. Add necessary operators\n+\tfor use in testing chapters 25 and 26.\n+\t* testsuite/util/testsuite_character.h: Same.\n+\n+\t* testsuite/25_algorithms/*/requirements/explicit_instantiation/\n+\t2.cc, pod.cc: New.\n+\n+\t* testsuite/26_numerics/accumulate, adjacent_difference, inner_product,\n+\tpartial_sum/requirements/explicit_instantiation/2.cc, pod.cc: New.\n+\t\n+\t* testsuite/26_numerics/numeric_arrays/*: Move contents into\n+\ttestsuite/26_numerics.\n+\n+\t* testsuite/26_numerics/numeric_operations: Same.\n+\t\n+\t* testsuite/23_containers/*/requirements/explicit_instantiation/2.cc:\n+\tAdjust includes from testsuite_eh.h to testsuite_api.h.\n+\n 2007-09-25  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* testsuite/lib/libstdc++.exp (check_v3_target_fileio): Test lseek.\n \n-2007-09-17  Benjamin Kosnik  <bkoz@redhat.com>\n+2007-09-18  Benjamin Kosnik  <bkoz@redhat.com>\n \t    Chalathip Thumkanon  <chalathip@gmail.com>\n \n \tPR libstdc++/32819"}, {"sha": "0b61864759c869fa4bbbc16025762f0087478998", "filename": "libstdc++-v3/include/bits/algorithmfwd.h", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Falgorithmfwd.h?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -23,7 +23,6 @@\n  *  You should not attempt to use it directly.\n  */\n \n-\n /*\n   adjacent_find\n   binary_search\n@@ -85,7 +84,6 @@\n   sort_heap\n   stable_partition\n   stable_sort\n-  stable_sort\n   swap\n   swap_ranges\n   transform\n@@ -121,7 +119,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   template<typename _BIter1, typename _BIter2>\n     _BIter2\n-    copy_backward (_BIter1, _BIter1, _BIter2);\n+    copy_backward(_BIter1, _BIter1, _BIter2);\n \n   // count\n   // count_if\n@@ -310,7 +308,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   template<typename _FIter, typename _OIter>\n     _OIter \n-    rotate_copy (_FIter, _FIter, _FIter, _OIter);\n+    rotate_copy(_FIter, _FIter, _FIter, _OIter);\n \n   // search\n   // search_n\n@@ -333,11 +331,11 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n   template<typename _Tp> \n     void \n-    swap(_Tp&, _Tp& b);\n+    swap(_Tp&, _Tp&);\n \n   template<typename _FIter1, typename _FIter2>\n     _FIter2 \n-    swap_ranges(_FIter1 first1, _FIter1, _FIter2);\n+    swap_ranges(_FIter1, _FIter1, _FIter2);\n \n   // transform\n \n@@ -419,8 +417,15 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_P)\n     void \n     generate(_FIter, _FIter, _Generator);\n \n+/*\n+  XXX NB: return type different from ISO C++.\n+  template<typename _OIter, typename _Size, typename _Tp>\n+    void\n+    generate_n(_OIter, _Size, _Generator);\n+*/\n+\n   template<typename _OIter, typename _Size, typename _Generator>\n-    void \n+    _OIter\n     generate_n(_OIter, _Size, _Generator);\n \n   template<typename _IIter1, typename _IIter2>"}, {"sha": "561609d6037f760d35a2c13a80db37bcf28b7a78", "filename": "libstdc++-v3/include/bits/stl_algo.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algo.h?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -4248,7 +4248,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_P)\n    *         sequence.\n    *  @param  first  A forward iterator.\n    *  @param  last   A forward iterator.\n-   *  @param  gen    A function object taking no arguments.\n+   *  @param  gen    A function object taking no arguments and returning\n+   *                 std::iterator_traits<_ForwardIterator>::value_type\n    *  @return   generate() returns no value.\n    *\n    *  Performs the assignment @c *i = @p gen() for each @c i in the range\n@@ -4274,7 +4275,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_P)\n    *         sequence.\n    *  @param  first  A forward iterator.\n    *  @param  n      The length of the sequence.\n-   *  @param  gen    A function object taking no arguments.\n+   *  @param  gen    A function object taking no arguments and returning\n+   *                 std::iterator_traits<_ForwardIterator>::value_type\n    *  @return   The end of the sequence, @p first+n\n    *\n    *  Performs the assignment @c *i = @p gen() for each @c i in the range"}, {"sha": "697776e973dfeeba7c9831452a46616a2ec8ac63", "filename": "libstdc++-v3/testsuite/23_containers/deque/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -29,6 +29,7 @@\n \n #include <deque>\n #include <testsuite_hooks.h>\n+#include <testsuite_api.h>\n \n // { dg-do compile }\n "}, {"sha": "9c052d8d480131f37ea4119fc9edaf7bda02d386", "filename": "libstdc++-v3/testsuite/23_containers/list/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -29,6 +29,7 @@\n \n #include <list>\n #include <testsuite_hooks.h>\n+#include <testsuite_api.h>\n \n // { dg-do compile }\n "}, {"sha": "5640653b3e1ab70ba1b0879273a9ad70833dd154", "filename": "libstdc++-v3/testsuite/23_containers/map/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -29,6 +29,7 @@\n \n #include <map>\n #include <testsuite_hooks.h>\n+#include <testsuite_api.h>\n \n // { dg-do compile }\n "}, {"sha": "2a624a5fce328e65c947e59a28868599778ad47d", "filename": "libstdc++-v3/testsuite/23_containers/multimap/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -29,6 +29,7 @@\n \n #include <map>\n #include <testsuite_hooks.h>\n+#include <testsuite_api.h>\n \n // { dg-do compile }\n "}, {"sha": "043d760acbe6176928993e750bb65d29e7826071", "filename": "libstdc++-v3/testsuite/23_containers/multiset/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -29,6 +29,7 @@\n \n #include <set>\n #include <testsuite_hooks.h>\n+#include <testsuite_api.h>\n \n // { dg-do compile }\n "}, {"sha": "510e0b3d474d2095b0d500c0572885f36c740046", "filename": "libstdc++-v3/testsuite/23_containers/set/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -29,6 +29,7 @@\n \n #include <set>\n #include <testsuite_hooks.h>\n+#include <testsuite_api.h>\n \n // { dg-do compile }\n "}, {"sha": "4bc1c79c066e1651c064e6bebc9c4e4aedd3ad61", "filename": "libstdc++-v3/testsuite/23_containers/vector/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fvector%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -29,6 +29,7 @@\n \n #include <vector>\n #include <testsuite_hooks.h>\n+#include <testsuite_api.h>\n \n // { dg-do compile }\n "}, {"sha": "e90c083d801cf11d5ae741e6c897c61f2397c8cd", "filename": "libstdc++-v3/testsuite/25_algorithms/adjacent_find/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fadjacent_find%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fadjacent_find%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fadjacent_find%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type adjacent_find(iterator_type, iterator_type);\n+} "}, {"sha": "5612b7e30a5e38545c7459510e3f472b9a28a549", "filename": "libstdc++-v3/testsuite/25_algorithms/adjacent_find/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fadjacent_find%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fadjacent_find%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fadjacent_find%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type adjacent_find(iterator_type, iterator_type);\n+} "}, {"sha": "3b770a7d9aa91ac16b67f05e82329cda05153a88", "filename": "libstdc++-v3/testsuite/25_algorithms/binary_search/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool binary_search(iterator_type, iterator_type, const value_type&);\n+\n+  template bool binary_search(iterator_type, iterator_type, \n+\t\t\t      const value_type&, compare_type);\n+} "}, {"sha": "d8a40b68f22480d9c81f683885f229bee142d823", "filename": "libstdc++-v3/testsuite/25_algorithms/binary_search/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fbinary_search%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool binary_search(iterator_type, iterator_type, const value_type&);\n+\n+  template bool binary_search(iterator_type, iterator_type, \n+\t\t\t      const value_type&, compare_type);\n+} "}, {"sha": "e4dc282e577897d2fb354f6453865051dc0d5026", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type copy(iterator_type, iterator_type, iterator_type);\n+} "}, {"sha": "f5dda9e3bfd2f93bf1fb4a8c2bda3b91aac2def1", "filename": "libstdc++-v3/testsuite/25_algorithms/copy/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type copy(iterator_type, iterator_type, iterator_type);\n+} "}, {"sha": "d569a07dc1c4ffcb55898e9a55ca7edd0d3f3f25", "filename": "libstdc++-v3/testsuite/25_algorithms/copy_backward/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef unsigned short \tsize_type;\n+\n+  template iterator_type copy_backward(iterator_type, iterator_type, \n+\t\t\t\t       iterator_type);\n+} "}, {"sha": "593bf46c1472edc7664d12cea4c04b964e3b9f2a", "filename": "libstdc++-v3/testsuite/25_algorithms/copy_backward/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcopy_backward%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef unsigned short \tsize_type;\n+\n+  template iterator_type copy_backward(iterator_type, iterator_type, \n+\t\t\t\t       iterator_type);\n+} "}, {"sha": "604ab5341bff4ade05ae3817403a9bd0f9f01727", "filename": "libstdc++-v3/testsuite/25_algorithms/count/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef iterator_traits<iterator_type>::difference_type difference_type;\n+\n+  template difference_type count(iterator_type, iterator_type, \n+\t\t\t\t const value_type&);\n+} "}, {"sha": "90a0133f3b7c7258115eaff341cf9d417f813a08", "filename": "libstdc++-v3/testsuite/25_algorithms/count/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef iterator_traits<iterator_type>::difference_type difference_type;\n+\n+  template difference_type count(iterator_type, iterator_type, \n+\t\t\t\t const value_type&);\n+} "}, {"sha": "f2fbe280f4db4eff475747c2bfe658c30ff918d2", "filename": "libstdc++-v3/testsuite/25_algorithms/count_if/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount_if%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::iterator_traits<iterator_type>::difference_type difference_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template difference_type count_if(iterator_type, iterator_type, predicate_type);\n+} "}, {"sha": "9d9ae79745f2ca350d34c484142c57917b086250", "filename": "libstdc++-v3/testsuite/25_algorithms/count_if/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fcount_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::iterator_traits<iterator_type>::difference_type difference_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template difference_type count_if(iterator_type, iterator_type, predicate_type);\n+} "}, {"sha": "ec35b44d69d164c67445c992fbfcaaf8961852bc", "filename": "libstdc++-v3/testsuite/25_algorithms/equal/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef unsigned short \tsize_type;\n+\n+  //  template void fill_n(iterator_type, size_type, const value_type&);\n+  template iterator_type fill_n(iterator_type, size_type, const value_type&);\n+} "}, {"sha": "bbadf7e9a32a2e5d89dfe87d65498ba68dd35567", "filename": "libstdc++-v3/testsuite/25_algorithms/equal/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef unsigned short \tsize_type;\n+\n+  //  template void fill_n(iterator_type, size_type, const value_type&);\n+  template iterator_type fill_n(iterator_type, size_type, const value_type&);\n+} "}, {"sha": "756891bc947c713d5031fe1a1d8c0f54165faac7", "filename": "libstdc++-v3/testsuite/25_algorithms/equal_range/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,50 @@\n+\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pair<iterator_type, iterator_type> pair_type;\n+  typedef std::less<value_type>\tcompare_type;\n+\n+  template pair_type equal_range(iterator_type, iterator_type, \n+\t\t\t\t const value_type&);\n+\n+  template pair_type equal_range(iterator_type, iterator_type, \n+\t\t\t\t const value_type&, compare_type);\n+} "}, {"sha": "709b3125669263b54149d9e0305727cbbb5066f9", "filename": "libstdc++-v3/testsuite/25_algorithms/equal_range/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fequal_range%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,50 @@\n+\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pair<iterator_type, iterator_type> pair_type;\n+  typedef std::less<value_type>\tcompare_type;\n+\n+  template pair_type equal_range(iterator_type, iterator_type, \n+\t\t\t\t const value_type&);\n+\n+  template pair_type equal_range(iterator_type, iterator_type, \n+\t\t\t\t const value_type&, compare_type);\n+} "}, {"sha": "4b5b872568016e49e49716d4eb7756b2b89a65ef", "filename": "libstdc++-v3/testsuite/25_algorithms/fill/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void fill(iterator_type, iterator_type, const value_type&);\n+} "}, {"sha": "c3650b94354daad9563688b4d5a268492b5c8ecd", "filename": "libstdc++-v3/testsuite/25_algorithms/fill/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void fill(iterator_type, iterator_type, const value_type&);\n+} "}, {"sha": "ec35b44d69d164c67445c992fbfcaaf8961852bc", "filename": "libstdc++-v3/testsuite/25_algorithms/fill_n/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef unsigned short \tsize_type;\n+\n+  //  template void fill_n(iterator_type, size_type, const value_type&);\n+  template iterator_type fill_n(iterator_type, size_type, const value_type&);\n+} "}, {"sha": "bbadf7e9a32a2e5d89dfe87d65498ba68dd35567", "filename": "libstdc++-v3/testsuite/25_algorithms/fill_n/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffill_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef unsigned short \tsize_type;\n+\n+  //  template void fill_n(iterator_type, size_type, const value_type&);\n+  template iterator_type fill_n(iterator_type, size_type, const value_type&);\n+} "}, {"sha": "b7d7e65645feceb5de3d3b7aab57e52d9ad5ffe3", "filename": "libstdc++-v3/testsuite/25_algorithms/find/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type find(iterator_type, iterator_type, const value_type&);\n+} "}, {"sha": "07d8069efdc9f3fab2a65254a836143e84bc9c2c", "filename": "libstdc++-v3/testsuite/25_algorithms/find/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type find(iterator_type, iterator_type, const value_type&);\n+} "}, {"sha": "d0b481894c740d20b21a3616d6c2f5e8efdc2387", "filename": "libstdc++-v3/testsuite/25_algorithms/find_end/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_end%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_end%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_end%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, bool> predicate_type;\n+\n+  template iterator_type find_end(iterator_type, iterator_type,\n+\t\t\t\t  iterator_type, iterator_type);\n+\n+  template iterator_type find_end(iterator_type, iterator_type,\n+\t\t\t\t  iterator_type, iterator_type,\n+\t\t\t\t  predicate_type);\n+} "}, {"sha": "ed7ea1760afdb32b95675f23f7d3b8e45fa64812", "filename": "libstdc++-v3/testsuite/25_algorithms/find_end/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_end%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_end%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_end%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, bool> predicate_type;\n+\n+  template iterator_type find_end(iterator_type, iterator_type,\n+\t\t\t\t  iterator_type, iterator_type);\n+\n+  template iterator_type find_end(iterator_type, iterator_type,\n+\t\t\t\t  iterator_type, iterator_type,\n+\t\t\t\t  predicate_type);\n+} "}, {"sha": "8fb55e7d7932a5bb8f22cae7ca3d71cab752fecb", "filename": "libstdc++-v3/testsuite/25_algorithms/find_first_of/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_first_of%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_first_of%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_first_of%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, bool> predicate_type;\n+\n+  template iterator_type find_first_of(iterator_type, iterator_type,\n+\t\t\t\t       iterator_type, iterator_type);\n+\n+  template iterator_type find_first_of(iterator_type, iterator_type,\n+\t\t\t\t       iterator_type, iterator_type,\n+\t\t\t\t       predicate_type);\n+} "}, {"sha": "bdaaeff147099026bc4bd164b204511ebde5b258", "filename": "libstdc++-v3/testsuite/25_algorithms/find_first_of/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_first_of%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_first_of%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_first_of%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, bool> predicate_type;\n+\n+  template iterator_type find_first_of(iterator_type, iterator_type,\n+\t\t\t\t       iterator_type, iterator_type);\n+\n+  template iterator_type find_first_of(iterator_type, iterator_type,\n+\t\t\t\t       iterator_type, iterator_type,\n+\t\t\t\t       predicate_type);\n+} "}, {"sha": "f2cf218f6c685dc25e5556d1a4f4b02ab4687fdb", "filename": "libstdc++-v3/testsuite/25_algorithms/find_if/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_if%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type find_if(iterator_type, iterator_type, predicate_type);\n+} "}, {"sha": "ed4aa30707d391d9f5ef2962d655bb3fff3df232", "filename": "libstdc++-v3/testsuite/25_algorithms/find_if/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffind_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type find_if(iterator_type, iterator_type, predicate_type);\n+} "}, {"sha": "456b2b4e060ff5be039603cc0c43777c358c1597", "filename": "libstdc++-v3/testsuite/25_algorithms/for_each/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffor_each%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffor_each%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffor_each%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, void> function_type;\n+\n+  template function_type for_each(iterator_type, iterator_type, \n+\t\t\t\t  function_type);\n+} "}, {"sha": "b38dc0bca83af3722b4b11e0d93ba05c815f5c62", "filename": "libstdc++-v3/testsuite/25_algorithms/for_each/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffor_each%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffor_each%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ffor_each%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, void> function_type;\n+\n+  template function_type for_each(iterator_type, iterator_type, \n+\t\t\t\t  function_type);\n+} "}, {"sha": "0fb3707f139a351e34e46bce2eaf1dc610338b0b", "filename": "libstdc++-v3/testsuite/25_algorithms/generate/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+  using __gnu_test::void_function;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef void_function<value_type> generator_type;\n+\n+  template void generate(iterator_type, iterator_type, generator_type);\n+} "}, {"sha": "62d2a511c2688711a9a7973c25bd78204c008a4d", "filename": "libstdc++-v3/testsuite/25_algorithms/generate/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+  using __gnu_test::void_function;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef void_function<value_type> generator_type;\n+\n+  template void generate(iterator_type, iterator_type, generator_type);\n+} "}, {"sha": "2cc64b72fdd2aa09ad17124514c89efaa3bad267", "filename": "libstdc++-v3/testsuite/25_algorithms/generate_n/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+  using __gnu_test::void_function;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef unsigned short \tsize_type;\n+  typedef void_function<value_type> generator_type;\n+\n+  template iterator_type generate_n(iterator_type, size_type, generator_type);\n+} "}, {"sha": "b8da1e9306a598120674f42c79ef9d62485c3653", "filename": "libstdc++-v3/testsuite/25_algorithms/generate_n/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fgenerate_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+  using __gnu_test::void_function;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef unsigned short \tsize_type;\n+  typedef void_function<value_type> generator_type;\n+\n+  template iterator_type generate_n(iterator_type, size_type, generator_type);\n+} "}, {"sha": "63f6d95d23a73db41046d6748184d5703ae52306", "filename": "libstdc++-v3/testsuite/25_algorithms/includes/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fincludes%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fincludes%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fincludes%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool includes(iterator_type, iterator_type, iterator_type,\n+\t\t\t iterator_type);\n+\n+  template bool includes(iterator_type, iterator_type, iterator_type,\n+\t\t\t iterator_type, compare_type);\n+} "}, {"sha": "1319637850e60e67f3cb38b21e1303d239a75b37", "filename": "libstdc++-v3/testsuite/25_algorithms/includes/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fincludes%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fincludes%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fincludes%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool includes(iterator_type, iterator_type, iterator_type,\n+\t\t\t iterator_type);\n+\n+  template bool includes(iterator_type, iterator_type, iterator_type,\n+\t\t\t iterator_type, compare_type);\n+} "}, {"sha": "10656a9c02996d20d75cecae0afc7254baa4a894", "filename": "libstdc++-v3/testsuite/25_algorithms/inplace_merge/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void inplace_merge(iterator_type, iterator_type, iterator_type);\n+\n+  template void inplace_merge(iterator_type, iterator_type, \n+\t\t\t      iterator_type, compare_type);\n+} "}, {"sha": "305f448ae22c9bb063dc6b1aa207e8d65353b029", "filename": "libstdc++-v3/testsuite/25_algorithms/inplace_merge/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Finplace_merge%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void inplace_merge(iterator_type, iterator_type, iterator_type);\n+\n+  template void inplace_merge(iterator_type, iterator_type, \n+\t\t\t      iterator_type, compare_type);\n+} "}, {"sha": "9f8f9829e548de5902e51241f2fd895fd75134f9", "filename": "libstdc++-v3/testsuite/25_algorithms/iter_swap/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fiter_swap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fiter_swap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fiter_swap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void iter_swap(iterator_type, iterator_type);\n+} "}, {"sha": "070df5142ab9c9aa078801f7b69873ffe955b70b", "filename": "libstdc++-v3/testsuite/25_algorithms/iter_swap/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fiter_swap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fiter_swap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fiter_swap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void iter_swap(iterator_type, iterator_type);\n+} "}, {"sha": "8a868ecb08bb8d706da7dd6cfaa15ce196d83454", "filename": "libstdc++-v3/testsuite/25_algorithms/lexicographical_compare/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool lexicographical_compare(iterator_type, iterator_type,\n+\t\t\t\t\titerator_type, iterator_type);\n+\n+  template bool lexicographical_compare(iterator_type, iterator_type,\n+\t\t\t\t\titerator_type, iterator_type,\n+\t\t\t\t\tcompare_type);\n+} "}, {"sha": "69598b807fed713ebfd447089e150ab444aa6d80", "filename": "libstdc++-v3/testsuite/25_algorithms/lexicographical_compare/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flexicographical_compare%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool lexicographical_compare(iterator_type, iterator_type,\n+\t\t\t\t\titerator_type, iterator_type);\n+\n+  template bool lexicographical_compare(iterator_type, iterator_type,\n+\t\t\t\t\titerator_type, iterator_type,\n+\t\t\t\t\tcompare_type);\n+} "}, {"sha": "b7b62bd94b2e8036dc29b77b8e56b85fa6e7a63b", "filename": "libstdc++-v3/testsuite/25_algorithms/lower_bound/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type lower_bound(iterator_type, iterator_type, \n+\t\t\t\t     const value_type&);\n+\n+  template iterator_type lower_bound(iterator_type, iterator_type, \n+\t\t\t\t     const value_type&, compare_type);\n+} "}, {"sha": "a3b680727400d7e3e7b1ed7372a361012636eae0", "filename": "libstdc++-v3/testsuite/25_algorithms/lower_bound/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Flower_bound%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type lower_bound(iterator_type, iterator_type, \n+\t\t\t\t     const value_type&);\n+\n+  template iterator_type lower_bound(iterator_type, iterator_type, \n+\t\t\t\t     const value_type&, compare_type);\n+} "}, {"sha": "fa77fc5855cdacba596ce510e0de205fe087d7b7", "filename": "libstdc++-v3/testsuite/25_algorithms/make_heap/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void make_heap(iterator_type, iterator_type);\n+  template void make_heap(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "db682dee28eea71b79299feb7ae3b24c004ce664", "filename": "libstdc++-v3/testsuite/25_algorithms/make_heap/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmake_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void make_heap(iterator_type, iterator_type);\n+  template void make_heap(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "5987e95282a37f84d492c720d380b98db3bf9acf", "filename": "libstdc++-v3/testsuite/25_algorithms/max/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template const value_type& max(const value_type&, const value_type&);\n+\n+  template const value_type& max(const value_type&, const value_type&,\n+\t\t\t\t compare_type);\n+} "}, {"sha": "60b39b97cd63d81508d5eb29a6cfcea9cf2a351f", "filename": "libstdc++-v3/testsuite/25_algorithms/max/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template const value_type& max(const value_type&, const value_type&);\n+\n+  template const value_type& max(const value_type&, const value_type&,\n+\t\t\t\t compare_type);\n+} "}, {"sha": "c8bce1658cbbe89580387c3ec8145024b9c2b65b", "filename": "libstdc++-v3/testsuite/25_algorithms/max_element/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax_element%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax_element%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax_element%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type max_element(iterator_type, iterator_type);\n+\n+  template iterator_type max_element(iterator_type, iterator_type, \n+\t\t\t\t     compare_type);\n+} "}, {"sha": "75a7d481d6535fb8b836e26e12df9a4bccd56bee", "filename": "libstdc++-v3/testsuite/25_algorithms/max_element/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmax_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type max_element(iterator_type, iterator_type);\n+\n+  template iterator_type max_element(iterator_type, iterator_type, \n+\t\t\t\t     compare_type);\n+} "}, {"sha": "3d7c46ad70de388358a34f95fb276160d999f61e", "filename": "libstdc++-v3/testsuite/25_algorithms/merge/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmerge%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmerge%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmerge%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type merge(iterator_type, iterator_type,\n+\t\t\t       iterator_type, iterator_type, iterator_type);\n+\n+  template iterator_type merge(iterator_type, iterator_type, iterator_type,\n+\t\t\t       iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "4338cf1acd95c44487c77d02e0d6ee8536e8e67d", "filename": "libstdc++-v3/testsuite/25_algorithms/merge/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmerge%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmerge%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmerge%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type merge(iterator_type, iterator_type,\n+\t\t\t       iterator_type, iterator_type, iterator_type);\n+\n+  template iterator_type merge(iterator_type, iterator_type, iterator_type,\n+\t\t\t       iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "03d0726229c8dc3fe31ab4aa3ff8f1b150659a8c", "filename": "libstdc++-v3/testsuite/25_algorithms/min/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template const value_type&  min(const value_type&, const value_type&);\n+  template const value_type&  min(const value_type&, const value_type&, \n+\t\t\t\t  compare_type);\n+} "}, {"sha": "1f5b1f07747d781dc392b5b0d3360b8e3de1c727", "filename": "libstdc++-v3/testsuite/25_algorithms/min/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template const value_type&  min(const value_type&, const value_type&);\n+  template const value_type&  min(const value_type&, const value_type&, \n+\t\t\t\t  compare_type);\n+} "}, {"sha": "5ab09b5448a5a04844432c2ea3aac2b4456f9946", "filename": "libstdc++-v3/testsuite/25_algorithms/min_element/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_element%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_element%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_element%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type min_element(iterator_type, iterator_type);\n+\n+  template iterator_type min_element(iterator_type, iterator_type, \n+\t\t\t\t     compare_type);\n+} "}, {"sha": "cab39f13c29e22c9c78f907da16a2ec808dcd866", "filename": "libstdc++-v3/testsuite/25_algorithms/min_element/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fmin_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type min_element(iterator_type, iterator_type);\n+\n+  template iterator_type min_element(iterator_type, iterator_type, \n+\t\t\t\t     compare_type);\n+} "}, {"sha": "c89eba09f087c9aec6259e90aee2dbfaa1cf5ab6", "filename": "libstdc++-v3/testsuite/25_algorithms/next_permutation/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool next_permutation(iterator_type, iterator_type);\n+  template bool next_permutation(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "f46999a1bfc58d578712ba3fb42a96f187f21aa6", "filename": "libstdc++-v3/testsuite/25_algorithms/next_permutation/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnext_permutation%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool next_permutation(iterator_type, iterator_type);\n+  template bool next_permutation(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "0d5a7efa12af73897c20cd7eb62d799f7e67eefa", "filename": "libstdc++-v3/testsuite/25_algorithms/nth_element/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void nth_element(iterator_type, iterator_type, iterator_type);\n+  template void nth_element(iterator_type, iterator_type, iterator_type,\n+\t\t\t    compare_type);\n+} "}, {"sha": "5a98b8936feab560272927c2c56b95acb1d4ac11", "filename": "libstdc++-v3/testsuite/25_algorithms/nth_element/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fnth_element%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void nth_element(iterator_type, iterator_type, iterator_type);\n+  template void nth_element(iterator_type, iterator_type, iterator_type,\n+\t\t\t    compare_type);\n+} "}, {"sha": "f2f3f7eec2952dc24c56ed818e69ae888f722c36", "filename": "libstdc++-v3/testsuite/25_algorithms/partial_sort/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void partial_sort(iterator_type, iterator_type, iterator_type);\n+  template void partial_sort(iterator_type, iterator_type, iterator_type, \n+\t\t\t     compare_type);\n+} "}, {"sha": "fbc92766f2a6e9bb0bfcb4034c4c16c43cdeace5", "filename": "libstdc++-v3/testsuite/25_algorithms/partial_sort/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void partial_sort(iterator_type, iterator_type, iterator_type);\n+  template void partial_sort(iterator_type, iterator_type, iterator_type, \n+\t\t\t     compare_type);\n+} "}, {"sha": "8a962ff5482c27b9142fb404329b693e1b63fc6b", "filename": "libstdc++-v3/testsuite/25_algorithms/partial_sort_copy/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type partial_sort_copy(iterator_type, iterator_type,\n+\t\t\t\t\t   iterator_type, iterator_type);\n+\n+  template iterator_type partial_sort_copy(iterator_type, iterator_type,\n+\t\t\t\t\t   iterator_type, iterator_type,\n+\t\t\t\t\t   compare_type);\n+} "}, {"sha": "d8d45093f05145a9cf8f70c1440bac9746a97b68", "filename": "libstdc++-v3/testsuite/25_algorithms/partial_sort_copy/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartial_sort_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type partial_sort_copy(iterator_type, iterator_type,\n+\t\t\t\t\t   iterator_type, iterator_type);\n+\n+  template iterator_type partial_sort_copy(iterator_type, iterator_type,\n+\t\t\t\t\t   iterator_type, iterator_type,\n+\t\t\t\t\t   compare_type);\n+} "}, {"sha": "231411d5129b1e526ddff4b0de4cf02113a95532", "filename": "libstdc++-v3/testsuite/25_algorithms/partition/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type partition(iterator_type, iterator_type,\n+\t\t\t\t   predicate_type);\n+} "}, {"sha": "e07c763e31858a5467ae56ad3bc58a8844eefe16", "filename": "libstdc++-v3/testsuite/25_algorithms/partition/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpartition%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type partition(iterator_type, iterator_type,\n+\t\t\t\t   predicate_type);\n+} "}, {"sha": "06a7d0dcb40cc2a378b5ae12a4b39cd9a370a7b5", "filename": "libstdc++-v3/testsuite/25_algorithms/pop_heap/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpop_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpop_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpop_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void pop_heap(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "28ca9f3cfe851db47f4a9adf4a020b9f7160e080", "filename": "libstdc++-v3/testsuite/25_algorithms/pop_heap/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpop_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpop_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpop_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void pop_heap(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "6a88861864212d1188e808c3ce3e0c254ef82545", "filename": "libstdc++-v3/testsuite/25_algorithms/prev_permutation/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool prev_permutation(iterator_type, iterator_type);\n+  template bool prev_permutation(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "6f0dcec2e10a85bb3da8d64b2f3cea6332c6264a", "filename": "libstdc++-v3/testsuite/25_algorithms/prev_permutation/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fprev_permutation%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template bool prev_permutation(iterator_type, iterator_type);\n+  template bool prev_permutation(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "5e6004233043b3958f28535fea359f1441ffae77", "filename": "libstdc++-v3/testsuite/25_algorithms/push_heap/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpush_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpush_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpush_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void push_heap(iterator_type, iterator_type);\n+  template void push_heap(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "2dbec8c4216cfd2aa0eb7e978d1cee5d54757134", "filename": "libstdc++-v3/testsuite/25_algorithms/push_heap/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpush_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpush_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fpush_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void push_heap(iterator_type, iterator_type);\n+  template void push_heap(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "ad1faf620ccfff9fc664f789f54f5b827aa6a600", "filename": "libstdc++-v3/testsuite/25_algorithms/random_shuffle/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<int, int>  generator_type;\n+\n+  template void random_shuffle(iterator_type, iterator_type);\n+  template void random_shuffle(iterator_type, iterator_type, \n+\t\t\t       generator_type&);\n+} "}, {"sha": "f49204456cd4884cee6082993b3f09e630380fd2", "filename": "libstdc++-v3/testsuite/25_algorithms/random_shuffle/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<int, int>  generator_type;\n+\n+  template void random_shuffle(iterator_type, iterator_type);\n+  template void random_shuffle(iterator_type, iterator_type, \n+\t\t\t       generator_type&);\n+} "}, {"sha": "b6e4a04ee67ef26f7314ea27bd902e883e88a877", "filename": "libstdc++-v3/testsuite/25_algorithms/remove/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type remove(iterator_type, iterator_type, \n+\t\t\t\tconst value_type&);\n+} "}, {"sha": "1bc1bcc4b778408b73659233c2e1132c6b9a89c0", "filename": "libstdc++-v3/testsuite/25_algorithms/remove/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type remove(iterator_type, iterator_type, \n+\t\t\t\tconst value_type&);\n+} "}, {"sha": "214c80dfa92a705cf7c12e4dbe10327527b87cef", "filename": "libstdc++-v3/testsuite/25_algorithms/remove_copy/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type remove_copy(iterator_type, iterator_type, \n+\t\t\t\t     iterator_type, const value_type&);\n+} "}, {"sha": "bd060dab0f574535f416d0f97deb14e2b9c3b263", "filename": "libstdc++-v3/testsuite/25_algorithms/remove_copy/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type remove_copy(iterator_type, iterator_type, \n+\t\t\t\t     iterator_type, const value_type&);\n+} "}, {"sha": "4ac704793d2ad167baa01b8b607e18195214a685", "filename": "libstdc++-v3/testsuite/25_algorithms/remove_copy_if/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy_if%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type remove_copy_if(iterator_type, iterator_type, \n+\t\t\t\t\titerator_type, predicate_type);\n+} "}, {"sha": "5bf77c72e13a288d82c729ce0300e9c2caaa7fd5", "filename": "libstdc++-v3/testsuite/25_algorithms/remove_copy_if/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_copy_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type remove_copy_if(iterator_type, iterator_type, \n+\t\t\t\t\titerator_type, predicate_type);\n+} "}, {"sha": "56e0375d124b2fae7a456ff5f0f95f7da118d525", "filename": "libstdc++-v3/testsuite/25_algorithms/remove_if/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type remove_if(iterator_type, iterator_type, \n+\t\t\t\t   predicate_type);\n+} "}, {"sha": "61c08fe89b48116e75f326085e927cdc595d0e3d", "filename": "libstdc++-v3/testsuite/25_algorithms/remove_if/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fremove_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type remove_if(iterator_type, iterator_type, \n+\t\t\t\t   predicate_type);\n+} "}, {"sha": "834211ee7e960ddc975de1262e1c834723838ae3", "filename": "libstdc++-v3/testsuite/25_algorithms/replace/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void replace(iterator_type, iterator_type, const value_type&,\n+\t\t\tconst value_type&);\n+} "}, {"sha": "15c4f4ab1a42a4dc7b1d637b233e4f30ce71757b", "filename": "libstdc++-v3/testsuite/25_algorithms/replace/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void replace(iterator_type, iterator_type, const value_type&,\n+\t\t\tconst value_type&);\n+} "}, {"sha": "8a8ef3dc185778805da06627841325c9b39af31f", "filename": "libstdc++-v3/testsuite/25_algorithms/replace_copy/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type replace_copy(iterator_type, iterator_type, \n+\t\t\t\t      iterator_type, const value_type&,\n+\t\t\t\t      const value_type&);\n+} "}, {"sha": "869659c095d88f6a462c62afe1b48ec866ec3695", "filename": "libstdc++-v3/testsuite/25_algorithms/replace_copy/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type replace_copy(iterator_type, iterator_type, \n+\t\t\t\t      iterator_type, const value_type&,\n+\t\t\t\t      const value_type&);\n+} "}, {"sha": "d84cb1347890b2b2766a5edb7732a702183821f1", "filename": "libstdc++-v3/testsuite/25_algorithms/replace_copy_if/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy_if%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type replace_copy_if(iterator_type, iterator_type, \n+\t\t\t\t\t iterator_type, predicate_type,\n+\t\t\t\t\t const value_type&);\n+} "}, {"sha": "6cb64619e3bf6cf702d769f89c414b35a21c5dc2", "filename": "libstdc++-v3/testsuite/25_algorithms/replace_copy_if/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_copy_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type replace_copy_if(iterator_type, iterator_type, \n+\t\t\t\t\t iterator_type, predicate_type,\n+\t\t\t\t\t const value_type&);\n+} "}, {"sha": "692caf318c9c2a531e6c8d88fc578b6b7df7c0cc", "filename": "libstdc++-v3/testsuite/25_algorithms/replace_if/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_if%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_if%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template void replace_if(iterator_type, iterator_type, predicate_type,\n+\t\t\t   const value_type&);\n+} "}, {"sha": "7e95210e222b109bf39ef2c7fd2338d9608e8da0", "filename": "libstdc++-v3/testsuite/25_algorithms/replace_if/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freplace_if%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template void replace_if(iterator_type, iterator_type, predicate_type,\n+\t\t\t   const value_type&);\n+} "}, {"sha": "8f774a81366b236a5cc68c53b0669af4a32cb836", "filename": "libstdc++-v3/testsuite/25_algorithms/reverse/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void reverse(iterator_type, iterator_type);\n+} "}, {"sha": "94b6eadde2440d2e6ad7a28583baf5ec85900c78", "filename": "libstdc++-v3/testsuite/25_algorithms/reverse/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void reverse(iterator_type, iterator_type);\n+} "}, {"sha": "0b88c90bdbe58324abd9b2ee9b5697a4deda1a39", "filename": "libstdc++-v3/testsuite/25_algorithms/reverse_copy/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse_copy%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse_copy%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse_copy%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type reverse_copy(iterator_type, iterator_type,\n+\t\t\t\t      iterator_type);\n+} "}, {"sha": "5887ca93a21e3dc3607cef77b0a2206f417b7abe", "filename": "libstdc++-v3/testsuite/25_algorithms/reverse_copy/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse_copy%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse_copy%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Freverse_copy%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type reverse_copy(iterator_type, iterator_type,\n+\t\t\t\t      iterator_type);\n+} "}, {"sha": "ef94a5a905ba8936d3b2372be51174be2406cac0", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void rotate(iterator_type, iterator_type, iterator_type);\n+} "}, {"sha": "2994f93b56577c3907e835c3e593bc8f9df641b1", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template void rotate(iterator_type, iterator_type, iterator_type);\n+} "}, {"sha": "716b52b5db95017f3ca3c6449f016c52c19086ef", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate_copy/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type rotate_copy(iterator_type, iterator_type, \n+\t\t\t\t     iterator_type, iterator_type);\n+} "}, {"sha": "2d73426fe63b79b78d4a87aa9537f20bafc8ed49", "filename": "libstdc++-v3/testsuite/25_algorithms/rotate_copy/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frotate_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type rotate_copy(iterator_type, iterator_type, \n+\t\t\t\t     iterator_type, iterator_type);\n+} "}, {"sha": "2f526e840f3222f3faca1c39612c4392a8ff309a", "filename": "libstdc++-v3/testsuite/25_algorithms/search/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, bool> predicate_type;\n+\n+  template iterator_type search(iterator_type, iterator_type, \n+\t\t\t\titerator_type, iterator_type);\n+\n+  template iterator_type search(iterator_type, iterator_type, \n+\t\t\t\titerator_type, iterator_type, predicate_type);\n+} "}, {"sha": "431cfc1fec92449bb143d4730a20b7665e286371", "filename": "libstdc++-v3/testsuite/25_algorithms/search/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, bool> predicate_type;\n+\n+  template iterator_type search(iterator_type, iterator_type, \n+\t\t\t\titerator_type, iterator_type);\n+\n+  template iterator_type search(iterator_type, iterator_type, \n+\t\t\t\titerator_type, iterator_type, predicate_type);\n+} "}, {"sha": "1338df98edaadfead840f608b2b7d8e01fc67290", "filename": "libstdc++-v3/testsuite/25_algorithms/search_n/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::size_t \t\tsize_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, bool> predicate_type;\n+\n+  template iterator_type search_n(iterator_type, iterator_type, \n+\t\t\t\t  size_type, const value_type&);\n+\n+  template iterator_type search_n(iterator_type, iterator_type, \n+\t\t\t\t  size_type, const value_type&, predicate_type);\n+} "}, {"sha": "93c31798a81dee412a377508ed1b006236a94f68", "filename": "libstdc++-v3/testsuite/25_algorithms/search_n/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsearch_n%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,49 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::size_t \t\tsize_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, bool> predicate_type;\n+\n+  template iterator_type search_n(iterator_type, iterator_type, \n+\t\t\t\t  size_type, const value_type&);\n+\n+  template iterator_type search_n(iterator_type, iterator_type, \n+\t\t\t\t  size_type, const value_type&, predicate_type);\n+} "}, {"sha": "238cfbc9561c6747752f87b88ed8370efe111c3f", "filename": "libstdc++-v3/testsuite/25_algorithms/set_difference/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type set_difference(iterator_type, iterator_type, \n+\t\t\t\t\titerator_type,\n+\t\t\t\t\titerator_type, iterator_type);\n+\n+  template iterator_type set_difference(iterator_type, iterator_type, \n+\t\t\t\t\titerator_type, iterator_type, \n+\t\t\t\t\titerator_type, compare_type);\n+} "}, {"sha": "96ee6805fcf5c10836513393d110a112991e8097", "filename": "libstdc++-v3/testsuite/25_algorithms/set_difference/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type set_difference(iterator_type, iterator_type, \n+\t\t\t\t\titerator_type,\n+\t\t\t\t\titerator_type, iterator_type);\n+\n+  template iterator_type set_difference(iterator_type, iterator_type, \n+\t\t\t\t\titerator_type, iterator_type, \n+\t\t\t\t\titerator_type, compare_type);\n+} "}, {"sha": "95cd2bcb38ca08d550d9ebb52ac90f90cde6e389", "filename": "libstdc++-v3/testsuite/25_algorithms/set_intersection/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_intersection%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_intersection%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_intersection%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type set_intersection(iterator_type, iterator_type, \n+\t\t\t\t\t  iterator_type,\n+\t\t\t\t\t  iterator_type, iterator_type);\n+\n+  template iterator_type set_intersection(iterator_type, iterator_type, \n+\t\t\t\t\t  iterator_type, iterator_type, \n+\t\t\t\t\t  iterator_type, compare_type);\n+} "}, {"sha": "f877b65d9ff4bb66fd9603aa960015c6298024de", "filename": "libstdc++-v3/testsuite/25_algorithms/set_intersection/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_intersection%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_intersection%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_intersection%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type set_intersection(iterator_type, iterator_type, \n+\t\t\t\t\t  iterator_type,\n+\t\t\t\t\t  iterator_type, iterator_type);\n+\n+  template iterator_type set_intersection(iterator_type, iterator_type, \n+\t\t\t\t\t  iterator_type, iterator_type, \n+\t\t\t\t\t  iterator_type, compare_type);\n+} "}, {"sha": "3df16097c71168904e689de75087ef67d8662759", "filename": "libstdc++-v3/testsuite/25_algorithms/set_symmetric_difference/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_symmetric_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_symmetric_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_symmetric_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type set_symmetric_difference(iterator_type, iterator_type,\n+\t\t\t\t\t\t  iterator_type, iterator_type,\n+\t\t\t\t\t\t  iterator_type);\n+\n+  template iterator_type set_symmetric_difference(iterator_type, iterator_type,\n+\t\t\t\t\t\t  iterator_type, iterator_type,\n+\t\t\t\t\t\t  iterator_type, compare_type);\n+} "}, {"sha": "c2298592d44f16578aa96d8992906fb734346e46", "filename": "libstdc++-v3/testsuite/25_algorithms/set_symmetric_difference/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_symmetric_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_symmetric_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_symmetric_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type set_symmetric_difference(iterator_type, iterator_type,\n+\t\t\t\t\t\t  iterator_type, iterator_type,\n+\t\t\t\t\t\t  iterator_type);\n+\n+  template iterator_type set_symmetric_difference(iterator_type, iterator_type,\n+\t\t\t\t\t\t  iterator_type, iterator_type,\n+\t\t\t\t\t\t  iterator_type, compare_type);\n+} "}, {"sha": "d89ddeb26a3478908c5b4d32b3befbe2cdb6b253", "filename": "libstdc++-v3/testsuite/25_algorithms/set_union/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_union%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_union%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_union%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type set_union(iterator_type, iterator_type, iterator_type,\n+\t\t\t\t   iterator_type, iterator_type);\n+\n+  template iterator_type set_union(iterator_type, iterator_type, iterator_type,\n+\t\t\t\t   iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "815943c35417d4fb9600ba111819f2d2a4e140b7", "filename": "libstdc++-v3/testsuite/25_algorithms/set_union/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_union%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_union%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fset_union%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type set_union(iterator_type, iterator_type, iterator_type,\n+\t\t\t\t   iterator_type, iterator_type);\n+\n+  template iterator_type set_union(iterator_type, iterator_type, iterator_type,\n+\t\t\t\t   iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "6142cf52ae03e6fd129b1ac6d0dde8d724f3e400", "filename": "libstdc++-v3/testsuite/25_algorithms/sort/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> \tcompare_type;\n+\n+  template void sort(iterator_type, iterator_type);\n+  template void sort(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "ab354d000e834a20c35047fa7ca592bcc95bd82c", "filename": "libstdc++-v3/testsuite/25_algorithms/sort/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> \tcompare_type;\n+\n+  template void sort(iterator_type, iterator_type);\n+  template void sort(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "f8c686f0e032e28342626e43dc07c0a49a3355f4", "filename": "libstdc++-v3/testsuite/25_algorithms/sort_heap/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void sort_heap(iterator_type, iterator_type);\n+  template void sort_heap(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "62a1f285000d2bed05d7014d27e92125fdb401b8", "filename": "libstdc++-v3/testsuite/25_algorithms/sort_heap/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fsort_heap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void sort_heap(iterator_type, iterator_type);\n+  template void sort_heap(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "2eb8dbc894971141ca84c2df9c6b3eafb08ea491", "filename": "libstdc++-v3/testsuite/25_algorithms/stable_partition/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type stable_partition(iterator_type, iterator_type, predicate_type);\n+} "}, {"sha": "c72b74ecfdaa147c4ef95b9b0eabebd2da40e334", "filename": "libstdc++-v3/testsuite/25_algorithms/stable_partition/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_partition%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, bool> predicate_type;\n+\n+  template iterator_type stable_partition(iterator_type, iterator_type, predicate_type);\n+} "}, {"sha": "f08c7b265912eb4a990f7af1c25860cf3118f628", "filename": "libstdc++-v3/testsuite/25_algorithms/stable_sort/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void stable_sort(iterator_type, iterator_type);\n+  template void stable_sort(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "0e79ea26c10342604a9794c23362462067dbdcda", "filename": "libstdc++-v3/testsuite/25_algorithms/stable_sort/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fstable_sort%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template void stable_sort(iterator_type, iterator_type);\n+  template void stable_sort(iterator_type, iterator_type, compare_type);\n+} "}, {"sha": "1a2ae902fe3abf8bd603093f7bee92562385d46c", "filename": "libstdc++-v3/testsuite/25_algorithms/swap/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+\n+  template void swap(value_type&, value_type&);\n+} "}, {"sha": "6bd282bdc6f69ed3187a3450d192189153f4353a", "filename": "libstdc++-v3/testsuite/25_algorithms/swap/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+\n+  template void swap(value_type&, value_type&);\n+} "}, {"sha": "4ead40aeb7a95c801153c361d449274a9b5c81eb", "filename": "libstdc++-v3/testsuite/25_algorithms/swap_ranges/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type swap_ranges(iterator_type, iterator_type, \n+\t\t\t\t     iterator_type);\n+} "}, {"sha": "f4ca2fa83275d8cf5b86c5b2aa8b451aa5a797bb", "filename": "libstdc++-v3/testsuite/25_algorithms/swap_ranges/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fswap_ranges%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template iterator_type swap_ranges(iterator_type, iterator_type, \n+\t\t\t\t     iterator_type);\n+} "}, {"sha": "0262c5c128533fcf3cf299539d848586a2678fce", "filename": "libstdc++-v3/testsuite/25_algorithms/transform/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ftransform%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ftransform%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ftransform%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, value_type> operator1_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, value_type> operator2_type;\n+\n+  template iterator_type transform(iterator_type, iterator_type, iterator_type,\n+\t\t\t\t   operator1_type);\n+  template iterator_type transform(iterator_type, iterator_type, iterator_type,\n+\t\t\t\t   iterator_type, operator2_type);\n+} "}, {"sha": "d8ec04317bf35ea0298d40b43d4994615b342661", "filename": "libstdc++-v3/testsuite/25_algorithms/transform/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ftransform%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ftransform%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Ftransform%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,48 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::pointer_to_unary_function<value_type, value_type> operator1_type;\n+  typedef std::pointer_to_binary_function<value_type, value_type, value_type> operator2_type;\n+\n+  template iterator_type transform(iterator_type, iterator_type, iterator_type,\n+\t\t\t\t   operator1_type);\n+  template iterator_type transform(iterator_type, iterator_type, iterator_type,\n+\t\t\t\t   iterator_type, operator2_type);\n+} "}, {"sha": "ccc227869f1995b581cf78b697bcf774fb908633", "filename": "libstdc++-v3/testsuite/25_algorithms/unique/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> \tpredicate_type;\n+\n+  template iterator_type unique(iterator_type, iterator_type);\n+  template iterator_type unique(iterator_type, iterator_type, predicate_type);\n+} "}, {"sha": "2eb368a6a59e1b58f498092ce269a2499409cf81", "filename": "libstdc++-v3/testsuite/25_algorithms/unique/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> \tpredicate_type;\n+\n+  template iterator_type unique(iterator_type, iterator_type);\n+  template iterator_type unique(iterator_type, iterator_type, predicate_type);\n+} "}, {"sha": "3f45d541a0849552f8817fe20ebd4efd1d241ebc", "filename": "libstdc++-v3/testsuite/25_algorithms/unique_copy/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\tin_iterator_type;\n+  typedef value_type* \t\tout_iterator_type;\n+  typedef std::less<value_type> predicate_type;\n+\n+  template out_iterator_type unique_copy(in_iterator_type, in_iterator_type, out_iterator_type);\n+  template out_iterator_type unique_copy(in_iterator_type, in_iterator_type, out_iterator_type, predicate_type);\n+} "}, {"sha": "ef1e41ff058c23e760973a255e6336a61163cfb7", "filename": "libstdc++-v3/testsuite/25_algorithms/unique_copy/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Funique_copy%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\tin_iterator_type;\n+  typedef value_type* \t\tout_iterator_type;\n+  typedef std::less<value_type> predicate_type;\n+\n+  template out_iterator_type unique_copy(in_iterator_type, in_iterator_type, out_iterator_type);\n+  template out_iterator_type unique_copy(in_iterator_type, in_iterator_type, out_iterator_type, predicate_type);\n+} "}, {"sha": "192962c49136426fd95674f9d38c458d39b2d644", "filename": "libstdc++-v3/testsuite/25_algorithms/upper_bound/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type upper_bound(iterator_type, iterator_type, \n+\t\t\t\t     const value_type&);\n+  template iterator_type upper_bound(iterator_type, iterator_type, \n+\t\t\t\t     const value_type&, compare_type);\n+} "}, {"sha": "fa1558624603072178e56b1a6d1704d6152d8dde", "filename": "libstdc++-v3/testsuite/25_algorithms/upper_bound/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fupper_bound%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <algorithm>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+  typedef std::less<value_type> compare_type;\n+\n+  template iterator_type upper_bound(iterator_type, iterator_type, \n+\t\t\t\t     const value_type&);\n+  template iterator_type upper_bound(iterator_type, iterator_type, \n+\t\t\t\t     const value_type&, compare_type);\n+} "}, {"sha": "58438b7d261dab585ffb1fdd4e69384a4619da82", "filename": "libstdc++-v3/testsuite/26_numerics/accumulate/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,41 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <numeric>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  typedef __gnu_test::NonDefaultConstructible \tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template value_type accumulate(iterator_type, iterator_type, value_type);\n+} "}, {"sha": "da7e0d9046e5d255871d0ac3e62de1d00e26b20f", "filename": "libstdc++-v3/testsuite/26_numerics/accumulate/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Faccumulate%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,41 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <numeric>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  typedef __gnu_test::pod_int \tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template value_type accumulate(iterator_type, iterator_type, value_type);\n+} "}, {"sha": "5501f3f9fa60084f0caa686648f1bfa3d74ec91d", "filename": "libstdc++-v3/testsuite/26_numerics/adjacent_difference/1.cc", "status": "renamed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2F1.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -36,9 +36,6 @@ test01()\n \n   std::adjacent_difference(A, A + N, D);\n   VERIFY( std::equal(D, D + N, B) );\n-  \n-  std::partial_sum(D, D + N, D);\n-  VERIFY( std::equal(D, D + N, A) );\n }\n \n int", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_operations/sum_diff.cc"}, {"sha": "d304e49e2574c79d5b6cac5f6a65c67698af2e61", "filename": "libstdc++-v3/testsuite/26_numerics/adjacent_difference/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <numeric>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\tinput_iterator;\n+  typedef value_type* \t\toutput_iterator;\n+\n+  template \n+  output_iterator adjacent_difference(input_iterator, input_iterator, output_iterator);\n+} "}, {"sha": "914afcda992899a6444bd986981320e59fbaa2f2", "filename": "libstdc++-v3/testsuite/26_numerics/adjacent_difference/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fadjacent_difference%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,45 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <numeric>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\tinput_iterator;\n+  typedef value_type* \t\toutput_iterator;\n+\n+  template \n+  output_iterator adjacent_difference(input_iterator, input_iterator, output_iterator);\n+} "}, {"sha": "56e2edd55e562820a4415e7c8fc776297c1f9ba2", "filename": "libstdc++-v3/testsuite/26_numerics/inner_product/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <numeric>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template value_type inner_product(iterator_type, iterator_type, iterator_type, value_type);\n+} "}, {"sha": "da72492e4cdf853a9f7237c7d4ca7a4e0f1ea8e7", "filename": "libstdc++-v3/testsuite/26_numerics/inner_product/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Finner_product%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,43 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <numeric>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\titerator_type;\n+\n+  template value_type inner_product(iterator_type, iterator_type, iterator_type, value_type);\n+} "}, {"sha": "ac336916656696d0aeb44af1d9279fd4e7e712a4", "filename": "libstdc++-v3/testsuite/26_numerics/partial_sum/1.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2F1.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,46 @@\n+// Copyright (C) 2001, 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 26.4.3 [lib.partial.sum]\n+// 26.4.4 [lib.adjacent.difference]\n+\n+#include <algorithm>\n+#include <numeric>\n+#include <testsuite_hooks.h>\n+\n+int A[] = {1, 4, 9, 16, 25, 36, 49, 64, 81, 100};\n+int B[] = {1, 3, 5, 7, 9, 11, 13, 15, 17, 19};\n+const int N = sizeof(A) / sizeof(int);\n+\n+void\n+test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+\n+  int D[N];\n+\n+  std::partial_sum(B, B + N, D);\n+  VERIFY( std::equal(D, D + N, A) );\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "0887e17b35be7e03e28767e660681bdbdbf5f16d", "filename": "libstdc++-v3/testsuite/26_numerics/partial_sum/requirements/explicit_instantiation/2.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <numeric>\n+#include <testsuite_api.h>\n+\n+namespace std\n+{\n+  using __gnu_test::NonDefaultConstructible;\n+\n+  typedef NonDefaultConstructible \t\tvalue_type;\n+  typedef value_type* \t\tinput_iterator;\n+  typedef value_type* \t\toutput_iterator;\n+\n+  template output_iterator partial_sum(input_iterator, input_iterator, output_iterator);\n+} "}, {"sha": "381eb89307a30641ea08a4cc5848d296340c36e7", "filename": "libstdc++-v3/testsuite/26_numerics/partial_sum/requirements/explicit_instantiation/pod.cc", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fpartial_sum%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -0,0 +1,44 @@\n+// { dg-do compile }\n+\n+// 2007-09-20 Benjamin Kosnik <bkoz@redhat.com>\n+\n+// Copyright (C) 2007 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+#include <numeric>\n+#include <testsuite_character.h>\n+\n+namespace std\n+{\n+  using __gnu_test::pod_int;\n+\n+  typedef pod_int \t\tvalue_type;\n+  typedef value_type* \t\tinput_iterator;\n+  typedef value_type* \t\toutput_iterator;\n+\n+  template output_iterator partial_sum(input_iterator, input_iterator, output_iterator);\n+} "}, {"sha": "d7ad877d9d7158a2d9899b709bd2d2c42f5da8dd", "filename": "libstdc++-v3/testsuite/26_numerics/slice/1.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice%2F1.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/slice.cc"}, {"sha": "34888be44e90770c8e658c21b05c2175e02a970c", "filename": "libstdc++-v3/testsuite/26_numerics/slice_array/array_assignment.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Farray_assignment.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/slice_array/array_assignment.cc"}, {"sha": "09dfed627455d129584d064fb4b7f587438a521a", "filename": "libstdc++-v3/testsuite/26_numerics/slice_array/requirements/explicit_instantiation.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Frequirements%2Fexplicit_instantiation.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/slice_array/requirements/explicit_instantiation.cc"}, {"sha": "15295511a1a84fa51dcab917bc0e68630a4b40b4", "filename": "libstdc++-v3/testsuite/26_numerics/slice_array/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fslice_array%2Frequirements%2Ftypedefs.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/slice_array/requirements/typedefs.cc"}, {"sha": "7c208f4b100c9751f61f76349201944a515304fe", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/27867.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F27867.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F27867.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F27867.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/27867.cc"}, {"sha": "52f4c714085c0416e81ff4186399db636a8dddb0", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/28277.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F28277.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F28277.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F28277.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/28277.cc"}, {"sha": "c51329221d5fa62bc3d916f77002400cf921f78b", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/30416.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F30416.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F30416.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F30416.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/30416.cc"}, {"sha": "aaacfe7ee59d66d61f0a030b2bcbe453576e5c80", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/33084.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F33084.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F33084.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2F33084.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/33084.cc"}, {"sha": "a69ce65e07952680a9fa9a6f5165cdcf38339efc", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/algo.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Falgo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Falgo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Falgo.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/algo.cc"}, {"sha": "7dbcfbd52287fc226f5c336721180d0b830af4f0", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/binary_closure.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fbinary_closure.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fbinary_closure.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fbinary_closure.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/binary_closure.cc"}, {"sha": "512cbafd3ce9222fe12213010ab3027b14f3b586", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/const_bracket.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fconst_bracket.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fconst_bracket.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fconst_bracket.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/const_bracket.cc"}, {"sha": "9afa93a4b834992934d88384a202a1fbe955ce1e", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/dr543.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr543.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr543.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fdr543.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/dr543.cc"}, {"sha": "735f65f5df75ea6367225ea002d61ee3141bf72e", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/name_lookup.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fname_lookup.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fname_lookup.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fname_lookup.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/name_lookup.cc"}, {"sha": "70ad0b0e7886a6ab40e41a15f664699cae8f149f", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/operators.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Foperators.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Foperators.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Foperators.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/operators.cc"}, {"sha": "d4d5e2830485a0d10d4296208fc185977789221b", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/requirements/explicit_instantiation.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frequirements%2Fexplicit_instantiation.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/requirements/explicit_instantiation.cc"}, {"sha": "a6f28dc41a65a643280aef03900f5a093a7a3781", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/requirements/typedefs.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Frequirements%2Ftypedefs.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/requirements/typedefs.cc"}, {"sha": "4ce22afb31aa99f1d10a0590cb75a55878a63fde", "filename": "libstdc++-v3/testsuite/26_numerics/valarray/subset_assignment.cc", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fsubset_assignment.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fsubset_assignment.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fvalarray%2Fsubset_assignment.cc?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "previous_filename": "libstdc++-v3/testsuite/26_numerics/numeric_arrays/valarray/subset_assignment.cc"}, {"sha": "3cd7c6177f7f460a41abec3a6e24f3b8f78aa3d9", "filename": "libstdc++-v3/testsuite/util/testsuite_api.h", "status": "modified", "additions": 61, "deletions": 2, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_api.h?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -30,8 +30,8 @@\n \n #include <testsuite_hooks.h>\n \n-#ifndef _TESTSUITE_EH\n-#define _TESTSUITE_EH 1\n+#ifndef _TESTSUITE_API\n+#define _TESTSUITE_API 1\n \n namespace __gnu_test\n {\n@@ -77,5 +77,64 @@ namespace __gnu_test\n \t  { VERIFY( false ); }\n       }\n     };\n+\n+  // Testing type requirements for template arguments.\n+  struct NonDefaultConstructible\n+  {\n+    NonDefaultConstructible(int) { }\n+    NonDefaultConstructible(const NonDefaultConstructible&) { }\n+  };\n+ \n+  // See: 20.1.1 Template argument requirements.\n+  inline bool\n+  operator==(const NonDefaultConstructible&, const NonDefaultConstructible&)\n+  { return false; }\n+\n+  inline bool\n+  operator<(const NonDefaultConstructible&, const NonDefaultConstructible&)\n+  { return false; }\n+\n+  // For 26 numeric algorithms requirements, need addable,\n+  // subtractable, multiplicable.\n+  inline NonDefaultConstructible\n+  operator+(const NonDefaultConstructible& lhs, \n+\t    const NonDefaultConstructible& rhs)\n+  { return NonDefaultConstructible(1); }\n+\n+  inline NonDefaultConstructible\n+  operator-(const NonDefaultConstructible& lhs, \n+\t    const NonDefaultConstructible& rhs)\n+  { return NonDefaultConstructible(1); }\n+\n+  inline NonDefaultConstructible\n+  operator*(const NonDefaultConstructible& lhs, \n+\t    const NonDefaultConstructible& rhs)\n+  { return NonDefaultConstructible(1); }\n+\n+  // Like unary_function, but takes no argument. (ie, void).\n+  // Used for generator template parameter.\n+  template<typename _Result>\n+    struct void_function\n+    {\n+      typedef _Result result_type; \n+      \n+      result_type\n+      operator()() const\n+      { \n+\tresult_type r;\n+\treturn r;\n+      }\n+    };\n+\n+  template<>\n+    struct void_function<NonDefaultConstructible>\n+    {\n+      typedef NonDefaultConstructible result_type; \n+      \n+      result_type\n+      operator()() const\n+      { return result_type(2); }\n+    };\n+\n }\n #endif"}, {"sha": "dd33525da6cb1c901cf449536c4beca22875ad9b", "filename": "libstdc++-v3/testsuite/util/testsuite_character.h", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_character.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_character.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_character.h?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -46,6 +46,8 @@ namespace __gnu_test\n     int value;\n   };\n   \n+  // For 20.1 requirements for instantiable type: equality comparable\n+  // and less than comparable.\n   inline bool\n   operator==(const pod_int& lhs, const pod_int& rhs)\n   { return lhs.value == rhs.value; }\n@@ -54,6 +56,29 @@ namespace __gnu_test\n   operator<(const pod_int& lhs, const pod_int& rhs)\n   { return lhs.value < rhs.value; }\n \n+  // For 26 numeric algorithms requirements, need addable,\n+  // subtractable, multiplicable.\n+  inline pod_int\n+  operator+(const pod_int& lhs, const pod_int& rhs)\n+  {\n+    pod_int ret = { lhs.value + rhs.value };\n+    return ret;\n+  }\n+\n+  inline pod_int\n+  operator-(const pod_int& lhs, const pod_int& rhs)\n+  { \n+    pod_int ret = { lhs.value - rhs.value };\n+    return ret;\n+  }\n+\n+  inline pod_int\n+  operator*(const pod_int& lhs, const pod_int& rhs)\n+  { \n+    pod_int ret = { lhs.value * rhs.value };\n+    return ret;\n+  }\n+\n   struct pod_state\n   {\n     unsigned long value;"}, {"sha": "cbd876d61fe1f6c8920e7fd6e60953a9096eb190", "filename": "libstdc++-v3/testsuite/util/testsuite_hooks.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f99f3d0e5aa2db0879a8719143354d00ba693a9/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_hooks.h?ref=4f99f3d0e5aa2db0879a8719143354d00ba693a9", "patch": "@@ -159,24 +159,6 @@ namespace __gnu_test\n   void \n   run_tests_wrapped_env(const char*, const char*, const func_callback&);\n \n-\n-  // For containers (23.1/3).\n-  struct NonDefaultConstructible\n-  {\n-    NonDefaultConstructible(int) { }\n-  };\n- \n-  inline bool\n-  operator==(const NonDefaultConstructible&,\n-\t     const NonDefaultConstructible&)\n-  { return false; }\n-\n-  inline bool\n-  operator<(const NonDefaultConstructible&,\n-\t    const NonDefaultConstructible&)\n-  { return false; }\n-\n-\n   // Counting.\n   struct counter\n   {"}]}