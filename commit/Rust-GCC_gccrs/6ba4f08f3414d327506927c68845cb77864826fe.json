{"sha": "6ba4f08f3414d327506927c68845cb77864826fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJhNGYwOGYzNDE0ZDMyNzUwNjkyN2M2ODg0NWNiNzc4NjQ4MjZmZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2012-03-07T18:55:59Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2012-03-07T18:55:59Z"}, "message": "trans.c (Identifier_to_gnu): Don't unshare initializer.\n\n\t* gcc-interface/trans.c (Identifier_to_gnu): Don't unshare initializer.\n\t(add_decl_expr): Mark external DECLs as used.\n\t* gcc-interface/utils.c (convert) <CONSTRUCTOR>: Copy the vector.\n\nFrom-SVN: r185072", "tree": {"sha": "70d0181abda949ab167190b0c16c3b5c6d0b427a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70d0181abda949ab167190b0c16c3b5c6d0b427a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ba4f08f3414d327506927c68845cb77864826fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba4f08f3414d327506927c68845cb77864826fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ba4f08f3414d327506927c68845cb77864826fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ba4f08f3414d327506927c68845cb77864826fe/comments", "author": null, "committer": null, "parents": [{"sha": "95f2389a7d909045ccbe7475945f823eabf91a03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95f2389a7d909045ccbe7475945f823eabf91a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95f2389a7d909045ccbe7475945f823eabf91a03"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "65fc50a4d3b4711e2a9c35cd31b9ca8b1f6cf167", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba4f08f3414d327506927c68845cb77864826fe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba4f08f3414d327506927c68845cb77864826fe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=6ba4f08f3414d327506927c68845cb77864826fe", "patch": "@@ -1,3 +1,9 @@\n+2012-03-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/trans.c (Identifier_to_gnu): Don't unshare initializer.\n+\t(add_decl_expr): Mark external DECLs as used.\n+\t* gcc-interface/utils.c (convert) <CONSTRUCTOR>: Copy the vector.\n+\n 2012-03-07  Tristan Gingold  <gingold@adacore.com>\n \n \t* s-ransee-vms.adb: New file."}, {"sha": "860e0dc6a983984c725adc18509bec9a3c73c429", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba4f08f3414d327506927c68845cb77864826fe/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba4f08f3414d327506927c68845cb77864826fe/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=6ba4f08f3414d327506927c68845cb77864826fe", "patch": "@@ -1102,11 +1102,9 @@ Identifier_to_gnu (Node_Id gnat_node, tree *gnu_result_type_p)\n \t  = lvalue_required_p (gnat_node, gnu_result_type, true,\n \t\t\t       address_of_constant, Is_Aliased (gnat_temp));\n \n-      /* ??? We need to unshare the initializer if the object is external\n-\t as such objects are not marked for unsharing if we are not at the\n-\t global level.  This should be fixed in add_decl_expr.  */\n+      /* Finally retrieve the initializer if this is deemed valid.  */\n       if ((constant_only && !address_of_constant) || !require_lvalue)\n-\tgnu_result = unshare_expr (DECL_INITIAL (gnu_result));\n+\tgnu_result = DECL_INITIAL (gnu_result);\n     }\n \n   /* The GNAT tree has the type of a function set to its result type, so we\n@@ -7113,10 +7111,10 @@ add_decl_expr (tree gnu_decl, Entity_Id gnat_entity)\n \n   gnu_stmt = build1 (DECL_EXPR, void_type_node, gnu_decl);\n \n-  /* If we are global, we don't want to actually output the DECL_EXPR for\n-     this decl since we already have evaluated the expressions in the\n+  /* If we are external or global, we don't want to output the DECL_EXPR for\n+     this DECL node since we already have evaluated the expressions in the\n      sizes and positions as globals and doing it again would be wrong.  */\n-  if (global_bindings_p ())\n+  if (DECL_EXTERNAL (gnu_decl) || global_bindings_p ())\n     {\n       /* Mark everything as used to prevent node sharing with subprograms.\n \t Note that walk_tree knows how to deal with TYPE_DECL, but neither\n@@ -7135,7 +7133,7 @@ add_decl_expr (tree gnu_decl, Entity_Id gnat_entity)\n \t       && !TYPE_FAT_POINTER_P (type))\n \tMARK_VISITED (TYPE_ADA_SIZE (type));\n     }\n-  else if (!DECL_EXTERNAL (gnu_decl))\n+  else\n     add_stmt_with_node (gnu_stmt, gnat_entity);\n \n   /* If this is a variable and an initializer is attached to it, it must be"}, {"sha": "f9214fbe9ab85c56a02a28a32a7879c16006c8f5", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ba4f08f3414d327506927c68845cb77864826fe/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ba4f08f3414d327506927c68845cb77864826fe/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=6ba4f08f3414d327506927c68845cb77864826fe", "patch": "@@ -3894,6 +3894,8 @@ convert (tree type, tree expr)\n \t{\n \t  expr = copy_node (expr);\n \t  TREE_TYPE (expr) = type;\n+\t  CONSTRUCTOR_ELTS (expr)\n+\t    = VEC_copy (constructor_elt, gc, CONSTRUCTOR_ELTS (expr));\n \t  return expr;\n \t}\n "}]}