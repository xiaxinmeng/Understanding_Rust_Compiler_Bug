{"sha": "56322f2a589fb024fac684e2cb7412e56a75adef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYzMjJmMmE1ODlmYjAyNGZhYzY4NGUyY2I3NDEyZTU2YTc1YWRlZg==", "commit": {"author": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1993-04-23T19:03:56Z"}, "committer": {"name": "Roland McGrath", "email": "roland@gcc.gnu.org", "date": "1993-04-23T19:03:56Z"}, "message": "entered into RCS\n\nFrom-SVN: r4200", "tree": {"sha": "962331091a82749c6711d034848bc45941a7f981", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/962331091a82749c6711d034848bc45941a7f981"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56322f2a589fb024fac684e2cb7412e56a75adef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56322f2a589fb024fac684e2cb7412e56a75adef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56322f2a589fb024fac684e2cb7412e56a75adef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56322f2a589fb024fac684e2cb7412e56a75adef/comments", "author": null, "committer": null, "parents": [{"sha": "7040b11665f8813ac09345c336a9e88bab0fa166", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7040b11665f8813ac09345c336a9e88bab0fa166", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7040b11665f8813ac09345c336a9e88bab0fa166"}], "stats": {"total": 105, "additions": 105, "deletions": 0}, "files": [{"sha": "ef911122e1dfbde21f2d8d37b4ff81c659a3854a", "filename": "gcc/config/i386/svr3dbx.h", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56322f2a589fb024fac684e2cb7412e56a75adef/gcc%2Fconfig%2Fi386%2Fsvr3dbx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56322f2a589fb024fac684e2cb7412e56a75adef/gcc%2Fconfig%2Fi386%2Fsvr3dbx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsvr3dbx.h?ref=56322f2a589fb024fac684e2cb7412e56a75adef", "patch": "@@ -0,0 +1,96 @@\n+/* Definitions for Intel 386 running system V, using dbx-in-coff encapsulation.\n+   Copyright (C) 1992 Free Software Foundation, Inc.\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#include \"i386/svr3gas.h\"\n+\n+/* We do not want to output SDB debugging information.  */\n+\n+#undef SDB_DEBUGGING_INFO\n+\n+/* We want to output DBX debugging information.  */\n+\n+#define DBX_DEBUGGING_INFO\n+\n+/* Compensate for botch in dbxout_init/dbxout_source_file which\n+   unconditionally drops the first character from ltext_label_name */\n+\n+#undef ASM_GENERATE_INTERNAL_LABEL\n+#define ASM_GENERATE_INTERNAL_LABEL(BUF,PREFIX,NUMBER)\t\\\n+    sprintf ((BUF), \"*.%s%d\", (PREFIX), (NUMBER))\n+\n+/* With the current gas, .align N aligns to an N-byte boundary.\n+   This is done to be compatible with the system assembler.\n+   You have specify -DOTHER_ALIGN wenn building gas-1.38.1. */\n+\n+#undef ASM_OUTPUT_ALIGN\n+#define ASM_OUTPUT_ALIGN(FILE,LOG)\t\\\n+     if ((LOG)!=0) fprintf ((FILE), \"\\t.align %d\\n\", 1<<(LOG))\n+\n+/* Align labels, etc. at 4-byte boundaries.\n+   For the 486, align to 16-byte boundary for sake of cache.  */\n+\n+#undef ASM_OUTPUT_ALIGN_CODE\n+#define ASM_OUTPUT_ALIGN_CODE(FILE)\t\t\t\\\n+     fprintf ((FILE), \"\\t.align %d,0x90\\n\",\t\t\\\n+\t      TARGET_486 ? 16 : 4);  /* Use log of 16 or log of 4 as arg.  */\n+\n+/* Align start of loop at 4-byte boundary.  */\n+\n+#undef ASM_OUTPUT_LOOP_ALIGN\n+#define ASM_OUTPUT_LOOP_ALIGN(FILE) \\\n+     fprintf ((FILE), \"\\t.align 4,0x90\\n\");\n+\n+\n+/* Additional overrides needed for dbx-in-coff gas, mostly taken from pbb.h */\n+\n+/* Although the gas we use can create .ctor and .dtor sections from N_SETT\n+   stabs, it does not support section directives, so we need to have the loader\n+   define the lists.\n+ */\n+#define CTOR_LISTS_DEFINED_EXTERNALLY\n+\n+/* similar to default, but allows for the table defined by ld with svr3.ifile. \n+   nptrs is always 0.  So we need to instead check that __DTOR_LIST__[1] != 0.\n+   The old check is left in so that the same macro can be used if and when  \n+   a future version of gas does support section directives. */\n+\n+#define DO_GLOBAL_DTORS_BODY {int nptrs = *(int *)__DTOR_LIST__; int i; \\\n+  if (nptrs == -1 || (__DTOR_LIST__[0] == 0 && __DTOR_LIST__[1] != 0))  \\\n+    for (nptrs = 0; __DTOR_LIST__[nptrs + 1] != 0; nptrs++); \t\t\\\n+  for (i = nptrs; i >= 1; i--)\t\t\t\t\t\t\\\n+    __DTOR_LIST__[i] (); }\n+\n+/* Use crt1.o as a startup file and crtn.o as a closing file.  */\n+/*\n+ * The loader directive file svr3.ifile defines how to merge the constructor \n+ * sections into the data section.  Also, since gas only puts out those \n+ * sections in response to N_SETT stabs, and does not (yet) have a \n+ * \".sections\" directive, svr3.ifile also defines the list symbols \n+ * __DTOR_LIST__ and __CTOR_LIST__.\n+ */\n+#undef STARTFILE_SPEC\n+#define STARTFILE_SPEC \\\n+  \"%{!r:%{!z:svr3.ifile%s}%{z:svr3z.ifile%s}}\\\n+   %{pg:gcrt1.o%s}%{!pg:%{posix:%{p:mcrtp1.o%s}%{!p:crtp1.o%s}}%{!posix:%{p:mcrt1.o%s}%{!p:crt1.o%s}}} \\\n+   %{p:-L/usr/lib/libp}%{pg:-L/usr/lib/libp}\"\n+  \n+#define ENDFILE_SPEC \"crtn.o%s\"\n+  \n+#undef LIB_SPEC\n+#define LIB_SPEC \"%{posix:-lcposix} %{shlib:-lc_s} -lc -lg\""}, {"sha": "3d492b495b6f35f835198380f34771e737309f19", "filename": "gcc/config/i386/t-svr3dbx", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56322f2a589fb024fac684e2cb7412e56a75adef/gcc%2Fconfig%2Fi386%2Ft-svr3dbx", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56322f2a589fb024fac684e2cb7412e56a75adef/gcc%2Fconfig%2Fi386%2Ft-svr3dbx", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-svr3dbx?ref=56322f2a589fb024fac684e2cb7412e56a75adef", "patch": "@@ -0,0 +1,9 @@\n+# gas 1.38.1 supporting dbx-in-coff requires a link script.\n+\n+EXTRA_PARTS=svr3.ifile svr3z.ifile\n+\n+svr3.ifile: $(srcdir)/config/i386/svr3.ifile\n+\trm -f svr3.ifile; cp $(srcdir)/config/i386/svr3.ifile .\n+\n+svr3z.ifile: $(srcdir)/config/i386/svr3z.ifile\n+\trm -f svr3z.ifile; cp $(srcdir)/config/i386/svr3z.ifile ."}]}