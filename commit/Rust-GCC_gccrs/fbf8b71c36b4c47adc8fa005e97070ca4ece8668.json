{"sha": "fbf8b71c36b4c47adc8fa005e97070ca4ece8668", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJmOGI3MWMzNmI0YzQ3YWRjOGZhMDA1ZTk3MDcwY2E0ZWNlODY2OA==", "commit": {"author": {"name": "J. Kean Johnston", "email": "jkj@sco.com", "date": "1997-09-22T17:31:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-09-22T17:31:47Z"}, "message": "sco5.h: Make ELF default file format and add -mcoff/-melf..\n\n        * i386/sco5.h: Make ELF default file format and add -mcoff/-melf..\n        (MULTILIB_DEFAULTS): Define.\n        (ASM_SPEC, CPP_SPEC): Handle -mcoff.\n        (STARTFILE_SPEC, ENDFILE_SPEC, LINK_SPEC): Likewise.\n        (LIBGCC_SPEC): Likewise.\n        (MASK_COFF, TARGET_COFF, TARGET_ELF): Define.\n        (SUBTARGET_SWITCHES): Add -mcoff and -melf.\n        * i386/t-sco5 (CRTSTUFF_T_CFLAGS): Add -fPIC.\n        (CRTSTUFF_T_CFLAGS_S): Tweak for COFF.\n        (EXTRA_PARTS, TAROUTOPTS): Delete.\n        (libgcc1-elf, libgcc2-elf, libgcc-elf targets): Delete.\n        (MULTILIB_OPTIONS): Define.\n        (MULTILIB_DIRNAMES, MULTILIB_EXCEPTIONS): Likewise.\n        (MULTILIB_MATCHE, MULTILIB_EXTRA_OPTS): Likewise.\nSCO Open Server patches.\n\nFrom-SVN: r15627", "tree": {"sha": "7b18d4a2f297e7b06c32f5043380ff3ace7fadd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b18d4a2f297e7b06c32f5043380ff3ace7fadd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbf8b71c36b4c47adc8fa005e97070ca4ece8668", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf8b71c36b4c47adc8fa005e97070ca4ece8668", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf8b71c36b4c47adc8fa005e97070ca4ece8668", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf8b71c36b4c47adc8fa005e97070ca4ece8668/comments", "author": null, "committer": null, "parents": [{"sha": "c14a951f31a632d675a95129918fc46f45343c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c14a951f31a632d675a95129918fc46f45343c8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c14a951f31a632d675a95129918fc46f45343c8f"}], "stats": {"total": 181, "additions": 64, "deletions": 117}, "files": [{"sha": "40f26a668e3a9b164a526def54337f205f200d40", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf8b71c36b4c47adc8fa005e97070ca4ece8668/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf8b71c36b4c47adc8fa005e97070ca4ece8668/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fbf8b71c36b4c47adc8fa005e97070ca4ece8668", "patch": "@@ -1,3 +1,20 @@\n+Mon Sep 22 11:21:33 1997  J. Kean Johnston  <jkj@sco.com>\n+\n+\t* i386/sco5.h: Make ELF default file format and add -mcoff/-melf..\n+\t(MULTILIB_DEFAULTS): Define.\n+\t(ASM_SPEC, CPP_SPEC): Handle -mcoff.\n+\t(STARTFILE_SPEC, ENDFILE_SPEC, LINK_SPEC): Likewise.\n+\t(LIBGCC_SPEC): Likewise.\n+\t(MASK_COFF, TARGET_COFF, TARGET_ELF): Define.\n+\t(SUBTARGET_SWITCHES): Add -mcoff and -melf.\n+\t* i386/t-sco5 (CRTSTUFF_T_CFLAGS): Add -fPIC.\n+\t(CRTSTUFF_T_CFLAGS_S): Tweak for COFF.\n+\t(EXTRA_PARTS, TAROUTOPTS): Delete.\n+\t(libgcc1-elf, libgcc2-elf, libgcc-elf targets): Delete.\n+\t(MULTILIB_OPTIONS): Define.\n+\t(MULTILIB_DIRNAMES, MULTILIB_EXCEPTIONS): Likewise.\n+\t(MULTILIB_MATCHE, MULTILIB_EXTRA_OPTS): Likewise.\n+\n Mon Sep 22 02:10:43 1997  Jeffrey A Law  (law@cygnus.com)\n \n \t* version.c: Bump for snapshot."}, {"sha": "40862e0c9045803eb75f20f34c04e5a17549ed56", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 36, "deletions": 31, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf8b71c36b4c47adc8fa005e97070ca4ece8668/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf8b71c36b4c47adc8fa005e97070ca4ece8668/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=fbf8b71c36b4c47adc8fa005e97070ca4ece8668", "patch": "@@ -737,6 +737,12 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define WCHAR_TYPE\t\t\"long int\"\n #define WCHAR_TYPE_SIZE\t\tBITS_PER_WORD\n \n+/*\n+ * New for multilib support. Set the default switches for multilib,\n+ * which is -melf.\n+ */\n+#define MULTILIB_DEFAULTS { \"melf\" }\n+\n \f\n /* Please note that these specs may look messy but they are required in\n    order to emulate the SCO Development system as closely as possible.\n@@ -759,20 +765,20 @@ dtors_section ()\t\t\t\t\t\t\t\\\n    does.\n \n    SCO also allows you to compile, link and generate either ELF or COFF\n-   binaries. With gcc, as with the SCO compiler, the default is coff.\n-   Specify -melf to gcc to produce elf binaries. -fpic will get the\n+   binaries. With gcc, unlike the SCO compiler, the default is ELF.\n+   Specify -mcoff to gcc to produce elf binaries. -fpic will get the\n    assembler and linker to produce PIC code.\n */\n \n /* Set up assembler flags for PIC and ELF compilations */\n #undef ASM_SPEC\n #define ASM_SPEC \\\n- \"-b %{melf:elf}%{!melf:coff \\\n-   %{static:%e-static only valid with -melf} \\\n-   %{shared:%e-shared only valid with -melf} \\\n-   %{symbolic:%e-symbolic only valid with -melf}} \\\n+ \"-b %{!mcoff:elf}%{mcoff:coff \\\n+   %{static:%e-static not valid with -mcoff} \\\n+   %{shared:%e-shared not valid with -mcoff} \\\n+   %{symbolic:%e-symbolic not valid with -mcoff}} \\\n   %{Ym,*} %{Yd,*} %{Wa,*:%*} \\\n-  %{melf:-E%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},ELF %{Qn:} %{!Qy:-Qn}}\"\n+  %{!mcoff:-E%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},ELF %{Qn:} %{!Qy:-Qn}}\"\n \n /* Use crt1.o as a startup file and crtn.o as a closing file.  */\n \n@@ -790,13 +796,13 @@ dtors_section ()\t\t\t\t\t\t\t\\\n        %{!Xc:%{Xk:values-Xk.o%s} \\\n         %{!Xk:%{Xt:values-Xt.o%s} \\\n          %{!Xt:values-Xa.o%s}}}}}} \\\n-  %{!melf:crtbegin.o%s} \\\n-  %{melf:%{static:crtbegin.o%s}%{!static:crtbeginS.o%s}}\"\n+  %{mcoff:crtbeginS.o%s} \\\n+  %{!mcoff:%{!static:crtbegin.o%s}%{static:crtbeginS.o%s}}\"\n \n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC \\\n- \"%{melf:%{!static:crtendS.o%s}%{static:crtend.o%s}} \\\n-  %{!melf:crtend.o%s} \\\n+ \"%{!mcoff:%{!static:crtend.o%s}%{static:crtendS.o%s}} \\\n+  %{mcoff:crtendS.o%s} \\\n   %{pg:gcrtn.o%s}%{!pg:crtn.o%s}\"\n \n #undef CPP_PREDEFINES\n@@ -807,8 +813,8 @@ dtors_section ()\t\t\t\t\t\t\t\\\n \n #undef CPP_SPEC\n #define CPP_SPEC \"%(cpp_cpu) %[cpp_cpu] \\\n-  %{fpic:%{!melf:%e-fpic is only valid with -melf}} \\\n-  %{fPIC:%{!melf:%e-fPIC is only valid with -melf}} \\\n+  %{fpic:%{mcoff:%e-fpic is not valid with -mcoff}} \\\n+  %{fPIC:%{mcoff:%e-fPIC is not valid with -mcoff}} \\\n   -D__i386 -D__unix -D_SCO_DS=1 -D_M_I386 -D_M_XENIX -D_M_UNIX \\\n   %{!Xods30:-D_STRICT_NAMES} \\\n   %{!ansi:%{!posix:%{!Xods30:-D_SCO_XPG_VERS=4}}} \\\n@@ -828,9 +834,9 @@ dtors_section ()\t\t\t\t\t\t\t\\\n                       -DM_WORDSWAP}}}} \\\n   %{scointl:-DM_INTERNAT -D_M_INTERNAT} \\\n   %{traditional:-D_KR -D_SVID -D_NO_PROTOTYPE} \\\n-  %{melf:-D_SCO_ELF} \\\n-  %{!melf:-D_M_COFF -D_SCO_COFF} \\\n-  %{melf:%{fpic:-D__PIC__ -D__pic__} \\\n+  %{!mcoff:-D_SCO_ELF} \\\n+  %{mcoff:-D_M_COFF -D_SCO_COFF} \\\n+  %{!mcoff:%{fpic:-D__PIC__ -D__pic__} \\\n          %{fPIC:%{!fpic:-D__PIC__ -D__pic__}}} \\\n   %{Xa:-D_SCO_C_DIALECT=1} \\\n   %{!Xa:%{Xc:-D_SCO_C_DIALECT=3} \\\n@@ -841,19 +847,19 @@ dtors_section ()\t\t\t\t\t\t\t\\\n \n #undef LINK_SPEC\n #define LINK_SPEC \\\n- \"-b %{melf:elf}%{!melf:coff \\\n-   %{static:%e-static only valid with -melf} \\\n-   %{shared:%e-shared only valid with -melf} \\\n-   %{symbolic:%e-symbolic only valid with -melf} \\\n-   %{fpic:%e-fpic only valid with -melf} \\\n-   %{fPIC:%e-fPIC only valid with -melf}} \\\n-  -R%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},%{melf:ELF}%{!melf:COFF} \\\n+ \"-b %{!mcoff:elf}%{mcoff:coff \\\n+   %{static:%e-static not valid with -mcoff} \\\n+   %{shared:%e-shared not valid with -mcoff} \\\n+   %{symbolic:%e-symbolic not valid with -mcoff} \\\n+   %{fpic:%e-fpic not valid with -mcoff} \\\n+   %{fPIC:%e-fPIC not valid with -mcoff}} \\\n+  -R%{Xa:a}%{!Xa:%{Xc:c}%{!Xc:%{Xk:k}%{!Xk:%{Xt:t}%{!Xt:a}}}},%{ansi:ansi}%{!ansi:%{posix:posix}%{!posix:%{Xpg4:xpg4}%{!Xpg4:%{Xpg4plus:XPG4PLUS}%{!Xpg4plus:%{Xods30:ods30}%{!Xods30:XPG4PLUS}}}}},%{mcoff:COFF}%{!mcoff:ELF} \\\n   %{Wl,*%*} %{YP,*} %{YL,*} %{YU,*} \\\n   %{!YP,*:%{p:-YP,/usr/ccs/libp:/lib/libp:/usr/lib/libp:/usr/ccs/lib:/lib:/usr/lib} \\\n    %{!p:-YP,/usr/ccs/lib:/lib:/usr/lib}} \\\n   %{h*} %{static:-dn -Bstatic} %{shared:-G -dy %{!z*:-z text}} \\\n   %{symbolic:-Bsymbolic -G -dy %{!z*:-z text}} %{z*} %{R*} %{Y*} \\\n-  %{G:-G} %{melf:%{Qn:} %{!Qy:-Qn}}\"\n+  %{G:-G} %{!mcoff:%{Qn:} %{!Qy:-Qn}}\"\n \n /* The SCO COFF linker gets confused on the difference between \"-ofoo\"\n    and \"-o foo\".   So we just always force a single space. */\n@@ -867,15 +873,14 @@ dtors_section ()\t\t\t\t\t\t\t\\\n #define LIB_SPEC \\\n  \"%{!shared:%{!symbolic:-lcrypt -lgen -lc}}\"\n \n-#undef LIBGCC_SPEC\n-#define LIBGCC_SPEC \\\n- \"%{!melf:-lgcc}%{melf:%{!shared:%{!symbolic:-lgcc-elf}}}\"\n-\n-#define MASK_ELF     \t\t010000000000\t/* Mask for elf generation */\n-#define TARGET_ELF              (target_flags & MASK_ELF)\n+#define MASK_COFF     \t\t010000000000\t/* Mask for elf generation */\n+#define TARGET_COFF             (target_flags & MASK_COFF)\n+#define TARGET_ELF              (!(target_flags & MASK_COFF))\n \n #undef SUBTARGET_SWITCHES\n-#define SUBTARGET_SWITCHES { \"elf\", MASK_ELF },\n+#define SUBTARGET_SWITCHES \t\t\\\n+\t{ \"coff\", MASK_COFF }, \t\t\\\n+\t{ \"elf\", -MASK_COFF },\n \n #define NO_DOLLAR_IN_LABEL\n "}, {"sha": "fd3d6c63b8ef7c652b3c33b84dc8c334a962a256", "filename": "gcc/config/i386/t-sco5", "status": "modified", "additions": 11, "deletions": 86, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbf8b71c36b4c47adc8fa005e97070ca4ece8668/gcc%2Fconfig%2Fi386%2Ft-sco5", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbf8b71c36b4c47adc8fa005e97070ca4ece8668/gcc%2Fconfig%2Fi386%2Ft-sco5", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-sco5?ref=fbf8b71c36b4c47adc8fa005e97070ca4ece8668", "patch": "@@ -1,91 +1,16 @@\n # The pushl in CTOR initialization interferes with frame pointer elimination.\n-CRTSTUFF_T_CFLAGS =-fno-omit-frame-pointer\n-CRTSTUFF_T_CFLAGS_S = $(CRTSTUFF_T_CFLAGS) -melf -fPIC \n+CRTSTUFF_T_CFLAGS   = -fPIC -fno-omit-frame-pointer\n+CRTSTUFF_T_CFLAGS_S = -mcoff -fno-omit-frame-pointer\n \n #\n-# Becuase we can be compiling for either elf or coff, we need to create\n-# special versions of libgcc.a. It IS possible for this not to be done\n-# and let the SCO linker transform the coff objects (which are created\n-# by default) into elf objects. However, this is inefficient. So,\n-# we create a libgcc-elf.a, which is used in the specs in sco5.h.\n-# These are the rules for doing that.\n+# I am still a little unsure of the multilib architecture. The following\n+# 4 lines are based on advice from meissner@cygnus.com.\n #\n-# NOTE: This is duplicated directly from Makefile.in. If you change it\n-# there, be sure to change things here!\n-#\n-EXTRA_PARTS = libgcc-elf.a crtbegin.o crtend.o crtbeginS.o crtendS.o\n-TAROUTOPTS = xpf\n-\n-libgcc1-elf.a: stamp-crtS libgcc1.c $(CONFIG_H) $(LIB1FUNCS_EXTRA) config.status\n-\t-rm -f tmplibgcc1-elf.a\n-\tfor name in $(LIB1FUNCS); \\\n-\tdo \\\n-\t  echo $${name}; \\\n-\t  rm -f $${name}$(objext); \\\n-\t  $(OLDCC) -DIN_LIBGCC1 -dy $(CCLIBFLAGS) $(INCLUDES) -c -DL$${name} $(srcdir)/libgcc1.c; \\\n-\t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t  mv libgcc1$(objext) $${name}$(objext); \\\n-\t  $(OLDAR) $(OLDAR_FLAGS) tmplibgcc1-elf.a $${name}$(objext); \\\n-\t  rm -f $${name}$(objext); \\\n-\tdone\n-\tfor file in .. $(LIB1FUNCS_EXTRA); \\\n-\tdo \\\n-\t  if [ x$${file} != x.. ]; then \\\n-\t    name=`echo $${file} | sed -e 's/[.][cS]$$//' -e 's/[.]asm$$//'`; \\\n-\t    echo $${name}; \\\n-\t    if [ $${name}.asm = $${file} ]; then \\\n-\t      cp $${file} $${name}.s || exit 1; file=$${name}.s; \\\n-\t    else true; fi; \\\n-\t    $(OLDCC) -DIN_LIBGCC1 -dy $(CCLIBFLAGS) $(INCLUDES) -c $${file}; \\\n-\t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t    $(OLDAR) $(OLDAR_FLAGS) tmplibgcc1-elf.a $${name}$(objext); \\\n-\t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t    rm -f $${name}.s $${name}$(objext); \\\n-\t  else true; \\\n-\t  fi; \\\n-\tdone\n-\t-if $(RANLIB_TEST) ; then $(RANLIB) tmplibgcc1-elf.a; else true; fi\n-\tmv tmplibgcc1-elf.a libgcc1-elf.a\n-\n-libgcc2-elf.a: stamp-crtS libgcc2.c libgcc2.ready $(CONFIG_H) $(LIB2FUNCS_EXTRA) \\\n-   machmode.h longlong.h gbl-ctors.h config.status\n-\t-rm -f tmplibgcc2-elf.a\n-\tfor name in $(LIB2FUNCS); \\\n-\tdo \\\n-\t  echo $${name}; \\\n-\t  $(GCC_FOR_TARGET) -melf $(LIBGCC2_CFLAGS) $(INCLUDES) -c -DL$${name} \\\n-\t      $(srcdir)/libgcc2.c -o $${name}$(objext); \\\n-\t  if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t  $(AR) $(AR_FLAGS) tmplibgcc2-elf.a $${name}$(objext); \\\n-\t  rm -f $${name}$(objext); \\\n-\tdone\n-\tfor file in .. $(LIB2FUNCS_EXTRA); \\\n-\tdo \\\n-\t  if [ x$${file} != x.. ]; then \\\n-\t    name=`echo $${file} | sed -e 's/[.][cS]$$//' -e 's/[.]asm$$//'`; \\\n-\t    oname=` echo $${name} | sed -e 's,.*/,,'`; \\\n-\t    echo $${name}; \\\n-\t    if [ $${name}.asm = $${file} ]; then \\\n-\t      cp $${file} $${name}.s || exit 1; file=$${name}.s; \\\n-\t    else true; fi; \\\n-\t    $(GCC_FOR_TARGET) -melf $(LIBGCC2_CFLAGS) $(INCLUDES) -c $${file}; \\\n-\t    if [ $$? -eq 0 ] ; then true; else exit 1; fi; \\\n-\t    $(AR) $(AR_FLAGS) tmplibgcc2-elf.a $${oname}$(objext); \\\n-\t    rm -f $${name}.s $${oname}$(objext); \\\n-\t  else true; \\\n-\t  fi; \\\n-\tdone\n-\tmv tmplibgcc2-elf.a libgcc2-elf.a\n-\n-# Combine the various libraries into a single library, libgcc.a.\n-libgcc-elf.a: libgcc1-elf.a libgcc2-elf.a\n-\t-rm -rf tmplibgcc-elf.a libgcc-elf.a tmpcopy\n-\tmkdir tmpcopy\n-\t-(cd tmpcopy; $(AR) x ../libgcc1-elf.a)\n-\t-(cd tmpcopy; chmod +w * > /dev/null 2>&1)\n-\t-(cd tmpcopy; $(AR) x ../libgcc2-elf.a)\n-\t(cd tmpcopy; $(AR) $(AR_FLAGS) ../tmplibgcc-elf.a *$(objext))\n-\trm -rf tmpcopy\n-\t-if $(RANLIB_TEST) ; then $(RANLIB) tmplibgcc-elf.a; else true; fi\n-\tmv tmplibgcc-elf.a libgcc-elf.a\n+MULTILIB_OPTIONS    = mcoff/fPIC\n+MULTILIB_DIRNAMES   = coff pic\n+MULTILIB_EXCEPTIONS = *mcoff*/*fPIC*\n+MULTILIB_MATCHES    = fPIC=fpic\n+MULTILIB_EXTRA_OPTS =\n \n+LIBGCC=stmp-multilib\n+INSTALL_LIBGCC=install-multilib"}]}