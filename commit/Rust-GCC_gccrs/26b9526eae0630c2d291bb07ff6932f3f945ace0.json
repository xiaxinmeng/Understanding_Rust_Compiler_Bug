{"sha": "26b9526eae0630c2d291bb07ff6932f3f945ace0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZiOTUyNmVhZTA2MzBjMmQyOTFiYjA3ZmY2OTMyZjNmOTQ1YWNlMA==", "commit": {"author": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-02-14T01:39:59Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-02-14T01:39:59Z"}, "message": "doc, index improvements\n\nFrom-SVN: r25189", "tree": {"sha": "75bb759806c21a327e3b35c4913f9eec0d8af802", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75bb759806c21a327e3b35c4913f9eec0d8af802"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26b9526eae0630c2d291bb07ff6932f3f945ace0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26b9526eae0630c2d291bb07ff6932f3f945ace0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26b9526eae0630c2d291bb07ff6932f3f945ace0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26b9526eae0630c2d291bb07ff6932f3f945ace0/comments", "author": null, "committer": null, "parents": [{"sha": "016842937d9ca47985e193d28670d211da045d28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/016842937d9ca47985e193d28670d211da045d28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/016842937d9ca47985e193d28670d211da045d28"}], "stats": {"total": 494, "additions": 286, "deletions": 208}, "files": [{"sha": "584a09e46aa0df845b94cce4c41c3d39d2983e8a", "filename": "gcc/f/bugs.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26b9526eae0630c2d291bb07ff6932f3f945ace0/gcc%2Ff%2Fbugs.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26b9526eae0630c2d291bb07ff6932f3f945ace0/gcc%2Ff%2Fbugs.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fbugs.texi?ref=26b9526eae0630c2d291bb07ff6932f3f945ace0", "patch": "@@ -60,6 +60,7 @@ Fixed in @code{egcs}.\n @cindex DNRM2\n @cindex stack, 387 coprocessor\n @cindex ix86\n+@cindex x86\n @cindex -O2\n @item\n A code-generation bug afflicts\n@@ -123,7 +124,7 @@ This is to be fixed in version 0.6, when @code{g77} will use the\n @cindex compiler memory usage\n @cindex memory usage, of compiler\n @cindex large aggregate areas\n-@cindex initialization\n+@cindex initialization, bug\n @cindex DATA statement\n @cindex statements, DATA\n @item"}, {"sha": "123140625105964ea8bcba692259c2b6959268b0", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 268, "deletions": 191, "changes": 459, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26b9526eae0630c2d291bb07ff6932f3f945ace0/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26b9526eae0630c2d291bb07ff6932f3f945ace0/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=26b9526eae0630c2d291bb07ff6932f3f945ace0", "patch": "@@ -957,8 +957,8 @@ to make big mistakes.\n \n @cindex debugger\n @cindex bugs, finding\n-@cindex gdb command\n-@cindex commands, gdb\n+@cindex @code{gdb}, command\n+@cindex commands, @code{gdb}\n @item\n They provide information in the generated machine code\n that can make it easier to find bugs in the program\n@@ -967,8 +967,8 @@ such as @code{gdb}).\n \n @cindex libraries\n @cindex linking\n-@cindex ld command\n-@cindex commands, ld\n+@cindex @code{ld} command\n+@cindex commands, @code{ld}\n @item\n They locate and gather machine code already generated\n to perform actions requested by statements in\n@@ -1027,11 +1027,11 @@ of the language), how much time to spend making\n the generated machine code run faster, and so on.\n \n @cindex components of g77\n-@cindex g77, components of\n+@cindex @code{g77}, components of\n @code{g77} consists of several components:\n \n-@cindex gcc command\n-@cindex commands, gcc\n+@cindex @code{gcc}, command\n+@cindex commands, @code{gcc}\n @itemize @bullet\n @item\n A modified version of the @code{gcc} command, which also might be\n@@ -1042,8 +1042,8 @@ might be a non-GNU compiler, or an older version\n of @code{gcc} considered more stable or that is\n used to build the operating system kernel.)\n \n-@cindex g77 command\n-@cindex commands, g77\n+@cindex @code{g77}, command\n+@cindex commands, @code{g77}\n @item\n The @code{g77} command itself, which also might be installed as the\n system's @code{f77} command.\n@@ -1052,7 +1052,7 @@ system's @code{f77} command.\n @cindex libf2c library\n @cindex libraries, libf2c\n @cindex libraries, libg2c\n-@cindex run-time library\n+@cindex run-time, library\n @item\n The @code{libg2c} run-time library.\n This library contains the machine code needed to support\n@@ -1070,11 +1070,11 @@ on the system.\n The maintainer of @code{libf2c} currently is\n @email{dmg@@bell-labs.com}.\n \n-@cindex f771 program\n-@cindex programs, f771\n+@cindex @code{f771}, program\n+@cindex programs, @code{f771}\n @cindex assembler\n-@cindex as command\n-@cindex commands, as\n+@cindex @code{as} command\n+@cindex commands, @code{as}\n @cindex assembly code\n @cindex code, assembly\n @item\n@@ -1094,7 +1094,7 @@ preprocessing, compiling (in a variety of possible languages), assembling,\n and linking.\n \n @cindex driver, gcc command as\n-@cindex gcc command as driver\n+@cindex @code{gcc}, command as driver\n @cindex executable file\n @cindex files, executable\n @cindex cc1 program\n@@ -1115,14 +1115,14 @@ As another example, the command @samp{gcc foo.cc} would do much the same as\n @samp{gcc foo.c}, but instead of using the C compiler named @code{cc1},\n @code{gcc} would use the C++ compiler (named @code{cc1plus}).\n \n-@cindex f771 program\n-@cindex programs, f771\n+@cindex @code{f771}, program\n+@cindex programs, @code{f771}\n In a GNU Fortran installation, @code{gcc} recognizes Fortran source\n files by name just like it does C and C++ source files.\n It knows to use the Fortran compiler named @code{f771}, instead of\n @code{cc1} or @code{cc1plus}, to compile Fortran files.\n \n-@cindex gcc not recognizing Fortran source\n+@cindex @code{gcc}, not recognizing Fortran source\n @cindex unrecognized file format\n @cindex file format not recognized\n Non-Fortran-related operation of @code{gcc} is generally\n@@ -1132,8 +1132,8 @@ GNU Fortran version, @code{gcc} will not be able to compile\n and link Fortran programs---and since @code{g77} uses @code{gcc}\n to do most of the actual work, neither will @code{g77}!\n \n-@cindex g77 command\n-@cindex commands, g77\n+@cindex @code{g77}, command\n+@cindex commands, @code{g77}\n The @code{g77} command is essentially just a front-end for\n the @code{gcc} command.\n Fortran users will normally use @code{g77} instead of @code{gcc},\n@@ -1192,7 +1192,7 @@ large chunks of code.\n \n @cindex GNU Back End (GBE)\n @cindex GBE\n-@cindex gcc back end\n+@cindex @code{gcc}, back end\n @cindex back end, gcc\n @cindex code generator\n One chunk is the so-called @dfn{GNU Back End}, or GBE,\n@@ -1205,7 +1205,7 @@ whenever the distinction is important.\n \n @cindex GNU Fortran Front End (FFE)\n @cindex FFE\n-@cindex g77 front end\n+@cindex @code{g77}, front end\n @cindex front end, g77\n The other chunk of @code{f771} is the\n majority of what is unique about GNU Fortran---the code that knows how\n@@ -1236,8 +1236,8 @@ of generated code (in terms of speed and size) is roughly similar\n @cindex compiling programs\n @cindex programs, compiling\n \n-@cindex gcc command\n-@cindex commands, gcc\n+@cindex @code{gcc}, command\n+@cindex commands, @code{gcc}\n A GNU Fortran installation includes a modified version of the @code{gcc}\n command.\n \n@@ -1253,8 +1253,8 @@ but apply to other languages as well.\n for information on the way different languages are handled\n by the GNU CC compiler (@code{gcc}).\n \n-@cindex g77 command\n-@cindex commands, g77\n+@cindex @code{g77}, command\n+@cindex commands, @code{g77}\n Also provided as part of GNU Fortran is the @code{g77} command.\n The @code{g77} command is designed to make compiling and linking Fortran\n programs somewhat easier than when using the @code{gcc} command for\n@@ -1263,7 +1263,7 @@ It does this by analyzing the command line somewhat and changing it\n appropriately before submitting it to the @code{gcc} command.\n \n @cindex -v option\n-@cindex g77 options, -v\n+@cindex @code{g77} options, -v\n @cindex options, -v\n Use the @samp{-v} option with @code{g77}\n to see what is going on---the first line of output is the invocation\n@@ -1492,9 +1492,9 @@ files included by the @code{INCLUDE} directive---the @code{#include}\n preprocessor directive must be used instead.\n \n @cindex Ratfor preprocessor\n-@cindex programs, ratfor\n-@cindex .r filename suffix\n-@pindex ratfor\n+@cindex programs, @code{ratfor}\n+@cindex @samp{.r} filename suffix\n+@cindex @code{ratfor}\n @item @var{file}.r\n Ratfor source code, which must be preprocessed by the @code{ratfor}\n command, which is available separately (as it is not yet part of the GNU\n@@ -1614,10 +1614,10 @@ with a diagnostic if it detects an inconsistency.\n \n @cindex -fno-silent option\n @cindex options, -fno-silent\n-@cindex @code{f2c} compatibility\n-@cindex compatibility, @code{f2c}\n+@cindex f2c compatibility\n+@cindex compatibility, f2c\n @cindex status, compilation\n-@cindex compilation status\n+@cindex compilation, status\n @cindex reporting compilation status\n @cindex printing compilation status\n @item -fno-silent\n@@ -1704,10 +1704,10 @@ existing and obsolete Fortran implementations.\n @cindex options, -ff77\n @item -ff77\n @cindex UNIX f77\n-@cindex @code{f2c} compatibility\n-@cindex compatibility, @code{f2c}\n-@cindex @code{f77} compatibility\n-@cindex compatibility, @code{f77}\n+@cindex f2c compatibility\n+@cindex compatibility, f2c\n+@cindex f77 compatibility\n+@cindex compatibility, f77\n Specify that the program is written in idiomatic UNIX FORTRAN 77\n and/or the dialect accepted by the @code{f2c} product.\n Same as @samp{-fbackslash -fno-typeless-boz}.\n@@ -1734,7 +1734,7 @@ existing and obsolete Fortran implementations.\n @node Fortran Dialect Options\n @section Options Controlling Fortran Dialect\n @cindex dialect options\n-@cindex language dialect options\n+@cindex language, dialect options\n @cindex options, dialect\n \n The following options control the dialect of Fortran\n@@ -1745,18 +1745,18 @@ that the compiler accepts:\n @cindex options, -ffree-form\n @cindex -fno-fixed-form option\n @cindex options, -fno-fixed-form\n-@cindex source file form\n+@cindex source file format\n @cindex free form\n @cindex fixed form\n-@cindex Fortran 90 features\n+@cindex Fortran 90, features\n @item -ffree-form\n @item -fno-fixed-form\n Specify that the source file is written in free form\n (introduced in Fortran 90) instead of the more-traditional fixed form.\n \n @cindex -ff90 option\n @cindex options, -ff90\n-@cindex Fortran 90 features\n+@cindex Fortran 90, features\n @item -ff90\n Allow certain Fortran-90 constructs.\n \n@@ -1772,8 +1772,8 @@ current level of support for Fortran 90.)\n @cindex -fvxt option\n @cindex options, -fvxt\n @item -fvxt\n-@cindex Fortran 90 features\n-@cindex VXT features\n+@cindex Fortran 90, features\n+@cindex VXT extensions\n Specify the treatment of certain constructs that have different\n meanings depending on whether the code is written in\n GNU Fortran (based on FORTRAN 77 and akin to Fortran 90)\n@@ -1913,14 +1913,16 @@ For example, automatic conversion between @code{INTEGER} and\n @cindex options, -fonetrip\n @item -fonetrip\n @cindex FORTRAN 66\n-@cindex DO loops, one-trip\n-@cindex one-trip DO loops\n+@cindex @code{DO} loops, one-trip\n+@cindex one-trip @code{DO} loops\n+@cindex @code{DO} loops, zero-trip\n+@cindex zero-trip @code{DO} loops\n @cindex compatibility, FORTRAN 66\n-Imperative executable @code{DO} loops are to be executed at\n+Executable iterative @code{DO} loops are to be executed at\n least once each time they are reached.\n \n ANSI FORTRAN 77 and more recent versions of the Fortran standard\n-specify that the body of an imperative @code{DO} loop is not executed\n+specify that the body of an iterative @code{DO} loop is not executed\n if the number of iterations calculated from the parameters of the\n loop is less than 1.\n (For example, @samp{DO 10 I = 1, 0}.)\n@@ -1938,7 +1940,7 @@ standard did not specify this behavior.\n The @samp{-fonetrip} option specifies that the source file(s) being\n compiled require one-trip loops.\n \n-This option affects only those loops specified by the (imperative) @code{DO}\n+This option affects only those loops specified by the (iterative) @code{DO}\n statement and by implied-@code{DO} lists in I/O statements.\n Loops specified by implied-@code{DO} lists in @code{DATA} and\n specification (non-executable) statements are not affected.\n@@ -2087,8 +2089,8 @@ variables named @samp{i} and @samp{I} to a procedure named @samp{Foo}.)\n @cindex -fbadu77-intrinsics-enable option\n @cindex options, -fbadu77-intrinsics-enable\n @item -fbadu77-intrinsics-enable\n-@cindex badu77 intrinsics\n-@cindex intrinsics, badu77\n+@cindex @code{badu77} intrinsics\n+@cindex intrinsics, @code{badu77}\n Specify status of UNIX intrinsics having inappropriate forms.\n @samp{-fbadu77-intrinsics-enable} is the default.\n @xref{Intrinsic Groups}.\n@@ -2105,8 +2107,8 @@ Specify status of UNIX intrinsics having inappropriate forms.\n @cindex -ff2c-intrinsics-enable option\n @cindex options, -ff2c-intrinsics-enable\n @item -ff2c-intrinsics-enable\n-@cindex f2c intrinsics\n-@cindex intrinsics, f2c\n+@cindex @code{f2c} intrinsics\n+@cindex intrinsics, @code{f2c}\n Specify status of f2c-specific intrinsics.\n @samp{-ff2c-intrinsics-enable} is the default.\n @xref{Intrinsic Groups}.\n@@ -2123,7 +2125,7 @@ Specify status of f2c-specific intrinsics.\n @cindex -ff90-intrinsics-enable option\n @cindex options, -ff90-intrinsics-enable\n @item -ff90-intrinsics-enable\n-@cindex Fortran 90 intrinsics\n+@cindex Fortran 90, intrinsics\n @cindex intrinsics, Fortran 90\n Specify status of F90-specific intrinsics.\n @samp{-ff90-intrinsics-enable} is the default.\n@@ -2142,8 +2144,8 @@ Specify status of F90-specific intrinsics.\n @cindex options, -fgnu-intrinsics-enable\n @item -fgnu-intrinsics-enable\n @cindex Digital Fortran features\n-@cindex COMPLEX intrinsics\n-@cindex intrinsics, COMPLEX\n+@cindex @code{COMPLEX} intrinsics\n+@cindex intrinsics, @code{COMPLEX}\n Specify status of Digital's COMPLEX-related intrinsics.\n @samp{-fgnu-intrinsics-enable} is the default.\n @xref{Intrinsic Groups}.\n@@ -2206,9 +2208,9 @@ Specify status of VXT intrinsics.\n @cindex options, -ffixed-line-length-@var{n}\n @item -ffixed-line-length-@var{n}\n @cindex source file format\n-@cindex line length\n+@cindex lines, length\n @cindex length of source lines\n-@cindex fixed-form line length\n+@cindex fixed form\n Set column after which characters are ignored in typical fixed-form\n lines in the source file, and through which spaces are assumed (as\n if padded to that length) after the ends of short fixed-form lines.\n@@ -2229,8 +2231,8 @@ to them to fill out the line.\n \n @node Warning Options\n @section Options to Request or Suppress Warnings\n-@cindex options to control warnings\n-@cindex warning messages\n+@cindex options, warnings\n+@cindex warnings, suppressing\n @cindex messages, warning\n @cindex suppressing warnings\n \n@@ -2653,16 +2655,16 @@ is @samp{-mno-align-double}, not @samp{-benign-double}.\n @cindex -ffloat-store option\n @cindex options, -ffloat-store\n @item -ffloat-store\n-@cindex IEEE conformance\n-@cindex conformance, IEEE\n-@cindex floating point precision\n+@cindex IEEE 754 conformance\n+@cindex conformance, IEEE 754\n+@cindex floating-point, precision\n Might help a Fortran program that depends on exact IEEE conformance on\n some machines, but might slow down a program that doesn't.\n \n-This option is effective when the floating point unit is set to work in\n+This option is effective when the floating-point unit is set to work in\n IEEE 854 `extended precision'---as it typically is on x86 and m68k GNU\n systems---rather than IEEE 754 double precision.  @code{-ffloat-store}\n-tries to remove the extra precision by spilling data from floating point\n+tries to remove the extra precision by spilling data from floating-point\n registers into memory and this typically involves a big performance\n hit.  However, it doesn't affect intermediate results, so that it is\n only partially effective.  `Excess precision' is avoided in code like:\n@@ -2676,7 +2678,7 @@ but not in code like:\n @end smallexample\n \n For another, potentially better, way of controlling the precision\n-@ref{Floating point precision}.\n+@ref{Floating-point precision}.\n \n @cindex -fforce-mem option\n @cindex options, -fforce-mem\n@@ -2685,13 +2687,13 @@ For another, potentially better, way of controlling the precision\n @cindex options, -fforce-addr\n @item -fforce-addr\n @cindex loops, speeding up\n-@cindex speeding up loops\n+@cindex speed, of loops\n Might improve optimization of loops.\n \n @cindex -fno-inline option\n @cindex options, -fno-inline\n @item -fno-inline\n-@cindex in-line compilation\n+@cindex in-line code\n @cindex compilation, in-line\n @c DL: Only relevant for -O3?\n Don't compile statement functions inline.\n@@ -2702,16 +2704,16 @@ Note that if you are not optimizing, no functions can be expanded inline.\n @cindex -ffast-math option\n @cindex options, -ffast-math\n @item -ffast-math\n-@cindex IEEE conformance\n-@cindex conformance, IEEE\n+@cindex IEEE 754 conformance\n+@cindex conformance, IEEE 754\n Might allow some programs designed to not be too dependent\n on IEEE behavior for floating-point to run faster, or die trying.\n \n @cindex -fstrength-reduce option\n @cindex options, -fstrength-reduce\n @item -fstrength-reduce\n @cindex loops, speeding up\n-@cindex speeding up loops\n+@cindex speed, of loops\n @c DL: normally defaulted?\n Might make some loops run faster.\n \n@@ -2741,10 +2743,15 @@ Might improve performance on some code.\n @item -funroll-loops\n @cindex loops, unrolling\n @cindex unrolling loops\n-@cindex loop optimization\n+@cindex loops, optimizing\n+@cindex indexed (iterative) @code{DO}\n+@cindex iterative @code{DO}\n @c DL: fixme: Craig doesn't like `indexed' but f95 doesn't seem to\n @c provide a suitable term\n-Typically improves performance on code using indexed @code{DO} loops by\n+@c CB: I've decided on `iterative', for the time being, and changed\n+@c my previous, rather bizarre, use of `imperative' to that\n+@c (though `precomputed-trip' would be a more precise adjective)\n+Typically improves performance on code using iterative @code{DO} loops by\n unrolling them and is probably generally appropriate for Fortran, though\n it is not turned on at any optimization level.  \n Note that outer loop unrolling isn't done specifically; decisions about\n@@ -2764,17 +2771,17 @@ constructed out of lower-level constructs (such as @code{IF} and\n @code{GOTO}) can lead to generation of more optimal code\n than otherwise.} is done, so only loops written with @code{DO}\n benefit from loop optimizations, including---but not limited\n-to---unrolling.  Loops written with @code{IF} and @code{GOTO} will not\n-be recognized as such.  This option only unrolls indexed @code{DO}\n-loops, not @code{DO WHILE} loops.\n+to---unrolling.  Loops written with @code{IF} and @code{GOTO} are not\n+currently recognized as such.  This option unrolls only iterative\n+@code{DO} loops, not @code{DO WHILE} loops.\n \n @cindex -funroll-all-loops option\n @cindex options, -funroll-all-loops\n-@cindex @code{DO WHILE}\n+@cindex DO WHILE\n @item -funroll-all-loops\n @c DL: Check my understanding of -funroll-all-loops v. -funroll-loops is correct.\n Probably improves performance on code using @code{DO WHILE} loops by\n-unrolling them in addition to indexed @code{DO} loops.  In the absence\n+unrolling them in addition to iterative @code{DO} loops.  In the absence\n of @code{DO WHILE}, this option is equivalent to @code{-funroll-loops}\n but possibly slower.\n \n@@ -2848,7 +2855,7 @@ contains preprocessor directives.\n \n @node Directory Options\n @section Options for Directory Search\n-@cindex directory options\n+@cindex directory, options\n @cindex options, directory search\n @cindex search path\n \n@@ -2872,9 +2879,10 @@ These options are:\n @cindex -Idir option\n @cindex options, -Idir\n @item -I@var{dir}\n-@cindex directory search paths for inclusion\n+@cindex directory, search paths for inclusion\n @cindex inclusion, directory search paths for\n-@cindex searching for included files\n+@cindex search paths, for included files\n+@cindex paths, search\n These affect interpretation of the @code{INCLUDE} directive\n (as well as of the @code{#include} directive of the @code{cpp}\n preprocessor).\n@@ -2896,9 +2904,9 @@ gcc,Using and Porting GNU CC}, for information on the @samp{-I} option.\n \n @node Code Gen Options\n @section Options for Code Generation Conventions\n-@cindex code generation conventions\n+@cindex code generation, conventions\n @cindex options, code generation \n-@cindex run-time options\n+@cindex run-time, options\n \n These machine-independent options control the interface conventions\n used in code generation.\n@@ -2926,7 +2934,7 @@ the name @samp{-static}.)\n @item -finit-local-zero\n @cindex DATA statement\n @cindex statements, DATA\n-@cindex initialization of local variables\n+@cindex initialization, of local variables\n @cindex variables, initialization of\n @cindex uninitialized variables\n @cindex variables, uninitialized\n@@ -3000,7 +3008,7 @@ generating code for an incompatible library.\n @cindex -fno-underscoring option\n @cindex options, -fno-underscoring\n @item -fno-underscoring\n-@cindex underscores\n+@cindex underscore\n @cindex symbol names, underscores\n @cindex transforming symbol names\n @cindex symbol names, transforming\n@@ -3075,7 +3083,7 @@ interfaces.\n @cindex -fno-second-underscore option\n @cindex options, -fno-second-underscore\n @item -fno-second-underscore\n-@cindex underscores\n+@cindex underscore\n @cindex symbol names, underscores\n @cindex transforming symbol names\n @cindex symbol names, transforming\n@@ -3546,7 +3554,7 @@ Support @code{gcc} version 2.8,\n and remove support for prior versions of @code{gcc}.\n \n @cindex -@w{}-driver option\n-@cindex g77 options, -@w{}-driver\n+@cindex @code{g77} options, -@w{}-driver\n @cindex options, -@w{}-driver\n @item\n Remove support for the @samp{--driver} option,\n@@ -3672,7 +3680,7 @@ as well as statically-allocate data.\n @end itemize\n \n @cindex -@w{}-driver option\n-@cindex g77 options, -@w{}-driver\n+@cindex @code{g77} options, -@w{}-driver\n @cindex options, -@w{}-driver\n @item\n Remove support for the @samp{--driver} option,\n@@ -4214,7 +4222,7 @@ Extensions to the ANSI FORTRAN 77 standard:\n @section Direction of Language Development\n @cindex direction of language development\n @cindex features, language\n-@cindex language features\n+@cindex language, features\n \n The purpose of the following description of the GNU Fortran\n language is to promote wide portability of GNU Fortran programs.\n@@ -4359,8 +4367,8 @@ of @code{g77}).\n @node Standard Support\n @section ANSI FORTRAN 77 Standard Support\n @cindex ANSI FORTRAN 77 support\n-@cindex standard support\n-@cindex support for ANSI FORTRAN 77\n+@cindex standard, support for\n+@cindex support, FORTRAN 77\n @cindex compatibility, FORTRAN 77\n @cindex FORTRAN 77 compatibility\n \n@@ -4651,8 +4659,13 @@ character (which must be a letter).\n \n (Corresponds to Section 2.3 of ANSI X3.9-1978 FORTRAN 77.)\n \n-@cindex comments, trailing\n-@cindex trailing comments\n+@cindex trailing comment\n+@cindex comment\n+@cindex characters, comment\n+@cindex !\n+@cindex exclamation point\n+@cindex continuation character\n+@cindex characters, continuation\n Use of an exclamation point (@samp{!}) to begin a\n trailing comment (a comment that extends to the end of the same\n source line) is permitted under the following conditions:\n@@ -4676,7 +4689,8 @@ That is, a trailing comment may contain exclamation points\n in their commentary text.\n @end itemize\n \n-@cindex semicolons\n+@cindex ;\n+@cindex semicolon\n @cindex statements, separated by semicolon\n Use of a semicolon (@samp{;}) as a statement separator\n is permitted under the following conditions:\n@@ -4762,36 +4776,65 @@ Special characters include:\n \n @itemize @bullet\n @item\n+@cindex ;\n+@cindex semicolon\n Semicolon (@samp{;})\n \n @item\n+@cindex !\n+@cindex exclamation point\n Exclamation point (@samp{!})\n \n @item\n+@cindex \"\n+@cindex double quote\n Double quote (@samp{\"})\n \n @item\n+@cindex \\\n+@cindex backslash\n Backslash (@samp{\\})\n \n @item\n+@cindex ?\n+@cindex question mark\n Question mark (@samp{?})\n \n @item\n+@cindex #\n+@cindex hash mark\n+@cindex pound sign\n Hash mark (@samp{#})\n \n @item\n+@cindex &\n+@cindex ampersand\n Ampersand (@samp{&})\n \n @item\n+@cindex %\n+@cindex percent sign\n Percent sign (@samp{%})\n \n @item\n+@cindex _\n+@cindex underscore\n Underscore (@samp{_})\n \n @item\n+@cindex <\n+@cindex open angle\n+@cindex left angle\n+@cindex open bracket\n+@cindex left bracket\n Open angle (@samp{<})\n \n @item\n+@cindex >\n+@cindex close angle\n+@cindex right angle\n+@cindex close bracket\n+@cindex right bracket\n Close angle (@samp{>})\n \n @item\n@@ -4801,16 +4844,18 @@ The FORTRAN 77 special characters (@key{SPC}, @samp{=},\n and @samp{:})\n @end itemize\n \n-@cindex blanks (spaces)\n+@cindex blank\n+@cindex space\n+@cindex SPC\n Note that this document refers to @key{SPC} as @dfn{space},\n while X3.9-1978 FORTRAN 77 refers to it as @dfn{blank}.\n \n @node Lines\n @subsection Lines\n @cindex lines\n @cindex source file format\n-@cindex source form\n-@cindex files, source\n+@cindex source format\n+@cindex file, source\n @cindex source code\n @cindex code, source\n @cindex fixed form\n@@ -4852,7 +4897,9 @@ The end-of-file marker (@code{EOF}) also serves to end the line\n of text that precedes it (and that does not contain a newline).\n \n @item\n-@cindex blanks (spaces)\n+@cindex blank\n+@cindex space\n+@cindex SPC\n Any line of text that is shorter than 72 characters is padded to that length\n with spaces (called ``blanks'' in the standard).\n \n@@ -4881,10 +4928,10 @@ line containing 72 spaces.\n \n @node Continuation Line\n @subsection Continuation Line\n-@cindex continuation lines, number of\n+@cindex continuation line, number of\n @cindex lines, continuation\n @cindex number of continuation lines\n-@cindex limits on continuation lines\n+@cindex limits, continuation lines\n \n (Corresponds to Section 3.2.3 of ANSI X3.9-1978 FORTRAN 77.)\n \n@@ -4998,7 +5045,7 @@ An @code{END BLOCK DATA} statement, if the program unit is a block data.\n \n @node INCLUDE\n @subsection Including Source Text\n-@cindex INCLUDE\n+@cindex INCLUDE directive\n \n Additional source text may be included in the processing of\n the source file via the @code{INCLUDE} directive:\n@@ -6375,10 +6422,10 @@ worth adding to the above list, please let us know the details\n \n @node REAL() and AIMAG() of Complex\n @subsection @code{REAL()} and @code{AIMAG()} of Complex\n-@cindex REAL intrinsic\n-@cindex intrinsics, REAL\n-@cindex AIMAG intrinsic\n-@cindex intrinsics, AIMAG\n+@cindex @code{Real} intrinsic\n+@cindex intrinsics, @code{Real}\n+@cindex @code{AImag} intrinsic\n+@cindex intrinsics, @code{AImag}\n \n The GNU Fortran language disallows @code{REAL(@var{expr})}\n and @code{AIMAG(@var{expr})},\n@@ -6435,8 +6482,8 @@ treated as @samp{REAL(REALPART(@var{expr}))}.\n \n @node CMPLX() of DOUBLE PRECISION\n @subsection @code{CMPLX()} of @code{DOUBLE PRECISION}\n-@cindex CMPLX intrinsic\n-@cindex intrinsics, CMPLX\n+@cindex @code{Cmplx} intrinsic\n+@cindex intrinsics, @code{Cmplx}\n \n In accordance with Fortran 90 and at least some (perhaps all)\n other compilers, the GNU Fortran language defines @code{CMPLX()}\n@@ -6599,7 +6646,7 @@ did not exist, would leave this document in far worse shape!)\n \n @node Scope and Classes of Names\n @section Scope and Classes of Symbolic Names\n-@cindex symbolic names\n+@cindex symbol names, scope and classes\n @cindex scope\n \n (The following information augments or overrides the information in\n@@ -6614,7 +6661,7 @@ for the relevant aspects of GNU Fortran.)\n \n @node Underscores in Symbol Names\n @subsection Underscores in Symbol Names\n-@cindex underscores\n+@cindex underscore\n \n Underscores (@samp{_}) are accepted in symbol names after the first\n character (which must be a letter).\n@@ -6639,6 +6686,7 @@ The @code{OPEN} specifier @code{NAME=} is equivalent to @code{FILE=}.\n These Fortran 90 features are supported: \n @itemize @bullet\n @item\n+@cindex FORMAT descriptors\n @cindex Z edit descriptor\n @cindex edit descriptor, Z\n The @code{Z} edit descriptor is supported.\n@@ -6651,6 +6699,7 @@ specifier is supported.\n @node Fortran 90 Features\n @section Fortran 90 Features\n @cindex Fortran 90\n+@cindex extensions, from Fortran 90\n \n For convenience this section collects a list (probably incomplete) of\n the Fortran 90 features supported by the GNU Fortran language, even if\n@@ -6699,14 +6748,21 @@ permitted.  Character constants may be enclosed in double quotes\n @item @code{IMPLICIT NONE}\n @item @code{INCLUDE} statements\n @xref{INCLUDE}.\n-@item List directed and namelist i/o on internal files\n+@item List-directed and namelist I/O on internal files\n @item Binary, octal and hexadecimal constants\n These are supported more generally than required by Fortran 90.\n @xref{Integer Type}.\n @item @code{NAMELIST}\n @xref{NAMELIST}.\n @item @code{OPEN} specifiers\n @code{STATUS='REPLACE'} is supported.\n+The @code{FILE=} specifier may be omitted in an @code{OPEN} statement if\n+@code{STATUS='SCRATCH'} is supplied.\n+@item @code{FORMAT} edit descriptors\n+@cindex FORMAT descriptors\n+@cindex Z edit descriptor\n+@cindex edit descriptor, Z\n+The @code{Z} edit descriptor is supported.\n @item Relational operators\n The operators @code{<}, @code{<=}, @code{==}, @code{/=}, @code{>} and\n @code{>=} may be used instead of @code{.LT.}, @code{.LE.}, @code{.EQ.},\n@@ -6760,8 +6816,8 @@ of work!}\n @node Source Form\n @section Source Form\n @cindex source file format\n-@cindex source form\n-@cindex files, source\n+@cindex source format\n+@cindex file, source\n @cindex source code\n @cindex code, source\n @cindex fixed form\n@@ -6810,7 +6866,8 @@ inside such constants.\n \n @node Tabs\n @subsection Tabs\n-@cindex tab characters\n+@cindex tab character\n+@cindex horizontal tab\n \n A source line with a @key{TAB} character anywhere in it is treated as\n entirely significant---however long it is---instead of ending in\n@@ -6844,8 +6901,7 @@ the way continued character/Hollerith constants are interpreted).\n @node Short Lines\n @subsection Short Lines\n @cindex short source lines\n-@cindex space-padding\n-@cindex spaces\n+@cindex space, padding with\n @cindex source lines, short\n @cindex lines, short\n \n@@ -6871,7 +6927,7 @@ like @samp{-ffixed-line-length-none}, for example.\n @node Long Lines\n @subsection Long Lines\n @cindex long source lines\n-@cindex truncation\n+@cindex truncation, of long lines\n @cindex lines, long\n @cindex source lines, long\n \n@@ -6898,8 +6954,11 @@ continuation line, imitating the behavior of @code{f2c}.\n @section Trailing Comment\n \n @cindex trailing comment\n-@cindex comment, trailing\n+@cindex comment\n+@cindex characters, comment\n @cindex /*\n+@cindex !\n+@cindex exclamation point\n @code{g77} supports use of @samp{/*} to start a trailing\n comment.\n In the GNU Fortran language, @samp{!} is used for this purpose.\n@@ -7292,7 +7351,8 @@ both constructs in the general case, since statements like\n \n @node Exclamation Point\n @subsection Meaning of Exclamation Point in Column 6\n-@cindex exclamation points\n+@cindex !\n+@cindex exclamation point\n @cindex continuation character\n @cindex characters, continuation\n @cindex comment character\n@@ -7326,7 +7386,7 @@ marks a line as a continuation line when it appears in column 6.)\n @node Fortran 90\n @section Fortran 90\n @cindex compatibility, Fortran 90\n-@cindex Fortran 90 compatibility\n+@cindex Fortran 90, compatibility\n \n The GNU Fortran language includes a number of features that are\n part of Fortran 90, even when the @samp{-ff90} option is not specified.\n@@ -7679,8 +7739,9 @@ without conversion.\n \n @node Ugly Null Arguments\n @subsection Ugly Null Arguments\n-@cindex trailing commas\n-@cindex commas, trailing\n+@cindex trailing comma\n+@cindex comma, trailing\n+@cindex characters, comma\n @cindex null arguments\n @cindex arguments, null\n \n@@ -8594,8 +8655,8 @@ avoid clashes with C++ reserved words in addition to those in C@.\n @subsection Startup Code\n \n @cindex startup code\n-@cindex runtime initialization\n-@cindex initialization, runtime\n+@cindex run-time, initialization\n+@cindex initialization, run-time\n Unlike with some runtime systems,\n it shouldn't be necessary\n (unless there are bugs)\n@@ -8830,10 +8891,10 @@ file @file{@value{path-libf2c}/libF77/main.c}, to see what kinds of things\n might need to be done by your @code{main()} in order to provide the\n Fortran environment your Fortran code is expecting.\n \n-@cindex IARGC() intrinsic\n-@cindex intrinsics, IARGC()\n-@cindex GETARG() intrinsic\n-@cindex intrinsics, GETARG()\n+@cindex @code{IArgC} intrinsic\n+@cindex intrinsics, @code{IArgC}\n+@cindex @code{GetArg} intrinsic\n+@cindex intrinsics, @code{GetArg}\n For example, @code{libg2c}'s @code{main()} sets up the information used by\n the @code{IARGC} and @code{GETARG} intrinsics.\n Bypassing @code{libg2c}'s @code{main()}\n@@ -9004,7 +9065,7 @@ functions return @code{float}.\n @node Names\n @section Names\n @cindex symbol names\n-@cindex transformation of symbol names\n+@cindex transforming symbol names\n \n Fortran permits each implementation to decide how to represent\n names as far as how they're seen in other contexts, such as debuggers\n@@ -9104,8 +9165,8 @@ could be used to inhibit the appending of the underscore to the name.\n @node Common Blocks\n @section Common Blocks (COMMON)\n @cindex common blocks\n-@cindex COMMON statement\n-@cindex statements, COMMON\n+@cindex @code{COMMON} statement\n+@cindex statements, @code{COMMON}\n \n @code{g77} names and lays out @code{COMMON} areas\n the same way @code{f2c} does,\n@@ -9219,7 +9280,7 @@ previous method in the documentation.)\n @node Complex Variables\n @section Complex Variables (COMPLEX)\n @cindex complex variables\n-@cindex imaginary part of complex\n+@cindex imaginary part\n @cindex COMPLEX statement\n @cindex statements, COMPLEX\n \n@@ -9943,8 +10004,8 @@ Microsoft's rumored patent on the digits 0 and 1 is upheld.)\n @cindex BLOCK DATA statement\n @cindex statements, BLOCK DATA\n @cindex libraries, containing BLOCK DATA\n-@cindex @code{f2c} compatibility\n-@cindex compatibility, @code{f2c}\n+@cindex f2c compatibility\n+@cindex compatibility, f2c\n \n To ensure that block data program units are linked, especially a concern\n when they are put into libraries, give each one a name (as in\n@@ -10044,7 +10105,7 @@ The meaning of a @code{DO} loop in Fortran is precisely specified\n in the Fortran standard@dots{}and is quite different from what\n many programmers might expect.\n \n-In particular, Fortran indexed @code{DO} loops are implemented as if\n+In particular, Fortran iterative @code{DO} loops are implemented as if\n the number of trips through the loop is calculated @emph{before}\n the loop is entered.\n \n@@ -10228,7 +10289,7 @@ tracking down bugs in such programs.\n * Aliasing Assumed To Work::\n * Output Assumed To Flush::\n * Large File Unit Numbers::\n-* Floating point precision::\n+* Floating-point precision::\n * Inconsistent Calling Sequences::\n @end menu\n \n@@ -10287,7 +10348,7 @@ are given types and then evaluated.\n @node Variables Assumed To Be Zero\n @subsection Variables Assumed To Be Zero\n @cindex zero-initialized variables\n-@cindex variables assumed to be zero\n+@cindex variables, assumed to be zero\n @cindex uninitialized variables\n \n Many Fortran programs were developed on systems that provided\n@@ -10312,7 +10373,7 @@ options using @code{g77}.\n \n @node Variables Assumed To Be Saved\n @subsection Variables Assumed To Be Saved\n-@cindex variables retaining values across calls\n+@cindex variables, retaining values across calls\n @cindex saved variables\n @cindex static variables\n \n@@ -10647,22 +10708,23 @@ open by a running program.\n Information on how to increase these limits should be found\n in your system's documentation.\n \n-@node Floating point precision\n-@subsection Floating point precision\n+@node Floating-point precision\n+@subsection Floating-point precision\n \n-@cindex IEEE 754\n-@cindex IEEE conformance\n-@cindex conformance, IEEE\n-@cindex floating point precision\n-If your program depends on exact IEEE 754 floating point handling it may\n+@cindex IEEE 754 conformance\n+@cindex conformance, IEEE 754\n+@cindex floating-point, precision\n+@cindex ix86 floating-point\n+@cindex x86 floating-point\n+If your program depends on exact IEEE 754 floating-point handling it may\n help on some systems---specifically x86 or m68k hardware---to use\n the @code{-ffloat-store} option or to reset the precision flag on the\n-floating point unit @xref{Optimize Options}.\n+floating-point unit @xref{Optimize Options}.\n \n However, it might be better simply to put the FPU into double precision\n mode and not take the performance hit of @code{-ffloat-store}.  On x86\n and m68k GNU systems you can do this with a technique similar to that\n-for turning on floating point exceptions @xref{Floating-point Exception\n+for turning on floating-point exceptions @xref{Floating-point Exception\n Handling}.  The control word could be set to double precision by\n replacing the @code{__setfpucw} call with one like this:\n @smallexample\n@@ -10679,7 +10741,8 @@ Configurations,gcc,Using and Porting GNU CC}.\n @subsection Inconsistent Calling Sequences\n \n @pindex ftnchek\n-@cindex floating point errors\n+@cindex floating-point, errors\n+@cindex ix86 FPU stack\n @cindex x86 FPU stack\n Code containing inconsistent calling sequences in the same file is\n normally rejected @xref{GLOBALS}.  (Use, say, @code{ftnchek} to ensure\n@@ -10695,11 +10758,11 @@ consistency across source files\n \n Mysterious errors, which may appear to be code generation problems, can\n appear specifically on the x86 architecture with some such\n-inconsistencies.  On x86 hardware, floating point return values of\n-functions are placed on the floating point unit's register stack, not\n+inconsistencies.  On x86 hardware, floating-point return values of\n+functions are placed on the floating-point unit's register stack, not\n the normal stack.  Thus calling a @code{REAL} or @code{DOUBLE PRECISION}\n @code{FUNCTION} as some other sort of procedure, or vice versa,\n-scrambles the floating point stack.  This may break unrelated code\n+scrambles the floating-point stack.  This may break unrelated code\n executed later.  Similarly if, say, external C routines are written\n incorrectly.\n \n@@ -10798,7 +10861,7 @@ It is easy to find these using @samp{-f@var{group}-intrinsics-disable}.\n \n @node Faster Programs\n @section Faster Programs\n-@cindex speeding up programs\n+@cindex speed, of programs\n @cindex programs, speeding up\n \n Aside from the usual @code{gcc} options, such as @samp{-O},\n@@ -10820,7 +10883,7 @@ it working).\n @cindex aligned data\n @cindex aligned stack\n @cindex Pentium optimizations\n-@cindex optimizations, Pentium\n+@cindex optimization, for Pentium\n \n On some systems, such as those with Pentium Pro CPUs, programs\n that make heavy use of @code{REAL(KIND=2)} (@code{DOUBLE PRECISION})\n@@ -10842,8 +10905,8 @@ There are a variety of approaches to use to address this problem:\n \n @itemize @bullet\n @item\n-@cindex COMMON, layout\n-@cindex layout of common blocks\n+@cindex @code{COMMON} layout\n+@cindex layout of @code{COMMON} blocks\n Order your @code{COMMON} and @code{EQUIVALENCE} areas such\n that the variables and arrays with the widest alignment\n guidelines come first.\n@@ -10984,7 +11047,7 @@ compiler, typically @code{gcc}.)\n @node Use Submodel Options\n @subsection Use Submodel Options\n @cindex Pentium optimizations\n-@cindex optimizations, Pentium\n+@cindex optimization, for Pentium\n @cindex 586/686 CPUs\n @cindex submodels\n \n@@ -11150,8 +11213,8 @@ a reference to it in future versions of this manual.\n @cindex unresolved reference (various)\n @cindex linking error for user code\n @cindex code, user\n-@cindex ld error for user code\n-@cindex ld can't find strange names\n+@cindex @code{ld}, error linking user code\n+@cindex @code{ld}, can't find strange names\n On some systems, perhaps just those with out-of-date (shared?)\n libraries, unresolved-reference errors happen when linking @code{g77}-compiled\n programs (which should be done using @code{g77}).\n@@ -11167,10 +11230,10 @@ systems where @samp{-lg2c -lm} is insufficient to resolve code produced\n by @code{g77}.\n \n @cindex undefined reference (_main)\n-@cindex linking error for user code\n-@cindex ld error for user code\n+@cindex linking error, user code\n+@cindex @code{ld}, error linking user code\n @cindex code, user\n-@cindex ld can't find _main\n+@cindex @code{ld}, can't find @samp{_main}\n If your program doesn't link due to unresolved references to names\n like @samp{_main}, make sure you're using the @code{g77} command to do the\n link, since this command ensures that the necessary libraries are\n@@ -11187,8 +11250,8 @@ command line, in case that helps.\n @subsection Large Common Blocks\n @cindex common blocks, large\n @cindex large common blocks\n-@cindex linker errors\n-@cindex ld errors\n+@cindex linking, errors\n+@cindex @code{ld}, errors\n @cindex errors, linker\n On some older GNU/Linux systems, programs with common blocks larger\n than 16MB cannot be linked without some kind of error\n@@ -11199,7 +11262,7 @@ more recent versions of @code{binutils}, such as version 2.6.\n \n @node Debugger Problems\n @subsection Debugger Problems\n-@cindex @code{gdb} support\n+@cindex @code{gdb}, support\n @cindex support, @code{gdb}\n There are some known problems when using @code{gdb} on code\n compiled by @code{g77}.\n@@ -11269,7 +11332,7 @@ not enough.)\n \n @node Stack Overflow\n @subsection Stack Overflow\n-@cindex stack overflow\n+@cindex stack, overflow\n @cindex segmentation violation\n @code{g77} code might fail at runtime (probably with a ``segmentation\n violation'') due to overflowing the stack.\n@@ -11321,9 +11384,9 @@ simply too large for the system, or buggy.)\n @node Nothing Happens\n @subsection Nothing Happens\n @cindex nothing happens\n-@cindex naming programs @samp{test}\n+@cindex naming programs\n @cindex @samp{test} programs\n-@cindex programs named @samp{test}\n+@cindex programs, @samp{test}\n It is occasionally reported that a ``simple'' program,\n such as a ``Hello, World!'' program, does nothing when\n it is run, even though the compiler reported no errors,\n@@ -11411,7 +11474,7 @@ bugs that lead to these behaviors is, ultimately, the user's\n responsibility, as difficult as that task can sometimes be.\n \n @cindex ``infinite spaces'' printed\n-@cindex spaces, endless printing of\n+@cindex space, endless printing of\n @cindex libc, non-ANSI or non-default\n @cindex C library\n @cindex linking against non-standard library\n@@ -11540,7 +11603,7 @@ instead of converting them to double precision first.\n This would tend to result in output that is more consistent\n with that produced by some other Fortran implementations.\n \n-A useful source of information on floating point computation is David\n+A useful source of information on floating-point computation is David\n Goldberg, `What Every Computer Scientist Should Know About\n Floating-Point Arithmetic', Computing Surveys, 23, March 1991, pp.@:\n 5--48.  At the time of writing this is available online under\n@@ -11565,7 +11628,7 @@ as ``spills''.\n \n @cindex spills of floating-point results\n @cindex 80-bit spills\n-@cindex truncation of floating-point values\n+@cindex truncation, of floating-point values\n (@code{g77} specifically, and @code{gcc} generally, does\n arbitrarily truncate 80-bit results during spills\n as of this writing.\n@@ -11577,7 +11640,7 @@ as an option, or as the default behavior.)\n The GNU C library provides routines for controlling the FPU, and other\n documentation about this.\n \n-@xref{Floating point precision}, regarding IEEE 754 conformance.\n+@xref{Floating-point precision}, regarding IEEE 754 conformance.\n \n @include bugs.texi\n \n@@ -11688,7 +11751,7 @@ having to specify, say, a @code{-Wno-col73to80} option.\n \n @node Fortran 90 Support\n @subsection Fortran 90 Support\n-@cindex Fortran 90 support\n+@cindex Fortran 90, support\n @cindex support, Fortran 90\n \n @code{g77} does not support many of the features that\n@@ -11800,8 +11863,10 @@ alleviate this problem).\n \n @node Popular Non-standard Types\n @subsection Popular Non-standard Types\n-@cindex INTEGER*2 support\n-@cindex LOGICAL*1 support\n+@cindex @code{INTEGER*2} support\n+@cindex types, @code{INTEGER*2}\n+@cindex @code{LOGICAL*1} support\n+@cindex types, @code{LOGICAL*1}\n \n @code{g77} doesn't fully support @code{INTEGER*2}, @code{LOGICAL*1},\n and similar.\n@@ -11813,7 +11878,10 @@ for them.\n @node Full Support for Compiler Types\n @subsection Full Support for Compiler Types\n \n-@cindex REAL*16 support\n+@cindex @code{REAL*16} support\n+@cindex types, @code{REAL*16}\n+@cindex @code{INTEGER*8} support\n+@cindex types, @code{INTEGER*8}\n @code{g77} doesn't support @code{INTEGER}, @code{REAL}, and @code{COMPLEX} equivalents\n for @emph{all} applicable back-end-supported types (@code{char}, @code{short int},\n @code{int}, @code{long int}, @code{long long int}, and @code{long double}).\n@@ -11829,8 +11897,8 @@ This is scheduled for version 0.6.\n @cindex array elements, in adjustable array bounds\n @cindex function references, in adjustable array bounds\n @cindex array bounds, adjustable\n-@cindex DIMENSION statement\n-@cindex statements, DIMENSION\n+@cindex @code{DIMENSION} statement\n+@cindex statements, @code{DIMENSION}\n \n @code{g77} doesn't support more general expressions to dimension\n arrays, such as array element references, function\n@@ -12064,7 +12132,7 @@ require much more work on @code{libg2c}.\n \n @cindex FORM='PRINT'\n @cindex ANS carriage control\n-@cindex carraige control\n+@cindex carriage control\n @pindex asa\n @pindex fpr\n @code{g77} doesn't support @code{FORM='PRINT'} or an equivalent to\n@@ -12185,18 +12253,18 @@ files included via the @code{INCLUDE} directive.\n \n @node Bit Operations on Floating-point Data\n @subsection Bit Operations on Floating-point Data\n-@cindex AND intrinsic\n-@cindex intrinsics, AND\n-@cindex OR intrinsic\n-@cindex intrinsics, OR\n-@cindex SHIFT intrinsic\n-@cindex intrinsics, SHIFT\n+@cindex @code{And} intrinsic\n+@cindex intrinsics, @code{And}\n+@cindex @code{Or} intrinsic\n+@cindex intrinsics, @code{Or}\n+@cindex @code{Shift} intrinsic\n+@cindex intrinsics, @code{Shift}\n \n @code{g77} does not allow @code{REAL} and other non-integral types for\n-arguments to intrinsics like @code{AND}, @code{OR}, and @code{SHIFT}.\n+arguments to intrinsics like @code{And}, @code{Or}, and @code{Shift}.\n \n For example, this program is rejected by @code{g77}, because\n-the intrinsic @code{IAND} does not accept @code{REAL} arguments:\n+the intrinsic @code{Iand} does not accept @code{REAL} arguments:\n \n @smallexample\n DATA A/7.54/, B/9.112/\n@@ -12211,8 +12279,8 @@ END\n \n @node Floating-point Exception Handling\n @subsection Floating-point Exception Handling\n-@cindex floating point exceptions\n-@cindex exceptions, floating point\n+@cindex floating-point, exceptions\n+@cindex exceptions, floating-point\n @cindex FPE handling\n @cindex NaN values\n \n@@ -12560,7 +12628,7 @@ way around them for now.\n @cindex external names\n @cindex common blocks\n @cindex name space\n-@cindex underscores\n+@cindex underscore\n \n The current external-interface design, which includes naming of\n external procedures, COMMON blocks, and the library interface,\n@@ -12580,8 +12648,8 @@ with popular existing compilers.\n @cindex block data\n @cindex BLOCK DATA statement\n @cindex statements, BLOCK DATA\n-@cindex COMMON statement\n-@cindex statements, COMMON\n+@cindex @code{COMMON} statement\n+@cindex statements, @code{COMMON}\n @cindex naming conflicts\n \n @code{g77} doesn't allow a common block and an external procedure or\n@@ -12643,8 +12711,8 @@ we do not make because we think GNU Fortran is better without them.\n @node Backslash in Constants\n @subsection Backslash in Constants\n @cindex backslash\n-@cindex f77 support\n-@cindex support, f77\n+@cindex @code{f77} support\n+@cindex support, @code{f77}\n \n In the opinion of many experienced Fortran users,\n @samp{-fno-backslash} should be the default, not @samp{-fbackslash},\n@@ -14792,6 +14860,8 @@ was not specified on the command line to compile it.\n Free form is a newer form for Fortran code.\n The older, classic form is called fixed form.\n \n+@cindex continuation character\n+@cindex characters, continuation\n Fixed-form code is visually fairly distinctive, because\n numerical labels and comments are all that appear in\n the first five columns of a line, the sixth column is\n@@ -14800,8 +14870,15 @@ and actual statements start at or beyond column 7.\n Spaces generally are not significant, so if you\n see statements such as @samp{REALX,Y} and @samp{DO10I=1,100},\n you are looking at fixed-form code.\n+@cindex *\n+@cindex asterisk\n Comment lines are indicated by the letter @samp{C} or the symbol\n @samp{*} in column 1.\n+@cindex trailing comment\n+@cindex comment\n+@cindex characters, comment\n+@cindex !\n+@cindex exclamation point\n (Some code uses @samp{!} or @samp{/*} to begin in-line comments,\n which many compilers support.)\n "}, {"sha": "254a617431a5d2d93af73383104ef13dae7d0fde", "filename": "gcc/f/g77install.texi", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26b9526eae0630c2d291bb07ff6932f3f945ace0/gcc%2Ff%2Fg77install.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26b9526eae0630c2d291bb07ff6932f3f945ace0/gcc%2Ff%2Fg77install.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77install.texi?ref=26b9526eae0630c2d291bb07ff6932f3f945ace0", "patch": "@@ -24,7 +24,7 @@\n @node Installation\n @chapter Installing GNU Fortran\n @end ifclear\n-@cindex installing GNU Fortran\n+@cindex installing, GNU Fortran\n \n The following information describes how to install @code{g77}.\n \n@@ -403,7 +403,7 @@ and @code{egcs} version 1.0.\n \n @node Building GNU CC Necessary\n @subsubsection Building GNU CC Necessary\n-@cindex gcc, building\n+@cindex @code{gcc}, building\n @cindex building gcc\n \n It should be possible to build the runtime without building @code{cc1}\n@@ -420,9 +420,9 @@ is not yet established.\n @cindex undefined reference (_strtoul)\n @cindex f771, linking error for\n @cindex linking error for f771\n-@cindex ld error for f771\n-@cindex ld can't find _bsearch\n-@cindex ld can't find _strtoul\n+@cindex @code{ld}, error linking f771\n+@cindex @code{ld}, can't find _bsearch\n+@cindex @code{ld}, can't find _strtoul\n @cindex SunOS4\n \n @emph{Version info:}\n@@ -721,7 +721,7 @@ Then build or rebuild @code{g77} as appropriate.\n @vindex FFECOM_sizeMAXSTACKITEM\n @cindex code, stack variables\n @cindex maximum stackable size\n-@cindex stack allocation\n+@cindex stack, allocation\n @cindex segmentation violation\n @code{g77}, on most machines, puts many variables and arrays on the stack\n where possible, and can be configured (by changing\n@@ -758,7 +758,7 @@ something like @samp{EQUIVALENCE (I,R)} and @samp{DATA R/9.43578/}.)\n @node Large Initialization\n @subsection Initialization of Large Aggregate Areas\n \n-@cindex speed, compiler\n+@cindex speed, of compiler\n @cindex slow compiler\n @cindex memory utilization\n @cindex large initialization\n@@ -1209,7 +1209,7 @@ tree for the first time.\n @cindex modifying @code{g77}\n @cindex code, modifying\n @cindex Pentium optimizations\n-@cindex optimizations, Pentium\n+@cindex optimization, for Pentium\n @emph{Note:} Please use @strong{only} @code{gcc} and @code{g77}\n source trees as distributed by the FSF.\n Use of modified versions is likely to result in problems that appear to be\n@@ -1223,16 +1223,16 @@ and @code{gcc} can coexist as they do in the stock FSF distributions.\n @node Merging Distributions\n @subsection Merging Distributions\n @cindex merging distributions\n-@cindex @code{gcc} versions supported by @code{g77}\n-@cindex versions of @code{gcc}\n-@cindex support for @code{gcc} versions\n+@cindex @code{gcc}, versions supported by @code{g77}\n+@cindex versions, of @code{gcc}\n+@cindex support, @code{gcc} versions\n \n After merging the @code{g77} source tree into the @code{gcc} source tree,\n you have put together a complete @code{g77} source tree.\n \n-@cindex gcc version numbering\n-@cindex version numbering\n-@cindex g77 version number\n+@cindex @code{gcc}, version number\n+@cindex version number\n+@cindex @code{g77}, version number\n @cindex GNU version numbering\n As of version 0.5.23, @code{g77} no longer modifies\n the version number of @code{gcc},\n@@ -1325,7 +1325,7 @@ the @code{g77} front end (FFE).\n @node Where to Install\n @subsection Where in the World Does Fortran (and GNU CC) Go?\n @cindex language f77 not recognized\n-@cindex gcc will not compile Fortran programs\n+@cindex @code{gcc}, will not compile Fortran programs\n \n Before configuring, you should make sure you know\n where you want the @code{g77} and @code{gcc}\n@@ -1470,7 +1470,7 @@ issuing an explanatory diagnostic.\n @cindex building @code{gcc}\n @cindex building @code{g77}\n \n-@vindex LANGUAGES\n+@cindex @samp{LANGUAGES} macro\n Building @code{g77} requires building enough of @code{gcc} that\n these instructions assume you're going to build all of\n @code{gcc}, including @code{g++}, @code{protoize}, and so on."}]}