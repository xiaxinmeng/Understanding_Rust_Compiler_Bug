{"sha": "41c3db9f28afae381b1f4cb18ac370fcd3da8706", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDFjM2RiOWYyOGFmYWUzODFiMWY0Y2IxOGFjMzcwZmNkM2RhODcwNg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-05-08T13:05:04Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-05-08T13:05:04Z"}, "message": "PR libstdc++/85672 #undef _GLIBCXX_USE_FLOAT128 when not supported\n\nRestore the behaviour in GCC 8 and earlier where _GLIBCXX_USE_FLOAT128\nis not defined when configure detects support is missing. This avoids\nhaving three states where the macro is either 1, 0, or undefined.\n\n\tPR libstdc++/85672\n\t* include/Makefile.am [!ENABLE_FLOAT128]: Change c++config.h entry\n\tto #undef _GLIBCXX_USE_FLOAT128 instead of defining it to zero.\n\t* include/Makefile.in: Regenerate.\n\t* include/bits/c++config (_GLIBCXX_USE_FLOAT128): Move definition\n\twithin conditional block.\n\nFrom-SVN: r260043", "tree": {"sha": "7b0c280cb05498d6ea41e292526e3a0549cfed2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7b0c280cb05498d6ea41e292526e3a0549cfed2a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41c3db9f28afae381b1f4cb18ac370fcd3da8706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c3db9f28afae381b1f4cb18ac370fcd3da8706", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41c3db9f28afae381b1f4cb18ac370fcd3da8706", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41c3db9f28afae381b1f4cb18ac370fcd3da8706/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50e461dfe37e66bff2a2932480fb041743cdd93c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50e461dfe37e66bff2a2932480fb041743cdd93c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50e461dfe37e66bff2a2932480fb041743cdd93c"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "4f980ca21dfe3870eb7daafebdb54e8dc1fa4e34", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c3db9f28afae381b1f4cb18ac370fcd3da8706/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c3db9f28afae381b1f4cb18ac370fcd3da8706/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=41c3db9f28afae381b1f4cb18ac370fcd3da8706", "patch": "@@ -1,3 +1,12 @@\n+2018-05-08  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/85672\n+\t* include/Makefile.am [!ENABLE_FLOAT128]: Change c++config.h entry\n+\tto #undef _GLIBCXX_USE_FLOAT128 instead of defining it to zero.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/bits/c++config (_GLIBCXX_USE_FLOAT128): Move definition\n+\twithin conditional block.\n+\n 2018-05-07  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* doc/xml/manual/using.xml (table.cmd_options): Document that the"}, {"sha": "77e6dc2f6be79ef1d78405b4e66416819145d9de", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c3db9f28afae381b1f4cb18ac370fcd3da8706/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c3db9f28afae381b1f4cb18ac370fcd3da8706/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=41c3db9f28afae381b1f4cb18ac370fcd3da8706", "patch": "@@ -1232,10 +1232,10 @@ endif\n \n if ENABLE_FLOAT128\n stamp-float128:\n-\techo 1 > stamp-float128\n+\techo 'define _GLIBCXX_USE_FLOAT128 1' > stamp-float128\n else\n stamp-float128:\n-\techo 0 > stamp-float128\n+\techo 'undef _GLIBCXX_USE_FLOAT128' > stamp-float128\n endif\n \n # NB: The non-empty default ldbl_compat works around an AIX sed\n@@ -1272,7 +1272,7 @@ ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t-e \"s,define _GLIBCXX_USE_DUAL_ABI, define _GLIBCXX_USE_DUAL_ABI $$dualabi,\" \\\n \t-e \"s,define _GLIBCXX_USE_CXX11_ABI, define _GLIBCXX_USE_CXX11_ABI $$cxx11abi,\" \\\n \t-e \"s,define _GLIBCXX_USE_ALLOCATOR_NEW, define _GLIBCXX_USE_ALLOCATOR_NEW $$allocatornew,\" \\\n-\t-e \"s,define _GLIBCXX_USE_FLOAT128, define _GLIBCXX_USE_FLOAT128 $$float128,\" \\\n+\t-e \"s,define _GLIBCXX_USE_FLOAT128,$$float128,\" \\\n \t-e \"$$ldbl_compat\" \\\n \t    < ${glibcxx_srcdir}/include/bits/c++config > $@ ;\\\n \tsed -e 's/HAVE_/_GLIBCXX_HAVE_/g' \\"}, {"sha": "948a5c1f1c5442a8fd4a564a0d2f5803d287837a", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c3db9f28afae381b1f4cb18ac370fcd3da8706/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c3db9f28afae381b1f4cb18ac370fcd3da8706/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=41c3db9f28afae381b1f4cb18ac370fcd3da8706", "patch": "@@ -1663,9 +1663,9 @@ stamp-host: ${host_headers} ${bits_host_headers} ${ext_host_headers} ${host_head\n @ENABLE_ALLOCATOR_NEW_FALSE@\techo 0 > stamp-allocator-new\n \n @ENABLE_FLOAT128_TRUE@stamp-float128:\n-@ENABLE_FLOAT128_TRUE@\techo 1 > stamp-float128\n+@ENABLE_FLOAT128_TRUE@\techo 'define _GLIBCXX_USE_FLOAT128 1' > stamp-float128\n @ENABLE_FLOAT128_FALSE@stamp-float128:\n-@ENABLE_FLOAT128_FALSE@\techo 0 > stamp-float128\n+@ENABLE_FLOAT128_FALSE@\techo 'undef _GLIBCXX_USE_FLOAT128' > stamp-float128\n \n # NB: The non-empty default ldbl_compat works around an AIX sed\n # oddity, see libstdc++/31957 for details.\n@@ -1701,7 +1701,7 @@ ${host_builddir}/c++config.h: ${CONFIG_HEADER} \\\n \t-e \"s,define _GLIBCXX_USE_DUAL_ABI, define _GLIBCXX_USE_DUAL_ABI $$dualabi,\" \\\n \t-e \"s,define _GLIBCXX_USE_CXX11_ABI, define _GLIBCXX_USE_CXX11_ABI $$cxx11abi,\" \\\n \t-e \"s,define _GLIBCXX_USE_ALLOCATOR_NEW, define _GLIBCXX_USE_ALLOCATOR_NEW $$allocatornew,\" \\\n-\t-e \"s,define _GLIBCXX_USE_FLOAT128, define _GLIBCXX_USE_FLOAT128 $$float128,\" \\\n+\t-e \"s,define _GLIBCXX_USE_FLOAT128,$$float128,\" \\\n \t-e \"$$ldbl_compat\" \\\n \t    < ${glibcxx_srcdir}/include/bits/c++config > $@ ;\\\n \tsed -e 's/HAVE_/_GLIBCXX_HAVE_/g' \\"}, {"sha": "bfe268da825090dec334224aafec0b9d646b9a7b", "filename": "libstdc++-v3/include/bits/c++config", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41c3db9f28afae381b1f4cb18ac370fcd3da8706/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41c3db9f28afae381b1f4cb18ac370fcd3da8706/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2Bconfig?ref=41c3db9f28afae381b1f4cb18ac370fcd3da8706", "patch": "@@ -610,9 +610,8 @@ namespace std\n #endif\n \n /* Define if __float128 is supported on this host. */\n+#if defined(__FLOAT128__) || defined(__SIZEOF_FLOAT128__)\n #define _GLIBCXX_USE_FLOAT128\n-#if !defined(__FLOAT128__) && !defined(__SIZEOF_FLOAT128__)\n-#undef _GLIBCXX_USE_FLOAT128\n #endif\n \n // End of prewritten config; the settings discovered at configure time follow."}]}