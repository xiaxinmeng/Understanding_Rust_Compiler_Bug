{"sha": "c1e6691245ca2f1f329549f323f67afe32bcb97a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzFlNjY5MTI0NWNhMmYxZjMyOTU0OWYzMjNmNjdhZmUzMmJjYjk3YQ==", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-06-19T07:36:23Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2020-11-02T09:00:51Z"}, "message": "RISC-V: Add configure option: --with-multilib-generator to flexible config multi-lib settings.\n\n - Able to configure complex multi-lib rule in configure time, without modify\n   any in-tree source.\n\n - I was consider to implmenet this into `--with-multilib-list` option,\n   but I am not sure who will using that with riscv*-*-elf*, so I decide to\n   using another option name for that.\n\n - --with-multilib-generator will pass arguments to multilib-generator, and\n   then using the generated multi-lib config file to build the toolchain.\n\n   e.g. Build riscv gcc, default arch/abi is rv64gc/lp64, and build multilib\n       for rv32imafd/ilp32 and rv32i/ilp32; rv32ic/ilp32 will reuse\n       rv32i/ilp32.\n    $ <GCC-SRC>/configure \\\n       --target=riscv64-elf \\\n       --with-arch=rv64gc --with-abi=lp64 \\\n       --with-multilib-generator=rv32i-ilp32--c;rv32imafd-ilp32--\n\nV3 Changes:\n\n - Rename --with-multilib-config to --with-multilib-generator\n - Check --with-multilib-generator and --with-multilib-list can't be used at\n   same time.\n\nV2 Changes:\n\n - Fix --with-multilib-config hanling on non riscv*-*-elf* triple.\n\ngcc/ChangeLog:\n\n\t* config.gcc (riscv*-*-*): Handle --with-multilib-generator.\n\t* configure: Regen.\n\t* configure.ac: Add --with-multilib-generator.\n\t* config/riscv/multilib-generator: Exit when parsing arch string error.\n\t* config/riscv/t-withmultilib-generator: New.\n\t* doc/install.texi: Document --with-multilib-generator.", "tree": {"sha": "5c73db096ab8cbb7c31931592b72f253e2449a23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c73db096ab8cbb7c31931592b72f253e2449a23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c1e6691245ca2f1f329549f323f67afe32bcb97a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e6691245ca2f1f329549f323f67afe32bcb97a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1e6691245ca2f1f329549f323f67afe32bcb97a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1e6691245ca2f1f329549f323f67afe32bcb97a/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3c3e2c9e88e25a410a2fe089782b094e911bb39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c3e2c9e88e25a410a2fe089782b094e911bb39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c3e2c9e88e25a410a2fe089782b094e911bb39"}], "stats": {"total": 99, "additions": 91, "deletions": 8}, "files": [{"sha": "dc6d68bd4eb464269925d5e0ac8af25c3809f5ea", "filename": "gcc/config.gcc", "status": "modified", "additions": 31, "deletions": 5, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=c1e6691245ca2f1f329549f323f67afe32bcb97a", "patch": "@@ -2438,11 +2438,13 @@ riscv*-*-elf* | riscv*-*-rtems*)\n \t  tmake_file=\"${tmake_file} riscv/t-rtems\"\n \t  ;;\n \t*)\n-\t  case \"x${enable_multilib}\" in\n-\t  xno) ;;\n-\t  xyes) tmake_file=\"${tmake_file} riscv/t-elf-multilib\" ;;\n-\t  *) echo \"Unknown value for enable_multilib\"; exit 1\n-\t  esac\n+\t  if test \"x${with_multilib_generator}\" == xdefault; then\n+\t\t  case \"x${enable_multilib}\" in\n+\t\t  xno) ;;\n+\t\t  xyes) tmake_file=\"${tmake_file} riscv/t-elf-multilib\" ;;\n+\t\t  *) echo \"Unknown value for enable_multilib\"; exit 1\n+\t\t  esac\n+\t  fi\n \tesac\n \ttmake_file=\"${tmake_file} riscv/t-riscv\"\n \tgnu_ld=yes\n@@ -4609,6 +4611,30 @@ case \"${target}\" in\n \t\t\texit 1\n \t\t\t;;\n \t\tesac\n+\t\t# Handle --with-multilib-generator.\n+\t\tif test \"x${with_multilib_generator}\" != xdefault; then\n+\t\t\tif test \"x${with_multilib_list}\" != xdefault; then\n+\t\t\t\techo \"--with-multilib-list= can't used with --with-multilib-generator= at same time\" 1>&2\n+\t\t\t\texit 1\n+\t\t\tfi\n+\t\t\tcase \"${target}\" in\n+\t\t\triscv*-*-elf*)\n+\t\t\t\tif ${srcdir}/config/riscv/multilib-generator \\\n+\t\t\t\t\t`echo ${with_multilib_generator} | sed 's/;/ /g'`\\\n+\t\t\t\t\t> t-multilib-config;\n+\t\t\t\tthen\n+\t\t\t\t\ttmake_file=\"${tmake_file} riscv/t-withmultilib-generator\"\n+\t\t\t\telse\n+\t\t\t\t\techo \"invalid option for --with-multilib-generator\" 1>&2\n+\t\t\t\t\texit 1\n+\t\t\t\tfi\n+\t\t\t\t;;\n+\t\t\t*)\n+\t\t\t\techo \"--with-multilib-generator= is not supported for ${target}, only supported for riscv*-*-elf*\" 1>&2\n+\t\t\t\texit 1\n+\t\t\t\t;;\n+\t\t\tesac\n+\t\tfi\n \n \t\t# Handle --with-multilib-list.\n \t\tif test \"x${with_multilib_list}\" != xdefault; then"}, {"sha": "0d9ebcb321f59f75cb3957e9496c414fee5ea958", "filename": "gcc/config/riscv/multilib-generator", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfig%2Friscv%2Fmultilib-generator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfig%2Friscv%2Fmultilib-generator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Fmultilib-generator?ref=c1e6691245ca2f1f329549f323f67afe32bcb97a", "patch": "@@ -194,7 +194,14 @@ def expand_combination(ext):\n   return ext\n \n for cfg in sys.argv[1:]:\n-  (arch, abi, extra, ext) = cfg.split('-')\n+  try:\n+    (arch, abi, extra, ext) = cfg.split('-')\n+  except:\n+    print (\"Invalid configure string %s, <arch>-<abi>-<extra>-<extensions>\\n\"\n+           \"<extra> and <extensions> can be empty, \"\n+           \"e.g. rv32imafd-ilp32--\" % cfg)\n+    sys.exit(1)\n+\n   arch = arch_canonicalize (arch)\n   arches[arch] = 1\n   abis[abi] = 1"}, {"sha": "1a35cc0bc6557fe6624fb69d80699ee26b1f2842", "filename": "gcc/config/riscv/t-withmultilib-generator", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfig%2Friscv%2Ft-withmultilib-generator", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfig%2Friscv%2Ft-withmultilib-generator", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Friscv%2Ft-withmultilib-generator?ref=c1e6691245ca2f1f329549f323f67afe32bcb97a", "patch": "@@ -0,0 +1,2 @@\n+# t-multilib-config will generated in build folder by configure script.\n+include t-multilib-config"}, {"sha": "9d2fd0dc30bc33136810628e2abc58157f1c6335", "filename": "gcc/configure", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c1e6691245ca2f1f329549f323f67afe32bcb97a", "patch": "@@ -972,6 +972,7 @@ with_documentation_root_url\n with_changes_root_url\n enable_languages\n with_multilib_list\n+with_multilib_generator\n with_zstd\n with_zstd_include\n with_zstd_lib\n@@ -1811,6 +1812,8 @@ Optional Packages:\n   --with-changes-root-url=URL\n                           Root for GCC changes URLs\n   --with-multilib-list    select multilibs (AArch64, SH and x86-64 only)\n+  --with-multilib-generator\n+                          Multi-libs configuration string (RISC-V only)\n   --with-zstd=PATH        specify prefix directory for installed zstd library.\n                           Equivalent to --with-zstd-include=PATH/include plus\n                           --with-zstd-lib=PATH/lib\n@@ -8002,6 +8005,15 @@ else\n fi\n \n \n+\n+# Check whether --with-multilib-generator was given.\n+if test \"${with_multilib_generator+set}\" = set; then :\n+  withval=$with_multilib_generator; :\n+else\n+  with_multilib_generator=default\n+fi\n+\n+\n # -------------------------\n # Checks for other programs\n # -------------------------\n@@ -19018,7 +19030,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19021 \"configure\"\n+#line 19033 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -19124,7 +19136,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 19127 \"configure\"\n+#line 19139 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "73034bb902b9de17735d88aecf566255ab833191", "filename": "gcc/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=c1e6691245ca2f1f329549f323f67afe32bcb97a", "patch": "@@ -1102,6 +1102,11 @@ AC_ARG_WITH(multilib-list,\n :,\n with_multilib_list=default)\n \n+AC_ARG_WITH(multilib-generator,\n+[AS_HELP_STRING([--with-multilib-generator], [Multi-libs configuration string (RISC-V only)])],\n+:,\n+with_multilib_generator=default)\n+\n # -------------------------\n # Checks for other programs\n # -------------------------"}, {"sha": "ed737d181625042593e3bf599e256e7d3303dc51", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c1e6691245ca2f1f329549f323f67afe32bcb97a/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=c1e6691245ca2f1f329549f323f67afe32bcb97a", "patch": "@@ -1252,6 +1252,37 @@ If @option{--with-multilib-list} is not given, then only 32-bit and\n 64-bit run-time libraries will be enabled.\n @end table\n \n+@item --with-multilib-generator=@var{config}\n+Specify what multilibs to build.  @var{config} is a semicolon separated list of\n+values, possibly consisting of a single value.  Currently only implemented\n+for riscv*-*-elf*.  The accepted values and meanings are given below.\n+\n+\n+Every config is constructed with four components: architecture string, ABI,\n+reuse rule with architecture string and reuse rule with sub-extension.\n+\n+Example 1: Add multi-lib suppport for rv32i with ilp32.\n+@smallexample\n+rv32i-ilp32--\n+@end smallexample\n+\n+Example 2: Add multi-lib suppport for rv32i with ilp32 and rv32imafd with ilp32.\n+@smallexample\n+rv32i-ilp32--;rv32imafd-ilp32--\n+@end smallexample\n+\n+Example 3: Add multi-lib suppport for rv32i with ilp32; rv32im with ilp32 and\n+rv32ic with ilp32 will reuse this multi-lib set.\n+@smallexample\n+rv32i-ilp32-rv32im-c\n+@end smallexample\n+\n+Example 4: Add multi-lib suppport for rv64ima with lp64; rv64imaf with lp64,\n+rv64imac with lp64 and rv64imafc with lp64 will reuse this multi-lib set.\n+@smallexample\n+rv64ima-lp64--f,c,fc\n+@end smallexample\n+\n @item --with-endian=@var{endians}\n Specify what endians to use.\n Currently only implemented for sh*-*-*."}]}