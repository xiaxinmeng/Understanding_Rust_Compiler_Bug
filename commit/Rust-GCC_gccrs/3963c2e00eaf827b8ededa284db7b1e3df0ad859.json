{"sha": "3963c2e00eaf827b8ededa284db7b1e3df0ad859", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk2M2MyZTAwZWFmODI3YjhlZGVkYTI4NGRiN2IxZTNkZjBhZDg1OQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-02-12T17:01:53Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2003-02-12T17:01:53Z"}, "message": "cpplib.c (do_include_common): Move warnings for #include_next and #import out to callers.\n\n\t* cpplib.c (do_include_common): Move warnings for\n\t#include_next and #import out to callers.  Use early-return\n\tinstead of nested ifs.  Don't do check_eol here.\n\t(parse_include): Do check_eol here with the rest of the\n\tparsing stuff.\n\t(do_include_next, do_import): Now handle warnings.\n\nFrom-SVN: r62772", "tree": {"sha": "91ae138d4bace4f374af6fe05a30a7980676effc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91ae138d4bace4f374af6fe05a30a7980676effc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3963c2e00eaf827b8ededa284db7b1e3df0ad859", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3963c2e00eaf827b8ededa284db7b1e3df0ad859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3963c2e00eaf827b8ededa284db7b1e3df0ad859", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3963c2e00eaf827b8ededa284db7b1e3df0ad859/comments", "author": null, "committer": null, "parents": [{"sha": "d1a86812faa3f26ccf39b9b91b467c91fbf27d69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d1a86812faa3f26ccf39b9b91b467c91fbf27d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d1a86812faa3f26ccf39b9b91b467c91fbf27d69"}], "stats": {"total": 123, "additions": 68, "deletions": 55}, "files": [{"sha": "5f1c638b3ca2b994571e7d4a0fb671973f434d2f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 34, "deletions": 25, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3963c2e00eaf827b8ededa284db7b1e3df0ad859/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3963c2e00eaf827b8ededa284db7b1e3df0ad859/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3963c2e00eaf827b8ededa284db7b1e3df0ad859", "patch": "@@ -1,3 +1,12 @@\n+2003-02-12  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* cpplib.c (do_include_common): Move warnings for\n+\t#include_next and #import out to callers.  Use early-return\n+\tinstead of nested ifs.  Don't do check_eol here.\n+\t(parse_include): Do check_eol here with the rest of the\n+\tparsing stuff.\n+\t(do_include_next, do_import): Now handle warnings.\n+\n 2003-02-11  Gerald Pfeifer  <pfeifer@dbai.tuwien.ac.at>\n \n \t* doc/install.texi (Specific): Update AVR- and Darwin-related URLs.\n@@ -170,10 +179,10 @@ Tue Feb 11 10:02:54 CET 2003  Jan Hubicka  <jh@suse.cz>\n \tin add_ext_symbol, and avoid signed/unsigned conditional warning.\n \n 2003-02-10  Nick Clifton  <nickc@redhat.com>\n-            Aldy Hernandez  <aldyh@redhat.com>\n+\t    Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/eabispe.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Do not\n-        override options which have been specified on the command line.\n+\t* config/rs6000/eabispe.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Do not\n+\toverride options which have been specified on the command line.\n \n 2003-02-10  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -193,7 +202,7 @@ Tue Feb 11 10:02:54 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2003-02-10  Josef Zlomek  <zlomekj@suse.cz>\n \n \t* Makefile.in (bb-reorder.o): Add dependency on $(FIBHEAP_H).\n-\t* bb-reorder.c (make_reorder_chain): Deleted.  \n+\t* bb-reorder.c (make_reorder_chain): Deleted.\n \t(make_reorder_chain_1): Deleted.\n \t(find_traces): New function.\n \t(rotate_loop): New function.\n@@ -216,7 +225,7 @@ Tue Feb 11 10:02:54 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2003-02-09  Dan Nicolaescu  <dann@ics.uci.edu>\n \n \t* tree.h (struct tree_decl): Remove unused live_range_rtl field.\n-\t(DECL_LIVE_RANGE_RTL): Remove. \n+\t(DECL_LIVE_RANGE_RTL): Remove.\n \n 2003-02-10  Nick Clifton  <nickc@redhat.com>\n \n@@ -244,7 +253,7 @@ Tue Feb 11 10:02:54 CET 2003  Jan Hubicka  <jh@suse.cz>\n \tctzsi2, paritysi2, and popcountsi2.\n \n 2003-02-10  Eric Botcazou  <ebotcazou@libertysurf.fr>\n-            Christian Ehrhardt  <ehrhardt@mathematik.uni-ulm.de>\n+\t    Christian Ehrhardt  <ehrhardt@mathematik.uni-ulm.de>\n \n \tPR c/7741\n \t* c-decl.c (duplicate_decls): Discard the initializer of the\n@@ -262,7 +271,7 @@ Tue Feb 11 10:02:54 CET 2003  Jan Hubicka  <jh@suse.cz>\n \n \t* Contributed support for the Cirrus EP9312 \"Maverick\"\n \tfloating point co-processor.  Written by Aldy Hernandez\n-\t<aldyh@redhat.com>. \n+\t<aldyh@redhat.com>.\n \t(config/arm/arm.c): Add Cirrus support.\n \t(config/arm/arm.h): Likewise.\n \t(config/arm/aout.h): Likewise.\n@@ -286,23 +295,23 @@ Mon Feb 10 11:40:18 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t(store_one_arg): Likewise.\n \n 2003-02-09  Nick Clifton  <nickc@redhat.com>\n-            Aldy Hernandez  <aldyh@redhat.com>\n+\t    Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/spe.md: spe_evlhhesplat, spe_evlhhossplat,\n-        spe_evlhhousplat, spe_evlwhsplat, spe_evlwwsplat, spe_evldd,\n-        spe_evldh, spe_evldw, spe_evlwhe, spe_evlwhos, spe_evlwhou,\n-        spe_evstdd, spe_evstdh, spe_evstdw, spe_evstdwx, spe_evstwhe,\n-        spe_evstwho, spe_evstwwe, spe_evstwwo: Fix syntax to match newest\n-        docs.  Add range test for immediate value.\n+\t* config/rs6000/spe.md: spe_evlhhesplat, spe_evlhhossplat,\n+\tspe_evlhhousplat, spe_evlwhsplat, spe_evlwwsplat, spe_evldd,\n+\tspe_evldh, spe_evldw, spe_evlwhe, spe_evlwhos, spe_evlwhou,\n+\tspe_evstdd, spe_evstdh, spe_evstdw, spe_evstdwx, spe_evstwhe,\n+\tspe_evstwho, spe_evstwwe, spe_evstwwo: Fix syntax to match newest\n+\tdocs.  Add range test for immediate value.\n \n 2003-02-09  Aldy Hernandez  <aldyh@redhat.com>\n \n-        Rename spe_evxor to xorv2si3.\n-        (xorv4hi3): New.\n-        (xorv1di3): New.\n+\tRename spe_evxor to xorv2si3.\n+\t(xorv4hi3): New.\n+\t(xorv1di3): New.\n \n 2003-02-10  Glen Nakamura  <glen@imodulo.com>\n-\t\t\n+\n \t* doc/extend.texi (C++98 Thread-Local Edits): Add missing @item\n \ttag.\n \n@@ -460,17 +469,17 @@ Sat Feb  8 00:21:22 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2003-02-07  Richard Henderson  <rth@redhat.com>\n \n \tPR 9226\n-        * gcse.c (local_cprop_find_used_regs): New.\n-        (local_cprop_pass): Use it.\n+\t* gcse.c (local_cprop_find_used_regs): New.\n+\t(local_cprop_pass): Use it.\n \n 2003-02-07  Fred Fish  <fnf@intrinsity.com>\n \n \t* mips-tfile.c (parse_def): Parenthesize assignments to fix\n-        precedence bugs.\n+\tprecedence bugs.\n \n 2003-02-07  Segher Boessenkool  <segher@koffie.nl>\n \n-        * genoutput.c (output_get_insn_name): Handle NOOP_MOVE_INSN_CODE.\n+\t* genoutput.c (output_get_insn_name): Handle NOOP_MOVE_INSN_CODE.\n \n 2003-02-07  Roger Sayle  <roger@eyesopen.com>\n \n@@ -569,7 +578,7 @@ Fri Feb  7 02:18:57 CET 2003  Jan Hubicka  <jh@suse.cz>\n \t* combine.c (nonzero_bits): Fix double break.\n \n 2003-02-06  Eric Botcazou <ebotcazou@libertysurf.fr>\n-            Richard Henderson <rth@redhat.com>\n+\t    Richard Henderson <rth@redhat.com>\n \n \tPR c/9530\n \t* config/i386/i386.c (ix86_function_ok_for_sibcall): Forbid sibcalls\n@@ -646,8 +655,8 @@ Thu Feb  6 00:18:38 CET 2003  Jan Hubicka  <jh@suse.cz>\n 2003-02-05  Richard Henderson  <rth@redhat.com>\n \n \tPR c/8602\n-        * integrate.c (output_inline_function): Reset input_filename\n-        and lineno from the decl before rest_of_compilation.\n+\t* integrate.c (output_inline_function): Reset input_filename\n+\tand lineno from the decl before rest_of_compilation.\n \n 2003-02-05  Richard Henderson  <rth@redhat.com>\n "}, {"sha": "b63fd262339b458b68053b4ba29d40969d98d480", "filename": "gcc/cpplib.c", "status": "modified", "additions": 34, "deletions": 30, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3963c2e00eaf827b8ededa284db7b1e3df0ad859/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3963c2e00eaf827b8ededa284db7b1e3df0ad859/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=3963c2e00eaf827b8ededa284db7b1e3df0ad859", "patch": "@@ -655,6 +655,7 @@ parse_include (pfile)\n       return NULL;\n     }\n \n+  check_eol (pfile);\n   return header;\n }\n \n@@ -664,39 +665,25 @@ do_include_common (pfile, type)\n      cpp_reader *pfile;\n      enum include_type type;\n {\n-  const cpp_token *header;\n+  const cpp_token *header = parse_include (pfile);\n+  if (!header)\n+    return;\n \n-  /* For #include_next, if this is the primary source file, warn and\n-     use the normal search logic.  */\n-  if (type == IT_INCLUDE_NEXT && ! pfile->buffer->prev)\n+  /* Prevent #include recursion.  */\n+  if (pfile->line_maps.depth >= CPP_STACK_MAX)\n     {\n-      cpp_error (pfile, DL_WARNING, \"#include_next in primary source file\");\n-      type = IT_INCLUDE;\n-    }\n-  else if (type == IT_IMPORT && CPP_OPTION (pfile, warn_import))\n-    {\n-      CPP_OPTION (pfile, warn_import) = 0;\n-      cpp_error (pfile, DL_WARNING,\n-\t   \"#import is obsolete, use an #ifndef wrapper in the header file\");\n+      cpp_error (pfile, DL_ERROR, \"#include nested too deeply\");\n+      return;\n     }\n \n-  header = parse_include (pfile);\n-  if (header)\n-    {\n-      /* Prevent #include recursion.  */\n-      if (pfile->line_maps.depth >= CPP_STACK_MAX)\n-\tcpp_error (pfile, DL_ERROR, \"#include nested too deeply\");\n-      else\n-\t{\n-\t  check_eol (pfile);\n-\t  /* Get out of macro context, if we are.  */\n-\t  skip_rest_of_line (pfile);\n-\t  if (pfile->cb.include)\n-\t    (*pfile->cb.include) (pfile, pfile->directive_line,\n-\t\t\t\t  pfile->directive->name, header);\n-\t  _cpp_execute_include (pfile, header, type);\n-\t}\n-    }\n+  /* Get out of macro context, if we are.  */\n+  skip_rest_of_line (pfile);\n+\n+  if (pfile->cb.include)\n+    (*pfile->cb.include) (pfile, pfile->directive_line,\n+\t\t\t  pfile->directive->name, header);\n+\n+  _cpp_execute_include (pfile, header, type);\n }\n \n static void\n@@ -710,14 +697,31 @@ static void\n do_import (pfile)\n      cpp_reader *pfile;\n {\n+  if (CPP_OPTION (pfile, warn_import))\n+    {\n+      CPP_OPTION (pfile, warn_import) = 0;\n+      cpp_error (pfile, DL_WARNING,\n+   \"#import is obsolete, use an #ifndef wrapper in the header file\");\n+    }\n+\n   do_include_common (pfile, IT_IMPORT);\n }\n \n static void\n do_include_next (pfile)\n      cpp_reader *pfile;\n {\n-  do_include_common (pfile, IT_INCLUDE_NEXT);\n+  enum include_type type = IT_INCLUDE_NEXT;\n+\n+  /* If this is the primary source file, warn and use the normal\n+     search logic.  */\n+  if (! pfile->buffer->prev)\n+    {\n+      cpp_error (pfile, DL_WARNING,\n+\t\t \"#include_next in primary source file\");\n+      type = IT_INCLUDE;\n+    }\n+  do_include_common (pfile, type);\n }\n \n /* Subroutine of do_linemarker.  Read possible flags after file name."}]}