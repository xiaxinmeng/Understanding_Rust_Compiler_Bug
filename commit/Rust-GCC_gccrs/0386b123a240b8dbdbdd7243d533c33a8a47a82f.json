{"sha": "0386b123a240b8dbdbdd7243d533c33a8a47a82f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM4NmIxMjNhMjQwYjhkYmRiZGQ3MjQzZDUzM2MzM2E4YTQ3YTgyZg==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-04-29T11:02:15Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-04-29T11:02:15Z"}, "message": "[AArch64] Vectorize over more math.h functions.\n\ngcc/\n\t* config/aarch64/aarch64-builtins.c\n\t(aarch64_builtin_vectorized_function): Vectorize over ifloorf,\n\ticeilf, lround, iroundf.\n\nFrom-SVN: r198402", "tree": {"sha": "813d148b51581709d4ff07555fc46189236f9e01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/813d148b51581709d4ff07555fc46189236f9e01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0386b123a240b8dbdbdd7243d533c33a8a47a82f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0386b123a240b8dbdbdd7243d533c33a8a47a82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0386b123a240b8dbdbdd7243d533c33a8a47a82f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0386b123a240b8dbdbdd7243d533c33a8a47a82f/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "00fcb892ccf023d378e45b71b93b62c8e5399b60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00fcb892ccf023d378e45b71b93b62c8e5399b60", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00fcb892ccf023d378e45b71b93b62c8e5399b60"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "bef76a82856b4dbefa9720a6c4d0303080b9a021", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0386b123a240b8dbdbdd7243d533c33a8a47a82f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0386b123a240b8dbdbdd7243d533c33a8a47a82f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0386b123a240b8dbdbdd7243d533c33a8a47a82f", "patch": "@@ -1,3 +1,9 @@\n+2013-04-29  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64-builtins.c\n+\t(aarch64_builtin_vectorized_function): Vectorize over ifloorf,\n+\ticeilf, lround, iroundf.\n+\n 2013-04-29  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/54349"}, {"sha": "53d2c6ad55742f454e4ab00bc32d994557a0c3f7", "filename": "gcc/config/aarch64/aarch64-builtins.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0386b123a240b8dbdbdd7243d533c33a8a47a82f/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0386b123a240b8dbdbdd7243d533c33a8a47a82f/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-builtins.c?ref=0386b123a240b8dbdbdd7243d533c33a8a47a82f", "patch": "@@ -1245,6 +1245,7 @@ aarch64_builtin_vectorized_function (tree fndecl, tree type_out, tree type_in)\n   (out_mode == N##Imode && out_n == C \\\n    && in_mode == N##Fmode && in_n == C)\n \tcase BUILT_IN_LFLOOR:\n+\tcase BUILT_IN_IFLOORF:\n \t  {\n \t    tree new_tree = NULL_TREE;\n \t    if (AARCH64_CHECK_BUILTIN_MODE (2, D))\n@@ -1259,6 +1260,7 @@ aarch64_builtin_vectorized_function (tree fndecl, tree type_out, tree type_in)\n \t    return new_tree;\n \t  }\n \tcase BUILT_IN_LCEIL:\n+\tcase BUILT_IN_ICEILF:\n \t  {\n \t    tree new_tree = NULL_TREE;\n \t    if (AARCH64_CHECK_BUILTIN_MODE (2, D))\n@@ -1272,6 +1274,22 @@ aarch64_builtin_vectorized_function (tree fndecl, tree type_out, tree type_in)\n \t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lceilv2sfv2si];\n \t    return new_tree;\n \t  }\n+\tcase BUILT_IN_LROUND:\n+\tcase BUILT_IN_IROUNDF:\n+\t  {\n+\t    tree new_tree = NULL_TREE;\n+\t    if (AARCH64_CHECK_BUILTIN_MODE (2, D))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lroundv2dfv2di];\n+\t    else if (AARCH64_CHECK_BUILTIN_MODE (4, S))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lroundv4sfv4si];\n+\t    else if (AARCH64_CHECK_BUILTIN_MODE (2, S))\n+\t      new_tree =\n+\t\taarch64_builtin_decls[AARCH64_SIMD_BUILTIN_lroundv2sfv2si];\n+\t    return new_tree;\n+\t  }\n+\n \tdefault:\n \t  return NULL_TREE;\n       }"}]}