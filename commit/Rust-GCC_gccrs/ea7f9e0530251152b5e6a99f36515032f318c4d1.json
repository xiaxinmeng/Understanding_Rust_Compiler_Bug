{"sha": "ea7f9e0530251152b5e6a99f36515032f318c4d1", "node_id": "C_kwDOANBUbNoAKGVhN2Y5ZTA1MzAyNTExNTJiNWU2YTk5ZjM2NTE1MDMyZjMxOGM0ZDE", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-11-22T11:53:15Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-12-02T16:26:22Z"}, "message": "[Ada] Simplify iteration over record components\n\ngcc/ada/\n\n\t* freeze.adb (Freeze_Entity): Replace First_Entity/Next_Entity\n\twith First_Component/Next_Component; remove condition with Ekind\n\tequal to E_Component.\n\t* sem_ch13.adb (Check_Record_Representation_Clause): Likewise\n\tfor component-or-discriminant.\n\t* sem_util.adb (Is_Fully_Initialized_Type): Likewise; rename Ent\n\tto a more specific Comp.\n\t* sem_warn.adb (Check_References): Likewise.", "tree": {"sha": "136880688f957a4c2ca257f802f7d5b4b4ff6230", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/136880688f957a4c2ca257f802f7d5b4b4ff6230"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea7f9e0530251152b5e6a99f36515032f318c4d1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea7f9e0530251152b5e6a99f36515032f318c4d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea7f9e0530251152b5e6a99f36515032f318c4d1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea7f9e0530251152b5e6a99f36515032f318c4d1/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1fde9333dc31007083ac792896820ca29837c342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fde9333dc31007083ac792896820ca29837c342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fde9333dc31007083ac792896820ca29837c342"}], "stats": {"total": 60, "additions": 24, "deletions": 36}, "files": [{"sha": "6804c046b462b547ab268361776abdb56d68d91e", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7f9e0530251152b5e6a99f36515032f318c4d1/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7f9e0530251152b5e6a99f36515032f318c4d1/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=ea7f9e0530251152b5e6a99f36515032f318c4d1", "patch": "@@ -6328,11 +6328,9 @@ package body Freeze is\n             --  to the components of Rec.\n \n          begin\n-            Comp := First_Entity (E);\n+            Comp := First_Component (E);\n             while Present (Comp) loop\n-               if Ekind (Comp) = E_Component\n-                 and then Has_Delayed_Aspects (Comp)\n-               then\n+               if Has_Delayed_Aspects (Comp) then\n                   if not Rec_Pushed then\n                      Push_Scope (E);\n                      Rec_Pushed := True;\n@@ -6348,7 +6346,7 @@ package body Freeze is\n                   Analyze_Aspects_At_Freeze_Point (Comp);\n                end if;\n \n-               Next_Entity (Comp);\n+               Next_Component (Comp);\n             end loop;\n \n             --  Pop the scope if Rec scope has been pushed on the scope stack"}, {"sha": "6ff7046ce4be1af11d30b2cbe93d6b10f6ee7356", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7f9e0530251152b5e6a99f36515032f318c4d1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7f9e0530251152b5e6a99f36515032f318c4d1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=ea7f9e0530251152b5e6a99f36515032f318c4d1", "patch": "@@ -12284,26 +12284,18 @@ package body Sem_Ch13 is\n             --  Find maximum bit of any component of the parent type\n \n             Parent_Last_Bit := UI_From_Int (System_Address_Size - 1);\n-            Pcomp := First_Entity (Tagged_Parent);\n+            Pcomp := First_Component_Or_Discriminant (Tagged_Parent);\n             while Present (Pcomp) loop\n-               if Ekind (Pcomp) in E_Discriminant | E_Component then\n-                  if Present (Component_Bit_Offset (Pcomp))\n-                    and then Known_Static_Esize (Pcomp)\n-                  then\n-                     Parent_Last_Bit :=\n-                       UI_Max\n-                         (Parent_Last_Bit,\n-                          Component_Bit_Offset (Pcomp) + Esize (Pcomp) - 1);\n-                  end if;\n-               else\n-\n-                  --  Skip anonymous types generated for constrained array\n-                  --  or record components.\n-\n-                  null;\n+               if Present (Component_Bit_Offset (Pcomp))\n+                 and then Known_Static_Esize (Pcomp)\n+               then\n+                  Parent_Last_Bit :=\n+                    UI_Max\n+                      (Parent_Last_Bit,\n+                       Component_Bit_Offset (Pcomp) + Esize (Pcomp) - 1);\n                end if;\n \n-               Next_Entity (Pcomp);\n+               Next_Component_Or_Discriminant (Pcomp);\n             end loop;\n          end if;\n       end;"}, {"sha": "c6e183037736f2759893c12eed258a101c26ae96", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7f9e0530251152b5e6a99f36515032f318c4d1/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7f9e0530251152b5e6a99f36515032f318c4d1/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=ea7f9e0530251152b5e6a99f36515032f318c4d1", "patch": "@@ -17803,28 +17803,27 @@ package body Sem_Util is\n          --  Otherwise see if all record components are initialized\n \n          declare\n-            Ent : Entity_Id;\n+            Comp : Entity_Id;\n \n          begin\n-            Ent := First_Entity (Typ);\n-            while Present (Ent) loop\n-               if Ekind (Ent) = E_Component\n-                 and then (No (Parent (Ent))\n-                            or else No (Expression (Parent (Ent))))\n-                 and then not Is_Fully_Initialized_Type (Etype (Ent))\n+            Comp := First_Component (Typ);\n+            while Present (Comp) loop\n+               if (No (Parent (Comp))\n+                    or else No (Expression (Parent (Comp))))\n+                 and then not Is_Fully_Initialized_Type (Etype (Comp))\n \n                   --  Special VM case for tag components, which need to be\n                   --  defined in this case, but are never initialized as VMs\n                   --  are using other dispatching mechanisms. Ignore this\n                   --  uninitialized case. Note that this applies both to the\n                   --  uTag entry and the main vtable pointer (CPP_Class case).\n \n-                 and then (Tagged_Type_Expansion or else not Is_Tag (Ent))\n+                 and then (Tagged_Type_Expansion or else not Is_Tag (Comp))\n                then\n                   return False;\n                end if;\n \n-               Next_Entity (Ent);\n+               Next_Component (Comp);\n             end loop;\n          end;\n "}, {"sha": "951b9f80b529f459da01f1c1354fc9acad2996dd", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea7f9e0530251152b5e6a99f36515032f318c4d1/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea7f9e0530251152b5e6a99f36515032f318c4d1/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=ea7f9e0530251152b5e6a99f36515032f318c4d1", "patch": "@@ -1548,18 +1548,17 @@ package body Sem_Warn is\n                               Comp : Entity_Id;\n \n                            begin\n-                              Comp := First_Entity (E1T);\n+                              Comp := First_Component (E1T);\n                               while Present (Comp) loop\n-                                 if Ekind (Comp) = E_Component\n-                                   and then Nkind (Parent (Comp)) =\n-                                              N_Component_Declaration\n+                                 if Nkind (Parent (Comp)) =\n+                                      N_Component_Declaration\n                                    and then No (Expression (Parent (Comp)))\n                                  then\n                                     Error_Msg_Node_2 := Comp;\n                                     exit;\n                                  end if;\n \n-                                 Next_Entity (Comp);\n+                                 Next_Component (Comp);\n                               end loop;\n                            end;\n                         end if;"}]}