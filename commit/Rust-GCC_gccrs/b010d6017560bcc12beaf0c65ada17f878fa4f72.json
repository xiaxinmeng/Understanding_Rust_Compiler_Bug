{"sha": "b010d6017560bcc12beaf0c65ada17f878fa4f72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjAxMGQ2MDE3NTYwYmNjMTJiZWFmMGM2NWFkYTE3Zjg3OGZhNGY3Mg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-02-14T07:31:23Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-02-14T07:31:23Z"}, "message": "tree-vect-loop.c (vect_is_slp_reduction): Don't set use_stmt twice.\n\n\t* tree-vect-loop.c (vect_is_slp_reduction): Don't set\n\tuse_stmt twice.\n\t(get_initial_def_for_induction, vectorizable_induction): Ignore\n\tdebug stmts when looking for exit_phi.\n\t(vectorizable_live_operation): Fix up condition.\n\n\t* gcc.c-torture/compile/20140213.c: New test.\n\nFrom-SVN: r207778", "tree": {"sha": "a4d5bc6cbd4a114aa316acf111f478c3059b4d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4d5bc6cbd4a114aa316acf111f478c3059b4d08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b010d6017560bcc12beaf0c65ada17f878fa4f72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b010d6017560bcc12beaf0c65ada17f878fa4f72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b010d6017560bcc12beaf0c65ada17f878fa4f72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b010d6017560bcc12beaf0c65ada17f878fa4f72/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f2dafb914e2af3bf33984644906acc2d11f5ca5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f2dafb914e2af3bf33984644906acc2d11f5ca5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f2dafb914e2af3bf33984644906acc2d11f5ca5c"}], "stats": {"total": 58, "additions": 48, "deletions": 10}, "files": [{"sha": "99d55bfd84a4f0c2e090ec730c1afba1a6a777dc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b010d6017560bcc12beaf0c65ada17f878fa4f72/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b010d6017560bcc12beaf0c65ada17f878fa4f72/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b010d6017560bcc12beaf0c65ada17f878fa4f72", "patch": "@@ -1,3 +1,11 @@\n+2014-02-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* tree-vect-loop.c (vect_is_slp_reduction): Don't set\n+\tuse_stmt twice.\n+\t(get_initial_def_for_induction, vectorizable_induction): Ignore\n+\tdebug stmts when looking for exit_phi.\n+\t(vectorizable_live_operation): Fix up condition.\n+\n 2014-02-14  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.c (nds32_asm_function_prologue): Do not use"}, {"sha": "b2fefd0875a5ec0e3c2ca1b037c4138f7345beae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b010d6017560bcc12beaf0c65ada17f878fa4f72/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b010d6017560bcc12beaf0c65ada17f878fa4f72/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b010d6017560bcc12beaf0c65ada17f878fa4f72", "patch": "@@ -1,3 +1,7 @@\n+2014-02-14  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.c-torture/compile/20140213.c: New test.\n+\n 2014-02-13  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/43546"}, {"sha": "3811caa223460d581af1ee24a0daacb02934d322", "filename": "gcc/testsuite/gcc.c-torture/compile/20140213.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b010d6017560bcc12beaf0c65ada17f878fa4f72/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20140213.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b010d6017560bcc12beaf0c65ada17f878fa4f72/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20140213.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20140213.c?ref=b010d6017560bcc12beaf0c65ada17f878fa4f72", "patch": "@@ -0,0 +1,21 @@\n+static unsigned short\n+foo (unsigned char *x, int y)\n+{\n+  unsigned short r = 0;\n+  int i;\n+  for (i = 0; i < y; i++)\n+    r += x[i];\n+  return r;\n+}\n+\n+int baz (int, unsigned short);\n+\n+void\n+bar (unsigned char *x, unsigned char *y)\n+{\n+  int i;\n+  unsigned short key = foo (x, 0x10000);\n+  baz (0, 0);\n+  for (i = 0; i < 0x80000; i++)\n+    y[i] = x[baz (i, key)];\n+}"}, {"sha": "838803ebe520ef883ef28f422548020bd1339353", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b010d6017560bcc12beaf0c65ada17f878fa4f72/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b010d6017560bcc12beaf0c65ada17f878fa4f72/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=b010d6017560bcc12beaf0c65ada17f878fa4f72", "patch": "@@ -1968,10 +1968,8 @@ vect_is_slp_reduction (loop_vec_info loop_info, gimple phi, gimple first_stmt)\n       FOR_EACH_IMM_USE_FAST (use_p, imm_iter, lhs)\n         {\n \t  gimple use_stmt = USE_STMT (use_p);\n-          if (is_gimple_debug (use_stmt))\n-            continue;\n-\n-\t  use_stmt = USE_STMT (use_p);\n+\t  if (is_gimple_debug (use_stmt))\n+\t    continue;\n \n           /* Check if we got back to the reduction phi.  */\n \t  if (use_stmt == phi)\n@@ -3507,9 +3505,13 @@ get_initial_def_for_induction (gimple iv_phi)\n       exit_phi = NULL;\n       FOR_EACH_IMM_USE_FAST (use_p, imm_iter, loop_arg)\n         {\n-\t  if (!flow_bb_inside_loop_p (iv_loop, gimple_bb (USE_STMT (use_p))))\n+\t  gimple use_stmt = USE_STMT (use_p);\n+\t  if (is_gimple_debug (use_stmt))\n+\t    continue;\n+\n+\t  if (!flow_bb_inside_loop_p (iv_loop, gimple_bb (use_stmt)))\n \t    {\n-\t      exit_phi = USE_STMT (use_p);\n+\t      exit_phi = use_stmt;\n \t      break;\n \t    }\n         }\n@@ -5413,10 +5415,13 @@ vectorizable_induction (gimple phi, gimple_stmt_iterator *gsi ATTRIBUTE_UNUSED,\n       loop_arg = PHI_ARG_DEF_FROM_EDGE (phi, latch_e);\n       FOR_EACH_IMM_USE_FAST (use_p, imm_iter, loop_arg)\n \t{\n-\t  if (!flow_bb_inside_loop_p (loop->inner,\n-\t\t\t\t      gimple_bb (USE_STMT (use_p))))\n+\t  gimple use_stmt = USE_STMT (use_p);\n+\t  if (is_gimple_debug (use_stmt))\n+\t    continue;\n+\n+\t  if (!flow_bb_inside_loop_p (loop->inner, gimple_bb (use_stmt)))\n \t    {\n-\t      exit_phi = USE_STMT (use_p);\n+\t      exit_phi = use_stmt;\n \t      break;\n \t    }\n \t}\n@@ -5514,7 +5519,7 @@ vectorizable_live_operation (gimple stmt,\n \t    {\n \t      gimple use_stmt = USE_STMT (use_p);\n \t      if (gimple_code (use_stmt) == GIMPLE_PHI\n-\t\t  || gimple_bb (use_stmt) == merge_bb)\n+\t\t  && gimple_bb (use_stmt) == merge_bb)\n \t\t{\n \t\t  if (vec_stmt)\n \t\t    {"}]}