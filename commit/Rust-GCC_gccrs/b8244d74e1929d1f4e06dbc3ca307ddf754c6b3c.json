{"sha": "b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjgyNDRkNzRlMTkyOWQxZjRlMDZkYmMzY2EzMDdkZGY3NTRjNmIzYw==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-11T08:46:17Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2012-07-11T08:46:17Z"}, "message": "basic-block.h (struct edge_def): Use basic_block instead of basic_block_def *.\n\n\t* basic-block.h (struct edge_def): Use basic_block instead of\n\tbasic_block_def *.\n\t* cfgloop.h (struct loop_exit, struct loop): Likewise.\n\t* gengenrtl.c (type_from_format): Likewise.  Also for 'tree'\n\tinstead of union tree_node *.\n\t* rtl.h (union rtunion_def, emit_insn_before_noloc,\n\temit_insn_after_noloc, add_insn_before, add_insn_after,\n\tdebug_bb_slim): Likewise.\n\t* tree-inline.h (struct copy_body_data): Likewise.\n\t* sched-rgn.c (dump_region_dot): Likewise.\n\t* gimple.h (struct gimple_statement_base, gimple_set_bb,\n\tgsi_move_to_bb_end): Likewise.\n\t* sched-vis.c (debug_bb_slim): Likewise.\n\t(debug_bb_n_slim): Likewise.\n\t* config/mn10300/mn10300.c (mn10300_insert_setlb_lcc): Likewise.\n\t(mn10300_block_contains_call):\n\nFrom-SVN: r189424", "tree": {"sha": "344c84d8e17cd478a37da8d5e9df82ffd900767f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/344c84d8e17cd478a37da8d5e9df82ffd900767f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/comments", "author": null, "committer": null, "parents": [{"sha": "c48acc4f0a390ee7d6036078471572ece8a1668e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c48acc4f0a390ee7d6036078471572ece8a1668e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c48acc4f0a390ee7d6036078471572ece8a1668e"}], "stats": {"total": 67, "additions": 43, "deletions": 24}, "files": [{"sha": "030fc14719455f1944dc3516fa4b99db28fe5abd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -1,3 +1,22 @@\n+2012-07-11  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* basic-block.h (struct edge_def): Use basic_block instead of\n+\tbasic_block_def *.\n+\t* cfgloop.h (struct loop_exit, struct loop): Likewise.\n+\t* gengenrtl.c (type_from_format): Likewise.  Also for 'tree'\n+\tinstead of union tree_node *.\n+\t* rtl.h (union rtunion_def, emit_insn_before_noloc,\n+\temit_insn_after_noloc, add_insn_before, add_insn_after,\n+\tdebug_bb_slim): Likewise.\n+\t* tree-inline.h (struct copy_body_data): Likewise.\n+\t* sched-rgn.c (dump_region_dot): Likewise.\n+\t* gimple.h (struct gimple_statement_base, gimple_set_bb,\n+\tgsi_move_to_bb_end): Likewise.\n+\t* sched-vis.c (debug_bb_slim): Likewise.\n+\t(debug_bb_n_slim): Likewise.\n+\t* config/mn10300/mn10300.c (mn10300_insert_setlb_lcc): Likewise.\n+\t(mn10300_block_contains_call):\n+\n 2012-07-11  Greta Yorsh  <Greta.Yorsh@arm.com>\n \n \tPR target/53859"}, {"sha": "7a89ef5b43f93735f64035a1642156ed4c17a7d7", "filename": "gcc/basic-block.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fbasic-block.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fbasic-block.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbasic-block.h?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -35,8 +35,8 @@ typedef HOST_WIDEST_INT gcov_type;\n /* Control flow edge information.  */\n struct GTY(()) edge_def {\n   /* The two blocks at the ends of the edge.  */\n-  struct basic_block_def *src;\n-  struct basic_block_def *dest;\n+  basic_block src;\n+  basic_block dest;\n \n   /* Instructions queued on the edge.  */\n   union edge_def_insns {\n@@ -161,8 +161,8 @@ struct GTY((chain_next (\"%h.next_bb\"), chain_prev (\"%h.prev_bb\"))) basic_block_d\n   struct et_node * GTY ((skip (\"\"))) dom[2];\n \n   /* Previous and next blocks in the chain.  */\n-  struct basic_block_def *prev_bb;\n-  struct basic_block_def *next_bb;\n+  basic_block prev_bb;\n+  basic_block next_bb;\n \n   union basic_block_il_dependent {\n       struct gimple_bb_info GTY ((tag (\"0\"))) gimple;"}, {"sha": "239eb595dae247326ac181f1767ef25ba8ee279c", "filename": "gcc/cfgloop.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fcfgloop.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fcfgloop.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgloop.h?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -80,7 +80,7 @@ struct GTY ((chain_next (\"%h.next\"))) nb_iter_bound {\n \n struct GTY (()) loop_exit {\n   /* The exit edge.  */\n-  struct edge_def *e;\n+  edge e;\n \n   /* Previous and next exit in the list of the exits of the loop.  */\n   struct loop_exit *prev;\n@@ -114,10 +114,10 @@ struct GTY ((chain_next (\"%h.next\"))) loop {\n   unsigned ninsns;\n \n   /* Basic block of loop header.  */\n-  struct basic_block_def *header;\n+  basic_block header;\n \n   /* Basic block of loop latch.  */\n-  struct basic_block_def *latch;\n+  basic_block latch;\n \n   /* For loop unrolling/peeling decision.  */\n   struct lpt_decision lpt_decision;"}, {"sha": "39643f0684758c65019d18aec017e0b1a65abace", "filename": "gcc/config/mn10300/mn10300.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fconfig%2Fmn10300%2Fmn10300.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.c?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -3178,7 +3178,7 @@ mn10300_insert_setlb_lcc (rtx label, rtx branch)\n }\n \n static bool\n-mn10300_block_contains_call (struct basic_block_def * block)\n+mn10300_block_contains_call (basic_block block)\n {\n   rtx insn;\n "}, {"sha": "58d31425fb6b5fd6ea8a35b2e1b8c0f9b58cfcf1", "filename": "gcc/gengenrtl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fgengenrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fgengenrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengenrtl.c?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -64,9 +64,9 @@ type_from_format (int c)\n     case 'E':\n       return \"rtvec \";\n     case 't':\n-      return \"union tree_node *\";  /* tree - typedef not available */\n+      return \"tree \";\n     case 'B':\n-      return \"struct basic_block_def *\";  /* basic block - typedef not available */\n+      return \"basic_block \";\n     default:\n       gcc_unreachable ();\n     }"}, {"sha": "969a3ae3d02c75ec9911672191dbd375c32b38a2", "filename": "gcc/gimple.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fgimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fgimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.h?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -200,7 +200,7 @@ struct GTY(()) gimple_statement_base {\n \n   /* [ WORD 3 ]\n      Basic block holding this statement.  */\n-  struct basic_block_def *bb;\n+  basic_block bb;\n \n   /* [ WORD 4-5 ]\n      Linked lists of gimple statements.  The next pointers form\n@@ -818,7 +818,7 @@ void gimple_call_reset_alias_info (gimple);\n bool gimple_assign_copy_p (gimple);\n bool gimple_assign_ssa_name_copy_p (gimple);\n bool gimple_assign_unary_nop_p (gimple);\n-void gimple_set_bb (gimple, struct basic_block_def *);\n+void gimple_set_bb (gimple, basic_block);\n void gimple_assign_set_rhs_from_tree (gimple_stmt_iterator *, tree);\n void gimple_assign_set_rhs_with_ops_1 (gimple_stmt_iterator *, enum tree_code,\n \t\t\t\t       tree, tree, tree);\n@@ -1186,7 +1186,7 @@ gimple_has_substatements (gimple g)\n \n /* Return the basic block holding statement G.  */\n \n-static inline struct basic_block_def *\n+static inline basic_block\n gimple_bb (const_gimple g)\n {\n   return g->gsbase.bb;\n@@ -5190,7 +5190,7 @@ bool gsi_remove (gimple_stmt_iterator *, bool);\n gimple_stmt_iterator gsi_for_stmt (gimple);\n void gsi_move_after (gimple_stmt_iterator *, gimple_stmt_iterator *);\n void gsi_move_before (gimple_stmt_iterator *, gimple_stmt_iterator *);\n-void gsi_move_to_bb_end (gimple_stmt_iterator *, struct basic_block_def *);\n+void gsi_move_to_bb_end (gimple_stmt_iterator *, basic_block);\n void gsi_insert_on_edge (edge, gimple);\n void gsi_insert_seq_on_edge (edge, gimple_seq);\n basic_block gsi_insert_on_edge_immediate (edge, gimple);"}, {"sha": "be5ae1bb54d12838205946d93b6cf993697d07c1", "filename": "gcc/rtl.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -196,7 +196,7 @@ union rtunion_def\n   addr_diff_vec_flags rt_addr_diff_vec_flags;\n   struct cselib_val_struct *rt_cselib;\n   tree rt_tree;\n-  struct basic_block_def *rt_bb;\n+  basic_block rt_bb;\n   mem_attrs *rt_mem;\n   reg_attrs *rt_reg;\n   struct constant_descriptor_rtx *rt_constant;\n@@ -1735,7 +1735,7 @@ extern rtx assign_temp (tree, int, int);\n \n /* In emit-rtl.c */\n extern rtx emit_insn_before (rtx, rtx);\n-extern rtx emit_insn_before_noloc (rtx, rtx, struct basic_block_def *);\n+extern rtx emit_insn_before_noloc (rtx, rtx, basic_block);\n extern rtx emit_insn_before_setloc (rtx, rtx, int);\n extern rtx emit_jump_insn_before (rtx, rtx);\n extern rtx emit_jump_insn_before_noloc (rtx, rtx);\n@@ -1750,7 +1750,7 @@ extern rtx emit_barrier_before (rtx);\n extern rtx emit_label_before (rtx, rtx);\n extern rtx emit_note_before (enum insn_note, rtx);\n extern rtx emit_insn_after (rtx, rtx);\n-extern rtx emit_insn_after_noloc (rtx, rtx, struct basic_block_def *);\n+extern rtx emit_insn_after_noloc (rtx, rtx, basic_block);\n extern rtx emit_insn_after_setloc (rtx, rtx, int);\n extern rtx emit_jump_insn_after (rtx, rtx);\n extern rtx emit_jump_insn_after_noloc (rtx, rtx);\n@@ -2435,8 +2435,8 @@ extern void unshare_all_rtl_in_chain (rtx);\n extern void verify_rtl_sharing (void);\n extern void link_cc0_insns (rtx);\n extern void add_insn (rtx);\n-extern void add_insn_before (rtx, rtx, struct basic_block_def *);\n-extern void add_insn_after (rtx, rtx, struct basic_block_def *);\n+extern void add_insn_before (rtx, rtx, basic_block);\n+extern void add_insn_after (rtx, rtx, basic_block);\n extern void remove_insn (rtx);\n extern rtx emit (rtx);\n extern void delete_insn (rtx);\n@@ -2463,7 +2463,7 @@ extern void delete_dead_jumptables (void);\n \n /* In sched-vis.c.  */\n extern void debug_bb_n_slim (int);\n-extern void debug_bb_slim (struct basic_block_def *);\n+extern void debug_bb_slim (basic_block);\n extern void print_rtl_slim (FILE *, rtx, rtx, int, int);\n extern void print_rtl_slim_with_bb (FILE *, rtx, int);\n extern void dump_insn_slim (FILE *f, rtx x);"}, {"sha": "f712dc2a8f5e20e5d7bbfd48d74102a31b0849e6", "filename": "gcc/sched-rgn.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fsched-rgn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fsched-rgn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-rgn.c?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -435,7 +435,7 @@ dump_region_dot (FILE *f, int rgn)\n       edge e;\n       edge_iterator ei;\n       int src_bb_num = rgn_bb_table[current_blocks + i];\n-      struct basic_block_def *bb = BASIC_BLOCK (src_bb_num);\n+      basic_block bb = BASIC_BLOCK (src_bb_num);\n \n       FOR_EACH_EDGE (e, ei, bb->succs)\n         if (bb_in_region_p (e->dest->index, rgn))"}, {"sha": "d84801a0edaed0352491d348584086d9de29ce84", "filename": "gcc/sched-vis.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fsched-vis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Fsched-vis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-vis.c?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -833,15 +833,15 @@ print_rtl_slim (FILE *f, rtx first, rtx last, int count, int flags)\n }\n \n DEBUG_FUNCTION void\n-debug_bb_slim (struct basic_block_def *bb)\n+debug_bb_slim (basic_block bb)\n {\n   print_rtl_slim (stderr, BB_HEAD (bb), BB_END (bb), -1, 32);\n }\n \n DEBUG_FUNCTION void\n debug_bb_n_slim (int n)\n {\n-  struct basic_block_def *bb = BASIC_BLOCK (n);\n+  basic_block bb = BASIC_BLOCK (n);\n   debug_bb_slim (bb);\n }\n "}, {"sha": "b156e82a517c5452e29589909667d804752c6038", "filename": "gcc/tree-inline.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Ftree-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c/gcc%2Ftree-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.h?ref=b8244d74e1929d1f4e06dbc3ca307ddf754c6b3c", "patch": "@@ -116,7 +116,7 @@ typedef struct copy_body_data\n   struct pointer_set_t *statements_to_fold;\n \n   /* Entry basic block to currently copied body.  */\n-  struct basic_block_def *entry_bb;\n+  basic_block entry_bb;\n \n   /* Debug statements that need processing.  */\n   VEC(gimple,heap) *debug_stmts;"}]}