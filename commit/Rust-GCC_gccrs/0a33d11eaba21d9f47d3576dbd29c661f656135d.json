{"sha": "0a33d11eaba21d9f47d3576dbd29c661f656135d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEzM2QxMWVhYmEyMWQ5ZjQ3ZDM1NzZkYmQyOWM2NjFmNjU2MTM1ZA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-05-22T06:58:17Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-05-22T06:58:17Z"}, "message": "combine.c (subst): Do not substitute for a register as a destination...\n\n        * combine.c (subst): Do not substitute for a register as\n        a destination subreg/strict_low_part/zero_extract.\n\nFrom-SVN: r42429", "tree": {"sha": "c0a10a585f843312330734edc25eecf84e6f94a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0a10a585f843312330734edc25eecf84e6f94a5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a33d11eaba21d9f47d3576dbd29c661f656135d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a33d11eaba21d9f47d3576dbd29c661f656135d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a33d11eaba21d9f47d3576dbd29c661f656135d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a33d11eaba21d9f47d3576dbd29c661f656135d/comments", "author": null, "committer": null, "parents": [{"sha": "c93d7fae7b9825449c023d42eb40641c0ad80be2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c93d7fae7b9825449c023d42eb40641c0ad80be2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c93d7fae7b9825449c023d42eb40641c0ad80be2"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "5e578ae996e0bf7e3528b8b0b9ac88886156fe7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a33d11eaba21d9f47d3576dbd29c661f656135d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a33d11eaba21d9f47d3576dbd29c661f656135d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a33d11eaba21d9f47d3576dbd29c661f656135d", "patch": "@@ -1,5 +1,8 @@\n 2001-05-21  Richard Henderson  <rth@redhat.com>\n \n+\t* combine.c (subst): Do not substitute for a register as\n+\ta destination subreg/strict_low_part/zero_extract.\n+\n \t* combine.c (simplify_comparison): Update op1 after constant\n \textension.\n \t* recog.c (const_int_operand): Accept only constants valid"}, {"sha": "675b1fe3e915ec07aea745ad06c633107cfec202", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a33d11eaba21d9f47d3576dbd29c661f656135d/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a33d11eaba21d9f47d3576dbd29c661f656135d/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=0a33d11eaba21d9f47d3576dbd29c661f656135d", "patch": "@@ -3394,7 +3394,16 @@ subst (x, from, to, in_dest, unique_copy)\n \t    }\n \t  else if (fmt[i] == 'e')\n \t    {\n-\t      if (COMBINE_RTX_EQUAL_P (XEXP (x, i), from))\n+\t      /* If this is a register being set, ignore it.  */\n+\t      new = XEXP (x, i);\n+\t      if (in_dest\n+\t\t  && (code == SUBREG || code == STRICT_LOW_PART\n+\t\t      || code == ZERO_EXTRACT)\n+\t\t  && i == 0\n+\t\t  && GET_CODE (new) == REG)\n+\t\t;\n+\n+\t      else if (COMBINE_RTX_EQUAL_P (XEXP (x, i), from))\n \t\t{\n \t\t  /* In general, don't install a subreg involving two\n \t\t     modes not tieable.  It can worsen register"}]}