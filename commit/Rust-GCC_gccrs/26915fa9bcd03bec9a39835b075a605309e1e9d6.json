{"sha": "26915fa9bcd03bec9a39835b075a605309e1e9d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY5MTVmYTliY2QwM2JlYzlhMzk4MzViMDc1YTYwNTMwOWUxZTlkNg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-01T11:16:10Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-03-01T11:16:10Z"}, "message": "pa.md (split for symbol_ref+int): New define_split for hte combiner.\n\n\t* pa.md (split for symbol_ref+int): New define_split for hte\n\tcombiner.\n\nFrom-SVN: r3572", "tree": {"sha": "d62d60ff41490f4736d77d4071e6f095adc5c79e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d62d60ff41490f4736d77d4071e6f095adc5c79e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26915fa9bcd03bec9a39835b075a605309e1e9d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26915fa9bcd03bec9a39835b075a605309e1e9d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26915fa9bcd03bec9a39835b075a605309e1e9d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26915fa9bcd03bec9a39835b075a605309e1e9d6/comments", "author": null, "committer": null, "parents": [{"sha": "c1d1b3f05fe1f7fe5027581becc3bd8ad1b25045", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1d1b3f05fe1f7fe5027581becc3bd8ad1b25045", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1d1b3f05fe1f7fe5027581becc3bd8ad1b25045"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "bcb1a0df2f7235abdeb22314fca2201eb0abf553", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26915fa9bcd03bec9a39835b075a605309e1e9d6/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26915fa9bcd03bec9a39835b075a605309e1e9d6/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=26915fa9bcd03bec9a39835b075a605309e1e9d6", "patch": "@@ -994,6 +994,20 @@\n   \"ldo R'%G2(%1),%0\"\n   [(set_attr \"length\" \"1\")])\n \n+;; Now that a symbolic_address plus a constant is broken up early\n+;; in the compilation phase (for better CSE) we need a special\n+;; combiner pattern to load the symbolic address plus the constant\n+;; in only 2 instructions. (For cases where the symbolic address \n+;; was not a common subexpression.)\n+(define_split\n+  [(set (match_operand:SI 0 \"register_operand\" \"\")\n+\t(match_operand 1 \"symbolic_operand\" \"\"))\n+   (clobber (match_operand:SI 2 \"register_operand\" \"\"))]\n+  \"\"\n+  [(set (match_dup 2) (high:SI (match_dup 1)))\n+   (set (match_dup 0) (lo_sum:SI (match_dup 2) (match_dup 1)))]\n+  \"\")\n+\n (define_expand \"movhi\"\n   [(set (match_operand:HI 0 \"general_operand\" \"\")\n \t(match_operand:HI 1 \"general_operand\" \"\"))]"}]}