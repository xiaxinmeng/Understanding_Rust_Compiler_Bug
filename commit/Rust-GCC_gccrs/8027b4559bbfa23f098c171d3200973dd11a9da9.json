{"sha": "8027b4559bbfa23f098c171d3200973dd11a9da9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAyN2I0NTU5YmJmYTIzZjA5OGMxNzFkMzIwMDk3M2RkMTFhOWRhOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:26:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T14:26:53Z"}, "message": "[multiple changes]\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* a-except.adb, a-except-2005.adb: Minor comment rewording and\n\treformatting.\n\n2011-08-29  Yannick Moy  <moy@adacore.com>\n\n\t* sem_ch3.adb (Array_Type_Declaration): Remove insertion of\n\tdeclaration for Itypes in Alfa mode.\n\nFrom-SVN: r178246", "tree": {"sha": "7503d76fb896f9f7f8a1f7bf685661ffecfe4abb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7503d76fb896f9f7f8a1f7bf685661ffecfe4abb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8027b4559bbfa23f098c171d3200973dd11a9da9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8027b4559bbfa23f098c171d3200973dd11a9da9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8027b4559bbfa23f098c171d3200973dd11a9da9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8027b4559bbfa23f098c171d3200973dd11a9da9/comments", "author": null, "committer": null, "parents": [{"sha": "d85fd922e12315cd65061ed85f7afb40fe7ff958", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d85fd922e12315cd65061ed85f7afb40fe7ff958", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d85fd922e12315cd65061ed85f7afb40fe7ff958"}], "stats": {"total": 144, "additions": 50, "deletions": 94}, "files": [{"sha": "b89a0f81a370d1daa14a5a38484007be4e604884", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8027b4559bbfa23f098c171d3200973dd11a9da9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8027b4559bbfa23f098c171d3200973dd11a9da9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=8027b4559bbfa23f098c171d3200973dd11a9da9", "patch": "@@ -1,3 +1,13 @@\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* a-except.adb, a-except-2005.adb: Minor comment rewording and\n+\treformatting.\n+\n+2011-08-29  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_ch3.adb (Array_Type_Declaration): Remove insertion of\n+\tdeclaration for Itypes in Alfa mode.\n+\n 2011-08-29  Robert Dewar  <dewar@adacore.com>\n \n \t* a-cdlili.ads, a-coinve.ads, a-coorma.adb, a-coorma.ads, s-tassta.adb,"}, {"sha": "509ea924f76d8062c075fd6eb679ccbf6cc2ce76", "filename": "gcc/ada/a-except-2005.adb", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8027b4559bbfa23f098c171d3200973dd11a9da9/gcc%2Fada%2Fa-except-2005.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8027b4559bbfa23f098c171d3200973dd11a9da9/gcc%2Fada%2Fa-except-2005.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except-2005.adb?ref=8027b4559bbfa23f098c171d3200973dd11a9da9", "patch": "@@ -422,7 +422,6 @@ package body Ada.Exceptions is\n    procedure Rcheck_19 (File : System.Address; Line : Integer);\n    procedure Rcheck_20 (File : System.Address; Line : Integer);\n    procedure Rcheck_21 (File : System.Address; Line : Integer);\n-   procedure Rcheck_22 (File : System.Address; Line : Integer);\n    procedure Rcheck_23 (File : System.Address; Line : Integer);\n    procedure Rcheck_24 (File : System.Address; Line : Integer);\n    procedure Rcheck_25 (File : System.Address; Line : Integer);\n@@ -445,6 +444,14 @@ package body Ada.Exceptions is\n    procedure Rcheck_12_Ext\n      (File : System.Address; Line, Column, Index, First, Last : Integer);\n \n+   procedure Rcheck_22 (File : System.Address; Line : Integer);\n+   --  This routine is separated out because it has quite different behavior\n+   --  from the others. This is the \"finalize/adjust raised exception\". This\n+   --  subprogram is always called with abort deferred, unlike all other\n+   --  Rcheck_* routines, it needs to call Raise_Exception_No_Defer.\n+   --\n+   --  It should probably have a distinguished name ???\n+\n    pragma Export (C, Rcheck_00, \"__gnat_rcheck_00\");\n    pragma Export (C, Rcheck_01, \"__gnat_rcheck_01\");\n    pragma Export (C, Rcheck_02, \"__gnat_rcheck_02\");\n@@ -1151,19 +1158,6 @@ package body Ada.Exceptions is\n       Raise_Program_Error_Msg (File, Line, Rmsg_21'Address);\n    end Rcheck_21;\n \n-   procedure Rcheck_22 (File : System.Address; Line : Integer) is\n-      E : constant Exception_Id := Program_Error_Def'Access;\n-   begin\n-      --  This is \"finalize/adjust raised exception\".\n-      --  As this exception is only raised with aborts defered, it must\n-      --  call Raise_Exception_No_Defer, contrary to all other Rcheck\n-      --  subprograms (which defer aborts).\n-      --  This is coherent with Raise_From_Controlled_Operation.\n-\n-      Exception_Data.Set_Exception_C_Msg (E, File, Line, 0, Rmsg_22'Address);\n-      Raise_Current_Excep (E);\n-   end Rcheck_22;\n-\n    procedure Rcheck_23 (File : System.Address; Line : Integer) is\n    begin\n       Raise_Program_Error_Msg (File, Line, Rmsg_23'Address);\n@@ -1262,6 +1256,24 @@ package body Ada.Exceptions is\n       Raise_Constraint_Error_Msg (File, Line, Column, Msg'Address);\n    end Rcheck_12_Ext;\n \n+   ---------------\n+   -- Rcheck_22 --\n+   ---------------\n+\n+   procedure Rcheck_22 (File : System.Address; Line : Integer) is\n+      E : constant Exception_Id := Program_Error_Def'Access;\n+\n+   begin\n+      --  This is \"finalize/adjust raised exception\". This subprogram is always\n+      --  called with abort deferred, unlike all other Rcheck_* routines, it\n+      --  needs to call Raise_Exception_No_Defer.\n+\n+      --  This is consistent with Raise_From_Controlled_Operation\n+\n+      Exception_Data.Set_Exception_C_Msg (E, File, Line, 0, Rmsg_22'Address);\n+      Raise_Current_Excep (E);\n+   end Rcheck_22;\n+\n    -------------\n    -- Reraise --\n    -------------"}, {"sha": "f34d4975612e8bdb6b4e4532e40d85417f61645c", "filename": "gcc/ada/a-except.adb", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8027b4559bbfa23f098c171d3200973dd11a9da9/gcc%2Fada%2Fa-except.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8027b4559bbfa23f098c171d3200973dd11a9da9/gcc%2Fada%2Fa-except.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-except.adb?ref=8027b4559bbfa23f098c171d3200973dd11a9da9", "patch": "@@ -381,7 +381,6 @@ package body Ada.Exceptions is\n    procedure Rcheck_19 (File : System.Address; Line : Integer);\n    procedure Rcheck_20 (File : System.Address; Line : Integer);\n    procedure Rcheck_21 (File : System.Address; Line : Integer);\n-   procedure Rcheck_22 (File : System.Address; Line : Integer);\n    procedure Rcheck_23 (File : System.Address; Line : Integer);\n    procedure Rcheck_24 (File : System.Address; Line : Integer);\n    procedure Rcheck_25 (File : System.Address; Line : Integer);\n@@ -395,6 +394,14 @@ package body Ada.Exceptions is\n    procedure Rcheck_33 (File : System.Address; Line : Integer);\n    procedure Rcheck_34 (File : System.Address; Line : Integer);\n \n+   procedure Rcheck_22 (File : System.Address; Line : Integer);\n+   --  This routine is separated out because it has quite different behavior\n+   --  from the others. This is the \"finalize/adjust raised exception\". This\n+   --  subprogram is always called with abort deferred, unlike all other\n+   --  Rcheck_* routines, it needs to call Raise_Exception_No_Defer.\n+   --\n+   --  It should probably have a distinguished name ???\n+\n    pragma Export (C, Rcheck_00, \"__gnat_rcheck_00\");\n    pragma Export (C, Rcheck_01, \"__gnat_rcheck_01\");\n    pragma Export (C, Rcheck_02, \"__gnat_rcheck_02\");\n@@ -1084,12 +1091,13 @@ package body Ada.Exceptions is\n \n    procedure Rcheck_22 (File : System.Address; Line : Integer) is\n       E : constant Exception_Id := Program_Error_Def'Access;\n+\n    begin\n-      --  This is \"finalize/adjust raised exception\".\n-      --  As this exception is only raised with aborts defered, it must\n-      --  call Raise_Exception_No_Defer, contrary to all other Rcheck\n-      --  subprograms (which defer aborts).\n-      --  This is coherent with Raise_From_Controlled_Operation.\n+      --  This is \"finalize/adjust raised exception\". This subprogram is always\n+      --  called with abort deferred, unlike all other Rcheck_* routines, it\n+      --  needs to call Raise_Exception_No_Defer.\n+\n+      --  This is consistent with Raise_From_Controlled_Operation\n \n       Exception_Data.Set_Exception_C_Msg (E, File, Line, 0, Rmsg_22'Address);\n       Raise_Current_Excep (E);"}, {"sha": "d21e8a1a8d5292629f7c499f521bb950bb78fc88", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 0, "deletions": 74, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8027b4559bbfa23f098c171d3200973dd11a9da9/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8027b4559bbfa23f098c171d3200973dd11a9da9/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=8027b4559bbfa23f098c171d3200973dd11a9da9", "patch": "@@ -4741,41 +4741,6 @@ package body Sem_Ch3 is\n \n          Make_Index (Index, P, Related_Id, Nb_Index);\n \n-         --  In formal verification mode, create an explicit declaration for\n-         --  Itypes created for index types. Having a declaration for all type\n-         --  entities facilitates the task of the formal verification back-end.\n-         --  Notice that this declaration is not attached to the tree.\n-\n-         if ALFA_Mode\n-           and then Is_Itype (Etype (Index))\n-         then\n-            declare\n-               Loc     : constant Source_Ptr := Sloc (Def);\n-               Sub_Ind : Node_Id;\n-               Decl    : Entity_Id;\n-\n-            begin\n-               if Nkind (Index) = N_Subtype_Indication then\n-                  Sub_Ind := Relocate_Node (Index);\n-               else\n-                  Sub_Ind :=\n-                    Make_Subtype_Indication (Loc,\n-                      Subtype_Mark =>\n-                        New_Occurrence_Of (Base_Type (Etype (Index)), Loc),\n-                      Constraint =>\n-                        Make_Range_Constraint (Loc,\n-                          Range_Expression => Relocate_Node (Index)));\n-               end if;\n-\n-               Decl :=\n-                 Make_Subtype_Declaration (Loc,\n-                   Defining_Identifier => Etype (Index),\n-                   Subtype_Indication  => Sub_Ind);\n-\n-               Analyze (Decl);\n-            end;\n-         end if;\n-\n          --  Check error of subtype with predicate for index type\n \n          Bad_Predicated_Subtype_Use\n@@ -4793,24 +4758,6 @@ package body Sem_Ch3 is\n       if Present (Component_Typ) then\n          Element_Type := Process_Subtype (Component_Typ, P, Related_Id, 'C');\n \n-         --  In formal verification mode, create an explicit declaration for\n-         --  the Itype created for a component type. Having a declaration for\n-         --  all type entities facilitates the task of the formal verification\n-         --  back-end. Note: this declaration is not attached to the tree.\n-\n-         if ALFA_Mode and then Is_Itype (Element_Type) then\n-            declare\n-               Loc  : constant Source_Ptr := Sloc (Def);\n-               Decl : Entity_Id;\n-            begin\n-               Decl :=\n-                 Make_Subtype_Declaration (Loc,\n-                   Defining_Identifier => Element_Type,\n-                   Subtype_Indication  => Relocate_Node (Component_Typ));\n-               Analyze (Decl);\n-            end;\n-         end if;\n-\n          Set_Etype (Component_Typ, Element_Type);\n \n          if not Nkind_In (Component_Typ, N_Identifier, N_Expanded_Name) then\n@@ -4897,27 +4844,6 @@ package body Sem_Ch3 is\n                                (Implicit_Base, Finalize_Storage_Only\n                                                         (Element_Type));\n \n-         --  In ALFA mode, generate a declaration for Itype T, so that the\n-         --  formal verification back-end can use it.\n-\n-         if ALFA_Mode and then Is_Itype (T) then\n-            declare\n-               Loc  : constant Source_Ptr := Sloc (Def);\n-               Decl : Node_Id;\n-            begin\n-               Decl :=\n-                 Make_Full_Type_Declaration (Loc,\n-                   Defining_Identifier => T,\n-                   Type_Definition     =>\n-                     Make_Constrained_Array_Definition (Loc,\n-                       Discrete_Subtype_Definitions =>\n-                         New_Copy_List (Discrete_Subtype_Definitions (Def)),\n-                       Component_Definition         =>\n-                         Relocate_Node (Component_Definition (Def))));\n-               Analyze (Decl);\n-            end;\n-         end if;\n-\n       --  Unconstrained array case\n \n       else"}]}