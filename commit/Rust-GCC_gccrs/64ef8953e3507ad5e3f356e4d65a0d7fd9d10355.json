{"sha": "64ef8953e3507ad5e3f356e4d65a0d7fd9d10355", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRlZjg5NTNlMzUwN2FkNWUzZjM1NmU0ZDY1YTBkN2ZkOWQxMDM1NQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-04-07T16:54:00Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-04-07T16:54:00Z"}, "message": "i386.md (\"*sse_prologue_save_insn\"): Use braced output control string instead of quoted.\n\n        * config/i386/i386.md (\"*sse_prologue_save_insn\"): Use braced output\n        control string instead of quoted.\n\nFrom-SVN: r133984", "tree": {"sha": "469f4dbd2d477db58767cd6c697765cb31034ebf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/469f4dbd2d477db58767cd6c697765cb31034ebf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64ef8953e3507ad5e3f356e4d65a0d7fd9d10355", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ef8953e3507ad5e3f356e4d65a0d7fd9d10355", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ef8953e3507ad5e3f356e4d65a0d7fd9d10355", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ef8953e3507ad5e3f356e4d65a0d7fd9d10355/comments", "author": null, "committer": null, "parents": [{"sha": "84159bd8fcff0faaac81396dbe6ed503e7efff8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84159bd8fcff0faaac81396dbe6ed503e7efff8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84159bd8fcff0faaac81396dbe6ed503e7efff8e"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "e350b84690709c98eb73e245f2879af2b363490b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ef8953e3507ad5e3f356e4d65a0d7fd9d10355/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ef8953e3507ad5e3f356e4d65a0d7fd9d10355/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=64ef8953e3507ad5e3f356e4d65a0d7fd9d10355", "patch": "@@ -1,13 +1,18 @@\n+2008-04-07  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.md (\"*sse_prologue_save_insn\"): Use braced output\n+\tcontrol string instead of quoted.\n+\n 2008-04-07  Kenneth Zadeck <zadeck@naturalbridge.com>\n \n-\tdoc/rtl.texi: Rewrite of subreg section.\n-\t\n+\t* doc/rtl.texi: Rewrite of subreg section.\n+\n 2008-04-07  Kai Tietz  <kai.tietz@onevision.com>\n \n-        PR/35842\n-        * config/i386/i386.c (legitimize_pic_address): Add treating\n-        of dllimport SYM_REF's.\n-        (legitimize_dllimport_symbol): Add prototype.\n+\tPR/35842\n+\t* config/i386/i386.c (legitimize_pic_address): Add treating\n+\tof dllimport SYM_REF's.\n+\t(legitimize_dllimport_symbol): Add prototype.\n \n 2008-04-07  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -278,12 +283,10 @@\n \n \t* config/mips/mips.md (any_gt, any_ge, any_lt, any_le): New code\n \titerators.\n-\t(u): Add attribute values for gt, gtu, ge, geu, lt, ltu, le and\n-\tleu.\n+\t(u): Add attribute values for gt, gtu, ge, geu, lt, ltu, le and leu.\n \t(sgt<u>): Merge sgt and sgtu into new expander.\n \t(sgt, sgtu): Remove expanders.\n-\t(*sgt<u>_<mode>): Merge *sgt_<mode> and *sgtu_<mode> into new\n-\tpattern.\n+\t(*sgt<u>_<mode>): Merge *sgt_<mode> and *sgtu_<mode> into new pattern.\n \t(*sgt_<mode>, *sgtu_<mode>): Remove patterns.\n \t(*sgt<u>_<mode>_mips16): Merge *sgt_<mode>_mips16 and\n \t*sgtu_<mode>_mips16 into new pattern.\n@@ -295,16 +298,14 @@\n \t(*sge_<mode>, second *sge_<mode>): Remove patterns.\n \t(slt<u>): Merge slt and sltu into new expander.\n \t(slt, sltu): Remove expanders.\n-\t(*slt<u>_<mode>): Merge *slt_<mode> and *sltu_<mode> into new\n-\tpattern.\n+\t(*slt<u>_<mode>): Merge *slt_<mode> and *sltu_<mode> into new pattern.\n \t(*slt_<mode>, *sltu_<mode>): Remove patterns.\n \t(*slt<u>_<mode>_mips16): Merge *slt_<mode>_mips16 and\n \t*sltu_<mode>_mips16 into new pattern.\n \t(*slt_<mode>_mips16, *sltu_<mode>_mips16): Remove patterns.\n \t(sle<u>): Merge sle and sleu into new expander.\n \t(sle, sleu): Remove expanders.\n-\t(*sle<u>_<mode>): Merge *sle_<mode> and *sleu_<mode> into new\n-\tpattern.\n+\t(*sle<u>_<mode>): Merge *sle_<mode> and *sleu_<mode> into new pattern.\n \t(*sle_<mode>, *sleu_<mode>): Remove patterns.\n \t(*sle<u>_<mode>_mips16): Merge *sle_<mode>_mips16 and\n \t*sleu_<mode>_mips16 into new pattern."}, {"sha": "ce5722ab0ba7ef7237213ad44715ef64d02144df", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ef8953e3507ad5e3f356e4d65a0d7fd9d10355/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ef8953e3507ad5e3f356e4d65a0d7fd9d10355/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=64ef8953e3507ad5e3f356e4d65a0d7fd9d10355", "patch": "@@ -21067,26 +21067,24 @@\n   \"TARGET_64BIT\n    && INTVAL (operands[4]) + SSE_REGPARM_MAX * 16 - 16 < 128\n    && INTVAL (operands[4]) + INTVAL (operands[2]) * 16 >= -128\"\n-  \"*\n {\n   int i;\n   operands[0] = gen_rtx_MEM (Pmode,\n \t\t\t     gen_rtx_PLUS (Pmode, operands[0], operands[4]));\n-  output_asm_insn (\\\"jmp\\\\t%A1\\\", operands);\n+  output_asm_insn (\"jmp\\t%A1\", operands);\n   for (i = SSE_REGPARM_MAX - 1; i >= INTVAL (operands[2]); i--)\n     {\n       operands[4] = adjust_address (operands[0], DImode, i*16);\n       operands[5] = gen_rtx_REG (TImode, SSE_REGNO (i));\n       PUT_MODE (operands[4], TImode);\n       if (GET_CODE (XEXP (operands[0], 0)) != PLUS)\n-        output_asm_insn (\\\"rex\\\", operands);\n-      output_asm_insn (\\\"movaps\\\\t{%5, %4|%4, %5}\\\", operands);\n+        output_asm_insn (\"rex\", operands);\n+      output_asm_insn (\"movaps\\t{%5, %4|%4, %5}\", operands);\n     }\n-  (*targetm.asm_out.internal_label) (asm_out_file, \\\"L\\\",\n-\t\t\t     CODE_LABEL_NUMBER (operands[3]));\n-  return \\\"\\\";\n+  (*targetm.asm_out.internal_label) (asm_out_file, \"L\",\n+\t\t\t\t     CODE_LABEL_NUMBER (operands[3]));\n+  return \"\";\n }\n-  \"\n   [(set_attr \"type\" \"other\")\n    (set_attr \"length_immediate\" \"0\")\n    (set_attr \"length_address\" \"0\")"}]}