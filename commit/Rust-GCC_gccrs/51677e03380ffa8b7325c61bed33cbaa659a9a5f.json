{"sha": "51677e03380ffa8b7325c61bed33cbaa659a9a5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE2NzdlMDMzODBmZmE4YjczMjVjNjFiZWQzM2NiYWE2NTlhOWE1Zg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-28T01:44:55Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-01-28T01:44:55Z"}, "message": "Add Solaris version of os.Hostname.\n\nFrom-SVN: r169350", "tree": {"sha": "e9a6ef2e43d92df415dcfed91d04d672ba58e3b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9a6ef2e43d92df415dcfed91d04d672ba58e3b2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/51677e03380ffa8b7325c61bed33cbaa659a9a5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51677e03380ffa8b7325c61bed33cbaa659a9a5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51677e03380ffa8b7325c61bed33cbaa659a9a5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51677e03380ffa8b7325c61bed33cbaa659a9a5f/comments", "author": null, "committer": null, "parents": [{"sha": "00472076856c3816104cf9a72130590ec24201d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/00472076856c3816104cf9a72130590ec24201d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/00472076856c3816104cf9a72130590ec24201d7"}], "stats": {"total": 47, "additions": 45, "deletions": 2}, "files": [{"sha": "2faabfc41beffc0a9cf5a51bad1b9914f5fbac55", "filename": "libgo/Makefile.am", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51677e03380ffa8b7325c61bed33cbaa659a9a5f/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51677e03380ffa8b7325c61bed33cbaa659a9a5f/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=51677e03380ffa8b7325c61bed33cbaa659a9a5f", "patch": "@@ -657,6 +657,20 @@ go_netchan_files = \\\n \tgo/netchan/export.go \\\n \tgo/netchan/import.go\n \n+if LIBGO_IS_LINUX\n+go_os_sys_file = go/os/sys_linux.go\n+else\n+if LIBGO_IS_SOLARIS\n+go_os_sys_file = go/os/sys_uname.go\n+else\n+if LIBGO_IS_RTEMS\n+go_os_sys_file = go/os/sys_uname.go\n+else\n+go_os_sys_file = go/os/sys_bsd.go\n+endif\n+endif\n+endif\n+\n go_os_files = \\\n \tgo/os/dir.go \\\n \tgo/os/env.go \\\n@@ -669,7 +683,7 @@ go_os_files = \\\n \tgo/os/path.go \\\n \tgo/os/proc.go \\\n \tgo/os/stat.go \\\n-\tgo/os/sys_linux.go \\\n+\t$(go_os_sys_file) \\\n \tgo/os/time.go \\\n \tgo/os/types.go\n "}, {"sha": "ea42227a422f072be3958530164e632d4fe92de4", "filename": "libgo/Makefile.in", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51677e03380ffa8b7325c61bed33cbaa659a9a5f/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51677e03380ffa8b7325c61bed33cbaa659a9a5f/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=51677e03380ffa8b7325c61bed33cbaa659a9a5f", "patch": "@@ -1037,6 +1037,10 @@ go_netchan_files = \\\n \tgo/netchan/export.go \\\n \tgo/netchan/import.go\n \n+@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_RTEMS_FALSE@@LIBGO_IS_SOLARIS_FALSE@go_os_sys_file = go/os/sys_bsd.go\n+@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_RTEMS_TRUE@@LIBGO_IS_SOLARIS_FALSE@go_os_sys_file = go/os/sys_uname.go\n+@LIBGO_IS_LINUX_FALSE@@LIBGO_IS_SOLARIS_TRUE@go_os_sys_file = go/os/sys_uname.go\n+@LIBGO_IS_LINUX_TRUE@go_os_sys_file = go/os/sys_linux.go\n go_os_files = \\\n \tgo/os/dir.go \\\n \tgo/os/env.go \\\n@@ -1049,7 +1053,7 @@ go_os_files = \\\n \tgo/os/path.go \\\n \tgo/os/proc.go \\\n \tgo/os/stat.go \\\n-\tgo/os/sys_linux.go \\\n+\t$(go_os_sys_file) \\\n \tgo/os/time.go \\\n \tgo/os/types.go\n "}, {"sha": "ea46ad01e634e23036b41e8f85f08fd948e447e6", "filename": "libgo/go/os/sys_uname.go", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/51677e03380ffa8b7325c61bed33cbaa659a9a5f/libgo%2Fgo%2Fos%2Fsys_uname.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/51677e03380ffa8b7325c61bed33cbaa659a9a5f/libgo%2Fgo%2Fos%2Fsys_uname.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fos%2Fsys_uname.go?ref=51677e03380ffa8b7325c61bed33cbaa659a9a5f", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2011 The Go Authors. All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+// For systems which only store the hostname in uname (Solaris).\n+\n+package os\n+\n+import \"syscall\"\n+\n+func Hostname() (name string, err Error) {\n+\tvar u syscall.Utsname\n+\tif errno := syscall.Uname(&u); errno != 0 {\n+\t\treturn \"\", NewSyscallError(\"uname\", errno)\n+\t}\n+\tb := make([]byte, len(u.Nodename))\n+\ti := 0\n+\tfor ; i < len(u.Nodename); i++ {\n+\t\tif u.Nodename[i] == 0 {\n+\t\t\tbreak\n+\t\t}\n+\t\tb[i] = byte(u.Nodename[i])\n+\t}\n+\treturn string(b[:i]), nil\n+}"}]}