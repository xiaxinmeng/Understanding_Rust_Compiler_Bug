{"sha": "9c9535f974cb9a348fd99a90d0ab08a32583d337", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWM5NTM1Zjk3NGNiOWEzNDhmZDk5YTkwZDBhYjA4YTMyNTgzZDMzNw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2019-12-16T10:33:59Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-12-16T10:33:59Z"}, "message": "[Ada] Expand renamings of subcomponents of an atomic or VFA object\n\n2019-12-16  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* exp_ch8.adb (Expand_N_Object_Renaming_Declaration): Document\n\tthird special case of renamings requiring special handling.\n\t(Evaluation_Required): Return true for an atomic or VFA prefix.\n\nFrom-SVN: r279423", "tree": {"sha": "44efba3654310f78c99a78a54dc0e6a88b8f111f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44efba3654310f78c99a78a54dc0e6a88b8f111f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c9535f974cb9a348fd99a90d0ab08a32583d337", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c9535f974cb9a348fd99a90d0ab08a32583d337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c9535f974cb9a348fd99a90d0ab08a32583d337", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c9535f974cb9a348fd99a90d0ab08a32583d337/comments", "author": null, "committer": null, "parents": [{"sha": "90393d3ca7fe7547777473f4b197792f1cb3fca9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90393d3ca7fe7547777473f4b197792f1cb3fca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90393d3ca7fe7547777473f4b197792f1cb3fca9"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "2151a4e60bdee0f58fa06c4ee5a0f919d8e6a9b7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c9535f974cb9a348fd99a90d0ab08a32583d337/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c9535f974cb9a348fd99a90d0ab08a32583d337/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9c9535f974cb9a348fd99a90d0ab08a32583d337", "patch": "@@ -1,3 +1,9 @@\n+2019-12-16  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_ch8.adb (Expand_N_Object_Renaming_Declaration): Document\n+\tthird special case of renamings requiring special handling.\n+\t(Evaluation_Required): Return true for an atomic or VFA prefix.\n+\n 2019-12-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* checks.adb (Apply_Float_Conversion_Check): Use node of type"}, {"sha": "dcb51ef6533d634c84477796caa673aa5279f297", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 19, "deletions": 5, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c9535f974cb9a348fd99a90d0ab08a32583d337/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c9535f974cb9a348fd99a90d0ab08a32583d337/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=9c9535f974cb9a348fd99a90d0ab08a32583d337", "patch": "@@ -72,7 +72,14 @@ package body Exp_Ch8 is\n    --  clause applies (that can specify an arbitrary bit boundary), or where\n    --  the enclosing record itself has a non-standard representation.\n \n-   --  In these two cases, we pre-evaluate the renaming expression, by\n+   --  In Ada 2020, a third case arises when the renamed object is a nonatomic\n+   --  subcomponent of an atomic object, because reads of or writes to it must\n+   --  access the enclosing atomic object. That's also the case for an object\n+   --  subject to the Volatile_Full_Access GNAT aspect/pragma in any language\n+   --  version. For the sake of simplicity, we treat any subcomponent of an\n+   --  atomic or Volatile_Full_Access object in any language version this way.\n+\n+   --  In these three cases, we pre-evaluate the renaming expression, by\n    --  extracting and freezing the values of any subscripts, and then we\n    --  set the flag Is_Renaming_Of_Object which means that any reference\n    --  to the object will be handled by macro substitution in the front\n@@ -102,10 +109,10 @@ package body Exp_Ch8 is\n       --  Determines whether it is necessary to do static name evaluation for\n       --  renaming of Nam. It is considered necessary if evaluating the name\n       --  involves indexing a packed array, or extracting a component of a\n-      --  record to which a component clause applies. Note that we are only\n-      --  interested in these operations if they occur as part of the name\n-      --  itself, subscripts are just values that are computed as part of the\n-      --  evaluation, so their form is unimportant.\n+      --  record to which a component clause applies, or a subcomponent of an\n+      --  atomic object. Note that we are only interested in these operations\n+      --  if they occur as part of the name itself, subscripts are just values\n+      --  that are computed as part of the evaluation, so they are unimportant.\n       --  In addition, always return True for Modify_Tree_For_C since the\n       --  code generator doesn't know how to handle renamings.\n \n@@ -121,6 +128,10 @@ package body Exp_Ch8 is\n          elsif Nkind_In (Nam, N_Indexed_Component, N_Slice) then\n             if Is_Packed (Etype (Prefix (Nam))) then\n                return True;\n+\n+            elsif Is_Atomic_Or_VFA_Object (Prefix (Nam)) then\n+               return True;\n+\n             else\n                return Evaluation_Required (Prefix (Nam));\n             end if;\n@@ -141,6 +152,9 @@ package body Exp_Ch8 is\n                then\n                   return True;\n \n+               elsif Is_Atomic_Or_VFA_Object (Prefix (Nam)) then\n+                  return True;\n+\n                else\n                   return Evaluation_Required (Prefix (Nam));\n                end if;"}]}