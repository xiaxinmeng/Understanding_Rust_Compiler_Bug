{"sha": "cc9a7ae2299a530f087ee5dc83876fd44534104a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2M5YTdhZTIyOTlhNTMwZjA4N2VlNWRjODM4NzZmZDQ0NTM0MTA0YQ==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-03-01T13:01:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-06-16T08:43:03Z"}, "message": "[Ada] Fix aliasing check for actual parameters passed by reference\n\ngcc/ada/\n\n\t* checks.adb (Apply_Scalar_Range_Check): Fix handling of check depending\n\ton the parameter passing mechanism.  Grammar adjustment (\"has\"\n\t=> \"have\").\n\t(Parameter_Passing_Mechanism_Specified): Add a hyphen in a comment.", "tree": {"sha": "976049e8240e39655c1bc1b14893a7e58252e980", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/976049e8240e39655c1bc1b14893a7e58252e980"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc9a7ae2299a530f087ee5dc83876fd44534104a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9a7ae2299a530f087ee5dc83876fd44534104a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc9a7ae2299a530f087ee5dc83876fd44534104a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc9a7ae2299a530f087ee5dc83876fd44534104a/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dc7a8ab14137d77e711e65c4097346b4d6e3799", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dc7a8ab14137d77e711e65c4097346b4d6e3799", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dc7a8ab14137d77e711e65c4097346b4d6e3799"}], "stats": {"total": 58, "additions": 40, "deletions": 18}, "files": [{"sha": "877a982b8405642ab3c0a0085932e0c72df2faaa", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 40, "deletions": 18, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc9a7ae2299a530f087ee5dc83876fd44534104a/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc9a7ae2299a530f087ee5dc83876fd44534104a/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=cc9a7ae2299a530f087ee5dc83876fd44534104a", "patch": "@@ -2306,6 +2306,11 @@ package body Checks is\n    is\n       Loc : constant Source_Ptr := Sloc (Call);\n \n+      function Parameter_Passing_Mechanism_Specified\n+        (Typ : Entity_Id)\n+         return Boolean;\n+      --  Returns True if parameter-passing mechanism is specified for type Typ\n+\n       function May_Cause_Aliasing\n         (Formal_1 : Entity_Id;\n          Formal_2 : Entity_Id) return Boolean;\n@@ -2332,6 +2337,19 @@ package body Checks is\n       --  Check contains all and-ed simple tests generated so far or remains\n       --  unchanged in the case of detailed exception messaged.\n \n+      -------------------------------------------\n+      -- Parameter_Passing_Mechanism_Specified --\n+      -------------------------------------------\n+\n+      function Parameter_Passing_Mechanism_Specified\n+        (Typ : Entity_Id)\n+         return Boolean\n+      is\n+      begin\n+         return Is_Elementary_Type (Typ)\n+           or else Is_By_Reference_Type (Typ);\n+      end Parameter_Passing_Mechanism_Specified;\n+\n       ------------------------\n       -- May_Cause_Aliasing --\n       ------------------------\n@@ -2493,21 +2511,15 @@ package body Checks is\n          --  Elementary types are always passed by value, therefore actuals of\n          --  such types cannot lead to aliasing. An aggregate is an object in\n          --  Ada 2012, but an actual that is an aggregate cannot overlap with\n-         --  another actual. A type that is By_Reference (such as an array of\n-         --  controlled types) is not subject to the check because any update\n-         --  will be done in place and a subsequent read will always see the\n-         --  correct value, see RM 6.2 (12/3).\n+         --  another actual.\n \n          if Nkind (Orig_Act_1) = N_Aggregate\n            or else (Nkind (Orig_Act_1) = N_Qualified_Expression\n                      and then Nkind (Expression (Orig_Act_1)) = N_Aggregate)\n          then\n             null;\n \n-         elsif Is_Object_Reference (Orig_Act_1)\n-           and then not Is_Elementary_Type (Etype (Orig_Act_1))\n-           and then not Is_By_Reference_Type (Etype (Orig_Act_1))\n-         then\n+         elsif Is_Object_Reference (Orig_Act_1) then\n             Actual_2 := Next_Actual (Actual_1);\n             Formal_2 := Next_Formal (Formal_1);\n             while Present (Actual_2) and then Present (Formal_2) loop\n@@ -2518,18 +2530,28 @@ package body Checks is\n                --  the mode of the two formals may lead to aliasing.\n \n                if Is_Object_Reference (Orig_Act_2)\n-                 and then not Is_Elementary_Type (Etype (Orig_Act_2))\n                  and then May_Cause_Aliasing (Formal_1, Formal_2)\n                then\n-                  Remove_Side_Effects (Actual_1);\n-                  Remove_Side_Effects (Actual_2);\n-\n-                  Overlap_Check\n-                    (Actual_1 => Actual_1,\n-                     Actual_2 => Actual_2,\n-                     Formal_1 => Formal_1,\n-                     Formal_2 => Formal_2,\n-                     Check    => Check);\n+\n+                  --  The aliasing check only applies when some of the formals\n+                  --  have their passing mechanism unspecified; RM 6.2 (12/3).\n+\n+                  if Parameter_Passing_Mechanism_Specified (Etype (Orig_Act_1))\n+                       and then\n+                     Parameter_Passing_Mechanism_Specified (Etype (Orig_Act_2))\n+                  then\n+                     null;\n+                  else\n+                     Remove_Side_Effects (Actual_1);\n+                     Remove_Side_Effects (Actual_2);\n+\n+                     Overlap_Check\n+                       (Actual_1 => Actual_1,\n+                        Actual_2 => Actual_2,\n+                        Formal_1 => Formal_1,\n+                        Formal_2 => Formal_2,\n+                        Check    => Check);\n+                  end if;\n                end if;\n \n                Next_Actual (Actual_2);"}]}