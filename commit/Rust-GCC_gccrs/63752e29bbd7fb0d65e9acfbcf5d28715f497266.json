{"sha": "63752e29bbd7fb0d65e9acfbcf5d28715f497266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3NTJlMjliYmQ3ZmIwZDY1ZTlhY2ZiY2Y1ZDI4NzE1ZjQ5NzI2Ng==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2005-11-14T20:07:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2005-11-14T20:07:45Z"}, "message": "re PR c++/24580 (virtual base class cause exception not to be caught)\n\n        PR c++/24580\n        * method.c (locate_ctor): Skip all artificial parms, not just\n        'this'.\n\nFrom-SVN: r106901", "tree": {"sha": "47a4a9dd0b3a9124f944303cf55f661076130364", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47a4a9dd0b3a9124f944303cf55f661076130364"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63752e29bbd7fb0d65e9acfbcf5d28715f497266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63752e29bbd7fb0d65e9acfbcf5d28715f497266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63752e29bbd7fb0d65e9acfbcf5d28715f497266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63752e29bbd7fb0d65e9acfbcf5d28715f497266/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8520690170c14805001693fe2fb88bc7b58a8cbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8520690170c14805001693fe2fb88bc7b58a8cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8520690170c14805001693fe2fb88bc7b58a8cbf"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "6d7260fb3b1d07763a966a13084a2e68ab577095", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63752e29bbd7fb0d65e9acfbcf5d28715f497266/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63752e29bbd7fb0d65e9acfbcf5d28715f497266/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=63752e29bbd7fb0d65e9acfbcf5d28715f497266", "patch": "@@ -1,3 +1,9 @@\n+2005-11-14  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/24580\n+\t* method.c (locate_ctor): Skip all artificial parms, not just\n+\t'this'.\n+\n 2005-11-14  Mark Mitchell  <mark@codesourcery.com>\n \n \t* parser.c (eof_token): Add initializer for ambiguous_p."}, {"sha": "82f4a363cc2daa707cec3e5b564dc2bff254a82b", "filename": "gcc/cp/method.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63752e29bbd7fb0d65e9acfbcf5d28715f497266/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63752e29bbd7fb0d65e9acfbcf5d28715f497266/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=63752e29bbd7fb0d65e9acfbcf5d28715f497266", "patch": "@@ -889,7 +889,9 @@ locate_ctor (tree type, void *client ATTRIBUTE_UNUSED)\n       tree fn = OVL_CURRENT (fns);\n       tree parms = TYPE_ARG_TYPES (TREE_TYPE (fn));\n \n-      if (sufficient_parms_p (TREE_CHAIN (parms)))\n+      parms = skip_artificial_parms_for (fn, parms);\n+\n+      if (sufficient_parms_p (parms))\n \treturn fn;\n     }\n   return NULL_TREE;"}, {"sha": "2da814db9d632a24426ccf6c550c2eb602fce221", "filename": "gcc/testsuite/g++.dg/eh/synth2.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63752e29bbd7fb0d65e9acfbcf5d28715f497266/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsynth2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63752e29bbd7fb0d65e9acfbcf5d28715f497266/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsynth2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsynth2.C?ref=63752e29bbd7fb0d65e9acfbcf5d28715f497266", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/24580\n+// { dg-do run }\n+\n+struct vbase {};\n+\n+struct foo : virtual vbase\n+{\n+  foo()\n+  {\n+    throw \"exception in foo ctor\";\n+  }\n+};\n+\n+struct bar :  public foo {};\n+\n+int main()\n+{\n+  try\n+    {\n+      bar a;\n+    }\n+  catch ( ... ) { }\n+  return 0;\n+}"}]}