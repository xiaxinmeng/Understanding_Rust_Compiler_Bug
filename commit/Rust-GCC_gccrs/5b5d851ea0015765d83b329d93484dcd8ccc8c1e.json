{"sha": "5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWI1ZDg1MWVhMDAxNTc2NWQ4M2IzMjlkOTM0ODRkY2Q4Y2NjOGMxZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-22T22:23:56Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-22T22:23:56Z"}, "message": "re PR c++/56395 (ICE, Segmentation fault in tsubst)\n\n\tPR c++/56395\n\t* tree.c (strip_typedefs): Strip typedefs from TYPENAME_TYPE template\n\targs.\n\nFrom-SVN: r196228", "tree": {"sha": "ce5dc4e0309d139e8e186cee5d35be9fbf01bb7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce5dc4e0309d139e8e186cee5d35be9fbf01bb7a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b5d851ea0015765d83b329d93484dcd8ccc8c1e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "18c635651a8f2982c9db6d724e301df4c09739e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18c635651a8f2982c9db6d724e301df4c09739e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18c635651a8f2982c9db6d724e301df4c09739e0"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "8f0872b13fcba997bba1e821b8880b283f90d61f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b5d851ea0015765d83b329d93484dcd8ccc8c1e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b5d851ea0015765d83b329d93484dcd8ccc8c1e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "patch": "@@ -1,3 +1,9 @@\n+2013-02-22  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/56395\n+\t* tree.c (strip_typedefs): Strip typedefs from TYPENAME_TYPE template\n+\targs.\n+\n 2013-02-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/56373"}, {"sha": "75b4d5121ed453acdbc8d8356872b5fffe6ae21e", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 28, "deletions": 3, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b5d851ea0015765d83b329d93484dcd8ccc8c1e/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b5d851ea0015765d83b329d93484dcd8ccc8c1e/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "patch": "@@ -1220,9 +1220,34 @@ strip_typedefs (tree t)\n       }\n       break;\n     case TYPENAME_TYPE:\n-      result = make_typename_type (strip_typedefs (TYPE_CONTEXT (t)),\n-\t\t\t\t   TYPENAME_TYPE_FULLNAME (t),\n-\t\t\t\t   typename_type, tf_none);\n+      {\n+\ttree fullname = TYPENAME_TYPE_FULLNAME (t);\n+\tif (TREE_CODE (fullname) == TEMPLATE_ID_EXPR)\n+\t  {\n+\t    tree args = TREE_OPERAND (fullname, 1);\n+\t    tree new_args = copy_node (args);\n+\t    bool changed = false;\n+\t    for (int i = 0; i < TREE_VEC_LENGTH (args); ++i)\n+\t      {\n+\t\ttree arg = TREE_VEC_ELT (args, i);\n+\t\ttree strip_arg;\n+\t\tif (TYPE_P (arg))\n+\t\t  strip_arg = strip_typedefs (arg);\n+\t\telse\n+\t\t  strip_arg = strip_typedefs_expr (arg);\n+\t\tTREE_VEC_ELT (new_args, i) = strip_arg;\n+\t\tif (strip_arg != arg)\n+\t\t  changed = true;\n+\t      }\n+\t    if (changed)\n+\t      fullname = lookup_template_function (TREE_OPERAND (fullname, 0),\n+\t\t\t\t\t\t   new_args);\n+\t    else\n+\t      ggc_free (new_args);\n+\t  }\n+\tresult = make_typename_type (strip_typedefs (TYPE_CONTEXT (t)),\n+\t\t\t\t     fullname, typename_type, tf_none);\n+      }\n       break;\n     case DECLTYPE_TYPE:\n       result = strip_typedefs_expr (DECLTYPE_TYPE_EXPR (t));"}, {"sha": "735deb2775242d659b2ffbd78afb7ac23d11c348", "filename": "gcc/testsuite/g++.dg/template/typename19.C", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5b5d851ea0015765d83b329d93484dcd8ccc8c1e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5b5d851ea0015765d83b329d93484dcd8ccc8c1e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename19.C?ref=5b5d851ea0015765d83b329d93484dcd8ccc8c1e", "patch": "@@ -0,0 +1,24 @@\n+// PR c++/56395\n+\n+struct A\n+{\n+  template <class T> struct B { };\n+};\n+\n+template <class T> struct D { };\n+\n+template <class T, class U> struct C\n+{\n+  typedef T _Type;\n+  typedef typename T::template B<_Type> _BType;\n+  D<_BType> d;\n+};\n+\n+template <class T> struct C<T,T>\n+{\n+  typedef T _Type;\n+  typedef typename T::template B<_Type> _BType;\n+  D<_BType> d;\n+};\n+\n+C<A,A> c;"}]}