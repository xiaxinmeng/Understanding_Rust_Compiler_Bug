{"sha": "eb3a3bb8ce4ce2420919d03a3e9f9a2a4297c4d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWIzYTNiYjhjZTRjZTI0MjA5MTlkMDNhM2U5ZjlhMmE0Mjk3YzRkMw==", "commit": {"author": {"name": "Thomas Rodgers", "email": "rodgert@appliantology.com", "date": "2021-06-09T20:44:31Z"}, "committer": {"name": "Thomas Rodgers", "email": "rodgert@appliantology.com", "date": "2021-06-09T20:46:03Z"}, "message": "libstd++: Only support atomic_ref::wait tests which are always lockfree\n\nFixes a regression on arm32 targets.\n\nlibstdc++-v3/ChangeLog:\n\t* testsuite/29_atomics/atomic_ref/wait_notify.cc: Guard\n\ttest logic with constexpr check for is_always_lock_free.", "tree": {"sha": "9b54b10907c204d74f388de8c813a84420cf7832", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b54b10907c204d74f388de8c813a84420cf7832"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb3a3bb8ce4ce2420919d03a3e9f9a2a4297c4d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3a3bb8ce4ce2420919d03a3e9f9a2a4297c4d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb3a3bb8ce4ce2420919d03a3e9f9a2a4297c4d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb3a3bb8ce4ce2420919d03a3e9f9a2a4297c4d3/comments", "author": null, "committer": null, "parents": [{"sha": "d4faa36e7540c573c5dc17850bcd938d0900b2e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d4faa36e7540c573c5dc17850bcd938d0900b2e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d4faa36e7540c573c5dc17850bcd938d0900b2e9"}], "stats": {"total": 25, "additions": 14, "deletions": 11}, "files": [{"sha": "b75e27617f774c4155f291b864fd8fcb121dda2f", "filename": "libstdc++-v3/testsuite/29_atomics/atomic_ref/wait_notify.cc", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb3a3bb8ce4ce2420919d03a3e9f9a2a4297c4d3/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_ref%2Fwait_notify.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb3a3bb8ce4ce2420919d03a3e9f9a2a4297c4d3/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_ref%2Fwait_notify.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F29_atomics%2Fatomic_ref%2Fwait_notify.cc?ref=eb3a3bb8ce4ce2420919d03a3e9f9a2a4297c4d3", "patch": "@@ -30,17 +30,20 @@ template<typename S>\n   void\n   test (S va, S vb)\n   {\n-    S aa{ va };\n-    S bb{ vb };\n-    std::atomic_ref<S> a{ aa };\n-    a.wait(bb);\n-    std::thread t([&]\n-      {\n-\ta.store(bb);\n-\ta.notify_one();\n-      });\n-    a.wait(aa);\n-    t.join();\n+    if constexpr (std::atomic_ref<S>::is_always_lock_free)\n+    {\n+      S aa{ va };\n+      S bb{ vb };\n+      std::atomic_ref<S> a{ aa };\n+      a.wait(bb);\n+      std::thread t([&]\n+        {\n+\t  a.store(bb);\n+\t  a.notify_one();\n+        });\n+      a.wait(aa);\n+      t.join();\n+    }\n   }\n \n int"}]}