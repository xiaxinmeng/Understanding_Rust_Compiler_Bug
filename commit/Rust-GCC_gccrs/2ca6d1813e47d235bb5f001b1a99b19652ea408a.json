{"sha": "2ca6d1813e47d235bb5f001b1a99b19652ea408a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNhNmQxODEzZTQ3ZDIzNWJiNWYwMDFiMWE5OWIxOTY1MmVhNDA4YQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2019-03-19T14:53:43Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2019-03-19T14:53:43Z"}, "message": "re PR lto/87089 (tree check: expected class 'type', have 'declaration' (namespace_decl) in type_with_linkage_p, at ipa-utils.h)\n\n\n\tPR lto/87809\n\tPR lto/89335\n\t* tree.c (free_lang_data_in_decl): Do not free context of C++\n\tdestrutors.\n\n\t* g++.dg/lto/pr87089_0.C: New testcase.\n\t* g++.dg/lto/pr87089_1.C: New testcase.\n\t* g++.dg/lto/pr89335_0.C: New testcase.\n\nFrom-SVN: r269799", "tree": {"sha": "b13250450205e19610d8556959467ff737bb3610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b13250450205e19610d8556959467ff737bb3610"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ca6d1813e47d235bb5f001b1a99b19652ea408a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca6d1813e47d235bb5f001b1a99b19652ea408a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ca6d1813e47d235bb5f001b1a99b19652ea408a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ca6d1813e47d235bb5f001b1a99b19652ea408a/comments", "author": null, "committer": null, "parents": [{"sha": "9195aa172bbc20627f23bfb1612180c83a0a7bab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9195aa172bbc20627f23bfb1612180c83a0a7bab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9195aa172bbc20627f23bfb1612180c83a0a7bab"}], "stats": {"total": 74, "additions": 72, "deletions": 2}, "files": [{"sha": "bb627115a486e277118cb07e43bd723bd1104b32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ca6d1813e47d235bb5f001b1a99b19652ea408a", "patch": "@@ -1,3 +1,10 @@\n+2019-03-19  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR lto/87809\n+\tPR lto/89335\n+\t* tree.c (free_lang_data_in_decl): Do not free context of C++\n+\tdestrutors.\n+\n 2019-03-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/89506"}, {"sha": "986457ab1597ee2af983b51854b0075f82df2c32", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ca6d1813e47d235bb5f001b1a99b19652ea408a", "patch": "@@ -1,3 +1,11 @@\n+2019-03-19  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\tPR lto/87809\n+\tPR lto/89335\n+\t* g++.dg/lto/pr87089_0.C: New testcase.\n+\t* g++.dg/lto/pr87089_1.C: New testcase.\n+\t* g++.dg/lto/pr89335_0.C: New testcase.\n+\n 2019-03-19  Kelvin Nilsen  <kelvin@gcc.gnu.org>\n \n \tPR target/89736"}, {"sha": "764453472c6ba91eba733226d9b9417876ef59b2", "filename": "gcc/testsuite/g++.dg/lto/pr87089_0.C", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87089_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87089_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87089_0.C?ref=2ca6d1813e47d235bb5f001b1a99b19652ea408a", "patch": "@@ -0,0 +1,21 @@\n+// { dg-lto-do link }\n+// { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" }\n+namespace itpp {\n+template <class a> void b(a *c) { c[0].~a(); }\n+class CFix;\n+template <class> class d {\n+  void e(const char *);\n+  CFix *data;\n+};\n+class CFix {\n+public:\n+  virtual ~CFix();\n+};\n+template <> void d<int>::e(const char *) { b(data); }\n+} // namespace itpp\n+\n+int\n+main (void)\n+{\n+  return 0;\n+}"}, {"sha": "0c243c24d97485db1735d79fa55f2a4bba771476", "filename": "gcc/testsuite/g++.dg/lto/pr87089_1.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87089_1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87089_1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr87089_1.C?ref=2ca6d1813e47d235bb5f001b1a99b19652ea408a", "patch": "@@ -0,0 +1,12 @@\n+namespace itpp {\n+enum a { b };\n+class CFix {\n+public:\n+  virtual ~CFix();\n+};\n+template <a = b> class c : CFix {\n+  ~c() {}\n+};\n+template class c<>;\n+} // namespace itpp\n+"}, {"sha": "df2d2ba8fb145e7a68585576e993342130a8da7d", "filename": "gcc/testsuite/g++.dg/lto/pr89335_0.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr89335_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr89335_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr89335_0.C?ref=2ca6d1813e47d235bb5f001b1a99b19652ea408a", "patch": "@@ -0,0 +1,16 @@\n+// { dg-lto-do link }\n+// { dg-lto-options {{-O2 -flto -Wsuggest-final-methods}} }\n+// { dg-extra-ld-options \"-r -nostdlib -flinker-output=nolto-rel\" }\n+class Container\n+{\n+public:\n+  virtual ~Container ();\n+};\n+class List : public Container // { dg-lto-message \"final would enable devirtualization\" }\n+{\n+};\n+static List cache[256];\n+int main (void)\n+{\n+  return 0;\n+}"}, {"sha": "8ea42512aa773225f449a0d4aa605783a162e748", "filename": "gcc/tree.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ca6d1813e47d235bb5f001b1a99b19652ea408a/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=2ca6d1813e47d235bb5f001b1a99b19652ea408a", "patch": "@@ -5772,10 +5772,16 @@ free_lang_data_in_decl (tree decl, struct free_lang_data_d *fld)\n      not do well with TREE_CHAIN pointers linking them.\n \n      Also do not drop containing types for virtual methods and tables because\n-     these are needed by devirtualization.  */\n+     these are needed by devirtualization.\n+     C++ destructors are special because C++ frontends sometimes produces\n+     virtual destructor as an alias of non-virtual destructor.  In\n+     devirutalization code we always walk through aliases and we need\n+     context to be preserved too.  See PR89335  */\n   if (TREE_CODE (decl) != FIELD_DECL\n       && ((TREE_CODE (decl) != VAR_DECL && TREE_CODE (decl) != FUNCTION_DECL)\n-          || !DECL_VIRTUAL_P (decl)))\n+          || (!DECL_VIRTUAL_P (decl)\n+\t      && (TREE_CODE (decl) != FUNCTION_DECL\n+\t\t  || !DECL_CXX_DESTRUCTOR_P (decl)))))\n     DECL_CONTEXT (decl) = fld_decl_context (DECL_CONTEXT (decl));\n }\n "}]}