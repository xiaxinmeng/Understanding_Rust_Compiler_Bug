{"sha": "727577c2300f8a1c4cf757e784267e11034f6b4a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzI3NTc3YzIzMDBmOGExYzRjZjc1N2U3ODQyNjdlMTEwMzRmNmI0YQ==", "commit": {"author": {"name": "Carl Love", "email": "cel@us.ibm.com", "date": "2017-05-16T19:32:54Z"}, "committer": {"name": "Carl Love", "email": "carll@gcc.gnu.org", "date": "2017-05-16T19:32:54Z"}, "message": "rs6000-c: Add support for built-in functions vector unsigned long long vec_bperm (vector...\n\ngcc/ChangeLog:\n\n2017-05-16  Carl Love  <cel@us.ibm.com>\n\n\t* config/rs6000/rs6000-c: Add support for built-in functions\n\tvector unsigned long long vec_bperm (vector unsigned long long,\n\t                                     vector unsigned char)\n\tvector signed long long vec_mule (vector signed int,\n\t                                  vector signed int)\n\tvector unsigned long long vec_mule (vector unsigned int,\n\t                                    vector unsigned int)\n\tvector signed long long vec_mulo (vector signed int,\n\t                                  vector signed int)\n\tvector unsigned long long vec_mulo (vector unsigned int,\n\t                                    vector unsigned int)\n\tvector signed char vec_sldw (vector signed char,\n\t                             vector signed char,\n\t                             const int)\n\tvector unsigned char vec_sldw (vector unsigned char,\n\t                               vector unsigned char,\n\t                               const int)\n\tvector signed short vec_sldw (vector signed short,\n\t                              vector signed short,\n\t                              const int)\n\tvector unsigned short vec_sldw (vector unsigned short,\n\t                                vector unsigned short,\n\t                                const int)\n\tvector signed int vec_sldw (vector signed int,\n\t                            vector signed int,\n\t                            const int)\n\tvector unsigned int vec_sldw (vector unsigned int,\n\t                              vector unsigned int,\n\t                              const int)\n\tvector signed long long vec_sldw (vector signed long long,\n\t                                  vector signed long long,\n\t                                  const int)\n\tvector unsigned long long vec_sldw (vector unsigned long long,\n\t                                    vector unsigned long long,\n\t                                    const int)\n\t* config/rs6000/rs6000-c: Add support for built-in functions\n\t* config/rs6000/rs6000-builtin.def: Add definition for SLDW.\n\t* config/rs6000/altivec.h: Add defintion for vec_sldw.\n\t* doc/extend.texi: Update the built-in documentation for the\n\tnew built-in functions.\n\ngcc/testsuite/ChangeLog:\n\n2017-05-16  Carl Love  <cel@us.ibm.com>\n\n\t* gcc.target/powerpc/builtins-3.c: New vec_mule, vec_mulo test cases.\n\t* gcc.target/powerpc/builtins-3-p8.c: Add tests for the new Power 8\n\tbuilt-ins to the test suite file.  Note, support for mradds exists\n\tbut no test case exists.\n\t* gcc.target/powerpc/builtins-3-p9.c: Add tests for the new Power 9\n\tbuilt-ins to the test suite file.\n\nFrom-SVN: r248125", "tree": {"sha": "51ea7c324bd6bf2e6ccac03b4d9f17336c30f289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ea7c324bd6bf2e6ccac03b4d9f17336c30f289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/727577c2300f8a1c4cf757e784267e11034f6b4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727577c2300f8a1c4cf757e784267e11034f6b4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727577c2300f8a1c4cf757e784267e11034f6b4a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727577c2300f8a1c4cf757e784267e11034f6b4a/comments", "author": {"login": "carlelove", "id": 86435705, "node_id": "MDQ6VXNlcjg2NDM1NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/86435705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/carlelove", "html_url": "https://github.com/carlelove", "followers_url": "https://api.github.com/users/carlelove/followers", "following_url": "https://api.github.com/users/carlelove/following{/other_user}", "gists_url": "https://api.github.com/users/carlelove/gists{/gist_id}", "starred_url": "https://api.github.com/users/carlelove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/carlelove/subscriptions", "organizations_url": "https://api.github.com/users/carlelove/orgs", "repos_url": "https://api.github.com/users/carlelove/repos", "events_url": "https://api.github.com/users/carlelove/events{/privacy}", "received_events_url": "https://api.github.com/users/carlelove/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6b6ae9eb9c06b6911573bb9a13cf98b5a7c98b78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b6ae9eb9c06b6911573bb9a13cf98b5a7c98b78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b6ae9eb9c06b6911573bb9a13cf98b5a7c98b78"}], "stats": {"total": 284, "additions": 256, "deletions": 28}, "files": [{"sha": "1cdda6d59147dddbcb496e803380bd565277cfc7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -1,3 +1,46 @@\n+2017-05-16  Carl Love  <cel@us.ibm.com>\n+\n+\t* config/rs6000/rs6000-c: Add support for built-in functions\n+\tvector unsigned long long vec_bperm (vector unsigned long long,\n+\t                                     vector unsigned char)\n+\tvector signed long long vec_mule (vector signed int,\n+\t                                  vector signed int)\n+\tvector unsigned long long vec_mule (vector unsigned int,\n+\t                                    vector unsigned int)\n+\tvector signed long long vec_mulo (vector signed int,\n+\t                                  vector signed int)\n+\tvector unsigned long long vec_mulo (vector unsigned int,\n+\t                                    vector unsigned int)\n+\tvector signed char vec_sldw (vector signed char,\n+\t                             vector signed char,\n+\t                             const int)\n+\tvector unsigned char vec_sldw (vector unsigned char,\n+\t                               vector unsigned char,\n+\t                               const int)\n+\tvector signed short vec_sldw (vector signed short,\n+\t                              vector signed short,\n+\t                              const int)\n+\tvector unsigned short vec_sldw (vector unsigned short,\n+\t                                vector unsigned short,\n+\t                                const int)\n+\tvector signed int vec_sldw (vector signed int,\n+\t                            vector signed int,\n+\t                            const int)\n+\tvector unsigned int vec_sldw (vector unsigned int,\n+\t                              vector unsigned int,\n+\t                              const int)\n+\tvector signed long long vec_sldw (vector signed long long,\n+\t                                  vector signed long long,\n+\t                                  const int)\n+\tvector unsigned long long vec_sldw (vector unsigned long long,\n+\t                                    vector unsigned long long,\n+\t                                    const int)\n+\t* config/rs6000/rs6000-c: Add support for built-in functions\n+\t* config/rs6000/rs6000-builtin.def: Add definition for SLDW.\n+\t* config/rs6000/altivec.h: Add defintion for vec_sldw.\n+\t* doc/extend.texi: Update the built-in documentation for the\n+\tnew built-in functions.\n+\n 2017-05-16  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/80536"}, {"sha": "c92bccef150a4045a44b94698e4bca1358b1df5c", "filename": "gcc/config/rs6000/altivec.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Fconfig%2Frs6000%2Faltivec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Fconfig%2Frs6000%2Faltivec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Faltivec.h?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -247,6 +247,7 @@\n #define vec_sel __builtin_vec_sel\n #define vec_sl __builtin_vec_sl\n #define vec_sld __builtin_vec_sld\n+#define vec_sldw __builtin_vsx_xxsldwi\n #define vec_sll __builtin_vec_sll\n #define vec_slo __builtin_vec_slo\n #define vec_splat __builtin_vec_splat"}, {"sha": "ebe005afb20a6f1cb22fe1376d78d8fe3242c830", "filename": "gcc/config/rs6000/rs6000-builtin.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-builtin.def?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -1502,6 +1502,7 @@ BU_ALTIVEC_OVERLOAD_X (LVSR,\t   \"lvsr\")\n BU_ALTIVEC_OVERLOAD_X (MUL,\t   \"mul\")\n BU_ALTIVEC_OVERLOAD_X (PROMOTE,\t   \"promote\")\n BU_ALTIVEC_OVERLOAD_X (SLD,\t   \"sld\")\n+BU_ALTIVEC_OVERLOAD_X (SLDW,\t   \"sldw\")\n BU_ALTIVEC_OVERLOAD_X (SPLAT,\t   \"splat\")\n BU_ALTIVEC_OVERLOAD_X (SPLATS,\t   \"splats\")\n BU_ALTIVEC_OVERLOAD_X (ST,\t   \"st\")"}, {"sha": "8039814b48eaa85d857ed18d1ce5e7f89adf18f0", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -2182,6 +2182,11 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI, 0 },\n   { ALTIVEC_BUILTIN_VEC_MULE, ALTIVEC_BUILTIN_VMULESH,\n     RS6000_BTI_V4SI, RS6000_BTI_V8HI, RS6000_BTI_V8HI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MULE, ALTIVEC_BUILTIN_VMULESH,\n+    RS6000_BTI_V4SI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MULE, ALTIVEC_BUILTIN_VMULESH,\n+    RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI,\n+    RS6000_BTI_unsigned_V4SI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMULEUB, ALTIVEC_BUILTIN_VMULEUB,\n     RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMULESB, ALTIVEC_BUILTIN_VMULESB,\n@@ -2196,6 +2201,11 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_V8HI, RS6000_BTI_V16QI, RS6000_BTI_V16QI, 0 },\n   { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOUH,\n     RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOSH,\n+    RS6000_BTI_V4SI, RS6000_BTI_V4SI, RS6000_BTI_V4SI, 0 },\n+  { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOSH,\n+    RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI,\n+    RS6000_BTI_unsigned_V4SI, 0 },\n   { ALTIVEC_BUILTIN_VEC_MULO, ALTIVEC_BUILTIN_VMULOSH,\n     RS6000_BTI_V4SI, RS6000_BTI_V8HI, RS6000_BTI_V8HI, 0 },\n   { ALTIVEC_BUILTIN_VEC_VMULOSH, ALTIVEC_BUILTIN_VMULOSH,\n@@ -3457,6 +3467,30 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_bool_V16QI, RS6000_BTI_bool_V16QI, RS6000_BTI_bool_V16QI, RS6000_BTI_NOT_OPAQUE },\n   { ALTIVEC_BUILTIN_VEC_SLD, ALTIVEC_BUILTIN_VSLDOI_2DF,\n     RS6000_BTI_V2DF, RS6000_BTI_V2DF, RS6000_BTI_V2DF, RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLDW, VSX_BUILTIN_XXSLDWI_16QI,\n+    RS6000_BTI_V16QI, RS6000_BTI_V16QI, RS6000_BTI_V16QI,\n+    RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLDW, VSX_BUILTIN_XXSLDWI_16QI,\n+    RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI,\n+    RS6000_BTI_unsigned_V16QI, RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLDW, VSX_BUILTIN_XXSLDWI_8HI,\n+    RS6000_BTI_V8HI, RS6000_BTI_V8HI, RS6000_BTI_V8HI,\n+    RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLDW, VSX_BUILTIN_XXSLDWI_8HI,\n+    RS6000_BTI_unsigned_V8HI, RS6000_BTI_unsigned_V8HI,\n+    RS6000_BTI_unsigned_V8HI, RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLDW, VSX_BUILTIN_XXSLDWI_4SI,\n+    RS6000_BTI_V4SI, RS6000_BTI_V4SI, RS6000_BTI_V4SI,\n+    RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLDW, VSX_BUILTIN_XXSLDWI_4SI,\n+    RS6000_BTI_unsigned_V4SI, RS6000_BTI_unsigned_V4SI,\n+    RS6000_BTI_unsigned_V4SI, RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLDW, VSX_BUILTIN_XXSLDWI_2DI,\n+    RS6000_BTI_V2DI, RS6000_BTI_V2DI, RS6000_BTI_V2DI,\n+    RS6000_BTI_NOT_OPAQUE },\n+  { ALTIVEC_BUILTIN_VEC_SLDW, VSX_BUILTIN_XXSLDWI_2DI,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V2DI,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_NOT_OPAQUE },\n   { ALTIVEC_BUILTIN_VEC_ST, ALTIVEC_BUILTIN_STVX_V2DF,\n     RS6000_BTI_void, RS6000_BTI_V2DF, RS6000_BTI_INTSI, ~RS6000_BTI_V2DF },\n   { ALTIVEC_BUILTIN_VEC_ST, ALTIVEC_BUILTIN_STVX_V2DI,\n@@ -4450,6 +4484,9 @@ const struct altivec_builtin_types altivec_overloaded_builtins[] = {\n     RS6000_BTI_unsigned_V16QI, RS6000_BTI_unsigned_V16QI,\n     RS6000_BTI_unsigned_V16QI, 0 },\n \n+  { P8V_BUILTIN_VEC_VBPERMQ, P8V_BUILTIN_VBPERMQ,\n+    RS6000_BTI_unsigned_V2DI, RS6000_BTI_unsigned_V2DI,\n+    RS6000_BTI_unsigned_V16QI, 0 },\n   { P8V_BUILTIN_VEC_VBPERMQ, P8V_BUILTIN_VBPERMQ,\n     RS6000_BTI_V2DI, RS6000_BTI_V16QI, RS6000_BTI_V16QI, 0 },\n   { P8V_BUILTIN_VEC_VBPERMQ, P8V_BUILTIN_VBPERMQ,"}, {"sha": "3511d258b54f77eeb8e80302e71c991f2200305a", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -16321,6 +16321,10 @@ vector signed short vec_mule (vector signed char,\n vector unsigned int vec_mule (vector unsigned short,\n                               vector unsigned short);\n vector signed int vec_mule (vector signed short, vector signed short);\n+vector unsigned int vec_mule (vector unsigned int,\n+                              vector unsigned int);\n+vector signed int vec_mule (vector signed int,\n+                            vector signed int);\n \n vector signed int vec_vmulesh (vector signed short,\n                                vector signed short);\n@@ -16340,6 +16344,7 @@ vector signed short vec_mulo (vector signed char, vector signed char);\n vector unsigned int vec_mulo (vector unsigned short,\n                               vector unsigned short);\n vector signed int vec_mulo (vector signed short, vector signed short);\n+vector unsigned int vec_mulo (vector unsigned short, vector unsigned short);\n \n vector signed int vec_vmulosh (vector signed short,\n                                vector signed short);\n@@ -16641,6 +16646,31 @@ vector bool char vec_sld (vector bool char,\n                           vector bool char,\n                           const int);\n \n+vector signed char vec_sldw (vector signed char,\n+                             vector signed char,\n+                             const int);\n+vector unsigned char vec_sldw (vector unsigned char,\n+                               vector unsigned char,\n+                               const int);\n+vector signed short vec_sldw (vector signed short,\n+                              vector signed short,\n+                              const int);\n+vector unsigned short vec_sldw (vector unsigned short,\n+                                vector unsigned short,\n+                                const int);\n+vector signed int vec_sldw (vector signed int,\n+                            vector signed int,\n+                            const int);\n+vector unsigned int vec_sldw (vector unsigned int,\n+                              vector unsigned int,\n+                              const int);\n+vector signed long long vec_sldw (vector signed long long,\n+                                  vector signed long long,\n+                                  const int);\n+vector unsigned long long vec_sldw (vector unsigned long long,\n+                                    vector unsigned long long,\n+                                    const int);\n+\n vector signed int vec_sll (vector signed int,\n                            vector unsigned int);\n vector signed int vec_sll (vector signed int,\n@@ -17909,6 +17939,8 @@ vector long long vec_vbpermq (vector signed char, vector signed char);\n vector long long vec_vbpermq (vector unsigned char, vector unsigned char);\n \n vector unsigned char vec_bperm (vector unsigned char, vector unsigned char);\n+vector unsigned char vec_bperm (vector unsigned long long,\n+                                vector unsigned char);\n vector unsigned long long vec_bperm (vector unsigned __int128,\n                                      vector unsigned char);\n "}, {"sha": "29208f36b62945f5195aa24fd12da34b5f133b90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -1,3 +1,12 @@\n+2017-05-16  Carl Love  <cel@us.ibm.com>\n+\n+\t* gcc.target/powerpc/builtins-3.c: New vec_mule, vec_mulo test cases.\n+\t* gcc.target/powerpc/builtins-3-p8.c: Add tests for the new Power 8\n+\tbuilt-ins to the test suite file.  Note, support for mradds exists\n+\tbut no test case exists.\n+\t* gcc.target/powerpc/builtins-3-p9.c: Add tests for the new Power 9\n+\tbuilt-ins to the test suite file.\n+\n 2017-05-16  Marek Polacek  <polacek@redhat.com>\n \n \tPR sanitizer/80536"}, {"sha": "3baa1d85442c9d08af5201afacb826caf7b0d84d", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p8.c", "status": "modified", "additions": 12, "deletions": 25, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p8.c?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -16,12 +16,6 @@ test_pack_float (vector double x, vector double y)\n   return vec_pack (x, y);\n }\n \n-vector long long\n-test_nabs_long_long (vector long long x)\n-{\n-  return vec_nabs (x);\n-}\n-\n vector signed int\n test_vsi_packs_vsll_vsll (vector signed long long x,\n                           vector signed long long y)\n@@ -36,12 +30,6 @@ test_vui_packs_vull_vull (vector unsigned long long x,\n   return vec_packs (x, y);\n }\n \n-vector long long\n-test_neg_long_long (vector long long x)\n-{\n-\treturn vec_neg (x);\n-}\n-\n vector unsigned char\n test_unsigned_char_popcnt_signed_char (vector signed char x)\n {\n@@ -90,35 +78,34 @@ test_unsigned_long_long_popcnt_unsigned_long (vector unsigned long long x)\n \treturn vec_popcnt (x);\n }\n \n+vector signed short\n+test_vss_mradds_vss_vss (vector signed short x, vector signed short y,\n+                         vector signed short z)\n+{\n+\treturn vec_mradds (x, y, z);\n+}\n+\n /* Expected test results:\n \n      test_eq_long_long                         1 vcmpequd inst\n      test_pack_float                           1 vpkudum inst\n-     test_nabs_long_long                       1 vspltisw, 1 vsubudm, 1 vminsd\n      test_vsi_packs_vsll_vsll                  1 vpksdss\n      test_vui_packs_vull_vull                  1 vpkudus\n-     test_neg_long_long                        1 vspltisw, 1 vsubudm \n-     test_eq_long_long                         1 vcmpequd inst\n-     test_pack_float                           1 vpkudum inst\n-     test_nabs_long_long                       1 vspltisw, 1 vsubudm, 1 vminsd\n-     test_neg_long_long                        1 vspltisw, 1 vsubudm\n      test_unsigned_char_popcnt_signed_char     1 vpopcntb\n      test_unsigned_char_popcnt_unsigned_char   1 vpopcntb\n      test_unsigned_short_popcnt_signed_short   1 vpopcnth\n      test_unsigned_short_popcnt_unsigned_short 1 vpopcnth\n-     test_unsigned_signed_popcnt_signed_int    1 vpopcntw\n-     test_unsigned_signed_popcnt_unsigned_int  1 vpopcntw\n-     test_unsigned_signed_popcnt_signed_long   1 vpopcntd\n-     test_unsigned_signed_popcnt_unsigned_long 1 vpopcntd */\n+     test_unsigned_int_popcnt_signed_int       2 vpopcntw\n+     test_unsigned_int_popcnt_unsigned_int     1 vpopcntd\n+     test_unsigned_long_long_popcnt_unsigned_long 1 vpopcntd\n+     test_vss_mradds_vss_vsss                  1 vmhraddshs */\n \n /* { dg-final { scan-assembler-times \"vcmpequd\" 1 } } */\n /* { dg-final { scan-assembler-times \"vpkudum\"  1 } } */\n-/* { dg-final { scan-assembler-times \"vspltisw\" 2 } } */\n-/* { dg-final { scan-assembler-times \"vsubudm\"  2 } } */\n-/* { dg-final { scan-assembler-times \"vminsd\"   1 } } */\n /* { dg-final { scan-assembler-times \"vpksdss\"  1 } } */\n /* { dg-final { scan-assembler-times \"vpkudus\"  1 } } */  \n /* { dg-final { scan-assembler-times \"vpopcntb\" 2 } } */\n /* { dg-final { scan-assembler-times \"vpopcnth\" 2 } } */\n /* { dg-final { scan-assembler-times \"vpopcntw\" 2 } } */\n /* { dg-final { scan-assembler-times \"vpopcntd\" 2 } } */\n+/* { dg-final { scan-assembler-times \"vmhraddshs\"  1 } } */"}, {"sha": "46a31aeecf5f7cb58cb9f2c3f1b04e9485e796c5", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3-p9.c", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3-p9.c?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -28,15 +28,44 @@ test_ne_long (vector bool long long x, vector bool long long y)\n \treturn vec_cmpne (x, y);\n }\n \n+vector long long\n+test_nabs_long_long (vector long long x)\n+{\n+  return vec_nabs (x);\n+}\n+\n+vector long long\n+test_neg_long_long (vector long long x)\n+{\n+\treturn vec_neg (x);\n+}\n+\n+vector unsigned long long\n+test_vull_bperm_vull_vuc (vector unsigned long long x,\n+                          vector unsigned char y)\n+{\n+\treturn vec_bperm (x, y);\n+}\n+\n /* Expected test results:\n \n      test_ne_char              1 vcmpneb\n      test_ne_short             1 vcmpneh\n      test_ne_int               1 vcmpnew\n-     test_ne_long              1 vcmpequd, 1 xxlnor inst */\n+     test_ne_long              1 vcmpequd, 1 xxlnor inst\n+     test_nabs_long_long       1 xxspltib, 1 vsubudm, 1 vminsd\n+     test_neg_long_long        1 vnegd\n+     test_vull_bperm_vull_vuc  1 vbpermd\n+\n \n /* { dg-final { scan-assembler-times \"vcmpneb\"  1 } } */\n /* { dg-final { scan-assembler-times \"vcmpneh\"  1 } } */\n /* { dg-final { scan-assembler-times \"vcmpnew\"  1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequd\" 1 } } */\n /* { dg-final { scan-assembler-times \"xxlnor\"   1 } } */\n+/* { dg-final { scan-assembler-times \"xxspltib\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vsubudm\"  1 } } */\n+/* { dg-final { scan-assembler-times \"vminsd\"   1 } } */\n+/* { dg-final { scan-assembler-times \"vnegd\"    1 } } */\n+/* { dg-final { scan-assembler-times \"vbpermd\"  1 } } */\n+"}, {"sha": "5cbac814f91f14b5e05b084abaca40ad8b2a76e0", "filename": "gcc/testsuite/gcc.target/powerpc/builtins-3.c", "status": "modified", "additions": 91, "deletions": 2, "changes": 93, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/727577c2300f8a1c4cf757e784267e11034f6b4a/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbuiltins-3.c?ref=727577c2300f8a1c4cf757e784267e11034f6b4a", "patch": "@@ -112,6 +112,81 @@ test_vull_slo_vull_vuc (vector unsigned long long x, vector unsigned char y)\n \treturn vec_slo (x, y);\n }\n \n+vector signed int\n+test_vsi_mule_vsi_vsi (vector signed int x, vector signed int y)\n+{\n+\treturn vec_mule (x, y);\n+}\n+\n+vector unsigned int\n+test_vui_mule_vui_vui (vector unsigned int x, vector unsigned int y)\n+{\n+\treturn vec_mule (x, y);\n+}\n+\n+vector signed int\n+test_vsi_mulo_vsi_vsi (vector signed int x, vector signed int y)\n+{\n+\treturn vec_mulo (x, y);\n+}\n+\n+vector unsigned int\n+test_vui_mulo_vui_vui (vector unsigned int x, vector unsigned int y)\n+{\n+\treturn vec_mulo (x, y);\n+}\n+\n+vector signed char\n+test_vsc_sldw_vsc_vsc (vector signed char x, vector signed char y)\n+{\n+\treturn vec_sldw (x, y, 1);\n+}\n+\n+vector unsigned char\n+test_vuc_sldw_vuc_vuc (vector unsigned char x, vector unsigned char y)\n+{\n+\treturn vec_sldw (x, y, 3);\n+}\n+\n+vector signed short int\n+test_vssi_sldw_vssi_vssi (vector signed short int x,\n+                          vector signed short int y)\n+{\n+\treturn vec_sldw (x, y, 1);\n+}\n+\n+vector unsigned short int\n+test_vusi_sldw_vusi_vusi (vector unsigned short int x,\n+                          vector unsigned short int y)\n+{\n+\treturn vec_sldw (x, y, 3);\n+}\n+\n+vector signed int\n+test_vsi_sldw_vsi_vsi (vector signed int x, vector signed int y)\n+{\n+\treturn vec_sldw (x, y, 1);\n+}\n+\n+vector unsigned int\n+test_vui_sldw_vui_vui (vector unsigned int x, vector unsigned int y)\n+{\n+\treturn vec_sldw (x, y, 3);\n+}\n+\n+vector signed long long\n+test_vsl_sldw_vsl_vsl (vector signed long long x, vector signed long long y)\n+{\n+\treturn vec_sldw (x, y, 1);\n+}\n+\n+vector unsigned long long\n+test_vul_sldw_vul_vul (vector unsigned long long x,\n+                       vector unsigned long long y)\n+{\n+\treturn vec_sldw (x, y, 3);\n+}\n+\n /* Expected test results:\n \n      test_eq_char              1 vcmpequb inst\n@@ -131,7 +206,19 @@ test_vull_slo_vull_vuc (vector unsigned long long x, vector unsigned char y)\n      test_vsll_slo_vsll_vsc    1 vslo\n      test_vsll_slo_vsll_vuc    1 vslo\n      test_vull_slo_vsll_vsc    1 vslo\n-     test_vull_slo_vsll_vuc    1 vslo */\n+     test_vull_slo_vsll_vuc    1 vslo\n+     test_vsi_mulo_vsi_vsi     1 vmulosh\n+     test_vui_mulo_vui_vui     1 vmulosh\n+     test_vsi_mule_vsi_vsi     1 vmulesh\n+     test_vui_mule_vui_vui     1 vmulesh\n+     test_vsc_mulo_vsc_vsc     1 xxsldwi\n+     test_vuc_mulo_vuc_vuc     1 xxsldwi\n+     test_vssi_mulo_vssi_vssi  1 xxsldwi\n+     test_vusi_mulo_vusi_vusi  1 xxsldwi\n+     test_vsi_mulo_vsi_vsi     1 xxsldwi\n+     test_vui_mulo_vui_vui     1 xxsldwi\n+     test_vsl_mulo_vsl_vsl     1 xxsldwi\n+     test_vul_mulo_vul_vul     1 xxsldwi */\n \n /* { dg-final { scan-assembler-times \"vcmpequb\" 1 } } */\n /* { dg-final { scan-assembler-times \"vcmpequh\" 1 } } */\n@@ -149,4 +236,6 @@ test_vull_slo_vull_vuc (vector unsigned long long x, vector unsigned char y)\n /* { dg-final { scan-assembler-times \"xvnegsp\"  1 } } */\n /* { dg-final { scan-assembler-times \"xvnegdp\"  1 } } */\n /* { dg-final { scan-assembler-times \"vslo\"     4 } } */\n-\n+/* { dg-final { scan-assembler-times \"vmulosh\"  2 } } */\n+/* { dg-final { scan-assembler-times \"vmulesh\"  2 } } */\n+/* { dg-final { scan-assembler-times \"xxsldwi\"  8 } } */"}]}