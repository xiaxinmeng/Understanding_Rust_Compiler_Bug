{"sha": "d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDVmOGM2ZGM4Y2I1NmJiMDUzNmQ4MWEzOTE2NjM5ZDNmZGQxNDgxYg==", "commit": {"author": {"name": "Mark Kettenis", "email": "kettenis@openbsd.org", "date": "2012-09-09T10:06:13Z"}, "committer": {"name": "Gerald Pfeifer", "email": "gerald@gcc.gnu.org", "date": "2012-09-09T10:06:13Z"}, "message": "decl.c (reshape_init_class): Avoid dereferencing a past-the-end pointer.\n\n\t* decl.c (reshape_init_class): Avoid dereferencing a\n\tpast-the-end pointer.\n\nFrom-SVN: r191106", "tree": {"sha": "f5d615c2c207d91527cd526f9d7f892a33e227cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5d615c2c207d91527cd526f9d7f892a33e227cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b/comments", "author": {"login": "kettenis", "id": 19817229, "node_id": "MDQ6VXNlcjE5ODE3MjI5", "avatar_url": "https://avatars.githubusercontent.com/u/19817229?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kettenis", "html_url": "https://github.com/kettenis", "followers_url": "https://api.github.com/users/kettenis/followers", "following_url": "https://api.github.com/users/kettenis/following{/other_user}", "gists_url": "https://api.github.com/users/kettenis/gists{/gist_id}", "starred_url": "https://api.github.com/users/kettenis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kettenis/subscriptions", "organizations_url": "https://api.github.com/users/kettenis/orgs", "repos_url": "https://api.github.com/users/kettenis/repos", "events_url": "https://api.github.com/users/kettenis/events{/privacy}", "received_events_url": "https://api.github.com/users/kettenis/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bc1b72c78feb2ebb0e67d8104f6e960ac6a808fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc1b72c78feb2ebb0e67d8104f6e960ac6a808fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc1b72c78feb2ebb0e67d8104f6e960ac6a808fa"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "371fdfe152e8a03320493a30b419f9483d54e5d4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b", "patch": "@@ -1,3 +1,8 @@\n+2012-09-09  Mark Kettenis  <kettenis@openbsd.org>\n+\n+\t* decl.c (reshape_init_class): Avoid dereferencing a\n+\tpast-the-end pointer.\n+\t\t  \n 2012-09-07  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* pt.c (num_template_headers_for_class): Rework per the code"}, {"sha": "7655f78729aa0912589cbbcbb14e2f73346a6039", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=d5f8c6dc8cb56bb0536d81a3916639d3fdd1481b", "patch": "@@ -5131,7 +5131,7 @@ reshape_init_class (tree type, reshape_iter *d, bool first_initializer_p,\n       if (field_init == error_mark_node)\n \treturn error_mark_node;\n \n-      if (d->cur->index && d->cur == old_cur)\n+      if (d->cur == old_cur && d->cur->index)\n \t{\n \t  /* This can happen with an invalid initializer for a flexible\n \t     array member (c++/54441).  */"}]}