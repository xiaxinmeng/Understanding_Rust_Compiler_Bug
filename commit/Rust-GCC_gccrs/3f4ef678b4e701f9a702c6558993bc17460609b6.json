{"sha": "3f4ef678b4e701f9a702c6558993bc17460609b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y0ZWY2NzhiNGU3MDFmOWE3MDJjNjU1ODk5M2JjMTc0NjA2MDliNg==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@linux.ibm.com", "date": "2019-07-18T19:07:13Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2019-07-18T19:07:13Z"}, "message": "Rename function.\n\n2019-07-18  Michael Meissner  <meissner@linux.ibm.com>\n\n\t* config/rs6000/predicates.md (prefixed_mem_operand): Call\n\trs6000_prefixed_address_mode_p instead of rs6000_prefixed_address.\n\t* config/rs6000/rs6000-protos.h (rs6000_prefixed_address_mode_p):\n\tRename function from rs6000_prefixed_address.\n\t* config/rs6000/rs6000.c (rs6000_prefixed_address_mode_p): Rename\n\tfunction from rs6000_prefixed_address.\n\nFrom-SVN: r273580", "tree": {"sha": "dd03b55d9bd4d5b34e4c022814a3e2107174ef4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd03b55d9bd4d5b34e4c022814a3e2107174ef4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f4ef678b4e701f9a702c6558993bc17460609b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f4ef678b4e701f9a702c6558993bc17460609b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f4ef678b4e701f9a702c6558993bc17460609b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f4ef678b4e701f9a702c6558993bc17460609b6/comments", "author": null, "committer": null, "parents": [{"sha": "9ae813e89059b101d390e29912bc4348bfc538f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ae813e89059b101d390e29912bc4348bfc538f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ae813e89059b101d390e29912bc4348bfc538f2"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "55680d13c2953c5d64ce7bfafbe4d2eaec55d9cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f4ef678b4e701f9a702c6558993bc17460609b6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f4ef678b4e701f9a702c6558993bc17460609b6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3f4ef678b4e701f9a702c6558993bc17460609b6", "patch": "@@ -1,5 +1,9 @@\n 2019-07-18  Michael Meissner  <meissner@linux.ibm.com>\n \n+\t* config/rs6000/predicates.md (prefixed_mem_operand): Call\n+\trs6000_prefixed_address_mode_p instead of rs6000_prefixed_address.\n+\t* config/rs6000/rs6000-protos.h (rs6000_prefixed_address_mode_p):\n+\tRename function from rs6000_prefixed_address.\n \t* config/rs6000/aix.h (TARGET_HAS_TOC): Rename TARGET_TOC to\n \tTARGET_HAS_TOC.\n \t(TARGET_TOC): Likewise.\n@@ -25,6 +29,8 @@\n \t(output_toc): Use TARGET_NO_TOC_OR_PCREL instead of\n \tTARGET_NO_TOC.\n \t(rs6000_can_eliminate): Likewise.\n+\t(rs6000_prefixed_address_mode_p): Rename function from\n+\trs6000_prefixed_address.\n \t* config/rs6000/rs6000.h (TARGET_TOC): Define in terms of\n \tTARGET_HAS_TOC and not pc-relative.\n \t(TARGET_NO_TOC_OR_PCREL): New macro to replace TARGET_NO_TOC."}, {"sha": "5f687ead16d1777e17b65f91599dc4c1673c0b01", "filename": "gcc/config/rs6000/predicates.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f4ef678b4e701f9a702c6558993bc17460609b6/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f4ef678b4e701f9a702c6558993bc17460609b6/gcc%2Fconfig%2Frs6000%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpredicates.md?ref=3f4ef678b4e701f9a702c6558993bc17460609b6", "patch": "@@ -1686,7 +1686,7 @@\n (define_predicate \"prefixed_mem_operand\"\n   (match_code \"mem\")\n {\n-  return rs6000_prefixed_address (XEXP (op, 0), GET_MODE (op));\n+  return rs6000_prefixed_address_mode_p (XEXP (op, 0), GET_MODE (op));\n })\n \n ;; Return 1 if op is a memory operand to an external variable when we"}, {"sha": "06e40d94b17733ece6621ee6e3144cf05f80d785", "filename": "gcc/config/rs6000/rs6000-protos.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f4ef678b4e701f9a702c6558993bc17460609b6/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f4ef678b4e701f9a702c6558993bc17460609b6/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-protos.h?ref=3f4ef678b4e701f9a702c6558993bc17460609b6", "patch": "@@ -154,7 +154,7 @@ extern align_flags rs6000_loop_align (rtx);\n extern void rs6000_split_logical (rtx [], enum rtx_code, bool, bool, bool);\n extern bool rs6000_pcrel_p (struct function *);\n extern bool rs6000_fndecl_pcrel_p (const_tree);\n-extern bool rs6000_prefixed_address (rtx, machine_mode);\n+extern bool rs6000_prefixed_address_mode_p (rtx, machine_mode);\n #endif /* RTX_CODE */\n \n #ifdef TREE_CODE"}, {"sha": "0013b39d0a801cd2a3e0770a0f43547e49d35157", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f4ef678b4e701f9a702c6558993bc17460609b6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f4ef678b4e701f9a702c6558993bc17460609b6/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=3f4ef678b4e701f9a702c6558993bc17460609b6", "patch": "@@ -21504,7 +21504,7 @@ mode_supports_prefixed_address_p (machine_mode mode)\n    mode MODE.  */\n \n bool\n-rs6000_prefixed_address (rtx addr, machine_mode mode)\n+rs6000_prefixed_address_mode_p (rtx addr, machine_mode mode)\n {\n   if (!TARGET_PREFIXED_ADDR || !mode_supports_prefixed_address_p (mode))\n     return false;"}]}