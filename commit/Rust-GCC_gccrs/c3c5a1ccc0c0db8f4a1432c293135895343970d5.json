{"sha": "c3c5a1ccc0c0db8f4a1432c293135895343970d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNjNWExY2NjMGMwZGI4ZjRhMTQzMmMyOTMxMzU4OTUzNDM5NzBkNQ==", "commit": {"author": {"name": "Andrew Stubbs", "email": "ams@codesourcery.com", "date": "2011-09-08T19:45:37Z"}, "committer": {"name": "Andrew Stubbs", "email": "ams@gcc.gnu.org", "date": "2011-09-08T19:45:37Z"}, "message": "re PR tree-optimization/50318 (ICE optimizing widening multiply-and-accumulate)\n\n2011-09-08  Andrew Stubbs  <ams@codesourcery.com>\n\n\tPR tree-optimization/50318\n\n\tgcc/\n\t* tree-ssa-math-opts.c (convert_plusminus_to_widen): Correct\n\ttypo in use of mult_rhs1 and mult_rhs2.\n\n\tgcc/testsuite/\n\t* gcc.target/arm/pr50318-1.c: New file.\n\nFrom-SVN: r178708", "tree": {"sha": "64056841ecdf5af069fc7909d0f8de2c8892fb13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64056841ecdf5af069fc7909d0f8de2c8892fb13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3c5a1ccc0c0db8f4a1432c293135895343970d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c5a1ccc0c0db8f4a1432c293135895343970d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3c5a1ccc0c0db8f4a1432c293135895343970d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3c5a1ccc0c0db8f4a1432c293135895343970d5/comments", "author": {"login": "ams-cs", "id": 2235130, "node_id": "MDQ6VXNlcjIyMzUxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2235130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ams-cs", "html_url": "https://github.com/ams-cs", "followers_url": "https://api.github.com/users/ams-cs/followers", "following_url": "https://api.github.com/users/ams-cs/following{/other_user}", "gists_url": "https://api.github.com/users/ams-cs/gists{/gist_id}", "starred_url": "https://api.github.com/users/ams-cs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ams-cs/subscriptions", "organizations_url": "https://api.github.com/users/ams-cs/orgs", "repos_url": "https://api.github.com/users/ams-cs/repos", "events_url": "https://api.github.com/users/ams-cs/events{/privacy}", "received_events_url": "https://api.github.com/users/ams-cs/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a2e6888d20967667c156627fde42530ba19e7ca7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2e6888d20967667c156627fde42530ba19e7ca7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2e6888d20967667c156627fde42530ba19e7ca7"}], "stats": {"total": 26, "additions": 24, "deletions": 2}, "files": [{"sha": "dbda61cef07a9995922466ba3c025809ea295c60", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c5a1ccc0c0db8f4a1432c293135895343970d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c5a1ccc0c0db8f4a1432c293135895343970d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3c5a1ccc0c0db8f4a1432c293135895343970d5", "patch": "@@ -1,3 +1,9 @@\n+2011-09-08  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\tPR tree-optimization/50318\n+\t* tree-ssa-math-opts.c (convert_plusminus_to_widen): Correct\n+\ttypo in use of mult_rhs1 and mult_rhs2.\n+\n 2011-09-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.c (standard_sse_constant_p): Handle AVX2 modes."}, {"sha": "9144ee4cf07dbed340f3d358394de04d747b69af", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c5a1ccc0c0db8f4a1432c293135895343970d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c5a1ccc0c0db8f4a1432c293135895343970d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3c5a1ccc0c0db8f4a1432c293135895343970d5", "patch": "@@ -1,3 +1,8 @@\n+2011-09-08  Andrew Stubbs  <ams@codesourcery.com>\n+\n+\tPR tree-optimization/50318\n+\t* gcc.target/arm/pr50318-1.c: New file.\n+\n 2011-09-08  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.target/i386/all_one_m256i.c: New test."}, {"sha": "05885e1b5aca048305bbb981c6e5327a022099be", "filename": "gcc/testsuite/gcc.target/arm/pr50318-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c5a1ccc0c0db8f4a1432c293135895343970d5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr50318-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c5a1ccc0c0db8f4a1432c293135895343970d5/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr50318-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr50318-1.c?ref=c3c5a1ccc0c0db8f4a1432c293135895343970d5", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-require-effective-target arm_dsp } */\n+\n+long long test (unsigned int sec, unsigned long long nsecs)\n+{\n+   return (long long)(long)sec * 1000000000L + (long long)(unsigned\n+   long)nsecs;\n+}\n+\n+/* { dg-final { scan-assembler \"umlal\" } } */"}, {"sha": "b8591f992057da770263eca18972cce74c63ecd2", "filename": "gcc/tree-ssa-math-opts.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3c5a1ccc0c0db8f4a1432c293135895343970d5/gcc%2Ftree-ssa-math-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3c5a1ccc0c0db8f4a1432c293135895343970d5/gcc%2Ftree-ssa-math-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-math-opts.c?ref=c3c5a1ccc0c0db8f4a1432c293135895343970d5", "patch": "@@ -2386,9 +2386,9 @@ convert_plusminus_to_widen (gimple_stmt_iterator *gsi, gimple stmt,\n \n   /* Handle constants.  */\n   if (TREE_CODE (mult_rhs1) == INTEGER_CST)\n-    rhs1 = fold_convert (type1, mult_rhs1);\n+    mult_rhs1 = fold_convert (type1, mult_rhs1);\n   if (TREE_CODE (mult_rhs2) == INTEGER_CST)\n-    rhs2 = fold_convert (type2, mult_rhs2);\n+    mult_rhs2 = fold_convert (type2, mult_rhs2);\n \n   gimple_assign_set_rhs_with_ops_1 (gsi, wmult_code, mult_rhs1, mult_rhs2,\n \t\t\t\t    add_rhs);"}]}