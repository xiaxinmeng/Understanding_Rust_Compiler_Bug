{"sha": "26d75703036bbdd170c157fd70a5ff1a29c27f22", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZkNzU3MDMwMzZiYmRkMTcwYzE1N2ZkNzBhNWZmMWEyOWMyN2YyMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-08-30T11:52:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-08-30T11:52:15Z"}, "message": "fold-const.c (fold_single_bit_test): Fix overflow test.\n\n2013-08-30  Richard Biener  <rguenther@suse.de>\n\n\t* fold-const.c (fold_single_bit_test): Fix overflow test.\n\nFrom-SVN: r202103", "tree": {"sha": "26810ef3d7ceee20229132ebc9fa4eda39210d05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26810ef3d7ceee20229132ebc9fa4eda39210d05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26d75703036bbdd170c157fd70a5ff1a29c27f22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d75703036bbdd170c157fd70a5ff1a29c27f22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26d75703036bbdd170c157fd70a5ff1a29c27f22", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26d75703036bbdd170c157fd70a5ff1a29c27f22/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f7e088e7de99b6ab31dc56d2a3ed358647207256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7e088e7de99b6ab31dc56d2a3ed358647207256", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7e088e7de99b6ab31dc56d2a3ed358647207256"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "c3d91d3ee4f3d2d1ee74af98851cddfbab7b4e22", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d75703036bbdd170c157fd70a5ff1a29c27f22/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d75703036bbdd170c157fd70a5ff1a29c27f22/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=26d75703036bbdd170c157fd70a5ff1a29c27f22", "patch": "@@ -1,3 +1,7 @@\n+2013-08-30  Richard Biener  <rguenther@suse.de>\n+\n+\t* fold-const.c (fold_single_bit_test): Fix overflow test.\n+\n 2013-08-30  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* function.c (assign_parm_setup_reg): For a parameter passed by pointer"}, {"sha": "f959f0a14a0d27889f438e73b0c94c1a0f6629e6", "filename": "gcc/fold-const.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26d75703036bbdd170c157fd70a5ff1a29c27f22/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26d75703036bbdd170c157fd70a5ff1a29c27f22/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=26d75703036bbdd170c157fd70a5ff1a29c27f22", "patch": "@@ -6634,10 +6634,10 @@ fold_single_bit_test (location_t loc, enum tree_code code,\n \t not overflow, adjust BITNUM and INNER.  */\n       if (TREE_CODE (inner) == RSHIFT_EXPR\n \t  && TREE_CODE (TREE_OPERAND (inner, 1)) == INTEGER_CST\n-\t  && TREE_INT_CST_HIGH (TREE_OPERAND (inner, 1)) == 0\n+\t  && host_integerp (TREE_OPERAND (inner, 1), 1)\n \t  && bitnum < TYPE_PRECISION (type)\n-\t  && 0 > compare_tree_int (TREE_OPERAND (inner, 1),\n-\t\t\t\t   bitnum - TYPE_PRECISION (type)))\n+\t  && (TREE_INT_CST_LOW (TREE_OPERAND (inner, 1))\n+\t      < (unsigned) (TYPE_PRECISION (type) - bitnum)))\n \t{\n \t  bitnum += TREE_INT_CST_LOW (TREE_OPERAND (inner, 1));\n \t  inner = TREE_OPERAND (inner, 0);"}]}