{"sha": "831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODMxYjllZjhmMGM4ZjZhMDY4YWEzNGJjY2NhYzgxZjc0MDVmOGQxZQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-11-30T10:36:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-11-30T10:36:54Z"}, "message": "tree-dump.c (dump_option_value_in): Add TDF_NOUID.\n\n2009-11-30  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-dump.c (dump_option_value_in): Add TDF_NOUID.\n\t* tree-pass.h (TDF_NOUID): Likewise.\n\t* print-rtl.c: Include tree-pass.h.\n\t(print_mem_expr): Pass dump_flags.\n\t(print_rtx): Likewise.\n\t* print-tree.c: Include tree-pass.h.\n\t(print_node_brief): Handle TDF_NOUID.\n\t(print_node): Likewise.\n\t* tree-pretty-print.c (dump_decl_name): Likewise.\n\t(dump_generic_node): Likewise.\n\t* Makefile.in (print-rtl.o, print-tree.o): Add $(TREE_PASS_H)\n\tdependency.\n\nFrom-SVN: r154775", "tree": {"sha": "cd696f36bde52123ee764215456860ca41bdccff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd696f36bde52123ee764215456860ca41bdccff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "636e3cb6f9e28933f19599a16b663881f9e7669e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/636e3cb6f9e28933f19599a16b663881f9e7669e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/636e3cb6f9e28933f19599a16b663881f9e7669e"}], "stats": {"total": 84, "additions": 69, "deletions": 15}, "files": [{"sha": "defb342d07069fe9ac036a3952fd1a362b3999da", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "patch": "@@ -1,3 +1,18 @@\n+2009-11-30  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-dump.c (dump_option_value_in): Add TDF_NOUID.\n+\t* tree-pass.h (TDF_NOUID): Likewise.\n+\t* print-rtl.c: Include tree-pass.h.\n+\t(print_mem_expr): Pass dump_flags.\n+\t(print_rtx): Likewise.\n+\t* print-tree.c: Include tree-pass.h.\n+\t(print_node_brief): Handle TDF_NOUID.\n+\t(print_node): Likewise.\n+\t* tree-pretty-print.c (dump_decl_name): Likewise.\n+\t(dump_generic_node): Likewise.\n+\t* Makefile.in (print-rtl.o, print-tree.o): Add $(TREE_PASS_H)\n+\tdependency.\n+\n 2009-11-30  Nick Clifton  <nickc@redhat.com>\n \n \t* config/stormy16/stormy16-lib2-count-leading-zeros.c: Delete."}, {"sha": "ece9f74270254fb604aca8839e247fd11821e2d6", "filename": "gcc/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "patch": "@@ -2264,7 +2264,7 @@ tree-inline.o : tree-inline.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(IPA_PROP_H) value-prof.h $(TREE_PASS_H) $(TARGET_H) $(INTEGRATE_H)\n print-tree.o : print-tree.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TREE_H) \\\n    $(GGC_H) langhooks.h $(REAL_H) tree-iterator.h fixed-value.h \\\n-   $(DIAGNOSTIC_H) $(TREE_FLOW_H)\n+   $(DIAGNOSTIC_H) $(TREE_FLOW_H) $(TREE_PASS_H)\n stor-layout.o : stor-layout.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n    $(TREE_H) $(PARAMS_H) $(FLAGS_H) $(FUNCTION_H) $(EXPR_H) output.h $(RTL_H) \\\n    $(GGC_H) $(TM_P_H) $(TARGET_H) langhooks.h $(REGS_H) gt-stor-layout.h \\\n@@ -2744,7 +2744,7 @@ rtl.o : rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(RTL_H) \\\n \n print-rtl.o : print-rtl.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n     $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H) $(FLAGS_H) \\\n-    $(BCONFIG_H) $(REAL_H) $(DIAGNOSTIC_H) cselib.h\n+    $(BCONFIG_H) $(REAL_H) $(DIAGNOSTIC_H) cselib.h $(TREE_PASS_H)\n rtlanal.o : rtlanal.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) $(TOPLEV_H) \\\n    $(RTL_H) hard-reg-set.h $(TM_P_H) insn-config.h $(RECOG_H) $(REAL_H) \\\n    $(FLAGS_H) $(REGS_H) output.h $(TARGET_H) $(FUNCTION_H) $(TREE_H) \\"}, {"sha": "75f034376cb313afe89c01cdc949525d2774733b", "filename": "gcc/print-rtl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Fprint-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Fprint-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.c?ref=831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "patch": "@@ -42,6 +42,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"basic-block.h\"\n #include \"diagnostic.h\"\n #include \"cselib.h\"\n+#include \"tree-pass.h\"\n #endif\n \n static FILE *outfile;\n@@ -78,7 +79,7 @@ void\n print_mem_expr (FILE *outfile, const_tree expr)\n {\n   fputc (' ', outfile);\n-  print_generic_expr (outfile, CONST_CAST_TREE (expr), 0);\n+  print_generic_expr (outfile, CONST_CAST_TREE (expr), dump_flags);\n }\n #endif\n \n@@ -241,7 +242,7 @@ print_rtx (const_rtx in_rtx)\n \t  {\n \t    tree decl = SYMBOL_REF_DECL (in_rtx);\n \t    if (decl)\n-\t      print_node_brief (outfile, \"\", decl, 0);\n+\t      print_node_brief (outfile, \"\", decl, dump_flags);\n \t  }\n #endif\n \telse if (i == 4 && NOTE_P (in_rtx))"}, {"sha": "eebd1c35ba12e19d9bc5d0301f1c90839c27af85", "filename": "gcc/print-tree.c", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "patch": "@@ -32,6 +32,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-iterator.h\"\n #include \"diagnostic.h\"\n #include \"tree-flow.h\"\n+#include \"tree-pass.h\"\n \n /* Define the hash table of nodes already seen.\n    Such nodes are not repeated; brief cross-references are used.  */\n@@ -95,10 +96,22 @@ print_node_brief (FILE *file, const char *prefix, const_tree node, int indent)\n \tfprintf (file, \" %s\", IDENTIFIER_POINTER (DECL_NAME (node)));\n       else if (TREE_CODE (node) == LABEL_DECL\n \t       && LABEL_DECL_UID (node) != -1)\n-\tfprintf (file, \" L.%d\", (int) LABEL_DECL_UID (node));\n+\t{\n+\t  if (dump_flags & TDF_NOUID)\n+\t    fprintf (file, \" L.xxxx\");\n+\t  else\n+\t    fprintf (file, \" L.%d\", (int) LABEL_DECL_UID (node));\n+\t}\n       else\n-\tfprintf (file, \" %c.%u\", TREE_CODE (node) == CONST_DECL ? 'C' : 'D',\n-\t\t DECL_UID (node));\n+\t{\n+\t  if (dump_flags & TDF_NOUID)\n+\t    fprintf (file, \" %c.xxxx\",\n+\t\t     TREE_CODE (node) == CONST_DECL ? 'C' : 'D');\n+\t  else\n+\t    fprintf (file, \" %c.%u\",\n+\t\t     TREE_CODE (node) == CONST_DECL ? 'C' : 'D',\n+\t\t     DECL_UID (node));\n+\t}\n     }\n   else if (tclass == tcc_type)\n     {\n@@ -260,10 +273,20 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n \tfprintf (file, \" %s\", IDENTIFIER_POINTER (DECL_NAME (node)));\n       else if (code == LABEL_DECL\n \t       && LABEL_DECL_UID (node) != -1)\n-\tfprintf (file, \" L.%d\", (int) LABEL_DECL_UID (node));\n+\t{\n+\t  if (dump_flags & TDF_NOUID)\n+\t    fprintf (file, \" L.xxxx\");\n+\t  else\n+\t    fprintf (file, \" L.%d\", (int) LABEL_DECL_UID (node));\n+\t}\n       else\n-\tfprintf (file, \" %c.%u\", code == CONST_DECL ? 'C' : 'D',\n-\t\t DECL_UID (node));\n+\t{\n+\t  if (dump_flags & TDF_NOUID)\n+\t    fprintf (file, \" %c.xxxx\", code == CONST_DECL ? 'C' : 'D');\n+\t  else\n+\t    fprintf (file, \" %c.%u\", code == CONST_DECL ? 'C' : 'D',\n+\t\t     DECL_UID (node));\n+\t}\n     }\n   else if (tclass == tcc_type)\n     {"}, {"sha": "429f915bcc9870b2fa2daecf0a740d0ec1e880b5", "filename": "gcc/tree-dump.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Ftree-dump.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Ftree-dump.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dump.c?ref=831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "patch": "@@ -821,6 +821,7 @@ static const struct dump_option_value_info dump_options[] =\n   {\"memsyms\", TDF_MEMSYMS},\n   {\"verbose\", TDF_VERBOSE},\n   {\"eh\", TDF_EH},\n+  {\"nouid\", TDF_NOUID},\n   {\"all\", ~(TDF_RAW | TDF_SLIM | TDF_LINENO | TDF_TREE | TDF_RTL | TDF_IPA\n \t    | TDF_STMTADDR | TDF_GRAPH | TDF_DIAGNOSTIC | TDF_VERBOSE\n \t    | TDF_RHS_ONLY)},"}, {"sha": "473176c21c9bba3f48ca76782cafc8bb9635e1e1", "filename": "gcc/tree-pass.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Ftree-pass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Ftree-pass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pass.h?ref=831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "patch": "@@ -79,6 +79,7 @@ enum tree_dump_index\n #define TDF_EH\t\t(1 << 19)\t/* display EH region number\n \t\t\t\t\t   holding this gimple statement.  */\n \n+#define TDF_NOUID\t(1 << 20)\t/* omit UIDs from dumps.  */\n \n /* In tree-dump.c */\n "}, {"sha": "44d4a5d9c030dd356a95572715be278c6d732d16", "filename": "gcc/tree-pretty-print.c", "status": "modified", "additions": 18, "deletions": 5, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Ftree-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e/gcc%2Ftree-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-pretty-print.c?ref=831b9ef8f0c8f6a068aa34bcccac81f7405f8d1e", "patch": "@@ -182,13 +182,21 @@ dump_decl_name (pretty_printer *buffer, tree node, int flags)\n   if ((flags & TDF_UID) || DECL_NAME (node) == NULL_TREE)\n     {\n       if (TREE_CODE (node) == LABEL_DECL && LABEL_DECL_UID (node) != -1)\n-        pp_printf (buffer, \"L.%d\", (int) LABEL_DECL_UID (node));\n+\tpp_printf (buffer, \"L.%d\", (int) LABEL_DECL_UID (node));\n       else if (TREE_CODE (node) == DEBUG_EXPR_DECL)\n-\tpp_printf (buffer, \"D#%i\", DEBUG_TEMP_UID (node));\n+\t{\n+\t  if (flags & TDF_NOUID)\n+\t    pp_string (buffer, \"D#xxxx\");\n+\t  else\n+\t    pp_printf (buffer, \"D#%i\", DEBUG_TEMP_UID (node));\n+\t}\n       else\n \t{\n \t  char c = TREE_CODE (node) == CONST_DECL ? 'C' : 'D';\n-\t  pp_printf (buffer, \"%c.%u\", c, DECL_UID (node));\n+\t  if (flags & TDF_NOUID)\n+\t    pp_printf (buffer, \"%c.xxxx\", c);\n+\t  else\n+\t    pp_printf (buffer, \"%c.%u\", c, DECL_UID (node));\n \t}\n     }\n }\n@@ -1030,9 +1038,14 @@ dump_generic_node (pretty_printer *buffer, tree node, int spc, int flags,\n       if (DECL_NAME (node))\n \tdump_decl_name (buffer, node, flags);\n       else if (LABEL_DECL_UID (node) != -1)\n-        pp_printf (buffer, \"<L%d>\", (int) LABEL_DECL_UID (node));\n+\tpp_printf (buffer, \"<L%d>\", (int) LABEL_DECL_UID (node));\n       else\n-        pp_printf (buffer, \"<D.%u>\", DECL_UID (node));\n+\t{\n+\t  if (flags & TDF_NOUID)\n+\t    pp_string (buffer, \"<D.xxxx>\");\n+\t  else\n+\t    pp_printf (buffer, \"<D.%u>\", DECL_UID (node));\n+\t}\n       break;\n \n     case TYPE_DECL:"}]}