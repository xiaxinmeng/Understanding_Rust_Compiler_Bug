{"sha": "b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJjMWFhOGZlOTQ2M2ZjZmU1ZjE3NTAwMjNiZmY5MDkzZjViM2I0MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T10:48:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-01-13T10:48:57Z"}, "message": "[multiple changes]\n\n2017-01-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Array_Aggregate): The code that verifies\n\tthe legality of An others clause applies as well to a choice in\n\tan Iterated_component_ association.\n\t(Resolve_Iterated_Component_Association): An others choice\n\tis legal.\n\t* exp_aggr.adb (Aggr_Assignment_OK_For_Backend): An\n\tIterated_Component_Association is not static.\n\n2017-01-13  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch3.adb (Freeze_Type): Mark the Ghost mode as set in case\n\tcontrol is passed to the expresion handler before the new mode\n\tis set.\n\t* sem_ch12.adb (Analyze_Package_Instantiation,\n\tAnalyze_Subprogram_Instantiation): Mark the Ghost mode as set\n\tin case control is passed to the expresion handler before the\n\tnew mode is set.\n\nFrom-SVN: r244417", "tree": {"sha": "65dbeed6dcd57ea4cf8cb2974ae25f87a5691edd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/65dbeed6dcd57ea4cf8cb2974ae25f87a5691edd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/comments", "author": null, "committer": null, "parents": [{"sha": "72cdccfa16f98ad52e7a6e80a0838ba9c183f789", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72cdccfa16f98ad52e7a6e80a0838ba9c183f789", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72cdccfa16f98ad52e7a6e80a0838ba9c183f789"}], "stats": {"total": 83, "additions": 64, "deletions": 19}, "files": [{"sha": "92122528318293dc82ed3df22891d7abe864e551", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "patch": "@@ -1,3 +1,23 @@\n+2017-01-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Array_Aggregate): The code that verifies\n+\tthe legality of An others clause applies as well to a choice in\n+\tan Iterated_component_ association.\n+\t(Resolve_Iterated_Component_Association): An others choice\n+\tis legal.\n+\t* exp_aggr.adb (Aggr_Assignment_OK_For_Backend): An\n+\tIterated_Component_Association is not static.\n+\n+2017-01-13  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch3.adb (Freeze_Type): Mark the Ghost mode as set in case\n+\tcontrol is passed to the expresion handler before the new mode\n+\tis set.\n+\t* sem_ch12.adb (Analyze_Package_Instantiation,\n+\tAnalyze_Subprogram_Instantiation): Mark the Ghost mode as set\n+\tin case control is passed to the expresion handler before the\n+\tnew mode is set.\n+\n 2017-01-13  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_aggr.adb, sem_ch3.adb, inline.adb, sem_util.adb, exp_ch4.adb,"}, {"sha": "2b750bf807dad8036a52906f38e314638939bb8d", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "patch": "@@ -4272,7 +4272,7 @@ package body Exp_Aggr is\n       --  values, and can be passed as is to the back-end without further\n       --  expansion.\n       --  An Iterated_component_Association is treated as non-static, but there\n-      --  are posibilities for optimization here.\n+      --  are possibilities for optimization here.\n \n       function Flatten\n         (N   : Node_Id;\n@@ -4945,6 +4945,13 @@ package body Exp_Aggr is\n             end if;\n          end loop;\n \n+         --  An Iterated_Component_Association involves a loop (in most cases)\n+         --  and is never static.\n+\n+         if Nkind (Parent (Expr)) = N_Iterated_Component_Association then\n+            return False;\n+         end if;\n+\n          if not Is_Discrete_Type (Ctyp) then\n             return False;\n          end if;"}, {"sha": "5084714affb294fad629f67106cc1cbdef1cee9c", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "patch": "@@ -7106,8 +7106,10 @@ package body Exp_Ch3 is\n       --  Local variables\n \n       Def_Id : constant Entity_Id := Entity (N);\n-      Mode   : Ghost_Mode_Type;\n-      Result : Boolean := False;\n+\n+      Mode     : Ghost_Mode_Type;\n+      Mode_Set : Boolean := False;\n+      Result   : Boolean := False;\n \n    --  Start of processing for Freeze_Type\n \n@@ -7117,6 +7119,7 @@ package body Exp_Ch3 is\n       --  marked as Ghost.\n \n       Set_Ghost_Mode (Def_Id, Mode);\n+      Mode_Set := True;\n \n       --  Process any remote access-to-class-wide types designating the type\n       --  being frozen.\n@@ -7444,12 +7447,18 @@ package body Exp_Ch3 is\n          Build_Invariant_Procedure_Body (Def_Id);\n       end if;\n \n-      Restore_Ghost_Mode (Mode);\n+      if Mode_Set then\n+         Restore_Ghost_Mode (Mode);\n+      end if;\n+\n       return Result;\n \n    exception\n       when RE_Not_Available =>\n-         Restore_Ghost_Mode (Mode);\n+         if Mode_Set then\n+            Restore_Ghost_Mode (Mode);\n+         end if;\n+\n          return False;\n    end Freeze_Type;\n "}, {"sha": "92b9da6f303995de8ce4ab61a618ed394adbbbe1", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "patch": "@@ -1656,19 +1656,18 @@ package body Sem_Aggr is\n \n          while Present (Choice) loop\n             if Nkind (Choice) = N_Others_Choice then\n-               Error_Msg_N (\"others choice not allowed in this context\", N);\n                Others_Present := True;\n \n             else\n                Analyze_And_Resolve (Choice, Index_Typ);\n             end if;\n \n-            Nb_Choices := Nb_Choices + 1;\n             Next (Choice);\n          end loop;\n \n          --  Create a scope in which to introduce an index, which is usually\n-         --  visible in the expression for the component.\n+         --  visible in the expression for the component, and needed for its\n+         --  analysis.\n \n          Ent := New_Internal_Entity (E_Loop, Current_Scope, Loc, 'L');\n          Set_Etype  (Ent, Standard_Void_Type);\n@@ -1730,16 +1729,15 @@ package body Sem_Aggr is\n          while Present (Assoc) loop\n             if Nkind (Assoc) = N_Iterated_Component_Association then\n                Resolve_Iterated_Component_Association (Assoc, Index_Typ);\n-               goto Next_Assoc;\n             end if;\n \n-            Choice := First (Choices (Assoc));\n+            Choice := First (Choice_List (Assoc));\n             Delete_Choice := False;\n             while Present (Choice) loop\n                if Nkind (Choice) = N_Others_Choice then\n                   Others_Present := True;\n \n-                  if Choice /= First (Choices (Assoc))\n+                  if Choice /= First (Choice_List (Assoc))\n                     or else Present (Next (Choice))\n                   then\n                      Error_Msg_N\n@@ -1829,7 +1827,6 @@ package body Sem_Aggr is\n                end;\n             end loop;\n \n-            <<Next_Assoc>>\n             Next (Assoc);\n          end loop;\n       end if;"}, {"sha": "fadb831bb47624a37627527ac60886ef570c50d3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=b2c1aa8fe9463fcfe5f1750023bff9093f5b3b41", "patch": "@@ -3668,7 +3668,8 @@ package body Sem_Ch12 is\n \n       --  Local declarations\n \n-      Mode : Ghost_Mode_Type;\n+      Mode     : Ghost_Mode_Type;\n+      Mode_Set : Boolean := False;\n \n       Vis_Prims_List : Elist_Id := No_Elist;\n       --  List of primitives made temporarily visible in the instantiation\n@@ -3746,6 +3747,7 @@ package body Sem_Ch12 is\n       --  Ghost.\n \n       Mark_And_Set_Ghost_Instantiation (N, Gen_Unit, Mode);\n+      Mode_Set := True;\n \n       --  Verify that it is the name of a generic package\n \n@@ -4438,7 +4440,9 @@ package body Sem_Ch12 is\n          Analyze_Aspect_Specifications (N, Act_Decl_Id);\n       end if;\n \n-      Restore_Ghost_Mode (Mode);\n+      if Mode_Set then\n+         Restore_Ghost_Mode (Mode);\n+      end if;\n \n    exception\n       when Instantiation_Error =>\n@@ -4455,7 +4459,9 @@ package body Sem_Ch12 is\n          SPARK_Mode_Pragma        := Save_SMP;\n          Style_Check              := Save_Style_Check;\n \n-         Restore_Ghost_Mode (Mode);\n+         if Mode_Set then\n+            Restore_Ghost_Mode (Mode);\n+         end if;\n    end Analyze_Package_Instantiation;\n \n    --------------------------\n@@ -5093,15 +5099,16 @@ package body Sem_Ch12 is\n \n       --  Local variables\n \n-      Mode : Ghost_Mode_Type;\n-\n       Save_IPSM : constant Boolean := Ignore_Pragma_SPARK_Mode;\n       --  Save flag Ignore_Pragma_SPARK_Mode for restore on exit\n \n       Save_SM  : constant SPARK_Mode_Type := SPARK_Mode;\n       Save_SMP : constant Node_Id         := SPARK_Mode_Pragma;\n       --  Save the SPARK_Mode-related data for restore on exit\n \n+      Mode     : Ghost_Mode_Type;\n+      Mode_Set : Boolean := False;\n+\n       Vis_Prims_List : Elist_Id := No_Elist;\n       --  List of primitives made temporarily visible in the instantiation\n       --  to match the visibility of the formal type\n@@ -5143,6 +5150,7 @@ package body Sem_Ch12 is\n       --  Ghost.\n \n       Mark_And_Set_Ghost_Instantiation (N, Gen_Unit, Mode);\n+      Mode_Set := True;\n \n       Generate_Reference (Gen_Unit, Gen_Id);\n \n@@ -5404,7 +5412,9 @@ package body Sem_Ch12 is\n          Analyze_Aspect_Specifications (N, Act_Decl_Id);\n       end if;\n \n-      Restore_Ghost_Mode (Mode);\n+      if Mode_Set then\n+         Restore_Ghost_Mode (Mode);\n+      end if;\n \n    exception\n       when Instantiation_Error =>\n@@ -5420,7 +5430,9 @@ package body Sem_Ch12 is\n          SPARK_Mode               := Save_SM;\n          SPARK_Mode_Pragma        := Save_SMP;\n \n-         Restore_Ghost_Mode (Mode);\n+         if Mode_Set then\n+            Restore_Ghost_Mode (Mode);\n+         end if;\n    end Analyze_Subprogram_Instantiation;\n \n    -------------------------"}]}