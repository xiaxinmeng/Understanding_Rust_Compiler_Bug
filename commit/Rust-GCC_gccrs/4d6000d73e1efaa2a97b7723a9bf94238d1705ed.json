{"sha": "4d6000d73e1efaa2a97b7723a9bf94238d1705ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2MDAwZDczZTFlZmFhMmE5N2I3NzIzYTliZjk0MjM4ZDE3MDVlZA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-01-11T08:51:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-01-11T08:51:47Z"}, "message": "[Ada] Handling of pragma Predicate\n\nThis patch fixes an omission in the processing of pragma Predicate, which\nshould have the same semantics as the corresponding aspect, which is more\ncommonly used.\n\nExecuting\n   gnatmake -q -gnata predicate\n   predicate\n\nmust yield:\n\n   Even1 violated\n   Even2 violated\n\n----\nwith Text_IO; use Text_IO;\nprocedure Predicate is\nbegin\n   begin\n      declare\n         subtype Even1 is Integer;\n         pragma Predicate (Even1, Even1 mod 2 = 0);\n         X1 : constant Even1 := 1; --  This should fail first\n      begin\n         null;\n      end;\n   exception\n      when Others => Put_Line (\"Even1 violated\");\n   end;\n\n   begin\n      declare\n         subtype Even2 is Integer with Predicate => Even2 mod 2 = 0;\n         X2 : constant Even2 := 1; --  This should fail later, if reached\n      begin\n         null;\n      end;\n   exception\n      when Others => Put_Line (\"Even2 violated\");\n   end;\nend;\n\n2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Pragma, case Predicate): Indicate that the type\n\thas a delayed aspect which must be processed at the point the type is\n\tfrozen. This mimics what is done when the predicate is provided by a\n\tsource aspect.\n\nFrom-SVN: r256495", "tree": {"sha": "8402402b378eb51933e581b190f708bfa108a6bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8402402b378eb51933e581b190f708bfa108a6bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d6000d73e1efaa2a97b7723a9bf94238d1705ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6000d73e1efaa2a97b7723a9bf94238d1705ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6000d73e1efaa2a97b7723a9bf94238d1705ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6000d73e1efaa2a97b7723a9bf94238d1705ed/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19fb043958578d5802565162d90ccea952dd0504", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19fb043958578d5802565162d90ccea952dd0504", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19fb043958578d5802565162d90ccea952dd0504"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "a938ab2fbcc5f30e9339ff9929d874888ce66d31", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6000d73e1efaa2a97b7723a9bf94238d1705ed/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6000d73e1efaa2a97b7723a9bf94238d1705ed/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4d6000d73e1efaa2a97b7723a9bf94238d1705ed", "patch": "@@ -1,3 +1,10 @@\n+2018-01-11  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_prag.adb (Analyze_Pragma, case Predicate): Indicate that the type\n+\thas a delayed aspect which must be processed at the point the type is\n+\tfrozen. This mimics what is done when the predicate is provided by a\n+\tsource aspect.\n+\n 2018-01-11  Doug Rupp  <rupp@adacore.com>\n \n \t* init.c (vxworks): Add macro checks for __aarch64__."}, {"sha": "ba629baf963fc741d17f65706c96a6a1f7221a89", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6000d73e1efaa2a97b7723a9bf94238d1705ed/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6000d73e1efaa2a97b7723a9bf94238d1705ed/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=4d6000d73e1efaa2a97b7723a9bf94238d1705ed", "patch": "@@ -20244,6 +20244,13 @@ package body Sem_Prag is\n             --  general Assertion_Policy pragma) to preserve existing warnings.\n \n             Set_Has_Predicates (Typ);\n+\n+            --  Indicate that the pragma must be processed at the point the\n+            --  type is frozen, as is done for the corresponding aspect.\n+\n+            Set_Has_Delayed_Aspects (Typ);\n+            Set_Has_Delayed_Freeze (Typ);\n+\n             Set_Predicates_Ignored (Typ,\n               Present (Check_Policy_List)\n                 and then"}]}