{"sha": "fca51879ff3939a44588bd24e5e21af96feb01d6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNhNTE4NzlmZjM5MzlhNDQ1ODhiZDI0ZTVlMjFhZjk2ZmViMDFkNg==", "commit": {"author": {"name": "Julia Koval", "email": "julia.koval@intel.com", "date": "2017-11-16T06:07:00Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2017-11-16T06:07:00Z"}, "message": "Enable VBMI2 support [1/7]\n\ngcc/\n\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX512VBMI2_SET,\n\tOPTION_MASK_ISA_AVX512VBMI2_UNSET): New.\n\t(ix86_handle_option): Handle -mavx512vbmi2.\n\t* config/i386/cpuid.h: Add bit_AVX512VBMI2.\n\t* config/i386/driver-i386.c (host_detect_local_cpu): Handle new bit.\n\t* config/i386/i386-c.c (__AVX512VBMI2__): New.\n\t* config/i386/i386.c (ix86_target_string): Handle -mavx512vbmi2.\n\t(ix86_valid_target_attribute_inner_p): Ditto.\n\t* config/i386/i386.h (TARGET_AVX512VBMI2, TARGET_AVX512VBMI2_P): New.\n\t* config/i386/i386.opt (mavx512vbmi2): New option.\n\t* doc/invoke.texi: Add new option.\n\nFrom-SVN: r254796", "tree": {"sha": "9bc3831b14d730a7cbb738efd282a7a709105c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9bc3831b14d730a7cbb738efd282a7a709105c8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fca51879ff3939a44588bd24e5e21af96feb01d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca51879ff3939a44588bd24e5e21af96feb01d6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fca51879ff3939a44588bd24e5e21af96feb01d6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fca51879ff3939a44588bd24e5e21af96feb01d6/comments", "author": {"login": "vaalfreja", "id": 5216345, "node_id": "MDQ6VXNlcjUyMTYzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/5216345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vaalfreja", "html_url": "https://github.com/vaalfreja", "followers_url": "https://api.github.com/users/vaalfreja/followers", "following_url": "https://api.github.com/users/vaalfreja/following{/other_user}", "gists_url": "https://api.github.com/users/vaalfreja/gists{/gist_id}", "starred_url": "https://api.github.com/users/vaalfreja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vaalfreja/subscriptions", "organizations_url": "https://api.github.com/users/vaalfreja/orgs", "repos_url": "https://api.github.com/users/vaalfreja/repos", "events_url": "https://api.github.com/users/vaalfreja/events{/privacy}", "received_events_url": "https://api.github.com/users/vaalfreja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e0c31a15faa00230fdd91b7fce179a8a92119b12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0c31a15faa00230fdd91b7fce179a8a92119b12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0c31a15faa00230fdd91b7fce179a8a92119b12"}], "stats": {"total": 65, "additions": 58, "deletions": 7}, "files": [{"sha": "8a716afb006666cfe6d537577cac193985ad28b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -1,5 +1,19 @@\n 2017-11-16  Julia Koval  <julia.koval@intel.com>\n \n+\t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX512VBMI2_SET,\n+\tOPTION_MASK_ISA_AVX512VBMI2_UNSET): New.\n+\t(ix86_handle_option): Handle -mavx512vbmi2.\n+\t* config/i386/cpuid.h: Add bit_AVX512VBMI2.\n+\t* config/i386/driver-i386.c (host_detect_local_cpu): Handle new bit.\n+\t* config/i386/i386-c.c (__AVX512VBMI2__): New.\n+\t* config/i386/i386.c (ix86_target_string): Handle -mavx512vbmi2.\n+\t(ix86_valid_target_attribute_inner_p): Ditto.\n+\t* config/i386/i386.h (TARGET_AVX512VBMI2, TARGET_AVX512VBMI2_P): New.\n+\t* config/i386/i386.opt (mavx512vbmi2): New option.\n+\t* doc/invoke.texi: Add new option.\n+\n+[2017-11-16  Julia Koval  <julia.koval@intel.com>\n+\n \t* config/i386/gfniintrin.h (_mm_gf2p8mul_epi8, _mm256_gf2p8mul_epi8,\n \t_mm_mask_gf2p8mul_epi8, _mm_maskz_gf2p8mul_epi8,\n \t_mm256_mask_gf2p8mul_epi8, _mm256_maskz_gf2p8mul_epi8,"}, {"sha": "b7a0ff5feb8fcd80b4928ad57705fd61f4131044", "filename": "gcc/common/config/i386/i386-common.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fi386-common.c?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -80,6 +80,7 @@ along with GCC; see the file COPYING3.  If not see\n   (OPTION_MASK_ISA_AVX512VBMI | OPTION_MASK_ISA_AVX512BW_SET)\n #define OPTION_MASK_ISA_AVX5124FMAPS_SET OPTION_MASK_ISA_AVX5124FMAPS\n #define OPTION_MASK_ISA_AVX5124VNNIW_SET OPTION_MASK_ISA_AVX5124VNNIW\n+#define OPTION_MASK_ISA_AVX512VBMI2_SET OPTION_MASK_ISA_AVX512VBMI2\n #define OPTION_MASK_ISA_AVX512VPOPCNTDQ_SET OPTION_MASK_ISA_AVX512VPOPCNTDQ\n #define OPTION_MASK_ISA_RTM_SET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_SET OPTION_MASK_ISA_PRFCHW\n@@ -191,6 +192,7 @@ along with GCC; see the file COPYING3.  If not see\n #define OPTION_MASK_ISA_AVX512VBMI_UNSET OPTION_MASK_ISA_AVX512VBMI\n #define OPTION_MASK_ISA_AVX5124FMAPS_UNSET OPTION_MASK_ISA_AVX5124FMAPS\n #define OPTION_MASK_ISA_AVX5124VNNIW_UNSET OPTION_MASK_ISA_AVX5124VNNIW\n+#define OPTION_MASK_ISA_AVX512VBMI2_UNSET OPTION_MASK_ISA_AVX512VBMI2\n #define OPTION_MASK_ISA_AVX512VPOPCNTDQ_UNSET OPTION_MASK_ISA_AVX512VPOPCNTDQ\n #define OPTION_MASK_ISA_RTM_UNSET OPTION_MASK_ISA_RTM\n #define OPTION_MASK_ISA_PRFCHW_UNSET OPTION_MASK_ISA_PRFCHW\n@@ -565,6 +567,21 @@ ix86_handle_option (struct gcc_options *opts,\n \t}\n       return true;\n \n+    case OPT_mavx512vbmi2:\n+      if (value)\n+\t{\n+\t  opts->x_ix86_isa_flags2 |= OPTION_MASK_ISA_AVX512VBMI2_SET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512VBMI2_SET;\n+\t  opts->x_ix86_isa_flags |= OPTION_MASK_ISA_AVX512F_SET;\n+\t  opts->x_ix86_isa_flags_explicit |= OPTION_MASK_ISA_AVX512F_SET;\n+\t}\n+      else\n+\t{\n+\t  opts->x_ix86_isa_flags2 &= ~OPTION_MASK_ISA_AVX512VBMI2_UNSET;\n+\t  opts->x_ix86_isa_flags2_explicit |= OPTION_MASK_ISA_AVX512VBMI2_UNSET;\n+\t}\n+      return true;\n+\n     case OPT_mavx512vpopcntdq:\n       if (value)\n \t{"}, {"sha": "4fad5d2b6e1e701de5a2cf1464ac373c2d5f3335", "filename": "gcc/config/i386/cpuid.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fcpuid.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fcpuid.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcpuid.h?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -97,6 +97,7 @@\n #define bit_AVX512VBMI\t(1 << 1)\n #define bit_PKU\t(1 << 3)\n #define bit_OSPKE\t(1 << 4)\n+#define bit_AVX512VBMI2\t(1 << 6)\n #define bit_SHSTK\t(1 << 7)\n #define bit_GFNI\t(1 << 8)\n #define bit_AVX512VPOPCNTDQ\t(1 << 14)"}, {"sha": "8482eeba3d6ebdda91f419db08ca5d9264bdb35c", "filename": "gcc/config/i386/driver-i386.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fdriver-i386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdriver-i386.c?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -415,7 +415,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n   unsigned int has_avx512vbmi = 0, has_avx512ifma = 0, has_clwb = 0;\n   unsigned int has_mwaitx = 0, has_clzero = 0, has_pku = 0, has_rdpid = 0;\n   unsigned int has_avx5124fmaps = 0, has_avx5124vnniw = 0;\n-  unsigned int has_gfni = 0;\n+  unsigned int has_gfni = 0, has_avx512vbmi2 = 0;\n   unsigned int has_ibt = 0, has_shstk = 0;\n \n   bool arch;\n@@ -505,6 +505,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       has_prefetchwt1 = ecx & bit_PREFETCHWT1;\n       has_avx512vbmi = ecx & bit_AVX512VBMI;\n       has_pku = ecx & bit_OSPKE;\n+      has_avx512vbmi2 = ecx & bit_AVX512VBMI2;\n       has_rdpid = ecx & bit_RDPID;\n       has_gfni = ecx & bit_GFNI;\n \n@@ -1048,6 +1049,7 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n       const char *avx512ifma = has_avx512ifma ? \" -mavx512ifma\" : \" -mno-avx512ifma\";\n       const char *avx512vbmi = has_avx512vbmi ? \" -mavx512vbmi\" : \" -mno-avx512vbmi\";\n       const char *avx5124vnniw = has_avx5124vnniw ? \" -mavx5124vnniw\" : \" -mno-avx5124vnniw\";\n+      const char *avx512vbmi2 = has_avx512vbmi2 ? \" -mavx512vbmi2\" : \" -mno-avx512vbmi2\";\n       const char *avx5124fmaps = has_avx5124fmaps ? \" -mavx5124fmaps\" : \" -mno-avx5124fmaps\";\n       const char *clwb = has_clwb ? \" -mclwb\" : \" -mno-clwb\";\n       const char *mwaitx  = has_mwaitx  ? \" -mmwaitx\"  : \" -mno-mwaitx\"; \n@@ -1066,7 +1068,8 @@ const char *host_detect_local_cpu (int argc, const char **argv)\n \t\t\tavx512cd, avx512pf, prefetchwt1, clflushopt,\n \t\t\txsavec, xsaves, avx512dq, avx512bw, avx512vl,\n \t\t\tavx512ifma, avx512vbmi, avx5124fmaps, avx5124vnniw,\n-\t\t\tclwb, mwaitx, clzero, pku, rdpid, gfni, ibt, shstk, NULL);\n+\t\t\tclwb, mwaitx, clzero, pku, rdpid, gfni, ibt, shstk,\n+\t\t\tavx512vbmi2, NULL);\n     }\n \n done:"}, {"sha": "e812ce99b79e9552d9396df93499d6d982ebf848", "filename": "gcc/config/i386/i386-c.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fi386-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fi386-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-c.c?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -385,6 +385,8 @@ ix86_target_macros_internal (HOST_WIDE_INT isa_flag,\n     def_or_undef (parse_in, \"__AVX512IFMA__\");\n   if (isa_flag2 & OPTION_MASK_ISA_AVX5124VNNIW)\n     def_or_undef (parse_in, \"__AVX5124VNNIW__\");\n+  if (isa_flag2 & OPTION_MASK_ISA_AVX512VBMI2)\n+    def_or_undef (parse_in, \"__AVX512VBMI2__\");\n   if (isa_flag2 & OPTION_MASK_ISA_SGX)\n     def_or_undef (parse_in, \"__SGX__\");\n   if (isa_flag2 & OPTION_MASK_ISA_AVX5124FMAPS)"}, {"sha": "7d4cc61bf4ae0b9bd0a329a4ca73ebd07657b367", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -2744,6 +2744,7 @@ ix86_target_string (HOST_WIDE_INT isa, HOST_WIDE_INT isa2,\n   static struct ix86_target_opts isa2_opts[] =\n   {\n     { \"-mmpx\",\t\tOPTION_MASK_ISA_MPX },\n+    { \"-mavx512vbmi2\",\tOPTION_MASK_ISA_AVX512VBMI2 },\n     { \"-mrdpid\",\tOPTION_MASK_ISA_RDPID },\n     { \"-msgx\",\t\tOPTION_MASK_ISA_SGX },\n     { \"-mavx5124vnniw\", OPTION_MASK_ISA_AVX5124VNNIW },\n@@ -5243,6 +5244,7 @@ ix86_valid_target_attribute_inner_p (tree args, char *p_strings[],\n     IX86_ATTR_ISA (\"avx5124fmaps\", OPT_mavx5124fmaps),\n     IX86_ATTR_ISA (\"avx5124vnniw\", OPT_mavx5124vnniw),\n     IX86_ATTR_ISA (\"avx512vpopcntdq\", OPT_mavx512vpopcntdq),\n+    IX86_ATTR_ISA (\"avx512vbmi2\", OPT_mavx512vbmi2),\n \n     IX86_ATTR_ISA (\"avx512vbmi\", OPT_mavx512vbmi),\n     IX86_ATTR_ISA (\"avx512ifma\", OPT_mavx512ifma),"}, {"sha": "bc601c8e6f8739d026292fee1a16c0718f55d852", "filename": "gcc/config/i386/i386.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fi386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fi386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.h?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -85,6 +85,8 @@ see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n #define TARGET_AVX5124FMAPS_P(x) TARGET_ISA_AVX5124FMAPS_P(x)\n #define TARGET_AVX5124VNNIW\tTARGET_ISA_AVX5124VNNIW\n #define TARGET_AVX5124VNNIW_P(x) TARGET_ISA_AVX5124VNNIW_P(x)\n+#define TARGET_AVX512VBMI2\tTARGET_ISA_AVX512VBMI2\n+#define TARGET_AVX512VBMI2_P(x) TARGET_ISA_AVX512VBMI2_P(x)\n #define TARGET_AVX512VPOPCNTDQ\tTARGET_ISA_AVX512VPOPCNTDQ\n #define TARGET_AVX512VPOPCNTDQ_P(x) TARGET_ISA_AVX512VPOPCNTDQ_P(x)\n #define TARGET_FMA\tTARGET_ISA_FMA"}, {"sha": "0fb46989ef5cd56a54d36de407a6fbd5b5ce1f3e", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -717,6 +717,10 @@ mavx512vpopcntdq\n Target Report Mask(ISA_AVX512VPOPCNTDQ) Var(ix86_isa_flags2) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512VPOPCNTDQ built-in functions and code generation.\n \n+mavx512vbmi2\n+Target Report Mask(ISA_AVX512VBMI2) Var(ix86_isa_flags2) Save\n+Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX, AVX2, AVX512F and AVX512VBMI2 built-in functions and code generation.\n+\n mfma\n Target Report Mask(ISA_FMA) Var(ix86_isa_flags) Save\n Support MMX, SSE, SSE2, SSE3, SSSE3, SSE4.1, SSE4.2, AVX and FMA built-in functions and code generation."}, {"sha": "85c980bdfc9cfaf74d81313913be0f3f112fc769", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fca51879ff3939a44588bd24e5e21af96feb01d6/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=fca51879ff3939a44588bd24e5e21af96feb01d6", "patch": "@@ -1204,8 +1204,8 @@ See RS/6000 and PowerPC Options.\n -mprefetchwt1  -mclflushopt  -mxsavec  -mxsaves @gol\n -msse4a  -m3dnow  -m3dnowa  -mpopcnt  -mabm  -mbmi  -mtbm  -mfma4  -mxop @gol\n -mlzcnt  -mbmi2  -mfxsr  -mxsave  -mxsaveopt  -mrtm  -mlwp  -mmpx  @gol\n--mmwaitx  -mclzero  -mpku  -mthreads @gol\n--mcet -mibt -mshstk -mforce-indirect-call @gol\n+-mmwaitx  -mclzero  -mpku  -mthreads -mgfni @gol\n+-mcet -mibt -mshstk -mforce-indirect-call -mavx512vbmi2 @gol\n -mms-bitfields  -mno-align-stringops  -minline-all-stringops @gol\n -minline-stringops-dynamically  -mstringop-strategy=@var{alg} @gol\n -mmemcpy-strategy=@var{strategy}  -mmemset-strategy=@var{strategy} @gol\n@@ -26012,12 +26012,18 @@ preferred alignment to @option{-mpreferred-stack-boundary=2}.\n @need 200\n @itemx -mcet\n @opindex mcet\n+@need 200\n+@itemx -mavx512vbmi2\n+@opindex mavx512vbmi2\n+@need 200\n+@itemx -mgfni\n+@opindex mgfni\n These switches enable the use of instructions in the MMX, SSE,\n SSE2, SSE3, SSSE3, SSE4.1, AVX, AVX2, AVX512F, AVX512PF, AVX512ER, AVX512CD,\n SHA, AES, PCLMUL, FSGSBASE, RDRND, F16C, FMA, SSE4A, FMA4, XOP, LWP, ABM,\n-AVX512VL, AVX512BW, AVX512DQ, AVX512IFMA AVX512VBMI, BMI, BMI2, FXSR,\n-XSAVE, XSAVEOPT, LZCNT, RTM, MPX, MWAITX, PKU, IBT, SHSTK,\n-3DNow!@: or enhanced 3DNow!@: extended instruction sets.  Each has a\n+AVX512VL, AVX512BW, AVX512DQ, AVX512IFMA, AVX512VBMI, BMI, BMI2,\n+FXSR, XSAVE, XSAVEOPT, LZCNT, RTM, MPX, MWAITX, PKU, IBT, SHSTK, AVX512VBMI2,\n+GFNI, 3DNow!@: or enhanced 3DNow!@: extended instruction sets.  Each has a\n corresponding @option{-mno-} option to disable use of these instructions.\n \n These extensions are also available as built-in functions: see"}]}