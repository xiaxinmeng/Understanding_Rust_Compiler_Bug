{"sha": "f9da1f35792bae30bf9ba032211a973aef3c437f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjlkYTFmMzU3OTJiYWUzMGJmOWJhMDMyMjExYTk3M2FlZjNjNDM3Zg==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-01-10T18:15:49Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1996-01-10T18:15:49Z"}, "message": "varasm.c (variable_section): New function.\n\n\t* varasm.c (variable_section): New function.\n\t(assemble_variable): Call it.\n\nFrom-SVN: r10960", "tree": {"sha": "190d88dbdc65c5c61a9aebbccac8f07786443ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/190d88dbdc65c5c61a9aebbccac8f07786443ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9da1f35792bae30bf9ba032211a973aef3c437f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9da1f35792bae30bf9ba032211a973aef3c437f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9da1f35792bae30bf9ba032211a973aef3c437f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9da1f35792bae30bf9ba032211a973aef3c437f/comments", "author": null, "committer": null, "parents": [{"sha": "2995277ce3a92dd625d484e5f95f0f869c1d75f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2995277ce3a92dd625d484e5f95f0f869c1d75f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2995277ce3a92dd625d484e5f95f0f869c1d75f0"}], "stats": {"total": 100, "additions": 41, "deletions": 59}, "files": [{"sha": "cad3fc400d3604b76d712f7d3dc795a7d91622c5", "filename": "gcc/varasm.c", "status": "modified", "additions": 41, "deletions": 59, "changes": 100, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9da1f35792bae30bf9ba032211a973aef3c437f/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9da1f35792bae30bf9ba032211a973aef3c437f/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=f9da1f35792bae30bf9ba032211a973aef3c437f", "patch": "@@ -278,6 +278,43 @@ function_section (decl)\n   else\n     text_section ();\n }\n+\n+/* Switch to section for variable DECL.\n+\n+   RELOC is the `reloc' argument to SELECT_SECTION.  */\n+\n+void\n+variable_section (decl, reloc)\n+     tree decl;\n+     int reloc;\n+{\n+  if (IN_NAMED_SECTION (decl))\n+    named_section (decl, NULL);\n+  else\n+    {\n+      /* C++ can have const variables that get initialized from constructors,\n+\t and thus can not be in a readonly section.  We prevent this by\n+\t verifying that the initial value is constant for objects put in a\n+\t readonly section.\n+\n+\t error_mark_node is used by the C front end to indicate that the\n+\t initializer has not been seen yet.  In this case, we assume that\n+\t the initializer must be constant.  */\n+#ifdef SELECT_SECTION\n+      SELECT_SECTION (decl, reloc);\n+#else\n+      if (TREE_READONLY (decl)\n+\t  && ! TREE_THIS_VOLATILE (decl)\n+\t  && DECL_INITIAL (decl)\n+\t  && (DECL_INITIAL (decl) == error_mark_node\n+\t      || TREE_CONSTANT (DECL_INITIAL (decl)))\n+\t  && ! (flag_pic && reloc))\n+\treadonly_data_section ();\n+      else\n+\tdata_section ();\n+#endif\n+    }\n+}\n \f\n /* Create the rtl to represent a function, for a function definition.\n    DECL is a FUNCTION_DECL node which describes which function.\n@@ -1217,33 +1254,8 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n   else if (DECL_INITIAL (decl))\n     reloc = output_addressed_constants (DECL_INITIAL (decl));\n \n-  /* Switch to the proper section for this data.  */\n-  if (IN_NAMED_SECTION (decl))\n-    named_section (decl, NULL);\n-  else\n-    {\n-      /* C++ can have const variables that get initialized from constructors,\n-\t and thus can not be in a readonly section.  We prevent this by\n-\t verifying that the initial value is constant for objects put in a\n-\t readonly section.\n-\n-\t error_mark_node is used by the C front end to indicate that the\n-\t initializer has not been seen yet.  In this case, we assume that\n-\t the initializer must be constant.  */\n-#ifdef SELECT_SECTION\n-      SELECT_SECTION (decl, reloc);\n-#else\n-      if (TREE_READONLY (decl)\n-\t  && ! TREE_THIS_VOLATILE (decl)\n-\t  && DECL_INITIAL (decl)\n-\t  && (DECL_INITIAL (decl) == error_mark_node\n-\t      || TREE_CONSTANT (DECL_INITIAL (decl)))\n-\t  && ! (flag_pic && reloc))\n-\treadonly_data_section ();\n-      else\n-\tdata_section ();\n-#endif\n-    }\n+  /* Switch to the appropriate section.  */\n+  variable_section (decl, reloc);\n \n   /* dbxout.c needs to know this.  */\n   if (in_text_section ())\n@@ -1278,22 +1290,7 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n   /* If the debugging output changed sections, reselect the section\n      that's supposed to be selected.  */\n   if (in_section != saved_in_section)\n-    {\n-      /* Switch to the proper section for this data.  */\n-#ifdef SELECT_SECTION\n-      SELECT_SECTION (decl, reloc);\n-#else\n-      if (TREE_READONLY (decl)\n-\t  && ! TREE_THIS_VOLATILE (decl)\n-\t  && DECL_INITIAL (decl)\n-\t  && (DECL_INITIAL (decl) == error_mark_node\n-\t      || TREE_CONSTANT (DECL_INITIAL (decl)))\n-\t  && ! (flag_pic && reloc))\n-\treadonly_data_section ();\n-      else\n-\tdata_section ();\n-#endif\n-    }\n+    variable_section (decl, reloc);\n \n   /* Compute and output the alignment of this data.  */\n \n@@ -1375,22 +1372,7 @@ assemble_variable (decl, top_level, at_end, dont_output_data)\n       dbxout_symbol (decl, 0);\n \n       if (in_section != saved_in_section)\n-\t{\n-\t  /* Switch to the proper section for this data.  */\n-#ifdef SELECT_SECTION\n-\t  SELECT_SECTION (decl, reloc);\n-#else\n-\t  if (TREE_READONLY (decl)\n-\t      && ! TREE_THIS_VOLATILE (decl)\n-\t      && DECL_INITIAL (decl)\n-\t      && (DECL_INITIAL (decl) == error_mark_node\n-\t\t  || TREE_CONSTANT (DECL_INITIAL (decl)))\n-\t      && ! (flag_pic && reloc))\n-\t    readonly_data_section ();\n-\t  else\n-\t    data_section ();\n-#endif\n-\t}\n+\tvariable_section (decl, reloc);\n     }\n #else\n   /* There must be a statement after a label.  */"}]}