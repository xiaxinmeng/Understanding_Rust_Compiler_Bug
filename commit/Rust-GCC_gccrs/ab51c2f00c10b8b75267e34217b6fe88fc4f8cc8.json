{"sha": "ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI1MWMyZjAwYzEwYjhiNzUyNjdlMzQyMTdiNmZlODhmYzRmOGNjOA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-10-18T21:16:53Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-10-18T21:16:53Z"}, "message": "tree-cfg.c (cleanup_tree_cfg): Don't iterate on thread_jumps.\n\n\t* tree-cfg.c (cleanup_tree_cfg): Don't iterate on\n\tthread_jumps.\n\t(thread_jumps): Iterate until no new forwarder block arises.\n\nFrom-SVN: r89244", "tree": {"sha": "8bc3600a944edf4e5b58f2132c8e0f61bdc72961", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bc3600a944edf4e5b58f2132c8e0f61bdc72961"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8/comments", "author": null, "committer": null, "parents": [{"sha": "78b6731db8690985eba76af2c9b8741bfc85654c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/78b6731db8690985eba76af2c9b8741bfc85654c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/78b6731db8690985eba76af2c9b8741bfc85654c"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "fb1fe2f10e8bf749f64f93c5b166968085c277eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8", "patch": "@@ -1,3 +1,9 @@\n+2004-10-18  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-cfg.c (cleanup_tree_cfg): Don't iterate on\n+\tthread_jumps.\n+\t(thread_jumps): Iterate until no new forwarder block arises.\n+\n 2004-10-18  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* tree-cfg.c (tree_forwarder_block_p): Don't set forwardable."}, {"sha": "012ad706af75fa3235db0cf9b552db48e8d8fa34", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=ab51c2f00c10b8b75267e34217b6fe88fc4f8cc8", "patch": "@@ -718,18 +718,14 @@ cleanup_tree_cfg (void)\n \n   retval = cleanup_control_flow ();\n   retval |= delete_unreachable_blocks ();\n-\n-  /* thread_jumps sometimes leaves further transformation\n-     opportunities for itself, so iterate on it until nothing\n-     changes.  */\n-  while (thread_jumps ())\n-    retval = true;\n+  retval |= thread_jumps ();\n \n #ifdef ENABLE_CHECKING\n   if (retval)\n     {\n       gcc_assert (!cleanup_control_flow ());\n       gcc_assert (!delete_unreachable_blocks ());\n+      gcc_assert (!thread_jumps ());\n     }\n #endif\n \n@@ -3780,10 +3776,13 @@ thread_jumps (void)\n     tree phi;\n   int arg;\n   bool retval = false;\n+  bool rerun;\n \n   FOR_EACH_BB (bb)\n     bb_ann (bb)->forwardable = tree_forwarder_block_p (bb);\n \n+ restart:\n+  rerun = false;\n   FOR_EACH_BB (bb)\n     {\n       edge_iterator ei;\n@@ -3945,8 +3944,10 @@ thread_jumps (void)\n \t two arms eventually merge without any intervening\n \t statements.  */\n       if (this_jump_threaded && tree_forwarder_block_p (bb))\n-\tbb_ann (bb)->forwardable = true;\n+\tbb_ann (bb)->forwardable = rerun = true;\n     }\n+  if (rerun)\n+    goto restart;\n \n   return retval;\n }"}]}