{"sha": "5ca189994ef1475c2ee92ec5425ec5fb884871cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNhMTg5OTk0ZWYxNDc1YzJlZTkyZWM1NDI1ZWM1ZmI4ODQ4NzFjZg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2005-01-14T15:54:59Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2005-01-14T15:54:59Z"}, "message": "rs6000.c (rs6000_generate_compare): Replace flag_finite_math_only with flag_unsafe_math_optimizations.\n\n\t* config/rs6000/rs6000.c (rs6000_generate_compare): Replace\n\tflag_finite_math_only with flag_unsafe_math_optimizations.\n\n[[Split portion of a mixed commit.]]\n\nFrom-SVN: r93646.2", "tree": {"sha": "a2aadd46839445bc5791dee780c080c0db5b42f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a2aadd46839445bc5791dee780c080c0db5b42f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ca189994ef1475c2ee92ec5425ec5fb884871cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca189994ef1475c2ee92ec5425ec5fb884871cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca189994ef1475c2ee92ec5425ec5fb884871cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca189994ef1475c2ee92ec5425ec5fb884871cf/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "03eef11cd3f26627f6c515c1b98d18cf0346cfba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/03eef11cd3f26627f6c515c1b98d18cf0346cfba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/03eef11cd3f26627f6c515c1b98d18cf0346cfba"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "ff8610ce9f802ff749a302e5cada04f58c035ef9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ca189994ef1475c2ee92ec5425ec5fb884871cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ca189994ef1475c2ee92ec5425ec5fb884871cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ca189994ef1475c2ee92ec5425ec5fb884871cf", "patch": "@@ -1,3 +1,8 @@\n+2005-01-14  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* config/rs6000/rs6000.c (rs6000_generate_compare): Replace\n+\tflag_finite_math_only with flag_unsafe_math_optimizations.\n+\n 2005-01-14  J. D. Johnston  <jjohnst@us.ibm.com>\n \n \t* config/s390/tpf-unwind.h (s390_fallback_frame_state): Correct"}, {"sha": "b3c3534186a110452fa69aa427744ebbe5413aaf", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ca189994ef1475c2ee92ec5425ec5fb884871cf/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ca189994ef1475c2ee92ec5425ec5fb884871cf/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=5ca189994ef1475c2ee92ec5425ec5fb884871cf", "patch": "@@ -11302,13 +11302,13 @@ rs6000_generate_compare (enum rtx_code code)\n \t{\n \tcase EQ: case UNEQ: case NE: case LTGT:\n \t  if (op_mode == SFmode)\n-\t    cmp = flag_finite_math_only\n+\t    cmp = flag_unsafe_math_optimizations\n \t      ? gen_tstsfeq_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1)\n \t      : gen_cmpsfeq_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1);\n \t  else if (op_mode == DFmode)\n-\t    cmp = flag_finite_math_only\n+\t    cmp = flag_unsafe_math_optimizations\n \t      ? gen_tstdfeq_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1)\n \t      : gen_cmpdfeq_gpr (compare_result, rs6000_compare_op0,\n@@ -11317,13 +11317,13 @@ rs6000_generate_compare (enum rtx_code code)\n \t  break;\n \tcase GT: case GTU: case UNGT: case UNGE: case GE: case GEU:\n \t  if (op_mode == SFmode)\n-\t    cmp = flag_finite_math_only\n+\t    cmp = flag_unsafe_math_optimizations\n \t      ? gen_tstsfgt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1)\n \t      : gen_cmpsfgt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1);\n \t  else if (op_mode == DFmode)\n-\t    cmp = flag_finite_math_only\n+\t    cmp = flag_unsafe_math_optimizations\n \t      ? gen_tstdfgt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1)\n \t      : gen_cmpdfgt_gpr (compare_result, rs6000_compare_op0,\n@@ -11332,13 +11332,13 @@ rs6000_generate_compare (enum rtx_code code)\n \t  break;\n \tcase LT: case LTU: case UNLT: case UNLE: case LE: case LEU:\n \t  if (op_mode == SFmode)\n-\t    cmp = flag_finite_math_only\n+\t    cmp = flag_unsafe_math_optimizations\n \t      ? gen_tstsflt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1)\n \t      : gen_cmpsflt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1);\n \t  else if (op_mode == DFmode)\n-\t    cmp = flag_finite_math_only\n+\t    cmp = flag_unsafe_math_optimizations\n \t      ? gen_tstdflt_gpr (compare_result, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1)\n \t      : gen_cmpdflt_gpr (compare_result, rs6000_compare_op0,\n@@ -11370,13 +11370,13 @@ rs6000_generate_compare (enum rtx_code code)\n \n \t  /* Do the EQ.  */\n \t  if (op_mode == SFmode)\n-\t    cmp = flag_finite_math_only\n+\t    cmp = flag_unsafe_math_optimizations\n \t      ? gen_tstsfeq_gpr (compare_result2, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1)\n \t      : gen_cmpsfeq_gpr (compare_result2, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1);\n \t  else if (op_mode == DFmode)\n-\t    cmp = flag_finite_math_only\n+\t    cmp = flag_unsafe_math_optimizations\n \t      ? gen_tstdfeq_gpr (compare_result2, rs6000_compare_op0,\n \t\t\t\t rs6000_compare_op1)\n \t      : gen_cmpdfeq_gpr (compare_result2, rs6000_compare_op0,\n@@ -11412,9 +11412,9 @@ rs6000_generate_compare (enum rtx_code code)\n \t\t\t\t\t     rs6000_compare_op1)));\n \n   /* Some kinds of FP comparisons need an OR operation;\n-     under flag_finite_math_only we don't bother.  */\n+     under flag_unsafe_math_optimizations we don't bother.  */\n   if (rs6000_compare_fp_p\n-      && ! flag_finite_math_only\n+      && ! flag_unsafe_math_optimizations\n       && ! (TARGET_HARD_FLOAT && TARGET_E500 && !TARGET_FPRS)\n       && (code == LE || code == GE\n \t  || code == UNEQ || code == LTGT"}]}