{"sha": "d50ecb8388162b8485619c4817f3f24fc0da3357", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDUwZWNiODM4ODE2MmI4NDg1NjE5YzQ4MTdmM2YyNGZjMGRhMzM1Nw==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-02-10T16:42:58Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2020-02-10T16:42:58Z"}, "message": "gcc.target/cris/dbr-1.c: New test.\n\nRandom spotting.  Exposes the missed benefit for delay-slot\nfilling of a splitter for indexed addressing mode (the [rN+M]\none).  To be considered for common instructions and perhaps only\nfor suitable M; at least +-63 is obvious (when there's a register\navailable) as both the original and the add fit in delay-slots.", "tree": {"sha": "7dd16cc4944c36c5160bb622576dfed539169ec4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7dd16cc4944c36c5160bb622576dfed539169ec4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d50ecb8388162b8485619c4817f3f24fc0da3357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d50ecb8388162b8485619c4817f3f24fc0da3357", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d50ecb8388162b8485619c4817f3f24fc0da3357", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d50ecb8388162b8485619c4817f3f24fc0da3357/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7573521f46427d36a203f72794af7188ce04de88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7573521f46427d36a203f72794af7188ce04de88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7573521f46427d36a203f72794af7188ce04de88"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "f81fd129db992eb8d113005aa9bbba65dece21c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d50ecb8388162b8485619c4817f3f24fc0da3357/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d50ecb8388162b8485619c4817f3f24fc0da3357/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d50ecb8388162b8485619c4817f3f24fc0da3357", "patch": "@@ -3,10 +3,9 @@\n \t* gcc.target/cris/cris.exp (check_effective_target_cc0): New.\n \n \tPR target/93372\n-\t* gcc.target/cris/pr93372-1.c: New test.\n-\t* gcc.target/cris/pr93372-2.c, gcc.target/cris/pr93372-5.c,\n-\tgcc.target/cris/pr93372-8.c: New tests.\n-\t* gcc.target/cris/pr93372-3.c, gcc.target/cris/pr93372-4.c,\n+\t* gcc.target/cris/pr93372-1.c, gcc.target/cris/pr93372-2.c,\n+\tgcc.target/cris/pr93372-5.c, gcc.target/cris/pr93372-8.c,\n+\tgcc.target/cris/pr93372-3.c, gcc.target/cris/pr93372-4.c,\n \tgcc.target/cris/pr93372-6.c, gcc.target/cris/pr93372-7.c,\n \tgcc.target/cris/pr93372-9.c, gcc.target/cris/pr93372-10.c,\n \tgcc.target/cris/pr93372-11.c, gcc.target/cris/pr93372-12.c,\n@@ -21,7 +20,7 @@\n \tgcc.target/cris/pr93372-29.c, gcc.target/cris/pr93372-30.c,\n \tgcc.target/cris/pr93372-31.c, gcc.target/cris/pr93372-32.c,\n \tgcc.target/cris/pr93372-33.c, gcc.target/cris/pr93372-34.c,\n-\tgcc.target/cris/pr93372-35.c: New tests.\n+\tgcc.target/cris/pr93372-35.c, gcc.target/cris/dbr-1.c: New tests.\n \n 2020-02-10  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "9f79a76277d00d942b9c804d5688a12ab4639489", "filename": "gcc/testsuite/gcc.target/cris/dbr-1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d50ecb8388162b8485619c4817f3f24fc0da3357/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fdbr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d50ecb8388162b8485619c4817f3f24fc0da3357/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fdbr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fcris%2Fdbr-1.c?ref=d50ecb8388162b8485619c4817f3f24fc0da3357", "patch": "@@ -0,0 +1,11 @@\n+/* Check that delayed-branch-slot is able to fill a trivially fillable\n+   slot.  The xfail is due to the \"move.d [$r10+4],$r10\" not being split\n+   up into \"addq 4,$r10\" and \"move.d [$r10],$r10\"; both slottable and of\n+   the same actual cost in size and cycles as the unsplit insn.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-final { scan-assembler-not \"\\tnop\" { xfail *-*-* } } } */\n+void *f(void **p)\n+{\n+  return p[1];\n+}"}]}