{"sha": "b47fd7f49ee743b8fe60781fd411e4d39b063e20", "node_id": "C_kwDOANBUbNoAKGI0N2ZkN2Y0OWVlNzQzYjhmZTYwNzgxZmQ0MTFlNGQzOWIwNjNlMjA", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-09-27T23:25:52Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-10-01T16:02:54Z"}, "message": "Update c-c++-common/tsan/atomic_stack.c\n\nPrint out from __tsan_atomic32_fetch_add was removed by\n\ncommit da7a5c09c86c3f639c63ce8843d6f21c915ae1c6\nAuthor: Dmitry Vyukov <dvyukov@google.com>\nDate:   Wed Jul 28 16:57:39 2021 +0200\n\n    tsan: don't print __tsan_atomic* functions in report stacks\n\n    Currently __tsan_atomic* functions do FuncEntry/Exit using caller PC\n    and then use current PC (pointing to __tsan_atomic* itself) during\n    memory access handling. As the result the top function in reports\n    involving atomics is __tsan_atomic* and the next frame points to user code.\n\n    Remove FuncEntry/Exit in atomic functions and use caller PC\n    during memory access handling. This removes __tsan_atomic*\n    from the top of report stacks, so that they point right to user code.\n\n    The motivation for this is performance.\n    Some atomic operations are very hot (mostly loads),\n    so removing FuncEntry/Exit is beneficial.\n    This also reduces thread trace consumption (1 event instead of 3).\n\n    __tsan_atomic* at the top of the stack is not necessary\n    and does not add any new information. We already say\n    \"atomic write of size 4\", \"__tsan_atomic32_store\" does not add\n    anything new.\n\n    It also makes reports consistent between atomic and non-atomic\n    accesses. For normal accesses we say \"previous write\" and point\n    to user code; for atomics we say \"previous atomic write\" and now\n    also point to user code.\n\n    Reviewed By: vitalybuka\n\n    Differential Revision: https://reviews.llvm.org/D106966\n\n\t* c-c++-common/tsan/atomic_stack.c: Don't expect print out from\n\t__tsan_atomic32_fetch_add.", "tree": {"sha": "1c6dcf73bd021aba37edf9904368d9525aabafcf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c6dcf73bd021aba37edf9904368d9525aabafcf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b47fd7f49ee743b8fe60781fd411e4d39b063e20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47fd7f49ee743b8fe60781fd411e4d39b063e20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b47fd7f49ee743b8fe60781fd411e4d39b063e20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b47fd7f49ee743b8fe60781fd411e4d39b063e20/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984400f04ebece71be188278c3224f49d3a381a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/984400f04ebece71be188278c3224f49d3a381a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/984400f04ebece71be188278c3224f49d3a381a9"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "09ac7c722450d2a391ba4e8f031547c8aedafb14", "filename": "gcc/testsuite/c-c++-common/tsan/atomic_stack.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b47fd7f49ee743b8fe60781fd411e4d39b063e20/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fatomic_stack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b47fd7f49ee743b8fe60781fd411e4d39b063e20/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fatomic_stack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ftsan%2Fatomic_stack.c?ref=b47fd7f49ee743b8fe60781fd411e4d39b063e20", "patch": "@@ -31,5 +31,4 @@ int main() {\n \n /* { dg-output \"WARNING: ThreadSanitizer: data race.*(\\n|\\r\\n|\\r)\" } */\n /* { dg-output \"  Atomic write of size 4.*\" } */\n-/* { dg-output \"    #0 __tsan_atomic32_fetch_add.*\" } */\n-/* { dg-output \"    #1 Thread1.*\" } */\n+/* { dg-output \"    #0 Thread1.*\" } */"}]}