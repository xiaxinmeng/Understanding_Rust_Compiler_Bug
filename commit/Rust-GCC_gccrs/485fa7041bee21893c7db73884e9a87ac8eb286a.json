{"sha": "485fa7041bee21893c7db73884e9a87ac8eb286a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg1ZmE3MDQxYmVlMjE4OTNjN2RiNzM4ODRlOWE4N2FjOGViMjg2YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-05-14T10:35:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-05-14T10:35:06Z"}, "message": "match-and-simplify.texi: Adjust :s documentation.\n\n2018-05-14  Richard Biener  <rguenther@suse.de>\n\n\t* doc/match-and-simplify.texi: Adjust :s documentation.\n\nFrom-SVN: r260223", "tree": {"sha": "cbf92621d9af4f7620384e19da6da2f7efe2a7ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cbf92621d9af4f7620384e19da6da2f7efe2a7ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/485fa7041bee21893c7db73884e9a87ac8eb286a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/485fa7041bee21893c7db73884e9a87ac8eb286a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/485fa7041bee21893c7db73884e9a87ac8eb286a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/485fa7041bee21893c7db73884e9a87ac8eb286a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c86ed2f12bccff7558c1032e22bc603e73941547", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86ed2f12bccff7558c1032e22bc603e73941547", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c86ed2f12bccff7558c1032e22bc603e73941547"}], "stats": {"total": 16, "additions": 15, "deletions": 1}, "files": [{"sha": "c8bb4c7b3dd42c21ff99ae68cd42d74225291720", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/485fa7041bee21893c7db73884e9a87ac8eb286a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/485fa7041bee21893c7db73884e9a87ac8eb286a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=485fa7041bee21893c7db73884e9a87ac8eb286a", "patch": "@@ -1,3 +1,7 @@\n+2018-05-14  Richard Biener  <rguenther@suse.de>\n+\n+\t* doc/match-and-simplify.texi: Adjust :s documentation.\n+\n 2018-05-14  Alexander Monakov  <amonakov@ispras.ru>\n \n \t* sort.cc (REORDER_23): Pass the type for the temporaries instead of"}, {"sha": "024d747cafdb5478dbad2a3e86d40dad58029b71", "filename": "gcc/doc/match-and-simplify.texi", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/485fa7041bee21893c7db73884e9a87ac8eb286a/gcc%2Fdoc%2Fmatch-and-simplify.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/485fa7041bee21893c7db73884e9a87ac8eb286a/gcc%2Fdoc%2Fmatch-and-simplify.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fmatch-and-simplify.texi?ref=485fa7041bee21893c7db73884e9a87ac8eb286a", "patch": "@@ -250,7 +250,9 @@ come second in commutative expressions.\n \n The second supported flag is @code{s} which tells the code\n generator to fail the pattern if the expression marked with\n-@code{s} does have more than one use.  For example in\n+@code{s} does have more than one use and the simplification\n+results in an expression with more than one operator.\n+For example in\n \n @smallexample\n (simplify\n@@ -261,6 +263,14 @@ generator to fail the pattern if the expression marked with\n this avoids the association if @code{(pointer_plus @@0 @@1)} is\n used outside of the matched expression and thus it would stay\n live and not trivially removed by dead code elimination.\n+Now consider @code{((x + 3) + -3)} with the temporary\n+holding @code{(x + 3)} used elsewhere.  This simplifies down\n+to @code{x} which is desirable and thus flagging with @code{s}\n+does not prevent the transform.  Now consider @code{((x + 3) + 1)}\n+which simplifies to @code{(x + 4)}.  Despite being flagged with\n+@code{s} the simplification will be performed.  The\n+simplification of @code{((x + a) + 1)} to @code{(x + (a + 1))} will\n+not performed in this case though.\n \n More features exist to avoid too much repetition.\n "}]}