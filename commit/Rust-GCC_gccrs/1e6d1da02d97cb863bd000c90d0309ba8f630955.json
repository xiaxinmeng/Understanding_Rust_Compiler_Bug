{"sha": "1e6d1da02d97cb863bd000c90d0309ba8f630955", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2ZDFkYTAyZDk3Y2I4NjNiZDAwMGM5MGQwMzA5YmE4ZjYzMDk1NQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-04-11T21:54:59Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2011-04-11T21:54:59Z"}, "message": "cfghooks.c (redirect_edge_and_branch_force): Localize variable.\n\n\t* cfghooks.c (redirect_edge_and_branch_force): Localize variable.\n\t(force_nonfallthru): Do not alter the loop nest if no basic block\n\twas created.\n\nFrom-SVN: r172281", "tree": {"sha": "9f9cb58db1a8bade729a25b50f4547753e25bf92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f9cb58db1a8bade729a25b50f4547753e25bf92"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e6d1da02d97cb863bd000c90d0309ba8f630955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6d1da02d97cb863bd000c90d0309ba8f630955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e6d1da02d97cb863bd000c90d0309ba8f630955", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e6d1da02d97cb863bd000c90d0309ba8f630955/comments", "author": null, "committer": null, "parents": [{"sha": "d8700b1cdb121c1a15229fc5ff854959820c1707", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8700b1cdb121c1a15229fc5ff854959820c1707", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8700b1cdb121c1a15229fc5ff854959820c1707"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "127b189504cf41ef4001d7dbff979778e7c755f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6d1da02d97cb863bd000c90d0309ba8f630955/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6d1da02d97cb863bd000c90d0309ba8f630955/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e6d1da02d97cb863bd000c90d0309ba8f630955", "patch": "@@ -1,4 +1,10 @@\n-2011-04-12  Uros Bizjak  <ubizjak@gmail.com>\n+2011-04-11  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cfghooks.c (redirect_edge_and_branch_force): Localize variable.\n+\t(force_nonfallthru): Do not alter the loop nest if no basic block\n+\twas created.\n+\n+2011-04-11  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/sse.md (VI): New mode iterator.\n \t(SSEMODEI): Remove."}, {"sha": "c4c51cc44042cf4258d9fbbe23c1aa8218578164", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e6d1da02d97cb863bd000c90d0309ba8f630955/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e6d1da02d97cb863bd000c90d0309ba8f630955/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=1e6d1da02d97cb863bd000c90d0309ba8f630955", "patch": "@@ -388,7 +388,6 @@ basic_block\n redirect_edge_and_branch_force (edge e, basic_block dest)\n {\n   basic_block ret, src = e->src;\n-  struct loop *loop;\n \n   if (!cfg_hooks->redirect_edge_and_branch_force)\n     internal_error (\"%s does not support redirect_edge_and_branch_force\",\n@@ -398,15 +397,17 @@ redirect_edge_and_branch_force (edge e, basic_block dest)\n     rescan_loop_exit (e, false, true);\n \n   ret = cfg_hooks->redirect_edge_and_branch_force (e, dest);\n+\n   if (ret != NULL && dom_info_available_p (CDI_DOMINATORS))\n     set_immediate_dominator (CDI_DOMINATORS, ret, src);\n \n   if (current_loops != NULL)\n     {\n       if (ret != NULL)\n \t{\n-\t  loop = find_common_loop (single_pred (ret)->loop_father,\n-\t\t\t\t   single_succ (ret)->loop_father);\n+\t  struct loop *loop\n+\t    = find_common_loop (single_pred (ret)->loop_father,\n+\t\t\t\tsingle_succ (ret)->loop_father);\n \t  add_bb_to_loop (ret, loop);\n \t}\n       else if (find_edge (src, dest) == e)\n@@ -882,30 +883,26 @@ tidy_fallthru_edges (void)\n basic_block\n force_nonfallthru (edge e)\n {\n-  basic_block ret, src = e->src, dest = e->dest;\n-  struct loop *loop;\n+  basic_block ret, src = e->src;\n \n   if (!cfg_hooks->force_nonfallthru)\n     internal_error (\"%s does not support force_nonfallthru\",\n \t\t    cfg_hooks->name);\n \n-  if (current_loops != NULL)\n-    rescan_loop_exit (e, false, true);\n-\n   ret = cfg_hooks->force_nonfallthru (e);\n-  if (ret != NULL && dom_info_available_p (CDI_DOMINATORS))\n-    set_immediate_dominator (CDI_DOMINATORS, ret, src);\n-\n-  if (current_loops != NULL)\n+  if (ret != NULL)\n     {\n-      if (ret != NULL)\n+      if (dom_info_available_p (CDI_DOMINATORS))\n+\tset_immediate_dominator (CDI_DOMINATORS, ret, src);\n+\n+      if (current_loops != NULL)\n \t{\n-\t  loop = find_common_loop (single_pred (ret)->loop_father,\n-\t\t\t\t   single_succ (ret)->loop_father);\n+\t  struct loop *loop\n+\t    = find_common_loop (single_pred (ret)->loop_father,\n+\t\t\t\tsingle_succ (ret)->loop_father);\n+\t  rescan_loop_exit (e, false, true);\n \t  add_bb_to_loop (ret, loop);\n \t}\n-      else if (find_edge (src, dest) == e)\n-\trescan_loop_exit (e, true, false);\n     }\n \n   return ret;"}]}