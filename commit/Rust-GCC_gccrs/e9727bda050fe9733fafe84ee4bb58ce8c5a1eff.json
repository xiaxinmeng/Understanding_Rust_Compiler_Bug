{"sha": "e9727bda050fe9733fafe84ee4bb58ce8c5a1eff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk3MjdiZGEwNTBmZTk3MzNmYWZlODRlZTRiYjU4Y2U4YzVhMWVmZg==", "commit": {"author": {"name": "Aaron Sawdey", "email": "acsawdey@linux.ibm.com", "date": "2018-06-22T15:36:31Z"}, "committer": {"name": "Aaron Sawdey", "email": "acsawdey@gcc.gnu.org", "date": "2018-06-22T15:36:31Z"}, "message": "rs6000-string.c (expand_strn_compare): Handle -m32 correctly.\n\n2018-06-22  Aaron Sawdey  <acsawdey@linux.ibm.com>\n\n\t* config/rs6000/rs6000-string.c (expand_strn_compare): Handle -m32\n\tcorrectly.\n\nFrom-SVN: r261905", "tree": {"sha": "87d414c807313df0da506a4d17cf5fa0402023e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87d414c807313df0da506a4d17cf5fa0402023e2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9727bda050fe9733fafe84ee4bb58ce8c5a1eff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9727bda050fe9733fafe84ee4bb58ce8c5a1eff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9727bda050fe9733fafe84ee4bb58ce8c5a1eff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9727bda050fe9733fafe84ee4bb58ce8c5a1eff/comments", "author": {"login": "acsawdey", "id": 41373646, "node_id": "MDQ6VXNlcjQxMzczNjQ2", "avatar_url": "https://avatars.githubusercontent.com/u/41373646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acsawdey", "html_url": "https://github.com/acsawdey", "followers_url": "https://api.github.com/users/acsawdey/followers", "following_url": "https://api.github.com/users/acsawdey/following{/other_user}", "gists_url": "https://api.github.com/users/acsawdey/gists{/gist_id}", "starred_url": "https://api.github.com/users/acsawdey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acsawdey/subscriptions", "organizations_url": "https://api.github.com/users/acsawdey/orgs", "repos_url": "https://api.github.com/users/acsawdey/repos", "events_url": "https://api.github.com/users/acsawdey/events{/privacy}", "received_events_url": "https://api.github.com/users/acsawdey/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "84ee432143874a776a5597f77615db3f39cb7c58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/84ee432143874a776a5597f77615db3f39cb7c58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/84ee432143874a776a5597f77615db3f39cb7c58"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "30dbbbdbd179595a0c88808b41219574e25400c9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9727bda050fe9733fafe84ee4bb58ce8c5a1eff/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9727bda050fe9733fafe84ee4bb58ce8c5a1eff/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e9727bda050fe9733fafe84ee4bb58ce8c5a1eff", "patch": "@@ -1,3 +1,8 @@\n+2018-06-22  Aaron Sawdey  <acsawdey@linux.ibm.com>\n+\n+\t* config/rs6000/rs6000-string.c (expand_strn_compare): Handle -m32\n+\tcorrectly.\n+\n 2018-06-22  Martin Liska  <mliska@suse.cz>\n \n         PR tree-optimization/86263"}, {"sha": "7e49568a1ed9ea375078d7141733ecc74585f28a", "filename": "gcc/config/rs6000/rs6000-string.c", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9727bda050fe9733fafe84ee4bb58ce8c5a1eff/gcc%2Fconfig%2Frs6000%2Frs6000-string.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9727bda050fe9733fafe84ee4bb58ce8c5a1eff/gcc%2Fconfig%2Frs6000%2Frs6000-string.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-string.c?ref=e9727bda050fe9733fafe84ee4bb58ce8c5a1eff", "patch": "@@ -1925,20 +1925,15 @@ expand_strn_compare (rtx operands[], int no_length)\n \t  /* -m32 -mpowerpc64 results in word_mode being DImode even\n \t     though otherwise it is 32-bit. The length arg to strncmp\n \t     is a size_t which will be the same size as pointers.  */\n-\t  rtx len_rtx;\n-\t  if (TARGET_64BIT)\n-\t    len_rtx = gen_reg_rtx (DImode);\n-\t  else\n-\t    len_rtx = gen_reg_rtx (SImode);\n-\n-\t  emit_move_insn (len_rtx, bytes_rtx);\n+\t  rtx len_rtx = gen_reg_rtx (Pmode);\n+\t  emit_move_insn (len_rtx, gen_int_mode (bytes, Pmode));\n \n \t  tree fun = builtin_decl_explicit (BUILT_IN_STRNCMP);\n \t  emit_library_call_value (XEXP (DECL_RTL (fun), 0),\n \t\t\t\t   target, LCT_NORMAL, GET_MODE (target),\n \t\t\t\t   force_reg (Pmode, src1_addr), Pmode,\n \t\t\t\t   force_reg (Pmode, src2_addr), Pmode,\n-\t\t\t\t   len_rtx, GET_MODE (len_rtx));\n+\t\t\t\t   len_rtx, Pmode);\n \t}\n \n       rtx fin_ref = gen_rtx_LABEL_REF (VOIDmode, final_label);\n@@ -2126,18 +2121,12 @@ expand_strn_compare (rtx operands[], int no_length)\n \t}\n       else\n \t{\n-\t  rtx len_rtx;\n-\t  if (TARGET_64BIT)\n-\t    len_rtx = gen_reg_rtx (DImode);\n-\t  else\n-\t    len_rtx = gen_reg_rtx (SImode);\n-\n-\t  emit_move_insn (len_rtx, GEN_INT (bytes - compare_length));\n+\t  rtx len_rtx = gen_reg_rtx (Pmode);\n+\t  emit_move_insn (len_rtx, gen_int_mode (bytes - compare_length, Pmode));\n \t  tree fun = builtin_decl_explicit (BUILT_IN_STRNCMP);\n \t  emit_library_call_value (XEXP (DECL_RTL (fun), 0),\n \t\t\t\t   target, LCT_NORMAL, GET_MODE (target),\n-\t\t\t\t   src1, Pmode, src2, Pmode,\n-\t\t\t\t   len_rtx, GET_MODE (len_rtx));\n+\t\t\t\t   src1, Pmode, src2, Pmode, len_rtx, Pmode);\n \t}\n \n       rtx fin_ref = gen_rtx_LABEL_REF (VOIDmode, final_label);"}]}