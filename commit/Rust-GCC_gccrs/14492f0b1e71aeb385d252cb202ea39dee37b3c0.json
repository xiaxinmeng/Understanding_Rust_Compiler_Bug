{"sha": "14492f0b1e71aeb385d252cb202ea39dee37b3c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ0OTJmMGIxZTcxYWViMzg1ZDI1MmNiMjAyZWEzOWRlZTM3YjNjMA==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-11-18T09:52:57Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-11-18T09:52:57Z"}, "message": "DR 434.\n\n2004-11-18  Paolo Carlini  <pcarlini@suse.de>\n\n\tDR 434. bitset::to_string() hard to use [Ready]\n\t* include/std/std_bitset.h (to_string): Add three overloads, taking\n\tfewer template arguments.\n\t* docs/html/ext/howto.html: Add an entry for DR 434.\n\t* testsuite/23_containers/bitset/to_string/1.cc: New.\n\nFrom-SVN: r90854", "tree": {"sha": "8cac65a439ff7872f3f8a7273405ac98c604c6f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8cac65a439ff7872f3f8a7273405ac98c604c6f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/14492f0b1e71aeb385d252cb202ea39dee37b3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14492f0b1e71aeb385d252cb202ea39dee37b3c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14492f0b1e71aeb385d252cb202ea39dee37b3c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14492f0b1e71aeb385d252cb202ea39dee37b3c0/comments", "author": null, "committer": null, "parents": [{"sha": "410d3bbaa212a55cf614e74580e4213675291ce8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/410d3bbaa212a55cf614e74580e4213675291ce8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/410d3bbaa212a55cf614e74580e4213675291ce8"}], "stats": {"total": 89, "additions": 83, "deletions": 6}, "files": [{"sha": "370044a268a621473ff8edf07d04fa80c56c17ed", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14492f0b1e71aeb385d252cb202ea39dee37b3c0/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14492f0b1e71aeb385d252cb202ea39dee37b3c0/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=14492f0b1e71aeb385d252cb202ea39dee37b3c0", "patch": "@@ -1,3 +1,11 @@\n+2004-11-18  Paolo Carlini  <pcarlini@suse.de>\n+\n+\tDR 434. bitset::to_string() hard to use [Ready]\n+\t* include/std/std_bitset.h (to_string): Add three overloads, taking\n+\tfewer template arguments.\n+\t* docs/html/ext/howto.html: Add an entry for DR 434.\n+\t* testsuite/23_containers/bitset/to_string/1.cc: New.\n+\n 2004-11-17  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/istream.tcc (getline(basic_istream<>&, basic_string<>&,"}, {"sha": "194bc5d37c924ed0ea64e568c803d83b5ca98d20", "filename": "libstdc++-v3/docs/html/ext/howto.html", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14492f0b1e71aeb385d252cb202ea39dee37b3c0/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14492f0b1e71aeb385d252cb202ea39dee37b3c0/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fext%2Fhowto.html?ref=14492f0b1e71aeb385d252cb202ea39dee37b3c0", "patch": "@@ -497,6 +497,12 @@ <h2><a name=\"5\">LWG Issues</a></h2>\n     <dd>Replace &quot;new&quot; with &quot;::new&quot;.\n     </dd>\n \n+    <dt><a href=\"lwg-active.html#434\">434</a>:\n+        <em>bitset::to_string() hard to use</em>\n+    </dt>\n+    <dd>Add three overloads, taking fewer template arguments.\n+    </dd>\n+\n     <dt><a href=\"lwg-active.html#453\">453</a>:\n         <em>basic_stringbuf::seekoff need not always fail for an empty stream</em>\n     </dt>"}, {"sha": "fa17a61cec3911ae11da9fe786f7d6f1554a82af", "filename": "libstdc++-v3/include/std/std_bitset.h", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14492f0b1e71aeb385d252cb202ea39dee37b3c0/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14492f0b1e71aeb385d252cb202ea39dee37b3c0/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_bitset.h?ref=14492f0b1e71aeb385d252cb202ea39dee37b3c0", "patch": "@@ -1013,12 +1013,6 @@ namespace _GLIBCXX_STD\n        *  Note the ordering of the bits:  decreasing character positions\n        *  correspond to increasing bit positions (see the main class notes for\n        *  an example).\n-       *\n-       *  Also note that you must specify the string's template parameters\n-       *  explicitly.  Given a bitset @c bs and a string @s:\n-       *  @code\n-       *     s = bs.to_string<char,char_traits<char>,allocator<char> >();\n-       *  @endcode\n        */\n       template<class _CharT, class _Traits, class _Alloc>\n \tbasic_string<_CharT, _Traits, _Alloc>\n@@ -1029,6 +1023,22 @@ namespace _GLIBCXX_STD\n \t  return __result;\n \t}\n \n+      // _GLIBCXX_RESOLVE_LIB_DEFECTS\n+      // 434. bitset::to_string() hard to use.\n+      template<class _CharT, class _Traits>\n+\tbasic_string<_CharT, _Traits, allocator<_CharT> >\n+\tto_string() const\n+\t{ return to_string<_CharT, _Traits, allocator<_CharT> >(); }\n+\n+      template<class _CharT>\n+\tbasic_string<_CharT, char_traits<_CharT>, allocator<_CharT> >\n+\tto_string() const\n+\t{ return to_string<_CharT, char_traits<_CharT>, allocator<_CharT> >(); }\n+\n+      basic_string<char, char_traits<char>, allocator<char> >\n+      to_string() const\n+      { return to_string<char, char_traits<char>, allocator<char> >(); }\n+\n       // Helper functions for string operations.\n       template<class _CharT, class _Traits, class _Alloc>\n \tvoid"}, {"sha": "8a7551246805bc47d113c2c9edcebf0f677534e8", "filename": "libstdc++-v3/testsuite/23_containers/bitset/to_string/1.cc", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/14492f0b1e71aeb385d252cb202ea39dee37b3c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/14492f0b1e71aeb385d252cb202ea39dee37b3c0/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fbitset%2Fto_string%2F1.cc?ref=14492f0b1e71aeb385d252cb202ea39dee37b3c0", "patch": "@@ -0,0 +1,53 @@\n+// 2004-11-17  Paolo Carlini  <pcarlini@suse.de>\n+\n+// Copyright (C) 2004 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 23.3.5.2 bitset members\n+\n+#include <bitset>\n+#include <testsuite_hooks.h>\n+\n+void test01()\n+{\n+  using namespace std;\n+  bool test __attribute__((unused)) = true;\n+\n+  bitset<5> b5;\n+  string s0 = b5.to_string<char, char_traits<char>, allocator<char> >();\n+  VERIFY( s0 == \"00000\" );\n+\n+  // DR 434. bitset::to_string() hard to use.\n+  b5.set(0);\n+  string s1 = b5.to_string<char, char_traits<char> >();\n+  VERIFY( s1 == \"00001\" );\n+\n+  b5.set(2);\n+  string s2 = b5.to_string<char>();\n+  VERIFY( s2 == \"00101\" );\n+\n+  b5.set(4);\n+  string s3 = b5.to_string();\n+  VERIFY( s3 == \"10101\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}