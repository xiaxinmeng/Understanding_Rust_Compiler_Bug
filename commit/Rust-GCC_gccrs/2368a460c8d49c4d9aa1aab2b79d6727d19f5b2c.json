{"sha": "2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM2OGE0NjBjOGQ0OWM0ZDlhYTFhYWIyYjc5ZDY3MjdkMTlmNWIyYw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-06-20T02:18:07Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-06-20T02:18:07Z"}, "message": "re PR c++/36523 (OpenMP task construct fails to instantiate copy constructor)\n\n\tPR c++/36523\n\t* cgraphunit.c (cgraph_process_new_functions): Don't clear\n\tnode->needed and node->reachable.\n\t* cgraphbuild.c (record_reference): Handle OMP_PARALLEL and OMP_TASK.\n\t* omp-low.c (delete_omp_context): Call finalize_task_copyfn.\n\t(expand_task_call): Don't call expand_task_copyfn.\n\t(expand_task_copyfn): Renamed to...\n\t(finalize_task_copyfn): ... this.\n\n\t* testsuite/libgomp.c++/task-7.C: New function.\n\nFrom-SVN: r136977", "tree": {"sha": "f28feb4e7a51182a0bf7d4ca97a21a4def2af406", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f28feb4e7a51182a0bf7d4ca97a21a4def2af406"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c598874b4bc7d816b81b8f839f75029122e4fe92", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c598874b4bc7d816b81b8f839f75029122e4fe92", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c598874b4bc7d816b81b8f839f75029122e4fe92"}], "stats": {"total": 117, "additions": 84, "deletions": 33}, "files": [{"sha": "74a81618ce2c91d796a4426e71bdfe872112c5ab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "patch": "@@ -1,3 +1,14 @@\n+2008-06-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/36523\n+\t* cgraphunit.c (cgraph_process_new_functions): Don't clear\n+\tnode->needed and node->reachable.\n+\t* cgraphbuild.c (record_reference): Handle OMP_PARALLEL and OMP_TASK.\n+\t* omp-low.c (delete_omp_context): Call finalize_task_copyfn.\n+\t(expand_task_call): Don't call expand_task_copyfn.\n+\t(expand_task_copyfn): Renamed to...\n+\t(finalize_task_copyfn): ... this.\n+\n 2008-06-19  Jan Hubicka  <jh@suse.cz>\n \n \t* builtins.c (expand_builtin_nonlocal_goto): Stabilize r_sp before"}, {"sha": "19e198344b66402fd41a7ef209db24f6653d32d6", "filename": "gcc/cgraphbuild.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/gcc%2Fcgraphbuild.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/gcc%2Fcgraphbuild.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphbuild.c?ref=2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "patch": "@@ -62,6 +62,24 @@ record_reference (tree *tp, int *walk_subtrees, void *data ATTRIBUTE_UNUSED)\n \t}\n       break;\n \n+    case OMP_PARALLEL:\n+      if (flag_unit_at_a_time)\n+\t{\n+\t  if (OMP_PARALLEL_FN (*tp))\n+\t    cgraph_mark_needed_node (cgraph_node (OMP_PARALLEL_FN (*tp)));\n+\t}\n+      break;\n+\n+    case OMP_TASK:\n+      if (flag_unit_at_a_time)\n+\t{\n+\t  if (OMP_TASK_FN (*tp))\n+\t    cgraph_mark_needed_node (cgraph_node (OMP_TASK_FN (*tp)));\n+\t  if (OMP_TASK_COPYFN (*tp))\n+\t    cgraph_mark_needed_node (cgraph_node (OMP_TASK_COPYFN (*tp)));\n+\t}\n+      break;\n+\n     default:\n       /* Save some cycles by not walking types and declaration as we\n \t won't find anything useful there anyway.  */"}, {"sha": "2dcccc1bd93144c814f4253fdb48e32dfcbb7169", "filename": "gcc/cgraphunit.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/gcc%2Fcgraphunit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/gcc%2Fcgraphunit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.c?ref=2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "patch": "@@ -443,7 +443,6 @@ cgraph_process_new_functions (void)\n \t     it into reachable functions list.  */\n \n \t  node->next_needed = NULL;\n-\t  node->needed = node->reachable = false;\n \t  cgraph_finalize_function (fndecl, false);\n \t  cgraph_mark_reachable_node (node);\n \t  output = true;"}, {"sha": "db5f8584405c6f89f8cf8a9525e7270575905d1b", "filename": "gcc/omp-low.c", "status": "modified", "additions": 34, "deletions": 32, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "patch": "@@ -1188,6 +1188,37 @@ new_omp_context (tree stmt, omp_context *outer_ctx)\n   return ctx;\n }\n \n+static void maybe_catch_exception (tree *stmt_p);\n+\n+/* Finalize task copyfn.  */\n+\n+static void\n+finalize_task_copyfn (tree task_stmt)\n+{\n+  struct function *child_cfun;\n+  tree child_fn, old_fn;\n+\n+  child_fn = OMP_TASK_COPYFN (task_stmt);\n+  if (child_fn == NULL_TREE)\n+    return;\n+\n+  child_cfun = DECL_STRUCT_FUNCTION (child_fn);\n+\n+  /* Inform the callgraph about the new function.  */\n+  DECL_STRUCT_FUNCTION (child_fn)->curr_properties\n+    = cfun->curr_properties;\n+\n+  old_fn = current_function_decl;\n+  push_cfun (child_cfun);\n+  current_function_decl = child_fn;\n+  gimplify_body (&DECL_SAVED_TREE (child_fn), child_fn, false);\n+  maybe_catch_exception (&BIND_EXPR_BODY (DECL_SAVED_TREE (child_fn)));\n+  pop_cfun ();\n+  current_function_decl = old_fn;\n+\n+  cgraph_add_new_function (child_fn, false);\n+}\n+\n /* Destroy a omp_context data structures.  Called through the splay tree\n    value delete callback.  */\n \n@@ -1218,6 +1249,9 @@ delete_omp_context (splay_tree_value value)\n \tDECL_ABSTRACT_ORIGIN (t) = NULL;\n     }\n \n+  if (is_task_ctx (ctx))\n+    finalize_task_copyfn (ctx->stmt);\n+\n   XDELETE (ctx);\n }\n \n@@ -2882,35 +2916,6 @@ expand_parallel_call (struct omp_region *region, basic_block bb,\n }\n \n \n-static void maybe_catch_exception (tree *stmt_p);\n-\n-\n-/* Finalize task copyfn.  */\n-\n-static void\n-expand_task_copyfn (tree task_stmt)\n-{\n-  struct function *child_cfun;\n-  tree child_fn, old_fn;\n-\n-  child_fn = OMP_TASK_COPYFN (task_stmt);\n-  child_cfun = DECL_STRUCT_FUNCTION (child_fn);\n-\n-  /* Inform the callgraph about the new function.  */\n-  DECL_STRUCT_FUNCTION (child_fn)->curr_properties\n-    = cfun->curr_properties;\n-\n-  old_fn = current_function_decl;\n-  push_cfun (child_cfun);\n-  current_function_decl = child_fn;\n-  gimplify_body (&DECL_SAVED_TREE (child_fn), child_fn, false);\n-  maybe_catch_exception (&BIND_EXPR_BODY (DECL_SAVED_TREE (child_fn)));\n-  pop_cfun ();\n-  current_function_decl = old_fn;\n-\n-  cgraph_add_new_function (child_fn, false);\n-}\n-\n /* Build the function call to GOMP_task to actually\n    generate the task operation.  BB is the block where to insert the code.  */\n \n@@ -2922,9 +2927,6 @@ expand_task_call (basic_block bb, tree entry_stmt)\n \n   clauses = OMP_TASK_CLAUSES (entry_stmt);\n \n-  if (OMP_TASK_COPYFN (entry_stmt))\n-    expand_task_copyfn (entry_stmt);\n-\n   c = find_omp_clause (clauses, OMP_CLAUSE_IF);\n   if (c)\n     cond = gimple_boolify (OMP_CLAUSE_IF_EXPR (c));"}, {"sha": "ed27454354eab84596b9456dc6af99a330a4bf70", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "patch": "@@ -2,6 +2,9 @@\n \n \t* testsuite/libgomp.c/nqueens-1.c: New test.\n \n+\tPR c++/36523\n+\t* testsuite/libgomp.c++/task-7.C: New function.\n+\n 2008-06-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure: Regenerate."}, {"sha": "e9828cd2c4d3798bcda9edff908b69daded0b9cf", "filename": "libgomp/testsuite/libgomp.c++/task-7.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftask-7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftask-7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Ftask-7.C?ref=2368a460c8d49c4d9aa1aab2b79d6727d19f5b2c", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/36523\n+// { dg-do run }\n+\n+template<typename T>\n+struct A\n+{\n+  A() { }\n+  A(const A&) { }\n+  void foo() { }\n+};\n+\n+int main()\n+{\n+  A<int> a;\n+  #pragma omp task firstprivate (a)\n+    a.foo();\n+  return 0;\n+}"}]}