{"sha": "e05a9da8f93fd0298d26a88ab163848c872fd049", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA1YTlkYThmOTNmZDAyOThkMjZhODhhYjE2Mzg0OGM4NzJmZDA0OQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-02T14:01:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-02T14:01:55Z"}, "message": "(push_reload): Allow non-paradoxical SUBREGs of MEM\non machines that extend byte loads.\n\nFrom-SVN: r4305", "tree": {"sha": "8ede9b9f8f3dba9ff05b692626cf0f30ee18196e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8ede9b9f8f3dba9ff05b692626cf0f30ee18196e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e05a9da8f93fd0298d26a88ab163848c872fd049", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05a9da8f93fd0298d26a88ab163848c872fd049", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e05a9da8f93fd0298d26a88ab163848c872fd049", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e05a9da8f93fd0298d26a88ab163848c872fd049/comments", "author": null, "committer": null, "parents": [{"sha": "a3b75c072c06a26573736ab8a4cfa08e2b1614fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3b75c072c06a26573736ab8a4cfa08e2b1614fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3b75c072c06a26573736ab8a4cfa08e2b1614fd"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "944b9a24c07b859b8a55fa4538779a4ae35f66c8", "filename": "gcc/reload.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e05a9da8f93fd0298d26a88ab163848c872fd049/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e05a9da8f93fd0298d26a88ab163848c872fd049/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=e05a9da8f93fd0298d26a88ab163848c872fd049", "patch": "@@ -657,11 +657,13 @@ push_reload (in, out, inloc, outloc, class,\n       in_subreg_loc = inloc;\n       inloc = &SUBREG_REG (in);\n       in = *inloc;\n+#if ! defined(BYTE_LOADS_ZERO_EXTEND) && ! defined(BYTE_LOADS_SIGN_EXTEND)\n       if (GET_CODE (in) == MEM)\n \t/* This is supposed to happen only for paradoxical subregs made by\n \t   combine.c.  (SUBREG (MEM)) isn't supposed to occur other ways.  */\n \tif (GET_MODE_SIZE (GET_MODE (in)) > GET_MODE_SIZE (inmode))\n \t  abort ();\n+#endif\n       inmode = GET_MODE (in);\n     }\n \n@@ -699,10 +701,12 @@ push_reload (in, out, inloc, outloc, class,\n     {\n       out_subreg_loc = outloc;\n       outloc = &SUBREG_REG (out);\n-      out = *outloc;\n-      if (GET_CODE (out) == MEM\n+      out = *outloc; \n+#if ! defined(BYTE_LOADS_ZERO_EXTEND) && ! defined(BYTE_LOADS_SIGN_EXTEND)\n+     if (GET_CODE (out) == MEM\n \t  && GET_MODE_SIZE (GET_MODE (out)) > GET_MODE_SIZE (outmode))\n \tabort ();\n+#endif\n       outmode = GET_MODE (out);\n     }\n "}]}