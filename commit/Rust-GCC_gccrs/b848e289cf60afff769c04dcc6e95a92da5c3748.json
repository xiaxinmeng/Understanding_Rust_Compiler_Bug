{"sha": "b848e289cf60afff769c04dcc6e95a92da5c3748", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg0OGUyODljZjYwYWZmZjc2OWMwNGRjYzZlOTVhOTJkYTVjMzc0OA==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-12-17T12:24:05Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-12-17T12:24:05Z"}, "message": "[ARM 1/5 big.LITTLE] Add driver support for rewriting -mcpu names\n\ngcc/\n\t* common/config/arm/arm-common.c (arm_rewrite_selected_cpu): New.\n\t(arm_rewrite_mcpu): Likewise.\n\t* config/arm/arm-protos.h (arm_rewrite_selected_cpu): New.\n\t* config/arm/arm.h (BIG_LITTLE_SPEC): New.\n\t(BIG_LITTLE_SPEC_FUNCTIONS): Likewise.\n\t(EXTRA_SPEC_FUNCTIONS): Include BIG_LITTLE_SPEC_FUNCTIONS.\n\t(ASM_CPU_SPEC): Include BIG_LITTLE_SPEC.\n\t* config/arm/arm.c (arm_file_start): Rewrite arm_selecetd_cpu values.\n\nFrom-SVN: r206045", "tree": {"sha": "2e0eacf98d499c447aafacc0005c6874b39d91f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e0eacf98d499c447aafacc0005c6874b39d91f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b848e289cf60afff769c04dcc6e95a92da5c3748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b848e289cf60afff769c04dcc6e95a92da5c3748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b848e289cf60afff769c04dcc6e95a92da5c3748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b848e289cf60afff769c04dcc6e95a92da5c3748/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "548cfdc2cac1cf3844136a21a26379c737e0b086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/548cfdc2cac1cf3844136a21a26379c737e0b086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/548cfdc2cac1cf3844136a21a26379c737e0b086"}], "stats": {"total": 69, "additions": 66, "deletions": 3}, "files": [{"sha": "841cd85f90b981be77e775db3d03abfdc0a78136", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b848e289cf60afff769c04dcc6e95a92da5c3748", "patch": "@@ -1,3 +1,14 @@\n+2013-12-17  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* common/config/arm/arm-common.c (arm_rewrite_selected_cpu): New.\n+\t(arm_rewrite_mcpu): Likewise.\n+\t* config/arm/arm-protos.h (arm_rewrite_selected_cpu): New.\n+\t* config/arm/arm.h (BIG_LITTLE_SPEC): New.\n+\t(BIG_LITTLE_SPEC_FUNCTIONS): Likewise.\n+\t(EXTRA_SPEC_FUNCTIONS): Include BIG_LITTLE_SPEC_FUNCTIONS.\n+\t(ASM_CPU_SPEC): Include BIG_LITTLE_SPEC.\n+\t* config/arm/arm.c (arm_file_start): Rewrite arm_selecetd_cpu values.\n+\n 2013-12-17  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* expmed.c (lowpart_bit_field_p): Fix comment."}, {"sha": "87f18ecea77be042a84f676276ca6f5b8c10c01d", "filename": "gcc/common/config/arm/arm-common.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c?ref=b848e289cf60afff769c04dcc6e95a92da5c3748", "patch": "@@ -63,6 +63,41 @@ arm_except_unwind_info (struct gcc_options *opts)\n   return UI_SJLJ;\n }\n \n+#define ARM_CPU_NAME_LENGTH 20\n+\n+/* Truncate NAME at the first '.' character seen, or return\n+   NAME unmodified.  */\n+\n+const char *\n+arm_rewrite_selected_cpu (const char *name)\n+{\n+  static char output_buf[ARM_CPU_NAME_LENGTH + 1] = {0};\n+  char *arg_pos;\n+\n+  strncpy (output_buf, name, ARM_CPU_NAME_LENGTH);\n+  arg_pos = strchr (output_buf, '.');\n+\n+  /* If we found a '.' truncate the entry at that point.  */\n+  if (arg_pos)\n+    *arg_pos = '\\0';\n+\n+  return output_buf;\n+}\n+\n+/* Called by the driver to rewrite a name passed to the -mcpu\n+   argument in preparation to be passed to the assembler.  The\n+   name will be in ARGV[0], ARGC should always be 1.  */\n+\n+const char *\n+arm_rewrite_mcpu (int argc, const char **argv)\n+{\n+  gcc_assert (argc == 1);\n+  return arm_rewrite_selected_cpu (argv[0]);\n+}\n+\n+#undef ARM_CPU_NAME_LENGTH\n+\n+\n #undef  TARGET_DEFAULT_TARGET_FLAGS\n #define TARGET_DEFAULT_TARGET_FLAGS (TARGET_DEFAULT | MASK_SCHED_PROLOG)\n "}, {"sha": "558f13418e617921684a8705f4afdf5293818215", "filename": "gcc/config/arm/arm-protos.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2Fconfig%2Farm%2Farm-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2Fconfig%2Farm%2Farm-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-protos.h?ref=b848e289cf60afff769c04dcc6e95a92da5c3748", "patch": "@@ -289,4 +289,7 @@ extern bool arm_autoinc_modes_ok_p (enum machine_mode, enum arm_auto_incmodes);\n \n extern void arm_emit_eabi_attribute (const char *, int, int);\n \n+/* Defined in gcc/common/config/arm-common.c.  */\n+extern const char *arm_rewrite_selected_cpu (const char *name);\n+\n #endif /* ! GCC_ARM_PROTOS_H */"}, {"sha": "a4ab6be5e8b037861780d875a2922b01d1c0fb0a", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=b848e289cf60afff769c04dcc6e95a92da5c3748", "patch": "@@ -27527,7 +27527,11 @@ arm_file_start (void)\n       else if (strncmp (arm_selected_cpu->name, \"generic\", 7) == 0)\n \tasm_fprintf (asm_out_file, \"\\t.arch %s\\n\", arm_selected_cpu->name + 8);\n       else\n-\tasm_fprintf (asm_out_file, \"\\t.cpu %s\\n\", arm_selected_cpu->name);\n+\t{\n+\t  const char* truncated_name\n+\t    = arm_rewrite_selected_cpu (arm_selected_cpu->name);\n+\t  asm_fprintf (asm_out_file, \"\\t.cpu %s\\n\", truncated_name);\n+\t}\n \n       if (TARGET_SOFT_FLOAT)\n \t{"}, {"sha": "6539ec6ffc22148adade6754ffe2ee2feff443e2", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b848e289cf60afff769c04dcc6e95a92da5c3748/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=b848e289cf60afff769c04dcc6e95a92da5c3748", "patch": "@@ -2343,23 +2343,33 @@ extern int making_const_table;\n    instruction.  */\n #define MAX_LDM_STM_OPS 4\n \n+#define BIG_LITTLE_SPEC \\\n+   \" %{mcpu=*:%<mcpu=* -mcpu=%:rewrite_mcpu(%{mcpu=*:%*})}\" \\\n+\n+extern const char *arm_rewrite_mcpu (int argc, const char **argv);\n+#define BIG_LITTLE_CPU_SPEC_FUNCTIONS \\\n+  { \"rewrite_mcpu\", arm_rewrite_mcpu },\n+\n #define ASM_CPU_SPEC \\\n    \" %{mcpu=generic-*:-march=%*;\"\t\t\t\t\\\n-   \"   :%{mcpu=*:-mcpu=%*} %{march=*:-march=%*}}\"\n+   \"   :%{march=*:-march=%*}}\"\t\t\t\t\t\\\n+   BIG_LITTLE_SPEC\n \n /* -mcpu=native handling only makes sense with compiler running on\n    an ARM chip.  */\n #if defined(__arm__)\n extern const char *host_detect_local_cpu (int argc, const char **argv);\n # define EXTRA_SPEC_FUNCTIONS\t\t\t\t\t\t\\\n-  { \"local_cpu_detect\", host_detect_local_cpu },\n+  { \"local_cpu_detect\", host_detect_local_cpu },\t\t\t\\\n+  BIG_LITTLE_CPU_SPEC_FUNCTIONS\n \n # define MCPU_MTUNE_NATIVE_SPECS\t\t\t\t\t\\\n    \" %{march=native:%<march=native %:local_cpu_detect(arch)}\"\t\t\\\n    \" %{mcpu=native:%<mcpu=native %:local_cpu_detect(cpu)}\"\t\t\\\n    \" %{mtune=native:%<mtune=native %:local_cpu_detect(tune)}\"\n #else\n # define MCPU_MTUNE_NATIVE_SPECS \"\"\n+# define EXTRA_SPEC_FUNCTIONS BIG_LITTLE_CPU_SPEC_FUNCTIONS\n #endif\n \n #define DRIVER_SELF_SPECS MCPU_MTUNE_NATIVE_SPECS"}]}