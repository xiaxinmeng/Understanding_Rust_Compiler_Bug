{"sha": "0c940703f00ded736c42745ac542904e22db8d51", "node_id": "C_kwDOANBUbNoAKDBjOTQwNzAzZjAwZGVkNzM2YzQyNzQ1YWM1NDI5MDRlMjJkYjhkNTE", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-24T00:16:28Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-24T00:16:28Z"}, "message": "Daily bump.", "tree": {"sha": "21c4f123d97566f991d16a4a0b2e329afb88e78b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21c4f123d97566f991d16a4a0b2e329afb88e78b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0c940703f00ded736c42745ac542904e22db8d51", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c940703f00ded736c42745ac542904e22db8d51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c940703f00ded736c42745ac542904e22db8d51", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c940703f00ded736c42745ac542904e22db8d51/comments", "author": null, "committer": null, "parents": [{"sha": "51631875a2fa0af62ebda7484ac48368e1805dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51631875a2fa0af62ebda7484ac48368e1805dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51631875a2fa0af62ebda7484ac48368e1805dff"}], "stats": {"total": 96, "additions": 95, "deletions": 1}, "files": [{"sha": "ba192b64cab8a1027b32a72d1c1ed3bab09205d2", "filename": "contrib/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c940703f00ded736c42745ac542904e22db8d51/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c940703f00ded736c42745ac542904e22db8d51/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=0c940703f00ded736c42745ac542904e22db8d51", "patch": "@@ -1,3 +1,8 @@\n+2022-01-23  Martin Liska  <mliska@suse.cz>\n+\n+\t* filter-clang-warnings.py: Filter out one another warning\n+\tfor sse.md.\n+\n 2022-01-19  Martin Liska  <mliska@suse.cz>\n \n \t* check_GNU_style_lib.py: Skip Python files."}, {"sha": "3a7842c66352606d680019d01ec130157e51f22c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c940703f00ded736c42745ac542904e22db8d51/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c940703f00ded736c42745ac542904e22db8d51/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0c940703f00ded736c42745ac542904e22db8d51", "patch": "@@ -1,3 +1,11 @@\n+2022-01-23  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR target/64821\n+\t* config/aarch64/aarch64-builtins.cc\n+\t(aarch64_general_gimple_fold_builtin): Handle\n+\t__builtin_aarch64_sqrt* and simplify into SQRT internal\n+\tfunction.\n+\n 2022-01-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR other/104176"}, {"sha": "da164bfdd326729a89351ab0942ef7a41a95c7e4", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c940703f00ded736c42745ac542904e22db8d51/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c940703f00ded736c42745ac542904e22db8d51/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=0c940703f00ded736c42745ac542904e22db8d51", "patch": "@@ -1 +1 @@\n-20220123\n+20220124"}, {"sha": "1aadfa912ec2d4771ee47ba6c9338fbf16e523f1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c940703f00ded736c42745ac542904e22db8d51/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c940703f00ded736c42745ac542904e22db8d51/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0c940703f00ded736c42745ac542904e22db8d51", "patch": "@@ -1,3 +1,28 @@\n+2022-01-23  Will Wray  <wjwray@gmail.com>\n+\n+\tPR c++/55227\n+\t* decl.cc (reshape_init_r): Only call has_designator_check when\n+\tfirst_initializer_p or for the inner constructor element.\n+\t(cp_complete_array_type): Call reshape_init on braced-init-list.\n+\n+2022-01-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104182\n+\t* cp-gimplify.cc (cp_genericize_target_expr): Make sure nothing\n+\thas set DECL_INITIAL on a TARGET_EXPR slot.\n+\t* tree.cc (is_local_temp): Don't check DECL_CONTEXT.\n+\n+2022-01-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101072\n+\t* cp-tree.h (build_implicit_conv_flags): Declare.\n+\t* call.cc (build_implicit_conv_flags): Split out from...\n+\t(perform_implicit_conversion_flags): ...here.\n+\t* decl.cc (check_initializer): Use it.\n+\t* pt.cc (tsubst_copy_and_build): Remove TARGET_EXPR handling.\n+\t* semantics.cc (finish_compound_literal): Don't treat\n+\tscalar values like CONSTRUCTORs.\n+\n 2022-01-21  Jason Merrill  <jason@redhat.com>\n \n \t* semantics.cc (find_failing_clause): Return expr if not"}, {"sha": "6d2298460cd68ad4e5a794ce197b20ad15b9e859", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c940703f00ded736c42745ac542904e22db8d51/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c940703f00ded736c42745ac542904e22db8d51/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0c940703f00ded736c42745ac542904e22db8d51", "patch": "@@ -1,3 +1,24 @@\n+2022-01-23  Will Wray  <wjwray@gmail.com>\n+\n+\tPR c++/55227\n+\t* g++.dg/cpp2a/desig21.C: New test.\n+\n+2022-01-23  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR target/64821\n+\t* gcc.target/aarch64/vsqrt-1.c: New test.\n+\t* gcc.target/aarch64/vsqrt-2.c: New test.\n+\n+2022-01-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/104182\n+\t* g++.dg/cpp0x/initlist127.C: New test.\n+\n+2022-01-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/101072\n+\t* g++.dg/cpp0x/constexpr-empty14a.C: New test.\n+\n 2022-01-22  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/104150"}, {"sha": "a87a5c88c20517053141dfaf98b9c2bafe882074", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0c940703f00ded736c42745ac542904e22db8d51/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0c940703f00ded736c42745ac542904e22db8d51/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=0c940703f00ded736c42745ac542904e22db8d51", "patch": "@@ -1,3 +1,38 @@\n+2022-01-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104032\n+\t* include/std/spanstream (basic_spanbuf(basic_spanbuf&&)): Use\n+\tmem-initializer for _M_buf.\n+\t(basic_spanbuf::Operator=(basic_spanbuf&&)): Fix ill-formed\n+\tmember access.\n+\t* testsuite/27_io/spanstream/2.cc: New test.\n+\n+2022-01-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* src/c++17/floating_from_chars.cc (USE_STRTOD_FOR_FROM_CHARS):\n+\tDefine macro for case where std::from_chars is implemented in\n+\tterms of strtod, strtof or strtold.\n+\t(buffer_resource, valid_fmt, find_end_of_float, pattern)\n+\t(from_chars_impl, make_result, reserve_string): Do not define\n+\tunless USE_STRTOD_FOR_FROM_CHARS is defined.\n+\t(from_chars): Define when at least one of USE_LIB_FAST_FLOAT and\n+\tUSE_STRTOD_FOR_FROM_CHARS is defined, instead of\n+\t_GLIBCXX_HAVE_USELOCALE. Use fast_float for long double when it\n+\tis binary64.\n+\n+2022-01-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104174\n+\t* include/bits/hashtable_policy.h (_Map_base): Add partial\n+\tspecialization for maps with const key types.\n+\t* testsuite/23_containers/unordered_map/104174.cc: New test.\n+\n+2022-01-23  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/104019\n+\t* include/bits/shared_ptr_base.h (_Sp_counted_base<>::_M_release):\n+\tSet members to zero without type punning.\n+\n 2022-01-21  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/20_util/shared_ptr/cons/array.cc: Fix comment."}]}