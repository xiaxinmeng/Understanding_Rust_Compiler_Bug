{"sha": "6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmY1ZTliOGRmNmNkYjhkODkwNTgxNmE1M2IwOWZkNTdhM2E4Y2U0OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2010-06-08T17:50:54Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2010-06-08T17:50:54Z"}, "message": "type_traits (has_nothrow_assign): Rename to has_nothrow_copy_assign.\n\n2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/std/type_traits (has_nothrow_assign): Rename to\n\thas_nothrow_copy_assign.\n\t(has_trivial_assign): Rename to has_trivial_copy_assign.\n\t* testsuite/20_util/has_nothrow_copy_assign/value.cc: New.\n\t* testsuite/20_util/has_nothrow_copy_assign/requirements/\n\ttypedefs.cc: Likewise.\n\t* testsuite/20_util/has_nothrow_copy_assign/requirements/\n\texplicit_instantiation.cc: Likewise.\n\t* testsuite/20_util/has_trivial_copy_assign/value.cc: Likewise.\n\t* testsuite/20_util/has_trivial_copy_assign/requirements/\n\ttypedefs.cc: Likewise.\n\t* testsuite/20_util/has_trivial_copy_assign/requirements/\n\texplicit_instantiation.cc: Likewise.\n\nFrom-SVN: r160443", "tree": {"sha": "e0613012685e22081acfa0835464fb46fa491172", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0613012685e22081acfa0835464fb46fa491172"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/comments", "author": null, "committer": null, "parents": [{"sha": "22a2af9556ba56f66109830ee63b0ee7544ecc74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22a2af9556ba56f66109830ee63b0ee7544ecc74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22a2af9556ba56f66109830ee63b0ee7544ecc74"}], "stats": {"total": 270, "additions": 266, "deletions": 4}, "files": [{"sha": "db2c20646dd1dc8416bd4298eb7b46018f28b01c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "patch": "@@ -1,3 +1,19 @@\n+2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/std/type_traits (has_nothrow_assign): Rename to\n+\thas_nothrow_copy_assign.\n+\t(has_trivial_assign): Rename to has_trivial_copy_assign.\n+\t* testsuite/20_util/has_nothrow_copy_assign/value.cc: New.\n+\t* testsuite/20_util/has_nothrow_copy_assign/requirements/\n+\ttypedefs.cc: Likewise.\n+\t* testsuite/20_util/has_nothrow_copy_assign/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_copy_assign/value.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_copy_assign/requirements/\n+\ttypedefs.cc: Likewise.\n+\t* testsuite/20_util/has_trivial_copy_assign/requirements/\n+\texplicit_instantiation.cc: Likewise.\n+\n 2010-06-08  Johannes Singler  <singler@kit.edu>\n \n         * include/parallel/find.h"}, {"sha": "ba9d62c24cd0f7d3224364a111221db45a5fb1dd", "filename": "libstdc++-v3/include/std/type_traits", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ftype_traits?ref=6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "patch": "@@ -246,9 +246,9 @@ namespace std\n     : public integral_constant<bool, __has_trivial_copy(_Tp)>\n     { };\n \n-  /// has_trivial_assign\n+  /// has_trivial_copy_assign\n   template<typename _Tp>\n-    struct has_trivial_assign\n+    struct has_trivial_copy_assign\n     : public integral_constant<bool, __has_trivial_assign(_Tp)>\n     { };\n \n@@ -270,9 +270,9 @@ namespace std\n     : public integral_constant<bool, __has_nothrow_copy(_Tp)>\n     { };\n \n-  /// has_nothrow_assign\n+  /// has_nothrow_copy_assign\n   template<typename _Tp>\n-    struct has_nothrow_assign\n+    struct has_nothrow_copy_assign\n     : public integral_constant<bool, __has_nothrow_assign(_Tp)>\n     { };\n "}, {"sha": "0a4a6224b8a69daa220b406ca5695fbebb116294", "filename": "libstdc++-v3/testsuite/20_util/has_nothrow_copy_assign/requirements/explicit_instantiation.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Frequirements%2Fexplicit_instantiation.cc?ref=6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "patch": "@@ -0,0 +1,30 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct has_nothrow_copy_assign<test_type>;\n+}"}, {"sha": "3781d1f9bec3992d77734a11dd0ef936b3e51da0", "filename": "libstdc++-v3/testsuite/20_util/has_nothrow_copy_assign/requirements/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Frequirements%2Ftypedefs.cc?ref=6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::has_nothrow_copy_assign<int>   test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "0201c9cb91dccf29381405176f723b22db1bad43", "filename": "libstdc++-v3/testsuite/20_util/has_nothrow_copy_assign/value.cc", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_nothrow_copy_assign%2Fvalue.cc?ref=6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "patch": "@@ -0,0 +1,57 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::has_nothrow_copy_assign;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (test_property<has_nothrow_copy_assign, int>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, float>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, EnumType>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, int*>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, int(*)(int)>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, int (ClassType::*)>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign,\n+\t   int (ClassType::*) (int)>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, int[2]>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, float[][3]>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, EnumType[2][3][4]>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, int*[3]>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, int(*[][2])(int)>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign,\n+\t   int (ClassType::*[2][3])>(true)) );\n+  VERIFY( (test_property<has_nothrow_copy_assign, \n+\t   int (ClassType::*[][2][3]) (int)>(true)) );\n+\n+  // Negative tests.\n+  VERIFY( (test_property<has_nothrow_copy_assign, void>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "6ec5c5a427e65f98e075d63f521ae1d3a24f83b2", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_assign/requirements/explicit_instantiation.cc", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Fexplicit_instantiation.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Fexplicit_instantiation.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Fexplicit_instantiation.cc?ref=6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "patch": "@@ -0,0 +1,30 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// { dg-do compile }\n+// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+namespace std\n+{\n+  typedef short test_type;\n+  template struct has_trivial_copy_assign<test_type>;\n+}"}, {"sha": "1c5f0fe7ab098857821cd8045b90a6138439549d", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_assign/requirements/typedefs.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Frequirements%2Ftypedefs.cc?ref=6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// \n+// NB: This file is for testing type_traits with NO OTHER INCLUDES.\n+\n+#include <type_traits>\n+\n+// { dg-do compile }\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::has_trivial_copy_assign<int>   test_type;\n+  typedef test_type::value_type               value_type;\n+  typedef test_type::type                     type;\n+  typedef test_type::type::value_type         type_value_type;\n+  typedef test_type::type::type               type_type;\n+}"}, {"sha": "7663a688a68e531e0937073e817067c1a7336768", "filename": "libstdc++-v3/testsuite/20_util/has_trivial_copy_assign/value.cc", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Fvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Fvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhas_trivial_copy_assign%2Fvalue.cc?ref=6f5e9b8df6cdb8d8905816a53b09fd57a3a8ce49", "patch": "@@ -0,0 +1,57 @@\n+// { dg-options \"-std=gnu++0x\" }\n+// 2010-06-08  Paolo Carlini  <paolo.carlini@oracle.com>\n+//\n+// Copyright (C) 2010 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <type_traits>\n+#include <testsuite_hooks.h>\n+#include <testsuite_tr1.h>\n+\n+void test01()\n+{\n+  bool test __attribute__((unused)) = true;\n+  using std::has_trivial_copy_assign;\n+  using namespace __gnu_test;\n+\n+  VERIFY( (test_property<has_trivial_copy_assign, int>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, float>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, EnumType>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, int*>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, int(*)(int)>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, int (ClassType::*)>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign,\n+\t   int (ClassType::*) (int)>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, int[2]>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, float[][3]>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, EnumType[2][3][4]>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, int*[3]>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign, int(*[][2])(int)>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign,\n+\t   int (ClassType::*[2][3])>(true)) );\n+  VERIFY( (test_property<has_trivial_copy_assign,\n+\t   int (ClassType::*[][2][3]) (int)>(true)) );\n+\n+  // Negative tests.\n+  VERIFY( (test_property<has_trivial_copy_assign, void>(false)) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}]}