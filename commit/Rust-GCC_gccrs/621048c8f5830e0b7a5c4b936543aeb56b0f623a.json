{"sha": "621048c8f5830e0b7a5c4b936543aeb56b0f623a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjIxMDQ4YzhmNTgzMGUwYjdhNWM0YjkzNjU0M2FlYjU2YjBmNjIzYQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2006-10-14T11:15:45Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2006-10-14T11:15:45Z"}, "message": "index.html: Update.\n\n2006-10-14  Paolo Carlini  <pcarlini@suse.de>\n\n\t* docs/html/faq/index.html: Update.\n\t* docs/html/faq/index.txt: Regenerate.\n\nFrom-SVN: r117731", "tree": {"sha": "84d4777f24561ce41dcdf56052df08e976887318", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d4777f24561ce41dcdf56052df08e976887318"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/621048c8f5830e0b7a5c4b936543aeb56b0f623a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621048c8f5830e0b7a5c4b936543aeb56b0f623a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/621048c8f5830e0b7a5c4b936543aeb56b0f623a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/621048c8f5830e0b7a5c4b936543aeb56b0f623a/comments", "author": null, "committer": null, "parents": [{"sha": "4fb1953207c64de93583e332e0af475bfdb46b98", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4fb1953207c64de93583e332e0af475bfdb46b98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4fb1953207c64de93583e332e0af475bfdb46b98"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "896a7237b422947717801d4d4ce3a9ac85cad974", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621048c8f5830e0b7a5c4b936543aeb56b0f623a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621048c8f5830e0b7a5c4b936543aeb56b0f623a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=621048c8f5830e0b7a5c4b936543aeb56b0f623a", "patch": "@@ -1,3 +1,8 @@\n+2006-10-14  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* docs/html/faq/index.html: Update.\n+\t* docs/html/faq/index.txt: Regenerate.\n+\n 2006-10-14  Paolo Carlini  <pcarlini@suse.de>\n \n \t* include/bits/ostream.tcc (operator<<(basic_ostream<>&,"}, {"sha": "48f11c087edbaba7b4a3d6898960d3279950c06e", "filename": "libstdc++-v3/docs/html/faq/index.html", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621048c8f5830e0b7a5c4b936543aeb56b0f623a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621048c8f5830e0b7a5c4b936543aeb56b0f623a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.html?ref=621048c8f5830e0b7a5c4b936543aeb56b0f623a", "patch": "@@ -1018,6 +1018,17 @@ <h2><a name=\"5_5\">5.5 Does libstdc++ support TR1?</a></h2>\n \t to be performed without the need of template specializations.\n       </p>\n \n+      <p><strong>A random number engine - Complete -</strong>\n+         This library contains randow number generators with several different\n+\t choices of distribution.\n+      </p>\n+\n+      <p><strong>Tuples - Complete -</strong>\n+         The tuple class implements small heterogeneous arrays.  This is an\n+\t enhanced pair.  In fact, the standard pair is enhanced with a tuple\n+\t interface.\n+      </p>\n+\n       <p><strong>Fixed-size arrays - Complete -</strong>\n          The array class implements small fixed-sized arrays with container\n \t semantics.\n@@ -1031,12 +1042,6 @@ <h2><a name=\"5_5\">5.5 Does libstdc++ support TR1?</a></h2>\n \t extensions.\n       </p>\n \n-      <p><strong>Tuples - Complete -</strong>\n-         The tuple class implements small heterogeneous arrays.  This is an\n-\t enhanced pair.  In fact, the standard pair is enhanced with a tuple\n-\t interface.\n-      </p>\n-\n       <p><strong>C99 compatibility - Under construction - </strong>\n          There are many features designed to minimize the divergence of the C\n \t and the C++ languages.\n@@ -1055,11 +1060,6 @@ <h2><a name=\"5_5\">5.5 Does libstdc++ support TR1?</a></h2>\n \t of text with return of subexpressions.\n       </p>\n \n-      <p><strong>A random number engine</strong>\n-         This library contains randow number generators with several different\n-\t choices of distribution.\n-      </p>\n-\n <hr />\n    <h2><a name=\"5_6\">5.6 Is libstdc++-v3 thread-safe?</a></h2>\n       <p>libstdc++-v3 strives to be thread-safe when all of the following"}, {"sha": "907de9fd1d00e99efb0d6d4e57163e81bb069cc8", "filename": "libstdc++-v3/docs/html/faq/index.txt", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/621048c8f5830e0b7a5c4b936543aeb56b0f623a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/621048c8f5830e0b7a5c4b936543aeb56b0f623a/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Ffaq%2Findex.txt?ref=621048c8f5830e0b7a5c4b936543aeb56b0f623a", "patch": "@@ -837,6 +837,13 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    type-dependent logic to be performed without the need of template\n    specializations.\n \n+   A random number engine - Complete - This library contains randow\n+   number generators with several different choices of distribution.\n+\n+   Tuples - Complete - The tuple class implements small heterogeneous\n+   arrays. This is an enhanced pair. In fact, the standard pair is\n+   enhanced with a tuple interface.\n+\n    Fixed-size arrays - Complete - The array class implements small\n    fixed-sized arrays with container semantics.\n \n@@ -846,10 +853,6 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    respectively. These classes are suitable replacements for the SGI STL\n    hash_map and hash_set extensions.\n \n-   Tuples - Complete - The tuple class implements small heterogeneous\n-   arrays. This is an enhanced pair. In fact, the standard pair is\n-   enhanced with a tuple interface.\n-\n    C99 compatibility - Under construction - There are many features\n    designed to minimize the divergence of the C and the C++ languages.\n \n@@ -863,9 +866,6 @@ http://clisp.cons.org/~haible/gccinclude-glibc-2.2-compat.diff\n    A regular expression engine This library provides for regular\n    expression objects with traversal of text with return of\n    subexpressions.\n-\n-   A random number engine This library contains randow number generators\n-   with several different choices of distribution.\n      _________________________________________________________________\n \n 5.6 Is libstdc++-v3 thread-safe?"}]}