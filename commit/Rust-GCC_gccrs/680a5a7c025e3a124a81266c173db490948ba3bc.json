{"sha": "680a5a7c025e3a124a81266c173db490948ba3bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgwYTVhN2MwMjVlM2ExMjRhODEyNjZjMTczZGI0OTA5NDhiYTNiYw==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2014-06-26T14:54:59Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2014-06-26T14:54:59Z"}, "message": "2014-06-26  Martin Jambor  <mjambor@suse.cz>\n\n\t* params.def (PARAM_ALLOW_LOAD_DATA_RACES)\n\t(PARAM_ALLOW_PACKED_LOAD_DATA_RACES)\n\t(PARAM_ALLOW_PACKED_STORE_DATA_RACES): Removed.\n\t(PARAM_ALLOW_STORE_DATA_RACES): Set default to zero.\n\t* opts.c (default_options_optimization): Set\n\tPARAM_ALLOW_STORE_DATA_RACES to one at -Ofast.\n\t* doc/invoke.texi (allow-load-data-races)\n\t(allow-packed-load-data-races, allow-packed-store-data-races):\n\tRemoved.\n\t(allow-store-data-races): Document the new default.\n\ntestsuite/\n\t* g++.dg/simulate-thread/bitfields-2.C: Remove allow-load-data-races\n\tparameter.\n\t* g++.dg/simulate-thread/bitfields.C: Likewise.\n\t* gcc.dg/simulate-thread/strict-align-global.c: Remove\n\tallow-packed-store-data-races parameter.\n\t* gcc.dg/simulate-thread/subfields.c: Likewise.\n\t* gcc.dg/tree-ssa/20050314-1.c: Set parameter allow-store-data-races\n\tto one.\n\nFrom-SVN: r212034", "tree": {"sha": "004cb921ce0d40fd638fdd30852170ac3fba00d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/004cb921ce0d40fd638fdd30852170ac3fba00d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/680a5a7c025e3a124a81266c173db490948ba3bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/680a5a7c025e3a124a81266c173db490948ba3bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/680a5a7c025e3a124a81266c173db490948ba3bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/680a5a7c025e3a124a81266c173db490948ba3bc/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5ad7492f88de013afdf2183c96cf1225fb6021e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5ad7492f88de013afdf2183c96cf1225fb6021e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5ad7492f88de013afdf2183c96cf1225fb6021e"}], "stats": {"total": 73, "additions": 36, "deletions": 37}, "files": [{"sha": "48bebfefddad240d158cf5f1d0734096cdc92d7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -1,3 +1,16 @@\n+2014-06-26  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* params.def (PARAM_ALLOW_LOAD_DATA_RACES)\n+\t(PARAM_ALLOW_PACKED_LOAD_DATA_RACES)\n+\t(PARAM_ALLOW_PACKED_STORE_DATA_RACES): Removed.\n+\t(PARAM_ALLOW_STORE_DATA_RACES): Set default to zero.\n+\t* opts.c (default_options_optimization): Set\n+\tPARAM_ALLOW_STORE_DATA_RACES to one at -Ofast.\n+\t* doc/invoke.texi (allow-load-data-races)\n+\t(allow-packed-load-data-races, allow-packed-store-data-races):\n+\tRemoved.\n+\t(allow-store-data-races): Document the new default.\n+\n 2014-06-26  Martin Jambor  <mjambor@suse.cz>\n \n \t* ipa-prop.c (ipa_impossible_devirt_target): No longer static,"}, {"sha": "541fd6b545e38e18ceaccbd340299a3c87c95b1e", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -10176,25 +10176,10 @@ The maximum number of conditional stores paires that can be sunk.  Set to 0\n if either vectorization (@option{-ftree-vectorize}) or if-conversion\n (@option{-ftree-loop-if-convert}) is disabled.  The default is 2.\n \n-@item allow-load-data-races\n-Allow optimizers to introduce new data races on loads.\n-Set to 1 to allow, otherwise to 0.  This option is enabled by default\n-unless implicitly set by the @option{-fmemory-model=} option.\n-\n @item allow-store-data-races\n Allow optimizers to introduce new data races on stores.\n Set to 1 to allow, otherwise to 0.  This option is enabled by default\n-unless implicitly set by the @option{-fmemory-model=} option.\n-\n-@item allow-packed-load-data-races\n-Allow optimizers to introduce new data races on packed data loads.\n-Set to 1 to allow, otherwise to 0.  This option is enabled by default\n-unless implicitly set by the @option{-fmemory-model=} option.\n-\n-@item allow-packed-store-data-races\n-Allow optimizers to introduce new data races on packed data stores.\n-Set to 1 to allow, otherwise to 0.  This option is enabled by default\n-unless implicitly set by the @option{-fmemory-model=} option.\n+at optimization level @option{-Ofast}.\n \n @item case-values-threshold\n The smallest number of different values for which it is best to use a"}, {"sha": "19203dc8b5d013205225a437d10ef116b6238c09", "filename": "gcc/opts.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Fopts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Fopts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fopts.c?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -620,6 +620,13 @@ default_options_optimization (struct gcc_options *opts,\n      opt2 ? default_param_value (PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP) : 1000,\n      opts->x_param_values, opts_set->x_param_values);\n \n+  /* At -Ofast, allow store motion to introduce potential race conditions.  */\n+  maybe_set_param_value\n+    (PARAM_ALLOW_STORE_DATA_RACES,\n+     opts->x_optimize_fast ? 1\n+     : default_param_value (PARAM_ALLOW_STORE_DATA_RACES),\n+     opts->x_param_values, opts_set->x_param_values);\n+\n   if (opts->x_optimize_size)\n     /* We want to crossjump as much as possible.  */\n     maybe_set_param_value (PARAM_MIN_CROSSJUMP_INSNS, 1,"}, {"sha": "aa1e88dd8d1c6fabc393bdc9bb809508323bb0c3", "filename": "gcc/params.def", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Fparams.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Fparams.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fparams.def?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -1002,25 +1002,10 @@ DEFPARAM (PARAM_CASE_VALUES_THRESHOLD,\n           0, 0, 0)\n \n /* Data race flags for C++0x memory model compliance.  */\n-DEFPARAM (PARAM_ALLOW_LOAD_DATA_RACES,\n-\t  \"allow-load-data-races\",\n-\t  \"Allow new data races on loads to be introduced\",\n-\t  1, 0, 1)\n-\n DEFPARAM (PARAM_ALLOW_STORE_DATA_RACES,\n \t  \"allow-store-data-races\",\n \t  \"Allow new data races on stores to be introduced\",\n-\t  1, 0, 1)\n-\n-DEFPARAM (PARAM_ALLOW_PACKED_LOAD_DATA_RACES,\n-\t  \"allow-packed-load-data-races\",\n-\t  \"Allow new data races on packed data loads to be introduced\",\n-\t  1, 0, 1)\n-\n-DEFPARAM (PARAM_ALLOW_PACKED_STORE_DATA_RACES,\n-\t  \"allow-packed-store-data-races\",\n-\t  \"Allow new data races on packed data stores to be introduced\",\n-\t  1, 0, 1)\n+\t  0, 0, 1)\n \n /* Reassociation width to be used by tree reassoc optimization.  */\n DEFPARAM (PARAM_TREE_REASSOC_WIDTH,"}, {"sha": "bb05f7fa8d61d90f425dc1c2af6c6c77c18a5d8a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -1,3 +1,14 @@\n+2014-06-26  Martin Jambor  <mjambor@suse.cz>\n+\n+\t* g++.dg/simulate-thread/bitfields-2.C: Remove allow-load-data-races\n+\tparameter.\n+\t* g++.dg/simulate-thread/bitfields.C: Likewise.\n+\t* gcc.dg/simulate-thread/strict-align-global.c: Remove\n+\tallow-packed-store-data-races parameter.\n+\t* gcc.dg/simulate-thread/subfields.c: Likewise.\n+\t* gcc.dg/tree-ssa/20050314-1.c: Set parameter allow-store-data-races\n+\tto one.\n+\n 2014-06-26  Martin Jambor  <mjambor@suse.cz>\n \n \t* g++.dg/ipa/pr60600.C: Fix typo."}, {"sha": "be5d1eae5c421447e3e56a772987c0b4ddd33791", "filename": "gcc/testsuite/g++.dg/simulate-thread/bitfields-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fbitfields-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fbitfields-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fbitfields-2.C?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-options \"--param allow-load-data-races=0 --param allow-store-data-races=0\" } */\n+/* { dg-options \"--param allow-store-data-races=0\" } */\n /* { dg-final { simulate-thread } } */\n \n /* Test that setting <var.a> does not touch either <var.b> or <var.c>."}, {"sha": "b829587276b2f764dfaec927b264777c1e9af4c4", "filename": "gcc/testsuite/g++.dg/simulate-thread/bitfields.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fbitfields.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fbitfields.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fsimulate-thread%2Fbitfields.C?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do link } */\n-/* { dg-options \"--param allow-load-data-races=0 --param allow-store-data-races=0\" } */\n+/* { dg-options \"--param allow-store-data-races=0\" } */\n /* { dg-final { simulate-thread } } */\n \n /* Test that setting <var.a> does not touch either <var.b> or <var.c>."}, {"sha": "f8b88ada03d539275084d0a95b89e563fd9847c2", "filename": "gcc/testsuite/gcc.dg/simulate-thread/strict-align-global.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fstrict-align-global.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fstrict-align-global.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fstrict-align-global.c?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -1,5 +1,4 @@\n /* { dg-do link } */\n-/* { dg-options \"--param allow-packed-store-data-races=0\" } */\n /* { dg-final { simulate-thread } } */\n \n #include <stdio.h>"}, {"sha": "70e38a1aa304df72f2b4fe7eaa46cdfd8fa618f0", "filename": "gcc/testsuite/gcc.dg/simulate-thread/subfields.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fsubfields.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fsubfields.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsimulate-thread%2Fsubfields.c?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -1,5 +1,4 @@\n /* { dg-do link } */\n-/* { dg-options \"--param allow-packed-store-data-races=0\" } */\n /* { dg-final { simulate-thread } } */\n \n #include <stdio.h>"}, {"sha": "8f0778132c85da884103a01c3dd5994ea806f801", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20050314-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680a5a7c025e3a124a81266c173db490948ba3bc/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20050314-1.c?ref=680a5a7c025e3a124a81266c173db490948ba3bc", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O1 -fdump-tree-lim1-details\" } */\n+/* { dg-options \"-O1 -fdump-tree-lim1-details --param allow-store-data-races=1\" } */\n \n float a[100];\n "}]}