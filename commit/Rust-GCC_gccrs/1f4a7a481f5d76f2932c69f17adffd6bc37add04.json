{"sha": "1f4a7a481f5d76f2932c69f17adffd6bc37add04", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY0YTdhNDgxZjVkNzZmMjkzMmM2OWYxN2FkZmZkNmJjMzdhZGQwNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-01-20T21:30:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-01-20T21:30:28Z"}, "message": "re PR c++/41920 ([C++0x] Invalid 'unused parameter' warning for parameters used in lambdas)\n\n\tPR c++/41920\n\t* semantics.c (build_lambda_object): Call mark_used on captured\n\tvariables.\n\nFrom-SVN: r156085", "tree": {"sha": "a4b4963f20e444996f74308e7fec8b1636796268", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4b4963f20e444996f74308e7fec8b1636796268"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f4a7a481f5d76f2932c69f17adffd6bc37add04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f4a7a481f5d76f2932c69f17adffd6bc37add04", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f4a7a481f5d76f2932c69f17adffd6bc37add04", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f4a7a481f5d76f2932c69f17adffd6bc37add04/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e4672ccdb366be7135f3e931c710df0ffbc46d1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4672ccdb366be7135f3e931c710df0ffbc46d1d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4672ccdb366be7135f3e931c710df0ffbc46d1d"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "828f4b089a4bcbd92dfc416e8b5d99db6426c990", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4a7a481f5d76f2932c69f17adffd6bc37add04/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4a7a481f5d76f2932c69f17adffd6bc37add04/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f4a7a481f5d76f2932c69f17adffd6bc37add04", "patch": "@@ -1,5 +1,9 @@\n 2010-01-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/41920\n+\t* semantics.c (build_lambda_object): Call mark_used on captured\n+\tvariables.\n+\n \tPR c++/40750\n \t* decl.c (grokdeclarator): Clear type_quals for a member function\n \tdeclared using a typedef.  Don't complain about adding cv-quals"}, {"sha": "1545443c8cf439bda4dc1999797fe4c438c60297", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4a7a481f5d76f2932c69f17adffd6bc37add04/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4a7a481f5d76f2932c69f17adffd6bc37add04/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=1f4a7a481f5d76f2932c69f17adffd6bc37add04", "patch": "@@ -5408,6 +5408,9 @@ build_lambda_object (tree lambda_expr)\n       tree field = TREE_PURPOSE (node);\n       tree val = TREE_VALUE (node);\n \n+      if (DECL_P (val))\n+\tmark_used (val);\n+\n       /* Mere mortals can't copy arrays with aggregate initialization, so\n \t do some magic to make it work here.  */\n       if (TREE_CODE (TREE_TYPE (field)) == ARRAY_TYPE)"}, {"sha": "99c56149a4e89cb07b7a5c2496b1a4d25561eea9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4a7a481f5d76f2932c69f17adffd6bc37add04/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4a7a481f5d76f2932c69f17adffd6bc37add04/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f4a7a481f5d76f2932c69f17adffd6bc37add04", "patch": "@@ -1,5 +1,8 @@\n 2010-01-20  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/41920\n+\t* g++.dg/cpp0x/lambda/lambda-warn1.C: New.\n+\n \tPR c++/40750\n \t* g++.dg/parse/fn-typedef1.C: New.\n \t* g++.dg/other/cv_quals.C: Adjust."}, {"sha": "b384d5cff6d79bc239aa1304536e6d6733aafe62", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-warn1.C", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f4a7a481f5d76f2932c69f17adffd6bc37add04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-warn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f4a7a481f5d76f2932c69f17adffd6bc37add04/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-warn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-warn1.C?ref=1f4a7a481f5d76f2932c69f17adffd6bc37add04", "patch": "@@ -0,0 +1,8 @@\n+// PR c++/41920\n+// { dg-options \"-std=c++0x -Wall -Wextra\" }\n+\n+int foo(int i)\n+{\n+    auto bar = [=](){ return i; };\n+    return bar();\n+}"}]}